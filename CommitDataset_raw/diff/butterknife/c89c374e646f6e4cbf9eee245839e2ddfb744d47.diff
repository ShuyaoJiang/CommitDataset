[+++ b/build.gradle, +    supportTestRunner: 'com.android.support.test:runner:0.5',, +    autocommon: 'com.google.auto:auto-common:0.6',, +, +, +    butterknife: "com.jakewharton:butterknife:$butterknifeLatestReleaseVersion",, +    butterknifeCompiler: "com.jakewharton:butterknife-compiler:$butterknifeLatestReleaseVersion", +++ b/build.gradle, +    supportTestRunner: 'com.android.support.test:runner:0.5',, +    autocommon: 'com.google.auto:auto-common:0.6',, +, +, +    butterknife: "com.jakewharton:butterknife:$butterknifeLatestReleaseVersion",, +    butterknifeCompiler: "com.jakewharton:butterknife-compiler:$butterknifeLatestReleaseVersion", +++ b/butterknife-compiler/build.gradle, +++ b/build.gradle, +    supportTestRunner: 'com.android.support.test:runner:0.5',, +    autocommon: 'com.google.auto:auto-common:0.6',, +, +, +    butterknife: "com.jakewharton:butterknife:$butterknifeLatestReleaseVersion",, +    butterknifeCompiler: "com.jakewharton:butterknife-compiler:$butterknifeLatestReleaseVersion", +++ b/butterknife-compiler/build.gradle, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java, +  JavaFile brewJava(int sdk) {, +    return JavaFile.builder(bindingClassName.packageName(), createType(sdk)), +  private TypeSpec createType(int sdk) {, +    result.addMethod(createBindingConstructor(targetTypeName, sdk));, +  private MethodSpec createBindingConstructor(TypeName targetType, int sdk) {, +      if (hasResourceBindingsNeedingResource(sdk)) {, +        constructor.addStatement("$L", binding.render(sdk));, +  private boolean hasResourceBindingsNeedingResource(int sdk) {, +      if (binding.requiresResources(sdk)) {, +++ b/build.gradle, +    supportTestRunner: 'com.android.support.test:runner:0.5',, +    autocommon: 'com.google.auto:auto-common:0.6',, +, +, +    butterknife: "com.jakewharton:butterknife:$butterknifeLatestReleaseVersion",, +    butterknifeCompiler: "com.jakewharton:butterknife-compiler:$butterknifeLatestReleaseVersion", +++ b/butterknife-compiler/build.gradle, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java, +  JavaFile brewJava(int sdk) {, +    return JavaFile.builder(bindingClassName.packageName(), createType(sdk)), +  private TypeSpec createType(int sdk) {, +    result.addMethod(createBindingConstructor(targetTypeName, sdk));, +  private MethodSpec createBindingConstructor(TypeName targetType, int sdk) {, +      if (hasResourceBindingsNeedingResource(sdk)) {, +        constructor.addStatement("$L", binding.render(sdk));, +  private boolean hasResourceBindingsNeedingResource(int sdk) {, +      if (binding.requiresResources(sdk)) {, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java, +import java.util.Collections;, +  // TODO remove when http://b.android.com/187527 is released., +  private static final String OPTION_SDK_INT = "butterknife.minSdk";, +  private int sdk = 1;, +    String sdk = env.getOptions().get(OPTION_SDK_INT);, +    if (sdk != null) {, +      try {, +        this.sdk = Integer.parseInt(sdk);, +      } catch (NumberFormatException e) {, +        env.getMessager(), +            .printMessage(Kind.WARNING, "Unable to parse supplied minSdk option '", +                + sdk, +                + "'. Falling back to API 1 support.");, +      }, +    }, +, +  @Override public Set<String> getSupportedOptions() {, +    return Collections.singleton(OPTION_SDK_INT);, +  }, +, +      JavaFile javaFile = binding.brewJava(sdk);, +++ b/build.gradle, +    supportTestRunner: 'com.android.support.test:runner:0.5',, +    autocommon: 'com.google.auto:auto-common:0.6',, +, +, +    butterknife: "com.jakewharton:butterknife:$butterknifeLatestReleaseVersion",, +    butterknifeCompiler: "com.jakewharton:butterknife-compiler:$butterknifeLatestReleaseVersion", +++ b/butterknife-compiler/build.gradle, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java, +  JavaFile brewJava(int sdk) {, +    return JavaFile.builder(bindingClassName.packageName(), createType(sdk)), +  private TypeSpec createType(int sdk) {, +    result.addMethod(createBindingConstructor(targetTypeName, sdk));, +  private MethodSpec createBindingConstructor(TypeName targetType, int sdk) {, +      if (hasResourceBindingsNeedingResource(sdk)) {, +        constructor.addStatement("$L", binding.render(sdk));, +  private boolean hasResourceBindingsNeedingResource(int sdk) {, +      if (binding.requiresResources(sdk)) {, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java, +import java.util.Collections;, +  // TODO remove when http://b.android.com/187527 is released., +  private static final String OPTION_SDK_INT = "butterknife.minSdk";, +  private int sdk = 1;, +    String sdk = env.getOptions().get(OPTION_SDK_INT);, +    if (sdk != null) {, +      try {, +        this.sdk = Integer.parseInt(sdk);]