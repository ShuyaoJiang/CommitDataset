[+++ b/build.gradle, +      'androidPlugin': '2.3.3',, +      javapoet: 'com.squareup:javapoet:1.9.0',, +      javaparser: 'com.github.javaparser:javaparser-core:3.2.8',, +      truth: 'com.google.truth:truth:0.34',, +      robolectric: 'org.robolectric:robolectric:3.4-rc2',, +          'common': 'com.google.auto:auto-common:0.8',, +++ b/build.gradle, +      'androidPlugin': '2.3.3',, +      javapoet: 'com.squareup:javapoet:1.9.0',, +      javaparser: 'com.github.javaparser:javaparser-core:3.2.8',, +      truth: 'com.google.truth:truth:0.34',, +      robolectric: 'org.robolectric:robolectric:3.4-rc2',, +          'common': 'com.google.auto:auto-common:0.8',, +++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java, +import com.github.javaparser.ast.NodeList;, +import com.github.javaparser.ast.body.ClassOrInterfaceDeclaration;, +import com.github.javaparser.ast.expr.Expression;, +import java.util.Optional;, +    for (Node node : resourceClass.getChildNodes()) {, +      if (node instanceof ClassOrInterfaceDeclaration) {, +        addResourceType(Arrays.asList(SUPPORTED_TYPES), result, (ClassOrInterfaceDeclaration) node);, +      ClassOrInterfaceDeclaration node) {, +    if (!supportedTypes.contains(node.getNameAsString())) {, +    String type = node.getNameAsString();, +    String fieldName = variable.getNameAsString();, +    String fieldValue = variable.getInitializer().map(Node::toString).orElse(null);, +++ b/build.gradle, +      'androidPlugin': '2.3.3',, +      javapoet: 'com.squareup:javapoet:1.9.0',, +      javaparser: 'com.github.javaparser:javaparser-core:3.2.8',, +      truth: 'com.google.truth:truth:0.34',, +      robolectric: 'org.robolectric:robolectric:3.4-rc2',, +          'common': 'com.google.auto:auto-common:0.8',, +++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java, +import com.github.javaparser.ast.NodeList;, +import com.github.javaparser.ast.body.ClassOrInterfaceDeclaration;, +import com.github.javaparser.ast.expr.Expression;, +import java.util.Optional;, +    for (Node node : resourceClass.getChildNodes()) {, +      if (node instanceof ClassOrInterfaceDeclaration) {, +        addResourceType(Arrays.asList(SUPPORTED_TYPES), result, (ClassOrInterfaceDeclaration) node);, +      ClassOrInterfaceDeclaration node) {, +    if (!supportedTypes.contains(node.getNameAsString())) {, +    String type = node.getNameAsString();, +    String fieldName = variable.getNameAsString();, +    String fieldValue = variable.getInitializer().map(Node::toString).orElse(null);, +++ b/butterknife-integration-test/build.gradle, +++ b/build.gradle, +      'androidPlugin': '2.3.3',, +      javapoet: 'com.squareup:javapoet:1.9.0',, +      javaparser: 'com.github.javaparser:javaparser-core:3.2.8',, +      truth: 'com.google.truth:truth:0.34',, +      robolectric: 'org.robolectric:robolectric:3.4-rc2',, +          'common': 'com.google.auto:auto-common:0.8',, +++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java, +import com.github.javaparser.ast.NodeList;, +import com.github.javaparser.ast.body.ClassOrInterfaceDeclaration;, +import com.github.javaparser.ast.expr.Expression;, +import java.util.Optional;, +    for (Node node : resourceClass.getChildNodes()) {, +      if (node instanceof ClassOrInterfaceDeclaration) {, +        addResourceType(Arrays.asList(SUPPORTED_TYPES), result, (ClassOrInterfaceDeclaration) node);, +      ClassOrInterfaceDeclaration node) {, +    if (!supportedTypes.contains(node.getNameAsString())) {, +    String type = node.getNameAsString();, +    String fieldName = variable.getNameAsString();, +    String fieldValue = variable.getInitializer().map(Node::toString).orElse(null);, +++ b/butterknife-integration-test/build.gradle, +++ b/gradle/wrapper/gradle-wrapper.jar, +++ b/build.gradle, +      'androidPlugin': '2.3.3',, +      javapoet: 'com.squareup:javapoet:1.9.0',, +      javaparser: 'com.github.javaparser:javaparser-core:3.2.8',, +      truth: 'com.google.truth:truth:0.34',, +      robolectric: 'org.robolectric:robolectric:3.4-rc2',, +          'common': 'com.google.auto:auto-common:0.8',, +++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java, +import com.github.javaparser.ast.NodeList;, +import com.github.javaparser.ast.body.ClassOrInterfaceDeclaration;, +import com.github.javaparser.ast.expr.Expression;, +import java.util.Optional;, +    for (Node node : resourceClass.getChildNodes()) {, +      if (node instanceof ClassOrInterfaceDeclaration) {, +        addResourceType(Arrays.asList(SUPPORTED_TYPES), result, (ClassOrInterfaceDeclaration) node);, +      ClassOrInterfaceDeclaration node) {, +    if (!supportedTypes.contains(node.getNameAsString())) {, +    String type = node.getNameAsString();, +    String fieldName = variable.getNameAsString();, +    String fieldValue = variable.getInitializer().map(Node::toString).orElse(null);, +++ b/butterknife-integration-test/build.gradle, +++ b/gradle/wrapper/gradle-wrapper.jar, +++ b/gradle/wrapper/gradle-wrapper.properties, +#Fri Jun 23 16:29:33 PDT 2017, +distributionUrl=https\://services.gradle.org/distributions/gradle-4.0-all.zip, +++ b/build.gradle, +      'androidPlugin': '2.3.3',, +      javapoet: 'com.squareup:javapoet:1.9.0',, +      javaparser: 'com.github.javaparser:javaparser-core:3.2.8',, +      truth: 'com.google.truth:truth:0.34',]