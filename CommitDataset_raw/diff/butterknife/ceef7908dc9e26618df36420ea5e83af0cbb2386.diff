[+++ b/README.md, +View "injection" library for Android which uses annotation processing to generate boilerplate code, +for you., +, + * Eliminate `findViewById` calls by using `@InjectView` on fields., + * Group multiple views in a list using `@InjectViews`. Operate on all of them at once with actions,, +   setters, or properties., + * Eliminate anonymous inner-classes for listeners by annotating methods with `@OnClick` and others., +++ b/README.md, +View "injection" library for Android which uses annotation processing to generate boilerplate code, +for you., +, + * Eliminate `findViewById` calls by using `@InjectView` on fields., + * Group multiple views in a list using `@InjectViews`. Operate on all of them at once with actions,, +   setters, or properties., + * Eliminate anonymous inner-classes for listeners by annotating methods with `@OnClick` and others., +++ b/butterknife/pom.xml, +, +      <plugin>, +        <groupId>org.apache.maven.plugins</groupId>, +        <artifactId>maven-javadoc-plugin</artifactId>, +        <configuration>, +          <excludePackageNames>butterknife.internal:butterknife.internal.*</excludePackageNames>, +        </configuration>, +      </plugin>, +++ b/README.md, +View "injection" library for Android which uses annotation processing to generate boilerplate code, +for you., +, + * Eliminate `findViewById` calls by using `@InjectView` on fields., + * Group multiple views in a list using `@InjectViews`. Operate on all of them at once with actions,, +   setters, or properties., + * Eliminate anonymous inner-classes for listeners by annotating methods with `@OnClick` and others., +++ b/butterknife/pom.xml, +, +      <plugin>, +        <groupId>org.apache.maven.plugins</groupId>, +        <artifactId>maven-javadoc-plugin</artifactId>, +        <configuration>, +          <excludePackageNames>butterknife.internal:butterknife.internal.*</excludePackageNames>, +        </configuration>, +      </plugin>, +++ b/butterknife/src/main/java/butterknife/ButterKnife.java, + * View "injection" utilities. Use this class to simplify finding views and attaching listeners by, +  /** DO NOT USE: Exposed for generated code. */, +++ b/README.md, +View "injection" library for Android which uses annotation processing to generate boilerplate code, +for you., +, + * Eliminate `findViewById` calls by using `@InjectView` on fields., + * Group multiple views in a list using `@InjectViews`. Operate on all of them at once with actions,, +   setters, or properties., + * Eliminate anonymous inner-classes for listeners by annotating methods with `@OnClick` and others., +++ b/butterknife/pom.xml, +, +      <plugin>, +        <groupId>org.apache.maven.plugins</groupId>, +        <artifactId>maven-javadoc-plugin</artifactId>, +        <configuration>, +          <excludePackageNames>butterknife.internal:butterknife.internal.*</excludePackageNames>, +        </configuration>, +      </plugin>, +++ b/butterknife/src/main/java/butterknife/ButterKnife.java, + * View "injection" utilities. Use this class to simplify finding views and attaching listeners by, +  /** DO NOT USE: Exposed for generated code. */, +++ b/butterknife/src/main/java/butterknife/package-info.java, +/**, + * View "injection" library for Android which uses annotation processing to generate boilerplate, + * code for you., + * <p>, + * <ul>, + * <li>Eliminate {@link android.view.View#findViewById findViewById} calls by using, + * {@link butterknife.InjectView @InjectView} on fields.</li>, + * <li>Group multiple views in a {@linkplain java.util.List list} using, + * {@link butterknife.InjectViews @InjectViews}. Operate on all of them at once with, + * {@linkplain butterknife.ButterKnife#apply(java.util.List, butterknife.ButterKnife.Action) actions},, + * {@linkplain butterknife.ButterKnife#apply(java.util.List, butterknife.ButterKnife.Setter, Object) setters},, + * or {@linkplain butterknife.ButterKnife#apply(java.util.List, android.util.Property, Object) properties}.</li>, + * <li>Eliminate anonymous inner-classes for listeners by annotating methods with, + * {@link butterknife.OnClick @OnClick} and others.</li>, + * </ul>, + */, +package butterknife;, +++ b/README.md, +View "injection" library for Android which uses annotation processing to generate boilerplate code, +for you., +, + * Eliminate `findViewById` calls by using `@InjectView` on fields., + * Group multiple views in a list using `@InjectViews`. Operate on all of them at once with actions,, +   setters, or properties., + * Eliminate anonymous inner-classes for listeners by annotating methods with `@OnClick` and others., +++ b/butterknife/pom.xml, +, +      <plugin>, +        <groupId>org.apache.maven.plugins</groupId>, +        <artifactId>maven-javadoc-plugin</artifactId>, +        <configuration>, +          <excludePackageNames>butterknife.internal:butterknife.internal.*</excludePackageNames>, +        </configuration>, +      </plugin>]