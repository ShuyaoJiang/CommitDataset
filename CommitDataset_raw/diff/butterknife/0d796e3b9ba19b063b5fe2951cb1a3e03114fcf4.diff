[+++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +    result.addMethod(createNewBindMethod(targetType));, +      result.addMethod(createNewBindToTargetMethod());, +      if (methodBindingsNeedFinder()) {, +        constructor.addParameter(FINDER, "finder", FINAL);, +      } else {, +      }, +  private MethodSpec createNewBindMethod(TypeName targetType) {, +  private MethodSpec createNewBindToTargetMethod() {, +    if (bindNeedsFinder()) {, +      result.addParameter(FINDER, "finder"), +          .addParameter(Object.class, "source");, +    }, +    if (!viewIdMap.isEmpty() || !collectionBindings.isEmpty()) {, +      String findMethod = binding.isRequired() ? "findRequiredView" : "findOptionalView";, +      builder.add("\nfinder.<$T>$L(source, $L, $S)", binding.getType(), findMethod, ids[i],, +      result.addStatement("view = finder.findOptionalView(source, $L, null)", bindings.getId());, +      if (fieldBinding.requiresCast()) {, +  private boolean methodBindingsNeedFinder() {, +    for (ViewBindings viewBindings : viewIdMap.values()) {, +      for (Map.Entry<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> entry, +          : viewBindings.getMethodBindings().entrySet()) {, +        Map<ListenerMethod, Set<MethodViewBinding>> methodBindings = entry.getValue();, +        for (ListenerMethod method : getListenerMethods(entry.getKey())) {, +          if (methodBindings.containsKey(method)) {, +            String[] parameterTypes = method.parameters();, +            for (MethodViewBinding methodViewBinding : methodBindings.get(method)) {, +              for (Parameter parameter : methodViewBinding.getParameters()) {, +                if (parameter.requiresCast(parameterTypes[parameter.getListenerPosition()])) {, +                  return true;, +                }, +              }, +            }, +          }, +        }, +      }, +    }, +    return false;, +  }, +, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +    result.addMethod(createNewBindMethod(targetType));, +      result.addMethod(createNewBindToTargetMethod());, +      if (methodBindingsNeedFinder()) {, +        constructor.addParameter(FINDER, "finder", FINAL);, +      } else {, +      }, +  private MethodSpec createNewBindMethod(TypeName targetType) {, +  private MethodSpec createNewBindToTargetMethod() {, +    if (bindNeedsFinder()) {, +      result.addParameter(FINDER, "finder"), +          .addParameter(Object.class, "source");, +    }, +    if (!viewIdMap.isEmpty() || !collectionBindings.isEmpty()) {, +      String findMethod = binding.isRequired() ? "findRequiredView" : "findOptionalView";, +      builder.add("\nfinder.<$T>$L(source, $L, $S)", binding.getType(), findMethod, ids[i],, +      result.addStatement("view = finder.findOptionalView(source, $L, null)", bindings.getId());, +      if (fieldBinding.requiresCast()) {, +  private boolean methodBindingsNeedFinder() {, +    for (ViewBindings viewBindings : viewIdMap.values()) {, +      for (Map.Entry<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> entry, +          : viewBindings.getMethodBindings().entrySet()) {, +        Map<ListenerMethod, Set<MethodViewBinding>> methodBindings = entry.getValue();, +        for (ListenerMethod method : getListenerMethods(entry.getKey())) {, +          if (methodBindings.containsKey(method)) {, +            String[] parameterTypes = method.parameters();, +            for (MethodViewBinding methodViewBinding : methodBindings.get(method)) {, +              for (Parameter parameter : methodViewBinding.getParameters()) {, +                if (parameter.requiresCast(parameterTypes[parameter.getListenerPosition()])) {, +                  return true;, +                }, +              }, +            }, +          }, +        }, +      }, +    }, +    return false;, +  }, +, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java, +import static butterknife.compiler.ButterKnifeProcessor.VIEW_TYPE;, +, +, +  public boolean requiresCast() {, +    return !VIEW_TYPE.equals(type.toString());, +  }, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +    result.addMethod(createNewBindMethod(targetType));, +      result.addMethod(createNewBindToTargetMethod());, +      if (methodBindingsNeedFinder()) {, +        constructor.addParameter(FINDER, "finder", FINAL);, +      } else {, +      }, +  private MethodSpec createNewBindMethod(TypeName targetType) {, +  private MethodSpec createNewBindToTargetMethod() {, +    if (bindNeedsFinder()) {, +      result.addParameter(FINDER, "finder"), +          .addParameter(Object.class, "source");, +    }]