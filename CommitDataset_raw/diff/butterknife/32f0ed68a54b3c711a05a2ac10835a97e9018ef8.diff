[+++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +      fieldName = "view" + bindings.getId();, +        int tintAttributeId = binding.getTintAttributeId().value;, +              binding.getName(), UTILS, binding.getId().code, tintAttributeId);, +              UTILS, binding.getId().code);, +              UTILS, binding.getMethod(), binding.getId().code);, +              binding.getId().code);, +      fieldName = "view" + bindings.getId();, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +      fieldName = "view" + bindings.getId();, +        int tintAttributeId = binding.getTintAttributeId().value;, +              binding.getName(), UTILS, binding.getId().code, tintAttributeId);, +              UTILS, binding.getId().code);, +              UTILS, binding.getMethod(), binding.getId().code);, +              binding.getId().code);, +      fieldName = "view" + bindings.getId();, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java, +      if (id == NO_ID.value) {, +            ClassName rClassName = ClassName.get(packageName, "R", className);, +            VarScanner scanner = new VarScanner(ids, rClassName);, +    private final ClassName className;, +    private VarScanner(Map<Integer, Id> ids, ClassName className) {, +        String resourceName = jcVariableDecl.getName().toString();, +        ids.put(id, new Id(id, className, resourceName));, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +      fieldName = "view" + bindings.getId();, +        int tintAttributeId = binding.getTintAttributeId().value;, +              binding.getName(), UTILS, binding.getId().code, tintAttributeId);, +              UTILS, binding.getId().code);, +              UTILS, binding.getMethod(), binding.getId().code);, +              binding.getId().code);, +      fieldName = "view" + bindings.getId();, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java, +      if (id == NO_ID.value) {, +            ClassName rClassName = ClassName.get(packageName, "R", className);, +            VarScanner scanner = new VarScanner(ids, rClassName);, +    private final ClassName className;, +    private VarScanner(Map<Integer, Id> ids, ClassName className) {, +        String resourceName = jcVariableDecl.getName().toString();, +        ids.put(id, new Id(id, className, resourceName));, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/Id.java, +import com.squareup.javapoet.ClassName;, +import com.squareup.javapoet.CodeBlock;, +, +  final int value;, +  final CodeBlock code;, +  Id(int value) {, +    this.value = value;, +    this.code = CodeBlock.of("$L", value);, +  Id(int value, ClassName className, String resourceName) {, +    this.value = value;, +    this.code = CodeBlock.of("$T.$N", className, resourceName);, +    return o instanceof Id && value == ((Id) o).value;, +    return value;, +    return String.valueOf(value);, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +      fieldName = "view" + bindings.getId();, +        int tintAttributeId = binding.getTintAttributeId().value;, +              binding.getName(), UTILS, binding.getId().code, tintAttributeId);, +              UTILS, binding.getId().code);, +              UTILS, binding.getMethod(), binding.getId().code);, +              binding.getId().code);, +      fieldName = "view" + bindings.getId();, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java, +      if (id == NO_ID.value) {, +            ClassName rClassName = ClassName.get(packageName, "R", className);, +            VarScanner scanner = new VarScanner(ids, rClassName);, +    private final ClassName className;, +    private VarScanner(Map<Integer, Id> ids, ClassName className) {, +        String resourceName = jcVariableDecl.getName().toString();, +        ids.put(id, new Id(id, className, resourceName));, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/Id.java, +import com.squareup.javapoet.ClassName;, +import com.squareup.javapoet.CodeBlock;, +, +  final int value;, +  final CodeBlock code;, +  Id(int value) {, +    this.value = value;, +    this.code = CodeBlock.of("$L", value);, +  Id(int value, ClassName className, String resourceName) {, +    this.value = value;, +    this.code = CodeBlock.of("$T.$N", className, resourceName);, +    return o instanceof Id && value == ((Id) o).value;, +    return value;, +    return String.valueOf(value);, +++ b/butterknife-compiler/src/test/java/butterknife/RClassTest.java, +        + "    target.one = res.getInteger(R.integer.res);\n", +        + "    target.bool = res.getBoolean(R.bool.res);\n"]