[+++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +    result.addMethod(createBindMethod(targetType));, +      result.addMethod(createBindToTargetMethod());, +  private MethodSpec createBindMethod(TypeName targetType) {, +  private MethodSpec createBindToTargetMethod() {, +    if (hasViewBindings()) {, +      builder.add("\n");, +      if (requiresCast(binding.getType())) {, +        builder.add("($T) ", binding.getType());, +      }, +      if (binding.isRequired()) {, +        builder.add("finder.findRequiredView(source, $L, $S)", ids[i],, +      } else {, +        builder.add("finder.findOptionalView(source, $L)", ids[i]);, +      }, +      result.addStatement("view = finder.findOptionalView(source, $L)", bindings.getId());, +      if (requiresCast(fieldBinding.getType())) {, +  private static boolean requiresCast(TypeName type) {, +    return !VIEW_TYPE.equals(type.toString());, +  }, +, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +    result.addMethod(createBindMethod(targetType));, +      result.addMethod(createBindToTargetMethod());, +  private MethodSpec createBindMethod(TypeName targetType) {, +  private MethodSpec createBindToTargetMethod() {, +    if (hasViewBindings()) {, +      builder.add("\n");, +      if (requiresCast(binding.getType())) {, +        builder.add("($T) ", binding.getType());, +      }, +      if (binding.isRequired()) {, +        builder.add("finder.findRequiredView(source, $L, $S)", ids[i],, +      } else {, +        builder.add("finder.findOptionalView(source, $L)", ids[i]);, +      }, +      result.addStatement("view = finder.findOptionalView(source, $L)", bindings.getId());, +      if (requiresCast(fieldBinding.getType())) {, +  private static boolean requiresCast(TypeName type) {, +    return !VIEW_TYPE.equals(type.toString());, +  }, +, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +    result.addMethod(createBindMethod(targetType));, +      result.addMethod(createBindToTargetMethod());, +  private MethodSpec createBindMethod(TypeName targetType) {, +  private MethodSpec createBindToTargetMethod() {, +    if (hasViewBindings()) {, +      builder.add("\n");, +      if (requiresCast(binding.getType())) {, +        builder.add("($T) ", binding.getType());, +      }, +      if (binding.isRequired()) {, +        builder.add("finder.findRequiredView(source, $L, $S)", ids[i],, +      } else {, +        builder.add("finder.findOptionalView(source, $L)", ids[i]);, +      }, +      result.addStatement("view = finder.findOptionalView(source, $L)", bindings.getId());, +      if (requiresCast(fieldBinding.getType())) {, +  private static boolean requiresCast(TypeName type) {, +    return !VIEW_TYPE.equals(type.toString());, +  }, +, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java, +++ b/butterknife-compiler/src/test/java/butterknife/BindViewTest.java, +        + "      view = finder.findOptionalView(source, 1);\n", +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +    result.addMethod(createBindMethod(targetType));, +      result.addMethod(createBindToTargetMethod());, +  private MethodSpec createBindMethod(TypeName targetType) {, +  private MethodSpec createBindToTargetMethod() {, +    if (hasViewBindings()) {, +      builder.add("\n");, +      if (requiresCast(binding.getType())) {, +        builder.add("($T) ", binding.getType());, +      }, +      if (binding.isRequired()) {, +        builder.add("finder.findRequiredView(source, $L, $S)", ids[i],, +      } else {, +        builder.add("finder.findOptionalView(source, $L)", ids[i]);, +      }, +      result.addStatement("view = finder.findOptionalView(source, $L)", bindings.getId());, +      if (requiresCast(fieldBinding.getType())) {, +  private static boolean requiresCast(TypeName type) {, +    return !VIEW_TYPE.equals(type.toString());, +  }, +, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java, +++ b/butterknife-compiler/src/test/java/butterknife/BindViewTest.java, +        + "      view = finder.findOptionalView(source, 1);\n", +++ b/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java, +        + "          finder.findRequiredView(source, 1, \"field 'thing'\"), \n", +        + "          finder.findRequiredView(source, 2, \"field 'thing'\"), \n", +        + "          finder.findRequiredView(source, 3, \"field 'thing'\"));\n", +        + "          finder.findRequiredView(source, 1, \"field 'thing'\"), \n", +        + "          finder.findRequiredView(source, 2, \"field 'thing'\"), \n", +        + "          finder.findRequiredView(source, 3, \"field 'thing'\"));\n", +        + "          (TextView) finder.findRequiredView(source, 1, \"field 'thing'\"), \n", +        + "          (TextView) finder.findRequiredView(source, 2, \"field 'thing'\"), \n"]