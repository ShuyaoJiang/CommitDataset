[+++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +        .addParameter(FINDER, "finder");, +    if (isFinal && hasMethodBindings()) {, +      result.addParameter(targetType, "target", FINAL);, +    } else {, +      result.addParameter(targetType, "target");, +    }, +    result.addParameter(Object.class, "source");, +        .addModifiers(PROTECTED, STATIC);, +, +    if (hasMethodBindings()) {, +      result.addParameter(targetTypeName, "target", FINAL);, +    } else {, +      result.addParameter(targetTypeName, "target");, +    }, +    return hasUnbinder() && hasMethodBindings() //, +        || hasParentBinding() && parentBinding.bindNeedsUnbinder();, +  }, +, +  private boolean hasMethodBindings() {, +    return false;, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +        .addParameter(FINDER, "finder");, +    if (isFinal && hasMethodBindings()) {, +      result.addParameter(targetType, "target", FINAL);, +    } else {, +      result.addParameter(targetType, "target");, +    }, +    result.addParameter(Object.class, "source");, +        .addModifiers(PROTECTED, STATIC);, +, +    if (hasMethodBindings()) {, +      result.addParameter(targetTypeName, "target", FINAL);, +    } else {, +      result.addParameter(targetTypeName, "target");, +    }, +    return hasUnbinder() && hasMethodBindings() //, +        || hasParentBinding() && parentBinding.bindNeedsUnbinder();, +  }, +, +  private boolean hasMethodBindings() {, +    return false;, +++ b/butterknife-compiler/src/test/java/butterknife/BindArrayTest.java, +        + "  protected static void bindToTarget(Test target, Resources res) {\n", +        + "  protected static void bindToTarget(Test target, Resources res) {\n", +        + "  protected static void bindToTarget(Test target, Resources res) {\n", +        + "  protected static void bindToTarget(Test target, Resources res) {\n", +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +        .addParameter(FINDER, "finder");, +    if (isFinal && hasMethodBindings()) {, +      result.addParameter(targetType, "target", FINAL);, +    } else {, +      result.addParameter(targetType, "target");, +    }, +    result.addParameter(Object.class, "source");, +        .addModifiers(PROTECTED, STATIC);, +, +    if (hasMethodBindings()) {, +      result.addParameter(targetTypeName, "target", FINAL);, +    } else {, +      result.addParameter(targetTypeName, "target");, +    }, +    return hasUnbinder() && hasMethodBindings() //, +        || hasParentBinding() && parentBinding.bindNeedsUnbinder();, +  }, +, +  private boolean hasMethodBindings() {, +    return false;, +++ b/butterknife-compiler/src/test/java/butterknife/BindArrayTest.java, +        + "  protected static void bindToTarget(Test target, Resources res) {\n", +        + "  protected static void bindToTarget(Test target, Resources res) {\n", +        + "  protected static void bindToTarget(Test target, Resources res) {\n", +        + "  protected static void bindToTarget(Test target, Resources res) {\n", +++ b/butterknife-compiler/src/test/java/butterknife/BindBitmapTest.java, +        + "  protected static void bindToTarget(Test target, Resources res) {\n", +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +        .addParameter(FINDER, "finder");, +    if (isFinal && hasMethodBindings()) {, +      result.addParameter(targetType, "target", FINAL);, +    } else {, +      result.addParameter(targetType, "target");, +    }, +    result.addParameter(Object.class, "source");, +        .addModifiers(PROTECTED, STATIC);, +, +    if (hasMethodBindings()) {, +      result.addParameter(targetTypeName, "target", FINAL);, +    } else {, +      result.addParameter(targetTypeName, "target");, +    }, +    return hasUnbinder() && hasMethodBindings() //, +        || hasParentBinding() && parentBinding.bindNeedsUnbinder();, +  }, +, +  private boolean hasMethodBindings() {, +    return false;, +++ b/butterknife-compiler/src/test/java/butterknife/BindArrayTest.java, +        + "  protected static void bindToTarget(Test target, Resources res) {\n", +        + "  protected static void bindToTarget(Test target, Resources res) {\n", +        + "  protected static void bindToTarget(Test target, Resources res) {\n"]