[+++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +      if (methodBindingsNeedFinder()) {, +        constructor.addParameter(FINDER, "finder", FINAL);, +      } else {, +      }, +  private boolean methodBindingsNeedFinder() {, +    for (ViewBindings viewBindings : viewIdMap.values()) {, +      for (Map.Entry<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> entry, +          : viewBindings.getMethodBindings().entrySet()) {, +        Map<ListenerMethod, Set<MethodViewBinding>> methodBindings = entry.getValue();, +        for (ListenerMethod method : getListenerMethods(entry.getKey())) {, +          if (methodBindings.containsKey(method)) {, +            String[] parameterTypes = method.parameters();, +            for (MethodViewBinding methodViewBinding : methodBindings.get(method)) {, +              for (Parameter parameter : methodViewBinding.getParameters()) {, +                if (parameter.requiresCast(parameterTypes[parameter.getListenerPosition()])) {, +                  return true;, +                }, +              }, +            }, +          }, +        }, +      }, +    }, +    return false;, +  }, +, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +      if (methodBindingsNeedFinder()) {, +        constructor.addParameter(FINDER, "finder", FINAL);, +      } else {, +      }, +  private boolean methodBindingsNeedFinder() {, +    for (ViewBindings viewBindings : viewIdMap.values()) {, +      for (Map.Entry<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> entry, +          : viewBindings.getMethodBindings().entrySet()) {, +        Map<ListenerMethod, Set<MethodViewBinding>> methodBindings = entry.getValue();, +        for (ListenerMethod method : getListenerMethods(entry.getKey())) {, +          if (methodBindings.containsKey(method)) {, +            String[] parameterTypes = method.parameters();, +            for (MethodViewBinding methodViewBinding : methodBindings.get(method)) {, +              for (Parameter parameter : methodViewBinding.getParameters()) {, +                if (parameter.requiresCast(parameterTypes[parameter.getListenerPosition()])) {, +                  return true;, +                }, +              }, +            }, +          }, +        }, +      }, +    }, +    return false;, +  }, +, +++ b/butterknife-compiler/src/test/java/butterknife/OnClickTest.java, +        + "    protected InnerUnbinder(final T target, final Finder finder, Object source) {\n", +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +      if (methodBindingsNeedFinder()) {, +        constructor.addParameter(FINDER, "finder", FINAL);, +      } else {, +      }, +  private boolean methodBindingsNeedFinder() {, +    for (ViewBindings viewBindings : viewIdMap.values()) {, +      for (Map.Entry<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> entry, +          : viewBindings.getMethodBindings().entrySet()) {, +        Map<ListenerMethod, Set<MethodViewBinding>> methodBindings = entry.getValue();, +        for (ListenerMethod method : getListenerMethods(entry.getKey())) {, +          if (methodBindings.containsKey(method)) {, +            String[] parameterTypes = method.parameters();, +            for (MethodViewBinding methodViewBinding : methodBindings.get(method)) {, +              for (Parameter parameter : methodViewBinding.getParameters()) {, +                if (parameter.requiresCast(parameterTypes[parameter.getListenerPosition()])) {, +                  return true;, +                }, +              }, +            }, +          }, +        }, +      }, +    }, +    return false;, +  }, +, +++ b/butterknife-compiler/src/test/java/butterknife/OnClickTest.java, +        + "    protected InnerUnbinder(final T target, final Finder finder, Object source) {\n", +++ b/butterknife-compiler/src/test/java/butterknife/OnItemClickTest.java, +        + "    protected InnerUnbinder(final T target, final Finder finder, Object source) {\n", +        + "    protected InnerUnbinder(final T target, final Finder finder, Object source) {\n"]