[+++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java, +import com.github.javaparser.ast.type.PrimitiveType;, +import com.github.javaparser.ast.type.Type;, +      "anim", "array", "attr", "bool", "color", "dimen", "drawable", "id", "integer", "layout", "menu", "plurals",, +      "string", "style", "styleable", +        FieldDeclaration declaration = (FieldDeclaration) field;, +        // Check that the field is an Int because styleable also contains Int arrays which can't be, +        // used in annotations., +        if (isInt(declaration)) {, +          addResourceField(resourceType, declaration.getVariables().get(0),, +    }, +  private static boolean isInt(FieldDeclaration field) {, +    Type type = field.getType();, +    return type instanceof PrimitiveType, +        && ((PrimitiveType) type).getType() == PrimitiveType.Primitive.Int;, +  }, +, +++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java, +import com.github.javaparser.ast.type.PrimitiveType;, +import com.github.javaparser.ast.type.Type;, +      "anim", "array", "attr", "bool", "color", "dimen", "drawable", "id", "integer", "layout", "menu", "plurals",, +      "string", "style", "styleable", +        FieldDeclaration declaration = (FieldDeclaration) field;, +        // Check that the field is an Int because styleable also contains Int arrays which can't be, +        // used in annotations., +        if (isInt(declaration)) {, +          addResourceField(resourceType, declaration.getVariables().get(0),, +    }, +  private static boolean isInt(FieldDeclaration field) {, +    Type type = field.getType();, +    return type instanceof PrimitiveType, +        && ((PrimitiveType) type).getType() == PrimitiveType.Primitive.Int;, +  }, +, +++ b/butterknife-gradle-plugin/src/test/resources/fixtures/R.java, +  public static final class unsupported {, +  public static final class anim {, +  public static final class array {, +  public static final class attr {, +  public static final class bool {, +  public static final class color {, +  public static final class dimen {, +  public static final class drawable {, +  public static final class id {, +  public static final class integer {, +, +  public static final class layout {, +    public static int res = 0x7f040010;, +  }, +, +  public static final class menu {, +    public static int res = 0x7f040011;, +  }, +, +  public static final class plurals {, +    public static int res = 0x7f040012;, +  }, +, +  public static final class string {, +    public static int res = 0x7f040013;, +  }, +, +  public static final class style {, +    public static int res = 0x7f040014;, +  }, +, +  public static final class styleable {, +    public static int[] resArray = { 0x7f040003 };, +    public static int res = 0x7f040015;, +  }, +++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java, +import com.github.javaparser.ast.type.PrimitiveType;, +import com.github.javaparser.ast.type.Type;, +      "anim", "array", "attr", "bool", "color", "dimen", "drawable", "id", "integer", "layout", "menu", "plurals",, +      "string", "style", "styleable", +        FieldDeclaration declaration = (FieldDeclaration) field;, +        // Check that the field is an Int because styleable also contains Int arrays which can't be, +        // used in annotations., +        if (isInt(declaration)) {, +          addResourceField(resourceType, declaration.getVariables().get(0),, +    }, +  private static boolean isInt(FieldDeclaration field) {, +    Type type = field.getType();, +    return type instanceof PrimitiveType, +        && ((PrimitiveType) type).getType() == PrimitiveType.Primitive.Int;, +  }, +, +++ b/butterknife-gradle-plugin/src/test/resources/fixtures/R.java, +  public static final class unsupported {, +  public static final class anim {, +  public static final class array {, +  public static final class attr {, +  public static final class bool {, +  public static final class color {, +  public static final class dimen {, +  public static final class drawable {, +  public static final class id {, +  public static final class integer {, +, +  public static final class layout {]