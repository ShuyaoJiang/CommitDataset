[+++ b/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java, +    ARRAY("arrayFilteringNull"),, +    LIST("listFilteringNull");, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java, +    ARRAY("arrayFilteringNull"),, +    LIST("listFilteringNull");, +++ b/butterknife-runtime/src/androidTest/java/butterknife/internal/UtilsTest.java, +import static butterknife.internal.Utils.arrayFilteringNull;, +import static butterknife.internal.Utils.listFilteringNull;, +    assertThat(listFilteringNull(null, null, null)).isEmpty();, +    assertThat(listFilteringNull("One", null, null)).containsExactly("One");, +    assertThat(listFilteringNull(null, "One", null)).containsExactly("One");, +    assertThat(listFilteringNull(null, null, "One")).containsExactly("One");, +    assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");, +    assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");, +    assertThat(listFilteringNull(null, "One", "Two")).containsExactly("One", "Two");, +    assertThat(arrayFilteringNull(null, null, null)).isEmpty();, +    assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");, +    assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");, +    assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");, +    assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");, +    assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");, +    assertThat(arrayFilteringNull(null, "One", "Two")).asList().containsExactly("One", "Two");, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java, +    ARRAY("arrayFilteringNull"),, +    LIST("listFilteringNull");, +++ b/butterknife-runtime/src/androidTest/java/butterknife/internal/UtilsTest.java, +import static butterknife.internal.Utils.arrayFilteringNull;, +import static butterknife.internal.Utils.listFilteringNull;, +    assertThat(listFilteringNull(null, null, null)).isEmpty();, +    assertThat(listFilteringNull("One", null, null)).containsExactly("One");, +    assertThat(listFilteringNull(null, "One", null)).containsExactly("One");, +    assertThat(listFilteringNull(null, null, "One")).containsExactly("One");, +    assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");, +    assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");, +    assertThat(listFilteringNull(null, "One", "Two")).containsExactly("One", "Two");, +    assertThat(arrayFilteringNull(null, null, null)).isEmpty();, +    assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");, +    assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");, +    assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");, +    assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");, +    assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");, +    assertThat(arrayFilteringNull(null, "One", "Two")).asList().containsExactly("One", "Two");, +++ b/butterknife-runtime/src/main/java/butterknife/internal/Utils.java, +  public static <T> T[] arrayFilteringNull(T... views) {, +  @SafeVarargs, +  public static <T> List<T> listFilteringNull(T... views) {, +    return new ImmutableList<>(arrayFilteringNull(views));, +  }, +, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java, +    ARRAY("arrayFilteringNull"),, +    LIST("listFilteringNull");, +++ b/butterknife-runtime/src/androidTest/java/butterknife/internal/UtilsTest.java, +import static butterknife.internal.Utils.arrayFilteringNull;, +import static butterknife.internal.Utils.listFilteringNull;, +    assertThat(listFilteringNull(null, null, null)).isEmpty();, +    assertThat(listFilteringNull("One", null, null)).containsExactly("One");, +    assertThat(listFilteringNull(null, "One", null)).containsExactly("One");, +    assertThat(listFilteringNull(null, null, "One")).containsExactly("One");, +    assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");, +    assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");, +    assertThat(listFilteringNull(null, "One", "Two")).containsExactly("One", "Two");, +    assertThat(arrayFilteringNull(null, null, null)).isEmpty();, +    assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");, +    assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");, +    assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");, +    assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");, +    assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");, +    assertThat(arrayFilteringNull(null, "One", "Two")).asList().containsExactly("One", "Two");, +++ b/butterknife-runtime/src/main/java/butterknife/internal/Utils.java, +  public static <T> T[] arrayFilteringNull(T... views) {, +  @SafeVarargs, +  public static <T> List<T> listFilteringNull(T... views) {, +    return new ImmutableList<>(arrayFilteringNull(views));, +  }, +, +++ b/butterknife-runtime/src/test/java/butterknife/BindViewsTest.java, +        + "    target.thing = Utils.arrayFilteringNull(\n", +        + "    target.thing = Utils.arrayFilteringNull(\n", +        + "    target.thing = Utils.arrayFilteringNull(\n", +        + "    target.thing = Utils.arrayFilteringNull(\n", +        + "    target.thing = Utils.arrayFilteringNull(\n", +        + "    target.thing = Utils.listFilteringNull(\n", +        + "    target.thing = Utils.listFilteringNull(\n", +        + "    target.thing = Utils.listFilteringNull(\n", +        + "    target.thing = Utils.listFilteringNull(\n", +        + "    target.thing = Utils.arrayFilteringNull(\n", +        + "    target.thing = Utils.arrayFilteringNull(\n"]