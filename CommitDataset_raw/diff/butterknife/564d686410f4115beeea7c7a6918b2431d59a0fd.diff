[+++ b/build.gradle, +      'androidTools': '26.2.0-rc03',, +    classpath 'com.android.tools.build:gradle:3.2.0', +++ b/build.gradle, +      'androidTools': '26.2.0-rc03',, +    classpath 'com.android.tools.build:gradle:3.2.0', +++ b/butterknife-annotations/src/main/java/butterknife/OnPageChange.java, +    targetType = "android.support.v4.view.ViewPager",, +    targetTypeAndroidX = "androidx.viewpager.widget.ViewPager",, +    type = "android.support.v4.view.ViewPager.OnPageChangeListener",, +    typeAndroidX = "androidx.viewpager.widget.ViewPager.OnPageChangeListener",, +++ b/build.gradle, +      'androidTools': '26.2.0-rc03',, +    classpath 'com.android.tools.build:gradle:3.2.0', +++ b/butterknife-annotations/src/main/java/butterknife/OnPageChange.java, +    targetType = "android.support.v4.view.ViewPager",, +    targetTypeAndroidX = "androidx.viewpager.widget.ViewPager",, +    type = "android.support.v4.view.ViewPager.OnPageChangeListener",, +    typeAndroidX = "androidx.viewpager.widget.ViewPager.OnPageChangeListener",, +++ b/butterknife-annotations/src/main/java/butterknife/internal/ListenerClass.java, +  String targetTypeAndroidX() default "";, +  String typeAndroidX() default "";, +++ b/build.gradle, +      'androidTools': '26.2.0-rc03',, +    classpath 'com.android.tools.build:gradle:3.2.0', +++ b/butterknife-annotations/src/main/java/butterknife/OnPageChange.java, +    targetType = "android.support.v4.view.ViewPager",, +    targetTypeAndroidX = "androidx.viewpager.widget.ViewPager",, +    type = "android.support.v4.view.ViewPager.OnPageChangeListener",, +    typeAndroidX = "androidx.viewpager.widget.ViewPager.OnPageChangeListener",, +++ b/butterknife-annotations/src/main/java/butterknife/internal/ListenerClass.java, +  String targetTypeAndroidX() default "";, +  String typeAndroidX() default "";, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java, +      ClassName.get("android.support.annotation", "UiThread");, +  private static final ClassName UI_THREAD_ANDROIDX =, +      ClassName.get("android.support.annotation", "CallSuper");, +  private static final ClassName CALL_SUPER_ANDROIDX =, +      ClassName.get("android.support.v4.content", "ContextCompat");, +  static final ClassName CONTEXT_COMPAT_ANDROIDX =, +  JavaFile brewJava(int sdk, boolean debuggable, boolean useAndroidX) {, +    TypeSpec bindingConfiguration = createType(sdk, debuggable, useAndroidX);, +  private TypeSpec createType(int sdk, boolean debuggable, boolean useAndroidX) {, +      result.addMethod(createBindingConstructorForView(useAndroidX));, +      result.addMethod(createBindingConstructorForActivity(useAndroidX));, +      result.addMethod(createBindingConstructorForDialog(useAndroidX));, +      result.addMethod(createBindingViewDelegateConstructor(useAndroidX));, +    result.addMethod(createBindingConstructor(sdk, debuggable, useAndroidX));, +      result.addMethod(createBindingUnbindMethod(result, useAndroidX));, +  private MethodSpec createBindingViewDelegateConstructor(boolean useAndroidX) {, +        .addAnnotation(useAndroidX ? UI_THREAD_ANDROIDX : UI_THREAD), +  private MethodSpec createBindingConstructorForView(boolean useAndroidX) {, +        .addAnnotation(useAndroidX ? UI_THREAD_ANDROIDX : UI_THREAD), +  private MethodSpec createBindingConstructorForActivity(boolean useAndroidX) {, +        .addAnnotation(useAndroidX ? UI_THREAD_ANDROIDX : UI_THREAD), +  private MethodSpec createBindingConstructorForDialog(boolean useAndroidX) {, +        .addAnnotation(useAndroidX ? UI_THREAD_ANDROIDX : UI_THREAD), +  private MethodSpec createBindingConstructor(int sdk, boolean debuggable, boolean useAndroidX) {, +        .addAnnotation(useAndroidX ? UI_THREAD_ANDROIDX : UI_THREAD), +        addViewBinding(constructor, binding, debuggable, useAndroidX);, +  private MethodSpec createBindingUnbindMethod(TypeSpec.Builder bindingClass, boolean useAndroidX) {, +      result.addAnnotation(useAndroidX ? CALL_SUPER_ANDROIDX : CALL_SUPER);, +        addFieldAndUnbindStatement(bindingClass, result, binding, useAndroidX);, +      ViewBinding bindings, boolean useAndroidX) {, +        TypeName listenerClassName = bestGuess(getType(listenerClass, useAndroidX));, +      String targetType = getTargetType(listenerClass, useAndroidX);, +  private static String getType(ListenerClass listenerClass, boolean useAndroidX) {, +    String typeAndroidX = listenerClass.typeAndroidX();, +    if (useAndroidX && !typeAndroidX.isEmpty()) {, +      type = typeAndroidX;, +  private static String getTargetType(ListenerClass listenerClass, boolean useAndroidX) {, +    String targetTypeAndroidX = listenerClass.targetTypeAndroidX();, +    if (useAndroidX && !targetTypeAndroidX.isEmpty()) {, +      targetType = targetTypeAndroidX;, +      boolean useAndroidX) {, +    addMethodBindings(result, binding, debuggable, useAndroidX);, +      boolean useAndroidX) {, +          .superclass(ClassName.bestGuess(getType(listener, useAndroidX)));, +        TypeName listenerClassName = bestGuess(getType(listener, useAndroidX));, +      String targetType = getTargetType(listener, useAndroidX);, +++ b/build.gradle, +      'androidTools': '26.2.0-rc03',, +    classpath 'com.android.tools.build:gradle:3.2.0', +++ b/butterknife-annotations/src/main/java/butterknife/OnPageChange.java, +    targetType = "android.support.v4.view.ViewPager",, +    targetTypeAndroidX = "androidx.viewpager.widget.ViewPager",, +    type = "android.support.v4.view.ViewPager.OnPageChangeListener",, +    typeAndroidX = "androidx.viewpager.widget.ViewPager.OnPageChangeListener",, +++ b/butterknife-annotations/src/main/java/butterknife/internal/ListenerClass.java, +  String targetTypeAndroidX() default "";, +  String typeAndroidX() default "";, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java, +      ClassName.get("android.support.annotation", "UiThread");, +  private static final ClassName UI_THREAD_ANDROIDX =, +      ClassName.get("android.support.annotation", "CallSuper");, +  private static final ClassName CALL_SUPER_ANDROIDX =, +      ClassName.get("android.support.v4.content", "ContextCompat");, +  static final ClassName CONTEXT_COMPAT_ANDROIDX =, +  JavaFile brewJava(int sdk, boolean debuggable, boolean useAndroidX) {, +    TypeSpec bindingConfiguration = createType(sdk, debuggable, useAndroidX);]