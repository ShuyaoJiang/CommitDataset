[+++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +    } else {, +      constructor.addParameter(CONTEXT, "context");, +      if (parentBinding.bindNeedsView()) {, +        invoke.add(", source");, +      } else {, +        invoke.add(", context");, +      }, +      if (bindNeedsView()) {, +        invoke.add(", source");, +      } else {, +        invoke.add(", source.getContext()");, +      }, +        .addModifiers(PUBLIC, STATIC), +        .addParameter(targetTypeName, "target"), +        .addParameter(CONTEXT, "context");, +      if (parentBinding.bindNeedsView()) {, +        invoke.add(", source");, +      } else if (bindNeedsView()) {, +        invoke.add(", source.getContext()"); // We have a view but the parent only needs context., +      } else {, +        invoke.add(", context");, +      }, +      boolean hasView = bindNeedsView() || isFinal;, +      boolean needsSourceToContext = bindNeedsTheme() && hasView;, +      if (needsSourceToContext) {, +        result.addStatement("$T context = source.getContext()", CONTEXT);, +      }, +      result.addStatement("$T res = $N.getResources()", RESOURCES,, +          needsSourceToContext || !hasView ? "context" : "source");, +      if (bindNeedsTheme()) {, +        result.addStatement("$T theme = context.getTheme()", THEME);, +      }, +, +  /** True if this binding requires a view. Otherwise only a context is needed. */, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +    } else {, +      constructor.addParameter(CONTEXT, "context");, +      if (parentBinding.bindNeedsView()) {, +        invoke.add(", source");, +      } else {, +        invoke.add(", context");, +      }, +      if (bindNeedsView()) {, +        invoke.add(", source");, +      } else {, +        invoke.add(", source.getContext()");, +      }, +        .addModifiers(PUBLIC, STATIC), +        .addParameter(targetTypeName, "target"), +        .addParameter(CONTEXT, "context");, +      if (parentBinding.bindNeedsView()) {, +        invoke.add(", source");, +      } else if (bindNeedsView()) {, +        invoke.add(", source.getContext()"); // We have a view but the parent only needs context., +      } else {, +        invoke.add(", context");, +      }, +      boolean hasView = bindNeedsView() || isFinal;, +      boolean needsSourceToContext = bindNeedsTheme() && hasView;, +      if (needsSourceToContext) {, +        result.addStatement("$T context = source.getContext()", CONTEXT);, +      }, +      result.addStatement("$T res = $N.getResources()", RESOURCES,, +          needsSourceToContext || !hasView ? "context" : "source");, +      if (bindNeedsTheme()) {, +        result.addStatement("$T theme = context.getTheme()", THEME);, +      }, +, +  /** True if this binding requires a view. Otherwise only a context is needed. */, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java, +  /** When true, requires delegating the method to our {@code Utils} class. */, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +    } else {, +      constructor.addParameter(CONTEXT, "context");, +      if (parentBinding.bindNeedsView()) {, +        invoke.add(", source");, +      } else {, +        invoke.add(", context");, +      }, +      if (bindNeedsView()) {, +        invoke.add(", source");, +      } else {, +        invoke.add(", source.getContext()");, +      }, +        .addModifiers(PUBLIC, STATIC), +        .addParameter(targetTypeName, "target"), +        .addParameter(CONTEXT, "context");, +      if (parentBinding.bindNeedsView()) {, +        invoke.add(", source");, +      } else if (bindNeedsView()) {, +        invoke.add(", source.getContext()"); // We have a view but the parent only needs context., +      } else {, +        invoke.add(", context");, +      }, +      boolean hasView = bindNeedsView() || isFinal;, +      boolean needsSourceToContext = bindNeedsTheme() && hasView;, +      if (needsSourceToContext) {, +        result.addStatement("$T context = source.getContext()", CONTEXT);, +      }]