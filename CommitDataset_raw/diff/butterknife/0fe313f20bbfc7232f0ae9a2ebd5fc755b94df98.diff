[+++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +import butterknife.internal.ListenerClass;, +import butterknife.internal.ListenerMethod;, +        .addModifiers(PUBLIC, FINAL), +        .addSuperinterface(ParameterizedTypeName.get(VIEW_BINDER, targetTypeName));, +    result.addMethod(createBindMethod(targetTypeName));, +      files.add(JavaFile.builder(unbinderClassName.packageName(), createUnbinderClass()), +  private TypeSpec createUnbinderClass() {, +, +    TypeName targetType;, +      result.addModifiers(FINAL);, +      targetType = targetTypeName;, +      targetType = TypeVariableName.get("T");, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +import butterknife.internal.ListenerClass;, +import butterknife.internal.ListenerMethod;, +        .addModifiers(PUBLIC, FINAL), +        .addSuperinterface(ParameterizedTypeName.get(VIEW_BINDER, targetTypeName));, +    result.addMethod(createBindMethod(targetTypeName));, +      files.add(JavaFile.builder(unbinderClassName.packageName(), createUnbinderClass()), +  private TypeSpec createUnbinderClass() {, +, +    TypeName targetType;, +      result.addModifiers(FINAL);, +      targetType = targetTypeName;, +      targetType = TypeVariableName.get("T");, +++ b/butterknife-compiler/src/test/java/butterknife/BindArrayTest.java, +        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n", +        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n", +        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n", +        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n", +        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n", +        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n", +        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n", +        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n", +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +import butterknife.internal.ListenerClass;, +import butterknife.internal.ListenerMethod;, +        .addModifiers(PUBLIC, FINAL), +        .addSuperinterface(ParameterizedTypeName.get(VIEW_BINDER, targetTypeName));, +    result.addMethod(createBindMethod(targetTypeName));, +      files.add(JavaFile.builder(unbinderClassName.packageName(), createUnbinderClass()), +  private TypeSpec createUnbinderClass() {, +, +    TypeName targetType;, +      result.addModifiers(FINAL);, +      targetType = targetTypeName;, +      targetType = TypeVariableName.get("T");, +++ b/butterknife-compiler/src/test/java/butterknife/BindArrayTest.java, +        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n", +        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n", +        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n", +        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n", +        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n", +        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n", +        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n", +        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n", +++ b/butterknife-compiler/src/test/java/butterknife/BindBitmapTest.java, +        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n", +        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n", +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +import butterknife.internal.ListenerClass;, +import butterknife.internal.ListenerMethod;, +        .addModifiers(PUBLIC, FINAL), +        .addSuperinterface(ParameterizedTypeName.get(VIEW_BINDER, targetTypeName));, +    result.addMethod(createBindMethod(targetTypeName));, +      files.add(JavaFile.builder(unbinderClassName.packageName(), createUnbinderClass()), +  private TypeSpec createUnbinderClass() {, +, +    TypeName targetType;, +      result.addModifiers(FINAL);, +      targetType = targetTypeName;, +      targetType = TypeVariableName.get("T");, +++ b/butterknife-compiler/src/test/java/butterknife/BindArrayTest.java, +        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n", +        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n", +        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n", +        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n", +        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n", +        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n", +        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n", +        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n", +++ b/butterknife-compiler/src/test/java/butterknife/BindBitmapTest.java, +        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n", +        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n", +++ b/butterknife-compiler/src/test/java/butterknife/BindBoolTest.java, +        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n", +        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n", +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +import butterknife.internal.ListenerClass;, +import butterknife.internal.ListenerMethod;, +        .addModifiers(PUBLIC, FINAL), +        .addSuperinterface(ParameterizedTypeName.get(VIEW_BINDER, targetTypeName));, +    result.addMethod(createBindMethod(targetTypeName));, +      files.add(JavaFile.builder(unbinderClassName.packageName(), createUnbinderClass()), +  private TypeSpec createUnbinderClass() {, +, +    TypeName targetType;, +      result.addModifiers(FINAL);, +      targetType = targetTypeName;]