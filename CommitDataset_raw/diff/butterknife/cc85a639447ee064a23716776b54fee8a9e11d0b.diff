[+++ b/butterknife/src/main/java/butterknife/internal/InjectViewProcessor.java, +    // Process each @InjectView elements., +      try {, +        parseInjectView(element, targetClassMap, erasedTargetTypes);, +      } catch (Exception e) {, +        error(element, "Unable to parse @InjectView: %s", e.getMessage());, +      }, +    }, +, +    // Process each @OnClick elements., +    for (Element element : env.getElementsAnnotatedWith(OnClick.class)) {, +      try {, +        parseOnClick(element, targetClassMap, erasedTargetTypes);, +      } catch (Exception e) {, +        error(element, "Unable to parse @OnClick: %s", e.getMessage());, +      }, +    }, +, +    // Try to find a parent injector for each injector., +    for (Map.Entry<TypeElement, TargetClass> entry : targetClassMap.entrySet()) {, +      String parentClassFqcn = findParentFqcn(entry.getKey(), erasedTargetTypes);, +      if (parentClassFqcn != null) {, +        entry.getValue().setParentInjector(parentClassFqcn + SUFFIX);, +      }, +    }, +, +    return targetClassMap;, +  }, +, +  private void parseInjectView(Element element, Map<TypeElement, TargetClass> targetClassMap,, +      Set<TypeMirror> erasedTargetTypes) {, +      return;, +      return;, +      return;, +      return;, +  private void parseOnClick(Element element, Map<TypeElement, TargetClass> targetClassMap,, +      Set<TypeMirror> erasedTargetTypes) {, +      return;, +      return;, +      return;, +      return;, +      return;, +        return;, +        return;, +        return;, +        return;]