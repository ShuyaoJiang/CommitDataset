[+++ b/butterknife/src/main/java/butterknife/BindBitmap.java, +package butterknife;, +, +import android.graphics.Bitmap;, +import java.lang.annotation.Retention;, +import java.lang.annotation.Target;, +, +import static java.lang.annotation.ElementType.FIELD;, +import static java.lang.annotation.RetentionPolicy.CLASS;, +, +/**, + * Bind a field to a {@link Bitmap} from the specified drawable resource ID., + * <pre><code>, + * {@literal @}BindBitmap(R.drawable.logo) Bitmap logo;, + * </code></pre>, + */, +@Retention(CLASS) @Target(FIELD), +public @interface BindBitmap {, +  /** Drawable resource ID from which the {@link Bitmap} will be created. */, +  int value();, +}, +++ b/butterknife/src/main/java/butterknife/BindBitmap.java, +package butterknife;, +, +import android.graphics.Bitmap;, +import java.lang.annotation.Retention;, +import java.lang.annotation.Target;, +, +import static java.lang.annotation.ElementType.FIELD;, +import static java.lang.annotation.RetentionPolicy.CLASS;, +, +/**, + * Bind a field to a {@link Bitmap} from the specified drawable resource ID., + * <pre><code>, + * {@literal @}BindBitmap(R.drawable.logo) Bitmap logo;, + * </code></pre>, + */, +@Retention(CLASS) @Target(FIELD), +public @interface BindBitmap {, +  /** Drawable resource ID from which the {@link Bitmap} will be created. */, +  int value();, +}, +++ b/butterknife/src/main/java/butterknife/internal/BindingClass.java, +  private final List<FieldBitmapBinding> bitmapBindings = new ArrayList<FieldBitmapBinding>();, +  void addBitmap(FieldBitmapBinding binding) {, +    bitmapBindings.add(binding);, +  }, +, +    if (requiresResources()) {, +      if (!bitmapBindings.isEmpty()) {, +        builder.append("import android.graphics.BitmapFactory;\n");, +      }, +    if (requiresResources()) {, +      if (!bitmapBindings.isEmpty()) {, +        for (FieldBitmapBinding binding : bitmapBindings) {, +          builder.append("    target."), +              .append(binding.getName()), +              .append(" = BitmapFactory.decodeResource(res, "), +              .append(binding.getId()), +              .append(");\n");, +        }, +      }, +, +      if (!resourceBindings.isEmpty()) {, +    }, +, +  private boolean requiresResources() {, +    return !bitmapBindings.isEmpty() || !resourceBindings.isEmpty();, +  }, +++ b/butterknife/src/main/java/butterknife/BindBitmap.java, +package butterknife;, +, +import android.graphics.Bitmap;, +import java.lang.annotation.Retention;, +import java.lang.annotation.Target;, +, +import static java.lang.annotation.ElementType.FIELD;, +import static java.lang.annotation.RetentionPolicy.CLASS;, +, +/**, + * Bind a field to a {@link Bitmap} from the specified drawable resource ID., + * <pre><code>, + * {@literal @}BindBitmap(R.drawable.logo) Bitmap logo;, + * </code></pre>, + */, +@Retention(CLASS) @Target(FIELD), +public @interface BindBitmap {, +  /** Drawable resource ID from which the {@link Bitmap} will be created. */, +  int value();, +}, +++ b/butterknife/src/main/java/butterknife/internal/BindingClass.java, +  private final List<FieldBitmapBinding> bitmapBindings = new ArrayList<FieldBitmapBinding>();, +  void addBitmap(FieldBitmapBinding binding) {, +    bitmapBindings.add(binding);, +  }, +, +    if (requiresResources()) {, +      if (!bitmapBindings.isEmpty()) {, +        builder.append("import android.graphics.BitmapFactory;\n");, +      }]