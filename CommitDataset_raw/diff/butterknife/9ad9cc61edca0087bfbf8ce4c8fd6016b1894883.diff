[+++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +      if (isFinal) {, +      } else {, +        invoke.add("return new $T<>", unbinderClassName);, +      }, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +      if (isFinal) {, +      } else {, +        invoke.add("return new $T<>", unbinderClassName);, +      }, +++ b/butterknife-compiler/src/test/java/butterknife/BindViewTest.java, +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +      if (isFinal) {, +      } else {, +        invoke.add("return new $T<>", unbinderClassName);, +      }, +++ b/butterknife-compiler/src/test/java/butterknife/BindViewTest.java, +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +++ b/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java, +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +      if (isFinal) {, +      } else {, +        invoke.add("return new $T<>", unbinderClassName);, +      }, +++ b/butterknife-compiler/src/test/java/butterknife/BindViewTest.java, +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +++ b/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java, +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +++ b/butterknife-compiler/src/test/java/butterknife/OnCheckedChangedTest.java, +        + "    return new InnerUnbinder<>(target, finder, source);\n", +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +      if (isFinal) {, +      } else {, +        invoke.add("return new $T<>", unbinderClassName);, +      }, +++ b/butterknife-compiler/src/test/java/butterknife/BindViewTest.java, +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +++ b/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java, +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n", +        + "    return new InnerUnbinder<>(target, finder, source);\n"]