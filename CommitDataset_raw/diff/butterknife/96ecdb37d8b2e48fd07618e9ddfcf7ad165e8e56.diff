[+++ b/build.gradle, +++ b/build.gradle, +++ b/butterknife-gradle-plugin/build.gradle, +++ b/build.gradle, +++ b/butterknife-gradle-plugin/build.gradle, +++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/ButterKnifePlugin.kt, +import com.android.build.gradle.internal.res.GenerateLibraryRFileTask, +import com.android.build.gradle.internal.res.LinkApplicationAndroidResourcesTask, +          // TODO: switch to better API once exists in AGP (https://issuetracker.google.com/118668005), +          val rFile =, +              project.files(, +                  when (processResources) {, +                    is GenerateLibraryRFileTask -> processResources.textSymbolOutputFile, +                    is LinkApplicationAndroidResourcesTask -> processResources.textSymbolOutputFile, +                    else -> throw RuntimeException(, +                        "Minimum supported Android Gradle Plugin is 3.1.0"), +                  }), +                  .builtBy(processResources), +          project.tasks.create("generate${variant.name.capitalize()}R2", R2Generator::class.java) {, +            it.outputDir = outputDir, +            it.rFile = rFile, +            it.useAndroidX = useAndroidX, +            it.packageName = rPackage, +            it.className = "R2", +            variant.registerJavaGeneratingTask(it, outputDir), +++ b/build.gradle, +++ b/butterknife-gradle-plugin/build.gradle, +++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/ButterKnifePlugin.kt, +import com.android.build.gradle.internal.res.GenerateLibraryRFileTask, +import com.android.build.gradle.internal.res.LinkApplicationAndroidResourcesTask, +          // TODO: switch to better API once exists in AGP (https://issuetracker.google.com/118668005), +          val rFile =, +              project.files(, +                  when (processResources) {, +                    is GenerateLibraryRFileTask -> processResources.textSymbolOutputFile, +                    is LinkApplicationAndroidResourcesTask -> processResources.textSymbolOutputFile, +                    else -> throw RuntimeException(, +                        "Minimum supported Android Gradle Plugin is 3.1.0"), +                  }), +                  .builtBy(processResources), +          project.tasks.create("generate${variant.name.capitalize()}R2", R2Generator::class.java) {, +            it.outputDir = outputDir, +            it.rFile = rFile, +            it.useAndroidX = useAndroidX, +            it.packageName = rPackage, +            it.className = "R2", +            variant.registerJavaGeneratingTask(it, outputDir), +++ /dev/null, +++ b/build.gradle, +++ b/butterknife-gradle-plugin/build.gradle, +++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/ButterKnifePlugin.kt, +import com.android.build.gradle.internal.res.GenerateLibraryRFileTask, +import com.android.build.gradle.internal.res.LinkApplicationAndroidResourcesTask, +          // TODO: switch to better API once exists in AGP (https://issuetracker.google.com/118668005), +          val rFile =, +              project.files(, +                  when (processResources) {, +                    is GenerateLibraryRFileTask -> processResources.textSymbolOutputFile, +                    is LinkApplicationAndroidResourcesTask -> processResources.textSymbolOutputFile, +                    else -> throw RuntimeException(, +                        "Minimum supported Android Gradle Plugin is 3.1.0"), +                  }), +                  .builtBy(processResources), +          project.tasks.create("generate${variant.name.capitalize()}R2", R2Generator::class.java) {, +            it.outputDir = outputDir, +            it.rFile = rFile, +            it.useAndroidX = useAndroidX, +            it.packageName = rPackage, +            it.className = "R2", +            variant.registerJavaGeneratingTask(it, outputDir), +++ /dev/null, +++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.kt, +package butterknife.plugin, +, +import com.squareup.javapoet.ClassName, +import com.squareup.javapoet.FieldSpec, +import com.squareup.javapoet.JavaFile, +import com.squareup.javapoet.TypeSpec, +import javax.lang.model.element.Modifier.FINAL, +import javax.lang.model.element.Modifier.PUBLIC, +import javax.lang.model.element.Modifier.STATIC, +, +, +private const val ANNOTATION_PACKAGE = "androidx.annotation", +private const val ANNOTATION_PACKAGE_LEGACY = "android.support.annotation", +internal val SUPPORTED_TYPES = setOf("anim", "array", "attr", "bool", "color", "dimen",, +    "drawable", "id", "integer", "layout", "menu", "plurals", "string", "style", "styleable"), +, +/**, + * Generates a class that contains all supported field names in an R file as final values., + * Also enables adding support annotations to indicate the type of resource for every field., + */, +class FinalRClassBuilder(, +  private val packageName: String,, +  private val className: String,, +  private val useLegacyTypes: Boolean, +) {, +, +  private var resourceTypes = mutableMapOf<String, TypeSpec.Builder>(), +]