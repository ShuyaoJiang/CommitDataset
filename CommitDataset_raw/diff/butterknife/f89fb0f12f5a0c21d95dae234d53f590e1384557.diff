[+++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +import android.content.Context;, +      if (requiresTheme()) {, +        result.addStatement("$T context = finder.getContext(source)", Context.class);, +        result.addStatement("$T res = context.getResources()", Resources.class);, +        result.addStatement("$T theme = context.getTheme()", Resources.Theme.class);, +      } else {, +      }, +        int tintAttributeId = binding.getTintAttributeId();, +        if (tintAttributeId != 0) {, +          result.addStatement("target.$L = $T.getTintedDrawable(res, theme, $L, $L)",, +              binding.getName(), UTILS, binding.getId(), tintAttributeId);, +        } else {, +          result.addStatement("target.$L = $T.getDrawable(res, theme, $L)", binding.getName(),, +              UTILS, binding.getId());, +        // TODO being themeable is poor correlation to the need to use Utils., +        if (binding.isThemeable()) {, +          result.addStatement("target.$L = $T.$L(res, theme, $L)", binding.getName(),, +              UTILS, binding.getMethod(), binding.getId());, +        } else {, +, +  private boolean requiresTheme() {, +    if (!drawableBindings.isEmpty()) {, +      return true;, +    }, +    for (FieldResourceBinding resourceBinding : resourceBindings) {, +      if (resourceBinding.isThemeable()) {, +        return true;, +      }, +    }, +    return false;, +  }, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +import android.content.Context;, +      if (requiresTheme()) {, +        result.addStatement("$T context = finder.getContext(source)", Context.class);, +        result.addStatement("$T res = context.getResources()", Resources.class);, +        result.addStatement("$T theme = context.getTheme()", Resources.Theme.class);, +      } else {, +      }, +        int tintAttributeId = binding.getTintAttributeId();, +        if (tintAttributeId != 0) {, +          result.addStatement("target.$L = $T.getTintedDrawable(res, theme, $L, $L)",, +              binding.getName(), UTILS, binding.getId(), tintAttributeId);, +        } else {, +          result.addStatement("target.$L = $T.getDrawable(res, theme, $L)", binding.getName(),, +              UTILS, binding.getId());, +        // TODO being themeable is poor correlation to the need to use Utils., +        if (binding.isThemeable()) {, +          result.addStatement("target.$L = $T.$L(res, theme, $L)", binding.getName(),, +              UTILS, binding.getMethod(), binding.getId());, +        } else {, +, +  private boolean requiresTheme() {, +    if (!drawableBindings.isEmpty()) {, +      return true;, +    }, +    for (FieldResourceBinding resourceBinding : resourceBindings) {, +      if (resourceBinding.isThemeable()) {, +        return true;, +      }, +    }, +    return false;, +  }, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java, +    FieldResourceBinding binding = new FieldResourceBinding(id, name, "getBoolean", false);, +        isColorStateList ? "getColorStateList" : "getColor", true);, +        isInt ? "getDimensionPixelSize" : "getDimension", false);, +    FieldResourceBinding binding = new FieldResourceBinding(id, name, "getInteger", false);, +    FieldResourceBinding binding = new FieldResourceBinding(id, name, "getString", false);, +    FieldResourceBinding binding = new FieldResourceBinding(id, name, methodName, false);, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java, +import android.content.Context;, +      if (requiresTheme()) {, +        result.addStatement("$T context = finder.getContext(source)", Context.class);, +        result.addStatement("$T res = context.getResources()", Resources.class);, +        result.addStatement("$T theme = context.getTheme()", Resources.Theme.class);, +      } else {, +      }, +        int tintAttributeId = binding.getTintAttributeId();, +        if (tintAttributeId != 0) {, +          result.addStatement("target.$L = $T.getTintedDrawable(res, theme, $L, $L)",, +              binding.getName(), UTILS, binding.getId(), tintAttributeId);, +        } else {, +          result.addStatement("target.$L = $T.getDrawable(res, theme, $L)", binding.getName(),, +              UTILS, binding.getId());, +        // TODO being themeable is poor correlation to the need to use Utils., +        if (binding.isThemeable()) {, +          result.addStatement("target.$L = $T.$L(res, theme, $L)", binding.getName(),, +              UTILS, binding.getMethod(), binding.getId());, +        } else {, +, +  private boolean requiresTheme() {, +    if (!drawableBindings.isEmpty()) {, +      return true;, +    }, +    for (FieldResourceBinding resourceBinding : resourceBindings) {, +      if (resourceBinding.isThemeable()) {, +        return true;, +      }]