[+++ b/README.md, +ProGuard, +--------, +, +Butter Knife generates and uses classes dynamically which means that static, +analysis tools like ProGuard may think they are unused. In order to prevent them, +from being removed explicitly mark them to be kept., +, +```, +-keepclassmembers class **$$ViewInjector {, +  public static void inject(...);, +}, +```, +, +, +, +++ b/README.md, +ProGuard, +--------, +, +Butter Knife generates and uses classes dynamically which means that static, +analysis tools like ProGuard may think they are unused. In order to prevent them, +from being removed explicitly mark them to be kept., +, +```, +-keepclassmembers class **$$ViewInjector {, +  public static void inject(...);, +}, +```, +, +, +, +++ b/butterknife-sample/src/main/java/com/example/butterknife/SimpleActivity.java, +import butterknife.OnClick;, +import butterknife.OnLongClick;, +    listOfThings.setAdapter(new SimpleAdapter(this));, +  }, +, +  @OnClick(R.id.hello), +  public void helloClicked(Button button) {, +    Toast.makeText(SimpleActivity.this, "Hello, click!", LENGTH_SHORT).show();, +    button.setText("Clicked!");, +  }, +, +  @OnClick({ R.id.title, R.id.subtitle, R.id.footer }), +  public void textClicked(TextView view) {, +, +  @OnLongClick(R.id.hello), +  public void helloLongClicked(View view) {, +    Toast.makeText(SimpleActivity.this, "Hello, long click!", LENGTH_SHORT).show();, +++ b/README.md, +ProGuard, +--------, +, +Butter Knife generates and uses classes dynamically which means that static, +analysis tools like ProGuard may think they are unused. In order to prevent them, +from being removed explicitly mark them to be kept., +, +```, +-keepclassmembers class **$$ViewInjector {, +  public static void inject(...);, +}, +```, +, +, +, +++ b/butterknife-sample/src/main/java/com/example/butterknife/SimpleActivity.java, +import butterknife.OnClick;, +import butterknife.OnLongClick;, +    listOfThings.setAdapter(new SimpleAdapter(this));, +  }, +, +  @OnClick(R.id.hello), +  public void helloClicked(Button button) {, +    Toast.makeText(SimpleActivity.this, "Hello, click!", LENGTH_SHORT).show();, +    button.setText("Clicked!");, +  }, +, +  @OnClick({ R.id.title, R.id.subtitle, R.id.footer }), +  public void textClicked(TextView view) {, +, +  @OnLongClick(R.id.hello), +  public void helloLongClicked(View view) {, +    Toast.makeText(SimpleActivity.this, "Hello, long click!", LENGTH_SHORT).show();, +++ b/butterknife/src/main/java/butterknife/Views.java, +      Class<?> targetClass = target.getClass();, +      Method inject = INJECTORS.get(targetClass);, +      if (inject == null) {, +      inject.invoke(null, finder, target, source);]