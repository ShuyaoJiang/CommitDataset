[+++ b/butterknife-annotations/src/main/java/butterknife/BindAnim.java, +package butterknife;, +, +import android.support.annotation.AnimRes;, +, +import java.lang.annotation.Retention;, +import java.lang.annotation.Target;, +, +import static java.lang.annotation.ElementType.FIELD;, +import static java.lang.annotation.RetentionPolicy.CLASS;, +, +/**, + * Bind a field to the specified animation resource ID., + * <pre><code>, + * {@literal @}BindAnim(R.anim.fade_in) Animation fadeIn;, + * </code></pre>, + */, +@Retention(CLASS) @Target(FIELD), +public @interface BindAnim {, +  /** Animation resource ID to which the field will be bound. */, +  @AnimRes int value();, +}, +++ b/butterknife-annotations/src/main/java/butterknife/BindAnim.java, +package butterknife;, +, +import android.support.annotation.AnimRes;, +, +import java.lang.annotation.Retention;, +import java.lang.annotation.Target;, +, +import static java.lang.annotation.ElementType.FIELD;, +import static java.lang.annotation.RetentionPolicy.CLASS;, +, +/**, + * Bind a field to the specified animation resource ID., + * <pre><code>, + * {@literal @}BindAnim(R.anim.fade_in) Animation fadeIn;, + * </code></pre>, + */, +@Retention(CLASS) @Target(FIELD), +public @interface BindAnim {, +  /** Animation resource ID to which the field will be bound. */, +  @AnimRes int value();, +}, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java, +  static final ClassName ANIMATION_UTILS =, +          ClassName.get("android.view.animation", "AnimationUtils");, +++ b/butterknife-annotations/src/main/java/butterknife/BindAnim.java, +package butterknife;, +, +import android.support.annotation.AnimRes;, +, +import java.lang.annotation.Retention;, +import java.lang.annotation.Target;, +, +import static java.lang.annotation.ElementType.FIELD;, +import static java.lang.annotation.RetentionPolicy.CLASS;, +, +/**, + * Bind a field to the specified animation resource ID., + * <pre><code>, + * {@literal @}BindAnim(R.anim.fade_in) Animation fadeIn;, + * </code></pre>, + */, +@Retention(CLASS) @Target(FIELD), +public @interface BindAnim {, +  /** Animation resource ID to which the field will be bound. */, +  @AnimRes int value();, +}, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java, +  static final ClassName ANIMATION_UTILS =, +          ClassName.get("android.view.animation", "AnimationUtils");, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java, +import butterknife.BindAnim;, +  private static final String ANIMATION_TYPE = "android.view.animation.Animation";, +    annotations.add(BindAnim.class);, +    // Process each @BindAnim element., +    for (Element element : env.getElementsAnnotatedWith(BindAnim.class)) {, +      if (!SuperficialValidation.validateElement(element)) continue;, +      try {, +        parseResourceAnimation(element, builderMap, erasedTargetNames);, +      } catch (Exception e) {, +        logParsingError(element, BindAnim.class, e);, +      }, +    }, +, +  private void parseResourceAnimation(Element element,, +      Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {, +    boolean hasError = false;, +    TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();, +, +    // Verify that the target type is Animation., +    if (!ANIMATION_TYPE.equals(element.asType().toString())) {, +      error(element, "@%s field type must be 'Animation'. (%s.%s)",, +          BindAnim.class.getSimpleName(), enclosingElement.getQualifiedName(),, +          element.getSimpleName());, +      hasError = true;, +    }, +, +    // Verify common generated code restrictions.]