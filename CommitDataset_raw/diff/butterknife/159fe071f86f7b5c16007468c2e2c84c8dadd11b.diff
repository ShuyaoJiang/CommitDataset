[+++ b/butterknife/pom.xml, +    <dependency>, +      <groupId>org.robolectric</groupId>, +      <artifactId>robolectric</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/butterknife/pom.xml, +    <dependency>, +      <groupId>org.robolectric</groupId>, +      <artifactId>robolectric</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/butterknife/src/main/java/butterknife/Views.java, +  static void inject(Object target, Object source, Finder finder) {, +++ b/butterknife/pom.xml, +    <dependency>, +      <groupId>org.robolectric</groupId>, +      <artifactId>robolectric</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/butterknife/src/main/java/butterknife/Views.java, +  static void inject(Object target, Object source, Finder finder) {, +++ b/butterknife/src/test/java/butterknife/ButterKnifeTestRunner.java, +package butterknife;, +, +import java.lang.reflect.Method;, +import org.junit.runners.model.InitializationError;, +import org.robolectric.Robolectric;, +import org.robolectric.RobolectricTestRunner;, +import org.robolectric.shadows.ShadowApplication;, +, +public class ButterKnifeTestRunner extends RobolectricTestRunner {, +  public ButterKnifeTestRunner(Class<?> testClass) throws InitializationError {, +    super(testClass);, +  }, +, +  @Override public void setupApplicationState(Method testMethod) {, +    Robolectric.application = ShadowApplication.bind(createApplication(), null, null);, +  }, +}, +++ b/butterknife/pom.xml, +    <dependency>, +      <groupId>org.robolectric</groupId>, +      <artifactId>robolectric</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/butterknife/src/main/java/butterknife/Views.java, +  static void inject(Object target, Object source, Finder finder) {, +++ b/butterknife/src/test/java/butterknife/ButterKnifeTestRunner.java, +package butterknife;, +, +import java.lang.reflect.Method;, +import org.junit.runners.model.InitializationError;, +import org.robolectric.Robolectric;, +import org.robolectric.RobolectricTestRunner;, +import org.robolectric.shadows.ShadowApplication;, +, +public class ButterKnifeTestRunner extends RobolectricTestRunner {, +  public ButterKnifeTestRunner(Class<?> testClass) throws InitializationError {, +    super(testClass);, +  }, +, +  @Override public void setupApplicationState(Method testMethod) {, +    Robolectric.application = ShadowApplication.bind(createApplication(), null, null);, +  }, +}, +++ b/butterknife/src/test/java/butterknife/ViewsTest.java, +package butterknife;, +, +import org.junit.Test;, +import org.junit.runner.RunWith;, +, +@RunWith(ButterKnifeTestRunner.class), +public class ViewsTest {, +  @Test public void zeroInjectionsDoesNotThrowException() {, +    class Example {, +    }, +, +    Example example = new Example();, +    Views.inject(example, null, null);, +  }, +}, +++ b/butterknife/pom.xml, +    <dependency>, +      <groupId>org.robolectric</groupId>, +      <artifactId>robolectric</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/butterknife/src/main/java/butterknife/Views.java, +  static void inject(Object target, Object source, Finder finder) {, +++ b/butterknife/src/test/java/butterknife/ButterKnifeTestRunner.java, +package butterknife;, +, +import java.lang.reflect.Method;, +import org.junit.runners.model.InitializationError;, +import org.robolectric.Robolectric;, +import org.robolectric.RobolectricTestRunner;, +import org.robolectric.shadows.ShadowApplication;, +, +public class ButterKnifeTestRunner extends RobolectricTestRunner {]