[+++ b/butterknife/src/main/java/butterknife/ButterKnife.java, +  /** Apply {@code action} to {@code view}. */, +  public static <T extends View> void apply(T view, Action<? super T> action) {, +    action.apply(view, 0);, +  }, +, +  /** Set {@code value} on {@code view} using {@code setter}. */, +  public static <T extends View, V> void apply(T view, Setter<? super T, V> setter, V value) {, +    setter.set(view, value, 0);, +  }, +, +  /** Apply {@code value} to {@code view} using {@code property}. */, +  @TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH), +  public static <T extends View, V> void apply(T view, Property<? super T, V> setter, V value) {, +    setter.set(view, value);, +  }, +, +++ b/butterknife/src/main/java/butterknife/ButterKnife.java, +  /** Apply {@code action} to {@code view}. */, +  public static <T extends View> void apply(T view, Action<? super T> action) {, +    action.apply(view, 0);, +  }, +, +  /** Set {@code value} on {@code view} using {@code setter}. */, +  public static <T extends View, V> void apply(T view, Setter<? super T, V> setter, V value) {, +    setter.set(view, value, 0);, +  }, +, +  /** Apply {@code value} to {@code view} using {@code property}. */, +  @TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH), +  public static <T extends View, V> void apply(T view, Property<? super T, V> setter, V value) {, +    setter.set(view, value);, +  }, +, +++ b/butterknife/src/test/java/butterknife/ButterKnifeTest.java, +  @Test public void propertyAppliedToView() {, +    View view = new View(Robolectric.application);, +    assertThat(view).isEnabled();, +    ButterKnife.apply(view, PROPERTY_ENABLED, false);, +, +    assertThat(view).isDisabled();, +  }, +, +  @Test public void actionAppliedToView() {, +    View view = new View(Robolectric.application);, +    assertThat(view).isEnabled();, +, +    ButterKnife.apply(view, ACTION_DISABLE);, +, +    assertThat(view).isDisabled();, +  }, +, +  @Test public void setterAppliedToView() {, +    View view = new View(Robolectric.application);, +    assertThat(view).isEnabled();, +, +    ButterKnife.apply(view, SETTER_ENABLED, false);, +, +    assertThat(view).isDisabled();, +  }, +]