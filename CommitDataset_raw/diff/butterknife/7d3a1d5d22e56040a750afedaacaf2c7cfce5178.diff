[+++ b/butterknife/src/main/java/butterknife/ButterKnife.java, +  /** An action that can be applied to a list of views. */, +  /** A setter that can apply a value to a list of views. */, +   * Inject annotated fields and methods in the specified {@link Activity}. The current content, +   * view is used as the view root., +   * Inject annotated fields and methods in the specified {@link View}. The view and its children, +   * are used as the view root., +   * Inject annotated fields and methods in the specified {@code target} using the {@code source}, +   * {@link Activity} as the view root., +   * Inject annotated fields and methods in the specified {@code target} using the {@code source}, +   * {@link View} as the view root., +   * Reset fields annotated with {@link InjectView @InjectView} and {@link InjectViews @InjectViews}, +   * to {@code null}., +   * This should only be used in the {@code onDestroyView} method of a fragment., +++ b/butterknife/src/main/java/butterknife/ButterKnife.java, +  /** An action that can be applied to a list of views. */, +  /** A setter that can apply a value to a list of views. */, +   * Inject annotated fields and methods in the specified {@link Activity}. The current content, +   * view is used as the view root., +   * Inject annotated fields and methods in the specified {@link View}. The view and its children, +   * are used as the view root., +   * Inject annotated fields and methods in the specified {@code target} using the {@code source}, +   * {@link Activity} as the view root., +   * Inject annotated fields and methods in the specified {@code target} using the {@code source}, +   * {@link View} as the view root., +   * Reset fields annotated with {@link InjectView @InjectView} and {@link InjectViews @InjectViews}, +   * to {@code null}., +   * This should only be used in the {@code onDestroyView} method of a fragment., +++ b/butterknife/src/main/java/butterknife/InjectView.java, + * Bind a field to the view for the specified ID. The view will automatically be cast to the field, + * type., +  /** View ID to which the field will be bound. */, +++ b/butterknife/src/main/java/butterknife/ButterKnife.java, +  /** An action that can be applied to a list of views. */, +  /** A setter that can apply a value to a list of views. */, +   * Inject annotated fields and methods in the specified {@link Activity}. The current content, +   * view is used as the view root., +   * Inject annotated fields and methods in the specified {@link View}. The view and its children, +   * are used as the view root., +   * Inject annotated fields and methods in the specified {@code target} using the {@code source}, +   * {@link Activity} as the view root., +   * Inject annotated fields and methods in the specified {@code target} using the {@code source}, +   * {@link View} as the view root., +   * Reset fields annotated with {@link InjectView @InjectView} and {@link InjectViews @InjectViews}, +   * to {@code null}., +   * This should only be used in the {@code onDestroyView} method of a fragment., +++ b/butterknife/src/main/java/butterknife/InjectView.java, + * Bind a field to the view for the specified ID. The view will automatically be cast to the field, + * type., +  /** View ID to which the field will be bound. */, +++ b/butterknife/src/main/java/butterknife/InjectViews.java, + * Bind a field to the view for each ID specified in a {@link List} or array. Each view will, + * automatically be cast to the list or array type., +  /** View IDs to which the field will be bound. */, +++ b/butterknife/src/main/java/butterknife/ButterKnife.java, +  /** An action that can be applied to a list of views. */, +  /** A setter that can apply a value to a list of views. */, +   * Inject annotated fields and methods in the specified {@link Activity}. The current content, +   * view is used as the view root., +   * Inject annotated fields and methods in the specified {@link View}. The view and its children, +   * are used as the view root., +   * Inject annotated fields and methods in the specified {@code target} using the {@code source}, +   * {@link Activity} as the view root., +   * Inject annotated fields and methods in the specified {@code target} using the {@code source}, +   * {@link View} as the view root., +   * Reset fields annotated with {@link InjectView @InjectView} and {@link InjectViews @InjectViews}, +   * to {@code null}., +   * This should only be used in the {@code onDestroyView} method of a fragment., +++ b/butterknife/src/main/java/butterknife/InjectView.java, + * Bind a field to the view for the specified ID. The view will automatically be cast to the field, + * type., +  /** View ID to which the field will be bound. */, +++ b/butterknife/src/main/java/butterknife/InjectViews.java, + * Bind a field to the view for each ID specified in a {@link List} or array. Each view will, + * automatically be cast to the list or array type., +  /** View IDs to which the field will be bound. */, +++ b/butterknife/src/main/java/butterknife/OnCheckedChanged.java, + * Bind a method to an {@link OnCheckedChangeListener OnCheckedChangeListener} on the view for, + * each ID specified., +  /** View IDs to which the method will be bound. */, +++ b/butterknife/src/main/java/butterknife/ButterKnife.java, +  /** An action that can be applied to a list of views. */, +  /** A setter that can apply a value to a list of views. */, +   * Inject annotated fields and methods in the specified {@link Activity}. The current content, +   * view is used as the view root., +   * Inject annotated fields and methods in the specified {@link View}. The view and its children, +   * are used as the view root., +   * Inject annotated fields and methods in the specified {@code target} using the {@code source}, +   * {@link Activity} as the view root., +   * Inject annotated fields and methods in the specified {@code target} using the {@code source}, +   * {@link View} as the view root., +   * Reset fields annotated with {@link InjectView @InjectView} and {@link InjectViews @InjectViews}, +   * to {@code null}., +   * This should only be used in the {@code onDestroyView} method of a fragment., +++ b/butterknife/src/main/java/butterknife/InjectView.java, + * Bind a field to the view for the specified ID. The view will automatically be cast to the field, + * type., +  /** View ID to which the field will be bound. */, +++ b/butterknife/src/main/java/butterknife/InjectViews.java, + * Bind a field to the view for each ID specified in a {@link List} or array. Each view will]