[+++ b/build.gradle, +    gradlePluginPortal(), +    classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.16', +  apply plugin: 'net.ltgt.errorprone', +, +  dependencies {, +    errorprone 'com.google.errorprone:error_prone_core:2.3.1', +  }, +, +  // TODO figure out why this causes codegen to fail in android tests., +  //def nullaway = dependencies.create('com.uber.nullaway:nullaway:0.5.5'), +  //configurations.all { Configuration configuration ->, +  //  if (configuration.name.endsWith('nnotationProcessor')) {, +  //    configuration.dependencies.add(nullaway), +  //  }, +  //}, +  //, +  //tasks.withType(JavaCompile) {, +  //  options.compilerArgs += [, +  //      '-Xep:NullAway:ERROR',, +  //      '-XepOpt:NullAway:AnnotatedPackages=butterknife',, +  //  ], +  //}, +, +++ b/build.gradle, +    gradlePluginPortal(), +    classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.16', +  apply plugin: 'net.ltgt.errorprone', +, +  dependencies {, +    errorprone 'com.google.errorprone:error_prone_core:2.3.1', +  }, +, +  // TODO figure out why this causes codegen to fail in android tests., +  //def nullaway = dependencies.create('com.uber.nullaway:nullaway:0.5.5'), +  //configurations.all { Configuration configuration ->, +  //  if (configuration.name.endsWith('nnotationProcessor')) {, +  //    configuration.dependencies.add(nullaway), +  //  }, +  //}, +  //, +  //tasks.withType(JavaCompile) {, +  //  options.compilerArgs += [, +  //      '-Xep:NullAway:ERROR',, +  //      '-XepOpt:NullAway:AnnotatedPackages=butterknife',, +  //  ], +  //}, +, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java, +import javax.annotation.Nullable;, +import static java.util.Objects.requireNonNull;, +  private final @Nullable BindingSet parentBinding;, +      ImmutableList<ResourceBinding> resourceBindings, @Nullable BindingSet parentBinding) {, +      FieldViewBinding fieldBinding = requireNonNull(binding.getFieldBinding());, +        || (parentBinding != null && parentBinding.constructorNeedsView());, +    private @Nullable BindingSet parentBinding;, +    @Nullable String findExistingBindingName(Id id) {, +++ b/build.gradle, +    gradlePluginPortal(), +    classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.16', +  apply plugin: 'net.ltgt.errorprone', +, +  dependencies {, +    errorprone 'com.google.errorprone:error_prone_core:2.3.1', +  }, +, +  // TODO figure out why this causes codegen to fail in android tests., +  //def nullaway = dependencies.create('com.uber.nullaway:nullaway:0.5.5'), +  //configurations.all { Configuration configuration ->, +  //  if (configuration.name.endsWith('nnotationProcessor')) {, +  //    configuration.dependencies.add(nullaway), +  //  }, +  //}, +  //, +  //tasks.withType(JavaCompile) {, +  //  options.compilerArgs += [, +  //      '-Xep:NullAway:ERROR',, +  //      '-XepOpt:NullAway:AnnotatedPackages=butterknife',, +  //  ], +  //}, +, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java, +import javax.annotation.Nullable;, +import static java.util.Objects.requireNonNull;, +  private final @Nullable BindingSet parentBinding;, +      ImmutableList<ResourceBinding> resourceBindings, @Nullable BindingSet parentBinding) {, +      FieldViewBinding fieldBinding = requireNonNull(binding.getFieldBinding());, +        || (parentBinding != null && parentBinding.constructorNeedsView());, +    private @Nullable BindingSet parentBinding;, +    @Nullable String findExistingBindingName(Id id) {, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java, +import javax.annotation.Nullable;, +import static java.util.Objects.requireNonNull;, +@SuppressWarnings("NullAway") // TODO fix all these..., +  private @Nullable Trees trees;, +    TypeName type = TypeName.get(requireNonNull(viewType));, +    builder.addFieldCollection(new FieldCollectionViewBinding(name, type, requireNonNull(kind),, +    builder.addResource(new FieldResourceBinding(resourceId, name, requireNonNull(type)));, +   * Returns a method name from the {@code android.content.res.Resources} class for array resource, +  private static @Nullable FieldResourceBinding.Type getArrayResourceMethodName(Element element) {]