[+++ b/butterknife-annotations/src/main/java/butterknife/BindArray.java, +import static java.lang.annotation.RetentionPolicy.CLASS;, +@Retention(CLASS) @Target(FIELD), +++ b/butterknife-annotations/src/main/java/butterknife/BindArray.java, +import static java.lang.annotation.RetentionPolicy.CLASS;, +@Retention(CLASS) @Target(FIELD), +++ b/butterknife-annotations/src/main/java/butterknife/OnPageChange.java, +    targetTypeAndroidX = "androidx.viewpager.widget.ViewPager",, +    typeAndroidX = "androidx.viewpager.widget.ViewPager.OnPageChangeListener",, +++ b/butterknife-annotations/src/main/java/butterknife/BindArray.java, +import static java.lang.annotation.RetentionPolicy.CLASS;, +@Retention(CLASS) @Target(FIELD), +++ b/butterknife-annotations/src/main/java/butterknife/OnPageChange.java, +    targetTypeAndroidX = "androidx.viewpager.widget.ViewPager",, +    typeAndroidX = "androidx.viewpager.widget.ViewPager.OnPageChangeListener",, +++ b/butterknife-annotations/src/main/java/butterknife/internal/ListenerClass.java, +  String targetTypeAndroidX() default "";, +, +  String typeAndroidX() default "";, +, +++ b/butterknife-annotations/src/main/java/butterknife/BindArray.java, +import static java.lang.annotation.RetentionPolicy.CLASS;, +@Retention(CLASS) @Target(FIELD), +++ b/butterknife-annotations/src/main/java/butterknife/OnPageChange.java, +    targetTypeAndroidX = "androidx.viewpager.widget.ViewPager",, +    typeAndroidX = "androidx.viewpager.widget.ViewPager.OnPageChangeListener",, +++ b/butterknife-annotations/src/main/java/butterknife/internal/ListenerClass.java, +  String targetTypeAndroidX() default "";, +, +  String typeAndroidX() default "";, +, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java, +        addViewBinding(constructor, binding, debuggable, useAndroidX);, +        addFieldAndUnbindStatement(bindingClass, result, binding, useAndroidX);, +      ViewBinding bindings, boolean useAndroidX) {, +        TypeName listenerClassName = bestGuess(getType(listenerClass, useAndroidX));, +      String targetType = getTargetType(listenerClass, useAndroidX);, +      if (!VIEW_TYPE.equals(targetType)) {, +        unbindMethod.addStatement("(($T) $N).$N($N)", bestGuess(targetType),, +  private static String getType(ListenerClass listenerClass, boolean useAndroidX) {, +    String type = listenerClass.type();, +    String typeAndroidX = listenerClass.typeAndroidX();, +    if (useAndroidX && !typeAndroidX.isEmpty()) {, +      type = typeAndroidX;, +    }, +    return type;, +  }, +, +  private static String getTargetType(ListenerClass listenerClass, boolean useAndroidX) {, +    String targetType = listenerClass.targetType();, +    String targetTypeAndroidX = listenerClass.targetTypeAndroidX();, +    if (useAndroidX && !targetTypeAndroidX.isEmpty()) {, +      targetType = targetTypeAndroidX;, +    }, +    return targetType;, +  }, +, +  private void addViewBinding(MethodSpec.Builder result, ViewBinding binding, boolean debuggable,, +      boolean useAndroidX) {, +    addMethodBindings(result, binding, debuggable, useAndroidX);, +  private void addMethodBindings(MethodSpec.Builder result, ViewBinding binding, boolean debuggable,, +      boolean useAndroidX) {, +          .superclass(ClassName.bestGuess(getType(listener, useAndroidX)));, +        TypeName listenerClassName = bestGuess(getType(listener, useAndroidX));, +      String targetType = getTargetType(listener, useAndroidX);, +      if (!VIEW_TYPE.equals(targetType)) {, +        result.addStatement("(($T) $N).$L($L)", bestGuess(targetType), bindName,, +++ b/butterknife-annotations/src/main/java/butterknife/BindArray.java, +import static java.lang.annotation.RetentionPolicy.CLASS;, +@Retention(CLASS) @Target(FIELD), +++ b/butterknife-annotations/src/main/java/butterknife/OnPageChange.java, +    targetTypeAndroidX = "androidx.viewpager.widget.ViewPager",, +    typeAndroidX = "androidx.viewpager.widget.ViewPager.OnPageChangeListener",, +++ b/butterknife-annotations/src/main/java/butterknife/internal/ListenerClass.java, +  String targetTypeAndroidX() default "";, +, +  String typeAndroidX() default "";, +, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java, +        addViewBinding(constructor, binding, debuggable, useAndroidX);, +        addFieldAndUnbindStatement(bindingClass, result, binding, useAndroidX);, +      ViewBinding bindings, boolean useAndroidX) {, +        TypeName listenerClassName = bestGuess(getType(listenerClass, useAndroidX));, +      String targetType = getTargetType(listenerClass, useAndroidX);, +      if (!VIEW_TYPE.equals(targetType)) {, +        unbindMethod.addStatement("(($T) $N).$N($N)", bestGuess(targetType),, +  private static String getType(ListenerClass listenerClass, boolean useAndroidX) {, +    String type = listenerClass.type();, +    String typeAndroidX = listenerClass.typeAndroidX();, +    if (useAndroidX && !typeAndroidX.isEmpty()) {, +      type = typeAndroidX;, +    }, +    return type;, +  }, +, +  private static String getTargetType(ListenerClass listenerClass, boolean useAndroidX) {, +    String targetType = listenerClass.targetType();, +    String targetTypeAndroidX = listenerClass.targetTypeAndroidX();, +    if (useAndroidX && !targetTypeAndroidX.isEmpty()) {, +      targetType = targetTypeAndroidX;]