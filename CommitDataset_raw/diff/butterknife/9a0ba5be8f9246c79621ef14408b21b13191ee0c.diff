[+++ b/.travis.yml, +++ b/.travis.yml, +++ b/README.md, + * Eliminate `findViewById` calls by using `@Bind` on fields., +  @Bind(R.id.user) EditText username;, +  @Bind(R.id.pass) EditText password;, +++ b/.travis.yml, +++ b/README.md, + * Eliminate `findViewById` calls by using `@Bind` on fields., +  @Bind(R.id.user) EditText username;, +  @Bind(R.id.pass) EditText password;, +++ b/build.gradle, +      classpath 'com.android.tools.build:gradle:2.0.0', +++ b/.travis.yml, +++ b/README.md, + * Eliminate `findViewById` calls by using `@Bind` on fields., +  @Bind(R.id.user) EditText username;, +  @Bind(R.id.pass) EditText password;, +++ b/build.gradle, +      classpath 'com.android.tools.build:gradle:2.0.0', +++ b/butterknife-annotations/src/main/java/butterknife/Bind.java, +package butterknife;, +, +import android.support.annotation.IdRes;, +import java.lang.annotation.Retention;, +import java.lang.annotation.Target;, +, +import static java.lang.annotation.ElementType.FIELD;, +import static java.lang.annotation.RetentionPolicy.CLASS;, +, +/**, + * Bind a field to the view for the specified ID. The view will automatically be cast to the field, + * type., + * <pre><code>, + * {@literal @}Bind(R.id.title) TextView title;, + * </code></pre>, + */, +@Retention(CLASS) @Target(FIELD), +public @interface Bind {, +  /** View ID to which the field will be bound. */, +  @IdRes int[] value();, +}, +++ b/.travis.yml, +++ b/README.md, + * Eliminate `findViewById` calls by using `@Bind` on fields., +  @Bind(R.id.user) EditText username;, +  @Bind(R.id.pass) EditText password;, +++ b/build.gradle, +      classpath 'com.android.tools.build:gradle:2.0.0', +++ b/butterknife-annotations/src/main/java/butterknife/Bind.java, +package butterknife;, +, +import android.support.annotation.IdRes;, +import java.lang.annotation.Retention;, +import java.lang.annotation.Target;, +, +import static java.lang.annotation.ElementType.FIELD;, +import static java.lang.annotation.RetentionPolicy.CLASS;, +, +/**, + * Bind a field to the view for the specified ID. The view will automatically be cast to the field, + * type., + * <pre><code>, + * {@literal @}Bind(R.id.title) TextView title;, + * </code></pre>, + */, +@Retention(CLASS) @Target(FIELD), +public @interface Bind {, +  /** View ID to which the field will be bound. */, +  @IdRes int[] value();, +}, +++ /dev/null, +++ b/.travis.yml, +++ b/README.md, + * Eliminate `findViewById` calls by using `@Bind` on fields., +  @Bind(R.id.user) EditText username;, +  @Bind(R.id.pass) EditText password;, +++ b/build.gradle, +      classpath 'com.android.tools.build:gradle:2.0.0', +++ b/butterknife-annotations/src/main/java/butterknife/Bind.java, +package butterknife;, +, +import android.support.annotation.IdRes;, +import java.lang.annotation.Retention;, +import java.lang.annotation.Target;, +, +import static java.lang.annotation.ElementType.FIELD;, +import static java.lang.annotation.RetentionPolicy.CLASS;, +, +/**, + * Bind a field to the view for the specified ID. The view will automatically be cast to the field, + * type., + * <pre><code>, + * {@literal @}Bind(R.id.title) TextView title;, + * </code></pre>, + */, +@Retention(CLASS) @Target(FIELD), +public @interface Bind {, +  /** View ID to which the field will be bound. */, +  @IdRes int[] value();]