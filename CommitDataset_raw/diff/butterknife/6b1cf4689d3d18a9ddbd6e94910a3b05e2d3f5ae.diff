[+++ b/CHANGELOG.md, +Version 2.0.0 *(2013-07-16)*, +----------------------------, +, + * New: `@OnClick` annotation for binding click listeners to methods!, +, +, +++ b/CHANGELOG.md, +Version 2.0.0 *(2013-07-16)*, +----------------------------, +, + * New: `@OnClick` annotation for binding click listeners to methods!, +, +, +++ b/website/index.html, +            <p>Some people call this view injection and lump it along with traditional dependency injection frameworks. They may be wrong in nomenclature, but perhaps there exists some use for it.</p>, +            <h4 id="click-injection">Click Listener Injection</h4>, +            <p>Click listeners can also automatically be configured onto methods.</p>, +            <pre class="prettyprint">@OnClick(R.id.submit), +public void submit() {, +  // TODO submit data to server..., +}</pre>, +            <p>You can add the view as an argument to the method. Define a specific type and it will automatically be cast.</p>, +            <pre class="prettyprint">@OnClick(R.id.submit), +public void sayHi(Button button) {, +  button.setText("Hello!");, +}</pre>, +            <p>Specify multiple IDs in a single binding for common event handling.</p>, +            <pre class="prettyprint">@OnClick({ R.id.door1, R.id.door2, R.id.door3 }), +public void pickDoor(DoorView door) {, +  if (door.hasPrizeBehind()) {, +    Toast.makeText(this, "You win!", LENGTH_SHORT).show();, +  } else {, +    Toast.makeText(this, "Try again", LENGTH_SHORT).show();, +  }, +}</pre>, +]