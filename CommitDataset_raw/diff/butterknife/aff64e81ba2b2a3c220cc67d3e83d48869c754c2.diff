[+++ b/butterknife/src/main/java/butterknife/ButterKnife.java, +import static butterknife.internal.ButterKnifeProcessor.ANDROID_PREFIX;, +import static butterknife.internal.ButterKnifeProcessor.JAVA_PREFIX;, +, +    if (clsName.startsWith(ANDROID_PREFIX) || clsName.startsWith(JAVA_PREFIX)) {, +    if (clsName.startsWith(ANDROID_PREFIX) || clsName.startsWith(JAVA_PREFIX)) {, +++ b/butterknife/src/main/java/butterknife/ButterKnife.java, +import static butterknife.internal.ButterKnifeProcessor.ANDROID_PREFIX;, +import static butterknife.internal.ButterKnifeProcessor.JAVA_PREFIX;, +, +    if (clsName.startsWith(ANDROID_PREFIX) || clsName.startsWith(JAVA_PREFIX)) {, +    if (clsName.startsWith(ANDROID_PREFIX) || clsName.startsWith(JAVA_PREFIX)) {, +++ b/butterknife/src/main/java/butterknife/internal/ButterKnifeProcessor.java, +  public static final String ANDROID_PREFIX = "android.";, +  public static final String JAVA_PREFIX = "java.";, +  private boolean isBindingInWrongPackage(Class<? extends Annotation> annotationClass,, +      Element element) {, +    TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();, +    String qualifiedName = enclosingElement.getQualifiedName().toString();, +, +    if (qualifiedName.startsWith(ANDROID_PREFIX)) {, +      error(element, "@%s-annotated class incorrectly in Android framework package. (%s)",, +          annotationClass.getSimpleName(), qualifiedName);, +      return true;, +    }, +    if (qualifiedName.startsWith(JAVA_PREFIX)) {, +      error(element, "@%s-annotated class incorrectly in Java framework package. (%s)",, +          annotationClass.getSimpleName(), qualifiedName);, +      return true;, +    }, +, +    return false;, +  }, +, +    hasError |= isBindingInWrongPackage(InjectView.class, element);, +    hasError |= isBindingInWrongPackage(InjectViews.class, element);, +    hasError |= isBindingInWrongPackage(annotationClass, element);, +++ b/butterknife/src/main/java/butterknife/ButterKnife.java, +import static butterknife.internal.ButterKnifeProcessor.ANDROID_PREFIX;, +import static butterknife.internal.ButterKnifeProcessor.JAVA_PREFIX;, +, +    if (clsName.startsWith(ANDROID_PREFIX) || clsName.startsWith(JAVA_PREFIX)) {, +    if (clsName.startsWith(ANDROID_PREFIX) || clsName.startsWith(JAVA_PREFIX)) {, +++ b/butterknife/src/main/java/butterknife/internal/ButterKnifeProcessor.java, +  public static final String ANDROID_PREFIX = "android.";, +  public static final String JAVA_PREFIX = "java.";, +  private boolean isBindingInWrongPackage(Class<? extends Annotation> annotationClass,, +      Element element) {, +    TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();, +    String qualifiedName = enclosingElement.getQualifiedName().toString();, +, +    if (qualifiedName.startsWith(ANDROID_PREFIX)) {, +      error(element, "@%s-annotated class incorrectly in Android framework package. (%s)",, +          annotationClass.getSimpleName(), qualifiedName);, +      return true;, +    }, +    if (qualifiedName.startsWith(JAVA_PREFIX)) {, +      error(element, "@%s-annotated class incorrectly in Java framework package. (%s)",, +          annotationClass.getSimpleName(), qualifiedName);, +      return true;, +    }, +, +    return false;, +  }, +, +    hasError |= isBindingInWrongPackage(InjectView.class, element);, +    hasError |= isBindingInWrongPackage(InjectViews.class, element);, +    hasError |= isBindingInWrongPackage(annotationClass, element);, +++ b/butterknife/src/test/java/butterknife/internal/InjectViewTest.java, +  @Test public void failsInJavaPackage() {, +    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(, +        "package java.test;",, +        "import android.view.View;",, +        "import butterknife.InjectView;",, +        "public class Test {",, +        "  @InjectView(1) View thing;",, +        "}", +    ));, +, +    ASSERT.about(javaSource()).that(source), +        .processedWith(butterknifeProcessors()), +        .failsToCompile(), +        .withErrorContaining(, +            "@InjectView-annotated class incorrectly in Java framework package. (java.test.Test)"), +        .in(source).onLine(5);, +  }, +, +  @Test public void failsInAndroidPackage() {, +    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(, +        "package android.test;",, +        "import android.view.View;",, +        "import butterknife.InjectView;",, +        "public class Test {",, +        "  @InjectView(1) View thing;",, +        "}", +    ));, +, +    ASSERT.about(javaSource()).that(source), +        .processedWith(butterknifeProcessors()), +        .failsToCompile()]