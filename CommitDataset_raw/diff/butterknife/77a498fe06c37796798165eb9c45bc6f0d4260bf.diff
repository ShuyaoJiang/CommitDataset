[+++ b/butterknife/src/main/java/butterknife/ButterKnife.java, +    return getViewBinder(target).bind(Finder.ACTIVITY, target, target);, +    return getViewBinder(target).bind(Finder.VIEW, target, target);, +    return getViewBinder(target).bind(Finder.DIALOG, target, target);, +    return getViewBinder(target).bind(Finder.VIEW, target, source);, +    return getViewBinder(target).bind(Finder.VIEW, target, source);, +    return getViewBinder(target).bind(Finder.DIALOG, target, source);, +  static ViewBinder<Object> getViewBinder(@NonNull Object target) {, +    return findViewBinderForClass(targetClass);, +  private static ViewBinder<Object> findViewBinderForClass(Class<?> cls) {, +    //noinspection TryWithIdenticalCatches Resolves to API 19+ only type., +    } catch (InstantiationException e) {, +      throw new RuntimeException("Unable to create view binder for " + clsName, e);, +    } catch (IllegalAccessException e) {, +      throw new RuntimeException("Unable to create view binder for " + clsName, e);, +++ b/butterknife/src/main/java/butterknife/ButterKnife.java, +    return getViewBinder(target).bind(Finder.ACTIVITY, target, target);, +    return getViewBinder(target).bind(Finder.VIEW, target, target);, +    return getViewBinder(target).bind(Finder.DIALOG, target, target);, +    return getViewBinder(target).bind(Finder.VIEW, target, source);, +    return getViewBinder(target).bind(Finder.VIEW, target, source);, +    return getViewBinder(target).bind(Finder.DIALOG, target, source);, +  static ViewBinder<Object> getViewBinder(@NonNull Object target) {, +    return findViewBinderForClass(targetClass);, +  private static ViewBinder<Object> findViewBinderForClass(Class<?> cls) {, +    //noinspection TryWithIdenticalCatches Resolves to API 19+ only type., +    } catch (InstantiationException e) {, +      throw new RuntimeException("Unable to create view binder for " + clsName, e);, +    } catch (IllegalAccessException e) {, +      throw new RuntimeException("Unable to create view binder for " + clsName, e);, +++ b/butterknife/src/test/java/butterknife/ButterKnifeTest.java, +    assertThat(ButterKnife.getViewBinder(example)).isSameAs(ButterKnife.NOP_VIEW_BINDER);]