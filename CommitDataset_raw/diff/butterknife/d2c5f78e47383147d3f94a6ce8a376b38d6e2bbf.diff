[+++ b/.travis.yml, +jdk:, + - oraclejdk7, + - oraclejdk8, +, +++ b/.travis.yml, +jdk:, + - oraclejdk7, + - oraclejdk8, +, +++ b/butterknife/src/main/java/butterknife/internal/ButterKnifeProcessor.java, +    int id = element.getAnnotation(InjectView.class).value();, +    Set<Integer> seenIds = new LinkedHashSet<Integer>();, +    for (int id : ids) {, +      if (!seenIds.add(id)) {, +            annotationClass.getSimpleName(), id, enclosingElement.getQualifiedName(),, +    }, +    viewInjector.addListeners(ids, listener, method, binding);, +++ b/.travis.yml, +jdk:, + - oraclejdk7, + - oraclejdk8, +, +++ b/butterknife/src/main/java/butterknife/internal/ButterKnifeProcessor.java, +    int id = element.getAnnotation(InjectView.class).value();, +    Set<Integer> seenIds = new LinkedHashSet<Integer>();, +    for (int id : ids) {, +      if (!seenIds.add(id)) {, +            annotationClass.getSimpleName(), id, enclosingElement.getQualifiedName(),, +    }, +    viewInjector.addListeners(ids, listener, method, binding);, +++ b/butterknife/src/main/java/butterknife/internal/ViewInjection.java, +  private final LinkedHashMap<ListenerClass, Map<ListenerMethod, Set<ListenerBinding>>>, +      listenerBindings = new LinkedHashMap<ListenerClass,, +      Map<ListenerMethod, Set<ListenerBinding>>>();, +  public Map<ListenerClass, Map<ListenerMethod, Set<ListenerBinding>>> getListenerBindings() {, +    Map<ListenerMethod, Set<ListenerBinding>> methods = listenerBindings.get(listener);, +    Set<ListenerBinding> set = null;, +      methods = new LinkedHashMap<ListenerMethod, Set<ListenerBinding>>();, +    } else {, +      set = methods.get(method);, +    if (set == null) {, +      set = new LinkedHashSet<ListenerBinding>();, +      methods.put(method, set);, +    set.add(binding);, +    for (Map<ListenerMethod, Set<ListenerBinding>> methodBinding : listenerBindings.values()) {, +      for (Set<ListenerBinding> set : methodBinding.values()) {, +        for (ListenerBinding binding : set) {, +    }, +++ b/.travis.yml, +jdk:, + - oraclejdk7, + - oraclejdk8, +, +++ b/butterknife/src/main/java/butterknife/internal/ButterKnifeProcessor.java, +    int id = element.getAnnotation(InjectView.class).value();, +    Set<Integer> seenIds = new LinkedHashSet<Integer>();, +    for (int id : ids) {, +      if (!seenIds.add(id)) {, +            annotationClass.getSimpleName(), id, enclosingElement.getQualifiedName(),, +    }, +    viewInjector.addListeners(ids, listener, method, binding);, +++ b/butterknife/src/main/java/butterknife/internal/ViewInjection.java, +  private final LinkedHashMap<ListenerClass, Map<ListenerMethod, Set<ListenerBinding>>>, +      listenerBindings = new LinkedHashMap<ListenerClass,, +      Map<ListenerMethod, Set<ListenerBinding>>>();, +  public Map<ListenerClass, Map<ListenerMethod, Set<ListenerBinding>>> getListenerBindings() {, +    Map<ListenerMethod, Set<ListenerBinding>> methods = listenerBindings.get(listener);, +    Set<ListenerBinding> set = null;, +      methods = new LinkedHashMap<ListenerMethod, Set<ListenerBinding>>();, +    } else {, +      set = methods.get(method);, +    if (set == null) {, +      set = new LinkedHashSet<ListenerBinding>();, +      methods.put(method, set);, +    set.add(binding);, +    for (Map<ListenerMethod, Set<ListenerBinding>> methodBinding : listenerBindings.values()) {, +      for (Set<ListenerBinding> set : methodBinding.values()) {, +        for (ListenerBinding binding : set) {, +    }, +++ b/butterknife/src/main/java/butterknife/internal/ViewInjector.java, +import java.util.Iterator;, +import java.util.Set;, +  void addListeners(int[] ids, ListenerClass listener, ListenerMethod method,, +    for (int id : ids) {, +    }, +    Map<ListenerClass, Map<ListenerMethod, Set<ListenerBinding>>> bindings =, +    for (Map.Entry<ListenerClass, Map<ListenerMethod, Set<ListenerBinding>>> e, +        : bindings.entrySet()) {, +      Map<ListenerMethod, Set<ListenerBinding>> methodBindings = e.getValue();, +          Set<ListenerBinding> set = methodBindings.get(method);, +          Iterator<ListenerBinding> iterator = set.iterator();, +, +          while (iterator.hasNext()) {, +            ListenerBinding binding = iterator.next();, +            if (iterator.hasNext()) {, +              builder.append("\n").append("          ");, +            }, +          }, +++ b/.travis.yml]