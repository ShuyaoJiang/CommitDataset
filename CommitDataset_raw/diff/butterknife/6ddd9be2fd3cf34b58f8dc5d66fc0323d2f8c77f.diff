[+++ b/CHANGELOG.md, +Version 8.3.0 *(2016-08-23)*, +----------------------------, +, + * New: Support for Jack compiler in application projects., + * Fix: Generate ~20% less code and ~40% less methods., + * Fix: Allow `@BindView` to reference types which are generated by other annotation processors., + * Experimental: The generated view binding class can now be used directly. This allows ProGuard shrinking,, +   optimization, and obfuscation to work without any rules being needed. For a class `Test`, the binding, +   class will be named `Test_ViewBinding`. Calling its constructor will bind the instance passed in, and, +   the create object is also the implementation of `Unbinder` that can be used to unbind the views., +   Note: The API of this generated code is subject to backwards-incompatible changes until v9.0., +, +, +++ b/CHANGELOG.md, +Version 8.3.0 *(2016-08-23)*, +----------------------------, +, + * New: Support for Jack compiler in application projects., + * Fix: Generate ~20% less code and ~40% less methods., + * Fix: Allow `@BindView` to reference types which are generated by other annotation processors., + * Experimental: The generated view binding class can now be used directly. This allows ProGuard shrinking,, +   optimization, and obfuscation to work without any rules being needed. For a class `Test`, the binding, +   class will be named `Test_ViewBinding`. Calling its constructor will bind the instance passed in, and, +   the create object is also the implementation of `Unbinder` that can be used to unbind the views., +   Note: The API of this generated code is subject to backwards-incompatible changes until v9.0., +, +, +++ b/README.md, +  compile 'com.jakewharton:butterknife:8.3.0', +  apt 'com.jakewharton:butterknife-compiler:8.3.0', +    classpath 'com.jakewharton:butterknife-gradle-plugin:8.3.0', +++ b/CHANGELOG.md, +Version 8.3.0 *(2016-08-23)*, +----------------------------, +, + * New: Support for Jack compiler in application projects., + * Fix: Generate ~20% less code and ~40% less methods., + * Fix: Allow `@BindView` to reference types which are generated by other annotation processors., + * Experimental: The generated view binding class can now be used directly. This allows ProGuard shrinking,, +   optimization, and obfuscation to work without any rules being needed. For a class `Test`, the binding, +   class will be named `Test_ViewBinding`. Calling its constructor will bind the instance passed in, and, +   the create object is also the implementation of `Unbinder` that can be used to unbind the views., +   Note: The API of this generated code is subject to backwards-incompatible changes until v9.0., +, +, +++ b/README.md, +  compile 'com.jakewharton:butterknife:8.3.0', +  apt 'com.jakewharton:butterknife-compiler:8.3.0', +    classpath 'com.jakewharton:butterknife-gradle-plugin:8.3.0', +++ b/gradle.properties, +VERSION_NAME=8.3.0]