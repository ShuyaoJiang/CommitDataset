[+++ b/.travis.yml, +  - oraclejdk7, +++ b/.travis.yml, +  - oraclejdk7, +++ b/README.md, + * Eliminate `findViewById` calls by using `@BindView` on fields., +  @BindView(R.id.user) EditText username;, +  @BindView(R.id.pass) EditText password;, +++ b/.travis.yml, +  - oraclejdk7, +++ b/README.md, + * Eliminate `findViewById` calls by using `@BindView` on fields., +  @BindView(R.id.user) EditText username;, +  @BindView(R.id.pass) EditText password;, +++ b/build.gradle, +      classpath 'com.android.tools.build:gradle:1.3.1', +++ b/.travis.yml, +  - oraclejdk7, +++ b/README.md, + * Eliminate `findViewById` calls by using `@BindView` on fields., +  @BindView(R.id.user) EditText username;, +  @BindView(R.id.pass) EditText password;, +++ b/build.gradle, +      classpath 'com.android.tools.build:gradle:1.3.1', +++ /dev/null, +++ b/.travis.yml, +  - oraclejdk7, +++ b/README.md, + * Eliminate `findViewById` calls by using `@BindView` on fields., +  @BindView(R.id.user) EditText username;, +  @BindView(R.id.pass) EditText password;, +++ b/build.gradle, +      classpath 'com.android.tools.build:gradle:1.3.1', +++ /dev/null, +++ b/butterknife-annotations/src/main/java/butterknife/BindView.java, +package butterknife;, +, +import android.support.annotation.IdRes;, +import java.lang.annotation.Retention;, +import java.lang.annotation.Target;, +, +import static java.lang.annotation.ElementType.FIELD;, +import static java.lang.annotation.RetentionPolicy.CLASS;, +, +/**, + * Bind a field to the view for the specified ID. The view will automatically be cast to the field, + * type., + * <pre><code>, + * {@literal @}BindView(R.id.title) TextView title;, + * </code></pre>, + */, +@Retention(CLASS) @Target(FIELD), +public @interface BindView {, +  /** View ID to which the field will be bound. */, +  @IdRes int[] value();, +}, +++ b/.travis.yml, +  - oraclejdk7, +++ b/README.md, + * Eliminate `findViewById` calls by using `@BindView` on fields., +  @BindView(R.id.user) EditText username;, +  @BindView(R.id.pass) EditText password;, +++ b/build.gradle, +      classpath 'com.android.tools.build:gradle:1.3.1', +++ /dev/null, +++ b/butterknife-annotations/src/main/java/butterknife/BindView.java, +package butterknife;, +, +import android.support.annotation.IdRes;, +import java.lang.annotation.Retention;, +import java.lang.annotation.Target;, +, +import static java.lang.annotation.ElementType.FIELD;, +import static java.lang.annotation.RetentionPolicy.CLASS;, +, +/**, + * Bind a field to the view for the specified ID. The view will automatically be cast to the field, + * type., + * <pre><code>, + * {@literal @}BindView(R.id.title) TextView title;, + * </code></pre>, + */, +@Retention(CLASS) @Target(FIELD), +public @interface BindView {, +  /** View ID to which the field will be bound. */, +  @IdRes int[] value();, +}, +++ b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java, +import butterknife.BindView;, +    types.add(BindView.class.getCanonicalName());, +    // Process each @BindView element., +    for (Element element : env.getElementsAnnotatedWith(BindView.class)) {, +        logParsingError(element, BindView.class, e);, +    if (isInaccessibleViaGeneratedCode(BindView.class, "fields", element), +        || isBindingInWrongPackage(BindView.class, element)) {, +      error(element, "@%s must be a List or array. (%s.%s)", BindView.class.getSimpleName(),, +          BindView.class.getSimpleName(), enclosingElement.getQualifiedName(),, +          element.getSimpleName());, +    int[] ids = element.getAnnotation(BindView.class).value();, +          BindView.class.getSimpleName(), Arrays.toString(ids), enclosingElement.getQualifiedName(),]