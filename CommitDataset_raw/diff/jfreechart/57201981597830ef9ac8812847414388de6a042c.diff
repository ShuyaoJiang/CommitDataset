[+++ b/source/org/jfree/chart/renderer/xy/XYItemRenderer.java, +     * Returns the plot that this renderer has been assigned to., +     * @return The plot., +    public XYPlot getPlot();, +, +    /**, +     * Sets the plot that this renderer is assigned to.  This method will be, +     * called by the plot class...you do not need to call it yourself., +     *, +     * @param plot  the plot., +     */, +    public void setPlot(XYPlot plot);, +     * Returns the lower and upper bounds (range) of the x-values in the, +     * specified dataset., +     *, +     * @param dataset  the dataset (<code>null</code> permitted)., +     *, +     * @return The range., +     */, +    public Range findDomainBounds(XYDataset dataset);, +, +    /**, +     * Returns the lower and upper bounds (range) of the y-values in the, +     * specified dataset.  The implementation of this method will take, +     * into account the presentation used by the renderers (for example,, +     * a renderer that "stacks" values will return a bigger range than, +     * a renderer that doesn't., +     *, +     * @param dataset  the dataset (<code>null</code> permitted)., +     *, +     * @return The range (or <code>null</code> if the dataset is, +     *         <code>null</code> or empty)., +     */, +    public Range findRangeBounds(XYDataset dataset);, +, +    /**, +     * Add a renderer change listener., +     *, +     * @param listener  the listener., +     *, +     * @see #removeChangeListener(RendererChangeListener), +     */, +    public void addChangeListener(RendererChangeListener listener);, +, +    /**, +     * Removes a change listener., +     *, +     * @param listener  the listener., +     *, +     * @see #addChangeListener(RendererChangeListener), +     */, +    public void removeChangeListener(RendererChangeListener listener);, +, +, +    //// VISIBLE //////////////////////////////////////////////////////////////, +, +    /**, +     *, +     * @see #setSeriesVisible(int, Boolean), +     *, +     * @see #getSeriesVisible(int), +     *, +     * @see #getSeriesVisible(int), +     *, +     * @see #setBaseSeriesVisible(boolean), +     *, +     * @see #getBaseSeriesVisible(), +     *, +     * @see #getBaseSeriesVisible(), +     *, +     * @see #setSeriesVisibleInLegend(int, Boolean), +     *, +     * @see #getSeriesVisibleInLegend(int), +     *, +     * @see #getSeriesVisibleInLegend(int), +     *, +     * @see #setBaseSeriesVisibleInLegend(boolean), +     *, +     * @see #getBaseSeriesVisibleInLegend(), +     *, +     * @see #getBaseSeriesVisibleInLegend(), +, +    //// PAINT ////////////////////////////////////////////////////////////////, +     *, +     * @see #setSeriesPaint(int, Paint), +     *, +     * @see #getSeriesPaint(int), +     *, +     * @see #setBasePaint(Paint), +     *, +     * @see #getBasePaint(), +    //// OUTLINE PAINT ////////////////////////////////////////////////////////, +     *, +     * @see #setSeriesOutlinePaint(int, Paint), +     *, +     * @see #getSeriesOutlinePaint(int), +     *, +     * @see #setBaseOutlinePaint(Paint), +     *, +     * @see #getBaseOutlinePaint()]