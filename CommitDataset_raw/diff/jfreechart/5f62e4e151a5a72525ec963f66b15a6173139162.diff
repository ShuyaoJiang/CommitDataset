[+++ b/ChangeLog, +2007-10-31  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/data/ComparableObjectSeries.java, +	(hashCode): Faster implementation,, +	* source/org/jfree/data/time/TimeSeries.java, +	(hashCode): Likewise,, +	* source/org/jfree/data/xy/XYSeriesTests.java, +	(hashCode): Likewise., +, +	(drawRangeMarker): Use adjusted data area, and call super to handle, +++ b/ChangeLog, +2007-10-31  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/data/ComparableObjectSeries.java, +	(hashCode): Faster implementation,, +	* source/org/jfree/data/time/TimeSeries.java, +	(hashCode): Likewise,, +	* source/org/jfree/data/xy/XYSeriesTests.java, +	(hashCode): Likewise., +, +	(drawRangeMarker): Use adjusted data area, and call super to handle, +++ b/source/org/jfree/data/ComparableObjectSeries.java, + * 19-Oct-2006 : New class (DG);, + * 31-Oct-2007 : Implemented faster hashCode() (DG);, +        // it is too slow to look at every data item, so let's just look at, +        // the first, middle and last items..., +        int count = getItemCount();, +        if (count > 0) {, +            ComparableObjectItem item = getDataItem(0);, +            result = 29 * result + item.hashCode();, +        }, +        if (count > 1) {, +            ComparableObjectItem item = getDataItem(count - 1);, +            result = 29 * result + item.hashCode();, +        }, +        if (count > 2) {, +            ComparableObjectItem item = getDataItem(count / 2);, +            result = 29 * result + item.hashCode();, +        }, +++ b/ChangeLog, +2007-10-31  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/data/ComparableObjectSeries.java, +	(hashCode): Faster implementation,, +	* source/org/jfree/data/time/TimeSeries.java, +	(hashCode): Likewise,, +	* source/org/jfree/data/xy/XYSeriesTests.java, +	(hashCode): Likewise., +, +	(drawRangeMarker): Use adjusted data area, and call super to handle, +++ b/source/org/jfree/data/ComparableObjectSeries.java, + * 19-Oct-2006 : New class (DG);, + * 31-Oct-2007 : Implemented faster hashCode() (DG);, +        // it is too slow to look at every data item, so let's just look at, +        // the first, middle and last items..., +        int count = getItemCount();, +        if (count > 0) {, +            ComparableObjectItem item = getDataItem(0);, +            result = 29 * result + item.hashCode();, +        }, +        if (count > 1) {, +            ComparableObjectItem item = getDataItem(count - 1);, +            result = 29 * result + item.hashCode();, +        }, +        if (count > 2) {, +            ComparableObjectItem item = getDataItem(count / 2);, +            result = 29 * result + item.hashCode();, +        }, +++ b/source/org/jfree/data/time/TimeSeries.java, + * 31-Oct-2007 : Implemented faster hashCode() (DG);, +        int result = super.hashCode();, +        result = 29 * result + (this.domain != null ? this.domain.hashCode() , +                : 0);, +        // it is too slow to look at every data item, so let's just look at, +        // the first, middle and last items..., +        int count = getItemCount();, +        if (count > 0) {, +            TimeSeriesDataItem item = getDataItem(0);, +            result = 29 * result + item.hashCode();, +        }, +        if (count > 1) {, +            TimeSeriesDataItem item = getDataItem(count - 1);, +            result = 29 * result + item.hashCode();, +        }, +        if (count > 2) {, +            TimeSeriesDataItem item = getDataItem(count / 2);, +            result = 29 * result + item.hashCode();, +        }, +++ b/ChangeLog, +2007-10-31  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/data/ComparableObjectSeries.java, +	(hashCode): Faster implementation,, +	* source/org/jfree/data/time/TimeSeries.java, +	(hashCode): Likewise,, +	* source/org/jfree/data/xy/XYSeriesTests.java, +	(hashCode): Likewise., +, +	(drawRangeMarker): Use adjusted data area, and call super to handle]