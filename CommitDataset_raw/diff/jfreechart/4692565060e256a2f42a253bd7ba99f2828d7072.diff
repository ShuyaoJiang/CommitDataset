[+++ b/ChangeLog, +	* source/org/jfree/chart/axis/SegmentedTimeline.java, +	(FIRST_MONDAY_AFTER_1900): Deprecated,, +	(NO_DST_TIME_ZONE): Likewise,, +	(DEFAULT_TIME_ZONE): Likewise,, +	(workingCalendarNoDST): Initialise in constructor,, +	(SegmentedTimeline): Initialise workingCalendarNoDST,, +	(firstMondayAfter1900): New method,, +	(newMondayThroughFridayTimeline): Use new method for first monday,, +	(newFifteenMinuteTimeline): Likewise,, +	* tests/org/jfree/chart/axis/junit/SegmentedTimelineTests2.java: , +	Save and restore time zone in all tests., +, +2007-07-11  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +	* source/org/jfree/chart/axis/SegmentedTimeline.java, +	(FIRST_MONDAY_AFTER_1900): Deprecated,, +	(NO_DST_TIME_ZONE): Likewise,, +	(DEFAULT_TIME_ZONE): Likewise,, +	(workingCalendarNoDST): Initialise in constructor,, +	(SegmentedTimeline): Initialise workingCalendarNoDST,, +	(firstMondayAfter1900): New method,, +	(newMondayThroughFridayTimeline): Use new method for first monday,, +	(newFifteenMinuteTimeline): Likewise,, +	* tests/org/jfree/chart/axis/junit/SegmentedTimelineTests2.java: , +	Save and restore time zone in all tests., +, +2007-07-11  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/axis/SegmentedTimeline.java, + * 11-Jul-2007 : Fixed time zone bugs (DG);, +import java.util.Locale;, +     * , +     * @deprecated As of 1.0.7.  This field doesn't take into account changes, +     *         to the default time zone., +     * , +     * @deprecated As of 1.0.7.  This field is initialised based on the , +     *         default time zone, and doesn't take into account subsequent , +     *         changes to the default., +     * , +     * @deprecated As of 1.0.7.  When the default time zone is required,, +     *         just call <code>TimeZone.getDefault()</code>., +    private Calendar workingCalendarNoDST;, +        int offset = TimeZone.getDefault().getRawOffset();, +        TimeZone z = new SimpleTimeZone(offset, "UTC-" + offset);        , +        this.workingCalendarNoDST = new GregorianCalendar(z, , +                Locale.getDefault());, +    }, +    /**, +     * Returns the milliseconds for midnight of the first Monday after , +     * 1-Jan-1900, ignoring daylight savings., +     * , +     * @return The milliseconds., +     * , +     * @since 1.0.7, +     */, +    public static long firstMondayAfter1900() {, +        int offset = TimeZone.getDefault().getRawOffset();, +        TimeZone z = new SimpleTimeZone(offset, "UTC-" + offset);        , +        , +        // calculate midnight of first monday after 1/1/1900 relative to , +        // current locale, +        Calendar cal = new GregorianCalendar(z);, +        cal.set(1900, 0, 1, 0, 0, 0);, +        cal.set(Calendar.MILLISECOND, 0);, +        while (cal.get(Calendar.DAY_OF_WEEK) != Calendar.MONDAY) {, +            cal.add(Calendar.DATE, 1);, +        }, +        //return cal.getTimeInMillis();, +        // preceding code won't work with JDK 1.3, +        return cal.getTime().getTime();  , +        timeline.setStartTime(firstMondayAfter1900());, +        SegmentedTimeline timeline = new SegmentedTimeline(, +                FIFTEEN_MINUTE_SEGMENT_SIZE, 28, 68);, +        timeline.setStartTime(firstMondayAfter1900() + 36 , +                * timeline.getSegmentSize());, +++ b/ChangeLog, +	* source/org/jfree/chart/axis/SegmentedTimeline.java, +	(FIRST_MONDAY_AFTER_1900): Deprecated,, +	(NO_DST_TIME_ZONE): Likewise,, +	(DEFAULT_TIME_ZONE): Likewise,, +	(workingCalendarNoDST): Initialise in constructor,, +	(SegmentedTimeline): Initialise workingCalendarNoDST,, +	(firstMondayAfter1900): New method,, +	(newMondayThroughFridayTimeline): Use new method for first monday,, +	(newFifteenMinuteTimeline): Likewise,, +	* tests/org/jfree/chart/axis/junit/SegmentedTimelineTests2.java: , +	Save and restore time zone in all tests., +, +2007-07-11  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/axis/SegmentedTimeline.java, + * 11-Jul-2007 : Fixed time zone bugs (DG);, +import java.util.Locale;, +     * , +     * @deprecated As of 1.0.7.  This field doesn't take into account changes, +     *         to the default time zone., +     * , +     * @deprecated As of 1.0.7.  This field is initialised based on the ]