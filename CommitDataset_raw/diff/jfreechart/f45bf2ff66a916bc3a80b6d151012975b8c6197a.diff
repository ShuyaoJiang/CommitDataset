[+++ b/ChangeLog, +2008-03-25  David Gilbert  <david.gilbert@object-refinery.com>, +, +    Patch 1913751:, +    * source/org/jfree/chart/plot/XYPlot.java, +    (addDomainMarker(int, Marker, Layer, boolean)): New method,, +    (removeDomainMarker(int, Marker, Layer, boolean)): Likewise,, +    (addRangeMarker(int, Marker, Layer, boolean)): Likewise,, +    (removeRangeMarker(int, Marker, Layer, boolean)): Likewise,, +    (addAnnotation(XYAnnotation, boolean)): Likewise,, +    (removeAnnotation(XYAnnotation, boolean)): Likewise., +, +++ b/ChangeLog, +2008-03-25  David Gilbert  <david.gilbert@object-refinery.com>, +, +    Patch 1913751:, +    * source/org/jfree/chart/plot/XYPlot.java, +    (addDomainMarker(int, Marker, Layer, boolean)): New method,, +    (removeDomainMarker(int, Marker, Layer, boolean)): Likewise,, +    (addRangeMarker(int, Marker, Layer, boolean)): Likewise,, +    (removeRangeMarker(int, Marker, Layer, boolean)): Likewise,, +    (addAnnotation(XYAnnotation, boolean)): Likewise,, +    (removeAnnotation(XYAnnotation, boolean)): Likewise., +, +++ b/source/org/jfree/chart/plot/XYPlot.java, + * 25-Mar-2008 : Added new methods with optional notification - see patch, + *               1913751 (DG);, +    	addDomainMarker(index, marker, layer, true);, +    }, +, +    /**, +     * Adds a marker for a specific dataset/renderer and, if requested, sends a , +     * {@link PlotChangeEvent} to all registered listeners., +     * <P>, +     * Typically a marker will be drawn by the renderer as a line perpendicular, +     * to the domain axis (that the renderer is mapped to), however this is, +     * entirely up to the renderer., +     *, +     * @param index  the dataset/renderer index., +     * @param marker  the marker., +     * @param layer  the layer (foreground or background)., +     * @param notify  notify listeners?, +     * , +     * @since 1.0.10, +     */, +    public void addDomainMarker(int index, Marker marker, Layer layer, , +    		boolean notify) {, +        if (notify) {, +    }, +    	return removeDomainMarker(index, marker, layer, true);, +    }, +, +    /**, +     * Removes a marker for a specific dataset/renderer and, if requested, , +     * sends a {@link PlotChangeEvent} to all registered listeners., +     *, +     * @param index  the dataset/renderer index., +     * @param marker  the marker., +     * @param layer  the layer (foreground or background)., +     * @param notify  notify listeners?, +     *, +     * @return A boolean indicating whether or not the marker was actually , +     *         removed., +     *, +     * @since 1.0.10, +     */, +    public boolean removeDomainMarker(int index, Marker marker, Layer layer,, +    		boolean notify) {, +        if (removed && notify) {, +    	addRangeMarker(index, marker, layer, true);, +    }, +    , +    /**, +     * Adds a marker for a specific dataset/renderer and, if requested, sends a, +     * {@link PlotChangeEvent} to all registered listeners., +     * <P>, +     * Typically a marker will be drawn by the renderer as a line perpendicular, +     * to the range axis, however this is entirely up to the renderer., +     *, +     * @param index  the dataset/renderer index., +     * @param marker  the marker., +     * @param layer  the layer (foreground or background)., +     * @param notify  notify listeners?, +     * , +     * @since 1.0.10, +     */, +    public void addRangeMarker(int index, Marker marker, Layer layer, , +    		boolean notify) {, +        if (notify) {, +    }, +    	return removeRangeMarker(index, marker, layer, true);, +    }, +    , +    /**, +     * Removes a marker for a specific dataset/renderer and sends a, +     * {@link PlotChangeEvent} to all registered listeners., +     *, +     * @param index  the dataset/renderer index., +     * @param marker  the marker., +     * @param layer  the layer (foreground or background).]