[+++ b/swt/org/jfree/experimental/chart/swt/editor/SWTAxisEditor.java, +        this.label = new Text(general, SWT.BORDER);, +            this.label.setText(axis.getLabel());, +        this.label.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, , +                false));, +        this.labelFontField = new Text(general, SWT.BORDER);, +        this.labelFontField.setText(this.labelFont.toString());, +        this.labelFontField.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, , +                true, false));, +                        dlg.setFontList(new FontData[] { , +                                SWTAxisEditor.this.labelFont });, +                            if (SWTAxisEditor.this.font != null) {, +                                SWTAxisEditor.this.font.dispose();, +                            SWTAxisEditor.this.font = new Font(, +                                    getShell().getDisplay(), dlg.getFontList());, +                            SWTAxisEditor.this.labelFontField.setText(, +                                    SWTAxisEditor.this.font.getFontData()[0], +                                    .toString());, +                            SWTAxisEditor.this.labelFont , +                                    = SWTAxisEditor.this.font.getFontData()[0];, +                        dlg.setRGB(SWTAxisEditor.this.labelPaintColor.getRGB());, +                            SWTAxisEditor.this.labelPaintColor = new Color(, +                                    getDisplay(), rgb);, +                            colorCanvas.setColor(, +                                    SWTAxisEditor.this.labelPaintColor);, +        this.otherTabs = new TabFolder(other, SWT.NONE);, +        TabItem item1 = new TabItem(this.otherTabs, SWT.NONE);, +        Composite ticks = new Composite(this.otherTabs, SWT.NONE);, +        this.showTickLabelsCheckBox = new Button(ticks, SWT.CHECK);, +        this.showTickLabelsCheckBox.setText(localizationResources.getString(, +        this.showTickLabelsCheckBox.setSelection(axis.isTickLabelsVisible());, +        this.showTickLabelsCheckBox.setLayoutData(new GridData(SWT.FILL, , +                SWT.CENTER, true, false, 3, 1));, +        this.tickLabelFontField = new Text(ticks, SWT.BORDER);, +        this.tickLabelFontField.setText(this.tickLabelFont.toString());, +        this.tickLabelFontField.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, , +                        dlg.setFontList(new FontData[] {, +                                SWTAxisEditor.this.tickLabelFont});, +                            if (SWTAxisEditor.this.font != null) {, +                                SWTAxisEditor.this.font.dispose();, +                            }, +                            // Create the new font and set it into the title , +                            // label, +                            SWTAxisEditor.this.font = new Font(, +                                    getShell().getDisplay(), dlg.getFontList());, +                            SWTAxisEditor.this.tickLabelFontField.setText(, +                                    SWTAxisEditor.this.font.getFontData()[0], +                                    .toString());, +                            SWTAxisEditor.this.tickLabelFont , +                                    = SWTAxisEditor.this.font.getFontData()[0];, +        this.showTickMarksCheckBox = new Button(ticks, SWT.CHECK);, +        this.showTickMarksCheckBox.setText(localizationResources.getString(, +        this.showTickMarksCheckBox.setSelection(axis.isTickMarksVisible());, +        this.showTickMarksCheckBox.setLayoutData(new GridData( SWT.FILL, , +                SWT.CENTER, true, false, 3, 1));, +        return SWTUtils.toAwtFont(getDisplay(), this.tickLabelFont, true);, +        axis.setTickMarksVisible(this.showTickMarksCheckBox.getSelection());, +        axis.setTickLabelsVisible(this.showTickLabelsCheckBox.getSelection());, +++ b/swt/org/jfree/experimental/chart/swt/editor/SWTAxisEditor.java, +        this.label = new Text(general, SWT.BORDER);, +            this.label.setText(axis.getLabel());, +        this.label.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, , +                false));, +        this.labelFontField = new Text(general, SWT.BORDER);, +        this.labelFontField.setText(this.labelFont.toString());, +        this.labelFontField.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, , +                true, false));, +                        dlg.setFontList(new FontData[] { , +                                SWTAxisEditor.this.labelFont });, +                            if (SWTAxisEditor.this.font != null) {, +                                SWTAxisEditor.this.font.dispose();, +                            SWTAxisEditor.this.font = new Font(, +                                    getShell().getDisplay(), dlg.getFontList());, +                            SWTAxisEditor.this.labelFontField.setText(, +                                    SWTAxisEditor.this.font.getFontData()[0], +                                    .toString());, +                            SWTAxisEditor.this.labelFont , +                                    = SWTAxisEditor.this.font.getFontData()[0];, +                        dlg.setRGB(SWTAxisEditor.this.labelPaintColor.getRGB());, +                            SWTAxisEditor.this.labelPaintColor = new Color(, +                                    getDisplay(), rgb);, +                            colorCanvas.setColor(, +                                    SWTAxisEditor.this.labelPaintColor);, +        this.otherTabs = new TabFolder(other, SWT.NONE);, +        TabItem item1 = new TabItem(this.otherTabs, SWT.NONE);, +        Composite ticks = new Composite(this.otherTabs, SWT.NONE);, +        this.showTickLabelsCheckBox = new Button(ticks, SWT.CHECK);, +        this.showTickLabelsCheckBox.setText(localizationResources.getString(, +        this.showTickLabelsCheckBox.setSelection(axis.isTickLabelsVisible());, +        this.showTickLabelsCheckBox.setLayoutData(new GridData(SWT.FILL, , +                SWT.CENTER, true, false, 3, 1));, +        this.tickLabelFontField = new Text(ticks, SWT.BORDER);, +        this.tickLabelFontField.setText(this.tickLabelFont.toString());, +        this.tickLabelFontField.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, , +                        dlg.setFontList(new FontData[] {, +                                SWTAxisEditor.this.tickLabelFont});, +                            if (SWTAxisEditor.this.font != null) {, +                                SWTAxisEditor.this.font.dispose();, +                            }, +                            // Create the new font and set it into the title ]