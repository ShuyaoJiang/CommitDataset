[+++ b/ChangeLog, +    Bug 2612649:, +    * source/org/jfree/chart/editor/DefaultPlotEditor.java, +    (DefaultPlotEditor): Added null Stroke to available options,, +    (attemptOutlineStrokeSelection): Use current stroke., +, +2009-02-27  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +    Bug 2612649:, +    * source/org/jfree/chart/editor/DefaultPlotEditor.java, +    (DefaultPlotEditor): Added null Stroke to available options,, +    (attemptOutlineStrokeSelection): Use current stroke., +, +2009-02-27  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/editor/DefaultPlotEditor.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2009, by Object Refinery Limited and Contributors., + * 27-Feb-2009 : Fixed bug 2612649, NullPointerException (DG);, +    /** The stroke used to draw the outline of the plot. */, +        this.availableStrokeSamples = new StrokeSample[4];, +        this.availableStrokeSamples[0] = new StrokeSample(null);, +        this.availableStrokeSamples[1] = new StrokeSample(, +                new BasicStroke(1.0f));, +        this.availableStrokeSamples[2] = new StrokeSample(, +                new BasicStroke(2.0f));, +        this.availableStrokeSamples[3] = new StrokeSample(, +                new BasicStroke(3.0f));, +        panel.setBorder(BorderFactory.createTitledBorder(, +                BorderFactory.createEtchedBorder(), plot.getPlotType(), +                + localizationResources.getString(":")));, +        general.setBorder(BorderFactory.createTitledBorder(, +                localizationResources.getString("General")));, +        interior.add(new JLabel(localizationResources.getString(, +                "Outline_stroke")));, +        interior.add(new JLabel(localizationResources.getString(, +                "Outline_Paint")));, +        interior.add(new JLabel(localizationResources.getString(, +                "Background_paint")));, +            boolean isVertical = this.plotOrientation.equals(, +                    PlotOrientation.VERTICAL);, +            int index = isVertical ? ORIENTATION_VERTICAL, +                    : ORIENTATION_HORIZONTAL;, +            interior.add(new JLabel(localizationResources.getString(, +                    "Orientation")));, +            interior.add(new JLabel(localizationResources.getString(, +                    "Draw_lines")));, +            interior.add(new JLabel(localizationResources.getString(, +                    "Draw_shapes")));, +        this.domainAxisPropertyPanel = DefaultAxisEditor.getInstance(, +                domainAxis);, +                    BorderFactory.createEmptyBorder(2, 2, 2, 2));, +            tabs.add(localizationResources.getString("Domain_Axis"),, +                    this.domainAxisPropertyPanel);, +        this.rangeAxisPropertyPanel = DefaultAxisEditor.getInstance(rangeAxis);, +                    BorderFactory.createEmptyBorder(2, 2, 2, 2));, +            tabs.add(localizationResources.getString("Range_Axis"),, +                    this.rangeAxisPropertyPanel);, +        this.colorBarAxisPropertyPanel = DefaultColorBarEditor.getInstance(, +                colorBar);, +                    BorderFactory.createEmptyBorder(2, 2, 2, 2));, +            tabs.add(localizationResources.getString("Color_Bar"),, +                    this.colorBarAxisPropertyPanel);, +     * @return The current outline stroke (possibly <code>null</code>)., +        c = JColorChooser.showDialog(this, localizationResources.getString(, +                "Background_Color"), Color.blue);, +        StrokeChooserPanel panel = new StrokeChooserPanel(, +                this.outlineStrokeSample, this.availableStrokeSamples);, +        c = JColorChooser.showDialog(this, localizationResources.getString(, +                "Outline_Color"), Color.blue);, +                            this.drawLines.booleanValue());]