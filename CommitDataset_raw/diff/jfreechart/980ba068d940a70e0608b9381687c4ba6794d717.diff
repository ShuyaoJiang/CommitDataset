[+++ b/ChangeLog, +	* source/org/jfere/chart/HashUtilities.java, +	(hashCode(int, Comparable)): New method,, +	* source/org/jfree/chart/entity/CategoryLabelEntity.java, +	(equals): New method,, +	(hashCode): Likewise., +, +2007-11-13  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +	* source/org/jfere/chart/HashUtilities.java, +	(hashCode(int, Comparable)): New method,, +	* source/org/jfree/chart/entity/CategoryLabelEntity.java, +	(equals): New method,, +	(hashCode): Likewise., +, +2007-11-13  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/HashUtilities.java, +    /**, +     * Returns a hash value based on a seed value and a <code>Comparable</code>, +     * instance., +     * , +     * @param pre  the seed value., +     * @param c  the comparable (<code>null</code> permitted)., +     * , +     * @return A hash value., +     * , +     * @since 1.0.7, +     */, +    public static int hashCode(int pre, Comparable c) {, +        int h = (c != null ? c.hashCode() : 0);, +        return 37 * pre + h;, +    }, +++ b/ChangeLog, +	* source/org/jfere/chart/HashUtilities.java, +	(hashCode(int, Comparable)): New method,, +	* source/org/jfree/chart/entity/CategoryLabelEntity.java, +	(equals): New method,, +	(hashCode): Likewise., +, +2007-11-13  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/HashUtilities.java, +    /**, +     * Returns a hash value based on a seed value and a <code>Comparable</code>, +     * instance., +     * , +     * @param pre  the seed value., +     * @param c  the comparable (<code>null</code> permitted)., +     * , +     * @return A hash value., +     * , +     * @since 1.0.7, +     */, +    public static int hashCode(int pre, Comparable c) {, +        int h = (c != null ? c.hashCode() : 0);, +        return 37 * pre + h;, +    }, +++ b/source/org/jfree/chart/entity/CategoryLabelEntity.java, + * 13-Nov-2007 : Added equals() and hashCode() methods (DG);, +import org.jfree.chart.HashUtilities;, +import org.jfree.util.ObjectUtilities;, +     * Tests this instance for equality with an arbitrary object., +     * , +     * @param obj  the object (<code>null</code> permitted)., +     * , +     * @return A boolean., +     */, +    public boolean equals(Object obj) {, +        if (obj == this) {, +            return true;, +        }, +        if (!(obj instanceof CategoryLabelEntity)) {, +            return false;, +        }, +        CategoryLabelEntity that = (CategoryLabelEntity) obj;, +        if (!ObjectUtilities.equal(this.key, that.key)) {, +            return false;, +        }, +        return super.equals(obj);, +    }, +    , +    /**, +     * Returns a hash code for this instance., +     * , +     * @return A hash code., +     */, +    public int hashCode() {, +        int result = super.hashCode();, +        result = HashUtilities.hashCode(result, this.key);, +        return result;, +    }, +    , +    /**, +++ b/ChangeLog, +	* source/org/jfere/chart/HashUtilities.java, +	(hashCode(int, Comparable)): New method,, +	* source/org/jfree/chart/entity/CategoryLabelEntity.java, +	(equals): New method,]