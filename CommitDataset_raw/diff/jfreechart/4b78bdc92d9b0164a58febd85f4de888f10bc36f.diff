[+++ b/ChangeLog, +2009-02-12  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/data/general/DatasetUtilities.java, +    (sampleFunction2D): Delegate to new method,, +    (sampleFunction2DToSeries): New method,, +    * source/org/jfree/data/function/NormalDistributionFunction2D.java, +    (factor): New field,, +    (denominator): Likewise,, +    (NormalDistributionFunction2D): Initialise new fields,, +    (getValue): Use precomputed constants., +, +++ b/ChangeLog, +2009-02-12  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/data/general/DatasetUtilities.java, +    (sampleFunction2D): Delegate to new method,, +    (sampleFunction2DToSeries): New method,, +    * source/org/jfree/data/function/NormalDistributionFunction2D.java, +    (factor): New field,, +    (denominator): Likewise,, +    (NormalDistributionFunction2D): Initialise new fields,, +    (getValue): Use precomputed constants., +, +++ b/source/org/jfree/data/function/NormalDistributionFunction2D.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C)opyright 2004-2009, by Object Refinery Limited., + * 12-Feb-2009 : Precompute some constants from the function - see bug, + *               2572016 (DG);, +    /** Precomputed factor for the function value. */, +    private double factor;, +, +    /** Precomputed denominator for the function value. */, +    private double denominator;, +, +     * @param std  the standard deviation (> 0)., +        if (std <= 0) {, +            throw new IllegalArgumentException("Requires 'std' > 0.");, +        }, +        // calculate constant values, +        this.factor = 1 / (std * Math.sqrt(2.0 * Math.PI));, +        this.denominator = 2 * std * std;, +        double z = x - this.mean;, +        return this.factor * Math.exp(-z * z / this.denominator);, +++ b/ChangeLog, +2009-02-12  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/data/general/DatasetUtilities.java, +    (sampleFunction2D): Delegate to new method,, +    (sampleFunction2DToSeries): New method,, +    * source/org/jfree/data/function/NormalDistributionFunction2D.java, +    (factor): New field,, +    (denominator): Likewise,, +    (NormalDistributionFunction2D): Initialise new fields,, +    (getValue): Use precomputed constants., +, +++ b/source/org/jfree/data/function/NormalDistributionFunction2D.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C)opyright 2004-2009, by Object Refinery Limited., + * 12-Feb-2009 : Precompute some constants from the function - see bug, + *               2572016 (DG);, +    /** Precomputed factor for the function value. */, +    private double factor;, +, +    /** Precomputed denominator for the function value. */, +    private double denominator;, +, +     * @param std  the standard deviation (> 0)., +        if (std <= 0) {, +            throw new IllegalArgumentException("Requires 'std' > 0.");, +        }, +        // calculate constant values, +        this.factor = 1 / (std * Math.sqrt(2.0 * Math.PI));, +        this.denominator = 2 * std * std;, +        double z = x - this.mean;, +        return this.factor * Math.exp(-z * z / this.denominator);, +++ b/source/org/jfree/data/general/DatasetUtilities.java, + * 12-Feb-2009 : Added sampleFunction2DToSeries() method (DG);, +        // defer argument checking, +        XYSeries series = sampleFunction2DToSeries(f, start, end, samples,, +                seriesKey);, +        XYSeriesCollection collection = new XYSeriesCollection(series);, +        return collection;, +    }, +, +    /**, +     * Creates an {@link XYSeries} by sampling the specified function over a, +     * fixed range., +     *, +     * @param f  the function (<code>null</code> not permitted)., +     * @param start  the start value for the range., +     * @param end  the end value for the range., +     * @param samples  the number of sample points (must be > 1)., +     * @param seriesKey  the key to give the resulting series, +     *                   (<code>null</code> not permitted)., +     *, +     * @return A series., +     *, +     * @since 1.0.13, +     */]