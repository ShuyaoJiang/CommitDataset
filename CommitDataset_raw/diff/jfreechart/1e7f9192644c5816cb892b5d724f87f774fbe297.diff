[+++ b/ChangeLog, +2012-03-11  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Patch 3500621 by Simon Kaczor, +    * org/jfree/chart/title/LegendTitle, +    (sortOrder): New field,, +    (getSortOrder): New method,, +    (setSortOrder): Likewise,, +    (fetchLgendItems): Updated to support new sort order,, +    (equals): Likewise., +    * tests/org/jfree/chart/title/LegendTitle, +    (testEquals): Adapted for new field., +, +++ b/ChangeLog, +2012-03-11  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Patch 3500621 by Simon Kaczor, +    * org/jfree/chart/title/LegendTitle, +    (sortOrder): New field,, +    (getSortOrder): New method,, +    (setSortOrder): Likewise,, +    (fetchLgendItems): Updated to support new sort order,, +    (equals): Likewise., +    * tests/org/jfree/chart/title/LegendTitle, +    (testEquals): Adapted for new field., +, +++ b/source/org/jfree/chart/title/LegendTitle.java, + * 11-Mar-2012 : Added sort-order support - patch 3500621 by Simon Kaczor (MH);, +import org.jfree.util.SortOrder;, +     * Whether to render legend items in ascending or descending order., +     * @since 1.0.15, +     */, +    private SortOrder sortOrder;, +, +    /**, +        this.sortOrder = SortOrder.ASCENDING;, +     * Gets the order used to display legend items., +     * , +     * @return The order (never <code>null</code>)., +     * @since 1.0.15, +     */, +    public SortOrder getSortOrder() {, +        return this.sortOrder;, +    }, +, +    /**, +     * Sets the order used to display legend items., +     * , +     * @param order Specifies ascending or descending order (<code>null</code>, +     *              not permitted)., +     * @since 1.0.15, +     */, +    public void setSortOrder(SortOrder order) {, +        if (order == null) {, +            throw new IllegalArgumentException("Null 'order' argument.");, +        }, +        this.sortOrder = order;, +        notifyListeners(new TitleChangeEvent(this));, +    }, +, +    /**, +, +        if (this.sortOrder.equals(SortOrder.ASCENDING)) {, +                LegendItemCollection legendItems =, +                    this.sources[s].getLegendItems();, +                        addItemBlock(legendItems.get(i));, +                    }, +                }, +            }, +        }, +        else {, +            for (int s = this.sources.length - 1; s >= 0; s--) {, +                LegendItemCollection legendItems =, +                    this.sources[s].getLegendItems();, +                if (legendItems != null) {, +                    for (int i = legendItems.getItemCount()-1; i >= 0; i--) {, +                        addItemBlock(legendItems.get(i));, +                    }, +                }, +            }, +        }, +    }, +, +    private void addItemBlock(LegendItem item) {, +        if (!this.sortOrder.equals(that.sortOrder)) {, +            return false;, +        }, +++ b/ChangeLog, +2012-03-11  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Patch 3500621 by Simon Kaczor, +    * org/jfree/chart/title/LegendTitle, +    (sortOrder): New field,, +    (getSortOrder): New method,, +    (setSortOrder): Likewise,, +    (fetchLgendItems): Updated to support new sort order,, +    (equals): Likewise., +    * tests/org/jfree/chart/title/LegendTitle, +    (testEquals): Adapted for new field., +]