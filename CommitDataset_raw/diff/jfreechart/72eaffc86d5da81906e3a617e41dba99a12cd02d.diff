[+++ b/tests/org/jfree/chart/axis/AxisTest.java, + * 05-Aug-2013 : Extended equals for new fields (DG);, +import java.awt.font.TextAttribute;, +import java.text.AttributedString;, +import org.jfree.chart.TestUtilities;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotEquals;, +import static org.junit.Assert.assertNotSame;, +import static org.junit.Assert.assertSame;, +import org.junit.Test;, +, +public class AxisTest  {, +    @Test, +        assertNotSame(a1, a2);, +        assertSame(a1.getClass(), a2.getClass());, +        assertEquals(a1, a2);, +    @Test, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        , +        // attributed label..., +        a1.setAttributedLabel(new AttributedString("Hello World!"));, +        assertNotEquals(a1, a2);, +        a2.setAttributedLabel(new AttributedString("Hello World!"));, +        assertEquals(a1, a2);, +        , +        AttributedString l1 = a1.getAttributedLabel();, +        l1.addAttribute(TextAttribute.SUPERSCRIPT, , +                TextAttribute.SUPERSCRIPT_SUB, 1, 2);, +        a1.setAttributedLabel(l1);, +        assertNotEquals(a1, a2);, +        AttributedString l2 = a2.getAttributedLabel();, +        l2.addAttribute(TextAttribute.SUPERSCRIPT, , +                TextAttribute.SUPERSCRIPT_SUB, 1, 2);, +        a2.setAttributedLabel(l2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        , +        // label location..., +        a1.setLabelLocation(AxisLabelLocation.HIGH_END);, +        assertNotEquals(a1, a2);, +        a2.setLabelLocation(AxisLabelLocation.HIGH_END);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +        assertNotEquals(a1, a2);, +        assertEquals(a1, a2);, +    @Test, +        assertEquals(a1, a2);, +    /**, +     * Checks that serialization works, particularly with the attributed label., +     */, +    @Test, +    public void testSerialization() {, +        Axis a1 = new CategoryAxis("Test");, +        AttributedString label = new AttributedString("Axis Label");, +        label.addAttribute(TextAttribute.SUPERSCRIPT, , +                TextAttribute.SUPERSCRIPT_SUB, 1, 4);, +        a1.setAttributedLabel(label);, +        Axis a2 = (Axis) TestUtilities.serialised(a1);, +        assertEquals(a1, a2);, +    }]