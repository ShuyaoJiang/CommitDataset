[+++ b/ChangeLog, +2008-06-19  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/renderer/xy/XYBarRenderer.java, +    (findRangeBounds): New method override,, +    * tests/org/jfree/chart/renderer/xy/junit/XYBarRendererTests.java, +    (testFindRangeBounds): New test method., +, +++ b/ChangeLog, +2008-06-19  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/renderer/xy/XYBarRenderer.java, +    (findRangeBounds): New method override,, +    * tests/org/jfree/chart/renderer/xy/junit/XYBarRendererTests.java, +    (testFindRangeBounds): New test method., +, +++ b/source/org/jfree/chart/renderer/xy/XYBarRenderer.java, + * 19-Jun-2008 : Added findRangeBounds() method override to fix bug in default, + *               axis range (DG);, +     * Returns the lower and upper bounds (range) of the y-values in the, +     * specified dataset.  If the renderer is plotting the y-interval from the, +     * dataset, this is taken into account for the range., +     *, +     * @param dataset  the dataset (<code>null</code> permitted)., +     *, +     * @return The range (<code>null</code> if the dataset is, +     *         <code>null</code> or empty)., +     */, +    public Range findRangeBounds(XYDataset dataset) {, +        if (dataset != null) {, +            return DatasetUtilities.findRangeBounds(dataset,, +            		this.useYInterval);, +        }, +        else {, +            return null;, +        }, +    }, +, +    /**, +++ b/ChangeLog, +2008-06-19  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/renderer/xy/XYBarRenderer.java, +    (findRangeBounds): New method override,, +    * tests/org/jfree/chart/renderer/xy/junit/XYBarRendererTests.java, +    (testFindRangeBounds): New test method., +, +++ b/source/org/jfree/chart/renderer/xy/XYBarRenderer.java, + * 19-Jun-2008 : Added findRangeBounds() method override to fix bug in default, + *               axis range (DG);, +     * Returns the lower and upper bounds (range) of the y-values in the, +     * specified dataset.  If the renderer is plotting the y-interval from the, +     * dataset, this is taken into account for the range., +     *, +     * @param dataset  the dataset (<code>null</code> permitted)., +     *, +     * @return The range (<code>null</code> if the dataset is, +     *         <code>null</code> or empty)., +     */, +    public Range findRangeBounds(XYDataset dataset) {, +        if (dataset != null) {, +            return DatasetUtilities.findRangeBounds(dataset,, +            		this.useYInterval);, +        }, +        else {, +            return null;, +        }, +    }, +, +    /**, +++ b/tests/org/jfree/chart/renderer/xy/junit/XYBarRendererTests.java, + * 19-Jun-2008 : Added testFindRangeBounds() (DG);, +import org.jfree.data.xy.DefaultIntervalXYDataset;, +    private static final double EPSILON = 0.0000000001;, +, +    /**, +     * A simple test for the findRangeBounds() method., +     */, +    public void testFindRangeBounds() {, +        DefaultIntervalXYDataset dataset = new DefaultIntervalXYDataset();, +        double[] x = {1.0, 2.0, 3.0, 4.0};, +        double[] startx = {0.9, 1.8, 2.7, 3.6};, +        double[] endx = {1.1, 2.2, 3.3, 4.4};, +        double[] y = {1.0, 2.0, 3.0, 4.0};, +        double[] starty = {0.9, 1.8, 2.7, 3.6};, +        double[] endy = {1.1, 2.2, 3.3, 4.4};, +        double[][] data = new double[][] {x, startx, endx, y, starty, endy};, +        dataset.addSeries("Series 1", data);, +        XYBarRenderer renderer = new XYBarRenderer();, +        renderer.setUseYInterval(true);, +        Range r = renderer.findRangeBounds(dataset);, +        assertEquals(0.9, r.getLowerBound(), EPSILON);, +        assertEquals(4.4, r.getUpperBound(), EPSILON);, +, +        renderer.setUseYInterval(false);, +        r = renderer.findRangeBounds(dataset);, +        assertEquals(1.0, r.getLowerBound(), EPSILON);, +        assertEquals(4.0, r.getUpperBound(), EPSILON);, +    }, +]