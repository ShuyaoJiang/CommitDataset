[+++ b/source/org/jfree/chart/renderer/category/BarRenderer3D.java, + * 24-Aug-2014 : Add element hinting (DG);, +        if (orientation.isHorizontal()) {, +        } else {, +        if (state.getElementHinting()) {, +            beginElementGroup(g2, dataset.getRowKey(row), , +                    dataset.getColumnKey(column));, +        }, +        if (state.getElementHinting()) {, +            endElementGroup(g2);, +        }, +        CategoryItemLabelGenerator generator = getItemLabelGenerator(row, , +                column);, +++ b/source/org/jfree/chart/renderer/category/BarRenderer3D.java, + * 24-Aug-2014 : Add element hinting (DG);, +        if (orientation.isHorizontal()) {, +        } else {, +        if (state.getElementHinting()) {, +            beginElementGroup(g2, dataset.getRowKey(row), , +                    dataset.getColumnKey(column));, +        }, +        if (state.getElementHinting()) {, +            endElementGroup(g2);, +        }, +        CategoryItemLabelGenerator generator = getItemLabelGenerator(row, , +                column);, +++ b/source/org/jfree/chart/renderer/category/IntervalBarRenderer.java, + * 24-Aug-2014 : Add element hinting for JFreeSVG (DG);, + *, +         } else {, +     protected void drawInterval(Graphics2D g2, CategoryItemRendererState state,, +            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,, +            ValueAxis rangeAxis, IntervalCategoryDataset dataset, int row,, +        } else if (orientation.isVertical()) {, +        if (state.getElementHinting()) {, +            beginElementGroup(g2, dataset.getRowKey(row), , +                    dataset.getColumnKey(column));, +        }, +        if (state.getElementHinting()) {, +            endElementGroup(g2);, +        }, +++ b/source/org/jfree/chart/renderer/category/BarRenderer3D.java, + * 24-Aug-2014 : Add element hinting (DG);, +        if (orientation.isHorizontal()) {, +        } else {, +        if (state.getElementHinting()) {, +            beginElementGroup(g2, dataset.getRowKey(row), , +                    dataset.getColumnKey(column));, +        }, +        if (state.getElementHinting()) {, +            endElementGroup(g2);, +        }, +        CategoryItemLabelGenerator generator = getItemLabelGenerator(row, , +                column);, +++ b/source/org/jfree/chart/renderer/category/IntervalBarRenderer.java, + * 24-Aug-2014 : Add element hinting for JFreeSVG (DG);, + *, +         } else {, +     protected void drawInterval(Graphics2D g2, CategoryItemRendererState state,, +            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,, +            ValueAxis rangeAxis, IntervalCategoryDataset dataset, int row,, +        } else if (orientation.isVertical()) {, +        if (state.getElementHinting()) {, +            beginElementGroup(g2, dataset.getRowKey(row), , +                    dataset.getColumnKey(column));, +        }, +        if (state.getElementHinting()) {, +            endElementGroup(g2);, +        }, +++ b/source/org/jfree/chart/renderer/category/LayeredBarRenderer.java, + * 24-Aug-2014 : Add element hinting for JFreeSVG (DG);, +        if (orientation.isHorizontal()) {, +        } else if (orientation.isVertical()) {, +            CategoryItemRendererState state, Rectangle2D dataArea,, +            CategoryPlot plot, CategoryAxis domainAxis, ValueAxis rangeAxis,, +            CategoryDataset dataset, int row, int column) {, +        } else if (lclip <= 0.0) { // cases 5, 6, 7 and 8, +        } else { // cases 9, 10, 11 and 12, +        if (state.getElementHinting()) {, +            beginElementGroup(g2, dataset.getRowKey(row), , +                    dataset.getColumnKey(column));, +        }, +        , +        CategoryItemLabelGenerator generator = getItemLabelGenerator(row, , +                column);, +            CategoryItemRendererState state, Rectangle2D dataArea,, +            CategoryPlot plot, CategoryAxis domainAxis, ValueAxis rangeAxis,, +            CategoryDataset dataset, int row, int column) {, +        } else if (lclip <= 0.0) { // cases 5, 6, 7 and 8, +            } else {, +        } else { // cases 9, 10, 11 and 12, +, +        if (state.getElementHinting()) {, +            beginElementGroup(g2, dataset.getRowKey(row), , +                    dataset.getColumnKey(column));, +        }, +, +        if (isDrawBarOutline() && state.getBarWidth() , +                > BAR_OUTLINE_WIDTH_THRESHOLD) {, +            g2.setStroke(getItemOutlineStroke(row, column));]