[+++ b/source/org/jfree/chart/axis/Axis.java, + * 29-Jul-2014 : Add hint to normalise stroke for axis line (DG);, + *, +import java.awt.RenderingHints;, +        double x = dataArea.getX();, +        double y = dataArea.getY();, +            axisLine = new Line2D.Double(x, cursor, dataArea.getMaxX(), cursor);, +        } else if (edge == RectangleEdge.BOTTOM) {, +            axisLine = new Line2D.Double(x, cursor, dataArea.getMaxX(), cursor);, +        } else if (edge == RectangleEdge.LEFT) {, +            axisLine = new Line2D.Double(cursor, y, cursor, dataArea.getMaxY());, +        } else if (edge == RectangleEdge.RIGHT) {, +            axisLine = new Line2D.Double(cursor, y, cursor, dataArea.getMaxY());, +        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, , +                RenderingHints.VALUE_STROKE_NORMALIZE);, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);, +++ b/source/org/jfree/chart/axis/Axis.java, + * 29-Jul-2014 : Add hint to normalise stroke for axis line (DG);, + *, +import java.awt.RenderingHints;, +        double x = dataArea.getX();, +        double y = dataArea.getY();, +            axisLine = new Line2D.Double(x, cursor, dataArea.getMaxX(), cursor);, +        } else if (edge == RectangleEdge.BOTTOM) {, +            axisLine = new Line2D.Double(x, cursor, dataArea.getMaxX(), cursor);, +        } else if (edge == RectangleEdge.LEFT) {, +            axisLine = new Line2D.Double(cursor, y, cursor, dataArea.getMaxY());, +        } else if (edge == RectangleEdge.RIGHT) {, +            axisLine = new Line2D.Double(cursor, y, cursor, dataArea.getMaxY());, +        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, , +                RenderingHints.VALUE_STROKE_NORMALIZE);, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);, +++ b/source/org/jfree/chart/axis/CategoryAxis.java, + * 29-Jul-2014 : Add hint to normalise stroke for tick marks (DG);, + *, +import java.awt.RenderingHints;, +        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, , +                RenderingHints.VALUE_STROKE_NORMALIZE);, +        } else if (edge.equals(RectangleEdge.BOTTOM)) {, +        } else if (edge.equals(RectangleEdge.LEFT)) {, +        } else if (edge.equals(RectangleEdge.RIGHT)) {, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);, +++ b/source/org/jfree/chart/axis/Axis.java, + * 29-Jul-2014 : Add hint to normalise stroke for axis line (DG);, + *, +import java.awt.RenderingHints;, +        double x = dataArea.getX();, +        double y = dataArea.getY();, +            axisLine = new Line2D.Double(x, cursor, dataArea.getMaxX(), cursor);, +        } else if (edge == RectangleEdge.BOTTOM) {, +            axisLine = new Line2D.Double(x, cursor, dataArea.getMaxX(), cursor);, +        } else if (edge == RectangleEdge.LEFT) {, +            axisLine = new Line2D.Double(cursor, y, cursor, dataArea.getMaxY());, +        } else if (edge == RectangleEdge.RIGHT) {, +            axisLine = new Line2D.Double(cursor, y, cursor, dataArea.getMaxY());, +        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, , +                RenderingHints.VALUE_STROKE_NORMALIZE);, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);, +++ b/source/org/jfree/chart/axis/CategoryAxis.java, + * 29-Jul-2014 : Add hint to normalise stroke for tick marks (DG);, + *, +import java.awt.RenderingHints;, +        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, , +                RenderingHints.VALUE_STROKE_NORMALIZE);, +        } else if (edge.equals(RectangleEdge.BOTTOM)) {, +        } else if (edge.equals(RectangleEdge.LEFT)) {, +        } else if (edge.equals(RectangleEdge.RIGHT)) {, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);, +++ b/source/org/jfree/chart/axis/ValueAxis.java, + * 29-Jul-2014 : Add hints to normalise axis line and tick marks (DG);, +import java.awt.RenderingHints;, +     * @param g2  the graphics device ({@code null} not permitted)., +        double c = cursor;, +            axisLine = new Line2D.Double(dataArea.getX(), c, dataArea.getMaxX(),, +                    c);, +        } else if (edge == RectangleEdge.BOTTOM) {, +            axisLine = new Line2D.Double(dataArea.getX(), c, dataArea.getMaxX(),, +                    c);, +        } else if (edge == RectangleEdge.LEFT) {, +            axisLine = new Line2D.Double(c, dataArea.getY(), c, , +        } else if (edge == RectangleEdge.RIGHT) {, +            axisLine = new Line2D.Double(c, dataArea.getY(), c,, +        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, , +                RenderingHints.VALUE_STROKE_NORMALIZE);, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);, +            } else {, +            } else if (edge == RectangleEdge.LEFT, +            } else if (edge == RectangleEdge.LEFT, +        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, , +                RenderingHints.VALUE_STROKE_NORMALIZE);, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);, +            } else if (edge == RectangleEdge.RIGHT) {, +            } else if (edge == RectangleEdge.TOP) {]