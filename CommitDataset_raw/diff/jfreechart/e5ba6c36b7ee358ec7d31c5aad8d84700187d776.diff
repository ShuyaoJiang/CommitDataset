[+++ b/ChangeLog, +2009-01-14  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/axis/LogAxis.java, +    (refreshTicksHorizontal): Read minorTickCount from the tick unit,, +    (refreshTicksVertical): Likewise,, +    (createLogTickUnits): Corrected the tick unit sizes and added, +    minor tick counts,, +    * source/org/jfree/chart/util/LogFormat.java, +    (LogFormat): New constructor,, +    (getExponentFormat): New method,, +    (setExponentFormat): Likewise,, +    (equals): Test formatter field,, +    * tests/org/jfree/chart/util/junit/LogFormatTests.java, +    (testEquals): Check formatter field.    , +, +++ b/ChangeLog, +2009-01-14  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/axis/LogAxis.java, +    (refreshTicksHorizontal): Read minorTickCount from the tick unit,, +    (refreshTicksVertical): Likewise,, +    (createLogTickUnits): Corrected the tick unit sizes and added, +    minor tick counts,, +    * source/org/jfree/chart/util/LogFormat.java, +    (LogFormat): New constructor,, +    (getExponentFormat): New method,, +    (setExponentFormat): Likewise,, +    (equals): Test formatter field,, +    * tests/org/jfree/chart/util/junit/LogFormatTests.java, +    (testEquals): Check formatter field.    , +, +++ b/source/org/jfree/chart/axis/LogAxis.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2009, by Object Refinery Limited and Contributors., + * 14-Jan-2008 : Fetch minor ticks from TickUnit, and corrected, + *               createLogTickUnits() (DG); , +import org.jfree.chart.util.LogFormat;, +        int minorTickCount = this.tickUnit.getMinorTickCount();, +            for (int i = 1; i < minorTickCount; i++) {, +                double minorV = v + i * ((next - v) / minorTickCount);, +        int minorTickCount = this.tickUnit.getMinorTickCount();, +            for (int i = 1; i < minorTickCount; i++) {, +                double minorV = v + i * ((next - v) / minorTickCount);, +        NumberFormat numberFormat = new LogFormat();, +        units.add(new NumberTickUnit(0.05, numberFormat, 2));, +        units.add(new NumberTickUnit(0.1, numberFormat, 10));, +        units.add(new NumberTickUnit(0.2, numberFormat, 2));, +        units.add(new NumberTickUnit(0.5, numberFormat, 5));, +        units.add(new NumberTickUnit(1, numberFormat, 10));, +        units.add(new NumberTickUnit(2, numberFormat, 10));, +        units.add(new NumberTickUnit(3, numberFormat, 15));, +        units.add(new NumberTickUnit(4, numberFormat, 20));, +        units.add(new NumberTickUnit(5, numberFormat, 25));, +        units.add(new NumberTickUnit(6, numberFormat));, +        units.add(new NumberTickUnit(7, numberFormat));, +        units.add(new NumberTickUnit(8, numberFormat));, +        units.add(new NumberTickUnit(9, numberFormat));, +, +++ b/ChangeLog, +2009-01-14  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/axis/LogAxis.java, +    (refreshTicksHorizontal): Read minorTickCount from the tick unit,, +    (refreshTicksVertical): Likewise,, +    (createLogTickUnits): Corrected the tick unit sizes and added, +    minor tick counts,, +    * source/org/jfree/chart/util/LogFormat.java, +    (LogFormat): New constructor,, +    (getExponentFormat): New method,, +    (setExponentFormat): Likewise,, +    (equals): Test formatter field,, +    * tests/org/jfree/chart/util/junit/LogFormatTests.java, +    (testEquals): Check formatter field.    , +, +++ b/source/org/jfree/chart/axis/LogAxis.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2009, by Object Refinery Limited and Contributors., + * 14-Jan-2008 : Fetch minor ticks from TickUnit, and corrected, + *               createLogTickUnits() (DG); , +import org.jfree.chart.util.LogFormat;, +        int minorTickCount = this.tickUnit.getMinorTickCount();, +            for (int i = 1; i < minorTickCount; i++) {, +                double minorV = v + i * ((next - v) / minorTickCount);, +        int minorTickCount = this.tickUnit.getMinorTickCount();, +            for (int i = 1; i < minorTickCount; i++) {, +                double minorV = v + i * ((next - v) / minorTickCount);, +        NumberFormat numberFormat = new LogFormat();, +        units.add(new NumberTickUnit(0.05, numberFormat, 2));, +        units.add(new NumberTickUnit(0.1, numberFormat, 10));, +        units.add(new NumberTickUnit(0.2, numberFormat, 2));, +        units.add(new NumberTickUnit(0.5, numberFormat, 5));, +        units.add(new NumberTickUnit(1, numberFormat, 10));, +        units.add(new NumberTickUnit(2, numberFormat, 10));, +        units.add(new NumberTickUnit(3, numberFormat, 15));, +        units.add(new NumberTickUnit(4, numberFormat, 20));, +        units.add(new NumberTickUnit(5, numberFormat, 25));, +        units.add(new NumberTickUnit(6, numberFormat));, +        units.add(new NumberTickUnit(7, numberFormat));, +        units.add(new NumberTickUnit(8, numberFormat));]