[+++ b/ChangeLog, +2008-02-26  David Gilbert  <david.gilbert@object-refinery.com>, +, +    Bug 1897580:, +    * source/org/jfree/data/DefaultIntervalCategoryDataset.java, +    (DefaultIntervalCategoryDataset(Comparable[], Comparable[], Number[][], , +    Number[][]): Initialise seriesKeys and categoryKeys to empty arrays instead, +    of null for empty dataset,, +    (setCategoryKeys): Fixed argument check to handle empty dataset., +, +++ b/ChangeLog, +2008-02-26  David Gilbert  <david.gilbert@object-refinery.com>, +, +    Bug 1897580:, +    * source/org/jfree/data/DefaultIntervalCategoryDataset.java, +    (DefaultIntervalCategoryDataset(Comparable[], Comparable[], Number[][], , +    Number[][]): Initialise seriesKeys and categoryKeys to empty arrays instead, +    of null for empty dataset,, +    (setCategoryKeys): Fixed argument check to handle empty dataset., +, +++ b/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java, + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2008, by Jeremy Bowman and Contributors., + * 25-Feb-2008 : Fix for the special case where the dataset is empty, see bug , + *               1897580 (DG), +     * Creates a new dataset using the specified data values and automatically, +     * generated series and category keys., +     * @param starts  the starting values for the intervals (<code>null</code>, +     *                not permitted)., +     * @param ends  the ending values for the intervals (<code>null</code> not, +     *                permitted)., +     * @param seriesNames  the series names (if <code>null</code>, series names, +     *         will be generated automatically)., +     * @param seriesKeys  the series keys (if <code>null</code>, series keys, +     *         will be generated automatically)., +     * @param categoryKeys  the category keys (if <code>null</code>, category , +     *         keys will be generated automatically)., +                this.seriesKeys = new Comparable[0];, +                this.categoryKeys = new Comparable[0];, +        if (categoryKeys.length != getCategoryCount()) {, +++ b/ChangeLog, +2008-02-26  David Gilbert  <david.gilbert@object-refinery.com>, +, +    Bug 1897580:, +    * source/org/jfree/data/DefaultIntervalCategoryDataset.java, +    (DefaultIntervalCategoryDataset(Comparable[], Comparable[], Number[][], , +    Number[][]): Initialise seriesKeys and categoryKeys to empty arrays instead, +    of null for empty dataset,, +    (setCategoryKeys): Fixed argument check to handle empty dataset., +, +++ b/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java, + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2008, by Jeremy Bowman and Contributors., + * 25-Feb-2008 : Fix for the special case where the dataset is empty, see bug , + *               1897580 (DG), +     * Creates a new dataset using the specified data values and automatically, +     * generated series and category keys., +     * @param starts  the starting values for the intervals (<code>null</code>, +     *                not permitted)., +     * @param ends  the ending values for the intervals (<code>null</code> not, +     *                permitted)., +     * @param seriesNames  the series names (if <code>null</code>, series names, +     *         will be generated automatically)., +     * @param seriesKeys  the series keys (if <code>null</code>, series keys, +     *         will be generated automatically)., +     * @param categoryKeys  the category keys (if <code>null</code>, category , +     *         keys will be generated automatically)., +                this.seriesKeys = new Comparable[0];, +                this.categoryKeys = new Comparable[0];, +        if (categoryKeys.length != getCategoryCount()) {, +++ b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java, + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * (C) Copyright 2007, 2008, by Object Refinery Limited and Contributors., + * 25-Feb-2008 : Added new tests to check behaviour of an empty dataset (DG);, +import java.util.List;, +        , +        // check that two empty datasets are equal, +    	DefaultIntervalCategoryDataset empty1 , +                = new DefaultIntervalCategoryDataset(new double[0][0], , +        		        new double[0][0]);, +    	DefaultIntervalCategoryDataset empty2 , +                = new DefaultIntervalCategoryDataset(new double[0][0], , +		                new double[0][0]);, +    	assertTrue(empty1.equals(empty2));, +     * A check to ensure that an empty dataset can be cloned., +     */, +    public void testCloning2() {, +    	DefaultIntervalCategoryDataset d1 , +                = new DefaultIntervalCategoryDataset(new double[0][0], , +        		    new double[0][0]);, +        DefaultIntervalCategoryDataset d2 = null;, +        try {, +            d2 = (DefaultIntervalCategoryDataset) d1.clone();, +        }, +        catch (CloneNotSupportedException e) {, +            e.printStackTrace();, +        }, +        assertTrue(d1 != d2);, +        assertTrue(d1.getClass() == d2.getClass());, +        assertTrue(d1.equals(d2));	]