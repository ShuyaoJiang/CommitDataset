[+++ b/ChangeLog, +    * source/org/jfree/data/xy/DefaultTableXYDataset.java:, +    Implemented PublicCloneable, plus, +    (clone): New method override., +, +2008-04-22  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +    * source/org/jfree/data/xy/DefaultTableXYDataset.java:, +    Implemented PublicCloneable, plus, +    (clone): New method override., +, +2008-04-22  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/data/xy/DefaultTableXYDataset.java, + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2008, by Richard Atkinson and Contributors., + * 22-Apr-2008 : Implemented PublicCloneable (DG);, +import org.jfree.util.PublicCloneable;, +        implements TableXYDataset, IntervalXYDataset, DomainInfo,, +                   PublicCloneable {, +     * Returns an independent copy of this dataset., +     *, +     * @return A clone., +     *, +     * @throws CloneNotSupportedException if there is some reason that cloning, +     *     cannot be performed., +     */, +    public Object clone() throws CloneNotSupportedException {, +        DefaultTableXYDataset clone = (DefaultTableXYDataset) super.clone();, +        int seriesCount = this.data.size();, +        clone.data = new java.util.ArrayList(seriesCount);, +        for (int i = 0; i < seriesCount; i++) {, +        	XYSeries series = (XYSeries) this.data.get(i);, +        	clone.data.add(series.clone());, +        }, +, +        clone.intervalDelegate = new IntervalXYDelegate(clone);, +        // need to configure the intervalDelegate to match the original, +        clone.intervalDelegate.setFixedIntervalWidth(getIntervalWidth());, +        clone.intervalDelegate.setAutoWidth(isAutoWidth());, +        clone.intervalDelegate.setIntervalPositionFactor(, +                getIntervalPositionFactor());, +        clone.updateXPoints();, +        return clone;, +    }, +, +    /**, +++ b/ChangeLog, +    * source/org/jfree/data/xy/DefaultTableXYDataset.java:, +    Implemented PublicCloneable, plus, +    (clone): New method override., +, +2008-04-22  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/data/xy/DefaultTableXYDataset.java, + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2008, by Richard Atkinson and Contributors., + * 22-Apr-2008 : Implemented PublicCloneable (DG);, +import org.jfree.util.PublicCloneable;, +        implements TableXYDataset, IntervalXYDataset, DomainInfo,, +                   PublicCloneable {, +     * Returns an independent copy of this dataset., +     *, +     * @return A clone., +     *, +     * @throws CloneNotSupportedException if there is some reason that cloning, +     *     cannot be performed., +     */, +    public Object clone() throws CloneNotSupportedException {, +        DefaultTableXYDataset clone = (DefaultTableXYDataset) super.clone();, +        int seriesCount = this.data.size();, +        clone.data = new java.util.ArrayList(seriesCount);, +        for (int i = 0; i < seriesCount; i++) {, +        	XYSeries series = (XYSeries) this.data.get(i);, +        	clone.data.add(series.clone());, +        }, +, +        clone.intervalDelegate = new IntervalXYDelegate(clone);, +        // need to configure the intervalDelegate to match the original, +        clone.intervalDelegate.setFixedIntervalWidth(getIntervalWidth());, +        clone.intervalDelegate.setAutoWidth(isAutoWidth());, +        clone.intervalDelegate.setIntervalPositionFactor(, +                getIntervalPositionFactor());, +        clone.updateXPoints();, +        return clone;, +    }, +, +    /**, +++ b/tests/org/jfree/data/xy/junit/DefaultTableXYDatasetTests.java, + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2008, by Object Refinery Limited and Contributors., + * 22-Apr-2008 : Added testPublicCloneable (DG);, +import org.jfree.util.PublicCloneable;, +, +        s1.add(3.0, 3.3);, +        assertFalse(d1.equals(d2));, +    }, +, +    /**]