[+++ b/ChangeLog, +    Patch 2686872 by Peter Kolb:, +    * source/org/jfree/chart/title/PaintScaleLegend.java: Implemented, +    AxisChangeListener,, +    (PaintScaleLegend): Register as axis change listener,, +    (setAxis): Deregister as change listener on old axis, register as listener, +    on new axis,, +    (axisChanged): New method,, +    (draw): Check isStripOutlineVisible flag., +, +2009-04-16  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +    Patch 2686872 by Peter Kolb:, +    * source/org/jfree/chart/title/PaintScaleLegend.java: Implemented, +    AxisChangeListener,, +    (PaintScaleLegend): Register as axis change listener,, +    (setAxis): Deregister as change listener on old axis, register as listener, +    on new axis,, +    (axisChanged): New method,, +    (draw): Check isStripOutlineVisible flag., +, +2009-04-16  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/title/PaintScaleLegend.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2007-2009, by Object Refinery Limited., + * Contributor(s):   Peter Kolb - see patch 2686872;, + * 16-Apr-2009 : Patch 2686872 implementing AxisChangeListener, and fix for, + *               ignored stripOutlineVisible flag (DG);, +import org.jfree.chart.event.AxisChangeEvent;, +import org.jfree.chart.event.AxisChangeListener;, +public class PaintScaleLegend extends Title implements AxisChangeListener,, +        PublicCloneable {, +        this.axis.addChangeListener(this);, +        this.axis.removeChangeListener(this);, +        this.axis.addChangeListener(this);, +     * Receives notification of an axis change event and responds by firing, +     * a title change event., +     *, +     * @param event  the event., +     *, +     * @since 1.0.13, +     */, +    public void axisChanged(AxisChangeEvent event) {, +        if (this.axis == event.getAxis()) {, +            notifyListeners(new TitleChangeEvent(this));, +        }, +    }, +, +    /**, +                if (isStripOutlineVisible()) {, +                            target.getMaxY() - this.stripWidth,, +                            target.getWidth(), this.stripWidth));, +                }, +                if (isStripOutlineVisible()) {, +                            target.getMinY(), target.getWidth(),, +                            this.stripWidth));, +                }, +                if (isStripOutlineVisible()) {, +                }, +                if (isStripOutlineVisible()) {, +                            target.getMinY(), this.stripWidth,, +                            target.getHeight()));, +                }]