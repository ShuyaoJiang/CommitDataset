[+++ b/swt/org/jfree/experimental/swt/SWTGraphics2D.java, +    /**, +     * Not implemented yet - see {@link Graphics#create()}., +     *, +     * @return <code>null</code>., +    /**, +     * Not implemented yet - see {@link Graphics2D#getDeviceConfiguration()}., +     *, +     * @return <code>null</code>., +     * @see #setRenderingHint(RenderingHints.Key, Object), +     * @see #getRenderingHint(RenderingHints.Key), +    /**, +     * Sets the background colour., +     *, +     * @param color  the colour., +    /**, +     * Returns the background colour., +     *, +     * @return The background colour., +    /**, +     * Not implemented - see {@link Graphics#setPaintMode()}., +    /**, +     * Not implemented - see {@link Graphics#setXORMode(Color)}., +     *, +     * @param color  the colour., +    /**, +     * Applies the specified clip., +     *, +     * @param s  the shape for the clip., +    /**, +     * Returns the clip bounds., +     *, +     * @return The clip bounds., +    /**, +     * Sets the clipping to the intersection of the current clip region and, +     * the specified rectangle., +     *, +     * @param x  the x-coordinate., +     * @param y  the y-coordinate., +     * @param width  the width., +     * @param height  the height., +    /**, +     * Returns the current clip., +     *, +     * @return The current clip., +    /**, +     * Sets the clip region., +     *, +     * @param clip  the clip., +        if (clip == null) {, +        }, +    /**, +     * Sets the clip region to the specified rectangle., +     *, +     * @param x  the x-coordinate., +     * @param y  the y-coordinate., +     * @param width  the width., +     * @param height  the height., +    /**, +     * Returns the current transform., +     *, +     * @return The current transform., +    /**, +     * Sets the current transform., +     *, +     * @param t  the transform., +    public void setTransform(AffineTransform t) {, +        Transform transform = getSwtTransformFromPool(t);, +    /**, +     * Concatenates the specified transform to the existing transform., +     *, +     * @param t  the transform., +    public void transform(AffineTransform t) {, +        swtTransform.multiply(getSwtTransformFromPool(t));, +    /**, +     * Applies a translation., +     *, +     * @param x  the translation along the x-axis., +     * @param y  the translation along the y-axis., +    /**, +     * Applies a translation., +     *, +     * @param tx  the translation along the x-axis., +     * @param ty  the translation along the y-axis., +    /**, +     * Applies a rotation transform., +     *, +     * @param theta  the angle of rotation., +    /**, +     * Not implemented - see {@link Graphics2D#rotate(double, double, double)}., +     *, +    /**, +     * Applies a scale transform., +     *, +     * @param scaleX  the scale factor along the x-axis., +     * @param scaleY  the scale factor along the y-axis., +    /**, +     * Applies a shear transform., +     *, +     * @param shearX  the x-factor.]