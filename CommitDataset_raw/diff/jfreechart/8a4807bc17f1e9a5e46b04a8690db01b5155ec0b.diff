[+++ b/ChangeLog, +2009-11-03  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/renderer/AbstractCategoryItemRenderer.java, +    (getLegendItems): Check series rendering order in plot,, +    * source/org/jfree/chart/plot/CategoryPlot.java, +    (getLegendItems): Use getLegendItems() method in each renderer., +, +++ b/ChangeLog, +2009-11-03  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/renderer/AbstractCategoryItemRenderer.java, +    (getLegendItems): Check series rendering order in plot,, +    * source/org/jfree/chart/plot/CategoryPlot.java, +    (getLegendItems): Use getLegendItems() method in each renderer., +, +++ b/source/org/jfree/chart/plot/CategoryPlot.java, +        if (this.fixedLegendItems != null) {, +            return this.fixedLegendItems;, +        }, +        LegendItemCollection result = new LegendItemCollection();, +                    result.addAll(renderer.getLegendItems());, +++ b/ChangeLog, +2009-11-03  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/renderer/AbstractCategoryItemRenderer.java, +    (getLegendItems): Check series rendering order in plot,, +    * source/org/jfree/chart/plot/CategoryPlot.java, +    (getLegendItems): Use getLegendItems() method in each renderer., +, +++ b/source/org/jfree/chart/plot/CategoryPlot.java, +        if (this.fixedLegendItems != null) {, +            return this.fixedLegendItems;, +        }, +        LegendItemCollection result = new LegendItemCollection();, +                    result.addAll(renderer.getLegendItems());, +++ b/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +import org.jfree.util.SortOrder;, +        if (this.plot == null) {, +            return result;, +        }, +            return result;, +        }, +        if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {, +        }, +        else {, +            for (int i = seriesCount - 1; i >= 0; i--) {, +                if (isSeriesVisibleInLegend(i)) {, +                    LegendItem item = getLegendItem(index, i);, +                    if (item != null) {, +                        result.add(item);, +                    }, +                }, +            }]