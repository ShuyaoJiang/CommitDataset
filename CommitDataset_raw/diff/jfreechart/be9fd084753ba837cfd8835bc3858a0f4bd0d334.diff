[+++ b/source/org/jfree/chart/axis/LogAxis.java, + * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2014, by Object Refinery Limited and Contributors., + *               subscripts and more (DG);, + * 18-Mar-2014 : Add support for super-scripted tick labels (DG);, + * , + */, +import java.awt.font.TextAttribute;, +import java.text.AttributedString;, +import java.text.Format;, +import org.jfree.chart.util.AttrStringUtils;, +import org.jfree.util.ObjectUtilities;, +    /** , +     * The base symbol to display (if <code>null</code> then the numerical, +     * value of the base is displayed)., +     */, +    private String baseSymbol = null;, +    , +    /** , +     * The formatter to use for the base value when the base is displayed, +     * as a numerical value., +     */, +    private Format baseFormatter = new DecimalFormat("0");, +    , +        super(label, new NumberTickUnitSource());, +        this.tickUnit = new NumberTickUnit(1.0, new DecimalFormat("0.#"), 10);, +     * Returns the base for the logarithm calculation.  The default value is, +     * <code>10.0</code>., +     * Sets the base for the logarithm calculation and sends a change event to, +     * all registered listeners., +     * Returns the symbol used to represent the base of the logarithmic scale, +     * for the axis.  If this is <code>null</code> (the default) then the , +     * numerical value of the base is displayed., +     * , +     * @return The base symbol (possibly <code>null</code>)., +     * , +     * @since 1.0.18, +     */, +    public String getBaseSymbol() {, +        return this.baseSymbol;, +    }, +    , +    /**, +     * Sets the symbol used to represent the base value of the logarithmic , +     * scale and sends a change event to all registered listeners., +     * , +     * @param symbol  the symbol (<code>null</code> permitted)., +     * , +     * @since 1.0.18, +     */, +    public void setBaseSymbol(String symbol) {, +        this.baseSymbol = symbol;, +        fireChangeEvent();, +    }, +    , +    /**, +     * Returns the formatter used to format the base value of the logarithmic, +     * scale when it is displayed numerically.  The default value is, +     * <code>new DecimalFormat("0")</code>., +     * , +     * @return The base formatter (never <code>null</code>)., +     * , +     * @since 1.0.18, +     */, +    public Format getBaseFormatter() {, +        return this.baseFormatter;, +    }, +    , +    /**, +     * Sets the formatter used to format the base value of the logarithmic , +     * scale when it is displayed numerically and sends a change event to all, +     * registered listeners., +     * , +     * @param formatter  the formatter (<code>null</code> not permitted)., +     * , +     * @since 1.0.18, +     */, +    public void setBaseFormatter(Format formatter) {, +        ParamChecks.nullNotPermitted(formatter, "formatter");, +        this.baseFormatter = formatter;, +        fireChangeEvent();, +    }, +    , +    /**, +     * Sets the smallest value represented by the axis and sends a change event, +     * to all registered listeners., +     * Returns the number format override.  If this is non-<code>null</code>, , +     * then it will be used to format the numbers on the axis., +     * Sets the number format override and sends a change event to all , +     * registered listeners.  If this is non-<code>null</code>, then it will be, +    private double calculateValueNoINF(double log) {, +        double result = calculateValue(log);, +        if (Double.isInfinite(result)) {, +            result = Double.MAX_VALUE;, +        }, +        if (result <= 0.0) {, +            result = Double.MIN_VALUE;, +        }, +        return result;, +    }]