[+++ b/tests/org/jfree/chart/plot/CategoryPlotTest.java, +    , +    /**, +     * Datasets are now stored in a Map, and it should be possible to assign, +     * them an arbitrary key (index)., +     */, +    @Test, +    public void testDatasetIndices() {, +        CategoryDataset dataset = new DefaultCategoryDataset();, +        CategoryAxis xAxis = new CategoryAxis("X");, +        NumberAxis yAxis = new NumberAxis("Y");, +        CategoryItemRenderer renderer = new BarRenderer();, +        CategoryPlot plot = new CategoryPlot(dataset, xAxis, yAxis, renderer);, +        , +        assertEquals(dataset, plot.getDataset(0));, +        , +        DefaultCategoryDataset dataset2 = new DefaultCategoryDataset();, +        dataset2.setValue(1, "R1", "C1");, +        , +        // we should be able to give a dataset an arbitrary index, +        plot.setDataset(99, dataset2);, +        assertEquals(2, plot.getDatasetCount());, +        assertEquals(dataset2, plot.getDataset(99));, +        , +        assertEquals(0, plot.indexOf(dataset));, +        assertEquals(99, plot.indexOf(dataset2));, +    }, +    , +    @Test, +    public void testAxisIndices() {, +        CategoryDataset dataset = new DefaultCategoryDataset();, +        CategoryAxis xAxis = new CategoryAxis("X");, +        NumberAxis yAxis = new NumberAxis("Y");, +        CategoryItemRenderer renderer = new BarRenderer();, +        CategoryPlot plot = new CategoryPlot(dataset, xAxis, yAxis, renderer);, +        assertEquals(xAxis, plot.getDomainAxis(0));        , +        assertEquals(yAxis, plot.getRangeAxis(0)); , +        , +        CategoryAxis xAxis2 = new CategoryAxis("X2");, +        plot.setDomainAxis(99, xAxis2);, +        assertEquals(xAxis2, plot.getDomainAxis(99));, +        , +        NumberAxis yAxis2 = new NumberAxis("Y2");, +        plot.setRangeAxis(99, yAxis2);, +        assertEquals(yAxis2, plot.getRangeAxis(99));, +    }, +    , +    @Test , +    public void testAxisLocationIndices() {, +        CategoryDataset dataset = new DefaultCategoryDataset();, +        CategoryAxis xAxis = new CategoryAxis("X");, +        NumberAxis yAxis = new NumberAxis("Y");, +        CategoryItemRenderer renderer = new BarRenderer();, +        CategoryPlot plot = new CategoryPlot(dataset, xAxis, yAxis, renderer);, +, +        CategoryAxis xAxis2 = new CategoryAxis("X2");, +        NumberAxis yAxis2 = new NumberAxis("Y2");, +        plot.setDomainAxis(99, xAxis2);, +        plot.setRangeAxis(99, yAxis2);, +        , +        plot.setDomainAxisLocation(99, AxisLocation.BOTTOM_OR_RIGHT);, +        assertEquals(AxisLocation.BOTTOM_OR_RIGHT, , +                plot.getDomainAxisLocation(99));, +        plot.setRangeAxisLocation(99, AxisLocation.BOTTOM_OR_LEFT);, +        assertEquals(AxisLocation.BOTTOM_OR_LEFT, , +                plot.getRangeAxisLocation(99));, +    }, +    , +    @Test , +    public void testRendererIndices() {, +        CategoryDataset dataset = new DefaultCategoryDataset();, +        CategoryAxis xAxis = new CategoryAxis("X");, +        NumberAxis yAxis = new NumberAxis("Y");, +        CategoryItemRenderer renderer = new BarRenderer();, +        CategoryPlot plot = new CategoryPlot(dataset, xAxis, yAxis, renderer);, +        , +        assertEquals(renderer, plot.getRenderer(0));, +        , +        // we should be able to give a renderer an arbitrary index, +        CategoryItemRenderer renderer2 = new LineAndShapeRenderer();, +        plot.setRenderer(20, renderer2);, +        assertEquals(2, plot.getRendererCount());, +        assertEquals(renderer2, plot.getRenderer(20));, +        , +        assertEquals(20, plot.getIndexOf(renderer2));, +    }, +, +    @Test , +    public void testGetRendererForDataset2() {, +        CategoryDataset dataset = new DefaultCategoryDataset();, +        CategoryAxis xAxis = new CategoryAxis("X");, +        NumberAxis yAxis = new NumberAxis("Y");, +        CategoryItemRenderer renderer = new BarRenderer();, +        CategoryPlot plot = new CategoryPlot(dataset, xAxis, yAxis, renderer);, +, +        // add a second dataset, +        DefaultCategoryDataset dataset2 = new DefaultCategoryDataset();, +        dataset2.setValue(1, "R1", "C1");, +        plot.setDataset(99, dataset2);, +       ]