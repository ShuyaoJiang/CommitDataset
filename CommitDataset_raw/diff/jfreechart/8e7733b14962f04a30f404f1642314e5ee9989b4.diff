[+++ b/ChangeLog, +    * source/org/jfree/chart/title/PaintScaleLegend.java, +    (subdivisions): New field,, +    (PaintScaleLegend): Initialise new field,, +    (getSubdivisionCount): New method,, +    (setSubdivisionCount): Likewise,, +    (SUBDIVISIONS): Removed private field,, +    (draw): Modified segment calculations,, +    (equals): Updated for new field., +, +2008-06-18  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +    * source/org/jfree/chart/title/PaintScaleLegend.java, +    (subdivisions): New field,, +    (PaintScaleLegend): Initialise new field,, +    (getSubdivisionCount): New method,, +    (setSubdivisionCount): Likewise,, +    (SUBDIVISIONS): Removed private field,, +    (draw): Modified segment calculations,, +    (equals): Updated for new field., +, +2008-06-18  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/title/PaintScaleLegend.java, + * 18-Jun-2008 : Fixed bug drawing scale with log axis (DG);, +     * The number of subdivisions for the scale when rendering., +     *, +     * @since 1.0.11, +     */, +    private int subdivisions;, +, +    /**, +        this.subdivisions = 100;, +     * Returns the number of subdivisions used to draw the scale., +     *, +     * @return The subdivision count., +     *, +     * @since 1.0.11, +     */, +    public int getSubdivisionCount() {, +    	return this.subdivisions;, +    }, +, +    /**, +     * Sets the subdivision count and sends a {@link TitleChangeEvent} to, +     * all registered listeners., +     *, +     * @param count  the count., +     *, +     * @since 1.0.11, +     */, +    public void setSubdivisionCount(int count) {, +    	if (count <= 0) {, +    		throw new IllegalArgumentException("Requires 'count' > 0.");, +    	}, +    	this.subdivisions = count;, +    	notifyListeners(new TitleChangeEvent(this));, +    }, +, +    /**, +        getFrame().draw(g2, target);, +        getFrame().getInsets().trim(target);, +        double increment = this.axis.getRange().getLength() / this.subdivisions;, +                for (int i = 0; i < this.subdivisions; i++) {, +                    double vv0 = this.axis.valueToJava2D(v, target,, +                            RectangleEdge.TOP);, +                    double vv1 = this.axis.valueToJava2D(v + increment, target,, +                            RectangleEdge.TOP);, +                    double ww = Math.abs(vv1 - vv0);, +                    r.setRect(Math.min(vv0, vv1), target.getMaxY(), +                    		- this.stripWidth, ww, this.stripWidth);, +                for (int i = 0; i < this.subdivisions; i++) {, +                    double vv0 = this.axis.valueToJava2D(v, target,, +                    double vv1 = this.axis.valueToJava2D(v + increment, target,, +                            RectangleEdge.BOTTOM);, +                    double ww = Math.abs(vv1 - vv0);, +                    r.setRect(Math.min(vv0, vv1), target.getMinY(), ww,, +                    		this.stripWidth);, +                for (int i = 0; i < this.subdivisions; i++) {, +                    double vv0 = this.axis.valueToJava2D(v, target,, +                    double vv1 = this.axis.valueToJava2D(v + increment, target,, +                            RectangleEdge.LEFT);, +                    double hh = Math.abs(vv1 - vv0);, +                    r.setRect(target.getMaxX() - this.stripWidth,, +                    		Math.min(vv0, vv1), this.stripWidth, hh);, +                for (int i = 0; i < this.subdivisions; i++) {, +                    double vv0 = this.axis.valueToJava2D(v, target,, +                    double vv1 = this.axis.valueToJava2D(v + increment, target,, +                            RectangleEdge.LEFT);, +                    double hh = Math.abs(vv1 - vv0);, +                    r.setRect(target.getMinX(), Math.min(vv0, vv1),, +                    		this.stripWidth, hh);, +        if (this.subdivisions != that.subdivisions) {, +        	return false;, +        }, +++ b/ChangeLog, +    * source/org/jfree/chart/title/PaintScaleLegend.java, +    (subdivisions): New field,, +    (PaintScaleLegend): Initialise new field,]