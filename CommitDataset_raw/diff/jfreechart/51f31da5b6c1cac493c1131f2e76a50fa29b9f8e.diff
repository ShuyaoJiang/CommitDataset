[+++ b/source/org/jfree/chart/util/TextUtils.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + * , + * --------------, + * TextUtils.java, + * --------------, + * (C) Copyright 2014, by Object Refinery Limited., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes, + * -------, + * 30-Jun-2014 : Version 1 (DG);, + *, + */, +, +package org.jfree.chart.util;, +, +import java.awt.Font;, +import java.awt.FontMetrics;, +import java.awt.Graphics2D;, +import java.awt.font.FontRenderContext;, +import java.awt.font.LineMetrics;, +import java.awt.geom.Rectangle2D;, +import org.jfree.ui.TextAnchor;, +, +/**, + * Text utility functions., + * , + * @since 1.0.18, + */, +public class TextUtils {, +    , +    /**, +     * Draws a string such that the specified anchor point is aligned to the, +     * given <code>(x, y)</code> location, and returns a bounding rectangle , +     * for the text., +     *, +     * @param text  the text., +     * @param g2  the graphics device., +     * @param x  the x coordinate (Java 2D)., +     * @param y  the y coordinate (Java 2D)., +     * @param anchor  the anchor location., +     *, +     * @return The text bounds (adjusted for the text position)., +     */, +    public static Rectangle2D drawAlignedString(String text,, +            Graphics2D g2, float x, float y, TextAnchor anchor) {, +, +        Rectangle2D textBounds = new Rectangle2D.Double();, +        float[] adjust = deriveTextBoundsAnchorOffsets(g2, text, anchor,, +                textBounds);, +        // adjust text bounds to match string position, +        textBounds.setRect(x + adjust[0], y + adjust[1] + adjust[2],, +            textBounds.getWidth(), textBounds.getHeight());, +        g2.drawString(text, x + adjust[0], y + adjust[1]);, +        return textBounds;, +    }, +, +    /**, +     * Returns the bounds of an aligned string., +     * , +     * @param text  the string (<code>null</code> not permitted)., +     * @param g2  the graphics target (<code>null</code> not permitted)., +     * @param x  the x-coordinate., +     * @param y  the y-coordinate., +     * @param anchor  the anchor point that will be aligned to , +     *     <code>(x, y)</code> (<code>null</code> not permitted)., +     * , +     * @return The text bounds (never <code>null</code>)., +     * , +     * @since 1.3, +     */, +    public static Rectangle2D calcAlignedStringBounds(String text,, +            Graphics2D g2, float x, float y, TextAnchor anchor) {]