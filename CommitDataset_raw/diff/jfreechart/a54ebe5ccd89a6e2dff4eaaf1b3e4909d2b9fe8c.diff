[+++ b/ChangeLog, +2009-05-05  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/ChartPanel.java, +    (doCopy): Account for insets, and pass scaling parameters to, +    ChartTransferable,, +    * source/org/jfree/chart/ChartTransferable.java, +    (minDrawWidth): New field,, +    (minDrawHeight): Likewise,, +    (maxDrawWidth): Likewise,, +    (maxDrawHeight): Likewise,, +    (ChartTransferable): New constructor,, +    (getTransferData): Delegate to new utility method,, +    (createBufferedImage): New method that can apply scaling., +, +++ b/ChangeLog, +2009-05-05  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/ChartPanel.java, +    (doCopy): Account for insets, and pass scaling parameters to, +    ChartTransferable,, +    * source/org/jfree/chart/ChartTransferable.java, +    (minDrawWidth): New field,, +    (minDrawHeight): Likewise,, +    (maxDrawWidth): Likewise,, +    (maxDrawHeight): Likewise,, +    (ChartTransferable): New constructor,, +    (getTransferData): Delegate to new utility method,, +    (createBufferedImage): New method that can apply scaling., +, +++ b/source/org/jfree/chart/ChartPanel.java, + * 05-May-2009 : Match scaling (and insets) in doCopy() (DG);, +        Insets insets = getInsets();, +        int w = getWidth() - insets.left - insets.right;, +        int h = getHeight() - insets.top - insets.bottom;, +        ChartTransferable selection = new ChartTransferable(this.chart, w, h,, +                getMinimumDrawWidth(), getMinimumDrawHeight(),, +                getMaximumDrawWidth(), getMaximumDrawHeight(), true);, +++ b/ChangeLog, +2009-05-05  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/ChartPanel.java, +    (doCopy): Account for insets, and pass scaling parameters to, +    ChartTransferable,, +    * source/org/jfree/chart/ChartTransferable.java, +    (minDrawWidth): New field,, +    (minDrawHeight): Likewise,, +    (maxDrawWidth): Likewise,, +    (maxDrawHeight): Likewise,, +    (ChartTransferable): New constructor,, +    (getTransferData): Delegate to new utility method,, +    (createBufferedImage): New method that can apply scaling., +, +++ b/source/org/jfree/chart/ChartPanel.java, + * 05-May-2009 : Match scaling (and insets) in doCopy() (DG);, +        Insets insets = getInsets();, +        int w = getWidth() - insets.left - insets.right;, +        int h = getHeight() - insets.top - insets.bottom;, +        ChartTransferable selection = new ChartTransferable(this.chart, w, h,, +                getMinimumDrawWidth(), getMinimumDrawHeight(),, +                getMaximumDrawWidth(), getMaximumDrawHeight(), true);, +++ b/source/org/jfree/chart/ChartTransferable.java, + * 05-May-2009 : Match the scaling options provided by the ChartPanel, + *               class (DG);, +import java.awt.Graphics2D;, +import java.awt.geom.AffineTransform;, +import java.awt.geom.Rectangle2D;, +import java.awt.image.BufferedImage;, +     * The smallest width at which the chart will be drawn (if necessary, the, +     * chart will then be scaled down to fit the requested width)., +     *, +     * @since 1.0.14, +     */, +    private int minDrawWidth;, +, +    /**, +     * The smallest height at which the chart will be drawn (if necessary, the, +     * chart will then be scaled down to fit the requested height)., +     *, +     * @since 1.0.14, +     */, +    private int minDrawHeight;, +, +    /**, +     * The largest width at which the chart will be drawn (if necessary, the , +     * chart will then be scaled up to fit the requested width). , +     * , +     * @since 1.0.14, +     */, +    private int maxDrawWidth;, +, +    /**, +     * The largest height at which the chart will be drawn (if necessary, the, +     * chart will then be scaled up to fit the requested height)., +     *, +     * @since 1.0.14, +     */, +    private int maxDrawHeight;, +, +    /**]