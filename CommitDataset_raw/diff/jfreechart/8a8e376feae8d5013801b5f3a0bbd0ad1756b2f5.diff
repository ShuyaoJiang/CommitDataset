[+++ b/ChangeLog, +	* source/org/jfree/data/KeyedObjects2D.java, +	(getRowIndex): Check for null argument,, +	(getColumnIndex): Likewise,, +	(removeObject): Check for unknown keys,, +	(clear): New method,, +	* source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java, +	(rangeBounds): Removed,, +	(DefaultBoxAndWhiskerCategoryDataset()): Updated for removed field,, +	(add(BoxAndWhiskerItem, Comparable, Comparable)): Likewise,, +	(remove(Comparable, Comparable)): New method,, +	(removeRow(int)): Likewise,, +	(removeRow(Comparable)): Likewise,, +	(removeColumn(int)): Likewise,, +	(removeColumn(Comparable)): Likewise,, +	(clear): Likewise,, +	(getRangeBounds): Return new instance every time,, +	* source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java, +	(remove(Comparable, Comparable)): New method,, +	(removeRow(int)): Likewise,, +	(removeRow(Comparable)): Likewise,, +	(removeColumn(int)): Likewise,, +	(removeColumn(Comparable)): Likewise,, +	(clear): Likewise,, +	(getRangeBounds): Return new instance every time,, +	* tests/org/jfree/data/statistics/junit/DefaultBoxAndWhiskerCategoryDatasetTests.java, +	(testRemove): New method,, +	* tests/org/jfree/data/statistics/junit/DefaultStatisticalCategoryDatasetTests.java, +	(testRemove): New method., +, +2007-10-03  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +	* source/org/jfree/data/KeyedObjects2D.java, +	(getRowIndex): Check for null argument,, +	(getColumnIndex): Likewise,, +	(removeObject): Check for unknown keys,, +	(clear): New method,, +	* source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java, +	(rangeBounds): Removed,, +	(DefaultBoxAndWhiskerCategoryDataset()): Updated for removed field,, +	(add(BoxAndWhiskerItem, Comparable, Comparable)): Likewise,, +	(remove(Comparable, Comparable)): New method,, +	(removeRow(int)): Likewise,, +	(removeRow(Comparable)): Likewise,, +	(removeColumn(int)): Likewise,, +	(removeColumn(Comparable)): Likewise,, +	(clear): Likewise,, +	(getRangeBounds): Return new instance every time,, +	* source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java, +	(remove(Comparable, Comparable)): New method,, +	(removeRow(int)): Likewise,, +	(removeRow(Comparable)): Likewise,, +	(removeColumn(int)): Likewise,, +	(removeColumn(Comparable)): Likewise,, +	(clear): Likewise,, +	(getRangeBounds): Return new instance every time,, +	* tests/org/jfree/data/statistics/junit/DefaultBoxAndWhiskerCategoryDatasetTests.java, +	(testRemove): New method,, +	* tests/org/jfree/data/statistics/junit/DefaultStatisticalCategoryDatasetTests.java, +	(testRemove): New method., +, +2007-10-03  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/data/KeyedObjects2D.java, + *               KeyedObjects class, added clear() method (DG);, +     * Returns the row index for a given key, or <code>-1</code> if the key, +     * is not recognised., +     * @param key  the key (<code>null</code> not permitted)., +        if (key == null) {, +            throw new IllegalArgumentException("Null 'key' argument.");, +        }, +     * Returns the column index for a given key, or <code>-1</code> if the key, +     * is not recognised., +     * @param key  the key (<code>null</code> not permitted)., +        if (key == null) {, +            throw new IllegalArgumentException("Null 'key' argument.");, +        }, +        int rowIndex = getRowIndex(rowKey);, +        if (rowIndex < 0) {, +            throw new UnknownKeyException("Row key (" + rowKey , +                    + ") not recognised.");, +        }, +        int columnIndex = getColumnIndex(columnKey);, +        if (columnIndex < 0) {, +            throw new UnknownKeyException("Column key (" + columnKey , +                    + ") not recognised.");, +        }, +            int colIndex = row.getIndex(columnKey);, +            if (colIndex >= 0 && row.getObject(colIndex) != null) {, +                int colIndex = row.getIndex(columnKey);, +                if (colIndex >= 0) {, +                    row.removeValue(colIndex);, +     * Clears all the data and associated keys., +     * , +     * @since 1.0.7, +     */, +    public void clear() {, +        this.rowKeys.clear();, +        this.columnKeys.clear();]