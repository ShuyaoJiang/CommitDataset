[+++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/HashUtils.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it , + * under the terms of the GNU Lesser General Public License as published by , + * the Free Software Foundation; either version 2.1 of the License, or , + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but , + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY , + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public , + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, , + * USA.  , + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + * ------------------, + * HashUtilities.java, + * ------------------, + * (C) Copyright 2006-2016, by Object Refinery Limited;, + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes, + * -------, + * 03-Oct-2006 : Version 1 (DG);, + * 06-Mar-2007 : Fix for hashCodeForDoubleArray() method (DG);, + * 13-Nov-2007 : Added new utility methods (DG);, + * 22-Nov-2007 : Added hashCode() method for 'int' (DG);, + * 05-Dec-2007 : Added special methods to handle BooleanList, PaintList,, + *               and StrokeList (DG);, + *, + */, +, +package org.jfree.chart;, +, +import java.awt.GradientPaint;, +import java.awt.Paint;, +import java.awt.Stroke;, +import org.jfree.chart.util.BooleanList;, +import org.jfree.chart.util.PaintList;, +import org.jfree.chart.util.StrokeList;, +, +/**, + * Some utility methods for calculating hash codes.  , + * , + * @since 1.0.3, + */, +public class HashUtils {, +    , +    /**, +     * Returns a hash code for a {@code Paint} instance.  If , +     * {@code p} is {@code null}, this method returns zero., +     * , +     * @param p  the paint ({@code null} permitted)., +     * , +     * @return The hash code., +     */, +    public static int hashCodeForPaint(Paint p) {, +        if (p == null) {, +            return 0;, +        }, +        int result;, +        // handle GradientPaint as a special case, +        if (p instanceof GradientPaint) {, +            GradientPaint gp = (GradientPaint) p;, +            result = 193;, +            result = 37 * result + gp.getColor1().hashCode();, +            result = 37 * result + gp.getPoint1().hashCode();, +            result = 37 * result + gp.getColor2().hashCode();, +            result = 37 * result + gp.getPoint2().hashCode();, +        }, +        else {, +            // we assume that all other Paint instances implement equals() and, +            // hashCode()...of course that might not be true, but what can we, +            // do about it?, +            result = p.hashCode();, +        }, +        return result;, +    }, +    , +    /**, +     * Returns a hash code for a {@code double[]} instance.  If the array, +     * is {@code null}, this method returns zero., +     * , +     * @param a  the array ({@code null} permitted).]