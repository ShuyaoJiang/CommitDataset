[+++ b/src/main/java/org/jfree/chart/fx/ChartCanvas.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2014-2017, by Object Refinery Limited and Contributors., + * 18-Feb-2017 : Add methods for auxiliary handlers, move dispatch handling, + *               methods to DispatchHandlerFX (DG);, + * class (which embeds a canvas) is a better option as it provides additional, + * features., +     * {@code chart} is {@code null}, a blank canvas will be displayed., +        this.chartMouseListeners = new ArrayList<>();, +        this.availableMouseHandlers = new ArrayList<>();, +        this.auxiliaryMouseHandlers = new ArrayList<>();, +     * Returns the anchor point.  This is the last point on the canvas, +     * that the user clicked with the mouse, and is used during chart , +     * rendering to determine the position of crosshairs (if visible)., +     * , +     * @return The anchor point (possibly {@code null})., +     * , +     * @since 1.0.20, +     */, +    public Point2D getAnchor() {, +        return this.anchor;        , +    } , +, +    /**, +     * Returns a (newly created) list containing the listeners currently , +     * registered with the canvas., +     * , +     * @return A list of listeners (possibly empty but never {@code null})., +     * , +     * @since 1.0.20, +     */, +    public List<ChartMouseListenerFX> getChartMouseListeners() {, +        return new ArrayList<>(this.chartMouseListeners);, +    }, +    , +    /**, +        if (!hasUniqueID(handler)) {, +     * Adds a handler to the list of auxiliary handlers.  The handler must, +     * have an ID that uniquely identifies it amongst the handlers registered, +     * with this canvas., +     * , +     * @param handler  the handler ({@code null} not permitted)., +     * , +     * @since 1.0.20, +     */, +    public void addAuxiliaryMouseHandler(MouseHandlerFX handler) {, +        if (!hasUniqueID(handler)) {, +            throw new IllegalArgumentException(, +                    "There is already a handler with that ID (" , +                            + handler.getID() + ").");, +        }, +        this.auxiliaryMouseHandlers.add(handler);, +    }, +    , +    /**, +     * Removes a handler from the list of auxiliary handlers., +     * , +     * @param handler  the handler ({@code null} not permitted). , +     * , +     * @since 1.0.20, +     */, +    public void removeAuxiliaryMouseHandler(MouseHandlerFX handler) {, +        this.auxiliaryMouseHandlers.remove(handler);, +    }, +, +    /**, +++ b/src/main/java/org/jfree/chart/fx/ChartCanvas.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2014-2017, by Object Refinery Limited and Contributors., + * 18-Feb-2017 : Add methods for auxiliary handlers, move dispatch handling, + *               methods to DispatchHandlerFX (DG);, + * class (which embeds a canvas) is a better option as it provides additional, + * features., +     * {@code chart} is {@code null}, a blank canvas will be displayed., +        this.chartMouseListeners = new ArrayList<>();, +        this.availableMouseHandlers = new ArrayList<>();, +        this.auxiliaryMouseHandlers = new ArrayList<>();, +     * Returns the anchor point.  This is the last point on the canvas, +     * that the user clicked with the mouse, and is used during chart , +     * rendering to determine the position of crosshairs (if visible)., +     * , +     * @return The anchor point (possibly {@code null})., +     * , +     * @since 1.0.20, +     */, +    public Point2D getAnchor() {, +        return this.anchor;        , +    } , +, +    /**, +     * Returns a (newly created) list containing the listeners currently , +     * registered with the canvas., +     * , +     * @return A list of listeners (possibly empty but never {@code null})., +     * , +     * @since 1.0.20, +     */, +    public List<ChartMouseListenerFX> getChartMouseListeners() {, +        return new ArrayList<>(this.chartMouseListeners);, +    }]