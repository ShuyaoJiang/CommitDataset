[+++ b/src/main/java/org/jfree/chart/fx/ChartCanvas.java, +import javafx.collections.FXCollections;, +import javafx.collections.ObservableList;, +import org.jfree.chart.event.OverlayChangeEvent;, +import org.jfree.chart.event.OverlayChangeListener;, +import org.jfree.chart.fx.overlay.OverlayFX;, +public class ChartCanvas extends Canvas implements ChartChangeListener,, +        OverlayChangeListener {, +    private ObservableList<OverlayFX> overlays;, +    , +        this.overlays = FXCollections.observableArrayList();, +, +     * Add an overlay to the canvas., +     *, +     * @param overlay  the overlay ({@code null} not permitted)., +     *, +     * @since 1.0.20, +     */, +    public void addOverlay(OverlayFX overlay) {, +        ParamChecks.nullNotPermitted(overlay, "overlay");, +        this.overlays.add(overlay);, +        overlay.addChangeListener(this);, +        draw();, +    }, +, +    /**, +     * Removes an overlay from the canvas., +     *, +     * @param overlay  the overlay to remove ({@code null} not permitted)., +     *, +     * @since 1.0.20, +     */, +    public void removeOverlay(OverlayFX overlay) {, +        ParamChecks.nullNotPermitted(overlay, "overlay");, +        boolean removed = this.overlays.remove(overlay);, +        if (removed) {, +            overlay.removeChangeListener(this);, +            draw();, +        }, +    }, +, +    /**, +     * Handles a change to an overlay by repainting the chart canvas., +     *, +     * @param event  the event., +     *, +     * @since 1.0.20, +     */, +    @Override, +    public void overlayChanged(OverlayChangeEvent event) {, +        draw();, +    }, +, +    /**, +        for (OverlayFX overlay : this.overlays) {, +            overlay.paintOverlay(g2, this);, +        }, +++ b/src/main/java/org/jfree/chart/fx/ChartCanvas.java, +import javafx.collections.FXCollections;, +import javafx.collections.ObservableList;, +import org.jfree.chart.event.OverlayChangeEvent;, +import org.jfree.chart.event.OverlayChangeListener;, +import org.jfree.chart.fx.overlay.OverlayFX;, +public class ChartCanvas extends Canvas implements ChartChangeListener,, +        OverlayChangeListener {, +    private ObservableList<OverlayFX> overlays;, +    , +        this.overlays = FXCollections.observableArrayList();, +, +     * Add an overlay to the canvas., +     *, +     * @param overlay  the overlay ({@code null} not permitted)., +     *, +     * @since 1.0.20, +     */, +    public void addOverlay(OverlayFX overlay) {, +        ParamChecks.nullNotPermitted(overlay, "overlay");, +        this.overlays.add(overlay);, +        overlay.addChangeListener(this);, +        draw();, +    }, +, +    /**, +     * Removes an overlay from the canvas., +     *, +     * @param overlay  the overlay to remove ({@code null} not permitted)., +     *, +     * @since 1.0.20, +     */, +    public void removeOverlay(OverlayFX overlay) {, +        ParamChecks.nullNotPermitted(overlay, "overlay");, +        boolean removed = this.overlays.remove(overlay);, +        if (removed) {, +            overlay.removeChangeListener(this);, +            draw();, +        }, +    }, +, +    /**, +     * Handles a change to an overlay by repainting the chart canvas.]