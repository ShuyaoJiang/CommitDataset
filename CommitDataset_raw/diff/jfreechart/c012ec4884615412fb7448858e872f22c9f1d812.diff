[+++ b/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2016, by Object Refinery Limited., +     * {@code null} indicates that the renderer is not currently assigned, +     * @return The plot (possibly {@code null})., +     * @param plot  the plot ({@code null} not permitted)., +     * @return The generator (possibly {@code null})., +     * @return The generator (possibly {@code null})., +     * @param generator  the generator ({@code null} permitted)., +     * @return The generator (possibly {@code null})., +     * @param generator  the generator ({@code null} permitted)., +     * @return The generator (possibly {@code null})., +     * @return The tool tip generator (possibly {@code null})., +     * @param generator  the generator ({@code null} permitted)., +     * @return The tool tip generator (possibly {@code null})., +     * @param generator  the generator ({@code null} permitted)., +     * @param generator  the item URL generator ({@code null} permitted)., +     * @param info  collects plot rendering info ({@code null} permitted)., +     * @return The new state instance (never {@code null})., +     *              the plot ({@code null} permitted)., +     * @param dataset  the dataset ({@code null} permitted)., +     * @return The range (or {@code null} if the dataset is, +     *         {@code null} or empty)., +     * @param dataset  the dataset ({@code null} permitted)., +     * @return The range ({@code null} if the dataset is {@code null}, +     * @param paint  the paint ({@code null} not permitted)., +     * @param stroke  the stroke ({@code null} not permitted)., +     * @param g2  the graphics device (not {@code null})., +     * @param plot  the plot (not {@code null})., +     * @param axis  the range axis (not {@code null})., +     * @param marker  the marker to be drawn (not {@code null})., +     * @param dataArea  the area inside the axes (not {@code null})., +     * @param g2  the graphics device (not {@code null})., +     * @param plot  the plot (not {@code null})., +     * @param axis  the range axis (not {@code null})., +     * @param marker  the marker to be drawn (not {@code null})., +     * @param dataArea  the area inside the axes (not {@code null})., +                } else { // PlotOrientation.HORIZONTAL, +                Point2D coords = calculateRangeMarkerTextAnchorPoint(, +                Rectangle2D r = TextUtils.calcAlignedStringBounds(label, , +                        g2, (float) coords.getX(), (float) coords.getY(), , +                        marker.getLabelTextAnchor());, +                g2.setPaint(marker.getLabelBackgroundColor());, +                g2.fill(r);, +                g2.setPaint(marker.getLabelPaint());, +                        (float) coords.getX(), (float) coords.getY(),, +     * Calculates the {@code (x, y)} coordinates for drawing the label for a , +     * marker on the range axis., +        } else if (orientation == PlotOrientation.VERTICAL) {, +        } else if (orientation == PlotOrientation.VERTICAL) {, +     * return {@code null} if {@link #isSeriesVisible(int)} or, +     * {@link #isSeriesVisibleInLegend(int)} returns {@code false}., +     * @return The legend item (possibly {@code null})., +     * @return {@code true} or {@code false}., +     * @return The drawing supplier (possibly {@code null})., +     * @param crosshairState  the crosshair state ({@code null} permitted,, +     * @param orientation  the plot orientation ({@code null} not, +     * Returns an independent copy of the renderer.  The {@code plot}, +     * @return The legend item collection (never {@code null})., +     * @return The label generator (never {@code null})., +     * @param generator  the generator ({@code null} not permitted)., +     * @return The tool tip generator (possibly {@code null})., +     * @param generator  the generator ({@code null} permitted)., +     * @return The URL generator (possibly {@code null})., +     * @param generator  the generator ({@code null} permitted)., +     * @param hotspot  the hotspot ({@code null} not permitted)., +     * @param hotspot  the entity area (if {@code null} a default will be, +     *                 used if {@code area} is {@code null})., +     *                 used if {@code area} is {@code null})., +     * @param generator  the generator ({@code null} permitted)., +     * @return A tool tip generator (possibly {@code null})., +     * @param generator  the generator ({@code null} permitted).]