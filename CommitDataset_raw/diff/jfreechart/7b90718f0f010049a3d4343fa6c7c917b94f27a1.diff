[+++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/data/general/HeatMapUtils.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + * -----------------, + * HeatMapUtils.java, + * -----------------, + * (C) Copyright 2009-2017, by Object Refinery Limited., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes:, + * --------, + * 28-Jan-2009 : Version 1 (DG);, + * 03-Jul-2013 : Use ParamChecks (DG);, + *, + */, +, +package org.jfree.data.general;, +, +import java.awt.Graphics2D;, +import java.awt.Paint;, +import java.awt.image.BufferedImage;, +import org.jfree.chart.renderer.PaintScale;, +import org.jfree.chart.util.ParamChecks;, +import org.jfree.data.xy.XYDataset;, +import org.jfree.data.xy.XYSeries;, +import org.jfree.data.xy.XYSeriesCollection;, +, +/**, + * A utility class for the {@link HeatMapDataset}., + *, + * @since 1.0.13, + */, +public abstract class HeatMapUtils {, +, +    /**, +     * Returns a dataset containing one series that holds a copy of the (x, z), +     * data from one row (y-index) of the specified dataset., +     *, +     * @param dataset  the dataset ({@code null} not permitted)., +     * @param row  the row (y) index., +     * @param seriesName  the series name/key ({@code null} not permitted)., +     *, +     * @return The dataset., +     */, +    public static XYDataset extractRowFromHeatMapDataset(HeatMapDataset dataset,, +            int row, Comparable seriesName) {, +        XYSeries series = new XYSeries(seriesName);, +        int cols = dataset.getXSampleCount();, +        for (int c = 0; c < cols; c++) {, +            series.add(dataset.getXValue(c), dataset.getZValue(c, row));, +        }, +        XYSeriesCollection result = new XYSeriesCollection(series);, +        return result;, +    }, +, +    /**, +     * Returns a dataset containing one series that holds a copy of the (y, z), +     * data from one column (x-index) of the specified dataset., +     *, +     * @param dataset  the dataset ({@code null} not permitted)., +     * @param column  the column (x) index., +     * @param seriesName  the series name ({@code null} not permitted)., +     *, +     * @return The dataset., +     */, +    public static XYDataset extractColumnFromHeatMapDataset(, +            HeatMapDataset dataset, int column, Comparable seriesName) {, +        XYSeries series = new XYSeries(seriesName);, +        int rows = dataset.getYSampleCount();, +        for (int r = 0; r < rows; r++) {, +            series.add(dataset.getYValue(r), dataset.getZValue(column, r));, +        }]