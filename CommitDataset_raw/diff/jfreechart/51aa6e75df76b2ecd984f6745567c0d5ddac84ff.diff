[+++ b/ChangeLog, +2011-10-28  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Bug 3429707:, +    * org/jfree/chart/axis/LogAxis.java, +    (refreshTicksHorizontal): Fixed endless loop for 0 TickUnit, +    (refreshTicksVertical): Likewise;, +, +++ b/ChangeLog, +2011-10-28  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Bug 3429707:, +    * org/jfree/chart/axis/LogAxis.java, +    (refreshTicksHorizontal): Fixed endless loop for 0 TickUnit, +    (refreshTicksVertical): Likewise;, +, +++ b/source/org/jfree/chart/axis/LogAxis.java, + * 28-Oct-2011 : Fixed endless loop for 0 TickUnit, # 3429707 (MH);, +        boolean hasTicks = (this.tickUnit.getSize() > 0.0), +                           && !Double.isInfinite(start);, +        while (hasTicks && current <= end) {, +        boolean hasTicks = (this.tickUnit.getSize() > 0.0), +                           && !Double.isInfinite(start);, +        while (hasTicks && current <= end) {, +++ b/ChangeLog, +2011-10-28  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Bug 3429707:, +    * org/jfree/chart/axis/LogAxis.java, +    (refreshTicksHorizontal): Fixed endless loop for 0 TickUnit, +    (refreshTicksVertical): Likewise;, +, +++ b/source/org/jfree/chart/axis/LogAxis.java, + * 28-Oct-2011 : Fixed endless loop for 0 TickUnit, # 3429707 (MH);, +        boolean hasTicks = (this.tickUnit.getSize() > 0.0), +                           && !Double.isInfinite(start);, +        while (hasTicks && current <= end) {, +        boolean hasTicks = (this.tickUnit.getSize() > 0.0), +                           && !Double.isInfinite(start);, +        while (hasTicks && current <= end) {, +++ b/tests/org/jfree/chart/axis/junit/LogAxisTests.java, + * 28-Oct-2011 : Cdded test for endless loop, # 3429707 (MH);, +import java.awt.Graphics2D;, +import java.awt.image.BufferedImage;, +import org.jfree.chart.axis.AxisState;, +    , +    /**, +     * Checks that a TickUnit with a size of 0 doesn't crash., +     */, +    public void testrefreshTicksWithZeroTickUnit() {, +        LogAxis axis = new LogAxis();, +        AxisState state = new AxisState();, +        BufferedImage image = new BufferedImage(200, 100,, +                BufferedImage.TYPE_INT_ARGB);, +        Graphics2D g2 = image.createGraphics();, +        Rectangle2D area = new Rectangle2D.Double(0.0, 0.0, 200, 100);, +        axis.refreshTicks(g2, state, area, RectangleEdge.TOP);, +    }]