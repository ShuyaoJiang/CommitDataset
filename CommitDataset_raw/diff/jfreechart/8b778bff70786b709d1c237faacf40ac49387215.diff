[+++ b/src/main/java/org/jfree/chart/text/TextBlock.java, +     * @return The alignment (never {@code null})., +     * @param alignment  the alignment ({@code null} not permitted)., +    public void addLine(String text, Font font, Paint paint) {, +    public void addLine(TextLine line) {, +    public Size2D calculateDimensions(Graphics2D g2) {, +        Iterator iterator = this.lines.iterator();, +     * @param g2  the graphics device ({@code null} not permitted)., +     * @param anchor  the text block anchor ({@code null} not permitted)., +    public Shape calculateBounds(Graphics2D g2, float anchorX, float anchorY, , +            TextBlockAnchor anchor, float rotateX, float rotateY, double angle) {, +        Size2D d = calculateDimensions(g2);, +        float[] offsets = calculateOffsets(anchor, d.getWidth(), d.getHeight());, +        Rectangle2D bounds = new Rectangle2D.Double(anchorX + offsets[0], , +                anchorY + offsets[1], d.getWidth(), d.getHeight());, +        Shape rotatedBounds = ShapeUtils.rotateShape(bounds, angle, rotateX, , +                rotateY);, +    public void draw(Graphics2D g2, float x, float y, TextBlockAnchor anchor) {, +    public void draw(Graphics2D g2, float anchorX, float anchorY, , +            TextBlockAnchor anchor, float rotateX, float rotateY, double angle) {, +        Size2D d = calculateDimensions(g2);, +        float[] offsets = calculateOffsets(anchor, d.getWidth(), , +        Iterator iterator = this.lines.iterator();, +            line.draw(g2, anchorX + offsets[0] + lineOffset, , +                    anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, , +                    rotateX, rotateY, angle);, +    private float[] calculateOffsets(TextBlockAnchor anchor, double width, , +            double height) {, +        float[] result = new float[2];, +     * @param obj  the object to test against ({@code null} permitted)., +    @Override, +    public boolean equals(Object obj) {, +            TextBlock block = (TextBlock) obj;, +    @Override]