[+++ b/ChangeLog, +    Bug 1927239:, +    * source/org/jfree/chart/renderer/category/WaterfallBarRenderer.java, +    (findRangeBounds): Reimplemented to account for the special treatment of, +    the value in the final category,, +    * source/org/jfree/data/general/DatasetUtilities.java, +    (findCumulativeRangeBounds): Include final category., +, +2008-03-27  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +    Bug 1927239:, +    * source/org/jfree/chart/renderer/category/WaterfallBarRenderer.java, +    (findRangeBounds): Reimplemented to account for the special treatment of, +    the value in the final category,, +    * source/org/jfree/data/general/DatasetUtilities.java, +    (findCumulativeRangeBounds): Include final category., +, +2008-03-27  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/renderer/category/WaterfallBarRenderer.java, + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2008, by Object Refinery Limited and Contributors., + * 27-Mar-2008 : Fixed error in findRangeBounds() method (DG);, + * the {@link CategoryPlot} class.  Some quirks to note:, + * <ul>, + * <li>the value in the last category of the dataset should be (redundantly) , + *   specified as the sum of the items in the preceding categories - otherwise, + *   the final bar in the plot will be incorrectly plotted;</li>, + * <li>the bar colors are defined using special methods in this class - the , + *   inherited methods (for example, , + *   {@link AbstractRenderer#setSeriesPaint(int, Paint)}) are ignored;</li>, + * </ul>, +public class WaterfallBarRenderer extends BarRenderer {, +          , +        if (dataset == null) {, +            throw new IllegalArgumentException("Null 'dataset' argument.");, +        }, +            , +        boolean allItemsNull = true; // we'll set this to false if there is at , +                                     // least one non-null data item... , +        double minimum = 0.0;, +        double maximum = 0.0;, +        int columnCount = dataset.getColumnCount();, +        for (int row = 0; row < dataset.getRowCount(); row++) {, +            double runningTotal = 0.0;, +            for (int column = 0; column <= columnCount - 1; column++) {, +                Number n = dataset.getValue(row, column);, +                if (n != null) {, +                    allItemsNull = false;, +                    double value = n.doubleValue();, +                    if (column == columnCount - 1) {, +                    	// treat the last column value as an absolute, +                    	runningTotal = value;, +                    }, +                    else {, +                        runningTotal = runningTotal + value;, +                    }, +                    minimum = Math.min(minimum, runningTotal);, +                    maximum = Math.max(maximum, runningTotal);, +                }, +            } , +            , +        }, +        if (!allItemsNull) {, +            return new Range(minimum, maximum);, +        }, +        else {, +            return null;, +        }, +            , +++ b/ChangeLog, +    Bug 1927239:, +    * source/org/jfree/chart/renderer/category/WaterfallBarRenderer.java, +    (findRangeBounds): Reimplemented to account for the special treatment of, +    the value in the final category,, +    * source/org/jfree/data/general/DatasetUtilities.java, +    (findCumulativeRangeBounds): Include final category., +, +2008-03-27  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/renderer/category/WaterfallBarRenderer.java, + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2008, by Object Refinery Limited and Contributors., + * 27-Mar-2008 : Fixed error in findRangeBounds() method (DG);, + * the {@link CategoryPlot} class.  Some quirks to note:, + * <ul>, + * <li>the value in the last category of the dataset should be (redundantly) , + *   specified as the sum of the items in the preceding categories - otherwise, + *   the final bar in the plot will be incorrectly plotted;</li>, + * <li>the bar colors are defined using special methods in this class - the , + *   inherited methods (for example, , + *   {@link AbstractRenderer#setSeriesPaint(int, Paint)}) are ignored;</li>, + * </ul>, +public class WaterfallBarRenderer extends BarRenderer {, +          , +        if (dataset == null) {, +            throw new IllegalArgumentException("Null 'dataset' argument.");, +        }, +            ]