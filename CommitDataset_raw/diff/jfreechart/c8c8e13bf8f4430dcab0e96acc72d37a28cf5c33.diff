[+++ b/tests/org/jfree/chart/axis/SegmentedTimelineAdditionalTest.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + * ---------------------------, + * SegmentedTimelineTest2.java, + * ---------------------------, + * (C) Copyright 2004-2013, by Object Refinery Limited and Contributors., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes, + * -------, + * 02-Aug-2004 : Added standard header (DG);, + * 02-Feb-2007 : Removed author tags all over JFreeChart sources (DG);, + *, + */, +, +package org.jfree.chart.axis;, +, +import static org.junit.Assert.assertTrue;, +, +import java.util.Calendar;, +import java.util.Date;, +import java.util.Locale;, +import java.util.TimeZone;, +import org.junit.Test;, +, +/**, + * Some tests for the {@link SegmentedTimeline} class., + */, +public class SegmentedTimelineAdditionalTest {, +, +    /**, +     * Constructor, +     */, +    public SegmentedTimelineAdditionalTest() {, +        super();, +    }, +, +    /**, +     * Test 1 checks 9am Friday 26 March 2004 converts to a timeline value and, +     * back again correctly.  This is prior to Daylight Saving., +     */, +    @Test, +    public void test1() {, +        TimeZone savedZone = TimeZone.getDefault();, +        TimeZone.setDefault(TimeZone.getTimeZone("Europe/London"));, +        Locale savedLocale = Locale.getDefault();, +        Locale.setDefault(Locale.UK);, +        Calendar cal = Calendar.getInstance(Locale.UK);, +        cal.set(Calendar.YEAR, 2004);, +        cal.set(Calendar.MONTH, Calendar.MARCH);, +        cal.set(Calendar.DAY_OF_MONTH, 26);, +        cal.set(Calendar.HOUR_OF_DAY, 9);, +        cal.set(Calendar.MINUTE, 0);, +        cal.set(Calendar.SECOND, 0);, +        cal.set(Calendar.MILLISECOND, 0);, +        Date date = cal.getTime();, +, +        SegmentedTimeline timeline = getTimeline();, +        long value = timeline.toTimelineValue(date);, +        long ms = timeline.toMillisecond(value);, +        Calendar cal2 = Calendar.getInstance(Locale.UK);, +        cal2.setTime(new Date(ms));, +        Date reverted = cal2.getTime();, +        assertTrue("test1", value == (900000 * 34), +                && date.getTime() == reverted.getTime());, +        TimeZone.setDefault(savedZone);, +        Locale.setDefault(savedLocale);, +    }, +, +    /**, +     * Test 2 checks 9.15am Friday 26 March 2004 converts to a timeline value, +     * and back again correctly.  This is prior to Daylight Saving., +     */]