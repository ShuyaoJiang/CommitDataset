[+++ b/ChangeLog, +    * source/org/jfree/data/DataUtilities.java, +    (clone(double[][]): New method,, +    * tests/org/jfree/data/junit/DataUtilitiesTests.java, +    (testClone): New method., +, +2009-01-28  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +    * source/org/jfree/data/DataUtilities.java, +    (clone(double[][]): New method,, +    * tests/org/jfree/data/junit/DataUtilitiesTests.java, +    (testClone): New method., +, +2009-01-28  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/data/DataUtilities.java, + * 28-Jan-2009 : Added clone(double[][]) method (DG);, +     * Returns a clone of the specified array., +     *, +     * @param source  the source array (<code>null</code> not permitted)., +     *, +     * @return A clone of the array., +     *, +     * @since 1.0.13, +     */, +    public static double[][] clone(double[][] source) {, +        if (source == null) {, +            throw new IllegalArgumentException("Null 'source' argument.");, +        }, +        double[][] clone = new double[source.length][];, +        for (int i = 0; i < source.length; i++) {, +            if (source[i] != null) {, +                double[] row = new double[source[i].length];, +                System.arraycopy(source[i], 0, row, 0, source[i].length);, +                clone[i] = row;, +            }, +        }, +        return clone;, +    }, +, +    /**, +++ b/ChangeLog, +    * source/org/jfree/data/DataUtilities.java, +    (clone(double[][]): New method,, +    * tests/org/jfree/data/junit/DataUtilitiesTests.java, +    (testClone): New method., +, +2009-01-28  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/data/DataUtilities.java, + * 28-Jan-2009 : Added clone(double[][]) method (DG);, +     * Returns a clone of the specified array., +     *, +     * @param source  the source array (<code>null</code> not permitted)., +     *, +     * @return A clone of the array., +     *, +     * @since 1.0.13, +     */, +    public static double[][] clone(double[][] source) {, +        if (source == null) {, +            throw new IllegalArgumentException("Null 'source' argument.");, +        }, +        double[][] clone = new double[source.length][];, +        for (int i = 0; i < source.length; i++) {, +            if (source[i] != null) {, +                double[] row = new double[source[i].length];, +                System.arraycopy(source[i], 0, row, 0, source[i].length);, +                clone[i] = row;, +            }, +        }, +        return clone;, +    }, +, +    /**, +++ b/tests/org/jfree/data/junit/DataUtilitiesTests.java, + * 28-Jan-2009 : Added tests for clone(double[][]) (DG);, +    }, +    /**, +     * Some tests for the clone() method., +     */, +    public void testClone() {, +        double[][] a = new double[1][];, +        double[][] b = DataUtilities.clone(a);, +        assertTrue(DataUtilities.equal(a, b));, +        a[0] = new double[] { 3.0, 4.0 };, +        assertFalse(DataUtilities.equal(a, b));, +        b[0] = new double[] { 3.0, 4.0 };, +        assertTrue(DataUtilities.equal(a, b));, +, +        a = new double[2][3];, +        a[0][0] = 1.23;, +        a[1][1] = Double.NaN;, +        b = DataUtilities.clone(a);, +        assertTrue(DataUtilities.equal(a, b));, +, +        a[0][0] = 99.9;, +        assertFalse(DataUtilities.equal(a, b));, +        b[0][0] = 99.9;]