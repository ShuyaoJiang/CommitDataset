[+++ b/ChangeLog, +    * source/org/jfree/chart/util/RelativeDateFormat.java, +    (hourFormatter): New field,, +    (minuteFormatter): New field,, +    (RelativeDateFormat(long)): Initialise new fields,, +    (setDayFormatter): New method,, +    (setHourFormatter): Likewise,, +    (setMinuteFormatter): Likewise,, +    (format): Use new fields for formatting,, +    (equals): Updated for new fields., +, +2008-09-01  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +    * source/org/jfree/chart/util/RelativeDateFormat.java, +    (hourFormatter): New field,, +    (minuteFormatter): New field,, +    (RelativeDateFormat(long)): Initialise new fields,, +    (setDayFormatter): New method,, +    (setHourFormatter): Likewise,, +    (setMinuteFormatter): Likewise,, +    (format): Use new fields for formatting,, +    (equals): Updated for new fields., +, +2008-09-01  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/util/RelativeDateFormat.java, + * 01-Sep-2008 : Added new fields for hour and minute formatting, based on, + *               patch 2033092 (DG);, +     * A formatter for the hours., +     *, +     * @since 1.0.11, +     */, +    private NumberFormat hourFormatter;, +, +    /**, +     * A formatter for the minutes., +     *, +     * @since 1.0.11, +     */, +    private NumberFormat minuteFormatter;, +, +    /**, +     * Creates a new instance with base milliseconds set to zero., +        this.dayFormatter = NumberFormat.getNumberInstance();, +        this.hourFormatter = NumberFormat.getNumberInstance();, +        this.minuteFormatter = NumberFormat.getNumberInstance();, +     * Sets the formatter for the days., +     *, +     * @param formatter  the formatter (<code>null</code> not permitted)., +     *, +     * @since 1.0.11, +     */, +    public void setDayFormatter(NumberFormat formatter) {, +        if (formatter == null) {, +            throw new IllegalArgumentException("Null 'formatter' argument.");, +        }, +        this.dayFormatter = formatter;, +    }, +, +    /**, +     * Sets the formatter for the hours., +     *, +     * @param formatter  the formatter (<code>null</code> not permitted)., +     *, +     * @since 1.0.11, +     */, +    public void setHourFormatter(NumberFormat formatter) {, +        if (formatter == null) {, +            throw new IllegalArgumentException("Null 'formatter' argument.");, +        }, +        this.hourFormatter = formatter;, +    }, +, +    /**, +     * Sets the formatter for the minutes., +     *, +     * @param formatter  the formatter (<code>null</code> not permitted)., +     *, +     * @since 1.0.11, +     */, +    public void setMinuteFormatter(NumberFormat formatter) {, +        if (formatter == null) {, +            throw new IllegalArgumentException("Null 'formatter' argument.");, +        }, +        this.minuteFormatter = formatter;, +    }, +, +    /**, +            toAppendTo.append(this.hourFormatter.format(hours), +                    + getHourSuffix());, +        toAppendTo.append(this.minuteFormatter.format(minutes), +                + getMinuteSuffix());, +        if (!this.dayFormatter.equals(that.dayFormatter)) {, +            return false;, +        }, +        if (!this.hourFormatter.equals(that.hourFormatter)) {, +            return false;, +        }, +        if (!this.minuteFormatter.equals(that.minuteFormatter)) {]