[+++ b/ChangeLog, +    Bug 3445507:, +    * source/org/jfree/data/time/TimeSeriesCollection.java, +    (getRangeBounds(boolean)): New method,, +    (getRangeBounds(List, Range, boolean)): Fix combining of ranges., +, +2012-01-08  David Gilbert <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +    Bug 3445507:, +    * source/org/jfree/data/time/TimeSeriesCollection.java, +    (getRangeBounds(boolean)): New method,, +    (getRangeBounds(List, Range, boolean)): Fix combining of ranges., +, +2012-01-08  David Gilbert <david.gilbert@object-refinery.com>, +, +++ b/NEWS, +3445507 : TimeSeriesCollection.findRangeBounds() regression;, +++ b/ChangeLog, +    Bug 3445507:, +    * source/org/jfree/data/time/TimeSeriesCollection.java, +    (getRangeBounds(boolean)): New method,, +    (getRangeBounds(List, Range, boolean)): Fix combining of ranges., +, +2012-01-08  David Gilbert <david.gilbert@object-refinery.com>, +, +++ b/NEWS, +3445507 : TimeSeriesCollection.findRangeBounds() regression;, +++ b/source/org/jfree/data/time/TimeSeriesCollection.java, + * (C) Copyright 2000-2012, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2012, by Object Refinery Limited., + * 08-Jan-2012 : Fixed getRangeBounds() method (bug 3445507) (DG);, +     * @param includeInterval  ignored for this dataset., +     * , +     * @return The range of value in the dataset (possibly <code>null</code>)., +     *, +     * @since 1.0.15, +     */, +    public Range getRangeBounds(boolean includeInterval) {, +        Range result = null;, +        Iterator iterator = this.data.iterator();, +        while (iterator.hasNext()) {, +            TimeSeries series = (TimeSeries) iterator.next();, +            Range r = null;, +            r = new Range(series.getMinY(), series.getMaxY());, +            result = Range.combineIgnoringNaN(result, r);, +        }, +        return result;, +    }, +, +    /**, +     * Returns the bounds for the y-values in the dataset., +     *, +            result = Range.combineIgnoringNaN(result, r);, +++ b/ChangeLog, +    Bug 3445507:, +    * source/org/jfree/data/time/TimeSeriesCollection.java, +    (getRangeBounds(boolean)): New method,, +    (getRangeBounds(List, Range, boolean)): Fix combining of ranges., +, +2012-01-08  David Gilbert <david.gilbert@object-refinery.com>, +, +++ b/NEWS, +3445507 : TimeSeriesCollection.findRangeBounds() regression;, +++ b/source/org/jfree/data/time/TimeSeriesCollection.java, + * (C) Copyright 2000-2012, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2012, by Object Refinery Limited., + * 08-Jan-2012 : Fixed getRangeBounds() method (bug 3445507) (DG);, +     * @param includeInterval  ignored for this dataset., +     * , +     * @return The range of value in the dataset (possibly <code>null</code>)., +     *, +     * @since 1.0.15, +     */, +    public Range getRangeBounds(boolean includeInterval) {, +        Range result = null;, +        Iterator iterator = this.data.iterator();, +        while (iterator.hasNext()) {, +            TimeSeries series = (TimeSeries) iterator.next();, +            Range r = null;, +            r = new Range(series.getMinY(), series.getMaxY());, +            result = Range.combineIgnoringNaN(result, r);, +        }, +        return result;, +    }, +, +    /**, +     * Returns the bounds for the y-values in the dataset., +     *, +            result = Range.combineIgnoringNaN(result, r);, +++ b/tests/org/jfree/data/time/junit/TimeSeriesCollectionTests.java, +    /**, +     * Some checks for the getRangeBounds() method., +     */, +    public void testGetRangeBounds() {, +        TimeSeriesCollection dataset = new TimeSeriesCollection();, +        Range r = dataset.getRangeBounds(false);, +        assertNull(r);, +, +        TimeSeries s1 = new TimeSeries("S1");]