[+++ b/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java, + * (C) Copyright 2003-2013, by Matthias Rose and Contributors., + *                   Lukasz Rzeszotarski;, + * 05-Dec-2013 : Added setStepPoint() method (LR);, +     * The factor (from 0.0 to 1.0) that determines the position of the, +     * step., +     *, +     * @since 1.0.18., +     */, +    private double stepPoint;, +, +    /**, +    public XYStepAreaRenderer(int type, XYToolTipGenerator toolTipGenerator,, +        this.stepPoint = 1.0;, +     * Returns the fraction of the domain position between two points on which, +     * the step is drawn.  The default is 1.0d, which means the step is drawn, +     * at the domain position of the second`point. If the stepPoint is 0.5d the, +     * step is drawn at half between the two points., +     *, +     * @return The fraction of the domain position between two points where the, +     *         step is drawn., +     *, +     * @see #setStepPoint(double), +     *, +     * @since 1.0.18, +     */, +    public double getStepPoint() {, +        return stepPoint;, +    }, +     , +    /**, +     * Sets the step point and sends a {@link RendererChangeEvent} to all, +     * registered listeners., +     *, +     * @param stepPoint  the step point (in the range 0.0 to 1.0), +     *, +     * @see #getStepPoint(), +     *, +     * @since 1.0.18, +     */, +    public void setStepPoint(double stepPoint) {, +        if (stepPoint < 0.0d || stepPoint > 1.0d) {, +             throw new IllegalArgumentException(, +                     "Requires stepPoint in [0.0;1.0]");, +        }, +        this.stepPoint = stepPoint;, +        fireChangeEvent();, +    }, +, +    /**, +                double transXs = transX0 + (getStepPoint(), +                        * (transX1 - transX0));, +                    this.pArea.addPoint((int) transXs, (int) transY0);, +                    this.pArea.addPoint((int) transXs, (int) transY1);, +                    this.pArea.addPoint((int) transY0, (int) transXs);, +                    this.pArea.addPoint((int) transY1, (int) transXs);, +        if (this.stepPoint != that.stepPoint) {, +            return false;, +        }]