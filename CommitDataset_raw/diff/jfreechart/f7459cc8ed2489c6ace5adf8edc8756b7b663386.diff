[+++ b/ChangeLog, +2008-04-22  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/data/xy/CategoryTableXYDataset.java: , +    Implemented PublicCloneable, plus, +    (clone): New method override., +, +++ b/ChangeLog, +2008-04-22  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/data/xy/CategoryTableXYDataset.java: , +    Implemented PublicCloneable, plus, +    (clone): New method override., +, +++ b/source/org/jfree/data/xy/CategoryTableXYDataset.java, + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2008, by Andreas Schroeder and Contributors., + * 22-Apr-2008 : Implemented PublicCloneable, and fixed clone() method (DG);, +import org.jfree.util.PublicCloneable;, +        implements TableXYDataset, IntervalXYDataset, DomainInfo,, +                   PublicCloneable{, +    /**, +     * Returns an independent copy of this dataset., +     *, +     * @return A clone., +     *, +     * @throws CloneNotSupportedException if there is some reason that cloning, +     *     cannot be performed., +     */, +    public Object clone() throws CloneNotSupportedException {, +        CategoryTableXYDataset clone = (CategoryTableXYDataset) super.clone();, +        clone.values = (DefaultKeyedValues2D) this.values.clone();, +        clone.intervalDelegate = new IntervalXYDelegate(clone);, +        // need to configure the intervalDelegate to match the original, +        clone.intervalDelegate.setFixedIntervalWidth(getIntervalWidth());, +        clone.intervalDelegate.setAutoWidth(isAutoWidth());, +        clone.intervalDelegate.setIntervalPositionFactor(, +                getIntervalPositionFactor());, +        return clone;, +    }, +, +++ b/ChangeLog, +2008-04-22  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/data/xy/CategoryTableXYDataset.java: , +    Implemented PublicCloneable, plus, +    (clone): New method override., +, +++ b/source/org/jfree/data/xy/CategoryTableXYDataset.java, + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2008, by Andreas Schroeder and Contributors., + * 22-Apr-2008 : Implemented PublicCloneable, and fixed clone() method (DG);, +import org.jfree.util.PublicCloneable;, +        implements TableXYDataset, IntervalXYDataset, DomainInfo,, +                   PublicCloneable{, +    /**, +     * Returns an independent copy of this dataset., +     *, +     * @return A clone., +     *, +     * @throws CloneNotSupportedException if there is some reason that cloning, +     *     cannot be performed., +     */, +    public Object clone() throws CloneNotSupportedException {, +        CategoryTableXYDataset clone = (CategoryTableXYDataset) super.clone();, +        clone.values = (DefaultKeyedValues2D) this.values.clone();, +        clone.intervalDelegate = new IntervalXYDelegate(clone);, +        // need to configure the intervalDelegate to match the original, +        clone.intervalDelegate.setFixedIntervalWidth(getIntervalWidth());, +        clone.intervalDelegate.setAutoWidth(isAutoWidth());, +        clone.intervalDelegate.setIntervalPositionFactor(, +                getIntervalPositionFactor());, +        return clone;, +    }, +, +++ b/tests/org/jfree/data/xy/junit/CategoryTableXYDatasetTests.java, + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2008, by Object Refinery Limited and Contributors., + * 22-Apr-2008 : Added testPublicCloneable (DG);, +import org.jfree.util.PublicCloneable;, +, +        d1.add(3.0, 3.3, "Series 1");, +        assertFalse(d1.equals(d2));, +        d2.add(3.0, 3.3, "Series 1");, +        assertTrue(d1.equals(d2));, +, +        d1.setIntervalPositionFactor(0.33);, +        assertFalse(d1.equals(d2));, +        d2.setIntervalPositionFactor(0.33);, +        assertTrue(d1.equals(d2));, +    }, +, +    /**, +     * Another check for cloning - making sure it works for a customised, +     * interval delegate., +     */, +    public void testCloning2() {, +        CategoryTableXYDataset d1 = new CategoryTableXYDataset();, +        d1.add(1.0, 1.1, "Series 1");, +        d1.add(2.0, 2.2, "Series 1");]