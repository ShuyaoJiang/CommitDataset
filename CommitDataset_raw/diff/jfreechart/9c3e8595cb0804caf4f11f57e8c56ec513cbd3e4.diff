[+++ b/source/org/jfree/chart/plot/CategoryPlot.java, + * 10-Jul-2009 : Added optional drop shadow generator (DG);, +import java.awt.Rectangle;, +import java.awt.image.BufferedImage;, +import java.lang.annotation.Annotation;, +import org.jfree.chart.util.DefaultShadowGenerator;, +import org.jfree.chart.util.ShadowGenerator;, +     * The shadow generator for the plot (<code>null</code> permitted)., +     * , +     * @since 1.0.14, +     */, +    private ShadowGenerator shadowGenerator;, +, +    /**, +        this.shadowGenerator = new DefaultShadowGenerator();, +     * Returns the shadow generator for the plot, if any., +     *, +     * @return The shadow generator (possibly <code>null</code>)., +     *, +     * @since 1.0.14, +     */, +    public ShadowGenerator getShadowGenerator() {, +        return this.shadowGenerator;, +    }, +, +    /**, +     * Sets the shadow generator for the plot and sends a, +     * {@link PlotChangeEvent} to all registered listeners.  Note that this is, +     * a btmap drop-shadow generation facility and is separate from the, +     * vector based show option that is controlled via the, +     * {@link setShadowPaint()} method., +     *, +     * @param generator  the generator (<code>null</code> permitted)., +     *, +     * @since 1.0.14, +     */, +    public void setShadowGenerator(ShadowGenerator generator) {, +        this.shadowGenerator = generator;, +        fireChangeEvent();, +    }, +, +    /**, +     * Trims a rectangle to integer coordinates., +     *, +     * @param rect  the incoming rectangle., +     *, +     * @return A rectangle with integer coordinates., +     */, +    private Rectangle integerise(Rectangle2D rect) {, +        int x0 = (int) Math.ceil(rect.getMinX());, +        int y0 = (int) Math.ceil(rect.getMinY());, +        int x1 = (int) Math.floor(rect.getMaxX());, +        int y1 = (int) Math.floor(rect.getMaxY());, +        return new Rectangle(x0, y0, (x1 - x0), (y1 - y0));, +    }, +, +    /**, +        dataArea = integerise(dataArea);, +        if (dataArea.isEmpty()) {, +            return;, +        }, +        Graphics2D savedG2 = g2;, +        Rectangle2D savedDataArea = dataArea;, +        BufferedImage dataImage = null;, +        if (this.shadowGenerator != null) {, +            dataImage = new BufferedImage((int) dataArea.getWidth(),, +                    (int)dataArea.getHeight(), BufferedImage.TYPE_INT_ARGB);, +            g2 = dataImage.createGraphics();, +            g2.setRenderingHints(savedG2.getRenderingHints());, +            dataArea = new Rectangle(0, 0, dataImage.getWidth(),, +                    dataImage.getHeight());, +        }, +, +        if (this.shadowGenerator != null) {, +            BufferedImage shadowImage = this.shadowGenerator.createDropShadow(, +                    dataImage);, +            g2 = savedG2;, +            dataArea = savedDataArea;, +            g2.drawImage(shadowImage, (int) savedDataArea.getX() , +                    + this.shadowGenerator.calculateOffsetX(),, +                    (int) savedDataArea.getY() , +                    + this.shadowGenerator.calculateOffsetY(), null);, +            g2.drawImage(dataImage, (int) savedDataArea.getX(),, +                    (int) savedDataArea.getY(), null);, +        }, +        if (!ObjectUtilities.equal(this.shadowGenerator,, +                that.shadowGenerator)) {, +            return false;, +        }, +++ b/source/org/jfree/chart/plot/CategoryPlot.java, + * 10-Jul-2009 : Added optional drop shadow generator (DG);, +import java.awt.Rectangle;, +import java.awt.image.BufferedImage;, +import java.lang.annotation.Annotation;, +import org.jfree.chart.util.DefaultShadowGenerator;, +import org.jfree.chart.util.ShadowGenerator;, +     * The shadow generator for the plot (<code>null</code> permitted)., +     * , +     * @since 1.0.14, +     */]