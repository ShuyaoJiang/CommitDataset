[+++ b/source/org/jfree/chart/renderer/DefaultPolarItemRenderer.java, + * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2013, by Solution Engineering, Inc. and, + * 01-Jul-2013 : Remove deprecated method calls (DG);, +import org.jfree.chart.util.ParamChecks;, +     * Sets the composite which will be used for filling polygons and sends a, +        ParamChecks.nullNotPermitted(composite, "composite");, +        ParamChecks.nullNotPermitted(line, "line");, +        final int numPoints = dataset.getItemCount(seriesIndex);, +        if (numPoints == 0) {, +            return;, +        }, +     * @param plot  the plot (<code>null</code> not permitted)., +     * @param ticks  the ticks (<code>null</code> not permitted)., +        ValueAxis axis = plot.getAxis();, +        double axisMin = axis.getLowerBound();, +        double maxRadius = axis.getUpperBound();, +        Point center = plot.translateToJava2D(0, axisMin, axis, dataArea);, +            Point p = plot.translateToJava2D(tickVal, maxRadius, axis, , +                    dataArea);, +     * @param g2  the drawing surface (<code>null</code> not permitted)., +     * @param plot  the plot (<code>null</code> not permitted)., +     * @param radialAxis  the radial axis (<code>null</code> not permitted)., +     * @param ticks  the ticks (<code>null</code> not permitted)., +    public void drawRadialGridLines(Graphics2D g2, PolarPlot plot, , +            ValueAxis radialAxis, List ticks, Rectangle2D dataArea) {, +        Point center = plot.translateToJava2D(0, axisMin, radialAxis, dataArea);, +            double angleDegrees = plot.isCounterClockwise() , +                    ? plot.getAngleOffset() : -plot.getAngleOffset();, +            Point p = plot.translateToJava2D(angleDegrees,, +                    tick.getNumber().doubleValue(), radialAxis, dataArea);, +        LegendItem result;, +     * Returns the tooltip generator for the specified series and item., +     * , +     * @return The tooltip generator (possibly <code>null</code>)., +     * , +     * Returns the tool tip generator for the specified series., +     * , +     * @return The tooltip generator (possibly <code>null</code>)., +     *, +     * Sets the tooltip generator for the specified series., +     * , +     * @param series  the series index., +     * @param generator  the tool tip generator (<code>null</code> permitted)., +     * , +     * Returns the default tool tip generator., +     * , +     * @return The default tool tip generator (possibly <code>null</code>)., +     * , +     * Sets the default tool tip generator and sends a , +     * {@link RendererChangeEvent} to all registered listeners., +     * , +     * @param generator  the generator (<code>null</code> permitted)., +     * , +     * Returns the URL generator., +     * , +     * @return The URL generator (possibly <code>null</code>)., +     * , +     * Sets the URL generator., +     * , +     * @param urlGenerator  the generator (<code>null</code> permitted), +     * ]