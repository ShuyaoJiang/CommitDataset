[+++ b/src/main/java/org/jfree/chart/date/SpreadsheetDate.java, +    public SpreadsheetDate(int day, int month, int year) {, +                "The 'year' argument must be in range 1900 to 9999.");, +                "The 'month' argument must be in the range 1 to 12.");, +        } else {, +    public SpreadsheetDate(int serial) {, +        } else {, +    @Override, +     * Returns a {@code java.util.Date} equivalent to this date., +    @Override, +        Calendar calendar = Calendar.getInstance();, +    @Override, +    @Override, +    @Override, +     * {@code SUNDAY}, {@code MONDAY}, {@code TUESDAY}, , +     * {@code WEDNESDAY}, {@code THURSDAY}, {@code FRIDAY}, and , +     * {@code SATURDAY}., +    @Override, +     * @param object  the object to compare ({@code null} permitted)., +    public boolean equals(Object object) {, +            SerialDate s = (SerialDate) object;, +        } else {, +    @Override, +    @Override, +    public int compare(SerialDate other) {, +    @Override, +    public int compareTo(Object other) {, +     * @return {@code true} if this SerialDate represents the same date as, +    @Override, +    public boolean isOn(SerialDate other) {, +     * @return {@code true} if this SerialDate represents an earlier date, +    @Override, +    public boolean isBefore(SerialDate other) {, +     * @return {@code true} if this SerialDate represents the same date, +    public boolean isOnOrBefore(SerialDate other) {, +     * @return {@code true} if this SerialDate represents the same date, +    @Override, +    public boolean isAfter(SerialDate other) {, +     * @return {@code true} if this SerialDate represents the same date as, +    @Override, +    public boolean isOnOrAfter(SerialDate other) {, +     * Returns {@code true} if this {@link SerialDate} is within the , +    @Override, +    public boolean isInRange(SerialDate d1, SerialDate d2) {, +     * @return {@code true} if this SerialDate is within the specified , +    @Override, +    public boolean isInRange(SerialDate d1, SerialDate d2, int include) {, +        int s1 = d1.toSerial();, +        int s2 = d2.toSerial();, +        int start = Math.min(s1, s2);, +        int end = Math.max(s1, s2);, +        int s = toSerial();, +    private int calcSerial(int d, final int m, final int y) {]