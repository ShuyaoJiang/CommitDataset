[+++ b/source/org/jfree/chart/imagemap/StandardURLTagFragmentGenerator.java, + * 13-Dec-2007 : Revert change from 04-Dec-2007 (DG);, +     * @param urlText  the URL text (fully escaped)., +        // the URL text should already have been escaped by the URL generator, +        return " href=\"" + urlText + "\"";, +++ b/source/org/jfree/chart/imagemap/StandardURLTagFragmentGenerator.java, + * 13-Dec-2007 : Revert change from 04-Dec-2007 (DG);, +     * @param urlText  the URL text (fully escaped)., +        // the URL text should already have been escaped by the URL generator, +        return " href=\"" + urlText + "\"";, +++ b/source/org/jfree/chart/imagemap/URLTagFragmentGenerator.java, + * 13-Dec-2007 : Updated API docs (DG);, +import org.jfree.chart.urls.CategoryURLGenerator;, +import org.jfree.chart.urls.PieURLGenerator;, +import org.jfree.chart.urls.XYURLGenerator;, +import org.jfree.chart.urls.XYZURLGenerator;, +, +     * Note that the <code>urlText</code> will be created by a URL generator , +     * (such as {@link CategoryURLGenerator}, {@link PieURLGenerator}, , +     * {@link XYURLGenerator} or {@link XYZURLGenerator}) and that generator is , +     * responsible for ensuring that the URL text is correctly escaped., +     * @param urlText  the URL text (fully escaped)., +++ b/source/org/jfree/chart/imagemap/StandardURLTagFragmentGenerator.java, + * 13-Dec-2007 : Revert change from 04-Dec-2007 (DG);, +     * @param urlText  the URL text (fully escaped)., +        // the URL text should already have been escaped by the URL generator, +        return " href=\"" + urlText + "\"";, +++ b/source/org/jfree/chart/imagemap/URLTagFragmentGenerator.java, + * 13-Dec-2007 : Updated API docs (DG);, +import org.jfree.chart.urls.CategoryURLGenerator;, +import org.jfree.chart.urls.PieURLGenerator;, +import org.jfree.chart.urls.XYURLGenerator;, +import org.jfree.chart.urls.XYZURLGenerator;, +, +     * Note that the <code>urlText</code> will be created by a URL generator , +     * (such as {@link CategoryURLGenerator}, {@link PieURLGenerator}, , +     * {@link XYURLGenerator} or {@link XYZURLGenerator}) and that generator is , +     * responsible for ensuring that the URL text is correctly escaped., +     * @param urlText  the URL text (fully escaped)., +++ b/source/org/jfree/chart/urls/CategoryURLGenerator.java, + * 13-Dec-2007 : Updated API docs (DG);, +     * should be valid within the context of an XHTML 1.0 document.  Classes, +     * that implement this interface are responsible for correctly escaping, +     * any text that is derived from the dataset, as this may be user-specified, +     * and could pose a security risk., +     * @param dataset  the dataset., +    public String generateURL(CategoryDataset dataset, int series, , +            int category);, +++ b/source/org/jfree/chart/imagemap/StandardURLTagFragmentGenerator.java, + * 13-Dec-2007 : Revert change from 04-Dec-2007 (DG);, +     * @param urlText  the URL text (fully escaped)., +        // the URL text should already have been escaped by the URL generator, +        return " href=\"" + urlText + "\"";, +++ b/source/org/jfree/chart/imagemap/URLTagFragmentGenerator.java, + * 13-Dec-2007 : Updated API docs (DG);, +import org.jfree.chart.urls.CategoryURLGenerator;, +import org.jfree.chart.urls.PieURLGenerator;, +import org.jfree.chart.urls.XYURLGenerator;, +import org.jfree.chart.urls.XYZURLGenerator;, +, +     * Note that the <code>urlText</code> will be created by a URL generator , +     * (such as {@link CategoryURLGenerator}, {@link PieURLGenerator}, , +     * {@link XYURLGenerator} or {@link XYZURLGenerator}) and that generator is , +     * responsible for ensuring that the URL text is correctly escaped., +     * @param urlText  the URL text (fully escaped)., +++ b/source/org/jfree/chart/urls/CategoryURLGenerator.java, + * 13-Dec-2007 : Updated API docs (DG);, +     * should be valid within the context of an XHTML 1.0 document.  Classes, +     * that implement this interface are responsible for correctly escaping, +     * any text that is derived from the dataset, as this may be user-specified, +     * and could pose a security risk., +     * @param dataset  the dataset., +    public String generateURL(CategoryDataset dataset, int series, , +            int category);, +++ b/source/org/jfree/chart/urls/PieURLGenerator.java, + * 13-Dec-2007 : Updated API docs (DG);, +, + * {@link PieDataset}.  Classes that implement this interface:, + * <ul>, + * <li>are responsible for correctly escaping any text that is derived from the, + *     dataset, as this may be user-specified and could pose a security, + *     risk;</li>, + * <li>should be either (a) immutable, or (b) cloneable via the , + *     <code>PublicCloneable</code> interface (defined in the JCommon class , + *     library).  This provides a mechanism for the referring plot to clone , + *     the generator if necessary.</li>, + * </ul>, +++ b/source/org/jfree/chart/imagemap/StandardURLTagFragmentGenerator.java, + * 13-Dec-2007 : Revert change from 04-Dec-2007 (DG);, +     * @param urlText  the URL text (fully escaped)., +        // the URL text should already have been escaped by the URL generator, +        return " href=\"" + urlText + "\"";, +++ b/source/org/jfree/chart/imagemap/URLTagFragmentGenerator.java, + * 13-Dec-2007 : Updated API docs (DG);, +import org.jfree.chart.urls.CategoryURLGenerator;, +import org.jfree.chart.urls.PieURLGenerator;, +import org.jfree.chart.urls.XYURLGenerator;, +import org.jfree.chart.urls.XYZURLGenerator;, +, +     * Note that the <code>urlText</code> will be created by a URL generator ]