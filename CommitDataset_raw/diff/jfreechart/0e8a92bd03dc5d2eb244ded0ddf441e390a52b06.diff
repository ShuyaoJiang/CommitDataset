[+++ b/ChangeLog, +2007-11-21  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/plot/PiePlot.java, +	(DEFAULT_INTERIOR_GAP): Modified default value,, +	(maximumLabelWidth): Likewise,, +	(labelGap): Likewise,, +	(labelLinkMargin): Likewise,, +	(DEBUG_DRAW_INTERIOR): New debug flag,, +	(DEBUG_DRAW_LINK_AREA): Likewise,, +	(DEBUG_DRAW_PIE_AREA): Likewise,, +	(PiePlot(PieDataset)): Removed background paint setting,, +	(drawPie): Modified label position calculations and added debug code,, +	(drawLabels): Modified label width calculation,, +	* source/org/jfree/chart/plot/PiePlot3D.java, +	(depthFactor): Changed default value,, +	(draw): Modified chart dimension calculations and added debug code, in line, +	with changes made to the PiePlot class., +, +++ b/ChangeLog, +2007-11-21  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/plot/PiePlot.java, +	(DEFAULT_INTERIOR_GAP): Modified default value,, +	(maximumLabelWidth): Likewise,, +	(labelGap): Likewise,, +	(labelLinkMargin): Likewise,, +	(DEBUG_DRAW_INTERIOR): New debug flag,, +	(DEBUG_DRAW_LINK_AREA): Likewise,, +	(DEBUG_DRAW_PIE_AREA): Likewise,, +	(PiePlot(PieDataset)): Removed background paint setting,, +	(drawPie): Modified label position calculations and added debug code,, +	(drawLabels): Modified label width calculation,, +	* source/org/jfree/chart/plot/PiePlot3D.java, +	(depthFactor): Changed default value,, +	(draw): Modified chart dimension calculations and added debug code, in line, +	with changes made to the PiePlot class., +, +++ b/source/org/jfree/chart/plot/PiePlot.java, + * 21-Nov-2007 : Fixed labelling bugs, added debug code, restored default, + *               white background (DG); , +import java.awt.geom.Ellipse2D;, +    public static final double DEFAULT_INTERIOR_GAP = 0.08;, +     * as a percentage of the plot area width and height. , +    private double maximumLabelWidth = 0.14;, +     * The gap between the labels and the link corner, as a percentage of the , +     * plot width. , +    private double labelGap = 0.025;, +    private double labelLinkMargin = 0.025;, +     * This debug flag controls whether or not an outline is drawn showing the , +     * interior of the plot region.  This is drawn as a lightGray rectangle , +     * showing the padding provided by the 'interiorGap' setting., +     */, +    static final boolean DEBUG_DRAW_INTERIOR = false;, +    , +    /** , +     * This debug flag controls whether or not an outline is drawn showing the , +     * link area (in blue) and link ellipse (in yellow).  This controls where , +     * the label links have 'elbow' points., +     */, +    static final boolean DEBUG_DRAW_LINK_AREA = false;, +    , +    /**, +     * This debug flag controls whether or not an outline is drawn showing, +     * the pie area (in green)., +     */, +    static final boolean DEBUG_DRAW_PIE_AREA = false;, +    , +    /**, +        double labelReserve = 0.0;, +            labelReserve = this.labelGap + this.maximumLabelWidth;    , +                + labelReserve) * 2.0;, +        double gapVertical = plotArea.getHeight() * this.interiorGap * 2.0;, +, +        , +        if (DEBUG_DRAW_INTERIOR) {, +            double hGap = plotArea.getWidth() * this.interiorGap;, +            double vGap = plotArea.getHeight() * this.interiorGap;, +        , +            double igx1 = plotArea.getX() + hGap;, +            double igx2 = plotArea.getMaxX() - hGap;, +            double igy1 = plotArea.getY() + vGap;, +            double igy2 = plotArea.getMaxY() - vGap;, +            g2.setPaint(Color.gray);, +            g2.draw(new Rectangle2D.Double(igx1, igy1, igx2 - igx1, , +                    igy2 - igy1));, +        }, +        if (DEBUG_DRAW_LINK_AREA) {, +            g2.setPaint(Color.blue);, +            g2.draw(linkArea);, +            g2.setPaint(Color.yellow);, +            g2.draw(new Ellipse2D.Double(linkArea.getX(), linkArea.getY(), , +                    linkArea.getWidth(), linkArea.getHeight()));, +        }, +        , +        double hh = linkArea.getWidth() * lm * 2.0;, +        double vv = linkArea.getHeight() * lm * 2.0;, +        if (DEBUG_DRAW_PIE_AREA) {, +            g2.setPaint(Color.green);, +            g2.draw(pieArea);]