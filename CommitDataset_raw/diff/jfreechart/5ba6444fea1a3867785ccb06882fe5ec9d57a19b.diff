[+++ b/src/main/java/org/jfree/chart/labels/StandardPieSectionLabelGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/labels/StandardPieSectionLabelGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/labels/StandardPieToolTipGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/labels/StandardPieSectionLabelGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/labels/StandardPieToolTipGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +     * is {@code SortOrder.ASCENDING}., +     * value is {@code SortOrder.ASCENDING}., +     * This method does nothing, because {@code CategoryPlot} doesn't, +     * This method does nothing, because {@code CategoryPlot} doesn't, +     * This method does nothing, because {@code CategoryPlot} doesn't, +++ b/src/main/java/org/jfree/chart/labels/StandardPieSectionLabelGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/labels/StandardPieToolTipGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +     * is {@code SortOrder.ASCENDING}., +     * value is {@code SortOrder.ASCENDING}., +     * This method does nothing, because {@code CategoryPlot} doesn't, +     * This method does nothing, because {@code CategoryPlot} doesn't, +     * This method does nothing, because {@code CategoryPlot} doesn't, +++ b/src/main/java/org/jfree/chart/plot/PiePlot.java, + * The example shown here is generated by the {@code PieChartDemo2.java}, +     * {@code lookupSectionPaint(section, getAutoPopulateSectionPaint())}., +     *         {@code autoPopulate} is {@code true}, attempt to fetch, +     * if the {@code autoPopulateSectionPaint} flag is set, the section, +     * defined, which is rare.  The default value is {@code Color.GRAY}., +     * to {@code lookupSectionPaint(section, , +     * getAutoPopulateSectionOutlinePaint())}., +     *         {@code autoPopulate} is {@code true}, attempt to fetch, +     * Be aware that if the {@code autoPopulateSectionPaint} flag is set,, +     * equivalent to {@code lookupSectionOutlineStroke(section,, +     * getAutoPopulateSectionOutlineStroke())}., +     *         {@code autoPopulate} is {@code true}, attempt to fetch, +     * Be aware that if the {@code autoPopulateSectionPaint} flag is set,, +     * @return {@code 0.10}., +     * {@code lookupSectionPaint(section)}.  Checks to see if the user set the , +     * {@code Paint} to be of type {@code RadialGradientPaint} and if so it , +     * adjusts the center and radius to match the Pie., +++ b/src/main/java/org/jfree/chart/labels/StandardPieSectionLabelGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/labels/StandardPieToolTipGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +     * is {@code SortOrder.ASCENDING}., +     * value is {@code SortOrder.ASCENDING}., +     * This method does nothing, because {@code CategoryPlot} doesn't, +     * This method does nothing, because {@code CategoryPlot} doesn't, +     * This method does nothing, because {@code CategoryPlot} doesn't, +++ b/src/main/java/org/jfree/chart/plot/PiePlot.java, + * The example shown here is generated by the {@code PieChartDemo2.java}, +     * {@code lookupSectionPaint(section, getAutoPopulateSectionPaint())}., +     *         {@code autoPopulate} is {@code true}, attempt to fetch, +     * if the {@code autoPopulateSectionPaint} flag is set, the section, +     * defined, which is rare.  The default value is {@code Color.GRAY}., +     * to {@code lookupSectionPaint(section, , +     * getAutoPopulateSectionOutlinePaint())}., +     *         {@code autoPopulate} is {@code true}, attempt to fetch, +     * Be aware that if the {@code autoPopulateSectionPaint} flag is set,, +     * equivalent to {@code lookupSectionOutlineStroke(section,, +     * getAutoPopulateSectionOutlineStroke())}., +     *         {@code autoPopulate} is {@code true}, attempt to fetch, +     * Be aware that if the {@code autoPopulateSectionPaint} flag is set,, +     * @return {@code 0.10}., +     * {@code lookupSectionPaint(section)}.  Checks to see if the user set the , +     * {@code Paint} to be of type {@code RadialGradientPaint} and if so it , +     * adjusts the center and radius to match the Pie., +++ b/src/main/java/org/jfree/chart/plot/Plot.java, +     * {@code Shape} objects that the plot's renderer(s) can use to, +     * {@code Shape} objects that the plot's renderer(s) can use to, +     * in the {@code org.jfree.ui.Align} class in the JCommon class library., +     * @throws IllegalArgumentException if {@code alpha} is not within, +++ b/src/main/java/org/jfree/chart/labels/StandardPieSectionLabelGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/labels/StandardPieToolTipGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +     * is {@code SortOrder.ASCENDING}., +     * value is {@code SortOrder.ASCENDING}., +     * This method does nothing, because {@code CategoryPlot} doesn't, +     * This method does nothing, because {@code CategoryPlot} doesn't, +     * This method does nothing, because {@code CategoryPlot} doesn't, +++ b/src/main/java/org/jfree/chart/plot/PiePlot.java, + * The example shown here is generated by the {@code PieChartDemo2.java}]