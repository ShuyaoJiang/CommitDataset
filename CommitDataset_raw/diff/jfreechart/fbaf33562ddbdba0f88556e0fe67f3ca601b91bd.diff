[+++ b/source/org/jfree/chart/plot/CategoryPlot.java, + * 09-Apr-2014 : Remove use of ObjectList (DG);, +import java.util.Map.Entry;, +import org.jfree.chart.util.CloneUtils;, +    private Map<Integer, CategoryAxis> domainAxes;, +    private Map<Integer, AxisLocation> domainAxisLocations;, +    private Map<Integer, ValueAxis> rangeAxes;, +    private Map<Integer, AxisLocation> rangeAxisLocations;, +    private Map<Integer, CategoryDataset> datasets;, +    private Map<Integer, CategoryItemRenderer> renderers;, +    public CategoryPlot(CategoryDataset dataset, CategoryAxis domainAxis,, +            ValueAxis rangeAxis, CategoryItemRenderer renderer) {, +        this.domainAxes = new HashMap<Integer, CategoryAxis>();, +        this.domainAxisLocations = new HashMap<Integer, AxisLocation>();, +        this.rangeAxes = new HashMap<Integer, ValueAxis>();, +        this.rangeAxisLocations = new HashMap<Integer, AxisLocation>();, +        this.renderers = new HashMap<Integer, CategoryItemRenderer>();, +        this.datasets = new HashMap<Integer, CategoryDataset>();, +        this.datasets.put(0, dataset);, +        this.domainAxisLocations.put(0, AxisLocation.BOTTOM_OR_LEFT);, +        this.rangeAxisLocations.put(0, AxisLocation.TOP_OR_LEFT);, +        this.renderers.put(0, renderer);, +        this.domainAxes.put(0, domainAxis);, +        mapDatasetToDomainAxis(0, 0);, +        this.rangeAxes.put(0, rangeAxis);, +        mapDatasetToRangeAxis(0, 0);, +        this.domainAxes.put(index, axis);, +        for (Entry<Integer, CategoryAxis> entry : this.domainAxes.entrySet()) {, +            if (entry.getValue() == axis) {, +                return entry.getKey();, +            }, +        }, +        return -1;, +        this.domainAxisLocations.put(index, location);, +        this.rangeAxes.put(index, axis);, +        int result = findRangeAxisIndex(axis);, +    private int findRangeAxisIndex(ValueAxis axis) {, +        for (Entry<Integer, ValueAxis> entry : this.rangeAxes.entrySet()) {, +            if (entry.getValue() == axis) {, +                return entry.getKey();, +            }, +        }, +        return -1;, +    }, +    , +        this.rangeAxisLocations.put(index, location);, +        this.datasets.put(index, dataset);, +        CategoryItemRenderer existing = this.renderers.get(index);, +        this.renderers.put(index, renderer);, +        for (Entry<Integer, CategoryItemRenderer> entry , +                : this.renderers.entrySet()) {, +            if (entry.getValue() == renderer) {, +                return entry.getKey();, +            }, +        }, +        return -1;, +        List<CategoryDataset> mappedDatasets = new ArrayList<CategoryDataset>();, +        int rangeIndex = findRangeAxisIndex(axis);, +        for (CategoryDataset d : mappedDatasets) {, +    private List<CategoryDataset> datasetsMappedToDomainAxis(int axisIndex) {, +        List<CategoryDataset> result = new ArrayList<CategoryDataset>();, +            CategoryDataset dataset = this.datasets.get(i);, +            } else {, +        int axisIndex = getDomainAxisIndex(axis);, +        for (CategoryDataset dataset : datasetsMappedToDomainAxis(axisIndex)) {, +        clone.domainAxes = CloneUtils.cloneMapValues(this.domainAxes);, +        for (CategoryAxis axis : clone.domainAxes.values()) {, +            if (axis != null) {, +                axis.setPlot(clone);, +                axis.addChangeListener(clone);, +            }, +        }, +        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);, +        for (ValueAxis axis : clone.rangeAxes.values()) {, +            if (axis != null) {, +                axis.setPlot(clone);, +                axis.addChangeListener(clone);, +            }, +        }, +        // AxisLocation is immutable, so we can just copy the maps, +        clone.domainAxisLocations = new HashMap<Integer, AxisLocation>(, +                this.domainAxisLocations);, +        clone.rangeAxisLocations = new HashMap<Integer, AxisLocation>(, +                this.rangeAxisLocations);, +        clone.datasets = new HashMap<Integer, CategoryDataset>(this.datasets);, +        for (CategoryDataset dataset : clone.datasets.values()) {, +        clone.renderers = CloneUtils.cloneMapValues(this.renderers);, +        for (CategoryItemRenderer renderer : clone.renderers.values()) {, +            if (renderer != null) {, +                renderer.setPlot(clone);, +                renderer.addChangeListener(clone);, +++ b/source/org/jfree/chart/plot/CategoryPlot.java, + * 09-Apr-2014 : Remove use of ObjectList (DG);, +import java.util.Map.Entry;, +import org.jfree.chart.util.CloneUtils;, +    private Map<Integer, CategoryAxis> domainAxes;, +    private Map<Integer, AxisLocation> domainAxisLocations;, +    private Map<Integer, ValueAxis> rangeAxes;, +    private Map<Integer, AxisLocation> rangeAxisLocations;, +    private Map<Integer, CategoryDataset> datasets;]