[+++ b/ChangeLog, +2007-07-25  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/axis/SymbolAxis.java, +	(DEFAULT_GRID_BAND_ALTERNATE_PAINT): New field,, +	(gridBandAlternatePaint): New field,, +	(SymbolAxis): Initialise new field,, +	(getGridBandAlternatePaint): New method,, +	(setGridBandAlternatePaint): Likewise,, +	(equals): Test new field,, +	(writeObject): Handle new field,, +	(readObject): Likewise,, +	* tests/org/jfree/chart/axis/junit/SymbolAxisTests.java, +	(testEquals): Added check for new field., +	, +++ b/ChangeLog, +2007-07-25  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/axis/SymbolAxis.java, +	(DEFAULT_GRID_BAND_ALTERNATE_PAINT): New field,, +	(gridBandAlternatePaint): New field,, +	(SymbolAxis): Initialise new field,, +	(getGridBandAlternatePaint): New method,, +	(setGridBandAlternatePaint): Likewise,, +	(equals): Test new field,, +	(writeObject): Handle new field,, +	(readObject): Likewise,, +	* tests/org/jfree/chart/axis/junit/SymbolAxisTests.java, +	(testEquals): Added check for new field., +	, +++ b/source/org/jfree/chart/axis/SymbolAxis.java, + * 25-Jul-2007 : Added new field for alternate grid band paint (DG);, +    /**, +     * The default paint for alternate grid bands., +     * , +     * @since 1.0.7, +     */, +    public static final Paint DEFAULT_GRID_BAND_ALTERNATE_PAINT, +            = new Color(0, 0, 0, 0);  // transparent, +    , +    /** Flag that indicates whether or not grid bands are visible. */, +    private boolean gridBandsVisible;, +, +    /** , +     * The paint used to fill the alternate grid bands., +     * , +     * @since 1.0.7, +     */, +    private transient Paint gridBandAlternatePaint;, +        this.gridBandAlternatePaint = DEFAULT_GRID_BAND_ALTERNATE_PAINT;, +     * Returns <code>true</code> if the grid bands are showing, and, +     * <code>false</code> otherwise., +     *, +     * @return <code>true</code> if the grid bands are showing, and , +     *         <code>false</code> otherwise., +     *         , +     * @see #setGridBandsVisible(boolean), +     */, +    public boolean isGridBandsVisible() {, +        return this.gridBandsVisible;, +    }, +, +    /**, +     * Sets the visibility of the grid bands and notifies registered, +     * listeners that the axis has been modified., +     *, +     * @param flag  the new setting., +     * , +     * @see #isGridBandsVisible(), +     */, +    public void setGridBandsVisible(boolean flag) {, +        if (this.gridBandsVisible != flag) {, +            this.gridBandsVisible = flag;, +            notifyListeners(new AxisChangeEvent(this));, +        }, +    }, +, +    /**, +     * Returns the paint used for alternate grid bands., +     * @return The paint (never <code>null</code>)., +     * @see #setGridBandAlternatePaint(Paint), +     * @see #getGridBandPaint(), +     * , +     * @since 1.0.7, +    public Paint getGridBandAlternatePaint() {, +        return this.gridBandAlternatePaint;, +     * Sets the paint used for alternate grid bands and sends a , +     * {@link AxisChangeEvent} to all registered listeners., +     * @param paint  the paint (<code>null</code> not permitted)., +     * @see #getGridBandAlternatePaint(), +     * @see #setGridBandPaint(Paint), +     * , +     * @since 1.0.7, +    public void setGridBandAlternatePaint(Paint paint) {, +        if (paint == null) {, +            throw new IllegalArgumentException("Null 'paint' argument.");, +        this.gridBandAlternatePaint = paint;, +        notifyListeners(new AxisChangeEvent(this));, +        if (!PaintUtilities.equal(this.gridBandAlternatePaint, , +                that.gridBandAlternatePaint)) {]