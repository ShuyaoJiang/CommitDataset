[+++ b/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java, +import org.jfree.chart.util.LineUtils;, +        boolean visible = LineUtils.clipLine(line, dataArea);, +++ b/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java, +import org.jfree.chart.util.LineUtils;, +        boolean visible = LineUtils.clipLine(line, dataArea);, +++ b/src/main/java/org/jfree/chart/plot/RingPlot.java, +import org.jfree.chart.util.LineUtils;, +                    Line2D extendedSeparator = LineUtils.extendLine(, +++ b/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java, +import org.jfree.chart.util.LineUtils;, +        boolean visible = LineUtils.clipLine(line, dataArea);, +++ b/src/main/java/org/jfree/chart/plot/RingPlot.java, +import org.jfree.chart.util.LineUtils;, +                    Line2D extendedSeparator = LineUtils.extendLine(, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +import org.jfree.chart.util.LineUtils;, +        visible = LineUtils.clipLine(state.workingLine, dataArea);, +++ b/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java, +import org.jfree.chart.util.LineUtils;, +        boolean visible = LineUtils.clipLine(line, dataArea);, +++ b/src/main/java/org/jfree/chart/plot/RingPlot.java, +import org.jfree.chart.util.LineUtils;, +                    Line2D extendedSeparator = LineUtils.extendLine(, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +import org.jfree.chart.util.LineUtils;, +        visible = LineUtils.clipLine(state.workingLine, dataArea);, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYStepRenderer.java, +import org.jfree.chart.util.LineUtils;, +        boolean visible = LineUtils.clipLine(line, dataArea);, +++ b/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java, +import org.jfree.chart.util.LineUtils;, +        boolean visible = LineUtils.clipLine(line, dataArea);, +++ b/src/main/java/org/jfree/chart/plot/RingPlot.java, +import org.jfree.chart.util.LineUtils;, +                    Line2D extendedSeparator = LineUtils.extendLine(, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +import org.jfree.chart.util.LineUtils;, +        visible = LineUtils.clipLine(state.workingLine, dataArea);, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYStepRenderer.java, +import org.jfree.chart.util.LineUtils;, +        boolean visible = LineUtils.clipLine(line, dataArea);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., +        //SerialUtils.writeImage(this.image, stream);]