[+++ b/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2009, by Object Refinery Limited., + * 23-May-2009 : Added hashCode() implementation (DG);, + *, +import org.jfree.chart.HashUtilities;, +     * Returns a hash code for this instance., +     *, +     * @return A hash code., +     */, +    public int hashCode() {, +        int result = 137;, +        result = HashUtilities.hashCode(result, this.xPosition);, +        for (int i = 0; i < this.data.size(); i++) {, +            result = HashUtilities.hashCode(result, this.data.get(i));, +        }, +        return result;, +    }, +, +    /**, +++ b/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2009, by Object Refinery Limited., + * 23-May-2009 : Added hashCode() implementation (DG);, + *, +import org.jfree.chart.HashUtilities;, +     * Returns a hash code for this instance., +     *, +     * @return A hash code., +     */, +    public int hashCode() {, +        int result = 137;, +        result = HashUtilities.hashCode(result, this.xPosition);, +        for (int i = 0; i < this.data.size(); i++) {, +            result = HashUtilities.hashCode(result, this.data.get(i));, +        }, +        return result;, +    }, +, +    /**, +++ b/tests/org/jfree/data/time/ohlc/junit/OHLCSeriesCollectionTests.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2009, by Object Refinery Limited and Contributors., +    /**, +     * Two objects that are equal are required to return the same hashCode., +     */, +    public void testHashcode() {, +        OHLCSeriesCollection c1 = new OHLCSeriesCollection();, +        OHLCSeries s1 = new OHLCSeries("S");, +        s1.add(new Year(2009), 1.0, 4.0, 0.5, 2.0);, +        c1.addSeries(s1);, +        OHLCSeriesCollection c2 = new OHLCSeriesCollection();, +        OHLCSeries s2 = new OHLCSeries("S");, +        s2.add(new Year(2009), 1.0, 4.0, 0.5, 2.0);, +        c2.addSeries(s2);, +        assertTrue(c1.equals(c2));, +        int h1 = c1.hashCode();, +        int h2 = c2.hashCode();, +        assertEquals(h1, h2);, +    }, +, +++ b/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2009, by Object Refinery Limited., + * 23-May-2009 : Added hashCode() implementation (DG);, + *, +import org.jfree.chart.HashUtilities;, +     * Returns a hash code for this instance., +     *, +     * @return A hash code., +     */, +    public int hashCode() {, +        int result = 137;, +        result = HashUtilities.hashCode(result, this.xPosition);, +        for (int i = 0; i < this.data.size(); i++) {, +            result = HashUtilities.hashCode(result, this.data.get(i));, +        }, +        return result;, +    }, +, +    /**, +++ b/tests/org/jfree/data/time/ohlc/junit/OHLCSeriesCollectionTests.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2009, by Object Refinery Limited and Contributors., +    /**, +     * Two objects that are equal are required to return the same hashCode., +     */, +    public void testHashcode() {, +        OHLCSeriesCollection c1 = new OHLCSeriesCollection();, +        OHLCSeries s1 = new OHLCSeries("S");, +        s1.add(new Year(2009), 1.0, 4.0, 0.5, 2.0);, +        c1.addSeries(s1);, +        OHLCSeriesCollection c2 = new OHLCSeriesCollection();, +        OHLCSeries s2 = new OHLCSeries("S");, +        s2.add(new Year(2009), 1.0, 4.0, 0.5, 2.0);, +        c2.addSeries(s2);, +        assertTrue(c1.equals(c2));, +        int h1 = c1.hashCode();, +        int h2 = c2.hashCode();, +        assertEquals(h1, h2);]