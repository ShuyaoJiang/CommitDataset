[+++ b/ChangeLog, +2007-10-25  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/ChartPanel.java, +	(defaultDirectoryForSaveAs): New field,, +	(ChartPanel(JFreeChart, int, int, int, int, int, int, boolean, boolean,, +	boolean, boolean, boolean, boolean)): Initialise new field,, +	(getDefaultDirectoryForSaveAs): New method,, +	(setDefaultDirectoryForSaveAs): Likewise,, +	(doSaveAs): Apply default directory., +, +++ b/ChangeLog, +2007-10-25  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/ChartPanel.java, +	(defaultDirectoryForSaveAs): New field,, +	(ChartPanel(JFreeChart, int, int, int, int, int, int, boolean, boolean,, +	boolean, boolean, boolean, boolean)): Initialise new field,, +	(getDefaultDirectoryForSaveAs): New method,, +	(setDefaultDirectoryForSaveAs): Likewise,, +	(doSaveAs): Apply default directory., +, +++ b/source/org/jfree/chart/ChartPanel.java, + * 25-Oct-2007 : Added default directory attribute (DG);, +public class ChartPanel extends JPanel implements ChartChangeListener,, +        ChartProgressListener, ActionListener, MouseListener, , +        MouseMotionListener, Printable, Serializable {, +    /**, +     * The default directory for saving charts to file., +     * , +     * @since 1.0.7, +     */, +    private File defaultDirectoryForSaveAs;, +    , +        this.defaultDirectoryForSaveAs = null;, +     * Returns the default directory for the "save as" option., +     * , +     * @return The default directory (possibly <code>null</code>)., +     * , +     * @since 1.0.7, +     */, +    public File getDefaultDirectoryForSaveAs() {, +        return this.defaultDirectoryForSaveAs;, +    }, +, +    /**, +     * Sets the default directory for the "save as" option.  If you set this, +     * to <code>null</code>, the user's default directory will be used., +     * , +     * @param directory  the directory (<code>null</code> permitted)., +     * , +     * @since 1.0.7, +     */, +    public void setDefaultDirectoryForSaveAs(File directory) {, +        if (directory != null) {, +            if (!directory.isDirectory()) {, +                throw new IllegalArgumentException(, +                        "The 'directory' argument is not a directory.");, +            }, +        }, +        this.defaultDirectoryForSaveAs = directory;, +    }, +    , +    /**, +     * , +     * @see #setEnforceFileExtensions(boolean), +     * , +     * @see #isEnforceFileExtensions(), +        fileChooser.setCurrentDirectory(this.defaultDirectoryForSaveAs);]