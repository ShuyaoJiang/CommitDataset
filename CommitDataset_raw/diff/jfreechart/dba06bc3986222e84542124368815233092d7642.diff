[+++ b/src/main/java/org/jfree/chart/plot/ContourPlot.java, +                    crosshairState.updateCrosshairPoint(x[k], y[k], 0, transX,, +                    crosshairState.updateCrosshairX(x[k], transX, 0);, +                    crosshairState.updateCrosshairY(y[k], transY, 0);, +                    crosshairState.updateCrosshairPoint(x[k], y[k], 0, transX,, +                    crosshairState.updateCrosshairX(x[k], transX, 0);, +                    crosshairState.updateCrosshairY(y[k], transY, 0);, +++ b/src/main/java/org/jfree/chart/plot/ContourPlot.java, +                    crosshairState.updateCrosshairPoint(x[k], y[k], 0, transX,, +                    crosshairState.updateCrosshairX(x[k], transX, 0);, +                    crosshairState.updateCrosshairY(y[k], transY, 0);, +                    crosshairState.updateCrosshairPoint(x[k], y[k], 0, transX,, +                    crosshairState.updateCrosshairX(x[k], transX, 0);, +                    crosshairState.updateCrosshairY(y[k], transY, 0);, +++ b/src/main/java/org/jfree/chart/plot/CrosshairState.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited., + * 18-Feb-2017 : Fix for crosshairs with multiple datasets / axes - see , + *               bug #36 (DG);, +     * Creates a new {@code crosshairState} instance.  Determination of the, +     * data point nearest the anchor point can be calculated in either, +     * dataspace or Java2D space.  The former should only be used for charts, +     * with a single set of axes., +     * @since 1.0.20, +    public void updateCrosshairPoint(double x, double y, int datasetIndex,, +            double transX, double transY, PlotOrientation orientation) {, +                // anchor point is in Java2D coordinates, +                this.datasetIndex = datasetIndex;, +     * @param x, +     * @param transX, +     * @param datasetIndex , +     * @since 1.0.20, +    public void updateCrosshairX(double x, double transX, int datasetIndex) {, +        if (this.anchor == null) {, +            return;, +        double d = Math.abs(transX - this.anchor.getX());, +            this.crosshairX = x;, +            this.datasetIndex = datasetIndex;, +     * @since 1.0.20, +    public void updateCrosshairY(double candidateY, double transY, int datasetIndex) {, +        if (this.anchor == null) {, +            return;, +        }, +        double d = Math.abs(transY - this.anchor.getY());, +            this.datasetIndex = datasetIndex;, +++ b/src/main/java/org/jfree/chart/plot/ContourPlot.java, +                    crosshairState.updateCrosshairPoint(x[k], y[k], 0, transX,, +                    crosshairState.updateCrosshairX(x[k], transX, 0);, +                    crosshairState.updateCrosshairY(y[k], transY, 0);, +                    crosshairState.updateCrosshairPoint(x[k], y[k], 0, transX,, +                    crosshairState.updateCrosshairX(x[k], transX, 0);, +                    crosshairState.updateCrosshairY(y[k], transY, 0);, +++ b/src/main/java/org/jfree/chart/plot/CrosshairState.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited., + * 18-Feb-2017 : Fix for crosshairs with multiple datasets / axes - see , + *               bug #36 (DG);, +     * Creates a new {@code crosshairState} instance.  Determination of the, +     * data point nearest the anchor point can be calculated in either, +     * dataspace or Java2D space.  The former should only be used for charts, +     * with a single set of axes., +     * @since 1.0.20, +    public void updateCrosshairPoint(double x, double y, int datasetIndex,, +            double transX, double transY, PlotOrientation orientation) {, +                // anchor point is in Java2D coordinates, +                this.datasetIndex = datasetIndex;, +     * @param x, +     * @param transX, +     * @param datasetIndex , +     * @since 1.0.20, +    public void updateCrosshairX(double x, double transX, int datasetIndex) {, +        if (this.anchor == null) {, +            return;, +        double d = Math.abs(transX - this.anchor.getX());, +            this.crosshairX = x;, +            this.datasetIndex = datasetIndex;, +     * @since 1.0.20, +    public void updateCrosshairY(double candidateY, double transY, int datasetIndex) {, +        if (this.anchor == null) {, +            return;, +        }, +        double d = Math.abs(transY - this.anchor.getY());, +            this.datasetIndex = datasetIndex;, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited and Contributors., + * 18-Feb-2017 : Fix for crosshairs with multiple datasets / axes - see , + *               bug #36 (DG);, +     * @param datasetIndex  the index of the dataset for the point., +     * @since 1.0.20, +            double x, double y, int datasetIndex,, +                    crosshairState.updateCrosshairPoint(x, y, datasetIndex,, +                            transX, transY, orientation);, +                    crosshairState.updateCrosshairX(x, transX, datasetIndex);, +                    crosshairState.updateCrosshairY(y, transY, datasetIndex);, +//    /**, +//     * Considers the current (x, y) coordinate and updates the crosshair point, +//     * if it meets the criteria (usually means the (x, y) coordinate is the, +//     * closest to the anchor point so far)., +//     *]