[+++ b/ChangeLog, +2009-03-19  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/renderer/category/BarRenderer3D.java, +    (drawRangeLine): New method override., +, +++ b/ChangeLog, +2009-03-19  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/renderer/category/BarRenderer3D.java, +    (drawRangeLine): New method override., +, +++ b/source/org/jfree/chart/renderer/category/BarRenderer3D.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2009, by Serge V. Grachov and Contributors., + * 19-Mar-2009 : Override for drawRangeLine() method (DG);, +    public void drawRangeGridline(Graphics2D g2, CategoryPlot plot,, +            ValueAxis axis, Rectangle2D dataArea, double value) {, +     * Draws a line perpendicular to the range axis., +     *, +     * @param g2  the graphics device., +     * @param plot  the plot., +     * @param axis  the value axis., +     * @param dataArea  the area for plotting data (not yet adjusted for any 3D, +     *                  effect)., +     * @param value  the value at which the grid line should be drawn., +     * @param paint  the paint., +     * @param stroke  the stroke., +     *, +     * @see #drawRangeGridline, +     *, +     * @since 1.0.13, +     */, +    public void drawRangeLine(Graphics2D g2, CategoryPlot plot, ValueAxis axis,, +            Rectangle2D dataArea, double value, Paint paint, Stroke stroke) {, +, +        Range range = axis.getRange();, +        if (!range.contains(value)) {, +            return;, +        }, +, +        Rectangle2D adjusted = new Rectangle2D.Double(dataArea.getX(),, +                dataArea.getY() + getYOffset(), dataArea.getWidth(), +                - getXOffset(), dataArea.getHeight() - getYOffset());, +, +        Line2D line1 = null;, +        Line2D line2 = null;, +        PlotOrientation orientation = plot.getOrientation();, +        if (orientation == PlotOrientation.HORIZONTAL) {, +            double x0 = axis.valueToJava2D(value, adjusted,, +                    plot.getRangeAxisEdge());, +            double x1 = x0 + getXOffset();, +            double y0 = dataArea.getMaxY();, +            double y1 = y0 - getYOffset();, +            double y2 = dataArea.getMinY();, +            line1 = new Line2D.Double(x0, y0, x1, y1);, +            line2 = new Line2D.Double(x1, y1, x1, y2);, +        }, +        else if (orientation == PlotOrientation.VERTICAL) {, +            double y0 = axis.valueToJava2D(value, adjusted,, +                    plot.getRangeAxisEdge());, +            double y1 = y0 - getYOffset();, +            double x0 = dataArea.getMinX();, +            double x1 = x0 + getXOffset();, +            double x2 = dataArea.getMaxX();, +            line1 = new Line2D.Double(x0, y0, x1, y1);, +            line2 = new Line2D.Double(x1, y1, x2, y1);, +        }, +        g2.setPaint(paint);, +        g2.setStroke(stroke);, +        g2.draw(line1);, +        g2.draw(line2);, +, +    }, +, +    /**]