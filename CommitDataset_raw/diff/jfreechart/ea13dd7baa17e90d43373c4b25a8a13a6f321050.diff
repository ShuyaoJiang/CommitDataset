[+++ b/ChangeLog, +    * source/org/jfree/chart/LegendItem.java, +    (LegendItem(String)): New constructor,, +    (clone): Implemented., +, +2008-04-23  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +    * source/org/jfree/chart/LegendItem.java, +    (LegendItem(String)): New constructor,, +    (clone): Implemented., +, +2008-04-23  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/LegendItem.java, + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * 23-Apr-2008 : Added new constructor and implemented Cloneable (DG);, +import java.awt.geom.Rectangle2D;, +import org.jfree.util.PublicCloneable;, +public class LegendItem implements Cloneable, Serializable {, +     * Creates a legend item with the specified label.  The remaining, +     * attributes take default values., +     *, +     * @param label  the label (<code>null</code> not permitted)., +     *, +     * @since 1.0.10, +     */, +    public LegendItem(String label) {, +    	this(label, null, null, null, new Rectangle2D.Double(-4.0, -4.0, 8.0,, +    			8.0), Color.black);, +    }, +, +    /**, +     * @param line  the line (<code>null</code> not permitted)., +        if (line == null) {, +        	throw new IllegalArgumentException("Null 'line' argument.");, +        }, +        if (linePaint == null) {, +        	throw new IllegalArgumentException("Null 'linePaint' argument.");, +        }, +     * @return The line (never <code>null</code>)., +     * Returns an independent copy of this object (except that the clone will, +     * still reference the same dataset as the original, +     * <code>LegendItem</code>)., +     *, +     * @return A clone., +     *, +     * @since 1.0.10, +     */, +    public Object clone() throws CloneNotSupportedException {, +    	LegendItem clone = (LegendItem) super.clone();, +    	if (this.seriesKey instanceof PublicCloneable) {, +    		PublicCloneable pc = (PublicCloneable) this.seriesKey;, +    		clone.seriesKey = (Comparable) pc.clone();, +    	}, +    	// FIXME: Clone the attributed string if it is not null, +    	clone.shape = ShapeUtilities.clone(this.shape);, +    	if (this.fillPaintTransformer instanceof PublicCloneable) {, +    		PublicCloneable pc = (PublicCloneable) this.fillPaintTransformer;, +    		clone.fillPaintTransformer = (GradientPaintTransformer) pc.clone();, +, +    	}, +    	clone.line = ShapeUtilities.clone(this.line);, +    	return clone;, +    }, +, +    /**, +++ b/ChangeLog, +    * source/org/jfree/chart/LegendItem.java, +    (LegendItem(String)): New constructor,, +    (clone): Implemented., +, +2008-04-23  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/LegendItem.java, + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * 23-Apr-2008 : Added new constructor and implemented Cloneable (DG);, +import java.awt.geom.Rectangle2D;, +import org.jfree.util.PublicCloneable;, +public class LegendItem implements Cloneable, Serializable {, +     * Creates a legend item with the specified label.  The remaining, +     * attributes take default values., +     *, +     * @param label  the label (<code>null</code> not permitted)., +     *, +     * @since 1.0.10, +     */, +    public LegendItem(String label) {, +    	this(label, null, null, null, new Rectangle2D.Double(-4.0, -4.0, 8.0,, +    			8.0), Color.black);, +    }, +, +    /**, +     * @param line  the line (<code>null</code> not permitted)., +        if (line == null) {, +        	throw new IllegalArgumentException("Null 'line' argument.");, +        }, +        if (linePaint == null) {]