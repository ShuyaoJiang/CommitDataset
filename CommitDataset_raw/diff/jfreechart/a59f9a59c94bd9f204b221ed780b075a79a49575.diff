[+++ b/ChangeLog, +2009-06-01  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/plot/MultiplePiePlot.java, +    (getLegendItems): Set the series key and index for each item,, +    * source/org/jfree/chart/plot/SpiderWebPlot.java, +    (getLegendItems): Likewise., +, +++ b/ChangeLog, +2009-06-01  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/plot/MultiplePiePlot.java, +    (getLegendItems): Set the series key and index for each item,, +    * source/org/jfree/chart/plot/SpiderWebPlot.java, +    (getLegendItems): Likewise., +, +++ b/source/org/jfree/chart/plot/MultiplePiePlot.java, + * 01-Jun-2009 : Set series key in getLegendItems() (DG);, +        if (keys == null) {, +            return result;, +        }, +            item.setSeriesKey(key);, +            item.setSeriesIndex(section);, +            LegendItem a = new LegendItem(this.aggregatedItemsKey.toString(),, +                    Plot.DEFAULT_OUTLINE_STROKE, this.aggregatedItemsPaint);, +            result.add(a);, +++ b/ChangeLog, +2009-06-01  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/plot/MultiplePiePlot.java, +    (getLegendItems): Set the series key and index for each item,, +    * source/org/jfree/chart/plot/SpiderWebPlot.java, +    (getLegendItems): Likewise., +, +++ b/source/org/jfree/chart/plot/MultiplePiePlot.java, + * 01-Jun-2009 : Set series key in getLegendItems() (DG);, +        if (keys == null) {, +            return result;, +        }, +            item.setSeriesKey(key);, +            item.setSeriesIndex(section);, +            LegendItem a = new LegendItem(this.aggregatedItemsKey.toString(),, +                    Plot.DEFAULT_OUTLINE_STROKE, this.aggregatedItemsPaint);, +            result.add(a);, +++ b/source/org/jfree/chart/plot/SpiderWebPlot.java, + * 01-Jun-2009 : Set series key in getLegendItems() (DG);, +     * Returns a collection of legend items for the spider web chart., +     * @return The legend items (never <code>null</code>)., +        if (keys == null) {, +            return result;, +        }, +            Comparable key = (Comparable) iterator.next();, +            String label = key.toString();, +            item.setSeriesKey(key);, +            item.setSeriesIndex(series);, +++ b/ChangeLog, +2009-06-01  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/plot/MultiplePiePlot.java, +    (getLegendItems): Set the series key and index for each item,, +    * source/org/jfree/chart/plot/SpiderWebPlot.java, +    (getLegendItems): Likewise., +, +++ b/source/org/jfree/chart/plot/MultiplePiePlot.java, + * 01-Jun-2009 : Set series key in getLegendItems() (DG);, +        if (keys == null) {, +            return result;, +        }, +            item.setSeriesKey(key);, +            item.setSeriesIndex(section);, +            LegendItem a = new LegendItem(this.aggregatedItemsKey.toString(),, +                    Plot.DEFAULT_OUTLINE_STROKE, this.aggregatedItemsPaint);, +            result.add(a);, +++ b/source/org/jfree/chart/plot/SpiderWebPlot.java, + * 01-Jun-2009 : Set series key in getLegendItems() (DG);, +     * Returns a collection of legend items for the spider web chart., +     * @return The legend items (never <code>null</code>)., +        if (keys == null) {, +            return result;, +        }, +            Comparable key = (Comparable) iterator.next();, +            String label = key.toString();, +            item.setSeriesKey(key);, +            item.setSeriesIndex(series);, +++ b/tests/org/jfree/chart/plot/junit/MultiplePiePlotTests.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2009, by Object Refinery Limited and Contributors., + * 01-Jun-2009 : Added test for getLegendItems() bug, series key is not, + *               set (DG);, +import org.jfree.chart.JFreeChart;, +import org.jfree.chart.LegendItem;, +import org.jfree.chart.LegendItemCollection;, +    /**, +     * Fetches the legend items and checks the values., +     */, +    public void testGetLegendItems() {, +        DefaultCategoryDataset dataset = new DefaultCategoryDataset();, +        dataset.addValue(35.0, "S1", "C1");, +        dataset.addValue(45.0, "S1", "C2");, +        dataset.addValue(55.0, "S2", "C1");]