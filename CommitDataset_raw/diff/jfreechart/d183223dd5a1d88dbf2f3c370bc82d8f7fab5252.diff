[+++ b/tests/org/jfree/chart/plot/junit/CategoryPlotTests.java, +     * Some checks for the constructor., +     */, +    public void testConstructor() {, +        CategoryPlot plot = new CategoryPlot();, +        assertEquals(RectangleInsets.ZERO_INSETS, plot.getAxisOffset());, +    }, +, +    /**, +    /**, +     * Some checks for the getDomainAxisIndex() method., +     */, +    public void testGetDomainAxisIndex() {, +        CategoryAxis domainAxis1 = new CategoryAxis("X1");, +        CategoryAxis domainAxis2 = new CategoryAxis("X2");, +        NumberAxis rangeAxis1 = new NumberAxis("Y1");, +        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, , +                null);, +        assertEquals(0, plot.getDomainAxisIndex(domainAxis1));, +        assertEquals(-1, plot.getDomainAxisIndex(domainAxis2));, +        plot.setDomainAxis(1, domainAxis2);, +        assertEquals(1, plot.getDomainAxisIndex(domainAxis2));, +        assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis("X2")));, +        boolean pass = false;, +        try {, +            plot.getDomainAxisIndex(null);, +        }, +        catch (IllegalArgumentException e) {, +            pass = true;, +        }, +        assertTrue(pass);, +    }, +, +    /**, +     * Some checks for the getRangeAxisIndex() method., +     */, +    public void testGetRangeAxisIndex() {, +        CategoryAxis domainAxis1 = new CategoryAxis("X1");, +        NumberAxis rangeAxis1 = new NumberAxis("Y1");, +        NumberAxis rangeAxis2 = new NumberAxis("Y2");, +        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, , +                null);, +        assertEquals(0, plot.getRangeAxisIndex(rangeAxis1));, +        assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2));, +        plot.setRangeAxis(1, rangeAxis2);, +        assertEquals(1, plot.getRangeAxisIndex(rangeAxis2));, +        assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis("Y2")));, +        boolean pass = false;, +        try {, +            plot.getRangeAxisIndex(null);, +        }, +        catch (IllegalArgumentException e) {, +            pass = true;, +        }, +        assertTrue(pass);, +    }]