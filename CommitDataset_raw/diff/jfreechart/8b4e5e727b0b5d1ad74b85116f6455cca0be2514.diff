[+++ b/ChangeLog, +2007-09-28  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java, +	(setGroupStroke): Check for null argument, add event notification,, +	(equals): New method override,, +	* tests/org/jfree/chart/renderer/category/junit/MinMaxCategoryRendererTests.java, +	(testEquals): Extended to cover additional fields., +, +++ b/ChangeLog, +2007-09-28  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java, +	(setGroupStroke): Check for null argument, add event notification,, +	(equals): New method override,, +	* tests/org/jfree/chart/renderer/category/junit/MinMaxCategoryRendererTests.java, +	(testEquals): Extended to cover additional fields., +, +++ b/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java, + * 28-Sep-2007 : Added equals() method override (DG);, +import org.jfree.util.PaintUtilities;, +     * value and sends a {@link RendererChangeEvent} to all registered , +     * listeners., +     * @param stroke the new stroke (<code>null</code> not permitted)., +    public void setGroupStroke(Stroke stroke) {, +        if (stroke == null) {, +            throw new IllegalArgumentException("Null 'stroke' argument.");, +        }, +        this.groupStroke = stroke;, +        notifyListeners(new RendererChangeEvent(this));        , +     * Tests this instance for equality with an arbitrary object.  The icon fields, +     * are NOT included in the test, so this implementation is a little weak., +     * , +     * @param obj  the object (<code>null</code> permitted)., +     * , +     * @return A boolean., +     *, +     * @since 1.0.7, +     */, +    public boolean equals(Object obj) {, +        if (obj == this) {, +            return true;, +        }, +        if (!(obj instanceof MinMaxCategoryRenderer)) {, +            return false;, +        }, +        MinMaxCategoryRenderer that = (MinMaxCategoryRenderer) obj;, +        if (this.plotLines != that.plotLines) {, +            return false;, +        }, +        if (!PaintUtilities.equal(this.groupPaint, that.groupPaint)) {, +            return false;, +        }, +        if (!this.groupStroke.equals(that.groupStroke)) {, +            return false;, +        }, +        return super.equals(obj);, +    }, +, +    /**, +     * Returns an icon from a shape., +++ b/ChangeLog, +2007-09-28  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java, +	(setGroupStroke): Check for null argument, add event notification,, +	(equals): New method override,, +	* tests/org/jfree/chart/renderer/category/junit/MinMaxCategoryRendererTests.java, +	(testEquals): Extended to cover additional fields., +, +++ b/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java, + * 28-Sep-2007 : Added equals() method override (DG);, +import org.jfree.util.PaintUtilities;, +     * value and sends a {@link RendererChangeEvent} to all registered , +     * listeners., +     * @param stroke the new stroke (<code>null</code> not permitted)., +    public void setGroupStroke(Stroke stroke) {, +        if (stroke == null) {, +            throw new IllegalArgumentException("Null 'stroke' argument.");, +        }, +        this.groupStroke = stroke;, +        notifyListeners(new RendererChangeEvent(this));        , +     * Tests this instance for equality with an arbitrary object.  The icon fields, +     * are NOT included in the test, so this implementation is a little weak., +     * , +     * @param obj  the object (<code>null</code> permitted)., +     * , +     * @return A boolean., +     *, +     * @since 1.0.7, +     */, +    public boolean equals(Object obj) {, +        if (obj == this) {, +            return true;, +        }, +        if (!(obj instanceof MinMaxCategoryRenderer)) {, +            return false;, +        }, +        MinMaxCategoryRenderer that = (MinMaxCategoryRenderer) obj;, +        if (this.plotLines != that.plotLines) {]