[+++ b/ChangeLog, +	* source/org/jfree/chart/renderer/AbstractRenderer.java, +	(hashCode): Compute using more fields., +, +2007-12-04  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +	* source/org/jfree/chart/renderer/AbstractRenderer.java, +	(hashCode): Compute using more fields., +, +2007-12-04  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/renderer/AbstractRenderer.java, + * 04-Dec-2007 : Modified hashCode() implementation (DG);, +import org.jfree.chart.HashUtilities;, +        result = HashUtilities.hashCode(result, this.seriesVisibleList);, +        result = HashUtilities.hashCode(result, this.baseSeriesVisible);, +        result = HashUtilities.hashCode(result, this.seriesVisibleInLegendList);, +        result = HashUtilities.hashCode(result, this.baseSeriesVisibleInLegend);, +        result = HashUtilities.hashCode(result, this.paintList);, +        result = HashUtilities.hashCode(result, this.basePaint);, +        result = HashUtilities.hashCode(result, this.fillPaintList);, +        result = HashUtilities.hashCode(result, this.baseFillPaint);, +        result = HashUtilities.hashCode(result, this.outlinePaintList);, +        result = HashUtilities.hashCode(result, this.baseOutlinePaint);, +        result = HashUtilities.hashCode(result, this.strokeList);, +        result = HashUtilities.hashCode(result, this.baseStroke);   , +        result = HashUtilities.hashCode(result, this.outlineStrokeList);, +        result = HashUtilities.hashCode(result, this.baseOutlineStroke);   , +        // shapeList, +        // baseShape, +        result = HashUtilities.hashCode(result, this.itemLabelsVisibleList);, +        result = HashUtilities.hashCode(result, this.baseItemLabelsVisible);, +        // itemLabelFontList, +        // baseItemLabelFont, +        // itemLabelPaintList, +        // baseItemLabelPaint, +        // positiveItemLabelPositionList, +        // basePositiveItemLabelPosition, +        // negativeItemLabelPositionList, +        // baseNegativeItemLabelPosition, +        // itemLabelAnchorOffset, +        // createEntityList, +        // baseCreateEntities]