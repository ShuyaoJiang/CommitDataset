[+++ b/ChangeLog, +2007-11-09  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/renderer/xy/XYDotRenderer.java, +	(legendShape): New field,, +	(XYDotRenderer): Initialise new field,, +	(getLegendShape): New method,, +	(setLegendShape): Likewise,, +	(getLegendItem): New method override,, +	(equals): Updated for new field,, +	(readObject): New method,, +	(writeObject): New method., +, +++ b/ChangeLog, +2007-11-09  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/renderer/xy/XYDotRenderer.java, +	(legendShape): New field,, +	(XYDotRenderer): Initialise new field,, +	(getLegendShape): New method,, +	(setLegendShape): Likewise,, +	(getLegendItem): New method override,, +	(equals): Updated for new field,, +	(readObject): New method,, +	(writeObject): New method., +, +++ b/source/org/jfree/chart/renderer/xy/XYDotRenderer.java, + * 09-Nov-2007 : Added legend shape attribute, plus override for , + *               getLegendItem() (DG);, +import java.awt.Paint;, +import java.awt.Shape;, +import java.io.IOException;, +import java.io.ObjectInputStream;, +import java.io.ObjectOutputStream;, +import org.jfree.chart.LegendItem;, +import org.jfree.io.SerialUtilities;, +import org.jfree.util.ShapeUtilities;, +     * The shape that is used to represent an item in the legend. , +     * , +     * @since 1.0.7, +     */, +    private transient Shape legendShape;, +, +    /**, +        this.legendShape = new Rectangle2D.Double(-3.0, -3.0, 6.0, 6.0);, +     * Returns the shape used to represent an item in the legend., +     * , +     * @return The legend shape (never <code>null</code>)., +     * , +     * @see #setLegendShape(Shape), +     * , +     * @since 1.0.7, +     */, +    public Shape getLegendShape() {, +        return this.legendShape;   , +    }, +    , +    /**, +     * Sets the shape used as a line in each legend item and sends a , +     * {@link RendererChangeEvent} to all registered listeners., +     * , +     * @param shape  the shape (<code>null</code> not permitted)., +     * , +     * @see #getLegendShape(), +     * , +     * @since 1.0.7, +     */, +    public void setLegendShape(Shape shape) {, +        if (shape == null) {, +            throw new IllegalArgumentException("Null 'shape' argument.");   , +        }, +        this.legendShape = shape;, +        notifyListeners(new RendererChangeEvent(this));, +    }, +, +    /**, +     * Returns a legend item for the specified series., +     *, +     * @param datasetIndex  the dataset index (zero-based)., +     * @param series  the series index (zero-based)., +     *, +     * @return A legend item for the series (possibly <code>null</code>)., +     */, +    public LegendItem getLegendItem(int datasetIndex, int series) {, +, +        // if the renderer isn't assigned to a plot, then we don't have a, +        // dataset..., +        XYPlot plot = getPlot();, +        if (plot == null) {, +            return null;, +        }, +, +        XYDataset dataset = plot.getDataset(datasetIndex);, +        if (dataset == null) {, +            return null;, +        }, +, +        LegendItem result = null;, +        if (getItemVisible(series, 0)) {, +            String label = getLegendItemLabelGenerator().generateLabel(dataset,]