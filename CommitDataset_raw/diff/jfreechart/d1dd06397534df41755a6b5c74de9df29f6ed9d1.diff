[+++ b/ChangeLog, +	* source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java, +	(errorIndicatorStroke): New field,, +	(StatisticalBarRenderer): Initialise new field,, +	(getErrorIndicatorStroke): New method,, +	(setErrorIndicatorStroke): Likewise,, +	(drawHorizontalItem): Fix drawBarOutline and gradientPaintTransformer, +	omissions, and use new errorIndicatorStroke field,, +	(drawVerticalItem): Likewise,, +	(equals): Updated for new field,, +	(writeObject): Likewise,, +	(readObject): Likewise., +, +----------  JFREECHART 1.0.7 RELEASED ------------------------, +, +2007-11-14  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +	* source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java, +	(errorIndicatorStroke): New field,, +	(StatisticalBarRenderer): Initialise new field,, +	(getErrorIndicatorStroke): New method,, +	(setErrorIndicatorStroke): Likewise,, +	(drawHorizontalItem): Fix drawBarOutline and gradientPaintTransformer, +	omissions, and use new errorIndicatorStroke field,, +	(drawVerticalItem): Likewise,, +	(equals): Updated for new field,, +	(writeObject): Likewise,, +	(readObject): Likewise., +, +----------  JFREECHART 1.0.7 RELEASED ------------------------, +, +2007-11-14  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java, + * 14-Nov-2007 : Added errorIndicatorStroke, and fixed bugs with drawBarOutline, + *               and gradientPaintTransformer attributes being ignored (DG);, +import java.awt.BasicStroke;, +import java.awt.GradientPaint;, +import java.awt.Stroke;, +import org.jfree.ui.GradientPaintTransformer;, +import org.jfree.util.ObjectUtilities;, +     * The stroke used to draw the error indicators. , +     * , +     * @since 1.0.8, +     */, +    private transient Stroke errorIndicatorStroke;, +    , +    /**, +        this.errorIndicatorStroke = new BasicStroke(1.0f);, +     * Returns the stroke used to draw the error indicators.  If this is , +     * <code>null</code>, the renderer will use the item outline stroke)., +     * , +     * @return The stroke (possibly <code>null</code>)., +     * , +     * @see #setErrorIndicatorPaint(Paint), +     *, +     * @since 1.0.8, +     */, +    public Stroke getErrorIndicatorStroke() {, +        return this.errorIndicatorStroke;, +    }, +    , +    /**, +     * Sets the stroke used to draw the error indicators, and sends a , +     * {@link RendererChangeEvent} to all registered listeners.  If you set, +     * this to <code>null</code>, the renderer will use the item outline, +     * stroke., +     * , +     * @param stroke  the stroke (<code>null</code> permitted)., +     * , +     * @since 1.0.8, +     */, +    public void setErrorIndicatorStroke(Stroke stroke) {, +        this.errorIndicatorStroke = stroke;, +        notifyListeners(new RendererChangeEvent(this));, +    }, +    , +    /**, +        Paint itemPaint = getItemPaint(row, column);, +        GradientPaintTransformer t = getGradientPaintTransformer();, +        if (t != null && itemPaint instanceof GradientPaint) {, +            itemPaint = t.transform((GradientPaint) itemPaint, bar);, +        }, +        g2.setPaint(itemPaint);, +        // draw the outline..., +        if (isDrawBarOutline() , +                && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {, +            Stroke stroke = getItemOutlineStroke(row, column);, +            Paint paint = getItemOutlinePaint(row, column);, +            if (stroke != null && paint != null) {, +                g2.setStroke(stroke);, +                g2.setPaint(paint);, +        }, +            if (this.errorIndicatorStroke != null) {, +                g2.setStroke(this.errorIndicatorStroke);, +            }, +            else {, +                g2.setStroke(getItemOutlineStroke(row, column));, +            }]