[+++ b/ChangeLog, +2015-09-06  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/data/time/TimeSeries.java, +    (findValueRange): Check for Double.NaN., +, +2014-08-31  David Gilbert  <david.gilbert@object-refinery.com>, +, +    (Bug 986 fix from Vladimir Shirokov):, +    * org/jfree/chart/plot/CombinedDomainXYPlot.java, +    (datasetChanged): New method override., +, +++ b/ChangeLog, +2015-09-06  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/data/time/TimeSeries.java, +    (findValueRange): Check for Double.NaN., +, +2014-08-31  David Gilbert  <david.gilbert@object-refinery.com>, +, +    (Bug 986 fix from Vladimir Shirokov):, +    * org/jfree/chart/plot/CombinedDomainXYPlot.java, +    (datasetChanged): New method override., +, +++ b/source/org/jfree/data/time/TimeSeries.java, + * (C) Copyright 2000-2015, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2015, by Object Refinery Limited., + * 06-Sep-2015 : Fix bug with Double.NaN values and findRangeBounds() (DG);, +     * Returns the range of y-values in the time series.  Any {@code null} or , +     * {@code Double.NaN} data values in the series will be ignored (except for, +     * the special case where all data values are {@code null}, in which case , +     * the return value is {@code Range(Double.NaN, Double.NaN)}).  If the time , +     * series contains no items, this method will return {@code null}., +     * @return The range of y-values in the time series (possibly {@code null})., +     * {@code findValueRange(xRange, TimePeriodAnchor.MIDDLE, timeZone)}., +     * @param xRange  the subrange of x-values ({@code null} not permitted)., +     *     ({@code null} not permitted)., +     * @param xRange  the subset of x-values to use ({@code null} not, +     * @param xAnchor  the anchor point for the x-values ({@code null}, +     * @param zone  the time zone ({@code null} not permitted)., +                    lowY = minIgnoreNaN(lowY, v);, +                    highY = maxIgnoreNaN(highY, v);, +     * {@code null} and {@code Double.NaN} values.  This method , +     * returns {@code Double.NaN} if there is no smallest y-value (for , +     * {@code null} and {@code Double.NaN} values.  This method , +     * returns {@code Double.NaN} if there is no largest y-value]