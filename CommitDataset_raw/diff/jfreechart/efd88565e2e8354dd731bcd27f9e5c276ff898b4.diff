[+++ b/ChangeLog, +2007-11-27  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* swt/org/jfree/experimental/swt/SWTGraphics2D.java:, +	(drawImage(BufferedImage, BufferedImageOp, int, int)): Updated for method , +	moved to SWTUtils,, +	(drawImage(Image, int, int, ImageObserver)): Implemented,, +	(drawImage(Image, int, int, int, int, ImageObserver)): Likewise,, +	(drawImage(Image, int, int, Color, ImageObserver)): Likewise,, +	(drawImage(Image, int, int, int, int, Color, ImageObserver)): Likewise,, +	(convertToSWT(BufferedImage)): Moved to SWTUtils.java,, +	* swt/org/jfree/experimental/swt/SWTUtils.java:, +	(convertAWTImageToSWT): New method,, +	(convertToSWT(BufferedImage)): Moved from SWTGraphics2D.java., +	, +----------  JFREECHART 1.0.7 RELEASED ------------------------, +, +++ b/ChangeLog, +2007-11-27  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* swt/org/jfree/experimental/swt/SWTGraphics2D.java:, +	(drawImage(BufferedImage, BufferedImageOp, int, int)): Updated for method , +	moved to SWTUtils,, +	(drawImage(Image, int, int, ImageObserver)): Implemented,, +	(drawImage(Image, int, int, int, int, ImageObserver)): Likewise,, +	(drawImage(Image, int, int, Color, ImageObserver)): Likewise,, +	(drawImage(Image, int, int, int, int, Color, ImageObserver)): Likewise,, +	(convertToSWT(BufferedImage)): Moved to SWTUtils.java,, +	* swt/org/jfree/experimental/swt/SWTUtils.java:, +	(convertAWTImageToSWT): New method,, +	(convertToSWT(BufferedImage)): Moved from SWTGraphics2D.java., +	, +----------  JFREECHART 1.0.7 RELEASED ------------------------, +, +++ b/swt/org/jfree/experimental/swt/SWTGraphics2D.java, + * 27-Nov-2007 : Implemented a couple of drawImage() methods (DG);, +import java.awt.geom.Rectangle2D;, +                this.gc.getDevice(), SWTUtils.convertToSWT(image));, +     * Draws an SWT image with the top left corner of the image aligned to the, +     * point (x, y)., +    /**, +     * Draws an image with the top left corner aligned to the point (x, y)., +     * , +     * @param image  the image., +     * @param x  the x-coordinate., +     * @param y  the y-coordinate., +     * @param observer  ignored here., +     * , +     * @return <code>true</code> if the image has been drawn., +        ImageData data = SWTUtils.convertAWTImageToSWT(image);, +        if (data == null) {, +        org.eclipse.swt.graphics.Image im = new org.eclipse.swt.graphics.Image(, +                this.gc.getDevice(), data);, +        this.gc.drawImage(im, x, y);, +        im.dispose();, +        return true;, +    }, +    /**, +     * Draws an image with the top left corner aligned to the point (x, y), , +     * and scaled to the specified width and height., +     * , +     * @param image  the image., +     * @param x  the x-coordinate., +     * @param y  the y-coordinate., +     * @param width  the width for the rendered image., +     * @param height  the height for the rendered image., +     * @param observer  ignored here., +     * , +     * @return <code>true</code> if the image has been drawn., +        ImageData data = SWTUtils.convertAWTImageToSWT(image);, +        if (data == null) {, +        org.eclipse.swt.graphics.Image im = new org.eclipse.swt.graphics.Image(, +                this.gc.getDevice(), data);, +        org.eclipse.swt.graphics.Rectangle bounds = im.getBounds();, +        this.gc.drawImage(im, 0, 0, bounds.width, bounds.height, x, y, width, , +                height);, +        im.dispose();, +        return true;, +    }, +        if (image == null) {, +            throw new IllegalArgumentException("Null 'image' argument.");, +        }, +        int w = image.getWidth(null);, +        int h = image.getHeight(null);, +        if (w == -1 || h == -1) {, +        Paint savedPaint = getPaint();, +        fill(new Rectangle2D.Double(x, y, w, h));, +        setPaint(savedPaint);, +        return drawImage(image, x, y, observer);, +    }, +        if (image == null) {, +            throw new IllegalArgumentException("Null 'image' argument.");, +        }, +        int w = image.getWidth(null);, +        int h = image.getHeight(null);, +        if (w == -1 || h == -1) {, +        Paint savedPaint = getPaint();, +        fill(new Rectangle2D.Double(x, y, w, h));, +        setPaint(savedPaint);, +        return drawImage(image, x, y, width, height, observer);]