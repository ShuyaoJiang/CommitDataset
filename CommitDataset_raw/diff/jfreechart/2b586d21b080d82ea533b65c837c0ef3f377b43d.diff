[+++ b/src/main/java/org/jfree/chart/demo/PieChartDemo1.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        plot.setSectionPaint("Others", , +                createGradientPaint(new Color(200, 200, 255), Color.BLUE));, +        plot.setSectionPaint("Samsung", , +                createGradientPaint(new Color(255, 200, 200), Color.RED));, +        plot.setSectionPaint("Apple", , +                createGradientPaint(new Color(200, 255, 200), Color.GREEN));, +        plot.setSectionPaint("Nokia", , +                createGradientPaint(new Color(200, 255, 200), Color.YELLOW));, +        plot.setDefaultSectionOutlinePaint(Color.WHITE);, +        plot.setDefaultSectionOutlineStroke(new BasicStroke(2.0f));, +++ b/src/main/java/org/jfree/chart/demo/PieChartDemo1.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        plot.setSectionPaint("Others", , +                createGradientPaint(new Color(200, 200, 255), Color.BLUE));, +        plot.setSectionPaint("Samsung", , +                createGradientPaint(new Color(255, 200, 200), Color.RED));, +        plot.setSectionPaint("Apple", , +                createGradientPaint(new Color(200, 255, 200), Color.GREEN));, +        plot.setSectionPaint("Nokia", , +                createGradientPaint(new Color(200, 255, 200), Color.YELLOW));, +        plot.setDefaultSectionOutlinePaint(Color.WHITE);, +        plot.setDefaultSectionOutlineStroke(new BasicStroke(2.0f));, +++ b/src/main/java/org/jfree/chart/plot/PiePlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +    /** The default section paint (fallback). */, +    private transient Paint defaultSectionPaint;, +    /** The default section outline paint (fallback). */, +    private transient Paint defaultSectionOutlinePaint;, +    /** The default section outline stroke (fallback). */, +    private transient Stroke defaultSectionOutlineStroke;, +        this.defaultSectionPaint = Color.gray;, +        this.defaultSectionOutlinePaint = DEFAULT_OUTLINE_PAINT;, +        this.defaultSectionOutlineStroke = DEFAULT_OUTLINE_STROKE;, +     * <li>if {@link #getSectionPaint(Comparable)} is non-{@code null} return, +     * <li>if {@link #getSectionPaint(Comparable)} is {@code null} but, +     * <li>if all else fails, return {@link #getDefaultSectionPaint()}., +                result = this.defaultSectionPaint;, +            result = this.defaultSectionPaint;, +     * Returns the default section paint.  This is used when no other paint is, +     * @see #setDefaultSectionPaint(Paint), +    public Paint getDefaultSectionPaint() {, +        return this.defaultSectionPaint;, +     * Sets the default section paint and sends a {@link PlotChangeEvent} to all, +     * @see #getDefaultSectionPaint(), +    public void setDefaultSectionPaint(Paint paint) {, +        this.defaultSectionPaint = paint;, +     * <li>if {@link #getSectionOutlinePaint(Comparable)} is, +     * <li>if {@link #getSectionOutlinePaint(Comparable)} is {@code null} but, +     * <li>if all else fails, return {@link #getDefaultSectionOutlinePaint()}., +                result = this.defaultSectionOutlinePaint;, +            result = this.defaultSectionOutlinePaint;, +     * Returns the default section paint.  This is used when no other paint is, +     * @see #setDefaultSectionOutlinePaint(Paint), +    public Paint getDefaultSectionOutlinePaint() {, +        return this.defaultSectionOutlinePaint;, +     * Sets the default section paint., +     * @see #getDefaultSectionOutlinePaint(), +    public void setDefaultSectionOutlinePaint(Paint paint) {, +        this.defaultSectionOutlinePaint = paint;, +     * <li>if {@link #getSectionOutlineStroke(Comparable)} is, +     * <li>if {@link #getSectionOutlineStroke(Comparable)} is {@code null} but, +     * <li>if all else fails, return {@link #getDefaultSectionOutlineStroke()}., +                result = this.defaultSectionOutlineStroke;, +            result = this.defaultSectionOutlineStroke;, +     * Returns the default section stroke.  This is used when no other stroke is, +     * @see #setDefaultSectionOutlineStroke(Stroke), +    public Stroke getDefaultSectionOutlineStroke() {, +        return this.defaultSectionOutlineStroke;, +     * Sets the default section stroke., +     * @see #getDefaultSectionOutlineStroke(), +    public void setDefaultSectionOutlineStroke(Stroke stroke) {, +        this.defaultSectionOutlineStroke = stroke;, +        if (!PaintUtils.equal(this.defaultSectionPaint,, +                that.defaultSectionPaint)) {, +        if (!PaintUtils.equal(this.defaultSectionOutlinePaint,, +                that.defaultSectionOutlinePaint)) {, +        if (!ObjectUtils.equal(this.defaultSectionOutlineStroke,, +                that.defaultSectionOutlineStroke)) {, +        SerialUtils.writePaint(this.defaultSectionPaint, stream);, +        SerialUtils.writePaint(this.defaultSectionOutlinePaint, stream);, +        SerialUtils.writeStroke(this.defaultSectionOutlineStroke, stream);, +        this.defaultSectionPaint = SerialUtils.readPaint(stream);, +        this.defaultSectionOutlinePaint = SerialUtils.readPaint(stream);, +        this.defaultSectionOutlineStroke = SerialUtils.readStroke(stream);]