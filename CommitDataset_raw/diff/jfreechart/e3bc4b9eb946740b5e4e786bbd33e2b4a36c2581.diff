[+++ b/ChangeLog, +    * source/org/jfree/chart/plot/CategoryPlot.java, +    (addDomainMarker(int, CategoryMarker, Layer, boolean)): New method,, +    (removeDomainMarker(int, Marker, Layer, boolean)): Likewise,    , +    (addRangeMarker(int, CategoryMarker, Layer, boolean)): Likewise,, +    (removeRangeMarker(int, Marker, Layer, boolean)): Likewise,, +    (addAnnotation(CategoryAnnotation, boolean)): Likewise,, +    (removeAnnotation(CategoryAnnotation, boolean)): Likewise., +, +2008-03-25  David Gilbert  <david.gilbert@object-refinery.com>, +, +    Patch 1913751:, +++ b/ChangeLog, +    * source/org/jfree/chart/plot/CategoryPlot.java, +    (addDomainMarker(int, CategoryMarker, Layer, boolean)): New method,, +    (removeDomainMarker(int, Marker, Layer, boolean)): Likewise,    , +    (addRangeMarker(int, CategoryMarker, Layer, boolean)): Likewise,, +    (removeRangeMarker(int, Marker, Layer, boolean)): Likewise,, +    (addAnnotation(CategoryAnnotation, boolean)): Likewise,, +    (removeAnnotation(CategoryAnnotation, boolean)): Likewise., +, +2008-03-25  David Gilbert  <david.gilbert@object-refinery.com>, +, +    Patch 1913751:, +++ b/source/org/jfree/chart/plot/CategoryPlot.java, + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + * 25-Mar-2008 : Added new methods with optional notification - see patch, + *               1913751 (DG);, + * , +     * , +     * @see #removeDomainMarker(Marker), +     *               , +     * @see #removeDomainMarker(Marker, Layer), +     * Adds a marker for display by a particular renderer and sends a ., +     * {@link PlotChangeEvent} to all registered listeners., +     * , +     * @see #removeDomainMarker(int, Marker, Layer), +        addDomainMarker(index, marker, layer, true);, +    }, +    	, +    /**, +     * Adds a marker for display by a particular renderer and, if requested,, +     * sends a {@link PlotChangeEvent} to all registered listeners., +     * <P>, +     * Typically a marker will be drawn by the renderer as a line perpendicular, +     * to a domain axis, however this is entirely up to the renderer., +     *, +     * @param index  the renderer index., +     * @param marker  the marker (<code>null</code> not permitted)., +     * @param layer  the layer (<code>null</code> not permitted)., +     * @param notify  notify listeners?, +     * , +     * @since 1.0.10, +     * , +     * @see #removeDomainMarker(int, Marker, Layer, boolean), +     */, +    public void addDomainMarker(int index, CategoryMarker marker, Layer layer,, +    		boolean notify) {, +        if (notify) {, +    }, +    	return removeDomainMarker(index, marker, layer, true);, +    }, +, +    /**, +     * Removes a marker for a specific dataset/renderer and, if requested, , +     * sends a {@link PlotChangeEvent} to all registered listeners., +     *, +     * @param index the dataset/renderer index., +     * @param marker the marker., +     * @param layer the layer (foreground or background)., +     *, +     * @return A boolean indicating whether or not the marker was actually , +     *         removed., +     *, +     * @since 1.0.10, +     */, +    public boolean removeDomainMarker(int index, Marker marker, Layer layer,, +    		boolean notify) {, +        if (removed && notify) {, +     * , +     * @see #removeRangeMarker(Marker), +     *               , +     * @see #removeRangeMarker(Marker, Layer), +     * Adds a marker for display by a particular renderer and sends a , +     * {@link PlotChangeEvent} to all registered listeners., +     * , +     * @see #removeRangeMarker(int, Marker, Layer), +    	addRangeMarker(index, marker, layer, true);, +    }, +, +    /**, +     * Adds a marker for display by a particular renderer and sends a , +     * {@link PlotChangeEvent} to all registered listeners., +     * <P>, +     * Typically a marker will be drawn by the renderer as a line perpendicular, +     * to a range axis, however this is entirely up to the renderer., +     *, +     * @param index  the renderer index., +     * @param marker  the marker.]