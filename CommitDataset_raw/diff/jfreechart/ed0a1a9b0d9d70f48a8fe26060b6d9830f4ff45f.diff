[+++ b/ChangeLog, +    Bug 3484403:, +    * org/jfree/chart/axis/DateAxis, +    (refreshTicksHorizontal): Fix endless loop,, +    (refreshTicksVertical): Likewise;, +, +2012-02-08  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Bug 3484408:, +++ b/ChangeLog, +    Bug 3484403:, +    * org/jfree/chart/axis/DateAxis, +    (refreshTicksHorizontal): Fix endless loop,, +    (refreshTicksVertical): Likewise;, +, +2012-02-08  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Bug 3484408:, +++ b/source/org/jfree/chart/axis/DateAxis.java, + * 08-Feb-2012 : Bugfix for endless-loop, bug 3484403 by rbrabe (MH);, +        boolean hasRolled = false;, +            if (!hasRolled) {, +            }, +                hasRolled = false;, +                hasRolled = true;, +        boolean hasRolled = false;, +            if (!hasRolled) {, +            }, +                hasRolled = false;, +, +                hasRolled = true;, +++ b/ChangeLog, +    Bug 3484403:, +    * org/jfree/chart/axis/DateAxis, +    (refreshTicksHorizontal): Fix endless loop,, +    (refreshTicksVertical): Likewise;, +, +2012-02-08  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Bug 3484408:, +++ b/source/org/jfree/chart/axis/DateAxis.java, + * 08-Feb-2012 : Bugfix for endless-loop, bug 3484403 by rbrabe (MH);, +        boolean hasRolled = false;, +            if (!hasRolled) {, +            }, +                hasRolled = false;, +                hasRolled = true;, +        boolean hasRolled = false;, +            if (!hasRolled) {, +            }, +                hasRolled = false;, +, +                hasRolled = true;, +++ b/tests/org/jfree/chart/axis/junit/DateAxisTests.java, + * 08-Feb-2012 : Added testBug3484403 (MH);, +import java.util.Arrays;, +    public void testBug3484403() {, +, +        final long[] dates =, +            { 1304892000000L, 1304632800000L, 1304546400000L, 1304460000000L,, +              1304373600000L, 1304287200000L, 1320015600000L, 1309384800000L,, +              1319752800000L, 1319666400000L, 1319580000000L, 1319493600000L };, +        Arrays.sort(dates);, +, +        DateAxis axis = new DateAxis("Date");, +        // set start and end date, +        Date start = new Date(dates[0]);, +        Date end = new Date(dates[dates.length-1]);, +        axis.setMinimumDate(start);, +        axis.setMaximumDate(end);, +, +        SegmentedTimeline timeline =, +            SegmentedTimeline.newMondayThroughFridayTimeline();, +        timeline.setStartTime(start.getTime());, +        axis.setTimeline(timeline);, +, +        BufferedImage image = new BufferedImage(200, 100,, +                BufferedImage.TYPE_INT_ARGB);, +        Graphics2D g2 = image.createGraphics();, +        Rectangle2D area = new Rectangle2D.Double(0.0, 0.0, 500, 200);, +, +        // if the bug is still present, this leads to an endless loop, +        axis.refreshTicks(g2, new AxisState(), area, RectangleEdge.BOTTOM);, +    }]