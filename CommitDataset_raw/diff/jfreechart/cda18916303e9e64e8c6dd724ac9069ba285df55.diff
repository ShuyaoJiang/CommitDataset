[+++ b/ChangeLog, +    (draw): Check tickMarksVisible and tickLabelsVisible,, +    (drawTickMarksHorizontal): Removed unnecessary calendar references,, +    (drawTickLabels): Likewise,, +    (valueToJava2D): Likewise,, +    (java2DtoValue): Likewise,, +    * source/org/jfree/chart/axis/PeriodAxisLabelInfo.java, +    (createInstance): Deprecated and added new method with locale argument., +, +2009-03-02  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/axis/PeriodAxis.java, +++ b/ChangeLog, +    (draw): Check tickMarksVisible and tickLabelsVisible,, +    (drawTickMarksHorizontal): Removed unnecessary calendar references,, +    (drawTickLabels): Likewise,, +    (valueToJava2D): Likewise,, +    (java2DtoValue): Likewise,, +    * source/org/jfree/chart/axis/PeriodAxisLabelInfo.java, +    (createInstance): Deprecated and added new method with locale argument., +, +2009-03-02  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/axis/PeriodAxis.java, +++ b/source/org/jfree/chart/axis/PeriodAxis.java, + * 02-Mar-2009 : Fixed draw() method to check tickMarksVisible and, + *               tickLabelsVisible (DG);, +    public AxisState draw(Graphics2D g2, double cursor, Rectangle2D plotArea,, +            Rectangle2D dataArea, RectangleEdge edge,, +        if (isTickMarksVisible()) {, +        }, +        if (isTickLabelsVisible()) {, +        }, +        long t0 = t.getFirstMillisecond();, +        long firstOnAxis = getFirst().getFirstMillisecond();, +        long lastOnAxis = getLast().getLastMillisecond() + 1;, +                long tt0 = tminor.getFirstMillisecond();, +                while (tt0 < t.getLastMillisecond(), +                    tminor.peg(this.calendar);, +                    tt0 = tminor.getFirstMillisecond();, +            t.peg(this.calendar);, +            t0 = t.getFirstMillisecond();, +        long axisMin = this.first.getFirstMillisecond();, +        long axisMax = this.last.getLastMillisecond();, +                new Date(axisMin), this.timeZone, this.locale);, +                new Date(axisMax), this.timeZone, this.locale);, +                new Date(p1.getMiddleMillisecond()));, +                new Date(p2.getMiddleMillisecond()));, +        long length = p1.getLastMillisecond(), +                      - p1.getFirstMillisecond();, +                new Date(axisMin), this.timeZone, this.locale);, +        while (p.getFirstMillisecond() <= axisMax) {, +            float x = (float) valueToJava2D(p.getMiddleMillisecond(), dataArea,, +                    edge);, +            String label = df.format(new Date(p.getMiddleMillisecond()));, +            long first = p.getFirstMillisecond();, +            long last = p.getLastMillisecond();, +                    long nextXX = p.getFirstMillisecond();, +            p.peg(this.calendar);, +    public List refreshTicks(Graphics2D g2, AxisState state,, +            Rectangle2D dataArea, RectangleEdge edge) {, +    public double valueToJava2D(double value, Rectangle2D area,, +        double axisMin = this.first.getFirstMillisecond();, +        double axisMax = this.last.getLastMillisecond();, +    public double java2DToValue(double java2DValue, Rectangle2D area,, +        double axisMin = this.first.getFirstMillisecond();, +        double axisMax = this.last.getLastMillisecond();, +++ b/ChangeLog, +    (draw): Check tickMarksVisible and tickLabelsVisible,, +    (drawTickMarksHorizontal): Removed unnecessary calendar references,, +    (drawTickLabels): Likewise,, +    (valueToJava2D): Likewise,, +    (java2DtoValue): Likewise,, +    * source/org/jfree/chart/axis/PeriodAxisLabelInfo.java, +    (createInstance): Deprecated and added new method with locale argument., +, +2009-03-02  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/axis/PeriodAxis.java, +++ b/source/org/jfree/chart/axis/PeriodAxis.java, + * 02-Mar-2009 : Fixed draw() method to check tickMarksVisible and, + *               tickLabelsVisible (DG);, +    public AxisState draw(Graphics2D g2, double cursor, Rectangle2D plotArea,, +            Rectangle2D dataArea, RectangleEdge edge,, +        if (isTickMarksVisible()) {, +        }, +        if (isTickLabelsVisible()) {, +        }, +        long t0 = t.getFirstMillisecond();, +        long firstOnAxis = getFirst().getFirstMillisecond();, +        long lastOnAxis = getLast().getLastMillisecond() + 1;, +                long tt0 = tminor.getFirstMillisecond();, +                while (tt0 < t.getLastMillisecond(), +                    tminor.peg(this.calendar);, +                    tt0 = tminor.getFirstMillisecond();, +            t.peg(this.calendar);, +            t0 = t.getFirstMillisecond();, +        long axisMin = this.first.getFirstMillisecond();, +        long axisMax = this.last.getLastMillisecond();, +                new Date(axisMin), this.timeZone, this.locale);]