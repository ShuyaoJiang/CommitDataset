[+++ b/ChangeLog, +    * source/org/jfree/renderer/RendererUtilities.java, +    (findLiveItemsLowerBound): Fixed results for unsorted dataset,, +    (findLiveItemsUpperBound): Likewise,, +    (findLiveItems): Check case where upper index is less than lower., +, +2009-03-27  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +    * source/org/jfree/renderer/RendererUtilities.java, +    (findLiveItemsLowerBound): Fixed results for unsorted dataset,, +    (findLiveItemsUpperBound): Likewise,, +    (findLiveItems): Check case where upper index is less than lower., +, +2009-03-27  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/renderer/RendererUtilities.java, + * 27-Mar-2009 : Fixed results for unsorted datasets (DG);, +            double x = dataset.getXValue(series, index);, +            while (index < itemCount && x < xLow || x > xHigh) {, +                if (index < itemCount) {, +                    x = dataset.getXValue(series, index);, +            }, +            return Math.min(Math.max(0, index), itemCount - 1);, +            double x = dataset.getXValue(series, index);, +            while (index >= 0 && x < xLow || x > xHigh) {, +                if (index >= 0) {, +                    x = dataset.getXValue(series, index);, +            }, +            return Math.max(index, 0);, +        if (i0 > i1) {, +            i0 = i1;, +        }, +++ b/ChangeLog, +    * source/org/jfree/renderer/RendererUtilities.java, +    (findLiveItemsLowerBound): Fixed results for unsorted dataset,, +    (findLiveItemsUpperBound): Likewise,, +    (findLiveItems): Check case where upper index is less than lower., +, +2009-03-27  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/renderer/RendererUtilities.java, + * 27-Mar-2009 : Fixed results for unsorted datasets (DG);, +            double x = dataset.getXValue(series, index);, +            while (index < itemCount && x < xLow || x > xHigh) {, +                if (index < itemCount) {, +                    x = dataset.getXValue(series, index);, +            }, +            return Math.min(Math.max(0, index), itemCount - 1);, +            double x = dataset.getXValue(series, index);, +            while (index >= 0 && x < xLow || x > xHigh) {, +                if (index >= 0) {, +                    x = dataset.getXValue(series, index);, +            }, +            return Math.max(index, 0);, +        if (i0 > i1) {, +            i0 = i1;, +        }, +++ b/tests/org/jfree/chart/renderer/junit/RendererUtilitiesTests.java, +    public void testFindLiveItemsLowerBound_Unordered() {, +        d.addSeries("S2", new double[][] {{0.0}, {9.9}});, +        d.addSeries("S3", new double[][] {{0.0, 1.0}, {9.9, 9.9}});, +        assertEquals(1, RendererUtilities.findLiveItemsLowerBound(d, 2, 1.0,, +        assertEquals(1, RendererUtilities.findLiveItemsLowerBound(d, 2, 2.0,, +        d.addSeries("S4", new double[][] {{1.0, 2.0, 1.5}, {9.9, 9.9, 9.9}});, +        assertEquals(1, RendererUtilities.findLiveItemsLowerBound(d, 3, 2.0,, +        d.addSeries("S5", new double[][] {{1.0, 2.0, 1.5, 1.8}, {9.9, 9.9,, +                9.9, 9.9}});, +        assertEquals(1, RendererUtilities.findLiveItemsLowerBound(d, 4, 2.0,, +    public void testFindLiveItemsLowerBound_Ascending() {, +        d.addSeries("S2", new double[][] {{1.0}, {9.9}});, +        d.addSeries("S3", new double[][] {{1.0, 2.0}, {9.9, 9.9}});, +        d.addSeries("S4", new double[][] {{1.0, 2.0, 3.0}, {9.9, 9.9, 9.9}});, +        d.addSeries("S5", new double[][] {{1.0, 2.0, 3.0, 4.0}, {9.9, 9.9,, +                9.9, 9.9}});, +        d.addSeries("S5", new double[][] {{1.0, 2.0, 2.0, 2.0, 3.0}, {9.9, 9.9,, +                9.9, 9.9, 9.9}});, +    public void testFindLiveItemsLowerBound_Descending() {, +                // only add data in descending order by x-value, +        d.addSeries("S2", new double[][] {{1.0}, {9.9}});, +        d.addSeries("S3", new double[][] {{2.0, 1.0}, {9.9, 9.9}});, +        d.addSeries("S4", new double[][] {{3.0, 2.0, 1.0}, {9.9, 9.9, 9.9}});, +        d.addSeries("S5", new double[][] {{4.0, 3.0, 2.0, 1.0}, {9.9, 9.9,, +                9.9, 9.9}});, +        d.addSeries("S6", new double[][] {{3.0, 2.0, 2.0, 2.0, 1.0}, {9.9, 9.9,, +                9.9, 9.9, 9.9}});, +    public void testFindLiveItemsUpperBound_Unordered() {, +        d.addSeries("S2", new double[][] {{1.0}, {9.9}});, +        d.addSeries("S3", new double[][] {{1.0, 2.0}, {9.9, 9.9}});, +        assertEquals(0, RendererUtilities.findLiveItemsUpperBound(d, 2, 0.0,, +        assertEquals(0, RendererUtilities.findLiveItemsUpperBound(d, 2, 3.0,, +        d.addSeries("S4", new double[][] {{1.0, 2.0, 1.5}, {9.9, 9.9, 9.9}});, +        assertEquals(0, RendererUtilities.findLiveItemsUpperBound(d, 3, 0.0,, +        assertEquals(1, RendererUtilities.findLiveItemsUpperBound(d, 3, 2.0,, +        assertEquals(0, RendererUtilities.findLiveItemsUpperBound(d, 3, 3.0,, +        d.addSeries("S5", new double[][] {{1.0, 2.0, 1.5, 1.8}, {9.9, 9.9,, +                9.9, 9.9}});, +        assertEquals(0, RendererUtilities.findLiveItemsUpperBound(d, 4, 0.0,, +        assertEquals(1, RendererUtilities.findLiveItemsUpperBound(d, 4, 2.0,, +        assertEquals(0, RendererUtilities.findLiveItemsUpperBound(d, 4, 3.0,]