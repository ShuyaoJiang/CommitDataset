[+++ b/src/main/java/org/jfree/chart/text/TextFragment.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, +    public static final Paint DEFAULT_PAINT = Color.BLACK;, +     * @param text  the text ({@code null} not permitted)., +    public TextFragment(String text) {, +     * @param text  the text ({@code null} not permitted)., +     * @param font  the font ({@code null} not permitted)., +    public TextFragment(String text, Font font) {, +     * @param text  the text ({@code null} not permitted)., +     * @param font  the font ({@code null} not permitted)., +     * @param paint  the text color ({@code null} not permitted)., +    public TextFragment(String text, Font font, Paint paint) {, +     * @param text  the text ({@code null} not permitted)., +     * @param font  the font ({@code null} not permitted)., +     * @param paint  the text color ({@code null} not permitted)., +    public TextFragment(String text, Font font, Paint paint,, +            float baselineOffset) {, +     * @return The text (possibly {@code null})., +     * @return The font (never {@code null})., +     * @return The text paint (never {@code null})., +    public void draw(Graphics2D g2, float anchorX, float anchorY, , +            TextAnchor anchor, float rotateX, float rotateY, double angle) {, +    public Size2D calculateDimensions(Graphics2D g2) {, +        FontMetrics fm = g2.getFontMetrics(this.font);, +        Rectangle2D bounds = TextUtilities.getTextBounds(this.text, g2, fm);, +        Size2D result = new Size2D(bounds.getWidth(), bounds.getHeight());, +        FontMetrics fm = g2.getFontMetrics(this.font);, +        LineMetrics lm = fm.getLineMetrics("ABCxyz", g2);, +     * @param obj  the object to test against ({@code null} permitted)., +    public boolean equals(Object obj) {, +            TextFragment tf = (TextFragment) obj;, +    private void writeObject(ObjectOutputStream stream) throws IOException {, +    private void readObject(ObjectInputStream stream) throws IOException, , +            ClassNotFoundException {]