[+++ b/ChangeLog, +2009-02-02  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/renderer/GrayPaintScale.java, +    (alpha): New field,, +    (GrayPaintScale(double, double)): Delegate to new constructor,, +    (GrayPaintScale(double, double, int)): New constructor,, +    (getAlpha): New method,, +    (getPaint): Use alpha setting for returned paint,, +    (equals): Check new field,, +    (hashCode): New method,, +    * tests/org/jfree/chart/renderer/junit/GrayPaintScaleTests.java, +    (testEquals): Check new field., +, +++ b/ChangeLog, +2009-02-02  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/renderer/GrayPaintScale.java, +    (alpha): New field,, +    (GrayPaintScale(double, double)): Delegate to new constructor,, +    (GrayPaintScale(double, double, int)): New constructor,, +    (getAlpha): New method,, +    (getPaint): Use alpha setting for returned paint,, +    (equals): Check new field,, +    (hashCode): New method,, +    * tests/org/jfree/chart/renderer/junit/GrayPaintScaleTests.java, +    (testEquals): Check new field., +, +++ b/source/org/jfree/chart/renderer/GrayPaintScale.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2009, by Object Refinery Limited., + * 29-Jan-2009 : Added alpha transparency field and hashCode() method (DG);, +import org.jfree.chart.HashUtilities;, +     * The alpha transparency (0-255)., +     *, +     * @since 1.0.13, +     */, +    private int alpha;, +, +    /**, +        this(lowerBound, upperBound, 255);, +    }, +, +    /**, +     * Creates a new paint scale for values in the specified range., +     *, +     * @param lowerBound  the lower bound., +     * @param upperBound  the upper bound., +     * @param alpha  the alpha transparency (0-255)., +     *, +     * @throws IllegalArgumentException if <code>lowerBound</code> is not, +     *       less than <code>upperBound</code>, or <code>alpha</code> is not in, +     *       the range 0 to 255., +     *, +     * @since 1.0.13, +     */, +    public GrayPaintScale(double lowerBound, double upperBound, int alpha) {, +        if (alpha < 0 || alpha > 255) {, +            throw new IllegalArgumentException(, +                    "Requires alpha in the range 0 to 255.");, +, +        }, +        this.alpha = alpha;, +     * Returns the alpha transparency that was specified in the constructor., +     * , +     * @return The alpha transparency (in the range 0 to 255)., +     * , +     * @since 1.0.13, +     */, +    public int getAlpha() {, +        return this.alpha;, +    }, +, +    /**, +        return new Color(g, g, g, this.alpha);, +        if (this.alpha != that.alpha) {, +            return false;, +        }, +     * Returns a hash code for this instance., +     *, +     * @return A hash code., +     */, +    public int hashCode() {, +        int hash = 7;, +        hash = HashUtilities.hashCode(hash, this.lowerBound);, +        hash = HashUtilities.hashCode(hash, this.upperBound);, +        hash = 43 * hash + this.alpha;, +        return hash;, +    }, +, +    /**, +++ b/ChangeLog, +2009-02-02  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/renderer/GrayPaintScale.java, +    (alpha): New field,, +    (GrayPaintScale(double, double)): Delegate to new constructor,, +    (GrayPaintScale(double, double, int)): New constructor,, +    (getAlpha): New method,, +    (getPaint): Use alpha setting for returned paint,]