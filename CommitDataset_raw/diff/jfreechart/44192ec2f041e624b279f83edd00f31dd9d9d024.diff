[+++ b/ChangeLog, +2007-11-13  David Gilbert  <david.gilbert@pobject-refinery.com>, +, +	* source/oprg/jfree/chart/HashUtilities.java, +	(hashCode(int, boolean)): New method,, +	(hashCode(int, double)): Likewise,, +	(hashCode(int, Paint)): Likewise,, +	(hashCode(int, Stroke)): Likewise,, +	(hashCode(int, String)): Likewise., +, +++ b/ChangeLog, +2007-11-13  David Gilbert  <david.gilbert@pobject-refinery.com>, +, +	* source/oprg/jfree/chart/HashUtilities.java, +	(hashCode(int, boolean)): New method,, +	(hashCode(int, double)): Likewise,, +	(hashCode(int, Paint)): Likewise,, +	(hashCode(int, Stroke)): Likewise,, +	(hashCode(int, String)): Likewise., +, +++ b/source/org/jfree/chart/HashUtilities.java, + * 13-Nov-2007 : Added new utility methods (DG);, +import java.awt.Stroke;, +        if (p == null) {, +        }, +    /**, +     * Returns a hash value based on a seed value and the value of a boolean, +     * primitive., +     * , +     * @param pre  the seed value., +     * @param b  the boolean value., +     * , +     * @return A hash value., +     * , +     * @since 1.0.7, +     */, +    public static int hashCode(int pre, boolean b) {, +        return 37 * pre + (b ? 0 : 1);, +    }, +    , +    /**, +     * Returns a hash value based on a seed value and the value of a double, +     * primitive., +     * , +     * @param pre  the seed value., +     * @param d  the double value., +     * , +     * @return A hash value., +     * , +     * @since 1.0.7, +     */, +    public static int hashCode(int pre, double d) {, +        long l = Double.doubleToLongBits(d);, +        return 37 * pre + (int) (l ^ (l >>> 32));, +    }, +    , +    /**, +     * Returns a hash value based on a seed value and a paint instance., +     * , +     * @param pre  the seed value., +     * @param p  the paint (<code>null</code> permitted)., +     * , +     * @return A hash value., +     * , +     * @since 1.0.7, +     */, +    public static int hashCode(int pre, Paint p) {, +        return 37 * pre + hashCodeForPaint(p);, +    }, +, +    /**, +     * Returns a hash value based on a seed value and a stroke instance., +     * , +     * @param pre  the seed value., +     * @param s  the stroke (<code>null</code> permitted)., +     * , +     * @return A hash value., +     * , +     * @since 1.0.7, +     */, +    public static int hashCode(int pre, Stroke s) {, +        int h = (s != null ? s.hashCode() : 0);, +        return 37 * pre + h;, +    }, +, +    /**, +     * Returns a hash value based on a seed value and a string instance., +     * , +     * @param pre  the seed value., +     * @param s  the string (<code>null</code> permitted)., +     * , +     * @return A hash value., +     * , +     * @since 1.0.7, +     */, +    public static int hashCode(int pre, String s) {, +        int h = (s != null ? s.hashCode() : 0);, +        return 37 * pre + h;, +    }, +]