[+++ b/ChangeLog, +2009-01-16  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/ChartPanel.java, +    (DEFAULT_BUFFER_USED): Changed default to true,, +    (zoomOutlinePaint): New field,, +    (zoomFillPaint): Likewise,, +    (ChartPanel): Initialise new fields,, +    (getZoomFillPaint): New method,, +    (setZoomFillPaint): Likewise,, +    (getZoomOutlinePaint): Likewise,, +    (setZoomOutlinePaint): Likewise,, +    (paintComponent): Update drawing of zoom rectangle,, +    (mouseDragged): If useBuffer is true, repaint chart rather than using XOR, +    for zoom rectangle,, +    (mouseReleased): Likewise,, +    (drawZoomRectangle): Only use XOR if useBuffer is false,, +    (writeObject): Handle new fields,, +    (readObject): Likewise., +, +++ b/ChangeLog, +2009-01-16  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/ChartPanel.java, +    (DEFAULT_BUFFER_USED): Changed default to true,, +    (zoomOutlinePaint): New field,, +    (zoomFillPaint): Likewise,, +    (ChartPanel): Initialise new fields,, +    (getZoomFillPaint): New method,, +    (setZoomFillPaint): Likewise,, +    (getZoomOutlinePaint): Likewise,, +    (setZoomOutlinePaint): Likewise,, +    (paintComponent): Update drawing of zoom rectangle,, +    (mouseDragged): If useBuffer is true, repaint chart rather than using XOR, +    for zoom rectangle,, +    (mouseReleased): Likewise,, +    (drawZoomRectangle): Only use XOR if useBuffer is false,, +    (writeObject): Handle new fields,, +    (readObject): Likewise., +, +++ b/source/org/jfree/chart/ChartPanel.java, + * 13-Jan-2009 : Fixed zooming methods to trigger only one plot, + * 16-Jan-2009 : Use XOR for zoom rectangle only if useBuffer is false (DG);, +import java.awt.Paint;, +import org.jfree.io.SerialUtilities;, +    public static final boolean DEFAULT_BUFFER_USED = true;, +    /**, +     * The paint used to draw the zoom rectangle outline., +     *, +     * @since 1.0.13, +     */, +    private transient Paint zoomOutlinePaint;, +, +    /**, +     * The zoom fill paint (should use transparency)., +     *, +     * @since 1.0.13, +     */, +    private transient Paint zoomFillPaint;, +, +        this.zoomOutlinePaint = Color.blue;, +        this.zoomFillPaint = new Color(0, 0, 255, 63);, +     * Returns the zoom rectangle fill paint., +     *, +     * @return The zoom rectangle fill paint (never <code>null</code>)., +     *, +     * @see #setZoomFillPaint(java.awt.Paint), +     * @see #setFillZoomRectangle(boolean), +     *, +     * @since 1.0.13, +     */, +    public Paint getZoomFillPaint() {, +        return zoomFillPaint;, +    }, +, +    /**, +     * Sets the zoom rectangle fill paint., +     *, +     * @param paint  the paint (<code>null</code> not permitted)., +     *, +     * @see #getZoomFillPaint(), +     * @see #getFillZoomRectangle(), +     *, +     * @since 1.0.13, +     */, +    public void setZoomFillPaint(Paint paint) {, +        if (paint == null) {, +            throw new IllegalArgumentException("Null 'paint' argument.");, +        }, +        this.zoomFillPaint = paint;, +    }, +, +    /**, +     * Returns the zoom rectangle outline paint., +     *, +     * @return The zoom rectangle outline paint (never <code>null</code>)., +     *, +     * @see #setZoomOutlinePaint(java.awt.Paint), +     * @see #setFillZoomRectangle(boolean), +     *]