[+++ b/ChangeLog, +    * source/org/jfree/chart/renderer/AbstractRenderer.java, +    (equals): Fix shape test,, +    * tests/org/jfree/chart/renderer/junit/AbstractRendererTests.java, +    (testEquals): Modified to cover Shape.equals() bug., +, +2009-01-28  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +    * source/org/jfree/chart/renderer/AbstractRenderer.java, +    (equals): Fix shape test,, +    * tests/org/jfree/chart/renderer/junit/AbstractRendererTests.java, +    (testEquals): Modified to cover Shape.equals() bug., +, +2009-01-28  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/renderer/AbstractRenderer.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2009, by Object Refinery Limited., + * 28-Jan-2009 / Equals method doesn't test Shape equality correctly (DG);, + * , +        if (!ShapeUtilities.equal(this.shape, that.shape)) {, +        if (!ShapeUtilities.equal(this.baseShape, that.baseShape)) {, +++ b/ChangeLog, +    * source/org/jfree/chart/renderer/AbstractRenderer.java, +    (equals): Fix shape test,, +    * tests/org/jfree/chart/renderer/junit/AbstractRendererTests.java, +    (testEquals): Modified to cover Shape.equals() bug., +, +2009-01-28  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/renderer/AbstractRenderer.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2009, by Object Refinery Limited., + * 28-Jan-2009 / Equals method doesn't test Shape equality correctly (DG);, + * , +        if (!ShapeUtilities.equal(this.shape, that.shape)) {, +        if (!ShapeUtilities.equal(this.baseShape, that.baseShape)) {, +++ b/tests/org/jfree/chart/renderer/junit/AbstractRendererTests.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2009, by Object Refinery Limited and Contributors., + * 28-Jan-2009 : Updated testEquals() (DG);, +import java.awt.geom.Ellipse2D;, +        r1.setShape(new Ellipse2D.Double(1, 2, 3, 4));, +        r2.setShape(new Ellipse2D.Double(1, 2, 3, 4));, +        r1.setSeriesShape(1, new Ellipse2D.Double(1, 2, 3, 4));, +        r2.setSeriesShape(1, new Ellipse2D.Double(1, 2, 3, 4));, +        r1.setBaseShape(new Ellipse2D.Double(1, 2, 3, 4));, +        r2.setBaseShape(new Ellipse2D.Double(1, 2, 3, 4));, +        r1.setLegendShape(0, new Ellipse2D.Double(1.0, 2.0, 3.0, 4.0));, +        r2.setLegendShape(0, new Ellipse2D.Double(1.0, 2.0, 3.0, 4.0));, +        r1.setBaseLegendShape(new Ellipse2D.Double(5.0, 6.0, 7.0, 8.0));, +        r2.setBaseLegendShape(new Ellipse2D.Double(5.0, 6.0, 7.0, 8.0));]