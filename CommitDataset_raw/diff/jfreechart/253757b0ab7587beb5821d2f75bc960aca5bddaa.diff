[+++ b/ChangeLog, +2012-08-23  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3561093:, +    * org/jfree/chart/renderer/RendererUtilities.java, +    (findLiveItemsLowerBound): changed while loop expression,, +    (findLiveItemsUpperBound): likewise., +, +++ b/ChangeLog, +2012-08-23  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3561093:, +    * org/jfree/chart/renderer/RendererUtilities.java, +    (findLiveItemsLowerBound): changed while loop expression,, +    (findLiveItemsUpperBound): likewise., +, +++ b/NEWS, +3561093 : Rendering anomaly for XYPlots;, +++ b/ChangeLog, +2012-08-23  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3561093:, +    * org/jfree/chart/renderer/RendererUtilities.java, +    (findLiveItemsLowerBound): changed while loop expression,, +    (findLiveItemsUpperBound): likewise., +, +++ b/NEWS, +3561093 : Rendering anomaly for XYPlots;, +++ b/README.txt, +?? August 2012 (NOT YET RELEASED), +1.0.15 : (??-Aug-2012), +++ b/ChangeLog, +2012-08-23  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3561093:, +    * org/jfree/chart/renderer/RendererUtilities.java, +    (findLiveItemsLowerBound): changed while loop expression,, +    (findLiveItemsUpperBound): likewise., +, +++ b/NEWS, +3561093 : Rendering anomaly for XYPlots;, +++ b/README.txt, +?? August 2012 (NOT YET RELEASED), +1.0.15 : (??-Aug-2012), +++ b/source/org/jfree/chart/renderer/RendererUtilities.java, + * (C) Copyright 2000-2012, by Object Refinery Limited and Contributors., + * (C) Copyright 2007-2012, by Object Refinery Limited., + * 23-Aug-2012 : Fixed rendering anomaly bug 3561093 (DG);, +            while (index < itemCount && x < xLow) {, +            while (index >= 0 && x > xHigh) {, +++ b/ChangeLog, +2012-08-23  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3561093:, +    * org/jfree/chart/renderer/RendererUtilities.java, +    (findLiveItemsLowerBound): changed while loop expression,, +    (findLiveItemsUpperBound): likewise., +, +++ b/NEWS, +3561093 : Rendering anomaly for XYPlots;, +++ b/README.txt, +?? August 2012 (NOT YET RELEASED), +1.0.15 : (??-Aug-2012), +++ b/source/org/jfree/chart/renderer/RendererUtilities.java, + * (C) Copyright 2000-2012, by Object Refinery Limited and Contributors., + * (C) Copyright 2007-2012, by Object Refinery Limited., + * 23-Aug-2012 : Fixed rendering anomaly bug 3561093 (DG);, +            while (index < itemCount && x < xLow) {, +            while (index >= 0 && x > xHigh) {, +++ b/tests/org/jfree/chart/renderer/junit/RendererUtilitiesTests.java, + * (C) Copyright 2000-2012, by Object Refinery Limited and Contributors., + * (C) Copyright 2007-2012, by Object Refinery Limited and Contributors., + * 23-Aug-2012 : Added test3561093() (DG);, +import org.jfree.data.xy.XYSeries;, +import org.jfree.data.xy.XYSeriesCollection;, +        assertEquals(1, RendererUtilities.findLiveItemsUpperBound(d, 2, 3.0,, +        assertEquals(2, RendererUtilities.findLiveItemsUpperBound(d, 3, 2.0,, +        assertEquals(2, RendererUtilities.findLiveItemsUpperBound(d, 3, 3.0,, +        assertEquals(3, RendererUtilities.findLiveItemsUpperBound(d, 4, 2.0,, +        assertEquals(3, RendererUtilities.findLiveItemsUpperBound(d, 4, 3.0,, +        assertEquals(3, RendererUtilities.findLiveItemsUpperBound(d, 4, 4.0,, +    /**, +     * Checks the bounds calculation for a series where the x-ordering is not, +     * known.  See bug 3561093., +     */, +    public void test3561093() {, +        XYSeries s = new XYSeries("S1", false);, +        s.add(0.0, 0.0);, +        s.add(21.0, 0.0);, +        s.add(2.0, 0.0);, +        s.add(23.0, 0.0);, +        XYSeriesCollection dataset = new XYSeriesCollection();, +        dataset.addSeries(s);, +        , +        assertEquals(1, RendererUtilities.findLiveItemsLowerBound(dataset, 0, , +                10.0, 20.0));, +        assertEquals(2, RendererUtilities.findLiveItemsUpperBound(dataset, 0, , +                10.0, 20.0));, +        , +        int[] bounds = RendererUtilities.findLiveItems(dataset, 0, 10.0, 20.0);]