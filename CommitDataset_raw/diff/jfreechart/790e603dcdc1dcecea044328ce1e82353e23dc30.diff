[+++ b/swt/org/jfree/experimental/swt/SWTGraphics2D.java, +     * to the resource pool will be disposed when {@link #dispose()} is called., +        this.resourcePool.add(resource);, +        for (Iterator it = this.resourcePool.iterator(); it.hasNext();) {, +        this.resourcePool.clear();, +        this.colorsPool.clear();, +        this.resourcePool.clear();, +        this.fontsPool.get(font);, +            swtFont = new org.eclipse.swt.graphics.Font(this.gc.getDevice(), , +                    SWTUtils.toSwtFontData(this.gc.getDevice(), font, true));, +            this.fontsPool.put(font, swtFont);, +            swtColor = SWTUtils.toSwtColor(this.gc.getDevice(), awtColor);, +        org.eclipse.swt.graphics.Color bg = this.gc.getBackground();, +        org.eclipse.swt.graphics.Color fg = this.gc.getForeground();, +        this.gc.setBackground(fg);, +        this.gc.setForeground(bg);, +        Transform t = new Transform(this.gc.getDevice());, +        this.gc.drawPath(path);, +        org.eclipse.swt.graphics.Image im = new org.eclipse.swt.graphics.Image(, +                this.gc.getDevice(), convertToSWT(image));, +        this.gc.drawImage(im, x, y);, +        this.gc.drawImage(image, x, y);, +        float fm = this.gc.getFontMetrics().getAscent();, +        this.gc.drawString(text, x, (int) (y - fm), true);, +        float fm = this.gc.getFontMetrics().getAscent();, +        this.gc.drawString(text, (int) x, (int) ( y - fm ), true);, +            this.gc.setLineWidth((int) bs.getLineWidth());, +                    this.gc.setLineJoin(SWT.JOIN_BEVEL);, +                    this.gc.setLineJoin(SWT.JOIN_MITER);, +                    this.gc.setLineJoin(SWT.JOIN_ROUND);, +                    this.gc.setLineCap(SWT.CAP_FLAT);, +                    this.gc.setLineCap(SWT.CAP_ROUND);, +                    this.gc.setLineCap(SWT.CAP_SQUARE);, +            this.gc.setLineStyle(SWT.LINE_SOLID);, +                this.gc.setLineDash(swtDashes);, +        Transform swtTransform = new Transform(this.gc.getDevice()); , +        this.gc.getTransform(swtTransform);, +        this.gc.setTransform(swtTransform);, +        Transform swtTransform = new Transform(this.gc.getDevice()); , +        this.gc.getTransform(swtTransform);, +        this.gc.setTransform(swtTransform);, +        Transform swtTransform = new Transform(this.gc.getDevice()); , +        this.gc.getTransform(swtTransform);, +        this.gc.setTransform(swtTransform);, +        Transform swtTransform = new Transform(this.gc.getDevice()); , +        this.gc.getTransform(swtTransform);, +        Transform shear = new Transform(this.gc.getDevice(), 1f, (float) shearX, , +        this.gc.setTransform(swtTransform);, +        Transform swtTransform = new Transform(this.gc.getDevice()); , +        this.gc.getTransform(swtTransform);, +        this.gc.setTransform(swtTransform);, +        this.gc.setTransform(toSwtTransform(Tx));, +        Transform swtTransform = new Transform(this.gc.getDevice()); , +        this.gc.getTransform(swtTransform);, +        return SWTUtils.toAwtColor(this.gc.getForeground());, +        this.gc.getBackground().dispose();, +        org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor(, +                this.gc.getDevice(), color);, +        this.gc.setBackground(swtColor);, +        return SWTUtils.toAwtColor(this.gc.getBackground());, +        return new BasicStroke(this.gc.getLineWidth(), this.gc.getLineCap(), , +                this.gc.getLineJoin());, +        FontRenderContext fontRenderContext = new FontRenderContext(, +                new AffineTransform(), true, true);, +        return SWTUtils.toAwtColor(this.gc.getForeground());, +        this.gc.setForeground(swtColor);, +        FontData[] fontData = this.gc.getFont().getFontData();, +        return SWTUtils.toAwtFont(this.gc.getDevice(), fontData[0], true);, +        this.gc.setFont(swtFont);, +        this.gc.setClipping(path);, +        org.eclipse.swt.graphics.Rectangle clip = this.gc.getClipping();, +        org.eclipse.swt.graphics.Rectangle clip = this.gc.getClipping();, +        this.gc.setClipping(clip);, +        this.gc.setClipping(x, y, width, height);, +        return SWTUtils.toAwtRectangle(this.gc.getClipping());, +        this.gc.setClipping(clipPath);, +        this.gc.drawLine(x1, y1, x2, y2);, +        this.gc.fillRectangle(x, y, width, height);]