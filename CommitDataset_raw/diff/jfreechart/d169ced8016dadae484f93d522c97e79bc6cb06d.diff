[+++ b/ChangeLog, +2009-06-09  David Gilbert  <david.gilbert@object-refinery.com>, +, +    Bug 2802014:, +    * source/org/jfree/chart/plot/dial/DialValueIndicator.java, +    (maxTemplateValue): New field,, +    (DialValueIndicator): Initialise new field,, +    (getMaxTemplateValue): New method,, +    (setMaxTemplateValue): Likewise,, +    (draw): Rewrite for indicator bounds, now supports clipping also,, +    (fixToRange): New private method,, +    (equals): Check new field., +, +++ b/ChangeLog, +2009-06-09  David Gilbert  <david.gilbert@object-refinery.com>, +, +    Bug 2802014:, +    * source/org/jfree/chart/plot/dial/DialValueIndicator.java, +    (maxTemplateValue): New field,, +    (DialValueIndicator): Initialise new field,, +    (getMaxTemplateValue): New method,, +    (setMaxTemplateValue): Likewise,, +    (draw): Rewrite for indicator bounds, now supports clipping also,, +    (fixToRange): New private method,, +    (equals): Check new field., +, +++ b/source/org/jfree/chart/plot/dial/DialValueIndicator.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2009, by Object Refinery Limited., + * 09-Jun-2009 : Improved indicator resizing, fixes bug 2802014 (DG);, +import java.awt.Shape;, +import org.jfree.util.ObjectUtilities;, +    /**, +     * A data value that will be formatted to determine the maximum size of, +     * the indicator bounds.  If this is null, the indicator bounds can grow, +     * as large as necessary to contain the actual data value., +     *, +     * @since 1.0.14, +     */, +    private Number maxTemplateValue;, +, +        this.maxTemplateValue = null;, +     * Returns the template value for the maximum size of the indicator, +     * bounds., +     *, +     * @return The template value (possibly <code>null</code>)., +     *, +     * @since 1.0.14, +     *, +     * @see #setMaxTemplateValue(java.lang.Number), +     */, +    public Number getMaxTemplateValue() {, +        return this.maxTemplateValue;, +    }, +, +    /**, +     * Sets the template value for the maximum size of the indicator bounds, +     * and sends a {@link DialLayerChangeEvent} to all registered listeners., +     *, +     * @param value  the value (<code>null</code> permitted)., +     *, +     * @since 1.0.14, +     *, +     * @see #getMaxTemplateValue(), +     */, +    public void setMaxTemplateValue(Number value) {, +        this.maxTemplateValue = value;, +        notifyListeners(new DialLayerChangeEvent(this));, +    }, +, +    /**, +        // the indicator bounds is calculated from the templateValue (which, +        // determines the minimum size), the maxTemplateValue (which, if, +        // specified, provides a maximum size) and the actual value, +        double value = plot.getValue(this.datasetIndex);, +        String valueStr = this.formatter.format(value);, +        Rectangle2D valueBounds = TextUtilities.getTextBounds(valueStr, g2, fm);, +, +        // calculate the bounds of the template value, +        double minW = tb.getWidth();, +        double minH = tb.getHeight();, +, +        double maxW = Double.MAX_VALUE;, +        double maxH = Double.MAX_VALUE;, +        if (this.maxTemplateValue != null) {, +            s = this.formatter.format(this.maxTemplateValue);, +            tb = TextUtilities.getTextBounds(s, g2, fm);, +            maxW = Math.max(tb.getWidth(), minW);, +            maxH = Math.max(tb.getHeight(), minH);, +        }, +        double w = fixToRange(valueBounds.getWidth(), minW, maxW);, +        double h = fixToRange(valueBounds.getHeight(), minH, maxH);, +        Rectangle2D bounds = RectangleAnchor.createRectangle(new Size2D(w, h),, +                pt.getX(), pt.getY(), this.frameAnchor);, +        Shape savedClip = g2.getClip();, +        g2.clip(fb);, +, +        g2.setClip(savedClip);, +     * A utility method that adjusts a value, if necessary, to be within a , +     * specified range.]