[+++ b/ChangeLog, +2007-12-19  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/title/TextTitle.java, +    (arrange): Implement additional options,, +    (arrangeNN): New method,, +    (arrangeFN): Likewise,, +    (arrangeRN): Likewise., +, +++ b/ChangeLog, +2007-12-19  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/title/TextTitle.java, +    (arrange): Implement additional options,, +    (arrangeNN): New method,, +    (arrangeFN): Likewise,, +    (arrangeRN): Likewise., +, +++ b/source/org/jfree/chart/title/TextTitle.java, + * 19-Dec-2007 : Implemented some of the missing arrangement options (DG);, +                contentSize = arrangeNN(g2); , +                contentSize = arrangeRN(g2, cc.getWidthRange());, +                contentSize = arrangeFN(g2, cc.getWidth());, +     * Arranges the content for this title assuming no bounds on the width, +     * or the height, and returns the required size.  This will reflect the , +     * fact that a text title positioned on the left or right of a chart will, +     * be rotated by 90 degrees., +     * , +     * @param g2  the graphics target., +     * , +     * @return The content size., +     * , +     * @since 1.0.9, +     */, +    protected Size2D arrangeNN(Graphics2D g2) {, +        Range max = new Range(0.0, Float.MAX_VALUE);, +        return arrangeRR(g2, max, max);, +    }, +    , +    /**, +     * Arranges the content for this title assuming a fixed width and no bounds, +     * on the height, and returns the required size.  This will reflect the , +     * fact that a text title positioned on the left or right of a chart will, +     * be rotated by 90 degrees., +     * , +     * @param g2  the graphics target., +     * @param w  the width., +     * , +     * @return The content size., +     * , +     * @since 1.0.9, +     */, +    protected Size2D arrangeFN(Graphics2D g2, double w) {, +        RectangleEdge position = getPosition();, +        if (position == RectangleEdge.TOP || position == RectangleEdge.BOTTOM) {, +            float maxWidth = (float) w;, +            g2.setFont(this.font);, +            this.content = TextUtilities.createTextBlock(this.text, this.font, , +                    this.paint, maxWidth, new G2TextMeasurer(g2));, +            this.content.setLineAlignment(this.textAlignment);, +            Size2D contentSize = this.content.calculateDimensions(g2);, +            if (this.expandToFitSpace) {, +                return new Size2D(maxWidth, contentSize.getHeight());, +            }, +            else {, +                return contentSize;, +            }, +        }, +        else if (position == RectangleEdge.LEFT || position , +                == RectangleEdge.RIGHT) {, +            float maxWidth = Float.MAX_VALUE;, +            g2.setFont(this.font);, +            this.content = TextUtilities.createTextBlock(this.text, this.font, , +                    this.paint, maxWidth, new G2TextMeasurer(g2));, +            this.content.setLineAlignment(this.textAlignment);, +            Size2D contentSize = this.content.calculateDimensions(g2);, +            , +            // transpose the dimensions, because the title is rotated, +            if (this.expandToFitSpace) {, +                return new Size2D(contentSize.getHeight(), maxWidth);, +            }, +            else {, +                return new Size2D(contentSize.height, contentSize.width);, +            }, +        }, +        else {, +            throw new RuntimeException("Unrecognised exception.");, +        }, +    }, +, +    /**, +     * Arranges the content for this title assuming a range constraint for the, +     * width and no bounds on the height, and returns the required size.  This , +     * will reflect the fact that a text title positioned on the left or right , +     * of a chart will be rotated by 90 degrees., +     * , +     * @param g2  the graphics target., +     * @param widthRange  the range for the width., +     *, +     * @return The content size.]