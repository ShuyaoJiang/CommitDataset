[+++ b/ChangeLog, +2009-04-20  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/data/general/DatasetUtilities.java, +    (iterateToFindRangeBounds): Handle BoxAndWhiskerCategoryDataset., +, +++ b/ChangeLog, +2009-04-20  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/data/general/DatasetUtilities.java, +    (iterateToFindRangeBounds): Handle BoxAndWhiskerCategoryDataset., +, +++ b/source/org/jfree/data/general/DatasetUtilities.java, +import org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;, +        if (includeInterval, +                && dataset instanceof BoxAndWhiskerCategoryDataset) {, +            // handle special case of BoxAndWhiskerDataset, +            BoxAndWhiskerCategoryDataset bx, +                    = (BoxAndWhiskerCategoryDataset) dataset;, +            Iterator iterator = visibleSeriesKeys.iterator();, +            while (iterator.hasNext()) {, +                Comparable seriesKey = (Comparable) iterator.next();, +                int series = dataset.getRowIndex(seriesKey);, +                int itemCount = dataset.getColumnCount();, +                for (int item = 0; item < itemCount; item++) {, +                    Number lvalue = bx.getMinRegularValue(series, item);, +                    Number uvalue = bx.getMaxRegularValue(series, item);, +                    if (lvalue != null) {, +                        minimum = Math.min(minimum, lvalue.doubleValue());, +                    }, +                    if (uvalue != null) {, +                        maximum = Math.max(maximum, uvalue.doubleValue());, +                    }, +                }, +            }, +        }, +        else if (includeInterval, +                && dataset instanceof IntervalCategoryDataset) {]