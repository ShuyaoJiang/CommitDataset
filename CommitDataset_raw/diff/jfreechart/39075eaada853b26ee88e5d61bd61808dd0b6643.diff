[+++ b/ChangeLog, +    * source/org/jfree/chart/ChartPanel.java, +    (panW): New field,, +    (panH): Likewise,, +    (panLast): Likewise,, +    (mousePressed): Check for start of panning,, +    (mouseDragged): Handle panning if it was started in mousePressed(),, +    (mouseReleased): Reset panning,, +    * source/org/jfree/chart/plot/CategoryPlot.java: Implemented Pannable,, +    (rangePannable): New field,, +    (isDomainPannable): New method,, +    (isRangePannable): Likewise,, +    (setRangePannable): Likewise,, +    (panDomainAxes): Likewise,, +    (panRangeAxes): Likewise,, +    * source/org/jfree/chart/plot/Pannable.java: New interface,, +    * source/org/jfree/chart/plot/XYPlot.java: Implemented Pannable,, +    (domainPannable): New field,, +    (rangePannable): Likewise,, +    (isDomainPannable): New method,, +    (setDomainPannable): Likewise,, +    (isRangePannable): Likewise,, +    (setRangePannable): Likewise,, +    (panDomainAxes): Likewise,, +    (panRangeAxes): Likewise., +, +2009-03-19  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +    * source/org/jfree/chart/ChartPanel.java, +    (panW): New field,, +    (panH): Likewise,, +    (panLast): Likewise,, +    (mousePressed): Check for start of panning,, +    (mouseDragged): Handle panning if it was started in mousePressed(),, +    (mouseReleased): Reset panning,, +    * source/org/jfree/chart/plot/CategoryPlot.java: Implemented Pannable,, +    (rangePannable): New field,, +    (isDomainPannable): New method,, +    (isRangePannable): Likewise,, +    (setRangePannable): Likewise,, +    (panDomainAxes): Likewise,, +    (panRangeAxes): Likewise,, +    * source/org/jfree/chart/plot/Pannable.java: New interface,, +    * source/org/jfree/chart/plot/XYPlot.java: Implemented Pannable,, +    (domainPannable): New field,, +    (rangePannable): Likewise,, +    (isDomainPannable): New method,, +    (setDomainPannable): Likewise,, +    (isRangePannable): Likewise,, +    (setRangePannable): Likewise,, +    (panDomainAxes): Likewise,, +    (panRangeAxes): Likewise., +, +2009-03-19  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/source/org/jfree/chart/ChartPanel.java, + *                   Ulrich Voigt - patch 2686040;, + * 19-Mar-2009 : Added panning on mouse drag support - based on Ulrich , + *               Voigt's patch 2686040 (DG);, +import java.awt.Cursor;, +import java.awt.event.InputEvent;, +import org.jfree.chart.plot.Pannable;, +     * Temporary storage for the width and height of the chart , +     * drawing area during panning., +     */, +    private double panW, panH;, +, +    /** The last mouse position during panning. */, +    private Point panLast;, +, +    /**, +        Plot plot = this.chart.getPlot();, +        int mods = e.getModifiers();, +        if ((mods & InputEvent.CTRL_MASK) == InputEvent.CTRL_MASK) {, +            // can we pan this plot?, +            if (plot instanceof Pannable) {, +                Rectangle2D screenDataArea = getScreenDataArea(e.getX(),, +                        e.getY());, +                if (screenDataArea != null && screenDataArea.contains(, +                        e.getPoint())) {, +                    this.panW = screenDataArea.getWidth();, +                    this.panH = screenDataArea.getHeight();, +                    this.panLast = e.getPoint();, +                    setCursor(Cursor.getPredefinedCursor(Cursor.MOVE_CURSOR));, +                }, +                // the actual panning occurs later in the mouseDragged() , +                // method, +            }, +        }, +        else if (this.zoomRectangle == null) {, +, +        // handle panning if we have a start point, +        if (this.panLast != null) {, +            double dx = e.getX() - this.panLast.getX();, +            double dy = e.getY() - this.panLast.getY();, +            if (dx == 0.0 && dy == 0.0) {, +                return;, +            }, +            double wPercent = dx / this.panW;]