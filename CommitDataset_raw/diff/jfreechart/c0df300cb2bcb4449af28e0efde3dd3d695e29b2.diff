[+++ b/ChangeLog, +2008-04-21  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/title/ImageTitle.java, +    (equals): New method override., +, +++ b/ChangeLog, +2008-04-21  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/title/ImageTitle.java, +    (equals): New method override., +, +++ b/source/org/jfree/chart/title/ImageTitle.java, + * 21-Apr-2008 : Added equals() method override (DG);, +import org.jfree.util.ObjectUtilities;, + * <P>, + * SPECIAL NOTE:  this class fails to serialize, so if you are, + * relying on your charts to be serializable, please avoid using this class., +    /**, +     * Tests this <code>ImageTitle</code> for equality with an arbitrary, +     * object.  Returns <code>true</code> if:, +     * <ul>, +     * <li><code>obj</code> is an instance of <code>ImageTitle</code>;, +     * <li><code>obj</code> references the same image as this, +     *     <code>ImageTitle</code>;, +     * <li><code>super.equals(obj)<code> returns <code>true</code>;, +     * </ul>, +     *, +     * @param obj  the object (<code>null</code> permitted)., +     *, +     * @return A boolean., +     */, +    public boolean equals(Object obj) {, +    	if (obj == this) {, +    		return true;, +    	}, +    	if (!(obj instanceof ImageTitle)) {, +    		return false;, +    	}, +    	ImageTitle that = (ImageTitle) obj;, +    	if (!ObjectUtilities.equal(this.image, that.image)) {, +    		return false;, +    	}, +    	return super.equals(obj);, +    }, +, +++ b/ChangeLog, +2008-04-21  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/title/ImageTitle.java, +    (equals): New method override., +, +++ b/source/org/jfree/chart/title/ImageTitle.java, + * 21-Apr-2008 : Added equals() method override (DG);, +import org.jfree.util.ObjectUtilities;, + * <P>, + * SPECIAL NOTE:  this class fails to serialize, so if you are, + * relying on your charts to be serializable, please avoid using this class., +    /**, +     * Tests this <code>ImageTitle</code> for equality with an arbitrary, +     * object.  Returns <code>true</code> if:, +     * <ul>, +     * <li><code>obj</code> is an instance of <code>ImageTitle</code>;, +     * <li><code>obj</code> references the same image as this, +     *     <code>ImageTitle</code>;, +     * <li><code>super.equals(obj)<code> returns <code>true</code>;, +     * </ul>, +     *, +     * @param obj  the object (<code>null</code> permitted)., +     *, +     * @return A boolean., +     */, +    public boolean equals(Object obj) {, +    	if (obj == this) {, +    		return true;, +    	}, +    	if (!(obj instanceof ImageTitle)) {, +    		return false;, +    	}, +    	ImageTitle that = (ImageTitle) obj;, +    	if (!ObjectUtilities.equal(this.image, that.image)) {, +    		return false;, +    	}, +    	return super.equals(obj);, +    }, +, +++ b/tests/org/jfree/chart/title/junit/ImageTitleTests.java, +, +        t1.setImage(new BufferedImage(2, 1, BufferedImage.TYPE_INT_RGB));, +        assertFalse(t1.equals(t2));, +        t2.setImage(new BufferedImage(2, 1, BufferedImage.TYPE_INT_RGB));, +        // images considered equal only if they're the SAME object, +        // TODO: is there a way to do a better test?, +        assertFalse(t1.equals(t2));]