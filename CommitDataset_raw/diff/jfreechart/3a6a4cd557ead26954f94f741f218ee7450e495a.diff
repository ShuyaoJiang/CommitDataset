[+++ b/ChangeLog, +2008-06-18  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/annotations/XYDrawableAnnotation.java, +    (drawScaleFactor): New field,, +    (width): Renamed displayWidth,, +    (height): Renamed displayHeight,, +    (XYDrawableAnnotation(double, double, double, double, double, Drawable)): , +    New constructor,, +    (draw): Apply scaling transform,, +    (equals): Check drawScaleFactor field,, +    (hashCode): Updated for renamed fields., +, +++ b/ChangeLog, +2008-06-18  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/annotations/XYDrawableAnnotation.java, +    (drawScaleFactor): New field,, +    (width): Renamed displayWidth,, +    (height): Renamed displayHeight,, +    (XYDrawableAnnotation(double, double, double, double, double, Drawable)): , +    New constructor,, +    (draw): Apply scaling transform,, +    (equals): Check drawScaleFactor field,, +    (hashCode): Updated for renamed fields., +, +++ b/source/org/jfree/chart/annotations/XYDrawableAnnotation.java, + * 18-Jun-2008 : Added scaling factor (DG);, +import java.awt.geom.AffineTransform;, +    /** The scaling factor. */, +    private double drawScaleFactor;, +, +    private double displayWidth;, +    private double displayHeight;, +        this(x, y, width, height, 1.0, drawable);, +    }, +, +    /**, +     * Creates a new annotation to be displayed within the given area.  If you, +     * specify a <code>drawScaleFactor</code> of 2.0, the <code>drawable</code>, +     * will be drawn at twice the requested display size then scaled down to, +     * fit the space., +     *, +     * @param x  the x-coordinate for the area., +     * @param y  the y-coordinate for the area., +     * @param displayWidth  the width of the area., +     * @param displayHeight  the height of the area., +     * @param drawScaleFactor  the scaling factor for drawing., +     * @param drawable  the drawable object (<code>null</code> not permitted)., +     *, +     * @since 1.0.11, +     */, +    public XYDrawableAnnotation(double x, double y, double displayWidth,, +    		double displayHeight, double drawScaleFactor, Drawable drawable) {, +        this.displayWidth = displayWidth;, +        this.displayHeight = displayHeight;, +        this.drawScaleFactor = drawScaleFactor;, +        Rectangle2D displayArea = new Rectangle2D.Double(, +        		j2DX - this.displayWidth / 2.0,, +                j2DY - this.displayHeight / 2.0, this.displayWidth,, +                this.displayHeight);, +, +        // here we change the AffineTransform so we can draw the annotation, +        // to a larger area and scale it down into the display area, +        // afterwards, the original transform is restored, +        AffineTransform savedTransform = g2.getTransform();, +        Rectangle2D drawArea = new Rectangle2D.Double(0.0, 0.0,, +        		this.displayWidth * this.drawScaleFactor,, +        		this.displayHeight * this.drawScaleFactor);, +, +        g2.scale(1/this.drawScaleFactor, 1/this.drawScaleFactor);, +        g2.translate((j2DX - this.displayWidth / 2.0) * this.drawScaleFactor,, +        		(j2DY - this.displayHeight / 2.0) * this.drawScaleFactor);, +        this.drawable.draw(g2, drawArea);, +        g2.setTransform(savedTransform);, +            addEntity(info, displayArea, rendererIndex, toolTip, url);, +        if (this.displayWidth != that.displayWidth) {, +        if (this.displayHeight != that.displayHeight) {, +            return false;, +        }, +        if (this.drawScaleFactor != that.drawScaleFactor) {, +        temp = Double.doubleToLongBits(this.displayWidth);, +        temp = Double.doubleToLongBits(this.displayHeight);, +++ b/ChangeLog, +2008-06-18  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/annotations/XYDrawableAnnotation.java, +    (drawScaleFactor): New field,, +    (width): Renamed displayWidth,, +    (height): Renamed displayHeight,, +    (XYDrawableAnnotation(double, double, double, double, double, Drawable)): , +    New constructor,, +    (draw): Apply scaling transform,, +    (equals): Check drawScaleFactor field,, +    (hashCode): Updated for renamed fields., +, +++ b/source/org/jfree/chart/annotations/XYDrawableAnnotation.java, + * 18-Jun-2008 : Added scaling factor (DG);, +import java.awt.geom.AffineTransform;, +    /** The scaling factor. */]