[+++ b/src/main/java/rx/internal/operators/OperatorTake.java, +            int count;, +            boolean completed;, +                    completed = true;, +                    completed = true;, +                    try {, +                    } finally {, +                        unsubscribe();, +                    }, +                    boolean stop = ++count >= limit;, +                    if (stop && !completed) {, +                        completed = true;, +                        try {, +                        } finally {, +            }, +++ b/src/main/java/rx/internal/operators/OperatorTake.java, +            int count;, +            boolean completed;, +                    completed = true;, +                    completed = true;, +                    try {, +                    } finally {, +                        unsubscribe();, +                    }, +                    boolean stop = ++count >= limit;, +                    if (stop && !completed) {, +                        completed = true;, +                        try {, +                        } finally {, +            }, +++ b/src/main/java/rx/internal/util/SynchronizedQueue.java, +    public synchronized boolean equals(Object o) {, +        return list.equals(o);, +    public synchronized int hashCode() {, +        return list.hashCode();, +++ b/src/main/java/rx/internal/operators/OperatorTake.java, +            int count;, +            boolean completed;, +                    completed = true;, +                    completed = true;, +                    try {, +                    } finally {, +                        unsubscribe();, +                    }, +                    boolean stop = ++count >= limit;, +                    if (stop && !completed) {, +                        completed = true;, +                        try {, +                        } finally {, +            }, +++ b/src/main/java/rx/internal/util/SynchronizedQueue.java, +    public synchronized boolean equals(Object o) {, +        return list.equals(o);, +    public synchronized int hashCode() {, +        return list.hashCode();, +++ b/src/test/java/rx/internal/operators/OperatorTakeTest.java, +import static org.mockito.Matchers.*;, +import static org.mockito.Mockito.*;, +import java.util.concurrent.*;, +import java.util.concurrent.atomic.*;, +import rx.*;, +import rx.exceptions.TestException;, +import rx.functions.*;, +import rx.observers.*;, +    , +    @Test, +    public void takeFinalValueThrows() {, +        Observable<Integer> source = Observable.just(1).take(1);, +        , +        TestSubscriber<Integer> ts = new TestSubscriber<Integer>() {, +            @Override, +            public void onNext(Integer t) {, +                throw new TestException();, +            }, +        };, +        , +        source.subscribe(ts);, +        , +        ts.assertNoValues();, +        ts.assertError(TestException.class);, +        ts.assertNotCompleted();, +    }, +++ b/src/main/java/rx/internal/operators/OperatorTake.java, +            int count;, +            boolean completed;, +                    completed = true;, +                    completed = true;, +                    try {, +                    } finally {, +                        unsubscribe();, +                    }, +                    boolean stop = ++count >= limit;, +                    if (stop && !completed) {, +                        completed = true;, +                        try {, +                        } finally {, +            }, +++ b/src/main/java/rx/internal/util/SynchronizedQueue.java, +    public synchronized boolean equals(Object o) {, +        return list.equals(o);]