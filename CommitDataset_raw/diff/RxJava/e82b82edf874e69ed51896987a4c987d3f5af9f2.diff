[+++ b/src/main/java/io/reactivex/Emitter.java, + * <p>, + * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, + * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, + * never concurrently. Calling them from multiple threads is not supported and leads to an, + * undefined behavior., +++ b/src/main/java/io/reactivex/Emitter.java, + * <p>, + * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, + * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, + * never concurrently. Calling them from multiple threads is not supported and leads to an, + * undefined behavior., +++ b/src/main/java/io/reactivex/Flowable.java, +     * <p>, +     * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, +     * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, +     * never concurrently and only while the function body is executing. Calling them from multiple threads, +     * or outside the function call is not supported and leads to an undefined behavior., +     * <p>, +     * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, +     * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, +     * never concurrently and only while the function body is executing. Calling them from multiple threads, +     * or outside the function call is not supported and leads to an undefined behavior., +     * <p>, +     * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, +     * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, +     * never concurrently and only while the function body is executing. Calling them from multiple threads, +     * or outside the function call is not supported and leads to an undefined behavior., +     * <p>, +     * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, +     * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, +     * never concurrently and only while the function body is executing. Calling them from multiple threads, +     * or outside the function call is not supported and leads to an undefined behavior., +     * <p>, +     * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, +     * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, +     * never concurrently and only while the function body is executing. Calling them from multiple threads, +     * or outside the function call is not supported and leads to an undefined behavior., +++ b/src/main/java/io/reactivex/Emitter.java, + * <p>, + * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, + * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, + * never concurrently. Calling them from multiple threads is not supported and leads to an, + * undefined behavior., +++ b/src/main/java/io/reactivex/Flowable.java, +     * <p>, +     * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, +     * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, +     * never concurrently and only while the function body is executing. Calling them from multiple threads, +     * or outside the function call is not supported and leads to an undefined behavior., +     * <p>, +     * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, +     * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, +     * never concurrently and only while the function body is executing. Calling them from multiple threads, +     * or outside the function call is not supported and leads to an undefined behavior., +     * <p>, +     * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, +     * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, +     * never concurrently and only while the function body is executing. Calling them from multiple threads, +     * or outside the function call is not supported and leads to an undefined behavior., +     * <p>, +     * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, +     * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, +     * never concurrently and only while the function body is executing. Calling them from multiple threads, +     * or outside the function call is not supported and leads to an undefined behavior., +     * <p>, +     * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, +     * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, +     * never concurrently and only while the function body is executing. Calling them from multiple threads, +     * or outside the function call is not supported and leads to an undefined behavior., +++ b/src/main/java/io/reactivex/Observable.java, +     * <p>, +     * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, +     * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, +     * never concurrently and only while the function body is executing. Calling them from multiple threads, +     * or outside the function call is not supported and leads to an undefined behavior., +     * <p>, +     * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, +     * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, +     * never concurrently and only while the function body is executing. Calling them from multiple threads, +     * or outside the function call is not supported and leads to an undefined behavior., +     * <p>, +     * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, +     * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, +     * never concurrently and only while the function body is executing. Calling them from multiple threads, +     * or outside the function call is not supported and leads to an undefined behavior., +     * <p>, +     * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, +     * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, +     * never concurrently and only while the function body is executing. Calling them from multiple threads, +     * or outside the function call is not supported and leads to an undefined behavior., +     * <p>, +     * Note that the {@link Emitter#onNext}, {@link Emitter#onError} and, +     * {@link Emitter#onComplete} methods provided to the function via the {@link Emitter} instance should be called synchronously,, +     * never concurrently and only while the function body is executing. Calling them from multiple threads, +     * or outside the function call is not supported and leads to an undefined behavior.]