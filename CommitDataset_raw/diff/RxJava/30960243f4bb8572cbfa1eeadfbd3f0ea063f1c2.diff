[+++ b/src/main/java/io/reactivex/CompletableOnSubscribe.java, +     * @param emitter the safe emitter instance, never null, +    void subscribe(@NonNull CompletableEmitter emitter) throws Exception;, +++ b/src/main/java/io/reactivex/CompletableOnSubscribe.java, +     * @param emitter the safe emitter instance, never null, +    void subscribe(@NonNull CompletableEmitter emitter) throws Exception;, +++ b/src/main/java/io/reactivex/FlowableOnSubscribe.java, +     * @param emitter the safe emitter instance, never null, +    void subscribe(@NonNull FlowableEmitter<T> emitter) throws Exception;, +++ b/src/main/java/io/reactivex/CompletableOnSubscribe.java, +     * @param emitter the safe emitter instance, never null, +    void subscribe(@NonNull CompletableEmitter emitter) throws Exception;, +++ b/src/main/java/io/reactivex/FlowableOnSubscribe.java, +     * @param emitter the safe emitter instance, never null, +    void subscribe(@NonNull FlowableEmitter<T> emitter) throws Exception;, +++ b/src/main/java/io/reactivex/MaybeOnSubscribe.java, +     * @param emitter the safe emitter instance, never null, +    void subscribe(@NonNull MaybeEmitter<T> emitter) throws Exception;, +++ b/src/main/java/io/reactivex/CompletableOnSubscribe.java, +     * @param emitter the safe emitter instance, never null, +    void subscribe(@NonNull CompletableEmitter emitter) throws Exception;, +++ b/src/main/java/io/reactivex/FlowableOnSubscribe.java, +     * @param emitter the safe emitter instance, never null, +    void subscribe(@NonNull FlowableEmitter<T> emitter) throws Exception;, +++ b/src/main/java/io/reactivex/MaybeOnSubscribe.java, +     * @param emitter the safe emitter instance, never null, +    void subscribe(@NonNull MaybeEmitter<T> emitter) throws Exception;, +++ b/src/main/java/io/reactivex/ObservableOnSubscribe.java, +     * @param emitter the safe emitter instance, never null, +    void subscribe(@NonNull ObservableEmitter<T> emitter) throws Exception;, +++ b/src/main/java/io/reactivex/CompletableOnSubscribe.java, +     * @param emitter the safe emitter instance, never null, +    void subscribe(@NonNull CompletableEmitter emitter) throws Exception;, +++ b/src/main/java/io/reactivex/FlowableOnSubscribe.java, +     * @param emitter the safe emitter instance, never null, +    void subscribe(@NonNull FlowableEmitter<T> emitter) throws Exception;, +++ b/src/main/java/io/reactivex/MaybeOnSubscribe.java, +     * @param emitter the safe emitter instance, never null, +    void subscribe(@NonNull MaybeEmitter<T> emitter) throws Exception;, +++ b/src/main/java/io/reactivex/ObservableOnSubscribe.java, +     * @param emitter the safe emitter instance, never null, +    void subscribe(@NonNull ObservableEmitter<T> emitter) throws Exception;, +++ b/src/main/java/io/reactivex/SingleOnSubscribe.java, +     * @param emitter the safe emitter instance, never null, +    void subscribe(@NonNull SingleEmitter<T> emitter) throws Exception;]