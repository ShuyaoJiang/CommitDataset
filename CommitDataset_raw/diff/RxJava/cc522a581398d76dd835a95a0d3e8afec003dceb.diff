[+++ b/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java, +            do {, +                long r = emitted.get();, +                long u = Math.min(r, n);, +                if (emitted.compareAndSet(r, r - u)) {, +                    request(u);, +                    break;, +                }, +            } while (true);, +++ b/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java, +            do {, +                long r = emitted.get();, +                long u = Math.min(r, n);, +                if (emitted.compareAndSet(r, r - u)) {, +                    request(u);, +                    break;, +                }, +            } while (true);, +++ b/src/test/java/rx/BackpressureTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +import java.util.concurrent.ConcurrentLinkedQueue;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.atomic.AtomicInteger;, +import java.util.concurrent.atomic.AtomicLong;, +import org.junit.Test;, +import rx.functions.Func1;, +import rx.functions.Func2;, +++ b/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java, +            do {, +                long r = emitted.get();, +                long u = Math.min(r, n);, +                if (emitted.compareAndSet(r, r - u)) {, +                    request(u);, +                    break;, +                }, +            } while (true);, +++ b/src/test/java/rx/BackpressureTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +import java.util.concurrent.ConcurrentLinkedQueue;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.atomic.AtomicInteger;, +import java.util.concurrent.atomic.AtomicLong;, +import org.junit.Test;, +import rx.functions.Func1;, +import rx.functions.Func2;, +++ b/src/test/java/rx/internal/operators/OnSubscribeCombineLatestTest.java, +    public void testBackpressureLoop() {, +        for (int i = 0; i < 5000; i++) {, +            testBackpressure();, +        }, +    }, +    , +    @Test, +++ b/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java, +            do {, +                long r = emitted.get();, +                long u = Math.min(r, n);, +                if (emitted.compareAndSet(r, r - u)) {, +                    request(u);, +                    break;, +                }, +            } while (true);, +++ b/src/test/java/rx/BackpressureTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +import java.util.concurrent.ConcurrentLinkedQueue;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.atomic.AtomicInteger;, +import java.util.concurrent.atomic.AtomicLong;, +import org.junit.Test;, +import rx.functions.Func1;, +import rx.functions.Func2;, +++ b/src/test/java/rx/internal/operators/OnSubscribeCombineLatestTest.java, +    public void testBackpressureLoop() {, +        for (int i = 0; i < 5000; i++) {, +            testBackpressure();, +        }, +    }, +    , +    @Test, +++ /dev/null, +++ b/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java, +            do {, +                long r = emitted.get();, +                long u = Math.min(r, n);, +                if (emitted.compareAndSet(r, r - u)) {, +                    request(u);, +                    break;, +                }, +            } while (true);, +++ b/src/test/java/rx/BackpressureTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +import java.util.concurrent.ConcurrentLinkedQueue;]