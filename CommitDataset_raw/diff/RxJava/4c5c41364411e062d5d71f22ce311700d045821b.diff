[+++ b/language-adaptors/rxjava-jruby/README.md, +This adaptor allows `org.jruby.RubyProc` lambda functions to be used and RxJava will know how to invoke them., +, +and for JBundler:, +, +```ruby, +jar 'com.netflix.rxjava:rxjava-ruby', 'x.y.z', +```, +++ b/language-adaptors/rxjava-jruby/README.md, +This adaptor allows `org.jruby.RubyProc` lambda functions to be used and RxJava will know how to invoke them., +, +and for JBundler:, +, +```ruby, +jar 'com.netflix.rxjava:rxjava-ruby', 'x.y.z', +```, +++ b/language-adaptors/rxjava-scala/README.md, +, +and for sbt:, +, +```scala, +libraryDependencies ++= Seq(, +  "com.netflix.rxjava" % "rxjava-scala" % "x.y.z", +), +```, +++ b/language-adaptors/rxjava-jruby/README.md, +This adaptor allows `org.jruby.RubyProc` lambda functions to be used and RxJava will know how to invoke them., +, +and for JBundler:, +, +```ruby, +jar 'com.netflix.rxjava:rxjava-ruby', 'x.y.z', +```, +++ b/language-adaptors/rxjava-scala/README.md, +, +and for sbt:, +, +```scala, +libraryDependencies ++= Seq(, +  "com.netflix.rxjava" % "rxjava-scala" % "x.y.z", +), +```, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.util.Range;, +     * Generates an observable sequence of integral numbers within a specified range., +     *, +     * @param start The value of the first integer in the sequence, +     * @param count The number of sequential integers to generate., +     *, +     * @return An observable sequence that contains a range of sequential integral numbers., +     *, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229460(v=vs.103).aspx">Observable.Range Method (Int32, Int32)</a>, +     */, +    public static Observable<Integer> range(int start, int count) {, +        return from(Range.createWithCount(start, count));, +    }, +, +    /**, +++ b/language-adaptors/rxjava-jruby/README.md, +This adaptor allows `org.jruby.RubyProc` lambda functions to be used and RxJava will know how to invoke them., +, +and for JBundler:, +, +```ruby, +jar 'com.netflix.rxjava:rxjava-ruby', 'x.y.z', +```, +++ b/language-adaptors/rxjava-scala/README.md, +, +and for sbt:, +, +```scala, +libraryDependencies ++= Seq(, +  "com.netflix.rxjava" % "rxjava-scala" % "x.y.z", +), +```, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.util.Range;, +     * Generates an observable sequence of integral numbers within a specified range., +     *, +     * @param start The value of the first integer in the sequence, +     * @param count The number of sequential integers to generate., +     *, +     * @return An observable sequence that contains a range of sequential integral numbers., +     *, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229460(v=vs.103).aspx">Observable.Range Method (Int32, Int32)</a>, +     */, +    public static Observable<Integer> range(int start, int count) {, +        return from(Range.createWithCount(start, count));, +    }, +, +    /**, +++ b/rxjava-core/src/main/java/rx/operators/OperationTakeLast.java, +/**, + * Copyright 2013 Netflix, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0]