[+++ b/build.gradle, +ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name, +apply from: file('gradle/release.gradle'), +++ b/build.gradle, +ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name, +apply from: file('gradle/release.gradle'), +++ b/gradle.properties, +version=1.4-SNAPSHOT, +++ b/build.gradle, +ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name, +apply from: file('gradle/release.gradle'), +++ b/gradle.properties, +version=1.4-SNAPSHOT, +++ b/gradle/buildscript.gradle, +repositories {, +    ivy {, +        name = 'gradle_release', +        artifactPattern 'http://launchpad.net/[organization]/trunk/[revision]/+download/[artifact]-[revision].jar', +    }, +}, +    classpath 'gradle-release:gradle-release:1.0pre', +++ b/build.gradle, +ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name, +apply from: file('gradle/release.gradle'), +++ b/gradle.properties, +version=1.4-SNAPSHOT, +++ b/gradle/buildscript.gradle, +repositories {, +    ivy {, +        name = 'gradle_release', +        artifactPattern 'http://launchpad.net/[organization]/trunk/[revision]/+download/[artifact]-[revision].jar', +    }, +}, +    classpath 'gradle-release:gradle-release:1.0pre', +++ b/gradle/convention.gradle, +// For Artifactory, +rootProject.status = version.contains('-SNAPSHOT')?'snapshot':'release', +subprojects { project ->, +    status = version.contains('-SNAPSHOT')?'snapshot':'release', +++ b/build.gradle, +ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name, +apply from: file('gradle/release.gradle'), +++ b/gradle.properties, +version=1.4-SNAPSHOT, +++ b/gradle/buildscript.gradle, +repositories {, +    ivy {, +        name = 'gradle_release', +        artifactPattern 'http://launchpad.net/[organization]/trunk/[revision]/+download/[artifact]-[revision].jar', +    }, +}, +    classpath 'gradle-release:gradle-release:1.0pre', +++ b/gradle/convention.gradle, +// For Artifactory, +rootProject.status = version.contains('-SNAPSHOT')?'snapshot':'release', +subprojects { project ->, +    status = version.contains('-SNAPSHOT')?'snapshot':'release', +++ b/gradle/maven.gradle, +        required { gradle.taskGraph.hasTask(uploadMavenCentral) }, +    task uploadMavenCentral(type:Upload, dependsOn: signArchives) {, +++ b/build.gradle, +ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name, +apply from: file('gradle/release.gradle'), +++ b/gradle.properties, +version=1.4-SNAPSHOT, +++ b/gradle/buildscript.gradle, +repositories {, +    ivy {, +        name = 'gradle_release', +        artifactPattern 'http://launchpad.net/[organization]/trunk/[revision]/+download/[artifact]-[revision].jar', +    }, +}, +    classpath 'gradle-release:gradle-release:1.0pre', +++ b/gradle/convention.gradle, +// For Artifactory, +rootProject.status = version.contains('-SNAPSHOT')?'snapshot':'release', +subprojects { project ->, +    status = version.contains('-SNAPSHOT')?'snapshot':'release', +++ b/gradle/maven.gradle, +        required { gradle.taskGraph.hasTask(uploadMavenCentral) }, +    task uploadMavenCentral(type:Upload, dependsOn: signArchives) {, +++ b/gradle/release.gradle, +, +apply plugin: 'release', +, +// Ignore release plugin's task because it calls out via GradleBuild. This is a good place to put an email to send out, +task release(overwrite: true, dependsOn: commitNewVersion) << {, +    // This is a good place to put an email to send out, +}, +commitNewVersion.dependsOn updateVersion, +updateVersion.dependsOn createReleaseTag, +createReleaseTag.dependsOn preTagCommit, +def buildTasks = tasks.matching { it.name =~ /:build/ }, +preTagCommit.dependsOn buildTasks, +preTagCommit.dependsOn checkSnapshotDependencies, +//checkSnapshotDependencies.dependsOn confirmReleaseVersion // Introduced in 1.0, forces readLine, +//confirmReleaseVersion.dependsOn unSnapshotVersion, +checkSnapshotDependencies.dependsOn unSnapshotVersion // Remove once above is fixed, +unSnapshotVersion.dependsOn checkUpdateNeeded, +checkUpdateNeeded.dependsOn checkCommitNeeded]