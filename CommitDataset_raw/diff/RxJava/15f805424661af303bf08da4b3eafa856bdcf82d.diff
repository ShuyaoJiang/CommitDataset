[+++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBuffer.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBuffer.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +                    return combiner.apply(new Object[] { t });, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBuffer.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +                    return combiner.apply(new Object[] { t });, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMap.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBuffer.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +                    return combiner.apply(new Object[] { t });, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMap.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlattenIterable.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBuffer.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +                    return combiner.apply(new Object[] { t });, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMap.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlattenIterable.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableObserveOn.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBuffer.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +                    return combiner.apply(new Object[] { t });, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMap.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlattenIterable.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableObserveOn.java, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeZipArray.java, +                    return zipper.apply(new Object[] { t });, +                    v = ObjectHelper.requireNonNull(zipper.apply(values), "The zipper returned a null value");, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBuffer.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +                    return combiner.apply(new Object[] { t });, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMap.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlattenIterable.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableObserveOn.java, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeZipArray.java, +                    return zipper.apply(new Object[] { t });, +                    v = ObjectHelper.requireNonNull(zipper.apply(values), "The zipper returned a null value");, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeZipIterable.java, +                    return zipper.apply(new Object[] { t });, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBuffer.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +                    return combiner.apply(new Object[] { t });, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMap.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlattenIterable.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableObserveOn.java, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeZipArray.java, +                    return zipper.apply(new Object[] { t });, +                    v = ObjectHelper.requireNonNull(zipper.apply(values), "The zipper returned a null value");, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeZipIterable.java, +                    return zipper.apply(new Object[] { t });, +++ b/src/test/java/io/reactivex/flowable/FlowableTests.java, +        @SuppressWarnings("unchecked"), +        @SuppressWarnings("unchecked"), +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBuffer.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +                    return combiner.apply(new Object[] { t });, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMap.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlattenIterable.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableObserveOn.java, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeZipArray.java, +                    return zipper.apply(new Object[] { t });, +                    v = ObjectHelper.requireNonNull(zipper.apply(values), "The zipper returned a null value");, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeZipIterable.java, +                    return zipper.apply(new Object[] { t });, +++ b/src/test/java/io/reactivex/flowable/FlowableTests.java, +        @SuppressWarnings("unchecked"), +        @SuppressWarnings("unchecked"), +++ b/src/test/java/io/reactivex/maybe/MaybeTest.java, +        @SuppressWarnings("unchecked"), +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBuffer.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +                    return combiner.apply(new Object[] { t });, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMap.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlattenIterable.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableObserveOn.java, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeZipArray.java, +                    return zipper.apply(new Object[] { t });, +                    v = ObjectHelper.requireNonNull(zipper.apply(values), "The zipper returned a null value");, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeZipIterable.java, +                    return zipper.apply(new Object[] { t });, +++ b/src/test/java/io/reactivex/flowable/FlowableTests.java, +        @SuppressWarnings("unchecked"), +        @SuppressWarnings("unchecked"), +++ b/src/test/java/io/reactivex/maybe/MaybeTest.java, +        @SuppressWarnings("unchecked"), +++ b/src/test/java/io/reactivex/observable/ObservableTest.java, +        @SuppressWarnings("unchecked"), +        @SuppressWarnings("unchecked"), +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBuffer.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +                    return combiner.apply(new Object[] { t });, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMap.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlattenIterable.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableObserveOn.java, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeZipArray.java, +                    return zipper.apply(new Object[] { t });, +                    v = ObjectHelper.requireNonNull(zipper.apply(values), "The zipper returned a null value");, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeZipIterable.java, +                    return zipper.apply(new Object[] { t });, +++ b/src/test/java/io/reactivex/flowable/FlowableTests.java]