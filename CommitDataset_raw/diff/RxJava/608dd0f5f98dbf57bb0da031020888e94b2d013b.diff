[+++ b/src/main/java/rx/internal/operators/OnSubscribeRange.java, +                long _c = BackpressureUtils.getAndAddRequest(REQUESTED_UPDATER,this, n);, +++ b/src/main/java/rx/internal/operators/OnSubscribeRange.java, +                long _c = BackpressureUtils.getAndAddRequest(REQUESTED_UPDATER,this, n);, +++ b/src/test/java/rx/internal/operators/OnSubscribeRangeTest.java, +import rx.Subscriber;, +    , +    @Test, +    public void testRequestOverflow() {, +        final AtomicInteger count = new AtomicInteger();, +        int n = 10;, +        Observable.range(1, n).subscribe(new Subscriber<Integer>() {, +, +            @Override, +            public void onStart() {, +                request(2);, +            }, +            , +            @Override, +            public void onCompleted() {, +                //do nothing, +            }, +, +            @Override, +            public void onError(Throwable e) {, +                throw new RuntimeException(e);, +            }, +, +            @Override, +            public void onNext(Integer t) {, +                count.incrementAndGet();, +                request(Long.MAX_VALUE - 1);, +            }});, +        assertEquals(n, count.get());, +    }]