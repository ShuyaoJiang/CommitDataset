[+++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableWithLatestFrom.java, +            } else{, +                request(1);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableWithLatestFrom.java, +            } else{, +                request(1);, +++ b/src/test/java/io/reactivex/internal/operators/flowable/FlowableWithLatestFromTest.java, +        PublishProcessor<Integer> source = PublishProcessor.create();, +        source.onNext(1);, +, +        source.onNext(2);, +        source.onNext(3);, +        source.onNext(4);, +        source.onNext(5);, +        source.onNext(6);, +        source.onNext(7);, +, +    @Test, +    public void testSingleRequestNotForgottenWhenNoData() {, +        PublishProcessor<Integer> source = PublishProcessor.create();, +        PublishProcessor<Integer> other = PublishProcessor.create();, +, +        Flowable<Integer> result = source.withLatestFrom(other, COMBINER);, +, +        TestSubscriber<Integer> ts = new TestSubscriber<Integer>(0L);, +, +        result.subscribe(ts);, +, +        ts.request(1);, +, +        source.onNext(1);, +, +        ts.assertNoValues();, +, +        other.onNext(1);, +, +        ts.assertNoValues();, +, +        source.onNext(2);, +, +        ts.assertValue((2 << 8) + 1);, +    }]