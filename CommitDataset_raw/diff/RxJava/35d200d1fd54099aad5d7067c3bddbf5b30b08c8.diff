[+++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Notification.scala, +, +  /**, +   * Invokes the function corresponding to the notification., +   *, +   * @param onNext, +   *               The function to invoke for an [[rx.lang.scala.Notification.OnNext]] notification., +   * @param onError, +   *               The function to invoke for an [[rx.lang.scala.Notification.OnError]] notification., +   * @param onCompleted, +   *               The function to invoke for an [[rx.lang.scala.Notification.OnCompleted]] notification., +   */, +  def accept[R](onNext: T=>R, onError: Throwable=>R, onCompleted: ()=>R): R = {, +    this match {, +      case Notification.OnNext(value)  => onNext(value), +      case Notification.OnError(error) => onError(error), +      case Notification.OnCompleted()  => onCompleted(), +    }, +  }, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Notification.scala, +, +  /**, +   * Invokes the function corresponding to the notification., +   *, +   * @param onNext, +   *               The function to invoke for an [[rx.lang.scala.Notification.OnNext]] notification., +   * @param onError, +   *               The function to invoke for an [[rx.lang.scala.Notification.OnError]] notification., +   * @param onCompleted, +   *               The function to invoke for an [[rx.lang.scala.Notification.OnCompleted]] notification., +   */, +  def accept[R](onNext: T=>R, onError: Throwable=>R, onCompleted: ()=>R): R = {, +    this match {, +      case Notification.OnNext(value)  => onNext(value), +      case Notification.OnError(error) => onError(error), +      case Notification.OnCompleted()  => onCompleted(), +    }, +  }, +++ b/language-adaptors/rxjava-scala/src/test/scala/rx/lang/scala/NotificationTests.scala, +package rx.lang.scala, +, +, +import org.junit.{Assert, Test}, +import org.junit.Assert, +import org.scalatest.junit.JUnitSuite, +import scala.concurrent.duration._, +import scala.language.postfixOps, +import org.mockito.Mockito._, +import org.mockito.Matchers._, +import rx.lang.scala.Notification.{OnError, OnNext}, +, +, +class NotificationTests extends JUnitSuite {, +  @Test, +  def creation() {, +, +    val onNext = OnNext(42), +    Assert.assertEquals(42, onNext match { case OnNext(value) => value }), +  }, +}, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Notification.scala, +, +  /**, +   * Invokes the function corresponding to the notification., +   *, +   * @param onNext, +   *               The function to invoke for an [[rx.lang.scala.Notification.OnNext]] notification., +   * @param onError, +   *               The function to invoke for an [[rx.lang.scala.Notification.OnError]] notification., +   * @param onCompleted, +   *               The function to invoke for an [[rx.lang.scala.Notification.OnCompleted]] notification., +   */, +  def accept[R](onNext: T=>R, onError: Throwable=>R, onCompleted: ()=>R): R = {, +    this match {, +      case Notification.OnNext(value)  => onNext(value), +      case Notification.OnError(error) => onError(error), +      case Notification.OnCompleted()  => onCompleted(), +    }, +  }, +++ b/language-adaptors/rxjava-scala/src/test/scala/rx/lang/scala/NotificationTests.scala, +package rx.lang.scala, +, +, +import org.junit.{Assert, Test}, +import org.junit.Assert, +import org.scalatest.junit.JUnitSuite, +import scala.concurrent.duration._, +import scala.language.postfixOps, +import org.mockito.Mockito._, +import org.mockito.Matchers._, +import rx.lang.scala.Notification.{OnError, OnNext}, +, +, +class NotificationTests extends JUnitSuite {, +  @Test, +  def creation() {, +, +    val onNext = OnNext(42), +    Assert.assertEquals(42, onNext match { case OnNext(value) => value }), +  }]