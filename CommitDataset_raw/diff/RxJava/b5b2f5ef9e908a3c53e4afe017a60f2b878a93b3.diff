[+++ b/build.gradle, +buildscript {, +    repositories { mavenCentral() }, +}, +, +allprojects {, +    repositories { mavenCentral() }, +}, +, +//apply from: file('gradle/release.gradle') // Not fully tested, +//apply from: file('gradle/license.gradle') // Waiting for re-release, +    // Closure to configure all the POM with extra info, common to all projects, +    pom {, +        project {, +        url "https://github.com/Netflix/${rootProject.githubProjectName}", +        scm {, +            connection "scm:git:git@github.com:Netflix/${rootProject.githubProjectName}.git", +            url "scm:git:git@github.com:Netflix/${rootProject.githubProjectName}.git", +            developerConnection "scm:git:git@github.com:Netflix/${rootProject.githubProjectName}.git", +        issueManagement {, +            system 'github', +            url 'https://github.com/Netflix/${rootProject.githubProjectName}/issues', +        }, +        }, +    }, +, +    group = 'com.netflix.osstemplate' // TEMPLATE: Set to organization of project, +++ b/build.gradle, +buildscript {, +    repositories { mavenCentral() }, +}, +, +allprojects {, +    repositories { mavenCentral() }, +}, +, +//apply from: file('gradle/release.gradle') // Not fully tested, +//apply from: file('gradle/license.gradle') // Waiting for re-release, +    // Closure to configure all the POM with extra info, common to all projects, +    pom {, +        project {, +        url "https://github.com/Netflix/${rootProject.githubProjectName}", +        scm {, +            connection "scm:git:git@github.com:Netflix/${rootProject.githubProjectName}.git", +            url "scm:git:git@github.com:Netflix/${rootProject.githubProjectName}.git", +            developerConnection "scm:git:git@github.com:Netflix/${rootProject.githubProjectName}.git", +        issueManagement {, +            system 'github', +            url 'https://github.com/Netflix/${rootProject.githubProjectName}/issues', +        }, +        }, +    }, +, +    group = 'com.netflix.osstemplate' // TEMPLATE: Set to organization of project, +++ b/gradle/convention.gradle, +++ b/build.gradle, +buildscript {, +    repositories { mavenCentral() }, +}, +, +allprojects {, +    repositories { mavenCentral() }, +}, +, +//apply from: file('gradle/release.gradle') // Not fully tested, +//apply from: file('gradle/license.gradle') // Waiting for re-release, +    // Closure to configure all the POM with extra info, common to all projects, +    pom {, +        project {, +        url "https://github.com/Netflix/${rootProject.githubProjectName}", +        scm {, +            connection "scm:git:git@github.com:Netflix/${rootProject.githubProjectName}.git", +            url "scm:git:git@github.com:Netflix/${rootProject.githubProjectName}.git", +            developerConnection "scm:git:git@github.com:Netflix/${rootProject.githubProjectName}.git", +        issueManagement {, +            system 'github', +            url 'https://github.com/Netflix/${rootProject.githubProjectName}/issues', +        }, +        }, +    }, +, +    group = 'com.netflix.osstemplate' // TEMPLATE: Set to organization of project, +++ b/gradle/convention.gradle, +++ b/gradle/license.gradle, +    dependencies { classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.5' }, +apply plugin: nl.javadude.gradle.plugins.license.LicensePlugin, +++ b/build.gradle, +buildscript {, +    repositories { mavenCentral() }, +}, +, +allprojects {, +    repositories { mavenCentral() }, +}, +, +//apply from: file('gradle/release.gradle') // Not fully tested, +//apply from: file('gradle/license.gradle') // Waiting for re-release, +    // Closure to configure all the POM with extra info, common to all projects, +    pom {, +        project {]