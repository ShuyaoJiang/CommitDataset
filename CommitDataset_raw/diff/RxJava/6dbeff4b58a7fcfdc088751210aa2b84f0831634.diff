[+++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableCollect.java, +import io.reactivex.plugins.RxJavaPlugins;, +        boolean done;, +        , +            if (done) {, +                return;, +            }, +                onError(e);, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +            done = true;, +            if (done) {, +                return;, +            }, +            done = true;, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableCollect.java, +import io.reactivex.plugins.RxJavaPlugins;, +        boolean done;, +        , +            if (done) {, +                return;, +            }, +                onError(e);, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +            done = true;, +            if (done) {, +                return;, +            }, +            done = true;, +++ b/src/test/java/io/reactivex/flowable/FlowableCollectTest.java, +import static io.reactivex.internal.util.TestingHelper.addToList;, +import static io.reactivex.internal.util.TestingHelper.biConsumerThrows;, +import static io.reactivex.internal.util.TestingHelper.callableListCreator;, +public final class FlowableCollectTest {, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableCollect.java, +import io.reactivex.plugins.RxJavaPlugins;, +        boolean done;, +        , +            if (done) {, +                return;, +            }, +                onError(e);, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +            done = true;, +            if (done) {, +                return;, +            }, +            done = true;, +++ b/src/test/java/io/reactivex/flowable/FlowableCollectTest.java, +import static io.reactivex.internal.util.TestingHelper.addToList;, +import static io.reactivex.internal.util.TestingHelper.biConsumerThrows;, +import static io.reactivex.internal.util.TestingHelper.callableListCreator;, +public final class FlowableCollectTest {, +++ b/src/test/java/io/reactivex/internal/operators/observable/Burst.java, +/**, + * Copyright 2016 Netflix, Inc., + * , + * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in, + * compliance with the License. You may obtain a copy of the License at, + * , + * http://www.apache.org/licenses/LICENSE-2.0, + * , + * Unless required by applicable law or agreed to in writing, software distributed under the License is, + * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See, + * the License for the specific language governing permissions and limitations under the License., + */, +package io.reactivex.internal.operators.observable;, +, +import java.util.Arrays;, +import java.util.List;, +, +import io.reactivex.Observable;, +import io.reactivex.Observer;, +import io.reactivex.disposables.Disposables;, +, +/**, + * Creates {@link Observable} of a number of items followed by either an error or, + * completion. Subscription status is not checked before emitting an event., + * , + * @param <T> the value type, + */, +public final class Burst<T> extends Observable<T> {, +, +    private final List<T> items;, +    private final Throwable error;, +, +    private Burst(Throwable error, List<T> items) {, +        this.error = error;, +        this.items = items;, +    }, +, +    @Override]