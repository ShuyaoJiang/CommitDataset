[+++ b/rxjava-core/src/main/java/rx/observables/BlockingObservable.java, +++ b/rxjava-core/src/main/java/rx/observables/BlockingObservable.java, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/observables/BlockingObservable.java, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/operators/OperationMergeDelayError.java, +            completeSubscription.add(sequences.subscribe(new ParentObserver(synchronizedObserver)));, +++ b/rxjava-core/src/main/java/rx/observables/BlockingObservable.java, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/operators/OperationMergeDelayError.java, +            completeSubscription.add(sequences.subscribe(new ParentObserver(synchronizedObserver)));, +++ b/rxjava-core/src/main/java/rx/operators/OperationMostRecent.java, +    public static <T> Iterable<T> mostRecent(final Observable<? extends T> source, T initialValue) {, +        return new Iterable<T>() {, +            @Override, +            public Iterator<T> iterator() {, +++ b/rxjava-core/src/main/java/rx/observables/BlockingObservable.java, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/operators/OperationMergeDelayError.java, +            completeSubscription.add(sequences.subscribe(new ParentObserver(synchronizedObserver)));, +++ b/rxjava-core/src/main/java/rx/operators/OperationMostRecent.java, +    public static <T> Iterable<T> mostRecent(final Observable<? extends T> source, T initialValue) {, +        return new Iterable<T>() {, +            @Override, +            public Iterator<T> iterator() {, +++ b/rxjava-core/src/main/java/rx/operators/OperationNext.java, +, +        return new Iterable<T>() {, +            @Override, +            public Iterator<T> iterator() {, +++ b/rxjava-core/src/main/java/rx/observables/BlockingObservable.java, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/operators/OperationMergeDelayError.java, +            completeSubscription.add(sequences.subscribe(new ParentObserver(synchronizedObserver)));, +++ b/rxjava-core/src/main/java/rx/operators/OperationMostRecent.java, +    public static <T> Iterable<T> mostRecent(final Observable<? extends T> source, T initialValue) {, +        return new Iterable<T>() {, +            @Override, +            public Iterator<T> iterator() {, +++ b/rxjava-core/src/main/java/rx/operators/OperationNext.java, +, +        return new Iterable<T>() {, +            @Override, +            public Iterator<T> iterator() {, +++ b/rxjava-core/src/main/java/rx/operators/OperationToIterator.java, +                if (buf == null) {, +                    buf = take();, +                }, +                if (buf.isOnError()) {, +                    throw Exceptions.propagate(buf.getThrowable());, +                }, +, +++ b/rxjava-core/src/main/java/rx/observables/BlockingObservable.java, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/operators/OperationMergeDelayError.java, +            completeSubscription.add(sequences.subscribe(new ParentObserver(synchronizedObserver)));, +++ b/rxjava-core/src/main/java/rx/operators/OperationMostRecent.java, +    public static <T> Iterable<T> mostRecent(final Observable<? extends T> source, T initialValue) {, +        return new Iterable<T>() {, +            @Override, +            public Iterator<T> iterator() {, +++ b/rxjava-core/src/main/java/rx/operators/OperationNext.java, +, +        return new Iterable<T>() {, +            @Override, +            public Iterator<T> iterator() {, +++ b/rxjava-core/src/main/java/rx/operators/OperationToIterator.java, +                if (buf == null) {, +                    buf = take();, +                }, +                if (buf.isOnError()) {, +                    throw Exceptions.propagate(buf.getThrowable());, +                }, +, +++ b/rxjava-core/src/main/java/rx/schedulers/NewThreadScheduler.java, +                    Thread t = new Thread(r, "RxNewThreadScheduler-" + count.incrementAndGet());, +                    t.setDaemon(true);, +                    return t;, +++ b/rxjava-core/src/main/java/rx/observables/BlockingObservable.java, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/operators/OperationMergeDelayError.java, +            completeSubscription.add(sequences.subscribe(new ParentObserver(synchronizedObserver)));, +++ b/rxjava-core/src/main/java/rx/operators/OperationMostRecent.java, +    public static <T> Iterable<T> mostRecent(final Observable<? extends T> source, T initialValue) {, +        return new Iterable<T>() {, +            @Override, +            public Iterator<T> iterator() {, +++ b/rxjava-core/src/main/java/rx/operators/OperationNext.java, +, +        return new Iterable<T>() {, +            @Override, +            public Iterator<T> iterator() {, +++ b/rxjava-core/src/main/java/rx/operators/OperationToIterator.java, +                if (buf == null) {, +                    buf = take();, +                }, +                if (buf.isOnError()) {, +                    throw Exceptions.propagate(buf.getThrowable());, +                }, +]