[+++ b/rxjava-core/src/main/java/rx/util/AtomicObservableSubscription.java, +import org.junit.Test;, +import rx.Subscription;, +, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.times;, +import static org.mockito.Mockito.verify;, +    private static final Subscription UNSUBSCRIBED = new Subscription(), +    {, +        @Override, +        public void unsubscribe(), +        {, +        }, +    };, +    private final AtomicReference<Subscription> actualSubscription = new AtomicReference<Subscription>();, +     * @param actualSubscription the wrapped subscription, +            if (this.actualSubscription.get() == UNSUBSCRIBED) {, +                actualSubscription.unsubscribe();, +                return this;, +            }, +        Subscription actual = actualSubscription.getAndSet(UNSUBSCRIBED);, +        return actualSubscription.get() == UNSUBSCRIBED;, +    }, +, +    public static class UnitTest {, +        @Test, +        public void testWrapAfterUnsubscribe() {, +            AtomicObservableSubscription atomicObservableSubscription = new AtomicObservableSubscription();, +            atomicObservableSubscription.unsubscribe();, +            Subscription innerSubscription = mock(Subscription.class);, +            atomicObservableSubscription.wrap(innerSubscription);, +            verify(innerSubscription, times(1)).unsubscribe();, +        }]