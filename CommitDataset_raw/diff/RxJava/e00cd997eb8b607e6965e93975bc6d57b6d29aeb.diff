[+++ b/gradle.properties, +version=0.8.2, +++ b/gradle.properties, +version=0.8.2, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/observables/SwingObservable.java, +import java.awt.Component;, +import java.awt.Dimension;, +import java.awt.event.ComponentEvent;, +import rx.swing.sources.ComponentEventSource;, +    public static Observable<KeyEvent> fromKeyEvents(Component component) {, +    public static Observable<KeyEvent> fromKeyEvents(Component component, final Set<Integer> keyCodes) {, +    public static Observable<Set<Integer>> fromPressedKeys(Component component) {, +    public static Observable<MouseEvent> fromMouseEvents(Component component) {, +    public static Observable<MouseEvent> fromMouseMotionEvents(Component component) {, +    , +    /**, +     * Creates an observable corresponding to raw component events., +     * , +     * @param component, +     *            The component to register the observable for., +     * @return Observable of component events., +     */, +    public static Observable<ComponentEvent> fromComponentEvents(Component component) {, +        return ComponentEventSource.fromComponentEventsOf(component);, +    }, +, +    /**, +     * Creates an observable corresponding to component resize events., +     * , +     * @param component, +     *            The component to register the observable for., +     * @return Observable emitting the current size of the given component after each resize event., +     */, +    public static Observable<Dimension> fromResizing(Component component) {, +        return ComponentEventSource.fromResizing(component);, +    }, +++ b/gradle.properties, +version=0.8.2, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/observables/SwingObservable.java, +import java.awt.Component;, +import java.awt.Dimension;, +import java.awt.event.ComponentEvent;, +import rx.swing.sources.ComponentEventSource;, +    public static Observable<KeyEvent> fromKeyEvents(Component component) {, +    public static Observable<KeyEvent> fromKeyEvents(Component component, final Set<Integer> keyCodes) {, +    public static Observable<Set<Integer>> fromPressedKeys(Component component) {, +    public static Observable<MouseEvent> fromMouseEvents(Component component) {, +    public static Observable<MouseEvent> fromMouseMotionEvents(Component component) {, +    , +    /**, +     * Creates an observable corresponding to raw component events., +     * , +     * @param component, +     *            The component to register the observable for., +     * @return Observable of component events., +     */, +    public static Observable<ComponentEvent> fromComponentEvents(Component component) {, +        return ComponentEventSource.fromComponentEventsOf(component);, +    }, +, +    /**, +     * Creates an observable corresponding to component resize events., +     * , +     * @param component, +     *            The component to register the observable for., +     * @return Observable emitting the current size of the given component after each resize event., +     */, +    public static Observable<Dimension> fromResizing(Component component) {, +        return ComponentEventSource.fromResizing(component);, +    }, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/AbstractButtonSource.java, +    /**, +     * @see SwingObservable.fromButtonAction, +     */, +++ b/gradle.properties, +version=0.8.2, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/observables/SwingObservable.java, +import java.awt.Component;, +import java.awt.Dimension;, +import java.awt.event.ComponentEvent;, +import rx.swing.sources.ComponentEventSource;, +    public static Observable<KeyEvent> fromKeyEvents(Component component) {, +    public static Observable<KeyEvent> fromKeyEvents(Component component, final Set<Integer> keyCodes) {, +    public static Observable<Set<Integer>> fromPressedKeys(Component component) {, +    public static Observable<MouseEvent> fromMouseEvents(Component component) {, +    public static Observable<MouseEvent> fromMouseMotionEvents(Component component) {, +    , +    /**, +     * Creates an observable corresponding to raw component events., +     * , +     * @param component, +     *            The component to register the observable for., +     * @return Observable of component events., +     */, +    public static Observable<ComponentEvent> fromComponentEvents(Component component) {, +        return ComponentEventSource.fromComponentEventsOf(component);, +    }, +, +    /**, +     * Creates an observable corresponding to component resize events.]