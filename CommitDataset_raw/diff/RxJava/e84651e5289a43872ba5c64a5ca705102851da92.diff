[+++ b/src/main/java/io/reactivex/disposables/RefCountDisposable.java, +import io.reactivex.internal.disposables.DisposableHelper;, +    static final Disposable DISPOSED = DisposableHelper.DISPOSED;, +                DisposableHelper.dispose(resource);, +            DisposableHelper.dispose(resource);, +++ b/src/main/java/io/reactivex/disposables/RefCountDisposable.java, +import io.reactivex.internal.disposables.DisposableHelper;, +    static final Disposable DISPOSED = DisposableHelper.DISPOSED;, +                DisposableHelper.dispose(resource);, +            DisposableHelper.dispose(resource);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAmb.java, +                if (get() != SubscriptionHelper.CANCELLED) {, +                if (s != null && s != SubscriptionHelper.CANCELLED) {, +            SubscriptionHelper.dispose(this);, +++ b/src/main/java/io/reactivex/disposables/RefCountDisposable.java, +import io.reactivex.internal.disposables.DisposableHelper;, +    static final Disposable DISPOSED = DisposableHelper.DISPOSED;, +                DisposableHelper.dispose(resource);, +            DisposableHelper.dispose(resource);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAmb.java, +                if (get() != SubscriptionHelper.CANCELLED) {, +                if (s != null && s != SubscriptionHelper.CANCELLED) {, +            SubscriptionHelper.dispose(this);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferTimed.java, +import io.reactivex.internal.disposables.DisposableHelper;, +            DisposableHelper.dispose(timer);, +            DisposableHelper.dispose(timer);, +            DisposableHelper.dispose(timer);, +                DisposableHelper.dispose(timer);, +++ b/src/main/java/io/reactivex/disposables/RefCountDisposable.java, +import io.reactivex.internal.disposables.DisposableHelper;, +    static final Disposable DISPOSED = DisposableHelper.DISPOSED;, +                DisposableHelper.dispose(resource);, +            DisposableHelper.dispose(resource);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAmb.java, +                if (get() != SubscriptionHelper.CANCELLED) {, +                if (s != null && s != SubscriptionHelper.CANCELLED) {, +            SubscriptionHelper.dispose(this);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferTimed.java, +import io.reactivex.internal.disposables.DisposableHelper;, +            DisposableHelper.dispose(timer);, +            DisposableHelper.dispose(timer);, +            DisposableHelper.dispose(timer);, +                DisposableHelper.dispose(timer);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +                if (this.s.get() != SubscriptionHelper.CANCELLED) {, +            SubscriptionHelper.dispose(s);, +++ b/src/main/java/io/reactivex/disposables/RefCountDisposable.java, +import io.reactivex.internal.disposables.DisposableHelper;, +    static final Disposable DISPOSED = DisposableHelper.DISPOSED;, +                DisposableHelper.dispose(resource);, +            DisposableHelper.dispose(resource);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAmb.java, +                if (get() != SubscriptionHelper.CANCELLED) {, +                if (s != null && s != SubscriptionHelper.CANCELLED) {, +            SubscriptionHelper.dispose(this);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferTimed.java, +import io.reactivex.internal.disposables.DisposableHelper;, +            DisposableHelper.dispose(timer);, +            DisposableHelper.dispose(timer);, +            DisposableHelper.dispose(timer);, +                DisposableHelper.dispose(timer);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +                if (this.s.get() != SubscriptionHelper.CANCELLED) {, +            SubscriptionHelper.dispose(s);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableDebounce.java, +import io.reactivex.internal.disposables.DisposableHelper;, +            DisposableHelper.dispose(debouncer);, +            if (!DisposableHelper.isDisposed(d)) {, +                DisposableHelper.dispose(debouncer);, +            DisposableHelper.dispose(debouncer);, +++ b/src/main/java/io/reactivex/disposables/RefCountDisposable.java, +import io.reactivex.internal.disposables.DisposableHelper;, +    static final Disposable DISPOSED = DisposableHelper.DISPOSED;, +                DisposableHelper.dispose(resource);, +            DisposableHelper.dispose(resource);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAmb.java, +                if (get() != SubscriptionHelper.CANCELLED) {, +                if (s != null && s != SubscriptionHelper.CANCELLED) {, +            SubscriptionHelper.dispose(this);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferTimed.java, +import io.reactivex.internal.disposables.DisposableHelper;, +            DisposableHelper.dispose(timer);, +            DisposableHelper.dispose(timer);, +            DisposableHelper.dispose(timer);, +                DisposableHelper.dispose(timer);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +                if (this.s.get() != SubscriptionHelper.CANCELLED) {, +            SubscriptionHelper.dispose(s);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableDebounce.java, +import io.reactivex.internal.disposables.DisposableHelper;, +            DisposableHelper.dispose(debouncer);, +            if (!DisposableHelper.isDisposed(d)) {, +                DisposableHelper.dispose(debouncer);, +            DisposableHelper.dispose(debouncer);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableDebounceTimed.java, +            DisposableHelper.dispose(timer);, +            if (!DisposableHelper.isDisposed(d)) {, +                DisposableHelper.dispose(timer);, +            DisposableHelper.dispose(timer);]