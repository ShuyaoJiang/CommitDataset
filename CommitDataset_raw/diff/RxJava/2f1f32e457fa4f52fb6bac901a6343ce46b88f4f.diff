[+++ b/src/main/java/rx/Observer.java, +     * The {@link Observable} may call this method 0 or more times., +     * The {@code Observable} will not call this method again after it calls either {@link #onCompleted} or, +++ b/src/main/java/rx/Observer.java, +     * The {@link Observable} may call this method 0 or more times., +     * The {@code Observable} will not call this method again after it calls either {@link #onCompleted} or, +++ b/src/main/java/rx/observers/SafeSubscriber.java, +    /**, +     * Notifies the Subscriber that the {@code Observable} has finished sending push-based notifications., +     * <p>, +     * The {@code Observable} will not call this method if it calls {@link #onError}., +     */, +    /**, +     * Notifies the Subscriber that the {@code Observable} has experienced an error condition., +     * <p>, +     * If the {@code Observable} calls this method, it will not thereafter call {@link #onNext} or, +     * {@link #onCompleted}., +     * , +     * @param e, +     *          the exception encountered by the Observable, +     */, +    /**, +     * Provides the Subscriber with a new item to observe., +     * <p>, +     * The {@code Observable} may call this method 0 or more times., +     * <p>, +     * The {@code Observable} will not call this method again after it calls either {@link #onCompleted} or, +     * {@link #onError}., +     * , +     * @param args, +     *          the item emitted by the Observable, +     */, +     * The logic for {@code onError} without the {@code isFinished} check so it can be called from within, +     * {@code onCompleted}., +++ b/src/main/java/rx/Observer.java, +     * The {@link Observable} may call this method 0 or more times., +     * The {@code Observable} will not call this method again after it calls either {@link #onCompleted} or, +++ b/src/main/java/rx/observers/SafeSubscriber.java, +    /**, +     * Notifies the Subscriber that the {@code Observable} has finished sending push-based notifications., +     * <p>, +     * The {@code Observable} will not call this method if it calls {@link #onError}., +     */, +    /**, +     * Notifies the Subscriber that the {@code Observable} has experienced an error condition., +     * <p>, +     * If the {@code Observable} calls this method, it will not thereafter call {@link #onNext} or, +     * {@link #onCompleted}., +     * , +     * @param e, +     *          the exception encountered by the Observable, +     */, +    /**, +     * Provides the Subscriber with a new item to observe., +     * <p>, +     * The {@code Observable} may call this method 0 or more times., +     * <p>, +     * The {@code Observable} will not call this method again after it calls either {@link #onCompleted} or, +     * {@link #onError}., +     * , +     * @param args, +     *          the item emitted by the Observable, +     */, +     * The logic for {@code onError} without the {@code isFinished} check so it can be called from within, +     * {@code onCompleted}., +++ b/src/main/java/rx/observers/SerializedSubscriber.java, +    /**, +     * Notifies the Subscriber that the {@code Observable} has finished sending push-based notifications., +     * <p>, +     * The {@code Observable} will not call this method if it calls {@link #onError}., +     */, +    /**, +     * Notifies the Subscriber that the {@code Observable} has experienced an error condition., +     * <p>, +     * If the {@code Observable} calls this method, it will not thereafter call {@link #onNext} or, +     * {@link #onCompleted}., +     * , +     * @param e, +     *          the exception encountered by the Observable, +     */, +    /**, +     * Provides the Subscriber with a new item to observe., +     * <p>, +     * The {@code Observable} may call this method 0 or more times., +     * <p>, +     * The {@code Observable} will not call this method again after it calls either {@link #onCompleted} or, +     * {@link #onError}., +     * , +     * @param t, +     *          the item emitted by the Observable, +     */, +++ b/src/main/java/rx/Observer.java, +     * The {@link Observable} may call this method 0 or more times., +     * The {@code Observable} will not call this method again after it calls either {@link #onCompleted} or, +++ b/src/main/java/rx/observers/SafeSubscriber.java, +    /**, +     * Notifies the Subscriber that the {@code Observable} has finished sending push-based notifications., +     * <p>, +     * The {@code Observable} will not call this method if it calls {@link #onError}., +     */]