[+++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/ImplicitFunctionConversions.scala, +  implicit def toJavaNotification[T](s: Notification[T]): rx.Notification[_ <: T] = s.asJava, +  implicit def toScalaNotification[T](s: rx.Notification[_ <: T]): Notification[T] = Notification(s), +, +  implicit def toScalaObserver[T](s: rx.Observer[_ >: T]): Observer[T] = Observer(s), +  implicit def toScalaObservable[T](s: rx.Observable[_ <: T]): Observable[T] = Observable(s), +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/ImplicitFunctionConversions.scala, +  implicit def toJavaNotification[T](s: Notification[T]): rx.Notification[_ <: T] = s.asJava, +  implicit def toScalaNotification[T](s: rx.Notification[_ <: T]): Notification[T] = Notification(s), +, +  implicit def toScalaObserver[T](s: rx.Observer[_ >: T]): Observer[T] = Observer(s), +  implicit def toScalaObservable[T](s: rx.Observable[_ <: T]): Observable[T] = Observable(s), +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Notification.scala, +, +    def apply[T](value: T): Notification[T] = {, +      Notification(new rx.Notification[T](value)), +    }, +, +, +    def apply[T](error: Throwable): Notification[T] = {, +      Notification(new rx.Notification[T](error)), +    }, +, +, +    def apply[T](): Notification[T] = {, +      Notification(new rx.Notification()), +    }, +]