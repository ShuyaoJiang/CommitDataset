[+++ b/src/main/java/rx/Observable.java, +     * @see <a href="https://github.com/ReactiveX/RxJava/wiki/Transforming-Observables#groupby">RxJava wiki: groupBy</a>, +     * <dl>, +     *  <dt><b>Scheduler:</b></dt>, +     *  <dd>{@code groupBy} does not operate by default on a particular {@link Scheduler}.</dd>, +     * </dl>, +     * @see <a href="https://github.com/ReactiveX/RxJava/wiki/Transforming-Observables#groupby">RxJava wiki: groupBy</a>, +     * a {@link void} item to the Observable provided as an argument to the {@code notificationHandler}, +     * function. If that Observable calls {@code onComplete} or {@code onError} then {@code repeatWhen} will, +     * a {@link void} item to the Observable provided as an argument to the {@code notificationHandler}, +     * function. If that Observable calls {@code onComplete} or {@code onError} then {@code repeatWhen} will, +     * {@link Throwable} item to the Observable provided as an argument to the {@code notificationHandler}, +     * function. If that Observable calls {@code onComplete} or {@code onError} then {@code retry} will call, +     * Returns an Observable that emits the same values as the source observable with the exception of an, +     * {@code onError}. An {@code onError} will cause the emission of the {@link Throwable} that cause the, +     * error to the Observable returned from {@code notificationHandler}. If that Observable calls, +     * {@code onComplete} or {@code onError} then {@code retry} will call {@code onCompleted} or {@code onError}, +     * on the child subscription. Otherwise, this Observable will resubscribe to the source observable, on a, +     * particular Scheduler.    ]