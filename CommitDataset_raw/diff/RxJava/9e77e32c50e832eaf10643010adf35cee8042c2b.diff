[+++ b/src/main/java/io/reactivex/Observable.java, +    public final <R> Observable<R> compose(ObservableTransformer<T, R> composer) {, +++ b/src/main/java/io/reactivex/Observable.java, +    public final <R> Observable<R> compose(ObservableTransformer<T, R> composer) {, +++ b/src/test/java/io/reactivex/internal/operators/single/SingleAmbTest.java, +++ b/src/main/java/io/reactivex/Observable.java, +    public final <R> Observable<R> compose(ObservableTransformer<T, R> composer) {, +++ b/src/test/java/io/reactivex/internal/operators/single/SingleAmbTest.java, +++ b/src/test/java/io/reactivex/observable/ObservableCovarianceTest.java, +                .compose(new ObservableTransformer<Movie, Movie>() {, +        Observable<Movie> movie2 = movie.compose(new ObservableTransformer<HorrorMovie, Movie>() {, +        Observable<HorrorMovie> movie2 = movie.compose(new ObservableTransformer<Movie, HorrorMovie>() {, +        Observable<HorrorMovie> movie2 = movie.compose(new ObservableTransformer<Movie, HorrorMovie>() {, +        Observable<HorrorMovie> movie2 = movie.compose(new ObservableTransformer<HorrorMovie, HorrorMovie>() {, +++ b/src/main/java/io/reactivex/Observable.java, +    public final <R> Observable<R> compose(ObservableTransformer<T, R> composer) {, +++ b/src/test/java/io/reactivex/internal/operators/single/SingleAmbTest.java, +++ b/src/test/java/io/reactivex/observable/ObservableCovarianceTest.java, +                .compose(new ObservableTransformer<Movie, Movie>() {, +        Observable<Movie> movie2 = movie.compose(new ObservableTransformer<HorrorMovie, Movie>() {, +        Observable<HorrorMovie> movie2 = movie.compose(new ObservableTransformer<Movie, HorrorMovie>() {, +        Observable<HorrorMovie> movie2 = movie.compose(new ObservableTransformer<Movie, HorrorMovie>() {, +        Observable<HorrorMovie> movie2 = movie.compose(new ObservableTransformer<HorrorMovie, HorrorMovie>() {, +++ b/src/test/java/io/reactivex/observable/ObservableTest.java, +        Observable.just(1, 2, 3).compose(new ObservableTransformer<Integer, String>() {]