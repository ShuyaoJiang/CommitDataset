[+++ b/src/main/java/io/reactivex/schedulers/TestScheduler.java, +    /**, +     * Creates a new TestScheduler with initial virtual time of zero., +     */, +    public TestScheduler() {, +        // No-op., +    }, +, +    /**, +     * Creates a new TestScheduler with the specified initial virtual time., +     *, +     * @param delayTime, +     *          the point in time to move the Scheduler's clock to, +     * @param unit, +     *          the units of time that {@code delayTime} is expressed in, +     */, +    public TestScheduler(long delayTime, TimeUnit unit) {, +        time = unit.toNanos(delayTime);, +    }, +, +++ b/src/main/java/io/reactivex/schedulers/TestScheduler.java, +    /**, +     * Creates a new TestScheduler with initial virtual time of zero., +     */, +    public TestScheduler() {, +        // No-op., +    }, +, +    /**, +     * Creates a new TestScheduler with the specified initial virtual time., +     *, +     * @param delayTime, +     *          the point in time to move the Scheduler's clock to, +     * @param unit, +     *          the units of time that {@code delayTime} is expressed in, +     */, +    public TestScheduler(long delayTime, TimeUnit unit) {, +        time = unit.toNanos(delayTime);, +    }, +, +++ b/src/test/java/io/reactivex/schedulers/TestSchedulerTest.java, +    @Test, +    public void constructorTimeSetsTime() {, +        TestScheduler ts = new TestScheduler(5, TimeUnit.SECONDS);, +        assertEquals(5, ts.now(TimeUnit.SECONDS));, +        assertEquals(5000, ts.now(TimeUnit.MILLISECONDS));, +    }]