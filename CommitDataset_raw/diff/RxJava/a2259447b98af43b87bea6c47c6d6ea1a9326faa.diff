[+++ b/rxjava-core/src/main/java/rx/Observable.java, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/repeat.png">, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/repeat.s.png">, +     *            a count of 0 will yield an empty sequence., +     *         Observable at most count times., +     *            the scheduler to emit the items on, +     *         Observable at most count times on a particular scheduler., +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/repeat.png">, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/repeat.s.png">, +     *            a count of 0 will yield an empty sequence., +     *         Observable at most count times., +     *            the scheduler to emit the items on, +     *         Observable at most count times on a particular scheduler., +++ b/rxjava-core/src/main/java/rx/operators/OperationJoin.java, +                int id, highRightId;, +, +                    highRightId = rightId;, +                    for (Map.Entry<Integer, TRight> entry : rightMap.entrySet()) {, +                        if (entry.getKey() < highRightId) {, +                            TRight r = entry.getValue();, +            }, +                int id = 0, highLeftId;, +                    highLeftId = leftId;, +                    for (Map.Entry<Integer, TLeft> entry : leftMap.entrySet()) {, +                        if (entry.getKey() < highLeftId) {, +                            TLeft lv = entry.getValue();, +            }]