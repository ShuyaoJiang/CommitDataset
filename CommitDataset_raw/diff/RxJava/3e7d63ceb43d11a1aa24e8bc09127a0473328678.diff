[+++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableToList.java, +import io.reactivex.internal.functions.ObjectHelper;, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableToList.java, +import io.reactivex.internal.functions.ObjectHelper;, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableToListSingle.java, +import io.reactivex.internal.functions.ObjectHelper;, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableToList.java, +import io.reactivex.internal.functions.ObjectHelper;, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableToListSingle.java, +import io.reactivex.internal.functions.ObjectHelper;, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableToList.java, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableToList.java, +import io.reactivex.internal.functions.ObjectHelper;, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableToListSingle.java, +import io.reactivex.internal.functions.ObjectHelper;, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableToList.java, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableToListSingle.java, +import io.reactivex.internal.functions.ObjectHelper;, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableToList.java, +import io.reactivex.internal.functions.ObjectHelper;, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableToListSingle.java, +import io.reactivex.internal.functions.ObjectHelper;, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableToList.java, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableToListSingle.java, +import io.reactivex.internal.functions.ObjectHelper;, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/test/java/io/reactivex/internal/operators/flowable/FlowableToListTest.java, +    public void collectionSupplierReturnsNull() {, +        Flowable.just(1), +        .toList(new Callable<Collection<Integer>>() {, +            @Override, +            public Collection<Integer> call() throws Exception {, +                return null;, +            }, +        }), +        .toFlowable(), +        .test(), +        .assertFailure(NullPointerException.class), +        .assertErrorMessage("The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +    }, +, +    @SuppressWarnings("unchecked"), +    @Test, +, +    @SuppressWarnings("unchecked"), +    @Test, +    public void singleCollectionSupplierReturnsNull() {, +        Flowable.just(1), +        .toList(new Callable<Collection<Integer>>() {, +            @Override, +            public Collection<Integer> call() throws Exception {, +                return null;, +            }, +        }), +        .test(), +        .assertFailure(NullPointerException.class), +        .assertErrorMessage("The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +    }, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableToList.java, +import io.reactivex.internal.functions.ObjectHelper;, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableToListSingle.java, +import io.reactivex.internal.functions.ObjectHelper;, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableToList.java, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableToListSingle.java, +import io.reactivex.internal.functions.ObjectHelper;, +            coll = ObjectHelper.requireNonNull(collectionSupplier.call(), "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +++ b/src/test/java/io/reactivex/internal/operators/flowable/FlowableToListTest.java, +    public void collectionSupplierReturnsNull() {, +        Flowable.just(1), +        .toList(new Callable<Collection<Integer>>() {, +            @Override, +            public Collection<Integer> call() throws Exception {, +                return null;, +            }, +        }), +        .toFlowable(), +        .test(), +        .assertFailure(NullPointerException.class), +        .assertErrorMessage("The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources.");, +    }, +, +    @SuppressWarnings("unchecked"), +    @Test, +]