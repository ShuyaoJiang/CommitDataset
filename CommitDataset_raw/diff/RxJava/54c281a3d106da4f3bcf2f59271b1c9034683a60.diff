[+++ b/src/main/java/io/reactivex/Observable.java, +     * Unlike 1.x, disposing the Observable won't cancel the future. If necessary, one can use composition to achieve the, +     * cancellation effect: {@code futureObservableSource.doOnDispose(() -> future.cancel(true));}., +     * Unlike 1.x, disposing the Observable won't cancel the future. If necessary, one can use composition to achieve the, +     * cancellation effect: {@code futureObservableSource.doOnDispose(() -> future.cancel(true));}., +     * Unlike 1.x, disposing the Observable won't cancel the future. If necessary, one can use composition to achieve the, +     * cancellation effect: {@code futureObservableSource.doOnDispose(() -> future.cancel(true));}., +     * Unlike 1.x, disposing the Observable won't cancel the future. If necessary, one can use composition to achieve the, +     * cancellation effect: {@code futureObservableSource.doOnDispose(() -> future.cancel(true));}., +     * .doOnDispose(() -&gt; System.out.println("Cancelled!"));]