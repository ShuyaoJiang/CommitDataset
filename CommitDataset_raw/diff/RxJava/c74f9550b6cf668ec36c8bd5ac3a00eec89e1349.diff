[+++ b/build.gradle, +++ b/build.gradle, +++ b/gradle.properties, +version=0.18.4-SNAPSHOT, +++ b/build.gradle, +++ b/gradle.properties, +version=0.18.4-SNAPSHOT, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorGroupBy.java, +    public Subscriber<? super T> call(final Subscriber<? super GroupedObservable<K, T>> childObserver) {, +        return new GroupBySubscriber<K, T>(keySelector, childObserver);, +        final Subscriber<? super GroupedObservable<K, T>> childObserver;, +        public GroupBySubscriber(Func1<? super T, ? extends K> keySelector, Subscriber<? super GroupedObservable<K, T>> childObserver) {, +            this.childObserver = childObserver;, +                        childObserver.onCompleted();, +                childObserver.onError(e);, +                BufferUntilSubscriber<T> gps = groups.get(key);, +                if (gps == null) {, +                    if (childObserver.isUnsubscribed()) {, +                    gps = BufferUntilSubscriber.create();, +                    final BufferUntilSubscriber<T> _gps = gps;, +                            _gps.unsafeSubscribe(new Subscriber<T>(o) {, +                    groups.put(key, gps);, +                    childObserver.onNext(go);, +                gps.onNext(t);, +            if (COUNTER_UPDATER.decrementAndGet(this) <= 0 && (terminated == 1 || childObserver.isUnsubscribed())) {, +                    if (childObserver.isUnsubscribed()) {, +                    childObserver.onCompleted();, +++ b/build.gradle, +++ b/gradle.properties, +version=0.18.4-SNAPSHOT, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorGroupBy.java, +    public Subscriber<? super T> call(final Subscriber<? super GroupedObservable<K, T>> childObserver) {, +        return new GroupBySubscriber<K, T>(keySelector, childObserver);, +        final Subscriber<? super GroupedObservable<K, T>> childObserver;, +        public GroupBySubscriber(Func1<? super T, ? extends K> keySelector, Subscriber<? super GroupedObservable<K, T>> childObserver) {, +            this.childObserver = childObserver;, +                        childObserver.onCompleted();, +                childObserver.onError(e);, +                BufferUntilSubscriber<T> gps = groups.get(key);, +                if (gps == null) {, +                    if (childObserver.isUnsubscribed()) {, +                    gps = BufferUntilSubscriber.create();, +                    final BufferUntilSubscriber<T> _gps = gps;, +                            _gps.unsafeSubscribe(new Subscriber<T>(o) {, +                    groups.put(key, gps);, +                    childObserver.onNext(go);, +                gps.onNext(t);, +            if (COUNTER_UPDATER.decrementAndGet(this) <= 0 && (terminated == 1 || childObserver.isUnsubscribed())) {, +                    if (childObserver.isUnsubscribed()) {, +                    childObserver.onCompleted();, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorMaterialize.java, +import rx.plugins.RxJavaPlugins;, +                RxJavaPlugins.getInstance().getErrorHandler().handleError(e);, +++ b/build.gradle, +++ b/gradle.properties, +version=0.18.4-SNAPSHOT, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorGroupBy.java, +    public Subscriber<? super T> call(final Subscriber<? super GroupedObservable<K, T>> childObserver) {, +        return new GroupBySubscriber<K, T>(keySelector, childObserver);, +        final Subscriber<? super GroupedObservable<K, T>> childObserver;, +        public GroupBySubscriber(Func1<? super T, ? extends K> keySelector, Subscriber<? super GroupedObservable<K, T>> childObserver) {, +            this.childObserver = childObserver;, +                        childObserver.onCompleted();, +                childObserver.onError(e);, +                BufferUntilSubscriber<T> gps = groups.get(key);, +                if (gps == null) {, +                    if (childObserver.isUnsubscribed()) {, +                    gps = BufferUntilSubscriber.create();, +                    final BufferUntilSubscriber<T> _gps = gps;, +                            _gps.unsafeSubscribe(new Subscriber<T>(o) {, +                    groups.put(key, gps);, +                    childObserver.onNext(go);, +                gps.onNext(t);, +            if (COUNTER_UPDATER.decrementAndGet(this) <= 0 && (terminated == 1 || childObserver.isUnsubscribed())) {, +                    if (childObserver.isUnsubscribed()) {, +                    childObserver.onCompleted();, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorMaterialize.java, +import rx.plugins.RxJavaPlugins;, +                RxJavaPlugins.getInstance().getErrorHandler().handleError(e);, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorMergeDelayError.java, +import rx.plugins.RxJavaPlugins;, +, +            RxJavaPlugins.getInstance().getErrorHandler().handleError(e);, +, +++ b/build.gradle, +++ b/gradle.properties, +version=0.18.4-SNAPSHOT, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorGroupBy.java, +    public Subscriber<? super T> call(final Subscriber<? super GroupedObservable<K, T>> childObserver) {, +        return new GroupBySubscriber<K, T>(keySelector, childObserver);, +        final Subscriber<? super GroupedObservable<K, T>> childObserver;, +        public GroupBySubscriber(Func1<? super T, ? extends K> keySelector, Subscriber<? super GroupedObservable<K, T>> childObserver) {, +            this.childObserver = childObserver;, +                        childObserver.onCompleted();, +                childObserver.onError(e);, +                BufferUntilSubscriber<T> gps = groups.get(key);, +                if (gps == null) {, +                    if (childObserver.isUnsubscribed()) {, +                    gps = BufferUntilSubscriber.create();, +                    final BufferUntilSubscriber<T> _gps = gps;]