[+++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Subscriber.scala, +    override val asJavaObserver: rx.Observer[_ >: T] = asJavaSubscriber, +    override val asJavaSubscription: rx.Subscription = asJavaSubscriber, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Subscriber.scala, +    override val asJavaObserver: rx.Observer[_ >: T] = asJavaSubscriber, +    override val asJavaSubscription: rx.Subscription = asJavaSubscriber, +++ b/language-adaptors/rxjava-scala/src/test/scala/rx/lang/scala/SubscriberTests.scala, +/**, + * Copyright 2013 Netflix, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *     http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package rx.lang.scala, +, +import org.junit.Test, +import org.junit.Assert.assertNotNull, +import org.scalatest.junit.JUnitSuite, +, +class SubscriberTests extends JUnitSuite {, +, +  @Test def testIssue1173() {, +    // https://github.com/Netflix/RxJava/issues/1173, +    val subscriber = Subscriber((n: Int) => println(n)), +    assertNotNull(subscriber.asJavaObserver), +    assertNotNull(subscriber.asJavaSubscription), +    assertNotNull(subscriber.asJavaSubscriber), +  }, +, +}]