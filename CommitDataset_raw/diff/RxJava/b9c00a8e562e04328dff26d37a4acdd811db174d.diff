[+++ b/src/test/java/io/reactivex/maybe/MaybeCreateTest.java, +import java.util.List;, +, +import io.reactivex.plugins.RxJavaPlugins;, +        List<Throwable> errors = TestHelper.trackPluginErrors();, +        try {, +            TestHelper.assertUndeliverable(errors, 0, TestException.class);, +        } finally {, +            RxJavaPlugins.reset();, +        }, +        List<Throwable> errors = TestHelper.trackPluginErrors();, +        try {, +, +            TestHelper.assertUndeliverable(errors, 0, TestException.class);, +        } finally {, +            RxJavaPlugins.reset();, +        }, +        List<Throwable> errors = TestHelper.trackPluginErrors();, +        try {, +, +            TestHelper.assertUndeliverable(errors, 0, TestException.class);, +        } finally {, +            RxJavaPlugins.reset();, +        }, +        List<Throwable> errors = TestHelper.trackPluginErrors();, +        try {, +, +            TestHelper.assertUndeliverable(errors, 0, TestException.class);, +        } finally {, +            RxJavaPlugins.reset();, +        }, +++ b/src/test/java/io/reactivex/maybe/MaybeCreateTest.java, +import java.util.List;, +, +import io.reactivex.plugins.RxJavaPlugins;, +        List<Throwable> errors = TestHelper.trackPluginErrors();, +        try {, +            TestHelper.assertUndeliverable(errors, 0, TestException.class);, +        } finally {, +            RxJavaPlugins.reset();, +        }, +        List<Throwable> errors = TestHelper.trackPluginErrors();, +        try {, +, +            TestHelper.assertUndeliverable(errors, 0, TestException.class);, +        } finally {, +            RxJavaPlugins.reset();, +        }, +        List<Throwable> errors = TestHelper.trackPluginErrors();, +        try {, +, +            TestHelper.assertUndeliverable(errors, 0, TestException.class);, +        } finally {, +            RxJavaPlugins.reset();, +        }, +        List<Throwable> errors = TestHelper.trackPluginErrors();, +        try {, +, +            TestHelper.assertUndeliverable(errors, 0, TestException.class);, +        } finally {, +            RxJavaPlugins.reset();, +        }, +++ b/src/test/java/io/reactivex/maybe/MaybeTest.java, +        List<Throwable> errors = TestHelper.trackPluginErrors();, +        try {, +, +            TestHelper.assertUndeliverable(errors, 0, TestException.class);, +            TestHelper.assertUndeliverable(errors, 1, TestException.class);, +        } finally {, +            RxJavaPlugins.reset();, +        }, +        List<Throwable> errors = TestHelper.trackPluginErrors();, +        try {, +, +            TestHelper.assertUndeliverable(errors, 0, TestException.class);, +        } finally {, +            RxJavaPlugins.reset();, +        }, +        List<Throwable> errors = TestHelper.trackPluginErrors();, +        try {, +, +            TestHelper.assertUndeliverable(errors, 0, TestException.class);, +            TestHelper.assertUndeliverable(errors, 1, TestException.class);, +        } finally {, +            RxJavaPlugins.reset();, +        }, +        List<Throwable> errors = TestHelper.trackPluginErrors();, +        try {, +, +            TestHelper.assertError(errors, 0, OnErrorNotImplementedException.class);, +        } finally {, +            RxJavaPlugins.reset();, +        }, +++ b/src/test/java/io/reactivex/maybe/MaybeCreateTest.java, +import java.util.List;, +, +import io.reactivex.plugins.RxJavaPlugins;, +        List<Throwable> errors = TestHelper.trackPluginErrors();, +        try {, +            TestHelper.assertUndeliverable(errors, 0, TestException.class);]