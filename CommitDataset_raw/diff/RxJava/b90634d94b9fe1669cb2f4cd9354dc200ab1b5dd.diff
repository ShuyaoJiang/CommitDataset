[+++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/ImplicitFunctionConversions.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/ImplicitFunctionConversions.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Notification.scala, + * Emitted by Observables returned by [[Observable.materialize]]., +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/ImplicitFunctionConversions.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Notification.scala, + * Emitted by Observables returned by [[Observable.materialize]]., +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, + * @param asJava the underlying Java observable, + * , + * @define subscribeObserverMain, + * @define subscribeObserverParamObserver , + * @define subscribeObserverParamScheduler , + * @define subscribeAllReturn , + *         a [[Subscription]] reference whose `unsubscribe` method can be called to  stop receiving items, + * , + * @define subscribeCallbacksMainWithNotifications, + * Call this method to receive items and notifications from this observable., + * , + * @define subscribeCallbacksMainNoNotifications, + * Call this method to receive items from this observable., + * , + * @define subscribeCallbacksParamOnNext , + *         this function will be called whenever the Observable emits an item, + * @define subscribeCallbacksParamOnError, + *         this function will be called if an error occurs, + * @define subscribeCallbacksParamOnComplete, + *         this function will be called when this Observable has finished emitting items, + * @define subscribeCallbacksParamScheduler, + *         the scheduler to use, + *, + * @define debounceVsThrottle, + * Information on debounce vs throttle:, + *  - [[http://drupalmotion.com/article/debounce-and-throttle-visual-explanation]], + *  - [[http://unscriptable.com/2009/03/20/debouncing-javascript-methods/]], + *  - [[http://www.illyriad.co.uk/blog/index.php/2011/09/javascript-dont-spam-your-server-debounce-and-throttle/]], + *, + * , +   * $subscribeObserverMain, +   * , +   * @param observer $subscribeObserverParamObserver, +   * @param scheduler $subscribeObserverParamScheduler, +   * @return $subscribeAllReturn, +   * $subscribeObserverMain, +   * , +   * @param observer $subscribeObserverParamObserver, +   * @return $subscribeAllReturn, +  /**, +   * $subscribeCallbacksMainNoNotifications, +   *, +   * @param onNext $subscribeCallbacksParamOnNext, +   * @return $subscribeAllReturn, +   */, +  /**, +   * $subscribeCallbacksMainWithNotifications, +   *, +   * @param onNext $subscribeCallbacksParamOnNext, +   * @param onError $subscribeCallbacksParamOnError, +   * @return $subscribeAllReturn, +   */  , +  /**, +   * $subscribeCallbacksMainWithNotifications, +   *, +   * @param onNext $subscribeCallbacksParamOnNext, +   * @param onError $subscribeCallbacksParamOnError, +   * @param onComplete $subscribeCallbacksParamOnComplete, +   * @return $subscribeAllReturn, +   */, +  /**, +   * $subscribeCallbacksMainWithNotifications, +   *, +   * @param onNext $subscribeCallbacksParamOnNext, +   * @param onError $subscribeCallbacksParamOnError, +   * @param onComplete $subscribeCallbacksParamOnComplete, +   * @param scheduler $subscribeCallbacksParamScheduler, +   * @return $subscribeAllReturn, +   */, +  /**, +   * $subscribeCallbacksMainWithNotifications, +   *, +   * @param onNext $subscribeCallbacksParamOnNext, +   * @param onError $subscribeCallbacksParamOnError, +   * @param scheduler $subscribeCallbacksParamScheduler, +   * @return $subscribeAllReturn, +   */, +  /**, +   * $subscribeCallbacksMainNoNotifications, +   *, +   * @param onNext $subscribeCallbacksParamOnNext, +   * @param scheduler $subscribeCallbacksParamScheduler, +   * @return $subscribeAllReturn, +   */, +   * Returns an Observable that first emits the items emitted by `this`, and then the items emitted, +   * by `that`., +   * Returns an Observable that emits the items emitted by several Observables, one after the, +   * This operation is only available if `this` is of type `Observable[Observable[U]]` for some `U`,, +   * otherwise you'll get a compilation error., +   * @usecase def concat[U]: Observable[U], +   *    @inheritdoc, +   * @param closings]