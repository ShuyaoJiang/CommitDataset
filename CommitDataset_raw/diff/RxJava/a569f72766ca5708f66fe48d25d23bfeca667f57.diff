[+++ b/build.gradle, +    apply plugin: 'shadow', +    task perfJar(type: Jar, dependsOn: perfClasses) {, +        from sourceSets.perf.output + sourceSets.main.output, +    }, +, +    artifacts {, +        perfRuntime perfJar, +    }, +    , +    /**, +     * By default: Run without arguments this will execute all benchmarks that are found (can take a long time)., +     *, +     * Optionally pass arguments for custom execution. Example:, +     *, +     *  ../gradlew benchmarks '-Pjmh=-f 1 -tu ns -bm avgt -wi 5 -i 5 -r 1 .*OperatorSerializePerf.*', +     *, +     * To see all options:, +     *, +     *  ../gradlew benchmarks '-Pjmh=-h', +     */, +, +        if (project.hasProperty('jmh')) {, +            args(jmh.split(' ')), +        } else {, +            args '5', +            args '.*OperatorSerializePerf.*' // for running only a specific test, +        }, +    shadow {, +        classifier = "benchmarks", +        includeDependenciesFor = ["runtime", "perfRuntime"], +, +        transformer(com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer) {, +            mainClass = "org.openjdk.jmh.Main", +        }, +    }, +, +    shadowJar.dependsOn perfJar, +++ b/build.gradle, +    apply plugin: 'shadow', +    task perfJar(type: Jar, dependsOn: perfClasses) {, +        from sourceSets.perf.output + sourceSets.main.output, +    }, +, +    artifacts {, +        perfRuntime perfJar, +    }, +    , +    /**, +     * By default: Run without arguments this will execute all benchmarks that are found (can take a long time)., +     *, +     * Optionally pass arguments for custom execution. Example:, +     *, +     *  ../gradlew benchmarks '-Pjmh=-f 1 -tu ns -bm avgt -wi 5 -i 5 -r 1 .*OperatorSerializePerf.*', +     *, +     * To see all options:, +     *, +     *  ../gradlew benchmarks '-Pjmh=-h', +     */, +, +        if (project.hasProperty('jmh')) {, +            args(jmh.split(' ')), +        } else {, +            args '5', +            args '.*OperatorSerializePerf.*' // for running only a specific test, +        }, +    shadow {, +        classifier = "benchmarks", +        includeDependenciesFor = ["runtime", "perfRuntime"], +, +        transformer(com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer) {, +            mainClass = "org.openjdk.jmh.Main", +        }, +    }, +, +    shadowJar.dependsOn perfJar, +++ b/gradle/buildscript.gradle, +    maven {, +        //FIXME: waiting for https://github.com/johnrengelman/shadow/pull/38 to merge, +        name 'Shadow', +        url 'http://dl.bintray.com/content/gvsmirnov/gradle-plugins', +    }, +    classpath 'com.github.jengelman.gradle.plugins:shadow:0.8.1', +++ b/build.gradle, +    apply plugin: 'shadow', +    task perfJar(type: Jar, dependsOn: perfClasses) {, +        from sourceSets.perf.output + sourceSets.main.output, +    }, +, +    artifacts {, +        perfRuntime perfJar, +    }, +    , +    /**, +     * By default: Run without arguments this will execute all benchmarks that are found (can take a long time)., +     *, +     * Optionally pass arguments for custom execution. Example:, +     *, +     *  ../gradlew benchmarks '-Pjmh=-f 1 -tu ns -bm avgt -wi 5 -i 5 -r 1 .*OperatorSerializePerf.*', +     *]