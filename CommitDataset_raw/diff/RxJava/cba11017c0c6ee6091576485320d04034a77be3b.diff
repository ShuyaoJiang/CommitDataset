[+++ b/.gitignore, +.gradletasknamecache, +++ b/.gitignore, +.gradletasknamecache, +++ b/CHANGES.md, +### Version 0.17.2 ([Maven Central](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.netflix.rxjava%22%20AND%20v%3A%220.17.2%22)) ###, +, +* [Pull 963](https://github.com/Netflix/RxJava/pull/963) A more robust JMH benchmarking set-up , +* [Pull 964](https://github.com/Netflix/RxJava/pull/964) SubjectSubscriptionManager fix., +* [Pull 970](https://github.com/Netflix/RxJava/pull/970) Notifications for the allocation averse., +* [Pull 973](https://github.com/Netflix/RxJava/pull/973) Merge - Handle Bad Observables, +* [Pull 974](https://github.com/Netflix/RxJava/pull/974) TestSubject, TestObserver and TestScheduler Improvements, +* [Pull 975](https://github.com/Netflix/RxJava/pull/975) GroupBy & Time Gap Fixes, +* [Pull 976](https://github.com/Netflix/RxJava/pull/976) parallel-merge unit test assertions, +* [Pull 977](https://github.com/Netflix/RxJava/pull/977) Dematerialize - handle non-materialized terminal events, +* [Pull 982](https://github.com/Netflix/RxJava/pull/982) Pivot Operator, +* [Pull 984](https://github.com/Netflix/RxJava/pull/984) Tests and Javadoc for Pivot, +* [Pull 966](https://github.com/Netflix/RxJava/pull/966) Reimplement the ElementAt operator and add it to rxjava-scala, +* [Pull 965](https://github.com/Netflix/RxJava/pull/965) BugFix: Chain Subscription in TimeoutSubscriber and SerializedSubscriber, +* [Pull 986](https://github.com/Netflix/RxJava/pull/986) Fix SynchronizedObserver.runConcurrencyTest, +* [Pull 987](https://github.com/Netflix/RxJava/pull/987) Fix Non-Deterministic Pivot Test, +* [Pull 988](https://github.com/Netflix/RxJava/pull/988) OnErrorFailedException, +, +, +### Version 0.17.1 ([Maven Central](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.netflix.rxjava%22%20AND%20v%3A%220.17.1%22)) ###, +, +* [Pull 953](https://github.com/Netflix/RxJava/pull/953) Make ObserveOnTest.testNonBlockingOuterWhileBlockingOnNext deterministic, +* [Pull 930](https://github.com/Netflix/RxJava/pull/930) Initial commit of the Android samples module, +* [Pull 938](https://github.com/Netflix/RxJava/pull/938) OperatorWeakBinding (deprecates OperatorObserveFromAndroidComponent), +* [Pull 952](https://github.com/Netflix/RxJava/pull/952) rxjava-scala improvements and reimplemented the `amb` operator, +* [Pull 955](https://github.com/Netflix/RxJava/pull/955) Fixed ReplaySubject leak, +* [Pull 956](https://github.com/Netflix/RxJava/pull/956) Fixed byLine test to use line.separator system property instead of \n., +* [Pull 958](https://github.com/Netflix/RxJava/pull/958) OperatorSkipWhile, +* [Pull 959](https://github.com/Netflix/RxJava/pull/959) OperationToFuture must throw CancellationException on get() if cancelled, +* [Pull 928](https://github.com/Netflix/RxJava/pull/928) Fix deadlock in SubscribeOnBounded, +* [Pull 960](https://github.com/Netflix/RxJava/pull/960) Unit test for "Cannot subscribe to a Retry observable once all subscribers unsubscribed", +* [Pull 962](https://github.com/Netflix/RxJava/pull/962) Migrate from SynchronizedObserver to SerializedObserver, +, +, +### Version 0.17.0 ([Maven Central](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.netflix.rxjava%22%20AND%20v%3A%220.17.0%22)) ###, +, +, +Version 0.17.0 contains some significant signature changes that allow us to significantly improve handling of synchronous Observables and simplify Schedulers. Many of the changes have backwards compatible deprecated methods to ease the migration while some are breaking. , +, +The new signatures related to `Observable` in this release are:, +, +```java, +// A new create method takes `OnSubscribe` instead of `OnSubscribeFunc`, +public final static <T> Observable<T> create(OnSubscribe<T> f), +, +// The new OnSubscribe type accepts a Subscriber instead of Observer and does not return a Subscription, +public static interface OnSubscribe<T> extends Action1<Subscriber<? super T>>, +, +// Subscriber is an Observer + Subscription, +public abstract class Subscriber<T> implements Observer<T>, Subscription, +, +// The main `subscribe` behavior receives a Subscriber instead of Observer, +public final Subscription subscribe(Subscriber<? super T> subscriber), +, +// Subscribing with an Observer however is still appropriate, +// and the Observer is automatically converted into a Subscriber, +public final Subscription subscribe(Observer<? super T> observer), +, +// A new 'lift' function allows composing Operator implementations together, +public <R> Observable<R> lift(final Operator<? extends R, ? super T> lift), +	, +// The `Operator` used with `lift`, +public interface Operator<R, T> extends Func1<Subscriber<? super R>, Subscriber<? super T>>, +, +```, +, +Also changed is the `Scheduler` interface which is much simpler:, +, +```java, +public abstract class Scheduler {, +	public Subscription schedule(Action1<Scheduler.Inner> action);, +    public Subscription schedule(Action1<Scheduler.Inner> action, long delayTime, TimeUnit unit);, +	public Subscription schedulePeriodically(Action1<Scheduler.Inner> action, long initialDelay, long period, TimeUnit unit);, +	public final Subscription scheduleRecursive(final Action1<Recurse> action), +	public long now();, +	public int degreeOfParallelism();, +	, +	public static class Inner implements Subscription {, +		public abstract void schedule(Action1<Scheduler.Inner> action, long delayTime, TimeUnit unit);, +		public abstract void schedule(Action1<Scheduler.Inner> action);, +		public long now();, +	}, +	, +	public static final class Recurse {, +		public final void schedule();, +		public final void schedule(long delay, TimeUnit unit);, +	}, +}, +```, +, +, +This release applies many lessons learned over the past year and seeks to streamline the API before we hit 1.0., +, +As shown in the code above the changes fall into 2 major sections:, +]