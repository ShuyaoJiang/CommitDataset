[+++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +        case OnCompleted => println("Completed"), +      case OnCompleted => println("Completed"), +  @Test def notificationSubtyping() {, +    import Notification._, +    val oc1: Notification[Nothing] = OnCompleted, +    val oc2: Notification[Int] = OnCompleted, +    val oc3: rx.Notification[_ <: Int] = oc2.asJavaNotification, +    val oc4: rx.Notification[_ <: Any] = oc2.asJavaNotification, +  }, +  , +++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +        case OnCompleted => println("Completed"), +      case OnCompleted => println("Completed"), +  @Test def notificationSubtyping() {, +    import Notification._, +    val oc1: Notification[Nothing] = OnCompleted, +    val oc2: Notification[Int] = OnCompleted, +    val oc3: rx.Notification[_ <: Int] = oc2.asJavaNotification, +    val oc4: rx.Notification[_ <: Any] = oc2.asJavaNotification, +  }, +  , +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Notification.scala, +      case Notification.OnCompleted  => onCompleted(), +      case Notification.OnCompleted  => observer.onCompleted(), +    case rx.Notification.Kind.OnCompleted => OnCompleted, +  object OnCompleted extends Notification[Nothing] {, +    override def toString = "OnCompleted", +    val asJavaNotification = rx.Notification.createOnCompleted[Nothing](), +++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +        case OnCompleted => println("Completed"), +      case OnCompleted => println("Completed"), +  @Test def notificationSubtyping() {, +    import Notification._, +    val oc1: Notification[Nothing] = OnCompleted, +    val oc2: Notification[Int] = OnCompleted, +    val oc3: rx.Notification[_ <: Int] = oc2.asJavaNotification, +    val oc4: rx.Notification[_ <: Any] = oc2.asJavaNotification, +  }, +  , +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Notification.scala, +      case Notification.OnCompleted  => onCompleted(), +      case Notification.OnCompleted  => observer.onCompleted(), +    case rx.Notification.Kind.OnCompleted => OnCompleted, +  object OnCompleted extends Notification[Nothing] {, +    override def toString = "OnCompleted", +    val asJavaNotification = rx.Notification.createOnCompleted[Nothing](), +++ b/language-adaptors/rxjava-scala/src/test/scala/rx/lang/scala/NotificationTests.scala, +    val onCompleted = OnCompleted, +      assertEquals((), onCompleted match { case OnCompleted => () }), +    val onCompleted = OnCompleted]