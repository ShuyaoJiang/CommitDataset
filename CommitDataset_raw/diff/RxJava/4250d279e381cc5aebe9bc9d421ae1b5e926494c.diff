[+++ b/rxjava-core/src/main/java/rx/operators/OperationCombineLatest.java, +import org.mockito.Matchers;, +     * @param w0 , +     *          The first source observable., +     * @param w1 , +     *          The second source observable., +     * @param combineLatestFunction , +     *          The aggregation function used to combine the source observable values., +            try {, +                R combinedValue = combineLatestFunction.call(argsToCombineLatest);, +                observer.onNext(combinedValue);, +            } catch(Exception ex) {, +                observer.onError(ex);, +            }, +        @Test, +        public void testCombineLatestWithFunctionThatThrowsAnException() {, +            @SuppressWarnings("unchecked") // mock calls don't do generics, +            Observer<String> w = mock(Observer.class);, +            , +            TestObservable w1 = new TestObservable();, +            TestObservable w2 = new TestObservable();, +            , +            Observable<String> combined = Observable.create(combineLatest(w1, w2, new Func2<String, String, String>() {, +                @Override, +                public String call(String v1, String v2) {, +                    throw new RuntimeException("I don't work.");, +                }, +            }));, +            combined.subscribe(w);, +            , +            w1.Observer.onNext("first value of w1");, +            w2.Observer.onNext("first value of w2");, +            , +            verify(w, never()).onNext(anyString());, +            verify(w, never()).onCompleted();, +            verify(w, times(1)).onError(Matchers.<RuntimeException>any());, +        }, +        , +            @SuppressWarnings("unchecked") // mock calls don't do generics]