[+++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/AbstractButtonSource.java, +        return Observable.create(new Func1<Observer<? super ActionEvent>, Subscription>() {, +            public Subscription call(final Observer<? super ActionEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/AbstractButtonSource.java, +        return Observable.create(new Func1<Observer<? super ActionEvent>, Subscription>() {, +            public Subscription call(final Observer<? super ActionEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/ComponentEventSource.java, +        return Observable.create(new Func1<Observer<? super ComponentEvent>, Subscription>() {, +            public Subscription call(final Observer<? super ComponentEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/AbstractButtonSource.java, +        return Observable.create(new Func1<Observer<? super ActionEvent>, Subscription>() {, +            public Subscription call(final Observer<? super ActionEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/ComponentEventSource.java, +        return Observable.create(new Func1<Observer<? super ComponentEvent>, Subscription>() {, +            public Subscription call(final Observer<? super ComponentEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/KeyEventSource.java, +        return Observable.create(new Func1<Observer<? super KeyEvent>, Subscription>() {, +            public Subscription call(final Observer<? super KeyEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/AbstractButtonSource.java, +        return Observable.create(new Func1<Observer<? super ActionEvent>, Subscription>() {, +            public Subscription call(final Observer<? super ActionEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/ComponentEventSource.java, +        return Observable.create(new Func1<Observer<? super ComponentEvent>, Subscription>() {, +            public Subscription call(final Observer<? super ComponentEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/KeyEventSource.java, +        return Observable.create(new Func1<Observer<? super KeyEvent>, Subscription>() {, +            public Subscription call(final Observer<? super KeyEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/MouseEventSource.java, +        return Observable.create(new Func1<Observer<? super MouseEvent>, Subscription>() {, +            public Subscription call(final Observer<? super MouseEvent> observer) {, +        return Observable.create(new Func1<Observer<? super MouseEvent>, Subscription>() {, +            public Subscription call(final Observer<? super MouseEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/AbstractButtonSource.java, +        return Observable.create(new Func1<Observer<? super ActionEvent>, Subscription>() {, +            public Subscription call(final Observer<? super ActionEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/ComponentEventSource.java, +        return Observable.create(new Func1<Observer<? super ComponentEvent>, Subscription>() {, +            public Subscription call(final Observer<? super ComponentEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/KeyEventSource.java, +        return Observable.create(new Func1<Observer<? super KeyEvent>, Subscription>() {, +            public Subscription call(final Observer<? super KeyEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/MouseEventSource.java, +        return Observable.create(new Func1<Observer<? super MouseEvent>, Subscription>() {, +            public Subscription call(final Observer<? super MouseEvent> observer) {, +        return Observable.create(new Func1<Observer<? super MouseEvent>, Subscription>() {, +            public Subscription call(final Observer<? super MouseEvent> observer) {, +++ b/rxjava-core/src/main/java/rx/Observable.java, +    private final Func1<? super Observer<? super T>, ? extends Subscription> onSubscribe;, +    protected Observable(Func1<? super Observer<? super T>, ? extends Subscription> onSubscribe) {, +    public Subscription subscribe(Observer<? super T> observer) {, +        Func1<? super Observer<? super T>, ? extends Subscription> onSubscribeFunction = hook.onSubscribeStart(this, onSubscribe);, +    public Subscription subscribe(Observer<? super T> observer, Scheduler scheduler) {, +    private Subscription protectivelyWrapAndSubscribe(Observer<? super T> o) {, +            super(new Func1<Observer<? super T>, Subscription>() {, +                public Subscription call(Observer<? super T> t1) {, +            super(new Func1<Observer<? super T>, Subscription>() {, +                public Subscription call(Observer<? super T> observer) {, +    public static <T> Observable<T> create(Func1<? super Observer<? super T>, ? extends Subscription> func) {, +    public static <R, T0, T1> Observable<R> zip(Observable<? extends T0> w0, Observable<? extends T1> w1, Func2<? super T0, ? super T1, ? extends R> reduceFunction) {, +    public static <R, T0, T1, T2> Observable<R> zip(Observable<? extends T0> w0, Observable<? extends T1> w1, Observable<? extends T2> w2, Func3<? super T0, ? super T1, ? super T2, ? extends R> function) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/AbstractButtonSource.java, +        return Observable.create(new Func1<Observer<? super ActionEvent>, Subscription>() {, +            public Subscription call(final Observer<? super ActionEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/ComponentEventSource.java, +        return Observable.create(new Func1<Observer<? super ComponentEvent>, Subscription>() {, +            public Subscription call(final Observer<? super ComponentEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/KeyEventSource.java, +        return Observable.create(new Func1<Observer<? super KeyEvent>, Subscription>() {, +            public Subscription call(final Observer<? super KeyEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/MouseEventSource.java, +        return Observable.create(new Func1<Observer<? super MouseEvent>, Subscription>() {, +            public Subscription call(final Observer<? super MouseEvent> observer) {, +        return Observable.create(new Func1<Observer<? super MouseEvent>, Subscription>() {, +            public Subscription call(final Observer<? super MouseEvent> observer) {, +++ b/rxjava-core/src/main/java/rx/Observable.java, +    private final Func1<? super Observer<? super T>, ? extends Subscription> onSubscribe;, +    protected Observable(Func1<? super Observer<? super T>, ? extends Subscription> onSubscribe) {, +    public Subscription subscribe(Observer<? super T> observer) {, +        Func1<? super Observer<? super T>, ? extends Subscription> onSubscribeFunction = hook.onSubscribeStart(this, onSubscribe);, +    public Subscription subscribe(Observer<? super T> observer, Scheduler scheduler) {, +    private Subscription protectivelyWrapAndSubscribe(Observer<? super T> o) {, +            super(new Func1<Observer<? super T>, Subscription>() {, +                public Subscription call(Observer<? super T> t1) {, +            super(new Func1<Observer<? super T>, Subscription>() {, +                public Subscription call(Observer<? super T> observer) {, +    public static <T> Observable<T> create(Func1<? super Observer<? super T>, ? extends Subscription> func) {, +    public static <R, T0, T1> Observable<R> zip(Observable<? extends T0> w0, Observable<? extends T1> w1, Func2<? super T0, ? super T1, ? extends R> reduceFunction) {, +    public static <R, T0, T1, T2> Observable<R> zip(Observable<? extends T0> w0, Observable<? extends T1> w1, Observable<? extends T2> w2, Func3<? super T0, ? super T1, ? super T2, ? extends R> function) {, +++ b/rxjava-core/src/main/java/rx/observables/BlockingObservable.java, +    protected BlockingObservable(Func1<? super Observer<? super T>, ? extends Subscription> onSubscribe) {, +        return new BlockingObservable<T>(new Func1<Observer<? super T>, Subscription>() {, +            public Subscription call(Observer<? super T> observer) {, +            BlockingObservable<String> obs = BlockingObservable.from(create(new Func1<Observer<? super String>, Subscription>() {, +                public Subscription call(Observer<? super String> observer) {, +                BlockingObservable.from(Observable.create(new Func1<Observer<? super String>, Subscription>() {, +                    public Subscription call(final Observer<? super String> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/AbstractButtonSource.java, +        return Observable.create(new Func1<Observer<? super ActionEvent>, Subscription>() {, +            public Subscription call(final Observer<? super ActionEvent> observer) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/ComponentEventSource.java]