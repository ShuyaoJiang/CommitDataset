[+++ b/rxjava-core/src/main/java/rx/Observable.java, +        return concat(just(t1, t2));, +        return concat(just(t1, t2, t3));, +        return concat(just(t1, t2, t3, t4));, +        return concat(just(t1, t2, t3, t4, t5));, +        return concat(just(t1, t2, t3, t4, t5, t6));, +        return concat(just(t1, t2, t3, t4, t5, t6, t7));, +        return concat(just(t1, t2, t3, t4, t5, t6, t7, t8));, +        return concat(just(t1, t2, t3, t4, t5, t6, t7, t8, t9));, +        // TODO in a future revision the Scheduler will become important because we'll start polling instead of blocking on the Future, +     * @deprecated Use subscribeOn to Schedule the work, +    @Deprecated, +     * @deprecated Use just or item instead, +    @Deprecated, +     * @deprecated Use items instead, +    @Deprecated, +     * @deprecated Use items instead, +    @Deprecated, +     * @deprecated Use items instead, +    @Deprecated, +     * @deprecated Use items instead, +    @Deprecated, +     * @deprecated Use items instead, +    @Deprecated, +     * @deprecated Use items instead, +    @Deprecated, +     * @deprecated Use items instead, +    @Deprecated, +     * @deprecated Use items instead, +    @Deprecated, +     * @deprecated Use items instead, +    @Deprecated, +    public final static <T> Observable<T> from(T[] array) {, +        return from(Arrays.asList(array));, +     * @deprecated Use subscribeOn to Schedule the work, +    @Deprecated, +     * Converts two items into an Observable that emits those items., +     * <img width="640" height="315" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/from.png" alt="">, +     *  <dd>{@code from} does not operate by default on a particular {@link Scheduler}.</dd>, +     * @param t1, +     *            first item, +     * @param t2, +     *            second item, +     *            the type of these items, +     * @return an Observable that emits each item, +     * @see <a href="https://github.com/Netflix/RxJava/wiki/Creating-Observables#from">RxJava wiki: from</a>, +    // suppress unchecked because we are using varargs inside the method, +    @SuppressWarnings("unchecked"), +    public final static <T> Observable<T> just(T t1, T t2) {, +        return from(Arrays.asList(t1, t2));, +    }, +, +    /**, +     * Converts three items into an Observable that emits those items., +     * <p>, +     * <img width="640" height="315" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/from.png" alt="">, +     * <dl>, +     *  <dt><b>Scheduler:</b></dt>, +     *  <dd>{@code from} does not operate by default on a particular {@link Scheduler}.</dd>, +     * </dl>, +     * , +     * @param t1, +     *            first item, +     * @param t2, +     *            second item, +     * @param t3, +     *            third item, +     * @param <T>, +     *            the type of these items, +     * @return an Observable that emits each item, +     * @see <a href="https://github.com/Netflix/RxJava/wiki/Creating-Observables#from">RxJava wiki: from</a>, +     */, +    // suppress unchecked because we are using varargs inside the method, +    @SuppressWarnings("unchecked"), +    public final static <T> Observable<T> just(T t1, T t2, T t3) {, +        return from(Arrays.asList(t1, t2, t3));, +    }, +, +    /**, +     * Converts four items into an Observable that emits those items., +     * <p>, +     * <img width="640" height="315" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/from.png" alt="">, +     * <dl>, +     *  <dt><b>Scheduler:</b></dt>, +     *  <dd>{@code from} does not operate by default on a particular {@link Scheduler}.</dd>, +     * </dl>, +     * , +     * @param t1, +     *            first item, +     * @param t2, +     *            second item, +     * @param t3, +     *            third item, +     * @param t4, +     *            fourth item, +     * @param <T>, +     *            the type of these items, +     * @return an Observable that emits each item, +     * @see <a href="https://github.com/Netflix/RxJava/wiki/Creating-Observables#from">RxJava wiki: from</a>, +     */]