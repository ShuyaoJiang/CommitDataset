[+++ b/src/main/java/io/reactivex/processors/AsyncProcessor.java, + * Processor that emits the very last value followed by a completion event or the received error, + * to {@link Subscriber}s., +++ b/src/main/java/io/reactivex/processors/AsyncProcessor.java, + * Processor that emits the very last value followed by a completion event or the received error, + * to {@link Subscriber}s., +++ b/src/main/java/io/reactivex/processors/PublishProcessor.java, + * Processor that multicasts all subsequently observed items to its current {@link Subscriber}s., + * <p>The processor does not coordinate backpressure for its subscribers and implements a weaker onSubscribe which, + * calls requests Long.MAX_VALUE from the incoming Subscriptions. This makes it possible to subscribe the PublishProcessor, + * to multiple sources (note on serialization though) unlike the standard Subscriber contract. Child subscribers, however, are not overflown but receive an, + * @param <T> the value type multicasted to Subscribers.]