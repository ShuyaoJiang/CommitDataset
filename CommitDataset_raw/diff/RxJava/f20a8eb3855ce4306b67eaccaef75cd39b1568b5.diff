[+++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/ImplicitFunctionConversions.scala, +      def onSubscribe(obs: Observer[_ >: T]): rx.Subscription = {, +        f(obs).asJava, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/ImplicitFunctionConversions.scala, +      def onSubscribe(obs: Observer[_ >: T]): rx.Subscription = {, +        f(obs).asJava, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/package.scala, +  , +  /**, +   * Subscriptions are returned from all Observable.subscribe methods to allow unsubscribing., +   * , +   * This interface is the RxJava equivalent of IDisposable in Microsoft's Rx implementation., +   */, +  implicit class Subscription(val asJava: rx.Subscription) extends AnyVal {, +    /**, +     * Call this to stop receiving notifications on the Observer that was registered when , +     * this Subscription was received., +     */, +    def unsubscribe(): Unit = asJava.unsubscribe(), +  }]