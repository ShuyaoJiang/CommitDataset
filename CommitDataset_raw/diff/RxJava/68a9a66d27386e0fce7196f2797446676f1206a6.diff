[+++ b/src/main/java/io/reactivex/Completable.java, +    public static Completable wrap(CompletableConsumable source) {, +++ b/src/main/java/io/reactivex/Completable.java, +    public static Completable wrap(CompletableConsumable source) {, +++ b/src/main/java/io/reactivex/disposables/CompositeDisposable.java, +import io.reactivex.internal.disposables.DisposableContainer;, +public final class CompositeDisposable implements Disposable, DisposableContainer {, +    public int size() {, +        if (disposed) {, +            return 0;, +        }, +        synchronized (this) {, +            if (disposed) {, +                return 0;, +            }, +            return resources.size();, +        }, +    }, +    , +++ b/src/main/java/io/reactivex/Completable.java, +    public static Completable wrap(CompletableConsumable source) {, +++ b/src/main/java/io/reactivex/disposables/CompositeDisposable.java, +import io.reactivex.internal.disposables.DisposableContainer;, +public final class CompositeDisposable implements Disposable, DisposableContainer {, +    public int size() {, +        if (disposed) {, +            return 0;, +        }, +        synchronized (this) {, +            if (disposed) {, +                return 0;, +            }, +            return resources.size();, +        }, +    }, +    , +++ b/src/main/java/io/reactivex/disposables/Disposables.java, +import java.util.concurrent.Future;, +, +import org.reactivestreams.Subscription;, +, +++ b/src/main/java/io/reactivex/Completable.java, +    public static Completable wrap(CompletableConsumable source) {, +++ b/src/main/java/io/reactivex/disposables/CompositeDisposable.java, +import io.reactivex.internal.disposables.DisposableContainer;, +public final class CompositeDisposable implements Disposable, DisposableContainer {, +    public int size() {, +        if (disposed) {, +            return 0;, +        }, +        synchronized (this) {, +            if (disposed) {, +                return 0;, +            }, +            return resources.size();, +        }, +    }, +    , +++ b/src/main/java/io/reactivex/disposables/Disposables.java, +import java.util.concurrent.Future;, +, +import org.reactivestreams.Subscription;, +, +++ b/src/main/java/io/reactivex/disposables/FutureDisposable.java, +    /** */, +    private static final long serialVersionUID = 6545242830671168775L;, +    , +++ b/src/main/java/io/reactivex/Completable.java, +    public static Completable wrap(CompletableConsumable source) {, +++ b/src/main/java/io/reactivex/disposables/CompositeDisposable.java, +import io.reactivex.internal.disposables.DisposableContainer;, +public final class CompositeDisposable implements Disposable, DisposableContainer {, +    public int size() {, +        if (disposed) {, +            return 0;, +        }, +        synchronized (this) {, +            if (disposed) {, +                return 0;, +            }, +            return resources.size();, +        }, +    }, +    , +++ b/src/main/java/io/reactivex/disposables/Disposables.java, +import java.util.concurrent.Future;, +, +import org.reactivestreams.Subscription;, +, +++ b/src/main/java/io/reactivex/disposables/FutureDisposable.java, +    /** */, +    private static final long serialVersionUID = 6545242830671168775L;, +    , +++ b/src/main/java/io/reactivex/disposables/RefCountDisposable.java, +        /** */, +        private static final long serialVersionUID = -6066815451193282256L;, +, +++ b/src/main/java/io/reactivex/Completable.java, +    public static Completable wrap(CompletableConsumable source) {, +++ b/src/main/java/io/reactivex/disposables/CompositeDisposable.java]