[+++ b/CHANGES.md, +### Version 0.20.1 ([Maven Central](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.netflix.rxjava%22%20AND%20v%3A%220.20.1%22)) ###, +, +* [Pull 1631] (https://github.com/ReactiveX/RxJava/pull/1631) Handle Fatal Exceptions in doOn* operators, +* [Pull 1625] (https://github.com/ReactiveX/RxJava/pull/1625) RxScala: Mark superfluous from/empty methods with scheduler parameter as deprecated, +* [Pull 1623] (https://github.com/ReactiveX/RxJava/pull/1623) RxScala: Add more operators to match RxJava, +* [Pull 1632] (https://github.com/ReactiveX/RxJava/pull/1632) Composite Exception - Circular Reference Handling, +, +++ b/CHANGES.md, +### Version 0.20.1 ([Maven Central](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.netflix.rxjava%22%20AND%20v%3A%220.20.1%22)) ###, +, +* [Pull 1631] (https://github.com/ReactiveX/RxJava/pull/1631) Handle Fatal Exceptions in doOn* operators, +* [Pull 1625] (https://github.com/ReactiveX/RxJava/pull/1625) RxScala: Mark superfluous from/empty methods with scheduler parameter as deprecated, +* [Pull 1623] (https://github.com/ReactiveX/RxJava/pull/1623) RxScala: Add more operators to match RxJava, +* [Pull 1632] (https://github.com/ReactiveX/RxJava/pull/1632) Composite Exception - Circular Reference Handling, +, +++ b/rxjava/src/main/java/rx/observables/BlockingObservable.java, +        return from(o.first()).single();, +        return from(o.first(predicate)).single();, +        return from(o.take(1)).singleOrDefault(defaultValue);, +        return from(o.filter(predicate)).firstOrDefault(defaultValue);, +        return from(o.last()).single();, +        return from(o.last(predicate)).single();, +        return from(o.takeLast(1)).singleOrDefault(defaultValue);, +        return from(o.filter(predicate)).lastOrDefault(defaultValue);, +        return from(o.single()).toIterable().iterator().next();, +        return from(o.single(predicate)).toIterable().iterator().next();, +        return from(o.map(Functions.<T>identity()).singleOrDefault(defaultValue)).single();, +        return from(o.filter(predicate)).singleOrDefault(defaultValue);, +++ b/CHANGES.md, +### Version 0.20.1 ([Maven Central](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.netflix.rxjava%22%20AND%20v%3A%220.20.1%22)) ###, +, +* [Pull 1631] (https://github.com/ReactiveX/RxJava/pull/1631) Handle Fatal Exceptions in doOn* operators, +* [Pull 1625] (https://github.com/ReactiveX/RxJava/pull/1625) RxScala: Mark superfluous from/empty methods with scheduler parameter as deprecated, +* [Pull 1623] (https://github.com/ReactiveX/RxJava/pull/1623) RxScala: Add more operators to match RxJava, +* [Pull 1632] (https://github.com/ReactiveX/RxJava/pull/1632) Composite Exception - Circular Reference Handling, +, +++ b/rxjava/src/main/java/rx/observables/BlockingObservable.java, +        return from(o.first()).single();, +        return from(o.first(predicate)).single();, +        return from(o.take(1)).singleOrDefault(defaultValue);, +        return from(o.filter(predicate)).firstOrDefault(defaultValue);, +        return from(o.last()).single();, +        return from(o.last(predicate)).single();, +        return from(o.takeLast(1)).singleOrDefault(defaultValue);, +        return from(o.filter(predicate)).lastOrDefault(defaultValue);, +        return from(o.single()).toIterable().iterator().next();, +        return from(o.single(predicate)).toIterable().iterator().next();, +        return from(o.map(Functions.<T>identity()).singleOrDefault(defaultValue)).single();, +        return from(o.filter(predicate)).singleOrDefault(defaultValue);, +++ /dev/null, +++ b/CHANGES.md, +### Version 0.20.1 ([Maven Central](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.netflix.rxjava%22%20AND%20v%3A%220.20.1%22)) ###, +, +* [Pull 1631] (https://github.com/ReactiveX/RxJava/pull/1631) Handle Fatal Exceptions in doOn* operators, +* [Pull 1625] (https://github.com/ReactiveX/RxJava/pull/1625) RxScala: Mark superfluous from/empty methods with scheduler parameter as deprecated, +* [Pull 1623] (https://github.com/ReactiveX/RxJava/pull/1623) RxScala: Add more operators to match RxJava, +* [Pull 1632] (https://github.com/ReactiveX/RxJava/pull/1632) Composite Exception - Circular Reference Handling, +, +++ b/rxjava/src/main/java/rx/observables/BlockingObservable.java, +        return from(o.first()).single();, +        return from(o.first(predicate)).single();, +        return from(o.take(1)).singleOrDefault(defaultValue);, +        return from(o.filter(predicate)).firstOrDefault(defaultValue);, +        return from(o.last()).single();, +        return from(o.last(predicate)).single();, +        return from(o.takeLast(1)).singleOrDefault(defaultValue);, +        return from(o.filter(predicate)).lastOrDefault(defaultValue);, +        return from(o.single()).toIterable().iterator().next();, +        return from(o.single(predicate)).toIterable().iterator().next();, +        return from(o.map(Functions.<T>identity()).singleOrDefault(defaultValue)).single();, +        return from(o.filter(predicate)).singleOrDefault(defaultValue);, +++ /dev/null, +++ b/rxjava/src/test/java/rx/observables/BlockingObservableTest.java, +, +++ b/CHANGES.md, +### Version 0.20.1 ([Maven Central](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.netflix.rxjava%22%20AND%20v%3A%220.20.1%22)) ###, +, +* [Pull 1631] (https://github.com/ReactiveX/RxJava/pull/1631) Handle Fatal Exceptions in doOn* operators, +* [Pull 1625] (https://github.com/ReactiveX/RxJava/pull/1625) RxScala: Mark superfluous from/empty methods with scheduler parameter as deprecated, +* [Pull 1623] (https://github.com/ReactiveX/RxJava/pull/1623) RxScala: Add more operators to match RxJava, +* [Pull 1632] (https://github.com/ReactiveX/RxJava/pull/1632) Composite Exception - Circular Reference Handling, +, +++ b/rxjava/src/main/java/rx/observables/BlockingObservable.java, +        return from(o.first()).single();, +        return from(o.first(predicate)).single();, +        return from(o.take(1)).singleOrDefault(defaultValue);, +        return from(o.filter(predicate)).firstOrDefault(defaultValue);, +        return from(o.last()).single();, +        return from(o.last(predicate)).single();, +        return from(o.takeLast(1)).singleOrDefault(defaultValue);, +        return from(o.filter(predicate)).lastOrDefault(defaultValue);, +        return from(o.single()).toIterable().iterator().next();, +        return from(o.single(predicate)).toIterable().iterator().next();, +        return from(o.map(Functions.<T>identity()).singleOrDefault(defaultValue)).single();, +        return from(o.filter(predicate)).singleOrDefault(defaultValue);, +++ /dev/null, +++ b/rxjava/src/test/java/rx/observables/BlockingObservableTest.java, +, +++ b/rxjava/src/test/java/rx/util/AssertObservableTest.java]