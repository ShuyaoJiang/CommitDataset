[+++ b/src/main/java/io/reactivex/internal/operators/OperatorOnErrorNext.java, +import io.reactivex.plugins.RxJavaPlugins;, +        boolean done;, +        , +            if (done) {, +                return;, +            }, +                if (done) {, +                    RxJavaPlugins.onError(t);, +                    return;, +                }, +            if (done) {, +                return;, +            }, +            done = true;, +++ b/src/main/java/io/reactivex/internal/operators/OperatorOnErrorNext.java, +import io.reactivex.plugins.RxJavaPlugins;, +        boolean done;, +        , +            if (done) {, +                return;, +            }, +                if (done) {, +                    RxJavaPlugins.onError(t);, +                    return;, +                }, +            if (done) {, +                return;, +            }, +            done = true;, +++ b/src/main/java/io/reactivex/internal/operators/OperatorOnErrorReturn.java, +            BackpressureHelper.add(this, n);, +            } else {, +                s.request(n);, +++ b/src/main/java/io/reactivex/internal/operators/OperatorOnErrorNext.java, +import io.reactivex.plugins.RxJavaPlugins;, +        boolean done;, +        , +            if (done) {, +                return;, +            }, +                if (done) {, +                    RxJavaPlugins.onError(t);, +                    return;, +                }, +            if (done) {, +                return;, +            }, +            done = true;, +++ b/src/main/java/io/reactivex/internal/operators/OperatorOnErrorReturn.java, +            BackpressureHelper.add(this, n);, +            } else {, +                s.request(n);, +++ b/src/main/java/io/reactivex/internal/subscriptions/EmptySubscription.java, +    @Override, +    public String toString() {, +        return "EmptySubscription";, +    }, +    , +++ b/src/main/java/io/reactivex/internal/operators/OperatorOnErrorNext.java, +import io.reactivex.plugins.RxJavaPlugins;, +        boolean done;, +        , +            if (done) {, +                return;, +            }, +                if (done) {, +                    RxJavaPlugins.onError(t);, +                    return;, +                }, +            if (done) {, +                return;, +            }, +            done = true;, +++ b/src/main/java/io/reactivex/internal/operators/OperatorOnErrorReturn.java, +            BackpressureHelper.add(this, n);, +            } else {, +                s.request(n);, +++ b/src/main/java/io/reactivex/internal/subscriptions/EmptySubscription.java, +    @Override, +    public String toString() {, +        return "EmptySubscription";, +    }, +    , +++ b/src/test/java/io/reactivex/internal/operators/OperatorOnErrorResumeNextViaFunctionTest.java, +/**, + * Copyright 2015 Netflix, Inc., + * , + * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in, + * compliance with the License. You may obtain a copy of the License at, + * , + * http://www.apache.org/licenses/LICENSE-2.0, + * , + * Unless required by applicable law or agreed to in writing, software distributed under the License is, + * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See, + * the License for the specific language governing permissions and limitations under the License., + */, +, +package io.reactivex.internal.operators;, +]