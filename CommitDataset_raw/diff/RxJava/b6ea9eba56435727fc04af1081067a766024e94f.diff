[+++ b/src/main/java/io/reactivex/internal/operators/OperatorConcatMap.java, +        volatile long index;, +        , +            if (done) {, +                return;, +            }, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +            done = true;, +            if (done) {, +                return;, +            }, +            index++;, +, +        /*, +         * FIXME this is a workaround for now, but doesn't work , +         * for async non-conforming sources., +         * Such sources require individual instances of InnerSubscriber and a, +         * done field., +         */, +         , +        long index;, +        , +            this.index = 1;, +            if (index == parent.index) {, +        }, +            if (index == parent.index) {, +        }, +            if (index == parent.index) {, +                index++;, +            } else {, +                RxJavaPlugins.onError(t);, +            }, +            if (index == parent.index) {, +                index++;, +}, +++ b/src/main/java/io/reactivex/internal/operators/OperatorConcatMap.java, +        volatile long index;, +        , +            if (done) {, +                return;, +            }, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +            done = true;, +            if (done) {, +                return;, +            }, +            index++;, +, +        /*, +         * FIXME this is a workaround for now, but doesn't work , +         * for async non-conforming sources., +         * Such sources require individual instances of InnerSubscriber and a, +         * done field., +         */, +         , +        long index;, +        , +            this.index = 1;, +            if (index == parent.index) {, +        }, +            if (index == parent.index) {, +        }, +            if (index == parent.index) {, +                index++;, +            } else {, +                RxJavaPlugins.onError(t);, +            }, +            if (index == parent.index) {, +                index++;, +}, +++ b/src/main/java/io/reactivex/internal/subscriptions/SubscriptionArbiter.java, +            long r = requested;, +            if (r != 0L) {, +                s.request(r);, +            }, +++ b/src/main/java/io/reactivex/internal/operators/OperatorConcatMap.java, +        volatile long index;, +        , +            if (done) {, +                return;, +            }, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +            done = true;, +            if (done) {, +                return;, +            }, +            index++;, +, +        /*, +         * FIXME this is a workaround for now, but doesn't work , +         * for async non-conforming sources.]