[+++ b/rxjava-core/src/main/java/rx/subjects/ReplaySubject.java, +import rx.operators.NotificationLite;, +                state.history.complete();, +                state.history.complete(e);, +        if (state.history.terminated) {, +            history.accept(observer, l);, +        private final NotificationLite<T> nl = NotificationLite.instance();, +        private final ArrayList<Object> list;, +        private boolean terminated;, +            list = new ArrayList<Object>(initialCapacity);, +            if (!terminated) {, +                list.add(nl.next(n));, +        public void accept(Observer<? super T> o, int idx) {, +            nl.accept(o, list.get(idx));, +        }, +        , +        public void complete() {, +            if (!terminated) {, +                terminated = true;, +                list.add(nl.completed());, +                index.getAndIncrement();, +            }, +        }, +        public void complete(Throwable e) {, +            if (!terminated) {, +                terminated = true;, +                list.add(nl.error(e));, +                index.getAndIncrement();, +            }]