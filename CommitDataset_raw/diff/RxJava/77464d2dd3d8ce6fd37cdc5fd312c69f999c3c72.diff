[+++ b/README.md, +and <a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">JRuby</a>. , +++ b/README.md, +and <a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">JRuby</a>. , +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/ScalaAdaptor.scala, +            case (func: Map[String, _]) => return matchOption(func.get(ON_NEXT), args), +++ b/README.md, +and <a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">JRuby</a>. , +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/ScalaAdaptor.scala, +            case (func: Map[String, _]) => return matchOption(func.get(ON_NEXT), args), +++ b/rxjava-core/src/main/java/rx/operators/OperationTake.java, +                return new Take<T>(items, num).call(observer);, +    private static class Take<T> implements Func1<Observer<T>, Subscription> {, +        private final int num;, +        Take(final Observable<T> items, final int num) {, +            this.num = num;, +        /**, +         * Used to subscribe to the 'items' Observable sequence and forward to the actualObserver up to 'num' count., +         */, +, +            private AtomicInteger counter = new AtomicInteger();, +                if (counter.getAndIncrement() < num) {]