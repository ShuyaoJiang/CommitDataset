[+++ b/rxjava-contrib/rxjava-android-samples/build.gradle, +        classpath 'com.android.tools.build:gradle:0.12.+', +++ b/rxjava-contrib/rxjava-android-samples/build.gradle, +        classpath 'com.android.tools.build:gradle:0.12.+', +++ b/rxjava-contrib/rxjava-android-samples/samples/build.gradle, +apply plugin: 'com.android.application', +    buildToolsVersion "20", +++ b/rxjava-contrib/rxjava-android-samples/build.gradle, +        classpath 'com.android.tools.build:gradle:0.12.+', +++ b/rxjava-contrib/rxjava-android-samples/samples/build.gradle, +apply plugin: 'com.android.application', +    buildToolsVersion "20", +++ b/rxjava-contrib/rxjava-android/build.gradle, +    testCompile('org.robolectric:robolectric:2.3') {, +      exclude group: 'com.android.support', +    }, +++ b/rxjava-contrib/rxjava-android-samples/build.gradle, +        classpath 'com.android.tools.build:gradle:0.12.+', +++ b/rxjava-contrib/rxjava-android-samples/samples/build.gradle, +apply plugin: 'com.android.application', +    buildToolsVersion "20", +++ b/rxjava-contrib/rxjava-android/build.gradle, +    testCompile('org.robolectric:robolectric:2.3') {, +      exclude group: 'com.android.support', +    }, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/android/observables/AndroidObservable.java, +import android.app.Activity;, +import android.app.Fragment;, +import android.content.Context;, +import android.content.Intent;, +import android.content.IntentFilter;, +import android.os.Build;, +import android.os.Handler;, +import rx.operators.OperatorBroadcastRegister;, +import rx.operators.OperatorLocalBroadcastRegister;, +import rx.operators.OperatorObserveFromAndroidComponent;, +import static rx.android.schedulers.AndroidSchedulers.mainThread;, +, +    /**, +     * Create Observable that wraps BroadcastReceiver and emmit received intents., +     *, +     * @param filter Selects the Intent broadcasts to be received., +     */, +    public static Observable<Intent> fromBroadcast(Context context, IntentFilter filter){, +        return Observable.create(new OperatorBroadcastRegister(context, filter, null, null));, +    }, +, +    /**, +     * Create Observable that wraps BroadcastReceiver and emmit received intents., +     *, +     * @param filter Selects the Intent broadcasts to be received., +     * @param broadcastPermission String naming a permissions that a, +     *      broadcaster must hold in order to send an Intent to you.  If null,, +     *      no permission is required., +     * @param schedulerHandler Handler identifying the thread that will receive, +     *      the Intent.  If null, the main thread of the process will be used., +     */, +    public static Observable<Intent> fromBroadcast(Context context, IntentFilter filter, String broadcastPermission, Handler schedulerHandler){, +        return Observable.create(new OperatorBroadcastRegister(context, filter, broadcastPermission, schedulerHandler));, +    }, +, +    /**, +     * Create Observable that wraps BroadcastReceiver and connects to LocalBroadcastManager, +     * to emmit received intents., +     *, +     * @param filter Selects the Intent broadcasts to be received., +     */, +    public static Observable<Intent> fromLocalBroadcast(Context context, IntentFilter filter){, +        return Observable.create(new OperatorLocalBroadcastRegister(context, filter));, +    }, +++ b/rxjava-contrib/rxjava-android-samples/build.gradle, +        classpath 'com.android.tools.build:gradle:0.12.+', +++ b/rxjava-contrib/rxjava-android-samples/samples/build.gradle, +apply plugin: 'com.android.application', +    buildToolsVersion "20", +++ b/rxjava-contrib/rxjava-android/build.gradle, +    testCompile('org.robolectric:robolectric:2.3') {, +      exclude group: 'com.android.support', +    }, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/android/observables/AndroidObservable.java, +import android.app.Activity;, +import android.app.Fragment;, +import android.content.Context;, +import android.content.Intent;, +import android.content.IntentFilter;, +import android.os.Build;, +import android.os.Handler;, +import rx.operators.OperatorBroadcastRegister;, +import rx.operators.OperatorLocalBroadcastRegister;, +import rx.operators.OperatorObserveFromAndroidComponent;, +import static rx.android.schedulers.AndroidSchedulers.mainThread;, +, +    /**, +     * Create Observable that wraps BroadcastReceiver and emmit received intents., +     *, +     * @param filter Selects the Intent broadcasts to be received., +     */, +    public static Observable<Intent> fromBroadcast(Context context, IntentFilter filter){, +        return Observable.create(new OperatorBroadcastRegister(context, filter, null, null));, +    }]