[+++ b/rxjava-core/src/main/java/rx/operators/OperationSwitch.java, +import rx.subscriptions.CompositeSubscription;, +            SafeObservableSubscription parent;, +            parent = new SafeObservableSubscription();, +, +            MultipleAssignmentSubscription child;, +            child = new MultipleAssignmentSubscription();, +, +            parent.wrap(sequences.subscribe(new SwitchObserver<T>(observer, parent, child)));, +, +            return new CompositeSubscription(parent, child);, +        private final MultipleAssignmentSubscription child;, +        public SwitchObserver(Observer<? super T> observer, SafeObservableSubscription parent,, +                MultipleAssignmentSubscription child) {, +            this.child = child;, +                this.hasLatest = true;, +                            SwitchObserver.this.observer.onNext(args);, +                            SwitchObserver.this.observer.onError(e);, +                            SwitchObserver.this.parent.unsubscribe();, +                            SwitchObserver.this.hasLatest = false;, +                            SwitchObserver.this.observer.onCompleted();, +                            SwitchObserver.this.parent.unsubscribe();, +            this.child.setSubscription(sub);, +                this.observer.onError(e);, +            this.parent.unsubscribe();, +                this.child.unsubscribe();, +                this.stopped = true;, +                if (!this.hasLatest) {, +                    this.observer.onCompleted();, +                    this.parent.unsubscribe();]