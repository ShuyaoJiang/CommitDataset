[+++ b/rxjava-core/src/test/java/rx/operators/OperatorObserveOnTest.java, +        final CountDownLatch completedLatch = new CountDownLatch(1);, +        final CountDownLatch nextLatch = new CountDownLatch(1);, +        Observable.range(1, 2).subscribeOn(Schedulers.newThread()).observeOn(Schedulers.newThread()).subscribe(new Observer<Integer>() {, +                completedLatch.countDown();, +                // don't let this thing finish yet, +                try {, +                    if (!nextLatch.await(1000, TimeUnit.MILLISECONDS)) {, +                        throw new RuntimeException("it shouldn't have timed out");, +                    }, +                } catch (InterruptedException e) {, +                    throw new RuntimeException("it shouldn't have failed");, +                }, +        System.out.println("After subscribe: " + completedLatch.getCount());, +        assertEquals(1, completedLatch.getCount());, +        nextLatch.countDown();, +        completedLatch.await(1000, TimeUnit.MILLISECONDS);]