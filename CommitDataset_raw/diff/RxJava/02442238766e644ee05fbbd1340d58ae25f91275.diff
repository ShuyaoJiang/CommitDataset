[+++ b/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java, +            long r = Math.min(emitted.get(), n);, +            request(r);, +            emitted.addAndGet(-r);, +++ b/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java, +            long r = Math.min(emitted.get(), n);, +            request(r);, +            emitted.addAndGet(-r);, +++ b/src/main/java/rx/internal/operators/OnSubscribeRefCount.java, +                doSubscribe(subscriber, baseSubscription);, +                    doSubscribe(subscriber, baseSubscription);, +    void doSubscribe(final Subscriber<? super T> subscriber, final CompositeSubscription currentBase) {, +        // handle unsubscribing from the base subscription, +        subscriber.add(disconnect(currentBase));, +        , +        source.unsafeSubscribe(new Subscriber<T>(subscriber) {, +            @Override, +            public void onError(Throwable e) {, +                cleanup();, +                subscriber.onError(e);, +            }, +            @Override, +            public void onNext(T t) {, +                subscriber.onNext(t);, +            }, +            @Override, +            public void onCompleted() {, +                cleanup();, +                subscriber.onCompleted();, +            }, +            void cleanup() {, +                lock.lock();, +                try {, +                    if (baseSubscription == currentBase) {, +                        baseSubscription.unsubscribe();, +                        baseSubscription = new CompositeSubscription();, +                        subscriptionCount.set(0);, +                    }, +                } finally {, +                    lock.unlock();, +                }, +            }, +        });, +    }, +, +    private Subscription disconnect(final CompositeSubscription current) {, +                    if (baseSubscription == current) {, +                    }, +++ b/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java, +            long r = Math.min(emitted.get(), n);, +            request(r);, +            emitted.addAndGet(-r);, +++ b/src/main/java/rx/internal/operators/OnSubscribeRefCount.java, +                doSubscribe(subscriber, baseSubscription);, +                    doSubscribe(subscriber, baseSubscription);, +    void doSubscribe(final Subscriber<? super T> subscriber, final CompositeSubscription currentBase) {, +        // handle unsubscribing from the base subscription, +        subscriber.add(disconnect(currentBase));, +        , +        source.unsafeSubscribe(new Subscriber<T>(subscriber) {, +            @Override, +            public void onError(Throwable e) {, +                cleanup();, +                subscriber.onError(e);, +            }, +            @Override, +            public void onNext(T t) {, +                subscriber.onNext(t);, +            }, +            @Override, +            public void onCompleted() {, +                cleanup();, +                subscriber.onCompleted();, +            }, +            void cleanup() {, +                lock.lock();, +                try {, +                    if (baseSubscription == currentBase) {, +                        baseSubscription.unsubscribe();, +                        baseSubscription = new CompositeSubscription();, +                        subscriptionCount.set(0);, +                    }, +                } finally {, +                    lock.unlock();, +                }, +            }, +        });, +    }, +, +    private Subscription disconnect(final CompositeSubscription current) {, +                    if (baseSubscription == current) {, +                    }, +++ b/src/test/java/rx/internal/operators/OnSubscribeCombineLatestTest.java, +++ b/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java, +            long r = Math.min(emitted.get(), n);, +            request(r);, +            emitted.addAndGet(-r);, +++ b/src/main/java/rx/internal/operators/OnSubscribeRefCount.java, +                doSubscribe(subscriber, baseSubscription);, +                    doSubscribe(subscriber, baseSubscription);]