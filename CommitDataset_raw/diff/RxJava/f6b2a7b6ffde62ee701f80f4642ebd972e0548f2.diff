[+++ b/language-adaptors/rxjava-clojure/src/examples/clojure/rx/lang/clojure/examples/rx_examples.clj, +  (:import rx.Observable rx.subscriptions.Subscriptions), +      (Subscriptions/empty)))), +        (Subscriptions/create #(future-cancel f)))))), +        (Subscriptions/create #(future-cancel f)))))), +        (Subscriptions/create #(future-cancel f)))))), +        (Subscriptions/create #(future-cancel f)))))), +        (Subscriptions/create #(future-cancel f)))))), +        (Subscriptions/create #(future-cancel f)))))), +++ b/language-adaptors/rxjava-clojure/src/examples/clojure/rx/lang/clojure/examples/rx_examples.clj, +  (:import rx.Observable rx.subscriptions.Subscriptions), +      (Subscriptions/empty)))), +        (Subscriptions/create #(future-cancel f)))))), +        (Subscriptions/create #(future-cancel f)))))), +        (Subscriptions/create #(future-cancel f)))))), +        (Subscriptions/create #(future-cancel f)))))), +        (Subscriptions/create #(future-cancel f)))))), +        (Subscriptions/create #(future-cancel f)))))), +++ b/language-adaptors/rxjava-clojure/src/examples/clojure/rx/lang/clojure/examples/video_example.clj, +  (:import [rx Observable Observer Subscription] rx.subscriptions.Subscriptions)), +                         (Subscriptions/create #(future-cancel f)))))), +                       (Subscriptions/empty)))), +                       (Subscriptions/empty)))), +++ b/language-adaptors/rxjava-clojure/src/examples/clojure/rx/lang/clojure/examples/rx_examples.clj, +  (:import rx.Observable rx.subscriptions.Subscriptions), +      (Subscriptions/empty)))), +        (Subscriptions/create #(future-cancel f)))))), +        (Subscriptions/create #(future-cancel f)))))), +        (Subscriptions/create #(future-cancel f)))))), +        (Subscriptions/create #(future-cancel f)))))), +        (Subscriptions/create #(future-cancel f)))))), +        (Subscriptions/create #(future-cancel f)))))), +++ b/language-adaptors/rxjava-clojure/src/examples/clojure/rx/lang/clojure/examples/video_example.clj, +  (:import [rx Observable Observer Subscription] rx.subscriptions.Subscriptions)), +                         (Subscriptions/create #(future-cancel f)))))), +                       (Subscriptions/empty)))), +                       (Subscriptions/empty)))), +++ b/language-adaptors/rxjava-groovy/src/examples/groovy/rx/lang/groovy/examples/RxExamples.groovy, +import rx.subscriptions.Subscriptions;, +            // return an empty subscription since this blocks and thus, +            return Subscriptions.empty();, +        return Subscriptions.empty();, +            return Subscriptions.empty();]