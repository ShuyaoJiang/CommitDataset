[+++ b/language-adaptors/README.md, +, +NOTE: Changes are coming in regards to static and dynamic typing and how language adaptors are used., +, +See https://github.com/Netflix/RxJava/issues/208 and https://github.com/Netflix/RxJava/issues/204, +++ b/language-adaptors/README.md, +, +NOTE: Changes are coming in regards to static and dynamic typing and how language adaptors are used., +, +See https://github.com/Netflix/RxJava/issues/208 and https://github.com/Netflix/RxJava/issues/204, +++ b/rxjava-core/src/main/java/rx/Observable.java, +++ b/language-adaptors/README.md, +, +NOTE: Changes are coming in regards to static and dynamic typing and how language adaptors are used., +, +See https://github.com/Netflix/RxJava/issues/208 and https://github.com/Netflix/RxJava/issues/204, +++ b/rxjava-core/src/main/java/rx/Observable.java, +++ b/rxjava-core/src/main/java/rx/operators/OperationCombineLatest.java, +     * @param w0 The first source observable., +     * @param w1 The second source observable., +     * @param combineLatestFunction The aggregation function used to combine the source observable values., +        // used as an internal lock for handling the latest values and the completed state of each observer, +         * Store when an observer completes., +         * <p>, +         * Note that access to this set MUST BE SYNCHRONIZED via 'lockObject' above., +         * */, +        private final Set<CombineObserver<R, ?>> completed = new HashSet<CombineObserver<R, ?>>();, +, +        /**, +            synchronized(lockObject) {, +                // store that this CombineLatestObserver is completed, +                completed.add(w);, +                if (completed.size() == observers.size()) {, +        }, +                // if all observers in the 'observers' list have a value, invoke the combineLatestFunction, +                for (CombineObserver<R, ?> rw : observers) {, +                    if (!hasLatestValue.contains(rw)) {, +                }, +                // if we get to here this means all the queues have data, +            observer.onNext(combineLatestFunction.call(argsToCombineLatest));, +        @SuppressWarnings("unchecked"), +        /* mock calls don't do generics */]