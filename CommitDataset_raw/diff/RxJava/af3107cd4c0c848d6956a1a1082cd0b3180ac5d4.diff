[+++ b/src/main/java/io/reactivex/Flowable.java, +import io.reactivex.internal.operators.flowable.FlowableConcatMap.ErrorMode;, +        return new FlowableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE);, +        return new FlowableFlattenIterable<T, U>(this, mapper, prefetch);, +        return flatMapIterable(mapper, bufferSize());, +        return new FlowableFlattenIterable<T, U>(this, mapper, bufferSize);, +++ b/src/main/java/io/reactivex/Flowable.java, +import io.reactivex.internal.operators.flowable.FlowableConcatMap.ErrorMode;, +        return new FlowableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE);, +        return new FlowableFlattenIterable<T, U>(this, mapper, prefetch);, +        return flatMapIterable(mapper, bufferSize());, +        return new FlowableFlattenIterable<T, U>(this, mapper, bufferSize);, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableConcat.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/Flowable.java, +import io.reactivex.internal.operators.flowable.FlowableConcatMap.ErrorMode;, +        return new FlowableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE);, +        return new FlowableFlattenIterable<T, U>(this, mapper, prefetch);, +        return flatMapIterable(mapper, bufferSize());, +        return new FlowableFlattenIterable<T, U>(this, mapper, bufferSize);, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableConcat.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableMerge.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/Flowable.java, +import io.reactivex.internal.operators.flowable.FlowableConcatMap.ErrorMode;, +        return new FlowableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE);, +        return new FlowableFlattenIterable<T, U>(this, mapper, prefetch);, +        return flatMapIterable(mapper, bufferSize());, +        return new FlowableFlattenIterable<T, U>(this, mapper, bufferSize);, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableConcat.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableMerge.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAll.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/Flowable.java, +import io.reactivex.internal.operators.flowable.FlowableConcatMap.ErrorMode;, +        return new FlowableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE);, +        return new FlowableFlattenIterable<T, U>(this, mapper, prefetch);, +        return flatMapIterable(mapper, bufferSize());, +        return new FlowableFlattenIterable<T, U>(this, mapper, bufferSize);, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableConcat.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableMerge.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAll.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAmb.java, +            if (!SubscriptionHelper.validate(n)) {, +            } else if (SubscriptionHelper.validate(n)) {, +++ b/src/main/java/io/reactivex/Flowable.java, +import io.reactivex.internal.operators.flowable.FlowableConcatMap.ErrorMode;, +        return new FlowableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE);, +        return new FlowableFlattenIterable<T, U>(this, mapper, prefetch);, +        return flatMapIterable(mapper, bufferSize());, +        return new FlowableFlattenIterable<T, U>(this, mapper, bufferSize);, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableConcat.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableMerge.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAll.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAmb.java, +            if (!SubscriptionHelper.validate(n)) {, +            } else if (SubscriptionHelper.validate(n)) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAny.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/Flowable.java, +import io.reactivex.internal.operators.flowable.FlowableConcatMap.ErrorMode;, +        return new FlowableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE);, +        return new FlowableFlattenIterable<T, U>(this, mapper, prefetch);, +        return flatMapIterable(mapper, bufferSize());, +        return new FlowableFlattenIterable<T, U>(this, mapper, bufferSize);, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableConcat.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableMerge.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAll.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAmb.java, +            if (!SubscriptionHelper.validate(n)) {, +            } else if (SubscriptionHelper.validate(n)) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAny.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBuffer.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +            if (SubscriptionHelper.validate(n)) {, +            if (SubscriptionHelper.validate(this.s, s)) {, +            if (!SubscriptionHelper.validate(n)) {, +++ b/src/main/java/io/reactivex/Flowable.java, +import io.reactivex.internal.operators.flowable.FlowableConcatMap.ErrorMode;, +        return new FlowableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE);, +        return new FlowableFlattenIterable<T, U>(this, mapper, prefetch);, +        return flatMapIterable(mapper, bufferSize());, +        return new FlowableFlattenIterable<T, U>(this, mapper, bufferSize);, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableConcat.java, +            if (SubscriptionHelper.validate(this.s, s)) {, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableMerge.java, +            if (SubscriptionHelper.validate(this.s, s)) {]