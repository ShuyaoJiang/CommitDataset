[+++ b/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java, +        if (sources.size() > RxRingBuffer.SIZE) {, +            // For design simplicity this is limited to RxRingBuffer.SIZE. If more are really needed we'll need to, +            // adjust the design of how RxRingBuffer is used in the implementation below., +            throw new IllegalArgumentException("More than RxRingBuffer.SIZE sources to combineLatest is not supported.");, +++ b/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java, +        if (sources.size() > RxRingBuffer.SIZE) {, +            // For design simplicity this is limited to RxRingBuffer.SIZE. If more are really needed we'll need to, +            // adjust the design of how RxRingBuffer is used in the implementation below., +            throw new IllegalArgumentException("More than RxRingBuffer.SIZE sources to combineLatest is not supported.");, +++ b/src/main/java/rx/subjects/TestSubject.java, +import java.util.concurrent.TimeUnit;, +, +     * Schedule a call to {@code onCompleted} at relative time of "now()" on TestScheduler., +        onCompleted(innerScheduler.now());, +     * @param timeInMilliseconds, +    public void onCompleted(long timeInMilliseconds) {, +        }, timeInMilliseconds, TimeUnit.MILLISECONDS);, +     * Schedule a call to {@code onError} at relative time of "now()" on TestScheduler., +        onError(e, innerScheduler.now());, +     * @param timeInMilliseconds, +    public void onError(final Throwable e, long timeInMilliseconds) {, +        }, timeInMilliseconds, TimeUnit.MILLISECONDS);, +     * Schedule a call to {@code onNext} at relative time of "now()" on TestScheduler., +        onNext(v, innerScheduler.now());, +     * @param timeInMilliseconds, +    public void onNext(final T v, long timeInMilliseconds) {, +        }, timeInMilliseconds, TimeUnit.MILLISECONDS);, +++ b/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java, +        if (sources.size() > RxRingBuffer.SIZE) {, +            // For design simplicity this is limited to RxRingBuffer.SIZE. If more are really needed we'll need to, +            // adjust the design of how RxRingBuffer is used in the implementation below., +            throw new IllegalArgumentException("More than RxRingBuffer.SIZE sources to combineLatest is not supported.");, +++ b/src/main/java/rx/subjects/TestSubject.java, +import java.util.concurrent.TimeUnit;, +, +     * Schedule a call to {@code onCompleted} at relative time of "now()" on TestScheduler., +        onCompleted(innerScheduler.now());, +     * @param timeInMilliseconds, +    public void onCompleted(long timeInMilliseconds) {, +        }, timeInMilliseconds, TimeUnit.MILLISECONDS);, +     * Schedule a call to {@code onError} at relative time of "now()" on TestScheduler., +        onError(e, innerScheduler.now());, +     * @param timeInMilliseconds, +    public void onError(final Throwable e, long timeInMilliseconds) {, +        }, timeInMilliseconds, TimeUnit.MILLISECONDS);, +     * Schedule a call to {@code onNext} at relative time of "now()" on TestScheduler., +        onNext(v, innerScheduler.now());, +     * @param timeInMilliseconds, +    public void onNext(final T v, long timeInMilliseconds) {, +        }, timeInMilliseconds, TimeUnit.MILLISECONDS);, +++ /dev/null]