[+++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Scheduler.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Scheduler.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Subscription.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Scheduler.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Subscription.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/concurrency/ImmediateScheduler.scala, +package rx.lang.scala.concurrency, +, +import rx.lang.scala.Scheduler, +, +object ImmediateScheduler {, +, +  /**, +   * Returns a [[rx.lang.scala.Scheduler]] that executes work immediately on the current thread., +   */, +  def apply(): ImmediateScheduler =  {, +    new ImmediateScheduler(rx.concurrency.Schedulers.immediate()), +  }, +}, +, +class ImmediateScheduler private[scala] (val asJavaScheduler: rx.concurrency.ImmediateScheduler), +  extends Scheduler {}, +, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Scheduler.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Subscription.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/concurrency/ImmediateScheduler.scala, +package rx.lang.scala.concurrency, +, +import rx.lang.scala.Scheduler, +, +object ImmediateScheduler {, +, +  /**, +   * Returns a [[rx.lang.scala.Scheduler]] that executes work immediately on the current thread., +   */, +  def apply(): ImmediateScheduler =  {, +    new ImmediateScheduler(rx.concurrency.Schedulers.immediate()), +  }, +}, +, +class ImmediateScheduler private[scala] (val asJavaScheduler: rx.concurrency.ImmediateScheduler), +  extends Scheduler {}, +, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/concurrency/Schedulers.scala, +import rx.lang.scala.{Subscription, Scheduler}, +import rx.concurrency.Schedulers, +, +/**, + * Provides constructors for Schedulers., + */, +object Scheduler {, +  private class WrapJavaScheduler(val asJavaScheduler: rx.Scheduler) extends Scheduler, +, +  /**, +   * Constructs a Scala Scheduler from a Java Scheduler., +   */, +  def apply(s: rx.Scheduler): Scheduler = new WrapJavaScheduler(s), +}, +, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Scheduler.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Subscription.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/concurrency/ImmediateScheduler.scala, +package rx.lang.scala.concurrency, +, +import rx.lang.scala.Scheduler, +, +object ImmediateScheduler {, +, +  /**, +   * Returns a [[rx.lang.scala.Scheduler]] that executes work immediately on the current thread., +   */, +  def apply(): ImmediateScheduler =  {, +    new ImmediateScheduler(rx.concurrency.Schedulers.immediate()), +  }, +}, +, +class ImmediateScheduler private[scala] (val asJavaScheduler: rx.concurrency.ImmediateScheduler), +  extends Scheduler {}, +, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/concurrency/Schedulers.scala, +import rx.lang.scala.{Subscription, Scheduler}, +import rx.concurrency.Schedulers, +, +/**, + * Provides constructors for Schedulers., + */, +object Scheduler {, +  private class WrapJavaScheduler(val asJavaScheduler: rx.Scheduler) extends Scheduler, +, +  /**, +   * Constructs a Scala Scheduler from a Java Scheduler., +   */, +  def apply(s: rx.Scheduler): Scheduler = new WrapJavaScheduler(s), +}, +, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/subscriptions/BooleanSubscription.scala]