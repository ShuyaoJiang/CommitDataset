[+++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.schedulers.TimeInterval;, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.schedulers.TimeInterval;, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationReplay.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.schedulers.TimeInterval;, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationReplay.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationSkipLast.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.schedulers.TimeInterval;, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationReplay.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationSkipLast.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationTakeLast.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.schedulers.TimeInterval;, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationReplay.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationSkipLast.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationTakeLast.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationTimeInterval.java, +import rx.schedulers.TimeInterval;, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.schedulers.TimeInterval;, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationReplay.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationSkipLast.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationTakeLast.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationTimeInterval.java, +import rx.schedulers.TimeInterval;, +++ b/rxjava-core/src/main/java/rx/operators/OperatorTimestamp.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.schedulers.TimeInterval;, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationReplay.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationSkipLast.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationTakeLast.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/operators/OperationTimeInterval.java, +import rx.schedulers.TimeInterval;, +++ b/rxjava-core/src/main/java/rx/operators/OperatorTimestamp.java, +import rx.schedulers.Timestamped;, +++ b/rxjava-core/src/main/java/rx/schedulers/TimeInterval.java, +/**, + * Copyright 2014 Netflix, Inc., + * , + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + * , + * http://www.apache.org/licenses/LICENSE-2.0, + * , + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package rx.schedulers;, +, +public class TimeInterval<T> {, +    private final long intervalInMilliseconds;, +    private final T value;, +, +    public TimeInterval(long intervalInMilliseconds, T value) {, +        this.value = value;, +        this.intervalInMilliseconds = intervalInMilliseconds;, +    }, +, +    /**, +     * Returns the interval in milliseconds., +     * , +     * @return interval in milliseconds, +     */, +    public long getIntervalInMilliseconds() {, +        return intervalInMilliseconds;, +    }, +, +    /**, +     * Returns the value., +     * ]