[+++ b/CHANGES.md, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.14.1-SNAPSHOT, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.14.1-SNAPSHOT, +++ /dev/null, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.14.1-SNAPSHOT, +++ /dev/null, +++ b/rxjava-contrib/rxjava-apache-http/src/main/java/rx/apache/http/ObservableHttp.java, +                parentSubscription.add(Subscriptions.create(client.execute(requestProducer, new ResponseConsumerDelegate(observer, parentSubscription),, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.14.1-SNAPSHOT, +++ /dev/null, +++ b/rxjava-contrib/rxjava-apache-http/src/main/java/rx/apache/http/ObservableHttp.java, +                parentSubscription.add(Subscriptions.create(client.execute(requestProducer, new ResponseConsumerDelegate(observer, parentSubscription),, +++ b/rxjava-contrib/rxjava-apache-http/src/main/java/rx/apache/http/consumers/ResponseConsumerDelegate.java, +        if (response.getFirstHeader("Content-Type").getValue().equals("text/event-stream")) {, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.14.1-SNAPSHOT, +++ /dev/null, +++ b/rxjava-contrib/rxjava-apache-http/src/main/java/rx/apache/http/ObservableHttp.java, +                parentSubscription.add(Subscriptions.create(client.execute(requestProducer, new ResponseConsumerDelegate(observer, parentSubscription),, +++ b/rxjava-contrib/rxjava-apache-http/src/main/java/rx/apache/http/consumers/ResponseConsumerDelegate.java, +        if (response.getFirstHeader("Content-Type").getValue().equals("text/event-stream")) {, +++ b/rxjava-contrib/rxjava-apache-http/src/test/java/rx/apache/http/examples/ExampleObservableHttp.java, +        for (int i = 0; i < 5; i++) {, +            final int c = i + 1;, +            ObservableHttp.createRequest(HttpAsyncMethods.createGet("http://ec2-54-211-91-164.compute-1.amazonaws.com:8077/eventbus.stream?topic=hystrix-metrics"), client), +                            System.out.println("Response [" + c + "]: " + resp + " (" + resp.length() + ")");, +    }, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.14.1-SNAPSHOT, +++ /dev/null, +++ b/rxjava-contrib/rxjava-apache-http/src/main/java/rx/apache/http/ObservableHttp.java, +                parentSubscription.add(Subscriptions.create(client.execute(requestProducer, new ResponseConsumerDelegate(observer, parentSubscription),, +++ b/rxjava-contrib/rxjava-apache-http/src/main/java/rx/apache/http/consumers/ResponseConsumerDelegate.java, +        if (response.getFirstHeader("Content-Type").getValue().equals("text/event-stream")) {, +++ b/rxjava-contrib/rxjava-apache-http/src/test/java/rx/apache/http/examples/ExampleObservableHttp.java, +        for (int i = 0; i < 5; i++) {, +            final int c = i + 1;, +            ObservableHttp.createRequest(HttpAsyncMethods.createGet("http://ec2-54-211-91-164.compute-1.amazonaws.com:8077/eventbus.stream?topic=hystrix-metrics"), client), +                            System.out.println("Response [" + c + "]: " + resp + " (" + resp.length() + ")");, +    }, +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * Converts the elements of an observable sequence to the specified type., +     *, +     * @return An observable sequence that contains each element of the source, +     *         sequence converted to the specified type., +     *, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh211842(v=vs.103).aspx">MSDN: Observable.Cast</a>, +     */, +    public <R> Observable<R> cast() {, +        return map(new Func1<T, R>() {, +            @SuppressWarnings("unchecked"), +            public R call(T t) {, +                return (R) t;, +            }, +        });, +    }, +, +    /**]