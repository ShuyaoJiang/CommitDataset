[+++ b/language-adaptors/rxjava-jruby/src/main/resources/rx/lang/jruby/interop.rb, +          Java::RxUtilFunctions::Action         => Java::RxLangJruby::JRubyActionWrapper,, +          Java::Rx::Observable::OnSubscribeFunc => false, +                # Skip OnSubscribeFuncs, +                next if constructor && constructor.last == false, +, +              [method_name, underscore(method_name)].uniq.each do |name|, +++ b/language-adaptors/rxjava-jruby/src/main/resources/rx/lang/jruby/interop.rb, +          Java::RxUtilFunctions::Action         => Java::RxLangJruby::JRubyActionWrapper,, +          Java::Rx::Observable::OnSubscribeFunc => false, +                # Skip OnSubscribeFuncs, +                next if constructor && constructor.last == false, +, +              [method_name, underscore(method_name)].uniq.each do |name|, +++ b/language-adaptors/rxjava-jruby/src/spec/ruby/rx/lang/jruby/interop_spec.rb, +    it "doesn't wrap OnSubscribeFunc arguments" do, +      proc = lambda {|observer| observer.onNext("hi")}, +      Java::Rx::Observable.should_not_receive(:create_without_wrapping), +      Java::Rx::Observable.create(proc).should be_a(Java::Rx::Observable), +    end, +, +      observable., +          should_receive(:finally_do_without_wrapping)., +          with(kind_of(Java::RxLangJruby::JRubyActionWrapper))., +          and_call_original, +]