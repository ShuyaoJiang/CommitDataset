[+++ b/README.md, +<a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">and JRuby</a>. , +++ b/README.md, +<a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">and JRuby</a>. , +++ b/rxjava-core/src/main/java/rx/Observable.java, +    }, +++ b/README.md, +<a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">and JRuby</a>. , +++ b/rxjava-core/src/main/java/rx/Observable.java, +    }, +++ b/rxjava-core/src/main/java/rx/operators/OperationFilter.java, +                        if (predicate.call(value)) {, +                    return t1.equals("two");, +++ b/README.md, +<a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">and JRuby</a>. , +++ b/rxjava-core/src/main/java/rx/Observable.java, +    }, +++ b/rxjava-core/src/main/java/rx/operators/OperationFilter.java, +                        if (predicate.call(value)) {, +                    return t1.equals("two");, +++ b/rxjava-core/src/main/java/rx/operators/OperationZip.java, +++ b/README.md, +<a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">and JRuby</a>. , +++ b/rxjava-core/src/main/java/rx/Observable.java, +    }, +++ b/rxjava-core/src/main/java/rx/operators/OperationFilter.java, +                        if (predicate.call(value)) {, +                    return t1.equals("two");, +++ b/rxjava-core/src/main/java/rx/operators/OperationZip.java, +++ b/rxjava-core/src/main/java/rx/subjects/Subject.java, +            Subject<Integer> subject = Subject.create();, +++ b/README.md, +<a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">and JRuby</a>. , +++ b/rxjava-core/src/main/java/rx/Observable.java, +    }, +++ b/rxjava-core/src/main/java/rx/operators/OperationFilter.java, +                        if (predicate.call(value)) {, +                    return t1.equals("two");, +++ b/rxjava-core/src/main/java/rx/operators/OperationZip.java, +++ b/rxjava-core/src/main/java/rx/subjects/Subject.java, +            Subject<Integer> subject = Subject.create();, +++ b/rxjava-core/src/main/java/rx/util/SynchronizedObserver.java, +            onCompleted, onError, onNext]