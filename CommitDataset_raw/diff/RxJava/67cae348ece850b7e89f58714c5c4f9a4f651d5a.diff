[+++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +  def publish: ConnectableObservable[T] = {, +++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +  def publish: ConnectableObservable[T] = {, +++ b/language-adaptors/rxjava-scala/src/test/scala/rx/lang/scala/CompletenessTest.scala, +      "startWith(Iterable[T])" -> "[unnecessary because we can just use `++` instead]",, +      "startWith(" + _ + ")" -> "[unnecessary because we can just use `++` instead]", +++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +  def publish: ConnectableObservable[T] = {, +++ b/language-adaptors/rxjava-scala/src/test/scala/rx/lang/scala/CompletenessTest.scala, +      "startWith(Iterable[T])" -> "[unnecessary because we can just use `++` instead]",, +      "startWith(" + _ + ")" -> "[unnecessary because we can just use `++` instead]", +++ b/rxjava-core/src/main/java/rx/Scheduler.java, +            final long startInNanos = TimeUnit.MILLISECONDS.toNanos(now()) + unit.toNanos(initialDelay);, +                long count = 0;, +                        long nextTick = startInNanos + (++count * periodInNanos);, +                        schedule(this, nextTick - TimeUnit.MILLISECONDS.toNanos(now()), TimeUnit.NANOSECONDS);]