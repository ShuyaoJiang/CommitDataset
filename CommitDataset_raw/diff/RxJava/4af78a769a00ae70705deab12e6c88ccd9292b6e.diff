[+++ b/src/main/java/io/reactivex/Observable.java, +++ b/src/main/java/io/reactivex/Observable.java, +++ b/src/main/java/io/reactivex/internal/functions/ObjectHelper.java, +, +    /**, +     * Trap null-check attempts on primitives., +     * @param value the value to check, +     * @param message the message to print, +     * @return the value, +     * @deprecated this method should not be used as there is no need, +     * to check primitives for nullness., +     */, +    @Deprecated, +    public static long requireNonNull(long value, String message) {, +        throw new InternalError("Null check on a primitive: " + message);, +    }, +++ b/src/main/java/io/reactivex/Observable.java, +++ b/src/main/java/io/reactivex/internal/functions/ObjectHelper.java, +, +    /**, +     * Trap null-check attempts on primitives., +     * @param value the value to check, +     * @param message the message to print, +     * @return the value, +     * @deprecated this method should not be used as there is no need, +     * to check primitives for nullness., +     */, +    @Deprecated, +    public static long requireNonNull(long value, String message) {, +        throw new InternalError("Null check on a primitive: " + message);, +    }, +++ b/src/test/java/io/reactivex/internal/functions/ObjectHelperTest.java, +, +    @SuppressWarnings("deprecation"), +    @Test(expected = InternalError.class), +    public void requireNonNullPrimitive() {, +        ObjectHelper.requireNonNull(0, "value");, +    }, +++ b/src/main/java/io/reactivex/Observable.java, +++ b/src/main/java/io/reactivex/internal/functions/ObjectHelper.java, +, +    /**, +     * Trap null-check attempts on primitives., +     * @param value the value to check, +     * @param message the message to print, +     * @return the value, +     * @deprecated this method should not be used as there is no need, +     * to check primitives for nullness., +     */, +    @Deprecated, +    public static long requireNonNull(long value, String message) {, +        throw new InternalError("Null check on a primitive: " + message);, +    }, +++ b/src/test/java/io/reactivex/internal/functions/ObjectHelperTest.java, +, +    @SuppressWarnings("deprecation"), +    @Test(expected = InternalError.class), +    public void requireNonNullPrimitive() {, +        ObjectHelper.requireNonNull(0, "value");, +    }, +++ b/src/test/java/io/reactivex/internal/operators/flowable/FlowableCreateTest.java, +    @SuppressWarnings("rawtypes")]