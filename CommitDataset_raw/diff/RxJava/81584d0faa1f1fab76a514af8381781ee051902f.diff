[+++ b/gradle.properties, +version=0.12.2-SNAPSHOT, +++ b/gradle.properties, +version=0.12.2-SNAPSHOT, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/observables/SwingObservable.java, +import java.awt.Point;, +     * Creates an observable corresponding to relative mouse motion., +     * @param component, +     *            The component to register the observable for., +     * @return A point whose x and y coordinate represent the relative horizontal and vertical mouse motion., +     */, +    public static Observable<Point> fromRelativeMouseMotion(Component component) {, +        return MouseEventSource.fromRelativeMouseMotion(component);, +    }, +    , +    /**, +++ b/gradle.properties, +version=0.12.2-SNAPSHOT, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/observables/SwingObservable.java, +import java.awt.Point;, +     * Creates an observable corresponding to relative mouse motion., +     * @param component, +     *            The component to register the observable for., +     * @return A point whose x and y coordinate represent the relative horizontal and vertical mouse motion., +     */, +    public static Observable<Point> fromRelativeMouseMotion(Component component) {, +        return MouseEventSource.fromRelativeMouseMotion(component);, +    }, +    , +    /**, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/AbstractButtonSource.java, +     * @see rx.observables.SwingObservable#fromButtonAction, +++ b/gradle.properties, +version=0.12.2-SNAPSHOT, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/observables/SwingObservable.java, +import java.awt.Point;, +     * Creates an observable corresponding to relative mouse motion., +     * @param component, +     *            The component to register the observable for., +     * @return A point whose x and y coordinate represent the relative horizontal and vertical mouse motion., +     */, +    public static Observable<Point> fromRelativeMouseMotion(Component component) {, +        return MouseEventSource.fromRelativeMouseMotion(component);, +    }, +    , +    /**, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/AbstractButtonSource.java, +     * @see rx.observables.SwingObservable#fromButtonAction, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/ComponentEventSource.java, +     * @see rx.observables.SwingObservable#fromComponentEvents, +     * @see SwingObservable#fromResizing, +++ b/gradle.properties, +version=0.12.2-SNAPSHOT, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/observables/SwingObservable.java, +import java.awt.Point;, +     * Creates an observable corresponding to relative mouse motion., +     * @param component, +     *            The component to register the observable for., +     * @return A point whose x and y coordinate represent the relative horizontal and vertical mouse motion., +     */, +    public static Observable<Point> fromRelativeMouseMotion(Component component) {, +        return MouseEventSource.fromRelativeMouseMotion(component);, +    }, +    , +    /**, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/AbstractButtonSource.java, +     * @see rx.observables.SwingObservable#fromButtonAction, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/ComponentEventSource.java, +     * @see rx.observables.SwingObservable#fromComponentEvents, +     * @see SwingObservable#fromResizing, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/KeyEventSource.java, +import rx.util.functions.Func1;, +     * @see rx.observables.SwingObservable#fromKeyEvents(Component), +     * @see rx.observables.SwingObservable#fromPressedKeys(Component), +        class CollectKeys implements Func2<Set<Integer>, KeyEvent, Set<Integer>>{, +        }, +        , +        Observable<KeyEvent> filteredKeyEvents = fromKeyEventsOf(component).filter(new Func1<KeyEvent, Boolean>() {, +            @Override, +            public Boolean call(KeyEvent event) {, +                return event.getID() == KeyEvent.KEY_PRESSED || event.getID() == KeyEvent.KEY_RELEASED;, +            }, +        , +        return filteredKeyEvents.scan(Collections.<Integer>emptySet(), new CollectKeys());, +            fireKeyEvent(keyEvent(KeyEvent.VK_UNDEFINED, KeyEvent.KEY_TYPED));, +++ b/gradle.properties, +version=0.12.2-SNAPSHOT, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/observables/SwingObservable.java, +import java.awt.Point;, +     * Creates an observable corresponding to relative mouse motion., +     * @param component, +     *            The component to register the observable for., +     * @return A point whose x and y coordinate represent the relative horizontal and vertical mouse motion., +     */, +    public static Observable<Point> fromRelativeMouseMotion(Component component) {, +        return MouseEventSource.fromRelativeMouseMotion(component);, +    }, +    , +    /**, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/AbstractButtonSource.java]