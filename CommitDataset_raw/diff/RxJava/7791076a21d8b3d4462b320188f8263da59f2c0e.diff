[+++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAny.java, +import io.reactivex.plugins.RxJavaPlugins;, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAny.java, +import io.reactivex.plugins.RxJavaPlugins;, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAnySingle.java, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAny.java, +import io.reactivex.plugins.RxJavaPlugins;, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAnySingle.java, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMap.java, +import io.reactivex.plugins.RxJavaPlugins;, +                RxJavaPlugins.onError(t);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAny.java, +import io.reactivex.plugins.RxJavaPlugins;, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAnySingle.java, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMap.java, +import io.reactivex.plugins.RxJavaPlugins;, +                RxJavaPlugins.onError(t);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnBackpressureDrop.java, +import io.reactivex.plugins.RxJavaPlugins;, +                RxJavaPlugins.onError(t);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAny.java, +import io.reactivex.plugins.RxJavaPlugins;, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAnySingle.java, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMap.java, +import io.reactivex.plugins.RxJavaPlugins;, +                RxJavaPlugins.onError(t);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnBackpressureDrop.java, +import io.reactivex.plugins.RxJavaPlugins;, +                RxJavaPlugins.onError(t);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableSingle.java, +import io.reactivex.plugins.RxJavaPlugins;, +                RxJavaPlugins.onError(t);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAny.java, +import io.reactivex.plugins.RxJavaPlugins;, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableAnySingle.java, +            if (done) {, +                RxJavaPlugins.onError(t);, +                return;, +            }, +, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMap.java, +import io.reactivex.plugins.RxJavaPlugins;, +                RxJavaPlugins.onError(t);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnBackpressureDrop.java, +import io.reactivex.plugins.RxJavaPlugins;, +                RxJavaPlugins.onError(t);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableSingle.java, +import io.reactivex.plugins.RxJavaPlugins;, +                RxJavaPlugins.onError(t);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableSingleMaybe.java]