[+++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorNext.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorNext.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorReturn.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorNext.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorReturn.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRetryBiPredicate.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorNext.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorReturn.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRetryBiPredicate.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRetryPredicate.java, +                    actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorNext.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorReturn.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRetryBiPredicate.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRetryPredicate.java, +                    actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableUsing.java, +                EmptySubscription.error(new CompositeException(e, ex), s);, +                    actual.onError(new CompositeException(t, innerError));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorNext.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorReturn.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRetryBiPredicate.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRetryPredicate.java, +                    actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableUsing.java, +                EmptySubscription.error(new CompositeException(e, ex), s);, +                    actual.onError(new CompositeException(t, innerError));, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableDistinct.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorNext.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorReturn.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRetryBiPredicate.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRetryPredicate.java, +                    actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableUsing.java, +                EmptySubscription.error(new CompositeException(e, ex), s);, +                    actual.onError(new CompositeException(t, innerError));, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableDistinct.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableOnErrorNext.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorNext.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorReturn.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRetryBiPredicate.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRetryPredicate.java, +                    actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableUsing.java, +                EmptySubscription.error(new CompositeException(e, ex), s);, +                    actual.onError(new CompositeException(t, innerError));, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableDistinct.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableOnErrorNext.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableOnErrorReturn.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorNext.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorReturn.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRetryBiPredicate.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRetryPredicate.java, +                    actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableUsing.java, +                EmptySubscription.error(new CompositeException(e, ex), s);, +                    actual.onError(new CompositeException(t, innerError));, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableDistinct.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableOnErrorNext.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableOnErrorReturn.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableRetryBiPredicate.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorNext.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorReturn.java, +                actual.onError(new CompositeException(t, e));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRetryBiPredicate.java]