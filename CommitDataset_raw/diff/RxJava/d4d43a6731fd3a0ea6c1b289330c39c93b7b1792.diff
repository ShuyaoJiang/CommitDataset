[+++ b/language-adaptors/rxjava-scala/src/test/scala/rx/lang/scala/CompletenessTest.scala, +      "asObservable()" -> unnecessary,, +      "cast(Class[R])" -> unnecessary,, +      "collect(R, Action2[R, _ >: T])" -> unnecessary,, +      "doOnEach(Action1[Notification[_ >: T]])" -> "[use `doOnEach(T => Unit, Throwable => Unit, () => Unit)`]",, +      "ofType(Class[R])" -> "[use `filter(_.isInstanceOf[Class])",, +      "amb(Iterable[_ <: Observable[_ <: T]])" -> "amb(Observable[T]*)",, +      "from(Array[T])" -> "items(T*)",, +      "from(<repeated...>[T])" -> "items(T*)",, +      "from(Array[T], Scheduler)" -> "from(Iterable[T], Scheduler)",]