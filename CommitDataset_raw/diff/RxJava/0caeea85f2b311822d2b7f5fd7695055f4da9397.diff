[+++ b/src/main/java/rx/observers/TestSubscriber.java, +    @Experimental, +    public static <T> TestSubscriber<T> create() {, +        return new TestSubscriber<T>();, +    }, +    , +    @Experimental, +    public static <T> TestSubscriber<T> create(long initialRequest) {, +        return new TestSubscriber<T>(initialRequest);, +    }, +    , +    @Experimental, +    public static <T> TestSubscriber<T> create(Observer<T> delegate, long initialRequest) {, +        return new TestSubscriber<T>(delegate, initialRequest);, +    }, +    , +    @Experimental, +    public static <T> TestSubscriber<T> create(Subscriber<T> delegate) {, +        return new TestSubscriber<T>(delegate);, +    }, +    , +    @Experimental, +    public static <T> TestSubscriber<T> create(Observer<T> delegate) {, +        return new TestSubscriber<T>(delegate);, +    }, +    , +++ b/src/main/java/rx/observers/TestSubscriber.java, +    @Experimental, +    public static <T> TestSubscriber<T> create() {, +        return new TestSubscriber<T>();, +    }, +    , +    @Experimental, +    public static <T> TestSubscriber<T> create(long initialRequest) {, +        return new TestSubscriber<T>(initialRequest);, +    }, +    , +    @Experimental, +    public static <T> TestSubscriber<T> create(Observer<T> delegate, long initialRequest) {, +        return new TestSubscriber<T>(delegate, initialRequest);, +    }, +    , +    @Experimental, +    public static <T> TestSubscriber<T> create(Subscriber<T> delegate) {, +        return new TestSubscriber<T>(delegate);, +    }, +    , +    @Experimental, +    public static <T> TestSubscriber<T> create(Observer<T> delegate) {, +        return new TestSubscriber<T>(delegate);, +    }, +    , +++ b/src/test/java/rx/internal/operators/OnSubscribeRangeTest.java, +        TestSubscriber<Integer> ts = TestSubscriber.create();, +        TestSubscriber<Integer> ts = TestSubscriber.create();, +        TestSubscriber<Integer> ts = TestSubscriber.create();, +        TestSubscriber<Integer> ts = TestSubscriber.create();, +        TestSubscriber<Integer> ts = TestSubscriber.create();]