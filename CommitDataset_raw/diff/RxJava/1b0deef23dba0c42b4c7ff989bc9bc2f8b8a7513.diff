[+++ b/CHANGES.md, +### Version 0.14.9 ([Maven Central](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.netflix.rxjava%22%20AND%20v%3A%220.14.9%22)) ###, +, +* [Pull 477](https://github.com/Netflix/RxJava/pull/477) BugFix: CompositeSubscription, +* [Pull 476](https://github.com/Netflix/RxJava/pull/476) BugFix: Don't emit null onComplete when no onNext received in AsyncSubject, +* [Pull 474](https://github.com/Netflix/RxJava/pull/474) BugFix: Reduce an empty observable, +* [Pull 474](https://github.com/Netflix/RxJava/pull/474) BugFix: non-deterministic unit test, +* [Pull 472](https://github.com/Netflix/RxJava/pull/472) BugFix: Issue 431 Unsubscribe with Schedulers.newThread, +* [Pull 470](https://github.com/Netflix/RxJava/pull/470) Operator: Last, +, +++ b/CHANGES.md, +### Version 0.14.9 ([Maven Central](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.netflix.rxjava%22%20AND%20v%3A%220.14.9%22)) ###, +, +* [Pull 477](https://github.com/Netflix/RxJava/pull/477) BugFix: CompositeSubscription, +* [Pull 476](https://github.com/Netflix/RxJava/pull/476) BugFix: Don't emit null onComplete when no onNext received in AsyncSubject, +* [Pull 474](https://github.com/Netflix/RxJava/pull/474) BugFix: Reduce an empty observable, +* [Pull 474](https://github.com/Netflix/RxJava/pull/474) BugFix: non-deterministic unit test, +* [Pull 472](https://github.com/Netflix/RxJava/pull/472) BugFix: Issue 431 Unsubscribe with Schedulers.newThread, +* [Pull 470](https://github.com/Netflix/RxJava/pull/470) Operator: Last, +, +++ b/gradle.properties, +version=0.14.10-SNAPSHOT, +++ b/CHANGES.md, +### Version 0.14.9 ([Maven Central](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.netflix.rxjava%22%20AND%20v%3A%220.14.9%22)) ###, +, +* [Pull 477](https://github.com/Netflix/RxJava/pull/477) BugFix: CompositeSubscription, +* [Pull 476](https://github.com/Netflix/RxJava/pull/476) BugFix: Don't emit null onComplete when no onNext received in AsyncSubject, +* [Pull 474](https://github.com/Netflix/RxJava/pull/474) BugFix: Reduce an empty observable, +* [Pull 474](https://github.com/Netflix/RxJava/pull/474) BugFix: non-deterministic unit test, +* [Pull 472](https://github.com/Netflix/RxJava/pull/472) BugFix: Issue 431 Unsubscribe with Schedulers.newThread, +* [Pull 470](https://github.com/Netflix/RxJava/pull/470) Operator: Last, +, +++ b/gradle.properties, +version=0.14.10-SNAPSHOT, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +++ b/CHANGES.md, +### Version 0.14.9 ([Maven Central](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.netflix.rxjava%22%20AND%20v%3A%220.14.9%22)) ###, +, +* [Pull 477](https://github.com/Netflix/RxJava/pull/477) BugFix: CompositeSubscription, +* [Pull 476](https://github.com/Netflix/RxJava/pull/476) BugFix: Don't emit null onComplete when no onNext received in AsyncSubject, +* [Pull 474](https://github.com/Netflix/RxJava/pull/474) BugFix: Reduce an empty observable, +* [Pull 474](https://github.com/Netflix/RxJava/pull/474) BugFix: non-deterministic unit test, +* [Pull 472](https://github.com/Netflix/RxJava/pull/472) BugFix: Issue 431 Unsubscribe with Schedulers.newThread, +* [Pull 470](https://github.com/Netflix/RxJava/pull/470) Operator: Last, +, +++ b/gradle.properties, +version=0.14.10-SNAPSHOT, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * @throws IllegalArgumentException, +     *             if Observable sequence is empty., +        /*, +         * Discussion and confirmation of implementation at https://github.com/Netflix/RxJava/issues/423#issuecomment-27642532, +         * , +         * It should use last() not takeLast(1) since it needs to emit an error if the sequence is empty., +         */, +        return create(OperationScan.scan(this, accumulator)).last();, +++ b/CHANGES.md, +### Version 0.14.9 ([Maven Central](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.netflix.rxjava%22%20AND%20v%3A%220.14.9%22)) ###, +, +* [Pull 477](https://github.com/Netflix/RxJava/pull/477) BugFix: CompositeSubscription, +* [Pull 476](https://github.com/Netflix/RxJava/pull/476) BugFix: Don't emit null onComplete when no onNext received in AsyncSubject, +* [Pull 474](https://github.com/Netflix/RxJava/pull/474) BugFix: Reduce an empty observable, +* [Pull 474](https://github.com/Netflix/RxJava/pull/474) BugFix: non-deterministic unit test, +* [Pull 472](https://github.com/Netflix/RxJava/pull/472) BugFix: Issue 431 Unsubscribe with Schedulers.newThread, +* [Pull 470](https://github.com/Netflix/RxJava/pull/470) Operator: Last, +, +++ b/gradle.properties, +version=0.14.10-SNAPSHOT, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * @throws IllegalArgumentException, +     *             if Observable sequence is empty., +        /*, +         * Discussion and confirmation of implementation at https://github.com/Netflix/RxJava/issues/423#issuecomment-27642532, +         * , +         * It should use last() not takeLast(1) since it needs to emit an error if the sequence is empty., +         */, +        return create(OperationScan.scan(this, accumulator)).last();, +++ /dev/null, +++ b/CHANGES.md, +### Version 0.14.9 ([Maven Central](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.netflix.rxjava%22%20AND%20v%3A%220.14.9%22)) ###, +, +* [Pull 477](https://github.com/Netflix/RxJava/pull/477) BugFix: CompositeSubscription, +* [Pull 476](https://github.com/Netflix/RxJava/pull/476) BugFix: Don't emit null onComplete when no onNext received in AsyncSubject, +* [Pull 474](https://github.com/Netflix/RxJava/pull/474) BugFix: Reduce an empty observable, +* [Pull 474](https://github.com/Netflix/RxJava/pull/474) BugFix: non-deterministic unit test, +* [Pull 472](https://github.com/Netflix/RxJava/pull/472) BugFix: Issue 431 Unsubscribe with Schedulers.newThread, +* [Pull 470](https://github.com/Netflix/RxJava/pull/470) Operator: Last, +, +++ b/gradle.properties, +version=0.14.10-SNAPSHOT, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * @throws IllegalArgumentException, +     *             if Observable sequence is empty., +        /*, +         * Discussion and confirmation of implementation at https://github.com/Netflix/RxJava/issues/423#issuecomment-27642532, +         * , +         * It should use last() not takeLast(1) since it needs to emit an error if the sequence is empty.]