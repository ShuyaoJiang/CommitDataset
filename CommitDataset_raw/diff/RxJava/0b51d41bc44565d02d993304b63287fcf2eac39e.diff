[+++ b/src/main/java/io/reactivex/Completable.java, +     * @param sources the array of source Completables. A subscription to each source will, +     *            occur in the same order as in this array., +     * @param sources the array of source Completables. A subscription to each source will, +     *            occur in the same order as in this Iterable., +     * @param other the other Completable, not null. A subscription to this provided source will occur after subscribing, +     *            to the current source., +++ b/src/main/java/io/reactivex/Completable.java, +     * @param sources the array of source Completables. A subscription to each source will, +     *            occur in the same order as in this array., +     * @param sources the array of source Completables. A subscription to each source will, +     *            occur in the same order as in this Iterable., +     * @param other the other Completable, not null. A subscription to this provided source will occur after subscribing, +     *            to the current source., +++ b/src/main/java/io/reactivex/Flowable.java, +     *            an Iterable of Publishers sources competing to react first. A subscription to each Publisher will, +     *            occur in the same order as in this Iterable., +     *            an array of Publisher sources competing to react first. A subscription to each Publisher will, +     *            occur in the same order as in this Iterable., +     *            a Publisher competing to react first. A subscription to this provided Publisher will occur after subscribing, +     *            to the current Publisher., +++ b/src/main/java/io/reactivex/Completable.java, +     * @param sources the array of source Completables. A subscription to each source will, +     *            occur in the same order as in this array., +     * @param sources the array of source Completables. A subscription to each source will, +     *            occur in the same order as in this Iterable., +     * @param other the other Completable, not null. A subscription to this provided source will occur after subscribing, +     *            to the current source., +++ b/src/main/java/io/reactivex/Flowable.java, +     *            an Iterable of Publishers sources competing to react first. A subscription to each Publisher will, +     *            occur in the same order as in this Iterable., +     *            an array of Publisher sources competing to react first. A subscription to each Publisher will, +     *            occur in the same order as in this Iterable., +     *            a Publisher competing to react first. A subscription to this provided Publisher will occur after subscribing, +     *            to the current Publisher., +++ b/src/main/java/io/reactivex/Maybe.java, +     * @param sources the Iterable sequence of sources. A subscription to each source will, +     *            occur in the same order as in the Iterable., +     * @param sources the array of sources. A subscription to each source will, +     *            occur in the same order as in the array., +     *            a MaybeSource competing to react first. A subscription to this provided source will occur after, +     *            subscribing to the current source., +++ b/src/main/java/io/reactivex/Completable.java, +     * @param sources the array of source Completables. A subscription to each source will, +     *            occur in the same order as in this array., +     * @param sources the array of source Completables. A subscription to each source will, +     *            occur in the same order as in this Iterable., +     * @param other the other Completable, not null. A subscription to this provided source will occur after subscribing, +     *            to the current source., +++ b/src/main/java/io/reactivex/Flowable.java, +     *            an Iterable of Publishers sources competing to react first. A subscription to each Publisher will, +     *            occur in the same order as in this Iterable., +     *            an array of Publisher sources competing to react first. A subscription to each Publisher will, +     *            occur in the same order as in this Iterable., +     *            a Publisher competing to react first. A subscription to this provided Publisher will occur after subscribing, +     *            to the current Publisher., +++ b/src/main/java/io/reactivex/Maybe.java, +     * @param sources the Iterable sequence of sources. A subscription to each source will, +     *            occur in the same order as in the Iterable., +     * @param sources the array of sources. A subscription to each source will, +     *            occur in the same order as in the array., +     *            a MaybeSource competing to react first. A subscription to this provided source will occur after, +     *            subscribing to the current source., +++ b/src/main/java/io/reactivex/Observable.java, +     *            an Iterable of ObservableSource sources competing to react first. A subscription to each source will, +     *            occur in the same order as in the Iterable., +     *            an array of ObservableSource sources competing to react first. A subscription to each source will, +     *            occur in the same order as in the array., +     *            an ObservableSource competing to react first. A subscription to this provided source will occur after, +     *            subscribing to the current source., +++ b/src/main/java/io/reactivex/Completable.java, +     * @param sources the array of source Completables. A subscription to each source will, +     *            occur in the same order as in this array., +     * @param sources the array of source Completables. A subscription to each source will, +     *            occur in the same order as in this Iterable., +     * @param other the other Completable, not null. A subscription to this provided source will occur after subscribing, +     *            to the current source., +++ b/src/main/java/io/reactivex/Flowable.java, +     *            an Iterable of Publishers sources competing to react first. A subscription to each Publisher will, +     *            occur in the same order as in this Iterable., +     *            an array of Publisher sources competing to react first. A subscription to each Publisher will, +     *            occur in the same order as in this Iterable., +     *            a Publisher competing to react first. A subscription to this provided Publisher will occur after subscribing, +     *            to the current Publisher., +++ b/src/main/java/io/reactivex/Maybe.java, +     * @param sources the Iterable sequence of sources. A subscription to each source will, +     *            occur in the same order as in the Iterable., +     * @param sources the array of sources. A subscription to each source will, +     *            occur in the same order as in the array., +     *            a MaybeSource competing to react first. A subscription to this provided source will occur after, +     *            subscribing to the current source., +++ b/src/main/java/io/reactivex/Observable.java, +     *            an Iterable of ObservableSource sources competing to react first. A subscription to each source will, +     *            occur in the same order as in the Iterable., +     *            an array of ObservableSource sources competing to react first. A subscription to each source will, +     *            occur in the same order as in the array., +     *            an ObservableSource competing to react first. A subscription to this provided source will occur after, +     *            subscribing to the current source., +++ b/src/main/java/io/reactivex/Single.java, +     * @param sources the Iterable sequence of sources. A subscription to each source will]