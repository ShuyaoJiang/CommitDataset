[+++ b/src/main/java/rx/Observable.java, +     *  <dd>This operator supports backpressure.</dd>, +     *  <dd>This operator supports backpressure.</dd>, +     * @param capacity hint for number of items to cache (for optimizing underlying data structure), +    public final Observable<T> cache(int capacity) {, +        return CachedObservable.from(this, capacity);, +++ b/src/main/java/rx/Observable.java, +     *  <dd>This operator supports backpressure.</dd>, +     *  <dd>This operator supports backpressure.</dd>, +     * @param capacity hint for number of items to cache (for optimizing underlying data structure), +    public final Observable<T> cache(int capacity) {, +        return CachedObservable.from(this, capacity);, +++ /dev/null, +++ b/src/main/java/rx/Observable.java, +     *  <dd>This operator supports backpressure.</dd>, +     *  <dd>This operator supports backpressure.</dd>, +     * @param capacity hint for number of items to cache (for optimizing underlying data structure), +    public final Observable<T> cache(int capacity) {, +        return CachedObservable.from(this, capacity);, +++ /dev/null, +++ b/src/main/java/rx/observables/ConnectableObservable.java, +import rx.Observable;, +import rx.Subscriber;, +import rx.Subscription;, +import rx.functions.Action1;, +import rx.internal.operators.OnSubscribeRefCount;, +++ b/src/main/java/rx/Observable.java, +     *  <dd>This operator supports backpressure.</dd>, +     *  <dd>This operator supports backpressure.</dd>, +     * @param capacity hint for number of items to cache (for optimizing underlying data structure), +    public final Observable<T> cache(int capacity) {, +        return CachedObservable.from(this, capacity);, +++ /dev/null, +++ b/src/main/java/rx/observables/ConnectableObservable.java, +import rx.Observable;, +import rx.Subscriber;, +import rx.Subscription;, +import rx.functions.Action1;, +import rx.internal.operators.OnSubscribeRefCount;, +++ /dev/null]