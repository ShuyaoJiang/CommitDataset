[+++ b/build.gradle, +apply plugin: 'findbugs', +apply plugin: 'jacoco', +////////////////////////////////////////////////////////////////////, +// to run findbugs: , +//     ./gradlew check, +// then open build/reports/findbugs/main.html, +////////////////////////////////////////////////////////////////////, +, +findbugs {, +  ignoreFailures = true, +  toolVersion = "+", +  sourceSets = [sourceSets.main], +  reportsDir = file("$project.buildDir/reports/findbugs"), +  effort = "max", +}, +, +//////////////////////////////////////////////////////////////////, +// to run jacoco: , +//     ./gradlew test jacocoTestReport, +// to run jacoco on a single test (matches OperatorRetry to OperatorRetryTest in test code base):, +//     ./gradlew -Dtest.single=OperatorRetry test jacocoTestReport, +// then open build/reports/jacoco/index.html, +/////////////////////////////////////////////////////////////////, +, +jacoco {, +    toolVersion = "+", +    reportsDir = file("$buildDir/customJacocoReportDir"), +}, +, +jacocoTestReport {, +    reports {, +        xml.enabled false, +        csv.enabled false, +        html.destination "${buildDir}/reports/jacoco", +    }, +}, +, +, +tasks.withType(FindBugs) {, +    reports {, +        xml.enabled = false, +        html.enabled = true, +    }, + }, +++ b/build.gradle, +apply plugin: 'findbugs', +apply plugin: 'jacoco', +////////////////////////////////////////////////////////////////////, +// to run findbugs: , +//     ./gradlew check, +// then open build/reports/findbugs/main.html, +////////////////////////////////////////////////////////////////////, +, +findbugs {, +  ignoreFailures = true, +  toolVersion = "+", +  sourceSets = [sourceSets.main], +  reportsDir = file("$project.buildDir/reports/findbugs"), +  effort = "max", +}, +, +//////////////////////////////////////////////////////////////////, +// to run jacoco: , +//     ./gradlew test jacocoTestReport, +// to run jacoco on a single test (matches OperatorRetry to OperatorRetryTest in test code base):, +//     ./gradlew -Dtest.single=OperatorRetry test jacocoTestReport, +// then open build/reports/jacoco/index.html, +/////////////////////////////////////////////////////////////////, +, +jacoco {, +    toolVersion = "+", +    reportsDir = file("$buildDir/customJacocoReportDir"), +}, +, +jacocoTestReport {, +    reports {, +        xml.enabled false, +        csv.enabled false, +        html.destination "${buildDir}/reports/jacoco", +    }, +}, +, +, +tasks.withType(FindBugs) {, +    reports {, +        xml.enabled = false, +        html.enabled = true, +    }, + }, +++ b/src/main/java/rx/Observable.java, +     *  <dd>This operator does not support backpressure as it uses {@code count} to control data flow.</dd>, +     *  <dd>This operator does not support backpressure as it uses {@code count} to control data flow.</dd>, +++ b/build.gradle, +apply plugin: 'findbugs', +apply plugin: 'jacoco', +////////////////////////////////////////////////////////////////////, +// to run findbugs: , +//     ./gradlew check, +// then open build/reports/findbugs/main.html]