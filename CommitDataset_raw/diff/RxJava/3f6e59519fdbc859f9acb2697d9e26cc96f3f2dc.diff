[+++ b/src/main/java/io/reactivex/Flowable.java, +     * Returns a new {@link Publisher} that multicasts (and shares a single subscription to) the original {@link Publisher}. As long as, +     * This is an alias for {@link #publish()}.{@link ConnectableFlowable#refCount() refCount()}., +++ b/src/main/java/io/reactivex/Flowable.java, +     * Returns a new {@link Publisher} that multicasts (and shares a single subscription to) the original {@link Publisher}. As long as, +     * This is an alias for {@link #publish()}.{@link ConnectableFlowable#refCount() refCount()}., +++ b/src/main/java/io/reactivex/Observable.java, +     * Returns a new {@link ObservableSource} that multicasts (and shares a single subscription to) the original {@link ObservableSource}. As long as, +     * This is an alias for {@link #publish()}.{@link ConnectableObservable#refCount() refCount()}.]