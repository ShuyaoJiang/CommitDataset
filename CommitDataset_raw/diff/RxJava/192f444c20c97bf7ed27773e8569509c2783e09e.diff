[+++ b/src/main/java/rx/exceptions/CompositeException.java, + * Represents an exception that is a composite of one or more other exceptions. A {@code CompositeException}, + * does not modify the structure of any exception it wraps, but at print-time it iterates through the list of, +++ b/src/main/java/rx/exceptions/CompositeException.java, + * Represents an exception that is a composite of one or more other exceptions. A {@code CompositeException}, + * does not modify the structure of any exception it wraps, but at print-time it iterates through the list of, +++ b/src/main/java/rx/exceptions/Exceptions.java, +     * @return because {@code propagate} itself throws an exception or error, this is a sort of phantom return, +     *         value; {@code propagate} does not actually return anything, +++ b/src/main/java/rx/exceptions/CompositeException.java, + * Represents an exception that is a composite of one or more other exceptions. A {@code CompositeException}, + * does not modify the structure of any exception it wraps, but at print-time it iterates through the list of, +++ b/src/main/java/rx/exceptions/Exceptions.java, +     * @return because {@code propagate} itself throws an exception or error, this is a sort of phantom return, +     *         value; {@code propagate} does not actually return anything, +++ b/src/main/java/rx/exceptions/MissingBackpressureException.java, + * Represents an exception that indicates that a Subscriber or operator attempted to apply reactive pull, +++ b/src/main/java/rx/exceptions/CompositeException.java, + * Represents an exception that is a composite of one or more other exceptions. A {@code CompositeException}, + * does not modify the structure of any exception it wraps, but at print-time it iterates through the list of, +++ b/src/main/java/rx/exceptions/Exceptions.java, +     * @return because {@code propagate} itself throws an exception or error, this is a sort of phantom return, +     *         value; {@code propagate} does not actually return anything, +++ b/src/main/java/rx/exceptions/MissingBackpressureException.java, + * Represents an exception that indicates that a Subscriber or operator attempted to apply reactive pull, +++ b/src/main/java/rx/exceptions/OnErrorFailedException.java, + * Represents an exception used to re-throw errors thrown from {@link Subscriber#onError(Throwable)}., +++ b/src/main/java/rx/exceptions/CompositeException.java, + * Represents an exception that is a composite of one or more other exceptions. A {@code CompositeException}, + * does not modify the structure of any exception it wraps, but at print-time it iterates through the list of, +++ b/src/main/java/rx/exceptions/Exceptions.java, +     * @return because {@code propagate} itself throws an exception or error, this is a sort of phantom return, +     *         value; {@code propagate} does not actually return anything, +++ b/src/main/java/rx/exceptions/MissingBackpressureException.java, + * Represents an exception that indicates that a Subscriber or operator attempted to apply reactive pull, +++ b/src/main/java/rx/exceptions/OnErrorFailedException.java, + * Represents an exception used to re-throw errors thrown from {@link Subscriber#onError(Throwable)}., +++ b/src/main/java/rx/exceptions/OnErrorNotImplementedException.java, + * Represents an exception used to re-throw {@link Subscriber#onError(Throwable)} when an implementation doesn't, + * exist.]