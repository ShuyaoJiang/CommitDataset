[+++ b/src/main/java/io/reactivex/observers/BaseTestConsumer.java, +     * Assert that the TestObserver/TestSubscriber received only the specified values in the specified order without terminating., +     * @param values the values expected, +     * @return this;, +     * @since 2.1.4, +     */, +    @SuppressWarnings("unchecked"), +    @Experimental, +    public final U assertValuesOnly(T... values) {, +        return assertSubscribed(), +                .assertValues(values), +                .assertNoErrors(), +                .assertNotComplete();, +    }, +, +    /**, +++ b/src/main/java/io/reactivex/observers/BaseTestConsumer.java, +     * Assert that the TestObserver/TestSubscriber received only the specified values in the specified order without terminating., +     * @param values the values expected, +     * @return this;, +     * @since 2.1.4, +     */, +    @SuppressWarnings("unchecked"), +    @Experimental, +    public final U assertValuesOnly(T... values) {, +        return assertSubscribed(), +                .assertValues(values), +                .assertNoErrors(), +                .assertNotComplete();, +    }, +, +    /**, +++ b/src/test/java/io/reactivex/observers/TestObserverTest.java, +, +    @Test, +    public void assertValuesOnly() {, +        TestObserver<Integer> to = TestObserver.create();, +        to.onSubscribe(Disposables.empty());, +        to.assertValuesOnly();, +, +        to.onNext(5);, +        to.assertValuesOnly(5);, +, +        to.onNext(-1);, +        to.assertValuesOnly(5, -1);, +    }, +, +    @Test, +    public void assertValuesOnlyThrowsOnUnexpectedValue() {, +        TestObserver<Integer> to = TestObserver.create();, +        to.onSubscribe(Disposables.empty());, +        to.assertValuesOnly();, +, +        to.onNext(5);, +        to.assertValuesOnly(5);, +, +        to.onNext(-1);, +, +        try {, +            to.assertValuesOnly(5);, +            fail();, +        } catch (AssertionError ex) {, +            // expected, +        }, +    }, +, +    @Test, +    public void assertValuesOnlyThrowsWhenCompleted() {, +        TestObserver<Integer> to = TestObserver.create();, +        to.onSubscribe(Disposables.empty());, +, +        to.onComplete();, +, +        try {, +            to.assertValuesOnly();, +            fail();, +        } catch (AssertionError ex) {, +            // expected, +        }, +    }, +, +    @Test, +    public void assertValuesOnlyThrowsWhenErrored() {, +        TestObserver<Integer> to = TestObserver.create();, +        to.onSubscribe(Disposables.empty());, +, +        to.onError(new TestException());, +, +        try {, +            to.assertValuesOnly();, +            fail();, +        } catch (AssertionError ex) {, +            // expected, +        }, +    }, +++ b/src/main/java/io/reactivex/observers/BaseTestConsumer.java, +     * Assert that the TestObserver/TestSubscriber received only the specified values in the specified order without terminating., +     * @param values the values expected, +     * @return this;, +     * @since 2.1.4]