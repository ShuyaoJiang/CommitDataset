[+++ b/language-adaptors/rxjava-scala/build.gradle, +        instruction 'Import-Package', '!org.junit,!junit.framework,!org.mockito.*,*', +++ b/language-adaptors/rxjava-scala/build.gradle, +        instruction 'Import-Package', '!org.junit,!junit.framework,!org.mockito.*,*', +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperationElementAt;, +    /**, +     * Returns the element at a specified index in a sequence., +     * , +     * @param index, +     *            The zero-based index of the element to retrieve., +     * , +     * @return An observable sequence that produces the element at the specified, +     *         position in the source sequence., +     * , +     * @throws IndexOutOfBoundsException, +     *             Index is greater than or equal to the number of elements in, +     *             the source sequence., +     * @throws IndexOutOfBoundsException, +     *             Index is less than 0., +     */, +    public Observable<T> elementAt(int index) {, +        return create(OperationElementAt.elementAt(this, index));, +    }, +, +    /**, +     * Returns the element at a specified index in a sequence or the default, +     * value if the index is out of range., +     * , +     * @param index, +     *            The zero-based index of the element to retrieve., +     * @param defaultValue, +     *            The default value., +     * , +     * @return An observable sequence that produces the element at the specified, +     *         position in the source sequence, or the default value if the, +     *         index is outside the bounds of the source sequence., +     * , +     * @throws IndexOutOfBoundsException, +     *             Index is less than 0., +     */, +    public Observable<T> elementAtOrDefault(int index, T defaultValue) {, +        return create(OperationElementAt.elementAtOrDefault(this, index,, +                defaultValue));, +    }, +    , +++ b/language-adaptors/rxjava-scala/build.gradle, +        instruction 'Import-Package', '!org.junit,!junit.framework,!org.mockito.*,*', +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperationElementAt;, +    /**, +     * Returns the element at a specified index in a sequence., +     * , +     * @param index, +     *            The zero-based index of the element to retrieve., +     * , +     * @return An observable sequence that produces the element at the specified, +     *         position in the source sequence., +     * , +     * @throws IndexOutOfBoundsException, +     *             Index is greater than or equal to the number of elements in, +     *             the source sequence., +     * @throws IndexOutOfBoundsException, +     *             Index is less than 0., +     */, +    public Observable<T> elementAt(int index) {, +        return create(OperationElementAt.elementAt(this, index));, +    }, +, +    /**, +     * Returns the element at a specified index in a sequence or the default, +     * value if the index is out of range., +     * , +     * @param index, +     *            The zero-based index of the element to retrieve., +     * @param defaultValue, +     *            The default value., +     * , +     * @return An observable sequence that produces the element at the specified, +     *         position in the source sequence, or the default value if the, +     *         index is outside the bounds of the source sequence., +     * , +     * @throws IndexOutOfBoundsException, +     *             Index is less than 0., +     */, +    public Observable<T> elementAtOrDefault(int index, T defaultValue) {, +        return create(OperationElementAt.elementAtOrDefault(this, index,, +                defaultValue));, +    }, +    , +++ b/rxjava-core/src/main/java/rx/operators/OperationElementAt.java, +package rx.operators;, +, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.never;, +import static org.mockito.Mockito.times;, +import static org.mockito.Mockito.verify;, +]