[+++ b/rxjava-core/src/test/java/rx/subjects/BehaviorSubjectTest.java, +import org.mockito.InOrder;, +import rx.Subscription;, +    @Test, +    public void testCompletedStopsEmittingData() {, +        BehaviorSubject<Integer> channel = BehaviorSubject.createWithDefaultValue(2013);, +        @SuppressWarnings("unchecked"), +        Observer<Object> observerA = mock(Observer.class);, +        @SuppressWarnings("unchecked"), +        Observer<Object> observerB = mock(Observer.class);, +        @SuppressWarnings("unchecked"), +        Observer<Object> observerC = mock(Observer.class);, +, +        InOrder inOrder = inOrder(observerA, observerB, observerC);, +, +        Subscription a = channel.subscribe(observerA);, +        Subscription b = channel.subscribe(observerB);, +, +        inOrder.verify(observerA).onNext(2013);, +        inOrder.verify(observerB).onNext(2013);, +        , +        channel.onNext(42);, +, +        inOrder.verify(observerA).onNext(42);, +        inOrder.verify(observerB).onNext(42);, +, +        a.unsubscribe();, +, +        channel.onNext(4711);, +, +        inOrder.verify(observerA, never()).onNext(any());, +        inOrder.verify(observerB).onNext(4711);, +, +        channel.onCompleted();, +, +        inOrder.verify(observerA, never()).onCompleted();, +        inOrder.verify(observerB).onCompleted();, +, +        Subscription c = channel.subscribe(observerC);, +, +        inOrder.verify(observerC).onCompleted();, +, +        channel.onNext(13);, +, +        inOrder.verifyNoMoreInteractions();, +    }, +, +++ b/rxjava-core/src/test/java/rx/subjects/BehaviorSubjectTest.java, +import org.mockito.InOrder;, +import rx.Subscription;, +    @Test, +    public void testCompletedStopsEmittingData() {, +        BehaviorSubject<Integer> channel = BehaviorSubject.createWithDefaultValue(2013);, +        @SuppressWarnings("unchecked"), +        Observer<Object> observerA = mock(Observer.class);, +        @SuppressWarnings("unchecked"), +        Observer<Object> observerB = mock(Observer.class);, +        @SuppressWarnings("unchecked"), +        Observer<Object> observerC = mock(Observer.class);, +, +        InOrder inOrder = inOrder(observerA, observerB, observerC);, +, +        Subscription a = channel.subscribe(observerA);, +        Subscription b = channel.subscribe(observerB);, +, +        inOrder.verify(observerA).onNext(2013);, +        inOrder.verify(observerB).onNext(2013);, +        , +        channel.onNext(42);, +, +        inOrder.verify(observerA).onNext(42);, +        inOrder.verify(observerB).onNext(42);, +, +        a.unsubscribe();, +, +        channel.onNext(4711);, +, +        inOrder.verify(observerA, never()).onNext(any());, +        inOrder.verify(observerB).onNext(4711);, +, +        channel.onCompleted();, +, +        inOrder.verify(observerA, never()).onCompleted();, +        inOrder.verify(observerB).onCompleted();, +, +        Subscription c = channel.subscribe(observerC);, +, +        inOrder.verify(observerC).onCompleted();, +, +        channel.onNext(13);, +, +        inOrder.verifyNoMoreInteractions();, +    }, +, +++ b/rxjava-core/src/test/java/rx/subjects/PublishSubjectTest.java, +    }, +, +    @Test, +    public void testCompletedStopsEmittingData() {, +        PublishSubject<Object> channel = PublishSubject.create();]