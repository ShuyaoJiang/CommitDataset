[+++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +import java.io.IOException, +@Ignore // Since this doesn't do automatic testing, don't increase build time unnecessarily, +      import Notification._, +        case OnNext(v) => println("Got value " + v), +        case OnCompleted() => println("Completed"), +        case OnError(err) => println("Error: " + err.getMessage), +    val o1 = Observable.interval(100 millis).take(3), +    val o2 = o1 ++ Observable(new IOException("Oops")), +    printObservable(o1), +    printObservable(o2), +++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +import java.io.IOException, +@Ignore // Since this doesn't do automatic testing, don't increase build time unnecessarily, +      import Notification._, +        case OnNext(v) => println("Got value " + v), +        case OnCompleted() => println("Completed"), +        case OnError(err) => println("Error: " + err.getMessage), +    val o1 = Observable.interval(100 millis).take(3), +    val o2 = o1 ++ Observable(new IOException("Oops")), +    printObservable(o1), +    printObservable(o2), +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Notification.scala, +  }, +  , +  object OnNext {, +  }, +  , +  object OnError {, +  class OnCompleted[T](val asJava: rx.Notification[_ <: T]) extends Notification[T] {}, +  , +  object OnCompleted {]