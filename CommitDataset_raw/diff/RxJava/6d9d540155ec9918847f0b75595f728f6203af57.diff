[+++ b/language-adaptors/rxjava-groovy/src/main/java/rx/lang/groovy/GroovyCreateWrapper.java, +import rx.Observable.OnSubscribe;, +import rx.Observer;, +public class GroovyCreateWrapper<T> implements OnSubscribe<T> {, +    public void call(Observer<? super T> op) {, +++ b/language-adaptors/rxjava-groovy/src/main/java/rx/lang/groovy/GroovyCreateWrapper.java, +import rx.Observable.OnSubscribe;, +import rx.Observer;, +public class GroovyCreateWrapper<T> implements OnSubscribe<T> {, +    public void call(Observer<? super T> op) {, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +++ b/language-adaptors/rxjava-groovy/src/main/java/rx/lang/groovy/GroovyCreateWrapper.java, +import rx.Observable.OnSubscribe;, +import rx.Observer;, +public class GroovyCreateWrapper<T> implements OnSubscribe<T> {, +    public void call(Observer<? super T> op) {, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Subject.scala, +  val asJavaObservable: rx.Observable[_ <: T] = asJavaSubject.toObservable(), +++ b/language-adaptors/rxjava-groovy/src/main/java/rx/lang/groovy/GroovyCreateWrapper.java, +import rx.Observable.OnSubscribe;, +import rx.Observer;, +public class GroovyCreateWrapper<T> implements OnSubscribe<T> {, +    public void call(Observer<? super T> op) {, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Subject.scala, +  val asJavaObservable: rx.Observable[_ <: T] = asJavaSubject.toObservable(), +++ b/rxjava-contrib/rxjava-android/src/test/java/rx/android/operators/OperationObserveFromAndroidComponentTest.java, +        final Observable.OnSubscribeFunc<Integer> operator = newOnSubscribeFragmentInstance(source.toObservable(), mockFragment);, +        final Observable.OnSubscribeFunc<Integer> operator = newOnSubscribeFragmentInstance(source.toObservable(), mockFragment);, +        OperationObserveFromAndroidComponent.observeFromAndroidComponent(source.toObservable(), mockFragment).subscribe(mockObserver);, +        OperationObserveFromAndroidComponent.observeFromAndroidComponent(source.toObservable(), mockFragment).subscribe(mockObserver);, +++ b/language-adaptors/rxjava-groovy/src/main/java/rx/lang/groovy/GroovyCreateWrapper.java, +import rx.Observable.OnSubscribe;, +import rx.Observer;, +public class GroovyCreateWrapper<T> implements OnSubscribe<T> {, +    public void call(Observer<? super T> op) {, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Subject.scala, +  val asJavaObservable: rx.Observable[_ <: T] = asJavaSubject.toObservable(), +++ b/rxjava-contrib/rxjava-android/src/test/java/rx/android/operators/OperationObserveFromAndroidComponentTest.java, +        final Observable.OnSubscribeFunc<Integer> operator = newOnSubscribeFragmentInstance(source.toObservable(), mockFragment);, +        final Observable.OnSubscribeFunc<Integer> operator = newOnSubscribeFragmentInstance(source.toObservable(), mockFragment);, +        OperationObserveFromAndroidComponent.observeFromAndroidComponent(source.toObservable(), mockFragment).subscribe(mockObserver);, +        OperationObserveFromAndroidComponent.observeFromAndroidComponent(source.toObservable(), mockFragment).subscribe(mockObserver);, +++ b/rxjava-contrib/rxjava-apache-http/src/main/java/rx/apache/http/consumers/ResponseConsumerEventStream.java, +                parentSubscription.add(contentSubject.toObservable().subscribe(observer));, +++ b/language-adaptors/rxjava-groovy/src/main/java/rx/lang/groovy/GroovyCreateWrapper.java, +import rx.Observable.OnSubscribe;, +import rx.Observer;, +public class GroovyCreateWrapper<T> implements OnSubscribe<T> {, +    public void call(Observer<? super T> op) {, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Subject.scala, +  val asJavaObservable: rx.Observable[_ <: T] = asJavaSubject.toObservable(), +++ b/rxjava-contrib/rxjava-android/src/test/java/rx/android/operators/OperationObserveFromAndroidComponentTest.java, +        final Observable.OnSubscribeFunc<Integer> operator = newOnSubscribeFragmentInstance(source.toObservable(), mockFragment);, +        final Observable.OnSubscribeFunc<Integer> operator = newOnSubscribeFragmentInstance(source.toObservable(), mockFragment);, +        OperationObserveFromAndroidComponent.observeFromAndroidComponent(source.toObservable(), mockFragment).subscribe(mockObserver);, +        OperationObserveFromAndroidComponent.observeFromAndroidComponent(source.toObservable(), mockFragment).subscribe(mockObserver);, +++ b/rxjava-contrib/rxjava-apache-http/src/main/java/rx/apache/http/consumers/ResponseConsumerEventStream.java, +                parentSubscription.add(contentSubject.toObservable().subscribe(observer));, +++ b/rxjava-contrib/rxjava-async-util/src/main/java/rx/util/async/Async.java, +        return toAsync(action, Schedulers.computation());, +        return toAsync(func, Schedulers.computation());, +        return toAsync(action, Schedulers.computation());, +        return toAsync(func, Schedulers.computation());, +        return toAsync(action, Schedulers.computation());, +        return toAsync(func, Schedulers.computation());, +        return toAsync(action, Schedulers.computation());, +        return toAsync(func, Schedulers.computation());, +        return toAsync(action, Schedulers.computation());, +        return toAsync(func, Schedulers.computation());, +        return toAsync(action, Schedulers.computation());, +        return toAsync(func, Schedulers.computation());, +        return toAsync(action, Schedulers.computation());, +        return toAsync(func, Schedulers.computation());, +        return toAsync(action, Schedulers.computation());, +        return toAsync(func, Schedulers.computation());, +        return toAsync(action, Schedulers.computation());, +        return toAsync(func, Schedulers.computation());, +        return toAsync(action, Schedulers.computation());, +        return toAsync(func, Schedulers.computation());, +        return toAsync(action, Schedulers.computation());, +        return toAsync(func, Schedulers.computation());, +                return subject.toObservable();, +                return subject.toObservable();, +                return subject.toObservable();, +                return subject.toObservable();, +                return subject.toObservable();, +                return subject.toObservable();, +                return subject.toObservable();, +                return subject.toObservable();, +                return subject.toObservable();, +                return subject.toObservable();, +                return subject.toObservable();, +        return fromAction(action, result, Schedulers.computation());, +        return fromFunc0(function, Schedulers.computation());, +        return fromCallable(callable, Schedulers.computation());, +        return fromRunnable(run, result, Schedulers.computation());]