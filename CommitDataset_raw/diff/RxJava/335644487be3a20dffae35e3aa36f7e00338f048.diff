[+++ b/src/main/java/io/reactivex/observers/BaseTestConsumer.java, +    protected CharSequence tag;, +, +        ;, +, +        CharSequence tag = this.tag;, +        if (tag != null) {, +            b.append(", tag = "), +            .append(tag);, +        }, +, +        b, +, +    /**, +     * Set the tag displayed along with an assertion failure's, +     * other state information., +     * @param tag the string to display (null won't print any tag), +     * @return this, +     * @since 2.0.7 - experimental, +     */, +    @SuppressWarnings("unchecked"), +    @Experimental, +    public final U withTag(CharSequence tag) {, +        this.tag = tag;, +        return (U)this;, +    }, +++ b/src/main/java/io/reactivex/observers/BaseTestConsumer.java, +    protected CharSequence tag;, +, +        ;, +, +        CharSequence tag = this.tag;, +        if (tag != null) {, +            b.append(", tag = "), +            .append(tag);, +        }, +, +        b, +, +    /**, +     * Set the tag displayed along with an assertion failure's, +     * other state information., +     * @param tag the string to display (null won't print any tag), +     * @return this, +     * @since 2.0.7 - experimental, +     */, +    @SuppressWarnings("unchecked"), +    @Experimental, +    public final U withTag(CharSequence tag) {, +        this.tag = tag;, +        return (U)this;, +    }, +++ b/src/test/java/io/reactivex/observers/TestObserverTest.java, +, +    @Test, +    public void withTag() {, +        try {, +            for (int i = 1; i < 3; i++) {, +                Observable.just(i), +                .test(), +                .withTag("testing with item=" + i), +                .assertResult(1), +                ;, +            }, +            fail("Should have thrown!");, +        } catch (AssertionError ex) {, +            assertTrue(ex.toString(), ex.toString().contains("testing with item=2"));, +        }, +    }, +++ b/src/main/java/io/reactivex/observers/BaseTestConsumer.java, +    protected CharSequence tag;, +, +        ;, +, +        CharSequence tag = this.tag;, +        if (tag != null) {, +            b.append(", tag = "), +            .append(tag);, +        }, +, +        b, +, +    /**, +     * Set the tag displayed along with an assertion failure's, +     * other state information., +     * @param tag the string to display (null won't print any tag), +     * @return this, +     * @since 2.0.7 - experimental, +     */, +    @SuppressWarnings("unchecked"), +    @Experimental, +    public final U withTag(CharSequence tag) {, +        this.tag = tag;, +        return (U)this;, +    }, +++ b/src/test/java/io/reactivex/observers/TestObserverTest.java, +, +    @Test, +    public void withTag() {, +        try {]