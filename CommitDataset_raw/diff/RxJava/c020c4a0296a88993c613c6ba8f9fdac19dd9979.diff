[+++ b/README.md, +#### rx.internal.*, +, +All code inside the `rx.internal.*` packages is considered private API and should not be relied upon at all. It can change at any time. , +++ b/README.md, +#### rx.internal.*, +, +All code inside the `rx.internal.*` packages is considered private API and should not be relied upon at all. It can change at any time. , +++ b/src/main/java/rx/Observable.java, +     * Instructs an Observable that is emitting items faster than its observer can consume them to, +     * @since (if this graduates from Experimental/Beta to supported, replace this parenthetical with the release number), +     * Instructs an Observable that is emitting items faster than its observer can consume them to block the, +     * producer thread if the number of undelivered onNext events reaches the system-wide ring buffer size., +     * The producer side can emit up to the system-wide ring buffer size onNext elements without blocking, but, +     * the consumer side considers the amount its downstream requested through {@code Producer.request(n)}, +     * @since (if this graduates from Experimental/Beta to supported, replace this parenthetical with the release number), +++ b/README.md, +#### rx.internal.*, +, +All code inside the `rx.internal.*` packages is considered private API and should not be relied upon at all. It can change at any time. , +++ b/src/main/java/rx/Observable.java, +     * Instructs an Observable that is emitting items faster than its observer can consume them to, +     * @since (if this graduates from Experimental/Beta to supported, replace this parenthetical with the release number), +     * Instructs an Observable that is emitting items faster than its observer can consume them to block the, +     * producer thread if the number of undelivered onNext events reaches the system-wide ring buffer size., +     * The producer side can emit up to the system-wide ring buffer size onNext elements without blocking, but, +     * the consumer side considers the amount its downstream requested through {@code Producer.request(n)}, +     * @since (if this graduates from Experimental/Beta to supported, replace this parenthetical with the release number), +++ b/src/main/java/rx/internal/operators/OperatorOnBackpressureBuffer.java, +        // TODO start with size hint, +                    pollQueue(wip, requested, queue, child);, +                pollQueue(wip, requested, queue, child);, +                pollQueue(wip, requested, queue, child);, +                pollQueue(wip, requested, queue, child);, +    private void pollQueue(AtomicLong wip, AtomicLong requested, Queue<Object> queue, Subscriber<? super T> child) {, +++ b/README.md, +#### rx.internal.*, +, +All code inside the `rx.internal.*` packages is considered private API and should not be relied upon at all. It can change at any time. , +++ b/src/main/java/rx/Observable.java, +     * Instructs an Observable that is emitting items faster than its observer can consume them to, +     * @since (if this graduates from Experimental/Beta to supported, replace this parenthetical with the release number), +     * Instructs an Observable that is emitting items faster than its observer can consume them to block the, +     * producer thread if the number of undelivered onNext events reaches the system-wide ring buffer size., +     * The producer side can emit up to the system-wide ring buffer size onNext elements without blocking, but, +     * the consumer side considers the amount its downstream requested through {@code Producer.request(n)}, +     * @since (if this graduates from Experimental/Beta to supported, replace this parenthetical with the release number), +++ b/src/main/java/rx/internal/operators/OperatorOnBackpressureBuffer.java, +        // TODO start with size hint, +                    pollQueue(wip, requested, queue, child);, +                pollQueue(wip, requested, queue, child);, +                pollQueue(wip, requested, queue, child);, +                pollQueue(wip, requested, queue, child);, +    private void pollQueue(AtomicLong wip, AtomicLong requested, Queue<Object> queue, Subscriber<? super T> child) {, +++ b/src/test/java/rx/internal/operators/OperatorOnBackpressureBufferTest.java]