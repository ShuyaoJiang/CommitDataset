[+++ b/src/main/java/io/reactivex/internal/schedulers/ComputationScheduler.java, +    private static final String THREAD_NAME_PREFIX = "RxComputationThreadPool";, +        SHUTDOWN_WORKER = new PoolWorker(new RxThreadFactory("RxComputationShutdown"));, +++ b/src/main/java/io/reactivex/internal/schedulers/ComputationScheduler.java, +    private static final String THREAD_NAME_PREFIX = "RxComputationThreadPool";, +        SHUTDOWN_WORKER = new PoolWorker(new RxThreadFactory("RxComputationShutdown"));, +++ b/src/main/java/io/reactivex/internal/schedulers/IoScheduler.java, +    private static final String WORKER_THREAD_NAME_PREFIX = "RxCachedThreadScheduler";, +    private static final String EVICTOR_THREAD_NAME_PREFIX = "RxCachedWorkerPoolEvictor";, +        SHUTDOWN_THREADWORKER = new ThreadWorker(new RxThreadFactory("RxCachedThreadSchedulerShutdown"));, +++ b/src/main/java/io/reactivex/internal/schedulers/ComputationScheduler.java, +    private static final String THREAD_NAME_PREFIX = "RxComputationThreadPool";, +        SHUTDOWN_WORKER = new PoolWorker(new RxThreadFactory("RxComputationShutdown"));, +++ b/src/main/java/io/reactivex/internal/schedulers/IoScheduler.java, +    private static final String WORKER_THREAD_NAME_PREFIX = "RxCachedThreadScheduler";, +    private static final String EVICTOR_THREAD_NAME_PREFIX = "RxCachedWorkerPoolEvictor";, +        SHUTDOWN_THREADWORKER = new ThreadWorker(new RxThreadFactory("RxCachedThreadSchedulerShutdown"));, +++ b/src/main/java/io/reactivex/internal/schedulers/NewThreadScheduler.java, +    private static final String THREAD_NAME_PREFIX = "RxNewThreadScheduler";, +++ b/src/main/java/io/reactivex/internal/schedulers/ComputationScheduler.java, +    private static final String THREAD_NAME_PREFIX = "RxComputationThreadPool";, +        SHUTDOWN_WORKER = new PoolWorker(new RxThreadFactory("RxComputationShutdown"));, +++ b/src/main/java/io/reactivex/internal/schedulers/IoScheduler.java, +    private static final String WORKER_THREAD_NAME_PREFIX = "RxCachedThreadScheduler";, +    private static final String EVICTOR_THREAD_NAME_PREFIX = "RxCachedWorkerPoolEvictor";, +        SHUTDOWN_THREADWORKER = new ThreadWorker(new RxThreadFactory("RxCachedThreadSchedulerShutdown"));, +++ b/src/main/java/io/reactivex/internal/schedulers/NewThreadScheduler.java, +    private static final String THREAD_NAME_PREFIX = "RxNewThreadScheduler";, +++ b/src/main/java/io/reactivex/internal/schedulers/RxThreadFactory.java, +        StringBuilder nameBuilder = new StringBuilder(prefix).append('-').append(incrementAndGet());, +++ b/src/main/java/io/reactivex/internal/schedulers/ComputationScheduler.java, +    private static final String THREAD_NAME_PREFIX = "RxComputationThreadPool";, +        SHUTDOWN_WORKER = new PoolWorker(new RxThreadFactory("RxComputationShutdown"));, +++ b/src/main/java/io/reactivex/internal/schedulers/IoScheduler.java, +    private static final String WORKER_THREAD_NAME_PREFIX = "RxCachedThreadScheduler";, +    private static final String EVICTOR_THREAD_NAME_PREFIX = "RxCachedWorkerPoolEvictor";, +        SHUTDOWN_THREADWORKER = new ThreadWorker(new RxThreadFactory("RxCachedThreadSchedulerShutdown"));, +++ b/src/main/java/io/reactivex/internal/schedulers/NewThreadScheduler.java, +    private static final String THREAD_NAME_PREFIX = "RxNewThreadScheduler";, +++ b/src/main/java/io/reactivex/internal/schedulers/RxThreadFactory.java, +        StringBuilder nameBuilder = new StringBuilder(prefix).append('-').append(incrementAndGet());, +++ b/src/main/java/io/reactivex/internal/schedulers/SchedulerPoolFactory.java, +            ScheduledExecutorService next = Executors.newScheduledThreadPool(1, new RxThreadFactory("RxSchedulerPurge"));, +++ b/src/main/java/io/reactivex/internal/schedulers/ComputationScheduler.java, +    private static final String THREAD_NAME_PREFIX = "RxComputationThreadPool";, +        SHUTDOWN_WORKER = new PoolWorker(new RxThreadFactory("RxComputationShutdown"));, +++ b/src/main/java/io/reactivex/internal/schedulers/IoScheduler.java, +    private static final String WORKER_THREAD_NAME_PREFIX = "RxCachedThreadScheduler";, +    private static final String EVICTOR_THREAD_NAME_PREFIX = "RxCachedWorkerPoolEvictor";, +        SHUTDOWN_THREADWORKER = new ThreadWorker(new RxThreadFactory("RxCachedThreadSchedulerShutdown"));, +++ b/src/main/java/io/reactivex/internal/schedulers/NewThreadScheduler.java, +    private static final String THREAD_NAME_PREFIX = "RxNewThreadScheduler";, +++ b/src/main/java/io/reactivex/internal/schedulers/RxThreadFactory.java, +        StringBuilder nameBuilder = new StringBuilder(prefix).append('-').append(incrementAndGet());, +++ b/src/main/java/io/reactivex/internal/schedulers/SchedulerPoolFactory.java, +            ScheduledExecutorService next = Executors.newScheduledThreadPool(1, new RxThreadFactory("RxSchedulerPurge"));, +++ b/src/main/java/io/reactivex/internal/schedulers/SingleScheduler.java, +        return SchedulerPoolFactory.create(new RxThreadFactory("RxSingleScheduler"));, +++ b/src/main/java/io/reactivex/internal/schedulers/ComputationScheduler.java, +    private static final String THREAD_NAME_PREFIX = "RxComputationThreadPool";, +        SHUTDOWN_WORKER = new PoolWorker(new RxThreadFactory("RxComputationShutdown"));, +++ b/src/main/java/io/reactivex/internal/schedulers/IoScheduler.java, +    private static final String WORKER_THREAD_NAME_PREFIX = "RxCachedThreadScheduler";, +    private static final String EVICTOR_THREAD_NAME_PREFIX = "RxCachedWorkerPoolEvictor";, +        SHUTDOWN_THREADWORKER = new ThreadWorker(new RxThreadFactory("RxCachedThreadSchedulerShutdown"));, +++ b/src/main/java/io/reactivex/internal/schedulers/NewThreadScheduler.java, +    private static final String THREAD_NAME_PREFIX = "RxNewThreadScheduler";, +++ b/src/main/java/io/reactivex/internal/schedulers/RxThreadFactory.java, +        StringBuilder nameBuilder = new StringBuilder(prefix).append('-').append(incrementAndGet());, +++ b/src/main/java/io/reactivex/internal/schedulers/SchedulerPoolFactory.java, +            ScheduledExecutorService next = Executors.newScheduledThreadPool(1, new RxThreadFactory("RxSchedulerPurge"));, +++ b/src/main/java/io/reactivex/internal/schedulers/SingleScheduler.java, +        return SchedulerPoolFactory.create(new RxThreadFactory("RxSingleScheduler"));, +++ b/src/test/java/io/reactivex/schedulers/ExecutorSchedulerTest.java, +    final static Executor executor = Executors.newFixedThreadPool(2, new RxThreadFactory("TestCustomPool"));]