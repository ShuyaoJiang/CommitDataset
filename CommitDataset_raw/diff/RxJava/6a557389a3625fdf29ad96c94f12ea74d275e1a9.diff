[+++ b/src/main/java/rx/Observable.java, +     * Mirrors the one Observable in an Iterable of several Observables that first either emits an item or sends, +     * a termination notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Given two Observables, mirrors the one that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Given three Observables, mirrors the one that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Given four Observables, mirrors the one that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Given five Observables, mirrors the one that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Given six Observables, mirrors the one that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Given seven Observables, mirrors the one that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Given eight Observables, mirrors the one that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Given nine Observables, mirrors the one that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Mirrors the Observable (current or provided) that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +++ b/src/main/java/rx/Observable.java, +     * Mirrors the one Observable in an Iterable of several Observables that first either emits an item or sends, +     * a termination notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Given two Observables, mirrors the one that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Given three Observables, mirrors the one that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Given four Observables, mirrors the one that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Given five Observables, mirrors the one that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Given six Observables, mirrors the one that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Given seven Observables, mirrors the one that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Given eight Observables, mirrors the one that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Given nine Observables, mirrors the one that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +     * Mirrors the Observable (current or provided) that first either emits an item or sends a termination, +     * notification., +     * @return an Observable that emits the same sequence as whichever of the source Observables first, +     *         emitted an item or sent a termination notification, +++ b/src/main/java/rx/internal/operators/NotificationLite.java, +     * Indicates whether or not the lite notification represents a wrapped {@code null} {@code onNext} event., +     * @param n the lite notification, +     * @return {@code true} if {@code n} represents a wrapped {@code null} {@code onNext} event, {@code false} otherwise, +     */, +    public boolean isNull(Object n) {, +        return n == ON_NEXT_NULL_SENTINEL;, +    }, +, +    /**, +     * Indicates whether or not the lite notification represents an {@code onNext} event., +     * @param n the lite notification, +     * @return {@code true} if {@code n} represents an {@code onNext} event, {@code false} otherwise, +     */, +    public boolean isNext(Object n) {, +        return n != null && !isError(n) && !isCompleted(n);, +    }, +    /**]