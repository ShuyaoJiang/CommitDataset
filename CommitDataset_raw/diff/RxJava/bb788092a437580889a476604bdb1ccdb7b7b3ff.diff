[+++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +import org.junit.Assert.assertFalse, +  @Test def containsExample(): Unit = {, +    val o1 = List(1, 2, 3).toObservable.contains(2), +    assertTrue(o1.toBlockingObservable.single), +, +    val o2 = List(1, 2, 3).toObservable.contains(4), +    assertFalse(o2.toBlockingObservable.single), +  }, +, +++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +import org.junit.Assert.assertFalse, +  @Test def containsExample(): Unit = {, +    val o1 = List(1, 2, 3).toObservable.contains(2), +    assertTrue(o1.toBlockingObservable.single), +, +    val o2 = List(1, 2, 3).toObservable.contains(4), +    assertFalse(o2.toBlockingObservable.single), +  }, +, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +   * Returns an Observable that emits a Boolean that indicates whether the source Observable emitted a, +   * specified item., +   *, +   * Note: this method uses `==` to compare elements. It's a bit different from RxJava which uses `Object.equals`., +   * <p>, +   * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/contains.png">, +   *, +   *@param elem the item to search for in the emissions from the source Observable, +   * @return an Observable that emits `true` if the specified item is emitted by the source Observable,, +   *         or `false` if the source Observable completes without emitting that item, +   */, +  def contains(elem: Any): Observable[Boolean] = {, +    exists(_ == elem), +  }, +, +  /**, +++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +import org.junit.Assert.assertFalse, +  @Test def containsExample(): Unit = {, +    val o1 = List(1, 2, 3).toObservable.contains(2), +    assertTrue(o1.toBlockingObservable.single), +, +    val o2 = List(1, 2, 3).toObservable.contains(4), +    assertFalse(o2.toBlockingObservable.single), +  }, +, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +   * Returns an Observable that emits a Boolean that indicates whether the source Observable emitted a, +   * specified item., +   *, +   * Note: this method uses `==` to compare elements. It's a bit different from RxJava which uses `Object.equals`., +   * <p>, +   * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/contains.png">, +   *, +   *@param elem the item to search for in the emissions from the source Observable, +   * @return an Observable that emits `true` if the specified item is emitted by the source Observable,, +   *         or `false` if the source Observable completes without emitting that item, +   */, +  def contains(elem: Any): Observable[Boolean] = {, +    exists(_ == elem), +  }, +, +  /**, +++ b/language-adaptors/rxjava-scala/src/test/scala/rx/lang/scala/CompletenessTest.scala, +      "contains(T)" -> "contains(Any)",]