[+++ b/language-adaptors/rxjava-clojure/src/main/java/org/rx/lang/clojure/ClojureAdaptor.java, +    public Class<?>[] getFunctionClass() {, +        return new Class<?>[] { IFn.class };, +++ b/language-adaptors/rxjava-clojure/src/main/java/org/rx/lang/clojure/ClojureAdaptor.java, +    public Class<?>[] getFunctionClass() {, +        return new Class<?>[] { IFn.class };, +++ b/language-adaptors/rxjava-groovy/src/main/java/org/rx/lang/groovy/GroovyAdaptor.java, +    public Class<?>[] getFunctionClass() {, +        return new Class<?>[] { Closure.class };, +++ b/language-adaptors/rxjava-clojure/src/main/java/org/rx/lang/clojure/ClojureAdaptor.java, +    public Class<?>[] getFunctionClass() {, +        return new Class<?>[] { IFn.class };, +++ b/language-adaptors/rxjava-groovy/src/main/java/org/rx/lang/groovy/GroovyAdaptor.java, +    public Class<?>[] getFunctionClass() {, +        return new Class<?>[] { Closure.class };, +++ b/language-adaptors/rxjava-jruby/src/main/java/org/rx/lang/jruby/JRubyAdaptor.java, +    public Class<?>[] getFunctionClass() {, +        return new Class<?>[] { RubyProc.class };, +++ b/language-adaptors/rxjava-clojure/src/main/java/org/rx/lang/clojure/ClojureAdaptor.java, +    public Class<?>[] getFunctionClass() {, +        return new Class<?>[] { IFn.class };, +++ b/language-adaptors/rxjava-groovy/src/main/java/org/rx/lang/groovy/GroovyAdaptor.java, +    public Class<?>[] getFunctionClass() {, +        return new Class<?>[] { Closure.class };, +++ b/language-adaptors/rxjava-jruby/src/main/java/org/rx/lang/jruby/JRubyAdaptor.java, +    public Class<?>[] getFunctionClass() {, +        return new Class<?>[] { RubyProc.class };, +++ b/rxjava-core/src/main/java/org/rx/functions/FunctionLanguageAdaptor.java, +     * <p>, +     * This should not return classes of java.* packages., +     * @return Class[] of classes that this adaptor should be invoked for., +    public Class<?>[] getFunctionClass();, +++ b/language-adaptors/rxjava-clojure/src/main/java/org/rx/lang/clojure/ClojureAdaptor.java, +    public Class<?>[] getFunctionClass() {, +        return new Class<?>[] { IFn.class };, +++ b/language-adaptors/rxjava-groovy/src/main/java/org/rx/lang/groovy/GroovyAdaptor.java, +    public Class<?>[] getFunctionClass() {, +        return new Class<?>[] { Closure.class };, +++ b/language-adaptors/rxjava-jruby/src/main/java/org/rx/lang/jruby/JRubyAdaptor.java, +    public Class<?>[] getFunctionClass() {, +        return new Class<?>[] { RubyProc.class };, +++ b/rxjava-core/src/main/java/org/rx/functions/FunctionLanguageAdaptor.java, +     * <p>, +     * This should not return classes of java.* packages., +     * @return Class[] of classes that this adaptor should be invoked for., +    public Class<?>[] getFunctionClass();, +++ b/rxjava-core/src/main/java/org/rx/functions/Functions.java, +    public static void registerLanguageAdaptor(Class<?>[] functionClasses, FunctionLanguageAdaptor adaptor) {, +        for (Class<?> functionClass : functionClasses) {, +            if (functionClass.getPackage().getName().startsWith("java.")) {, +                throw new IllegalArgumentException("FunctionLanguageAdaptor implementations can not specify java.lang.* classes.");, +            }, +    }]