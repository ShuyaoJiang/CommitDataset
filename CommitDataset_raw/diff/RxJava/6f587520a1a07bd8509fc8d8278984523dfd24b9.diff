[+++ b/CHANGES.md, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.12.2-SNAPSHOT, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.12.2-SNAPSHOT, +++ b/language-adaptors/rxjava-groovy/src/main/java/rx/lang/groovy/GroovyFunctionWrapper.java, +public class GroovyFunctionWrapper<T1, T2, T3, T4, R> implements Func0<R>, Func1<T1, R>, Func2<T1, T2, R>, Func3<T1, T2, T3, R>, Func4<T1, T2, T3, T4, R> {, +    , +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.12.2-SNAPSHOT, +++ b/language-adaptors/rxjava-groovy/src/main/java/rx/lang/groovy/GroovyFunctionWrapper.java, +public class GroovyFunctionWrapper<T1, T2, T3, T4, R> implements Func0<R>, Func1<T1, R>, Func2<T1, T2, R>, Func3<T1, T2, T3, R>, Func4<T1, T2, T3, T4, R> {, +    , +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/ConnectableObservable.scala, +package rx.lang.scala, +, +, +class ConnectableObservable[+T](val asJava: rx.observables.ConnectableObservable[_ <: T]) {, +  import All._, +  import All.util._, +  import rx.{Observable => JObservable}, +  import ImplicitFunctionConversions._, +  , +}, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.12.2-SNAPSHOT, +++ b/language-adaptors/rxjava-groovy/src/main/java/rx/lang/groovy/GroovyFunctionWrapper.java, +public class GroovyFunctionWrapper<T1, T2, T3, T4, R> implements Func0<R>, Func1<T1, R>, Func2<T1, T2, R>, Func3<T1, T2, T3, R>, Func4<T1, T2, T3, T4, R> {, +    , +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/ConnectableObservable.scala, +package rx.lang.scala, +, +, +class ConnectableObservable[+T](val asJava: rx.observables.ConnectableObservable[_ <: T]) {, +  import All._, +  import All.util._, +  import rx.{Observable => JObservable}, +  import ImplicitFunctionConversions._, +  , +}, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/ImplicitFunctionConversions.scala, +, +/*, + * These function conversions are only used by the ScalaAdapter, users of RxScala don't need them., + */, +package rx.lang.scala, +, +, +import java.{lang => jlang}, +import rx.util.functions.Action0, +import rx.util.functions.Action1, +import rx.util.functions.Func0, +import rx.util.functions.Func1, +import rx.util.functions.Func2, +import rx.util.functions.Func3, +import rx.util.functions.Func4, +import scala.language.implicitConversions, +, +object ImplicitFunctionConversions {, +    // code below is copied from, +    // https://github.com/Netflix/RxJava/blob/master/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/RxImplicits.scala, +    , +    import java.{ lang => jlang }, +    import language.implicitConversions, +  , +    import rx.observables.BlockingObservable, +    import rx.util.functions._, +    import rx.{Observer, Subscription}, +    , +    implicit def scalaFunction1ToOnSubscribeFunc[T](f: rx.lang.scala.All.Observer[T] => Subscription) =, +        new rx.Observable.OnSubscribeFunc[T] {, +            def onSubscribe(obs: Observer[_ >: T]): Subscription = {, +              f(new rx.lang.scala.All.JavaObserverToScalaObserver(obs)), +            }, +        }, +    , +    /*implicit def scalaFunction1ToOnSubscribeFunc[T](f: Observer[_ >: T] => Subscription) =, +        new rx.Observable.OnSubscribeFunc[T] {, +            def onSubscribe(obs: Observer[_ >: T]): Subscription = {, +              f(obs), +            }, +        }*/, +    , +    /**, +     * Converts a by-name parameter to a Rx Func0, +     */, +    implicit def scalaByNameParamToFunc0[B](param: => B): Func0[B] = , +        new Func0[B]{, +            def call(): B = param, +        }, +    , +    , +    /**, +     * Converts 0-arg function to Rx Action0, +     */, +    implicit def scalaFunction0ProducingUnitToAction0(f: (() => Unit)): Action0 =]