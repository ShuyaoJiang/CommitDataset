[+++ b/CHANGES.md, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.13.2-SNAPSHOT, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.13.2-SNAPSHOT, +++ /dev/null, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.13.2-SNAPSHOT, +++ /dev/null, +++ b/language-adaptors/rxjava-scala/TODO.md, +- [ ] ConnectableObservable: Implement adaptor. Note that it cannot extend Scala Observable, since value classes are final., +- [ ] more methods of BlockingObservable, +- [ ] multicast, publish, replay once we have ConnectableObservable, +- [ ] groupBy and GroupedObservable, +- [ ] mirror complete Java package structure in Scala, +- [ ] convert Java futures to Scala futures, +- [ ] Add methods present in Scala collections library, but not in RxJava, e.g. zipWithIndex, aggregate à la Scala, +- [ ] mergeDelayError, combineLatest, merge, concat, zip: decide if instance method or static or both, decide about arities > 2, +- [ ] naming: switch() or switchOnNext()?, +- [ ] decide where the MovieLib/MovieLibUsage (use Scala code from Java code) example should live and make sure gradle builds it in the right order, +- [ ] Avoid text duplication in scaladoc using templates, add examples, distinction between use case signature and full signature, +- [ ] other small TODOs, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.13.2-SNAPSHOT, +++ /dev/null, +++ b/language-adaptors/rxjava-scala/TODO.md, +- [ ] ConnectableObservable: Implement adaptor. Note that it cannot extend Scala Observable, since value classes are final., +- [ ] more methods of BlockingObservable, +- [ ] multicast, publish, replay once we have ConnectableObservable, +- [ ] groupBy and GroupedObservable, +- [ ] mirror complete Java package structure in Scala, +- [ ] convert Java futures to Scala futures, +- [ ] Add methods present in Scala collections library, but not in RxJava, e.g. zipWithIndex, aggregate à la Scala, +- [ ] mergeDelayError, combineLatest, merge, concat, zip: decide if instance method or static or both, decide about arities > 2, +- [ ] naming: switch() or switchOnNext()?, +- [ ] decide where the MovieLib/MovieLibUsage (use Scala code from Java code) example should live and make sure gradle builds it in the right order, +- [ ] Avoid text duplication in scaladoc using templates, add examples, distinction between use case signature and full signature, +- [ ] other small TODOs, +++ b/language-adaptors/rxjava-scala/build.gradle, +        instruction 'Import-Package', '!org.junit,!junit.framework,!org.mockito.*,*', +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.13.2-SNAPSHOT, +++ /dev/null, +++ b/language-adaptors/rxjava-scala/TODO.md, +- [ ] ConnectableObservable: Implement adaptor. Note that it cannot extend Scala Observable, since value classes are final., +- [ ] more methods of BlockingObservable, +- [ ] multicast, publish, replay once we have ConnectableObservable, +- [ ] groupBy and GroupedObservable, +- [ ] mirror complete Java package structure in Scala, +- [ ] convert Java futures to Scala futures, +- [ ] Add methods present in Scala collections library, but not in RxJava, e.g. zipWithIndex, aggregate à la Scala, +- [ ] mergeDelayError, combineLatest, merge, concat, zip: decide if instance method or static or both, decide about arities > 2, +- [ ] naming: switch() or switchOnNext()?, +- [ ] decide where the MovieLib/MovieLibUsage (use Scala code from Java code) example should live and make sure gradle builds it in the right order, +- [ ] Avoid text duplication in scaladoc using templates, add examples, distinction between use case signature and full signature, +- [ ] other small TODOs, +++ b/language-adaptors/rxjava-scala/build.gradle, +        instruction 'Import-Package', '!org.junit,!junit.framework,!org.mockito.*,*', +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/ImplicitFunctionConversions.scala, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.13.2-SNAPSHOT, +++ /dev/null, +++ b/language-adaptors/rxjava-scala/TODO.md, +- [ ] ConnectableObservable: Implement adaptor. Note that it cannot extend Scala Observable, since value classes are final., +- [ ] more methods of BlockingObservable, +- [ ] multicast, publish, replay once we have ConnectableObservable, +- [ ] groupBy and GroupedObservable, +- [ ] mirror complete Java package structure in Scala, +- [ ] convert Java futures to Scala futures, +- [ ] Add methods present in Scala collections library, but not in RxJava, e.g. zipWithIndex, aggregate à la Scala, +- [ ] mergeDelayError, combineLatest, merge, concat, zip: decide if instance method or static or both, decide about arities > 2, +- [ ] naming: switch() or switchOnNext()?, +- [ ] decide where the MovieLib/MovieLibUsage (use Scala code from Java code) example should live and make sure gradle builds it in the right order, +- [ ] Avoid text duplication in scaladoc using templates, add examples, distinction between use case signature and full signature, +- [ ] other small TODOs, +++ b/language-adaptors/rxjava-scala/build.gradle, +        instruction 'Import-Package', '!org.junit,!junit.framework,!org.mockito.*,*', +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/ImplicitFunctionConversions.scala, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +import org.scalatest.junit.JUnitSuite, +import scala.collection.Seq, +import rx.lang.scala.observables.BlockingObservable, +, +, +    Observable[T](JObservable.synchronize(asJava)), +  // There is no method corresponding to, +  // public static <T> Observable<Boolean> sequenceEqual(Observable<? extends T> first, Observable<? extends T> second), +  // because the Scala-idiomatic way of doing this is, +  // (first zip second) map (p => p._1 == p._2), +  // There is no method corresponding to  , +  // public static <T> Observable<Boolean> sequenceEqual(Observable<? extends T> first, Observable<? extends T> second, Func2<? super T, ? super T, Boolean> equality), +  // because the Scala-idiomatic way of doing this is, +  // (first zip second) map (p => equality(p._1, p._2)), +  // There is no method like]