[+++ b/src/main/java/rx/internal/operators/OnSubscribeSingle.java, +        observable.unsafeSubscribe(parent);, +++ b/src/main/java/rx/internal/operators/OnSubscribeSingle.java, +        observable.unsafeSubscribe(parent);, +++ b/src/test/java/rx/internal/operators/OnSubscribeSingleTest.java, +import static org.junit.Assert.assertFalse;, +import java.util.concurrent.atomic.AtomicBoolean;, +, +import org.junit.Test;, +, +import rx.Observable;, +import rx.Single;, +import rx.functions.Action0;, +import rx.observers.TestSubscriber;, +    , +    @Test, +    public void testShouldUseUnsafeSubscribeInternallyNotSubscribe() {, +        TestSubscriber<String> subscriber = TestSubscriber.create();, +        final AtomicBoolean unsubscribed = new AtomicBoolean(false);, +        Single<String> single = Observable.just("Hello World!").doOnUnsubscribe(new Action0() {, +, +            @Override, +            public void call() {, +                unsubscribed.set(true);, +            }}).toSingle();, +        single.unsafeSubscribe(subscriber);, +        subscriber.assertCompleted();, +        assertFalse(unsubscribed.get());, +    }]