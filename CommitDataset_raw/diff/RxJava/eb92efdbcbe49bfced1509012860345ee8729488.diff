[+++ b/rxjava-contrib/rxjava-android/src/main/java/rx/android/observables/AndroidObservable.java, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/android/observables/AndroidObservable.java, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/operators/OperatorObserveFromAndroidComponent.java, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/android/observables/AndroidObservable.java, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/operators/OperatorObserveFromAndroidComponent.java, +++ /dev/null, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/android/observables/AndroidObservable.java, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/operators/OperatorObserveFromAndroidComponent.java, +++ /dev/null, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/operators/DebugSubscriber.java, +import rx.plugins.DebugNotificationListener;, +    private DebugNotificationListener<C> listener;, +            DebugNotificationListener<C> listener,, +        this.listener = listener;, +        this.add(new DebugSubscription<T, C>(this, listener));, +        final DebugNotification<T> n = DebugNotification.createOnCompleted(o, from, to);, +        C context = listener.start(n);, +            listener.complete(context);, +            listener.error(context, e);, +        final DebugNotification<T> n = DebugNotification.createOnError(o, from, e, to);, +        C context = listener.start(n);, +            listener.complete(context);, +            listener.error(context, e2);, +        final DebugNotification<T> n = DebugNotification.createOnNext(o, from, t, to);, +        t = (T) listener.onNext(n);, +, +        C context = listener.start(n);, +            o.onNext(t);, +            listener.complete(context);, +            listener.error(context, e);, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/android/observables/AndroidObservable.java, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/operators/OperatorObserveFromAndroidComponent.java, +++ /dev/null, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/operators/DebugSubscriber.java, +import rx.plugins.DebugNotificationListener;, +    private DebugNotificationListener<C> listener;, +            DebugNotificationListener<C> listener,, +        this.listener = listener;, +        this.add(new DebugSubscription<T, C>(this, listener));, +        final DebugNotification<T> n = DebugNotification.createOnCompleted(o, from, to);, +        C context = listener.start(n);, +            listener.complete(context);, +            listener.error(context, e);, +        final DebugNotification<T> n = DebugNotification.createOnError(o, from, e, to);, +        C context = listener.start(n);, +            listener.complete(context);, +            listener.error(context, e2);, +        final DebugNotification<T> n = DebugNotification.createOnNext(o, from, t, to);, +        t = (T) listener.onNext(n);, +, +        C context = listener.start(n);, +            o.onNext(t);, +            listener.complete(context);, +            listener.error(context, e);, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/operators/DebugSubscription.java, +import rx.plugins.DebugNotificationListener;, +    private DebugNotificationListener<C> listener;, +    DebugSubscription(DebugSubscriber<T, C> debugObserver, DebugNotificationListener<C> listener) {, +        this.listener = listener;, +        final DebugNotification<T> n = DebugNotification.<T> createUnsubscribe(debugObserver.getActual(), debugObserver.getFrom(), debugObserver.getTo());, +        C context = listener.start(n);, +            listener.complete(context);, +            listener.error(context, e);, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/android/observables/AndroidObservable.java, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/operators/OperatorObserveFromAndroidComponent.java, +++ /dev/null, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/operators/DebugSubscriber.java, +import rx.plugins.DebugNotificationListener;, +    private DebugNotificationListener<C> listener;, +            DebugNotificationListener<C> listener,, +        this.listener = listener;, +        this.add(new DebugSubscription<T, C>(this, listener));, +        final DebugNotification<T> n = DebugNotification.createOnCompleted(o, from, to);, +        C context = listener.start(n);, +            listener.complete(context);, +            listener.error(context, e);, +        final DebugNotification<T> n = DebugNotification.createOnError(o, from, e, to);, +        C context = listener.start(n);, +            listener.complete(context);, +            listener.error(context, e2);, +        final DebugNotification<T> n = DebugNotification.createOnNext(o, from, t, to);, +        t = (T) listener.onNext(n);, +, +        C context = listener.start(n);, +            o.onNext(t);, +            listener.complete(context);, +            listener.error(context, e);, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/operators/DebugSubscription.java, +import rx.plugins.DebugNotificationListener;, +    private DebugNotificationListener<C> listener;, +    DebugSubscription(DebugSubscriber<T, C> debugObserver, DebugNotificationListener<C> listener) {, +        this.listener = listener;, +        final DebugNotification<T> n = DebugNotification.<T> createUnsubscribe(debugObserver.getActual(), debugObserver.getFrom(), debugObserver.getTo());, +        C context = listener.start(n);, +            listener.complete(context);, +            listener.error(context, e);, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugHook.java, +    private DebugNotificationListener<C> listener;, +    public DebugHook(DebugNotificationListener<C> listener) {, +        if (listener == null)]