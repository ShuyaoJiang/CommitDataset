[+++ b/src/main/java/rx/Observable.java, +        if (observer instanceof Subscriber) {, +            return subscribe((Subscriber<? super T>)observer);, +        }, +++ b/src/main/java/rx/Observable.java, +        if (observer instanceof Subscriber) {, +            return subscribe((Subscriber<? super T>)observer);, +        }, +++ b/src/test/java/rx/ObservableTests.java, +    , +    @Test // cf. https://github.com/ReactiveX/RxJava/issues/2599, +    public void testSubscribingSubscriberAsObserverMaintainsSubscriptionChain() {, +        TestSubscriber<Object> subscriber = new TestSubscriber<Object>();, +        Subscription subscription = Observable.just("event").subscribe((Observer<Object>) subscriber);, +        subscription.unsubscribe();, +, +        subscriber.assertUnsubscribed();, +    }]