[+++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorConcat.java, +        public void onStart() {, +            // no need for more than 1 at a time since we concat 1 at a time, so we'll request 2 to start ..., +            // 1 to be subscribed to, 1 in the queue, then we'll keep requesting 1 at a time after that, +            request(2);, +        }, +, +        @Override, +, +            request(1);, +, +            } else if (o != null) {, +                        // TODO need to support backpressure here https://github.com/Netflix/RxJava/issues/1480, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorConcat.java, +        public void onStart() {, +            // no need for more than 1 at a time since we concat 1 at a time, so we'll request 2 to start ..., +            // 1 to be subscribed to, 1 in the queue, then we'll keep requesting 1 at a time after that, +            request(2);, +        }, +, +        @Override, +, +            request(1);, +, +            } else if (o != null) {, +                        // TODO need to support backpressure here https://github.com/Netflix/RxJava/issues/1480, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorWindowWithSize.java, +        public void onStart() {, +            // no backpressure as we are controlling data flow by window size, +            request(Long.MAX_VALUE);, +        }, +        , +        @Override, +        public void onStart() {, +            // no backpressure as we are controlling data flow by window size, +            request(Long.MAX_VALUE);, +        }, +        , +        @Override, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorConcat.java, +        public void onStart() {, +            // no need for more than 1 at a time since we concat 1 at a time, so we'll request 2 to start ..., +            // 1 to be subscribed to, 1 in the queue, then we'll keep requesting 1 at a time after that, +            request(2);, +        }, +, +        @Override, +, +            request(1);, +, +            } else if (o != null) {, +                        // TODO need to support backpressure here https://github.com/Netflix/RxJava/issues/1480, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorWindowWithSize.java, +        public void onStart() {, +            // no backpressure as we are controlling data flow by window size, +            request(Long.MAX_VALUE);, +        }, +        , +        @Override, +        public void onStart() {, +            // no backpressure as we are controlling data flow by window size, +            request(Long.MAX_VALUE);, +        }, +        , +        @Override, +++ b/rxjava-core/src/test/java/rx/internal/operators/OperatorConcatTest.java, +import static org.junit.Assert.assertEquals;, +    , +    @Test, +    public void testConcatOuterBackpressure() {, +        assertEquals(1,, +                (int) Observable.<Integer> empty(), +                        .concatWith(Observable.just(1)), +                        .take(1), +                        .toBlocking().single());, +    }]