[+++ b/src/main/java/io/reactivex/Completable.java, +import org.reactivestreams.Publisher;, +import io.reactivex.internal.operators.single.SingleDelayWithCompletable;, +import io.reactivex.internal.util.ExceptionHelper;, +            throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Completable.java, +import org.reactivestreams.Publisher;, +import io.reactivex.internal.operators.single.SingleDelayWithCompletable;, +import io.reactivex.internal.util.ExceptionHelper;, +            throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Flowable.java, +                throw ExceptionHelper.wrapOrThrow(e);, +            throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Completable.java, +import org.reactivestreams.Publisher;, +import io.reactivex.internal.operators.single.SingleDelayWithCompletable;, +import io.reactivex.internal.util.ExceptionHelper;, +            throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Flowable.java, +                throw ExceptionHelper.wrapOrThrow(e);, +            throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Observable.java, +                throw ExceptionHelper.wrapOrThrow(e);, +            throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Completable.java, +import org.reactivestreams.Publisher;, +import io.reactivex.internal.operators.single.SingleDelayWithCompletable;, +import io.reactivex.internal.util.ExceptionHelper;, +            throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Flowable.java, +                throw ExceptionHelper.wrapOrThrow(e);, +            throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Observable.java, +                throw ExceptionHelper.wrapOrThrow(e);, +            throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Scheduler.java, +import io.reactivex.internal.util.ExceptionHelper;, +    /**, +     * Returns the clock drift tolerance in nanoseconds., +     * <p>Related system property: {@code rx2.scheduler.drift-tolerance} in minutes, +     * @return the tolerance in nanoseconds, +     * @since 2.0, +     */, +    public static long clockDriftTolerance() {, +        return CLOCK_DRIFT_TOLERANCE_NANOSECONDS;, +    }, +    , +                    throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Completable.java, +import org.reactivestreams.Publisher;, +import io.reactivex.internal.operators.single.SingleDelayWithCompletable;, +import io.reactivex.internal.util.ExceptionHelper;, +            throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Flowable.java, +                throw ExceptionHelper.wrapOrThrow(e);, +            throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Observable.java, +                throw ExceptionHelper.wrapOrThrow(e);, +            throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Scheduler.java, +import io.reactivex.internal.util.ExceptionHelper;, +    /**, +     * Returns the clock drift tolerance in nanoseconds., +     * <p>Related system property: {@code rx2.scheduler.drift-tolerance} in minutes, +     * @return the tolerance in nanoseconds, +     * @since 2.0, +     */, +    public static long clockDriftTolerance() {, +        return CLOCK_DRIFT_TOLERANCE_NANOSECONDS;, +    }, +    , +                    throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Single.java, +import io.reactivex.internal.util.*;, +            throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Completable.java, +import org.reactivestreams.Publisher;, +import io.reactivex.internal.operators.single.SingleDelayWithCompletable;, +import io.reactivex.internal.util.ExceptionHelper;, +            throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Flowable.java, +                throw ExceptionHelper.wrapOrThrow(e);, +            throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Observable.java, +                throw ExceptionHelper.wrapOrThrow(e);, +            throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Scheduler.java, +import io.reactivex.internal.util.ExceptionHelper;, +    /**, +     * Returns the clock drift tolerance in nanoseconds., +     * <p>Related system property: {@code rx2.scheduler.drift-tolerance} in minutes, +     * @return the tolerance in nanoseconds, +     * @since 2.0, +     */, +    public static long clockDriftTolerance() {, +        return CLOCK_DRIFT_TOLERANCE_NANOSECONDS;, +    }, +    , +                    throw ExceptionHelper.wrapOrThrow(ex);, +++ b/src/main/java/io/reactivex/Single.java]