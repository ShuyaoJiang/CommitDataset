[+++ b/rxjava-core/src/main/java/rx/Observable.java, +     * <p>, +     * there is more than one {@link Subscriber} this {@link Observable} will be subscribed and emitting data. , +     * @return an {@code Observable} that upon connection causes the source {@code Observable} to emit items, +     * Returns an Observable that mirrors the source Observable, but notifies observers of a, +     * {@code TimeoutException} if either the first item emitted by the source Observable or any subsequent item, +     * doesn't arrive within time windows defined by other Observables., +     * @return an Observable that mirrors the source Observable, but notifies observers of a, +     *         {@code TimeoutException} if either the first item or any subsequent item doesn't arrive within, +     *         the time windows specified by the timeout selectors, +     * the first item emitted by the source Observable or any subsequent item doesn't arrive within time windows, +     *         either the first item emitted by the source Observable or any subsequent item doesn't arrive, +     *         within time windows defined by the timeout selectors, +     * Returns an Observable that mirrors the source Observable, but notifies observers of a, +     * {@code TimeoutException} if an item emitted by the source Observable doesn't arrive within a window of, +     * time after the emission of the previous item, where that period of time is measured by an Observable that, +     * is a function of the previous item., +     * @return an Observable that mirrors the source Observable, but notifies observers of a, +     *         {@code TimeoutException} if an item emitted by the source Observable takes longer to arrive than, +     *         the time window defined by the selector for the previously emitted item, +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * <p>, +     * there is more than one {@link Subscriber} this {@link Observable} will be subscribed and emitting data. , +     * @return an {@code Observable} that upon connection causes the source {@code Observable} to emit items, +     * Returns an Observable that mirrors the source Observable, but notifies observers of a, +     * {@code TimeoutException} if either the first item emitted by the source Observable or any subsequent item, +     * doesn't arrive within time windows defined by other Observables., +     * @return an Observable that mirrors the source Observable, but notifies observers of a, +     *         {@code TimeoutException} if either the first item or any subsequent item doesn't arrive within, +     *         the time windows specified by the timeout selectors, +     * the first item emitted by the source Observable or any subsequent item doesn't arrive within time windows, +     *         either the first item emitted by the source Observable or any subsequent item doesn't arrive, +     *         within time windows defined by the timeout selectors, +     * Returns an Observable that mirrors the source Observable, but notifies observers of a, +     * {@code TimeoutException} if an item emitted by the source Observable doesn't arrive within a window of, +     * time after the emission of the previous item, where that period of time is measured by an Observable that, +     * is a function of the previous item., +     * @return an Observable that mirrors the source Observable, but notifies observers of a, +     *         {@code TimeoutException} if an item emitted by the source Observable takes longer to arrive than, +     *         the time window defined by the selector for the previously emitted item, +++ b/rxjava-core/src/main/java/rx/observables/GroupedObservable.java]