[+++ /dev/null, +++ /dev/null, +++ b/src/main/java/io/reactivex/internal/subscribers/observable/NbpEmptySubscriber.java, +    INSTANCE(false),, +    DISPOSED(true);, +    NbpEmptySubscriber(boolean disposeDisposable) {, +++ /dev/null, +++ b/src/main/java/io/reactivex/internal/subscribers/observable/NbpEmptySubscriber.java, +    INSTANCE(false),, +    DISPOSED(true);, +    NbpEmptySubscriber(boolean disposeDisposable) {, +++ b/src/main/java/io/reactivex/observers/Observers.java, +++ /dev/null, +++ b/src/main/java/io/reactivex/internal/subscribers/observable/NbpEmptySubscriber.java, +    INSTANCE(false),, +    DISPOSED(true);, +    NbpEmptySubscriber(boolean disposeDisposable) {, +++ b/src/main/java/io/reactivex/observers/Observers.java, +++ b/src/main/java/io/reactivex/observers/TestObserver.java, +import io.reactivex.internal.disposables.DisposableHelper;, +        this(EmptyObserver.INSTANCE);, +, +    /**, +     * An observer that ignores all events and does not report errors., +     */, +    private enum EmptyObserver implements Observer<Object> {, +        INSTANCE;, +, +        @Override, +        public void onSubscribe(Disposable d) {, +        }, +, +        @Override, +        public void onNext(Object t) {, +        }, +, +        @Override, +        public void onError(Throwable t) {, +        }, +, +        @Override, +        public void onComplete() {, +        }, +    }, +++ /dev/null, +++ b/src/main/java/io/reactivex/internal/subscribers/observable/NbpEmptySubscriber.java, +    INSTANCE(false),, +    DISPOSED(true);, +    NbpEmptySubscriber(boolean disposeDisposable) {, +++ b/src/main/java/io/reactivex/observers/Observers.java, +++ b/src/main/java/io/reactivex/observers/TestObserver.java, +import io.reactivex.internal.disposables.DisposableHelper;, +        this(EmptyObserver.INSTANCE);, +, +    /**, +     * An observer that ignores all events and does not report errors., +     */, +    private enum EmptyObserver implements Observer<Object> {, +        INSTANCE;, +, +        @Override, +        public void onSubscribe(Disposable d) {, +        }, +, +        @Override, +        public void onNext(Object t) {, +        }, +, +        @Override, +        public void onError(Throwable t) {, +        }, +, +        @Override, +        public void onComplete() {, +        }, +    }, +++ b/src/main/java/io/reactivex/subscribers/Subscribers.java, +++ /dev/null, +++ b/src/main/java/io/reactivex/internal/subscribers/observable/NbpEmptySubscriber.java, +    INSTANCE(false),, +    DISPOSED(true);, +    NbpEmptySubscriber(boolean disposeDisposable) {, +++ b/src/main/java/io/reactivex/observers/Observers.java, +++ b/src/main/java/io/reactivex/observers/TestObserver.java, +import io.reactivex.internal.disposables.DisposableHelper;, +        this(EmptyObserver.INSTANCE);, +, +    /**, +     * An observer that ignores all events and does not report errors., +     */, +    private enum EmptyObserver implements Observer<Object> {, +        INSTANCE;, +, +        @Override, +        public void onSubscribe(Disposable d) {, +        }, +, +        @Override, +        public void onNext(Object t) {, +        }]