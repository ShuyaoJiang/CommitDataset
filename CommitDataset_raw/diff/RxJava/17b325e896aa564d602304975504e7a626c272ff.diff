[+++ b/src/main/java/io/reactivex/Maybe.java, +        return RxJavaPlugins.onAssembly(new MaybeFlatMapIterableFlowable<T, U>(this, mapper));, +        return RxJavaPlugins.onAssembly(new MaybeFlatMapIterableObservable<T, U>(this, mapper));, +++ b/src/main/java/io/reactivex/Maybe.java, +        return RxJavaPlugins.onAssembly(new MaybeFlatMapIterableFlowable<T, U>(this, mapper));, +        return RxJavaPlugins.onAssembly(new MaybeFlatMapIterableObservable<T, U>(this, mapper));, +++ b/src/main/java/io/reactivex/Observable.java, +        return RxJavaPlugins.onAssembly(new ObservableDistinct<T, K>(this, keySelector, collectionSupplier));, +        return RxJavaPlugins.onAssembly(new ObservablePublishSelector<T, R>(this, selector));, +++ b/src/main/java/io/reactivex/Maybe.java, +        return RxJavaPlugins.onAssembly(new MaybeFlatMapIterableFlowable<T, U>(this, mapper));, +        return RxJavaPlugins.onAssembly(new MaybeFlatMapIterableObservable<T, U>(this, mapper));, +++ b/src/main/java/io/reactivex/Observable.java, +        return RxJavaPlugins.onAssembly(new ObservableDistinct<T, K>(this, keySelector, collectionSupplier));, +        return RxJavaPlugins.onAssembly(new ObservablePublishSelector<T, R>(this, selector));, +++ b/src/main/java/io/reactivex/Single.java, +        return RxJavaPlugins.onAssembly(new SingleFlatMapIterableFlowable<T, U>(this, mapper));, +        return RxJavaPlugins.onAssembly(new SingleFlatMapIterableObservable<T, U>(this, mapper));]