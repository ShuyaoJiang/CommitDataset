[+++ b/src/main/java/rx/Single.java, +     * <em>Note:</em> Use {@link #create(OnSubscribe)} to create a Single, instead of this constructor,, +     *            {@code OnExecute} to be executed when {@code execute(SingleSubscriber)} or, +     *            {@code subscribe(Subscriber)} is called, +     * subscriber, the Single invokes its subscriber's {@link Subscriber#onError} method, and then quits, +     * {@link Subscriber#onError} method, it will instead emit the return value of {@code resumeFunction}., +     * @param onSuccess, +     * @param onSuccess, +     * @param te, +     *            the {@link SingleSubscriber} that will handle the emission or notification from the Single, +     *             if the {@link SingleSubscriber} provided as the argument to {@code subscribe} is {@code null}, +     *             if the {@link SingleSubscriber}'s {@code onError} method is null, +     *             if the {@link SingleSubscriber}'s {@code onError} method itself threw a {@code Throwable}, +++ b/src/main/java/rx/Single.java, +     * <em>Note:</em> Use {@link #create(OnSubscribe)} to create a Single, instead of this constructor,, +     *            {@code OnExecute} to be executed when {@code execute(SingleSubscriber)} or, +     *            {@code subscribe(Subscriber)} is called, +     * subscriber, the Single invokes its subscriber's {@link Subscriber#onError} method, and then quits, +     * {@link Subscriber#onError} method, it will instead emit the return value of {@code resumeFunction}., +     * @param onSuccess, +     * @param onSuccess, +     * @param te, +     *            the {@link SingleSubscriber} that will handle the emission or notification from the Single, +     *             if the {@link SingleSubscriber} provided as the argument to {@code subscribe} is {@code null}, +     *             if the {@link SingleSubscriber}'s {@code onError} method is null, +     *             if the {@link SingleSubscriber}'s {@code onError} method itself threw a {@code Throwable}, +++ b/src/main/java/rx/SingleSubscriber.java, + * After a SingleSubscriber calls a {@link Single}'s {@link Single#subscribe subscribe} method, the, + * {@code Single} calls the SingleSubscriber's {@link #onSuccess} and {@link #onError} methods to provide, + * notifications. A well-behaved {@code Single} will call a SingleSubscriber's {@link #onSuccess} method exactly, + * once or the SingleSubscriber's {@link #onError} method exactly once., +     * Notifies the SingleSubscriber with a single item and that the {@link Single} has finished sending, +     * push-based notifications., +     * , +     * @param value, +     *          the item emitted by the Single, +     * @param error]