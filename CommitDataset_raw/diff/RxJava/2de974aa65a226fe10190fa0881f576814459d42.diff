[+++ b/src/main/java/io/reactivex/Completable.java, +    public static <T> Completable fromObservable(final ObservableSource<T> observable) {, +    public final <T> Observable<T> endWith(ObservableSource<T> next) {, +++ b/src/main/java/io/reactivex/Completable.java, +    public static <T> Completable fromObservable(final ObservableSource<T> observable) {, +    public final <T> Observable<T> endWith(ObservableSource<T> next) {, +++ b/src/main/java/io/reactivex/Observable.java, +public abstract class Observable<T> implements ObservableSource<T> {, +    public static <T> Observable<T> amb(Iterable<? extends ObservableSource<? extends T>> sources) {, +    public static <T> Observable<T> amb(ObservableSource<? extends T>... sources) {, +    public static <T, R> Observable<R> combineLatest(Function<? super T[], ? extends R> combiner, boolean delayError, int bufferSize, ObservableSource<? extends T>... sources) {, +    public static <T, R> Observable<R> combineLatest(Iterable<? extends ObservableSource<? extends T>> sources, Function<? super T[], ? extends R> combiner) {, +    public static <T, R> Observable<R> combineLatest(Iterable<? extends ObservableSource<? extends T>> sources, Function<? super T[], ? extends R> combiner, boolean delayError) {, +    public static <T, R> Observable<R> combineLatest(Iterable<? extends ObservableSource<? extends T>> sources, Function<? super T[], ? extends R> combiner, boolean delayError, int bufferSize) {, +    public static <T, R> Observable<R> combineLatest(ObservableSource<? extends T>[] sources, Function<? super T[], ? extends R> combiner) {, +    public static <T, R> Observable<R> combineLatest(ObservableSource<? extends T>[] sources, Function<? super T[], ? extends R> combiner, boolean delayError) {, +    public static <T, R> Observable<R> combineLatest(ObservableSource<? extends T>[] sources, Function<? super T[], ? extends R> combiner, boolean delayError, int bufferSize) {, +            ObservableSource<? extends T1> p1, ObservableSource<? extends T2> p2,, +            ObservableSource<? extends T1> p1, ObservableSource<? extends T2> p2,, +            ObservableSource<? extends T3> p3,, +            ObservableSource<? extends T1> p1, ObservableSource<? extends T2> p2,, +            ObservableSource<? extends T3> p3, ObservableSource<? extends T4> p4,, +            ObservableSource<? extends T1> p1, ObservableSource<? extends T2> p2,, +            ObservableSource<? extends T3> p3, ObservableSource<? extends T4> p4,, +            ObservableSource<? extends T5> p5,, +            ObservableSource<? extends T1> p1, ObservableSource<? extends T2> p2,, +            ObservableSource<? extends T3> p3, ObservableSource<? extends T4> p4,, +            ObservableSource<? extends T5> p5, ObservableSource<? extends T6> p6,, +            ObservableSource<? extends T1> p1, ObservableSource<? extends T2> p2,, +            ObservableSource<? extends T3> p3, ObservableSource<? extends T4> p4,, +            ObservableSource<? extends T5> p5, ObservableSource<? extends T6> p6,, +            ObservableSource<? extends T7> p7,, +            ObservableSource<? extends T1> p1, ObservableSource<? extends T2> p2,, +            ObservableSource<? extends T3> p3, ObservableSource<? extends T4> p4,, +            ObservableSource<? extends T5> p5, ObservableSource<? extends T6> p6,, +            ObservableSource<? extends T7> p7, ObservableSource<? extends T8> p8,, +            ObservableSource<? extends T1> p1, ObservableSource<? extends T2> p2,, +            ObservableSource<? extends T3> p3, ObservableSource<? extends T4> p4,, +            ObservableSource<? extends T5> p5, ObservableSource<? extends T6> p6,, +            ObservableSource<? extends T7> p7, ObservableSource<? extends T8> p8,, +            ObservableSource<? extends T9> p9,, +    public static <T> Observable<T> concat(int prefetch, Iterable<? extends ObservableSource<? extends T>> sources) {, +    public static <T> Observable<T> concat(Iterable<? extends ObservableSource<? extends T>> sources) {, +    public static final <T> Observable<T> concat(ObservableSource<? extends ObservableSource<? extends T>> sources) {, +    public static final <T> Observable<T> concat(ObservableSource<? extends ObservableSource<? extends T>> sources, int bufferSize) {, +    public static <T> Observable<T> concat(ObservableSource<? extends T> p1, ObservableSource<? extends T> p2) {, +            ObservableSource<? extends T> p1, ObservableSource<? extends T> p2,, +            ObservableSource<? extends T> p3) {, +            ObservableSource<? extends T> p1, ObservableSource<? extends T> p2,, +            ObservableSource<? extends T> p3, ObservableSource<? extends T> p4) {, +            ObservableSource<? extends T> p1, ObservableSource<? extends T> p2,, +            ObservableSource<? extends T> p3, ObservableSource<? extends T> p4,, +            ObservableSource<? extends T> p5, +            ObservableSource<? extends T> p1, ObservableSource<? extends T> p2,, +            ObservableSource<? extends T> p3, ObservableSource<? extends T> p4,, +            ObservableSource<? extends T> p5, ObservableSource<? extends T> p6, +            ObservableSource<? extends T> p1, ObservableSource<? extends T> p2,, +            ObservableSource<? extends T> p3, ObservableSource<? extends T> p4,, +            ObservableSource<? extends T> p5, ObservableSource<? extends T> p6,, +            ObservableSource<? extends T> p7, +            ObservableSource<? extends T> p1, ObservableSource<? extends T> p2,, +            ObservableSource<? extends T> p3, ObservableSource<? extends T> p4,, +            ObservableSource<? extends T> p5, ObservableSource<? extends T> p6,, +            ObservableSource<? extends T> p7, ObservableSource<? extends T> p8, +            ObservableSource<? extends T> p1, ObservableSource<? extends T> p2,, +            ObservableSource<? extends T> p3, ObservableSource<? extends T> p4,, +            ObservableSource<? extends T> p5, ObservableSource<? extends T> p6,, +            ObservableSource<? extends T> p7, ObservableSource<? extends T> p8,, +            ObservableSource<? extends T> p9, +    public static <T> Observable<T> concatArray(int prefetch, ObservableSource<? extends T>... sources) {, +    public static <T> Observable<T> concatArray(ObservableSource<? extends T>... sources) {, +            return wrap((ObservableSource<T>)sources[0]);, +    public static <T> Observable<T> create(ObservableSource<T> onSubscribe) {, +    public static <T> Observable<T> wrap(ObservableSource<T> onSubscribe) {, +    public static <T> Observable<T> defer(Callable<? extends ObservableSource<? extends T>> supplier) {, +    public static <T> Observable<T> merge(int maxConcurrency, int bufferSize, Iterable<? extends ObservableSource<? extends T>> sources) {, +    public static <T> Observable<T> merge(int maxConcurrency, int bufferSize, ObservableSource<? extends T>... sources) {, +    public static <T> Observable<T> merge(int maxConcurrency, ObservableSource<? extends T>... sources) {, +    public static <T> Observable<T> merge(Iterable<? extends ObservableSource<? extends T>> sources) {, +    public static <T> Observable<T> merge(Iterable<? extends ObservableSource<? extends T>> sources, int maxConcurrency) {, +    public static <T> Observable<T> merge(ObservableSource<? extends ObservableSource<? extends T>> sources) {, +    public static <T> Observable<T> merge(ObservableSource<? extends ObservableSource<? extends T>> sources, int maxConcurrency) {, +    public static <T> Observable<T> merge(ObservableSource<? extends T> p1, ObservableSource<? extends T> p2) {, +    public static <T> Observable<T> merge(ObservableSource<? extends T> p1, ObservableSource<? extends T> p2, Observable<? extends T> p3) {, +            ObservableSource<? extends T> p1, ObservableSource<? extends T> p2,, +            ObservableSource<? extends T> p3, ObservableSource<? extends T> p4) {, +    public static <T> Observable<T> merge(ObservableSource<? extends T>... sources) {, +    public static <T> Observable<T> mergeDelayError(boolean delayErrors, Iterable<? extends ObservableSource<? extends T>> sources) {, +    public static <T> Observable<T> mergeDelayError(int maxConcurrency, int bufferSize, Iterable<? extends ObservableSource<? extends T>> sources) {, +    public static <T> Observable<T> mergeDelayError(int maxConcurrency, int bufferSize, ObservableSource<? extends T>... sources) {, +    public static <T> Observable<T> mergeDelayError(int maxConcurrency, Iterable<? extends ObservableSource<? extends T>> sources) {, +    public static <T> Observable<T> mergeDelayError(int maxConcurrency, ObservableSource<? extends T>... sources) {, +    public static <T> Observable<T> mergeDelayError(ObservableSource<? extends ObservableSource<? extends T>> sources) {, +    public static <T> Observable<T> mergeDelayError(ObservableSource<? extends ObservableSource<? extends T>> sources, int maxConcurrency) {, +    public static <T> Observable<T> mergeDelayError(ObservableSource<? extends T> p1, ObservableSource<? extends T> p2) {, +    public static <T> Observable<T> mergeDelayError(ObservableSource<? extends T> p1, ObservableSource<? extends T> p2, Observable<? extends T> p3) {, +            ObservableSource<? extends T> p1, ObservableSource<? extends T> p2,, +            ObservableSource<? extends T> p3, ObservableSource<? extends T> p4) {, +    public static <T> Observable<T> mergeDelayError(ObservableSource<? extends T>... sources) {, +    public static <T> Observable<Boolean> sequenceEqual(ObservableSource<? extends T> p1, ObservableSource<? extends T> p2) {]