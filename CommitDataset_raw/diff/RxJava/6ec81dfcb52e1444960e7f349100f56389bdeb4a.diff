[+++ b/rxjava-core/src/main/java/rx/Observable.java, +     * , +     * <p> {@code zip} applies this function in strict sequence, so the first item emitted by the, +     * , +     * , +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh211842(v=vs.103).aspx">MSDN: Observable.Cast</a>, +     * , +     * , +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * , +     * <p> {@code zip} applies this function in strict sequence, so the first item emitted by the, +     * , +     * , +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh211842(v=vs.103).aspx">MSDN: Observable.Cast</a>, +     * , +     * , +++ b/rxjava-core/src/main/java/rx/Observer.java, + * After an Observer calls an {@link Observable}'s <code>Observable.subscribe</code> method, the {@link Observable} calls the Observer's <code>onNext</code> method to provide notifications. A, + * well-behaved {@link Observable} will, +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * , +     * <p> {@code zip} applies this function in strict sequence, so the first item emitted by the, +     * , +     * , +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh211842(v=vs.103).aspx">MSDN: Observable.Cast</a>, +     * , +     * , +++ b/rxjava-core/src/main/java/rx/Observer.java, + * After an Observer calls an {@link Observable}'s <code>Observable.subscribe</code> method, the {@link Observable} calls the Observer's <code>onNext</code> method to provide notifications. A, + * well-behaved {@link Observable} will, +++ b/rxjava-core/src/main/java/rx/Scheduler.java, +import java.util.Date;, +import java.util.concurrent.TimeUnit;, +import java.util.concurrent.atomic.AtomicBoolean;, +, +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * , +     * <p> {@code zip} applies this function in strict sequence, so the first item emitted by the, +     * , +     * , +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh211842(v=vs.103).aspx">MSDN: Observable.Cast</a>, +     * , +     * , +++ b/rxjava-core/src/main/java/rx/Observer.java, + * After an Observer calls an {@link Observable}'s <code>Observable.subscribe</code> method, the {@link Observable} calls the Observer's <code>onNext</code> method to provide notifications. A, + * well-behaved {@link Observable} will, +++ b/rxjava-core/src/main/java/rx/Scheduler.java, +import java.util.Date;, +import java.util.concurrent.TimeUnit;, +import java.util.concurrent.atomic.AtomicBoolean;, +, +++ b/rxjava-core/src/main/java/rx/concurrency/CurrentThreadScheduler.java, +import rx.Scheduler;, +import rx.Subscription;, +import rx.util.functions.Func2;, +, +    /* package accessible for unit tests */CurrentThreadScheduler() {, +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * , +     * <p> {@code zip} applies this function in strict sequence, so the first item emitted by the, +     * , +     * , +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh211842(v=vs.103).aspx">MSDN: Observable.Cast</a>, +     * , +     * , +++ b/rxjava-core/src/main/java/rx/Observer.java, + * After an Observer calls an {@link Observable}'s <code>Observable.subscribe</code> method, the {@link Observable} calls the Observer's <code>onNext</code> method to provide notifications. A, + * well-behaved {@link Observable} will, +++ b/rxjava-core/src/main/java/rx/Scheduler.java, +import java.util.Date;, +import java.util.concurrent.TimeUnit;, +import java.util.concurrent.atomic.AtomicBoolean;, +, +++ b/rxjava-core/src/main/java/rx/concurrency/CurrentThreadScheduler.java, +import rx.Scheduler;, +import rx.Subscription;, +import rx.util.functions.Func2;, +, +    /* package accessible for unit tests */CurrentThreadScheduler() {, +++ b/rxjava-core/src/main/java/rx/concurrency/ExecutorScheduler.java, +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * , +     * <p> {@code zip} applies this function in strict sequence, so the first item emitted by the, +     * , +     * , +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh211842(v=vs.103).aspx">MSDN: Observable.Cast</a>, +     * , +     * , +++ b/rxjava-core/src/main/java/rx/Observer.java, + * After an Observer calls an {@link Observable}'s <code>Observable.subscribe</code> method, the {@link Observable} calls the Observer's <code>onNext</code> method to provide notifications. A, + * well-behaved {@link Observable} will, +++ b/rxjava-core/src/main/java/rx/Scheduler.java, +import java.util.Date;, +import java.util.concurrent.TimeUnit;, +import java.util.concurrent.atomic.AtomicBoolean;, +, +++ b/rxjava-core/src/main/java/rx/concurrency/CurrentThreadScheduler.java, +import rx.Scheduler;, +import rx.Subscription;, +import rx.util.functions.Func2;]