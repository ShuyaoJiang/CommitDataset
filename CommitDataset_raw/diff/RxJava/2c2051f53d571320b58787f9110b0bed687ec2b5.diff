[+++ b/src/main/java/rx/internal/operators/OperatorMerge.java, +            if (mergeProducer.requested != Long.MAX_VALUE) {, +            if (mergeProducer.requested == Long.MAX_VALUE) {, +                    long r = mergeProducer.requested;, +                        MergeProducer.REQUESTED.decrementAndGet(mergeProducer);, +                long r = mergeProducer.requested;, +                    MergeProducer.REQUESTED.getAndAdd(mergeProducer, -emittedWhileDraining);, +                    long r = mergeProducer.requested;, +        private volatile long requested = 0;, +        static final AtomicLongFieldUpdater<MergeProducer> REQUESTED = AtomicLongFieldUpdater.newUpdater(MergeProducer.class, "requested");, +            if (requested == Long.MAX_VALUE) {, +                requested = Long.MAX_VALUE;, +                BackpressureUtils.getAndAddRequest(REQUESTED, this, n);, +                        if (producer.requested > 0 && q.count() == 0) {, +                                MergeProducer.REQUESTED.decrementAndGet(producer);, +            long toEmit = producer.requested;, +            MergeProducer.REQUESTED.getAndAdd(producer, -emitted);]