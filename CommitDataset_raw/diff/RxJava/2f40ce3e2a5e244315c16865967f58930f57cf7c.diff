[+++ b/rxjava-core/src/main/java/rx/Observable.java, +     * Returns an Observable that emits the last <code>count</code> items emitted by the source, +     * Observable., +     *, +     * @param items, +     *            the source Observable, +     * @param count, +     *            the number of items from the end of the sequence emitted by the source, +     *            Observable to emit, +     * @return an Observable that only emits the last <code>count</code> items emitted by the source, +     *         Observable, +     */, +    public static <T> Observable<T> takeLast(final Observable<T> items, final int count) {, +        return _create(OperationTakeLast.takeLast(items, count));, +    }, +, +    /**, +     * Returns an Observable that emits the last <code>count</code> items emitted by the source, +     * Observable., +     *, +     * @param count, +     *            the number of items from the end of the sequence emitted by the source, +     *            Observable to emit, +     * @return an Observable that only emits the last <code>count</code> items emitted by the source, +     *         Observable, +     */, +    public Observable<T> takeLast(final int count) {, +        return takeLast(this, count);, +    }, +, +    /**, +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * Returns an Observable that emits the last <code>count</code> items emitted by the source, +     * Observable., +     *, +     * @param items, +     *            the source Observable, +     * @param count, +     *            the number of items from the end of the sequence emitted by the source, +     *            Observable to emit, +     * @return an Observable that only emits the last <code>count</code> items emitted by the source, +     *         Observable, +     */, +    public static <T> Observable<T> takeLast(final Observable<T> items, final int count) {, +        return _create(OperationTakeLast.takeLast(items, count));, +    }, +, +    /**, +     * Returns an Observable that emits the last <code>count</code> items emitted by the source, +     * Observable., +     *, +     * @param count, +     *            the number of items from the end of the sequence emitted by the source, +     *            Observable to emit, +     * @return an Observable that only emits the last <code>count</code> items emitted by the source, +     *         Observable, +     */, +    public Observable<T> takeLast(final int count) {, +        return takeLast(this, count);, +    }, +, +    /**, +++ b/rxjava-core/src/main/java/rx/operators/OperationTakeLast.java, +/**, + * Returns a specified number of contiguous elements from the end of an observable sequence., + */]