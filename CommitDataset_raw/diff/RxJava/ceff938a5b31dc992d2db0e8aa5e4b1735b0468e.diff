[+++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperatorCache;, +        return create(new OperatorCache<T>(this));, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperatorCache;, +        return create(new OperatorCache<T>(this));, +++ b/rxjava-core/src/main/java/rx/observers/SerializedObserver.java, +, +    private static Sentinel NULL_SENTINEL = new Sentinel();, +    private static Sentinel COMPLETE_SENTINEL = new Sentinel();, +, +    private static class Sentinel {, +, +    }, +, +    private static class ErrorSentinel extends Sentinel {, +        final Throwable e;, +, +        ErrorSentinel(Throwable e) {, +            this.e = e;, +        }, +    }, +                queue.add(COMPLETE_SENTINEL);, +                queue.add(new ErrorSentinel(e));, +                if (t == null) {, +                    queue.add(NULL_SENTINEL);, +                } else {, +                    queue.add(t);, +                }, +            if (v != null) {, +                if (v instanceof Sentinel) {, +                    if (v == NULL_SENTINEL) {, +                        actual.onNext(null);, +                    } else if (v == COMPLETE_SENTINEL) {, +                        actual.onCompleted();, +                    } else if (v instanceof ErrorSentinel) {, +                        actual.onError(((ErrorSentinel) v).e);, +                    }, +                } else {, +                    actual.onNext((T) v);, +                }, +            }, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperatorCache;, +        return create(new OperatorCache<T>(this));, +++ b/rxjava-core/src/main/java/rx/observers/SerializedObserver.java, +, +    private static Sentinel NULL_SENTINEL = new Sentinel();, +    private static Sentinel COMPLETE_SENTINEL = new Sentinel();, +, +    private static class Sentinel {, +, +    }, +, +    private static class ErrorSentinel extends Sentinel {, +        final Throwable e;, +, +        ErrorSentinel(Throwable e) {, +            this.e = e;, +        }, +    }, +                queue.add(COMPLETE_SENTINEL);, +                queue.add(new ErrorSentinel(e));, +                if (t == null) {, +                    queue.add(NULL_SENTINEL);, +                } else {, +                    queue.add(t);, +                }, +            if (v != null) {, +                if (v instanceof Sentinel) {, +                    if (v == NULL_SENTINEL) {, +                        actual.onNext(null);, +                    } else if (v == COMPLETE_SENTINEL) {, +                        actual.onCompleted();, +                    } else if (v instanceof ErrorSentinel) {, +                        actual.onError(((ErrorSentinel) v).e);, +                    }, +                } else {, +                    actual.onNext((T) v);, +                }, +            }, +++ b/rxjava-core/src/main/java/rx/operators/BufferUntilSubscriber.java, +    /** Null sentinel (in case queue type is changed). */, +    private static final Object NULL_SENTINEL = new Object();, +    /** Complete sentinel. */, +    private static final Object COMPLETE_SENTINEL = new Object();, +    /**, +     * Container for an onError event., +     */, +    private static final class ErrorSentinel {, +        final Throwable t;, +        public ErrorSentinel(Throwable t) {, +            this.t = t;, +        }, +        , +    }, +                            if (o == NULL_SENTINEL) {, +                                actual.onNext(null);, +                            } else, +                            if (o == COMPLETE_SENTINEL) {]