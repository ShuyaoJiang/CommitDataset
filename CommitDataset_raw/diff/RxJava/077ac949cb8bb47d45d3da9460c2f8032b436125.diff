[+++ b/language-adaptors/rxjava-scala/ReleaseNotes.md, + * `MultipleAssignmentSubscription()`, + * `SerialSubscription()`, + and `unsubscribe()` properly, but for all practical purposes you should just use one of the factory methods., +   def apply[R](onNext: T=>R, onError: Throwable=>R, onCompleted: ()=>R): R = {...}, +To pattern match on a notification you create a partial function like so: `case Notification.OnNext(v) => { ... v ... }`,, +or you use the `apply` function to pass in functions for each possibility.]