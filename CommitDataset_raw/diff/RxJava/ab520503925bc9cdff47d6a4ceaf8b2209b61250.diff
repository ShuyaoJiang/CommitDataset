[+++ b/src/main/java/io/reactivex/Completable.java, +        TestObserver<Void> to = new TestObserver<Void>();, +        subscribe(to);, +        return to;, +        TestObserver<Void> to = new TestObserver<Void>();, +            to.cancel();, +        subscribe(to);, +        return to;, +++ b/src/main/java/io/reactivex/Completable.java, +        TestObserver<Void> to = new TestObserver<Void>();, +        subscribe(to);, +        return to;, +        TestObserver<Void> to = new TestObserver<Void>();, +            to.cancel();, +        subscribe(to);, +        return to;, +++ b/src/main/java/io/reactivex/Maybe.java, +        TestObserver<T> to = new TestObserver<T>();, +        subscribe(to);, +        return to;, +        TestObserver<T> to = new TestObserver<T>();, +            to.cancel();, +        subscribe(to);, +        return to;, +++ b/src/main/java/io/reactivex/Completable.java, +        TestObserver<Void> to = new TestObserver<Void>();, +        subscribe(to);, +        return to;, +        TestObserver<Void> to = new TestObserver<Void>();, +            to.cancel();, +        subscribe(to);, +        return to;, +++ b/src/main/java/io/reactivex/Maybe.java, +        TestObserver<T> to = new TestObserver<T>();, +        subscribe(to);, +        return to;, +        TestObserver<T> to = new TestObserver<T>();, +            to.cancel();, +        subscribe(to);, +        return to;, +++ b/src/main/java/io/reactivex/Observable.java, +        TestObserver<T> to = new TestObserver<T>();, +        subscribe(to);, +        return to;, +        TestObserver<T> to = new TestObserver<T>();, +            to.dispose();, +        subscribe(to);, +        return to;, +++ b/src/main/java/io/reactivex/Completable.java, +        TestObserver<Void> to = new TestObserver<Void>();, +        subscribe(to);, +        return to;, +        TestObserver<Void> to = new TestObserver<Void>();, +            to.cancel();, +        subscribe(to);, +        return to;, +++ b/src/main/java/io/reactivex/Maybe.java, +        TestObserver<T> to = new TestObserver<T>();, +        subscribe(to);, +        return to;, +        TestObserver<T> to = new TestObserver<T>();, +            to.cancel();, +        subscribe(to);, +        return to;, +++ b/src/main/java/io/reactivex/Observable.java, +        TestObserver<T> to = new TestObserver<T>();, +        subscribe(to);, +        return to;, +        TestObserver<T> to = new TestObserver<T>();, +            to.dispose();, +        subscribe(to);, +        return to;, +++ b/src/main/java/io/reactivex/Single.java, +        TestObserver<T> to = new TestObserver<T>();, +        subscribe(to);, +        return to;, +        TestObserver<T> to = new TestObserver<T>();, +            to.cancel();, +        subscribe(to);, +        return to;, +++ b/src/main/java/io/reactivex/Completable.java, +        TestObserver<Void> to = new TestObserver<Void>();, +        subscribe(to);, +        return to;, +        TestObserver<Void> to = new TestObserver<Void>();, +            to.cancel();, +        subscribe(to);, +        return to;, +++ b/src/main/java/io/reactivex/Maybe.java, +        TestObserver<T> to = new TestObserver<T>();, +        subscribe(to);, +        return to;, +        TestObserver<T> to = new TestObserver<T>();, +            to.cancel();, +        subscribe(to);, +        return to;, +++ b/src/main/java/io/reactivex/Observable.java, +        TestObserver<T> to = new TestObserver<T>();, +        subscribe(to);, +        return to;]