[+++ b/src/main/java/rx/exceptions/OnErrorThrowable.java, +import java.util.HashSet;, +import java.util.Set;, +, +        // Lazy loaded singleton , +        private static final class Primitives {, +            , +            static final Set<Class<?>> INSTANCE = create();, +, +            private static Set<Class<?>> create() {, +                Set<Class<?>> set = new HashSet<Class<?>>();, +                set.add(Boolean.class);, +                set.add(Character.class);, +                set.add(Byte.class);, +                set.add(Short.class);, +                set.add(Integer.class);, +                set.add(Long.class);, +                set.add(Float.class);, +                set.add(Double.class);, +                // Void is another primitive but cannot be instantiated , +                // and is caught by the null check in renderValue, +                return set;, +            }, +        }, +, +        static String renderValue(Object value){, +            if (Primitives.INSTANCE.contains(value.getClass())) {, +++ b/src/main/java/rx/exceptions/OnErrorThrowable.java, +import java.util.HashSet;, +import java.util.Set;, +, +        // Lazy loaded singleton , +        private static final class Primitives {, +            , +            static final Set<Class<?>> INSTANCE = create();, +, +            private static Set<Class<?>> create() {, +                Set<Class<?>> set = new HashSet<Class<?>>();, +                set.add(Boolean.class);, +                set.add(Character.class);, +                set.add(Byte.class);, +                set.add(Short.class);, +                set.add(Integer.class);, +                set.add(Long.class);, +                set.add(Float.class);, +                set.add(Double.class);, +                // Void is another primitive but cannot be instantiated , +                // and is caught by the null check in renderValue, +                return set;, +            }, +        }, +, +        static String renderValue(Object value){, +            if (Primitives.INSTANCE.contains(value.getClass())) {, +++ b/src/test/java/rx/exceptions/OnNextValueTest.java, +import org.junit.Assert;, +, +import rx.exceptions.OnErrorThrowable.OnNextValue;, +import static org.junit.Assert.assertEquals;, +    , +    @Test, +    public void testRenderInteger() {, +        assertEquals("123", OnNextValue.renderValue(123));, +    }, +    , +    @Test, +    public void testRenderByte() {, +        assertEquals("10", OnNextValue.renderValue((byte) 10));, +    }, +    , +    @Test, +    public void testRenderBoolean() {, +        assertEquals("true", OnNextValue.renderValue(true));, +    }, +    , +    @Test, +    public void testRenderShort() {, +        assertEquals("10", OnNextValue.renderValue((short) 10));, +    }, +    , +    @Test, +    public void testRenderLong() {, +        assertEquals("10", OnNextValue.renderValue(10L));, +    }, +    , +    @Test, +    public void testRenderCharacter() {, +        assertEquals("10", OnNextValue.renderValue(10L));, +    }, +    , +    @Test, +    public void testRenderFloat() {, +        assertEquals("10.0", OnNextValue.renderValue(10.0f));, +    }, +    , +    @Test, +    public void testRenderDouble() {, +        assertEquals("10.0", OnNextValue.renderValue(10.0));, +    }, +    ]