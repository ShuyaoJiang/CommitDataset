[+++ b/rxjava-contrib/rxjava-android/src/main/java/rx/operators/OperatorWeakBinding.java, +            super(source);, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/operators/OperatorWeakBinding.java, +            super(source);, +++ b/rxjava-contrib/rxjava-android/src/test/java/rx/operators/OperatorWeakBindingTest.java, +import static org.junit.Assert.assertEquals;, +import rx.observers.TestSubscriber;, +, +import java.util.Arrays;, +    private TestSubscriber<String> subscriber = new TestSubscriber<String>();, +        subscriber.assertReceivedOnNext(Arrays.asList("one", "two"));, +        assertEquals(1, subscriber.getOnCompletedEvents().size());, +        assertEquals(1, subscriber.getOnErrorEvents().size());, +        subscriber.assertReceivedOnNext(Arrays.asList("one"));, +        assertEquals(0, subscriber.getOnCompletedEvents().size());, +        assertEquals(0, subscriber.getOnErrorEvents().size());, +        subscriber.assertReceivedOnNext(Arrays.asList("one"));, +        assertEquals(0, subscriber.getOnCompletedEvents().size());, +        assertEquals(0, subscriber.getOnErrorEvents().size());, +        assertEquals(0, subscriber.getOnNextEvents().size());, +        assertEquals(0, subscriber.getOnCompletedEvents().size());, +        assertEquals(0, subscriber.getOnErrorEvents().size());, +    }, +, +    @Test, +    public void unsubscribeWillUnsubscribeFromWrappedSubscriber() {, +        OperatorWeakBinding<String, Object> op = new OperatorWeakBinding<String, Object>(new Object());, +, +        op.call(subscriber).unsubscribe();, +        subscriber.assertUnsubscribed();]