[+++ b/rxjava-core/src/main/java/rx/Observable.java, +     * For an empty source, it causes an IllegalArgumentException., +     * @throws IllegalArgumentException, +     *             if Observable sequence is empty., +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * For an empty source, it causes an IllegalArgumentException., +     * @throws IllegalArgumentException, +     *             if Observable sequence is empty., +++ b/rxjava-core/src/main/java/rx/operators/OperationAverage.java, +                if (result.count == 0) {, +                    throw new IllegalArgumentException("Sequence contains no elements");, +                }, +                return result.current / result.count;, +                if (result.count == 0) {, +                    throw new IllegalArgumentException("Sequence contains no elements");, +                }, +                return result.current / result.count;, +                    throw new IllegalArgumentException("Sequence contains no elements");, +                    throw new IllegalArgumentException("Sequence contains no elements");, +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * For an empty source, it causes an IllegalArgumentException., +     * @throws IllegalArgumentException, +     *             if Observable sequence is empty., +++ b/rxjava-core/src/main/java/rx/operators/OperationAverage.java, +                if (result.count == 0) {, +                    throw new IllegalArgumentException("Sequence contains no elements");, +                }, +                return result.current / result.count;, +                if (result.count == 0) {, +                    throw new IllegalArgumentException("Sequence contains no elements");, +                }, +                return result.current / result.count;, +                    throw new IllegalArgumentException("Sequence contains no elements");, +                    throw new IllegalArgumentException("Sequence contains no elements");, +++ b/rxjava-core/src/test/java/rx/operators/OperationAverageTest.java, +        verify(w, times(1)).onError(isA(IllegalArgumentException.class));, +        verify(wl, times(1)).onError(isA(IllegalArgumentException.class));, +        verify(wf, times(1)).onError(isA(IllegalArgumentException.class));, +        verify(wd, times(1)).onError(isA(IllegalArgumentException.class));]