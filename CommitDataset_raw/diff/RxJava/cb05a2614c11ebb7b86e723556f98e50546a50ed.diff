[+++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            SubscriptionHelper.setOnce(this, s, batchSize);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            SubscriptionHelper.setOnce(this, s, batchSize);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferBoundary.java, +                SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +            SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            SubscriptionHelper.setOnce(this, s, batchSize);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferBoundary.java, +                SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +            SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCache.java, +            SubscriptionHelper.setOnce(connection, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            SubscriptionHelper.setOnce(this, s, batchSize);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferBoundary.java, +                SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +            SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCache.java, +            SubscriptionHelper.setOnce(connection, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +            SubscriptionHelper.setOnce(this, s, prefetch);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            SubscriptionHelper.setOnce(this, s, batchSize);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferBoundary.java, +                SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +            SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCache.java, +            SubscriptionHelper.setOnce(connection, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +            SubscriptionHelper.setOnce(this, s, prefetch);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableGroupJoin.java, +            SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +            SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            SubscriptionHelper.setOnce(this, s, batchSize);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferBoundary.java, +                SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +            SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCache.java, +            SubscriptionHelper.setOnce(connection, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +            SubscriptionHelper.setOnce(this, s, prefetch);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableGroupJoin.java, +            SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +            SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableMergeWithMaybe.java, +        public void onSubscribe(Subscription s) {, +            SubscriptionHelper.setOnce(mainSubscription, s, prefetch);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            SubscriptionHelper.setOnce(this, s, batchSize);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferBoundary.java, +                SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +            SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCache.java, +            SubscriptionHelper.setOnce(connection, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +            SubscriptionHelper.setOnce(this, s, prefetch);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableGroupJoin.java, +            SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +            SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableMergeWithMaybe.java, +        public void onSubscribe(Subscription s) {, +            SubscriptionHelper.setOnce(mainSubscription, s, prefetch);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableMergeWithSingle.java, +        public void onSubscribe(Subscription s) {, +            SubscriptionHelper.setOnce(mainSubscription, s, prefetch);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            SubscriptionHelper.setOnce(this, s, batchSize);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferBoundary.java, +                SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +            SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCache.java, +            SubscriptionHelper.setOnce(connection, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +            SubscriptionHelper.setOnce(this, s, prefetch);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableGroupJoin.java, +            SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +            SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableMergeWithMaybe.java, +        public void onSubscribe(Subscription s) {, +            SubscriptionHelper.setOnce(mainSubscription, s, prefetch);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableMergeWithSingle.java, +        public void onSubscribe(Subscription s) {, +            SubscriptionHelper.setOnce(mainSubscription, s, prefetch);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableReplay.java, +                // add to the current requested and cap it at MAX_VALUE, +                // except when there was a concurrent cancellation, +                if (BackpressureHelper.addCancel(this, n) != CANCELLED) {, +                    // try replaying any cached content, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            SubscriptionHelper.setOnce(this, s, batchSize);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferBoundary.java, +                SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +            SubscriptionHelper.setOnce(this, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCache.java, +            SubscriptionHelper.setOnce(connection, s, Long.MAX_VALUE);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +            SubscriptionHelper.setOnce(this, s, prefetch);]