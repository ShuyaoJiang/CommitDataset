[+++ b/.gitignore, +, +# IntelliJ specific files/directories, +++ b/.gitignore, +, +# IntelliJ specific files/directories, +++ b/gradle/convention.gradle, +    status = rootProject.status, +    // Ensure output is on a new line, +    javadoc.doFirst { println "" }, +, +, +++ b/.gitignore, +, +# IntelliJ specific files/directories, +++ b/gradle/convention.gradle, +    status = rootProject.status, +    // Ensure output is on a new line, +    javadoc.doFirst { println "" }, +, +, +++ b/gradle/maven.gradle, +++ b/.gitignore, +, +# IntelliJ specific files/directories, +++ b/gradle/convention.gradle, +    status = rootProject.status, +    // Ensure output is on a new line, +    javadoc.doFirst { println "" }, +, +, +++ b/gradle/maven.gradle, +++ b/gradle/release.gradle, +task releaseArtifactory(dependsOn: [checkSnapshotDependencies, uploadArtifactory]), +, +releaseArtifactory.dependsOn checkSnapshotDependencies, +createReleaseTag.dependsOn releaseArtifactory, +    if ( taskGraph.hasTask(uploadArtifactory) && rootProject.status == 'release' && !taskGraph.hasTask(':release') ) {, +        throw new GradleException('"release" task has to be run before uploading a release to Artifactory'), +    includeProjectNameInTag=true]