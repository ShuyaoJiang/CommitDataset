[+++ b/src/test/java/io/reactivex/internal/operators/flowable/FlowableSampleTest.java, +import static org.junit.Assert.assertFalse;, +        PublishProcessor<Integer> pp1 = PublishProcessor.create();, +        PublishProcessor<Integer> pp2 = PublishProcessor.create();, +, +        TestSubscriber<Integer> ts =  pp1, +        .sample(pp2), +        .test(0L);, +, +        pp1.onNext(1);, +        pp2.onNext(2);, +, +        ts.assertFailure(MissingBackpressureException.class);, +, +        assertFalse(pp1.hasSubscribers());, +        assertFalse(pp2.hasSubscribers());, +, +        TestHelper.checkDoubleOnSubscribeFlowable(new Function<Flowable<Object>, Flowable<Object>>() {, +            @Override, +            public Flowable<Object> apply(Flowable<Object> f), +                    throws Exception {, +                return f.sample(PublishProcessor.create());, +            }, +        });, +    }, +, +    @Test, +    public void badRequest() {, +        TestHelper.assertBadRequestReported(PublishProcessor.create(), +                .sample(PublishProcessor.create()));]