[+++ b/rxjava-core/src/main/java/rx/Observable.java, +                if(first == null) {, +                    return second == null;, +                }, +++ b/rxjava-core/src/main/java/rx/Observable.java, +                if(first == null) {, +                    return second == null;, +                }, +++ b/rxjava-core/src/test/java/rx/operators/OperationSequenceEqualTests.java, +import rx.util.functions.Func2;, +    public void testWithNull1() {, +        verifyResult(observable, false);, +    }, +    @Test, +    public void testWithNull2() {, +        Observable<Boolean> observable = Observable.sequenceEqual(, +                Observable.from((String) null), Observable.from((String) null));, +        verifyResult(observable, true);, +    }, +    @Test, +    public void testWithEqualityError() {, +        Observable<Boolean> observable = Observable.sequenceEqual(, +                Observable.from("one"), Observable.from("one"),, +                new Func2<String, String, Boolean>() {, +                    @Override, +                    public Boolean call(String t1, String t2) {, +                        throw new TestException();, +                    }, +                });, +        verifyError(observable);]