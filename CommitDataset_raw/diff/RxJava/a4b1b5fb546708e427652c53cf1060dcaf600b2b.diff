[+++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperationJoin;, +    /**, +     * Correlates the elements of two sequences based on overlapping durations., +     * @param right The right observable sequence to join elements for., +     * @param leftDurationSelector A function to select the duration of each , +     *                             element of this observable sequence, used to, +     *                             determine overlap., +     * @param rightDurationSelector A function to select the duration of each, +     *                              element of the right observable sequence, , +     *                              used to determine overlap., +     * @param resultSelector A function invoked to compute a result element , +     *                       for any two overlapping elements of the left and, +     *                       right observable sequences., +     * @return An observable sequence that contains result elements computed, +     *         from source elements that have an overlapping duration., +     * @see <a href='http://msdn.microsoft.com/en-us/library/hh229750.aspx'>MSDN: Observable.Join</a>, +     */, +    public <TRight, TLeftDuration, TRightDuration, R> Observable<R> join(Observable<TRight> right, Func1<T, Observable<TLeftDuration>> leftDurationSelector,, +            Func1<TRight, Observable<TRightDuration>> rightDurationSelector,, +            Func2<T, TRight, R> resultSelector) {, +        return create(new OperationJoin<T, TRight, TLeftDuration, TRightDuration, R>(this, right, leftDurationSelector, rightDurationSelector, resultSelector));, +    }    ]