[+++ b/rxjava-core/src/main/java/rx/Observable.java, +        return subscribe(new SafeObserver<T>(o));, +                onSubscribeFunction.call(new SafeObserver<T>(observer));, +++ b/rxjava-core/src/main/java/rx/Observable.java, +        return subscribe(new SafeObserver<T>(o));, +                onSubscribeFunction.call(new SafeObserver<T>(observer));, +++ b/rxjava-core/src/main/java/rx/joins/JoinObserver1.java, +        safeObserver = new SafeObserver<Notification<T>>(new InnerObserver());, +            source.materialize().subscribe(this);, +++ b/rxjava-core/src/main/java/rx/Observable.java, +        return subscribe(new SafeObserver<T>(o));, +                onSubscribeFunction.call(new SafeObserver<T>(observer));, +++ b/rxjava-core/src/main/java/rx/joins/JoinObserver1.java, +        safeObserver = new SafeObserver<Notification<T>>(new InnerObserver());, +            source.materialize().subscribe(this);, +++ b/rxjava-core/src/main/java/rx/observables/BlockingObservable.java, +        return o.subscribe(new SafeObserver<T>(observer));, +++ b/rxjava-core/src/main/java/rx/Observable.java, +        return subscribe(new SafeObserver<T>(o));, +                onSubscribeFunction.call(new SafeObserver<T>(observer));, +++ b/rxjava-core/src/main/java/rx/joins/JoinObserver1.java, +        safeObserver = new SafeObserver<Notification<T>>(new InnerObserver());, +            source.materialize().subscribe(this);, +++ b/rxjava-core/src/main/java/rx/observables/BlockingObservable.java, +        return o.subscribe(new SafeObserver<T>(observer));, +++ b/rxjava-core/src/main/java/rx/observers/SafeObserver.java, +        super(actual);, +                unsubscribe();, +                    unsubscribe();, +                    unsubscribe();, +            unsubscribe();, +++ b/rxjava-core/src/main/java/rx/Observable.java, +        return subscribe(new SafeObserver<T>(o));, +                onSubscribeFunction.call(new SafeObserver<T>(observer));, +++ b/rxjava-core/src/main/java/rx/joins/JoinObserver1.java, +        safeObserver = new SafeObserver<Notification<T>>(new InnerObserver());, +            source.materialize().subscribe(this);, +++ b/rxjava-core/src/main/java/rx/observables/BlockingObservable.java, +        return o.subscribe(new SafeObserver<T>(observer));, +++ b/rxjava-core/src/main/java/rx/observers/SafeObserver.java, +        super(actual);, +                unsubscribe();, +                    unsubscribe();, +                    unsubscribe();, +            unsubscribe();, +++ b/rxjava-core/src/main/java/rx/operators/OperationDoOnEach.java, +            return sequence.subscribe(new Observer<T>() {, +                    try {, +                    } catch (Throwable e) {, +                        onError(e);, +                        return;, +                    }, +                    try {, +                    } catch (Throwable e2) {, +                        observer.onError(e2);, +                        return;, +                    }, +                    try {, +                    } catch (Throwable e) {, +                        onError(e);, +                        return;, +                    }, +            });, +++ b/rxjava-core/src/main/java/rx/Observable.java, +        return subscribe(new SafeObserver<T>(o));, +                onSubscribeFunction.call(new SafeObserver<T>(observer));, +++ b/rxjava-core/src/main/java/rx/joins/JoinObserver1.java, +        safeObserver = new SafeObserver<Notification<T>>(new InnerObserver());, +            source.materialize().subscribe(this);, +++ b/rxjava-core/src/main/java/rx/observables/BlockingObservable.java, +        return o.subscribe(new SafeObserver<T>(observer));, +++ b/rxjava-core/src/main/java/rx/observers/SafeObserver.java, +        super(actual);, +                unsubscribe();, +                    unsubscribe();, +                    unsubscribe();, +            unsubscribe();, +++ b/rxjava-core/src/main/java/rx/operators/OperationDoOnEach.java, +            return sequence.subscribe(new Observer<T>() {, +                    try {, +                    } catch (Throwable e) {, +                        onError(e);, +                        return;, +                    }, +                    try {, +                    } catch (Throwable e2) {, +                        observer.onError(e2);, +                        return;, +                    }, +                    try {, +                    } catch (Throwable e) {, +                        onError(e);, +                        return;, +                    }, +            });, +++ b/rxjava-core/src/main/java/rx/operators/OperationMulticast.java, +            csub.add(observable.subscribe(t1));, +++ b/rxjava-core/src/main/java/rx/Observable.java, +        return subscribe(new SafeObserver<T>(o));, +                onSubscribeFunction.call(new SafeObserver<T>(observer));]