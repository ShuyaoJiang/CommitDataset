[+++ b/build.gradle, +task GCandMem(dependsOn: 'check') << {, +    System.gc(), +    Thread.sleep(200), +    print("Memory usage: "), +    println(java.lang.management.ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed() / 1024.0 / 1024.0), +}, +, +jacocoTestReport.dependsOn GCandMem, +, +++ b/build.gradle, +task GCandMem(dependsOn: 'check') << {, +    System.gc(), +    Thread.sleep(200), +    print("Memory usage: "), +    println(java.lang.management.ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed() / 1024.0 / 1024.0), +}, +, +jacocoTestReport.dependsOn GCandMem, +, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapMaybe.java, +                    s.cancel();, +                    set.dispose();, +++ b/build.gradle, +task GCandMem(dependsOn: 'check') << {, +    System.gc(), +    Thread.sleep(200), +    print("Memory usage: "), +    println(java.lang.management.ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed() / 1024.0 / 1024.0), +}, +, +jacocoTestReport.dependsOn GCandMem, +, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapMaybe.java, +                    s.cancel();, +                    set.dispose();, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapSingle.java, +                    s.cancel();, +                    set.dispose();, +++ b/build.gradle, +task GCandMem(dependsOn: 'check') << {, +    System.gc(), +    Thread.sleep(200), +    print("Memory usage: "), +    println(java.lang.management.ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed() / 1024.0 / 1024.0), +}, +, +jacocoTestReport.dependsOn GCandMem, +, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapMaybe.java, +                    s.cancel();, +                    set.dispose();, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapSingle.java, +                    s.cancel();, +                    set.dispose();, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableFlatMapMaybe.java, +                    d.dispose();, +                    set.dispose();, +++ b/build.gradle, +task GCandMem(dependsOn: 'check') << {, +    System.gc(), +    Thread.sleep(200), +    print("Memory usage: "), +    println(java.lang.management.ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed() / 1024.0 / 1024.0), +}, +, +jacocoTestReport.dependsOn GCandMem, +, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapMaybe.java, +                    s.cancel();, +                    set.dispose();, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapSingle.java, +                    s.cancel();, +                    set.dispose();, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableFlatMapMaybe.java, +                    d.dispose();, +                    set.dispose();, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableFlatMapSingle.java, +                    d.dispose();, +                    set.dispose();, +++ b/build.gradle, +task GCandMem(dependsOn: 'check') << {, +    System.gc(), +    Thread.sleep(200), +    print("Memory usage: "), +    println(java.lang.management.ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed() / 1024.0 / 1024.0), +}, +, +jacocoTestReport.dependsOn GCandMem, +, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapMaybe.java, +                    s.cancel();, +                    set.dispose();, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapSingle.java, +                    s.cancel();, +                    set.dispose();, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableFlatMapMaybe.java, +                    d.dispose();, +                    set.dispose();, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableFlatMapSingle.java]