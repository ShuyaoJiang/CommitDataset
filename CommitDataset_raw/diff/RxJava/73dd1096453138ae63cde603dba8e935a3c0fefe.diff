[+++ b/rxjava-core/src/main/java/rx/Observable.java, +     * <em>Note:</em> Use {@link #create(OnSubscribe)} to create an Observable, instead of this, +     * @param f, +     *            {@link OnSubscribe} to be executed when {@link #subscribe(Subscriber)} is called, +     * Returns an Observable that will execute the specified function when a {@link Subscriber}, +     * subscribes to it., +     * invoke the Subscriber's {@link Subscriber#onNext onNext}, {@link Subscriber#onError onError},, +     * and {@link Subscriber#onCompleted onCompleted} methods appropriately., +     * A well-formed Observable must invoke either the Subscriber's {@code onCompleted} method, +     * @param f, +     *            a function that accepts an {@code Subscriber<T>}, and invokes its {@code onNext},, +     *            {@code onError}, and {@code onCompleted} methods as appropriate, +     * @return an Observable that, when a {@link Subscriber} subscribes to it, will execute the, +    /**, +     * , +     */, +    /**, +     * , +     */, +    /**, +     * , +     */, +     * observes is determined by the factory function., +     * subscribe/unsubscribe behavior of all the {@link Subscriber}s., +     * happens when {@code subscribe} is called the first time on the Observable returned by, +     * {@code cache()}., +     *                             <!-- IS THIS NOTE STILL VALID??? -->, +     * <em>Note:</em> You sacrifice the ability to unsubscribe from the origin when you use the, +     * {@code cache()} Observer so be careful not to use this Observer on Observables that emit an]