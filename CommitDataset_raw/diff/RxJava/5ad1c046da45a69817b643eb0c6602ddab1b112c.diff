[+++ b/src/main/java/io/reactivex/Maybe.java, +     * @param transformer the transformer function, not null, +    public final <R> Maybe<R> compose(MaybeTransformer<T, R> transformer) {, +++ b/src/main/java/io/reactivex/Maybe.java, +     * @param transformer the transformer function, not null, +    public final <R> Maybe<R> compose(MaybeTransformer<T, R> transformer) {, +++ b/src/main/java/io/reactivex/Single.java, +     * @param transformer the transformer function, not null, +    public final <R> Single<R> compose(SingleTransformer<T, R> transformer) {, +++ b/src/main/java/io/reactivex/Maybe.java, +     * @param transformer the transformer function, not null, +    public final <R> Maybe<R> compose(MaybeTransformer<T, R> transformer) {, +++ b/src/main/java/io/reactivex/Single.java, +     * @param transformer the transformer function, not null, +    public final <R> Single<R> compose(SingleTransformer<T, R> transformer) {, +++ b/src/test/java/io/reactivex/internal/operators/single/SingleMiscTest.java, +import io.reactivex.Single;, +import io.reactivex.SingleObserver;, +import io.reactivex.SingleSource;, +import io.reactivex.SingleTransformer;, +import org.junit.Test;, +, +import java.util.concurrent.Callable;, +import java.util.concurrent.TimeUnit;, +import java.util.concurrent.TimeoutException;, +import java.util.concurrent.atomic.AtomicBoolean;, +, +import static org.junit.Assert.assertNotSame;, +import static org.junit.Assert.assertSame;, +        .compose(new SingleTransformer<Integer, Object>() {, +++ b/src/main/java/io/reactivex/Maybe.java, +     * @param transformer the transformer function, not null, +    public final <R> Maybe<R> compose(MaybeTransformer<T, R> transformer) {, +++ b/src/main/java/io/reactivex/Single.java, +     * @param transformer the transformer function, not null, +    public final <R> Single<R> compose(SingleTransformer<T, R> transformer) {, +++ b/src/test/java/io/reactivex/internal/operators/single/SingleMiscTest.java, +import io.reactivex.Single;, +import io.reactivex.SingleObserver;, +import io.reactivex.SingleSource;, +import io.reactivex.SingleTransformer;, +import org.junit.Test;, +, +import java.util.concurrent.Callable;, +import java.util.concurrent.TimeUnit;, +import java.util.concurrent.TimeoutException;, +import java.util.concurrent.atomic.AtomicBoolean;, +, +import static org.junit.Assert.assertNotSame;, +import static org.junit.Assert.assertSame;, +        .compose(new SingleTransformer<Integer, Object>() {, +++ b/src/test/java/io/reactivex/maybe/MaybeTest.java, +        Maybe.just(1).compose(new MaybeTransformer<Integer, Integer>() {]