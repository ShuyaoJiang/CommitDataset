[+++ b/src/main/java/rx/Observable.java, +     *  <dd>This operator does not support backpressure as by intent it is requesting and buffering everything.</dd>, +     *  <dd>This operator does not support backpressure as by intent it is requesting and buffering everything.</dd>, +        return lift(new OperatorToObservableSortedList<T>());, +     *  <dd>This operator does not support backpressure as by intent it is requesting and buffering everything.</dd>, +        return lift(new OperatorToObservableSortedList<T>(sortFunction));, +++ b/src/main/java/rx/Observable.java, +     *  <dd>This operator does not support backpressure as by intent it is requesting and buffering everything.</dd>, +     *  <dd>This operator does not support backpressure as by intent it is requesting and buffering everything.</dd>, +        return lift(new OperatorToObservableSortedList<T>());, +     *  <dd>This operator does not support backpressure as by intent it is requesting and buffering everything.</dd>, +        return lift(new OperatorToObservableSortedList<T>(sortFunction));, +++ b/src/main/java/rx/internal/operators/OperatorObserveOn.java, +import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;, +import java.util.concurrent.atomic.AtomicLongFieldUpdater;, +import rx.Producer;, +import rx.Scheduler;, +import rx.Subscriber;, +import rx.Subscription;, +import rx.internal.util.RxRingBuffer;, +import rx.internal.util.SynchronizedQueue;, +import rx.internal.util.unsafe.SpscArrayQueue;, +import rx.internal.util.unsafe.UnsafeAccess;, +import rx.schedulers.ImmediateScheduler;, +import rx.schedulers.TrampolineScheduler;, +            ObserveOnSubscriber<T> parent = new ObserveOnSubscriber<T>(scheduler, child);, +            parent.init();, +            return parent;, +        }, +        , +        void init() {, +            // don't want this code in the constructor because `this` can escape through the , +            // setProducer call, +                    BackpressureUtils.getAndAddRequest(REQUESTED, ObserveOnSubscriber.this, n);, +++ b/src/main/java/rx/Observable.java, +     *  <dd>This operator does not support backpressure as by intent it is requesting and buffering everything.</dd>, +     *  <dd>This operator does not support backpressure as by intent it is requesting and buffering everything.</dd>, +        return lift(new OperatorToObservableSortedList<T>());, +     *  <dd>This operator does not support backpressure as by intent it is requesting and buffering everything.</dd>, +        return lift(new OperatorToObservableSortedList<T>(sortFunction));, +++ b/src/main/java/rx/internal/operators/OperatorObserveOn.java, +import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;, +import java.util.concurrent.atomic.AtomicLongFieldUpdater;, +import rx.Producer;, +import rx.Scheduler;, +import rx.Subscriber;, +import rx.Subscription;, +import rx.internal.util.RxRingBuffer;, +import rx.internal.util.SynchronizedQueue;, +import rx.internal.util.unsafe.SpscArrayQueue;, +import rx.internal.util.unsafe.UnsafeAccess;, +import rx.schedulers.ImmediateScheduler;, +import rx.schedulers.TrampolineScheduler;, +            ObserveOnSubscriber<T> parent = new ObserveOnSubscriber<T>(scheduler, child);, +            parent.init();, +            return parent;, +        }, +        , +        void init() {, +            // don't want this code in the constructor because `this` can escape through the , +            // setProducer call, +                    BackpressureUtils.getAndAddRequest(REQUESTED, ObserveOnSubscriber.this, n);, +++ b/src/main/java/rx/internal/operators/OperatorToObservableList.java, +        return new Subscriber<T>(o) {, +            private boolean completed = false;, +            final List<T> list = new LinkedList<T>();, +                    completed = true;, +                    o.onNext(new ArrayList<T>(list));, +                    o.onCompleted();, +                } catch (Throwable e) {, +                    onError(e);, +++ b/src/main/java/rx/Observable.java, +     *  <dd>This operator does not support backpressure as by intent it is requesting and buffering everything.</dd>, +     *  <dd>This operator does not support backpressure as by intent it is requesting and buffering everything.</dd>, +        return lift(new OperatorToObservableSortedList<T>());, +     *  <dd>This operator does not support backpressure as by intent it is requesting and buffering everything.</dd>, +        return lift(new OperatorToObservableSortedList<T>(sortFunction));, +++ b/src/main/java/rx/internal/operators/OperatorObserveOn.java, +import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;, +import java.util.concurrent.atomic.AtomicLongFieldUpdater;, +import rx.Producer;, +import rx.Scheduler;, +import rx.Subscriber;, +import rx.Subscription;, +import rx.internal.util.RxRingBuffer;, +import rx.internal.util.SynchronizedQueue;, +import rx.internal.util.unsafe.SpscArrayQueue;, +import rx.internal.util.unsafe.UnsafeAccess;, +import rx.schedulers.ImmediateScheduler;, +import rx.schedulers.TrampolineScheduler;, +            ObserveOnSubscriber<T> parent = new ObserveOnSubscriber<T>(scheduler, child);, +            parent.init();, +            return parent;, +        }, +        , +        void init() {, +            // don't want this code in the constructor because `this` can escape through the , +            // setProducer call, +                    BackpressureUtils.getAndAddRequest(REQUESTED, ObserveOnSubscriber.this, n);, +++ b/src/main/java/rx/internal/operators/OperatorToObservableList.java]