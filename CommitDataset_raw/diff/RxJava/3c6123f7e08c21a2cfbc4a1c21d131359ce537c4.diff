[+++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/observables/SwingObservable.java, +import java.awt.Component;, +    public static Observable<KeyEvent> fromKeyEvents(Component component) {, +    public static Observable<KeyEvent> fromKeyEvents(Component component, final Set<Integer> keyCodes) {, +    public static Observable<Set<Integer>> fromPressedKeys(Component component) {, +    public static Observable<MouseEvent> fromMouseEvents(Component component) {, +    public static Observable<MouseEvent> fromMouseMotionEvents(Component component) {, +    public static Observable<ComponentEvent> fromComponentEvents(Component component) {, +    public static Observable<Dimension> fromResizing(Component component) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/observables/SwingObservable.java, +import java.awt.Component;, +    public static Observable<KeyEvent> fromKeyEvents(Component component) {, +    public static Observable<KeyEvent> fromKeyEvents(Component component, final Set<Integer> keyCodes) {, +    public static Observable<Set<Integer>> fromPressedKeys(Component component) {, +    public static Observable<MouseEvent> fromMouseEvents(Component component) {, +    public static Observable<MouseEvent> fromMouseMotionEvents(Component component) {, +    public static Observable<ComponentEvent> fromComponentEvents(Component component) {, +    public static Observable<Dimension> fromResizing(Component component) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/AbstractButtonSource.java, +    /**, +     * @see SwingObservable.fromButtonAction, +     */, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/observables/SwingObservable.java, +import java.awt.Component;, +    public static Observable<KeyEvent> fromKeyEvents(Component component) {, +    public static Observable<KeyEvent> fromKeyEvents(Component component, final Set<Integer> keyCodes) {, +    public static Observable<Set<Integer>> fromPressedKeys(Component component) {, +    public static Observable<MouseEvent> fromMouseEvents(Component component) {, +    public static Observable<MouseEvent> fromMouseMotionEvents(Component component) {, +    public static Observable<ComponentEvent> fromComponentEvents(Component component) {, +    public static Observable<Dimension> fromResizing(Component component) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/AbstractButtonSource.java, +    /**, +     * @see SwingObservable.fromButtonAction, +     */, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/ComponentEventSource.java, +import static rx.swing.sources.ComponentEventSource.Predicate.RESIZED;, +, +import java.awt.Component;, +import rx.observables.SwingObservable;, +    /**, +     * @see SwingObservable.fromComponentEvents, +     */, +    public static Observable<ComponentEvent> fromComponentEventsOf(final Component component) {, +    /**, +     * @see SwingObservable.fromResizing, +     */, +    public static Observable<Dimension> fromResizing(final Component component) {, +        return fromComponentEventsOf(component).filter(RESIZED).map(new Func1<ComponentEvent, Dimension>() {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/observables/SwingObservable.java, +import java.awt.Component;, +    public static Observable<KeyEvent> fromKeyEvents(Component component) {, +    public static Observable<KeyEvent> fromKeyEvents(Component component, final Set<Integer> keyCodes) {, +    public static Observable<Set<Integer>> fromPressedKeys(Component component) {, +    public static Observable<MouseEvent> fromMouseEvents(Component component) {, +    public static Observable<MouseEvent> fromMouseMotionEvents(Component component) {, +    public static Observable<ComponentEvent> fromComponentEvents(Component component) {, +    public static Observable<Dimension> fromResizing(Component component) {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/AbstractButtonSource.java, +    /**, +     * @see SwingObservable.fromButtonAction, +     */, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/ComponentEventSource.java, +import static rx.swing.sources.ComponentEventSource.Predicate.RESIZED;, +, +import java.awt.Component;, +import rx.observables.SwingObservable;, +    /**, +     * @see SwingObservable.fromComponentEvents, +     */, +    public static Observable<ComponentEvent> fromComponentEventsOf(final Component component) {, +    /**, +     * @see SwingObservable.fromResizing, +     */, +    public static Observable<Dimension> fromResizing(final Component component) {, +        return fromComponentEventsOf(component).filter(RESIZED).map(new Func1<ComponentEvent, Dimension>() {, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/swing/sources/KeyEventSource.java, +import static org.mockito.Mockito.inOrder;, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.never;, +import static org.mockito.Mockito.times;, +import static org.mockito.Mockito.verify;, +import java.awt.Component;, +    /**, +     * @see SwingObservable.fromKeyEvents(Component), +     */, +    public static Observable<KeyEvent> fromKeyEventsOf(final Component component) {, +    /**, +     * @see SwingObservable.fromKeyEvents(Component, Set), +     */, +    public static Observable<Set<Integer>> currentlyPressedKeysOf(Component component) {, +        private Component comp = new JPanel();, +++ b/rxjava-contrib/rxjava-swing/src/main/java/rx/observables/SwingObservable.java, +import java.awt.Component;, +    public static Observable<KeyEvent> fromKeyEvents(Component component) {, +    public static Observable<KeyEvent> fromKeyEvents(Component component, final Set<Integer> keyCodes) {, +    public static Observable<Set<Integer>> fromPressedKeys(Component component) {, +    public static Observable<MouseEvent> fromMouseEvents(Component component) {, +    public static Observable<MouseEvent> fromMouseMotionEvents(Component component) {, +    public static Observable<ComponentEvent> fromComponentEvents(Component component) {]