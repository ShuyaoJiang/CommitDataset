[+++ b/rxjava-contrib/rxjava-async-util/build.gradle, +apply plugin: 'osgi', +, +sourceCompatibility = JavaVersion.VERSION_1_6, +targetCompatibility = JavaVersion.VERSION_1_6, +, +dependencies {, +    compile project(':rxjava-core'), +    testCompile project(":rxjava-core").sourceSets.test.output , +    provided 'junit:junit-dep:4.10', +    provided 'org.mockito:mockito-core:1.8.5', +}, +, +jar {, +    manifest {, +        name = 'rxjava-async-util', +        instruction 'Bundle-Vendor', 'Netflix', +        instruction 'Bundle-DocURL', 'https://github.com/Netflix/RxJava', +        instruction 'Import-Package', '!org.junit,!junit.framework,!org.mockito.*,*', +    }, +}, +++ b/rxjava-contrib/rxjava-async-util/build.gradle, +apply plugin: 'osgi', +, +sourceCompatibility = JavaVersion.VERSION_1_6, +targetCompatibility = JavaVersion.VERSION_1_6, +, +dependencies {, +    compile project(':rxjava-core'), +    testCompile project(":rxjava-core").sourceSets.test.output , +    provided 'junit:junit-dep:4.10', +    provided 'org.mockito:mockito-core:1.8.5', +}, +, +jar {, +    manifest {, +        name = 'rxjava-async-util', +        instruction 'Bundle-Vendor', 'Netflix', +        instruction 'Bundle-DocURL', 'https://github.com/Netflix/RxJava', +        instruction 'Import-Package', '!org.junit,!junit.framework,!org.mockito.*,*', +    }, +}, +++ b/rxjava-contrib/rxjava-async-util/src/main/java/rx/util/async/Async.java, +/**, + * Copyright 2013 Netflix, Inc., + * , + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + * , + * http://www.apache.org/licenses/LICENSE-2.0, + * , + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package rx.util.async;, +, +import rx.Observable;, +import rx.Scheduler;, +import rx.schedulers.Schedulers;, +import rx.subjects.AsyncSubject;, +import rx.util.functions.Action0;, +import rx.util.functions.Action1;, +import rx.util.functions.Action2;, +import rx.util.functions.Action3;, +import rx.util.functions.Action4;, +import rx.util.functions.Action5;, +import rx.util.functions.Action6;, +import rx.util.functions.Action7;, +import rx.util.functions.Action8;, +import rx.util.functions.Action9;, +import rx.util.functions.ActionN;, +import rx.util.functions.Actions;, +import rx.util.functions.Func0;, +import rx.util.functions.Func1;, +import rx.util.functions.Func2;, +import rx.util.functions.Func3;, +import rx.util.functions.Func4;, +import rx.util.functions.Func5;, +import rx.util.functions.Func6;, +import rx.util.functions.Func7;, +import rx.util.functions.Func8;, +import rx.util.functions.Func9;, +import rx.util.functions.FuncN;, +, +/**, + * Utility methods to convert functions and actions into asynchronous, + * operations through the Observable/Observer pattern., + */, +public final class Async {, +    private Async() {, +        throw new IllegalStateException("No instances!");, +    }, +, +    /**, +     * Invokes the specified function asynchronously and returns an Observable]