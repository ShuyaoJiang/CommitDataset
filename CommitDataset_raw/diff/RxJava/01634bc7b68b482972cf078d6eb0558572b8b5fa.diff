[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/language-adaptors/rxjava-scala/build.gradle, +            srcDir 'src/examples/java', +        java.srcDirs = [], +        // It seems that in Gradle, the dependency "compileScala depends on compileJava" is hardcoded,, +        // or at least not meant to be removed., +        // However, compileScala also runs javac at the very end, so we just add the Java sources to, +        // the scala source set:, +            srcDir 'src/examples/java', +        java.srcDirs = [], +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/language-adaptors/rxjava-scala/build.gradle, +            srcDir 'src/examples/java', +        java.srcDirs = [], +        // It seems that in Gradle, the dependency "compileScala depends on compileJava" is hardcoded,, +        // or at least not meant to be removed., +        // However, compileScala also runs javac at the very end, so we just add the Java sources to, +        // the scala source set:, +            srcDir 'src/examples/java', +        java.srcDirs = [], +++ b/language-adaptors/rxjava-scala/src/examples/java/rx/lang/scala/examples/MovieLibUsage.java, +package rx.lang.scala.examples;, +, +import org.junit.Test;, +, +import rx.Observable;, +import rx.util.functions.Action1;, +, +, +public class MovieLibUsage {, +	, +	Action1<Movie> moviePrinter = new Action1<Movie>() {, +		public void call(Movie m) {, +			System.out.println("A movie of length " + m.lengthInSeconds() + "s");, +		}, +	};, +	, +	@Test, +	public void test() {, +		MovieLib lib = new MovieLib(Observable.from(new Movie(3000), new Movie(1000), new Movie(2000)));, +		, +		lib.longMovies().subscribe(moviePrinter);		, +	}, +, +}, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/language-adaptors/rxjava-scala/build.gradle, +            srcDir 'src/examples/java', +        java.srcDirs = [], +        // It seems that in Gradle, the dependency "compileScala depends on compileJava" is hardcoded,, +        // or at least not meant to be removed., +        // However, compileScala also runs javac at the very end, so we just add the Java sources to, +        // the scala source set:, +            srcDir 'src/examples/java', +        java.srcDirs = [], +++ b/language-adaptors/rxjava-scala/src/examples/java/rx/lang/scala/examples/MovieLibUsage.java, +package rx.lang.scala.examples;, +, +import org.junit.Test;, +, +import rx.Observable;, +import rx.util.functions.Action1;, +, +, +public class MovieLibUsage {, +	, +	Action1<Movie> moviePrinter = new Action1<Movie>() {, +		public void call(Movie m) {, +			System.out.println("A movie of length " + m.lengthInSeconds() + "s");, +		}, +	};, +	, +	@Test, +	public void test() {, +		MovieLib lib = new MovieLib(Observable.from(new Movie(3000), new Movie(1000), new Movie(2000)));, +		, +		lib.longMovies().subscribe(moviePrinter);		, +	}, +, +}, +++ b/settings.gradle]