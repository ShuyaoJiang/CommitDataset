[+++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapCompletable.java, +        volatile boolean cancelled;, +, +            if (!cancelled && set.add(inner)) {, +            cancelled = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapCompletable.java, +        volatile boolean cancelled;, +, +            if (!cancelled && set.add(inner)) {, +            cancelled = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapCompletableCompletable.java, +        volatile boolean disposed;, +, +            if (!disposed && set.add(inner)) {, +            disposed = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapCompletable.java, +        volatile boolean cancelled;, +, +            if (!cancelled && set.add(inner)) {, +            cancelled = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapCompletableCompletable.java, +        volatile boolean disposed;, +, +            if (!disposed && set.add(inner)) {, +            disposed = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapMaybe.java, +            if (!cancelled && set.add(inner)) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapCompletable.java, +        volatile boolean cancelled;, +, +            if (!cancelled && set.add(inner)) {, +            cancelled = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapCompletableCompletable.java, +        volatile boolean disposed;, +, +            if (!disposed && set.add(inner)) {, +            disposed = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapMaybe.java, +            if (!cancelled && set.add(inner)) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapSingle.java, +            if (!cancelled && set.add(inner)) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapCompletable.java, +        volatile boolean cancelled;, +, +            if (!cancelled && set.add(inner)) {, +            cancelled = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapCompletableCompletable.java, +        volatile boolean disposed;, +, +            if (!disposed && set.add(inner)) {, +            disposed = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapMaybe.java, +            if (!cancelled && set.add(inner)) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapSingle.java, +            if (!cancelled && set.add(inner)) {, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableFlatMapCompletable.java, +        volatile boolean disposed;, +, +            if (!disposed && set.add(inner)) {, +            disposed = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapCompletable.java, +        volatile boolean cancelled;, +, +            if (!cancelled && set.add(inner)) {, +            cancelled = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapCompletableCompletable.java, +        volatile boolean disposed;, +, +            if (!disposed && set.add(inner)) {, +            disposed = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapMaybe.java, +            if (!cancelled && set.add(inner)) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapSingle.java, +            if (!cancelled && set.add(inner)) {, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableFlatMapCompletable.java, +        volatile boolean disposed;, +, +            if (!disposed && set.add(inner)) {, +            disposed = true;, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable.java, +        volatile boolean disposed;, +, +            if (!disposed && set.add(inner)) {, +            disposed = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapCompletable.java, +        volatile boolean cancelled;, +, +            if (!cancelled && set.add(inner)) {, +            cancelled = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapCompletableCompletable.java, +        volatile boolean disposed;, +, +            if (!disposed && set.add(inner)) {, +            disposed = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapMaybe.java, +            if (!cancelled && set.add(inner)) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableFlatMapSingle.java, +            if (!cancelled && set.add(inner)) {, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableFlatMapCompletable.java, +        volatile boolean disposed;]