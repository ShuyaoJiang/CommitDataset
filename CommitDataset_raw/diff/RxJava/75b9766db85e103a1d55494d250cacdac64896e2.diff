[+++ b/README.md, +<a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">and JRuby</a>. , +++ b/README.md, +<a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">and JRuby</a>. , +++ b/language-adaptors/rxjava-clojure/build.gradle, +++ b/README.md, +<a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">and JRuby</a>. , +++ b/language-adaptors/rxjava-clojure/build.gradle, +++ /dev/null, +++ b/README.md, +<a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">and JRuby</a>. , +++ b/language-adaptors/rxjava-clojure/build.gradle, +++ /dev/null, +++ /dev/null, +++ b/README.md, +<a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">and JRuby</a>. , +++ b/language-adaptors/rxjava-clojure/build.gradle, +++ /dev/null, +++ /dev/null, +++ b/language-adaptors/rxjava-groovy/build.gradle, +    provided 'org.codehaus.groovy:groovy-all:2.+', +++ b/README.md, +<a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">and JRuby</a>. , +++ b/language-adaptors/rxjava-clojure/build.gradle, +++ /dev/null, +++ /dev/null, +++ b/language-adaptors/rxjava-groovy/build.gradle, +    provided 'org.codehaus.groovy:groovy-all:2.+', +++ /dev/null, +++ b/README.md, +<a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">and JRuby</a>. , +++ b/language-adaptors/rxjava-clojure/build.gradle, +++ /dev/null, +++ /dev/null, +++ b/language-adaptors/rxjava-groovy/build.gradle, +    provided 'org.codehaus.groovy:groovy-all:2.+', +++ /dev/null, +++ /dev/null, +++ b/README.md, +<a href="https://github.com/Netflix/RxJava/tree/master/language-adaptors/rxjava-jruby">and JRuby</a>. , +++ b/language-adaptors/rxjava-clojure/build.gradle, +++ /dev/null, +++ /dev/null, +++ b/language-adaptors/rxjava-groovy/build.gradle, +    provided 'org.codehaus.groovy:groovy-all:2.+', +++ /dev/null, +++ /dev/null, +++ b/language-adaptors/rxjava-groovy/src/main/java/rx/lang/groovy/GroovyAdaptor.java, +import static org.mockito.Matchers.*;, +import static org.mockito.Mockito.*;, +import groovy.lang.Binding;, +import groovy.lang.GroovyClassLoader;, +, +import java.util.Arrays;, +, +import org.codehaus.groovy.runtime.InvokerHelper;, +import org.junit.Before;, +import org.junit.Test;, +import org.mockito.Mock;, +import org.mockito.MockitoAnnotations;, +, +import rx.Notification;, +import rx.Observable;, +import rx.Observer;, +import rx.Subscription;, +import rx.util.functions.Func1;, +, +    public static class UnitTest {, +, +        @Mock, +        ScriptAssertion assertion;, +, +        @Mock, +        Observer<Integer> w;, +, +        @Before, +        public void before() {, +            MockitoAnnotations.initMocks(this);, +        }, +, +        @Test, +        public void testCreateViaGroovy() {, +            runGroovyScript("o.create({it.onNext('hello');it.onCompleted();}).subscribe({ result -> a.received(result)});");, +            verify(assertion, times(1)).received("hello");, +        }, +, +        @Test, +        public void testFilterViaGroovy() {, +            runGroovyScript("o.filter(o.toObservable(1, 2, 3), {it >= 2}).subscribe({ result -> a.received(result)});");, +            verify(assertion, times(0)).received(1);, +            verify(assertion, times(1)).received(2);, +            verify(assertion, times(1)).received(3);, +        }, +, +        @Test, +        public void testLast() {, +            String script = "mockApiCall.getObservable().last().subscribe({ result -> a.received(result)});";, +            runGroovyScript(script);, +            verify(assertion, times(1)).received("hello_1");, +        }]