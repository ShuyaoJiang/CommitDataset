[+++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableElementAt.java, +import java.util.NoSuchElementException;, +, +    final boolean errorOnFewer;, +, +    public FlowableElementAt(Publisher<T> source, long index, T defaultValue, boolean errorOnFewer) {, +        this.errorOnFewer = errorOnFewer;, +        source.subscribe(new ElementAtSubscriber<T>(s, index, defaultValue, errorOnFewer));, +        final boolean errorOnFewer;, +        ElementAtSubscriber(Subscriber<? super T> actual, long index, T defaultValue, boolean errorOnFewer) {, +            this.errorOnFewer = errorOnFewer;, +                    if (errorOnFewer) {, +                        actual.onError(new NoSuchElementException());, +                    } else {, +                    }, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableElementAt.java, +import java.util.NoSuchElementException;, +, +    final boolean errorOnFewer;, +, +    public FlowableElementAt(Publisher<T> source, long index, T defaultValue, boolean errorOnFewer) {, +        this.errorOnFewer = errorOnFewer;, +        source.subscribe(new ElementAtSubscriber<T>(s, index, defaultValue, errorOnFewer));, +        final boolean errorOnFewer;, +        ElementAtSubscriber(Subscriber<? super T> actual, long index, T defaultValue, boolean errorOnFewer) {, +            this.errorOnFewer = errorOnFewer;, +                    if (errorOnFewer) {, +                        actual.onError(new NoSuchElementException());, +                    } else {, +                    }, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableElementAtMaybe.java, +        return RxJavaPlugins.onAssembly(new FlowableElementAt<T>(source, index, null, false));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableElementAt.java, +import java.util.NoSuchElementException;, +, +    final boolean errorOnFewer;, +, +    public FlowableElementAt(Publisher<T> source, long index, T defaultValue, boolean errorOnFewer) {, +        this.errorOnFewer = errorOnFewer;, +        source.subscribe(new ElementAtSubscriber<T>(s, index, defaultValue, errorOnFewer));, +        final boolean errorOnFewer;, +        ElementAtSubscriber(Subscriber<? super T> actual, long index, T defaultValue, boolean errorOnFewer) {, +            this.errorOnFewer = errorOnFewer;, +                    if (errorOnFewer) {, +                        actual.onError(new NoSuchElementException());, +                    } else {, +                    }, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableElementAtMaybe.java, +        return RxJavaPlugins.onAssembly(new FlowableElementAt<T>(source, index, null, false));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableElementAtSingle.java, +        return RxJavaPlugins.onAssembly(new FlowableElementAt<T>(source, index, defaultValue, true));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableElementAt.java, +import java.util.NoSuchElementException;, +, +    final boolean errorOnFewer;, +, +    public FlowableElementAt(Publisher<T> source, long index, T defaultValue, boolean errorOnFewer) {, +        this.errorOnFewer = errorOnFewer;, +        source.subscribe(new ElementAtSubscriber<T>(s, index, defaultValue, errorOnFewer));, +        final boolean errorOnFewer;, +        ElementAtSubscriber(Subscriber<? super T> actual, long index, T defaultValue, boolean errorOnFewer) {, +            this.errorOnFewer = errorOnFewer;, +                    if (errorOnFewer) {, +                        actual.onError(new NoSuchElementException());, +                    } else {, +                    }, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableElementAtMaybe.java, +        return RxJavaPlugins.onAssembly(new FlowableElementAt<T>(source, index, null, false));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableElementAtSingle.java, +        return RxJavaPlugins.onAssembly(new FlowableElementAt<T>(source, index, defaultValue, true));, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableElementAt.java, +import java.util.NoSuchElementException;, +, +    final boolean errorOnFewer;, +, +    public ObservableElementAt(ObservableSource<T> source, long index, T defaultValue, boolean errorOnFewer) {, +        this.errorOnFewer = errorOnFewer;, +        source.subscribe(new ElementAtObserver<T>(t, index, defaultValue, errorOnFewer));, +        final boolean errorOnFewer;, +        ElementAtObserver(Observer<? super T> actual, long index, T defaultValue, boolean errorOnFewer) {, +            this.errorOnFewer = errorOnFewer;, +                if (v == null && errorOnFewer) {, +                    actual.onError(new NoSuchElementException());, +                } else {, +}, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableElementAt.java, +import java.util.NoSuchElementException;, +, +    final boolean errorOnFewer;, +, +    public FlowableElementAt(Publisher<T> source, long index, T defaultValue, boolean errorOnFewer) {, +        this.errorOnFewer = errorOnFewer;, +        source.subscribe(new ElementAtSubscriber<T>(s, index, defaultValue, errorOnFewer));, +        final boolean errorOnFewer;, +        ElementAtSubscriber(Subscriber<? super T> actual, long index, T defaultValue, boolean errorOnFewer) {, +            this.errorOnFewer = errorOnFewer;, +                    if (errorOnFewer) {, +                        actual.onError(new NoSuchElementException());, +                    } else {, +                    }]