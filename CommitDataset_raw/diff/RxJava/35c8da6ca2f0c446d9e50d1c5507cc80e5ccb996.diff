[+++ b/src/main/java/io/reactivex/Completable.java, +    public static Completable ambArray(final CompletableSource... sources) {, +        return RxJavaPlugins.onAssembly(new CompletableAmbArray(sources));, +        return RxJavaPlugins.onAssembly(new CompletableAmbIterable(sources));, +        return RxJavaPlugins.onAssembly(CompletableEmpty.INSTANCE);, +    public static Completable concatArray(CompletableSource... sources) {, +        return RxJavaPlugins.onAssembly(new CompletableConcatArray(sources));, +        return RxJavaPlugins.onAssembly(new CompletableConcatIterable(sources));, +        return RxJavaPlugins.onAssembly(new CompletableConcat(sources, prefetch));, +        return RxJavaPlugins.onAssembly(new CompletableDefer(completableSupplier));, +        return RxJavaPlugins.onAssembly(new CompletableErrorSupplier(errorSupplier));, +        return RxJavaPlugins.onAssembly(new CompletableError(error));, +        return RxJavaPlugins.onAssembly(new CompletableFromAction(run));, +        return RxJavaPlugins.onAssembly(new CompletableFromCallable(callable));, +        return RxJavaPlugins.onAssembly(new CompletableFromObservable<T>(observable));, +        return RxJavaPlugins.onAssembly(new CompletableFromPublisher<T>(publisher));, +        return RxJavaPlugins.onAssembly(new CompletableFromSingle<T>(single));, +    public static Completable mergeArray(CompletableSource... sources) {, +        return RxJavaPlugins.onAssembly(new CompletableMergeArray(sources));, +        return RxJavaPlugins.onAssembly(new CompletableMergeIterable(sources));, +        return RxJavaPlugins.onAssembly(new CompletableMerge(sources, maxConcurrency, delayErrors));, +    public static Completable mergeArrayDelayError(CompletableSource... sources) {, +        return RxJavaPlugins.onAssembly(new CompletableMergeDelayErrorArray(sources));, +        return RxJavaPlugins.onAssembly(new CompletableMergeDelayErrorIterable(sources));, +        return RxJavaPlugins.onAssembly(CompletableNever.INSTANCE);, +        return RxJavaPlugins.onAssembly(new CompletableTimer(delay, unit, scheduler));, +        return RxJavaPlugins.onAssembly(new CompletableUsing<R>(resourceSupplier, completableFunction, disposer, eager));, +            return RxJavaPlugins.onAssembly((Completable)source);, +        return RxJavaPlugins.onAssembly(new CompletableFromUnsafeSource(source));, +        return ambArray(this, other);, +        return RxJavaPlugins.onAssembly(new ObservableDelaySubscriptionOther<T, Object>(next, toObservable()));, +        return RxJavaPlugins.onAssembly(new FlowableDelaySubscriptionOther<T, Object>(next, toFlowable()));, +        return RxJavaPlugins.onAssembly(new SingleDelayWithCompletable<T>(next, this));, +        return concatArray(this, other);, +        return RxJavaPlugins.onAssembly(new CompletableDelay(this, delay, unit, scheduler, delayError));, +        return RxJavaPlugins.onAssembly(new CompletablePeek(this, onSubscribe, onError, onComplete, onTerminate, onAfterTerminate, onDisposed));, +        return RxJavaPlugins.onAssembly(new CompletableLift(this, onLift));, +        return mergeArray(this, other);, +        return RxJavaPlugins.onAssembly(new CompletableObserveOn(this, scheduler));, +        return RxJavaPlugins.onAssembly(new CompletableOnErrorComplete(this, predicate));, +        return RxJavaPlugins.onAssembly(new CompletableResumeNext(this, errorMapper));, +        return concatArray(other, this);, +        return RxJavaPlugins.onAssembly(new CompletableSubscribeOn(this, scheduler));, +        return RxJavaPlugins.onAssembly(new CompletableTimeout(this, timeout, unit, scheduler, other));, +        return RxJavaPlugins.onAssembly(new CompletableToFlowable<T>(this));, +        return RxJavaPlugins.onAssembly(new CompletableToObservable<T>(this));, +        return RxJavaPlugins.onAssembly(new CompletableToSingle<T>(this, completionValueSupplier, null));, +        return RxJavaPlugins.onAssembly(new CompletableToSingle<T>(this, null, completionValue));, +        return RxJavaPlugins.onAssembly(new CompletableUnsubscribeOn(this, scheduler));, +++ b/src/main/java/io/reactivex/Completable.java, +    public static Completable ambArray(final CompletableSource... sources) {, +        return RxJavaPlugins.onAssembly(new CompletableAmbArray(sources));, +        return RxJavaPlugins.onAssembly(new CompletableAmbIterable(sources));, +        return RxJavaPlugins.onAssembly(CompletableEmpty.INSTANCE);, +    public static Completable concatArray(CompletableSource... sources) {, +        return RxJavaPlugins.onAssembly(new CompletableConcatArray(sources));, +        return RxJavaPlugins.onAssembly(new CompletableConcatIterable(sources));, +        return RxJavaPlugins.onAssembly(new CompletableConcat(sources, prefetch));, +        return RxJavaPlugins.onAssembly(new CompletableDefer(completableSupplier));, +        return RxJavaPlugins.onAssembly(new CompletableErrorSupplier(errorSupplier));, +        return RxJavaPlugins.onAssembly(new CompletableError(error));, +        return RxJavaPlugins.onAssembly(new CompletableFromAction(run));, +        return RxJavaPlugins.onAssembly(new CompletableFromCallable(callable));, +        return RxJavaPlugins.onAssembly(new CompletableFromObservable<T>(observable));, +        return RxJavaPlugins.onAssembly(new CompletableFromPublisher<T>(publisher));, +        return RxJavaPlugins.onAssembly(new CompletableFromSingle<T>(single));, +    public static Completable mergeArray(CompletableSource... sources) {, +        return RxJavaPlugins.onAssembly(new CompletableMergeArray(sources));, +        return RxJavaPlugins.onAssembly(new CompletableMergeIterable(sources));, +        return RxJavaPlugins.onAssembly(new CompletableMerge(sources, maxConcurrency, delayErrors));, +    public static Completable mergeArrayDelayError(CompletableSource... sources) {, +        return RxJavaPlugins.onAssembly(new CompletableMergeDelayErrorArray(sources));, +        return RxJavaPlugins.onAssembly(new CompletableMergeDelayErrorIterable(sources));, +        return RxJavaPlugins.onAssembly(CompletableNever.INSTANCE);, +        return RxJavaPlugins.onAssembly(new CompletableTimer(delay, unit, scheduler));, +        return RxJavaPlugins.onAssembly(new CompletableUsing<R>(resourceSupplier, completableFunction, disposer, eager));, +            return RxJavaPlugins.onAssembly((Completable)source);, +        return RxJavaPlugins.onAssembly(new CompletableFromUnsafeSource(source));, +        return ambArray(this, other);, +        return RxJavaPlugins.onAssembly(new ObservableDelaySubscriptionOther<T, Object>(next, toObservable()));, +        return RxJavaPlugins.onAssembly(new FlowableDelaySubscriptionOther<T, Object>(next, toFlowable()));, +        return RxJavaPlugins.onAssembly(new SingleDelayWithCompletable<T>(next, this));, +        return concatArray(this, other);, +        return RxJavaPlugins.onAssembly(new CompletableDelay(this, delay, unit, scheduler, delayError));, +        return RxJavaPlugins.onAssembly(new CompletablePeek(this, onSubscribe, onError, onComplete, onTerminate, onAfterTerminate, onDisposed));, +        return RxJavaPlugins.onAssembly(new CompletableLift(this, onLift));, +        return mergeArray(this, other);, +        return RxJavaPlugins.onAssembly(new CompletableObserveOn(this, scheduler));, +        return RxJavaPlugins.onAssembly(new CompletableOnErrorComplete(this, predicate));, +        return RxJavaPlugins.onAssembly(new CompletableResumeNext(this, errorMapper));, +        return concatArray(other, this);, +        return RxJavaPlugins.onAssembly(new CompletableSubscribeOn(this, scheduler));, +        return RxJavaPlugins.onAssembly(new CompletableTimeout(this, timeout, unit, scheduler, other));, +        return RxJavaPlugins.onAssembly(new CompletableToFlowable<T>(this));, +        return RxJavaPlugins.onAssembly(new CompletableToObservable<T>(this));, +        return RxJavaPlugins.onAssembly(new CompletableToSingle<T>(this, completionValueSupplier, null));, +        return RxJavaPlugins.onAssembly(new CompletableToSingle<T>(this, null, completionValue));, +        return RxJavaPlugins.onAssembly(new CompletableUnsubscribeOn(this, scheduler));, +++ b/src/main/java/io/reactivex/Flowable.java, +        return RxJavaPlugins.onAssembly(new FlowableAmb<T>(null, sources));]