[+++ b/src/main/java/io/reactivex/Completable.java, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Completable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well.</dd>, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Completable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well.</dd>, +     * @param source the emitter that is called when a CompletableObserver subscribes to the returned {@code Completable}, +     * @see CompletableOnSubscribe, +     * If the errorSupplier returns null, the child CompletableObservers will receive a, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Completable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well.</dd>, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Completable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well.</dd>, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Completable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well.</dd>, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Flowable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well., +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Completable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well.</dd>, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Completable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well.</dd>, +     * Returns a Flowable which will subscribe to this Completable and once that is completed then, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Flowable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well., +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Flowable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well., +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Flowable} honors the backpressure of the downstream consumer., +++ b/src/main/java/io/reactivex/Completable.java, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Completable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well.</dd>, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Completable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well.</dd>, +     * @param source the emitter that is called when a CompletableObserver subscribes to the returned {@code Completable}, +     * @see CompletableOnSubscribe, +     * If the errorSupplier returns null, the child CompletableObservers will receive a, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Completable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well.</dd>, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Completable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well.</dd>, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Completable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well.</dd>, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Flowable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well., +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Completable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well.</dd>, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Completable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well.</dd>, +     * Returns a Flowable which will subscribe to this Completable and once that is completed then, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Flowable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well., +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Flowable} honors the backpressure of the downstream consumer, +     *  and expects the other {@code Publisher} to honor it as well., +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Flowable} honors the backpressure of the downstream consumer., +++ b/src/main/java/io/reactivex/Flowable.java, +     * the source Publishers each time an item is received from any of the source Publisher, where this, +     *  <dd>The operator honors backpressure from downstream. The {@code Publisher}, +     *  <dd>The operator honors backpressure from downstream. The {@code Publisher}, +     * Subscriber subscribes to the Publisher. This allows a {@link Subscriber} to easily obtain updates or a, +     * Returns a Flowable that invokes a {@link Subscriber}'s {@link Subscriber#onError onError} method when the, +     * Returns a Flowable that invokes a {@link Subscriber}'s {@link Subscriber#onError onError} method when the, +     * Returns a Flowable that, when a Subscriber subscribes to it, invokes a function you specify and then, +     * This allows you to defer the execution of the function you specify until a Subscriber subscribes to the, +     *         function only when a Subscriber subscribes to the Publisher that {@code fromCallable} returns, +     *  is not ready to receive the next value.</dd>, +     * Flattens an Iterable of Publishers into one Publisher, in a way that allows a Subscriber to receive all, +     * Flattens an Iterable of Publishers into one Publisher, in a way that allows a Subscriber to receive all, +     * Flattens an array of Publishers into one Publisher, in a way that allows a Subscriber to receive all, +     * Flattens an Iterable of Publishers into one Publisher, in a way that allows a Subscriber to receive all, +     * Flattens a Publisher that emits Publishers into one Publisher, in a way that allows a Subscriber to, +     * Flattens a Publisher that emits Publishers into one Publisher, in a way that allows a Subscriber to, +     * Flattens an array of Publishers into one Flowable, in a way that allows a Subscriber to receive all, +     * Flattens two Publishers into one Publisher, in a way that allows a Subscriber to receive all, +     * Flattens three Publishers into one Publisher, in a way that allows a Subscriber to receive all, +     * Flattens four Publishers into one Publisher, in a way that allows a Subscriber to receive all, +     * Returns a Flowable that never sends any items or notifications to a {@link Subscriber}., +     * @return a Flowable that never emits any items or sends any notifications to a {@link Subscriber}, +++ b/src/main/java/io/reactivex/Completable.java, +     *  <dt><b>Backpressure:</b><dt>, +     *  <dd>The returned {@code Completable} honors the backpressure of the downstream consumer]