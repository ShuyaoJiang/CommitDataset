[+++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperationCast;, +     * Converts the elements of an observable sequence to the specified type., +     *, +     * @param klass, +     *            The target class type which the elements will be converted to., +     *, +     * @return An observable sequence that contains each element of the source, +     *         sequence converted to the specified type., +     *, +     * @see <a, +     *      href="http://msdn.microsoft.com/en-us/library/hh211842(v=vs.103).aspx">MSDN:, +     *      Observable.Cast</a>, +     */, +    public <R> Observable<R> cast(final Class<R> klass) {, +        return create(OperationCast.cast(this, klass));, +    }, +, +    /**, +     * Filters the elements of an observable sequence based on the specified, +     * type., +     *, +     * @param klass, +     *            The class type to filter the elements in the source sequence, +     *            on., +     *, +     * @return An observable sequence that contains elements from the input, +     *         sequence of type klass., +     *, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229380(v=vs.103).aspx">MSDN: Observable.OfType</a>, +     */, +    public <R> Observable<R> ofType(final Class<R> klass) {, +        return filter(new Func1<T, Boolean>() {, +            public Boolean call(T t) {, +                return klass.isInstance(t);, +            }, +        }).cast(klass);, +    }, +, +    /**, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperationCast;, +     * Converts the elements of an observable sequence to the specified type., +     *, +     * @param klass, +     *            The target class type which the elements will be converted to., +     *, +     * @return An observable sequence that contains each element of the source, +     *         sequence converted to the specified type., +     *, +     * @see <a, +     *      href="http://msdn.microsoft.com/en-us/library/hh211842(v=vs.103).aspx">MSDN:, +     *      Observable.Cast</a>, +     */, +    public <R> Observable<R> cast(final Class<R> klass) {, +        return create(OperationCast.cast(this, klass));, +    }, +, +    /**, +     * Filters the elements of an observable sequence based on the specified, +     * type., +     *, +     * @param klass, +     *            The class type to filter the elements in the source sequence, +     *            on., +     *, +     * @return An observable sequence that contains elements from the input, +     *         sequence of type klass., +     *, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229380(v=vs.103).aspx">MSDN: Observable.OfType</a>, +     */, +    public <R> Observable<R> ofType(final Class<R> klass) {, +        return filter(new Func1<T, Boolean>() {, +            public Boolean call(T t) {, +                return klass.isInstance(t);, +            }, +        }).cast(klass);, +    }, +, +    /**, +++ b/rxjava-core/src/main/java/rx/operators/OperationCast.java, +package rx.operators;, +, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.never;, +import static org.mockito.Mockito.times;, +import static org.mockito.Mockito.verify;, +, +import org.junit.Test;, +, +import rx.Observable;, +import rx.Observable.OnSubscribeFunc;, +import rx.Observer;, +import rx.util.functions.Func1;, +, +/**, + * Converts the elements of an observable sequence to the specified type., + */, +public class OperationCast {, +]