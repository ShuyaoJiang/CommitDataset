[+++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableObserveOn.java, +                        cancelled = true;, +                        cancelled = true;, +                        cancelled = true;, +                        cancelled = true;, +                        cancelled = true;, +                    cancelled = true;, +                        cancelled = true;, +                    cancelled = true;, +                        cancelled = true;, +                        cancelled = true;, +                    cancelled = true;, +                        cancelled = true;, +                    cancelled = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableObserveOn.java, +                        cancelled = true;, +                        cancelled = true;, +                        cancelled = true;, +                        cancelled = true;, +                        cancelled = true;, +                    cancelled = true;, +                        cancelled = true;, +                    cancelled = true;, +                        cancelled = true;, +                        cancelled = true;, +                    cancelled = true;, +                        cancelled = true;, +                    cancelled = true;, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableObserveOn.java, +        volatile boolean disposed;, +            if (!disposed) {, +                disposed = true;, +            return disposed;, +                        disposed = true;, +                if (disposed) {, +                    disposed = true;, +                    disposed = true;, +            if (disposed) {, +                        disposed = true;, +                        disposed = true;, +                        disposed = true;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableObserveOn.java, +                        cancelled = true;, +                        cancelled = true;, +                        cancelled = true;, +                        cancelled = true;, +                        cancelled = true;, +                    cancelled = true;, +                        cancelled = true;, +                    cancelled = true;, +                        cancelled = true;, +                        cancelled = true;, +                    cancelled = true;, +                        cancelled = true;, +                    cancelled = true;, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableObserveOn.java, +        volatile boolean disposed;, +            if (!disposed) {, +                disposed = true;, +            return disposed;, +                        disposed = true;, +                if (disposed) {, +                    disposed = true;, +                    disposed = true;, +            if (disposed) {, +                        disposed = true;, +                        disposed = true;, +                        disposed = true;, +++ b/src/test/java/io/reactivex/internal/operators/flowable/FlowableObserveOnTest.java, +import io.reactivex.annotations.Nullable;, +import io.reactivex.disposables.*;, +, +    public static final class DisposeTrackingScheduler extends Scheduler {, +, +        public final AtomicInteger disposedCount = new AtomicInteger();, +, +        @Override, +        public Worker createWorker() {, +            return new TrackingWorker();, +        }, +, +        final class TrackingWorker extends Scheduler.Worker {, +, +            @Override, +            public void dispose() {, +                disposedCount.getAndIncrement();, +            }, +, +            @Override, +            public boolean isDisposed() {, +                return false;, +            }, +, +            @Override, +            public Disposable schedule(Runnable run, long delay,, +                    TimeUnit unit) {, +                run.run();, +                return Disposables.empty();, +            }, +        }]