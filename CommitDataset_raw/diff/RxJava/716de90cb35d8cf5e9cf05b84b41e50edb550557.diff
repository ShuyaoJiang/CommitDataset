[+++ b/rxjava-contrib/rxjava-javafx/build.gradle, +apply plugin: 'osgi', +, +sourceCompatibility = JavaVersion.VERSION_1_6, +targetCompatibility = JavaVersion.VERSION_1_6, +, +dependencies {, +    compile project(':rxjava-core'), +    provided 'junit:junit-dep:4.10', +    provided 'org.mockito:mockito-core:1.8.5', +}, +, +javadoc {, +    options {, +        doclet = "org.benjchristensen.doclet.DocletExclude", +        docletpath = [rootProject.file('./gradle/doclet-exclude.jar')], +        stylesheetFile = rootProject.file('./gradle/javadocStyleSheet.css'), +        windowTitle = "RxJava Javadoc ${project.version}", +    }, +    options.addStringOption('top').value = '<h2 class="title" style="padding-top:40px">RxJava</h2>', +}, +, +jar {, +    manifest {, +        name = 'rxjava-javafx', +        instruction 'Bundle-Vendor', 'Netflix', +        instruction 'Bundle-DocURL', 'https://github.com/Netflix/RxJava', +        instruction 'Import-Package', '!org.junit,!junit.framework,!org.mockito.*,*', +        instruction 'Fragment-Host', 'com.netflix.rxjava.core', +    }, +}, +++ b/rxjava-contrib/rxjava-javafx/build.gradle, +apply plugin: 'osgi', +, +sourceCompatibility = JavaVersion.VERSION_1_6, +targetCompatibility = JavaVersion.VERSION_1_6, +, +dependencies {, +    compile project(':rxjava-core'), +    provided 'junit:junit-dep:4.10', +    provided 'org.mockito:mockito-core:1.8.5', +}, +, +javadoc {, +    options {, +        doclet = "org.benjchristensen.doclet.DocletExclude", +        docletpath = [rootProject.file('./gradle/doclet-exclude.jar')], +        stylesheetFile = rootProject.file('./gradle/javadocStyleSheet.css'), +        windowTitle = "RxJava Javadoc ${project.version}", +    }, +    options.addStringOption('top').value = '<h2 class="title" style="padding-top:40px">RxJava</h2>', +}, +, +jar {, +    manifest {, +        name = 'rxjava-javafx', +        instruction 'Bundle-Vendor', 'Netflix', +        instruction 'Bundle-DocURL', 'https://github.com/Netflix/RxJava', +        instruction 'Import-Package', '!org.junit,!junit.framework,!org.mockito.*,*', +        instruction 'Fragment-Host', 'com.netflix.rxjava.core', +    }, +}, +++ b/rxjava-contrib/rxjava-javafx/src/main/java/rx/javafx/sources/NodeEventSource.java, +package rx.javafx.sources;, +, +import javafx.event.Event;, +import javafx.event.EventHandler;, +import javafx.event.EventType;, +import javafx.scene.Node;, +import rx.Observable;, +import rx.Subscriber;, +import rx.functions.Action0;, +import rx.schedulers.JavaFxScheduler;, +import rx.subscriptions.JavaFxSubscriptions;, +, +public class NodeEventSource {, +    /**, +     * @see rx.observables.JavaFxObservable#fromNodeEvents, +     */, +    public static <T extends Event> Observable<T> fromNodeEvents(final Node source, final EventType<T> eventType) {, +, +        return Observable.create(new Observable.OnSubscribe<T>() {, +            @Override, +            public void call(final Subscriber<? super T> subscriber) {, +                final EventHandler<T> handler = new EventHandler<T>() {, +                    @Override, +                    public void handle(T t) {, +                        subscriber.onNext(t);, +                    }, +                };, +, +                source.addEventHandler(eventType, handler);, +, +                subscriber.add(JavaFxSubscriptions.unsubscribeInEventDispatchThread(new Action0() {, +                    @Override, +                    public void call() {, +                        source.removeEventHandler(eventType, handler);, +                    }, +                }));, +            }]