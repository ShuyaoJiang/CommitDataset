[+++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observer.scala, +import rx.joins.ObserverBase, +, +, +  private [scala] def apply[T](observer: rx.Observer[T]) : Observer[T] = {, +, +  /**, +   * Creates an [[rx.lang.scala.Observer]], +   * @param onNext the onNext action, +   * @param onError the onError action, +   * @param onCompleted the onCompleted action, +   */, +  def apply[T](onNext: T => Unit, onError: Throwable => Unit, onCompleted: () => Unit): Observer[T] = {, +    Observer(new ObserverBase[T] () {, +      protected def onCompletedCore(): Unit = onCompleted(), +      protected def onErrorCore(error: Throwable): Unit = onError(error), +      protected def onNextCore(value: T): Unit = onNext(value), +    }), +  }, +, +  /**, +   * Creates an [[rx.lang.scala.Observer]], +   * @param onNext the onNext action, +   * @param onError the onError action, +   */, +  def apply[T](onNext: T => Unit, onError: Throwable => Unit): Observer[T] = {, +    Observer(new ObserverBase[T] () {, +      protected def onCompletedCore(): Unit = {}, +      protected def onErrorCore(error: Throwable): Unit = onError(error), +      protected def onNextCore(value: T): Unit = onNext(value), +    }), +  }, +, +  def apply[T](onNext: T => Unit, onCompleted: () => Unit): Observer[T] = {, +    Observer(new ObserverBase[T] () {, +      protected def onCompletedCore(): Unit = onCompleted(), +      protected def onErrorCore(error: Throwable): Unit = {}, +      protected def onNextCore(value: T): Unit = onNext(value), +    }), +  }, +, +  /**, +   * Creates an [[rx.lang.scala.Observer]], +   * @param onNext the onNext action, +   */, +  def apply[T](onNext: T => Unit): Observer[T] = {, +    Observer(new ObserverBase[T] () {, +      protected def onCompletedCore(): Unit = {}, +      protected def onErrorCore(error: Throwable): Unit = {}, +      protected def onNextCore(value: T): Unit = onNext(value), +    }), +  }]