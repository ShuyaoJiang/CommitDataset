[+++ b/language-adaptors/rxjava-groovy/src/examples/groovy/rx/lang/groovy/examples/VideoExample.groovy, +import rx.subscriptions.BooleanSubscription;, +Observable getVideoGridForDisplay(userId) {, +    // take the first 5 lists, +    getListOfLists(userId).take(5).mapMany({ VideoList list ->, +Observable<VideoList> getListOfLists(userId) {, +        BooleanSubscription subscription = new BooleanSubscription();, +        executor.execute({, +                    if(subscription.isUnsubscribed()) {, +        return subscription;, +    String getListName() {, +    Integer getListPosition() {, +    Observable<Video> getVideos() {, +    Observable<Map<String, String>> getMetadata() {, +    Observable<Integer> getBookmark(userId) {, +            executor.execute({, +    Observable<VideoRating> getRating(userId) {, +            executor.execute({, +    Integer getPredictedStarRating() {, +    Integer getAverageStarRating() {, +    Integer getActualStarRating() {, +++ b/language-adaptors/rxjava-groovy/src/examples/groovy/rx/lang/groovy/examples/VideoExample.groovy, +import rx.subscriptions.BooleanSubscription;, +Observable getVideoGridForDisplay(userId) {, +    // take the first 5 lists, +    getListOfLists(userId).take(5).mapMany({ VideoList list ->, +Observable<VideoList> getListOfLists(userId) {, +        BooleanSubscription subscription = new BooleanSubscription();, +        executor.execute({, +                    if(subscription.isUnsubscribed()) {, +        return subscription;, +    String getListName() {, +    Integer getListPosition() {, +    Observable<Video> getVideos() {, +    Observable<Map<String, String>> getMetadata() {, +    Observable<Integer> getBookmark(userId) {, +            executor.execute({, +    Observable<VideoRating> getRating(userId) {, +            executor.execute({, +    Integer getPredictedStarRating() {, +    Integer getAverageStarRating() {, +    Integer getActualStarRating() {, +++ b/rxjava-core/src/main/java/rx/subscriptions/BooleanSubscription.java, +        unsubscribed.set(false);]