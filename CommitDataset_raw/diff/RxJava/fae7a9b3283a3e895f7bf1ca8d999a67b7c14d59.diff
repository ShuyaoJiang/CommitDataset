[+++ b/rxjava-core/src/main/java/rx/observers/Observers.java, +import rx.Subscriber;, +    private static final Observer<Object> EMPTY = new Observer<Object>() {, +        public final void onNext(Object args) {, +, +    @SuppressWarnings("unchecked"), +    public static <T> Observer<T> empty() {, +        return (Observer<T>) EMPTY;, +++ b/rxjava-core/src/main/java/rx/observers/Observers.java, +import rx.Subscriber;, +    private static final Observer<Object> EMPTY = new Observer<Object>() {, +        public final void onNext(Object args) {, +, +    @SuppressWarnings("unchecked"), +    public static <T> Observer<T> empty() {, +        return (Observer<T>) EMPTY;, +++ b/rxjava-core/src/main/java/rx/observers/Subscribers.java, +    private static final Subscriber<Object> EMPTY = new Subscriber<Object>() {, +, +        @Override, +        public final void onCompleted() {, +            // do nothing, +        }, +, +        @Override, +        public final void onError(Throwable e) {, +            throw new OnErrorNotImplementedException(e);, +        }, +, +        @Override, +        public final void onNext(Object args) {, +            // do nothing, +        }, +, +    };, +, +    @SuppressWarnings("unchecked"), +    public static <T> Subscriber<T> empty() {, +        return (Subscriber<T>) EMPTY;, +    }, +, +++ b/rxjava-core/src/main/java/rx/observers/Observers.java, +import rx.Subscriber;, +    private static final Observer<Object> EMPTY = new Observer<Object>() {, +        public final void onNext(Object args) {, +, +    @SuppressWarnings("unchecked"), +    public static <T> Observer<T> empty() {, +        return (Observer<T>) EMPTY;, +++ b/rxjava-core/src/main/java/rx/observers/Subscribers.java, +    private static final Subscriber<Object> EMPTY = new Subscriber<Object>() {, +, +        @Override, +        public final void onCompleted() {, +            // do nothing, +        }, +, +        @Override, +        public final void onError(Throwable e) {, +            throw new OnErrorNotImplementedException(e);, +        }, +, +        @Override, +        public final void onNext(Object args) {, +            // do nothing, +        }, +, +    };, +, +    @SuppressWarnings("unchecked"), +    public static <T> Subscriber<T> empty() {, +        return (Subscriber<T>) EMPTY;, +    }, +, +++ b/rxjava-core/src/main/java/rx/observers/TestObserver.java, +        this.delegate = Observers.empty();, +++ b/rxjava-core/src/main/java/rx/observers/Observers.java, +import rx.Subscriber;, +    private static final Observer<Object> EMPTY = new Observer<Object>() {, +        public final void onNext(Object args) {, +, +    @SuppressWarnings("unchecked"), +    public static <T> Observer<T> empty() {, +        return (Observer<T>) EMPTY;, +++ b/rxjava-core/src/main/java/rx/observers/Subscribers.java, +    private static final Subscriber<Object> EMPTY = new Subscriber<Object>() {, +, +        @Override, +        public final void onCompleted() {, +            // do nothing, +        }, +, +        @Override, +        public final void onError(Throwable e) {, +            throw new OnErrorNotImplementedException(e);, +        }, +, +        @Override, +        public final void onNext(Object args) {, +            // do nothing]