[+++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorCollect.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorCollect.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorDistinct.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorCollect.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorDistinct.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorToList.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorCollect.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorDistinct.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorToList.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/subscribers/observable/NbpBlockingSubscriber.java, +        DisposableHelper.setOnce(this, s);, +    public boolean isDisposed() {, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorCollect.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorDistinct.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorToList.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/subscribers/observable/NbpBlockingSubscriber.java, +        DisposableHelper.setOnce(this, s);, +    public boolean isDisposed() {, +++ /dev/null, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorCollect.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorDistinct.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorToList.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/subscribers/observable/NbpBlockingSubscriber.java, +        DisposableHelper.setOnce(this, s);, +    public boolean isDisposed() {, +++ /dev/null, +++ b/src/main/java/io/reactivex/internal/subscribers/observable/NbpEmptySubscriber.java, +    INSTANCE(true, false),, +    INSTANCE_NOERROR(false, false),, +    /** Empty instance that disposes disposables. */, +    DISPOSED(true, true);, +    private final boolean reportError;, +    private final boolean disposeDisposable;, +    NbpEmptySubscriber(boolean reportError, boolean disposeDisposable) {, +        this.disposeDisposable = disposeDisposable;, +    public void onSubscribe(Disposable d) {, +        if (disposeDisposable) {, +            d.dispose();, +        }, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorCollect.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorDistinct.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/operators/observable/NbpOperatorToList.java, +import io.reactivex.internal.subscribers.observable.NbpEmptySubscriber;, +            return NbpEmptySubscriber.DISPOSED;, +++ b/src/main/java/io/reactivex/internal/subscribers/observable/NbpBlockingSubscriber.java, +        DisposableHelper.setOnce(this, s);, +    public boolean isDisposed() {, +++ /dev/null, +++ b/src/main/java/io/reactivex/internal/subscribers/observable/NbpEmptySubscriber.java, +    INSTANCE(true, false),, +    INSTANCE_NOERROR(false, false),, +    /** Empty instance that disposes disposables. */, +    DISPOSED(true, true);]