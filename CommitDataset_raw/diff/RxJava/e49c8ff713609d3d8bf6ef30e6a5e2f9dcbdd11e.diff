[+++ b/src/main/java/io/reactivex/internal/schedulers/ComputationScheduler.java, +    static final RxThreadFactory THREAD_FACTORY;, +    /** The name of the system property for setting the thread priority for this Scheduler. */, +    private static final String KEY_COMPUTATION_PRIORITY = "rx2.computation-priority";, +, +        int priority = Math.max(Thread.MIN_PRIORITY, Math.min(Thread.MAX_PRIORITY,, +                Integer.getInteger(KEY_COMPUTATION_PRIORITY, Thread.NORM_PRIORITY)));, +, +        THREAD_FACTORY = new RxThreadFactory(THREAD_NAME_PREFIX, priority);, +++ b/src/main/java/io/reactivex/internal/schedulers/ComputationScheduler.java, +    static final RxThreadFactory THREAD_FACTORY;, +    /** The name of the system property for setting the thread priority for this Scheduler. */, +    private static final String KEY_COMPUTATION_PRIORITY = "rx2.computation-priority";, +, +        int priority = Math.max(Thread.MIN_PRIORITY, Math.min(Thread.MAX_PRIORITY,, +                Integer.getInteger(KEY_COMPUTATION_PRIORITY, Thread.NORM_PRIORITY)));, +, +        THREAD_FACTORY = new RxThreadFactory(THREAD_NAME_PREFIX, priority);, +++ b/src/main/java/io/reactivex/internal/schedulers/ExecutorScheduler.java, +/**, + * Wraps an Executor and provides the Scheduler API over it., + */, +++ b/src/main/java/io/reactivex/internal/schedulers/ComputationScheduler.java, +    static final RxThreadFactory THREAD_FACTORY;, +    /** The name of the system property for setting the thread priority for this Scheduler. */, +    private static final String KEY_COMPUTATION_PRIORITY = "rx2.computation-priority";, +, +        int priority = Math.max(Thread.MIN_PRIORITY, Math.min(Thread.MAX_PRIORITY,, +                Integer.getInteger(KEY_COMPUTATION_PRIORITY, Thread.NORM_PRIORITY)));, +, +        THREAD_FACTORY = new RxThreadFactory(THREAD_NAME_PREFIX, priority);, +++ b/src/main/java/io/reactivex/internal/schedulers/ExecutorScheduler.java, +/**, + * Wraps an Executor and provides the Scheduler API over it., + */, +++ b/src/main/java/io/reactivex/internal/schedulers/IoScheduler.java, +    static final RxThreadFactory WORKER_THREAD_FACTORY;, +    static final RxThreadFactory EVICTOR_THREAD_FACTORY;, +    /** The name of the system property for setting the thread priority for this Scheduler. */, +    private static final String KEY_IO_PRIORITY = "rx2.io-priority";, +, +, +        int priority = Math.max(Thread.MIN_PRIORITY, Math.min(Thread.MAX_PRIORITY,, +                Integer.getInteger(KEY_IO_PRIORITY, Thread.NORM_PRIORITY)));, +, +        WORKER_THREAD_FACTORY = new RxThreadFactory(WORKER_THREAD_NAME_PREFIX, priority);, +, +        EVICTOR_THREAD_FACTORY = new RxThreadFactory(EVICTOR_THREAD_NAME_PREFIX, priority);, +++ b/src/main/java/io/reactivex/internal/schedulers/ComputationScheduler.java, +    static final RxThreadFactory THREAD_FACTORY;, +    /** The name of the system property for setting the thread priority for this Scheduler. */, +    private static final String KEY_COMPUTATION_PRIORITY = "rx2.computation-priority";, +, +        int priority = Math.max(Thread.MIN_PRIORITY, Math.min(Thread.MAX_PRIORITY,, +                Integer.getInteger(KEY_COMPUTATION_PRIORITY, Thread.NORM_PRIORITY)));, +, +        THREAD_FACTORY = new RxThreadFactory(THREAD_NAME_PREFIX, priority);, +++ b/src/main/java/io/reactivex/internal/schedulers/ExecutorScheduler.java, +/**, + * Wraps an Executor and provides the Scheduler API over it., + */, +++ b/src/main/java/io/reactivex/internal/schedulers/IoScheduler.java, +    static final RxThreadFactory WORKER_THREAD_FACTORY;, +    static final RxThreadFactory EVICTOR_THREAD_FACTORY;, +    /** The name of the system property for setting the thread priority for this Scheduler. */, +    private static final String KEY_IO_PRIORITY = "rx2.io-priority";, +, +, +        int priority = Math.max(Thread.MIN_PRIORITY, Math.min(Thread.MAX_PRIORITY,, +                Integer.getInteger(KEY_IO_PRIORITY, Thread.NORM_PRIORITY)));, +, +        WORKER_THREAD_FACTORY = new RxThreadFactory(WORKER_THREAD_NAME_PREFIX, priority);, +, +        EVICTOR_THREAD_FACTORY = new RxThreadFactory(EVICTOR_THREAD_NAME_PREFIX, priority);, +++ b/src/main/java/io/reactivex/internal/schedulers/NewThreadScheduler.java, +    private static final RxThreadFactory THREAD_FACTORY;, +, +    /** The name of the system property for setting the thread priority for this Scheduler. */, +    private static final String KEY_NEWTHREAD_PRIORITY = "rx2.newthread-priority";, +, +    static {, +        int priority = Math.max(Thread.MIN_PRIORITY, Math.min(Thread.MAX_PRIORITY,, +                Integer.getInteger(KEY_NEWTHREAD_PRIORITY, Thread.NORM_PRIORITY)));, +, +        THREAD_FACTORY = new RxThreadFactory(THREAD_NAME_PREFIX, priority);, +    }, +, +++ b/src/main/java/io/reactivex/internal/schedulers/ComputationScheduler.java, +    static final RxThreadFactory THREAD_FACTORY;, +    /** The name of the system property for setting the thread priority for this Scheduler. */, +    private static final String KEY_COMPUTATION_PRIORITY = "rx2.computation-priority";, +, +        int priority = Math.max(Thread.MIN_PRIORITY, Math.min(Thread.MAX_PRIORITY,, +                Integer.getInteger(KEY_COMPUTATION_PRIORITY, Thread.NORM_PRIORITY)));, +, +        THREAD_FACTORY = new RxThreadFactory(THREAD_NAME_PREFIX, priority);, +++ b/src/main/java/io/reactivex/internal/schedulers/ExecutorScheduler.java, +/**, + * Wraps an Executor and provides the Scheduler API over it., + */]