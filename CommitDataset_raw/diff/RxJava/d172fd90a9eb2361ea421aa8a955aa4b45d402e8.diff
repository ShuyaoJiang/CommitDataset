[+++ b/rxjava-core/src/main/java/rx/Observable.java, +++ b/rxjava-core/src/main/java/rx/Observable.java, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/Observable.java, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/operators/OperationTake.java, +import rx.subjects.Subject;, +        public void testTakeWhileOnSubject1() {, +            Subject<Integer> s = Subject.create();, +            Observable<Integer> w = (Observable<Integer>)s;, +            Observable<Integer> take = Observable.create(takeWhile(w, new Func1<Integer, Boolean>() {, +                @Override, +                public Boolean call(Integer input) {, +                    return input < 3;, +                }, +            }));, +, +            @SuppressWarnings("unchecked"), +            Observer<Integer> aObserver = mock(Observer.class);, +            take.subscribe(aObserver);, +, +            s.onNext(1);, +            s.onNext(2);, +            s.onNext(3);, +            s.onNext(4);, +            s.onNext(5);, +            s.onCompleted();, +, +            verify(aObserver, times(1)).onNext(1);, +            verify(aObserver, times(1)).onNext(2);, +            verify(aObserver, never()).onNext(3);, +            verify(aObserver, never()).onNext(4);, +            verify(aObserver, never()).onNext(5);, +            verify(aObserver, never()).onError(any(Exception.class));, +            verify(aObserver, times(1)).onCompleted();, +        }, +, +        @Test]