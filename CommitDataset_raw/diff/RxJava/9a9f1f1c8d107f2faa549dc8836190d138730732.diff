[+++ b/rxjava-core/src/main/java/rx/Subscriber.java, +    protected final void request(long n) {, +    public void setProducer(Producer producer) {, +++ b/rxjava-core/src/main/java/rx/Subscriber.java, +    protected final void request(long n) {, +    public void setProducer(Producer producer) {, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorMerge.java, +                        s.requestMore(emitted);, +        public void requestMore(long n) {, +            request(n);, +        }, +, +++ b/rxjava-core/src/main/java/rx/Subscriber.java, +    protected final void request(long n) {, +    public void setProducer(Producer producer) {, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorMerge.java, +                        s.requestMore(emitted);, +        public void requestMore(long n) {, +            request(n);, +        }, +, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorSkip.java, +            public void setProducer(final Producer producer) {, +                child.setProducer(new Producer() {, +                });, +++ b/rxjava-core/src/main/java/rx/Subscriber.java, +    protected final void request(long n) {, +    public void setProducer(Producer producer) {, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorMerge.java, +                        s.requestMore(emitted);, +        public void requestMore(long n) {, +            request(n);, +        }, +, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorSkip.java, +            public void setProducer(final Producer producer) {, +                child.setProducer(new Producer() {, +                });, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorSubscribeOn.java, +                            public void setProducer(final Producer producer) {, +                                subscriber.setProducer(new Producer() {, +                                });, +++ b/rxjava-core/src/main/java/rx/Subscriber.java, +    protected final void request(long n) {, +    public void setProducer(Producer producer) {, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorMerge.java, +                        s.requestMore(emitted);, +        public void requestMore(long n) {, +            request(n);, +        }, +, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorSkip.java, +            public void setProducer(final Producer producer) {, +                child.setProducer(new Producer() {, +                });, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorSubscribeOn.java, +                            public void setProducer(final Producer producer) {, +                                subscriber.setProducer(new Producer() {, +                                });, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorTake.java, +            public void setProducer(final Producer producer) {, +                child.setProducer(new Producer() {, +                });, +++ b/rxjava-core/src/main/java/rx/Subscriber.java, +    protected final void request(long n) {, +    public void setProducer(Producer producer) {, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorMerge.java, +                        s.requestMore(emitted);, +        public void requestMore(long n) {, +            request(n);, +        }, +, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorSkip.java, +            public void setProducer(final Producer producer) {, +                child.setProducer(new Producer() {, +                });, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorSubscribeOn.java, +                            public void setProducer(final Producer producer) {, +                                subscriber.setProducer(new Producer() {, +                                });, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorTake.java, +            public void setProducer(final Producer producer) {, +                child.setProducer(new Producer() {, +                });, +++ b/rxjava-core/src/main/java/rx/observers/TestSubscriber.java, +    , +    /**, +     * Allow calling the protected {@link #request(long)} from unit tests., +     * @param n, +     */, +    public void requestMore(long n) {, +        request(n);, +    }, +++ b/rxjava-core/src/main/java/rx/Subscriber.java, +    protected final void request(long n) {, +    public void setProducer(Producer producer) {, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorMerge.java, +                        s.requestMore(emitted);, +        public void requestMore(long n) {, +            request(n);]