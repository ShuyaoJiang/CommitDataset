[+++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperatorGroupBy;, +import rx.operators.OperatorTakeUntil;, +import rx.operators.OperatorToIterator;, +        return OperatorTakeUntil.takeUntil(source, other);, +        return create(OperatorGroupBy.groupBy(source, keySelector, elementSelector));, +        return create(OperatorGroupBy.groupBy(source, keySelector));, +        return OperatorToIterator.toIterator(that);, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperatorGroupBy;, +import rx.operators.OperatorTakeUntil;, +import rx.operators.OperatorToIterator;, +        return OperatorTakeUntil.takeUntil(source, other);, +        return create(OperatorGroupBy.groupBy(source, keySelector, elementSelector));, +        return create(OperatorGroupBy.groupBy(source, keySelector));, +        return OperatorToIterator.toIterator(that);, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperatorGroupBy;, +import rx.operators.OperatorTakeUntil;, +import rx.operators.OperatorToIterator;, +        return OperatorTakeUntil.takeUntil(source, other);, +        return create(OperatorGroupBy.groupBy(source, keySelector, elementSelector));, +        return create(OperatorGroupBy.groupBy(source, keySelector));, +        return OperatorToIterator.toIterator(that);, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/operators/OperationObserveOn.java, +import org.mockito.InOrder;, +, +        @Test, +        @SuppressWarnings("unchecked"), +        public void testOrdering() {, +            Observable<String> obs = Observable.from("one", null, "two", "three", "four");, +, +            Observer<String> observer = mock(Observer.class);, +, +            InOrder inOrder = inOrder(observer);, +, +            obs.observeOn(Schedulers.threadPoolForComputation()).subscribe(observer);, +            inOrder.verify(observer, times(1)).onNext("one");, +            inOrder.verify(observer, times(1)).onNext(null);, +            inOrder.verify(observer, times(1)).onNext("two");, +            inOrder.verify(observer, times(1)).onNext("three");, +            inOrder.verify(observer, times(1)).onNext("four");, +            inOrder.verify(observer, times(1)).onCompleted();, +            inOrder.verifyNoMoreInteractions();, +        }, +, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperatorGroupBy;, +import rx.operators.OperatorTakeUntil;, +import rx.operators.OperatorToIterator;, +        return OperatorTakeUntil.takeUntil(source, other);, +        return create(OperatorGroupBy.groupBy(source, keySelector, elementSelector));, +        return create(OperatorGroupBy.groupBy(source, keySelector));, +        return OperatorToIterator.toIterator(that);, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/operators/OperationObserveOn.java, +import org.mockito.InOrder;, +, +        @Test, +        @SuppressWarnings("unchecked"), +        public void testOrdering() {, +            Observable<String> obs = Observable.from("one", null, "two", "three", "four");, +, +            Observer<String> observer = mock(Observer.class);, +, +            InOrder inOrder = inOrder(observer);, +, +            obs.observeOn(Schedulers.threadPoolForComputation()).subscribe(observer);, +            inOrder.verify(observer, times(1)).onNext("one");, +            inOrder.verify(observer, times(1)).onNext(null);, +            inOrder.verify(observer, times(1)).onNext("two");, +            inOrder.verify(observer, times(1)).onNext("three");, +            inOrder.verify(observer, times(1)).onNext("four");, +            inOrder.verify(observer, times(1)).onCompleted();, +            inOrder.verifyNoMoreInteractions();, +        }, +, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperatorGroupBy;, +import rx.operators.OperatorTakeUntil;, +import rx.operators.OperatorToIterator;, +        return OperatorTakeUntil.takeUntil(source, other);, +        return create(OperatorGroupBy.groupBy(source, keySelector, elementSelector));, +        return create(OperatorGroupBy.groupBy(source, keySelector));, +        return OperatorToIterator.toIterator(that);, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/operators/OperationObserveOn.java, +import org.mockito.InOrder;, +, +        @Test, +        @SuppressWarnings("unchecked"), +        public void testOrdering() {, +            Observable<String> obs = Observable.from("one", null, "two", "three", "four");, +, +            Observer<String> observer = mock(Observer.class);, +, +            InOrder inOrder = inOrder(observer);]