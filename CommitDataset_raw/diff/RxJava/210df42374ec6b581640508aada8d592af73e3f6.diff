[+++ b/rxjava-core/src/main/java/rx/subjects/SubjectSubscriptionManager.java, +     * @param onUnsubscribe, +     *            called after the child subscription is removed from the state, +                        // add to parent if the Subject itself is unsubscribed, +                        actualOperator.add(Subscriptions.create(new Action0() {, +                                    newState = current.removeObserver(observer);, +                        if (actualOperator.isUnsubscribed()) {, +                            // we've been unsubscribed while working so return and do nothing, +                        newState = current.addObserver(observer);, +        private State(boolean isTerminated, CountDownLatch terminationLatch, SubjectObserver[] observers) {, +            return new State<T>(true, new CountDownLatch(1), observers);, +        public State<T> addObserver(SubjectObserver<? super T> observer) {, +            return createNewWith(newobservers);, +        private State<T> createNewWith(SubjectObserver[] newobservers) {, +            return new State<T>(terminated, terminationLatch, newobservers);, +        public State<T> removeObserver(SubjectObserver<? super T> o) {, +, +            for (int i = 0; i < this.observers.length; i++) {, +                SubjectObserver s0 = this.observers[i];, +                if (!s0.equals(o)) {, +                    newobservers[copied] = s0;, +                return createNewWith(EMPTY_O);, +                return createNewWith(newobservers2);, +            return createNewWith(newobservers);]