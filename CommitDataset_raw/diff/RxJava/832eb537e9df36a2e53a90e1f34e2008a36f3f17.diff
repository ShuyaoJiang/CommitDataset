[+++ b/gradle/buildscript.gradle, +    classpath 'org.ajoberstar:gradle-git:0.5.0', +++ b/gradle/buildscript.gradle, +    classpath 'org.ajoberstar:gradle-git:0.5.0', +++ b/gradle/convention.gradle, +apply plugin: 'github-pages' // Used to create publishGhPages task, +, +def docTasks = [:], +[Javadoc,ScalaDoc,Groovydoc].each{ Class docClass ->, +    def allSources = allprojects.tasks*.withType(docClass).flatten()*.source , +    if (allSources) {, +        def shortName = docClass.simpleName.toLowerCase(), +        def docTask = task "aggregate${shortName.capitalize()}"(type: docClass, description: "Aggregate subproject ${shortName}s") {, +            source = allSources, +            doFirst {, +                def classpaths = allprojects.findAll { it.plugins.hasPlugin(JavaPlugin) }.collect { it.sourceSets.main.compileClasspath }, +                classpath = files(classpaths), +            }, +        }, +        docTasks[shortName] = docTask, +        processGhPages.dependsOn(docTask), +    }, +}, +, +githubPages {, +    repoUri = "git@github.com:quidryan/${rootProject.githubProjectName}.git", +    pages {, +        docTasks.each { shortName, docTask ->, +            from(docTask.outputs.files) {, +                into "docs/${shortName}", +            }, +        }, +    }]