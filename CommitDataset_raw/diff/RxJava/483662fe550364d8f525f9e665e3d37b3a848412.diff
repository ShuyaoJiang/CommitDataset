[+++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperatorToMap;, +import rx.operators.OperationToMultimap;, +        return lift(new OperatorToMap<T, K, T>(keySelector, Functions.<T>identity()));, +        return lift(new OperatorToMap<T, K, V>(keySelector, valueSelector));, +        return lift(new OperatorToMap<T, K, V>(keySelector, valueSelector, mapFactory));, +        return create(OperationToMultimap.toMultimap(this, keySelector));, +        return create(OperationToMultimap.toMultimap(this, keySelector, valueSelector));, +        return create(OperationToMultimap.toMultimap(this, keySelector, valueSelector, mapFactory));, +        return create(OperationToMultimap.toMultimap(this, keySelector, valueSelector, mapFactory, collectionFactory));, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperatorToMap;, +import rx.operators.OperationToMultimap;, +        return lift(new OperatorToMap<T, K, T>(keySelector, Functions.<T>identity()));, +        return lift(new OperatorToMap<T, K, V>(keySelector, valueSelector));, +        return lift(new OperatorToMap<T, K, V>(keySelector, valueSelector, mapFactory));, +        return create(OperationToMultimap.toMultimap(this, keySelector));, +        return create(OperationToMultimap.toMultimap(this, keySelector, valueSelector));, +        return create(OperationToMultimap.toMultimap(this, keySelector, valueSelector, mapFactory));, +        return create(OperationToMultimap.toMultimap(this, keySelector, valueSelector, mapFactory, collectionFactory));, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperatorToMap;, +import rx.operators.OperationToMultimap;, +        return lift(new OperatorToMap<T, K, T>(keySelector, Functions.<T>identity()));, +        return lift(new OperatorToMap<T, K, V>(keySelector, valueSelector));, +        return lift(new OperatorToMap<T, K, V>(keySelector, valueSelector, mapFactory));, +        return create(OperationToMultimap.toMultimap(this, keySelector));, +        return create(OperationToMultimap.toMultimap(this, keySelector, valueSelector));, +        return create(OperationToMultimap.toMultimap(this, keySelector, valueSelector, mapFactory));, +        return create(OperationToMultimap.toMultimap(this, keySelector, valueSelector, mapFactory, collectionFactory));, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/operators/OperationToMultimap.java, +/**, + * Copyright 2014 Netflix, Inc., + * , + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + * , + * http://www.apache.org/licenses/LICENSE-2.0, + * , + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package rx.operators;, +, +import java.util.ArrayList;, +import java.util.Collection;, +import java.util.HashMap;, +import java.util.Map;, +, +import rx.Observable;, +import rx.Observable.OnSubscribeFunc;, +import rx.Observer;, +import rx.Subscriber;, +import rx.Subscription;, +import rx.functions.Func0;, +import rx.functions.Func1;, +import rx.functions.Functions;, +import rx.subscriptions.Subscriptions;, +, +/**, + * Maps the elements of the source observable into a multimap, + * (Map&lt;K, Collection&lt;V>>) where each, + * key entry has a collection of the source's values., + * , + * @see <a href='https://github.com/Netflix/RxJava/issues/97'>Issue #97</a>, + */, +public class OperationToMultimap {, +    /**, +     * ToMultimap with key selector, identitiy value selector,, +     * default HashMap factory and default ArrayList collection factory., +     */, +    public static <T, K> OnSubscribeFunc<Map<K, Collection<T>>> toMultimap(, +            Observable<T> source,, +            Func1<? super T, ? extends K> keySelector, +            ) {, +        return new ToMultimap<T, K, T>(, +                source, keySelector, Functions.<T> identity(),, +                new DefaultToMultimapFactory<K, T>(),, +                new DefaultMultimapCollectionFactory<K, T>());, +    }, +, +    /**, +     * ToMultimap with key selector, custom value selector,, +     * default HashMap factory and default ArrayList collection factory., +     */, +    public static <T, K, V> OnSubscribeFunc<Map<K, Collection<V>>> toMultimap(, +            Observable<T> source,, +            Func1<? super T, ? extends K> keySelector,, +            Func1<? super T, ? extends V> valueSelector, +            ) {, +        return new ToMultimap<T, K, V>(, +                source, keySelector, valueSelector,, +                new DefaultToMultimapFactory<K, V>(),]