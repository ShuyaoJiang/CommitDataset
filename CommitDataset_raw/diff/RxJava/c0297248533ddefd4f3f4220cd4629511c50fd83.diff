[+++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperationFinally;, +     * Emits the same objects as the given Observable, calling the given action, +     * when it calls <code>onComplete</code> or <code>onError</code>., +     * @param source an observable, +     * @param action an action to be called when the source completes or errors., +     * @return an Observable that emits the same objects, then calls the action., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh212133(v=vs.103).aspx">MSDN: Observable.Finally Method</a>, +     */, +    public static <T> Observable<T> finallyDo(Observable source, Action0 action) {, +        return create(OperationFinally.finallyDo(source, action));, +    }, +, +    /**, +     * Registers an action to be called when this observable calls, +     * <code>onComplete</code> or <code>onError</code>., +     * @param action an action to be called when this observable completes or errors., +     * @return an Observable that emits the same objects as this observable, then calls the action., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh212133(v=vs.103).aspx">MSDN: Observable.Finally Method</a>, +     */, +    public Observable<T> finallyDo(Action0 action) {, +        return create(OperationFinally.finallyDo(this, action));, +    }, +, +    /**, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperationFinally;, +     * Emits the same objects as the given Observable, calling the given action, +     * when it calls <code>onComplete</code> or <code>onError</code>., +     * @param source an observable, +     * @param action an action to be called when the source completes or errors., +     * @return an Observable that emits the same objects, then calls the action., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh212133(v=vs.103).aspx">MSDN: Observable.Finally Method</a>, +     */, +    public static <T> Observable<T> finallyDo(Observable source, Action0 action) {, +        return create(OperationFinally.finallyDo(source, action));, +    }, +, +    /**, +     * Registers an action to be called when this observable calls, +     * <code>onComplete</code> or <code>onError</code>., +     * @param action an action to be called when this observable completes or errors., +     * @return an Observable that emits the same objects as this observable, then calls the action., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh212133(v=vs.103).aspx">MSDN: Observable.Finally Method</a>, +     */, +    public Observable<T> finallyDo(Action0 action) {, +        return create(OperationFinally.finallyDo(this, action));, +    }, +, +    /**, +++ b/rxjava-core/src/main/java/rx/operators/OperationFinally.java, +/**, + * Copyright 2013 Netflix, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package rx.operators;, +, +import static org.junit.Assert.*;, +import static org.mockito.Mockito.*;, +, +import org.junit.Before;, +import org.junit.Test;, +, +import rx.Observable;, +import rx.Observer;, +import rx.Subscription;, +import rx.util.AtomicObservableSubscription;, +import rx.util.functions.Action0;, +import rx.util.functions.Func1;, +, +public final class OperationFinally {, +, +    /**, +     * Call a given action when a sequence completes (with or without an, +     * exception).  The returned observable is exactly as threadsafe as the, +     * source observable., +     * <p/>, +     * Note that "finally" is a Java reserved word and cannot be an identifier,, +     * so we use "finallyDo"., +     *, +     * @param sequence An observable sequence of elements, +     * @param action An action to be taken when the sequence is complete or throws an exception, +     * @return An observable sequence with the same elements as the input., +     *         After the last element is consumed (and {@link Observer#onCompleted} has been called),, +     *         or after an exception is thrown (and {@link Observer#onError} has been called),, +     *         the given action will be called., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh212133(v=vs.103).aspx">MSDN Observable.Finally method</a>, +     */, +    public static <T> Func1<Observer<T>, Subscription> finallyDo(final Observable<T> sequence, final Action0 action) {]