[+++ b/rxjava-core/src/main/java/rx/Observable.java, +     * @param selector the selector function which can use the multicasted , +     *                 created subject, +     *         produced by multicasting the source sequence within a selector, +     *         function, +     * @see <a href="https://github.com/Netflix/RxJava/wiki/Connectable-Observable-Operators#observablepublish-and-observablemulticast">RxJava: Observable.publish() and Observable.multicast()</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229708.aspx">MSDN: Observable.Multicast</a>, +     * Return an Observable which emits a 0L after the {@code initialDelay} and, +     * ever increasing numbers after each {@code period}., +     * <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/timer.p.png">, +     * @param initialDelay the initial delay time to wait before emitting the, +     *                     first value of 0L, +     * @param unit the time unit for both <code>initialDelay</code> and, +     *             <code>period</code>, +     * @return an Observable which emits a 0L after the {@code initialDelay} and, +     *         ever increasing numbers after each {@code period}, +     * @see <a href="https://github.com/Netflix/RxJava/wiki/Creating-Observables#timer">RxJava Wiki: timer()</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229435.aspx">MSDN: Observable.Timer</a>, +     * Return an Observable which emits a 0L after the {@code initialDelay} and, +     * ever increasing numbers after each {@code period} while running on the, +     * given {@code scheduler}., +     * <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/timer.ps.png">, +     * @param initialDelay the initial delay time to wait before emitting the, +     *                     first value of 0L, +     * @param unit the time unit for both <code>initialDelay</code> and, +     *             <code>period</code>, +     * @param scheduler the scheduler on which the waiting happens and value, +     *                  emissions run, +     * @return an Observable that emits a 0L after the {@code initialDelay} and, +     *         ever increasing numbers after each {@code period} while running, +     *         on the given {@code scheduler}, +     * @see <a href="https://github.com/Netflix/RxJava/wiki/Creating-Observables#timer">RxJava Wiki: timer()</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229652.aspx">MSDN: Observable.Timer</a>, +     * <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/replay.s.png">, +     * @param scheduler the scheduler on which the Observers will observe the, +     *                  emitted items, +     *         to the source Observable that will replay all of its items and, +     *         notifications to any future {@link Observer} on the given, +     *         scheduler, +     * @see <a href="https://github.com/Netflix/RxJava/wiki/Connectable-Observable-Operators#observablereplay">RxJava Wiki: replay()</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh211699.aspx">MSDN: Observable.Replay</a>, +     * Returns a connectable observable sequence that shares a single, +     * subscription to the source Observable that replays at most, +     * {@code bufferSize} items emitted by that Observable., +     * <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/replay.n.png">, +     * @return a connectable observable sequence that shares a single , +     *         subscription to the source Observable and replays at most, +     *         {@code bufferSize} items emitted by that Observable, +     * @see <a href="https://github.com/Netflix/RxJava/wiki/Connectable-Observable-Operators#observablereplay">RxJava Wiki: replay()</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh211976.aspx">MSDN: Observable.Replay</a>, +     * subscription to the source Observable and replays at most, +     * {@code bufferSize} items emitted by that Observable., +     * <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/replay.ns.png">, +     * @param scheduler the scheduler on which the Observers will observe the, +     *                  emitted items, +     *         subscription to the source Observable and replays at most, +     *         {@code bufferSize} items emitted by that Observable, +     * @see <a href="https://github.com/Netflix/RxJava/wiki/Connectable-Observable-Operators#observablereplay">RxJava Wiki: replay()</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229814.aspx">MSDN: Observable.Replay</a>, +     * subscription to the source Observable and replays all items emitted by, +     * that Observable within a time window., +     * <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/replay.t.png">, +     *         subscription to the source Observable and that replays all items, +     *         emitted by that Observable during the window defined by, +     *         {@code time} and {@code unit}, +     * @see <a href="https://github.com/Netflix/RxJava/wiki/Connectable-Observable-Operators#observablereplay">RxJava Wiki: replay()</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229232.aspx">MSDN: Observable.Replay</a>, +     * subscription to the source Observable and replays all items emitted by, +     * that Observable within a time window., +     * <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/replay.ts.png">, +     * @param scheduler the scheduler that is used as a time source for the, +     *                  window, +     *         subscription to the source Observable and replays all items, +     *         emitted by that Observable within the window defined by, +     *         {@code time} and {@code unit}, +     * @see <a href="https://github.com/Netflix/RxJava/wiki/Connectable-Observable-Operators#observablereplay">RxJava Wiki: replay()</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh211811.aspx">MSDN: Observable.Replay</a>, +     * subscription to the underlying sequence replaying {@code bufferSize}, +     * notifications within window., +     * <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/replay.nt.png">, +     * @see <a href="https://github.com/Netflix/RxJava/wiki/Connectable-Observable-Operators#observablereplay">RxJava Wiki: replay()</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229874.aspx">MSDN: Observable.Replay</a>, +     * subscription to the underlying sequence and that replays a maximum of, +     * {@code bufferSize} items that are emitted within the window defined by, +     * {@code time} and {@code unit}., +     * <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/replay.nts.png">, +     * @param scheduler the scheduler that is used as a time source for the, +     *                  window, +     *         subscription to the underlying sequence that replays a maximum of, +     *         {@code bufferSize} items that are emitted within the window, +     *         defined by {@code time} and {@code unit}]