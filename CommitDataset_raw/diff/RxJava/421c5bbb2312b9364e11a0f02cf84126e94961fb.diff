[+++ b/src/main/java/io/reactivex/Flowable.java, +++ b/src/main/java/io/reactivex/Flowable.java, +++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +import io.reactivex.internal.fuseable.*;, +    protected final SimplePlainQueue<U> queue;, +    public QueueDrainObserver(Observer<? super V> actual, SimplePlainQueue<U> queue) {, +        final SimplePlainQueue<U> q = queue;, +        final SimplePlainQueue<U> q = queue;, +++ b/src/main/java/io/reactivex/Flowable.java, +++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +import io.reactivex.internal.fuseable.*;, +    protected final SimplePlainQueue<U> queue;, +    public QueueDrainObserver(Observer<? super V> actual, SimplePlainQueue<U> queue) {, +        final SimplePlainQueue<U> q = queue;, +        final SimplePlainQueue<U> q = queue;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferBoundary.java, +import io.reactivex.internal.fuseable.SimplePlainQueue;, +            SimplePlainQueue<U> q = queue;, +++ b/src/main/java/io/reactivex/Flowable.java, +++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +import io.reactivex.internal.fuseable.*;, +    protected final SimplePlainQueue<U> queue;, +    public QueueDrainObserver(Observer<? super V> actual, SimplePlainQueue<U> queue) {, +        final SimplePlainQueue<U> q = queue;, +        final SimplePlainQueue<U> q = queue;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferBoundary.java, +import io.reactivex.internal.fuseable.SimplePlainQueue;, +            SimplePlainQueue<U> q = queue;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMapPublisher.java, +import io.reactivex.Flowable;, +import io.reactivex.internal.util.ErrorMode;, +        source.subscribe(FlowableConcatMap.subscribe(s, mapper, prefetch, errorMode));, +++ b/src/main/java/io/reactivex/Flowable.java, +++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +import io.reactivex.internal.fuseable.*;, +    protected final SimplePlainQueue<U> queue;, +    public QueueDrainObserver(Observer<? super V> actual, SimplePlainQueue<U> queue) {, +        final SimplePlainQueue<U> q = queue;, +        final SimplePlainQueue<U> q = queue;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferBoundary.java, +import io.reactivex.internal.fuseable.SimplePlainQueue;, +            SimplePlainQueue<U> q = queue;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMapPublisher.java, +import io.reactivex.Flowable;, +import io.reactivex.internal.util.ErrorMode;, +        source.subscribe(FlowableConcatMap.subscribe(s, mapper, prefetch, errorMode));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableMapPublisher.java, +import io.reactivex.internal.operators.flowable.FlowableMap.MapSubscriber;, +++ b/src/main/java/io/reactivex/Flowable.java, +++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +import io.reactivex.internal.fuseable.*;, +    protected final SimplePlainQueue<U> queue;, +    public QueueDrainObserver(Observer<? super V> actual, SimplePlainQueue<U> queue) {, +        final SimplePlainQueue<U> q = queue;, +        final SimplePlainQueue<U> q = queue;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferBoundary.java, +import io.reactivex.internal.fuseable.SimplePlainQueue;, +            SimplePlainQueue<U> q = queue;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMapPublisher.java, +import io.reactivex.Flowable;, +import io.reactivex.internal.util.ErrorMode;, +        source.subscribe(FlowableConcatMap.subscribe(s, mapper, prefetch, errorMode));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableMapPublisher.java, +import io.reactivex.internal.operators.flowable.FlowableMap.MapSubscriber;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableReduceSeedSingle.java, +++ b/src/main/java/io/reactivex/Flowable.java, +++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +import io.reactivex.internal.fuseable.*;, +    protected final SimplePlainQueue<U> queue;, +    public QueueDrainObserver(Observer<? super V> actual, SimplePlainQueue<U> queue) {, +        final SimplePlainQueue<U> q = queue;, +        final SimplePlainQueue<U> q = queue;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferBoundary.java, +import io.reactivex.internal.fuseable.SimplePlainQueue;, +            SimplePlainQueue<U> q = queue;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMapPublisher.java, +import io.reactivex.Flowable;, +import io.reactivex.internal.util.ErrorMode;, +        source.subscribe(FlowableConcatMap.subscribe(s, mapper, prefetch, errorMode));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableMapPublisher.java, +import io.reactivex.internal.operators.flowable.FlowableMap.MapSubscriber;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableReduceSeedSingle.java, +++ /dev/null, +++ b/src/main/java/io/reactivex/Flowable.java, +++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +import io.reactivex.internal.fuseable.*;, +    protected final SimplePlainQueue<U> queue;, +    public QueueDrainObserver(Observer<? super V> actual, SimplePlainQueue<U> queue) {, +        final SimplePlainQueue<U> q = queue;, +        final SimplePlainQueue<U> q = queue;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableBufferBoundary.java, +import io.reactivex.internal.fuseable.SimplePlainQueue;, +            SimplePlainQueue<U> q = queue;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMapPublisher.java, +import io.reactivex.Flowable;, +import io.reactivex.internal.util.ErrorMode;, +        source.subscribe(FlowableConcatMap.subscribe(s, mapper, prefetch, errorMode));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableMapPublisher.java, +import io.reactivex.internal.operators.flowable.FlowableMap.MapSubscriber;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableReduceSeedSingle.java]