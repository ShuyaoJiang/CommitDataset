[+++ b/rxjava-core/src/main/java/rx/Observable.java, +     *            an Iterable of Observables, +    public static <T> Observable<T> merge(Iterable<? extends Observable<? extends T>> source) {, +     * @param t1, +     *            an Observable to be merged, +     * @param t2, +     *            an Observable to be merged, +    @SuppressWarnings("unchecked"), +    // suppress because the types are checked by the method signature before using a vararg, +    public static <T> Observable<T> merge(Observable<? extends T> t1, Observable<? extends T> t2) {, +        return create(OperationMerge.merge(t1, t2));, +    }, +, +    /**, +     * Flattens a series of Observables into one Observable, without any transformation., +     * <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/merge.png">, +     * <p>, +     * You can combine items emitted by multiple Observables so that they act like a single, +     * Observable, by using the {@code merge} method., +     * , +     * @param t1, +     *            an Observable to be merged, +     * @param t2, +     *            an Observable to be merged, +     * @param t3, +     *            an Observable to be merged, +     * @return an Observable that emits items that are the result of flattening the items emitted, +     *         by the {@code source} Observables, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229099(v=vs.103).aspx">MSDN: Observable.Merge Method</a>, +     */, +    @SuppressWarnings("unchecked"), +    // suppress because the types are checked by the method signature before using a vararg, +    public static <T> Observable<T> merge(Observable<? extends T> t1, Observable<? extends T> t2, Observable<? extends T> t3) {, +        return create(OperationMerge.merge(t1, t2, t3));, +    }, +    , +    /**, +     * Flattens a series of Observables into one Observable, without any transformation., +     * <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/merge.png">, +     * <p>, +     * You can combine items emitted by multiple Observables so that they act like a single, +     * Observable, by using the {@code merge} method., +     * , +     * @param t1, +     *            an Observable to be merged, +     * @param t2, +     *            an Observable to be merged, +     * @param t3, +     *            an Observable to be merged, +     * @param t4, +     *            an Observable to be merged, +     * @return an Observable that emits items that are the result of flattening the items emitted, +     *         by the {@code source} Observables, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229099(v=vs.103).aspx">MSDN: Observable.Merge Method</a>, +     */, +    @SuppressWarnings("unchecked"), +    // suppress because the types are checked by the method signature before using a vararg, +    public static <T> Observable<T> merge(Observable<? extends T> t1, Observable<? extends T> t2, Observable<? extends T> t3, Observable<? extends T> t4) {, +        return create(OperationMerge.merge(t1, t2, t3, t4));, +    }, +    , +    /**, +     * Flattens a series of Observables into one Observable, without any transformation., +     * <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/merge.png">, +     * <p>, +     * You can combine items emitted by multiple Observables so that they act like a single, +     * Observable, by using the {@code merge} method., +     * , +     * @param t1, +     *            an Observable to be merged, +     * @param t2, +     *            an Observable to be merged, +     * @param t3, +     *            an Observable to be merged, +     * @param t4, +     *            an Observable to be merged, +     * @param t5, +     *            an Observable to be merged, +     * @return an Observable that emits items that are the result of flattening the items emitted, +     *         by the {@code source} Observables, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229099(v=vs.103).aspx">MSDN: Observable.Merge Method</a>, +     */, +    @SuppressWarnings("unchecked"), +    // suppress because the types are checked by the method signature before using a vararg, +    public static <T> Observable<T> merge(Observable<? extends T> t1, Observable<? extends T> t2, Observable<? extends T> t3, Observable<? extends T> t4, Observable<? extends T> t5) {, +        return create(OperationMerge.merge(t1, t2, t3, t4, t5));, +    }, +    , +    /**, +     * Flattens a series of Observables into one Observable, without any transformation., +     * <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/merge.png">, +     * <p>, +     * You can combine items emitted by multiple Observables so that they act like a single, +     * Observable, by using the {@code merge} method., +     * , +     * @param t1]