[+++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +  @Test def doOnCompletedExample(): Unit = {, +    val o = List("red", "green", "blue").toObservable.doOnCompleted { println("onCompleted") }, +    o.subscribe(v => println(v), e => e.printStackTrace), +    // red, +    // green, +    // blue, +    // onCompleted, +  }, +, +    val o = List("red", "green", "blue").toObservable.doOnTerminate { println("terminate") }, +    // blue, +    val o = List("red", "green", "blue").toObservable.finallyDo { println("finally") }, +    // blue, +++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +  @Test def doOnCompletedExample(): Unit = {, +    val o = List("red", "green", "blue").toObservable.doOnCompleted { println("onCompleted") }, +    o.subscribe(v => println(v), e => e.printStackTrace), +    // red, +    // green, +    // blue, +    // onCompleted, +  }, +, +    val o = List("red", "green", "blue").toObservable.doOnTerminate { println("terminate") }, +    // blue, +    val o = List("red", "green", "blue").toObservable.finallyDo { println("finally") }, +    // blue, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +  def finallyDo(action: => Unit): Observable[T] = {, +    toScalaObservable[T](asJavaObservable.finallyDo(() => action)), +  def doOnCompleted(onCompleted: => Unit): Observable[T] = {, +    toScalaObservable[T](asJavaObservable.doOnCompleted(() => onCompleted)), +  def doOnTerminate(onTerminate: => Unit): Observable[T] = {, +    toScalaObservable[T](asJavaObservable.doOnTerminate(() => onTerminate))]