[+++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.joins.Pattern2;, +import rx.joins.Plan0;, +import rx.operators.OperationJoinPatterns;, +    /**, +     * Creates a pattern that matches when both observable sequences have an available element., +     * @param right Observable sequence to match with the left sequence., +     * @return Pattern object that matches when both observable sequences have an available element., +     * @see <a href='http://msdn.microsoft.com/en-us/library/hh229153.aspx'>MSDN: Observable.And</a>, +     * @throws NullPointerException if right is null, +     */, +    public <T2> Pattern2<T, T2> and(Observable<T2> right) {, +        return OperationJoinPatterns.and(this, right);, +    }, +    /**, +     * Matches when the observable sequence has an available element and projects the element by invoking the selector function., +     * @param selector Selector that will be invoked for elements in the source sequence., +     * @return Plan that produces the projected results, to be fed (with other plans) to the When operator., +     * @see <a href='http://msdn.microsoft.com/en-us/library/hh211662.aspx'>MSDN: Observable.Then</a>, +     * @throws NullPointerException if selector is null, +     */, +    public <R> Plan0<R> then(Func1<T, R> selector) {, +        return OperationJoinPatterns.then(this, selector);, +    }, +    /**, +     * Joins together the results from several patterns., +     * @param plans A series of plans created by use of the Then operator on patterns., +     * @return An observable sequence with the results from matching several patterns., +     * @see <a href='http://msdn.microsoft.com/en-us/library/hh229889.aspx'>MSDN: Observable.When</a>, +     * @throws NullPointerException if plans is null, +     */, +    public static <R> Observable<R> when(Plan0<R>... plans) {, +        return create(OperationJoinPatterns.when(plans));, +    }, +    /**, +     * Joins together the results from several patterns., +     * @param plans A series of plans created by use of the Then operator on patterns., +     * @return An observable sequence with the results from matching several patterns., +     * @see <a href='http://msdn.microsoft.com/en-us/library/hh229558.aspx'>MSDN: Observable.When</a>, +     * @throws NullPointerException if plans is null, +     */, +    public static <R> Observable<R> when(Iterable<? extends Plan0<R>> plans) {, +        if (plans == null) {, +            throw new NullPointerException("plans");, +        }, +        return create(OperationJoinPatterns.when(plans));, +    }, +    /**, +     * Joins the results from a pattern., +     * @param p1 the plan to join, +     * @return An observable sequence with the results from matching a pattern, +     * @see <a href='http://msdn.microsoft.com/en-us/library/hh229889.aspx'>MSDN: Observable.When</a>, +     */, +    @SuppressWarnings("unchecked"), +    public static <R> Observable<R> when(Plan0<R> p1) {, +        return create(OperationJoinPatterns.when(p1));, +    }, +    /**, +     * Joins together the results from several patterns., +     * @param p1 a plan, +     * @param p2 a plan, +     * @return An observable sequence with the results from matching several patterns, +     * @see <a href='http://msdn.microsoft.com/en-us/library/hh229889.aspx'>MSDN: Observable.When</a>, +     */, +    @SuppressWarnings("unchecked"), +    public static <R> Observable<R> when(Plan0<R> p1, Plan0<R> p2) {, +        return create(OperationJoinPatterns.when(p1, p2));, +    }, +    /**, +     * Joins together the results from several patterns., +     * @param p1 a plan, +     * @param p2 a plan, +     * @param p3 a plan, +     * @return An observable sequence with the results from matching several patterns, +     * @see <a href='http://msdn.microsoft.com/en-us/library/hh229889.aspx'>MSDN: Observable.When</a>, +     */, +    @SuppressWarnings("unchecked"), +    public static <R> Observable<R> when(Plan0<R> p1, Plan0<R> p2, Plan0<R> p3) {, +        return create(OperationJoinPatterns.when(p1, p2, p3));, +    }, +    /**, +     * Joins together the results from several patterns., +     * @param p1 a plan, +     * @param p2 a plan, +     * @param p3 a plan, +     * @param p4 a plan, +     * @return An observable sequence with the results from matching several patterns, +     * @see <a href='http://msdn.microsoft.com/en-us/library/hh229889.aspx'>MSDN: Observable.When</a>, +     */, +    @SuppressWarnings("unchecked"), +    public static <R> Observable<R> when(Plan0<R> p1, Plan0<R> p2, Plan0<R> p3, Plan0<R> p4) {, +        return create(OperationJoinPatterns.when(p1, p2, p3, p4));, +    }, +    /**, +     * Joins together the results from several patterns., +     * @param p1 a plan, +     * @param p2 a plan, +     * @param p3 a plan, +     * @param p4 a plan, +     * @param p5 a plan]