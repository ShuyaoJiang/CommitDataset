[+++ b/rxjava-core/src/main/java/rx/operators/OperationRefCount.java, +import org.junit.runner.RunWith;, +import org.junit.runners.JUnit4;, +import rx.util.functions.Action0;, +        private final Object gate = new Object();, +        private int count = 0;, +        private Subscription connection = null;, +            final Subscription subscription = innerConnectableObservable.subscribe(observer);, +            synchronized (gate) {, +                if (count++ == 0) {, +                    connection = innerConnectableObservable.connect();, +                }, +            }, +            return Subscriptions.create(new Action0() {, +                @Override, +                public void call() {, +                    synchronized (gate) {, +                        if (--count == 0) {, +                            connection.unsubscribe();, +                            connection = null;, +                        }, +                    }, +                    subscription.unsubscribe();, +                }, +            });, +    @RunWith(JUnit4.class), +            @SuppressWarnings("unchecked"), +            @SuppressWarnings("unchecked"), +            @SuppressWarnings("unchecked"), +            ConnectableObservable<Integer> connectable = mock(ConnectableObservable.class);, +            Observable<Integer> refCounted = Observable.create(refCount(connectable));, +            @SuppressWarnings("unchecked"), +            Observer<Integer> observer = mock(Observer.class);, +            when(connectable.subscribe(observer)).thenReturn(Subscriptions.empty());, +            when(connectable.connect()).thenReturn(Subscriptions.empty());, +            refCounted.subscribe(observer);, +            refCounted.subscribe(observer);, +            verify(connectable, times(2)).subscribe(observer);, +            verify(connectable, times(1)).connect();, +            @SuppressWarnings("unchecked"), +            ConnectableObservable<Integer> connectable = mock(ConnectableObservable.class);, +            Observable<Integer> refCounted = Observable.create(refCount(connectable));, +            @SuppressWarnings("unchecked"), +            Observer<Integer> observer = mock(Observer.class);, +            Subscription underlying = mock(Subscription.class);, +            when(connectable.subscribe(observer)).thenReturn(underlying);, +            Subscription connection = mock(Subscription.class);, +            when(connectable.connect()).thenReturn(connection);, +            Subscription first = refCounted.subscribe(observer);, +            first.unsubscribe();, +            verify(underlying, times(1)).unsubscribe();, +            verify(connection, times(1)).unsubscribe();, +            @SuppressWarnings("unchecked"), +            ConnectableObservable<Integer> connectable = mock(ConnectableObservable.class);, +            Observable<Integer> refCounted = Observable.create(refCount(connectable));, +            @SuppressWarnings("unchecked"), +            Observer<Integer> observer = mock(Observer.class);, +            Subscription underlying = mock(Subscription.class);, +            when(connectable.subscribe(observer)).thenReturn(underlying);, +            Subscription connection = mock(Subscription.class);, +            when(connectable.connect()).thenReturn(connection);, +            Subscription first = refCounted.subscribe(observer);, +            Subscription second = refCounted.subscribe(observer);, +            first.unsubscribe();, +            second.unsubscribe();, +            verify(underlying, times(2)).unsubscribe();, +            verify(connection, times(1)).unsubscribe();]