[+++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/operators/DebugSubscriber.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/operators/DebugSubscriber.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugHook.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/operators/DebugSubscriber.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugHook.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugNotification.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/operators/DebugSubscriber.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugHook.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugNotification.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/NotificationEvent.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/operators/DebugSubscriber.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugHook.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugNotification.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/NotificationEvent.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-string/src/main/java/rx/observables/StringObservable.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/operators/DebugSubscriber.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugHook.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugNotification.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/NotificationEvent.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-string/src/main/java/rx/observables/StringObservable.java, +import rx.Observable.Operator;, +++ b/rxjava-core/src/main/java/rx/Observable.java, +        this.f = hook.onCreate(f);, +        return new Observable<T>(f);, +     * Invoked when Obserable.subscribe is called. , +        // cover for generics insanity, +     * Operator function for lifting into an Observable., +    public interface Operator<R, T> extends Func1<Subscriber<? super R>, Subscriber<? super T>> {, +        // cover for generics insanity, +    }, +, +, +    /**, +     * @Deprecated , +     */, +    @Deprecated, +    public <R> Observable<R> lift(final Operator<R, T> bind) {, +                subscribe(hook.onLift(bind).call(o));, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/operators/DebugSubscriber.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugHook.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugNotification.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/NotificationEvent.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-string/src/main/java/rx/observables/StringObservable.java, +import rx.Observable.Operator;, +++ b/rxjava-core/src/main/java/rx/Observable.java, +        this.f = hook.onCreate(f);, +        return new Observable<T>(f);, +     * Invoked when Obserable.subscribe is called. , +        // cover for generics insanity, +     * Operator function for lifting into an Observable., +    public interface Operator<R, T> extends Func1<Subscriber<? super R>, Subscriber<? super T>> {, +        // cover for generics insanity, +    }, +, +, +    /**, +     * @Deprecated , +     */, +    @Deprecated, +    public <R> Observable<R> lift(final Operator<R, T> bind) {, +                subscribe(hook.onLift(bind).call(o));, +++ b/rxjava-core/src/main/java/rx/joins/JoinObserver1.java, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/operators/DebugSubscriber.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugHook.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugNotification.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/NotificationEvent.java, +import rx.Observable.Operator;, +++ b/rxjava-contrib/rxjava-string/src/main/java/rx/observables/StringObservable.java, +import rx.Observable.Operator;, +++ b/rxjava-core/src/main/java/rx/Observable.java, +        this.f = hook.onCreate(f);, +        return new Observable<T>(f);, +     * Invoked when Obserable.subscribe is called. , +        // cover for generics insanity]