[+++ b/build.gradle, +    testCompile 'junit:junit:4.12', +    testCompile 'org.mockito:mockito-core:1.10.19', +, +    perfCompile 'org.openjdk.jmh:jmh-core:1.10.5', +    perfCompile 'org.openjdk.jmh:jmh-generator-annprocess:1.10.5', +    // perfCompile 'org.reactivex:rxjava:1.0.14', +    exclude "**/io/reactivex/internal/**", +++ b/build.gradle, +    testCompile 'junit:junit:4.12', +    testCompile 'org.mockito:mockito-core:1.10.19', +, +    perfCompile 'org.openjdk.jmh:jmh-core:1.10.5', +    perfCompile 'org.openjdk.jmh:jmh-generator-annprocess:1.10.5', +    // perfCompile 'org.reactivex:rxjava:1.0.14', +    exclude "**/io/reactivex/internal/**", +++ b/src/main/java/io/reactivex/exceptions/MissingBackpressureException.java, +/**, + * Copyright 2015 Netflix, Inc., + * , + * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in, + * compliance with the License. You may obtain a copy of the License at, + * , + * http://www.apache.org/licenses/LICENSE-2.0, + * , + * Unless required by applicable law or agreed to in writing, software distributed under the License is, + * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See, + * the License for the specific language governing permissions and limitations under the License., + */, +, +package io.reactivex.exceptions;, +, +/**, + * Indicates that an operator attempted to emit a value but the downstream wasn't ready for it., + */, +public class MissingBackpressureException extends RuntimeException {, +    /** */, +    private static final long serialVersionUID = 8517344746016032542L;, +, +    public MissingBackpressureException() {, +        super();, +    }, +    , +    public MissingBackpressureException(String message) {, +        super(message);, +    }, +    , +    public MissingBackpressureException(String message, Throwable cause) {, +        super(message, cause);, +    }, +}, +++ b/build.gradle, +    testCompile 'junit:junit:4.12', +    testCompile 'org.mockito:mockito-core:1.10.19', +, +    perfCompile 'org.openjdk.jmh:jmh-core:1.10.5', +    perfCompile 'org.openjdk.jmh:jmh-generator-annprocess:1.10.5', +    // perfCompile 'org.reactivex:rxjava:1.0.14', +    exclude "**/io/reactivex/internal/**", +++ b/src/main/java/io/reactivex/exceptions/MissingBackpressureException.java, +/**, + * Copyright 2015 Netflix, Inc., + * , + * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in, + * compliance with the License. You may obtain a copy of the License at, + * , + * http://www.apache.org/licenses/LICENSE-2.0, + * , + * Unless required by applicable law or agreed to in writing, software distributed under the License is, + * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See, + * the License for the specific language governing permissions and limitations under the License., + */, +, +package io.reactivex.exceptions;, +, +/**, + * Indicates that an operator attempted to emit a value but the downstream wasn't ready for it., + */, +public class MissingBackpressureException extends RuntimeException {, +    /** */, +    private static final long serialVersionUID = 8517344746016032542L;, +, +    public MissingBackpressureException() {, +        super();, +    }, +    , +    public MissingBackpressureException(String message) {, +        super(message);, +    }, +    , +    public MissingBackpressureException(String message, Throwable cause) {, +        super(message, cause);, +    }, +}, +++ b/src/main/java/io/reactivex/internal/operators/OperatorDoOnEach.java, +        return new DoOnEachSubscriber<>(t, onNext, onError, onComplete, onAfterTerminate);, +++ b/build.gradle, +    testCompile 'junit:junit:4.12', +    testCompile 'org.mockito:mockito-core:1.10.19', +]