[+++ b/src/main/java/io/reactivex/Scheduler.java, +        w.schedule(new DisposeTask(decoratedRun, w), delay, unit);, +, +    static final class DisposeTask implements Runnable {, +        final Runnable decoratedRun;, +        final Worker w;, +, +        DisposeTask(Runnable decoratedRun, Worker w) {, +            this.decoratedRun = decoratedRun;, +            this.w = w;, +        }, +, +        @Override, +        public void run() {, +            try {, +                decoratedRun.run();, +            } finally {, +                w.dispose();, +            }, +        }, +    }, +++ b/src/main/java/io/reactivex/Scheduler.java, +        w.schedule(new DisposeTask(decoratedRun, w), delay, unit);, +, +    static final class DisposeTask implements Runnable {, +        final Runnable decoratedRun;, +        final Worker w;, +, +        DisposeTask(Runnable decoratedRun, Worker w) {, +            this.decoratedRun = decoratedRun;, +            this.w = w;, +        }, +, +        @Override, +        public void run() {, +            try {, +                decoratedRun.run();, +            } finally {, +                w.dispose();, +            }, +        }, +    }, +++ b/src/main/java/io/reactivex/internal/functions/Functions.java, +        return new Array2Func<T1, T2, R>(f);, +        return new Array3Func<T1, T2, T3, R>(f);, +        return new Array4Func<T1, T2, T3, T4, R>(f);, +        return new Array5Func<T1, T2, T3, T4, T5, R>(f);, +        return new Array6Func<T1, T2, T3, T4, T5, T6, R>(f);, +        return new Array7Func<T1, T2, T3, T4, T5, T6, T7, R>(f);, +        return new Array8Func<T1, T2, T3, T4, T5, T6, T7, T8, R>(f);, +        return new Array9Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, R>(f);, +    static final Function<Object, Object> IDENTITY = new Identity();, +    public static final Runnable EMPTY_RUNNABLE = new EmptyRunnable();, +    public static final Action EMPTY_ACTION = new EmptyAction();, +    static final Consumer<Object> EMPTY_CONSUMER = new EmptyConsumer();, +    public static final Consumer<Throwable> ERROR_CONSUMER = new ErrorConsumer();, +    public static final Consumer<Throwable> ON_ERROR_MISSING = new OnErrorMissingConsumer();, +    public static final LongConsumer EMPTY_LONG_CONSUMER = new EmptyLongConsumer();, +    static final Predicate<Object> ALWAYS_TRUE = new TruePredicate();, +    static final Predicate<Object> ALWAYS_FALSE = new FalsePredicate();, +    static final Callable<Object> NULL_SUPPLIER = new NullCallable();, +    static final Comparator<Object> NATURAL_COMPARATOR = new NaturalObjectComparator();, +        final Comparator<? super T> comparator;, +    public static final Consumer<Subscription> REQUEST_MAX = new MaxRequestSubscription();, +, +    static final class Array2Func<T1, T2, R> implements Function<Object[], R> {, +        final BiFunction<? super T1, ? super T2, ? extends R> f;, +, +        Array2Func(BiFunction<? super T1, ? super T2, ? extends R> f) {, +            this.f = f;, +        }, +, +        @Override, +        public R apply(Object[] a) throws Exception {, +            if (a.length != 2) {, +                throw new IllegalArgumentException("Array of size 2 expected but got " + a.length);, +            }, +            return ((BiFunction<Object, Object, R>) f).apply(a[0], a[1]);, +        }, +    }, +, +    static final class Array3Func<T1, T2, T3, R> implements Function<Object[], R> {, +        final Function3<T1, T2, T3, R> f;, +, +        Array3Func(Function3<T1, T2, T3, R> f) {, +            this.f = f;, +        }, +, +        @SuppressWarnings("unchecked"), +        @Override, +        public R apply(Object[] a) throws Exception {, +            if (a.length != 3) {, +                throw new IllegalArgumentException("Array of size 3 expected but got " + a.length);, +            }, +            return f.apply((T1)a[0], (T2)a[1], (T3)a[2]);, +        }, +    }, +, +    static final class Array4Func<T1, T2, T3, T4, R> implements Function<Object[], R> {, +        final Function4<T1, T2, T3, T4, R> f;]