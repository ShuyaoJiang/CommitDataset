[+++ b/src/main/java/io/reactivex/plugins/RxJavaPlugins.java, +, +        if (error == null) {, +            error = new NullPointerException("onError called with null. Null values are generally not allowed in 2.x operators and sources.");, +        }, +, +, +++ b/src/main/java/io/reactivex/plugins/RxJavaPlugins.java, +, +        if (error == null) {, +            error = new NullPointerException("onError called with null. Null values are generally not allowed in 2.x operators and sources.");, +        }, +, +, +++ b/src/test/java/io/reactivex/plugins/RxJavaPluginsTest.java, +import java.util.concurrent.atomic.AtomicReference;, +    @Test, +    public void onErrorNull() {, +        try {, +            final AtomicReference<Throwable> t = new AtomicReference<Throwable>();, +, +            RxJavaPlugins.setErrorHandler(new Consumer<Throwable>() {, +                @Override, +                public void accept(final Throwable throwable) throws Exception {, +                    t.set(throwable);, +                }, +            });, +, +            RxJavaPlugins.onError(null);, +, +            final Throwable throwable = t.get();, +            assertEquals("onError called with null. Null values are generally not allowed in 2.x operators and sources.", throwable.getMessage());, +            assertTrue(throwable instanceof NullPointerException);, +        } finally {, +            RxJavaPlugins.reset();, +        }, +    }]