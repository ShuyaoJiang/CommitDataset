[+++ b/rxjava-contrib/rxjava-math/build.gradle, +apply plugin: 'osgi', +, +sourceCompatibility = JavaVersion.VERSION_1_6, +targetCompatibility = JavaVersion.VERSION_1_6, +, +dependencies {, +    compile project(':rxjava-core'), +    testCompile project(":rxjava-core").sourceSets.test.output , +    provided 'junit:junit-dep:4.10', +    provided 'org.mockito:mockito-core:1.8.5', +}, +, +javadoc {, +    options {, +        doclet = "org.benjchristensen.doclet.DocletExclude", +        docletpath = [rootProject.file('./gradle/doclet-exclude.jar')], +        stylesheetFile = rootProject.file('./gradle/javadocStyleSheet.css'), +        windowTitle = "RxJava Javadoc ${project.version}", +    }, +    options.addStringOption('top').value = '<h2 class="title" style="padding-top:40px">RxJava</h2>', +}, +, +jar {, +    manifest {, +        name = 'rxjava-math', +        instruction 'Bundle-Vendor', 'Netflix', +        instruction 'Bundle-DocURL', 'https://github.com/Netflix/RxJava', +        instruction 'Import-Package', '!org.junit,!junit.framework,!org.mockito.*,*', +        instruction 'Fragment-Host', 'com.netflix.rxjava.core', +    }, +}, +++ b/rxjava-contrib/rxjava-math/build.gradle, +apply plugin: 'osgi', +, +sourceCompatibility = JavaVersion.VERSION_1_6, +targetCompatibility = JavaVersion.VERSION_1_6, +, +dependencies {, +    compile project(':rxjava-core'), +    testCompile project(":rxjava-core").sourceSets.test.output , +    provided 'junit:junit-dep:4.10', +    provided 'org.mockito:mockito-core:1.8.5', +}, +, +javadoc {, +    options {, +        doclet = "org.benjchristensen.doclet.DocletExclude", +        docletpath = [rootProject.file('./gradle/doclet-exclude.jar')], +        stylesheetFile = rootProject.file('./gradle/javadocStyleSheet.css'), +        windowTitle = "RxJava Javadoc ${project.version}", +    }, +    options.addStringOption('top').value = '<h2 class="title" style="padding-top:40px">RxJava</h2>', +}, +, +jar {, +    manifest {, +        name = 'rxjava-math', +        instruction 'Bundle-Vendor', 'Netflix', +        instruction 'Bundle-DocURL', 'https://github.com/Netflix/RxJava', +        instruction 'Import-Package', '!org.junit,!junit.framework,!org.mockito.*,*', +        instruction 'Fragment-Host', 'com.netflix.rxjava.core', +    }, +}, +++ b/rxjava-contrib/rxjava-math/src/main/java/rx/math/operators/OperationAverage.java, +/**, + * Copyright 2014 Netflix, Inc., + * , + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + * , + * http://www.apache.org/licenses/LICENSE-2.0, + * , + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package rx.math.operators;, +, +import rx.Observable;, +import rx.Observable.OnSubscribeFunc;, +import rx.Observer;, +import rx.Subscription;, +import rx.functions.Func1;, +import rx.functions.Func2;, +, +/**, + * A few operators for implementing the averaging operation., + * , + * @see <a href="http://msdn.microsoft.com/en-us/library/system.reactive.linq.observable.average%28v=vs.103%29.aspx">MSDN: Observable.Average</a>, + */, +public final class OperationAverage {, +    private static final class Tuple2<T> {, +        private final T current;, +        private final Integer count;, +, +        private Tuple2(T v1, Integer v2) {]