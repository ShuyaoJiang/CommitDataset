[+++ b/src/main/java/io/reactivex/internal/operators/OperatorDebounce.java, +    static final class DebounceSubscriber<T, U> extends AtomicLong , +    implements Subscriber<T>, Subscription {, +            Disposable d = debouncer;, +            if (d != CANCELLED) {, +                @SuppressWarnings("unchecked"), +                DebounceInnerSubscriber<T, U> dis = (DebounceInnerSubscriber<T, U>)d;, +                dis.emit();, +            BackpressureHelper.add(this, n);, +                long r = get();, +                        decrementAndGet();, +            volatile int once;, +            @SuppressWarnings("rawtypes"), +            static final AtomicIntegerFieldUpdater<DebounceInnerSubscriber> ONCE =, +                    AtomicIntegerFieldUpdater.newUpdater(DebounceInnerSubscriber.class, "once");, +            , +                emit();, +            }, +            , +            void emit() {, +                if (ONCE.compareAndSet(this, 0, 1)) {, +            }, +                emit();, +++ b/src/main/java/io/reactivex/internal/operators/OperatorDebounce.java, +    static final class DebounceSubscriber<T, U> extends AtomicLong , +    implements Subscriber<T>, Subscription {, +            Disposable d = debouncer;, +            if (d != CANCELLED) {, +                @SuppressWarnings("unchecked"), +                DebounceInnerSubscriber<T, U> dis = (DebounceInnerSubscriber<T, U>)d;, +                dis.emit();, +            BackpressureHelper.add(this, n);, +                long r = get();, +                        decrementAndGet();, +            volatile int once;, +            @SuppressWarnings("rawtypes"), +            static final AtomicIntegerFieldUpdater<DebounceInnerSubscriber> ONCE =, +                    AtomicIntegerFieldUpdater.newUpdater(DebounceInnerSubscriber.class, "once");, +            , +                emit();, +            }, +            , +            void emit() {, +                if (ONCE.compareAndSet(this, 0, 1)) {, +            }, +                emit();, +++ b/src/main/java/io/reactivex/internal/operators/OperatorDebounceTimed.java, +    static final class DebounceTimedSubscriber<T> extends AtomicLong , +            , +            Disposable d = timer;, +            if (d != CANCELLED) {, +                @SuppressWarnings("unchecked"), +                DebounceEmitter<T> de = (DebounceEmitter<T>)d;, +                de.emit();, +                disposeTimer();, +                worker.dispose();, +                actual.onComplete();, +            }, +            BackpressureHelper.add(this, n);, +                long r = get();, +                        decrementAndGet();, +        volatile int once;, +        @SuppressWarnings("rawtypes"), +        static final AtomicIntegerFieldUpdater<DebounceEmitter> ONCE =, +                AtomicIntegerFieldUpdater.newUpdater(DebounceEmitter.class, "once");, +, +        , +            emit();, +        }, +        , +        void emit() {, +            if (ONCE.compareAndSet(this, 0, 1)) {, +        }, +++ b/src/main/java/io/reactivex/internal/operators/OperatorDebounce.java, +    static final class DebounceSubscriber<T, U> extends AtomicLong , +    implements Subscriber<T>, Subscription {, +            Disposable d = debouncer;, +            if (d != CANCELLED) {, +                @SuppressWarnings("unchecked"), +                DebounceInnerSubscriber<T, U> dis = (DebounceInnerSubscriber<T, U>)d;, +                dis.emit();, +            BackpressureHelper.add(this, n);, +                long r = get();, +                        decrementAndGet();, +            volatile int once;, +            @SuppressWarnings("rawtypes"), +            static final AtomicIntegerFieldUpdater<DebounceInnerSubscriber> ONCE =, +                    AtomicIntegerFieldUpdater.newUpdater(DebounceInnerSubscriber.class, "once");, +            , +                emit();, +            }, +            , +            void emit() {, +                if (ONCE.compareAndSet(this, 0, 1)) {, +            }, +                emit();, +++ b/src/main/java/io/reactivex/internal/operators/OperatorDebounceTimed.java, +    static final class DebounceTimedSubscriber<T> extends AtomicLong , +            , +            Disposable d = timer;]