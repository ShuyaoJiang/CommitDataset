[+++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +, +, +  def doOnEach(observer: Observer[T]): Observable[T] = {, +    Observable[T](asJava.doOnEach(observer)), +  }, +  , +  def doOnEach(onNext: T => Unit): Observable[T] = {, +    Observable[T](asJava.doOnEach(onNext)), +  }, +, +  def doOnEach(onNext: T => Unit, onComplete: () => Unit): Observable[T] = {, +    Observable[T](asJava.doOnEach(onNext, onComplete)), +  }, +, +  def doOnEach(onNext: T => Unit, onError: Throwable => Unit): Observable[T] = {, +    Observable[T](asJava.doOnEach(onNext, onError)), +  }, +, +  def doOnEach(onNext: T => Unit, onError: Throwable => Unit, onComplete: () => Unit): Observable[T] = {, +    Observable[T](asJava.doOnEach(onNext, onError, onComplete)), +  }, +, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +, +, +  def doOnEach(observer: Observer[T]): Observable[T] = {, +    Observable[T](asJava.doOnEach(observer)), +  }, +  , +  def doOnEach(onNext: T => Unit): Observable[T] = {, +    Observable[T](asJava.doOnEach(onNext)), +  }, +, +  def doOnEach(onNext: T => Unit, onComplete: () => Unit): Observable[T] = {, +    Observable[T](asJava.doOnEach(onNext, onComplete)), +  }, +, +  def doOnEach(onNext: T => Unit, onError: Throwable => Unit): Observable[T] = {, +    Observable[T](asJava.doOnEach(onNext, onError)), +  }, +, +  def doOnEach(onNext: T => Unit, onError: Throwable => Unit, onComplete: () => Unit): Observable[T] = {, +    Observable[T](asJava.doOnEach(onNext, onError, onComplete)), +  }, +, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperationDoOnEach;, +, +    /**, +     * Invokes an action for each element in the observable sequence., +     *, +     * @param observer, +     *            The action to invoke for each element in the source sequence., +     *, +     * @return, +     *            The source sequence with the side-effecting behavior applied., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229307(v=vs.103).aspx">MSDN: Observable.Do</a>, +     */, +    public Observable<T> doOnEach(Observer<? super T> observer) {, +        return create(OperationDoOnEach.doOnEach(this, observer));, +    }, +, +    /**, +     * Invokes an action for each element in the observable sequence., +     *, +     * @param onNext, +     *            The action to invoke for each element in the source sequence., +     *, +     * @return, +     *            The source sequence with the side-effecting behavior applied., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229804(v=vs.103).aspx">MSDN: Observable.Do</a>, +     */, +    public Observable<T> doOnEach(final Action1<T> onNext) {, +        Observer<T> observer = new Observer<T>() {, +            @Override, +            public void onCompleted() {}, +, +            @Override, +            public void onError(Throwable e) {}, +, +            @Override, +            public void onNext(T args) {, +                onNext.call(args);, +            }, +, +        };, +, +, +        return create(OperationDoOnEach.doOnEach(this, observer));, +    }, +, +    /**, +     * Invokes an action for each element in the observable sequence., +     *, +     * @param onNext, +     *            The action to invoke for each element in the source sequence., +     * @param onCompleted, +     *            The action to invoke when the source sequence is completed., +     *]