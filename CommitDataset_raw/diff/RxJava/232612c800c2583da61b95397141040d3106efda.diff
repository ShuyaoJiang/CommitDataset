[+++ b/rxjava-core/src/main/java/rx/operators/OperationFinally.java, +import org.junit.Before;, +     *         After the last element is consumed (and {@link Observer#onCompleted} has been called),, +     *         or after an exception is thrown (and {@link Observer#onError} has been called),, +     *         the given action will be called., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh212133(v=vs.103).aspx">MSDN Observable.Finally method</a>, +                finalAction.call();, +                finalAction.call();, +        private Action0 aAction0;, +        private Observer<String> aObserver;, +        @Before, +        public void before() {, +            aAction0 = mock(Action0.class);, +            aObserver = mock(Observer.class);, +        private void checkActionCalled(Observable<String> input) {, +            Observable.create(finally0(input, aAction0)).subscribe(aObserver);, +            verify(aAction0, times(1)).call();, +        public void testFinallyCalledOnComplete() {, +            checkActionCalled(Observable.toObservable(new String[] {"1", "2", "3"}));, +        }, +        @Test, +        public void testFinallyCalledOnError() {, +            checkActionCalled(Observable.<String>error(new RuntimeException("expected")));]