[+++ b/rxjava-core/src/main/java/rx/Observable.java, +    public <R> Observable<R> compose(Transformer<? super T, R> transformer) {, +    public static interface Transformer<T, R> extends Func1<Observable<? extends T>, Observable<R>> {, +++ b/rxjava-core/src/main/java/rx/Observable.java, +    public <R> Observable<R> compose(Transformer<? super T, R> transformer) {, +    public static interface Transformer<T, R> extends Func1<Observable<? extends T>, Observable<R>> {, +++ b/rxjava-core/src/test/java/rx/CovarianceTest.java, +        Observable<Movie> movie2 = movie.compose(new Transformer<Movie, Movie>() {, +            public Observable<Movie> call(Observable<? extends Movie> t1) {, +        Observable<HorrorMovie> movie2 = movie.compose(new Transformer<Movie, HorrorMovie>() {, +            public Observable<HorrorMovie> call(Observable<? extends Movie> t1) {]