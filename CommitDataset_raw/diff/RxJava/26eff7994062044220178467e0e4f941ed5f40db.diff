[+++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +    final Flowable<T> source;, +    public BlockingFlowableIterable(Flowable<T> source, int bufferSize) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +    final Flowable<T> source;, +    public BlockingFlowableIterable(Flowable<T> source, int bufferSize) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableMostRecent.java, +    final Flowable<T> source;, +    public BlockingFlowableMostRecent(Flowable<T> source, T initialValue) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +    final Flowable<T> source;, +    public BlockingFlowableIterable(Flowable<T> source, int bufferSize) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableMostRecent.java, +    final Flowable<T> source;, +    public BlockingFlowableMostRecent(Flowable<T> source, T initialValue) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCache.java, +        final Flowable<T> source;, +        CacheState(Flowable<T> source, int capacityHint) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +    final Flowable<T> source;, +    public BlockingFlowableIterable(Flowable<T> source, int bufferSize) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableMostRecent.java, +    final Flowable<T> source;, +    public BlockingFlowableMostRecent(Flowable<T> source, T initialValue) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCache.java, +        final Flowable<T> source;, +        CacheState(Flowable<T> source, int capacityHint) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRefCount.java, +    final ConnectableFlowable<T> source;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +    final Flowable<T> source;, +    public BlockingFlowableIterable(Flowable<T> source, int bufferSize) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableMostRecent.java, +    final Flowable<T> source;, +    public BlockingFlowableMostRecent(Flowable<T> source, T initialValue) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCache.java, +        final Flowable<T> source;, +        CacheState(Flowable<T> source, int capacityHint) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRefCount.java, +    final ConnectableFlowable<T> source;, +++ b/src/test/java/io/reactivex/TestHelper.java, +    public static <T> void checkDisposed(Flowable<T> source) {]