[+++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +    val o : Observable[String] = List("alice", "bob", "carol").toObservable.repeat.take(6), +++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +    val o : Observable[String] = List("alice", "bob", "carol").toObservable.repeat.take(6), +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +  def publish: ConnectableObservable[T] = {, +  def retry: Observable[T] = {, +  def repeat: Observable[T] = {, +++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +    val o : Observable[String] = List("alice", "bob", "carol").toObservable.repeat.take(6), +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +  def publish: ConnectableObservable[T] = {, +  def retry: Observable[T] = {, +  def repeat: Observable[T] = {, +++ b/language-adaptors/rxjava-scala/src/test/scala/rx/lang/scala/CompletenessTest.scala, +      "multicast(Subject[_ >: T, _ <: R])" -> "multicast(Subject[R])",, +      "multicast(Func0[_ <: Subject[_ >: T, _ <: TIntermediate]], Func1[_ >: Observable[TIntermediate], _ <: Observable[TResult]])" -> "multicast(() => Subject[R], Observable[R] => Observable[U])",]