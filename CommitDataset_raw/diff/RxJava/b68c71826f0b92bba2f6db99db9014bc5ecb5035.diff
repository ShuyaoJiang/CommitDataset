[+++ b/language-adaptors/rxjava-scala/build.gradle, +    scalaTools 'org.scala-lang:scala-compiler:2.10+', +    scalaTools 'org.scala-lang:scala-library:2.10+', +    provided 'org.scalatest:scalatest_2.10:1.9.1', +    testCompile 'org.scalatest:scalatest_2.10:1.9.1', +++ b/language-adaptors/rxjava-scala/build.gradle, +    scalaTools 'org.scala-lang:scala-compiler:2.10+', +    scalaTools 'org.scala-lang:scala-library:2.10+', +    provided 'org.scalatest:scalatest_2.10:1.9.1', +    testCompile 'org.scalatest:scalatest_2.10:1.9.1', +++ b/rxjava-examples/build.gradle, +    scalaTools 'org.scala-lang:scala-library:2.10+', +++ b/language-adaptors/rxjava-scala/build.gradle, +    scalaTools 'org.scala-lang:scala-compiler:2.10+', +    scalaTools 'org.scala-lang:scala-library:2.10+', +    provided 'org.scalatest:scalatest_2.10:1.9.1', +    testCompile 'org.scalatest:scalatest_2.10:1.9.1', +++ b/rxjava-examples/build.gradle, +    scalaTools 'org.scala-lang:scala-library:2.10+', +++ b/rxjava-examples/src/main/scala/rx/examples/scala/RxExamples.scala, +/**, + * Copyright 2013 Netflix, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package rx.examples.scala, +, +import rx.Observable, +, +class RxExamples {, +, +  def main(args: Array[String]) {, +    hello("Ben", "George");, +  }, +, +  // --------------------------------------------------, +  // Hello World!, +  // --------------------------------------------------, +, +  def hello(names: String*) {, +    // can't figure out how to convert to a Java iterable, +    Observable.toObservable("Ben", "George"), +      .take(2), +      .subscribe((name: String) => {, +        println("Hello " + name + "!"), +      }), +  }, +, +}, +]