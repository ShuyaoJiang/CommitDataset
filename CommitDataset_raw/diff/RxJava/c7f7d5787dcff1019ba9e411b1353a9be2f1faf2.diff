[+++ b/rxjava-core/src/main/java/rx/Observable.java, +                onNotification.call(new Notification<T>());, +                onNotification.call(new Notification<T>(e));, +                onNotification.call(new Notification<T>(v));, +++ b/rxjava-core/src/main/java/rx/Observable.java, +                onNotification.call(new Notification<T>());, +                onNotification.call(new Notification<T>(e));, +                onNotification.call(new Notification<T>(v));, +++ b/rxjava-core/src/test/java/rx/ZipTests.java, +import static org.junit.Assert.*;, +, +import java.util.Collection;, +import java.util.Collections;, +import rx.functions.FuncN;, +    /**, +     * Occasionally zip may be invoked with 0 observables. This blocks indefinitely instead, +     * of immediately invoking zip with 0 argument., +     */, +    @Test(timeout = 5000), +    public void nonBlockingObservable() {, +, +        final Object invoked = new Object();, +, +        Collection<Observable<Object>> observables = Collections.emptyList();, +, +        Observable<Object> result = Observable.zip(observables, new FuncN<Object>() {, +            @Override, +            public Object call(final Object... args) {, +                assertEquals("No argument should have been passed", 0, args.length);, +                return invoked;, +            }, +        });, +, +        assertSame(invoked, result.toBlockingObservable().last());, +    }, +]