[+++ b/src/main/java/rx/exceptions/OnErrorThrowable.java, +        private static String renderValue(Object value){, +            if (value.getClass().isPrimitive()) {, +++ b/src/main/java/rx/exceptions/OnErrorThrowable.java, +        private static String renderValue(Object value){, +            if (value.getClass().isPrimitive()) {, +++ b/src/main/java/rx/internal/operators/OperatorTakeUntilPredicate.java, +        public void onNext(T args) {, +            child.onNext(args);, +                stop = stopPredicate.call(args);, +                child.onError(e);, +++ b/src/main/java/rx/exceptions/OnErrorThrowable.java, +        private static String renderValue(Object value){, +            if (value.getClass().isPrimitive()) {, +++ b/src/main/java/rx/internal/operators/OperatorTakeUntilPredicate.java, +        public void onNext(T args) {, +            child.onNext(args);, +                stop = stopPredicate.call(args);, +                child.onError(e);, +++ b/src/main/java/rx/internal/operators/OperatorTakeWhile.java, +import rx.exceptions.Exceptions;, +import rx.exceptions.OnErrorThrowable;, +            public void onNext(T t) {, +                    isSelected = predicate.call(t, counter++);, +                    Exceptions.throwIfFatal(e);, +                    subscriber.onError(OnErrorThrowable.addValueAsLastCause(e, t));, +                    subscriber.onNext(t);, +++ b/src/main/java/rx/exceptions/OnErrorThrowable.java, +        private static String renderValue(Object value){, +            if (value.getClass().isPrimitive()) {, +++ b/src/main/java/rx/internal/operators/OperatorTakeUntilPredicate.java, +        public void onNext(T args) {, +            child.onNext(args);, +                stop = stopPredicate.call(args);, +                child.onError(e);, +++ b/src/main/java/rx/internal/operators/OperatorTakeWhile.java, +import rx.exceptions.Exceptions;, +import rx.exceptions.OnErrorThrowable;, +            public void onNext(T t) {, +                    isSelected = predicate.call(t, counter++);, +                    Exceptions.throwIfFatal(e);, +                    subscriber.onError(OnErrorThrowable.addValueAsLastCause(e, t));, +                    subscriber.onNext(t);, +++ b/src/test/java/rx/exceptions/OnNextValueTest.java, +++ b/src/main/java/rx/exceptions/OnErrorThrowable.java, +        private static String renderValue(Object value){, +            if (value.getClass().isPrimitive()) {, +++ b/src/main/java/rx/internal/operators/OperatorTakeUntilPredicate.java, +        public void onNext(T args) {, +            child.onNext(args);, +                stop = stopPredicate.call(args);, +                child.onError(e);, +++ b/src/main/java/rx/internal/operators/OperatorTakeWhile.java, +import rx.exceptions.Exceptions;, +import rx.exceptions.OnErrorThrowable;, +            public void onNext(T t) {, +                    isSelected = predicate.call(t, counter++);, +                    Exceptions.throwIfFatal(e);, +                    subscriber.onError(OnErrorThrowable.addValueAsLastCause(e, t));, +                    subscriber.onNext(t);, +++ b/src/test/java/rx/exceptions/OnNextValueTest.java, +++ b/src/test/java/rx/internal/operators/OperatorTakeUntilPredicateTest.java, +++ b/src/main/java/rx/exceptions/OnErrorThrowable.java, +        private static String renderValue(Object value){, +            if (value.getClass().isPrimitive()) {, +++ b/src/main/java/rx/internal/operators/OperatorTakeUntilPredicate.java, +        public void onNext(T args) {, +            child.onNext(args);, +                stop = stopPredicate.call(args);, +                child.onError(e);, +++ b/src/main/java/rx/internal/operators/OperatorTakeWhile.java, +import rx.exceptions.Exceptions;, +import rx.exceptions.OnErrorThrowable;, +            public void onNext(T t) {, +                    isSelected = predicate.call(t, counter++);, +                    Exceptions.throwIfFatal(e);, +                    subscriber.onError(OnErrorThrowable.addValueAsLastCause(e, t));, +                    subscriber.onNext(t);, +++ b/src/test/java/rx/exceptions/OnNextValueTest.java, +++ b/src/test/java/rx/internal/operators/OperatorTakeUntilPredicateTest.java, +++ b/src/test/java/rx/internal/operators/OperatorTakeWhileTest.java, +import static org.junit.Assert.assertTrue;, +import rx.exceptions.TestException;, +    , +    @Test, +    public void testErrorCauseIncludesLastValue() {, +        TestSubscriber<String> ts = new TestSubscriber<String>();, +        Observable.just("abc").takeWhile(new Func1<String, Boolean>() {, +            @Override, +            public Boolean call(String t1) {, +                throw new TestException();, +            }, +        }).subscribe(ts);, +        , +        ts.assertTerminalEvent();, +        ts.assertNoValues();, +        assertTrue(ts.getOnErrorEvents().get(0).getCause().getMessage().contains("abc"));, +    }, +    ]