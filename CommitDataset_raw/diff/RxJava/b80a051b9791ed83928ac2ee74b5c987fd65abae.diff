[+++ b/src/main/java/io/reactivex/Observable.java, +import io.reactivex.annotations.*;, +    /** The default buffer size. */, +    /** An empty observable instance as there is no need to instantiate this more than once. */, +    /** A never observable instance as there is no need to instantiate this more than once. */, +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    public static <T> Observable<T> concat(Iterable<? extends Publisher<? extends T>> sources) {, +        Objects.requireNonNull(sources);, +        return fromIterable(sources).concatMap(v -> v);, +    }, +, +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    public static final <T> Observable<T> concat(Publisher<? extends Publisher<? extends T>> sources) {, +        return concat(sources, bufferSize());, +    }, +, +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    public static final <T> Observable<T> concat(Publisher<? extends Publisher<? extends T>> sources, int bufferSize) {, +        return fromPublisher(sources).concatMap(v -> v);, +    }, +, +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.NONE), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.PASS_THROUGH), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.PASS_THROUGH), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.PASS_THROUGH), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.PASS_THROUGH), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.NONE), +    @BackpressureSupport(BackpressureKind.FULL), +    @SchedulerSupport(SchedulerKind.CUSTOM)]