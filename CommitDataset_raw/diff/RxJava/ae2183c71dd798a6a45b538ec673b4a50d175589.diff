[+++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperationSample;, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +            @Override, +     * Samples the observable sequence at each interval., +     * , +     * @param period, +     *            The period of time that defines the sampling rate., +     * @param unit, +     *            The time unit for the sampling rate time period., +     * @return An observable sequence whose elements are the results of sampling the current observable sequence., +     */, +    public Observable<T> sample(long period, TimeUnit unit) {, +        return create(OperationSample.sample(this, period, unit));, +    }, +  , +    /**, +     * Samples the observable sequence at each interval., +     * , +     * @param period, +     *            The period of time that defines the sampling rate., +     * @param unit, +     *            The time unit for the sampling rate time period., +     * @param scheduler, +     *            The scheduler to use for sampling., +     * @return An observable sequence whose elements are the results of sampling the current observable sequence., +     */, +    public Observable<T> sample(long period, TimeUnit unit, Scheduler scheduler) {, +        return create(OperationSample.sample(this, period, unit, scheduler));, +    }, +    , +    /**]