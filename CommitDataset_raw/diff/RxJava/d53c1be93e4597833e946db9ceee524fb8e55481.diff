[+++ b/src/test/java/rx/CovarianceTest.java, +                for (Movie old : oldList) {, +++ b/src/test/java/rx/CovarianceTest.java, +                for (Movie old : oldList) {, +++ b/src/test/java/rx/ObservableTests.java, +        int[] nums = {1, 2, 3};, +        for(final int n: nums) {, +        assertEquals(nums.length, count.get());, +++ b/src/test/java/rx/CovarianceTest.java, +                for (Movie old : oldList) {, +++ b/src/test/java/rx/ObservableTests.java, +        int[] nums = {1, 2, 3};, +        for(final int n: nums) {, +        assertEquals(nums.length, count.get());, +++ b/src/test/java/rx/internal/operators/OnSubscribeToObservableFutureTest.java, +        Subscription sub = Observable.from(future).subscribe(testSubscriber);, +++ b/src/test/java/rx/CovarianceTest.java, +                for (Movie old : oldList) {, +++ b/src/test/java/rx/ObservableTests.java, +        int[] nums = {1, 2, 3};, +        for(final int n: nums) {, +        assertEquals(nums.length, count.get());, +++ b/src/test/java/rx/internal/operators/OnSubscribeToObservableFutureTest.java, +        Subscription sub = Observable.from(future).subscribe(testSubscriber);, +++ b/src/test/java/rx/internal/operators/OperatorConcatTest.java, +        public TestObservable(T... values) {, +        public TestObservable(CountDownLatch once, CountDownLatch okToContinue, T... values) {, +++ b/src/test/java/rx/CovarianceTest.java, +                for (Movie old : oldList) {, +++ b/src/test/java/rx/ObservableTests.java, +        int[] nums = {1, 2, 3};, +        for(final int n: nums) {, +        assertEquals(nums.length, count.get());, +++ b/src/test/java/rx/internal/operators/OnSubscribeToObservableFutureTest.java, +        Subscription sub = Observable.from(future).subscribe(testSubscriber);, +++ b/src/test/java/rx/internal/operators/OperatorConcatTest.java, +        public TestObservable(T... values) {, +        public TestObservable(CountDownLatch once, CountDownLatch okToContinue, T... values) {, +++ b/src/test/java/rx/internal/operators/OperatorDoOnEachTest.java, +        int[] nums = { 1, 2, 3 };, +        for (final int n : nums) {, +        assertEquals(nums.length, count.get());, +        int[] nums = { 1, 2, 3 };, +        for (final int n : nums) {, +        assertEquals(nums.length, count.get());, +++ b/src/test/java/rx/CovarianceTest.java, +                for (Movie old : oldList) {, +++ b/src/test/java/rx/ObservableTests.java, +        int[] nums = {1, 2, 3};, +        for(final int n: nums) {, +        assertEquals(nums.length, count.get());, +++ b/src/test/java/rx/internal/operators/OnSubscribeToObservableFutureTest.java, +        Subscription sub = Observable.from(future).subscribe(testSubscriber);, +++ b/src/test/java/rx/internal/operators/OperatorConcatTest.java, +        public TestObservable(T... values) {, +        public TestObservable(CountDownLatch once, CountDownLatch okToContinue, T... values) {, +++ b/src/test/java/rx/internal/operators/OperatorDoOnEachTest.java, +        int[] nums = { 1, 2, 3 };, +        for (final int n : nums) {, +        assertEquals(nums.length, count.get());, +        int[] nums = { 1, 2, 3 };, +        for (final int n : nums) {, +        assertEquals(nums.length, count.get());, +++ b/src/test/java/rx/internal/operators/OperatorMulticastTest.java, +import org.junit.Assert;, +++ b/src/test/java/rx/CovarianceTest.java, +                for (Movie old : oldList) {, +++ b/src/test/java/rx/ObservableTests.java, +        int[] nums = {1, 2, 3};, +        for(final int n: nums) {, +        assertEquals(nums.length, count.get());, +++ b/src/test/java/rx/internal/operators/OnSubscribeToObservableFutureTest.java, +        Subscription sub = Observable.from(future).subscribe(testSubscriber);, +++ b/src/test/java/rx/internal/operators/OperatorConcatTest.java, +        public TestObservable(T... values) {, +        public TestObservable(CountDownLatch once, CountDownLatch okToContinue, T... values) {, +++ b/src/test/java/rx/internal/operators/OperatorDoOnEachTest.java, +        int[] nums = { 1, 2, 3 };, +        for (final int n : nums) {, +        assertEquals(nums.length, count.get());, +        int[] nums = { 1, 2, 3 };, +        for (final int n : nums) {, +        assertEquals(nums.length, count.get());, +++ b/src/test/java/rx/internal/operators/OperatorMulticastTest.java, +import org.junit.Assert;, +++ b/src/test/java/rx/internal/operators/OperatorOnErrorResumeNextViaObservableTest.java, +import java.util.concurrent.TimeUnit;, +, +        Subscription s = mock(Subscription.class);, +        Subscription s = mock(Subscription.class);, +++ b/src/test/java/rx/CovarianceTest.java, +                for (Movie old : oldList) {, +++ b/src/test/java/rx/ObservableTests.java, +        int[] nums = {1, 2, 3};, +        for(final int n: nums) {, +        assertEquals(nums.length, count.get());, +++ b/src/test/java/rx/internal/operators/OnSubscribeToObservableFutureTest.java, +        Subscription sub = Observable.from(future).subscribe(testSubscriber);, +++ b/src/test/java/rx/internal/operators/OperatorConcatTest.java, +        public TestObservable(T... values) {]