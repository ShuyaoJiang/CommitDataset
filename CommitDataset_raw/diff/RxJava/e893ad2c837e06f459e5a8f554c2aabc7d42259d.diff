[+++ b/language-adaptors/rxjava-scala/build.gradle, +apply plugin: 'scala', +, +tasks.withType(ScalaCompile) {, +    scalaCompileOptions.unchecked = true, +, +    configure(scalaCompileOptions.forkOptions) {, +        memoryMaximumSize = '1g', +        jvmArgs = ['-XX:MaxPermSize=512m'], +    }, +}, +, +dependencies {, +    // Scala compiler and related tools, +    scalaTools 'org.scala-lang:scala-compiler:2.10.0', +    scalaTools 'org.scala-lang:scala-library:2.10.0', +, +    compile 'org.scala-lang:scala-library:2.10.0', +    compile 'org.scala-lang:scala-reflect:2.10.0', +    compile 'org.scalatest:scalatest_2.10:1.9.1', +, +    compile project(':rxjava-core'), +    provided 'junit:junit:4.10', +    provided 'org.mockito:mockito-core:1.9.5', +, +    testCompile 'org.scalatest:scalatest_2.10:1.9.1', +}, +, +task test(overwrite: true, dependsOn: testClasses) << {, +    ant.taskdef(name: 'scalatest',, +            classname: 'org.scalatest.tools.ScalaTestAntTask',, +            classpath: sourceSets.test.runtimeClasspath.asPath, +    ), +    ant.scalatest(runpath: sourceSets.test.classesDir,, +            haltonfailure: 'true',, +            fork: 'false') {reporter(type: 'stdout')}, +}, +++ b/language-adaptors/rxjava-scala/build.gradle, +apply plugin: 'scala', +, +tasks.withType(ScalaCompile) {, +    scalaCompileOptions.unchecked = true, +, +    configure(scalaCompileOptions.forkOptions) {, +        memoryMaximumSize = '1g', +        jvmArgs = ['-XX:MaxPermSize=512m'], +    }, +}, +, +dependencies {, +    // Scala compiler and related tools, +    scalaTools 'org.scala-lang:scala-compiler:2.10.0', +    scalaTools 'org.scala-lang:scala-library:2.10.0', +, +    compile 'org.scala-lang:scala-library:2.10.0', +    compile 'org.scala-lang:scala-reflect:2.10.0', +    compile 'org.scalatest:scalatest_2.10:1.9.1', +, +    compile project(':rxjava-core'), +    provided 'junit:junit:4.10', +    provided 'org.mockito:mockito-core:1.9.5', +, +    testCompile 'org.scalatest:scalatest_2.10:1.9.1', +}, +, +task test(overwrite: true, dependsOn: testClasses) << {, +    ant.taskdef(name: 'scalatest',, +            classname: 'org.scalatest.tools.ScalaTestAntTask',, +            classpath: sourceSets.test.runtimeClasspath.asPath, +    ), +    ant.scalatest(runpath: sourceSets.test.classesDir,, +            haltonfailure: 'true',, +            fork: 'false') {reporter(type: 'stdout')}, +}, +++ b/language-adaptors/rxjava-scala/src/main/scala/scala/ScalaAdaptor.scala, +/**, + * Copyright 2013 Netflix, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.rx.lang.scala, +, +import org.rx.functions.FunctionLanguageAdaptor, +import org.junit.{Assert, Before, Test}, +import org.rx.reactive.Observable, +import org.scalatest.junit.JUnitSuite, +import org.mockito.Mockito._, +import org.mockito.{MockitoAnnotations, Mock}, +, +import scala.collection.JavaConverters._]