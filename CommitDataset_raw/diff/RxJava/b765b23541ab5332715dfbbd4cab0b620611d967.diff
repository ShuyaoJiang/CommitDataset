[+++ b/rxjava-core/src/main/java/rx/subscriptions/CompositeSubscription.java, +    /**, +     * Remove and unsubscribe all subscriptions but do not unsubscribe the outer CompositeSubscription., +     */, +    public void clear() {, +        Collection<Throwable> es = null;, +        for (Subscription s : subscriptions.keySet()) {, +            try {, +                s.unsubscribe();, +                this.subscriptions.remove(s);, +            } catch (Throwable e) {, +                if (es == null) {, +                    es = new ArrayList<Throwable>();, +                }, +                es.add(e);, +            }, +        }, +        if (es != null) {, +            throw new CompositeException("Failed to unsubscribe to 1 or more subscriptions.", es);, +        }, +    }, +, +    /**, +     * Remove the {@link Subscription} and unsubscribe it., +     * , +     * @param s, +     */, +        // also unsubscribe from it: http://msdn.microsoft.com/en-us/library/system.reactive.disposables.compositedisposable.remove(v=vs.103).aspx, +        s.unsubscribe();, +++ b/rxjava-core/src/main/java/rx/subscriptions/CompositeSubscription.java, +    /**, +     * Remove and unsubscribe all subscriptions but do not unsubscribe the outer CompositeSubscription., +     */, +    public void clear() {, +        Collection<Throwable> es = null;, +        for (Subscription s : subscriptions.keySet()) {, +            try {, +                s.unsubscribe();, +                this.subscriptions.remove(s);, +            } catch (Throwable e) {, +                if (es == null) {, +                    es = new ArrayList<Throwable>();, +                }, +                es.add(e);, +            }, +        }, +        if (es != null) {, +            throw new CompositeException("Failed to unsubscribe to 1 or more subscriptions.", es);, +        }, +    }, +, +    /**, +     * Remove the {@link Subscription} and unsubscribe it., +     * , +     * @param s, +     */, +        // also unsubscribe from it: http://msdn.microsoft.com/en-us/library/system.reactive.disposables.compositedisposable.remove(v=vs.103).aspx, +        s.unsubscribe();, +++ b/rxjava-core/src/test/java/rx/subscriptions/CompositeSubscriptionTest.java, +    }, +, +    @Test, +    public void testRemoveUnsubscribes() {, +        BooleanSubscription s1 = new BooleanSubscription();, +        BooleanSubscription s2 = new BooleanSubscription();, +, +        CompositeSubscription s = new CompositeSubscription();, +        s.add(s1);, +        s.add(s2);, +, +        s.remove(s1);, +, +        assertTrue(s1.isUnsubscribed());, +        assertFalse(s2.isUnsubscribed());, +    }, +, +    @Test, +    public void testClear() {, +        BooleanSubscription s1 = new BooleanSubscription();, +        BooleanSubscription s2 = new BooleanSubscription();, +, +        CompositeSubscription s = new CompositeSubscription();, +        s.add(s1);, +        s.add(s2);, +, +        assertFalse(s1.isUnsubscribed());, +        assertFalse(s2.isUnsubscribed());, +, +        s.clear();, +, +        assertTrue(s1.isUnsubscribed());, +        assertTrue(s1.isUnsubscribed());, +        assertFalse(s.isUnsubscribed());, +, +        BooleanSubscription s3 = new BooleanSubscription();, +, +        s.add(s3);, +        s.unsubscribe();, +, +        assertTrue(s3.isUnsubscribed());]