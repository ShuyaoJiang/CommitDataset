[+++ b/src/main/java/io/reactivex/Observable.java, +    public final Observable<T> endWith(Publisher<? extends T> other) {, +        Objects.requireNonNull(other);, +        return concatArray(this, other);, +    }, +, +    public final Observable<T> endWith(T value) {, +        Objects.requireNonNull(value);, +        return concatArray(this, just(value));, +    }, +, +    public final Observable<T> endWithArray(T... values) {, +    public final Observable<T> startWith(Publisher<? extends T> other) {, +        Objects.requireNonNull(other);, +        return concatArray(other, this);, +    }, +, +    public final Observable<T> startWith(T value) {, +        Objects.requireNonNull(value);, +        return concatArray(just(value), this);, +    }, +, +    public final Observable<T> startWithArray(T... values) {, +++ b/src/main/java/io/reactivex/Observable.java, +    public final Observable<T> endWith(Publisher<? extends T> other) {, +        Objects.requireNonNull(other);, +        return concatArray(this, other);, +    }, +, +    public final Observable<T> endWith(T value) {, +        Objects.requireNonNull(value);, +        return concatArray(this, just(value));, +    }, +, +    public final Observable<T> endWithArray(T... values) {, +    public final Observable<T> startWith(Publisher<? extends T> other) {, +        Objects.requireNonNull(other);, +        return concatArray(other, this);, +    }, +, +    public final Observable<T> startWith(T value) {, +        Objects.requireNonNull(value);, +        return concatArray(just(value), this);, +    }, +, +    public final Observable<T> startWithArray(T... values) {, +++ b/src/test/java/io/reactivex/ObservableTests.java, +        w = TestHelper.mockSubscriber();, +        Subscriber<String> observer = TestHelper.mockSubscriber();, +        Subscriber<String> observer = TestHelper.mockSubscriber();, +        Subscriber<Integer> observer = TestHelper.mockSubscriber();, +        Subscriber<Object> observer = TestHelper.mockSubscriber();, +        Subscriber<Object> observer = TestHelper.mockSubscriber();, +        Subscriber<Boolean> observer = TestHelper.mockSubscriber();, +        Subscriber<Object> observer = TestHelper.mockSubscriber();, +        Subscriber<Integer> observer = TestHelper.mockSubscriber();, +        Subscriber<Integer> observer = TestHelper.mockSubscriber();, +        Subscriber<Integer> observer = TestHelper.mockSubscriber();, +++ b/src/main/java/io/reactivex/Observable.java, +    public final Observable<T> endWith(Publisher<? extends T> other) {, +        Objects.requireNonNull(other);, +        return concatArray(this, other);, +    }, +, +    public final Observable<T> endWith(T value) {, +        Objects.requireNonNull(value);, +        return concatArray(this, just(value));, +    }, +, +    public final Observable<T> endWithArray(T... values) {, +    public final Observable<T> startWith(Publisher<? extends T> other) {, +        Objects.requireNonNull(other);, +        return concatArray(other, this);, +    }, +, +    public final Observable<T> startWith(T value) {, +        Objects.requireNonNull(value);, +        return concatArray(just(value), this);, +    }, +, +    public final Observable<T> startWithArray(T... values) {, +++ b/src/test/java/io/reactivex/ObservableTests.java, +        w = TestHelper.mockSubscriber();, +        Subscriber<String> observer = TestHelper.mockSubscriber();, +        Subscriber<String> observer = TestHelper.mockSubscriber();, +        Subscriber<Integer> observer = TestHelper.mockSubscriber();, +        Subscriber<Object> observer = TestHelper.mockSubscriber();, +        Subscriber<Object> observer = TestHelper.mockSubscriber();, +        Subscriber<Boolean> observer = TestHelper.mockSubscriber();, +        Subscriber<Object> observer = TestHelper.mockSubscriber();, +        Subscriber<Integer> observer = TestHelper.mockSubscriber();, +        Subscriber<Integer> observer = TestHelper.mockSubscriber();, +        Subscriber<Integer> observer = TestHelper.mockSubscriber();, +++ b/src/test/java/io/reactivex/ObservableWindowTests.java, +/**, + * Copyright 2015 Netflix, Inc., + * , + * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in, + * compliance with the License. You may obtain a copy of the License at, + * ]