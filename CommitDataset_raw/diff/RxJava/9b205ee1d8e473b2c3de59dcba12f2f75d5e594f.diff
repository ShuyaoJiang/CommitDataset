[+++ b/rxjava-core/src/main/java/rx/operators/OperatorObserveOn.java, +import java.util.ArrayList;, +import java.util.List;, +        private FastList queue = new FastList();, +            synchronized (this) {, +                queue.add(on.next(t));, +            }, +            synchronized (this) {, +                queue.add(on.completed());, +            }, +            synchronized (this) {, +                queue.add(on.error(e));, +            }, +                FastList vs;, +                synchronized (this) {, +                    vs = queue;, +                    queue = new FastList();, +                }, +                for (Object v : vs.array) {, +                    if (v == null) {, +                        break;, +                    }, +                }, +                if (counter.addAndGet(-vs.size) == 0) {, +                    break;, +                }, +            } while (true);, +    static final class FastList {, +        Object[] array;, +        int size;, +, +        public void add(Object o) {, +            int s = size;, +            Object[] a = array;, +            if (a == null) {, +                a = new Object[16];, +                array = a;, +            } else if (s == a.length) {, +                Object[] array2 = new Object[s + (s >> 2)];, +                System.arraycopy(a, 0, array2, 0, s);, +                a = array2;, +                array = a;, +            }, +            a[s] = o;, +            size = s + 1;, +        }, +    }]