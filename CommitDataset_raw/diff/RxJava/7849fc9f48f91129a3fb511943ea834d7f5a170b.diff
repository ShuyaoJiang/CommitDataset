[+++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableGroupJoin.java, +            return get() == SubscriptionHelper.CANCELLED;, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableGroupJoin.java, +            return get() == SubscriptionHelper.CANCELLED;, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublishMulticast.java, +            return upstream.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableGroupJoin.java, +            return get() == SubscriptionHelper.CANCELLED;, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublishMulticast.java, +            return upstream.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRepeatWhen.java, +                    if (upstream.get() == SubscriptionHelper.CANCELLED) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableGroupJoin.java, +            return get() == SubscriptionHelper.CANCELLED;, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublishMulticast.java, +            return upstream.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRepeatWhen.java, +                    if (upstream.get() == SubscriptionHelper.CANCELLED) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableSequenceEqualSingle.java, +            return first.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableGroupJoin.java, +            return get() == SubscriptionHelper.CANCELLED;, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublishMulticast.java, +            return upstream.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRepeatWhen.java, +                    if (upstream.get() == SubscriptionHelper.CANCELLED) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableSequenceEqualSingle.java, +            return first.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableTimeout.java, +            return this.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableGroupJoin.java, +            return get() == SubscriptionHelper.CANCELLED;, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublishMulticast.java, +            return upstream.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRepeatWhen.java, +                    if (upstream.get() == SubscriptionHelper.CANCELLED) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableSequenceEqualSingle.java, +            return first.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableTimeout.java, +            return this.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableWithLatestFromMany.java, +                if (upstream.get() == SubscriptionHelper.CANCELLED) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableGroupJoin.java, +            return get() == SubscriptionHelper.CANCELLED;, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublishMulticast.java, +            return upstream.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRepeatWhen.java, +                    if (upstream.get() == SubscriptionHelper.CANCELLED) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableSequenceEqualSingle.java, +            return first.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableTimeout.java, +            return this.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableWithLatestFromMany.java, +                if (upstream.get() == SubscriptionHelper.CANCELLED) {, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher.java, +            return other.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableGroupJoin.java, +            return get() == SubscriptionHelper.CANCELLED;, +            return get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublishMulticast.java, +            return upstream.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableRepeatWhen.java, +                    if (upstream.get() == SubscriptionHelper.CANCELLED) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableSequenceEqualSingle.java, +            return first.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableTimeout.java, +            return this.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableWithLatestFromMany.java, +                if (upstream.get() == SubscriptionHelper.CANCELLED) {, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher.java, +            return other.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/subscribers/ForEachWhileSubscriber.java, +        return this.get() == SubscriptionHelper.CANCELLED;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableIterable.java, +            return get() == SubscriptionHelper.CANCELLED;]