[+++ b/src/main/java/io/reactivex/Scheduler.java, +import io.reactivex.schedulers.SchedulerRunnableIntrospection;, +, +import java.util.concurrent.TimeUnit;, +        final class PeriodicTask implements Runnable, SchedulerRunnableIntrospection {, +, +            @Override, +            public Runnable getWrappedRunnable() {, +                return this.decoratedRun;, +            }, +    implements Disposable, Runnable, SchedulerRunnableIntrospection {, +, +        @Override, +        public Runnable getWrappedRunnable() {, +            return run;, +        }, +    static final class DisposeTask implements Disposable, Runnable, SchedulerRunnableIntrospection {, +, +        @Override, +        public Runnable getWrappedRunnable() {, +            return this.decoratedRun;, +        }, +++ b/src/main/java/io/reactivex/Scheduler.java, +import io.reactivex.schedulers.SchedulerRunnableIntrospection;, +, +import java.util.concurrent.TimeUnit;, +        final class PeriodicTask implements Runnable, SchedulerRunnableIntrospection {, +, +            @Override, +            public Runnable getWrappedRunnable() {, +                return this.decoratedRun;, +            }, +    implements Disposable, Runnable, SchedulerRunnableIntrospection {, +, +        @Override, +        public Runnable getWrappedRunnable() {, +            return run;, +        }, +    static final class DisposeTask implements Disposable, Runnable, SchedulerRunnableIntrospection {, +, +        @Override, +        public Runnable getWrappedRunnable() {, +            return this.decoratedRun;, +        }, +++ b/src/main/java/io/reactivex/internal/schedulers/AbstractDirectTask.java, +import io.reactivex.schedulers.SchedulerRunnableIntrospection;, +implements Disposable, SchedulerRunnableIntrospection {, +, +    @Override, +    public Runnable getWrappedRunnable() {, +        return runnable;, +    }, +++ b/src/main/java/io/reactivex/Scheduler.java, +import io.reactivex.schedulers.SchedulerRunnableIntrospection;, +, +import java.util.concurrent.TimeUnit;, +        final class PeriodicTask implements Runnable, SchedulerRunnableIntrospection {, +, +            @Override, +            public Runnable getWrappedRunnable() {, +                return this.decoratedRun;, +            }, +    implements Disposable, Runnable, SchedulerRunnableIntrospection {, +, +        @Override, +        public Runnable getWrappedRunnable() {, +            return run;, +        }, +    static final class DisposeTask implements Disposable, Runnable, SchedulerRunnableIntrospection {, +, +        @Override, +        public Runnable getWrappedRunnable() {, +            return this.decoratedRun;, +        }, +++ b/src/main/java/io/reactivex/internal/schedulers/AbstractDirectTask.java, +import io.reactivex.schedulers.SchedulerRunnableIntrospection;, +implements Disposable, SchedulerRunnableIntrospection {, +, +    @Override, +    public Runnable getWrappedRunnable() {, +        return runnable;, +    }, +++ b/src/main/java/io/reactivex/internal/schedulers/ExecutorScheduler.java, +import io.reactivex.internal.functions.Functions;, +import io.reactivex.schedulers.*;, +    static final class DelayedRunnable extends AtomicReference<Runnable>, +            implements Runnable, Disposable, SchedulerRunnableIntrospection {, +, +        @Override, +        public Runnable getWrappedRunnable() {, +            Runnable r = get();, +            return r != null ? r : Functions.EMPTY_RUNNABLE;, +        }, +++ b/src/main/java/io/reactivex/Scheduler.java, +import io.reactivex.schedulers.SchedulerRunnableIntrospection;, +, +import java.util.concurrent.TimeUnit;, +        final class PeriodicTask implements Runnable, SchedulerRunnableIntrospection {, +, +            @Override]