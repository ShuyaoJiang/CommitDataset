[+++ b/rxjava-core/src/main/java/rx/Notification.java, +    public void accept(Observer<? super T> observer) {, +        if (isOnNext()) {, +            observer.onNext(getValue());, +        } else if (isOnCompleted()) {, +            observer.onCompleted();, +        } else if (isOnError()) {, +            observer.onError(getThrowable());, +        }, +    }, +, +++ b/rxjava-core/src/main/java/rx/Notification.java, +    public void accept(Observer<? super T> observer) {, +        if (isOnNext()) {, +            observer.onNext(getValue());, +        } else if (isOnCompleted()) {, +            observer.onCompleted();, +        } else if (isOnError()) {, +            observer.onError(getThrowable());, +        }, +    }, +, +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * @param iterable, +     *            the source {@link Iterable} sequence, +     * @param scheduler, +     *            the scheduler to emit the items of the iterable, +     * @param <T>, +     *            the type of items in the {@link Iterable} sequence and the type of items to be, +     *            emitted by the resulting Observable, +     * @return an Observable that emits each item in the source {@link Iterable} sequence with the specified scheduler, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh212140(v=vs.103).aspx">MSDN: Observable.ToObservable</a>, +     * Generates an Observable that emits a sequence of integers within a specified range with the specified scheduler., +     *, +     * @param start, +     *            the value of the first integer in the sequence, +     * @param count, +     *            the number of sequential integers to generate, +     * @param scheduler, +     *            the scheduler to run the generator loop on, +     *, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh211896(v=vs.103).aspx">Observable.Range Method (Int32, Int32, IScheduler)</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229494%28v=vs.103%29.aspx">MSDN: Observable.distinctUntilChanged</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229508%28v=vs.103%29.aspx">MSDN: Observable.distinctUntilChanged</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229764%28v=vs.103%29.aspx">MSDN: Observable.distinct</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh244310%28v=vs.103%29.aspx">MSDN: Observable.distinct</a>, +     * Emit a specified set of items with the specified scheduler before beginning to emit items from the source Observable., +     * @param values, +     *            Iterable of the items you want the modified Observable to emit first, +     * @param scheduler, +     *            The scheduler to emit the prepended values on., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229372(v=vs.103).aspx">MSDN: Observable.StartWith</a>, +     * Emit a specified array of items with the specified scheduler before beginning to emit items from the source Observable., +     * @param values, +     *            The items you want the modified Observable to emit first, +     * @param scheduler, +     *            The scheduler to emit the prepended values on., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229372(v=vs.103).aspx">MSDN: Observable.StartWith</a>, +++ b/rxjava-core/src/main/java/rx/Notification.java, +    public void accept(Observer<? super T> observer) {, +        if (isOnNext()) {, +            observer.onNext(getValue());, +        } else if (isOnCompleted()) {, +            observer.onCompleted();, +        } else if (isOnError()) {, +            observer.onError(getThrowable());, +        }, +    }, +, +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * @param iterable, +     *            the source {@link Iterable} sequence, +     * @param scheduler, +     *            the scheduler to emit the items of the iterable, +     * @param <T>, +     *            the type of items in the {@link Iterable} sequence and the type of items to be, +     *            emitted by the resulting Observable, +     * @return an Observable that emits each item in the source {@link Iterable} sequence with the specified scheduler, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh212140(v=vs.103).aspx">MSDN: Observable.ToObservable</a>, +     * Generates an Observable that emits a sequence of integers within a specified range with the specified scheduler., +     *, +     * @param start, +     *            the value of the first integer in the sequence, +     * @param count, +     *            the number of sequential integers to generate, +     * @param scheduler, +     *            the scheduler to run the generator loop on, +     *, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh211896(v=vs.103).aspx">Observable.Range Method (Int32, Int32, IScheduler)</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229494%28v=vs.103%29.aspx">MSDN: Observable.distinctUntilChanged</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229508%28v=vs.103%29.aspx">MSDN: Observable.distinctUntilChanged</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229764%28v=vs.103%29.aspx">MSDN: Observable.distinct</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh244310%28v=vs.103%29.aspx">MSDN: Observable.distinct</a>, +     * Emit a specified set of items with the specified scheduler before beginning to emit items from the source Observable., +     * @param values, +     *            Iterable of the items you want the modified Observable to emit first, +     * @param scheduler, +     *            The scheduler to emit the prepended values on., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229372(v=vs.103).aspx">MSDN: Observable.StartWith</a>, +     * Emit a specified array of items with the specified scheduler before beginning to emit items from the source Observable.]