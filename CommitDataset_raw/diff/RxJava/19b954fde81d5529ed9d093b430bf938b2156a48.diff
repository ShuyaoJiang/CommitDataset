[+++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.concurrency.Schedulers;, +import rx.observables.BlockingObservable;, +import rx.observables.ConnectableObservable;, +import rx.observables.GroupedObservable;, +import rx.operators.*;, +import rx.plugins.RxJavaErrorHandler;, +import rx.plugins.RxJavaObservableExecutionHook;, +import rx.plugins.RxJavaPlugins;, +import rx.subjects.AsyncSubject;, +import rx.subjects.PublishSubject;, +import rx.subjects.ReplaySubject;, +import rx.subjects.Subject;, +import rx.subscriptions.Subscriptions;, +import rx.util.*;, +import rx.util.functions.*;, +import static rx.util.functions.Functions.alwaysFalse;, +import static rx.util.functions.Functions.not;, +     * Repeats the observable sequence indefinitely., +     * <p>, +     *, +     * @return The observable sequence producing the elements of the given sequence repeatedly and sequentially., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229428(v=vs.103).aspx">MSDN: Observable.Repeat</a>, +     */, +    public Observable<T> repeat() {, +        return create(rx.operators.OperationRepeat.repeat(this));, +    }, +, +    /**, +, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.concurrency.Schedulers;, +import rx.observables.BlockingObservable;, +import rx.observables.ConnectableObservable;, +import rx.observables.GroupedObservable;, +import rx.operators.*;, +import rx.plugins.RxJavaErrorHandler;, +import rx.plugins.RxJavaObservableExecutionHook;, +import rx.plugins.RxJavaPlugins;, +import rx.subjects.AsyncSubject;, +import rx.subjects.PublishSubject;, +import rx.subjects.ReplaySubject;, +import rx.subjects.Subject;, +import rx.subscriptions.Subscriptions;, +import rx.util.*;, +import rx.util.functions.*;, +import static rx.util.functions.Functions.alwaysFalse;, +import static rx.util.functions.Functions.not;, +     * Repeats the observable sequence indefinitely., +     * <p>, +     *, +     * @return The observable sequence producing the elements of the given sequence repeatedly and sequentially., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229428(v=vs.103).aspx">MSDN: Observable.Repeat</a>, +     */, +    public Observable<T> repeat() {, +        return create(rx.operators.OperationRepeat.repeat(this));, +    }, +, +    /**, +, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.concurrency.Schedulers;, +import rx.observables.BlockingObservable;, +import rx.observables.ConnectableObservable;, +import rx.observables.GroupedObservable;, +import rx.operators.*;, +import rx.plugins.RxJavaErrorHandler;, +import rx.plugins.RxJavaObservableExecutionHook;, +import rx.plugins.RxJavaPlugins;, +import rx.subjects.AsyncSubject;, +import rx.subjects.PublishSubject;, +import rx.subjects.ReplaySubject;, +import rx.subjects.Subject;, +import rx.subscriptions.Subscriptions;, +import rx.util.*;, +import rx.util.functions.*;, +import static rx.util.functions.Functions.alwaysFalse;, +import static rx.util.functions.Functions.not;, +     * Repeats the observable sequence indefinitely., +     * <p>, +     *, +     * @return The observable sequence producing the elements of the given sequence repeatedly and sequentially., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229428(v=vs.103).aspx">MSDN: Observable.Repeat</a>, +     */, +    public Observable<T> repeat() {, +        return create(rx.operators.OperationRepeat.repeat(this));, +    }, +, +    /**, +, +++ /dev/null, +++ /dev/null, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.concurrency.Schedulers;, +import rx.observables.BlockingObservable;, +import rx.observables.ConnectableObservable;, +import rx.observables.GroupedObservable;, +import rx.operators.*;, +import rx.plugins.RxJavaErrorHandler;]