[+++ b/src/test/java/rx/internal/util/RxRingBufferWithoutUnsafeTest.java, +import java.util.*;, +import rx.*;, +    @Test(timeout = 20000), +    public void testConcurrencyLoop() throws InterruptedException {, +        for (int i = 0; i < 50; i++) {, +            testConcurrency();, +        }, +    }, +    , +    @Test(timeout = 10000), +        final CountDownLatch emitLatch = new CountDownLatch(127);, +        int drainers = 3;, +        final CountDownLatch drainLatch = new CountDownLatch(drainers);, +        List<Scheduler.Worker> drainerWorkers = new ArrayList<Scheduler.Worker>();, +                            try {, +                                Thread.sleep(1);, +                            } catch (InterruptedException ex) {, +                                // ignored, +                            }, +                            if (emitLatch.getCount() == 0 && b.isEmpty()) {, +        for (int i = 0; i < drainers; i++) {, +            Scheduler.Worker w = Schedulers.newThread().createWorker();, +            w.schedule(drainer);, +            drainerWorkers.add(w);, +        }, +        for (Scheduler.Worker w : drainerWorkers) {, +            w.unsubscribe();, +        }]