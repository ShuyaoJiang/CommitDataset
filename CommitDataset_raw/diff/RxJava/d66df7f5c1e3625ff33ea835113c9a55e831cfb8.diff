[+++ b/src/main/java/rx/subjects/AsyncSubject.java, +import java.util.ArrayList;, +import java.util.List;, +, +import rx.exceptions.CompositeException;, +import rx.exceptions.Exceptions;, +            List<Throwable> errors = null;, +                try {, +                } catch (Throwable e2) {, +                    if (errors == null) {, +                        errors = new ArrayList<Throwable>();, +                    }, +                    errors.add(e2);, +                }, +            }, +, +            if (errors != null) {, +                if (errors.size() == 1) {, +                    Exceptions.propagate(errors.get(0));, +                } else {, +                    throw new CompositeException("Errors while emitting AsyncSubject.onError", errors);, +                }, +++ b/src/main/java/rx/subjects/AsyncSubject.java, +import java.util.ArrayList;, +import java.util.List;, +, +import rx.exceptions.CompositeException;, +import rx.exceptions.Exceptions;, +            List<Throwable> errors = null;, +                try {, +                } catch (Throwable e2) {, +                    if (errors == null) {, +                        errors = new ArrayList<Throwable>();, +                    }, +                    errors.add(e2);, +                }, +            }, +, +            if (errors != null) {, +                if (errors.size() == 1) {, +                    Exceptions.propagate(errors.get(0));, +                } else {, +                    throw new CompositeException("Errors while emitting AsyncSubject.onError", errors);, +                }, +++ b/src/main/java/rx/subjects/BehaviorSubject.java, +import java.util.ArrayList;, +import java.util.List;, +, +import rx.exceptions.CompositeException;, +import rx.exceptions.Exceptions;, +            List<Throwable> errors = null;, +                try {, +                } catch (Throwable e2) {, +                    if (errors == null) {, +                        errors = new ArrayList<Throwable>();, +                    }, +                    errors.add(e2);, +                }, +            }, +, +            if (errors != null) {, +                if (errors.size() == 1) {, +                    Exceptions.propagate(errors.get(0));, +                } else {, +                    throw new CompositeException("Errors while emitting AsyncSubject.onError", errors);, +                }, +++ b/src/main/java/rx/subjects/AsyncSubject.java, +import java.util.ArrayList;, +import java.util.List;, +, +import rx.exceptions.CompositeException;, +import rx.exceptions.Exceptions;, +            List<Throwable> errors = null;, +                try {, +                } catch (Throwable e2) {, +                    if (errors == null) {, +                        errors = new ArrayList<Throwable>();, +                    }, +                    errors.add(e2);, +                }, +            }, +, +            if (errors != null) {, +                if (errors.size() == 1) {, +                    Exceptions.propagate(errors.get(0));, +                } else {, +                    throw new CompositeException("Errors while emitting AsyncSubject.onError", errors);, +                }, +++ b/src/main/java/rx/subjects/BehaviorSubject.java, +import java.util.ArrayList;, +import java.util.List;, +, +import rx.exceptions.CompositeException;, +import rx.exceptions.Exceptions;, +            List<Throwable> errors = null;, +                try {, +                } catch (Throwable e2) {, +                    if (errors == null) {, +                        errors = new ArrayList<Throwable>();, +                    }]