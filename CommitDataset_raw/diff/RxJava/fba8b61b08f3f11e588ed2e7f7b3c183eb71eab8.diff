[+++ b/docs/Error-Handling-Operators.md, +There are a variety of operators that you can use to react to or recover from `onError` notifications from reactive sources, such as `Observable`s. For example, you might:, +# Outline, +- [`doOnError`](#doonerror), +- [`onErrorComplete`](#onerrorcomplete), +- [`onErrorResumeNext`](#onerrorresumenext), +- [`onErrorReturn`](#onerrorreturn), +- [`onErrorReturnItem`](#onerrorreturnitem), +- [`onExceptionResumeNext`](#onexceptionresumenext), +- [`retry`](#retry), +- [`retryUntil`](#retryuntil), +- [`retryWhen`](#retrywhen), +, +## doOnError, +, +**Available in:** ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_on.png) `Flowable`, ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_on.png) `Observable`, ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_on.png) `Maybe`, ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_on.png) `Single`, ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_on.png) `Completable`, +, +**ReactiveX documentation:** [http://reactivex.io/documentation/operators/do.html](http://reactivex.io/documentation/operators/do.html), +, +Instructs a reactive type to invoke the given `io.reactivex.functions.Consumer` when it encounters an error., +, +### doOnError example, +, +```java, +Observable.error(new IOException("Something went wrong")), +    .doOnError(error -> System.err.println("The error message is: " + error.getMessage())), +    .subscribe(, +        x -> System.out.println("onNext should never be printed!"),, +        Throwable::printStackTrace,, +        () -> System.out.println("onComplete should never be printed!"));, +```, +, +## onErrorComplete, +, +**Available in:** ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_off.png) `Flowable`, ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_off.png) `Observable`, ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_on.png) `Maybe`, ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_off.png) `Single`, ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_on.png) `Completable`, +, +**ReactiveX documentation:** [http://reactivex.io/documentation/operators/catch.html](http://reactivex.io/documentation/operators/catch.html), +, +Instructs a reactive type to swallow an error event and replace it by a completion event., +, +Optionally, a `io.reactivex.functions.Predicate` can be specified that gives more control over when an error event should be replaced by a completion event, and when not., +, +### onErrorComplete example, +, +```java, +Completable.fromAction(() -> {, +    throw new IOException();, +}).onErrorComplete(error -> {, +    // Only ignore errors of type java.io.IOException., +    return error instanceof IOException;, +}).subscribe(, +    () -> System.out.println("IOException was ignored"),, +    error -> System.err.println("onError should not be printed!"));, +```, +, +## onErrorResumeNext, +, +**Available in:** ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_on.png) `Flowable`, ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_on.png) `Observable`, ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_on.png) `Maybe`, ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_on.png) `Single`, ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_on.png) `Completable`, +, +**ReactiveX documentation:** [http://reactivex.io/documentation/operators/catch.html](http://reactivex.io/documentation/operators/catch.html), +, +Instructs a reactive type to emit a sequence of items if it encounters an error., +, +### onErrorResumeNext example, +, +```java, + Observable<Integer> numbers = Observable.generate(() -> 1, (state, emitter) -> {, +    emitter.onNext(state);, +, +    return state + 1;, +});, +, +numbers.scan(Math::multiplyExact), +    .onErrorResumeNext(Observable.empty()), +    .subscribe(, +        System.out::println,, +        error -> System.err.println("onError should not be printed!"));, +, +// prints:, +// 1, +// 2, +// 6, +// 24, +// 120, +// 720, +// 5040, +// 40320, +// 362880, +// 3628800, +// 39916800, +// 479001600, +```, +, +## onErrorReturn, +, +**Available in:** ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_on.png) `Flowable`, ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_on.png) `Observable`, ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_on.png) `Maybe`, ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_on.png) `Single`, ![image](https://raw.github.com/wiki/ReactiveX/RxJava/images/checkmark_off.png) `Completable`, +, +**ReactiveX documentation:** [http://reactivex.io/documentation/operators/catch.html](http://reactivex.io/documentation/operators/catch.html), +, +Instructs a reactive type to emit the item returned by the specified `io.reactivex.functions.Function` when it encounters an error.]