[+++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +     * @param disposable the resource to dispose if the drain terminates, +++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +     * @param disposable the resource to dispose if the drain terminates, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeFlatMapCompletable.java, + * @param <T> the value type of the source MaybeSource, +++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +     * @param disposable the resource to dispose if the drain terminates, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeFlatMapCompletable.java, + * @param <T> the value type of the source MaybeSource, +++ b/src/main/java/io/reactivex/internal/operators/single/SingleFlatMapCompletable.java, + * @param <T> the value type of the source SingleSource, +++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +     * @param disposable the resource to dispose if the drain terminates, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeFlatMapCompletable.java, + * @param <T> the value type of the source MaybeSource, +++ b/src/main/java/io/reactivex/internal/operators/single/SingleFlatMapCompletable.java, + * @param <T> the value type of the source SingleSource, +++ b/src/main/java/io/reactivex/internal/queue/SpscArrayQueue.java, + * @param <E> the element type of the queue, +++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +     * @param disposable the resource to dispose if the drain terminates, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeFlatMapCompletable.java, + * @param <T> the value type of the source MaybeSource, +++ b/src/main/java/io/reactivex/internal/operators/single/SingleFlatMapCompletable.java, + * @param <T> the value type of the source SingleSource, +++ b/src/main/java/io/reactivex/internal/queue/SpscArrayQueue.java, + * @param <E> the element type of the queue, +++ b/src/main/java/io/reactivex/observers/BaseTestConsumer.java, +     * @return AssertionError the prepared AssertionError instance, +++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +     * @param disposable the resource to dispose if the drain terminates, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeFlatMapCompletable.java, + * @param <T> the value type of the source MaybeSource, +++ b/src/main/java/io/reactivex/internal/operators/single/SingleFlatMapCompletable.java, + * @param <T> the value type of the source SingleSource, +++ b/src/main/java/io/reactivex/internal/queue/SpscArrayQueue.java, + * @param <E> the element type of the queue, +++ b/src/main/java/io/reactivex/observers/BaseTestConsumer.java, +     * @return AssertionError the prepared AssertionError instance, +++ b/src/main/java/io/reactivex/subscribers/DefaultSubscriber.java, +     * @param n the request amount, positive, +++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +     * @param disposable the resource to dispose if the drain terminates, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeFlatMapCompletable.java, + * @param <T> the value type of the source MaybeSource, +++ b/src/main/java/io/reactivex/internal/operators/single/SingleFlatMapCompletable.java, + * @param <T> the value type of the source SingleSource, +++ b/src/main/java/io/reactivex/internal/queue/SpscArrayQueue.java, + * @param <E> the element type of the queue, +++ b/src/main/java/io/reactivex/observers/BaseTestConsumer.java, +     * @return AssertionError the prepared AssertionError instance, +++ b/src/main/java/io/reactivex/subscribers/DefaultSubscriber.java, +     * @param n the request amount, positive, +++ b/src/test/java/io/reactivex/flowable/FlowableEventStream.java, +         * Construct an event with the provided parameters., +         * @param type the event type, +         * @param instanceId the instance identifier, +++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +     * @param disposable the resource to dispose if the drain terminates, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeFlatMapCompletable.java, + * @param <T> the value type of the source MaybeSource, +++ b/src/main/java/io/reactivex/internal/operators/single/SingleFlatMapCompletable.java, + * @param <T> the value type of the source SingleSource, +++ b/src/main/java/io/reactivex/internal/queue/SpscArrayQueue.java, + * @param <E> the element type of the queue, +++ b/src/main/java/io/reactivex/observers/BaseTestConsumer.java, +     * @return AssertionError the prepared AssertionError instance, +++ b/src/main/java/io/reactivex/subscribers/DefaultSubscriber.java, +     * @param n the request amount, positive, +++ b/src/test/java/io/reactivex/flowable/FlowableEventStream.java, +         * Construct an event with the provided parameters., +         * @param type the event type, +         * @param instanceId the instance identifier, +++ b/src/test/java/io/reactivex/flowable/FlowableTests.java, +     * @throws InterruptedException if the await is interrupted, +++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +     * @param disposable the resource to dispose if the drain terminates, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeFlatMapCompletable.java, + * @param <T> the value type of the source MaybeSource, +++ b/src/main/java/io/reactivex/internal/operators/single/SingleFlatMapCompletable.java, + * @param <T> the value type of the source SingleSource, +++ b/src/main/java/io/reactivex/internal/queue/SpscArrayQueue.java, + * @param <E> the element type of the queue, +++ b/src/main/java/io/reactivex/observers/BaseTestConsumer.java, +     * @return AssertionError the prepared AssertionError instance, +++ b/src/main/java/io/reactivex/subscribers/DefaultSubscriber.java, +     * @param n the request amount, positive, +++ b/src/test/java/io/reactivex/flowable/FlowableEventStream.java, +         * Construct an event with the provided parameters., +         * @param type the event type, +         * @param instanceId the instance identifier, +++ b/src/test/java/io/reactivex/flowable/FlowableTests.java, +     * @throws InterruptedException if the await is interrupted, +++ b/src/test/java/io/reactivex/internal/operators/flowable/BlockingFlowableNextTest.java, +     * @throws Throwable some method call is declared throws, +++ b/src/main/java/io/reactivex/internal/observers/QueueDrainObserver.java, +     * @param disposable the resource to dispose if the drain terminates, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeFlatMapCompletable.java, + * @param <T> the value type of the source MaybeSource]