[+++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/RxImplicits.scala, +        val characters = Observable.zip[String, String, Character](colors, names, Character.apply _), +        val characters = Observable.zip[Int, String, String, Character](numbers, colors, names, Character.apply _), +        val characters = Observable.zip[Int, String, String, Boolean, Character](numbers, colors, names, isLeader, Character.apply _), +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/RxImplicits.scala, +        val characters = Observable.zip[String, String, Character](colors, names, Character.apply _), +        val characters = Observable.zip[Int, String, String, Character](numbers, colors, names, Character.apply _), +        val characters = Observable.zip[Int, String, String, Boolean, Character](numbers, colors, names, isLeader, Character.apply _), +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * @param zipFunction, +    public static <R> Observable<R> zip(Observable<Observable<?>> ws, final FuncN<? extends R> zipFunction) {, +                return create(OperationZip.zip(wsList, zipFunction));, +    public static <R> Observable<R> zip(Collection<Observable<?>> ws, FuncN<? extends R> zipFunction) {, +        return create(OperationZip.zip(ws, zipFunction));]