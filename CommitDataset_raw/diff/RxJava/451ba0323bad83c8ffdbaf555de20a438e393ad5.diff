[+++ b/language-adaptors/rxjava-clojure/build.gradle, +    compile 'org.clojure:clojure:1.5.+', +++ b/language-adaptors/rxjava-clojure/build.gradle, +    compile 'org.clojure:clojure:1.5.+', +++ b/language-adaptors/rxjava-groovy/build.gradle, +    compile 'org.codehaus.groovy:groovy:1.8.8', +++ b/language-adaptors/rxjava-clojure/build.gradle, +    compile 'org.clojure:clojure:1.5.+', +++ b/language-adaptors/rxjava-groovy/build.gradle, +    compile 'org.codehaus.groovy:groovy:1.8.8', +++ b/language-adaptors/rxjava-scala/build.gradle, +    compile 'org.scala-lang:scala-library:2.10.0', +    compile 'org.scala-lang:scala-reflect:2.10.0', +    compile 'org.scalatest:scalatest_2.10:1.9.1', +++ b/language-adaptors/rxjava-clojure/build.gradle, +    compile 'org.clojure:clojure:1.5.+', +++ b/language-adaptors/rxjava-groovy/build.gradle, +    compile 'org.codehaus.groovy:groovy:1.8.8', +++ b/language-adaptors/rxjava-scala/build.gradle, +    compile 'org.scala-lang:scala-library:2.10.0', +    compile 'org.scala-lang:scala-reflect:2.10.0', +    compile 'org.scalatest:scalatest_2.10:1.9.1', +++ b/rxjava-core/src/main/java/rx/observables/Observable.java, +import rx.observables.operations.OperationConcat;, +     * Combines the objects emitted by two or more Observables, and emits the result as a single Observable, , +     * by using the <code>concat</code> method., +     * , +     * @param source, +     *           a series of Observables that emit sequences of items, +     * @return a Observable that emits a sequence of elements that are the result of flattening the, +     *         output from the <code>source</code> Observables, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229099(v=vs.103).aspx">MSDN: Observable.Merge Method</a>, +     */, +    public static <T> Observable<T> concat(Observable<T>... source) {, +        return create(OperationConcat.concat(source));, +    }, +    , +    /**, +++ b/language-adaptors/rxjava-clojure/build.gradle, +    compile 'org.clojure:clojure:1.5.+', +++ b/language-adaptors/rxjava-groovy/build.gradle, +    compile 'org.codehaus.groovy:groovy:1.8.8', +++ b/language-adaptors/rxjava-scala/build.gradle, +    compile 'org.scala-lang:scala-library:2.10.0', +    compile 'org.scala-lang:scala-reflect:2.10.0', +    compile 'org.scalatest:scalatest_2.10:1.9.1', +++ b/rxjava-core/src/main/java/rx/observables/Observable.java, +import rx.observables.operations.OperationConcat;, +     * Combines the objects emitted by two or more Observables, and emits the result as a single Observable, , +     * by using the <code>concat</code> method., +     * , +     * @param source, +     *           a series of Observables that emit sequences of items, +     * @return a Observable that emits a sequence of elements that are the result of flattening the, +     *         output from the <code>source</code> Observables, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229099(v=vs.103).aspx">MSDN: Observable.Merge Method</a>, +     */, +    public static <T> Observable<T> concat(Observable<T>... source) {, +        return create(OperationConcat.concat(source));, +    }, +    , +    /**, +++ b/rxjava-core/src/main/java/rx/observables/operations/OperationConcat.java, +/**, + * Copyright 2013 Netflix, Inc., + * , + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + * , + * http://www.apache.org/licenses/LICENSE-2.0, + * , + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package rx.observables.operations;, +, +, +import static org.junit.Assert.fail;, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.never;, +import static org.mockito.Mockito.times;, +import static org.mockito.Mockito.verify;, +, +import java.lang.reflect.Array;, +import java.util.ArrayList;, +import java.util.List;, +import java.util.concurrent.CountDownLatch;, +, +import org.junit.Assert;, +import org.junit.Before;, +import org.junit.Test;, +, +import rx.observables.Observable;, +import rx.observables.Observer;, +import rx.observables.Subscription;, +import rx.util.AtomicObservableSubscription;]