[+++ b/src/main/java/rx/internal/operators/OperatorTake.java, +            int count;, +            boolean completed;, +                    completed = true;, +                    completed = true;, +                    try {, +                    } finally {, +                        unsubscribe();, +                    }, +                    boolean stop = ++count >= limit;, +                    if (stop && !completed) {, +                        completed = true;, +                        try {, +                        } finally {, +            }, +++ b/src/main/java/rx/internal/operators/OperatorTake.java, +            int count;, +            boolean completed;, +                    completed = true;, +                    completed = true;, +                    try {, +                    } finally {, +                        unsubscribe();, +                    }, +                    boolean stop = ++count >= limit;, +                    if (stop && !completed) {, +                        completed = true;, +                        try {, +                        } finally {, +            }, +++ b/src/main/java/rx/internal/util/atomic/MpscLinkedAtomicQueue.java, +            throw new NullPointerException("null elements not allowed");, +++ b/src/main/java/rx/internal/operators/OperatorTake.java, +            int count;, +            boolean completed;, +                    completed = true;, +                    completed = true;, +                    try {, +                    } finally {, +                        unsubscribe();, +                    }, +                    boolean stop = ++count >= limit;, +                    if (stop && !completed) {, +                        completed = true;, +                        try {, +                        } finally {, +            }, +++ b/src/main/java/rx/internal/util/atomic/MpscLinkedAtomicQueue.java, +            throw new NullPointerException("null elements not allowed");, +++ b/src/main/java/rx/internal/util/atomic/SpscLinkedAtomicQueue.java, +            throw new NullPointerException("null elements not allowed");, +++ b/src/main/java/rx/internal/operators/OperatorTake.java, +            int count;, +            boolean completed;, +                    completed = true;, +                    completed = true;, +                    try {, +                    } finally {, +                        unsubscribe();, +                    }, +                    boolean stop = ++count >= limit;, +                    if (stop && !completed) {, +                        completed = true;, +                        try {, +                        } finally {, +            }, +++ b/src/main/java/rx/internal/util/atomic/MpscLinkedAtomicQueue.java, +            throw new NullPointerException("null elements not allowed");, +++ b/src/main/java/rx/internal/util/atomic/SpscLinkedAtomicQueue.java, +            throw new NullPointerException("null elements not allowed");, +++ b/src/main/java/rx/internal/util/unsafe/MpmcArrayQueue.java, +    private final static long P_INDEX_OFFSET = UnsafeAccess.addressOf(MpmcArrayQueueProducerField.class, "producerIndex");, +    private final static long C_INDEX_OFFSET = UnsafeAccess.addressOf(MpmcArrayQueueConsumerField.class, "consumerIndex");, +++ b/src/main/java/rx/internal/operators/OperatorTake.java, +            int count;, +            boolean completed;, +                    completed = true;, +                    completed = true;, +                    try {, +                    } finally {, +                        unsubscribe();, +                    }, +                    boolean stop = ++count >= limit;, +                    if (stop && !completed) {, +                        completed = true;, +                        try {, +                        } finally {, +            }, +++ b/src/main/java/rx/internal/util/atomic/MpscLinkedAtomicQueue.java, +            throw new NullPointerException("null elements not allowed");, +++ b/src/main/java/rx/internal/util/atomic/SpscLinkedAtomicQueue.java, +            throw new NullPointerException("null elements not allowed");, +++ b/src/main/java/rx/internal/util/unsafe/MpmcArrayQueue.java, +    private final static long P_INDEX_OFFSET = UnsafeAccess.addressOf(MpmcArrayQueueProducerField.class, "producerIndex");, +    private final static long C_INDEX_OFFSET = UnsafeAccess.addressOf(MpmcArrayQueueConsumerField.class, "consumerIndex");, +++ b/src/main/java/rx/internal/util/unsafe/MpscLinkedQueue.java, +            throw new NullPointerException("null elements not allowed");, +++ b/src/main/java/rx/internal/operators/OperatorTake.java, +            int count;, +            boolean completed;]