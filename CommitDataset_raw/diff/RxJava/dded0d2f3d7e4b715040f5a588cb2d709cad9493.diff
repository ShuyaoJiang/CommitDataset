[+++ b/src/main/java/rx/Observable.java, +     * termination if you have set {@code disposeEagerly} to {@code true} and unsubscription does not occur, +     * before termination. Otherwise resource disposal will occur on unsubscription.  Eager disposal is, +     * particularly appropriate for a synchronous Observable that resuses resources. {@code disposeAction} will, +     * only be called once per subscription., +     * @warn "Backpressure Support" section missing from javadoc, +     *            if {@code true} then disposal will happen either on unsubscription or just before emission of , +     *            a terminal event ({@code onComplete} or {@code onError})., +     * Merges the specified Observable into this Observable sequence by using the {@code resultSelector}, +     * function only when the source Observable (this instance) emits an item., +     * <p>, +     * <img width="640" height="380" src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/withLatestFrom.png" alt="">, +     * @warn "Backpressure Support" section missing from javadoc, +     * @warn "Scheduler" section missing from javadoc, +     * @param other, +     *            the other Observable, +     * @param resultSelector, +     *            the function to call when this Observable emits an item and the other Observable has already, +     *            emitted an item, to generate the item to be emitted by the resulting Observable, +     * @return an Observable that merges the specified Observable into this Observable by using the, +     *         {@code resultSelector} function only when the source Observable sequence (this instance) emits an, +     *         item, +     * @Experimental The behavior of this can change at any time., +     * @since (if this graduates from Experimental/Beta to supported, replace this parenthetical with the release number), +     * @see <a href="http://reactivex.io/documentation/operators/combinelatest.html">ReactiveX operators documentation: CombineLatest</a>, +++ b/src/main/java/rx/Observable.java, +     * termination if you have set {@code disposeEagerly} to {@code true} and unsubscription does not occur, +     * before termination. Otherwise resource disposal will occur on unsubscription.  Eager disposal is, +     * particularly appropriate for a synchronous Observable that resuses resources. {@code disposeAction} will, +     * only be called once per subscription., +     * @warn "Backpressure Support" section missing from javadoc, +     *            if {@code true} then disposal will happen either on unsubscription or just before emission of , +     *            a terminal event ({@code onComplete} or {@code onError})., +     * Merges the specified Observable into this Observable sequence by using the {@code resultSelector}, +     * function only when the source Observable (this instance) emits an item., +     * <p>, +     * <img width="640" height="380" src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/withLatestFrom.png" alt="">, +     * @warn "Backpressure Support" section missing from javadoc, +     * @warn "Scheduler" section missing from javadoc, +     * @param other, +     *            the other Observable, +     * @param resultSelector, +     *            the function to call when this Observable emits an item and the other Observable has already, +     *            emitted an item, to generate the item to be emitted by the resulting Observable, +     * @return an Observable that merges the specified Observable into this Observable by using the, +     *         {@code resultSelector} function only when the source Observable sequence (this instance) emits an, +     *         item, +     * @Experimental The behavior of this can change at any time., +     * @since (if this graduates from Experimental/Beta to supported, replace this parenthetical with the release number), +     * @see <a href="http://reactivex.io/documentation/operators/combinelatest.html">ReactiveX operators documentation: CombineLatest</a>, +++ b/src/main/java/rx/observers/SerializedSubscriber.java, +, +     *, +     * @param s, +     *          the subscriber to wrap and serialize, +     * @param shareSubscriptions, +     *          if {@code true}, the same subscription list is shared between this subscriber and {@code s}., +     * @since 1.0.7, +++ b/src/main/java/rx/Observable.java, +     * termination if you have set {@code disposeEagerly} to {@code true} and unsubscription does not occur, +     * before termination. Otherwise resource disposal will occur on unsubscription.  Eager disposal is, +     * particularly appropriate for a synchronous Observable that resuses resources. {@code disposeAction} will, +     * only be called once per subscription., +     * @warn "Backpressure Support" section missing from javadoc, +     *            if {@code true} then disposal will happen either on unsubscription or just before emission of , +     *            a terminal event ({@code onComplete} or {@code onError})., +     * Merges the specified Observable into this Observable sequence by using the {@code resultSelector}, +     * function only when the source Observable (this instance) emits an item., +     * <p>, +     * <img width="640" height="380" src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/withLatestFrom.png" alt="">, +     * @warn "Backpressure Support" section missing from javadoc, +     * @warn "Scheduler" section missing from javadoc, +     * @param other, +     *            the other Observable, +     * @param resultSelector, +     *            the function to call when this Observable emits an item and the other Observable has already, +     *            emitted an item, to generate the item to be emitted by the resulting Observable, +     * @return an Observable that merges the specified Observable into this Observable by using the, +     *         {@code resultSelector} function only when the source Observable sequence (this instance) emits an, +     *         item, +     * @Experimental The behavior of this can change at any time., +     * @since (if this graduates from Experimental/Beta to supported, replace this parenthetical with the release number), +     * @see <a href="http://reactivex.io/documentation/operators/combinelatest.html">ReactiveX operators documentation: CombineLatest</a>, +++ b/src/main/java/rx/observers/SerializedSubscriber.java, +, +     *, +     * @param s, +     *          the subscriber to wrap and serialize, +     * @param shareSubscriptions, +     *          if {@code true}, the same subscription list is shared between this subscriber and {@code s}., +     * @since 1.0.7, +++ b/src/main/java/rx/subscriptions/CompositeSubscription.java, +, +     *, +     * @since 1.0.7]