[+++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +import io.reactivex.annotations.NonNull;, +    @Nullable, +    @Nullable, +    public FlowableCombineLatest(@NonNull Publisher<? extends T>[] array,, +                    @NonNull Function<? super Object[], ? extends R> combiner,, +    public FlowableCombineLatest(@NonNull Iterable<? extends Publisher<? extends T>> iterable,, +                    @NonNull Function<? super Object[], ? extends R> combiner,, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +import io.reactivex.annotations.NonNull;, +    @Nullable, +    @Nullable, +    public FlowableCombineLatest(@NonNull Publisher<? extends T>[] array,, +                    @NonNull Function<? super Object[], ? extends R> combiner,, +    public FlowableCombineLatest(@NonNull Iterable<? extends Publisher<? extends T>> iterable,, +                    @NonNull Function<? super Object[], ? extends R> combiner,, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableWithLatestFromMany.java, +import io.reactivex.annotations.NonNull;, +import io.reactivex.annotations.Nullable;, +    @Nullable, +    @Nullable, +    public FlowableWithLatestFromMany(@NonNull Publisher<T> source, @NonNull Publisher<?>[] otherArray, Function<? super Object[], R> combiner) {, +    public FlowableWithLatestFromMany(@NonNull Publisher<T> source, @NonNull Iterable<? extends Publisher<?>> otherIterable, @NonNull Function<? super Object[], R> combiner) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +import io.reactivex.annotations.NonNull;, +    @Nullable, +    @Nullable, +    public FlowableCombineLatest(@NonNull Publisher<? extends T>[] array,, +                    @NonNull Function<? super Object[], ? extends R> combiner,, +    public FlowableCombineLatest(@NonNull Iterable<? extends Publisher<? extends T>> iterable,, +                    @NonNull Function<? super Object[], ? extends R> combiner,, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableWithLatestFromMany.java, +import io.reactivex.annotations.NonNull;, +import io.reactivex.annotations.Nullable;, +    @Nullable, +    @Nullable, +    public FlowableWithLatestFromMany(@NonNull Publisher<T> source, @NonNull Publisher<?>[] otherArray, Function<? super Object[], R> combiner) {, +    public FlowableWithLatestFromMany(@NonNull Publisher<T> source, @NonNull Iterable<? extends Publisher<?>> otherIterable, @NonNull Function<? super Object[], R> combiner) {, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeFlatMapIterableObservable.java, +            if (outputFused) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +import io.reactivex.annotations.NonNull;, +    @Nullable, +    @Nullable, +    public FlowableCombineLatest(@NonNull Publisher<? extends T>[] array,, +                    @NonNull Function<? super Object[], ? extends R> combiner,, +    public FlowableCombineLatest(@NonNull Iterable<? extends Publisher<? extends T>> iterable,, +                    @NonNull Function<? super Object[], ? extends R> combiner,, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableWithLatestFromMany.java, +import io.reactivex.annotations.NonNull;, +import io.reactivex.annotations.Nullable;, +    @Nullable, +    @Nullable, +    public FlowableWithLatestFromMany(@NonNull Publisher<T> source, @NonNull Publisher<?>[] otherArray, Function<? super Object[], R> combiner) {, +    public FlowableWithLatestFromMany(@NonNull Publisher<T> source, @NonNull Iterable<? extends Publisher<?>> otherIterable, @NonNull Function<? super Object[], R> combiner) {, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeFlatMapIterableObservable.java, +            if (outputFused) {, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableWithLatestFromMany.java, +import io.reactivex.annotations.NonNull;, +import io.reactivex.annotations.Nullable;, +    @Nullable, +    @Nullable, +    @NonNull, +    public ObservableWithLatestFromMany(@NonNull ObservableSource<T> source, @NonNull ObservableSource<?>[] otherArray, @NonNull Function<? super Object[], R> combiner) {, +    public ObservableWithLatestFromMany(@NonNull ObservableSource<T> source, @NonNull Iterable<? extends ObservableSource<?>> otherIterable, @NonNull Function<? super Object[], R> combiner) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +import io.reactivex.annotations.NonNull;, +    @Nullable, +    @Nullable, +    public FlowableCombineLatest(@NonNull Publisher<? extends T>[] array,, +                    @NonNull Function<? super Object[], ? extends R> combiner,, +    public FlowableCombineLatest(@NonNull Iterable<? extends Publisher<? extends T>> iterable,, +                    @NonNull Function<? super Object[], ? extends R> combiner,, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableWithLatestFromMany.java, +import io.reactivex.annotations.NonNull;, +import io.reactivex.annotations.Nullable;, +    @Nullable, +    @Nullable, +    public FlowableWithLatestFromMany(@NonNull Publisher<T> source, @NonNull Publisher<?>[] otherArray, Function<? super Object[], R> combiner) {, +    public FlowableWithLatestFromMany(@NonNull Publisher<T> source, @NonNull Iterable<? extends Publisher<?>> otherIterable, @NonNull Function<? super Object[], R> combiner) {, +++ b/src/main/java/io/reactivex/internal/operators/maybe/MaybeFlatMapIterableObservable.java, +            if (outputFused) {, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableWithLatestFromMany.java, +import io.reactivex.annotations.NonNull;, +import io.reactivex.annotations.Nullable;, +    @Nullable, +    @Nullable, +    @NonNull, +    public ObservableWithLatestFromMany(@NonNull ObservableSource<T> source, @NonNull ObservableSource<?>[] otherArray, @NonNull Function<? super Object[], R> combiner) {, +    public ObservableWithLatestFromMany(@NonNull ObservableSource<T> source, @NonNull Iterable<? extends ObservableSource<?>> otherIterable, @NonNull Function<? super Object[], R> combiner) {, +++ b/src/main/java/io/reactivex/internal/schedulers/ComputationScheduler.java, +            return poolWorker.scheduleActual(action, 0, TimeUnit.MILLISECONDS, serial);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java, +import io.reactivex.annotations.NonNull;, +    @Nullable, +    @Nullable, +    public FlowableCombineLatest(@NonNull Publisher<? extends T>[] array,, +                    @NonNull Function<? super Object[], ? extends R> combiner,, +    public FlowableCombineLatest(@NonNull Iterable<? extends Publisher<? extends T>> iterable,, +                    @NonNull Function<? super Object[], ? extends R> combiner,]