[+++ b/src/main/java/rx/subscriptions/Subscriptions.java, +     * Returns a {@link Subscription} to which {@code unsubscribe} does nothing except to change, +     * {@code isUnsubscribed} to {@code true}. It's stateful and {@code isUnsubscribed} indicates if, +     * {@code unsubscribe} is called, which is different from {@link #unsubscribed()}., +     * @return a {@link Subscription} to which {@code unsubscribe} does nothing except to change, +     *         {@code isUnsubscribed} to {@code true}, +     * Returns a {@link Subscription} to which {@code unsubscribe} does nothing, as it is already unsubscribed., +     * Its {@code isUnsubscribed} always returns {@code true}, which is different from {@link #empty()}., +     * @return a {@link Subscription} to which {@code unsubscribe} does nothing, as it is already unsubscribed, +     * @since (if this graduates from Experimental/Beta to supported, replace this parenthetical with the release number), +++ b/src/main/java/rx/subscriptions/Subscriptions.java, +     * Returns a {@link Subscription} to which {@code unsubscribe} does nothing except to change, +     * {@code isUnsubscribed} to {@code true}. It's stateful and {@code isUnsubscribed} indicates if, +     * {@code unsubscribe} is called, which is different from {@link #unsubscribed()}., +     * @return a {@link Subscription} to which {@code unsubscribe} does nothing except to change, +     *         {@code isUnsubscribed} to {@code true}, +     * Returns a {@link Subscription} to which {@code unsubscribe} does nothing, as it is already unsubscribed., +     * Its {@code isUnsubscribed} always returns {@code true}, which is different from {@link #empty()}., +     * @return a {@link Subscription} to which {@code unsubscribe} does nothing, as it is already unsubscribed, +     * @since (if this graduates from Experimental/Beta to supported, replace this parenthetical with the release number), +++ b/src/test/java/rx/subjects/ReplaySubjectConcurrencyTest.java]