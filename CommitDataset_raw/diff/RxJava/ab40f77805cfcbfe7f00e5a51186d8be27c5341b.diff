[+++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperationTimeInterval;, +import rx.util.TimeInterval;, +     * Records the time interval between consecutive elements in an observable sequence., +     *, +     * @return An observable sequence with time interval information on elements., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh212107(v=vs.103).aspx">MSDN: Observable.TimeInterval</a>, +     */, +    public Observable<TimeInterval<T>> timeInterval() {, +        return create(OperationTimeInterval.timeInterval(this));, +    }, +, +    /**, +     * Records the time interval between consecutive elements in an observable, +     * sequence, using the specified scheduler to compute time intervals., +     *, +     * @param scheduler, +     *            Scheduler used to compute time intervals., +     *, +     * @return An observable sequence with time interval information on elements., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh212107(v=vs.103).aspx">MSDN: Observable.TimeInterval</a>, +     */, +    public Observable<TimeInterval<T>> timeInterval(Scheduler scheduler) {, +        return create(OperationTimeInterval.timeInterval(this, scheduler));, +    }, +, +    /**, +++ b/rxjava-core/src/main/java/rx/Observable.java, +import rx.operators.OperationTimeInterval;, +import rx.util.TimeInterval;, +     * Records the time interval between consecutive elements in an observable sequence., +     *, +     * @return An observable sequence with time interval information on elements., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh212107(v=vs.103).aspx">MSDN: Observable.TimeInterval</a>, +     */, +    public Observable<TimeInterval<T>> timeInterval() {, +        return create(OperationTimeInterval.timeInterval(this));, +    }, +, +    /**, +     * Records the time interval between consecutive elements in an observable, +     * sequence, using the specified scheduler to compute time intervals., +     *, +     * @param scheduler, +     *            Scheduler used to compute time intervals., +     *, +     * @return An observable sequence with time interval information on elements., +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh212107(v=vs.103).aspx">MSDN: Observable.TimeInterval</a>, +     */, +    public Observable<TimeInterval<T>> timeInterval(Scheduler scheduler) {, +        return create(OperationTimeInterval.timeInterval(this, scheduler));, +    }, +, +    /**, +++ b/rxjava-core/src/main/java/rx/operators/OperationTimeInterval.java, +/**, + * Copyright 2013 Netflix, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package rx.operators;, +, +import static org.mockito.Mockito.inOrder;, +import static org.mockito.Mockito.times;, +, +import java.util.concurrent.TimeUnit;, +, +import org.junit.Before;, +import org.junit.Test;, +import org.mockito.InOrder;, +import org.mockito.Mock;, +import org.mockito.MockitoAnnotations;, +, +import rx.Observable;, +import rx.Observable.OnSubscribeFunc;, +import rx.Observer;, +import rx.Scheduler;, +import rx.Subscription;, +import rx.concurrency.Schedulers;, +import rx.concurrency.TestScheduler;, +import rx.subjects.PublishSubject;, +import rx.util.TimeInterval;, +, +/**, + * Records the time interval between consecutive elements in an observable sequence., + */, +public class OperationTimeInterval {, +, +    public static <T> OnSubscribeFunc<TimeInterval<T>> timeInterval(, +            Observable<? extends T> source) {]