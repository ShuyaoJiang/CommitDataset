[+++ b/language-adaptors/rxjava-scala/README.md, +You can build the documentation by running `./gradlew scaladoc` in the RxJava root directory., +Then navigate to `RxJava/language-adaptors/rxjava-scala/build/docs/scaladoc/index.html` to display it., +++ b/language-adaptors/rxjava-scala/README.md, +You can build the documentation by running `./gradlew scaladoc` in the RxJava root directory., +Then navigate to `RxJava/language-adaptors/rxjava-scala/build/docs/scaladoc/index.html` to display it., +++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +  @Test def materializeExample1() {, +      o.materialize.subscribe(n => n match {, +      }), +    , +    val o2 = Observable(new IOException("Oops")), +    waitFor(o1), +    waitFor(o2), +  }, +  , +  @Test def materializeExample2() {, +    import Notification._, +    Observable(1, 2, 3).materialize.subscribe(n => n match {, +      case OnNext(v) => println("Got value " + v), +      case OnCompleted() => println("Completed"), +      case OnError(err) => println("Error: " + err.getMessage), +    }), +++ b/language-adaptors/rxjava-scala/README.md, +You can build the documentation by running `./gradlew scaladoc` in the RxJava root directory., +Then navigate to `RxJava/language-adaptors/rxjava-scala/build/docs/scaladoc/index.html` to display it., +++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +  @Test def materializeExample1() {, +      o.materialize.subscribe(n => n match {, +      }), +    , +    val o2 = Observable(new IOException("Oops")), +    waitFor(o1), +    waitFor(o2), +  }, +  , +  @Test def materializeExample2() {, +    import Notification._, +    Observable(1, 2, 3).materialize.subscribe(n => n match {, +      case OnNext(v) => println("Got value " + v), +      case OnCompleted() => println("Completed"), +      case OnError(err) => println("Error: " + err.getMessage), +    }), +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/ImplicitFunctionConversions.scala, + * These function conversions convert between Scala functions and Rx `Func`s and `Action`s., + * Most RxScala users won't need them, but they might be useful if one wants to use, + * the `rx.Observable` directly instead of using `rx.lang.scala.Observable` or if one wants, + * to use a Java library taking/returning `Func`s and `Action`s., +++ b/language-adaptors/rxjava-scala/README.md, +You can build the documentation by running `./gradlew scaladoc` in the RxJava root directory., +Then navigate to `RxJava/language-adaptors/rxjava-scala/build/docs/scaladoc/index.html` to display it., +++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +  @Test def materializeExample1() {, +      o.materialize.subscribe(n => n match {, +      }), +    , +    val o2 = Observable(new IOException("Oops")), +    waitFor(o1), +    waitFor(o2), +  }, +  , +  @Test def materializeExample2() {, +    import Notification._, +    Observable(1, 2, 3).materialize.subscribe(n => n match {, +      case OnNext(v) => println("Got value " + v), +      case OnCompleted() => println("Completed"), +      case OnError(err) => println("Error: " + err.getMessage), +    }), +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/ImplicitFunctionConversions.scala, + * These function conversions convert between Scala functions and Rx `Func`s and `Action`s., + * Most RxScala users won't need them, but they might be useful if one wants to use, + * the `rx.Observable` directly instead of using `rx.lang.scala.Observable` or if one wants, + * to use a Java library taking/returning `Func`s and `Action`s., +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Notification.scala, +/**, + * Emitted by Observables returned by [[rx.lang.scala.Observable.materialize]]., + */, +/**, + * Provides pattern matching support for Notifications., + * , + * Example:, + * {{{, + * import Notification._, + * Observable(1, 2, 3).materialize.subscribe(n => n match {, + *   case OnNext(v) => println("Got value " + v), + *   case OnCompleted() => println("Completed"), + *   case OnError(err) => println("Error: " + err.getMessage), + * }), + * }}}, + */, +++ b/language-adaptors/rxjava-scala/README.md, +You can build the documentation by running `./gradlew scaladoc` in the RxJava root directory., +Then navigate to `RxJava/language-adaptors/rxjava-scala/build/docs/scaladoc/index.html` to display it., +++ b/language-adaptors/rxjava-scala/src/examples/scala/rx/lang/scala/examples/RxScalaDemo.scala, +  @Test def materializeExample1() {, +      o.materialize.subscribe(n => n match {, +      }), +    , +    val o2 = Observable(new IOException("Oops")), +    waitFor(o1)]