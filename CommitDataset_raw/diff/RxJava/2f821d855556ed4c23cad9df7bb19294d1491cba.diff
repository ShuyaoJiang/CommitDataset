[+++ b/src/main/java/rx/internal/operators/OperatorMap.java, +import rx.exceptions.Exceptions;, +                    Exceptions.throwIfFatal(e);, +++ b/src/main/java/rx/internal/operators/OperatorMap.java, +import rx.exceptions.Exceptions;, +                    Exceptions.throwIfFatal(e);, +++ b/src/test/java/rx/internal/operators/OperatorMapTest.java, +, +    @Test(expected = OnErrorNotImplementedException.class), +    public void testShouldNotSwallowOnErrorNotImplementedException() {, +        Observable.just("a", "b").flatMap(new Func1<String, Observable<String>>() {, +            @Override, +            public Observable<String> call(String s) {, +                return Observable.just(s + "1", s + "2");, +            }, +        }).flatMap(new Func1<String, Observable<String>>() {, +            @Override, +            public Observable<String> call(String s) {, +                return Observable.error(new Exception("test"));, +            }, +        }).forEach(new Action1<String>() {, +            @Override, +            public void call(String s) {, +                System.out.println(s);, +            }, +        });, +    }]