[+++ b/src/main/java/rx/internal/operators/TakeLastQueueProducer.java, +                        if (subscriber.isUnsubscribed()), +                            return;, +++ b/src/main/java/rx/internal/operators/TakeLastQueueProducer.java, +                        if (subscriber.isUnsubscribed()), +                            return;, +++ b/src/test/java/rx/internal/operators/OperatorTakeLastTest.java, +import java.util.concurrent.atomic.AtomicInteger;, +    , +    @Test, +    public void testUnsubscribeTakesEffectEarlyOnFastPath() {, +        final AtomicInteger count = new AtomicInteger();, +        Observable.range(0, 100000).takeLast(100000).subscribe(new Subscriber<Integer>() {, +, +            @Override, +            public void onStart() {, +                request(Long.MAX_VALUE);, +            }, +, +            @Override, +            public void onCompleted() {, +, +            }, +, +            @Override, +            public void onError(Throwable e) {, +            }, +, +            @Override, +            public void onNext(Integer integer) {, +                count.incrementAndGet();, +                unsubscribe();, +            }, +        });, +        assertEquals(1,count.get());, +    }]