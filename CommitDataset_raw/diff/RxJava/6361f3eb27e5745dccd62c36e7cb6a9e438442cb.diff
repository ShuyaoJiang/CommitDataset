[+++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +    Observable(, +      (subscriber: Subscriber[T]) => {, +        val s = func(subscriber), +        if (s != null && s != subscriber) {, +          subscriber.add(s), +      }, +    ), +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +    Observable(, +      (subscriber: Subscriber[T]) => {, +        val s = func(subscriber), +        if (s != null && s != subscriber) {, +          subscriber.add(s), +      }, +    ), +++ b/language-adaptors/rxjava-scala/src/test/scala/rx/lang/scala/ObservableTest.scala, +  @Test, +  def testCreate() {, +    var called = false, +    val o = Observable.create[String](observer => {, +      observer.onNext("a"), +      observer.onNext("b"), +      observer.onNext("c"), +      observer.onCompleted(), +      Subscription {, +        called = true, +      }, +    }), +    assertEquals(List("a", "b", "c"), o.toBlocking.toList), +    assertTrue(called), +  }, +++ b/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Observable.scala, +    Observable(, +      (subscriber: Subscriber[T]) => {, +        val s = func(subscriber), +        if (s != null && s != subscriber) {, +          subscriber.add(s), +      }, +    ), +++ b/language-adaptors/rxjava-scala/src/test/scala/rx/lang/scala/ObservableTest.scala, +  @Test, +  def testCreate() {, +    var called = false, +    val o = Observable.create[String](observer => {, +      observer.onNext("a"), +      observer.onNext("b"), +      observer.onNext("c"), +      observer.onCompleted(), +      Subscription {, +        called = true, +      }, +    }), +    assertEquals(List("a", "b", "c"), o.toBlocking.toList), +    assertTrue(called), +  }, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorObserveOn.java, +                if (COUNTER_UPDATER.addAndGet(this, -vs.size) == 0) {]