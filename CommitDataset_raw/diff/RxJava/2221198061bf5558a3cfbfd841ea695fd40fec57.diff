[+++ b/rxjava-core/src/main/java/rx/Observable.java, +     * NOTE: Use {@link #create(OnSubscribeFunc)} to create an Observable instead of this constructor unless you, +     * @deprecated Being renamed to {@link #switchOnNext}, +    @Deprecated, +     * Given an Observable that emits Observables, creates a single Observable that, +     * @param sequenceOfSequences, +     *            the source Observable that emits Observables, +    public static <T> Observable<T> switchOnNext(Observable<? extends Observable<? extends T>> sequenceOfSequences) {, +        return create(OperationSwitch.switchDo(sequenceOfSequences));, +, +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * NOTE: Use {@link #create(OnSubscribeFunc)} to create an Observable instead of this constructor unless you, +     * @deprecated Being renamed to {@link #switchOnNext}, +    @Deprecated, +     * Given an Observable that emits Observables, creates a single Observable that, +     * @param sequenceOfSequences, +     *            the source Observable that emits Observables, +    public static <T> Observable<T> switchOnNext(Observable<? extends Observable<? extends T>> sequenceOfSequences) {, +        return create(OperationSwitch.switchDo(sequenceOfSequences));, +, +++ b/rxjava-core/src/main/java/rx/observables/BlockingObservable.java, +     * This is similar to {@link Observable#subscribe(Observer)}, but it blocks. Because it blocks it does]