[+++ b/rxjava-core/src/main/java/rx/Observable.java, +     * @see #longCount(), +     * Returns an Observable that counts the total number of items in the, +     * source Observable as a 64 bit long., +     * <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/count.png">, +     * , +     * @return an Observable that emits the number of counted elements of the, +     *         source Observable as its single, 64 bit long item , +     * @see <a href="https://github.com/Netflix/RxJava/wiki/Mathematical-Operators#count">RxJava Wiki: count()</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229120.aspx">MSDN: Observable.LongCount</a>, +     * @see #count(), +     */, +    public Observable<Long> longCount() {, +        return reduce(0L, new Func2<Long, T, Long>() {, +            @Override, +            public Long call(Long t1, T t2) {, +                return t1 + 1;, +            }, +        });, +    }, +    , +    /**, +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * @see #longCount(), +     * Returns an Observable that counts the total number of items in the, +     * source Observable as a 64 bit long., +     * <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/count.png">, +     * , +     * @return an Observable that emits the number of counted elements of the, +     *         source Observable as its single, 64 bit long item , +     * @see <a href="https://github.com/Netflix/RxJava/wiki/Mathematical-Operators#count">RxJava Wiki: count()</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229120.aspx">MSDN: Observable.LongCount</a>, +     * @see #count(), +     */, +    public Observable<Long> longCount() {, +        return reduce(0L, new Func2<Long, T, Long>() {, +            @Override, +            public Long call(Long t1, T t2) {, +                return t1 + 1;, +            }, +        });, +    }, +    , +    /**, +++ b/rxjava-core/src/main/java/rx/operators/OperationConcat.java, +        return new Concat<T>(sequences);, +                        if (innerSubscription != null) {, +                            innerSubscription.unsubscribe();, +                    if (innerSubscription == null) {, +                        if (innerSubscription != null), +                            innerSubscription.unsubscribe();, +                }, +++ b/rxjava-core/src/main/java/rx/Observable.java, +     * @see #longCount(), +     * Returns an Observable that counts the total number of items in the, +     * source Observable as a 64 bit long., +     * <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/count.png">, +     * , +     * @return an Observable that emits the number of counted elements of the, +     *         source Observable as its single, 64 bit long item , +     * @see <a href="https://github.com/Netflix/RxJava/wiki/Mathematical-Operators#count">RxJava Wiki: count()</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229120.aspx">MSDN: Observable.LongCount</a>, +     * @see #count(), +     */, +    public Observable<Long> longCount() {, +        return reduce(0L, new Func2<Long, T, Long>() {, +            @Override, +            public Long call(Long t1, T t2) {, +                return t1 + 1;, +            }, +        });, +    }, +    , +    /**, +++ b/rxjava-core/src/main/java/rx/operators/OperationConcat.java, +        return new Concat<T>(sequences);, +                        if (innerSubscription != null) {, +                            innerSubscription.unsubscribe();, +                    if (innerSubscription == null) {, +                        if (innerSubscription != null), +                            innerSubscription.unsubscribe();, +                }, +++ b/rxjava-core/src/test/java/rx/operators/OperationConcatTest.java, +import static org.mockito.Matchers.*;]