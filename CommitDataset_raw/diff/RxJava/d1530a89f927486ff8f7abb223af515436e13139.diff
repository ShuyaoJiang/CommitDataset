[+++ b/src/main/java/rx/Scheduler.java, + * A {@code Scheduler} is an object that schedules units of work. You can find common implementations of this, + * class in {@link Schedulers}., +/*, + * Why is this an abstract class instead of an interface?, + *, + *  : Java doesn't support extension methods and there are many overload methods needing default, + *    implementations., + *, + *  : Virtual extension methods aren't available until Java8 which RxJava will not set as a minimum target for, + *    a long time., + *, + *  : If only an interface were used Scheduler implementations would then need to extend from an, + *    AbstractScheduler pair that gives all of the functionality unless they intend on copy/pasting the, + *    functionality., + *, + *  : Without virtual extension methods even additive changes are breaking and thus severely impede library, + *    maintenance., + */]