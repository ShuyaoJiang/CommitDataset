[+++ b/src/test/java/io/reactivex/TestHelper.java, +, +    /**, +     * Number of times to loop a {@link #race(Runnable, Runnable)} invocation, +     * by default., +     */, +    public static final int RACE_DEFAULT_LOOPS = 2500;, +, +    /**, +     * Number of times to loop a {@link #race(Runnable, Runnable)} invocation, +     * in tests with race conditions requiring more runs to check., +     */, +    public static final int RACE_LONG_LOOPS = 10000;, +, +     * @see #RACE_DEFAULT_LOOPS, +     * @see #RACE_LONG_LOOPS, +     * @see #RACE_DEFAULT_LOOPS, +     * @see #RACE_LONG_LOOPS, +++ b/src/test/java/io/reactivex/TestHelper.java, +, +    /**, +     * Number of times to loop a {@link #race(Runnable, Runnable)} invocation, +     * by default., +     */, +    public static final int RACE_DEFAULT_LOOPS = 2500;, +, +    /**, +     * Number of times to loop a {@link #race(Runnable, Runnable)} invocation, +     * in tests with race conditions requiring more runs to check., +     */, +    public static final int RACE_LONG_LOOPS = 10000;, +, +     * @see #RACE_DEFAULT_LOOPS, +     * @see #RACE_LONG_LOOPS, +     * @see #RACE_DEFAULT_LOOPS, +     * @see #RACE_LONG_LOOPS, +++ b/src/test/java/io/reactivex/disposables/CompositeDisposableTest.java, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run2);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run2);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run2);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run2);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run2);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run2);, +++ b/src/test/java/io/reactivex/TestHelper.java, +, +    /**, +     * Number of times to loop a {@link #race(Runnable, Runnable)} invocation, +     * by default., +     */, +    public static final int RACE_DEFAULT_LOOPS = 2500;, +, +    /**, +     * Number of times to loop a {@link #race(Runnable, Runnable)} invocation, +     * in tests with race conditions requiring more runs to check., +     */, +    public static final int RACE_LONG_LOOPS = 10000;, +, +     * @see #RACE_DEFAULT_LOOPS, +     * @see #RACE_LONG_LOOPS, +     * @see #RACE_DEFAULT_LOOPS, +     * @see #RACE_LONG_LOOPS, +++ b/src/test/java/io/reactivex/disposables/CompositeDisposableTest.java, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run2);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run2);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run2);, +        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {, +            TestHelper.race(run, run2);]