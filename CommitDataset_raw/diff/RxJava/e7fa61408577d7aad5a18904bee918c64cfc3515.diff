[+++ b/src/main/java/rx/internal/operators/BufferUntilSubscriber.java, +    @Override, +    public boolean hasObservers() {, +        synchronized (state.guard) {, +            return state.observerRef != null;, +        }, +    }, +, +++ b/src/main/java/rx/internal/operators/BufferUntilSubscriber.java, +    @Override, +    public boolean hasObservers() {, +        synchronized (state.guard) {, +            return state.observerRef != null;, +        }, +    }, +, +++ b/src/main/java/rx/internal/operators/OperatorReplay.java, +        @Override, +        public boolean hasObservers() {, +            return this.subject.hasObservers();, +        }, +++ b/src/main/java/rx/internal/operators/BufferUntilSubscriber.java, +    @Override, +    public boolean hasObservers() {, +        synchronized (state.guard) {, +            return state.observerRef != null;, +        }, +    }, +, +++ b/src/main/java/rx/internal/operators/OperatorReplay.java, +        @Override, +        public boolean hasObservers() {, +            return this.subject.hasObservers();, +        }, +++ b/src/main/java/rx/subjects/AsyncSubject.java, +    @Override, +    public boolean hasObservers() {, +        return state.observers().length > 0;, +    }, +++ b/src/main/java/rx/internal/operators/BufferUntilSubscriber.java, +    @Override, +    public boolean hasObservers() {, +        synchronized (state.guard) {, +            return state.observerRef != null;, +        }, +    }, +, +++ b/src/main/java/rx/internal/operators/OperatorReplay.java, +        @Override, +        public boolean hasObservers() {, +            return this.subject.hasObservers();, +        }, +++ b/src/main/java/rx/subjects/AsyncSubject.java, +    @Override, +    public boolean hasObservers() {, +        return state.observers().length > 0;, +    }, +++ b/src/main/java/rx/subjects/BehaviorSubject.java, +    }, +, +    @Override, +    public boolean hasObservers() {, +        return state.observers().length > 0;, +++ b/src/main/java/rx/internal/operators/BufferUntilSubscriber.java, +    @Override, +    public boolean hasObservers() {, +        synchronized (state.guard) {, +            return state.observerRef != null;, +        }, +    }, +, +++ b/src/main/java/rx/internal/operators/OperatorReplay.java, +        @Override, +        public boolean hasObservers() {, +            return this.subject.hasObservers();, +        }, +++ b/src/main/java/rx/subjects/AsyncSubject.java, +    @Override, +    public boolean hasObservers() {, +        return state.observers().length > 0;, +    }, +++ b/src/main/java/rx/subjects/BehaviorSubject.java, +    }, +, +    @Override, +    public boolean hasObservers() {, +        return state.observers().length > 0;, +++ b/src/main/java/rx/subjects/PublishSubject.java, +, +    @Override, +    public boolean hasObservers() {, +        return state.observers().length > 0;, +    }, +++ b/src/main/java/rx/internal/operators/BufferUntilSubscriber.java, +    @Override, +    public boolean hasObservers() {, +        synchronized (state.guard) {, +            return state.observerRef != null;, +        }, +    }]