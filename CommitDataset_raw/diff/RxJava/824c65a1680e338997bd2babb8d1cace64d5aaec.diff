[+++ b/src/main/java/rx/Observable.java, +        return sequenceOfSequences.lift(OperatorSwitch.<T>instance());, +        return lift(OperatorOnBackpressureDrop.<T>instance());, +        return lift(OperatorSerialize.<T>instance());, +        return lift(OperatorToObservableList.<T>instance());, +++ b/src/main/java/rx/Observable.java, +        return sequenceOfSequences.lift(OperatorSwitch.<T>instance());, +        return lift(OperatorOnBackpressureDrop.<T>instance());, +        return lift(OperatorSerialize.<T>instance());, +        return lift(OperatorToObservableList.<T>instance());, +++ b/src/main/java/rx/internal/operators/OperatorAsObservable.java, +     * @return a singleton instance of this stateless operator., +    private OperatorAsObservable() { }, +++ b/src/main/java/rx/Observable.java, +        return sequenceOfSequences.lift(OperatorSwitch.<T>instance());, +        return lift(OperatorOnBackpressureDrop.<T>instance());, +        return lift(OperatorSerialize.<T>instance());, +        return lift(OperatorToObservableList.<T>instance());, +++ b/src/main/java/rx/internal/operators/OperatorAsObservable.java, +     * @return a singleton instance of this stateless operator., +    private OperatorAsObservable() { }, +++ b/src/main/java/rx/internal/operators/OperatorConcat.java, +     * @return a singleton instance of this stateless operator., +    private OperatorConcat() { }, +++ b/src/main/java/rx/Observable.java, +        return sequenceOfSequences.lift(OperatorSwitch.<T>instance());, +        return lift(OperatorOnBackpressureDrop.<T>instance());, +        return lift(OperatorSerialize.<T>instance());, +        return lift(OperatorToObservableList.<T>instance());, +++ b/src/main/java/rx/internal/operators/OperatorAsObservable.java, +     * @return a singleton instance of this stateless operator., +    private OperatorAsObservable() { }, +++ b/src/main/java/rx/internal/operators/OperatorConcat.java, +     * @return a singleton instance of this stateless operator., +    private OperatorConcat() { }, +++ b/src/main/java/rx/internal/operators/OperatorDematerialize.java, +     * @return a singleton instance of this stateless operator., +    private OperatorDematerialize() { }, +++ b/src/main/java/rx/Observable.java, +        return sequenceOfSequences.lift(OperatorSwitch.<T>instance());, +        return lift(OperatorOnBackpressureDrop.<T>instance());, +        return lift(OperatorSerialize.<T>instance());, +        return lift(OperatorToObservableList.<T>instance());, +++ b/src/main/java/rx/internal/operators/OperatorAsObservable.java, +     * @return a singleton instance of this stateless operator., +    private OperatorAsObservable() { }, +++ b/src/main/java/rx/internal/operators/OperatorConcat.java, +     * @return a singleton instance of this stateless operator., +    private OperatorConcat() { }, +++ b/src/main/java/rx/internal/operators/OperatorDematerialize.java, +     * @return a singleton instance of this stateless operator., +    private OperatorDematerialize() { }, +++ b/src/main/java/rx/internal/operators/OperatorMaterialize.java, +     * @return a singleton instance of this stateless operator., +    private OperatorMaterialize() { }, +++ b/src/main/java/rx/Observable.java, +        return sequenceOfSequences.lift(OperatorSwitch.<T>instance());, +        return lift(OperatorOnBackpressureDrop.<T>instance());, +        return lift(OperatorSerialize.<T>instance());, +        return lift(OperatorToObservableList.<T>instance());, +++ b/src/main/java/rx/internal/operators/OperatorAsObservable.java, +     * @return a singleton instance of this stateless operator., +    private OperatorAsObservable() { }, +++ b/src/main/java/rx/internal/operators/OperatorConcat.java, +     * @return a singleton instance of this stateless operator., +    private OperatorConcat() { }, +++ b/src/main/java/rx/internal/operators/OperatorDematerialize.java, +     * @return a singleton instance of this stateless operator., +    private OperatorDematerialize() { }, +++ b/src/main/java/rx/internal/operators/OperatorMaterialize.java, +     * @return a singleton instance of this stateless operator., +    private OperatorMaterialize() { }, +++ b/src/main/java/rx/internal/operators/OperatorMerge.java, +     * @return a singleton instance of this stateless operator., +++ b/src/main/java/rx/Observable.java, +        return sequenceOfSequences.lift(OperatorSwitch.<T>instance());, +        return lift(OperatorOnBackpressureDrop.<T>instance());, +        return lift(OperatorSerialize.<T>instance());, +        return lift(OperatorToObservableList.<T>instance());, +++ b/src/main/java/rx/internal/operators/OperatorAsObservable.java, +     * @return a singleton instance of this stateless operator., +    private OperatorAsObservable() { }, +++ b/src/main/java/rx/internal/operators/OperatorConcat.java, +     * @return a singleton instance of this stateless operator., +    private OperatorConcat() { }, +++ b/src/main/java/rx/internal/operators/OperatorDematerialize.java, +     * @return a singleton instance of this stateless operator., +    private OperatorDematerialize() { }, +++ b/src/main/java/rx/internal/operators/OperatorMaterialize.java, +     * @return a singleton instance of this stateless operator., +    private OperatorMaterialize() { }, +++ b/src/main/java/rx/internal/operators/OperatorMerge.java, +     * @return a singleton instance of this stateless operator., +++ b/src/main/java/rx/internal/operators/OperatorOnBackpressureDrop.java, +    /** Lazy initialization via inner-class holder. */, +    private static final class Holder {, +        /** A singleton instance. */, +        static final OperatorOnBackpressureDrop<Object> INSTANCE = new OperatorOnBackpressureDrop<Object>();, +    }, +    /**]