[+++ b/src/main/java/io/reactivex/Completable.java, +     * Returns a Completable that delays the subscription to the source CompletableSource by a given amount of time., +     * <p>, +     * <dl>, +     *  <dt><b>Scheduler:</b></dt>, +     *  <dd>This version of {@code delaySubscription} operates by default on the {@code computation} {@link Scheduler}.</dd>, +     * </dl>, +     *, +     * @param delay the time to delay the subscription, +     * @param unit  the time unit of {@code delay}, +     * @return a Completable that delays the subscription to the source CompletableSource by the given amount, +     * @since 2.2.3 - experimental, +     * @see <a href="http://reactivex.io/documentation/operators/delay.html">ReactiveX operators documentation: Delay</a>, +     */, +    @CheckReturnValue, +    @Experimental, +    @SchedulerSupport(SchedulerSupport.COMPUTATION), +    public final Completable delaySubscription(long delay, TimeUnit unit) {, +        return delaySubscription(delay, unit, Schedulers.computation());, +    }, +, +    /**, +     * Returns a Completable that delays the subscription to the source CompletableSource by a given amount of time,, +     * both waiting and subscribing on a given Scheduler., +     * <p>, +     * <dl>, +     *  <dt><b>Scheduler:</b></dt>, +     *  <dd>You specify which {@link Scheduler} this operator will use.</dd>, +     * </dl>, +     *, +     * @param delay     the time to delay the subscription, +     * @param unit      the time unit of {@code delay}, +     * @param scheduler the Scheduler on which the waiting and subscription will happen, +     * @return a Completable that delays the subscription to the source CompletableSource by a given, +     * amount, waiting and subscribing on the given Scheduler, +     * @since 2.2.3 - experimental, +     * @see <a href="http://reactivex.io/documentation/operators/delay.html">ReactiveX operators documentation: Delay</a>, +     */, +    @CheckReturnValue, +    @Experimental, +    @SchedulerSupport(SchedulerSupport.CUSTOM), +    public final Completable delaySubscription(long delay, TimeUnit unit, Scheduler scheduler) {, +        return Completable.timer(delay, unit, scheduler).andThen(this);, +    }, +, +    /**, +++ b/src/main/java/io/reactivex/Completable.java, +     * Returns a Completable that delays the subscription to the source CompletableSource by a given amount of time., +     * <p>, +     * <dl>, +     *  <dt><b>Scheduler:</b></dt>, +     *  <dd>This version of {@code delaySubscription} operates by default on the {@code computation} {@link Scheduler}.</dd>, +     * </dl>, +     *, +     * @param delay the time to delay the subscription, +     * @param unit  the time unit of {@code delay}, +     * @return a Completable that delays the subscription to the source CompletableSource by the given amount, +     * @since 2.2.3 - experimental, +     * @see <a href="http://reactivex.io/documentation/operators/delay.html">ReactiveX operators documentation: Delay</a>, +     */, +    @CheckReturnValue, +    @Experimental, +    @SchedulerSupport(SchedulerSupport.COMPUTATION), +    public final Completable delaySubscription(long delay, TimeUnit unit) {, +        return delaySubscription(delay, unit, Schedulers.computation());, +    }, +, +    /**, +     * Returns a Completable that delays the subscription to the source CompletableSource by a given amount of time,, +     * both waiting and subscribing on a given Scheduler., +     * <p>, +     * <dl>, +     *  <dt><b>Scheduler:</b></dt>, +     *  <dd>You specify which {@link Scheduler} this operator will use.</dd>, +     * </dl>, +     *, +     * @param delay     the time to delay the subscription, +     * @param unit      the time unit of {@code delay}, +     * @param scheduler the Scheduler on which the waiting and subscription will happen, +     * @return a Completable that delays the subscription to the source CompletableSource by a given, +     * amount, waiting and subscribing on the given Scheduler, +     * @since 2.2.3 - experimental, +     * @see <a href="http://reactivex.io/documentation/operators/delay.html">ReactiveX operators documentation: Delay</a>, +     */, +    @CheckReturnValue, +    @Experimental, +    @SchedulerSupport(SchedulerSupport.CUSTOM), +    public final Completable delaySubscription(long delay, TimeUnit unit, Scheduler scheduler) {, +        return Completable.timer(delay, unit, scheduler).andThen(this);, +    }, +, +    /**, +++ b/src/test/java/io/reactivex/internal/operators/completable/CompletableDelayTest.java, +import io.reactivex.CompletableSource;, +import io.reactivex.TestHelper;, +import io.reactivex.Completable;, +import io.reactivex.schedulers.Schedulers;, +import io.reactivex.schedulers.TestScheduler;, +, +    @Test]