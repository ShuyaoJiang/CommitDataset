[+++ b/rxjava-contrib/rxjava-android/src/main/java/rx/android/observables/AndroidObservable.java, +import static org.mockito.Mockito.verify;, +, +import org.junit.Before;, +import org.junit.Test;, +import org.junit.runner.RunWith;, +import org.mockito.Mock;, +import org.mockito.MockitoAnnotations;, +import org.robolectric.Robolectric;, +import org.robolectric.RobolectricTestRunner;, +import org.robolectric.annotation.Config;, +, +    @RunWith(RobolectricTestRunner.class), +    @Config(manifest = Config.NONE), +    public static final class AndroidObservableTest {, +, +        // support library fragments, +        private FragmentActivity fragmentActivity;, +        private android.support.v4.app.Fragment supportFragment;, +, +        // native fragments, +        private Activity activity;, +        private Fragment fragment;, +, +        @Mock, +        private Observer<String> observer;, +, +        @Before, +        public void setup() {, +            MockitoAnnotations.initMocks(this);, +            supportFragment = new android.support.v4.app.Fragment();, +            fragmentActivity = Robolectric.buildActivity(FragmentActivity.class).create().get();, +            fragmentActivity.getSupportFragmentManager().beginTransaction().add(supportFragment, null).commit();, +, +            fragment = new Fragment();, +            activity = Robolectric.buildActivity(Activity.class).create().get();, +            activity.getFragmentManager().beginTransaction().add(fragment, null).commit();, +        }, +, +        @Test, +        public void itSupportsFragmentsFromTheSupportV4Library() {, +            fromFragment(supportFragment, Observable.just("success")).subscribe(observer);, +            verify(observer).onNext("success");, +            verify(observer).onCompleted();, +        }, +, +        @Test, +        public void itSupportsNativeFragments() {, +            fromFragment(fragment, Observable.just("success")).subscribe(observer);, +            verify(observer).onNext("success");, +            verify(observer).onCompleted();, +        }, +, +        @Test(expected = IllegalArgumentException.class), +        public void itThrowsIfObjectPassedIsNotAFragment() {, +            fromFragment("not a fragment", Observable.never());, +        }, +    }, +, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/android/observables/AndroidObservable.java, +import static org.mockito.Mockito.verify;, +, +import org.junit.Before;, +import org.junit.Test;, +import org.junit.runner.RunWith;, +import org.mockito.Mock;, +import org.mockito.MockitoAnnotations;, +import org.robolectric.Robolectric;, +import org.robolectric.RobolectricTestRunner;, +import org.robolectric.annotation.Config;, +, +    @RunWith(RobolectricTestRunner.class), +    @Config(manifest = Config.NONE), +    public static final class AndroidObservableTest {, +, +        // support library fragments, +        private FragmentActivity fragmentActivity;, +        private android.support.v4.app.Fragment supportFragment;, +, +        // native fragments, +        private Activity activity;, +        private Fragment fragment;, +, +        @Mock, +        private Observer<String> observer;, +, +        @Before, +        public void setup() {, +            MockitoAnnotations.initMocks(this);, +            supportFragment = new android.support.v4.app.Fragment();, +            fragmentActivity = Robolectric.buildActivity(FragmentActivity.class).create().get();, +            fragmentActivity.getSupportFragmentManager().beginTransaction().add(supportFragment, null).commit();, +, +            fragment = new Fragment();, +            activity = Robolectric.buildActivity(Activity.class).create().get();, +            activity.getFragmentManager().beginTransaction().add(fragment, null).commit();, +        }, +, +        @Test, +        public void itSupportsFragmentsFromTheSupportV4Library() {]