[+++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMapEager.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMapEager.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublishMulticast.java, +        long emitted;, +, +                int n = current.length;, +                if (n == 0) {, +            long e = emitted;, +                        } else {, +                            n--;, +                    if (n == 0) {, +                        r = e;, +                    }, +, +                emitted = e;, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMapEager.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublishMulticast.java, +        long emitted;, +, +                int n = current.length;, +                if (n == 0) {, +            long e = emitted;, +                        } else {, +                            n--;, +                    if (n == 0) {, +                        r = e;, +                    }, +, +                emitted = e;, +++ b/src/main/java/io/reactivex/processors/UnicastProcessor.java, +        Runnable r = onTerminate.getAndSet(null);, +        if (r != null) {, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMapEager.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublishMulticast.java, +        long emitted;, +, +                int n = current.length;, +                if (n == 0) {, +            long e = emitted;, +                        } else {, +                            n--;, +                    if (n == 0) {, +                        r = e;, +                    }, +, +                emitted = e;, +++ b/src/main/java/io/reactivex/processors/UnicastProcessor.java, +        Runnable r = onTerminate.getAndSet(null);, +        if (r != null) {, +++ b/src/main/java/io/reactivex/subjects/BehaviorSubject.java, +        BehaviorDisposable<T>[] a = subscribers.getAndSet(TERMINATED);, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMapEager.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublishMulticast.java, +        long emitted;, +, +                int n = current.length;, +                if (n == 0) {, +            long e = emitted;, +                        } else {, +                            n--;, +                    if (n == 0) {, +                        r = e;, +                    }, +, +                emitted = e;, +++ b/src/main/java/io/reactivex/processors/UnicastProcessor.java, +        Runnable r = onTerminate.getAndSet(null);, +        if (r != null) {, +++ b/src/main/java/io/reactivex/subjects/BehaviorSubject.java, +        BehaviorDisposable<T>[] a = subscribers.getAndSet(TERMINATED);, +++ /dev/null, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableConcatMapEager.java, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowablePublishMulticast.java, +        long emitted;, +, +                int n = current.length;, +                if (n == 0) {, +            long e = emitted;, +                        } else {, +                            n--;, +                    if (n == 0) {, +                        r = e;, +                    }, +, +                emitted = e;, +++ b/src/main/java/io/reactivex/processors/UnicastProcessor.java, +        Runnable r = onTerminate.getAndSet(null);, +        if (r != null) {, +++ b/src/main/java/io/reactivex/subjects/BehaviorSubject.java, +        BehaviorDisposable<T>[] a = subscribers.getAndSet(TERMINATED);, +++ /dev/null, +++ b/src/test/java/io/reactivex/internal/operators/flowable/FlowablePublishMulticastTest.java, +/**, + * Copyright (c) 2016-present, RxJava Contributors., + *, + * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in, + * compliance with the License. You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *]