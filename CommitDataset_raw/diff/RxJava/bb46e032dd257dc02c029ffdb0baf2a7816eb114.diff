[+++ b/.gitignore, +++ b/.gitignore, +++ b/CHANGES.md, +++ b/.gitignore, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.17.3-SNAPSHOT, +++ b/.gitignore, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.17.3-SNAPSHOT, +++ b/rxjava-contrib/rxjava-android-samples/samples/src/main/AndroidManifest.xml, +                android:name=".UIBindingActivity">, +, +            <intent-filter>, +                <category android:name="android.intent.category.LAUNCHER"/>, +                <category android:name="android.intent.category.DEFAULT"/>, +                <action android:name="android.intent.action.MAIN"/>, +            </intent-filter>, +        </activity>, +        <activity, +++ b/.gitignore, +++ b/CHANGES.md, +++ b/gradle.properties, +version=0.17.3-SNAPSHOT, +++ b/rxjava-contrib/rxjava-android-samples/samples/src/main/AndroidManifest.xml, +                android:name=".UIBindingActivity">, +, +            <intent-filter>, +                <category android:name="android.intent.category.LAUNCHER"/>, +                <category android:name="android.intent.category.DEFAULT"/>, +                <action android:name="android.intent.action.MAIN"/>, +            </intent-filter>, +        </activity>, +        <activity, +++ b/rxjava-contrib/rxjava-android-samples/samples/src/main/java/com/netflix/rxjava/android/samples/UIBindingActivity.java, +package com.netflix.rxjava.android.samples;, +, +import android.app.Activity;, +import android.app.Fragment;, +import android.os.Bundle;, +import android.view.LayoutInflater;, +import android.view.View;, +import android.view.ViewGroup;, +import android.view.Window;, +import android.widget.Button;, +import android.widget.TextView;, +import org.json.JSONException;, +import org.json.JSONObject;, +import rx.Observable;, +import rx.Subscription;, +import rx.android.schedulers.AndroidSchedulers;, +import rx.functions.Action1;, +import rx.functions.Func1;, +import rx.subscriptions.Subscriptions;, +, +/**, + * Problem:, + * You have a data source (where that data is potentially expensive to obtain), and you want to, + * emit this data into a fragment. However, you want to gracefully deal with rotation changes and, + * not lose any data already emitted., + * <p/>, + * You also want your UI to update accordingly to the data being emitted., + *, + * @author zsiegel (zsiegel87@gmail.com), + */, +public class UIBindingActivity extends Activity {, +, +    @Override, +    protected void onCreate(Bundle savedInstanceState) {, +        super.onCreate(savedInstanceState);, +        requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);, +        setTitle("UIBinding");, +        setContentView(R.layout.ui_binding_activity);, +    }, +, +    @SuppressWarnings("ConstantConditions"), +    public static class RetainedBindingFragment extends Fragment {, +, +        private Button startButton;, +, +        private Observable<String> request;, +        private Subscription requestSubscription = Subscriptions.empty();, +, +        // in a production app, you don't want to have JSON parser code in your fragment,, +        // but we'll simplify a little here, +        private static final Func1<String, String> PARSE_JSON = new Func1<String, String>() {, +            @Override, +            public String call(String json) {, +                try {, +                    JSONObject jsonObject = new JSONObject(json);, +                    return String.valueOf(jsonObject.getInt("result"));, +                } catch (JSONException e) {, +                    throw new RuntimeException(e);, +                }, +            }, +        };, +, +        public RetainedBindingFragment() {, +            setRetainInstance(true);]