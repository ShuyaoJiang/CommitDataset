[+++ b/rxjava-contrib/rxjava-android/build.gradle, +    provided 'com.google.android:android:4.0.1.2', +    provided 'com.google.android:support-v4:r7', +, +    // testing, +++ b/rxjava-contrib/rxjava-android/build.gradle, +    provided 'com.google.android:android:4.0.1.2', +    provided 'com.google.android:support-v4:r7', +, +    // testing, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/android/observables/AndroidObservable.java, +package rx.android.observables;, +, +import rx.Observable;, +import rx.operators.OperationObserveFromAndroidComponent;, +, +import android.app.Activity;, +import android.app.Fragment;, +, +public final class AndroidObservable {, +, +    private AndroidObservable() {}, +, +    public static <T> Observable<T> fromActivity(Activity activity, Observable<T> sourceObservable) {, +        return OperationObserveFromAndroidComponent.observeFromAndroidComponent(sourceObservable, activity);, +    }, +, +    public static <T> Observable<T> fromFragment(Fragment fragment, Observable<T> sourceObservable) {, +        return OperationObserveFromAndroidComponent.observeFromAndroidComponent(sourceObservable, fragment);, +    }, +, +    public static <T> Observable<T> fromFragment(android.support.v4.app.Fragment fragment, Observable<T> sourceObservable) {, +        return OperationObserveFromAndroidComponent.observeFromAndroidComponent(sourceObservable, fragment);, +    }, +, +}, +++ b/rxjava-contrib/rxjava-android/build.gradle, +    provided 'com.google.android:android:4.0.1.2', +    provided 'com.google.android:support-v4:r7', +, +    // testing, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/android/observables/AndroidObservable.java, +package rx.android.observables;, +, +import rx.Observable;, +import rx.operators.OperationObserveFromAndroidComponent;, +, +import android.app.Activity;, +import android.app.Fragment;, +, +public final class AndroidObservable {, +, +    private AndroidObservable() {}, +, +    public static <T> Observable<T> fromActivity(Activity activity, Observable<T> sourceObservable) {, +        return OperationObserveFromAndroidComponent.observeFromAndroidComponent(sourceObservable, activity);, +    }, +, +    public static <T> Observable<T> fromFragment(Fragment fragment, Observable<T> sourceObservable) {, +        return OperationObserveFromAndroidComponent.observeFromAndroidComponent(sourceObservable, fragment);, +    }, +, +    public static <T> Observable<T> fromFragment(android.support.v4.app.Fragment fragment, Observable<T> sourceObservable) {, +        return OperationObserveFromAndroidComponent.observeFromAndroidComponent(sourceObservable, fragment);, +    }, +, +}, +++ b/rxjava-contrib/rxjava-android/src/main/java/rx/operators/OperationObserveFromAndroidComponent.java, +package rx.operators;, +, +import static org.mockito.Matchers.any;, +import static org.mockito.Matchers.anyInt;, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.never;, +import static org.mockito.Mockito.times;, +import static org.mockito.Mockito.verify;, +import static org.mockito.Mockito.verifyNoMoreInteractions;, +import static org.mockito.Mockito.when;, +, +import org.junit.Before;, +import org.junit.Test;, +import org.junit.runner.RunWith;, +import org.mockito.Mock;, +import org.mockito.MockitoAnnotations;, +import org.robolectric.RobolectricTestRunner;, +import org.robolectric.annotation.Config;, +import rx.Observable;, +import rx.Observer;, +import rx.Subscription;, +import rx.android.concurrency.AndroidSchedulers;, +import rx.subjects.PublishSubject;, +, +import android.app.Activity;, +import android.app.Fragment;, +import android.os.Looper;, +import android.util.Log;, +, +import java.lang.reflect.Field;, +import java.util.concurrent.Callable;, +import java.util.concurrent.Executors;]