[+++ b/src/main/java/io/reactivex/Completable.java, +                onComplete, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, onDispose);, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +                Functions.EMPTY_RUNNABLE, onTerminate,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +                onAfterTerminate, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +                Functions.EMPTY_RUNNABLE, onAfterComplete,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +++ b/src/main/java/io/reactivex/Completable.java, +                onComplete, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, onDispose);, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +                Functions.EMPTY_RUNNABLE, onTerminate,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +                onAfterTerminate, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +                Functions.EMPTY_RUNNABLE, onAfterComplete,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +++ b/src/main/java/io/reactivex/Flowable.java, +        return doOnLifecycle(Functions.emptyConsumer(), Functions.EMPTY_LONGCONSUMER, onCancel);, +        return doOnEach(Functions.emptyConsumer(), Functions.emptyConsumer(), onComplete, Functions.EMPTY_RUNNABLE);, +                Functions.EMPTY_RUNNABLE, +        }, Functions.EMPTY_RUNNABLE);, +        return doOnEach(Functions.emptyConsumer(), onError, Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +        return doOnEach(onNext, Functions.emptyConsumer(), Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +        return doOnLifecycle(Functions.emptyConsumer(), onRequest, Functions.EMPTY_RUNNABLE);, +        return doOnLifecycle(onSubscribe, Functions.EMPTY_LONGCONSUMER, Functions.EMPTY_RUNNABLE);, +        }, onTerminate, Functions.EMPTY_RUNNABLE);, +        return doOnEach(Functions.emptyConsumer(), Functions.emptyConsumer(), Functions.EMPTY_RUNNABLE, onFinally);, +        return forEachWhile(onNext, RxJavaPlugins.errorConsumer(), Functions.EMPTY_RUNNABLE);, +        return forEachWhile(onNext, onError, Functions.EMPTY_RUNNABLE);, +        return new FlowableOnBackpressureBuffer<T>(this, bufferSize, unbounded, delayError, Functions.EMPTY_RUNNABLE);, +        return subscribe(Functions.emptyConsumer(), RxJavaPlugins.errorConsumer(), Functions.EMPTY_RUNNABLE, new Consumer<Subscription>() {, +        return subscribe(onNext, RxJavaPlugins.errorConsumer(), Functions.EMPTY_RUNNABLE, new Consumer<Subscription>() {, +        return subscribe(onNext, onError, Functions.EMPTY_RUNNABLE, new Consumer<Subscription>() {, +++ b/src/main/java/io/reactivex/Completable.java, +                onComplete, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, onDispose);, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +                Functions.EMPTY_RUNNABLE, onTerminate,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +                onAfterTerminate, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +                Functions.EMPTY_RUNNABLE, onAfterComplete,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +++ b/src/main/java/io/reactivex/Flowable.java, +        return doOnLifecycle(Functions.emptyConsumer(), Functions.EMPTY_LONGCONSUMER, onCancel);, +        return doOnEach(Functions.emptyConsumer(), Functions.emptyConsumer(), onComplete, Functions.EMPTY_RUNNABLE);, +                Functions.EMPTY_RUNNABLE, +        }, Functions.EMPTY_RUNNABLE);, +        return doOnEach(Functions.emptyConsumer(), onError, Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +        return doOnEach(onNext, Functions.emptyConsumer(), Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +        return doOnLifecycle(Functions.emptyConsumer(), onRequest, Functions.EMPTY_RUNNABLE);, +        return doOnLifecycle(onSubscribe, Functions.EMPTY_LONGCONSUMER, Functions.EMPTY_RUNNABLE);, +        }, onTerminate, Functions.EMPTY_RUNNABLE);, +        return doOnEach(Functions.emptyConsumer(), Functions.emptyConsumer(), Functions.EMPTY_RUNNABLE, onFinally);, +        return forEachWhile(onNext, RxJavaPlugins.errorConsumer(), Functions.EMPTY_RUNNABLE);, +        return forEachWhile(onNext, onError, Functions.EMPTY_RUNNABLE);, +        return new FlowableOnBackpressureBuffer<T>(this, bufferSize, unbounded, delayError, Functions.EMPTY_RUNNABLE);, +        return subscribe(Functions.emptyConsumer(), RxJavaPlugins.errorConsumer(), Functions.EMPTY_RUNNABLE, new Consumer<Subscription>() {, +        return subscribe(onNext, RxJavaPlugins.errorConsumer(), Functions.EMPTY_RUNNABLE, new Consumer<Subscription>() {, +        return subscribe(onNext, onError, Functions.EMPTY_RUNNABLE, new Consumer<Subscription>() {, +++ b/src/main/java/io/reactivex/Observable.java, +        return doOnEach(Functions.emptyConsumer(), Functions.emptyConsumer(), onComplete, Functions.EMPTY_RUNNABLE);, +                Functions.EMPTY_RUNNABLE, +        }, Functions.EMPTY_RUNNABLE);, +        return doOnEach(Functions.emptyConsumer(), onError, Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +        return doOnEach(onNext, Functions.emptyConsumer(), Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +        return doOnLifecycle(onSubscribe, Functions.EMPTY_RUNNABLE);, +        }, onTerminate, Functions.EMPTY_RUNNABLE);, +        return doOnEach(Functions.emptyConsumer(), Functions.emptyConsumer(), Functions.EMPTY_RUNNABLE, onFinally);, +        return forEachWhile(onNext, RxJavaPlugins.errorConsumer(), Functions.EMPTY_RUNNABLE);, +        return forEachWhile(onNext, onError, Functions.EMPTY_RUNNABLE);, +        return subscribe(Functions.emptyConsumer(), RxJavaPlugins.errorConsumer(), Functions.EMPTY_RUNNABLE, Functions.emptyConsumer());, +        return subscribe(onNext, RxJavaPlugins.errorConsumer(), Functions.EMPTY_RUNNABLE, Functions.emptyConsumer());, +        return subscribe(onNext, onError, Functions.EMPTY_RUNNABLE, Functions.emptyConsumer());, +++ b/src/main/java/io/reactivex/Completable.java, +                onComplete, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, onDispose);, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE,, +                Functions.EMPTY_RUNNABLE, Functions.EMPTY_RUNNABLE);]