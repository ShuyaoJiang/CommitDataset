[+++ b/rxjava-core/src/main/java/rx/Observable.java, +                onNotification.call(Notification.createOnCompleted());, +                onNotification.call(Notification.createOnError(e));, +                onNotification.call(Notification.createOnNext(v));, +     * Modifies an Observable so that it invokes an action when it calls {@code onCompleted} or {@code onError} <p>, +     * <img width="640" src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/doOnCompleted.png">, +     * <p>, +     * This differs from {@code finallyDo} in that this happens BEFORE onCompleted/onError are emitted., +     * , +     * @param onTerminate, +     *            the action to invoke when the source Observable calls {@code onCompleted} or {@code onError}, +     * @return the source Observable with the side-effecting behavior applied, +     * @see <a href="https://github.com/Netflix/RxJava/wiki/Observable-Utility-Operators#wiki-dooncompleted">RxJava Wiki: doOnCompleted()</a>, +     * @see <a href="http://msdn.microsoft.com/en-us/library/hh229804.aspx">MSDN: Observable.Do</a>, +     */, +    public final Observable<T> doOnTerminate(final Action0 onTerminate) {, +        Observer<T> observer = new Observer<T>() {, +            @Override, +            public final void onCompleted() {, +                onTerminate.call();, +            }, +, +            @Override, +            public final void onError(Throwable e) {, +                onTerminate.call();, +            }, +, +            @Override, +            public final void onNext(T args) {, +            }, +, +        };, +, +        return lift(new OperatorDoOnEach<T>(observer));, +    }, +, +    /**]