[+++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorMerge.java, +import rx.exceptions.Exceptions;, +            Exceptions.throwIfFatal(e);, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorMerge.java, +import rx.exceptions.Exceptions;, +            Exceptions.throwIfFatal(e);, +++ b/rxjava-core/src/main/java/rx/observers/SerializedObserver.java, +import rx.exceptions.Exceptions;, +        Exceptions.throwIfFatal(e);, +++ b/rxjava-core/src/main/java/rx/internal/operators/OperatorMerge.java, +import rx.exceptions.Exceptions;, +            Exceptions.throwIfFatal(e);, +++ b/rxjava-core/src/main/java/rx/observers/SerializedObserver.java, +import rx.exceptions.Exceptions;, +        Exceptions.throwIfFatal(e);, +++ b/rxjava-core/src/test/java/rx/ObservableTests.java, +import rx.exceptions.OnErrorNotImplementedException;, +    @Test(expected = OnErrorNotImplementedException.class), +    public void testSubscribeWithoutOnError() {, +        Observable<String> o = Observable.from("a", "b").flatMap(new Func1<String, Observable<String>>() {, +            @Override, +            public Observable<String> call(String s) {, +                return Observable.error(new Exception("test"));, +            }, +        });, +        o.subscribe();, +    }]