[+++ b/rxjava-core/src/main/java/rx/subscriptions/SerialSubscription.java, +    private volatile Subscription unsubscribe;, +                if(subscription == UNSUBSCRIBED) {, +                	unsubscribe = current;, +                }, +    , +    public Subscription getSubscription() {, +    	Subscription subscription = reference.get();, +		return subscription == UNSUBSCRIBED ? unsubscribe : subscription;, +    }, +++ b/rxjava-core/src/main/java/rx/subscriptions/SerialSubscription.java, +    private volatile Subscription unsubscribe;, +                if(subscription == UNSUBSCRIBED) {, +                	unsubscribe = current;, +                }, +    , +    public Subscription getSubscription() {, +    	Subscription subscription = reference.get();, +		return subscription == UNSUBSCRIBED ? unsubscribe : subscription;, +    }, +++ b/rxjava-core/src/test/java/rx/subscriptions/SerialSubscriptionTests.java, +import static org.junit.Assert.assertSame;, +    public void getSubscriptionShouldReturnSubscriptionAfterUnsubscribe() {, +    	 final Subscription underlying = mock(Subscription.class);, +         serialSubscription.setSubscription(underlying);, +         serialSubscription.unsubscribe();, +         assertSame(underlying, serialSubscription.getSubscription());, +    }, +    , +    @Test, +    public void getSubscriptionShouldReturnSetSubscription() {, +    	 final Subscription underlying = mock(Subscription.class);, +         serialSubscription.setSubscription(underlying);, +         assertSame(underlying, serialSubscription.getSubscription());, +         , +         final Subscription another = mock(Subscription.class);, +         serialSubscription.setSubscription(another);, +         assertSame(another, serialSubscription.getSubscription());, +    }, +    , +    @Test]