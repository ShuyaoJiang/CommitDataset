[+++ b/src/main/java/io/reactivex/internal/observers/BlockingMultiObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                    throw ExceptionHelper.wrapOrThrow(new TimeoutException(timeoutMessage(timeout, unit)));, +++ b/src/main/java/io/reactivex/internal/observers/BlockingMultiObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                    throw ExceptionHelper.wrapOrThrow(new TimeoutException(timeoutMessage(timeout, unit)));, +++ b/src/main/java/io/reactivex/internal/observers/FutureObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                throw new TimeoutException(timeoutMessage(timeout, unit));, +++ b/src/main/java/io/reactivex/internal/observers/BlockingMultiObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                    throw ExceptionHelper.wrapOrThrow(new TimeoutException(timeoutMessage(timeout, unit)));, +++ b/src/main/java/io/reactivex/internal/observers/FutureObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                throw new TimeoutException(timeoutMessage(timeout, unit));, +++ b/src/main/java/io/reactivex/internal/observers/FutureSingleObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                throw new TimeoutException(timeoutMessage(timeout, unit));, +++ b/src/main/java/io/reactivex/internal/observers/BlockingMultiObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                    throw ExceptionHelper.wrapOrThrow(new TimeoutException(timeoutMessage(timeout, unit)));, +++ b/src/main/java/io/reactivex/internal/observers/FutureObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                throw new TimeoutException(timeoutMessage(timeout, unit));, +++ b/src/main/java/io/reactivex/internal/observers/FutureSingleObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                throw new TimeoutException(timeoutMessage(timeout, unit));, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableTimeout.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                    downstream.onError(new TimeoutException(timeoutMessage(timeout, unit)));, +++ b/src/main/java/io/reactivex/internal/observers/BlockingMultiObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                    throw ExceptionHelper.wrapOrThrow(new TimeoutException(timeoutMessage(timeout, unit)));, +++ b/src/main/java/io/reactivex/internal/observers/FutureObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                throw new TimeoutException(timeoutMessage(timeout, unit));, +++ b/src/main/java/io/reactivex/internal/observers/FutureSingleObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                throw new TimeoutException(timeoutMessage(timeout, unit));, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableTimeout.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                    downstream.onError(new TimeoutException(timeoutMessage(timeout, unit)));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableTimeoutTimed.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                downstream.onError(new TimeoutException(timeoutMessage(timeout, unit)));, +++ b/src/main/java/io/reactivex/internal/observers/BlockingMultiObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                    throw ExceptionHelper.wrapOrThrow(new TimeoutException(timeoutMessage(timeout, unit)));, +++ b/src/main/java/io/reactivex/internal/observers/FutureObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                throw new TimeoutException(timeoutMessage(timeout, unit));, +++ b/src/main/java/io/reactivex/internal/observers/FutureSingleObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                throw new TimeoutException(timeoutMessage(timeout, unit));, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableTimeout.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                    downstream.onError(new TimeoutException(timeoutMessage(timeout, unit)));, +++ b/src/main/java/io/reactivex/internal/operators/flowable/FlowableTimeoutTimed.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                downstream.onError(new TimeoutException(timeoutMessage(timeout, unit)));, +++ b/src/main/java/io/reactivex/internal/operators/observable/ObservableTimeoutTimed.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                downstream.onError(new TimeoutException(timeoutMessage(timeout, unit)));, +++ b/src/main/java/io/reactivex/internal/observers/BlockingMultiObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                    throw ExceptionHelper.wrapOrThrow(new TimeoutException(timeoutMessage(timeout, unit)));, +++ b/src/main/java/io/reactivex/internal/observers/FutureObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                throw new TimeoutException(timeoutMessage(timeout, unit));, +++ b/src/main/java/io/reactivex/internal/observers/FutureSingleObserver.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                throw new TimeoutException(timeoutMessage(timeout, unit));, +++ b/src/main/java/io/reactivex/internal/operators/completable/CompletableTimeout.java, +import static io.reactivex.internal.util.ExceptionHelper.timeoutMessage;, +, +                    downstream.onError(new TimeoutException(timeoutMessage(timeout, unit)));]