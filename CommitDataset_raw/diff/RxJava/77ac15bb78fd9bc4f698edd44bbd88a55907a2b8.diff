[+++ b/rxjava-core/src/main/java/rx/operators/OperationThrottle.java, +import static org.mockito.Matchers.any;, +import static org.mockito.Matchers.anyString;, +import static org.mockito.Mockito.inOrder;, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.never;, +import static org.mockito.Mockito.times;, +import static org.mockito.Mockito.verify;, +            throttle(new ThrottledOnComplete<T>(observer));, +            throttle(new ThrottledOnError<T>(observer, e));, +            throttle(new ThrottledOnNext<T>(observer, args));, +        private void throttle(Action0 action) {, +                subscription.set(scheduler.schedule(action, timeout, unit));, +    private static final class ThrottledOnNext<T> implements Action0 {, +        private final T value;, +        public ThrottledOnNext(Observer<T> observer, T value) {, +            this.value = value;, +            observer.onNext(value);, +, +    private static final class ThrottledOnError<T> implements Action0 {, +, +        private final Observer<T> observer;, +        private final Exception error;, +, +        public ThrottledOnError(Observer<T> observer, Exception error) {, +            this.observer = observer;, +            this.error = error;, +        }, +, +        @Override, +        public void call() {, +            observer.onError(error);, +        }, +    }, +, +    private static final class ThrottledOnComplete<T> implements Action0 {, +, +        private final Observer<T> observer;, +, +        public ThrottledOnComplete(Observer<T> observer) {, +            this.observer = observer;, +        }, +, +        @Override, +        public void call() {]