[+++ b/rxjava-contrib/rxjava-async-util/src/main/java/rx/util/async/Async.java, + * Licensed under the Apache License, Version 2.0 (the "License"); you may not, + * use this file except in compliance with the License. You may obtain a copy of, + * the License at, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations under, + * the License., +import java.util.concurrent.Callable;, +import java.util.concurrent.Future;, +import java.util.concurrent.FutureTask;, +import rx.util.async.operators.Functionals;, +import rx.util.async.operators.OperationDeferFuture;, +import rx.util.async.operators.OperationForEachFuture;, +import rx.util.async.operators.OperationFromFunctionals;, +import rx.util.async.operators.OperationStartFuture;, + * Utility methods to convert functions and actions into asynchronous operations, + * through the Observable/Observer pattern., +    , +     * <img width="640", +     * src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/start.png">, +     * @param <T> the result value type, +     * @param func function to run asynchronously, +     * @see <a, +     * href="https://github.com/Netflix/RxJava/wiki/Creating-Observables#start">RxJava, +     * Wiki: start()</a>, +     * @see <a, +     * href="http://msdn.microsoft.com/en-us/library/hh229036.aspx">MSDN:, +     * Observable.Start</a>, +     * <img width="640", +     * src="https://raw.github.com/wiki/Netflix/RxJava/images/rx-operators/start.s.png">, +     * @param <T> the result value type, +     * @param func function to run asynchronously, +     * @param scheduler scheduler to run the function on, +     * @see <a, +     * href="https://github.com/Netflix/RxJava/wiki/Creating-Observables#start">RxJava, +     * Wiki: start()</a>, +     * @see <a, +     * href="http://msdn.microsoft.com/en-us/library/hh211721.aspx">MSDN:, +     * Observable.Start</a>, +     * Convert a synchronous action call into an asynchronous function call, +     * through an Observable sequence., +     * @param action the action to convert, +     * @return a function which returns an observable sequence which executes, +     * the {@code action} and emits {@code null}., +     * @see <a, +     * href='http://msdn.microsoft.com/en-us/library/hh229868.aspx'>MSDN:, +     * Observable.ToAsync</a>, +     * Convert a synchronous function call into an asynchronous function call, +     * through an Observable sequence., +     * @param <R> the result value type, +     * @param func the function to convert, +     * @return a function which returns an observable sequence which executes, +     * the {@code func} and emits its returned value., +     * @see <a, +     * href='http://msdn.microsoft.com/en-us/library/hh229182.aspx'>MSDN:, +     * Observable.ToAsync</a>, +     * Convert a synchronous action call into an asynchronous function call, +     * through an Observable sequence., +     * @param <T1> first parameter type of the action, +     * @param action the action to convert, +     * @return a function which returns an observable sequence which executes, +     * the {@code action} and emits {@code null}., +     * @see <a, +     * href='http://msdn.microsoft.com/en-us/library/hh229657.aspx'>MSDN:, +     * Observable.ToAsync</a>, +     * Convert a synchronous function call into an asynchronous function call, +     * through an Observable sequence., +     * @param <T1> first parameter type of the action, +     * @param <R> the result type, +     * @param func the function to convert, +     * @return a function which returns an observable sequence which executes, +     * the {@code func} and emits its returned value., +     * @see <a, +     * href='http://msdn.microsoft.com/en-us/library/hh229755.aspx'>MSDN:, +     * Observable.ToAsync</a>, +     * Convert a synchronous action call into an asynchronous function call, +     * through an Observable sequence., +     * @param <T1> the first parameter type, +     * @param <T2> the second parameter type, +     * @param action the action to convert, +     * @return a function which returns an observable sequence which executes, +     * the {@code action} and emits {@code null}., +     * @see <a, +     * href='http://msdn.microsoft.com/en-us/library/hh211875.aspx'>MSDN:, +     * Observable.ToAsync</a>, +     * Convert a synchronous function call into an asynchronous function call, +     * through an Observable sequence., +     * @param <T1> the first parameter type, +     * @param <T2> the second parameter type, +     * @param <R> the result type, +     * @param func the function to convert, +     * @return a function which returns an observable sequence which executes, +     * the {@code func} and emits its returned value., +     * @see <a, +     * href='http://msdn.microsoft.com/en-us/library/hh229851.aspx'>MSDN:, +     * Observable.ToAsync</a>, +     * Convert a synchronous action call into an asynchronous function call, +     * through an Observable sequence., +     * @param <T1> the first parameter type]