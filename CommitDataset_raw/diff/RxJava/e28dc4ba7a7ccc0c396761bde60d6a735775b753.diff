[+++ b/src/main/java/io/reactivex/BackpressureStrategy.java, +     * OnNext events are written without any buffering or dropping., +     * Downstream has to deal with any overflow., +     * <p>Useful when one applies one of the custom-parameter onBackpressureXXX operators., +     */, +    NONE,, +    /**, +     * Signals a MissingBackpressureException in case the downstream can't keep up., +     */, +    ERROR,, +    /**, +     * Buffers <em>all</em> onNext values until the downstream consumes it., +     * Drops the most recent onNext value if the downstream can't keep up., +     * Keeps only the latest onNext value, overwriting any previous value if the, +     * downstream can't keep up., +++ b/src/main/java/io/reactivex/BackpressureStrategy.java, +     * OnNext events are written without any buffering or dropping., +     * Downstream has to deal with any overflow., +     * <p>Useful when one applies one of the custom-parameter onBackpressureXXX operators., +     */, +    NONE,, +    /**, +     * Signals a MissingBackpressureException in case the downstream can't keep up., +     */, +    ERROR,, +    /**, +     * Buffers <em>all</em> onNext values until the downstream consumes it., +     * Drops the most recent onNext value if the downstream can't keep up., +     * Keeps only the latest onNext value, overwriting any previous value if the, +     * downstream can't keep up., +++ b/src/main/java/io/reactivex/Flowable.java, +     * }, BackpressureStrategy.BUFFER);, +     * @see BackpressureStrategy, +    public static <T> Flowable<T> create(FlowableOnSubscribe<T> source, BackpressureStrategy mode) {, +++ b/src/main/java/io/reactivex/BackpressureStrategy.java, +     * OnNext events are written without any buffering or dropping., +     * Downstream has to deal with any overflow., +     * <p>Useful when one applies one of the custom-parameter onBackpressureXXX operators., +     */, +    NONE,, +    /**, +     * Signals a MissingBackpressureException in case the downstream can't keep up., +     */, +    ERROR,, +    /**, +     * Buffers <em>all</em> onNext values until the downstream consumes it., +     * Drops the most recent onNext value if the downstream can't keep up., +     * Keeps only the latest onNext value, overwriting any previous value if the, +     * downstream can't keep up., +++ b/src/main/java/io/reactivex/Flowable.java, +     * }, BackpressureStrategy.BUFFER);, +     * @see BackpressureStrategy, +    public static <T> Flowable<T> create(FlowableOnSubscribe<T> source, BackpressureStrategy mode) {, +++ b/src/main/java/io/reactivex/FlowableEmitter.java, +++ b/src/main/java/io/reactivex/BackpressureStrategy.java, +     * OnNext events are written without any buffering or dropping., +     * Downstream has to deal with any overflow., +     * <p>Useful when one applies one of the custom-parameter onBackpressureXXX operators., +     */, +    NONE,, +    /**, +     * Signals a MissingBackpressureException in case the downstream can't keep up., +     */, +    ERROR,, +    /**, +     * Buffers <em>all</em> onNext values until the downstream consumes it., +     * Drops the most recent onNext value if the downstream can't keep up., +     * Keeps only the latest onNext value, overwriting any previous value if the, +     * downstream can't keep up., +++ b/src/main/java/io/reactivex/Flowable.java, +     * }, BackpressureStrategy.BUFFER);, +     * @see BackpressureStrategy, +    public static <T> Flowable<T> create(FlowableOnSubscribe<T> source, BackpressureStrategy mode) {, +++ b/src/main/java/io/reactivex/FlowableEmitter.java, +++ b/src/main/java/io/reactivex/Observable.java, +import io.reactivex.internal.operators.flowable.FlowableOnBackpressureError;, +            case NONE:, +                return o;, +            case ERROR:, +                return RxJavaPlugins.onAssembly(new FlowableOnBackpressureError<T>(o));, +++ b/src/main/java/io/reactivex/BackpressureStrategy.java, +     * OnNext events are written without any buffering or dropping., +     * Downstream has to deal with any overflow., +     * <p>Useful when one applies one of the custom-parameter onBackpressureXXX operators., +     */, +    NONE,, +    /**, +     * Signals a MissingBackpressureException in case the downstream can't keep up., +     */, +    ERROR,, +    /**, +     * Buffers <em>all</em> onNext values until the downstream consumes it., +     * Drops the most recent onNext value if the downstream can't keep up., +     * Keeps only the latest onNext value, overwriting any previous value if the, +     * downstream can't keep up., +++ b/src/main/java/io/reactivex/Flowable.java, +     * }, BackpressureStrategy.BUFFER);, +     * @see BackpressureStrategy, +    public static <T> Flowable<T> create(FlowableOnSubscribe<T> source, BackpressureStrategy mode) {, +++ b/src/main/java/io/reactivex/FlowableEmitter.java]