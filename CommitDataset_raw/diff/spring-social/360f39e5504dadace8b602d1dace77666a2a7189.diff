[+++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/AbstractOAuth1ApiTemplate.java, +import java.nio.charset.Charset;, +import java.util.ArrayList;, +import java.util.List;, +, +import org.springframework.http.converter.FormHttpMessageConverter;, +import org.springframework.http.converter.HttpMessageConverter;, +import org.springframework.http.converter.StringHttpMessageConverter;, +import org.springframework.http.converter.json.MappingJacksonHttpMessageConverter;, +		restTemplate.setMessageConverters(getMessageConverters());, +		restTemplate.setMessageConverters(getMessageConverters());, +	// subclassing hooks, +	, +	/**, +	 * Returns a list of {@link HttpMessageConverter}s to be used by the internal {@link RestTemplate}., +	 * By default, this includes a {@link StringHttpMessageConverter}, a {@link MappingJacksonHttpMessageConverter}, and a {@link FormHttpMessageConverter}., +	 * The {@link FormHttpMessageConverter} is set to use "UTF-8" character encoding., +	 * Override this method to add additional message converters or to replace the default list of message converters., +	 */, +	protected List<HttpMessageConverter<?>> getMessageConverters() {, +		List<HttpMessageConverter<?>> messageConverters = new ArrayList<HttpMessageConverter<?>>();, +		messageConverters.add(new StringHttpMessageConverter());, +		FormHttpMessageConverter formHttpMessageConverter = new FormHttpMessageConverter();, +		formHttpMessageConverter.setCharset(Charset.forName("UTF-8"));, +		messageConverters.add(formHttpMessageConverter);, +		messageConverters.add(new MappingJacksonHttpMessageConverter());, +		return messageConverters;, +	}, +	, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/AbstractOAuth1ApiTemplate.java, +import java.nio.charset.Charset;, +import java.util.ArrayList;, +import java.util.List;, +, +import org.springframework.http.converter.FormHttpMessageConverter;, +import org.springframework.http.converter.HttpMessageConverter;, +import org.springframework.http.converter.StringHttpMessageConverter;, +import org.springframework.http.converter.json.MappingJacksonHttpMessageConverter;, +		restTemplate.setMessageConverters(getMessageConverters());, +		restTemplate.setMessageConverters(getMessageConverters());, +	// subclassing hooks, +	, +	/**, +	 * Returns a list of {@link HttpMessageConverter}s to be used by the internal {@link RestTemplate}., +	 * By default, this includes a {@link StringHttpMessageConverter}, a {@link MappingJacksonHttpMessageConverter}, and a {@link FormHttpMessageConverter}., +	 * The {@link FormHttpMessageConverter} is set to use "UTF-8" character encoding., +	 * Override this method to add additional message converters or to replace the default list of message converters., +	 */, +	protected List<HttpMessageConverter<?>> getMessageConverters() {, +		List<HttpMessageConverter<?>> messageConverters = new ArrayList<HttpMessageConverter<?>>();, +		messageConverters.add(new StringHttpMessageConverter());, +		FormHttpMessageConverter formHttpMessageConverter = new FormHttpMessageConverter();, +		formHttpMessageConverter.setCharset(Charset.forName("UTF-8"));, +		messageConverters.add(formHttpMessageConverter);, +		messageConverters.add(new MappingJacksonHttpMessageConverter());, +		return messageConverters;, +	}, +	, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AbstractOAuth2ApiTemplate.java, +import java.nio.charset.Charset;, +import java.util.ArrayList;, +import java.util.List;, +, +import org.springframework.http.converter.FormHttpMessageConverter;, +import org.springframework.http.converter.HttpMessageConverter;, +import org.springframework.http.converter.StringHttpMessageConverter;, +import org.springframework.http.converter.json.MappingJacksonHttpMessageConverter;, +		restTemplate.setMessageConverters(getMessageConverters());, +		restTemplate.setMessageConverters(getMessageConverters());, +, +	// subclassing hooks, +	, +	/**, +	 * Returns a list of {@link HttpMessageConverter}s to be used by the internal {@link RestTemplate}., +	 * By default, this includes a {@link StringHttpMessageConverter}, a {@link MappingJacksonHttpMessageConverter}, and a {@link FormHttpMessageConverter}., +	 * The {@link FormHttpMessageConverter} is set to use "UTF-8" character encoding., +	 * Override this method to add additional message converters or to replace the default list of message converters., +	 */, +	protected List<HttpMessageConverter<?>> getMessageConverters() {, +		List<HttpMessageConverter<?>> messageConverters = new ArrayList<HttpMessageConverter<?>>();, +		messageConverters.add(new StringHttpMessageConverter());, +		FormHttpMessageConverter formHttpMessageConverter = new FormHttpMessageConverter();, +		formHttpMessageConverter.setCharset(Charset.forName("UTF-8"));, +		messageConverters.add(formHttpMessageConverter);, +		messageConverters.add(new MappingJacksonHttpMessageConverter());, +		return messageConverters;, +	}, +	, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/AbstractOAuth1ApiTemplate.java, +import java.nio.charset.Charset;, +import java.util.ArrayList;, +import java.util.List;, +, +import org.springframework.http.converter.FormHttpMessageConverter;, +import org.springframework.http.converter.HttpMessageConverter;, +import org.springframework.http.converter.StringHttpMessageConverter;, +import org.springframework.http.converter.json.MappingJacksonHttpMessageConverter;, +		restTemplate.setMessageConverters(getMessageConverters());, +		restTemplate.setMessageConverters(getMessageConverters());, +	// subclassing hooks]