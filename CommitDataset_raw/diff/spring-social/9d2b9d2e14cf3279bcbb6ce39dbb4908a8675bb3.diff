[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionImpl.java, +			String providerAccountId = getProviderAccountId();, +			String otherProviderAccountId = other.getProviderAccountId();, +			if (id == null && other.id == null && providerAccountId != null && otherProviderAccountId != null) {, +				return providerId.equals(other.providerId) && providerAccountId.equals(otherProviderAccountId);, +			} else {, +	}, +		if (id != null) {, +			return accountId.hashCode() + providerId.hashCode() + id.hashCode();, +		} else {, +				return providerId.hashCode() + providerAccountId.hashCode();, +	}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionImpl.java, +			String providerAccountId = getProviderAccountId();, +			String otherProviderAccountId = other.getProviderAccountId();, +			if (id == null && other.id == null && providerAccountId != null && otherProviderAccountId != null) {, +				return providerId.equals(other.providerId) && providerAccountId.equals(otherProviderAccountId);, +			} else {, +	}, +		if (id != null) {, +			return accountId.hashCode() + providerId.hashCode() + id.hashCode();, +		} else {, +				return providerId.hashCode() + providerAccountId.hashCode();, +	}, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepositoryTest.java, +		assertTrue(newConnection.hashCode() != connection.hashCode());]