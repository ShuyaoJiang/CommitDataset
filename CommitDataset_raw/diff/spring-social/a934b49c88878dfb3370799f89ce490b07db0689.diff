[+++ b/samples/twitter-showcase/pom.xml, +	    	<groupId>org.springframework.security</groupId>, +	    	<artifactId>spring-security-crypto</artifactId>, +	    	<version>3.1.0.CI-SNAPSHOT</version>, +	    </dependency>, +	    , +	    <dependency>, +++ b/samples/twitter-showcase/pom.xml, +	    	<groupId>org.springframework.security</groupId>, +	    	<artifactId>spring-security-crypto</artifactId>, +	    	<version>3.1.0.CI-SNAPSHOT</version>, +	    </dependency>, +	    , +	    <dependency>, +++ b/samples/twitter-showcase/src/main/java/org/springframework/social/samples/twitter/TweetController.java, +import org.springframework.social.provider.ServiceProviderConnection;, +, +		List<ServiceProviderConnection<TwitterOperations>> connections = twitterProvider.getConnections(1);, +		List<String> connectionNames = new ArrayList<String>();, +		for (ServiceProviderConnection<TwitterOperations> serviceProviderConnection : connections) {, +			connectionNames.add(serviceProviderConnection.getServiceApi().getProfileId());, +		}, +, +			model.addAttribute("connections", connectionNames);, +, +		List<ServiceProviderConnection<TwitterOperations>> connections = twitterProvider.getConnections(1);, +		for (ServiceProviderConnection<TwitterOperations> connection : connections) {, +			TwitterOperations twitter = connection.getServiceApi();, +			if (tweetForm.isTweetToAll() || twitter.getProfileId().equals(tweetForm.getScreenName())) {, +		}, +++ b/samples/twitter-showcase/pom.xml, +	    	<groupId>org.springframework.security</groupId>, +	    	<artifactId>spring-security-crypto</artifactId>, +	    	<version>3.1.0.CI-SNAPSHOT</version>, +	    </dependency>, +	    , +	    <dependency>, +++ b/samples/twitter-showcase/src/main/java/org/springframework/social/samples/twitter/TweetController.java, +import org.springframework.social.provider.ServiceProviderConnection;, +, +		List<ServiceProviderConnection<TwitterOperations>> connections = twitterProvider.getConnections(1);, +		List<String> connectionNames = new ArrayList<String>();, +		for (ServiceProviderConnection<TwitterOperations> serviceProviderConnection : connections) {, +			connectionNames.add(serviceProviderConnection.getServiceApi().getProfileId());, +		}, +, +			model.addAttribute("connections", connectionNames);, +, +		List<ServiceProviderConnection<TwitterOperations>> connections = twitterProvider.getConnections(1);, +		for (ServiceProviderConnection<TwitterOperations> connection : connections) {, +			TwitterOperations twitter = connection.getServiceApi();, +			if (tweetForm.isTweetToAll() || twitter.getProfileId().equals(tweetForm.getScreenName())) {, +		}, +++ b/samples/twitter-showcase/src/main/java/org/springframework/social/samples/twitter/TwitterSampleAccountIdResolver.java, +import org.springframework.social.web.connect.AccountIdResolver;, +++ b/samples/twitter-showcase/pom.xml, +	    	<groupId>org.springframework.security</groupId>, +	    	<artifactId>spring-security-crypto</artifactId>, +	    	<version>3.1.0.CI-SNAPSHOT</version>, +	    </dependency>, +	    , +	    <dependency>, +++ b/samples/twitter-showcase/src/main/java/org/springframework/social/samples/twitter/TweetController.java, +import org.springframework.social.provider.ServiceProviderConnection;, +, +		List<ServiceProviderConnection<TwitterOperations>> connections = twitterProvider.getConnections(1);, +		List<String> connectionNames = new ArrayList<String>();, +		for (ServiceProviderConnection<TwitterOperations> serviceProviderConnection : connections) {, +			connectionNames.add(serviceProviderConnection.getServiceApi().getProfileId());, +		}, +, +			model.addAttribute("connections", connectionNames);, +, +		List<ServiceProviderConnection<TwitterOperations>> connections = twitterProvider.getConnections(1);, +		for (ServiceProviderConnection<TwitterOperations> connection : connections) {, +			TwitterOperations twitter = connection.getServiceApi();, +			if (tweetForm.isTweetToAll() || twitter.getProfileId().equals(tweetForm.getScreenName())) {, +		}, +++ b/samples/twitter-showcase/src/main/java/org/springframework/social/samples/twitter/TwitterSampleAccountIdResolver.java, +import org.springframework.social.web.connect.AccountIdResolver;, +++ b/samples/twitter-showcase/src/main/resources/org/springframework/social/samples/twitter/db/ConnectedAccount.sql, +create table Connection (id identity,, +					accountId varchar not null,, +					providerId varchar not null,, +					primary key (id));, +create unique index AccessToken on Connection(accountId, providerId, accessToken);, +++ b/samples/twitter-showcase/pom.xml, +	    	<groupId>org.springframework.security</groupId>, +	    	<artifactId>spring-security-crypto</artifactId>, +	    	<version>3.1.0.CI-SNAPSHOT</version>, +	    </dependency>, +	    , +	    <dependency>, +++ b/samples/twitter-showcase/src/main/java/org/springframework/social/samples/twitter/TweetController.java, +import org.springframework.social.provider.ServiceProviderConnection;, +, +		List<ServiceProviderConnection<TwitterOperations>> connections = twitterProvider.getConnections(1);, +		List<String> connectionNames = new ArrayList<String>();, +		for (ServiceProviderConnection<TwitterOperations> serviceProviderConnection : connections) {, +			connectionNames.add(serviceProviderConnection.getServiceApi().getProfileId());]