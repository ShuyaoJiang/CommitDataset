[+++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +    /**, +     * Retrieves the client access grant using OAuth 2 client password flow., +     * This is an access grant that is based on the client id and password (a.k.a. client secret)., +     * @param scope optional scope to get for the access grant, +     * @return the access grant of the client only (not user related), +     */, +    AccessGrant authenticateClient(String scope);, +, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +    /**, +     * Retrieves the client access grant using OAuth 2 client password flow., +     * This is an access grant that is based on the client id and password (a.k.a. client secret)., +     * @param scope optional scope to get for the access grant, +     * @return the access grant of the client only (not user related), +     */, +    AccessGrant authenticateClient(String scope);, +, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +    public AccessGrant authenticateClient(String scope) {, +        MultiValueMap<String, String> params = new LinkedMultiValueMap<String, String>();, +		if (useParametersForClientAuthentication) {, +			params.set("client_id", clientId);, +			params.set("client_secret", clientSecret);, +		}, +		params.set("grant_type", "client_credentials");, +		if (scope != null) {, +			params.set("scope", scope);, +		}, +		return postForAccessGrant(accessTokenUrl, params);, +    }, +, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +    /**, +     * Retrieves the client access grant using OAuth 2 client password flow., +     * This is an access grant that is based on the client id and password (a.k.a. client secret)., +     * @param scope optional scope to get for the access grant, +     * @return the access grant of the client only (not user related), +     */, +    AccessGrant authenticateClient(String scope);, +, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +    public AccessGrant authenticateClient(String scope) {, +        MultiValueMap<String, String> params = new LinkedMultiValueMap<String, String>();, +		if (useParametersForClientAuthentication) {, +			params.set("client_id", clientId);, +			params.set("client_secret", clientSecret);, +		}, +		params.set("grant_type", "client_credentials");, +		if (scope != null) {, +			params.set("scope", scope);, +		}, +		return postForAccessGrant(accessTokenUrl, params);, +    }, +, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepositoryTest.java, +, +                public AccessGrant authenticateClient(String scope) {, +                    return null;, +                }, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +    /**, +     * Retrieves the client access grant using OAuth 2 client password flow., +     * This is an access grant that is based on the client id and password (a.k.a. client secret)., +     * @param scope optional scope to get for the access grant, +     * @return the access grant of the client only (not user related), +     */, +    AccessGrant authenticateClient(String scope);, +, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +    public AccessGrant authenticateClient(String scope) {, +        MultiValueMap<String, String> params = new LinkedMultiValueMap<String, String>();, +		if (useParametersForClientAuthentication) {, +			params.set("client_id", clientId);, +			params.set("client_secret", clientSecret);, +		}, +		params.set("grant_type", "client_credentials");, +		if (scope != null) {, +			params.set("scope", scope);, +		}, +		return postForAccessGrant(accessTokenUrl, params);, +    }, +, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepositoryTest.java, +, +                public AccessGrant authenticateClient(String scope) {, +                    return null;, +                }, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/oauth2/StubOAuth2Operations.java, +, +    public AccessGrant authenticateClient(String scope) {, +        return new AccessGrant("12345", null,  null, 3600);, +    }, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +    /**, +     * Retrieves the client access grant using OAuth 2 client password flow., +     * This is an access grant that is based on the client id and password (a.k.a. client secret)., +     * @param scope optional scope to get for the access grant, +     * @return the access grant of the client only (not user related), +     */]