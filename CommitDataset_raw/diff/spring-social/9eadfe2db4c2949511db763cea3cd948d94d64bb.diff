[+++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookOperations.java, +	, +	 * @return a list of <code>String</code>s where each entry is the Facebook ID of one of the user's friends., +	 * @param status The message to post, +	 * @param message The message to post, +	 * @param link A link to be included in the status update, +	 * Low-level publish-to-Facebook method for publishing any type of object supported by Facebook's API., +	 * @param object The ID of the object to publish to., +	 * @param connection The connection to be published., +	 * @param data The data to be published., +	 * @param profileId the Facebook ID of the user., +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookOperations.java, +	, +	 * @return a list of <code>String</code>s where each entry is the Facebook ID of one of the user's friends., +	 * @param status The message to post, +	 * @param message The message to post, +	 * @param link A link to be included in the status update, +	 * Low-level publish-to-Facebook method for publishing any type of object supported by Facebook's API., +	 * @param object The ID of the object to publish to., +	 * @param connection The connection to be published., +	 * @param data The data to be published., +	 * @param profileId the Facebook ID of the user., +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +		restTemplate = new RestTemplate();, +		restTemplate.setInterceptors(new ClientHttpRequestInterceptor[] { OAuth2RequestInterceptor.draft10(accessToken) });, +		// Facebook returns JSON data with text/javascript content type, +		MappingJacksonHttpMessageConverter json = new MappingJacksonHttpMessageConverter();, +		json.setSupportedMediaTypes(Arrays.asList(new MediaType("text", "javascript")));, +		restTemplate.getMessageConverters().add(json);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookOperations.java, +	, +	 * @return a list of <code>String</code>s where each entry is the Facebook ID of one of the user's friends., +	 * @param status The message to post, +	 * @param message The message to post, +	 * @param link A link to be included in the status update, +	 * Low-level publish-to-Facebook method for publishing any type of object supported by Facebook's API., +	 * @param object The ID of the object to publish to., +	 * @param connection The connection to be published., +	 * @param data The data to be published., +	 * @param profileId the Facebook ID of the user., +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +		restTemplate = new RestTemplate();, +		restTemplate.setInterceptors(new ClientHttpRequestInterceptor[] { OAuth2RequestInterceptor.draft10(accessToken) });, +		// Facebook returns JSON data with text/javascript content type, +		MappingJacksonHttpMessageConverter json = new MappingJacksonHttpMessageConverter();, +		json.setSupportedMediaTypes(Arrays.asList(new MediaType("text", "javascript")));, +		restTemplate.getMessageConverters().add(json);, +++ b/spring-social-github/src/main/java/org/springframework/social/github/GitHubTemplate.java, +import org.springframework.http.client.ClientHttpRequestInterceptor;, +import org.springframework.web.client.RestTemplate;, +	private final RestTemplate restTemplate;, +		restTemplate = new RestTemplate();, +		restTemplate.setInterceptors(new ClientHttpRequestInterceptor[] { OAuth2RequestInterceptor.draft8(accessToken) });, +		Map<String, ?> result = restTemplate.getForObject(PROFILE_URL, Map.class);, +	// subclassing hooks, +	, +	protected RestTemplate getRestTemplate() {, +		return restTemplate;, +	}, +	, +	// internal helpers, +, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookOperations.java, +	, +	 * @return a list of <code>String</code>s where each entry is the Facebook ID of one of the user's friends., +	 * @param status The message to post, +	 * @param message The message to post, +	 * @param link A link to be included in the status update, +	 * Low-level publish-to-Facebook method for publishing any type of object supported by Facebook's API., +	 * @param object The ID of the object to publish to., +	 * @param connection The connection to be published., +	 * @param data The data to be published., +	 * @param profileId the Facebook ID of the user., +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +		restTemplate = new RestTemplate();, +		restTemplate.setInterceptors(new ClientHttpRequestInterceptor[] { OAuth2RequestInterceptor.draft10(accessToken) });, +		// Facebook returns JSON data with text/javascript content type, +		MappingJacksonHttpMessageConverter json = new MappingJacksonHttpMessageConverter();, +		json.setSupportedMediaTypes(Arrays.asList(new MediaType("text", "javascript")));, +		restTemplate.getMessageConverters().add(json);, +++ b/spring-social-github/src/main/java/org/springframework/social/github/GitHubTemplate.java, +import org.springframework.http.client.ClientHttpRequestInterceptor;, +import org.springframework.web.client.RestTemplate;, +	private final RestTemplate restTemplate;, +		restTemplate = new RestTemplate();, +		restTemplate.setInterceptors(new ClientHttpRequestInterceptor[] { OAuth2RequestInterceptor.draft8(accessToken) });, +		Map<String, ?> result = restTemplate.getForObject(PROFILE_URL, Map.class);, +	// subclassing hooks, +	, +	protected RestTemplate getRestTemplate() {, +		return restTemplate;, +	}, +	, +	// internal helpers, +, +++ b/spring-social-github/src/test/java/org/springframework/social/github/GitHubTemplateTest.java, +, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookOperations.java, +	, +	 * @return a list of <code>String</code>s where each entry is the Facebook ID of one of the user's friends.]