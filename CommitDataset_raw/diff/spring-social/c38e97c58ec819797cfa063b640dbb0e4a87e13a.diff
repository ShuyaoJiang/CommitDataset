[+++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/OAuth1Template.java, +import java.net.URLEncoder;, +		StringBuilder authorizeUrl = new StringBuilder(this.authorizeUrl).append('?').append("oauth_token").append('=').append(formEncode(requestToken));, +			authorizeUrl.append('&').append("callback_url").append("=").append(formEncode(callbackUrl));, +		return authorizeUrl.toString();, +	private String formEncode(String data) {, +			return URLEncoder.encode(data, "UTF-8");, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/OAuth1Template.java, +import java.net.URLEncoder;, +		StringBuilder authorizeUrl = new StringBuilder(this.authorizeUrl).append('?').append("oauth_token").append('=').append(formEncode(requestToken));, +			authorizeUrl.append('&').append("callback_url").append("=").append(formEncode(callbackUrl));, +		return authorizeUrl.toString();, +	private String formEncode(String data) {, +			return URLEncoder.encode(data, "UTF-8");, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +import java.net.URLEncoder;, +		this.authorizeUrl = authorizeUrl + "?response_type=code&client_id=" + formEncode(clientId);, +		StringBuilder authorizeUrl = new StringBuilder(this.authorizeUrl).append('&').append("redirect_uri").append('=').append(formEncode(redirectUri));, +			authorizeUrl.append('&').append("scope").append('=').append(formEncode(scope));, +			authorizeUrl.append('&').append("state").append('=').append(formEncode(state));	, +		return authorizeUrl.toString();, +	private String formEncode(String data) {, +			return URLEncoder.encode(data, "UTF-8");, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/OAuth1Template.java, +import java.net.URLEncoder;, +		StringBuilder authorizeUrl = new StringBuilder(this.authorizeUrl).append('?').append("oauth_token").append('=').append(formEncode(requestToken));, +			authorizeUrl.append('&').append("callback_url").append("=").append(formEncode(callbackUrl));, +		return authorizeUrl.toString();, +	private String formEncode(String data) {, +			return URLEncoder.encode(data, "UTF-8");, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +import java.net.URLEncoder;, +		this.authorizeUrl = authorizeUrl + "?response_type=code&client_id=" + formEncode(clientId);, +		StringBuilder authorizeUrl = new StringBuilder(this.authorizeUrl).append('&').append("redirect_uri").append('=').append(formEncode(redirectUri));, +			authorizeUrl.append('&').append("scope").append('=').append(formEncode(scope));, +			authorizeUrl.append('&').append("state").append('=').append(formEncode(state));	, +		return authorizeUrl.toString();, +	private String formEncode(String data) {, +			return URLEncoder.encode(data, "UTF-8");, +++ b/spring-social-test/src/test/java/org/springframework/social/oauth1/OAuth1TemplateTest.java, +		assertEquals("https://www.someprovider.com/oauth/authorize?oauth_token=request_token&callback_url=http%3A%2F%2Fwww.someclient.com%2Foauth%2Fcallback",, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/OAuth1Template.java, +import java.net.URLEncoder;, +		StringBuilder authorizeUrl = new StringBuilder(this.authorizeUrl).append('?').append("oauth_token").append('=').append(formEncode(requestToken));, +			authorizeUrl.append('&').append("callback_url").append("=").append(formEncode(callbackUrl));, +		return authorizeUrl.toString();, +	private String formEncode(String data) {, +			return URLEncoder.encode(data, "UTF-8");, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +import java.net.URLEncoder;, +		this.authorizeUrl = authorizeUrl + "?response_type=code&client_id=" + formEncode(clientId);, +		StringBuilder authorizeUrl = new StringBuilder(this.authorizeUrl).append('&').append("redirect_uri").append('=').append(formEncode(redirectUri));, +			authorizeUrl.append('&').append("scope").append('=').append(formEncode(scope));, +			authorizeUrl.append('&').append("state").append('=').append(formEncode(state));	, +		return authorizeUrl.toString();, +	private String formEncode(String data) {, +			return URLEncoder.encode(data, "UTF-8");, +++ b/spring-social-test/src/test/java/org/springframework/social/oauth1/OAuth1TemplateTest.java, +		assertEquals("https://www.someprovider.com/oauth/authorize?oauth_token=request_token&callback_url=http%3A%2F%2Fwww.someclient.com%2Foauth%2Fcallback",, +++ b/spring-social-test/src/test/java/org/springframework/social/oauth2/OAuth2TemplateTest.java, +		String expected = "http://www.someprovider.com/oauth/authorize?response_type=code&client_id=client_id&redirect_uri=http%3A%2F%2Fwww.someclient.com%2Fconnect%2Ffoo&scope=read%2Cwrite";, +		String expected = "http://www.someprovider.com/oauth/authorize?response_type=code&client_id=client_id&redirect_uri=http%3A%2F%2Fwww.someclient.com%2Fconnect%2Ffoo";]