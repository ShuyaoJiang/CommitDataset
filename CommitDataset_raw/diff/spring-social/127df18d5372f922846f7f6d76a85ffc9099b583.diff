[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionSignUp.java, +	 * @return the new user id (null indicates that an implicit local user profile could not be created)., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionSignUp.java, +	 * @return the new user id (null indicates that an implicit local user profile could not be created)., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.java, +			if (newUserId != null), +			{, +		}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionSignUp.java, +	 * @return the new user id (null indicates that an implicit local user profile could not be created)., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.java, +			if (newUserId != null), +			{, +		}, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepositoryTest.java, +	, +	@Test, +	public void findUserIdWithConnectionNoConnection_withConnectionSignUpReturningNull() {		, +		Connection<TestFacebookApi> connection = connectionFactory.createConnection(new AccessGrant("12345"));, +		usersConnectionRepository.setConnectionSignUp(new ConnectionSignUp() {, +			public String execute(Connection<?> connection) {, +				return null;, +			}, +		});, +		List<String> userIds = usersConnectionRepository.findUserIdsWithConnection(connection);, +		assertEquals(0, userIds.size());, +	}]