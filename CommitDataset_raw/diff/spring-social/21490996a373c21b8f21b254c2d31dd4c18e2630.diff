[+++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/web/TwitterSigninController.java, +/**, + * Controller that performs Twitter's "sign in with Twitter" OAuth flow, as described at http://dev.twitter.com/pages/sign_in_with_twitter., + * Upon completing the signin flow, looks up the application account ID connected with the Twitter profile and signs in., + * If no connection can be found, the controller goes to a no-connection view, "redirect:/signup" by default.  , + * @author Craig Walls, + */, +	/**, +	 * Constructs the Twitter sign in controller., +	 * @param connectionRepository a connection repository used to lookup the account ID connected to the Twitter profile., +	 * @param signinGateway the signin strategy used to authenticate the user with the application., +	 * @param applicationUrl the base secure URL for this application, used to construct the callback URL passed to the service providers at the beginning of the connection process., +	 */, +	/**, +	 * Initiates the sign-in with Twitter flow by fetching a request token and redirecting to Twitter's authentication URL., +	 */, +	/**, +	 * Processes the authentication callback from Twitter after the user authenticates with Twitter. Exchanges the, +	 * request token and given verifier for an access token. Uses that access token to lookup a connected account ID to signin with., +	 * If there is no connection for access token, the flow will transition to the no-connection view, "redirect:/signup" by default., +	 */, +	private static final String TWITTER_PROVIDER_ID = "twitter";, +, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/web/TwitterSigninController.java, +/**, + * Controller that performs Twitter's "sign in with Twitter" OAuth flow, as described at http://dev.twitter.com/pages/sign_in_with_twitter., + * Upon completing the signin flow, looks up the application account ID connected with the Twitter profile and signs in., + * If no connection can be found, the controller goes to a no-connection view, "redirect:/signup" by default.  , + * @author Craig Walls, + */, +	/**, +	 * Constructs the Twitter sign in controller., +	 * @param connectionRepository a connection repository used to lookup the account ID connected to the Twitter profile., +	 * @param signinGateway the signin strategy used to authenticate the user with the application., +	 * @param applicationUrl the base secure URL for this application, used to construct the callback URL passed to the service providers at the beginning of the connection process., +	 */, +	/**, +	 * Initiates the sign-in with Twitter flow by fetching a request token and redirecting to Twitter's authentication URL., +	 */, +	/**, +	 * Processes the authentication callback from Twitter after the user authenticates with Twitter. Exchanges the, +	 * request token and given verifier for an access token. Uses that access token to lookup a connected account ID to signin with., +	 * If there is no connection for access token, the flow will transition to the no-connection view, "redirect:/signup" by default., +	 */, +	private static final String TWITTER_PROVIDER_ID = "twitter";, +, +++ b/spring-social-web/src/main/java/org/springframework/social/web/connect/ServiceProviderLocator.java, + * Looks up service providers, by name, from the application context., +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/web/TwitterSigninController.java, +/**, + * Controller that performs Twitter's "sign in with Twitter" OAuth flow, as described at http://dev.twitter.com/pages/sign_in_with_twitter., + * Upon completing the signin flow, looks up the application account ID connected with the Twitter profile and signs in., + * If no connection can be found, the controller goes to a no-connection view, "redirect:/signup" by default.  , + * @author Craig Walls, + */, +	/**, +	 * Constructs the Twitter sign in controller., +	 * @param connectionRepository a connection repository used to lookup the account ID connected to the Twitter profile., +	 * @param signinGateway the signin strategy used to authenticate the user with the application., +	 * @param applicationUrl the base secure URL for this application, used to construct the callback URL passed to the service providers at the beginning of the connection process., +	 */, +	/**, +	 * Initiates the sign-in with Twitter flow by fetching a request token and redirecting to Twitter's authentication URL., +	 */, +	/**, +	 * Processes the authentication callback from Twitter after the user authenticates with Twitter. Exchanges the, +	 * request token and given verifier for an access token. Uses that access token to lookup a connected account ID to signin with., +	 * If there is no connection for access token, the flow will transition to the no-connection view, "redirect:/signup" by default., +	 */, +	private static final String TWITTER_PROVIDER_ID = "twitter";, +, +++ b/spring-social-web/src/main/java/org/springframework/social/web/connect/ServiceProviderLocator.java, + * Looks up service providers, by name, from the application context., +++ b/spring-social-web/src/main/java/org/springframework/social/web/connect/SignInControllerGateway.java, + * Strategy interface for authenticating users to an application given their account ID., + * An application should provide their own implementation of this interface for use by FacebookSigninController and TwitterSigninController.]