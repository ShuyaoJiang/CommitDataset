[+++ b/.gitignore, +++ b/.gitignore, +++ b/docs/src/reference/docbook/overview.xml, +              <entry>Spring Social's service provider framework and OAuth support.</entry>, +              <entry>Spring Social's <classname>ConnectController</classname>, which handles the OAuth process, establishing connections with social providers.</entry>, +              <entry>spring-social-linkedin</entry>, +              <entry>Includes Spring Social's LinkedIn API.</entry>, +            </row>, +            <row>, +            <row>, +              <entry>spring-social-twitter</entry>, +              <entry>Includes Spring Social's Twitter API as well as support for signing into an application via Twitter.</entry>, +            </row>, +	  <para>To let Spring Social handle the back-and-forth exchange between your application and a service required for OAuth authorization, you'll need the web module:</para>, +++ b/.gitignore, +++ b/docs/src/reference/docbook/overview.xml, +              <entry>Spring Social's service provider framework and OAuth support.</entry>, +              <entry>Spring Social's <classname>ConnectController</classname>, which handles the OAuth process, establishing connections with social providers.</entry>, +              <entry>spring-social-linkedin</entry>, +              <entry>Includes Spring Social's LinkedIn API.</entry>, +            </row>, +            <row>, +            <row>, +              <entry>spring-social-twitter</entry>, +              <entry>Includes Spring Social's Twitter API as well as support for signing into an application via Twitter.</entry>, +            </row>, +	  <para>To let Spring Social handle the back-and-forth exchange between your application and a service required for OAuth authorization, you'll need the web module:</para>, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/ServiceProviderElementParser.java, +		String beanId = element.getAttribute("id");, +		if(beanId == null || beanId.isEmpty()) {, +			beanId = parserContext.getReaderContext().generateBeanName(providerBeanDefinition);, +		}, +		parserContext.getRegistry().registerBeanDefinition(beanId, providerBeanDefinition);, +++ b/.gitignore, +++ b/docs/src/reference/docbook/overview.xml, +              <entry>Spring Social's service provider framework and OAuth support.</entry>, +              <entry>Spring Social's <classname>ConnectController</classname>, which handles the OAuth process, establishing connections with social providers.</entry>, +              <entry>spring-social-linkedin</entry>, +              <entry>Includes Spring Social's LinkedIn API.</entry>, +            </row>, +            <row>, +            <row>, +              <entry>spring-social-twitter</entry>, +              <entry>Includes Spring Social's Twitter API as well as support for signing into an application via Twitter.</entry>, +            </row>, +	  <para>To let Spring Social handle the back-and-forth exchange between your application and a service required for OAuth authorization, you'll need the web module:</para>, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/ServiceProviderElementParser.java, +		String beanId = element.getAttribute("id");, +		if(beanId == null || beanId.isEmpty()) {, +			beanId = parserContext.getReaderContext().generateBeanName(providerBeanDefinition);, +		}, +		parserContext.getRegistry().registerBeanDefinition(beanId, providerBeanDefinition);, +++ b/spring-social-config/src/main/resources/org/springframework/social/config/xml/spring-social-1.0.xsd, +			<xsd:attribute name="id" type="xsd:string">, +				<xsd:annotation>, +					<xsd:documentation>, +						The bean ID, +					</xsd:documentation>, +				</xsd:annotation>, +			</xsd:attribute>, +++ b/.gitignore, +++ b/docs/src/reference/docbook/overview.xml, +              <entry>Spring Social's service provider framework and OAuth support.</entry>, +              <entry>Spring Social's <classname>ConnectController</classname>, which handles the OAuth process, establishing connections with social providers.</entry>, +              <entry>spring-social-linkedin</entry>, +              <entry>Includes Spring Social's LinkedIn API.</entry>, +            </row>, +            <row>, +            <row>, +              <entry>spring-social-twitter</entry>, +              <entry>Includes Spring Social's Twitter API as well as support for signing into an application via Twitter.</entry>, +            </row>, +	  <para>To let Spring Social handle the back-and-forth exchange between your application and a service required for OAuth authorization, you'll need the web module:</para>, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/ServiceProviderElementParser.java, +		String beanId = element.getAttribute("id");, +		if(beanId == null || beanId.isEmpty()) {, +			beanId = parserContext.getReaderContext().generateBeanName(providerBeanDefinition);, +		}, +		parserContext.getRegistry().registerBeanDefinition(beanId, providerBeanDefinition);, +++ b/spring-social-config/src/main/resources/org/springframework/social/config/xml/spring-social-1.0.xsd, +			<xsd:attribute name="id" type="xsd:string">, +				<xsd:annotation>, +					<xsd:documentation>, +						The bean ID, +					</xsd:documentation>, +				</xsd:annotation>, +			</xsd:attribute>, +++ b/spring-social-config/src/test/java/org/springframework/social/config/xml/SocialNamespaceHandlerTest.java, +import static org.junit.Assert.*;, +, +		assertEquals("facebookServiceProvider", applicationContext.getBeanNamesForType(FacebookServiceProvider.class)[0]);, +++ b/.gitignore, +++ b/docs/src/reference/docbook/overview.xml, +              <entry>Spring Social's service provider framework and OAuth support.</entry>, +              <entry>Spring Social's <classname>ConnectController</classname>, which handles the OAuth process, establishing connections with social providers.</entry>, +              <entry>spring-social-linkedin</entry>, +              <entry>Includes Spring Social's LinkedIn API.</entry>, +            </row>, +            <row>, +            <row>]