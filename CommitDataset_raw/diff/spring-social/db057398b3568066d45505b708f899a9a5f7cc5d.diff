[+++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/OAuth1Parameters.java, +import java.util.List;, +import java.util.Map;, +, +import org.springframework.social.support.AbstractOAuthParameters;, +public final class OAuth1Parameters extends AbstractOAuthParameters {, +	public static final OAuth1Parameters NONE = new OAuth1Parameters(null);, +, +	public OAuth1Parameters(Map<String, List<String>> parameters) {, +		super(parameters);, +	}, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/OAuth1Parameters.java, +import java.util.List;, +import java.util.Map;, +, +import org.springframework.social.support.AbstractOAuthParameters;, +public final class OAuth1Parameters extends AbstractOAuthParameters {, +	public static final OAuth1Parameters NONE = new OAuth1Parameters(null);, +, +	public OAuth1Parameters(Map<String, List<String>> parameters) {, +		super(parameters);, +	}, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Parameters.java, +import java.util.List;, +import java.util.Map;, +, +import org.springframework.social.support.AbstractOAuthParameters;, +public final class OAuth2Parameters extends AbstractOAuthParameters {, +	public OAuth2Parameters(Map<String, List<String>> parameters) {, +		super(parameters);, +	}, +	, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/OAuth1Parameters.java, +import java.util.List;, +import java.util.Map;, +, +import org.springframework.social.support.AbstractOAuthParameters;, +public final class OAuth1Parameters extends AbstractOAuthParameters {, +	public static final OAuth1Parameters NONE = new OAuth1Parameters(null);, +, +	public OAuth1Parameters(Map<String, List<String>> parameters) {, +		super(parameters);, +	}, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Parameters.java, +import java.util.List;, +import java.util.Map;, +, +import org.springframework.social.support.AbstractOAuthParameters;, +public final class OAuth2Parameters extends AbstractOAuthParameters {, +	public OAuth2Parameters(Map<String, List<String>> parameters) {, +		super(parameters);, +	}, +	, +++ b/spring-social-core/src/main/java/org/springframework/social/support/AbstractOAuthParameters.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.support;, +, +import java.util.Collection;, +import java.util.LinkedHashMap;, +import java.util.LinkedList;, +import java.util.List;, +import java.util.Map;, +import java.util.Set;, +, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +, +/**, + * Base class for OAuth1Parameters and OAuth2Parameters to shield them from any direct implementation of MultiValueMap., + * @author Craig Walls, + */, +public abstract class AbstractOAuthParameters implements MultiValueMap<String, String> {, +, +	private final Map<String, List<String>> parameters;, +	, +	protected AbstractOAuthParameters(Map<String, List<String>> parameters) {, +		if (parameters != null) {, +			this.parameters = parameters;, +		} else {, +			this.parameters = new LinkedMultiValueMap<String, String>();, +		}, +	}, +	, +	// MultiValueMap method implementations, +	, +	public void clear() {]