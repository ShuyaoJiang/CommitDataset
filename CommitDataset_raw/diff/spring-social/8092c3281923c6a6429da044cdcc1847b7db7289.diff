[+++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/DirectMessageTemplate.java, +import org.springframework.social.twitter.support.json.DirectMessageList;, +		return getLowLevelTwitterApi().fetchObject("direct_messages.json", DirectMessageList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("direct_messages/sent.json", DirectMessageList.class).getList();, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/DirectMessageTemplate.java, +import org.springframework.social.twitter.support.json.DirectMessageList;, +		return getLowLevelTwitterApi().fetchObject("direct_messages.json", DirectMessageList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("direct_messages/sent.json", DirectMessageList.class).getList();, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +import org.springframework.social.twitter.support.json.LongIdsList;, +import org.springframework.social.twitter.support.json.LongList;, +import org.springframework.social.twitter.support.json.TwitterProfileList;, +		return getLowLevelTwitterApi().fetchObject("statuses/friends.json", TwitterProfileList.class, Collections.singletonMap("user_id", String.valueOf(userId))).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/friends.json", TwitterProfileList.class, Collections.singletonMap("screen_name", screenName)).getList();, +		return getLowLevelTwitterApi().fetchObject("friends/ids.json", LongList.class, Collections.singletonMap("user_id", String.valueOf(userId))).getList();, +		return getLowLevelTwitterApi().fetchObject("friends/ids.json", LongList.class, Collections.singletonMap("screen_name", screenName)).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/followers.json", TwitterProfileList.class, Collections.singletonMap("user_id", String.valueOf(userId))).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/followers.json", TwitterProfileList.class, Collections.singletonMap("screen_name", screenName)).getList();, +		return getLowLevelTwitterApi().fetchObject("followers/ids.json", LongList.class, Collections.singletonMap("user_id", String.valueOf(userId))).getList();, +		return getLowLevelTwitterApi().fetchObject("followers/ids.json", LongList.class, Collections.singletonMap("screen_name", screenName)).getList();, +		return getLowLevelTwitterApi().fetchObject("friendships/incoming.json", LongIdsList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("friendships/outgoing.json", LongIdsList.class).getList();, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/DirectMessageTemplate.java, +import org.springframework.social.twitter.support.json.DirectMessageList;, +		return getLowLevelTwitterApi().fetchObject("direct_messages.json", DirectMessageList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("direct_messages/sent.json", DirectMessageList.class).getList();, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +import org.springframework.social.twitter.support.json.LongIdsList;, +import org.springframework.social.twitter.support.json.LongList;, +import org.springframework.social.twitter.support.json.TwitterProfileList;, +		return getLowLevelTwitterApi().fetchObject("statuses/friends.json", TwitterProfileList.class, Collections.singletonMap("user_id", String.valueOf(userId))).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/friends.json", TwitterProfileList.class, Collections.singletonMap("screen_name", screenName)).getList();, +		return getLowLevelTwitterApi().fetchObject("friends/ids.json", LongList.class, Collections.singletonMap("user_id", String.valueOf(userId))).getList();, +		return getLowLevelTwitterApi().fetchObject("friends/ids.json", LongList.class, Collections.singletonMap("screen_name", screenName)).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/followers.json", TwitterProfileList.class, Collections.singletonMap("user_id", String.valueOf(userId))).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/followers.json", TwitterProfileList.class, Collections.singletonMap("screen_name", screenName)).getList();, +		return getLowLevelTwitterApi().fetchObject("followers/ids.json", LongList.class, Collections.singletonMap("user_id", String.valueOf(userId))).getList();, +		return getLowLevelTwitterApi().fetchObject("followers/ids.json", LongList.class, Collections.singletonMap("screen_name", screenName)).getList();, +		return getLowLevelTwitterApi().fetchObject("friendships/incoming.json", LongIdsList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("friendships/outgoing.json", LongIdsList.class).getList();, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/ListTemplate.java, +import org.springframework.social.twitter.support.json.TwitterProfileUsersList;, +import org.springframework.social.twitter.support.json.UserListList;, +		return getLowLevelTwitterApi().fetchObject(userId + "/lists.json", UserListList.class).getList();, +		return getLowLevelTwitterApi().fetchObject(screenName + "/lists.json", UserListList.class).getList();, +		return getLowLevelTwitterApi().fetchObject(userId + "/lists/" + listId + ".json", UserList.class);, +		return getLowLevelTwitterApi().fetchObject(screenName + "/lists/" + listSlug + ".json", UserList.class);, +		return getLowLevelTwitterApi().publish(userApi.getProfileId() + "/lists.json", request, UserList.class);, +		return getLowLevelTwitterApi().publish(userApi.getProfileId() + "/lists/" + listId + ".json", request, UserList.class);, +		return getLowLevelTwitterApi().fetchObject(userId + "/" + listId + "/members.json", TwitterProfileUsersList.class).getList();, +		return getLowLevelTwitterApi().fetchObject(screenName + "/" + listSlug + "/members.json", TwitterProfileUsersList.class).getList();, +		return getLowLevelTwitterApi().publish(userApi.getProfileId() + "/" + listId + "/members/create_all.json", request, UserList.class);, +		return getLowLevelTwitterApi().publish(userApi.getProfileId() + "/" + listSlug + "/members/create_all.json", request, UserList.class);, +		return getLowLevelTwitterApi().fetchObject(userId + "/" + listId + "/subscribers.json", TwitterProfileUsersList.class).getList();, +		return getLowLevelTwitterApi().fetchObject(screenName + "/" + listSlug + "/subscribers.json", TwitterProfileUsersList.class).getList();, +		return getLowLevelTwitterApi().publish(ownerId + "/" + listId + "/subscribers.json", data, UserList.class);, +		return getLowLevelTwitterApi().publish(ownerScreenName + "/" + listSlug + "/subscribers.json", data, UserList.class);, +		return getLowLevelTwitterApi().fetchObject(userId + "/lists/memberships.json", UserListList.class).getList();, +		return getLowLevelTwitterApi().fetchObject(screenName + "/lists/memberships.json", UserListList.class).getList();, +		return getLowLevelTwitterApi().fetchObject(userId + "/lists/subscriptions.json", UserListList.class).getList();, +		return getLowLevelTwitterApi().fetchObject(screenName + "/lists/subscriptions.json", UserListList.class).getList();, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/DirectMessageTemplate.java, +import org.springframework.social.twitter.support.json.DirectMessageList;, +		return getLowLevelTwitterApi().fetchObject("direct_messages.json", DirectMessageList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("direct_messages/sent.json", DirectMessageList.class).getList();, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +import org.springframework.social.twitter.support.json.LongIdsList;, +import org.springframework.social.twitter.support.json.LongList;, +import org.springframework.social.twitter.support.json.TwitterProfileList;, +		return getLowLevelTwitterApi().fetchObject("statuses/friends.json", TwitterProfileList.class, Collections.singletonMap("user_id", String.valueOf(userId))).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/friends.json", TwitterProfileList.class, Collections.singletonMap("screen_name", screenName)).getList();, +		return getLowLevelTwitterApi().fetchObject("friends/ids.json", LongList.class, Collections.singletonMap("user_id", String.valueOf(userId))).getList();, +		return getLowLevelTwitterApi().fetchObject("friends/ids.json", LongList.class, Collections.singletonMap("screen_name", screenName)).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/followers.json", TwitterProfileList.class, Collections.singletonMap("user_id", String.valueOf(userId))).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/followers.json", TwitterProfileList.class, Collections.singletonMap("screen_name", screenName)).getList();, +		return getLowLevelTwitterApi().fetchObject("followers/ids.json", LongList.class, Collections.singletonMap("user_id", String.valueOf(userId))).getList();, +		return getLowLevelTwitterApi().fetchObject("followers/ids.json", LongList.class, Collections.singletonMap("screen_name", screenName)).getList();, +		return getLowLevelTwitterApi().fetchObject("friendships/incoming.json", LongIdsList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("friendships/outgoing.json", LongIdsList.class).getList();, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/ListTemplate.java, +import org.springframework.social.twitter.support.json.TwitterProfileUsersList;, +import org.springframework.social.twitter.support.json.UserListList;, +		return getLowLevelTwitterApi().fetchObject(userId + "/lists.json", UserListList.class).getList();, +		return getLowLevelTwitterApi().fetchObject(screenName + "/lists.json", UserListList.class).getList();, +		return getLowLevelTwitterApi().fetchObject(userId + "/lists/" + listId + ".json", UserList.class);, +		return getLowLevelTwitterApi().fetchObject(screenName + "/lists/" + listSlug + ".json", UserList.class);, +		return getLowLevelTwitterApi().publish(userApi.getProfileId() + "/lists.json", request, UserList.class);, +		return getLowLevelTwitterApi().publish(userApi.getProfileId() + "/lists/" + listId + ".json", request, UserList.class);, +		return getLowLevelTwitterApi().fetchObject(userId + "/" + listId + "/members.json", TwitterProfileUsersList.class).getList();, +		return getLowLevelTwitterApi().fetchObject(screenName + "/" + listSlug + "/members.json", TwitterProfileUsersList.class).getList();, +		return getLowLevelTwitterApi().publish(userApi.getProfileId() + "/" + listId + "/members/create_all.json", request, UserList.class);, +		return getLowLevelTwitterApi().publish(userApi.getProfileId() + "/" + listSlug + "/members/create_all.json", request, UserList.class);, +		return getLowLevelTwitterApi().fetchObject(userId + "/" + listId + "/subscribers.json", TwitterProfileUsersList.class).getList();, +		return getLowLevelTwitterApi().fetchObject(screenName + "/" + listSlug + "/subscribers.json", TwitterProfileUsersList.class).getList();, +		return getLowLevelTwitterApi().publish(ownerId + "/" + listId + "/subscribers.json", data, UserList.class);, +		return getLowLevelTwitterApi().publish(ownerScreenName + "/" + listSlug + "/subscribers.json", data, UserList.class);, +		return getLowLevelTwitterApi().fetchObject(userId + "/lists/memberships.json", UserListList.class).getList();, +		return getLowLevelTwitterApi().fetchObject(screenName + "/lists/memberships.json", UserListList.class).getList();, +		return getLowLevelTwitterApi().fetchObject(userId + "/lists/subscriptions.json", UserListList.class).getList();, +		return getLowLevelTwitterApi().fetchObject(screenName + "/lists/subscriptions.json", UserListList.class).getList();]