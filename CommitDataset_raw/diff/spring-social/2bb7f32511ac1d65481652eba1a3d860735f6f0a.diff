[+++ b/build.gradle, +		compile ("org.springframework.android:spring-android-rest-template:1.0.0.M2") {, +		    optional = true, +		    transitive = false, +		}, +++ b/build.gradle, +		compile ("org.springframework.android:spring-android-rest-template:1.0.0.M2") {, +		    optional = true, +		    transitive = false, +		}, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GrantType.java, +package org.springframework.social.oauth2;, +, +/**, + * OAuth2 supports two types of authorization flow, typically referred to as, + * "Client-side" and "Server-side"., + *, + * @author Roy Clarkson, + */, +public enum GrantType {, +	/**, +	 * AuthorizationCode denotes the server-side authorization flow, and is, +	 * associated with the response_type=code parameter value, +	 */, +	AuthorizationCode,, +, +	/**, +	 * ImplicitGrant denotes the client-side authorization flow and is, +	 * associated with the response_type=token parameter value, +	 */, +	ImplicitGrant, +}, +++ b/build.gradle, +		compile ("org.springframework.android:spring-android-rest-template:1.0.0.M2") {, +		    optional = true, +		    transitive = false, +		}, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GrantType.java, +package org.springframework.social.oauth2;, +, +/**, + * OAuth2 supports two types of authorization flow, typically referred to as, + * "Client-side" and "Server-side"., + *, + * @author Roy Clarkson, + */, +public enum GrantType {, +	/**, +	 * AuthorizationCode denotes the server-side authorization flow, and is, +	 * associated with the response_type=code parameter value, +	 */, +	AuthorizationCode,, +, +	/**, +	 * ImplicitGrant denotes the client-side authorization flow and is, +	 * associated with the response_type=token parameter value, +	 */, +	ImplicitGrant, +}, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, + * @author Roy Clarkson, +	String buildAuthorizeUrl(String redirectUri, String scope, String state, GrantType grantType, MultiValueMap<String, String> additionalParameters);, +	String buildAuthenticateUrl(String redirectUri, String state, GrantType grantType, MultiValueMap<String, String> additionalParameters);, +++ b/build.gradle, +		compile ("org.springframework.android:spring-android-rest-template:1.0.0.M2") {, +		    optional = true, +		    transitive = false, +		}, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GrantType.java, +package org.springframework.social.oauth2;, +, +/**, + * OAuth2 supports two types of authorization flow, typically referred to as, + * "Client-side" and "Server-side"., + *, + * @author Roy Clarkson, + */, +public enum GrantType {, +	/**, +	 * AuthorizationCode denotes the server-side authorization flow, and is, +	 * associated with the response_type=code parameter value, +	 */, +	AuthorizationCode,, +, +	/**, +	 * ImplicitGrant denotes the client-side authorization flow and is, +	 * associated with the response_type=token parameter value, +	 */, +	ImplicitGrant, +}, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, + * @author Roy Clarkson, +	String buildAuthorizeUrl(String redirectUri, String scope, String state, GrantType grantType, MultiValueMap<String, String> additionalParameters);, +	String buildAuthenticateUrl(String redirectUri, String state, GrantType grantType, MultiValueMap<String, String> additionalParameters);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +import java.util.Iterator;, +import java.util.Map.Entry;, + * @author Roy Clarkson, +		String clientInfo = "?client_id=" + formEncode(clientId);, +			this.authenticateUrl = authenticateUrl + "?client_id=" + formEncode(clientId);]