[+++ b/build.gradle, +        // to be able to use the mock rest server, +        testCompile project(':spring-social-core').sourceSets.test.classes, +++ b/build.gradle, +        // to be able to use the mock rest server, +        testCompile project(':spring-social-core').sourceSets.test.classes, +++ /dev/null, +++ b/build.gradle, +        // to be able to use the mock rest server, +        testCompile project(':spring-social-core').sourceSets.test.classes, +++ /dev/null, +++ b/samples/spring-social-showcase/src/main/webapp/WEB-INF/spring/appServlet/controllers.xml, +		<constructor-arg ref="connectionRepository" />, +++ b/build.gradle, +        // to be able to use the mock rest server, +        testCompile project(':spring-social-core').sourceSets.test.classes, +++ /dev/null, +++ b/samples/spring-social-showcase/src/main/webapp/WEB-INF/spring/appServlet/controllers.xml, +		<constructor-arg ref="connectionRepository" />, +++ b/samples/spring-social-showcase/src/main/webapp/WEB-INF/spring/security.xml, +		<intercept-url pattern="/signin" access="permitAll" />, +		<intercept-url pattern="/connect/**" access="permitAll" />, +++ b/build.gradle, +        // to be able to use the mock rest server, +        testCompile project(':spring-social-core').sourceSets.test.classes, +++ /dev/null, +++ b/samples/spring-social-showcase/src/main/webapp/WEB-INF/spring/appServlet/controllers.xml, +		<constructor-arg ref="connectionRepository" />, +++ b/samples/spring-social-showcase/src/main/webapp/WEB-INF/spring/security.xml, +		<intercept-url pattern="/signin" access="permitAll" />, +		<intercept-url pattern="/connect/**" access="permitAll" />, +++ b/samples/spring-social-showcase/src/main/webapp/WEB-INF/views/connect/facebookConnect.jsp, +	<p>...or...</p>, +	, +		<input type="hidden" name="huh" value="What the crap?" />, +++ b/build.gradle, +        // to be able to use the mock rest server, +        testCompile project(':spring-social-core').sourceSets.test.classes, +++ /dev/null, +++ b/samples/spring-social-showcase/src/main/webapp/WEB-INF/spring/appServlet/controllers.xml, +		<constructor-arg ref="connectionRepository" />, +++ b/samples/spring-social-showcase/src/main/webapp/WEB-INF/spring/security.xml, +		<intercept-url pattern="/signin" access="permitAll" />, +		<intercept-url pattern="/connect/**" access="permitAll" />, +++ b/samples/spring-social-showcase/src/main/webapp/WEB-INF/views/connect/facebookConnect.jsp, +	<p>...or...</p>, +	, +		<input type="hidden" name="huh" value="What the crap?" />, +++ b/samples/spring-social-showcase/src/main/webapp/WEB-INF/views/signin.jsp, +<p>If you've previously established a connection with Twitter or Facebook, you may signin to the Spring Social Showcase , +by signing into one of these social networks.</p>, +<form action="<c:url value="/connect/twitter/signin" />" method="post">, +	<button type="submit">Sign In With Twitter</button>, +</form>, +, +<form action="<c:url value="/connect/facebook/signin" />" method="post">, +	<button type="submit">Sign In With Facebook</button>, +</form>, +, +<p>Or you may signin using a username and password:</p>, +++ b/build.gradle, +        // to be able to use the mock rest server, +        testCompile project(':spring-social-core').sourceSets.test.classes, +++ /dev/null, +++ b/samples/spring-social-showcase/src/main/webapp/WEB-INF/spring/appServlet/controllers.xml, +		<constructor-arg ref="connectionRepository" />, +++ b/samples/spring-social-showcase/src/main/webapp/WEB-INF/spring/security.xml, +		<intercept-url pattern="/signin" access="permitAll" />, +		<intercept-url pattern="/connect/**" access="permitAll" />, +++ b/samples/spring-social-showcase/src/main/webapp/WEB-INF/views/connect/facebookConnect.jsp, +	<p>...or...</p>, +	, +		<input type="hidden" name="huh" value="What the crap?" />, +++ b/samples/spring-social-showcase/src/main/webapp/WEB-INF/views/signin.jsp, +<p>If you've previously established a connection with Twitter or Facebook, you may signin to the Spring Social Showcase , +by signing into one of these social networks.</p>, +<form action="<c:url value="/connect/twitter/signin" />" method="post">, +	<button type="submit">Sign In With Twitter</button>, +</form>, +, +<form action="<c:url value="/connect/facebook/signin" />" method="post">, +	<button type="submit">Sign In With Facebook</button>, +</form>, +, +<p>Or you may signin using a username and password:</p>, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/OAuth1Template.java, +		return getTokenFromProvider(requestTokenUrl, requestTokenParameters, null);, +		return getTokenFromProvider(accessTokenUrl, accessTokenParameters, requestToken.getSecret());, +	private OAuthToken getTokenFromProvider(String tokenUrl, Map<String, String> tokenRequestParameters, String tokenSecret) {, +		headers.add("Authorization", getAuthorizationHeaderValue(tokenUrl, tokenRequestParameters, tokenSecret));, +		HttpEntity<String> request = new HttpEntity<String>(headers);, +	private String getAuthorizationHeaderValue(String tokenUrl, Map<String, String> tokenRequestParameters, String tokenSecret) {, +		return SigningUtils.buildAuthorizationHeaderValue(tokenUrl, oauthParameters, Collections.<String, String> emptyMap(), HttpMethod.POST, consumerSecret, tokenSecret);		, +++ b/build.gradle, +        // to be able to use the mock rest server, +        testCompile project(':spring-social-core').sourceSets.test.classes, +++ /dev/null, +++ b/samples/spring-social-showcase/src/main/webapp/WEB-INF/spring/appServlet/controllers.xml, +		<constructor-arg ref="connectionRepository" />, +++ b/samples/spring-social-showcase/src/main/webapp/WEB-INF/spring/security.xml]