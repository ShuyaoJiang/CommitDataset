[+++ b/docs/src/reference/docbook/connecting.xml, +    public ConnectController connectController() throws MalformedURLException {, +        controller.setApplicationUrl(new URL(environment.getProperty("application.url"));, +			<listitem><para><code>GET /connect</code> - Displays a web page showing connection status for all providers.</para></listitem>, +			<listitem><para><code>GET /connect</code> - Displays a web page showing connection status for all providers.</para></listitem>, +			<para>, +				Optionally, you may choose to display a page that shows connection status for all providers., +				In that case, the link might look like this:, +			</para>, +			<programlisting language="xml"><![CDATA[, +<a href="<c:url value="/connect" />">Your connections</a>]]>, +			</programlisting>, +			<para>, +				The view name that <classname>ConnectController</classname> responds with for this URL is "connect/status"., +			</para>, +++ b/docs/src/reference/docbook/connecting.xml, +    public ConnectController connectController() throws MalformedURLException {, +        controller.setApplicationUrl(new URL(environment.getProperty("application.url"));, +			<listitem><para><code>GET /connect</code> - Displays a web page showing connection status for all providers.</para></listitem>, +			<listitem><para><code>GET /connect</code> - Displays a web page showing connection status for all providers.</para></listitem>, +			<para>, +				Optionally, you may choose to display a page that shows connection status for all providers., +				In that case, the link might look like this:, +			</para>, +			<programlisting language="xml"><![CDATA[, +<a href="<c:url value="/connect" />">Your connections</a>]]>, +			</programlisting>, +			<para>, +				The view name that <classname>ConnectController</classname> responds with for this URL is "connect/status"., +			</para>, +++ b/docs/src/reference/docbook/overview.xml, +			Over half a billion of this world's internet users have flocked to these services to keep frequent contact with family, friends, and colleagues., +    <version>3.1.0.RC3</version>, +    <version>4.1.2</version>, +				Each binding, such as Facebook or Twitter, transitively depends on Jackson 1.8.5, so there's nothing special to do to add Jackson to your project's Maven or Gradle build. , +++ b/docs/src/reference/docbook/connecting.xml, +    public ConnectController connectController() throws MalformedURLException {, +        controller.setApplicationUrl(new URL(environment.getProperty("application.url"));, +			<listitem><para><code>GET /connect</code> - Displays a web page showing connection status for all providers.</para></listitem>, +			<listitem><para><code>GET /connect</code> - Displays a web page showing connection status for all providers.</para></listitem>, +			<para>, +				Optionally, you may choose to display a page that shows connection status for all providers., +				In that case, the link might look like this:, +			</para>, +			<programlisting language="xml"><![CDATA[, +<a href="<c:url value="/connect" />">Your connections</a>]]>, +			</programlisting>, +			<para>, +				The view name that <classname>ConnectController</classname> responds with for this URL is "connect/status"., +			</para>, +++ b/docs/src/reference/docbook/overview.xml, +			Over half a billion of this world's internet users have flocked to these services to keep frequent contact with family, friends, and colleagues., +    <version>3.1.0.RC3</version>, +    <version>4.1.2</version>, +				Each binding, such as Facebook or Twitter, transitively depends on Jackson 1.8.5, so there's nothing special to do to add Jackson to your project's Maven or Gradle build. , +++ b/docs/src/reference/docbook/serviceprovider.xml, +params.setRedirectUri("https://my-callback-url");, +AccessGrant accessGrant = oauthOperations.exchangeForAccess(authorizationCode, "https://my-callback-url", null);, +params.setRedirectUri("https://my-callback-url");, +OAuthToken requestToken = oauthOperations.fetchRequestToken("https://my-callback-url", null);, +    new AuthorizedRequestToken(requestToken, oauthVerifier), null);, +    String findUserIdWithConnection(Connection<?> connection);, +++ b/docs/src/reference/docbook/connecting.xml, +    public ConnectController connectController() throws MalformedURLException {, +        controller.setApplicationUrl(new URL(environment.getProperty("application.url"));, +			<listitem><para><code>GET /connect</code> - Displays a web page showing connection status for all providers.</para></listitem>, +			<listitem><para><code>GET /connect</code> - Displays a web page showing connection status for all providers.</para></listitem>, +			<para>, +				Optionally, you may choose to display a page that shows connection status for all providers., +				In that case, the link might look like this:, +			</para>, +			<programlisting language="xml"><![CDATA[, +<a href="<c:url value="/connect" />">Your connections</a>]]>, +			</programlisting>, +			<para>, +				The view name that <classname>ConnectController</classname> responds with for this URL is "connect/status"., +			</para>, +++ b/docs/src/reference/docbook/overview.xml, +			Over half a billion of this world's internet users have flocked to these services to keep frequent contact with family, friends, and colleagues., +    <version>3.1.0.RC3</version>, +    <version>4.1.2</version>, +				Each binding, such as Facebook or Twitter, transitively depends on Jackson 1.8.5, so there's nothing special to do to add Jackson to your project's Maven or Gradle build. , +++ b/docs/src/reference/docbook/serviceprovider.xml, +params.setRedirectUri("https://my-callback-url");, +AccessGrant accessGrant = oauthOperations.exchangeForAccess(authorizationCode, "https://my-callback-url", null);, +params.setRedirectUri("https://my-callback-url");, +OAuthToken requestToken = oauthOperations.fetchRequestToken("https://my-callback-url", null);, +    new AuthorizedRequestToken(requestToken, oauthVerifier), null);, +    String findUserIdWithConnection(Connection<?> connection);, +++ b/docs/src/reference/docbook/signin.xml, +public ProviderSignInController providerSignInController() throws MalformedURLException {, +    controller.setApplicationUrl(new URL(environment.getProperty("application.url")));]