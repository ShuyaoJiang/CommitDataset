[+++ b/README, +Note that this project no longer contains SaaS provider-specific connectivity, +and API bindings. Each of the provider-specific modules is now in its own project., +This will enable those modules to progress and release on a separate schedule, +than Spring Social and be able to react more quickly to changes in the provider's, +API without the need to wait for a Spring Social release., +, +The SaaS provider-specific projects can be cloned from the following GitHub, +URLs:, +, +Twitter: git://github.com/SpringSource/spring-social-twitter.git, +Facebook: git://github.com/SpringSource/spring-social-facebook.git, +LinkedIn: git://github.com/SpringSource/spring-social-linkedin.git, +TripIt: git://github.com/SpringSource/spring-social-tripit.git, +GitHub: git://github.com/SpringSource/spring-social-github.git, +Gowalla: git://github.com/SpringSource/spring-social-gowalla.git, +, +Each of these projects uses the same build submodule as Spring Social. Thus,, +you'll need to either clone them with the --recursive switch or init/update the, +submodule as described above from Spring Social., +, +-------------------------------------------------------------------------------, +++ b/README, +Note that this project no longer contains SaaS provider-specific connectivity, +and API bindings. Each of the provider-specific modules is now in its own project., +This will enable those modules to progress and release on a separate schedule, +than Spring Social and be able to react more quickly to changes in the provider's, +API without the need to wait for a Spring Social release., +, +The SaaS provider-specific projects can be cloned from the following GitHub, +URLs:, +, +Twitter: git://github.com/SpringSource/spring-social-twitter.git, +Facebook: git://github.com/SpringSource/spring-social-facebook.git, +LinkedIn: git://github.com/SpringSource/spring-social-linkedin.git, +TripIt: git://github.com/SpringSource/spring-social-tripit.git, +GitHub: git://github.com/SpringSource/spring-social-github.git, +Gowalla: git://github.com/SpringSource/spring-social-gowalla.git, +, +Each of these projects uses the same build submodule as Spring Social. Thus,, +you'll need to either clone them with the --recursive switch or init/update the, +submodule as described above from Spring Social., +, +-------------------------------------------------------------------------------, +++ b/build.gradle, +    h2Version = '1.3.155', +    jacksonVersion = '1.8.1', +    springVersion = '3.1.0.M2', +    springSecurityVersion = '3.1.0.CI-SNAPSHOT', +        compile ("org.springframework.security:spring-security-crypto:$springSecurityVersion") { optional = true }, +        compile ("javax.servlet:servlet-api:$servletApiVersion") { provided = true }, +++ b/README, +Note that this project no longer contains SaaS provider-specific connectivity, +and API bindings. Each of the provider-specific modules is now in its own project., +This will enable those modules to progress and release on a separate schedule, +than Spring Social and be able to react more quickly to changes in the provider's, +API without the need to wait for a Spring Social release., +, +The SaaS provider-specific projects can be cloned from the following GitHub, +URLs:, +, +Twitter: git://github.com/SpringSource/spring-social-twitter.git, +Facebook: git://github.com/SpringSource/spring-social-facebook.git, +LinkedIn: git://github.com/SpringSource/spring-social-linkedin.git, +TripIt: git://github.com/SpringSource/spring-social-tripit.git, +GitHub: git://github.com/SpringSource/spring-social-github.git, +Gowalla: git://github.com/SpringSource/spring-social-gowalla.git, +, +Each of these projects uses the same build submodule as Spring Social. Thus,, +you'll need to either clone them with the --recursive switch or init/update the, +submodule as described above from Spring Social., +, +-------------------------------------------------------------------------------, +++ b/build.gradle, +    h2Version = '1.3.155', +    jacksonVersion = '1.8.1', +    springVersion = '3.1.0.M2', +    springSecurityVersion = '3.1.0.CI-SNAPSHOT', +        compile ("org.springframework.security:spring-security-crypto:$springSecurityVersion") { optional = true }, +        compile ("javax.servlet:servlet-api:$servletApiVersion") { provided = true }, +++ b/docs/src/info/changelog.txt, +Spring Social 1.0.0 Release Candidate 1 (June 14, 2011), +======================================================, +Compatibility Notes, +   * Extracted provider-specific modules to separate projects., +   * Renamed {Provider}Api.java interfaces to {Provider}.java., +     (e.g. TwitterApi is now Twitter, FacebookApi is now Facebook, etc), +   * Renamed several operations in ConnectionRepository (see JavaDocs/source for details)., +   * Renamed AbstractOAuth1ApiTemplate and AbstractOAuth2ApiTemplate to AbstractOAuth1ApiBinding and AbstractOAuth2ApiBinding, respectively., +   * Simplified ConnectController and ProviderSignInController constructors (see JavaDocs/source for details)., +   * Moved ConnectController & ProviderSignInController's applicationUrl property from constructor to setter and made optional., +   * Renamed ConnectController#postLoginUrl property to postSignInUrl for consistency., +   * Renamed SignInService to SignInAdapter for clarity & added Connection, HttpServletRequest, and HttpServletResponse parameters to signIn method signature., +   * Factored out web.ConnectSupport from ConnectController and ProviderSignInController for reusability., +   * Removed commons-codec dependency; spring-security-crypto is now used for Base64 encoding as well as encryption., +  , +New Features, +   * Enabled use of Spring Social behind a proxy, +   * Facebook API binding:, +     * Photo and video upload]