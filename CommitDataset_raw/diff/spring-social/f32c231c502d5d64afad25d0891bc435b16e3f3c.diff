[+++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/FeedOperations.java, +	String postLink(String message, FacebookLink link);, +	String postLink(String ownerId, String message, FacebookLink link);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/FeedOperations.java, +	String postLink(String message, FacebookLink link);, +	String postLink(String ownerId, String message, FacebookLink link);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/PageOperations.java, +	 * To post a link to the page's feed as the authenticated user, use {@link FeedOperations#postLink(String, String, FacebookLink)} instead., +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/FeedOperations.java, +	String postLink(String message, FacebookLink link);, +	String postLink(String ownerId, String message, FacebookLink link);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/PageOperations.java, +	 * To post a link to the page's feed as the authenticated user, use {@link FeedOperations#postLink(String, String, FacebookLink)} instead., +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/FeedTemplate.java, +	public String postLink(String message, FacebookLink link) {, +		return postLink("me", message, link);, +	public String postLink(String ownerId, String message, FacebookLink link) {, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/FeedOperations.java, +	String postLink(String message, FacebookLink link);, +	String postLink(String ownerId, String message, FacebookLink link);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/PageOperations.java, +	 * To post a link to the page's feed as the authenticated user, use {@link FeedOperations#postLink(String, String, FacebookLink)} instead., +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/FeedTemplate.java, +	public String postLink(String message, FacebookLink link) {, +		return postLink("me", message, link);, +	public String postLink(String ownerId, String message, FacebookLink link) {, +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/api/FeedTemplateTest.java, +		assertEquals("123456_78901234", facebook.feedOperations().postLink("Hello Facebook World", link));, +		assertEquals("123456_78901234", facebook.feedOperations().postLink("123456789", "Hello Facebook World", link));, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/FeedOperations.java, +	String postLink(String message, FacebookLink link);, +	String postLink(String ownerId, String message, FacebookLink link);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/PageOperations.java, +	 * To post a link to the page's feed as the authenticated user, use {@link FeedOperations#postLink(String, String, FacebookLink)} instead., +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/FeedTemplate.java, +	public String postLink(String message, FacebookLink link) {, +		return postLink("me", message, link);, +	public String postLink(String ownerId, String message, FacebookLink link) {, +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/api/FeedTemplateTest.java, +		assertEquals("123456_78901234", facebook.feedOperations().postLink("Hello Facebook World", link));, +		assertEquals("123456_78901234", facebook.feedOperations().postLink("123456789", "Hello Facebook World", link));, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/signin/web/ProviderSignInUtils.java, +	 * @param request the current web request, used to extract sign-in attempt information from the current user session, +	public static Connection<?> getConnection(WebRequest request) {, +	 * @param request the current web request, used to extract sign-in attempt information from the current user session, +	public static void handlePostSignUp(WebRequest request) {, +	private static ProviderSignInAttempt getProviderUserSignInAttempt(WebRequest request) {]