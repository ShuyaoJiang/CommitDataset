[+++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FeedTemplate.java, +import org.springframework.social.facebook.support.json.FeedEntryList;, +		return graphApi.fetchConnections(ownerId, "feed", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(userId, "home", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(userId, "statuses", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(ownerId, "links", FeedEntryList.class).getList();, +		return graphApi.fetchObject(noteId, FeedEntry.class);, +		return graphApi.fetchConnections(ownerId, "notes", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(ownerId, "posts", FeedEntryList.class).getList();, +		return graphApi.fetchObject(entryId, FeedEntry.class);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FeedTemplate.java, +import org.springframework.social.facebook.support.json.FeedEntryList;, +		return graphApi.fetchConnections(ownerId, "feed", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(userId, "home", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(userId, "statuses", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(ownerId, "links", FeedEntryList.class).getList();, +		return graphApi.fetchObject(noteId, FeedEntry.class);, +		return graphApi.fetchConnections(ownerId, "notes", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(ownerId, "posts", FeedEntryList.class).getList();, +		return graphApi.fetchObject(entryId, FeedEntry.class);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FriendTemplate.java, +import org.springframework.social.facebook.support.json.FriendIdList;, +import org.springframework.social.facebook.support.json.ReferenceList;, +		return graphApi.fetchConnections(userId, "friendlists", ReferenceList.class).getList();, +		return graphApi.fetchObject(friendListId, Reference.class);, +		return graphApi.fetchConnections(friendListId, "members", ReferenceList.class).getList();, +		return restTemplate.postForObject(uri, "", Reference.class);, +		return graphApi.fetchConnections(userId, "friends", ReferenceList.class).getList();, +		return graphApi.fetchConnections(userId, "friends", FriendIdList.class, "id").getList();, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FeedTemplate.java, +import org.springframework.social.facebook.support.json.FeedEntryList;, +		return graphApi.fetchConnections(ownerId, "feed", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(userId, "home", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(userId, "statuses", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(ownerId, "links", FeedEntryList.class).getList();, +		return graphApi.fetchObject(noteId, FeedEntry.class);, +		return graphApi.fetchConnections(ownerId, "notes", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(ownerId, "posts", FeedEntryList.class).getList();, +		return graphApi.fetchObject(entryId, FeedEntry.class);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FriendTemplate.java, +import org.springframework.social.facebook.support.json.FriendIdList;, +import org.springframework.social.facebook.support.json.ReferenceList;, +		return graphApi.fetchConnections(userId, "friendlists", ReferenceList.class).getList();, +		return graphApi.fetchObject(friendListId, Reference.class);, +		return graphApi.fetchConnections(friendListId, "members", ReferenceList.class).getList();, +		return restTemplate.postForObject(uri, "", Reference.class);, +		return graphApi.fetchConnections(userId, "friends", ReferenceList.class).getList();, +		return graphApi.fetchConnections(userId, "friends", FriendIdList.class, "id").getList();, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/support/extractors/AbstractResponseExtractor.java, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FeedTemplate.java, +import org.springframework.social.facebook.support.json.FeedEntryList;, +		return graphApi.fetchConnections(ownerId, "feed", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(userId, "home", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(userId, "statuses", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(ownerId, "links", FeedEntryList.class).getList();, +		return graphApi.fetchObject(noteId, FeedEntry.class);, +		return graphApi.fetchConnections(ownerId, "notes", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(ownerId, "posts", FeedEntryList.class).getList();, +		return graphApi.fetchObject(entryId, FeedEntry.class);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FriendTemplate.java, +import org.springframework.social.facebook.support.json.FriendIdList;, +import org.springframework.social.facebook.support.json.ReferenceList;, +		return graphApi.fetchConnections(userId, "friendlists", ReferenceList.class).getList();, +		return graphApi.fetchObject(friendListId, Reference.class);, +		return graphApi.fetchConnections(friendListId, "members", ReferenceList.class).getList();, +		return restTemplate.postForObject(uri, "", Reference.class);, +		return graphApi.fetchConnections(userId, "friends", ReferenceList.class).getList();, +		return graphApi.fetchConnections(userId, "friends", FriendIdList.class, "id").getList();, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/support/extractors/AbstractResponseExtractor.java, +++ /dev/null, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FeedTemplate.java, +import org.springframework.social.facebook.support.json.FeedEntryList;, +		return graphApi.fetchConnections(ownerId, "feed", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(userId, "home", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(userId, "statuses", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(ownerId, "links", FeedEntryList.class).getList();, +		return graphApi.fetchObject(noteId, FeedEntry.class);, +		return graphApi.fetchConnections(ownerId, "notes", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(ownerId, "posts", FeedEntryList.class).getList();, +		return graphApi.fetchObject(entryId, FeedEntry.class);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FriendTemplate.java, +import org.springframework.social.facebook.support.json.FriendIdList;, +import org.springframework.social.facebook.support.json.ReferenceList;, +		return graphApi.fetchConnections(userId, "friendlists", ReferenceList.class).getList();, +		return graphApi.fetchObject(friendListId, Reference.class);, +		return graphApi.fetchConnections(friendListId, "members", ReferenceList.class).getList();, +		return restTemplate.postForObject(uri, "", Reference.class);, +		return graphApi.fetchConnections(userId, "friends", ReferenceList.class).getList();, +		return graphApi.fetchConnections(userId, "friends", FriendIdList.class, "id").getList();, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/support/extractors/AbstractResponseExtractor.java, +++ /dev/null, +++ /dev/null, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FeedTemplate.java, +import org.springframework.social.facebook.support.json.FeedEntryList;, +		return graphApi.fetchConnections(ownerId, "feed", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(userId, "home", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(userId, "statuses", FeedEntryList.class).getList();, +		return graphApi.fetchConnections(ownerId, "links", FeedEntryList.class).getList();, +		return graphApi.fetchObject(noteId, FeedEntry.class);, +		return graphApi.fetchConnections(ownerId, "notes", FeedEntryList.class).getList();]