[+++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth1/AbstractOAuth1ServiceProvider.java, +	/**, +	 * Construct the ServiceProvider's API, secured by OAuth1 and to be invoked by the client application on behalf of a user., +	 * OAuth-1 based ServiceProvider implementors should override to construct their specific API interface implementation e.g. TwitterTemplate., +	 * @param consumerKey the client key assigned by the provider , +	 * @param consumerSecret the client secret assigned by the provider, +	 * @param accessToken the user's access token granted by the provider upon connection authorization, +	 * @param secret the access token secret granted by the provider upon connection authorization, +	 * @return the service API, +	 */, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth1/AbstractOAuth1ServiceProvider.java, +	/**, +	 * Construct the ServiceProvider's API, secured by OAuth1 and to be invoked by the client application on behalf of a user., +	 * OAuth-1 based ServiceProvider implementors should override to construct their specific API interface implementation e.g. TwitterTemplate., +	 * @param consumerKey the client key assigned by the provider , +	 * @param consumerSecret the client secret assigned by the provider, +	 * @param accessToken the user's access token granted by the provider upon connection authorization, +	 * @param secret the access token secret granted by the provider upon connection authorization, +	 * @return the service API, +	 */, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth1/OAuth1Operations.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +/**, + * A service interface for the OAuth1 flow., + * This interface allows you to conduct the "OAuth dance" with a service provider on behalf of a user., + * @author Keith Donald, + */, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth1/AbstractOAuth1ServiceProvider.java, +	/**, +	 * Construct the ServiceProvider's API, secured by OAuth1 and to be invoked by the client application on behalf of a user., +	 * OAuth-1 based ServiceProvider implementors should override to construct their specific API interface implementation e.g. TwitterTemplate., +	 * @param consumerKey the client key assigned by the provider , +	 * @param consumerSecret the client secret assigned by the provider, +	 * @param accessToken the user's access token granted by the provider upon connection authorization, +	 * @param secret the access token secret granted by the provider upon connection authorization, +	 * @return the service API, +	 */, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth1/OAuth1Operations.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +/**, + * A service interface for the OAuth1 flow., + * This interface allows you to conduct the "OAuth dance" with a service provider on behalf of a user., + * @author Keith Donald, + */, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth1/OAuth1Template.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +/**, + * OAuth1Operations implementation that uses REST-template to make the OAuth calls., + * @author Keith Donald, + */, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth1/AbstractOAuth1ServiceProvider.java, +	/**, +	 * Construct the ServiceProvider's API, secured by OAuth1 and to be invoked by the client application on behalf of a user., +	 * OAuth-1 based ServiceProvider implementors should override to construct their specific API interface implementation e.g. TwitterTemplate., +	 * @param consumerKey the client key assigned by the provider , +	 * @param consumerSecret the client secret assigned by the provider, +	 * @param accessToken the user's access token granted by the provider upon connection authorization, +	 * @param secret the access token secret granted by the provider upon connection authorization]