[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/test/java/org/springframework/social/oauth1/OAuth1ClientRequestSignerTest.java, +import static org.junit.Assert.*;, +, +import org.springframework.http.HttpHeaders;, +		HttpHeaders headers = new HttpHeaders();, +		Map<String, String> bodyParameters = Collections.singletonMap("status", "some status message");, +		signer.sign(HttpMethod.POST, headers, "http://bar.com/foo", bodyParameters);, +		assertEquals("POST_AUTHORIZATION_HEADER", headers.get("Authorization").get(0));, +		HttpHeaders headers = new HttpHeaders();, +		Map<String, String> params = new HashMap<String, String>();, +		params.put("a", "1");, +		params.put("b", "2");, +		signer.sign(HttpMethod.GET, headers, "http://bar.com/foo", params);, +		assertEquals("GET_AUTHORIZATION_HEADER", headers.get("Authorization").get(0));, +	// testing here anyway. We're just checking that the signer puts the, +	// authorization into the request...not that the value is good, +					&& parameters.equals(Collections.singletonMap("status", "some status message"))) {, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/test/java/org/springframework/social/oauth1/OAuth1ClientRequestSignerTest.java, +import static org.junit.Assert.*;, +, +import org.springframework.http.HttpHeaders;, +		HttpHeaders headers = new HttpHeaders();, +		Map<String, String> bodyParameters = Collections.singletonMap("status", "some status message");, +		signer.sign(HttpMethod.POST, headers, "http://bar.com/foo", bodyParameters);, +		assertEquals("POST_AUTHORIZATION_HEADER", headers.get("Authorization").get(0));, +		HttpHeaders headers = new HttpHeaders();, +		Map<String, String> params = new HashMap<String, String>();, +		params.put("a", "1");, +		params.put("b", "2");, +		signer.sign(HttpMethod.GET, headers, "http://bar.com/foo", params);, +		assertEquals("GET_AUTHORIZATION_HEADER", headers.get("Authorization").get(0));, +	// testing here anyway. We're just checking that the signer puts the, +	// authorization into the request...not that the value is good, +					&& parameters.equals(Collections.singletonMap("status", "some status message"))) {, +++ b/src/test/java/org/springframework/social/oauth1/ScribeOAuth1RequestSignerTest.java, +import static org.junit.Assert.*;, +, +import java.util.Collections;, +import org.springframework.http.HttpHeaders;, +import org.springframework.http.HttpMethod;, +		Map<String, String> params = Collections.emptyMap();, +		HttpHeaders headers = new HttpHeaders();, +		signer.sign(HttpMethod.GET, headers, "http://foo.com/bar?boo=ya", params);, +, +		String authorization = headers.get("Authorization").get(0);, +		Map<String, String> authEntries = splitAuthorizationHeader(authorization);, +		assertEquals("\"API_KEY\"", authEntries.get("oauth_consumer_key"));, +		assertEquals("\"TOKEN_VALUE\"", authEntries.get("oauth_token"));, +		Map<String, String> params = new HashMap<String, String>();, +		params.put("status", "#willitwork Who knows?");, +		HttpHeaders headers = new HttpHeaders();, +		signer.sign(HttpMethod.POST, headers, "http://foo.com/bar", params);, +, +		String authorization = headers.get("Authorization").get(0);, +		Map<String, String> authEntries = splitAuthorizationHeader(authorization);, +		assertEquals("\"API_KEY\"", authEntries.get("oauth_consumer_key"));, +		assertEquals("\"TOKEN_VALUE\"", authEntries.get("oauth_token"));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/test/java/org/springframework/social/oauth1/OAuth1ClientRequestSignerTest.java, +import static org.junit.Assert.*;, +, +import org.springframework.http.HttpHeaders;, +		HttpHeaders headers = new HttpHeaders();, +		Map<String, String> bodyParameters = Collections.singletonMap("status", "some status message");, +		signer.sign(HttpMethod.POST, headers, "http://bar.com/foo", bodyParameters);, +		assertEquals("POST_AUTHORIZATION_HEADER", headers.get("Authorization").get(0));, +		HttpHeaders headers = new HttpHeaders();, +		Map<String, String> params = new HashMap<String, String>();, +		params.put("a", "1");, +		params.put("b", "2");, +		signer.sign(HttpMethod.GET, headers, "http://bar.com/foo", params);, +		assertEquals("GET_AUTHORIZATION_HEADER", headers.get("Authorization").get(0));, +	// testing here anyway. We're just checking that the signer puts the, +	// authorization into the request...not that the value is good, +					&& parameters.equals(Collections.singletonMap("status", "some status message"))) {, +++ b/src/test/java/org/springframework/social/oauth1/ScribeOAuth1RequestSignerTest.java, +import static org.junit.Assert.*;, +, +import java.util.Collections;, +import org.springframework.http.HttpHeaders;, +import org.springframework.http.HttpMethod;, +		Map<String, String> params = Collections.emptyMap();, +		HttpHeaders headers = new HttpHeaders();, +		signer.sign(HttpMethod.GET, headers, "http://foo.com/bar?boo=ya", params);, +, +		String authorization = headers.get("Authorization").get(0);]