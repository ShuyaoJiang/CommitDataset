[+++ b/spring-social-github/src/main/java/org/springframework/social/github/GitHubTemplate.java, +import java.text.DateFormat;, +import java.text.ParseException;, +import java.text.SimpleDateFormat;, +import java.util.Date;, +import java.util.Locale;, +		String location = user.get("location") != null ? String.valueOf(user.get("location")) : null;, +		Date createdDate = toDate(String.valueOf(user.get("created_at")), dateFormat);, +		return new GitHubUserProfile(gitHubId, username, name, location, company, blog, email, createdDate);, +	private Date toDate(String dateString, DateFormat dateFormat) {, +		try {, +			return dateFormat.parse(dateString);, +		} catch (ParseException e) {, +			return null;, +		}, +	}, +, +	private DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss Z", Locale.ENGLISH);, +, +++ b/spring-social-github/src/main/java/org/springframework/social/github/GitHubTemplate.java, +import java.text.DateFormat;, +import java.text.ParseException;, +import java.text.SimpleDateFormat;, +import java.util.Date;, +import java.util.Locale;, +		String location = user.get("location") != null ? String.valueOf(user.get("location")) : null;, +		Date createdDate = toDate(String.valueOf(user.get("created_at")), dateFormat);, +		return new GitHubUserProfile(gitHubId, username, name, location, company, blog, email, createdDate);, +	private Date toDate(String dateString, DateFormat dateFormat) {, +		try {, +			return dateFormat.parse(dateString);, +		} catch (ParseException e) {, +			return null;, +		}, +	}, +, +	private DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss Z", Locale.ENGLISH);, +, +++ b/spring-social-github/src/main/java/org/springframework/social/github/GitHubUserProfile.java, +import java.util.Date;, +	private final String location;, +	private final Date createdDate;, +	public GitHubUserProfile(long id, String username, String name, String location, String company, String blog,, +			String email, Date createdDate) {, +		this.location = location;, +		this.createdDate = createdDate;, +	public String getLocation() {, +		return location;, +	}, +, +	public Date getCreatedDate() {, +		return createdDate;, +++ b/spring-social-github/src/main/java/org/springframework/social/github/GitHubTemplate.java, +import java.text.DateFormat;, +import java.text.ParseException;, +import java.text.SimpleDateFormat;, +import java.util.Date;, +import java.util.Locale;, +		String location = user.get("location") != null ? String.valueOf(user.get("location")) : null;, +		Date createdDate = toDate(String.valueOf(user.get("created_at")), dateFormat);, +		return new GitHubUserProfile(gitHubId, username, name, location, company, blog, email, createdDate);, +	private Date toDate(String dateString, DateFormat dateFormat) {, +		try {, +			return dateFormat.parse(dateString);, +		} catch (ParseException e) {, +			return null;, +		}, +	}, +, +	private DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss Z", Locale.ENGLISH);, +, +++ b/spring-social-github/src/main/java/org/springframework/social/github/GitHubUserProfile.java, +import java.util.Date;, +	private final String location;, +	private final Date createdDate;, +	public GitHubUserProfile(long id, String username, String name, String location, String company, String blog,, +			String email, Date createdDate) {, +		this.location = location;, +		this.createdDate = createdDate;, +	public String getLocation() {, +		return location;, +	}, +, +	public Date getCreatedDate() {, +		return createdDate;, +++ b/spring-social-github/src/test/java/org/springframework/social/github/GitHubTemplateTest.java, +import static org.junit.Assert.*;, +import java.util.Date;, +import java.util.HashMap;, +import java.util.Map;, +, +	@SuppressWarnings("deprecation"), +		Map<String, Map<String, ?>> restResponse = new HashMap<String, Map<String, ?>>();, +		Map<String, Object> userData = new HashMap<String, Object>();, +		restResponse.put("user", userData);, +		userData.put("id", 123L);, +		userData.put("name", "Keith Donald");, +		userData.put("login", "kdonald");, +		userData.put("location", "Melbourne, Florida");, +		userData.put("company", "SpringSource");]