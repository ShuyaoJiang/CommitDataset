[+++ b/docs/src/reference/docbook/implementing.xml, +	<title>Adding Support for a New Service Provider</title>, +		<title>Developing a Java binding to the provider's API</title>, +		<section id="service-provider-implementing-api-new-designing">, +			<title>Designing a new Java API binding</title>, +			<para>, +				API developers retain full control over the design and implementation of their Java bindings., +				That said, we offer several design guidelines in an effort to improve overall consistency and quality:, +				<itemizedlist>, +					<listitem>, +						<para>, +							<emphasis>Favor separating the API binding interface from the implementation.</emphasis>, +							This is illustrated in the spring-social-twitter example in the previous section., +							There, "TwitterApi" is the central API binding type and it is declared in the org.springframework.social.twitter.api package with other public types., +							"TwitterTemplate" is the primary implementation of this interface and is located in the org.springframework.social.twitter.api.impl subpackage along with other package-private implementation types., +						</para>, +					</listitem>, +					<listitem>, +						<para>, +							<emphasis>Favor organizing the API binding hierarchically by RESTful resource.</emphasis>, +							REST-based APIs typically expose access to a number of resources in an hierarchical manner., +							For example, Twitter's API provides access to "status timelines", "searches", "lists", "direct messages", "friends", and "users"., +							Rather than add all operations across these resources to a single flat "TwitterApi" interface, the TwitterApi interface is organized hierarchically:, +							<programlisting language="java"><![CDATA[, +public interface TwitterApi {, +	, +    DirectMessageOperations directMessageOperations();, +, +    FriendOperations friendOperations();, +, +    ListOperations listOperations();, +, +    SearchOperations searchOperations();, +	, +    TimelineOperations timelineOperations();, +, +    UserOperations userOperations();, +, +}]]></programlisting>, +						</para>, +						<para>, +							DirectMessageOperations, for example, would contain API bindings to Twitter's "direct_messages" resource:, +							<programlisting language="java"><![CDATA[, +public interface DirectMessageOperations {, +, +    List<DirectMessage> getDirectMessagesReceived();, +, +    List<DirectMessage> getDirectMessagesSent();, +, +    void sendDirectMessage(String toScreenName, String text);, +, +    void sendDirectMessage(long toUserId, String text);, +	, +    void deleteDirectMessage(long messageId);, +}]]>, +							</programlisting>, +						</para>, +					</listitem>, +				</itemizedlist>, +			</para>, +		</section>, +		<section id="service-provider-implementing-api-new-implementing">, +		<section id="service-provider-implementing-api-new-testing">, +			<title>Testing a new Java API binding</title>, +		</section>				, +		<section id="service-provider-implementing-api-existing-integrating">, +++ b/docs/src/reference/docbook/implementing.xml, +	<title>Adding Support for a New Service Provider</title>, +		<title>Developing a Java binding to the provider's API</title>, +		<section id="service-provider-implementing-api-new-designing">, +			<title>Designing a new Java API binding</title>, +			<para>, +				API developers retain full control over the design and implementation of their Java bindings., +				That said, we offer several design guidelines in an effort to improve overall consistency and quality:, +				<itemizedlist>, +					<listitem>, +						<para>, +							<emphasis>Favor separating the API binding interface from the implementation.</emphasis>, +							This is illustrated in the spring-social-twitter example in the previous section., +							There, "TwitterApi" is the central API binding type and it is declared in the org.springframework.social.twitter.api package with other public types., +							"TwitterTemplate" is the primary implementation of this interface and is located in the org.springframework.social.twitter.api.impl subpackage along with other package-private implementation types., +						</para>, +					</listitem>, +					<listitem>, +						<para>, +							<emphasis>Favor organizing the API binding hierarchically by RESTful resource.</emphasis>, +							REST-based APIs typically expose access to a number of resources in an hierarchical manner., +							For example, Twitter's API provides access to "status timelines", "searches", "lists", "direct messages", "friends", and "users"., +							Rather than add all operations across these resources to a single flat "TwitterApi" interface, the TwitterApi interface is organized hierarchically:, +							<programlisting language="java"><![CDATA[, +public interface TwitterApi {, +	, +    DirectMessageOperations directMessageOperations();, +, +    FriendOperations friendOperations();, +, +    ListOperations listOperations();, +, +    SearchOperations searchOperations();, +	]