[+++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/FeedOperations.java, +	/**, +	 * Searches Facebook's public feed., +	 * @param query the search query (e.g., "Dr Seuss"), +	 * @return a list of {@link Post}s that match the search query, +	 */, +	List<Post> searchPublicFeed(String query);, +, +	/**, +	 * Searches the authenticated user's home feed., +	 * @param query the search query (e.g., "Dr Seuss"), +	 * @return a list of {@link Post}s that match the search query, +	 */, +	List<Post> searchHomeFeed(String query);, +	, +	/**, +	 * Searches the authenticated user's feed., +	 * @param query the search query (e.g., "football"), +	 * @return a list of {@link Post}s that match the search query, +	 */, +	List<Post> searchUserFeed(String query);, +	, +	/**, +	 * Searches a specified user's feed., +	 * @param userId the ID of the user whose feed is to be searched, +	 * @param query the search query (e.g., "football"), +	 * @return a list of {@link Post}s that match the search query, +	 */, +	List<Post> searchUserFeed(String userId, String query);, +	, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/FeedOperations.java, +	/**, +	 * Searches Facebook's public feed., +	 * @param query the search query (e.g., "Dr Seuss"), +	 * @return a list of {@link Post}s that match the search query, +	 */, +	List<Post> searchPublicFeed(String query);, +, +	/**, +	 * Searches the authenticated user's home feed., +	 * @param query the search query (e.g., "Dr Seuss"), +	 * @return a list of {@link Post}s that match the search query, +	 */, +	List<Post> searchHomeFeed(String query);, +	, +	/**, +	 * Searches the authenticated user's feed., +	 * @param query the search query (e.g., "football"), +	 * @return a list of {@link Post}s that match the search query, +	 */, +	List<Post> searchUserFeed(String query);, +	, +	/**, +	 * Searches a specified user's feed., +	 * @param userId the ID of the user whose feed is to be searched, +	 * @param query the search query (e.g., "football"), +	 * @return a list of {@link Post}s that match the search query, +	 */, +	List<Post> searchUserFeed(String userId, String query);, +	, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/GraphApi.java, +	 * Fetches connections, extracting them into a Java type via the given {@link ResponseExtractor}., +	 * Requires appropriate permission to fetch the object connection., +	 * @param objectId the ID of the object to retrieve the connections for., +	 * @param connectionType the connection type., +	 * @param type the Java type to fetch, +	 * @param queryParameters query parameters to include in the request, +	 * @return a list of Java objects representing the Facebook objects in the connections., +	 */, +	<T> T fetchConnections(String objectId, String connectionType, Class<T> type, MultiValueMap<String, String> queryParameters);, +, +	/**, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/FeedOperations.java, +	/**, +	 * Searches Facebook's public feed., +	 * @param query the search query (e.g., "Dr Seuss"), +	 * @return a list of {@link Post}s that match the search query, +	 */, +	List<Post> searchPublicFeed(String query);, +, +	/**, +	 * Searches the authenticated user's home feed., +	 * @param query the search query (e.g., "Dr Seuss"), +	 * @return a list of {@link Post}s that match the search query, +	 */, +	List<Post> searchHomeFeed(String query);, +	, +	/**, +	 * Searches the authenticated user's feed., +	 * @param query the search query (e.g., "football"), +	 * @return a list of {@link Post}s that match the search query, +	 */, +	List<Post> searchUserFeed(String query);, +	, +	/**, +	 * Searches a specified user's feed., +	 * @param userId the ID of the user whose feed is to be searched, +	 * @param query the search query (e.g., "football"), +	 * @return a list of {@link Post}s that match the search query, +	 */]