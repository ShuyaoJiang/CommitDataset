[+++ /dev/null, +++ /dev/null, +++ b/spring-social-web/src/main/java/org/springframework/social/web/connect/ConnectController.java, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.BeanFactory;, +import org.springframework.beans.factory.BeanFactoryAware;, +import org.springframework.beans.factory.ListableBeanFactory;, +public class ConnectController implements BeanFactoryAware {, +	public ConnectController(String applicationUrl) {, +	// implementing BeanFactoryAware, +	, +	public void setBeanFactory(BeanFactory beanFactory) throws BeansException {, +		this.serviceProviderLocator = new ServiceProviderLocator((ListableBeanFactory) beanFactory);, +	}, +, +++ /dev/null, +++ b/spring-social-web/src/main/java/org/springframework/social/web/connect/ConnectController.java, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.BeanFactory;, +import org.springframework.beans.factory.BeanFactoryAware;, +import org.springframework.beans.factory.ListableBeanFactory;, +public class ConnectController implements BeanFactoryAware {, +	public ConnectController(String applicationUrl) {, +	// implementing BeanFactoryAware, +	, +	public void setBeanFactory(BeanFactory beanFactory) throws BeansException {, +		this.serviceProviderLocator = new ServiceProviderLocator((ListableBeanFactory) beanFactory);, +	}, +, +++ b/spring-social-web/src/main/java/org/springframework/social/web/connect/ServiceProviderLocator.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.web.connect;, +, +import java.util.HashMap;, +import java.util.Map;, +, +import org.springframework.beans.factory.BeanFactoryUtils;, +import org.springframework.beans.factory.ListableBeanFactory;, +import org.springframework.social.connect.ServiceProvider;, +, +/**, + * Looks up service providers, by name, from the application context., + * @author Craig Walls, + */, +class ServiceProviderLocator {, +, +	private final Map<String, ServiceProvider<?>> serviceProviders;, +, +	public ServiceProviderLocator(ListableBeanFactory beanFactory) {, +		Map<String, ServiceProvider> providers = BeanFactoryUtils.beansOfTypeIncludingAncestors(beanFactory, ServiceProvider.class);, +		serviceProviders = new HashMap<String, ServiceProvider<?>>(providers.size(), 1);, +		for (ServiceProvider<?> provider : providers.values()) {, +			serviceProviders.put(provider.getId(), provider);, +		}, +	}, +	, +	public ServiceProvider<?> getServiceProvider(String id) {, +		return serviceProviders.get(id);, +	}, +	, +}]