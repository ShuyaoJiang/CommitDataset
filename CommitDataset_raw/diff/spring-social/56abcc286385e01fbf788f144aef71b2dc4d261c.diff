[+++ b/docs/src/reference/docbook/apis.xml, +<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="apis" xmlns:xlink="http://www.w3.org/1999/xlink">, +		<para>, +			After a user has granted your application access to their service provider profile, you'll be able to interact with that service provider to update or retrieve the user's data. , +			Your application may, for example, post a Tweet on behalf of a user or review a user's list of contacts to see if any of them have also created connections to your application., +		</para>, +		<para>, +			Each service provider exposes their data and functionality through an API. , +			Spring Social provides Java-based access to those APIs via provider-specific templates, each implementing a provider operations interface., +		</para>, +		<para>, +			Spring Social comes with six provider API templates/operations for the following service providers:, +		</para>, +			<listitem><para>Facebook</para></listitem>, +			<listitem><para>GitHub</para></listitem>, +			<listitem><para>Gowalla</para></listitem>, +	<section xml:id="section_api_twitter">, +		<title>Twitter</title>, +        , +		<para>, +			Twitter's social offering is rather simple: Enable users to post whatever they're thinking, 140 characters at a time., +		</para>, +		, +		<para>, +			Spring Social's <classname>TwitterTemplate</classname> (which implements <interfacename>TwitterOperations</interfacename>) offers several options for applications to integrate with Twitter., +		</para>, +		, +		<para>, +			Creating an instance of <classname>TwitterTemplate</classname> involves invoking its constructor, passing in the application's OAuth credentials and an access token/secret pair authorizing the application to act on a user's behalf. , +			For example:, +		</para>, +		, +		<programlisting language="java"><![CDATA[, +String apiKey = "..."; // The application's API/Consumer key, +String apiSecret = "..."; // The application's API/Consumer secret, +String accessToken = "..."; // The access token granted after OAuth authorization, +String accessTokenSecret = "..."; // The access token secret granted after OAuth authorization, +TwitterOperations twitter = new TwitterTemplate(apiKey, apiSecret, accessToken, accessTokenSecret);]]>, +		</programlisting>, +		, +		<para>, +			In addition, <classname>TwitterTemplate</classname> has a default constructor that creates an instance without any OAuth credentials:, +		</para>, +		, +		<programlisting language="java"><![CDATA[, +TwitterOperations twitter = new TwitterTemplate();]]>, +		</programlisting>, +		, +		<para>, +			When constructed with the default constructor, <classname>TwitterTemplate</classname> will allow a few simple operations that do not require authorization, such as searching. , +			Other operations, such as tweeting will fail with an <classname>AccountNotConnectedException</classname> being thrown., +		</para>, +		, +		<para>, +			If you are using Spring Social's service provider framework, as described in <xref linkend="serviceprovider"/>, you can get an instance of <interfacename>TwitterOperations</interfacename> by calling the <methodname>getServiceApi()</methodname> method on one of the connections given by <classname>TwitterServiceProvider</classname>'s <methodname>getConnections()</methodname> method. , +			For instance:, +		</para>, +		, +		<programlisting language="java"><![CDATA[, +TwitterOperations twitter = twitterProvider.getConnections(accountId).get(0).getServiceApi();]]>, +		</programlisting>, +		, +		<para>, +			Here, <classname>TwitterServiceProvider</classname> is being asked for a <interfacename>TwitterOperations</interfacename> that was created using connection details established previously via the service provider's <methodname>connect()</methodname> method or through <classname>ConnectController</classname>., +		</para>, +		, +		<para>, +			Once you have <interfacename>TwitterOperations</interfacename>, you can perform a variety of operations against Twitter., +		</para>, +, +		<section id="twitter-getProfile">, +			<title>Retrieving a user's Twitter profile data</title>, +			, +			<para>, +				To get a user's Twitter profile, call the <methodname>getUserProfile()</methodname>:, +			</para>, +			, +			<programlisting language="java"><![CDATA[, +TwitterProfile profile = twitter.getUserProfile();]]>, +			</programlisting>, +			, +			<para>, +				This returns a <classname>TwitterProfile</classname> object containing profile data for the authenticated user. , +				This profile information includes the user's Twitter screen name, their name, location, description, and the date that they created their Twitter account. , +				Also included is a URL to their profile image., +			</para>, +			, +			<para>, +				If you want to retrieve the user profile for a specific user other than the authenticated user, you can so do by passing the user's screen name as a parameter to <methodname>getUserProfile()</methodname>:, +			</para>, +			, +			<programlisting language="java"><![CDATA[, +TwitterProfile profile = twitter.getUserProfile("habuma");]]>, +			</programlisting>, +			, +			<para>, +				If all you need is the screen name for the authenticating user, then call <methodname>getProfileId()</methodname>:, +			</para>, +			, +			<programlisting language="java"><![CDATA[]