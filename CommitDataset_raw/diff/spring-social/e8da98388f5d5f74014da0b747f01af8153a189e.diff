[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/ApiTokens.java, +final class ApiTokens {, +	private final String accessToken;, +	private final String secret;, +	private final String refreshToken;, +	public static ApiTokens oauth1(String accessToken, String secret) {, +		return new ApiTokens(accessToken, secret, null);, +	}, +	, +	public static ApiTokens oauth2(String accessToken, String refreshToken) {, +		return new ApiTokens(accessToken, null, refreshToken);, +	}, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ApiTokens.java, +final class ApiTokens {, +	private final String accessToken;, +	private final String secret;, +	private final String refreshToken;, +	public static ApiTokens oauth1(String accessToken, String secret) {, +		return new ApiTokens(accessToken, secret, null);, +	}, +	, +	public static ApiTokens oauth2(String accessToken, String refreshToken) {, +		return new ApiTokens(accessToken, null, refreshToken);, +	}, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/OAuth1ServiceProviderConnectionFactory.java, +	public OAuth1ServiceProviderConnectionFactory(String providerId, OAuth1ServiceProvider<S> serviceProvider, ServiceApiAdapter<S> serviceApiAdapter, boolean allowSignIn) {, +		super(providerId, serviceProvider, serviceApiAdapter, allowSignIn);, +				ApiTokens.oauth1(accessToken.getValue(), accessToken.getSecret()),, +				getOAuth1ServiceProvider().getServiceApi(accessToken.getValue(), accessToken.getSecret()), getServiceApiAdapter());		, +				getOAuth1ServiceProvider().getServiceApi(connectionMemento.getAccessToken(), connectionMemento.getSecret()), getServiceApiAdapter());, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ApiTokens.java, +final class ApiTokens {, +	private final String accessToken;, +	private final String secret;, +	private final String refreshToken;, +	public static ApiTokens oauth1(String accessToken, String secret) {, +		return new ApiTokens(accessToken, secret, null);, +	}, +	, +	public static ApiTokens oauth2(String accessToken, String refreshToken) {, +		return new ApiTokens(accessToken, null, refreshToken);, +	}, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/OAuth1ServiceProviderConnectionFactory.java, +	public OAuth1ServiceProviderConnectionFactory(String providerId, OAuth1ServiceProvider<S> serviceProvider, ServiceApiAdapter<S> serviceApiAdapter, boolean allowSignIn) {, +		super(providerId, serviceProvider, serviceApiAdapter, allowSignIn);, +				ApiTokens.oauth1(accessToken.getValue(), accessToken.getSecret()),, +				getOAuth1ServiceProvider().getServiceApi(accessToken.getValue(), accessToken.getSecret()), getServiceApiAdapter());		, +				getOAuth1ServiceProvider().getServiceApi(connectionMemento.getAccessToken(), connectionMemento.getSecret()), getServiceApiAdapter());, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/OAuth2ServiceProviderConnectionFactory.java, +public class OAuth2ServiceProviderConnectionFactory<S> extends ServiceProviderConnectionFactory<S> {, +	public OAuth2ServiceProviderConnectionFactory(String providerId, OAuth2ServiceProvider<S> serviceProvider, ServiceApiAdapter<S> serviceApiAdapter, boolean allowSignIn) {, +		super(providerId, serviceProvider, serviceApiAdapter, allowSignIn);, +				ApiTokens.oauth2(accessGrant.getAccessToken(), accessGrant.getRefreshToken()),, +				getOAuth2ServiceProvider().getServiceApi(accessGrant.getAccessToken()), getServiceApiAdapter());		, +				getOAuth2ServiceProvider().getServiceApi(connectionMemento.getAccessToken()), getServiceApiAdapter());, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ApiTokens.java, +final class ApiTokens {, +	private final String accessToken;, +	private final String secret;, +	private final String refreshToken;, +	public static ApiTokens oauth1(String accessToken, String secret) {, +		return new ApiTokens(accessToken, secret, null);, +	}, +	, +	public static ApiTokens oauth2(String accessToken, String refreshToken) {, +		return new ApiTokens(accessToken, null, refreshToken);, +	}, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/OAuth1ServiceProviderConnectionFactory.java, +	public OAuth1ServiceProviderConnectionFactory(String providerId, OAuth1ServiceProvider<S> serviceProvider, ServiceApiAdapter<S> serviceApiAdapter, boolean allowSignIn) {, +		super(providerId, serviceProvider, serviceApiAdapter, allowSignIn);, +				ApiTokens.oauth1(accessToken.getValue(), accessToken.getSecret()),, +				getOAuth1ServiceProvider().getServiceApi(accessToken.getValue(), accessToken.getSecret()), getServiceApiAdapter());		, +				getOAuth1ServiceProvider().getServiceApi(connectionMemento.getAccessToken(), connectionMemento.getSecret()), getServiceApiAdapter());, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/OAuth2ServiceProviderConnectionFactory.java, +public class OAuth2ServiceProviderConnectionFactory<S> extends ServiceProviderConnectionFactory<S> {, +	public OAuth2ServiceProviderConnectionFactory(String providerId, OAuth2ServiceProvider<S> serviceProvider, ServiceApiAdapter<S> serviceApiAdapter, boolean allowSignIn) {, +		super(providerId, serviceProvider, serviceApiAdapter, allowSignIn);, +				ApiTokens.oauth2(accessGrant.getAccessToken(), accessGrant.getRefreshToken()),, +				getOAuth2ServiceProvider().getServiceApi(accessGrant.getAccessToken()), getServiceApiAdapter());		, +				getOAuth2ServiceProvider().getServiceApi(connectionMemento.getAccessToken()), getServiceApiAdapter());, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionFactory.java, +	private final String providerId;, +	private final ServiceProvider<S> serviceProvider;, +	private final ServiceApiAdapter<S> serviceApiAdapter;, +	private final boolean allowSignIn;, +	public ServiceProviderConnectionFactory(String providerId, ServiceProvider<S> serviceProvider, ServiceApiAdapter<S> serviceApiAdapter, boolean allowSignIn) {, +		this.allowSignIn = allowSignIn;, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ApiTokens.java, +final class ApiTokens {, +	private final String accessToken;, +	private final String secret;, +	private final String refreshToken;, +	public static ApiTokens oauth1(String accessToken, String secret) {, +		return new ApiTokens(accessToken, secret, null);, +	}, +	]