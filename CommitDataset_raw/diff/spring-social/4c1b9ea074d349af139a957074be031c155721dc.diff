[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/OAuth2ServiceProvider.java, +	 * @param accessToken the access token returned from {@link OAuth2Operations#exchangeForAccess(String, String)}, +	ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/OAuth2ServiceProvider.java, +	 * @param accessToken the access token returned from {@link OAuth2Operations#exchangeForAccess(String, String)}, +	ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AccessGrant.java, +		this(accessToken, null);, +	public AccessGrant(String accessToken, String refreshToken) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/OAuth2ServiceProvider.java, +	 * @param accessToken the access token returned from {@link OAuth2Operations#exchangeForAccess(String, String)}, +	ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AccessGrant.java, +		this(accessToken, null);, +	public AccessGrant(String accessToken, String refreshToken) {, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/OAuth2ServiceProvider.java, +	 * @param accessToken the access token returned from {@link OAuth2Operations#exchangeForAccess(String, String)}, +	ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AccessGrant.java, +		this(accessToken, null);, +	public AccessGrant(String accessToken, String refreshToken) {, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +		return new AccessGrant(valueOf(result.get("access_token")), valueOf(result.get("refresh_token")));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/OAuth2ServiceProvider.java, +	 * @param accessToken the access token returned from {@link OAuth2Operations#exchangeForAccess(String, String)}, +	ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AccessGrant.java, +		this(accessToken, null);, +	public AccessGrant(String accessToken, String refreshToken) {, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +		return new AccessGrant(valueOf(result.get("access_token")), valueOf(result.get("refresh_token")));, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcConnectionRepositoryTest.java, +import static org.junit.Assert.*;, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/OAuth2ServiceProvider.java, +	 * @param accessToken the access token returned from {@link OAuth2Operations#exchangeForAccess(String, String)}, +	ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AccessGrant.java, +		this(accessToken, null);, +	public AccessGrant(String accessToken, String refreshToken) {, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +		return new AccessGrant(valueOf(result.get("access_token")), valueOf(result.get("refresh_token")));, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcConnectionRepositoryTest.java, +import static org.junit.Assert.*;, +++ b/spring-social-test/src/test/java/org/springframework/social/connect/oauth2/OAuth2ServiceProviderTest.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.fail;, +		AccessGrant accessGrant = new AccessGrant("12345", "23456");, +		AccessGrant accessGrant = new AccessGrant("12345", "23456");, +		AccessGrant accessGrant = new AccessGrant("12345", "23456");, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/OAuth2ServiceProvider.java, +	 * @param accessToken the access token returned from {@link OAuth2Operations#exchangeForAccess(String, String)}, +	ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AccessGrant.java, +		this(accessToken, null);, +	public AccessGrant(String accessToken, String refreshToken) {, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +		return new AccessGrant(valueOf(result.get("access_token")), valueOf(result.get("refresh_token")));, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcConnectionRepositoryTest.java, +import static org.junit.Assert.*;, +++ b/spring-social-test/src/test/java/org/springframework/social/connect/oauth2/OAuth2ServiceProviderTest.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.fail;, +		AccessGrant accessGrant = new AccessGrant("12345", "23456");, +		AccessGrant accessGrant = new AccessGrant("12345", "23456");, +		AccessGrant accessGrant = new AccessGrant("12345", "23456");, +++ b/spring-social-test/src/test/java/org/springframework/social/connect/oauth2/StubOAuth2Operations.java, +		return new AccessGrant("12345", "23456");, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/OAuth2ServiceProvider.java]