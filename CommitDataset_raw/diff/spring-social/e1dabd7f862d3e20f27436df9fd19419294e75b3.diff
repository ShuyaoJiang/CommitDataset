[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/DuplicateServiceProviderConnectionException.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.connect;, +, +public final class DuplicateServiceProviderConnectionException extends RuntimeException {, +	private static final long serialVersionUID = 1L;, +	, +	private final ServiceProviderConnectionKey connectionKey;, +, +	public DuplicateServiceProviderConnectionException(ServiceProviderConnectionKey connectionKey) {, +		this.connectionKey = connectionKey;, +	}, +, +	public ServiceProviderConnectionKey getConnectionKey() {, +		return connectionKey;, +	}, +}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/DuplicateServiceProviderConnectionException.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.connect;, +, +public final class DuplicateServiceProviderConnectionException extends RuntimeException {, +	private static final long serialVersionUID = 1L;, +	, +	private final ServiceProviderConnectionKey connectionKey;, +, +	public DuplicateServiceProviderConnectionException(ServiceProviderConnectionKey connectionKey) {, +		this.connectionKey = connectionKey;, +	}, +, +	public ServiceProviderConnectionKey getConnectionKey() {, +		return connectionKey;, +	}, +}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepository.java, +import org.springframework.dao.DuplicateKeyException;, +import org.springframework.social.connect.DuplicateServiceProviderConnectionException;, +		try {, +		} catch (DuplicateKeyException e) {, +			throw new DuplicateServiceProviderConnectionException(connection.getKey());, +		}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/DuplicateServiceProviderConnectionException.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.connect;, +, +public final class DuplicateServiceProviderConnectionException extends RuntimeException {, +	private static final long serialVersionUID = 1L;, +	, +	private final ServiceProviderConnectionKey connectionKey;, +, +	public DuplicateServiceProviderConnectionException(ServiceProviderConnectionKey connectionKey) {, +		this.connectionKey = connectionKey;, +	}, +, +	public ServiceProviderConnectionKey getConnectionKey() {, +		return connectionKey;, +	}, +}]