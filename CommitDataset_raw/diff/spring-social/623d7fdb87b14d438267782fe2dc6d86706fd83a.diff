[+++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +		try {, +			return Integer.valueOf(String.valueOf(map.get(key))); // normalize to String before creating integer value;			, +		} catch (NumberFormatException e) {, +			return null;, +		}, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +		try {, +			return Integer.valueOf(String.valueOf(map.get(key))); // normalize to String before creating integer value;			, +		} catch (NumberFormatException e) {, +			return null;, +		}, +++ b/spring-social-test/src/test/java/org/springframework/social/oauth2/OAuth2TemplateTest.java, +	public void exchangeForAccess_jsonResponse_expiresInAsNonNumericString() {, +		MediaType responseContentType = MediaType.APPLICATION_JSON;, +		String responseFile = "accessToken_expiresInAsNonNumericString.json";, +		AccessGrant accessGrant = getAccessGrant(responseContentType, responseFile);, +		assertEquals("8d0a88a5c4f1ae4937ad864cafa8e857", accessGrant.getAccessToken());, +		assertEquals("6b0411401bf8751e34f57feb29fb8e32", accessGrant.getRefreshToken());, +		assertNull(accessGrant.getExpireTime());, +		assertEquals("read", accessGrant.getScope());, +	}, +, +	@Test, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +		try {, +			return Integer.valueOf(String.valueOf(map.get(key))); // normalize to String before creating integer value;			, +		} catch (NumberFormatException e) {, +			return null;, +		}, +++ b/spring-social-test/src/test/java/org/springframework/social/oauth2/OAuth2TemplateTest.java, +	public void exchangeForAccess_jsonResponse_expiresInAsNonNumericString() {, +		MediaType responseContentType = MediaType.APPLICATION_JSON;, +		String responseFile = "accessToken_expiresInAsNonNumericString.json";, +		AccessGrant accessGrant = getAccessGrant(responseContentType, responseFile);, +		assertEquals("8d0a88a5c4f1ae4937ad864cafa8e857", accessGrant.getAccessToken());, +		assertEquals("6b0411401bf8751e34f57feb29fb8e32", accessGrant.getRefreshToken());, +		assertNull(accessGrant.getExpireTime());, +		assertEquals("read", accessGrant.getScope());, +	}, +, +	@Test, +++ b/spring-social-test/src/test/java/org/springframework/social/oauth2/accessToken_expiresInAsNonNumericString.json, +{, +	"expires_at":"Wed, 09 Feb 2011 16:38:34 -0000",, +	"scope":"read",, +	"expires_in":"Not a number",, +	"username":"cwagon",, +	"access_token":"8d0a88a5c4f1ae4937ad864cafa8e857",, +	"refresh_token":"6b0411401bf8751e34f57feb29fb8e32", +}]