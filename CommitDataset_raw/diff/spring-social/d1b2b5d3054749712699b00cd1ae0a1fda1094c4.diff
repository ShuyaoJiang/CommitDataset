[+++ b/build.gradle, +++ b/build.gradle, +++ b/docs/src/info/changelog.txt, +Spring Social 1.0.0 Milestone 2 (Feb 23, 2011), +++ b/build.gradle, +++ b/docs/src/info/changelog.txt, +Spring Social 1.0.0 Milestone 2 (Feb 23, 2011), +++ b/docs/src/reference/docbook/connecting.xml, +    public TwitterServiceProvider twitter(@Value("#{environment['twitter.consumerKey']}") String consumerKey,, +            @Value("#{environment['twitter.consumerSecret']}") String consumerSecret, ConnectionRepository connectionRepository) {, +    public FacebookServiceProvider facebook(@Value("#{environment['facebook.appId']}") String appId,, +            @Value("#{environment['facebook.appSecret']}") String appSecret, ConnectionRepository connectionRepository) {, +    public TripItServiceProvider tripit(@Value("#{environment['tripit.consumerKey']}") String consumerKey,, +            @Value("#{environment['tripit.consumerSecret']}") String consumerSecret, ConnectionRepository connectionRepository) {, +			Here, the consumer key and secret are provided to the <methodname>twitter()</methodname> method as properties of the current environment., +    public TextEncryptor textEncryptor(@Value("#{environment['security.encryptPassword']}") String password,, +            @Value("#{environment['security.encryptSalt']}") String salt) {, +        <constructor-arg value="#{environment['twitter.consumerKey']}" />, +        <constructor-arg value="#{environment['twitter.consumerSecret']}" />, +        <constructor-arg value="#{environment['facebook.appId']}" />, +        <constructor-arg value="#{environment['facebook.appSecret']}" />, +        <constructor-arg value="#{environment['tripit.consumerKey']}" />, +        <constructor-arg value="#{environment['tripit.consumerSecret']}" />, +            <constructor-arg value="#{environment['security.encryptPassword']}" />, +            <constructor-arg value="#{environment['security.encryptSalt']}" />, +    public ConnectController connectController(@Value("#{environment['application.url']}") String applicationUrl) {, +    <constructor-arg value="#{environment['application.url']}" />, +			Here the URL is retrieved as a context environment property named "application.url"., +public ConnectController connectController(@Value("#{environment['application.url']}") String applicationUrl) {, +++ b/build.gradle, +++ b/docs/src/info/changelog.txt, +Spring Social 1.0.0 Milestone 2 (Feb 23, 2011), +++ b/docs/src/reference/docbook/connecting.xml, +    public TwitterServiceProvider twitter(@Value("#{environment['twitter.consumerKey']}") String consumerKey,, +            @Value("#{environment['twitter.consumerSecret']}") String consumerSecret, ConnectionRepository connectionRepository) {, +    public FacebookServiceProvider facebook(@Value("#{environment['facebook.appId']}") String appId,, +            @Value("#{environment['facebook.appSecret']}") String appSecret, ConnectionRepository connectionRepository) {, +    public TripItServiceProvider tripit(@Value("#{environment['tripit.consumerKey']}") String consumerKey,, +            @Value("#{environment['tripit.consumerSecret']}") String consumerSecret, ConnectionRepository connectionRepository) {, +			Here, the consumer key and secret are provided to the <methodname>twitter()</methodname> method as properties of the current environment., +    public TextEncryptor textEncryptor(@Value("#{environment['security.encryptPassword']}") String password,, +            @Value("#{environment['security.encryptSalt']}") String salt) {, +        <constructor-arg value="#{environment['twitter.consumerKey']}" />, +        <constructor-arg value="#{environment['twitter.consumerSecret']}" />, +        <constructor-arg value="#{environment['facebook.appId']}" />, +        <constructor-arg value="#{environment['facebook.appSecret']}" />, +        <constructor-arg value="#{environment['tripit.consumerKey']}" />, +        <constructor-arg value="#{environment['tripit.consumerSecret']}" />, +            <constructor-arg value="#{environment['security.encryptPassword']}" />, +            <constructor-arg value="#{environment['security.encryptSalt']}" />, +    public ConnectController connectController(@Value("#{environment['application.url']}") String applicationUrl) {, +    <constructor-arg value="#{environment['application.url']}" />, +			Here the URL is retrieved as a context environment property named "application.url"., +public ConnectController connectController(@Value("#{environment['application.url']}") String applicationUrl) {, +++ b/docs/src/reference/docbook/signin.xml, +					<listitem><para>If the received access token doesn't match any existing connection, <classname>TwitterSigninController</classname> will proceed to a no-connection view. The default no-connection view is "redirect:/signup".</para></listitem>, +		<para>[[[TODO: Document the deferred connection-after-signup stuff!!!]]]</para>, +<facebook:init appId="0c754d95f9d9899b0d7c4454a6f2dde6" />]]>, +			The <code><![CDATA[<facebook:init>]]></code> will initialize the Facebook JavaScript library with your application's app id.]