[+++ b/build.gradle, +      thymeleafVersion = '2.1.2.RELEASE', +        mavenCentral(), +        compile ("org.thymeleaf:thymeleaf:$thymeleafVersion", optional), +        compile ("org.thymeleaf:thymeleaf-spring3:$thymeleafVersion", optional), +        compile ("org.thymeleaf:thymeleaf-spring4:$thymeleafVersion", optional), +++ b/build.gradle, +      thymeleafVersion = '2.1.2.RELEASE', +        mavenCentral(), +        compile ("org.thymeleaf:thymeleaf:$thymeleafVersion", optional), +        compile ("org.thymeleaf:thymeleaf-spring3:$thymeleafVersion", optional), +        compile ("org.thymeleaf:thymeleaf-spring4:$thymeleafVersion", optional), +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/thymeleaf/ConnectedAttrProcessor.java, +import org.springframework.context.ApplicationContext;, +import org.springframework.util.ClassUtils;, +	private final boolean thymeleaf3Present;, +, +	private final boolean thymeleaf4Present;, +, +		thymeleaf3Present = ClassUtils.isPresent("org.thymeleaf.spring3.context.SpringWebContext", ConnectedAttrProcessor.class.getClassLoader());, +		thymeleaf4Present = ClassUtils.isPresent("org.thymeleaf.spring4.context.SpringWebContext", ConnectedAttrProcessor.class.getClassLoader());, +		ConnectionRepository connectionRepository = getConnectionRepository(arguments.getContext());, +		return connectionRepository.findConnections(providerId).size() > 0;, +	}, +	private ConnectionRepository getConnectionRepository(final IContext context) {, +		ApplicationContext applicationContext = null;, +		if (thymeleaf4Present) {, +			applicationContext = getSpringApplicationContextForThymeleaf4(context);, +		} else if (thymeleaf3Present) {, +			applicationContext = getSpringApplicationContextForThymeleaf3(context);, +		} else {, +			throw new ConfigurationException("Neither Thymeleaf 3 SpringWebContext nor Thymeleaf 4 SpringWebContext is in ", +					+ "the application classpath.");, +		}, +		ConnectionRepository connectionRepository = applicationContext.getBean(ConnectionRepository.class);, +		return connectionRepository;, +	}, +, +	private ApplicationContext getSpringApplicationContextForThymeleaf3(final IContext context) {, +		if (!(context instanceof org.thymeleaf.spring3.context.SpringWebContext)) {, +							org.thymeleaf.spring3.context.SpringWebContext.class.getName() + ". Spring Social integration can only be used in " +, +		final org.thymeleaf.spring3.context.SpringWebContext springContext = (org.thymeleaf.spring3.context.SpringWebContext) context;		, +		return springContext.getApplicationContext();, +	}, +	private ApplicationContext getSpringApplicationContextForThymeleaf4(final IContext context) {, +		if (!(context instanceof org.thymeleaf.spring4.context.SpringWebContext)) {, +			throw new ConfigurationException(, +					"Thymeleaf execution context is not a Spring web context (implementation of " +, +					org.thymeleaf.spring4.context.SpringWebContext.class.getName() + ". Spring Social integration can only be used in " +, +					"web environements with a Spring application context.");, +		}, +		final org.thymeleaf.spring4.context.SpringWebContext springContext = (org.thymeleaf.spring4.context.SpringWebContext) context;		, +		return springContext.getApplicationContext();]