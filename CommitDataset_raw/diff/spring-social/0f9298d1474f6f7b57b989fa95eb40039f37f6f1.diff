[+++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +import java.util.ArrayList;, +import java.util.Set;, +	public <T> T fetchObject(String objectId, ResponseExtractor<T> extractor, String... fields) {, +		String joinedFields = join(fields);, +		return extractor.extractObject( (Map<String, Object>) restTemplate.getForObject(OBJECT_URL + "?fields={fields}", Map.class, objectId, joinedFields));, +	}, +	, +	public <T> List<T> fetchObject(ResponseExtractor<T> extractor, String... objectIds) {, +		String joinedIds = join(objectIds);, +		Map<String, Map<String, Object>> response = restTemplate.getForObject(GRAPH_API_URL + "?ids={ids}", Map.class, joinedIds);, +		Set<String> keys = response.keySet();, +		List<T> objects = new ArrayList<T>(keys.size());, +		for (String key : keys) {, +			Map<String, Object> objectMap = response.get(key);, +			objects.add(extractor.extractObject(objectMap));, +		}, +		return objects;, +	}, +	, +	public <T> List<T> fetchConnections(String objectId, String connectionType, ResponseExtractor<T> extractor, String... fields) {, +		String joinedFields = join(fields);, +		Map<String, Object> response = restTemplate.getForObject(CONNECTION_URL + "?fields={fields}", Map.class, objectId, connectionType, joinedFields);, +		return extractor.extractObjects((List<Map<String, Object>>) response.get("data"));, +	}, +	, +	private String join(String[] strings) {, +		StringBuilder builder = new StringBuilder();, +		if(strings.length > 0) {, +			builder.append(strings[0]);, +			for (String string : strings) {, +				builder.append("," + string);, +			}, +		}, +		return builder.toString();, +	}, +	, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +import java.util.ArrayList;, +import java.util.Set;, +	public <T> T fetchObject(String objectId, ResponseExtractor<T> extractor, String... fields) {, +		String joinedFields = join(fields);, +		return extractor.extractObject( (Map<String, Object>) restTemplate.getForObject(OBJECT_URL + "?fields={fields}", Map.class, objectId, joinedFields));, +	}, +	, +	public <T> List<T> fetchObject(ResponseExtractor<T> extractor, String... objectIds) {, +		String joinedIds = join(objectIds);, +		Map<String, Map<String, Object>> response = restTemplate.getForObject(GRAPH_API_URL + "?ids={ids}", Map.class, joinedIds);, +		Set<String> keys = response.keySet();, +		List<T> objects = new ArrayList<T>(keys.size());, +		for (String key : keys) {, +			Map<String, Object> objectMap = response.get(key);, +			objects.add(extractor.extractObject(objectMap));, +		}, +		return objects;, +	}, +	, +	public <T> List<T> fetchConnections(String objectId, String connectionType, ResponseExtractor<T> extractor, String... fields) {, +		String joinedFields = join(fields);, +		Map<String, Object> response = restTemplate.getForObject(CONNECTION_URL + "?fields={fields}", Map.class, objectId, connectionType, joinedFields);, +		return extractor.extractObjects((List<Map<String, Object>>) response.get("data"));, +	}, +	, +	private String join(String[] strings) {, +		StringBuilder builder = new StringBuilder();, +		if(strings.length > 0) {, +			builder.append(strings[0]);, +			for (String string : strings) {, +				builder.append("," + string);, +			}, +		}, +		return builder.toString();, +	}, +	, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FriendsApi.java, +import org.springframework.social.facebook.types.FacebookProfile;, +	 * Retrieves profile data for all users who are members of the specified friend list., +	 * @param friendListId the friend list ID., +	 * @return a list of {@link FacebookProfile}, each representing a member of the friend list., +	 */, +	List<FacebookProfile> getFriendListMemberProfiles(String friendListId);, +	, +	/**, +	 * Retrieves profile data for the authenticated user's friends., +	 * @return a list {@link FacebookProfile}s, each representing a friend of the user, or an empty list if not available., +	 */, +	List<FacebookProfile> getFriendProfiles();, +, +	/**, +	 * Retrieves a list of user references for the specified user's friends., +	/**, +	 * Retrieves profile data for the specified user's friends., +	 * @param userId the user's ID, +	 * @return a list {@link FacebookProfile}s, each representing a friend of the user, or an empty list if not available., +	 */, +	List<FacebookProfile> getFriendProfiles(String userId);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +import java.util.ArrayList;, +import java.util.Set;, +	public <T> T fetchObject(String objectId, ResponseExtractor<T> extractor, String... fields) {]