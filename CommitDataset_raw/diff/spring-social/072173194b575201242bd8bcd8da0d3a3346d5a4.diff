[+++ b/spring-social-config/src/main/java/org/springframework/social/config/support/ProviderConfigurationSupport.java, +		if (isSocialSecurityAvailable()) {, +			// TODO: Determine if the class is assignable to a SocialAuthenticationService , +			this.authenticationServiceClass = getAuthenticationServiceClass();, +		}, +	protected Class<?> getAuthenticationServiceClass() {, +		return null;, +++ b/spring-social-config/src/main/java/org/springframework/social/config/support/ProviderConfigurationSupport.java, +		if (isSocialSecurityAvailable()) {, +			// TODO: Determine if the class is assignable to a SocialAuthenticationService , +			this.authenticationServiceClass = getAuthenticationServiceClass();, +		}, +	protected Class<?> getAuthenticationServiceClass() {, +		return null;, +++ b/spring-social-config/src/test/java/org/springframework/social/config/annotation/FakeProviderConfigRegistrar.java, +	, +	@Override, +	protected Class<?> getAuthenticationServiceClass() {, +		return FakeSocialAuthenticationService.class;, +++ b/spring-social-config/src/main/java/org/springframework/social/config/support/ProviderConfigurationSupport.java, +		if (isSocialSecurityAvailable()) {, +			// TODO: Determine if the class is assignable to a SocialAuthenticationService , +			this.authenticationServiceClass = getAuthenticationServiceClass();, +		}, +	protected Class<?> getAuthenticationServiceClass() {, +		return null;, +++ b/spring-social-config/src/test/java/org/springframework/social/config/annotation/FakeProviderConfigRegistrar.java, +	, +	@Override, +	protected Class<?> getAuthenticationServiceClass() {, +		return FakeSocialAuthenticationService.class;, +++ b/spring-social-config/src/test/java/org/springframework/social/config/xml/FakeConnectionFactoryBeanDefinitionParser.java, +import org.springframework.social.config.FakeSocialAuthenticationService;, +	@Override, +	protected Class<?> getAuthenticationServiceClass() {, +		return FakeSocialAuthenticationService.class;, +	}, +]