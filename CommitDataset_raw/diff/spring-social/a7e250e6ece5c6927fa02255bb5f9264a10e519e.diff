[+++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GrantType.java, +	 * AuthorizationCode denotes the server-side authorization flow, and is, +	AuthorizationCode,, +	 * ImplicitGrant denotes the client-side authorization flow and is, +	ImplicitGrant, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GrantType.java, +	 * AuthorizationCode denotes the server-side authorization flow, and is, +	AuthorizationCode,, +	 * ImplicitGrant denotes the client-side authorization flow and is, +	ImplicitGrant, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +		if (grantType == GrantType.AuthorizationCode) {, +		} else if (grantType == GrantType.ImplicitGrant) {, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GrantType.java, +	 * AuthorizationCode denotes the server-side authorization flow, and is, +	AuthorizationCode,, +	 * ImplicitGrant denotes the client-side authorization flow and is, +	ImplicitGrant, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +		if (grantType == GrantType.AuthorizationCode) {, +		} else if (grantType == GrantType.ImplicitGrant) {, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/json/PostMixin.java, +import org.codehaus.jackson.annotate.JsonIgnoreProperties;, +@JsonIgnoreProperties("actions"), +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GrantType.java, +	 * AuthorizationCode denotes the server-side authorization flow, and is, +	AuthorizationCode,, +	 * ImplicitGrant denotes the client-side authorization flow and is, +	ImplicitGrant, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +		if (grantType == GrantType.AuthorizationCode) {, +		} else if (grantType == GrantType.ImplicitGrant) {, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/json/PostMixin.java, +import org.codehaus.jackson.annotate.JsonIgnoreProperties;, +@JsonIgnoreProperties("actions"), +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/api/testdata/feed.json, +	         "actions": [, +	            {, +	               "name": "Comment",, +	               "link": "http://www.facebook.com/100001387295207/posts/160064377383138", +	            },, +	            {, +	               "name": "Like",, +	               "link": "http://www.facebook.com/100001387295207/posts/160064377383138", +	            }, +	         ],, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GrantType.java, +	 * AuthorizationCode denotes the server-side authorization flow, and is, +	AuthorizationCode,, +	 * ImplicitGrant denotes the client-side authorization flow and is, +	ImplicitGrant, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +		if (grantType == GrantType.AuthorizationCode) {, +		} else if (grantType == GrantType.ImplicitGrant) {, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/json/PostMixin.java, +import org.codehaus.jackson.annotate.JsonIgnoreProperties;, +@JsonIgnoreProperties("actions"), +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/api/testdata/feed.json, +	         "actions": [, +	            {, +	               "name": "Comment",, +	               "link": "http://www.facebook.com/100001387295207/posts/160064377383138", +	            },, +	            {, +	               "name": "Like",, +	               "link": "http://www.facebook.com/100001387295207/posts/160064377383138", +	            }, +	         ],, +++ b/spring-social-test/src/test/java/org/springframework/social/oauth2/OAuth2TemplateTest.java, +		String actual = oAuth2Template.buildAuthorizeUrl("http://www.someclient.com/connect/foo", "read,write", null, GrantType.AuthorizationCode, null);, +		String actual = oAuth2Template.buildAuthorizeUrl("http://www.someclient.com/connect/foo", "read,write", null, GrantType.ImplicitGrant, null);, +		String actual = oAuth2Template.buildAuthorizeUrl("http://www.someclient.com/connect/foo", null, null, GrantType.AuthorizationCode, null);, +		String actual = oAuth2Template.buildAuthorizeUrl("http://www.someclient.com/connect/foo", "read,write", null, GrantType.ImplicitGrant, params);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GrantType.java, +	 * AuthorizationCode denotes the server-side authorization flow, and is, +	AuthorizationCode,, +	 * ImplicitGrant denotes the client-side authorization flow and is, +	ImplicitGrant, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +		if (grantType == GrantType.AuthorizationCode) {, +		} else if (grantType == GrantType.ImplicitGrant) {, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/json/PostMixin.java, +import org.codehaus.jackson.annotate.JsonIgnoreProperties;, +@JsonIgnoreProperties("actions"), +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/api/testdata/feed.json, +	         "actions": [, +	            {, +	               "name": "Comment",, +	               "link": "http://www.facebook.com/100001387295207/posts/160064377383138", +	            },, +	            {, +	               "name": "Like",, +	               "link": "http://www.facebook.com/100001387295207/posts/160064377383138", +	            }, +	         ],, +++ b/spring-social-test/src/test/java/org/springframework/social/oauth2/OAuth2TemplateTest.java, +		String actual = oAuth2Template.buildAuthorizeUrl("http://www.someclient.com/connect/foo", "read,write", null, GrantType.AuthorizationCode, null);, +		String actual = oAuth2Template.buildAuthorizeUrl("http://www.someclient.com/connect/foo", "read,write", null, GrantType.ImplicitGrant, null);, +		String actual = oAuth2Template.buildAuthorizeUrl("http://www.someclient.com/connect/foo", null, null, GrantType.AuthorizationCode, null);, +		String actual = oAuth2Template.buildAuthorizeUrl("http://www.someclient.com/connect/foo", "read,write", null, GrantType.ImplicitGrant, params);]