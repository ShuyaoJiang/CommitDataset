[+++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +	 * If not specified, OAuth callback URLs are generated from web request info. , +	 * In this case, the request URI may contain a scheme, host, and/or port value that points to an internal server not appropriate for an external callback URL., +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +	 * If not specified, OAuth callback URLs are generated from web request info. , +	 * In this case, the request URI may contain a scheme, host, and/or port value that points to an internal server not appropriate for an external callback URL., +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ProviderSignInController.java, +	 * If not specified, OAuth callback URLs are generated from web request info., +	 * In this case, the request URI may contain a scheme, host, and/or port value that points to an internal server not appropriate for an external callback URL., +	 * If so, signs the local user in by delegating to {@link SignInAdapter#signIn(String, Connection, NativeWebRequest))}., +	public RedirectView oauth1Callback(@PathVariable String providerId, NativeWebRequest request) {, +		return handleSignIn(connection, request);, +	 * If so, signs the local user in by delegating to {@link SignInAdapter#signIn(String, Connection, NativeWebRequest))}., +	public RedirectView oauth2Callback(@PathVariable String providerId, @RequestParam("code") String code, NativeWebRequest request) {, +		return handleSignIn(connection, request);, +	private RedirectView handleSignIn(Connection<?> connection, NativeWebRequest request) {, +			signInAdapter.signIn(userId, connection, request);, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +	 * If not specified, OAuth callback URLs are generated from web request info. , +	 * In this case, the request URI may contain a scheme, host, and/or port value that points to an internal server not appropriate for an external callback URL., +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ProviderSignInController.java, +	 * If not specified, OAuth callback URLs are generated from web request info., +	 * In this case, the request URI may contain a scheme, host, and/or port value that points to an internal server not appropriate for an external callback URL., +	 * If so, signs the local user in by delegating to {@link SignInAdapter#signIn(String, Connection, NativeWebRequest))}., +	public RedirectView oauth1Callback(@PathVariable String providerId, NativeWebRequest request) {, +		return handleSignIn(connection, request);, +	 * If so, signs the local user in by delegating to {@link SignInAdapter#signIn(String, Connection, NativeWebRequest))}., +	public RedirectView oauth2Callback(@PathVariable String providerId, @RequestParam("code") String code, NativeWebRequest request) {, +		return handleSignIn(connection, request);, +	private RedirectView handleSignIn(Connection<?> connection, NativeWebRequest request) {, +			signInAdapter.signIn(userId, connection, request);, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/SignInAdapter.java, +import org.springframework.web.context.request.NativeWebRequest;, +	 * @param a reference to the current web request; is a "native" web request instance providing access to the native, +	 * request and response objects, such as a HttpServletRequest and HttpServletResponse, if needed, +	void signIn(String userId, Connection<?> connection, NativeWebRequest request);]