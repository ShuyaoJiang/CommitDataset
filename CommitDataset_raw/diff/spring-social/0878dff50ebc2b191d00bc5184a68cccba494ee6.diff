[+++ b/build.gradle, +        testCompile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/build.gradle, +        testCompile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/spring-social-core/src/test/java/org/springframework/social/oauth2/OAuth2TemplateTest.java, +	public void exchangeForAccess_facebookStyle() {, +		// Facebook returns form-encoded results as text/plain. There is no refresh token., +		MediaType responseContentType = MediaType.TEXT_PLAIN;, +		String responseFile = "accessToken.facebook";, +		AccessGrant accessGrant = getAccessGrant(responseContentType, responseFile);, +		assertEquals("162868103756545|bf4de6ed613f7901204c222g-738140579|YAufyoV9n7LmEAgzRKqnc300B0B", accessGrant.getAccessToken());, +		assertNull(accessGrant.getRefreshToken());, +	}, +, +	@Test, +	public void exchangeForAccess_jsonResponse() {, +		// The OAuth 2 spec draft specifies JSON as the response content type. Gowalla and Github return the access token this way., +		MediaType responseContentType = MediaType.APPLICATION_JSON;, +		String responseFile = "accessToken.json";, +		AccessGrant accessGrant = getAccessGrant(responseContentType, responseFile);, +		assertEquals("8d0a88a5c4f1ae4937ad864cafa8e857", accessGrant.getAccessToken());, +		assertEquals("6b0411401bf8751e34f57feb29fb8e32", accessGrant.getRefreshToken());, +	}, +, +	private AccessGrant getAccessGrant(MediaType responseContentType, String responseFile) {, +		responseHeaders.setContentType(responseContentType);, +		mockServer, +				.expect(requestTo(ACCESS_TOKEN_URL)), +				.andExpect(, +						body("client_id=client_id&client_secret=client_secret&code=code&", +								+ "redirect_uri=http%3A%2F%2Fwww.someclient.com%2Fcallback&grant_type=authorization_code")), +				.andRespond(, +						ResponseCreators.withResponse(new ClassPathResource(responseFile, getClass()),, +		return accessGrant;, +++ b/build.gradle, +        testCompile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/spring-social-core/src/test/java/org/springframework/social/oauth2/OAuth2TemplateTest.java, +	public void exchangeForAccess_facebookStyle() {, +		// Facebook returns form-encoded results as text/plain. There is no refresh token., +		MediaType responseContentType = MediaType.TEXT_PLAIN;, +		String responseFile = "accessToken.facebook";, +		AccessGrant accessGrant = getAccessGrant(responseContentType, responseFile);, +		assertEquals("162868103756545|bf4de6ed613f7901204c222g-738140579|YAufyoV9n7LmEAgzRKqnc300B0B", accessGrant.getAccessToken());, +		assertNull(accessGrant.getRefreshToken());, +	}, +, +	@Test, +	public void exchangeForAccess_jsonResponse() {, +		// The OAuth 2 spec draft specifies JSON as the response content type. Gowalla and Github return the access token this way., +		MediaType responseContentType = MediaType.APPLICATION_JSON;, +		String responseFile = "accessToken.json";, +		AccessGrant accessGrant = getAccessGrant(responseContentType, responseFile);, +		assertEquals("8d0a88a5c4f1ae4937ad864cafa8e857", accessGrant.getAccessToken());, +		assertEquals("6b0411401bf8751e34f57feb29fb8e32", accessGrant.getRefreshToken());, +	}, +, +	private AccessGrant getAccessGrant(MediaType responseContentType, String responseFile) {, +		responseHeaders.setContentType(responseContentType);, +		mockServer, +				.expect(requestTo(ACCESS_TOKEN_URL)), +				.andExpect(, +						body("client_id=client_id&client_secret=client_secret&code=code&", +								+ "redirect_uri=http%3A%2F%2Fwww.someclient.com%2Fcallback&grant_type=authorization_code")), +				.andRespond(, +						ResponseCreators.withResponse(new ClassPathResource(responseFile, getClass()),, +		return accessGrant;, +++ b/spring-social-core/src/test/resources/org/springframework/social/oauth2/accessToken.facebook, +access_token=162868103756545|bf4de6ed613f7901204c222g-738140579|YAufyoV9n7LmEAgzRKqnc300B0B, +++ b/build.gradle, +        testCompile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/spring-social-core/src/test/java/org/springframework/social/oauth2/OAuth2TemplateTest.java, +	public void exchangeForAccess_facebookStyle() {, +		// Facebook returns form-encoded results as text/plain. There is no refresh token., +		MediaType responseContentType = MediaType.TEXT_PLAIN;, +		String responseFile = "accessToken.facebook";, +		AccessGrant accessGrant = getAccessGrant(responseContentType, responseFile);, +		assertEquals("162868103756545|bf4de6ed613f7901204c222g-738140579|YAufyoV9n7LmEAgzRKqnc300B0B", accessGrant.getAccessToken());, +		assertNull(accessGrant.getRefreshToken());, +	}, +, +	@Test, +	public void exchangeForAccess_jsonResponse() {, +		// The OAuth 2 spec draft specifies JSON as the response content type. Gowalla and Github return the access token this way., +		MediaType responseContentType = MediaType.APPLICATION_JSON;, +		String responseFile = "accessToken.json";, +		AccessGrant accessGrant = getAccessGrant(responseContentType, responseFile);, +		assertEquals("8d0a88a5c4f1ae4937ad864cafa8e857", accessGrant.getAccessToken());, +		assertEquals("6b0411401bf8751e34f57feb29fb8e32", accessGrant.getRefreshToken());, +	}, +, +	private AccessGrant getAccessGrant(MediaType responseContentType, String responseFile) {, +		responseHeaders.setContentType(responseContentType);, +		mockServer, +				.expect(requestTo(ACCESS_TOKEN_URL)), +				.andExpect(, +						body("client_id=client_id&client_secret=client_secret&code=code&", +								+ "redirect_uri=http%3A%2F%2Fwww.someclient.com%2Fcallback&grant_type=authorization_code")), +				.andRespond(, +						ResponseCreators.withResponse(new ClassPathResource(responseFile, getClass()),, +		return accessGrant;]