[+++ b/build.gradle, +        testCompile ("com.h2database:h2:$h2Version"), +        testCompile ("org.springframework:spring-test-mvc:$springTestMvcVersion"), +        testCompile ("org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"), +        compile ("org.springframework:spring-web:$springVersion"), +        compile ("org.springframework:spring-webmvc:$springVersion"), +        testCompile ("org.springframework:spring-test-mvc:$springTestMvcVersion"), +        testCompile ("org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"), +      testCompile ("com.h2database:h2:$h2Version"), +      testCompile ("org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"), +      testCompile ("org.springframework:spring-jdbc:$springVersion"), +        compile ("org.springframework:spring-web:$springVersion"), +        compile ("org.springframework:spring-webmvc:$springVersion"), +        compile ("javax.servlet:servlet-api:$servletApiVersion", provided), +        gradleVersion = '1.3', +++ b/build.gradle, +        testCompile ("com.h2database:h2:$h2Version"), +        testCompile ("org.springframework:spring-test-mvc:$springTestMvcVersion"), +        testCompile ("org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"), +        compile ("org.springframework:spring-web:$springVersion"), +        compile ("org.springframework:spring-webmvc:$springVersion"), +        testCompile ("org.springframework:spring-test-mvc:$springTestMvcVersion"), +        testCompile ("org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"), +      testCompile ("com.h2database:h2:$h2Version"), +      testCompile ("org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"), +      testCompile ("org.springframework:spring-jdbc:$springVersion"), +        compile ("org.springframework:spring-web:$springVersion"), +        compile ("org.springframework:spring-webmvc:$springVersion"), +        compile ("javax.servlet:servlet-api:$servletApiVersion", provided), +        gradleVersion = '1.3', +++ b/gradle/wrapper/gradle-wrapper.jar, +++ b/build.gradle, +        testCompile ("com.h2database:h2:$h2Version"), +        testCompile ("org.springframework:spring-test-mvc:$springTestMvcVersion"), +        testCompile ("org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"), +        compile ("org.springframework:spring-web:$springVersion"), +        compile ("org.springframework:spring-webmvc:$springVersion"), +        testCompile ("org.springframework:spring-test-mvc:$springTestMvcVersion"), +        testCompile ("org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"), +      testCompile ("com.h2database:h2:$h2Version"), +      testCompile ("org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"), +      testCompile ("org.springframework:spring-jdbc:$springVersion"), +        compile ("org.springframework:spring-web:$springVersion"), +        compile ("org.springframework:spring-webmvc:$springVersion"), +        compile ("javax.servlet:servlet-api:$servletApiVersion", provided), +        gradleVersion = '1.3', +++ b/gradle/wrapper/gradle-wrapper.jar, +++ b/gradle/wrapper/gradle-wrapper.properties, +#Thu Dec 06 11:22:23 EST 2012, +distributionUrl=http\://services.gradle.org/distributions/gradle-1.3-bin.zip, +++ b/build.gradle, +        testCompile ("com.h2database:h2:$h2Version"), +        testCompile ("org.springframework:spring-test-mvc:$springTestMvcVersion"), +        testCompile ("org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"), +        compile ("org.springframework:spring-web:$springVersion"), +        compile ("org.springframework:spring-webmvc:$springVersion"), +        testCompile ("org.springframework:spring-test-mvc:$springTestMvcVersion"), +        testCompile ("org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"), +      testCompile ("com.h2database:h2:$h2Version"), +      testCompile ("org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"), +      testCompile ("org.springframework:spring-jdbc:$springVersion"), +        compile ("org.springframework:spring-web:$springVersion"), +        compile ("org.springframework:spring-webmvc:$springVersion"), +        compile ("javax.servlet:servlet-api:$servletApiVersion", provided), +        gradleVersion = '1.3', +++ b/gradle/wrapper/gradle-wrapper.jar, +++ b/gradle/wrapper/gradle-wrapper.properties, +#Thu Dec 06 11:22:23 EST 2012, +distributionUrl=http\://services.gradle.org/distributions/gradle-1.3-bin.zip, +++ b/gradlew, +        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT", +    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\"", +++ b/build.gradle, +        testCompile ("com.h2database:h2:$h2Version"), +        testCompile ("org.springframework:spring-test-mvc:$springTestMvcVersion"), +        testCompile ("org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"), +        compile ("org.springframework:spring-web:$springVersion"), +        compile ("org.springframework:spring-webmvc:$springVersion"), +        testCompile ("org.springframework:spring-test-mvc:$springTestMvcVersion"), +        testCompile ("org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"), +      testCompile ("com.h2database:h2:$h2Version"), +      testCompile ("org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"), +      testCompile ("org.springframework:spring-jdbc:$springVersion"), +        compile ("org.springframework:spring-web:$springVersion"), +        compile ("org.springframework:spring-webmvc:$springVersion"), +        compile ("javax.servlet:servlet-api:$servletApiVersion", provided), +        gradleVersion = '1.3', +++ b/gradle/wrapper/gradle-wrapper.jar, +++ b/gradle/wrapper/gradle-wrapper.properties, +#Thu Dec 06 11:22:23 EST 2012, +distributionUrl=http\://services.gradle.org/distributions/gradle-1.3-bin.zip, +++ b/gradlew, +        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT", +    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\"", +++ b/publish-maven.gradle, +ext.optionalDeps = [], +ext.providedDeps = [], +ext.optional = { optionalDeps << it }, +ext.provided = { providedDeps << it }, +            generatedPom.dependencies.findAll { it.artifactId == dep.name }*.optional = true]