[+++ b/build.gradle, +++ b/build.gradle, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/MultiUserServiceProviderConnectionRepository.java, +import java.util.List;, +import java.util.Set;, +, +	Set<String> findLocalUserIdsConnectedTo(String providerId, List<String> providerUserIds);, +	, +++ b/build.gradle, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/MultiUserServiceProviderConnectionRepository.java, +import java.util.List;, +import java.util.Set;, +, +	Set<String> findLocalUserIdsConnectedTo(String providerId, List<String> providerUserIds);, +	, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/NoSuchServiceProviderConnectionException.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.connect;, +, +@SuppressWarnings("serial"), +public final class NoSuchServiceProviderConnectionException extends RuntimeException {, +	, +	private final ServiceProviderConnectionKey connectionKey;, +, +	public NoSuchServiceProviderConnectionException(ServiceProviderConnectionKey connectionKey) {, +		this.connectionKey = connectionKey;, +	}, +, +	public ServiceProviderConnectionKey getConnectionKey() {, +		return connectionKey;, +	}, +	, +}, +++ b/build.gradle, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/MultiUserServiceProviderConnectionRepository.java, +import java.util.List;, +import java.util.Set;, +, +	Set<String> findLocalUserIdsConnectedTo(String providerId, List<String> providerUserIds);, +	, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/NoSuchServiceProviderConnectionException.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.connect;, +, +@SuppressWarnings("serial"), +public final class NoSuchServiceProviderConnectionException extends RuntimeException {, +	, +	private final ServiceProviderConnectionKey connectionKey;, +, +	public NoSuchServiceProviderConnectionException(ServiceProviderConnectionKey connectionKey) {, +		this.connectionKey = connectionKey;, +	}, +, +	public ServiceProviderConnectionKey getConnectionKey() {, +		return connectionKey;, +	}, +	, +}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcMultiUserServiceProviderConnectionRepository.java, +import java.sql.ResultSet;, +import java.sql.SQLException;, +import java.util.HashSet;, +import java.util.List;, +import java.util.Set;, +, +import org.springframework.dao.DataAccessException;, +import org.springframework.jdbc.core.ResultSetExtractor;, +import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;, +import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;, +	public Set<String> findLocalUserIdsConnectedTo(String providerId, List<String> providerUserIds) {, +		MapSqlParameterSource parameters = new MapSqlParameterSource();, +		parameters.addValue("providerId", providerId);]