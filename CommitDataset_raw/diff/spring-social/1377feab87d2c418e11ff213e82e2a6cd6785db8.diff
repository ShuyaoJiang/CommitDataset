[+++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AccessGrant.java, +	private final Map<String, Object> additionalParameters;, +, +	public AccessGrant(String accessToken, String refreshToken, Long expireTime, String scope, Map<String, Object> additionalParameters) {, +		this.expireTime = expireTime;, +	 * The refresh token that can be used to renew the access token., +	 */, +	public String getRefreshToken() {, +		return refreshToken;, +	}, +, +	/**, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AccessGrant.java, +	private final Map<String, Object> additionalParameters;, +, +	public AccessGrant(String accessToken, String refreshToken, Long expireTime, String scope, Map<String, Object> additionalParameters) {, +		this.expireTime = expireTime;, +	 * The refresh token that can be used to renew the access token., +	 */, +	public String getRefreshToken() {, +		return refreshToken;, +	}, +, +	/**, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +		Integer expiresIn = (Integer) result.get("expires_in");, +		, +				expiresIn != null ? System.currentTimeMillis() + expiresIn * 1000 : null,, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AccessGrant.java, +	private final Map<String, Object> additionalParameters;, +, +	public AccessGrant(String accessToken, String refreshToken, Long expireTime, String scope, Map<String, Object> additionalParameters) {, +		this.expireTime = expireTime;, +	 * The refresh token that can be used to renew the access token., +	 */, +	public String getRefreshToken() {, +		return refreshToken;, +	}, +, +	/**, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +		Integer expiresIn = (Integer) result.get("expires_in");, +		, +				expiresIn != null ? System.currentTimeMillis() + expiresIn * 1000 : null,, +++ b/spring-social-test/src/test/java/org/springframework/social/connect/oauth2/StubOAuth2Operations.java, +		return new AccessGrant("12345", "23456", 1303148118770L, null, null);, +		return new AccessGrant("12345", "23456", 1303148118770L, null, null);]