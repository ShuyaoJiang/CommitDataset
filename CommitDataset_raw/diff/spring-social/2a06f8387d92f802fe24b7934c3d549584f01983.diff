[+++ b/docs/src/reference/docbook/apis.xml, +			If you are using Spring Social's service provider framework, as described in <xref linkend="serviceprovider"/>, you can get an instance of <interfacename>TwitterApi</interfacename> via a <interfacename>ServiceProviderConnection</interfacename>. , +			For example, the following snippet calls <methodname>getServiceApi()</methodname> on a connection to retrieve a <interfacename>TwitterApi</interfacename>:, +ServiceProviderConnection<TwitterApi> connection = , +        connectionRepository.findConnectionByServiceApi(TwitterApi);, +TwitterApi twitterApi = connection.getServiceApi();]]>, +ServiceProviderConnection<FacebookApi> connection = , +        connectionRepository.findConnectionByServiceApi(FacebookApi);, +FacebookApi facebookApi = connection.getServiceApi();]]>, +			Spring Social's Facebook API binding is divided into 9 sub-APIs exposes through the methods of <interfacename>FacebookApi</interfacename>:, +		</para>, +, +			<programlisting language="java"><![CDATA[, +public interface FacebookApi extends GraphApi {, +, +	CommentOperations commentOperations();, +, +	EventOperations eventOperations();, +	, +	FeedOperations feedOperations();, +, +	FriendOperations friendOperations();, +	, +	GroupOperations groupOperations();, +, +	LikeOperations likeOperations();, +	, +	MediaOperations mediaOperations();, +	, +	PlacesOperations placesOperations();, +	, +	UserOperations userOperations();, +	, +}]]>, +			</programlisting>, +, +		<para>, +			The sub-API interfaces returned from <interfacename>FacebookApi</interfacename>'s methods are described in <xref linkend="table-facebook-sub-apis" />., +		</para>, +, +		<table xml:id="table-facebook-sub-apis">, +			<title>FacebookApi's Sub-APIs</title>, +			<tgroup cols="2">, +				<colspec align="left" />, +				<colspec colnum="1" colname="col1" colwidth="2*"/>, +				<colspec colnum="2" colname="col2" colwidth="2*"/>, +				<thead>, +					<row>, +						<entry align="center">Sub-API Interface</entry>, +						<entry align="center">Description</entry>, +					</row>, +				</thead>, +				<tbody>, +					<row>, +						<entry>CommentOperations</entry>, +						<entry>Add, delete, and read comments on Facebook objects.</entry>, +					</row>, +					<row>, +						<entry>EventOperations</entry>, +						<entry>Create and maintain events and RSVP to event invitations.</entry>, +					</row>, +					<row>, +						<entry>FeedOperations</entry>, +						<entry>Read and post to a Facebook wall.</entry>, +					</row>, +					<row>, +						<entry>FriendOperations</entry>, +						<entry>Retrieve a user's friends and maintain friend lists.</entry>, +					</row>, +					<row>, +						<entry>GroupOperations</entry>, +						<entry>Retrieve group details and members.</entry>, +					</row>, +					<row>, +						<entry>LikeOperations</entry>, +						<entry>Retrieve a user's interests and likes. Like and unlike objects.</entry>, +					</row>, +					<row>, +						<entry>MediaOperations</entry>, +						<entry>Maintain albums, photos, and videos.</entry>, +					</row>, +					<row>, +						<entry>PlacesOperations</entry>, +						<entry>Checkin to location in Facebook Places and retrieve places a user and their friends have checked into.</entry>, +					</row>, +					<row>, +						<entry>UserOperations</entry>, +						<entry>Retrieve user profile data and profile images.</entry>, +					</row>, +				</tbody>, +			</tgroup>, +		</table>, +, +		<para>, +			The following sections will give an overview of common tasks that can be performed via <interfacename>FacebookApi</interfacename> and its sub-APIs., +			For complete details on all of the operations available, refer to the JavaDoc., +FacebookProfile profile = facebookApi.userOperations().getUserProfile();]]>, +String profileId = facebookApi.userOperations().getProfileId();]]>, +String profileUrl = facebookApi.userOperations().getProfileUrl();]]>, +List<String> friendIds = facebookApi.friendOperations().getFriendIds();]]>]