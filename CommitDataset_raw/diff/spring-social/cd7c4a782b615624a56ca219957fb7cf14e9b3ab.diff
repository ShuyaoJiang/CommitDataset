[+++ b/src/main/java/org/springframework/social/twitter/TwitterTemplate.java, +import org.springframework.web.util.UriTemplate;, +		Map<String, String> urlVariable = Collections.singletonMap("tweet_id", Long.toString(tweetId));, +		Map<String, String> queryParameters = Collections.emptyMap();, +		exchangeForMap(HttpMethod.POST, RETWEET_URL, urlVariable, queryParameters, tokenProvider);, +	private Map exchangeForMap(HttpMethod method, String url, Map<String, String> queryParameters,, +		Map<String, String> urlVariable = Collections.emptyMap();, +		return exchangeForMap(method, url, urlVariable, queryParameters, tokenProvider);, +	private Map exchangeForMap(HttpMethod method, String url, Map<String, String> urlVariable,, +			Map<String, String> queryParameters, AccessTokenProvider<?> tokenProvider) {, +		return exchange(method, url, urlVariable, queryParameters, Map.class, tokenProvider);, +	private List exchangeForList(HttpMethod method, String url, Map<String, String> queryParameters,, +		Map<String, String> urlVariable = Collections.emptyMap();, +		return exchange(method, url, urlVariable, queryParameters, List.class, tokenProvider);, +	}, +, +	private <T> T exchange(HttpMethod method, String twitterUrl, Map<String, String> urlVariable,, +			Map<String, String> queryParameters, Class<T> responseType, AccessTokenProvider<?> tokenProvider) {, +, +		HttpHeaders headers = buildRequestHeaders(method, twitterUrl, urlVariable, queryParameters, tokenProvider);, +			for (String key : queryParameters.keySet()) {, +				form.add(key, queryParameters.get(key));, +			for (String key : queryParameters.keySet()) {, +				uriVariables.put(key, queryParameters.get(key));, +, +		for (String key : urlVariable.keySet()) {, +			uriVariables.put(key, urlVariable.get(key));, +		}, +, +	private HttpHeaders buildRequestHeaders(HttpMethod method, String twitterUrl, Map<String, String> urlVariable,, +			Map<String, String> queryParameters,, +			UriTemplate uriTemplate = new UriTemplate(twitterUrl);, +			Map<String, String> combinedParamaters = new HashMap<String, String>(urlVariable);, +			combinedParamaters.putAll(queryParameters);, +			String expandedUrl = uriTemplate.expand(combinedParamaters).toString();, +, +				String authorizationHeader = oauthHelper.buildAuthorizationHeader(tokenProvider, method, expandedUrl,, +						"Twitter", queryParameters);, +	static final String RETWEET_URL = "http://api.twitter.com/1/statuses/retweet/{tweet_id}.json";]