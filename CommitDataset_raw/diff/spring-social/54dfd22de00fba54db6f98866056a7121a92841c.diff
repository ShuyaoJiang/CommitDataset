[+++ b/spring-social-client/src/test/java/org/springframework/social/provider/oauth1/OAuth1ServiceProviderTest.java, +import org.springframework.social.provider.test.StubConnectionRepository;, +		assertEquals("http://springsource.org/oauth/authorize?request_token=12345", authorizeUrl);, +	@Test, +	public void duplicateConnection() {, +		Long accountId = 1L;, +		OAuthToken accessToken = new OAuthToken("12345", "23456");, +		serviceProvider.connect(accountId, accessToken);, +		try {, +			serviceProvider.connect(accountId, accessToken);, +			fail("Should have failed on duplicate connection");, +		} catch (IllegalArgumentException e) {, +++ b/spring-social-client/src/test/java/org/springframework/social/provider/oauth1/OAuth1ServiceProviderTest.java, +import org.springframework.social.provider.test.StubConnectionRepository;, +		assertEquals("http://springsource.org/oauth/authorize?request_token=12345", authorizeUrl);, +	@Test, +	public void duplicateConnection() {, +		Long accountId = 1L;, +		OAuthToken accessToken = new OAuthToken("12345", "23456");, +		serviceProvider.connect(accountId, accessToken);, +		try {, +			serviceProvider.connect(accountId, accessToken);, +			fail("Should have failed on duplicate connection");, +		} catch (IllegalArgumentException e) {, +++ b/spring-social-client/src/test/java/org/springframework/social/provider/oauth1/StubOAuth1Operations.java, +package org.springframework.social.provider.oauth1;, +, +import org.springframework.security.oauth.client.oauth1.AuthorizedRequestToken;, +import org.springframework.security.oauth.client.oauth1.OAuth1Operations;, +import org.springframework.security.oauth.client.oauth1.OAuthToken;, +, +class StubOAuth1Operations implements OAuth1Operations {, +, +	public OAuthToken fetchNewRequestToken(String callbackUrl) {, +		return new OAuthToken("12345", "23456");, +	}, +, +	public String buildAuthorizeUrl(String requestToken) {, +		return "http://springsource.org/oauth/authorize?request_token=" + requestToken;, +	}, +, +	public OAuthToken exchangeForAccessToken(AuthorizedRequestToken requestToken) {, +		return new OAuthToken("34567", "45678");, +	}, +	, +}, +++ b/spring-social-client/src/test/java/org/springframework/social/provider/oauth1/OAuth1ServiceProviderTest.java, +import org.springframework.social.provider.test.StubConnectionRepository;, +		assertEquals("http://springsource.org/oauth/authorize?request_token=12345", authorizeUrl);, +	@Test, +	public void duplicateConnection() {, +		Long accountId = 1L;, +		OAuthToken accessToken = new OAuthToken("12345", "23456");, +		serviceProvider.connect(accountId, accessToken);, +		try {, +			serviceProvider.connect(accountId, accessToken);, +			fail("Should have failed on duplicate connection");, +		} catch (IllegalArgumentException e) {, +++ b/spring-social-client/src/test/java/org/springframework/social/provider/oauth1/StubOAuth1Operations.java, +package org.springframework.social.provider.oauth1;, +, +import org.springframework.security.oauth.client.oauth1.AuthorizedRequestToken;, +import org.springframework.security.oauth.client.oauth1.OAuth1Operations;, +import org.springframework.security.oauth.client.oauth1.OAuthToken;, +, +class StubOAuth1Operations implements OAuth1Operations {, +, +	public OAuthToken fetchNewRequestToken(String callbackUrl) {, +		return new OAuthToken("12345", "23456");, +	}, +, +	public String buildAuthorizeUrl(String requestToken) {, +		return "http://springsource.org/oauth/authorize?request_token=" + requestToken;, +	}, +, +	public OAuthToken exchangeForAccessToken(AuthorizedRequestToken requestToken) {, +		return new OAuthToken("34567", "45678");, +	}, +	, +}, +++ b/spring-social-client/src/test/java/org/springframework/social/provider/oauth2/OAuth2ServiceProviderTest.java, +package org.springframework.social.provider.oauth2;, +, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.fail;, +, +import java.util.List;, +, +import org.junit.Test;, +import org.springframework.security.oauth.client.oauth2.AccessGrant;, +import org.springframework.security.oauth.client.oauth2.OAuth2Operations;, +import org.springframework.social.provider.AuthorizationProtocol;, +import org.springframework.social.provider.ServiceProviderConnection;, +import org.springframework.social.provider.support.ConnectionRepository;, +import org.springframework.social.provider.test.StubConnectionRepository;, +, +public class OAuth2ServiceProviderTest {, +, +	private ConnectionRepository connectionRepository = new StubConnectionRepository();, +]