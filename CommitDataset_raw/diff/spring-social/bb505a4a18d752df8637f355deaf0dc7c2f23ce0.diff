[+++ b/build.gradle, +++ b/build.gradle, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/DuplicateServiceProviderConnectionException.java, +/**, + * Thrown by a {@link ServiceProviderConnectionRepository} when attempting to add a ServiceProviderConnection , + * and a connection already exists with the given key., + * @author Keith Donald, + * @see ServiceProviderConnectionRepository#addConnection(ServiceProviderConnection), + */, +@SuppressWarnings("serial"), +	/**, +	 * The connection key that already exists., +	 */, +++ b/build.gradle, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/DuplicateServiceProviderConnectionException.java, +/**, + * Thrown by a {@link ServiceProviderConnectionRepository} when attempting to add a ServiceProviderConnection , + * and a connection already exists with the given key., + * @author Keith Donald, + * @see ServiceProviderConnectionRepository#addConnection(ServiceProviderConnection), + */, +@SuppressWarnings("serial"), +	/**, +	 * The connection key that already exists., +	 */, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/MultiUserServiceProviderConnectionRepository.java, +/**, + * A data access interface for managing a global store of LocalUser-to-ServiceProviderUser Connections., + * Provides data access operations that apply across multiple local user records., + * Also acts as a factory for a local-user-specific {@link ServiceProviderConnectionRepository}., + * @author Keith Donald, + * @see ServiceProviderConnectionRepository, + */, +	/**, +	 * Find the id of the <i>single</i> local user who has a {@link ServiceProviderConnection} with the given key., +	 * Used to support the ProviderSignIn scenario where the user id returned is used to sign the local application user in using his or her provider account., +	 * Returns null if there is not exactly one local user connected to the provider user., +	 * @param connectionKey the key identifying a provider user, +	 */, +	/**, +	 * Find the ids of the local users who are connected to the specific provider user accounts., +	 * @param providerId the provider id, e.g. "facebook", +	 * @param providerUserIds the set of provider user ids e.g. ("125600", "131345", "54321")., +	 * @return the set of local user ids connected to those service provider users, or empty if none., +	 */, +	Set<String> findLocalUserIdsConnectedTo(String providerId, Set<String> providerUserIds);, +	/**, +	 * Create a single-user {@link ServiceProviderConnectionRepository} instance for the local user assigned the given id., +	 * @param localUserId the id of the local user account., +	 * @return the ServiceProviderConnectionRepository, exposing a number of operations for accessing and updating the given local user's provider connections., +	 */, +++ b/build.gradle, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/DuplicateServiceProviderConnectionException.java, +/**, + * Thrown by a {@link ServiceProviderConnectionRepository} when attempting to add a ServiceProviderConnection , + * and a connection already exists with the given key., + * @author Keith Donald, + * @see ServiceProviderConnectionRepository#addConnection(ServiceProviderConnection), + */, +@SuppressWarnings("serial"), +	/**, +	 * The connection key that already exists., +	 */, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/MultiUserServiceProviderConnectionRepository.java, +/**, + * A data access interface for managing a global store of LocalUser-to-ServiceProviderUser Connections., + * Provides data access operations that apply across multiple local user records., + * Also acts as a factory for a local-user-specific {@link ServiceProviderConnectionRepository}., + * @author Keith Donald, + * @see ServiceProviderConnectionRepository, + */, +	/**, +	 * Find the id of the <i>single</i> local user who has a {@link ServiceProviderConnection} with the given key., +	 * Used to support the ProviderSignIn scenario where the user id returned is used to sign the local application user in using his or her provider account., +	 * Returns null if there is not exactly one local user connected to the provider user., +	 * @param connectionKey the key identifying a provider user, +	 */, +	/**, +	 * Find the ids of the local users who are connected to the specific provider user accounts., +	 * @param providerId the provider id, e.g. "facebook", +	 * @param providerUserIds the set of provider user ids e.g. ("125600", "131345", "54321")., +	 * @return the set of local user ids connected to those service provider users, or empty if none., +	 */, +	Set<String> findLocalUserIdsConnectedTo(String providerId, Set<String> providerUserIds);, +	/**, +	 * Create a single-user {@link ServiceProviderConnectionRepository} instance for the local user assigned the given id., +	 * @param localUserId the id of the local user account., +	 * @return the ServiceProviderConnectionRepository, exposing a number of operations for accessing and updating the given local user's provider connections., +	 */, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/NoSuchServiceProviderConnectionException.java, +/**, + * Thrown by a {@link ServiceProviderConnectionRepository} when attempting to fetch a ServiceProviderConnection , + * and no such connection exists with the provided key., + * @author Keith Donald, + * @see ServiceProviderConnectionRepository#findConnection(ServiceProviderConnectionKey), + */, +	/**, +	 * The invalid key value., +	 */, +++ b/build.gradle]