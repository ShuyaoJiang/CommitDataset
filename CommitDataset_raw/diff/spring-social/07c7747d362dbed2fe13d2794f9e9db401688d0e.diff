[+++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/AbstractOAuth1ApiTemplate.java, +	private final OAuth1Credentials credentials;, +		credentials = null;, +		credentials = new OAuth1Credentials(consumerKey, consumerSecret, accessToken, accessTokenSecret);, +		restTemplate = ProtectedResourceClientFactory.create(credentials);, +			this.restTemplate.setRequestFactory(ProtectedResourceClientFactory.addOAuthSigning(requestFactory, credentials));, +		return credentials != null;, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/AbstractOAuth1ApiTemplate.java, +	private final OAuth1Credentials credentials;, +		credentials = null;, +		credentials = new OAuth1Credentials(consumerKey, consumerSecret, accessToken, accessTokenSecret);, +		restTemplate = ProtectedResourceClientFactory.create(credentials);, +			this.restTemplate.setRequestFactory(ProtectedResourceClientFactory.addOAuthSigning(requestFactory, credentials));, +		return credentials != null;, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/ProtectedResourceClientFactory.java, +	public static RestTemplate create(OAuth1Credentials credentials) {, +			client.setInterceptors(new ClientHttpRequestInterceptor[] { new OAuth1RequestInterceptor(credentials)});, +			client.setRequestFactory(new Spring30OAuth1RequestFactory(client.getRequestFactory(), credentials));, +	public static ClientHttpRequestFactory addOAuthSigning(ClientHttpRequestFactory requestFactory, OAuth1Credentials credentials) {, +		return new Spring30OAuth1RequestFactory(requestFactory, credentials);]