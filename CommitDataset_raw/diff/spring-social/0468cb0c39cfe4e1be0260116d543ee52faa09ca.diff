[+++ b/docs/src/reference/docbook/overview.xml, +, +		<para>, +			The phrase "social networking" often refers to efforts aimed at bringing people together., +			In the software world, those efforts take the form of online social networks such as Facebook, Twitter, and LinkedIn., +			Roughly half a billion of this world's internet users have flocked to these services to keep frequent contact with family, friends, and colleagues., +		</para>, +		<para>, +			Under the surface, however, these services are just software applications that gather, store, and process information., +			Just like so many applications written before, these social networks have users who sign in and perform some activity offered by the service., +		</para>, +		<para>, +			What makes these applications a little different than traditional applications is that the data that they collect represent some facet of their users' lives., +			What's more, these applications are more than willing to share that data with other applications, as long as the user gives permission to do so., +			This means that although these social networks are great at bringing people together, as software services they also excel at bringing applications together., +		</para>, +		<para>, +			To illustrate, imagine that Paul is a member of an online movie club., +			A function of the movie club application is to recommend movies for its members to watch and to let its members maintain a list of movies that they have seen and those that they plan to see., +			When Paul sees a movie, he signs into the movie club site, checks the movie off of his viewing list, and indicates if he liked the movie or not., +			Based on his responses, the movie club application can tailor future recommendations for Paul to see., +		</para>, +		<para>, +			On its own, the movie club provides great value to Paul, as it helps him choose movies to watch., +			But Paul is also a Facebook user. And many of Paul's Facebook friends also enjoy a good movie now and then., +			If Paul were able to connect his movie club account with his Facebook profile, the movie club application could offer him a richer experience., +			Perhaps when he sees a movie, the application could post a message on his Facebook wall indicating so., +			Or when offering suggestions, the movie club could factor in the movies that his Facebook friends liked., +		</para>, +		<para>, +			Social integration is a three-way conversation between a service provider, a service consumer, and a user who holds an account on both the provider and consumer., +			All interactions between the consumer and the service provider are scoped to the context of the user's profile on the service provider., +		</para>, +		<para>, +			In the narrative above, Facebook is the service provider, the movie club application is the service consumer, and Paul is the user of both., +			The movie club application may interact with Facebook on behalf of Paul, accessing whatever Facebook data and functionality that Paul permits, including retrieving Paul's friends and posting messages to his wall., +		</para>, +		<para>, +			From the user's perspective, both applications provide some valuable functionality., +			But by connecting the user's account on the consumer application with his account on the provider application, the user brings together two applications that can now offer the user more value than they could individually., +		</para>, +		<para>, +			With Spring Social, your application can play the part of the service consumer, interacting with a service provider on behalf of its users. The key features of Spring Social are:, +		</para>, +		<para>, +			The core Spring Social project consists of the modules described in <xref linkend="table-spring-social-modules"/>., +		</para>, +		<para>, +			Which of these modules your application needs will largely depend on what facets of Spring Social you intend to use. At very minimum, you'll need the core module in your application's classpath:, +		</para>, +    <version>${spring-social.version}</version>, +		<para>, +			To let Spring Social handle the back-and-forth authorization handshake between your web application and a service provider, you'll need the web module:, +		</para>, +    <version>${spring-social.version}</version>, +			If you're developing your own provider module and API binding, you'll need the test module to test it:, +		<programlisting language="xml"><![CDATA[, +<dependency>, +    <groupId>org.springframework.social</groupId>, +    <artifactId>spring-social-test</artifactId>, +    <version>${spring-social.version}</version>, +</dependency>]]>, +		</programlisting>, +				In addition to modules that make up the core Spring Social project, there are a number of provider modules that are released separately that provide connectivity and API bindings to popular SaaS providers., +    <version>${spring-social-facebook.version}</version>, +	, +	<section id="overview-dependencies">, +		<title>Dependencies</title>, +		<para>, +			Spring Social depends on a few things to run. Most dependencies are optional and an effort has been made to keep the required dependencies to a minimum., +			The project dependencies are described in this section., +		</para>, +		<section id="overview-dependencies-java">, +			<title>Java</title>, +			<para>, +				Spring Social requires Java 1.5 or greater., +			</para>, +		</section>, +		<section id="overview-dependencies-javaee">, +			<title>Java Servlet API</title>, +			<para>, +				The Spring Social web support requires Java Servlet 2.5 or greater (Tomcat 6+)., +			</para>, +		</section>, +		<section id="overview-dependencies-spring">, +			<title>Spring Framework</title>, +			<para>, +				Spring Social depends on RestTemplate provided by the core <ulink url="http://www.springsource.org/documentation">Spring Framework</ulink> in the spring-web module., +				It requires Spring Framework version 3.0.5 or above., +				Spring Framework 3.1 is recommended to take advantage of several RestTemplate improvements., +			</para>, +			<para>, +				If you are using Spring Social with Spring Framework 3.0.5, make sure you explicitly add the spring-web dependency to your build:, +			</para>, +			<programlisting language="xml"><![CDATA[, +<dependency>, +    <groupId>org.springframework</groupId>, +    <artifactId>spring-web</artifactId>, +    <version>3.0.5.RELEASE</version>, +</dependency>]]>]