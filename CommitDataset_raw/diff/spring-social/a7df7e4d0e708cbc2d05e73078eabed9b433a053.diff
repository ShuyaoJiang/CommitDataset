[+++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FeedOperations.java, +import org.springframework.social.facebook.types.LinkPost;, +import org.springframework.social.facebook.types.NotePost;, +import org.springframework.social.facebook.types.StatusPost;, +	List<StatusPost> getStatuses();, +	List<StatusPost> getStatuses(String userId);, +	List<LinkPost> getLinks();, +	List<LinkPost> getLinks(String ownerId);, +	List<NotePost> getNotes();, +	List<NotePost> getNotes(String ownerId);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FeedOperations.java, +import org.springframework.social.facebook.types.LinkPost;, +import org.springframework.social.facebook.types.NotePost;, +import org.springframework.social.facebook.types.StatusPost;, +	List<StatusPost> getStatuses();, +	List<StatusPost> getStatuses(String userId);, +	List<LinkPost> getLinks();, +	List<LinkPost> getLinks(String ownerId);, +	List<NotePost> getNotes();, +	List<NotePost> getNotes(String ownerId);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FeedTemplate.java, +import org.springframework.social.facebook.support.json.LinkPostList;, +import org.springframework.social.facebook.support.json.NotePostList;, +import org.springframework.social.facebook.support.json.StatusPostList;, +import org.springframework.social.facebook.types.LinkPost;, +import org.springframework.social.facebook.types.NotePost;, +import org.springframework.social.facebook.types.StatusPost;, +	public List<StatusPost> getStatuses() {, +	public List<StatusPost> getStatuses(String userId) {, +		return graphApi.fetchConnections(userId, "statuses", StatusPostList.class).getList();, +	public List<LinkPost> getLinks() {, +	public List<LinkPost> getLinks(String ownerId) {, +		return graphApi.fetchConnections(ownerId, "links", LinkPostList.class).getList();, +	public List<NotePost> getNotes() {, +	public List<NotePost> getNotes(String ownerId) {, +		return graphApi.fetchConnections(ownerId, "notes", NotePostList.class).getList();, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FeedOperations.java, +import org.springframework.social.facebook.types.LinkPost;, +import org.springframework.social.facebook.types.NotePost;, +import org.springframework.social.facebook.types.StatusPost;, +	List<StatusPost> getStatuses();, +	List<StatusPost> getStatuses(String userId);, +	List<LinkPost> getLinks();, +	List<LinkPost> getLinks(String ownerId);, +	List<NotePost> getNotes();, +	List<NotePost> getNotes(String ownerId);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FeedTemplate.java, +import org.springframework.social.facebook.support.json.LinkPostList;, +import org.springframework.social.facebook.support.json.NotePostList;, +import org.springframework.social.facebook.support.json.StatusPostList;, +import org.springframework.social.facebook.types.LinkPost;, +import org.springframework.social.facebook.types.NotePost;, +import org.springframework.social.facebook.types.StatusPost;, +	public List<StatusPost> getStatuses() {, +	public List<StatusPost> getStatuses(String userId) {, +		return graphApi.fetchConnections(userId, "statuses", StatusPostList.class).getList();, +	public List<LinkPost> getLinks() {, +	public List<LinkPost> getLinks(String ownerId) {, +		return graphApi.fetchConnections(ownerId, "links", LinkPostList.class).getList();, +	public List<NotePost> getNotes() {, +	public List<NotePost> getNotes(String ownerId) {, +		return graphApi.fetchConnections(ownerId, "notes", NotePostList.class).getList();, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/support/json/CheckinPostMixin.java, +/*, + * Copyright 2010 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.facebook.support.json;, +, +import java.util.Date;, +, +import org.codehaus.jackson.annotate.JsonCreator;, +import org.codehaus.jackson.annotate.JsonProperty;, +import org.springframework.social.facebook.types.Place;, +import org.springframework.social.facebook.types.Reference;, +, +abstract class CheckinPostMixin extends PostMixin {, +, +	@JsonCreator, +	CheckinPostMixin(, +			@JsonProperty("id") String id, , +			@JsonProperty("from") Reference from, , +			@JsonProperty("created_time") Date createdTime,, +			@JsonProperty("updated_time") Date updatedTime) {, +		super(id, from, createdTime, updatedTime);, +	}, +, +	@JsonProperty("place"), +	Place place;]