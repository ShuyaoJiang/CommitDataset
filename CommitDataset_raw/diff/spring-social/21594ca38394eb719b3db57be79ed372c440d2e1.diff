[+++ b/spring-social-connect/src/main/java/org/springframework/social/connect/JdbcAccountConnectionRepository.java, +		this.providerAccountIdByMemberAndProviderQuery = SELECT_PROVIDER_ACCOUNT_ID;, +		this.countConnectionsQuery = SELECT_ACCOUNT_CONNECTION_COUNT;, +		this.insertAccountConnectionQuery = INSERT_ACCOUNT_CONNECTION;, +		this.deleteAccountConnectionQuery = DELETE_ACCOUNT_CONNECTION;, +		this.accessTokenByMemberAndProviderQuery = SELECT_ACCESS_TOKEN;, +	}, +, +	public String getProviderAccountIdByMemberAndProviderQuery() {, +		return providerAccountIdByMemberAndProviderQuery;, +	}, +, +	public void setProviderAccountIdByMemberAndProviderQuery(String providerAccountIdByMemberAndProviderQuery) {, +		this.providerAccountIdByMemberAndProviderQuery = providerAccountIdByMemberAndProviderQuery;, +	}, +, +	public String getCountConnectionsQuery() {, +		return countConnectionsQuery;, +	}, +, +	public void setCountConnectionsQuery(String countConnectionsQuery) {, +		this.countConnectionsQuery = countConnectionsQuery;, +	}, +, +	public String getInsertAccountConnectionQuery() {, +		return insertAccountConnectionQuery;, +	}, +, +	public void setInsertAccountConnectionQuery(String insertAccountConnectionQuery) {, +		this.insertAccountConnectionQuery = insertAccountConnectionQuery;, +	}, +, +	public String getDeleteAccountConnectionQuery() {, +		return deleteAccountConnectionQuery;, +	}, +, +	public void setDeleteAccountConnectionQuery(String deleteAccountConnectionQuery) {, +		this.deleteAccountConnectionQuery = deleteAccountConnectionQuery;, +	}, +, +	public String getAccessTokenByMemberAndProviderQuery() {, +		return accessTokenByMemberAndProviderQuery;, +	}, +, +	public void setAccessTokenByMemberAndProviderQuery(String accessTokenByMemberAndProviderQuery) {, +		this.accessTokenByMemberAndProviderQuery = accessTokenByMemberAndProviderQuery;, +		return jdbcTemplate.queryForInt(countConnectionsQuery, accountId, provider) == 1;, +		jdbcTemplate.update(deleteAccountConnectionQuery, accountId, provider);, +		return jdbcTemplate.queryForObject(accessTokenByMemberAndProviderQuery, new RowMapper<OAuthToken>() {, +			return jdbcTemplate.queryForObject(providerAccountIdByMemberAndProviderQuery, String.class, accountId,, +					provider);, +	private String providerAccountIdByMemberAndProviderQuery;, +	private String countConnectionsQuery;, +	private String insertAccountConnectionQuery;, +	private String deleteAccountConnectionQuery;, +	private String accessTokenByMemberAndProviderQuery;, +, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/JdbcAccountConnectionRepository.java, +		this.providerAccountIdByMemberAndProviderQuery = SELECT_PROVIDER_ACCOUNT_ID;, +		this.countConnectionsQuery = SELECT_ACCOUNT_CONNECTION_COUNT;, +		this.insertAccountConnectionQuery = INSERT_ACCOUNT_CONNECTION;, +		this.deleteAccountConnectionQuery = DELETE_ACCOUNT_CONNECTION;, +		this.accessTokenByMemberAndProviderQuery = SELECT_ACCESS_TOKEN;, +	}, +, +	public String getProviderAccountIdByMemberAndProviderQuery() {, +		return providerAccountIdByMemberAndProviderQuery;, +	}, +, +	public void setProviderAccountIdByMemberAndProviderQuery(String providerAccountIdByMemberAndProviderQuery) {, +		this.providerAccountIdByMemberAndProviderQuery = providerAccountIdByMemberAndProviderQuery;, +	}, +, +	public String getCountConnectionsQuery() {, +		return countConnectionsQuery;, +	}, +, +	public void setCountConnectionsQuery(String countConnectionsQuery) {, +		this.countConnectionsQuery = countConnectionsQuery;, +	}, +, +	public String getInsertAccountConnectionQuery() {, +		return insertAccountConnectionQuery;, +	}, +, +	public void setInsertAccountConnectionQuery(String insertAccountConnectionQuery) {, +		this.insertAccountConnectionQuery = insertAccountConnectionQuery;, +	}, +, +	public String getDeleteAccountConnectionQuery() {, +		return deleteAccountConnectionQuery;, +	}, +, +	public void setDeleteAccountConnectionQuery(String deleteAccountConnectionQuery) {, +		this.deleteAccountConnectionQuery = deleteAccountConnectionQuery;, +	}, +, +	public String getAccessTokenByMemberAndProviderQuery() {, +		return accessTokenByMemberAndProviderQuery;, +	}]