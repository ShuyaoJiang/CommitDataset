[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/AbstractConnection.java, +	private static final long serialVersionUID = 7330875324290049412L;, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/AbstractConnection.java, +	private static final long serialVersionUID = 7330875324290049412L;, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth1Connection.java, +	private static final long serialVersionUID = -808097401993144389L;, +, +	// equals() and hashCode() generated by Eclipse, +	@Override, +	public int hashCode() {, +		final int prime = 31;, +		int result = super.hashCode();, +		result = prime * result + ((accessToken == null) ? 0 : accessToken.hashCode());, +		result = prime * result + ((secret == null) ? 0 : secret.hashCode());, +		return result;, +	}, +, +	@Override, +	public boolean equals(Object obj) {, +		if (this == obj) return true;, +		if (!super.equals(obj)) return false;, +		if (getClass() != obj.getClass()) return false;, +		@SuppressWarnings("rawtypes"), +		OAuth1Connection other = (OAuth1Connection) obj;, +		, +		if (accessToken == null) {, +			if (other.accessToken != null) return false;, +		} else if (!accessToken.equals(other.accessToken)) return false;, +, +		if (secret == null) {, +			if (other.secret != null) return false;, +		} else if (!secret.equals(other.secret)) return false;, +		, +		return true;, +	}, +	, +	, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/AbstractConnection.java, +	private static final long serialVersionUID = 7330875324290049412L;, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth1Connection.java, +	private static final long serialVersionUID = -808097401993144389L;, +, +	// equals() and hashCode() generated by Eclipse, +	@Override, +	public int hashCode() {, +		final int prime = 31;, +		int result = super.hashCode();, +		result = prime * result + ((accessToken == null) ? 0 : accessToken.hashCode());, +		result = prime * result + ((secret == null) ? 0 : secret.hashCode());, +		return result;, +	}, +, +	@Override, +	public boolean equals(Object obj) {, +		if (this == obj) return true;, +		if (!super.equals(obj)) return false;, +		if (getClass() != obj.getClass()) return false;, +		@SuppressWarnings("rawtypes"), +		OAuth1Connection other = (OAuth1Connection) obj;, +		, +		if (accessToken == null) {, +			if (other.accessToken != null) return false;, +		} else if (!accessToken.equals(other.accessToken)) return false;, +, +		if (secret == null) {, +			if (other.secret != null) return false;, +		} else if (!secret.equals(other.secret)) return false;, +		, +		return true;, +	}, +	, +	, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth2Connection.java, +	private static final long serialVersionUID = 4057584084077577480L;, +, +	// equas() and hashCode() generated by Eclipse, +	@Override, +	public int hashCode() {, +		final int prime = 31;, +		int result = super.hashCode();, +		result = prime * result + ((accessToken == null) ? 0 : accessToken.hashCode());, +		result = prime * result + ((expireTime == null) ? 0 : expireTime.hashCode());, +		result = prime * result + ((refreshToken == null) ? 0 : refreshToken.hashCode());, +		return result;, +	}, +, +	@Override, +	public boolean equals(Object obj) {, +		if (this == obj) return true;, +		if (!super.equals(obj)) return false;, +		if (getClass() != obj.getClass()) return false;, +		OAuth2Connection other = (OAuth2Connection) obj;, +		, +		if (accessToken == null) {, +			if (other.accessToken != null) return false;, +		} else if (!accessToken.equals(other.accessToken)) return false;, +]