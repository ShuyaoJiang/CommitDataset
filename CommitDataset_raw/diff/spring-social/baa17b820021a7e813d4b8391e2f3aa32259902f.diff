[+++ b/docs/src/reference/docbook/implementing.xml, +			Define a single constructor that accepts an clientId and clientSecret,, +			Finally, implement getServiceApi(String) to return a new API instance., +    public FacebookServiceProvider(String clientId, String clientSecret) {, +        super(new OAuth2Template(clientId, clientSecret,, +            "https://graph.facebook.com/oauth/authorize", , +    public FacebookApi getServiceApi(String accessToken) {, +			In the constructor, you should call super, passing up the configured OAuth2Template, which implements OAuth2Operations., +			In getServiceApi(String), you should construct your Service API implementation, passing it the access token needed to make requests for protected resources., +			Define a single constructor that accepts a consumerKey and consumerSecret., +			Finally, implement getServiceApi(String, String) to return a new API instance., +    public TwitterServiceProvider(String consumerKey, String consumerSecret) {, +        super(consumerKey, consumerSecret,  new OAuth1Template(consumerKey, consumerSecret, , +                "https://twitter.com/oauth/authorize",, +    public TwitterApi getServiceApi(String accessToken, String secret) {, +        return new TwitterTemplate(getConsumerKey(), getConsumerSecret(), accessToken, secret);, +			In the constructor, you should call super, passing up the the consumerKey, secret, and configured OAuth1Template., +			In getServiceApi(String, String), you should construct your Service API implementation, passing it the four tokens needed to make requests for protected resources.]