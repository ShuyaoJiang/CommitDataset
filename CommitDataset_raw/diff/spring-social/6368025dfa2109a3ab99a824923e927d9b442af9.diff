[+++ b/build.gradle, +        compile ("javax.servlet:servlet-api:$servletApiVersion") { provided = true }, +++ b/build.gradle, +        compile ("javax.servlet:servlet-api:$servletApiVersion") { provided = true }, +++ /dev/null, +++ b/build.gradle, +        compile ("javax.servlet:servlet-api:$servletApiVersion") { provided = true }, +++ /dev/null, +++ b/spring-social-core/src/main/java/org/springframework/social/BadCredentialsException.java, + * For example, updating a Twitter user's status with a bad or missing access token., +++ b/build.gradle, +        compile ("javax.servlet:servlet-api:$servletApiVersion") { provided = true }, +++ /dev/null, +++ b/spring-social-core/src/main/java/org/springframework/social/BadCredentialsException.java, + * For example, updating a Twitter user's status with a bad or missing access token., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionKey.java, +	, +	public String toString() {, +		return providerId + ":" + providerUserId;, +	}, +++ b/build.gradle, +        compile ("javax.servlet:servlet-api:$servletApiVersion") { provided = true }, +++ /dev/null, +++ b/spring-social-core/src/main/java/org/springframework/social/BadCredentialsException.java, + * For example, updating a Twitter user's status with a bad or missing access token., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionKey.java, +	, +	public String toString() {, +		return providerId + ":" + providerUserId;, +	}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionRepository.java, +	 * Semantically equivalent to {@link #findConnections(String)}, but uses the apiType as the provider key instead of the providerId., +	 * Semantically equivalent to {@link #findConnection(ConnectionKey)}, but uses the apiType as the provider key instead of the providerId., +++ b/build.gradle, +        compile ("javax.servlet:servlet-api:$servletApiVersion") { provided = true }, +++ /dev/null, +++ b/spring-social-core/src/main/java/org/springframework/social/BadCredentialsException.java, + * For example, updating a Twitter user's status with a bad or missing access token., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionKey.java, +	, +	public String toString() {, +		return providerId + ":" + providerUserId;, +	}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionRepository.java, +	 * Semantically equivalent to {@link #findConnections(String)}, but uses the apiType as the provider key instead of the providerId., +	 * Semantically equivalent to {@link #findConnection(ConnectionKey)}, but uses the apiType as the provider key instead of the providerId., +++ /dev/null, +++ b/build.gradle, +        compile ("javax.servlet:servlet-api:$servletApiVersion") { provided = true }, +++ /dev/null, +++ b/spring-social-core/src/main/java/org/springframework/social/BadCredentialsException.java, + * For example, updating a Twitter user's status with a bad or missing access token., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionKey.java, +	, +	public String toString() {, +		return providerId + ":" + providerUserId;, +	}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionRepository.java, +	 * Semantically equivalent to {@link #findConnections(String)}, but uses the apiType as the provider key instead of the providerId., +	 * Semantically equivalent to {@link #findConnection(ConnectionKey)}, but uses the apiType as the provider key instead of the providerId., +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +        compile ("javax.servlet:servlet-api:$servletApiVersion") { provided = true }, +++ /dev/null, +++ b/spring-social-core/src/main/java/org/springframework/social/BadCredentialsException.java, + * For example, updating a Twitter user's status with a bad or missing access token., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionKey.java, +	, +	public String toString() {, +		return providerId + ":" + providerUserId;, +	}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionRepository.java, +	 * Semantically equivalent to {@link #findConnections(String)}, but uses the apiType as the provider key instead of the providerId., +	 * Semantically equivalent to {@link #findConnection(ConnectionKey)}, but uses the apiType as the provider key instead of the providerId., +++ /dev/null, +++ /dev/null, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/UsersConnectionRepository.java, +++ b/build.gradle, +        compile ("javax.servlet:servlet-api:$servletApiVersion") { provided = true }, +++ /dev/null, +++ b/spring-social-core/src/main/java/org/springframework/social/BadCredentialsException.java, + * For example, updating a Twitter user's status with a bad or missing access token., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionKey.java, +	, +	public String toString() {, +		return providerId + ":" + providerUserId;, +	}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionRepository.java, +	 * Semantically equivalent to {@link #findConnections(String)}, but uses the apiType as the provider key instead of the providerId., +	 * Semantically equivalent to {@link #findConnection(ConnectionKey)}, but uses the apiType as the provider key instead of the providerId., +++ /dev/null, +++ /dev/null, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/UsersConnectionRepository.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +++ b/build.gradle, +        compile ("javax.servlet:servlet-api:$servletApiVersion") { provided = true }, +++ /dev/null, +++ b/spring-social-core/src/main/java/org/springframework/social/BadCredentialsException.java, + * For example, updating a Twitter user's status with a bad or missing access token.]