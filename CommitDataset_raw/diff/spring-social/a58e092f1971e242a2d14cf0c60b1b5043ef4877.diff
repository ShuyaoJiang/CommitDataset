[+++ /dev/null, +++ /dev/null, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/EnableJdbcConnectionRepository.java, +++ /dev/null, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/EnableJdbcConnectionRepository.java, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/JdbcConnectionRepositoryRegistrar.java, +		registerJdbcConnectionRepositoryBeans(registry, connectionRepositoryId, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef, userIdSourceRef);, +++ /dev/null, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/EnableJdbcConnectionRepository.java, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/JdbcConnectionRepositoryRegistrar.java, +		registerJdbcConnectionRepositoryBeans(registry, connectionRepositoryId, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef, userIdSourceRef);, +++ b/spring-social-config/src/main/java/org/springframework/social/config/support/JdbcConnectionRepositoryConfigSupport.java, +			String connectionFactoryLocatorRef, String dataSourceRef, String encryptorRef, String userIdSourceRef) {, +		registerUsersConnectionRepositoryBeanDefinition(registry, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef);, +			String connectionFactoryLocatorRef, String dataSourceRef, String encryptorRef) {, +, +		BeanDefinition usersConnectionRepositoryBD = BeanDefinitionBuilder.genericBeanDefinition(JdbcUsersConnectionRepository.class), +				.addConstructorArgReference(encryptorRef), +				.getBeanDefinition();, +++ /dev/null, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/EnableJdbcConnectionRepository.java, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/JdbcConnectionRepositoryRegistrar.java, +		registerJdbcConnectionRepositoryBeans(registry, connectionRepositoryId, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef, userIdSourceRef);, +++ b/spring-social-config/src/main/java/org/springframework/social/config/support/JdbcConnectionRepositoryConfigSupport.java, +			String connectionFactoryLocatorRef, String dataSourceRef, String encryptorRef, String userIdSourceRef) {, +		registerUsersConnectionRepositoryBeanDefinition(registry, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef);, +			String connectionFactoryLocatorRef, String dataSourceRef, String encryptorRef) {, +, +		BeanDefinition usersConnectionRepositoryBD = BeanDefinitionBuilder.genericBeanDefinition(JdbcUsersConnectionRepository.class), +				.addConstructorArgReference(encryptorRef), +				.getBeanDefinition();, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/JdbcConnectionRepositoryBeanDefinitionParser.java, +		return registerJdbcConnectionRepositoryBeans(parserContext.getRegistry(), connectionRepositoryId, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef, userIdSourceRef);, +++ /dev/null, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/EnableJdbcConnectionRepository.java, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/JdbcConnectionRepositoryRegistrar.java, +		registerJdbcConnectionRepositoryBeans(registry, connectionRepositoryId, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef, userIdSourceRef);, +++ b/spring-social-config/src/main/java/org/springframework/social/config/support/JdbcConnectionRepositoryConfigSupport.java, +			String connectionFactoryLocatorRef, String dataSourceRef, String encryptorRef, String userIdSourceRef) {, +		registerUsersConnectionRepositoryBeanDefinition(registry, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef);, +			String connectionFactoryLocatorRef, String dataSourceRef, String encryptorRef) {, +, +		BeanDefinition usersConnectionRepositoryBD = BeanDefinitionBuilder.genericBeanDefinition(JdbcUsersConnectionRepository.class), +				.addConstructorArgReference(encryptorRef), +				.getBeanDefinition();, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/JdbcConnectionRepositoryBeanDefinitionParser.java, +		return registerJdbcConnectionRepositoryBeans(parserContext.getRegistry(), connectionRepositoryId, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef, userIdSourceRef);, +++ b/spring-social-config/src/main/resources/org/springframework/social/config/xml/spring-social-1.1.xsd, +++ /dev/null, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/EnableJdbcConnectionRepository.java, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/JdbcConnectionRepositoryRegistrar.java, +		registerJdbcConnectionRepositoryBeans(registry, connectionRepositoryId, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef, userIdSourceRef);, +++ b/spring-social-config/src/main/java/org/springframework/social/config/support/JdbcConnectionRepositoryConfigSupport.java, +			String connectionFactoryLocatorRef, String dataSourceRef, String encryptorRef, String userIdSourceRef) {, +		registerUsersConnectionRepositoryBeanDefinition(registry, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef);, +			String connectionFactoryLocatorRef, String dataSourceRef, String encryptorRef) {, +, +		BeanDefinition usersConnectionRepositoryBD = BeanDefinitionBuilder.genericBeanDefinition(JdbcUsersConnectionRepository.class), +				.addConstructorArgReference(encryptorRef), +				.getBeanDefinition();, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/JdbcConnectionRepositoryBeanDefinitionParser.java, +		return registerJdbcConnectionRepositoryBeans(parserContext.getRegistry(), connectionRepositoryId, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef, userIdSourceRef);, +++ b/spring-social-config/src/main/resources/org/springframework/social/config/xml/spring-social-1.1.xsd, +++ /dev/null, +++ /dev/null, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/EnableJdbcConnectionRepository.java, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/JdbcConnectionRepositoryRegistrar.java, +		registerJdbcConnectionRepositoryBeans(registry, connectionRepositoryId, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef, userIdSourceRef);, +++ b/spring-social-config/src/main/java/org/springframework/social/config/support/JdbcConnectionRepositoryConfigSupport.java, +			String connectionFactoryLocatorRef, String dataSourceRef, String encryptorRef, String userIdSourceRef) {, +		registerUsersConnectionRepositoryBeanDefinition(registry, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef);, +			String connectionFactoryLocatorRef, String dataSourceRef, String encryptorRef) {, +, +		BeanDefinition usersConnectionRepositoryBD = BeanDefinitionBuilder.genericBeanDefinition(JdbcUsersConnectionRepository.class), +				.addConstructorArgReference(encryptorRef), +				.getBeanDefinition();, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/JdbcConnectionRepositoryBeanDefinitionParser.java, +		return registerJdbcConnectionRepositoryBeans(parserContext.getRegistry(), connectionRepositoryId, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef, userIdSourceRef);, +++ b/spring-social-config/src/main/resources/org/springframework/social/config/xml/spring-social-1.1.xsd, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/EnableJdbcConnectionRepository.java, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/JdbcConnectionRepositoryRegistrar.java, +		registerJdbcConnectionRepositoryBeans(registry, connectionRepositoryId, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef, userIdSourceRef);, +++ b/spring-social-config/src/main/java/org/springframework/social/config/support/JdbcConnectionRepositoryConfigSupport.java, +			String connectionFactoryLocatorRef, String dataSourceRef, String encryptorRef, String userIdSourceRef) {, +		registerUsersConnectionRepositoryBeanDefinition(registry, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef);, +			String connectionFactoryLocatorRef, String dataSourceRef, String encryptorRef) {, +, +		BeanDefinition usersConnectionRepositoryBD = BeanDefinitionBuilder.genericBeanDefinition(JdbcUsersConnectionRepository.class), +				.addConstructorArgReference(encryptorRef), +				.getBeanDefinition();, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/JdbcConnectionRepositoryBeanDefinitionParser.java, +		return registerJdbcConnectionRepositoryBeans(parserContext.getRegistry(), connectionRepositoryId, usersConnectionRepositoryId, connectionFactoryLocatorRef, dataSourceRef, encryptorRef, userIdSourceRef);, +++ b/spring-social-config/src/main/resources/org/springframework/social/config/xml/spring-social-1.1.xsd, +++ /dev/null, +++ /dev/null, +++ b/spring-social-config/src/test/java/org/springframework/social/config/annotation/SocialConfig.java, +@EnableJdbcConnectionRepository]