[+++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/ServiceProviderElementParser.java, +		String beanId = element.getAttribute("id");, +		if(beanId == null || beanId.isEmpty()) {, +			beanId = parserContext.getReaderContext().generateBeanName(providerBeanDefinition);, +		}, +		parserContext.getRegistry().registerBeanDefinition(beanId, providerBeanDefinition);, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/ServiceProviderElementParser.java, +		String beanId = element.getAttribute("id");, +		if(beanId == null || beanId.isEmpty()) {, +			beanId = parserContext.getReaderContext().generateBeanName(providerBeanDefinition);, +		}, +		parserContext.getRegistry().registerBeanDefinition(beanId, providerBeanDefinition);, +++ b/spring-social-config/src/main/resources/org/springframework/social/config/xml/spring-social-1.0.xsd, +			<xsd:attribute name="id" type="xsd:string">, +				<xsd:annotation>, +					<xsd:documentation>, +						The bean ID, +					</xsd:documentation>, +				</xsd:annotation>, +			</xsd:attribute>, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/ServiceProviderElementParser.java, +		String beanId = element.getAttribute("id");, +		if(beanId == null || beanId.isEmpty()) {, +			beanId = parserContext.getReaderContext().generateBeanName(providerBeanDefinition);, +		}, +		parserContext.getRegistry().registerBeanDefinition(beanId, providerBeanDefinition);, +++ b/spring-social-config/src/main/resources/org/springframework/social/config/xml/spring-social-1.0.xsd, +			<xsd:attribute name="id" type="xsd:string">, +				<xsd:annotation>, +					<xsd:documentation>, +						The bean ID, +					</xsd:documentation>, +				</xsd:annotation>, +			</xsd:attribute>, +++ b/spring-social-config/src/test/java/org/springframework/social/config/xml/SocialNamespaceHandlerTest.java, +import static org.junit.Assert.*;, +, +		assertEquals("facebookServiceProvider", applicationContext.getBeanNamesForType(FacebookServiceProvider.class)[0]);, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/ServiceProviderElementParser.java, +		String beanId = element.getAttribute("id");, +		if(beanId == null || beanId.isEmpty()) {, +			beanId = parserContext.getReaderContext().generateBeanName(providerBeanDefinition);, +		}, +		parserContext.getRegistry().registerBeanDefinition(beanId, providerBeanDefinition);, +++ b/spring-social-config/src/main/resources/org/springframework/social/config/xml/spring-social-1.0.xsd, +			<xsd:attribute name="id" type="xsd:string">, +				<xsd:annotation>, +					<xsd:documentation>, +						The bean ID, +					</xsd:documentation>, +				</xsd:annotation>, +			</xsd:attribute>, +++ b/spring-social-config/src/test/java/org/springframework/social/config/xml/SocialNamespaceHandlerTest.java, +import static org.junit.Assert.*;, +, +		assertEquals("facebookServiceProvider", applicationContext.getBeanNamesForType(FacebookServiceProvider.class)[0]);, +++ b/spring-social-config/src/test/java/org/springframework/social/config/xml/socialNamespaceHandlerTest.xml, +	<social:service-provider id="facebookServiceProvider", +		class="org.springframework.social.facebook.connect.FacebookServiceProvider" client-key="facebook_key" client-secret="facebook_secret" />, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/ServiceProviderElementParser.java, +		String beanId = element.getAttribute("id");, +		if(beanId == null || beanId.isEmpty()) {, +			beanId = parserContext.getReaderContext().generateBeanName(providerBeanDefinition);, +		}, +		parserContext.getRegistry().registerBeanDefinition(beanId, providerBeanDefinition);, +++ b/spring-social-config/src/main/resources/org/springframework/social/config/xml/spring-social-1.0.xsd, +			<xsd:attribute name="id" type="xsd:string">, +				<xsd:annotation>, +					<xsd:documentation>, +						The bean ID, +					</xsd:documentation>, +				</xsd:annotation>, +			</xsd:attribute>, +++ b/spring-social-config/src/test/java/org/springframework/social/config/xml/SocialNamespaceHandlerTest.java, +import static org.junit.Assert.*;, +, +		assertEquals("facebookServiceProvider", applicationContext.getBeanNamesForType(FacebookServiceProvider.class)[0]);, +++ b/spring-social-config/src/test/java/org/springframework/social/config/xml/socialNamespaceHandlerTest.xml, +	<social:service-provider id="facebookServiceProvider", +		class="org.springframework.social.facebook.connect.FacebookServiceProvider" client-key="facebook_key" client-secret="facebook_secret" />, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth1/AbstractOAuth10ServiceProvider.java, +package org.springframework.social.connect.oauth1;, +, +import org.springframework.social.connect.support.ConnectionRepository;, +import org.springframework.social.oauth1.OAuth10Operations;, +, +public abstract class AbstractOAuth10ServiceProvider<S> extends AbstractOAuth1ServiceProvider<S> implements OAuth10ServiceProvider<S> {, +, +	private final OAuth10Operations oauth1Operations;, +, +	public AbstractOAuth10ServiceProvider(String id, ConnectionRepository connectionRepository, String consumerKey,, +			String consumerSecret, OAuth10Operations oauth1Operations) {, +		super(id, connectionRepository, consumerKey, consumerSecret);, +		this.oauth1Operations = oauth1Operations;, +	}, +, +	public OAuth10Operations getOAuth10Operations() {, +		return oauth1Operations;, +	}, +]