[+++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +import org.springframework.util.StringUtils;, +				authUrl.append('&').append(name);, +				String value = values.next();, +				if (StringUtils.hasLength(value)) {, +					authUrl.append('=').append(formEncode(value));, +				}, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +import org.springframework.util.StringUtils;, +				authUrl.append('&').append(name);, +				String value = values.next();, +				if (StringUtils.hasLength(value)) {, +					authUrl.append('=').append(formEncode(value));, +				}, +++ b/spring-social-security/src/main/java/org/springframework/social/security/SocialAuthenticationFilter.java, +	private String filterProcessesUrl;, +, +	@Override, +	public void setFilterProcessesUrl(String filterProcessesUrl) {, +		this.filterProcessesUrl = filterProcessesUrl;, +		super.setFilterProcessesUrl(filterProcessesUrl);, +	}, +, +		if (!uri.startsWith(filterProcessesUrl)) {, +		uri = uri.substring(filterProcessesUrl.length());, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +import org.springframework.util.StringUtils;, +				authUrl.append('&').append(name);, +				String value = values.next();, +				if (StringUtils.hasLength(value)) {, +					authUrl.append('=').append(formEncode(value));, +				}, +++ b/spring-social-security/src/main/java/org/springframework/social/security/SocialAuthenticationFilter.java, +	private String filterProcessesUrl;, +, +	@Override, +	public void setFilterProcessesUrl(String filterProcessesUrl) {, +		this.filterProcessesUrl = filterProcessesUrl;, +		super.setFilterProcessesUrl(filterProcessesUrl);, +	}, +, +		if (!uri.startsWith(filterProcessesUrl)) {, +		uri = uri.substring(filterProcessesUrl.length());, +++ b/spring-social-security/src/main/java/org/springframework/social/security/provider/OAuth2AuthenticationService.java, +		} else if (StringUtils.hasLength(defaultScope)) {, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +import org.springframework.util.StringUtils;, +				authUrl.append('&').append(name);, +				String value = values.next();, +				if (StringUtils.hasLength(value)) {, +					authUrl.append('=').append(formEncode(value));, +				}, +++ b/spring-social-security/src/main/java/org/springframework/social/security/SocialAuthenticationFilter.java, +	private String filterProcessesUrl;, +, +	@Override, +	public void setFilterProcessesUrl(String filterProcessesUrl) {, +		this.filterProcessesUrl = filterProcessesUrl;, +		super.setFilterProcessesUrl(filterProcessesUrl);, +	}, +, +		if (!uri.startsWith(filterProcessesUrl)) {, +		uri = uri.substring(filterProcessesUrl.length());, +++ b/spring-social-security/src/main/java/org/springframework/social/security/provider/OAuth2AuthenticationService.java, +		} else if (StringUtils.hasLength(defaultScope)) {, +++ b/spring-social-security/src/test/java/org/springframework/social/security/SocialAuthenticationFilterTest.java, +	@SuppressWarnings("unchecked")]