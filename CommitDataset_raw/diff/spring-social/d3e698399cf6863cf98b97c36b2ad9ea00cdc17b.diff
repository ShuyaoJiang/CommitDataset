[+++ b/src/main/java/org/springframework/social/oauth/AccountException.java, +package org.springframework.social.oauth;, +, +@SuppressWarnings("serial"), +public abstract class AccountException extends RuntimeException {, +, +	public AccountException(String message) {, +		super(message);, +	}, +, +	public AccountException(String message, Throwable cause) {, +		super(message, cause);, +	}, +	, +}, +++ b/src/main/java/org/springframework/social/oauth/AccountException.java, +package org.springframework.social.oauth;, +, +@SuppressWarnings("serial"), +public abstract class AccountException extends RuntimeException {, +, +	public AccountException(String message) {, +		super(message);, +	}, +, +	public AccountException(String message, Throwable cause) {, +		super(message, cause);, +	}, +	, +}, +++ b/src/main/java/org/springframework/social/oauth/ConnectedAccountNotFoundException.java, +package org.springframework.social.oauth;, +, +@SuppressWarnings("serial"), +public final class ConnectedAccountNotFoundException extends AccountException {, +, +	private final String provider;, +	, +	public ConnectedAccountNotFoundException(String provider) {, +		super("connected account not found");, +		this.provider = provider;, +	}, +, +	public String getProvider() {, +		return provider;, +	}, +, +}, +++ b/src/main/java/org/springframework/social/oauth/AccountException.java, +package org.springframework.social.oauth;, +, +@SuppressWarnings("serial"), +public abstract class AccountException extends RuntimeException {, +, +	public AccountException(String message) {, +		super(message);, +	}, +, +	public AccountException(String message, Throwable cause) {, +		super(message, cause);, +	}, +	, +}, +++ b/src/main/java/org/springframework/social/oauth/ConnectedAccountNotFoundException.java, +package org.springframework.social.oauth;, +, +@SuppressWarnings("serial"), +public final class ConnectedAccountNotFoundException extends AccountException {, +, +	private final String provider;, +	, +	public ConnectedAccountNotFoundException(String provider) {, +		super("connected account not found");, +		this.provider = provider;, +	}, +, +	public String getProvider() {, +		return provider;, +	}, +, +}, +++ b/src/main/java/org/springframework/social/oauth/OAuthSpringSecurityOAuthHelper.java, +import org.springframework.security.authentication.AuthenticationCredentialsNotFoundException;, +import org.springframework.security.authentication.BadCredentialsException;, +		if (authentication == null) {, +			throw new AuthenticationCredentialsNotFoundException("No credentials found");, +		}, +, +		try {, +, +			OAuthConsumerToken accessToken = tokenServices.getToken(resourceId, account.getId());, +			if(accessToken == null) {, +				throw new ConnectedAccountNotFoundException(resourceId);, +			}, +			return accessToken;, +		} catch (ClassCastException e) {, +			throw new BadCredentialsException("Expected principal to be an Account", e);, +		}, +++ b/src/main/java/org/springframework/social/oauth/AccountException.java, +package org.springframework.social.oauth;]