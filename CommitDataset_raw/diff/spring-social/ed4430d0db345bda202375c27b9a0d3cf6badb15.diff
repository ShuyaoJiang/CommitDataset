[+++ b/spring-social-web/src/main/java/org/springframework/social/web/connect/ConnectController.java, +import java.util.Collections;, +		interceptors.add(serviceApiType, interceptor);, +	@SuppressWarnings({ "rawtypes", "unchecked" }), +		for (ConnectInterceptor interceptor : interceptingConnectionsTo(connectionFactory)) {, +			interceptor.preConnect(connectionFactory, request);, +		}, +	@SuppressWarnings({ "rawtypes", "unchecked" }), +		for (ConnectInterceptor interceptor : interceptingConnectionsTo(connectionFactory)) {, +			interceptor.postConnect(connection, request);, +		}, +	}, +, +	private List<ConnectInterceptor<?>> interceptingConnectionsTo(ServiceProviderConnectionFactory<?> connectionFactory) {, +		Class<?> serviceType = GenericTypeResolver.resolveTypeArgument(connectionFactory.getClass(), ServiceProviderConnectionFactory.class);, +		List<ConnectInterceptor<?>> typedInterceptors = interceptors.get(serviceType);, +		if (typedInterceptors == null) {, +			typedInterceptors = Collections.emptyList();, +		}, +		return typedInterceptors;, +++ b/spring-social-web/src/main/java/org/springframework/social/web/connect/ConnectController.java, +import java.util.Collections;, +		interceptors.add(serviceApiType, interceptor);, +	@SuppressWarnings({ "rawtypes", "unchecked" }), +		for (ConnectInterceptor interceptor : interceptingConnectionsTo(connectionFactory)) {, +			interceptor.preConnect(connectionFactory, request);, +		}, +	@SuppressWarnings({ "rawtypes", "unchecked" }), +		for (ConnectInterceptor interceptor : interceptingConnectionsTo(connectionFactory)) {, +			interceptor.postConnect(connection, request);, +		}, +	}, +, +	private List<ConnectInterceptor<?>> interceptingConnectionsTo(ServiceProviderConnectionFactory<?> connectionFactory) {, +		Class<?> serviceType = GenericTypeResolver.resolveTypeArgument(connectionFactory.getClass(), ServiceProviderConnectionFactory.class);, +		List<ConnectInterceptor<?>> typedInterceptors = interceptors.get(serviceType);, +		if (typedInterceptors == null) {, +			typedInterceptors = Collections.emptyList();, +		}, +		return typedInterceptors;, +++ b/spring-social-web/src/main/java/org/springframework/social/web/connect/ConnectInterceptor.java, +import org.springframework.social.connect.ServiceProviderConnectionFactory;, +	void preConnect(ServiceProviderConnectionFactory<S> connectionFactory, WebRequest request);]