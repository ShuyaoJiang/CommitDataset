[+++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +	/**, +	 * Refreshes the access token., +	 */, +	AccessGrant refreshAccessToken(String refreshToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +	/**, +	 * Refreshes the access token., +	 */, +	AccessGrant refreshAccessToken(String refreshToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +	, +	public AccessGrant refreshAccessToken(String refreshToken) {, +		MultiValueMap<String, String> requestParameters = new LinkedMultiValueMap<String, String>();, +		requestParameters.set("client_id", clientId);, +		requestParameters.set("client_secret", clientSecret);, +		requestParameters.set("refresh_token", refreshToken);, +		requestParameters.set("grant_type", "refresh_token");, +		@SuppressWarnings("unchecked"), +		Map<String, ?> result = restTemplate.postForObject(accessTokenUrl, requestParameters, Map.class);, +		return new AccessGrant(valueOf(result.get("access_token")), valueOf(result.get("refresh_token")));, +	}, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +	/**, +	 * Refreshes the access token., +	 */, +	AccessGrant refreshAccessToken(String refreshToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +	, +	public AccessGrant refreshAccessToken(String refreshToken) {, +		MultiValueMap<String, String> requestParameters = new LinkedMultiValueMap<String, String>();, +		requestParameters.set("client_id", clientId);, +		requestParameters.set("client_secret", clientSecret);, +		requestParameters.set("refresh_token", refreshToken);, +		requestParameters.set("grant_type", "refresh_token");, +		@SuppressWarnings("unchecked"), +		Map<String, ?> result = restTemplate.postForObject(accessTokenUrl, requestParameters, Map.class);, +		return new AccessGrant(valueOf(result.get("access_token")), valueOf(result.get("refresh_token")));, +	}, +++ b/spring-social-test/src/test/java/org/springframework/social/connect/oauth2/StubOAuth2Operations.java, +	public AccessGrant refreshAccessToken(String refreshToken) {, +		return new AccessGrant("12345", "23456");, +	}, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +	/**, +	 * Refreshes the access token., +	 */, +	AccessGrant refreshAccessToken(String refreshToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +	, +	public AccessGrant refreshAccessToken(String refreshToken) {, +		MultiValueMap<String, String> requestParameters = new LinkedMultiValueMap<String, String>();, +		requestParameters.set("client_id", clientId);, +		requestParameters.set("client_secret", clientSecret);, +		requestParameters.set("refresh_token", refreshToken);, +		requestParameters.set("grant_type", "refresh_token");, +		@SuppressWarnings("unchecked"), +		Map<String, ?> result = restTemplate.postForObject(accessTokenUrl, requestParameters, Map.class);, +		return new AccessGrant(valueOf(result.get("access_token")), valueOf(result.get("refresh_token")));, +	}, +++ b/spring-social-test/src/test/java/org/springframework/social/connect/oauth2/StubOAuth2Operations.java, +	public AccessGrant refreshAccessToken(String refreshToken) {, +		return new AccessGrant("12345", "23456");, +	}, +++ b/spring-social-test/src/test/java/org/springframework/social/oauth2/OAuth2TemplateTest.java, +import static org.junit.Assert.*;, +import static org.springframework.http.HttpMethod.*;, +import static org.springframework.social.test.client.RequestMatchers.*;, +import static org.springframework.social.test.client.ResponseCreators.*;, +	@Test, +	public void refreshAccessToken_jsonResponse() {, +		MediaType responseContentType = MediaType.APPLICATION_JSON;, +		String responseFile = "refreshToken.json";, +		AccessGrant accessGrant = refreshToken(responseContentType, responseFile);, +		assertEquals("8d0a88a5c4f1ae4937ad864cafa8e857", accessGrant.getAccessToken());, +		assertEquals("6b0411401bf8751e34f57feb29fb8e32", accessGrant.getRefreshToken());, +	}, +, +	private AccessGrant refreshToken(MediaType responseContentType, String responseFile) {, +		HttpHeaders responseHeaders = new HttpHeaders();, +		responseHeaders.setContentType(responseContentType);, +		MockRestServiceServer mockServer = MockRestServiceServer.createServer(oAuth2Template.getRestTemplate());, +		mockServer.expect(requestTo(ACCESS_TOKEN_URL)), +				.andExpect(method(POST)), +				.andExpect(body("client_id=client_id&client_secret=client_secret&refresh_token=r3fr35h_t0k3n&", +								+ "grant_type=refresh_token")), +				.andRespond(withResponse(new ClassPathResource(responseFile, getClass()), responseHeaders));, +		AccessGrant accessGrant = oAuth2Template.refreshAccessToken("r3fr35h_t0k3n");, +		return accessGrant;, +	}, +, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +	/**, +	 * Refreshes the access token., +	 */, +	AccessGrant refreshAccessToken(String refreshToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +	, +	public AccessGrant refreshAccessToken(String refreshToken) {, +		MultiValueMap<String, String> requestParameters = new LinkedMultiValueMap<String, String>();]