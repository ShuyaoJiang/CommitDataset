[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnection.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnection.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionFactory.java, +	public ServiceProviderConnectionFactory(String providerId, ServiceProvider<S> serviceProvider, ServiceApiAdapter<S> serviceApiAdapter) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnection.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionFactory.java, +	public ServiceProviderConnectionFactory(String providerId, ServiceProvider<S> serviceProvider, ServiceApiAdapter<S> serviceApiAdapter) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRecord.java, +	public ServiceProviderConnectionRecord(String providerId, String providerUserId, String profileName, String profileUrl, String profilePictureUrl, String accessToken, String secret, String refreshToken, Long expireTime) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnection.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionFactory.java, +	public ServiceProviderConnectionFactory(String providerId, ServiceProvider<S> serviceProvider, ServiceApiAdapter<S> serviceApiAdapter) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRecord.java, +	public ServiceProviderConnectionRecord(String providerId, String providerUserId, String profileName, String profileUrl, String profilePictureUrl, String accessToken, String secret, String refreshToken, Long expireTime) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepository.java, +				connectionRecord.getProfileName(), connectionRecord.getProfileUrl(), connectionRecord.getProfilePictureUrl(),, +					rs.getString("profileName"), rs.getString("profileUrl"), rs.getString("profilePictureUrl"),, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnection.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionFactory.java, +	public ServiceProviderConnectionFactory(String providerId, ServiceProvider<S> serviceProvider, ServiceApiAdapter<S> serviceApiAdapter) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRecord.java, +	public ServiceProviderConnectionRecord(String providerId, String providerUserId, String profileName, String profileUrl, String profilePictureUrl, String accessToken, String secret, String refreshToken, Long expireTime) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepository.java, +				connectionRecord.getProfileName(), connectionRecord.getProfileUrl(), connectionRecord.getProfilePictureUrl(),, +					rs.getString("profileName"), rs.getString("profileUrl"), rs.getString("profilePictureUrl"),, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepositorySchema.sql, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnection.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionFactory.java, +	public ServiceProviderConnectionFactory(String providerId, ServiceProvider<S> serviceProvider, ServiceApiAdapter<S> serviceApiAdapter) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRecord.java, +	public ServiceProviderConnectionRecord(String providerId, String providerUserId, String profileName, String profileUrl, String profilePictureUrl, String accessToken, String secret, String refreshToken, Long expireTime) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepository.java, +				connectionRecord.getProfileName(), connectionRecord.getProfileUrl(), connectionRecord.getProfilePictureUrl(),, +					rs.getString("profileName"), rs.getString("profileUrl"), rs.getString("profilePictureUrl"),, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepositorySchema.sql, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/AbstractServiceProviderConnection.java, + 	public AbstractServiceProviderConnection(String providerId, String providerUserId, S serviceApi, ServiceApiAdapter<S> serviceApiAdapter) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnection.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionFactory.java, +	public ServiceProviderConnectionFactory(String providerId, ServiceProvider<S> serviceProvider, ServiceApiAdapter<S> serviceApiAdapter) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRecord.java, +	public ServiceProviderConnectionRecord(String providerId, String providerUserId, String profileName, String profileUrl, String profilePictureUrl, String accessToken, String secret, String refreshToken, Long expireTime) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepository.java, +				connectionRecord.getProfileName(), connectionRecord.getProfileUrl(), connectionRecord.getProfilePictureUrl(),, +					rs.getString("profileName"), rs.getString("profileUrl"), rs.getString("profilePictureUrl"),, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepositorySchema.sql, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/AbstractServiceProviderConnection.java, + 	public AbstractServiceProviderConnection(String providerId, String providerUserId, S serviceApi, ServiceApiAdapter<S> serviceApiAdapter) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth1ServiceProviderConnection.java, +			String accessToken, String secret, ServiceApiAdapter<S> serviceApiAdapter) {, +		super(providerId, providerUserId, serviceProvider.getServiceApi(accessToken, secret), serviceApiAdapter);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnection.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionFactory.java, +	public ServiceProviderConnectionFactory(String providerId, ServiceProvider<S> serviceProvider, ServiceApiAdapter<S> serviceApiAdapter) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRecord.java, +	public ServiceProviderConnectionRecord(String providerId, String providerUserId, String profileName, String profileUrl, String profilePictureUrl, String accessToken, String secret, String refreshToken, Long expireTime) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepository.java, +				connectionRecord.getProfileName(), connectionRecord.getProfileUrl(), connectionRecord.getProfilePictureUrl(),, +					rs.getString("profileName"), rs.getString("profileUrl"), rs.getString("profilePictureUrl"),, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepositorySchema.sql, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/AbstractServiceProviderConnection.java, + 	public AbstractServiceProviderConnection(String providerId, String providerUserId, S serviceApi, ServiceApiAdapter<S> serviceApiAdapter) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth1ServiceProviderConnection.java, +			String accessToken, String secret, ServiceApiAdapter<S> serviceApiAdapter) {, +		super(providerId, providerUserId, serviceProvider.getServiceApi(accessToken, secret), serviceApiAdapter);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth1ServiceProviderConnectionFactory.java, +			ServiceApiAdapter<S> serviceApiAdapter) {, +		super(providerId, serviceProvider, serviceApiAdapter);, +				accessToken.getValue(), accessToken.getSecret(), getServiceApiAdapter());		, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnection.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionFactory.java, +	public ServiceProviderConnectionFactory(String providerId, ServiceProvider<S> serviceProvider, ServiceApiAdapter<S> serviceApiAdapter) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRecord.java, +	public ServiceProviderConnectionRecord(String providerId, String providerUserId, String profileName, String profileUrl, String profilePictureUrl, String accessToken, String secret, String refreshToken, Long expireTime) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepository.java, +				connectionRecord.getProfileName(), connectionRecord.getProfileUrl(), connectionRecord.getProfilePictureUrl(),, +					rs.getString("profileName"), rs.getString("profileUrl"), rs.getString("profilePictureUrl"),, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepositorySchema.sql, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/AbstractServiceProviderConnection.java, + 	public AbstractServiceProviderConnection(String providerId, String providerUserId, S serviceApi, ServiceApiAdapter<S> serviceApiAdapter) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth1ServiceProviderConnection.java, +			String accessToken, String secret, ServiceApiAdapter<S> serviceApiAdapter) {, +		super(providerId, providerUserId, serviceProvider.getServiceApi(accessToken, secret), serviceApiAdapter);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth1ServiceProviderConnectionFactory.java, +			ServiceApiAdapter<S> serviceApiAdapter) {, +		super(providerId, serviceProvider, serviceApiAdapter);, +				accessToken.getValue(), accessToken.getSecret(), getServiceApiAdapter());		, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth2ServiceProviderConnection.java, +			String accessToken, String refreshToken, Long expiresTime, ServiceApiAdapter<S> serviceApiAdapter) {, +		super(providerId, providerUserId, serviceProvider.getServiceApi(accessToken), serviceApiAdapter);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnection.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionFactory.java, +	public ServiceProviderConnectionFactory(String providerId, ServiceProvider<S> serviceProvider, ServiceApiAdapter<S> serviceApiAdapter) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRecord.java, +	public ServiceProviderConnectionRecord(String providerId, String providerUserId, String profileName, String profileUrl, String profilePictureUrl, String accessToken, String secret, String refreshToken, Long expireTime) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepository.java, +				connectionRecord.getProfileName(), connectionRecord.getProfileUrl(), connectionRecord.getProfilePictureUrl(),, +					rs.getString("profileName"), rs.getString("profileUrl"), rs.getString("profilePictureUrl"),, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepositorySchema.sql, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/AbstractServiceProviderConnection.java]