[+++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +		return requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +		return requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +		return requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +		return requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/TimelineTemplate.java, +		return lowLevelApi.fetchObject("statuses/" + tweetId + "/retweeted_by/ids.json", List.class);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +		return requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +		return requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/TimelineTemplate.java, +		return lowLevelApi.fetchObject("statuses/" + tweetId + "/retweeted_by/ids.json", List.class);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/TwitterTemplate.java, +import org.codehaus.jackson.Version;, +import org.codehaus.jackson.map.ObjectMapper;, +import org.codehaus.jackson.map.module.SimpleModule;, +import org.springframework.http.converter.HttpMessageConverter;, +import org.springframework.http.converter.json.MappingJacksonHttpMessageConverter;, +import org.springframework.social.twitter.support.NumbersAsLongDeserializer;, +		registerNumbersAsLongDeserializer(restTemplate);, +, +	private void registerNumbersAsLongDeserializer(RestTemplate restTemplate) {, +		List<HttpMessageConverter<?>> converters = restTemplate.getMessageConverters();, +		for (HttpMessageConverter<?> converter : converters) {, +			if(converter instanceof MappingJacksonHttpMessageConverter) {, +				MappingJacksonHttpMessageConverter jsonConverter = (MappingJacksonHttpMessageConverter) converter;, +				ObjectMapper objectMapper = new ObjectMapper();				, +				SimpleModule module = new SimpleModule("NumbersModule", new Version(1, 0, 0, null)).addDeserializer(Object.class, new NumbersAsLongDeserializer());, +				objectMapper.registerModule(module);, +				jsonConverter.setObjectMapper(objectMapper);, +			}, +		}, +	}, +	, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +		return requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +		return requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/TimelineTemplate.java, +		return lowLevelApi.fetchObject("statuses/" + tweetId + "/retweeted_by/ids.json", List.class);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/TwitterTemplate.java, +import org.codehaus.jackson.Version;, +import org.codehaus.jackson.map.ObjectMapper;, +import org.codehaus.jackson.map.module.SimpleModule;, +import org.springframework.http.converter.HttpMessageConverter;, +import org.springframework.http.converter.json.MappingJacksonHttpMessageConverter;, +import org.springframework.social.twitter.support.NumbersAsLongDeserializer;, +		registerNumbersAsLongDeserializer(restTemplate);, +, +	private void registerNumbersAsLongDeserializer(RestTemplate restTemplate) {, +		List<HttpMessageConverter<?>> converters = restTemplate.getMessageConverters();, +		for (HttpMessageConverter<?> converter : converters) {, +			if(converter instanceof MappingJacksonHttpMessageConverter) {, +				MappingJacksonHttpMessageConverter jsonConverter = (MappingJacksonHttpMessageConverter) converter;, +				ObjectMapper objectMapper = new ObjectMapper();				, +				SimpleModule module = new SimpleModule("NumbersModule", new Version(1, 0, 0, null)).addDeserializer(Object.class, new NumbersAsLongDeserializer());, +				objectMapper.registerModule(module);, +				jsonConverter.setObjectMapper(objectMapper);, +			}, +		}, +	}, +	, +++ /dev/null, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +		return requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +		return requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/TimelineTemplate.java, +		return lowLevelApi.fetchObject("statuses/" + tweetId + "/retweeted_by/ids.json", List.class);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/TwitterTemplate.java, +import org.codehaus.jackson.Version;, +import org.codehaus.jackson.map.ObjectMapper;, +import org.codehaus.jackson.map.module.SimpleModule;, +import org.springframework.http.converter.HttpMessageConverter;, +import org.springframework.http.converter.json.MappingJacksonHttpMessageConverter;, +import org.springframework.social.twitter.support.NumbersAsLongDeserializer;, +		registerNumbersAsLongDeserializer(restTemplate);, +, +	private void registerNumbersAsLongDeserializer(RestTemplate restTemplate) {, +		List<HttpMessageConverter<?>> converters = restTemplate.getMessageConverters();, +		for (HttpMessageConverter<?> converter : converters) {, +			if(converter instanceof MappingJacksonHttpMessageConverter) {, +				MappingJacksonHttpMessageConverter jsonConverter = (MappingJacksonHttpMessageConverter) converter;, +				ObjectMapper objectMapper = new ObjectMapper();				, +				SimpleModule module = new SimpleModule("NumbersModule", new Version(1, 0, 0, null)).addDeserializer(Object.class, new NumbersAsLongDeserializer());, +				objectMapper.registerModule(module);, +				jsonConverter.setObjectMapper(objectMapper);, +			}, +		}, +	}, +	]