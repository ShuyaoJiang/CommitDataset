[+++ b/spring-social-core/src/test/java/org/springframework/web/client/test/RequestMatchers.java, +				AssertionErrors.assertTrue("Expected header in request: " + header, actual != null);, +++ b/spring-social-core/src/test/java/org/springframework/web/client/test/RequestMatchers.java, +				AssertionErrors.assertTrue("Expected header in request: " + header, actual != null);, +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/FacebookTemplateTest.java, +				.andExpect(header("Authorization", "OAuth someAccessToken")), +				.andExpect(header("Authorization", "OAuth someAccessToken")), +				.andExpect(header("Authorization", "OAuth someAccessToken")), +	public void getProfileUrl() {, +		mockServer.expect(requestTo("https://graph.facebook.com/me")).andExpect(method(GET)), +				.andExpect(header("Authorization", "OAuth someAccessToken")), +				.andRespond(withResponse(new ClassPathResource("me.json", getClass()), responseHeaders));, +, +		assertEquals("http://www.facebook.com/profile.php?id=123456789", facebook.getProfileUrl());, +	}, +, +	@Test, +	public void getProfilePictureUrl() {, +		mockServer.expect(requestTo("https://graph.facebook.com/me")).andExpect(method(GET)), +				.andExpect(header("Authorization", "OAuth someAccessToken")), +				.andRespond(withResponse(new ClassPathResource("me.json", getClass()), responseHeaders));, +, +		assertEquals("https://graph.facebook.com/123456789/picture", facebook.getProfilePictureUrl());, +		assertEquals("https://graph.facebook.com/habuma/picture", facebook.getProfilePictureUrl("habuma"));, +	}, +, +	@Test, +				.andExpect(header("Authorization", "OAuth someAccessToken")), +				.andExpect(header("Authorization", "OAuth someAccessToken")), +++ b/spring-social-core/src/test/java/org/springframework/web/client/test/RequestMatchers.java, +				AssertionErrors.assertTrue("Expected header in request: " + header, actual != null);, +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/FacebookTemplateTest.java, +				.andExpect(header("Authorization", "OAuth someAccessToken")), +				.andExpect(header("Authorization", "OAuth someAccessToken")), +				.andExpect(header("Authorization", "OAuth someAccessToken")), +	public void getProfileUrl() {, +		mockServer.expect(requestTo("https://graph.facebook.com/me")).andExpect(method(GET)), +				.andExpect(header("Authorization", "OAuth someAccessToken")), +				.andRespond(withResponse(new ClassPathResource("me.json", getClass()), responseHeaders));, +, +		assertEquals("http://www.facebook.com/profile.php?id=123456789", facebook.getProfileUrl());, +	}, +, +	@Test, +	public void getProfilePictureUrl() {, +		mockServer.expect(requestTo("https://graph.facebook.com/me")).andExpect(method(GET)), +				.andExpect(header("Authorization", "OAuth someAccessToken")), +				.andRespond(withResponse(new ClassPathResource("me.json", getClass()), responseHeaders));, +, +		assertEquals("https://graph.facebook.com/123456789/picture", facebook.getProfilePictureUrl());, +		assertEquals("https://graph.facebook.com/habuma/picture", facebook.getProfilePictureUrl("habuma"));, +	}, +, +	@Test, +				.andExpect(header("Authorization", "OAuth someAccessToken")), +				.andExpect(header("Authorization", "OAuth someAccessToken")), +++ b/spring-social-github/src/test/java/org/springframework/social/github/GitHubTemplateTest.java, +				.andExpect(header("Authorization", "Token token=\"ACCESS_TOKEN\"")), +				.andExpect(header("Authorization", "Token token=\"ACCESS_TOKEN\"")), +				.andExpect(header("Authorization", "Token token=\"ACCESS_TOKEN\"")), +++ b/spring-social-core/src/test/java/org/springframework/web/client/test/RequestMatchers.java, +				AssertionErrors.assertTrue("Expected header in request: " + header, actual != null);, +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/FacebookTemplateTest.java, +				.andExpect(header("Authorization", "OAuth someAccessToken")), +				.andExpect(header("Authorization", "OAuth someAccessToken")), +				.andExpect(header("Authorization", "OAuth someAccessToken")), +	public void getProfileUrl() {, +		mockServer.expect(requestTo("https://graph.facebook.com/me")).andExpect(method(GET)), +				.andExpect(header("Authorization", "OAuth someAccessToken")), +				.andRespond(withResponse(new ClassPathResource("me.json", getClass()), responseHeaders));, +, +		assertEquals("http://www.facebook.com/profile.php?id=123456789", facebook.getProfileUrl());, +	}, +, +	@Test, +	public void getProfilePictureUrl() {, +		mockServer.expect(requestTo("https://graph.facebook.com/me")).andExpect(method(GET)), +				.andExpect(header("Authorization", "OAuth someAccessToken")), +				.andRespond(withResponse(new ClassPathResource("me.json", getClass()), responseHeaders));, +, +		assertEquals("https://graph.facebook.com/123456789/picture", facebook.getProfilePictureUrl());, +		assertEquals("https://graph.facebook.com/habuma/picture", facebook.getProfilePictureUrl("habuma"));, +	}, +, +	@Test, +				.andExpect(header("Authorization", "OAuth someAccessToken")), +				.andExpect(header("Authorization", "OAuth someAccessToken")), +++ b/spring-social-github/src/test/java/org/springframework/social/github/GitHubTemplateTest.java, +				.andExpect(header("Authorization", "Token token=\"ACCESS_TOKEN\"")), +				.andExpect(header("Authorization", "Token token=\"ACCESS_TOKEN\"")), +				.andExpect(header("Authorization", "Token token=\"ACCESS_TOKEN\"")), +++ b/spring-social-gowalla/src/test/java/org/springframework/social/gowalla/GowallaTemplateTest.java, +				.andExpect(header("Authorization", "Token token=\"ACCESS_TOKEN\"")), +				.andRespond(withResponse("{\"username\":\"habuma\",\"pins_count\":17,\"stamps_count\":2}", responseHeaders));, +				.andExpect(header("Authorization", "Token token=\"ACCESS_TOKEN\"")), +				.andExpect(header("Authorization", "Token token=\"ACCESS_TOKEN\"")), +++ b/spring-social-core/src/test/java/org/springframework/web/client/test/RequestMatchers.java, +				AssertionErrors.assertTrue("Expected header in request: " + header, actual != null);, +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/FacebookTemplateTest.java, +				.andExpect(header("Authorization", "OAuth someAccessToken"))]