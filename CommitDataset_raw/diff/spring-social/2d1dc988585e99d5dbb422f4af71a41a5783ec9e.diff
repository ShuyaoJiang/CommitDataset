[+++ b/samples/facebook-showcase-2/README, +Facebook Showcase, +=================, +with Facebook. This particular showcase example leverages Facebook's XFBML and JavaScript APIs to establish, +connections between the application user and their Facebook profile. (Another Facebook showcase sample,, +facebook-showcase-2, demonstrates how to use Spring Social to establish connections following OAuth 2's, +web server flow)., + - Connecting to Facebook via Facebook's <fb:login-button> tag., + - Using Spring Social's @FacebookAccessToken and @FacebookUserId annotations to extract a user's access token, +   and user ID from the cookie that is written after authorization., +++ b/samples/facebook-showcase-2/README, +Facebook Showcase, +=================, +with Facebook. This particular showcase example leverages Facebook's XFBML and JavaScript APIs to establish, +connections between the application user and their Facebook profile. (Another Facebook showcase sample,, +facebook-showcase-2, demonstrates how to use Spring Social to establish connections following OAuth 2's, +web server flow)., + - Connecting to Facebook via Facebook's <fb:login-button> tag., + - Using Spring Social's @FacebookAccessToken and @FacebookUserId annotations to extract a user's access token, +   and user ID from the cookie that is written after authorization., +++ b/samples/facebook-showcase-2/pom.xml, +	        <groupId>org.scribe</groupId>, +	        <artifactId>scribe</artifactId>, +	        <version>1.0.7</version>, +++ b/samples/facebook-showcase-2/README, +Facebook Showcase, +=================, +with Facebook. This particular showcase example leverages Facebook's XFBML and JavaScript APIs to establish, +connections between the application user and their Facebook profile. (Another Facebook showcase sample,, +facebook-showcase-2, demonstrates how to use Spring Social to establish connections following OAuth 2's, +web server flow)., + - Connecting to Facebook via Facebook's <fb:login-button> tag., + - Using Spring Social's @FacebookAccessToken and @FacebookUserId annotations to extract a user's access token, +   and user ID from the cookie that is written after authorization., +++ b/samples/facebook-showcase-2/pom.xml, +	        <groupId>org.scribe</groupId>, +	        <artifactId>scribe</artifactId>, +	        <version>1.0.7</version>, +++ b/samples/facebook-showcase-2/src/main/java/org/springframework/social/samples/facebook/AnnotationMethodHandlerAdapterPostProcessor.java, +/*, + * Copyright 2010 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.samples.facebook;, +, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.annotation.Value;, +import org.springframework.beans.factory.config.BeanPostProcessor;, +import org.springframework.social.facebook.FacebookWebArgumentResolver;, +import org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter;, +, +public class AnnotationMethodHandlerAdapterPostProcessor implements BeanPostProcessor {, +, +	public Object postProcessBeforeInitialization(Object bean, String name), +			throws BeansException {, +		return bean;, +	}, +, +	public Object postProcessAfterInitialization(Object bean, String name) throws BeansException {, +		if (bean instanceof AnnotationMethodHandlerAdapter) {, +			AnnotationMethodHandlerAdapter controllerInvoker = (AnnotationMethodHandlerAdapter) bean;, +			controllerInvoker.setCustomArgumentResolver(new FacebookWebArgumentResolver(facebookApiKey));, +		}, +		return bean;, +	}, +, +	/**, +	 * Needed by {@link FacebookWebArgumentResolver} to resolve Facebook cookies, +	 * such as the user's Facebook ID and Facebook access token., +	 */, +	@Value("#{facebookProvider.apiKey}"), +	private String facebookApiKey;, +	, +}, +++ b/samples/facebook-showcase-2/README, +Facebook Showcase, +=================, +with Facebook. This particular showcase example leverages Facebook's XFBML and JavaScript APIs to establish, +connections between the application user and their Facebook profile. (Another Facebook showcase sample,, +facebook-showcase-2, demonstrates how to use Spring Social to establish connections following OAuth 2's, +web server flow)., + - Connecting to Facebook via Facebook's <fb:login-button> tag., + - Using Spring Social's @FacebookAccessToken and @FacebookUserId annotations to extract a user's access token, +   and user ID from the cookie that is written after authorization., +++ b/samples/facebook-showcase-2/pom.xml, +	        <groupId>org.scribe</groupId>, +	        <artifactId>scribe</artifactId>, +	        <version>1.0.7</version>, +++ b/samples/facebook-showcase-2/src/main/java/org/springframework/social/samples/facebook/AnnotationMethodHandlerAdapterPostProcessor.java]