[+++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +		return (String) getLowLevelTwitterApi().publish("friendships/create.json", EMPTY_DATA, Map.class, Collections.singletonMap("user_id", String.valueOf(userId))).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/create.json", EMPTY_DATA, Map.class, Collections.singletonMap("screen_name", screenName)).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/destroy.json", EMPTY_DATA, Map.class, Collections.singletonMap("user_id", String.valueOf(userId))).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/destroy.json", EMPTY_DATA, Map.class, Collections.singletonMap("screen_name", screenName)).get("screen_name");, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +		return (String) getLowLevelTwitterApi().publish("friendships/create.json", EMPTY_DATA, Map.class, Collections.singletonMap("user_id", String.valueOf(userId))).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/create.json", EMPTY_DATA, Map.class, Collections.singletonMap("screen_name", screenName)).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/destroy.json", EMPTY_DATA, Map.class, Collections.singletonMap("user_id", String.valueOf(userId))).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/destroy.json", EMPTY_DATA, Map.class, Collections.singletonMap("screen_name", screenName)).get("screen_name");, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/ListTemplate.java, +import org.springframework.social.twitter.support.json.TweetList;, +		return getLowLevelTwitterApi().fetchObject("{userId}/lists/{listId}/statuses.json", TweetList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("{screenName}/lists/{screenName}/statuses.json", TweetList.class).getList();, +			getLowLevelTwitterApi().fetchObject(path, String.class);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +		return (String) getLowLevelTwitterApi().publish("friendships/create.json", EMPTY_DATA, Map.class, Collections.singletonMap("user_id", String.valueOf(userId))).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/create.json", EMPTY_DATA, Map.class, Collections.singletonMap("screen_name", screenName)).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/destroy.json", EMPTY_DATA, Map.class, Collections.singletonMap("user_id", String.valueOf(userId))).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/destroy.json", EMPTY_DATA, Map.class, Collections.singletonMap("screen_name", screenName)).get("screen_name");, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/ListTemplate.java, +import org.springframework.social.twitter.support.json.TweetList;, +		return getLowLevelTwitterApi().fetchObject("{userId}/lists/{listId}/statuses.json", TweetList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("{screenName}/lists/{screenName}/statuses.json", TweetList.class).getList();, +			getLowLevelTwitterApi().fetchObject(path, String.class);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/LowLevelTwitterApi.java, +	 * @param type the Java type to return., +	 * @param type the Java type to return., +	<T> T publish(String path, MultiValueMap<String, Object> data, Class<T> type, Map<String, String> queryParams);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +		return (String) getLowLevelTwitterApi().publish("friendships/create.json", EMPTY_DATA, Map.class, Collections.singletonMap("user_id", String.valueOf(userId))).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/create.json", EMPTY_DATA, Map.class, Collections.singletonMap("screen_name", screenName)).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/destroy.json", EMPTY_DATA, Map.class, Collections.singletonMap("user_id", String.valueOf(userId))).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/destroy.json", EMPTY_DATA, Map.class, Collections.singletonMap("screen_name", screenName)).get("screen_name");, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/ListTemplate.java, +import org.springframework.social.twitter.support.json.TweetList;, +		return getLowLevelTwitterApi().fetchObject("{userId}/lists/{listId}/statuses.json", TweetList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("{screenName}/lists/{screenName}/statuses.json", TweetList.class).getList();, +			getLowLevelTwitterApi().fetchObject(path, String.class);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/LowLevelTwitterApi.java, +	 * @param type the Java type to return., +	 * @param type the Java type to return., +	<T> T publish(String path, MultiValueMap<String, Object> data, Class<T> type, Map<String, String> queryParams);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/SearchTemplate.java, +import org.springframework.social.twitter.support.json.DailyTrendsList;, +import org.springframework.social.twitter.support.json.WeeklyTrendsList;, +		return getLowLevelTwitterApi().fetchObject(path, DailyTrendsList.class).getList().get(0);, +		return getLowLevelTwitterApi().fetchObject(path, DailyTrendsList.class).getList();, +		return getLowLevelTwitterApi().fetchObject(path, WeeklyTrendsList.class).getList();, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +		return (String) getLowLevelTwitterApi().publish("friendships/create.json", EMPTY_DATA, Map.class, Collections.singletonMap("user_id", String.valueOf(userId))).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/create.json", EMPTY_DATA, Map.class, Collections.singletonMap("screen_name", screenName)).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/destroy.json", EMPTY_DATA, Map.class, Collections.singletonMap("user_id", String.valueOf(userId))).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/destroy.json", EMPTY_DATA, Map.class, Collections.singletonMap("screen_name", screenName)).get("screen_name");, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/ListTemplate.java, +import org.springframework.social.twitter.support.json.TweetList;, +		return getLowLevelTwitterApi().fetchObject("{userId}/lists/{listId}/statuses.json", TweetList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("{screenName}/lists/{screenName}/statuses.json", TweetList.class).getList();, +			getLowLevelTwitterApi().fetchObject(path, String.class);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/LowLevelTwitterApi.java, +	 * @param type the Java type to return., +	 * @param type the Java type to return., +	<T> T publish(String path, MultiValueMap<String, Object> data, Class<T> type, Map<String, String> queryParams);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/SearchTemplate.java, +import org.springframework.social.twitter.support.json.DailyTrendsList;, +import org.springframework.social.twitter.support.json.WeeklyTrendsList;, +		return getLowLevelTwitterApi().fetchObject(path, DailyTrendsList.class).getList().get(0);, +		return getLowLevelTwitterApi().fetchObject(path, DailyTrendsList.class).getList();, +		return getLowLevelTwitterApi().fetchObject(path, WeeklyTrendsList.class).getList();, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/TimelineTemplate.java, +import org.springframework.social.twitter.support.json.TweetList;, +		return getLowLevelTwitterApi().fetchObject("statuses/public_timeline.json", TweetList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/home_timeline.json", TweetList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/friends_timeline.json", TweetList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/user_timeline.json", TweetList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/user_timeline.json", TweetList.class, Collections.singletonMap("screen_name", screenName)).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/user_timeline.json", TweetList.class, Collections.singletonMap("user_id", String.valueOf(userId))).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/mentions.json", TweetList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/retweeted_by_me.json", TweetList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/retweeted_to_me.json", TweetList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/retweets_of_me.json", TweetList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("statuses/show/" + tweetId + ".json", Tweet.class);, +		return getLowLevelTwitterApi().fetchObject("statuses/retweets/" + tweetId + ".json", TweetList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("favorites.json", TweetList.class).getList();, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +		return (String) getLowLevelTwitterApi().publish("friendships/create.json", EMPTY_DATA, Map.class, Collections.singletonMap("user_id", String.valueOf(userId))).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/create.json", EMPTY_DATA, Map.class, Collections.singletonMap("screen_name", screenName)).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/destroy.json", EMPTY_DATA, Map.class, Collections.singletonMap("user_id", String.valueOf(userId))).get("screen_name");, +		return (String) getLowLevelTwitterApi().publish("friendships/destroy.json", EMPTY_DATA, Map.class, Collections.singletonMap("screen_name", screenName)).get("screen_name");, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/ListTemplate.java, +import org.springframework.social.twitter.support.json.TweetList;, +		return getLowLevelTwitterApi().fetchObject("{userId}/lists/{listId}/statuses.json", TweetList.class).getList();, +		return getLowLevelTwitterApi().fetchObject("{screenName}/lists/{screenName}/statuses.json", TweetList.class).getList();, +			getLowLevelTwitterApi().fetchObject(path, String.class);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/LowLevelTwitterApi.java, +	 * @param type the Java type to return., +	 * @param type the Java type to return., +	<T> T publish(String path, MultiValueMap<String, Object> data, Class<T> type, Map<String, String> queryParams);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/SearchTemplate.java, +import org.springframework.social.twitter.support.json.DailyTrendsList;]