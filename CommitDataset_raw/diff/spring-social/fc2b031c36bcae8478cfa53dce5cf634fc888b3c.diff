[+++ b/src/test/java/org/springframework/social/account/EmailUtilsTest.java, +package org.springframework.social.account;, +, +import static org.junit.Assert.*;, +, +import org.junit.Test;, +, +public class EmailUtilsTest {, +  @Test, +  public void shouldRecognizeAnEmail() {, +      assertTrue(EmailUtils.isEmail("test@test.com"));, +  }, +  , +  @Test, +  public void shouldRecognizeANonEmail() {, +      assertFalse(EmailUtils.isEmail("chuck"));, +      assertFalse(EmailUtils.isEmail("@"));, +      assertFalse(EmailUtils.isEmail("a@b.c"));, +      assertFalse(EmailUtils.isEmail("a@b.chuck"));, +      assertFalse(EmailUtils.isEmail("a@b.cd1"));, +  }, +}, +++ b/src/test/java/org/springframework/social/account/EmailUtilsTest.java, +package org.springframework.social.account;, +, +import static org.junit.Assert.*;, +, +import org.junit.Test;, +, +public class EmailUtilsTest {, +  @Test, +  public void shouldRecognizeAnEmail() {, +      assertTrue(EmailUtils.isEmail("test@test.com"));, +  }, +  , +  @Test, +  public void shouldRecognizeANonEmail() {, +      assertFalse(EmailUtils.isEmail("chuck"));, +      assertFalse(EmailUtils.isEmail("@"));, +      assertFalse(EmailUtils.isEmail("a@b.c"));, +      assertFalse(EmailUtils.isEmail("a@b.chuck"));, +      assertFalse(EmailUtils.isEmail("a@b.cd1"));, +  }, +}, +++ b/src/test/java/org/springframework/social/account/StandardPasswordEncoderTest.java, +package org.springframework.social.account;, +, +import static org.junit.Assert.*;, +, +import org.junit.Test;, +import org.springframework.social.account.StandardPasswordEncoder;, +, +public class StandardPasswordEncoderTest {, +, +	StandardPasswordEncoder passwordEncoder = new StandardPasswordEncoder("SHA-256", "secret");, +, +	@Test, +	public void encodePassword() {, +		String encodedPassword = passwordEncoder.encode("melbourne");, +		System.out.println(encodedPassword);, +		encodedPassword = passwordEncoder.encode("plano");, +		System.out.println(encodedPassword);, +		encodedPassword = passwordEncoder.encode("atlanta");, +		System.out.println(encodedPassword);, +		encodedPassword = passwordEncoder.encode("churchkeys");, +		System.out.println(encodedPassword);, +		encodedPassword = passwordEncoder.encode("boston");, +		System.out.println(encodedPassword);, +		encodedPassword = passwordEncoder.encode("melbourne");, +		System.out.println(encodedPassword);, +		assertTrue(passwordEncoder.matches("melbourne", encodedPassword));, +	}, +	, +	, +}]