[+++ b/src/main/java/org/springframework/social/oauth/OAuth1ClientRequestAuthorizer.java, +public class OAuth1ClientRequestAuthorizer implements OAuthClientRequestAuthorizer {, +, +	private final OAuth1Template oauthTemplate;, +, +	public OAuth1ClientRequestAuthorizer(OAuth1Template oauthTemplate) {, +		this.oauthTemplate = oauthTemplate;, +	}, +					oauthTemplate.buildAuthorizationHeader(request.getMethod(), request.getURI().toURL(), params));, +++ b/src/main/java/org/springframework/social/oauth/OAuth1ClientRequestAuthorizer.java, +public class OAuth1ClientRequestAuthorizer implements OAuthClientRequestAuthorizer {, +, +	private final OAuth1Template oauthTemplate;, +, +	public OAuth1ClientRequestAuthorizer(OAuth1Template oauthTemplate) {, +		this.oauthTemplate = oauthTemplate;, +	}, +					oauthTemplate.buildAuthorizationHeader(request.getMethod(), request.getURI().toURL(), params));, +++ b/src/main/java/org/springframework/social/oauth/OAuth1EnabledRestTemplateFactory.java, +package org.springframework.social.oauth;, +, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.FactoryBean;, +import org.springframework.context.ApplicationContext;, +import org.springframework.context.ApplicationContextAware;, +, +public abstract class OAuth1EnabledRestTemplateFactory implements FactoryBean<OAuthEnabledRestTemplate>,, +		ApplicationContextAware {, +, +	protected ApplicationContext applicationContext;, +, +	public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {, +		this.applicationContext = applicationContext;, +	}, +, +	public OAuthEnabledRestTemplate getObject() throws Exception {, +		return new OAuthEnabledRestTemplate(new OAuth1ClientRequestAuthorizer(getOAuth1Template()));, +	}, +, +	public Class<?> getObjectType() {, +		return OAuthEnabledRestTemplate.class;, +	}, +, +	public boolean isSingleton() {, +		return true;, +	}, +, +	protected abstract OAuth1Template getOAuth1Template();, +}, +++ b/src/main/java/org/springframework/social/oauth/OAuth1ClientRequestAuthorizer.java, +public class OAuth1ClientRequestAuthorizer implements OAuthClientRequestAuthorizer {, +, +	private final OAuth1Template oauthTemplate;, +, +	public OAuth1ClientRequestAuthorizer(OAuth1Template oauthTemplate) {, +		this.oauthTemplate = oauthTemplate;, +	}, +					oauthTemplate.buildAuthorizationHeader(request.getMethod(), request.getURI().toURL(), params));, +++ b/src/main/java/org/springframework/social/oauth/OAuth1EnabledRestTemplateFactory.java, +package org.springframework.social.oauth;, +, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.FactoryBean;, +import org.springframework.context.ApplicationContext;, +import org.springframework.context.ApplicationContextAware;, +, +public abstract class OAuth1EnabledRestTemplateFactory implements FactoryBean<OAuthEnabledRestTemplate>,, +		ApplicationContextAware {, +, +	protected ApplicationContext applicationContext;, +, +	public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {, +		this.applicationContext = applicationContext;, +	}, +, +	public OAuthEnabledRestTemplate getObject() throws Exception {, +		return new OAuthEnabledRestTemplate(new OAuth1ClientRequestAuthorizer(getOAuth1Template()));, +	}, +, +	public Class<?> getObjectType() {, +		return OAuthEnabledRestTemplate.class;, +	}, +, +	public boolean isSingleton() {, +		return true;, +	}, +, +	protected abstract OAuth1Template getOAuth1Template();, +}, +++ b/src/main/java/org/springframework/social/oauth/OAuth1Template.java, +package org.springframework.social.oauth;, +, +import java.net.URL;, +import java.util.Map;, +, +import org.springframework.http.HttpMethod;, +, +public interface OAuth1Template {, +	String buildAuthorizationHeader(HttpMethod method, URL url, Map<String, String> parameters);, +}]