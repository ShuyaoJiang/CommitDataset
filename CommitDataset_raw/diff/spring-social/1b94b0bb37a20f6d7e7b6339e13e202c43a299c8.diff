[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth2ServiceProviderConnectionFactory.java, +	 * @param accessToken the access token, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth2ServiceProviderConnectionFactory.java, +	 * @param accessToken the access token, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/EventInvitee.java, +	 * @return, +	 * @return, +	 * @return, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth2ServiceProviderConnectionFactory.java, +	 * @param accessToken the access token, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/EventInvitee.java, +	 * @return, +	 * @return, +	 * @return, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/json/PostMixin.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth2ServiceProviderConnectionFactory.java, +	 * @param accessToken the access token, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/EventInvitee.java, +	 * @return, +	 * @return, +	 * @return, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/json/PostMixin.java, +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/api/testdata/feed.json, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth2ServiceProviderConnectionFactory.java, +	 * @param accessToken the access token, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/EventInvitee.java, +	 * @return, +	 * @return, +	 * @return, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/json/PostMixin.java, +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/api/testdata/feed.json, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/api/TwitterApi.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth2ServiceProviderConnectionFactory.java, +	 * @param accessToken the access token, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/EventInvitee.java, +	 * @return, +	 * @return, +	 * @return, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/json/PostMixin.java, +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/api/testdata/feed.json, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/api/TwitterApi.java, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/signin/web/ProviderSignInUtils.java, +import org.springframework.social.connect.ServiceProviderUserProfile;, +	 * Get the profile of the provider user the client attempted to sign-in with., +	 * This profile data can be used to pre-populate a local application registration/signup form., +	 * Returns null if no provider sign-in was attempted., +	 * @param request the current web request, used to extract sign-in attempt information from the current user session, +	 */, +	public static ServiceProviderUserProfile getUserProfile(WebRequest request) {, +		ProviderSignInAttempt signInAttempt = getProviderSignInAttempt(request);, +		return signInAttempt != null ? signInAttempt.getUserProfile() : null;, +	}, +, +	/**, +	 * Connect the new user to the provider user the client attempted to sign-in with., +	 * Ensures provider sign-in attempt session context is cleaned up., +	 * Does nothing if no provider sign-in was attempted for the current user session (is safe to call in that case)., +		ProviderSignInAttempt signInAttempt = getProviderSignInAttempt(request);, +	// internal helpers, +	, +	private ProviderSignInUtils() {	, +	}, +	, +	private static ProviderSignInAttempt getProviderSignInAttempt(WebRequest request) {, +		return (ProviderSignInAttempt) request.getAttribute(ProviderSignInAttempt.SESSION_ATTRIBUTE, WebRequest.SCOPE_SESSION);, +	}, +	, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth2ServiceProviderConnectionFactory.java, +	 * @param accessToken the access token, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/EventInvitee.java, +	 * @return, +	 * @return, +	 * @return, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/json/PostMixin.java, +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/api/testdata/feed.json, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/api/TwitterApi.java, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/signin/web/ProviderSignInUtils.java, +import org.springframework.social.connect.ServiceProviderUserProfile;, +	 * Get the profile of the provider user the client attempted to sign-in with., +	 * This profile data can be used to pre-populate a local application registration/signup form., +	 * Returns null if no provider sign-in was attempted., +	 * @param request the current web request, used to extract sign-in attempt information from the current user session, +	 */, +	public static ServiceProviderUserProfile getUserProfile(WebRequest request) {, +		ProviderSignInAttempt signInAttempt = getProviderSignInAttempt(request);, +		return signInAttempt != null ? signInAttempt.getUserProfile() : null;, +	}, +, +	/**, +	 * Connect the new user to the provider user the client attempted to sign-in with., +	 * Ensures provider sign-in attempt session context is cleaned up., +	 * Does nothing if no provider sign-in was attempted for the current user session (is safe to call in that case)., +		ProviderSignInAttempt signInAttempt = getProviderSignInAttempt(request);, +	// internal helpers, +	, +	private ProviderSignInUtils() {	, +	}, +	, +	private static ProviderSignInAttempt getProviderSignInAttempt(WebRequest request) {, +		return (ProviderSignInAttempt) request.getAttribute(ProviderSignInAttempt.SESSION_ATTRIBUTE, WebRequest.SCOPE_SESSION);]