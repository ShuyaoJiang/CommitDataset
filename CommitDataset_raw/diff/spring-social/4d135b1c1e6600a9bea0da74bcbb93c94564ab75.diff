[+++ b/docs/src/reference/docbook/facebook.xml, +  <para>Spring Social's <interfacename>FacebookOperations</interfacename> and its implementation, <classname>FacebookTemplate</classname> provider the operations needed to interact with Facebook on behalf of a user.</para>, +  <para>Creating an instance of <classname>FacebookTemplate</classname> is as simple as constructing it by passing in an authorized access token to the constructor:</para>, +  , +  <programlisting><![CDATA[String accessToken = "f8FX29g..."; // access token received from Facebook after OAuth authorization, +FacebookOperations facebook = new FacebookTemplate(accessToken);]]></programlisting>, +, +  <para>Or, if you are using the service provider framework described in <xref linkend="serviceprovider"/>, you can get an instance of <classname>FacebookTemplate</classname> by calling one of the <methodname>getServiceOperations()</methodname> methods on <classname>FacebookServiceOperations</classname>:</para>, +  , +  <programlisting><![CDATA[FacebookOperations facebook = facebookProvider.getServiceOperations(accountId);]]></programlisting>, +, +  <para>Here, <classname>FacebookServiceProvider</classname> is being asked to give back a <interfacename>FacebookOperations</interfacename> created using the connection details for the given account ID. The connection should have been created beforehand via the service provider's <methodname>connect()</methodname> method or using <classname>ConnectController</classname>.</para>  , +, +  <para>With a <interfacename>FacebookOperations</interfacename> in hand, there are several ways you can use it to interact with Facebook on behalf of the user. These will be covered in the following sections.</para>, +, +  <section id="facebook-getProfile">, +    <title>Retrieving a user's profile data</title>, +, +    <para>You can retrieve a user's Facebook profile data using <interfacename>FacebookOperations</interfacename>' <methodname>getUserProfile()</methodname> method:</para>, +    , +    <programlisting><![CDATA[FacebookProfile profile = facebook.getUserProfile();]]></programlisting>, +    , +    <para>The <classname>FacebookProfile</classname> object will contain basic profile information about the authenticating user, including their first and last name, their email address, and their Facebook ID.</para>, +    , +    <para>If all you need is the user's Facebook ID, you can call <methodname>getProfileId()</methodname> instead:</para>, +    , +    <programlisting><![CDATA[String profileId = facebook.getProfileId();]]></programlisting>, +    , +    <para>Or if you want the user's Facebook URL, you can call <methodname>getProfileUrl()</methodname>:</para>, +    , +    <programlisting><![CDATA[String profileUrl = facebook.getProfileUrl();]]></programlisting>, +    , +  <section id="facebook-friends">, +    <title>Getting a user's Facebook friends</title>, +, +    <para>An essential feature of Facebook and other social networks is creating a network of friends or contacts. You can access the user's list of Facebook friends by calling the <methodname>getFriendIds()</methodname> method:</para>, +    , +    <programlisting><![CDATA[List<String> friendIds = facebook.getFriendIds();]]></programlisting>, +    , +    <para>This returns a list of Facebook IDs belonging to the current user's list of friends. This is just a list of <classname>String</classname> IDs, so to retrieve an individual user's profile data, you can turn around and call the <methodname>getUserProfile()</methodname>, passing in one of those IDs to retrieve the profile data for an individual user:</para>, +    , +    <programlisting><![CDATA[FacebookProfile firstFriend = facebook.getUserProfile(friendIds.get(0));]]></programlisting>, +    , +  </section>, +  , +  <section id="facebook-status">, +    <title>Posting to a user's wall</title>, +, +    <para>To post a message to the user's Facebook wall, call the <methodname>updateStatus()</methodname> method, passing in the message to be posted:</para>, +    , +    <programlisting><![CDATA[facebook.updateStatus("I'm trying out Spring Social!");]]></programlisting>, +    , +    <para>If you'd like to attach a link to the status message, you can do so by passing in a <classname>FacebookLink</classname> object along with the message:</para>, +    , +    <programlisting><![CDATA[FacebookLink link = new FacebookLink("http://www.springsource.org/spring-social", , +        "Spring Social", , +        "The Spring Social Project", , +        "Spring Social is an extension to Spring to enable integration with social networks.");, +facebook.updateStatus("I'm trying out Spring Social!", link);]]></programlisting>, +    , +    <para>When constructing the <classname>FacebookLink</classname> object, the first parameter is the link's URL, the second parameter is the name of the link, the third parameter is a caption, and the fourth is a description of the link.</para>, +  </section>, +  , +  <section id="facebook-publishing">, +    <title>Publishing to Facebook</title>, +, +    <para>Facebook's Graph API allows authenticated users to publish data to several of its object types. <interfacename>FacebookOperations</interfacename> enables arbitrary publication via the Graph API with its <methodname>publish()</methodname> method.</para>, +    , +    <para>For example, in the previous section you saw how to post a message to the user's Facebook wall using <methodname>updateStatus()</methodname>. Alternatively you could have accomplished the same thing using <methodname>publish()</methodname> like this:</para>, +    , +    <programlisting><![CDATA[MultiValueMap<String, String> data = new LinkedMultiValueMap<String, String>();, +data.set("message", message);, +publish("me", "feed", data);]]></programlisting>, +, +    <para>The first argument to the <methodname>publish()</methodname> method is the object to publish to--in this case "me" indicates the authenticated user. The second argument is the connection associated with the object--"feed" indicates that it is the user's Facebook wall. Finally, the third argument is a <classname>MultiValueMap</classname> containing data to be published. In this case, it only contains a "message" to be posted to the user's wall.</para> , +, +    <para>You can read more about what graph API objects and connections Facebook supports for publishing at <ulink url="http://developers.facebook.com/docs/api#editing"/></para>, +  </section>, +++ b/docs/src/reference/docbook/facebook.xml, +  <para>Spring Social's <interfacename>FacebookOperations</interfacename> and its implementation, <classname>FacebookTemplate</classname> provider the operations needed to interact with Facebook on behalf of a user.</para>, +  <para>Creating an instance of <classname>FacebookTemplate</classname> is as simple as constructing it by passing in an authorized access token to the constructor:</para>, +  , +  <programlisting><![CDATA[String accessToken = "f8FX29g..."; // access token received from Facebook after OAuth authorization, +FacebookOperations facebook = new FacebookTemplate(accessToken);]]></programlisting>, +, +  <para>Or, if you are using the service provider framework described in <xref linkend="serviceprovider"/>, you can get an instance of <classname>FacebookTemplate</classname> by calling one of the <methodname>getServiceOperations()</methodname> methods on <classname>FacebookServiceOperations</classname>:</para>, +  , +  <programlisting><![CDATA[FacebookOperations facebook = facebookProvider.getServiceOperations(accountId);]]></programlisting>, +, +  <para>Here, <classname>FacebookServiceProvider</classname> is being asked to give back a <interfacename>FacebookOperations</interfacename> created using the connection details for the given account ID. The connection should have been created beforehand via the service provider's <methodname>connect()</methodname> method or using <classname>ConnectController</classname>.</para>  , +, +  <para>With a <interfacename>FacebookOperations</interfacename> in hand, there are several ways you can use it to interact with Facebook on behalf of the user. These will be covered in the following sections.</para>, +, +  <section id="facebook-getProfile">, +    <title>Retrieving a user's profile data</title>, +, +    <para>You can retrieve a user's Facebook profile data using <interfacename>FacebookOperations</interfacename>' <methodname>getUserProfile()</methodname> method:</para>, +    , +    <programlisting><![CDATA[FacebookProfile profile = facebook.getUserProfile();]]></programlisting>, +    ]