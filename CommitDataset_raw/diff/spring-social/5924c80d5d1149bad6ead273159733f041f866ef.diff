[+++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +		MultiValueMap<String, String> requestParameters = new LinkedMultiValueMap<String, String>();, +		requestParameters.set("client_id", clientId);, +		requestParameters.set("client_secret", clientSecret);, +		requestParameters.set("code", authorizationCode);, +		requestParameters.set("redirect_uri", redirectUri);, +		requestParameters.set("grant_type", "authorization_code");, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +		MultiValueMap<String, String> requestParameters = new LinkedMultiValueMap<String, String>();, +		requestParameters.set("client_id", clientId);, +		requestParameters.set("client_secret", clientSecret);, +		requestParameters.set("code", authorizationCode);, +		requestParameters.set("redirect_uri", redirectUri);, +		requestParameters.set("grant_type", "authorization_code");, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/connect/FacebookConnectController.java, +	public FacebookConnectController(ServiceProvider<FacebookOperations> facebookProvider,, +			AccountIdResolver accountIdResolver) {, +	 * Configure the list of interceptors that should receive callbacks during, +	 * the connection process., +			Class<?> providerType = GenericTypeResolver.resolveTypeArgument(interceptor.getClass(),, +					ConnectInterceptor.class);, +	public String connectAccountToFacebook(@FacebookAccessToken(required = false) String accessToken,, +			@FacebookUserId(required = false) String facebookUserId, WebRequest request) {, +			oauth2Provider.connect(accountIdResolver.resolveAccountId(), new AccessGrant(accessToken, null));, +			postConnect(facebookProvider, request);, +, +			// FlashMap.setSuccessMessage("Your Greenhouse account is now connected to your Facebook account!");, +	@SuppressWarnings({ "unchecked", "rawtypes" }), +	@SuppressWarnings({ "unchecked", "rawtypes" }), +	private void postConnect(ServiceProvider<?> provider, WebRequest request) {, +			interceptor.postConnect(provider, request);]