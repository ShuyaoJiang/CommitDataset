[+++ b/spring-social-web/src/test/java/org/springframework/social/connect/web/ConnectSupportTest.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.connect.web;, +, +import static org.junit.Assert.*;, +, +import java.net.URL;, +, +import org.junit.Test;, +import org.springframework.mock.web.MockHttpServletRequest;, +import org.springframework.social.connect.ApiAdapter;, +import org.springframework.social.connect.Connection;, +import org.springframework.social.connect.ConnectionValues;, +import org.springframework.social.connect.UserProfile;, +import org.springframework.social.connect.support.OAuth1ConnectionFactory;, +import org.springframework.social.connect.support.OAuth2Connection;, +import org.springframework.social.connect.support.OAuth2ConnectionFactory;, +import org.springframework.social.oauth1.AuthorizedRequestToken;, +import org.springframework.social.oauth1.OAuth1Operations;, +import org.springframework.social.oauth1.OAuth1Parameters;, +import org.springframework.social.oauth1.OAuth1ServiceProvider;, +import org.springframework.social.oauth1.OAuth1Version;, +import org.springframework.social.oauth1.OAuthToken;, +import org.springframework.social.oauth2.AccessGrant;, +import org.springframework.social.oauth2.GrantType;, +import org.springframework.social.oauth2.OAuth2Operations;, +import org.springframework.social.oauth2.OAuth2Parameters;, +import org.springframework.social.oauth2.OAuth2ServiceProvider;, +import org.springframework.util.MultiValueMap;, +import org.springframework.web.context.request.ServletWebRequest;, +, +public class ConnectSupportTest {, +, +	@Test, +	public void buildOAuthUrl_OAuth10() {, +		ConnectSupport support = new ConnectSupport();, +		MockHttpServletRequest mockRequest = new PortAwareMockHttpServletRequest();, +		mockRequest.setScheme("http");, +		mockRequest.setServerName("somesite.com");, +		mockRequest.setRequestURI("/connect/someprovider");, +		ServletWebRequest request = new ServletWebRequest(mockRequest);, +		String url = support.buildOAuthUrl(new TestOAuth1ConnectionFactory(OAuth1Version.CORE_10), request);, +		assertEquals("https://serviceprovider.com/oauth/authorize?oauth_callback=http://somesite.com/connect/someprovider", url);, +	}, +, +	@Test, +	public void buildOAuthUrl_OAuth10_withApplicationUrl() throws Exception {, +		ConnectSupport support = new ConnectSupport();, +		support.setApplicationUrl(new URL("https://someothersite.com:1234"));, +		MockHttpServletRequest mockRequest = new PortAwareMockHttpServletRequest();, +		mockRequest.setScheme("http");, +		mockRequest.setServerName("somesite.com");, +		mockRequest.setRequestURI("/connect/someprovider");, +		ServletWebRequest request = new ServletWebRequest(mockRequest);, +		String url = support.buildOAuthUrl(new TestOAuth1ConnectionFactory(OAuth1Version.CORE_10), request);, +		assertEquals("https://serviceprovider.com/oauth/authorize?oauth_callback=https://someothersite.com:1234/connect/someprovider", url);, +	}, +, +	@Test, +	public void buildOAuthUrl_OAuth10_useAuthenticateUrl() {, +		ConnectSupport support = new ConnectSupport();, +		support.setUseAuthenticateUrl(true);, +		MockHttpServletRequest mockRequest = new PortAwareMockHttpServletRequest();, +		mockRequest.setScheme("http");, +		mockRequest.setServerName("somesite.com");, +		mockRequest.setRequestURI("/connect/someprovider");, +		ServletWebRequest request = new ServletWebRequest(mockRequest);, +		String url = support.buildOAuthUrl(new TestOAuth1ConnectionFactory(OAuth1Version.CORE_10), request);, +		assertEquals("https://serviceprovider.com/oauth/authenticate?oauth_callback=http://somesite.com/connect/someprovider", url);, +	}, +, +	@Test, +	public void buildOAuthUrl_OAuth10a() {, +		ConnectSupport support = new ConnectSupport();, +		MockHttpServletRequest mockRequest = new PortAwareMockHttpServletRequest();, +		mockRequest.setScheme("http");, +		mockRequest.setServerName("somesite.com");, +		mockRequest.setRequestURI("/connect/someprovider");, +		ServletWebRequest request = new ServletWebRequest(mockRequest);, +		String url = support.buildOAuthUrl(new TestOAuth1ConnectionFactory(OAuth1Version.CORE_10_REVISION_A), request);, +		assertEquals("https://serviceprovider.com/oauth/authorize", url);, +	}, +	, +	@Test, +	public void buildOAuthUrl_OAuth10a_withApplicationUrl() throws Exception {, +		ConnectSupport support = new ConnectSupport();]