[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +		List<Connection<?>> connections = jdbcTemplate.query(selectFromUserConnection() + " where userId = ? and providerId = ? order by rank", connectionMapper, userId, providerId);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +		List<Connection<?>> connections = jdbcTemplate.query(selectFromUserConnection() + " where userId = ? and providerId = ? order by rank", connectionMapper, userId, providerId);, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepositoryTest.java, +	, +	@Test, +	public void findPrimaryConnection_afterRemove() {, +		insertFacebookConnection();, +		insertFacebookConnection2();    , +		// 9 is the providerUserId of the first Facebook connection, +		connectionRepository.removeConnection(new ConnectionKey("facebook", "9"));, +		assertEquals(1, connectionRepository.findConnections(TestFacebookApi.class).size());, +		assertNotNull(connectionRepository.findPrimaryConnection(TestFacebookApi.class));, +	}]