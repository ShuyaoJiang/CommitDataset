[+++ b/spring-social-tripit/src/main/java/org/springframework/social/tripit/TripItProfile.java, +			String profilePath, String profileImageUrl) {, +		this.profileImageUrl = profileImageUrl;, +	/**, +	 * The URL to the user's profile image at TripIt, +	 * , +	 * @return The URL to the user's profile image at TripIt, +	 */, +	public String getProfileImageUrl() {, +		return profileImageUrl;, +	}, +, +	private final String profileImageUrl;, +++ b/spring-social-tripit/src/main/java/org/springframework/social/tripit/TripItProfile.java, +			String profilePath, String profileImageUrl) {, +		this.profileImageUrl = profileImageUrl;, +	/**, +	 * The URL to the user's profile image at TripIt, +	 * , +	 * @return The URL to the user's profile image at TripIt, +	 */, +	public String getProfileImageUrl() {, +		return profileImageUrl;, +	}, +, +	private final String profileImageUrl;, +++ b/spring-social-tripit/src/main/java/org/springframework/social/tripit/TripItTemplate.java, +		String profileImageUrl = String.valueOf(profileMap.get("photo_url"));, +		return new TripItProfile(id, screenName, publicDisplayName, homeCity, company, profilePath, profileImageUrl);, +++ b/spring-social-tripit/src/main/java/org/springframework/social/tripit/TripItProfile.java, +			String profilePath, String profileImageUrl) {, +		this.profileImageUrl = profileImageUrl;, +	/**, +	 * The URL to the user's profile image at TripIt, +	 * , +	 * @return The URL to the user's profile image at TripIt, +	 */, +	public String getProfileImageUrl() {, +		return profileImageUrl;, +	}, +, +	private final String profileImageUrl;, +++ b/spring-social-tripit/src/main/java/org/springframework/social/tripit/TripItTemplate.java, +		String profileImageUrl = String.valueOf(profileMap.get("photo_url"));, +		return new TripItProfile(id, screenName, publicDisplayName, homeCity, company, profilePath, profileImageUrl);, +++ b/spring-social-tripit/src/main/java/org/springframework/social/tripit/connect/TripItServiceApiAdapter.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.tripit.connect;, +, +import org.springframework.social.connect.ServiceProviderUser;, +import org.springframework.social.connect.spi.ServiceApiAdapter;, +import org.springframework.social.tripit.TripItApi;, +import org.springframework.social.tripit.TripItProfile;, +import org.springframework.web.client.HttpClientErrorException;, +, +public class TripItServiceApiAdapter implements ServiceApiAdapter<TripItApi> {, +, +	public boolean test(TripItApi serviceApi) {, +		try {, +			serviceApi.getUserProfile();, +			return true;, +		} catch (HttpClientErrorException e) { , +			// TODO: Have api throw more specific exception and trigger off of that., +			return false;, +		}, +	}, +, +	public ServiceProviderUser getUser(TripItApi serviceApi) {, +		TripItProfile userProfile = serviceApi.getUserProfile();, +		String profileUrl = serviceApi.getProfileUrl();, +		return new ServiceProviderUser(userProfile.getId(), userProfile.getScreenName(), profileUrl, userProfile.getProfileImageUrl());, +	}, +, +	public void updateStatus(TripItApi serviceApi, String message) {, +		// not supported, +	}, +, +}, +++ b/spring-social-tripit/src/main/java/org/springframework/social/tripit/TripItProfile.java, +			String profilePath, String profileImageUrl) {, +		this.profileImageUrl = profileImageUrl;, +	/**, +	 * The URL to the user's profile image at TripIt, +	 * , +	 * @return The URL to the user's profile image at TripIt, +	 */]