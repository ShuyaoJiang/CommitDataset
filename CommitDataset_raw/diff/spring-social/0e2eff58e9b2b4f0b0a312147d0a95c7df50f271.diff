[+++ b/spring-social-twitter/src/test/java/org/springframework/social/twitter/TimelineTemplateTest.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.twitter;, +, +import static org.junit.Assert.*;, +import static org.springframework.http.HttpMethod.*;, +import static org.springframework.http.HttpStatus.*;, +import static org.springframework.social.test.client.RequestMatchers.*;, +import static org.springframework.social.test.client.ResponseCreators.*;, +, +import java.util.List;, +, +import org.junit.Test;, +import org.springframework.core.io.ClassPathResource;, +import org.springframework.http.HttpStatus;, +import org.springframework.social.OperationNotPermittedException;, +import org.springframework.social.twitter.types.StatusDetails;, +import org.springframework.social.twitter.types.Tweet;, +import org.springframework.social.twitter.types.TwitterProfile;, +, +, +/**, + * @author Craig Walls, + */, +public class TimelineTemplateTest extends AbstractTwitterApiTest {, +, +	@Test, +	public void updateStatus() {, +		mockServer.expect(requestTo("https://api.twitter.com/1/statuses/update.json")), +				.andExpect(method(POST)), +				.andExpect(body("status=Test+Message")), +				.andRespond(withResponse("{}", responseHeaders));, +, +		twitter.timelineOperations().updateStatus("Test Message");, +, +		mockServer.verify();, +	}, +, +	@Test, +	public void updateStatus_withLocation() {, +		mockServer.expect(requestTo("https://api.twitter.com/1/statuses/update.json")), +				.andExpect(method(POST)), +				.andExpect(body("status=Test+Message&long=-111.2&lat=123.1")), +				.andRespond(withResponse("{}", responseHeaders));, +, +		StatusDetails details = new StatusDetails();, +		details.setLocation(123.1f, -111.2f);, +		twitter.timelineOperations().updateStatus("Test Message", details);, +, +		mockServer.verify();, +	}, +, +	@Test(expected = DuplicateTweetException.class), +	public void updateStatus_duplicateTweet() {, +		mockServer.expect(requestTo("https://api.twitter.com/1/statuses/update.json")), +				.andExpect(method(POST)), +				.andExpect(body("status=Test+Message")), +				.andRespond(withResponse("{\"error\":\"You already said that\"}", responseHeaders, FORBIDDEN, ""));, +, +		twitter.timelineOperations().updateStatus("Test Message");, +	}, +	, +	@Test(expected=StatusLengthException.class), +	public void updateStatus_tweetTooLong() {, +		mockServer.expect(requestTo("https://api.twitter.com/1/statuses/update.json")), +			.andExpect(method(POST)), +			.andExpect(body("status=Really+long+message")), +			.andRespond(withResponse("{\"error\":\"Status is over 140 characters.\"}", responseHeaders, HttpStatus.FORBIDDEN, ""));, +		twitter.timelineOperations().updateStatus("Really long message");, +	}, +	, +	@Test(expected = OperationNotPermittedException.class), +	public void updateStatus_forbidden() {, +		mockServer.expect(requestTo("https://api.twitter.com/1/statuses/update.json")), +				.andExpect(method(POST)), +				.andExpect(body("status=Test+Message")), +				.andRespond(withResponse("{\"error\":\"Forbidden\"}", responseHeaders, FORBIDDEN, ""));, +, +		twitter.timelineOperations().updateStatus("Test Message");, +	}, +, +	@Test, +	public void deleteStatus() {, +		mockServer.expect(requestTo("https://api.twitter.com/1/statuses/destroy/12345.json")), +			.andExpect(method(DELETE)), +			.andRespond(withResponse("{}", responseHeaders));		]