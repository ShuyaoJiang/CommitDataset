[+++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/SocialConfiguration.java, +import java.util.List;, +, +	private List<SocialConfigurer> socialConfigurers;, +	public void setSocialConfigurers(List<SocialConfigurer> socialConfigurers) {, +		Assert.notNull(socialConfigurers, "At least one configuration class must implement SocialConfigurer (or subclass SocialConfigurerAdapter)");, +		Assert.notEmpty(socialConfigurers, "At least one configuration class must implement SocialConfigurer (or subclass SocialConfigurerAdapter)");, +		this.socialConfigurers = socialConfigurers;, +			for (SocialConfigurer socialConfigurer : socialConfigurers) {, +			}, +			for (SocialConfigurer socialConfigurer : socialConfigurers) {, +			}, +		UserIdSource userIdSource = null;, +		for (SocialConfigurer socialConfigurer : socialConfigurers) {, +			UserIdSource userIdSourceCandidate = socialConfigurer.getUserIdSource();, +			if (userIdSourceCandidate != null) {, +				userIdSource = userIdSourceCandidate;, +				break;, +			}, +		}, +		Assert.notNull(userIdSource, "One configuration class must implement getUserIdSource from SocialConfigurer.");, +		return userIdSource;, +	public UsersConnectionRepository usersConnectionRepository(ConnectionFactoryLocator connectionFactoryLocator) {, +		UsersConnectionRepository usersConnectionRepository = null;, +		for (SocialConfigurer socialConfigurer : socialConfigurers) {, +			UsersConnectionRepository ucrCandidate = socialConfigurer.getUsersConnectionRepository(connectionFactoryLocator);, +			if (ucrCandidate != null) {, +				usersConnectionRepository = ucrCandidate;, +				break;, +			}, +		}, +		Assert.notNull(usersConnectionRepository, "One configuration class must implement getUsersConnectionRepository from SocialConfigurer.");, +		return usersConnectionRepository;, +	public ConnectionRepository connectionRepository(UsersConnectionRepository usersConnectionRepository) {, +		return usersConnectionRepository.createConnectionRepository(userIdSource().getUserId());, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/SocialConfiguration.java, +import java.util.List;, +, +	private List<SocialConfigurer> socialConfigurers;, +	public void setSocialConfigurers(List<SocialConfigurer> socialConfigurers) {, +		Assert.notNull(socialConfigurers, "At least one configuration class must implement SocialConfigurer (or subclass SocialConfigurerAdapter)");, +		Assert.notEmpty(socialConfigurers, "At least one configuration class must implement SocialConfigurer (or subclass SocialConfigurerAdapter)");, +		this.socialConfigurers = socialConfigurers;, +			for (SocialConfigurer socialConfigurer : socialConfigurers) {, +			}, +			for (SocialConfigurer socialConfigurer : socialConfigurers) {, +			}, +		UserIdSource userIdSource = null;, +		for (SocialConfigurer socialConfigurer : socialConfigurers) {, +			UserIdSource userIdSourceCandidate = socialConfigurer.getUserIdSource();, +			if (userIdSourceCandidate != null) {, +				userIdSource = userIdSourceCandidate;, +				break;, +			}, +		}, +		Assert.notNull(userIdSource, "One configuration class must implement getUserIdSource from SocialConfigurer.");, +		return userIdSource;, +	public UsersConnectionRepository usersConnectionRepository(ConnectionFactoryLocator connectionFactoryLocator) {, +		UsersConnectionRepository usersConnectionRepository = null;, +		for (SocialConfigurer socialConfigurer : socialConfigurers) {, +			UsersConnectionRepository ucrCandidate = socialConfigurer.getUsersConnectionRepository(connectionFactoryLocator);, +			if (ucrCandidate != null) {, +				usersConnectionRepository = ucrCandidate;, +				break;, +			}, +		}, +		Assert.notNull(usersConnectionRepository, "One configuration class must implement getUsersConnectionRepository from SocialConfigurer.");, +		return usersConnectionRepository;, +	public ConnectionRepository connectionRepository(UsersConnectionRepository usersConnectionRepository) {, +		return usersConnectionRepository.createConnectionRepository(userIdSource().getUserId());, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/SocialConfigurerAdapter.java, +import org.springframework.core.env.Environment;, +import org.springframework.social.UserIdSource;, + * Abstract implementation of {@link SocialConfigurer} with convenient default implementations of methods., +	 * Default implementation of {@link #addConnectionFactories(ConnectionFactoryConfigurer, Environment)}., +	 * Implemented as a no-op, adding no connection factories., +	 */, +	public void addConnectionFactories(ConnectionFactoryConfigurer connectionFactoryConfigurer, Environment environment) {, +	}, +	, +	/**, +	 * Default implementation of {@link #getUserIdSource()}., +	 * Returns null, indicating that this configuration class doesn't provide a UserIdSource (another configuration class must provide one, however)., +	 * @return null, +	 */, +	public UserIdSource getUserIdSource() {, +		return null;, +	}, +	, +	/**]