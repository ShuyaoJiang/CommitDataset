[+++ b/docs/src/reference/docbook/serviceprovider.xml, +			<para>, +				OAuth 2 is rapidly becoming a preferred authorization protocol, and is used by major service providers such as Facebook, Github, Gowalla, and 37signals., +				In Spring Social, the OAuth2ServiceProvider interface models a service provider based on the OAuth 2 protocol:, +			</para>, +			<para>, +				<methodname>getOAuthOperations()</methodname> returns an API to use to conduct the authorization flow, or "OAuth Dance", with a service provider., +				The result of this flow is an <classname>AccessGrant</classname> that can be used to establish a connection with a local user account by calling <methodname>connect</methodname>., +				The OAuth2Operations interface is shown below:, +			</para>, +				Callers are first expected to call buildAuthorizeUrl(String, String) to construct the URL to redirect the user to for connection authorization., +				Upon user authorization, the authorizationGrant returned by the provider should be exchanged for an AccessGrant., +				The AccessGrant should then used to create a connection., +				This flow is illustrated below:, +				As you can see, there is a back-and-forth conversation that takes place between the application and the service provider to grant the application access to the provider account., +				<listitem>, +					<para>, +						The flow starts by the application redirecting the user to the provider's authorization URL., +						Here the provider displays a web page asking the user if he or she wishes to grant the application access to read and update their data., +					</para>, +				</listitem>, +				<listitem>, +					<para>, +						The user agrees to grant the application access., +					</para>, +				</listitem>, +				<listitem>, +					<para>, +						The service provider redirects the user back to the application (via the redirect URI), passing an authorization code as a parameter., +					</para>, +				</listitem>, +				<listitem>, +					<para>, +						The application exchanges the authorization code for an access token., +					</para>, +				</listitem>, +				<listitem>, +					<para>, +						The service provider issues an access grant to the application., +						The grant includes an access token and a refresh token., +						One receipt of these tokens, the "OAuth dance" is complete., +					</para>, +				</listitem>, +				<listitem>, +					<para>, +						The application uses the AccessGrant to save a connection between the local user account and the external provider account., +						With the connection established, the application can get a reference to the Service API to invoke the provider on behalf of the user., +					</para>, +				</listitem>]