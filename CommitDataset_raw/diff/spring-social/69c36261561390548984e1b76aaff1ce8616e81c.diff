[+++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/web/FacebookSigninController.java, +import org.springframework.social.web.connect.SignInControllerService;, +	private final SignInControllerService signinService;, +	 * , +	 * @param connectionRepository, +	 *            a connection repository used to lookup the account ID connected to the Facebook profile., +	 * @param signinService, +	 *            the signin strategy used to authenticate the user with the application., +	 * @param apiKey, +	 *            the Facebook API key used to retrieve the Facebook cookie containing the access token., +	public FacebookSigninController(ConnectionRepository connectionRepository, SignInControllerService signinService,, +		this.signinService = signinService;, +		signinService.signIn(accountId);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/web/FacebookSigninController.java, +import org.springframework.social.web.connect.SignInControllerService;, +	private final SignInControllerService signinService;, +	 * , +	 * @param connectionRepository, +	 *            a connection repository used to lookup the account ID connected to the Facebook profile., +	 * @param signinService, +	 *            the signin strategy used to authenticate the user with the application., +	 * @param apiKey, +	 *            the Facebook API key used to retrieve the Facebook cookie containing the access token., +	public FacebookSigninController(ConnectionRepository connectionRepository, SignInControllerService signinService,, +		this.signinService = signinService;, +		signinService.signIn(accountId);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/web/TwitterSigninController.java, +import org.springframework.social.web.connect.SignInControllerService;, +	private final SignInControllerService signinService;, +	 * , +	 * @param connectionRepository, +	 *            a connection repository used to lookup the account ID connected to the Twitter profile., +	 * @param signinService, +	 *            the signin strategy used to authenticate the user with the application., +	 * @param applicationUrl, +	 *            the base secure URL for this application, used to construct the callback URL passed to the service, +	 *            providers at the beginning of the connection process., +	public TwitterSigninController(ConnectionRepository connectionRepository, SignInControllerService signinService,, +		this.signinService = signinService;, +		signinService.signIn(accountId);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/web/FacebookSigninController.java, +import org.springframework.social.web.connect.SignInControllerService;, +	private final SignInControllerService signinService;, +	 * , +	 * @param connectionRepository, +	 *            a connection repository used to lookup the account ID connected to the Facebook profile., +	 * @param signinService, +	 *            the signin strategy used to authenticate the user with the application., +	 * @param apiKey, +	 *            the Facebook API key used to retrieve the Facebook cookie containing the access token., +	public FacebookSigninController(ConnectionRepository connectionRepository, SignInControllerService signinService,, +		this.signinService = signinService;, +		signinService.signIn(accountId);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/web/TwitterSigninController.java, +import org.springframework.social.web.connect.SignInControllerService;, +	private final SignInControllerService signinService;, +	 * , +	 * @param connectionRepository, +	 *            a connection repository used to lookup the account ID connected to the Twitter profile., +	 * @param signinService, +	 *            the signin strategy used to authenticate the user with the application., +	 * @param applicationUrl, +	 *            the base secure URL for this application, used to construct the callback URL passed to the service, +	 *            providers at the beginning of the connection process., +	public TwitterSigninController(ConnectionRepository connectionRepository, SignInControllerService signinService,, +		this.signinService = signinService;, +		signinService.signIn(accountId);, +++ /dev/null, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/web/FacebookSigninController.java, +import org.springframework.social.web.connect.SignInControllerService;, +	private final SignInControllerService signinService;, +	 * , +	 * @param connectionRepository, +	 *            a connection repository used to lookup the account ID connected to the Facebook profile., +	 * @param signinService, +	 *            the signin strategy used to authenticate the user with the application., +	 * @param apiKey, +	 *            the Facebook API key used to retrieve the Facebook cookie containing the access token., +	public FacebookSigninController(ConnectionRepository connectionRepository, SignInControllerService signinService,, +		this.signinService = signinService;, +		signinService.signIn(accountId);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/web/TwitterSigninController.java, +import org.springframework.social.web.connect.SignInControllerService;, +	private final SignInControllerService signinService;, +	 * , +	 * @param connectionRepository, +	 *            a connection repository used to lookup the account ID connected to the Twitter profile., +	 * @param signinService, +	 *            the signin strategy used to authenticate the user with the application., +	 * @param applicationUrl, +	 *            the base secure URL for this application, used to construct the callback URL passed to the service, +	 *            providers at the beginning of the connection process., +	public TwitterSigninController(ConnectionRepository connectionRepository, SignInControllerService signinService,, +		this.signinService = signinService;, +		signinService.signIn(accountId);, +++ /dev/null, +++ b/spring-social-web/src/main/java/org/springframework/social/web/connect/SignInControllerService.java, +/*, + * Copyright 2011 the original author or authors., + *]