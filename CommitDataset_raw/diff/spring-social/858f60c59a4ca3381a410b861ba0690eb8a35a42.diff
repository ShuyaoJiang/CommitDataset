[+++ b/.gitignore, +build, +**/build, +.gradle, +++ b/.gitignore, +build, +**/build, +.gradle, +++ b/build.gradle, +/*, + * Copyright 2010 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +// -----------------------------------------------------------------------------, +// Main gradle build file for Spring Social, +//, +// - run `./gradlew(.bat) build` to kick off a complete compile-test-package, +//, +// @author Craig Walls, +// -----------------------------------------------------------------------------, +, +, +// -----------------------------------------------------------------------------, +// Configuration for the root project, +// -----------------------------------------------------------------------------, +apply from: "$rootDir/gradle/version.gradle", +apply plugin: 'idea', +, +// used for artifact names, building doc upload urls, etc., +description = 'Spring Social', +abbreviation = 'INT', +, +// -----------------------------------------------------------------------------, +// Configuration for all projects including this one (the root project), +//, +// @see settings.gradle for list of all subprojects, +// -----------------------------------------------------------------------------, +allprojects {, +    // group will translate to groupId during pom generation and deployment, +    group = 'org.springframework.social', +, +    // version will be used in maven pom generation as well as determining, +    // where artifacts should be deployed, based on release type of snapshot,, +    // milestone or release., +    // @see org.springframework.build.Version under buildSrc/ for more info, +    // @see gradle.properties for the declaration of this property., +    version = createVersion(springSocialVersion), +, +    // default set of maven repositories to be used when resolving dependencies, +    repositories {, +        mavenRepo urls: 'http://maven.springframework.org/snapshot', +        mavenCentral(), +        mavenRepo urls: 'http://maven.springframework.org/release', +        mavenRepo urls: 'http://maven.springframework.org/milestone', +        mavenRepo urls: 'http://repository.springsource.com/maven/bundles/external', +        mavenRepo urls: 'http://repository.springsource.com/maven/bundles/release', +        mavenRepo urls: 'http://repository.springsource.com/maven/bundles/milestone', +    }, +}, +, +, +// -----------------------------------------------------------------------------, +// Create collections of subprojects - each will receive their own configuration, +// - all subprojects that start with spring-social-* are 'java projects', +// - documentation-related subprojects are not collected here, +//, +// @see configure(*) sections below, +// -----------------------------------------------------------------------------, +, +javaprojects = subprojects.findAll { project ->, +    project.path.startsWith(':spring-social-'), +}, +, +// -----------------------------------------------------------------------------, +// Configuration for all java subprojects, +// -----------------------------------------------------------------------------, +configure(javaprojects) {, +, +    apply plugin: 'java' // tasks for conventional java lifecycle, +    apply plugin: 'maven' // `gradle install` to push jars to local .m2 cache, +    apply plugin: 'eclipse' // `gradle eclipse` to generate .classpath/.project, +    apply plugin: 'idea' // `gradle idea` to generate .ipr/.iml, +, +    // set up dedicated directories for jars and source jars., +    // this makes it easier when putting together the distribution, +    libsBinDir = new File(libsDir, 'bin'), +    libsSrcDir = new File(libsDir, 'src'), +]