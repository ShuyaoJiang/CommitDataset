[+++ b/spring-social-core/src/test/java/org/springframework/social/connect/mem/InMemoryUsersConnectionRepositoryTest.java, +		assertTrue(localUserIds.contains("1"));, +		assertTrue(localUserIds.contains("2"));, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/mem/InMemoryUsersConnectionRepositoryTest.java, +		assertTrue(localUserIds.contains("1"));, +		assertTrue(localUserIds.contains("2"));, +++ b/spring-social-core/src/test/java/org/springframework/social/oauth1/SigningSupportTest.java, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.List;, +	, +	private void assertAuthorizationHeader(String authorizationHeader, String expectedSignature) {, +		List<String> headerElements = normalizedHeaderElements(authorizationHeader);, +		assertEquals("OAuth", headerElements.get(0));, +		assertEquals("oauth_consumer_key=\"9djdj82h48djs9d2\"", headerElements.get(1));, +		assertEquals("oauth_nonce=\"987654321\"", headerElements.get(2));, +		assertEquals("oauth_signature=\""+expectedSignature+"\"", headerElements.get(3));, +		assertEquals("oauth_signature_method=\"HMAC-SHA1\"", headerElements.get(4));, +		assertEquals("oauth_timestamp=\"123456789\"", headerElements.get(5));, +		assertEquals("oauth_token=\"kkk9d7dh3k39sjv7\"", headerElements.get(6));, +		assertEquals("oauth_version=\"1.0\"", headerElements.get(7));, +	}, +, +	private List<String> normalizedHeaderElements(String authorizationHeader) {, +		List<String> headerElements = new ArrayList<>();, +		for (String element : authorizationHeader.split("[,\\s]")) {, +			if (element.trim().length() > 0) {, +				headerElements.add(element.trim());, +			}, +		}, +		Collections.sort(headerElements);, +		return headerElements;, +	}, +]