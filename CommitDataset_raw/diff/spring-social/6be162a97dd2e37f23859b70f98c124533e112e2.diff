[+++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth1/AbstractOAuth1ServiceProvider.java, +public abstract class AbstractOAuth1ServiceProvider<S> extends AbstractServiceProvider<S> implements OAuth1ServiceProvider<S> {, +	protected String getConsumerKey() {, +		return consumerKey;, +	protected String getConsumerSecret() {, +		return consumerSecret;, +	}, +	, +	@Override, +	protected final S getApi(Connection connection) {, +		return getApi(connection.getAccessToken(), connection.getSecret());, +	}, +, +	protected abstract S getApi(String accessToken, String secret);, +	, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth1/AbstractOAuth1ServiceProvider.java, +public abstract class AbstractOAuth1ServiceProvider<S> extends AbstractServiceProvider<S> implements OAuth1ServiceProvider<S> {, +	protected String getConsumerKey() {, +		return consumerKey;, +	protected String getConsumerSecret() {, +		return consumerSecret;, +	}, +	, +	@Override, +	protected final S getApi(Connection connection) {, +		return getApi(connection.getAccessToken(), connection.getSecret());, +	}, +, +	protected abstract S getApi(String accessToken, String secret);, +	, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth2/AbstractOAuth2ServiceProvider.java, +public abstract class AbstractOAuth2ServiceProvider<S> extends AbstractServiceProvider<S> implements OAuth2ServiceProvider<S> {, +		return getApi(connection.getAccessToken());, +	protected abstract S getApi(String accessToken);, +	, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth1/AbstractOAuth1ServiceProvider.java, +public abstract class AbstractOAuth1ServiceProvider<S> extends AbstractServiceProvider<S> implements OAuth1ServiceProvider<S> {, +	protected String getConsumerKey() {, +		return consumerKey;, +	protected String getConsumerSecret() {, +		return consumerSecret;, +	}, +	, +	@Override, +	protected final S getApi(Connection connection) {, +		return getApi(connection.getAccessToken(), connection.getSecret());, +	}, +, +	protected abstract S getApi(String accessToken, String secret);, +	, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth2/AbstractOAuth2ServiceProvider.java, +public abstract class AbstractOAuth2ServiceProvider<S> extends AbstractServiceProvider<S> implements OAuth2ServiceProvider<S> {, +		return getApi(connection.getAccessToken());, +	protected abstract S getApi(String accessToken);, +	, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/provider/FacebookServiceProvider.java, +import org.springframework.social.provider.oauth2.AbstractOAuth2ServiceProvider;, +	public FacebookServiceProvider(String id, String displayName, ConnectionRepository connectionRepository, String clientId, String clientSecret) {, +		super(id, displayName, connectionRepository, clientId, clientSecret);, +	protected FacebookOperations getApi(String accessToken) {, +		return new FacebookTemplate(accessToken);, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth1/AbstractOAuth1ServiceProvider.java, +public abstract class AbstractOAuth1ServiceProvider<S> extends AbstractServiceProvider<S> implements OAuth1ServiceProvider<S> {, +	protected String getConsumerKey() {, +		return consumerKey;, +	protected String getConsumerSecret() {, +		return consumerSecret;, +	}, +	, +	@Override, +	protected final S getApi(Connection connection) {, +		return getApi(connection.getAccessToken(), connection.getSecret());, +	}, +, +	protected abstract S getApi(String accessToken, String secret);, +	, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth2/AbstractOAuth2ServiceProvider.java, +public abstract class AbstractOAuth2ServiceProvider<S> extends AbstractServiceProvider<S> implements OAuth2ServiceProvider<S> {, +		return getApi(connection.getAccessToken());, +	protected abstract S getApi(String accessToken);, +	, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/provider/FacebookServiceProvider.java, +import org.springframework.social.provider.oauth2.AbstractOAuth2ServiceProvider;, +	public FacebookServiceProvider(String id, String displayName, ConnectionRepository connectionRepository, String clientId, String clientSecret) {, +		super(id, displayName, connectionRepository, clientId, clientSecret);, +	protected FacebookOperations getApi(String accessToken) {, +		return new FacebookTemplate(accessToken);, +++ b/spring-social-github/src/main/java/org/springframework/social/github/provider/GitHubServiceProvider.java, +import org.springframework.social.provider.oauth2.AbstractOAuth2ServiceProvider;, +	public GitHubServiceProvider(String id, String displayName, ConnectionRepository connectionRepository, String clientId, String clientSecret) {, +		super(id, displayName, connectionRepository, clientId, clientSecret);, +	protected GitHubOperations getApi(String accessToken) {, +		return new GitHubTemplate(accessToken);, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth1/AbstractOAuth1ServiceProvider.java, +public abstract class AbstractOAuth1ServiceProvider<S> extends AbstractServiceProvider<S> implements OAuth1ServiceProvider<S> {, +	protected String getConsumerKey() {, +		return consumerKey;, +	protected String getConsumerSecret() {, +		return consumerSecret;, +	}]