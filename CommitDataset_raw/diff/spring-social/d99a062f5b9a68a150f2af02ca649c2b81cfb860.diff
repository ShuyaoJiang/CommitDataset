[+++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/ListsApi.java, +	UserList createList(String name, String description, boolean isPublic);, +	UserList updateList(long listId, String name, String description, boolean isPublic);, +	void deleteList(long listId);, +	UserList addToList(long listId, long... newMemberIds);, +	UserList addToList(String listSlug, String... newMemberScreenNames);, +	void removeFromList(long listId, long memberId);, +	void removeFromList(String listSlug, String memberScreenName);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/ListsApi.java, +	UserList createList(String name, String description, boolean isPublic);, +	UserList updateList(long listId, String name, String description, boolean isPublic);, +	void deleteList(long listId);, +	UserList addToList(long listId, long... newMemberIds);, +	UserList addToList(String listSlug, String... newMemberScreenNames);, +	void removeFromList(long listId, long memberId);, +	void removeFromList(String listSlug, String memberScreenName);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/TwitterTemplate.java, +		this.listsApi = new ListsApiImpl(restTemplate, userApi);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/ListsApi.java, +	UserList createList(String name, String description, boolean isPublic);, +	UserList updateList(long listId, String name, String description, boolean isPublic);, +	void deleteList(long listId);, +	UserList addToList(long listId, long... newMemberIds);, +	UserList addToList(String listSlug, String... newMemberScreenNames);, +	void removeFromList(long listId, long memberId);, +	void removeFromList(String listSlug, String memberScreenName);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/TwitterTemplate.java, +		this.listsApi = new ListsApiImpl(restTemplate, userApi);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/support/ListsApiImpl.java, +import org.springframework.social.twitter.UserApi;, +	private final UserApi userApi;, +	public ListsApiImpl(RestTemplate restTemplate, UserApi userApi) {, +		this.userApi = userApi;, +	public UserList createList(String name, String description, boolean isPublic) {, +		return saveList(USER_LISTS_URL, name, description, isPublic, userApi.getProfileId());, +	public UserList updateList(long listId, String name, String description, boolean isPublic) {, +		return saveList(USER_LIST_URL, name, description, isPublic, userApi.getProfileId(), listId);, +	public void deleteList(long listId) {, +		deleteTwitterList(userApi.getProfileId(), listId);, +	public UserList addToList(long listId, long... newMemberIds) {, +		return addMembersToList("user_id", ArrayUtils.join(newMemberIds), userApi.getProfileId(), listId);, +	public UserList addToList(String listSlug, String... newMemberScreenNames) {, +		return addMembersToList("screen_name", ArrayUtils.join(newMemberScreenNames), userApi.getProfileId(), listSlug);, +	public void removeFromList(long listId, long memberId) {, +		restTemplate.delete(LIST_MEMBERS_URL + "?id={memberId}", userApi.getProfileId(), listId, memberId);, +	public void removeFromList(String listSlug, String memberScreenName) {, +		restTemplate.delete(LIST_MEMBERS_URL + "?id={memberId}", userApi.getProfileId(), listSlug, memberScreenName);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/ListsApi.java, +	UserList createList(String name, String description, boolean isPublic);, +	UserList updateList(long listId, String name, String description, boolean isPublic);, +	void deleteList(long listId);, +	UserList addToList(long listId, long... newMemberIds);, +	UserList addToList(String listSlug, String... newMemberScreenNames);, +	void removeFromList(long listId, long memberId);, +	void removeFromList(String listSlug, String memberScreenName);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/TwitterTemplate.java, +		this.listsApi = new ListsApiImpl(restTemplate, userApi);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/support/ListsApiImpl.java, +import org.springframework.social.twitter.UserApi;, +	private final UserApi userApi;, +	public ListsApiImpl(RestTemplate restTemplate, UserApi userApi) {, +		this.userApi = userApi;, +	public UserList createList(String name, String description, boolean isPublic) {, +		return saveList(USER_LISTS_URL, name, description, isPublic, userApi.getProfileId());, +	public UserList updateList(long listId, String name, String description, boolean isPublic) {, +		return saveList(USER_LIST_URL, name, description, isPublic, userApi.getProfileId(), listId);, +	public void deleteList(long listId) {, +		deleteTwitterList(userApi.getProfileId(), listId);, +	public UserList addToList(long listId, long... newMemberIds) {, +		return addMembersToList("user_id", ArrayUtils.join(newMemberIds), userApi.getProfileId(), listId);, +	public UserList addToList(String listSlug, String... newMemberScreenNames) {, +		return addMembersToList("screen_name", ArrayUtils.join(newMemberScreenNames), userApi.getProfileId(), listSlug);, +	public void removeFromList(long listId, long memberId) {, +		restTemplate.delete(LIST_MEMBERS_URL + "?id={memberId}", userApi.getProfileId(), listId, memberId);, +	public void removeFromList(String listSlug, String memberScreenName) {, +		restTemplate.delete(LIST_MEMBERS_URL + "?id={memberId}", userApi.getProfileId(), listSlug, memberScreenName);, +++ b/spring-social-twitter/src/test/java/org/springframework/social/twitter/ListsApiImplTest.java, +	public void primeProfileId() {, +		mockServer.expect(requestTo("https://api.twitter.com/1/account/verify_credentials.json")), +			.andExpect(method(GET)), +			.andRespond(withResponse(new ClassPathResource("verify-credentials.json", getClass()), responseHeaders));, +	}, +	, +		primeProfileId();, +		assertSingleList(twitter.listsApi().createList("forfun", "Just for Fun", true));, +		primeProfileId();, +		assertSingleList(twitter.listsApi().createList("forfun2", "Just for Fun, too", false));, +		primeProfileId();, +		assertSingleList(twitter.listsApi().updateList(40841803, "forfun", "Just for Fun", true));, +		primeProfileId();, +		assertSingleList(twitter.listsApi().updateList(40841803, "forfun2", "Just for Fun, too", false));, +		primeProfileId();, +		twitter.listsApi().deleteList(40841803);, +		primeProfileId();, +		assertSingleList(twitter.listsApi().addToList(40841803, 123456));, +		primeProfileId();, +		assertSingleList(twitter.listsApi().addToList(40841803, 123456, 234567, 345678));, +		primeProfileId();, +		twitter.listsApi().removeFromList(40841803, 12345);]