[+++ b/build.gradle, +++ b/build.gradle, +++ b/docs/src/reference/docbook/connecting.xml, +			<listitem><para><code>DELETE /connect/{providerId}</code> - Severs all of the user's connection with the provider.</para></listitem>, +			<listitem><para><code>DELETE /connect/{providerId}/{providerUserId}</code> - Severs a specific connection with the provider, based on the user's provider user ID.</para></listitem>, +			<listitem><para><code>DELETE /connect/{providerId}</code> - Severs all of the user's connection with the provider.</para></listitem>, +			<listitem><para><code>DELETE /connect/{providerId}/{providerUserId}</code> - Severs a specific connection with the provider, based on the user's provider user ID.</para></listitem>, +++ b/build.gradle, +++ b/docs/src/reference/docbook/connecting.xml, +			<listitem><para><code>DELETE /connect/{providerId}</code> - Severs all of the user's connection with the provider.</para></listitem>, +			<listitem><para><code>DELETE /connect/{providerId}/{providerUserId}</code> - Severs a specific connection with the provider, based on the user's provider user ID.</para></listitem>, +			<listitem><para><code>DELETE /connect/{providerId}</code> - Severs all of the user's connection with the provider.</para></listitem>, +			<listitem><para><code>DELETE /connect/{providerId}/{providerUserId}</code> - Severs a specific connection with the provider, based on the user's provider user ID.</para></listitem>, +++ b/docs/src/reference/docbook/implementing.xml, +							For example, Twitter's API provides access to "status timelines", "searches", "lists", "direct messages", "friends", "geo location", and "users"., +    GeoOperations geoOperations();, +, +    public Facebook getApi(String accessToken) {, +				It should be configured with the provided consumerKey and consumerSecret, along with the provider-specific requestTokenUrl, authorizeUrl, authenticateUrl, and accessTokenUrl., +				The authenticateUrl parameter is optional and may be left out if the provider doesn't have an authentication URL that is different than the authorization URL. , +++ b/build.gradle, +++ b/docs/src/reference/docbook/connecting.xml, +			<listitem><para><code>DELETE /connect/{providerId}</code> - Severs all of the user's connection with the provider.</para></listitem>, +			<listitem><para><code>DELETE /connect/{providerId}/{providerUserId}</code> - Severs a specific connection with the provider, based on the user's provider user ID.</para></listitem>, +			<listitem><para><code>DELETE /connect/{providerId}</code> - Severs all of the user's connection with the provider.</para></listitem>, +			<listitem><para><code>DELETE /connect/{providerId}/{providerUserId}</code> - Severs a specific connection with the provider, based on the user's provider user ID.</para></listitem>, +++ b/docs/src/reference/docbook/implementing.xml, +							For example, Twitter's API provides access to "status timelines", "searches", "lists", "direct messages", "friends", "geo location", and "users"., +    GeoOperations geoOperations();, +, +    public Facebook getApi(String accessToken) {, +				It should be configured with the provided consumerKey and consumerSecret, along with the provider-specific requestTokenUrl, authorizeUrl, authenticateUrl, and accessTokenUrl., +				The authenticateUrl parameter is optional and may be left out if the provider doesn't have an authentication URL that is different than the authorization URL. , +++ b/docs/src/reference/docbook/serviceprovider.xml, +    public Connection<A> createConnection(ConnectionData data);, +, +    String buildAuthenticateUrl(GrantType grantType, OAuth2Parameters parameters);, +, +	AccessGrant refreshAccess(String refreshToken, String scope, , +	        MultiValueMap<String, String> additionalParameters);, +, +    public Connection<A> createConnection(ConnectionData data);, +, +    String buildAuthenticateUrl(String requestToken, OAuth1Parameters parameters);, +, +				Callers are first expected to call fetchNewRequestToken(String) to obtain a temporary token from the ServiceProvider to use during the authorization session., +    <A> ConnectionFactory<A> getConnectionFactory(Class<A> apiType);, +    Connection<?> getConnection(ConnectionKey connectionKey);, +    <A> Connection<A> getConnection(Class<A> apiType, String providerUserId);	, +, +    <A> Connection<A> getPrimaryConnection(Class<A> apiType);, +++ b/build.gradle, +++ b/docs/src/reference/docbook/connecting.xml, +			<listitem><para><code>DELETE /connect/{providerId}</code> - Severs all of the user's connection with the provider.</para></listitem>, +			<listitem><para><code>DELETE /connect/{providerId}/{providerUserId}</code> - Severs a specific connection with the provider, based on the user's provider user ID.</para></listitem>, +			<listitem><para><code>DELETE /connect/{providerId}</code> - Severs all of the user's connection with the provider.</para></listitem>, +			<listitem><para><code>DELETE /connect/{providerId}/{providerUserId}</code> - Severs a specific connection with the provider, based on the user's provider user ID.</para></listitem>, +++ b/docs/src/reference/docbook/implementing.xml, +							For example, Twitter's API provides access to "status timelines", "searches", "lists", "direct messages", "friends", "geo location", and "users"., +    GeoOperations geoOperations();, +, +    public Facebook getApi(String accessToken) {, +				It should be configured with the provided consumerKey and consumerSecret, along with the provider-specific requestTokenUrl, authorizeUrl, authenticateUrl, and accessTokenUrl., +				The authenticateUrl parameter is optional and may be left out if the provider doesn't have an authentication URL that is different than the authorization URL. , +++ b/docs/src/reference/docbook/serviceprovider.xml, +    public Connection<A> createConnection(ConnectionData data);, +, +    String buildAuthenticateUrl(GrantType grantType, OAuth2Parameters parameters);, +, +	AccessGrant refreshAccess(String refreshToken, String scope, , +	        MultiValueMap<String, String> additionalParameters);, +, +    public Connection<A> createConnection(ConnectionData data);, +, +    String buildAuthenticateUrl(String requestToken, OAuth1Parameters parameters);, +, +				Callers are first expected to call fetchNewRequestToken(String) to obtain a temporary token from the ServiceProvider to use during the authorization session., +    <A> ConnectionFactory<A> getConnectionFactory(Class<A> apiType);, +    Connection<?> getConnection(ConnectionKey connectionKey);, +    <A> Connection<A> getConnection(Class<A> apiType, String providerUserId);	, +, +    <A> Connection<A> getPrimaryConnection(Class<A> apiType);, +++ b/docs/src/reference/docbook/signin.xml, +				By configuring ConnectionFactoryLocator and UsersConnectionRepository as scoped proxies, it enables the proxies to be carried along with the sign in attempt in the session rather than the actual objects themselves., +				For example, suppose that an application's security is based on Spring Security and simply uses a user's account ID as their principal. , +    controller.setSignUpUrl("/register");, +public class AccountConnectionSignUp implements ConnectionSignUp {, +    public AccountConnectionSignUp(AccountRepository accountRepository) {, +        Account account = new Account(profile.getUsername(), profile.getFirstName(), profile.getLastName());, +        accountRepository.createAccount(account);, +        return account;, +++ b/build.gradle, +++ b/docs/src/reference/docbook/connecting.xml, +			<listitem><para><code>DELETE /connect/{providerId}</code> - Severs all of the user's connection with the provider.</para></listitem>, +			<listitem><para><code>DELETE /connect/{providerId}/{providerUserId}</code> - Severs a specific connection with the provider, based on the user's provider user ID.</para></listitem>, +			<listitem><para><code>DELETE /connect/{providerId}</code> - Severs all of the user's connection with the provider.</para></listitem>, +			<listitem><para><code>DELETE /connect/{providerId}/{providerUserId}</code> - Severs a specific connection with the provider, based on the user's provider user ID.</para></listitem>, +++ b/docs/src/reference/docbook/implementing.xml, +							For example, Twitter's API provides access to "status timelines", "searches", "lists", "direct messages", "friends", "geo location", and "users"., +    GeoOperations geoOperations();]