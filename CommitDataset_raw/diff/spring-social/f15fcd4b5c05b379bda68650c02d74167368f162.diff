[+++ b/spring-social-core/src/main/java/org/springframework/social/oauth/support/InterceptingClientHttpRequest.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth/support/InterceptingClientHttpRequest.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth/support/InterceptingRestTemplate.java, +package org.springframework.social.oauth.support;, +, +import org.springframework.http.client.ClientHttpRequestFactory;, +import org.springframework.util.ObjectUtils;, +import org.springframework.web.client.RestTemplate;, +, +/**, + * Extension of RestTemplate that allows for setting of request interceptors. If interceptors are set, then an, + * InterceptingClientHttpRequestFactory will be used to wrap the base request factory., + * @author Craig Walls, + */, +public class InterceptingRestTemplate extends RestTemplate {, +	private ClientHttpRequestInterceptor[] interceptors;, +, +	public InterceptingRestTemplate() {, +		super();, +	}, +, +	public void setInterceptors(ClientHttpRequestInterceptor[] interceptors) {, +		this.interceptors = interceptors;, +	}, +, +	public ClientHttpRequestInterceptor[] getInterceptors() {, +		return interceptors;, +	}, +, +	public ClientHttpRequestFactory getRequestFactory() {, +		ClientHttpRequestFactory delegate = super.getRequestFactory();, +		if (!ObjectUtils.isEmpty(getInterceptors())) {, +			return new InterceptingClientHttpRequestFactory(delegate, getInterceptors());, +		} else {, +			return delegate;, +		}, +	}, +}, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth/support/InterceptingClientHttpRequest.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth/support/InterceptingRestTemplate.java, +package org.springframework.social.oauth.support;, +, +import org.springframework.http.client.ClientHttpRequestFactory;, +import org.springframework.util.ObjectUtils;, +import org.springframework.web.client.RestTemplate;, +, +/**, + * Extension of RestTemplate that allows for setting of request interceptors. If interceptors are set, then an, + * InterceptingClientHttpRequestFactory will be used to wrap the base request factory., + * @author Craig Walls, + */, +public class InterceptingRestTemplate extends RestTemplate {, +	private ClientHttpRequestInterceptor[] interceptors;, +, +	public InterceptingRestTemplate() {, +		super();, +	}, +, +	public void setInterceptors(ClientHttpRequestInterceptor[] interceptors) {, +		this.interceptors = interceptors;, +	}, +, +	public ClientHttpRequestInterceptor[] getInterceptors() {, +		return interceptors;, +	}, +, +	public ClientHttpRequestFactory getRequestFactory() {, +		ClientHttpRequestFactory delegate = super.getRequestFactory();, +		if (!ObjectUtils.isEmpty(getInterceptors())) {, +			return new InterceptingClientHttpRequestFactory(delegate, getInterceptors());, +		} else {, +			return delegate;, +		}, +	}, +}, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +import org.springframework.social.oauth.support.InterceptingRestTemplate;, +		InterceptingRestTemplate interceptingRestTemplate = new InterceptingRestTemplate();, +		interceptingRestTemplate.setInterceptors(new ClientHttpRequestInterceptor[] { OAuth2RequestInterceptor.draft10(accessToken) });, +		this.restTemplate = interceptingRestTemplate;, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth/support/InterceptingClientHttpRequest.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth/support/InterceptingRestTemplate.java, +package org.springframework.social.oauth.support;, +, +import org.springframework.http.client.ClientHttpRequestFactory;, +import org.springframework.util.ObjectUtils;, +import org.springframework.web.client.RestTemplate;, +, +/**, + * Extension of RestTemplate that allows for setting of request interceptors. If interceptors are set, then an, + * InterceptingClientHttpRequestFactory will be used to wrap the base request factory., + * @author Craig Walls, + */, +public class InterceptingRestTemplate extends RestTemplate {, +	private ClientHttpRequestInterceptor[] interceptors;, +, +	public InterceptingRestTemplate() {, +		super();, +	}, +]