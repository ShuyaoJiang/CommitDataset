[+++ b/build.gradle, +        compile "org.springframework:spring-webmvc:$springVersion", +++ b/build.gradle, +        compile "org.springframework:spring-webmvc:$springVersion", +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +import org.springframework.web.servlet.view.RedirectView;, +	public RedirectView connect(@PathVariable String providerId, WebRequest request) {, +			return new RedirectView(oauth1Ops.buildAuthorizeUrl(requestToken.getValue(), oauth1Ops.getVersion() == OAuth1Version.CORE_10 ? new OAuth1Parameters(callbackUrl(providerId)) : OAuth1Parameters.NONE));, +			return new RedirectView(((OAuth2ConnectionFactory<?>) connectionFactory).getOAuthOperations().buildAuthorizeUrl(GrantType.AUTHORIZATION_CODE, new OAuth2Parameters(callbackUrl(providerId), scope)));, +	public RedirectView oauth1Callback(@PathVariable String providerId, @RequestParam("oauth_token") String token, @RequestParam(value="oauth_verifier", required=false) String verifier, WebRequest request) {, +		return new RedirectView("/connect/" + providerId, true);, +	public RedirectView oauth2Callback(@PathVariable String providerId, @RequestParam("code") String code, WebRequest request) {, +		return new RedirectView("/connect/" + providerId, true);, +	public RedirectView removeConnections(@PathVariable String providerId) {, +		return new RedirectView("/connect/" + providerId, true);, +	public RedirectView removeConnections(@PathVariable String providerId, @PathVariable String providerUserId) {, +		return new RedirectView("/connect/" + providerId, true);, +	protected RedirectView handleConnectToCustomConnectionFactory(ConnectionFactory<?> connectionFactory, WebRequest request) {]