[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/mem/InMemoryConnectionRepository.java, +		Assert.notEmpty(providerUserIds, "Provider user IDs cannot be empty.");, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/mem/InMemoryConnectionRepository.java, +		Assert.notEmpty(providerUserIds, "Provider user IDs cannot be empty.");, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/EmptyMultiValueMap.java, +	@Override, +	public void addAll(K key, List<V> values) {, +		throw new UnsupportedOperationException("This empty MultiValueMap is not modifiable");, +	}, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/mem/InMemoryConnectionRepository.java, +		Assert.notEmpty(providerUserIds, "Provider user IDs cannot be empty.");, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/EmptyMultiValueMap.java, +	@Override, +	public void addAll(K key, List<V> values) {, +		throw new UnsupportedOperationException("This empty MultiValueMap is not modifiable");, +	}, +, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/TreeMultiValueMap.java, +	@Override, +	public void addAll(K key, List<V> newValues) {, +		List<V> values = this.targetMap.get(key);, +		if (values == null) {, +			values = new LinkedList<V>();, +			this.targetMap.put(key, values);, +		}, +		values.addAll(newValues);, +	}, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/mem/InMemoryConnectionRepository.java, +		Assert.notEmpty(providerUserIds, "Provider user IDs cannot be empty.");, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/EmptyMultiValueMap.java, +	@Override, +	public void addAll(K key, List<V> values) {, +		throw new UnsupportedOperationException("This empty MultiValueMap is not modifiable");, +	}, +, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/TreeMultiValueMap.java, +	@Override, +	public void addAll(K key, List<V> newValues) {, +		List<V> values = this.targetMap.get(key);, +		if (values == null) {, +			values = new LinkedList<V>();, +			this.targetMap.put(key, values);, +		}, +		values.addAll(newValues);, +	}, +, +++ b/spring-social-core/src/main/java/org/springframework/social/support/ClientHttpRequestFactorySelector.java, +import org.apache.http.conn.ssl.NoopHostnameVerifier;, +import org.apache.http.ssl.SSLContexts;, +					.setSSLContext(getSSLContext()), +					.setSSLHostnameVerifier(new NoopHostnameVerifier()), +				return SSLContexts.custom().useProtocol("SSL").loadTrustMaterial(trustStore, allTrust).build();, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/mem/InMemoryConnectionRepository.java, +		Assert.notEmpty(providerUserIds, "Provider user IDs cannot be empty.");, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/EmptyMultiValueMap.java, +	@Override, +	public void addAll(K key, List<V> values) {, +		throw new UnsupportedOperationException("This empty MultiValueMap is not modifiable");, +	}, +, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/TreeMultiValueMap.java, +	@Override, +	public void addAll(K key, List<V> newValues) {, +		List<V> values = this.targetMap.get(key);, +		if (values == null) {, +			values = new LinkedList<V>();, +			this.targetMap.put(key, values);, +		}, +		values.addAll(newValues);, +	}, +, +++ b/spring-social-core/src/main/java/org/springframework/social/support/ClientHttpRequestFactorySelector.java, +import org.apache.http.conn.ssl.NoopHostnameVerifier;, +import org.apache.http.ssl.SSLContexts;, +					.setSSLContext(getSSLContext()), +					.setSSLHostnameVerifier(new NoopHostnameVerifier()), +				return SSLContexts.custom().useProtocol("SSL").loadTrustMaterial(trustStore, allTrust).build();, +++ b/spring-social-core/src/main/java/org/springframework/social/support/ParameterMap.java, +	@Override, +	public void addAll(String key, List<String> newValues) {, +		List<String> values = parameters.get(key);, +		if (values == null) {, +			values = new LinkedList<String>();, +			this.parameters.put(key, values);, +		}, +		values.addAll(newValues);, +	}, +, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/mem/InMemoryConnectionRepository.java, +		Assert.notEmpty(providerUserIds, "Provider user IDs cannot be empty.");, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/EmptyMultiValueMap.java, +	@Override, +	public void addAll(K key, List<V> values) {, +		throw new UnsupportedOperationException("This empty MultiValueMap is not modifiable");, +	}, +, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/TreeMultiValueMap.java]