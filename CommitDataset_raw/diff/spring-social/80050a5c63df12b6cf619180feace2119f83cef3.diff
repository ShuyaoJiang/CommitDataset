[+++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/FacebookErrorHandler.java, +		} else if(message.contains("An active access token must be used to query information about the current user.")) {, +			throw new BadCredentialsException(message);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/FacebookErrorHandler.java, +		} else if(message.contains("An active access token must be used to query information about the current user.")) {, +			throw new BadCredentialsException(message);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/FacebookTemplate.java, +import org.springframework.social.BadCredentialsException;, +	 * This constructor creates a new FacebookTemplate able to perform unauthenticated operations against Facebook's Graph API., +	 * Some operations do not require OAuth authentication. , +	 * For example, retrieving a specified user's profile or feed does not require authentication (although the data returned will be limited to what is publicly available). , +	 * A FacebookTemplate created with this constructor will support those operations., +	 * Those operations requiring authentication will throw {@link BadCredentialsException}., +	 */, +	public FacebookTemplate() {, +		initialize();		, +	}, +, +	/**, +	 * Create a new instance of FacebookTemplate., +		initialize();, +	}, +	private void initSubApis() {, +	private void initialize() {, +		registerFacebookJsonModule(getRestTemplate());, +		getRestTemplate().setErrorHandler(new FacebookErrorHandler());, +		// Wrap the request factory with a BufferingClientHttpRequestFactory so that the error handler can do repeat reads on the response.getBody(), +		super.setRequestFactory(ClientHttpRequestFactorySelector.bufferRequests(getRestTemplate().getRequestFactory()));, +		initSubApis();, +	}, +		, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/FacebookErrorHandler.java, +		} else if(message.contains("An active access token must be used to query information about the current user.")) {, +			throw new BadCredentialsException(message);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/FacebookTemplate.java, +import org.springframework.social.BadCredentialsException;, +	 * This constructor creates a new FacebookTemplate able to perform unauthenticated operations against Facebook's Graph API., +	 * Some operations do not require OAuth authentication. , +	 * For example, retrieving a specified user's profile or feed does not require authentication (although the data returned will be limited to what is publicly available). , +	 * A FacebookTemplate created with this constructor will support those operations., +	 * Those operations requiring authentication will throw {@link BadCredentialsException}., +	 */, +	public FacebookTemplate() {, +		initialize();		, +	}, +, +	/**, +	 * Create a new instance of FacebookTemplate., +		initialize();, +	}, +	private void initSubApis() {, +	private void initialize() {, +		registerFacebookJsonModule(getRestTemplate());, +		getRestTemplate().setErrorHandler(new FacebookErrorHandler());, +		// Wrap the request factory with a BufferingClientHttpRequestFactory so that the error handler can do repeat reads on the response.getBody(), +		super.setRequestFactory(ClientHttpRequestFactorySelector.bufferRequests(getRestTemplate().getRequestFactory()));, +		initSubApis();, +	}, +		, +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/api/ErrorHandlingTest.java, +import org.springframework.social.BadCredentialsException;, +import org.springframework.social.facebook.api.impl.FacebookTemplate;, +import org.springframework.social.test.client.MockRestServiceServer;, +	@Test, +	public void currentUser_noAccessToken() {, +		FacebookTemplate facebook = new FacebookTemplate(); // use anonymous FacebookTemplate in this test, +		MockRestServiceServer mockServer = MockRestServiceServer.createServer(facebook.getRestTemplate());, +		try {, +			mockServer.expect(requestTo("https://graph.facebook.com/me")), +				.andExpect(method(GET)), +				.andRespond(withResponse(new ClassPathResource("testdata/error-current-user-no-token.json", getClass()), responseHeaders, HttpStatus.BAD_REQUEST, ""));, +			facebook.userOperations().getUserProfile();, +			fail("Expected BadCredentialsException when fetching an unknown object alias");, +		} catch (BadCredentialsException e) {, +			assertEquals("An active access token must be used to query information about the current user.", e.getMessage());, +		}						, +	}, +	, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/FacebookErrorHandler.java, +		} else if(message.contains("An active access token must be used to query information about the current user.")) {, +			throw new BadCredentialsException(message);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/FacebookTemplate.java, +import org.springframework.social.BadCredentialsException;, +	 * This constructor creates a new FacebookTemplate able to perform unauthenticated operations against Facebook's Graph API., +	 * Some operations do not require OAuth authentication. , +	 * For example, retrieving a specified user's profile or feed does not require authentication (although the data returned will be limited to what is publicly available). , +	 * A FacebookTemplate created with this constructor will support those operations., +	 * Those operations requiring authentication will throw {@link BadCredentialsException}., +	 */, +	public FacebookTemplate() {, +		initialize();		, +	}, +, +	/**, +	 * Create a new instance of FacebookTemplate., +		initialize();, +	}, +	private void initSubApis() {, +	private void initialize() {, +		registerFacebookJsonModule(getRestTemplate());]