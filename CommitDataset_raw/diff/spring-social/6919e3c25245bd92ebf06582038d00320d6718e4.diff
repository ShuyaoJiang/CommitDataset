[+++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth2/OAuth2ServiceProviderConnection.java, +package org.springframework.social.provider.oauth2;, +, +import org.springframework.social.provider.ServiceProviderConnection;, +import org.springframework.social.provider.support.AccountConnectionRepository;, +, +public class OAuth2ServiceProviderConnection<S> implements ServiceProviderConnection<S> {, +, +	private final AccountConnectionRepository connectionRepository;, +	private final String accountId;, +	private final String provider;, +	private final S api;, +, +	public OAuth2ServiceProviderConnection(AccountConnectionRepository connectionRepository, String accountId,, +			String provider, S api) {, +		this.connectionRepository = connectionRepository;, +		this.accountId = accountId;, +		this.provider = provider;, +		this.api = api;, +	}, +	, +	public String getId() {, +		// TODO Auto-generated method stub, +		return null;, +	}, +, +	public S getApi() {, +		return api;, +	}, +, +	public void disconnect() {, +		connectionRepository.disconnect(accountId, provider);, +	}, +, +}, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth2/OAuth2ServiceProviderConnection.java, +package org.springframework.social.provider.oauth2;, +, +import org.springframework.social.provider.ServiceProviderConnection;, +import org.springframework.social.provider.support.AccountConnectionRepository;, +, +public class OAuth2ServiceProviderConnection<S> implements ServiceProviderConnection<S> {, +, +	private final AccountConnectionRepository connectionRepository;, +	private final String accountId;, +	private final String provider;, +	private final S api;, +, +	public OAuth2ServiceProviderConnection(AccountConnectionRepository connectionRepository, String accountId,, +			String provider, S api) {, +		this.connectionRepository = connectionRepository;, +		this.accountId = accountId;, +		this.provider = provider;, +		this.api = api;, +	}, +	, +	public String getId() {, +		// TODO Auto-generated method stub, +		return null;, +	}, +, +	public S getApi() {, +		return api;, +	}, +, +	public void disconnect() {, +		connectionRepository.disconnect(accountId, provider);, +	}, +, +}, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/support/AbstractOAuth1ServiceProvider.java, +import org.springframework.social.provider.ServiceProviderConnection;, +import org.springframework.social.provider.oauth1.AuthorizedRequestToken;, +import org.springframework.social.provider.oauth1.OAuth1ServiceProvider;, +import org.springframework.social.provider.oauth1.OAuthToken;, +public abstract class AbstractOAuth1ServiceProvider<S> extends AbstractServiceProvider<S> implements, +		OAuth1ServiceProvider<S> {, +	// OAuth1ServiceProvider, +	public String buildAuthorizeUrl(String requestToken) {, +		return parameters.getAuthorizeUrl().expand(requestToken).toString();, +	public ServiceProviderConnection<S> connect(Serializable accountId, OAuthToken accessToken) {, +		// TODO Auto-generated method stub, +		return null;, +	public OAuthToken exchangeForAccessToken(AuthorizedRequestToken requestToken) {, +		return new OAuthToken(accessToken.getToken(), accessToken.getSecret());, +	public OAuthToken fetchNewRequestToken(String callbackUrl) {, +		Token requestToken = getOAuthService(callbackUrl).getRequestToken();, +		return new OAuthToken(requestToken.getToken(), requestToken.getSecret());, +	// ServiceProvider, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth2/OAuth2ServiceProviderConnection.java, +package org.springframework.social.provider.oauth2;, +, +import org.springframework.social.provider.ServiceProviderConnection;, +import org.springframework.social.provider.support.AccountConnectionRepository;, +, +public class OAuth2ServiceProviderConnection<S> implements ServiceProviderConnection<S> {, +, +	private final AccountConnectionRepository connectionRepository;, +	private final String accountId;, +	private final String provider;]