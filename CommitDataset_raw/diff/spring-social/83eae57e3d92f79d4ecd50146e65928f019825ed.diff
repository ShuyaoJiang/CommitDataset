[+++ b/spring-social-client/src/main/java/org/springframework/security/oauth/client/oauth2/OAuth2ClientRequestInterceptor.java, +		// Draft 12 header: Supported by nobody yet (two variations depending on, +		// how you read the spec), +++ b/spring-social-client/src/main/java/org/springframework/security/oauth/client/oauth2/OAuth2ClientRequestInterceptor.java, +		// Draft 12 header: Supported by nobody yet (two variations depending on, +		// how you read the spec), +++ b/spring-social-github/src/main/java/org/springframework/social/github/GitHubTemplate.java, +import org.springframework.security.oauth.client.InterceptorCallingRestTemplate;, +import org.springframework.security.oauth.client.oauth2.OAuth2ClientRequestInterceptor;, +		// RestTemplate restTemplate = new RestTemplate();, +		// temporarily use InterceptorCallingRestTemplate instead of a regular, +		// RestTemplate. This is to simulate the work that Arjen is doing for, +		// SPR-7494. Once Arjen's finished, a regular RestTemplate should be, +		// used with the interceptors registered appropriately., +		InterceptorCallingRestTemplate restTemplate = new InterceptorCallingRestTemplate();, +		restTemplate.addInterceptor(new OAuth2ClientRequestInterceptor(accessToken));, +		restOperations = restTemplate;, +		Map<String, ?> result = restOperations.getForObject(PROFILE_URL, Map.class);, +	static final String PROFILE_URL = "https://github.com/api/v2/json/user/show";, +++ b/spring-social-client/src/main/java/org/springframework/security/oauth/client/oauth2/OAuth2ClientRequestInterceptor.java, +		// Draft 12 header: Supported by nobody yet (two variations depending on, +		// how you read the spec), +++ b/spring-social-github/src/main/java/org/springframework/social/github/GitHubTemplate.java, +import org.springframework.security.oauth.client.InterceptorCallingRestTemplate;, +import org.springframework.security.oauth.client.oauth2.OAuth2ClientRequestInterceptor;, +		// RestTemplate restTemplate = new RestTemplate();, +		// temporarily use InterceptorCallingRestTemplate instead of a regular, +		// RestTemplate. This is to simulate the work that Arjen is doing for, +		// SPR-7494. Once Arjen's finished, a regular RestTemplate should be, +		// used with the interceptors registered appropriately., +		InterceptorCallingRestTemplate restTemplate = new InterceptorCallingRestTemplate();, +		restTemplate.addInterceptor(new OAuth2ClientRequestInterceptor(accessToken));, +		restOperations = restTemplate;, +		Map<String, ?> result = restOperations.getForObject(PROFILE_URL, Map.class);, +	static final String PROFILE_URL = "https://github.com/api/v2/json/user/show";, +++ b/spring-social-github/src/test/java/org/springframework/social/github/GitHubTemplateTest.java, +		when(restOperations.getForObject(GitHubTemplate.PROFILE_URL, Map.class)).thenReturn(, +++ b/spring-social-client/src/main/java/org/springframework/security/oauth/client/oauth2/OAuth2ClientRequestInterceptor.java, +		// Draft 12 header: Supported by nobody yet (two variations depending on, +		// how you read the spec), +++ b/spring-social-github/src/main/java/org/springframework/social/github/GitHubTemplate.java, +import org.springframework.security.oauth.client.InterceptorCallingRestTemplate;, +import org.springframework.security.oauth.client.oauth2.OAuth2ClientRequestInterceptor;, +		// RestTemplate restTemplate = new RestTemplate();, +		// temporarily use InterceptorCallingRestTemplate instead of a regular, +		// RestTemplate. This is to simulate the work that Arjen is doing for, +		// SPR-7494. Once Arjen's finished, a regular RestTemplate should be, +		// used with the interceptors registered appropriately., +		InterceptorCallingRestTemplate restTemplate = new InterceptorCallingRestTemplate();, +		restTemplate.addInterceptor(new OAuth2ClientRequestInterceptor(accessToken));, +		restOperations = restTemplate;, +		Map<String, ?> result = restOperations.getForObject(PROFILE_URL, Map.class);, +	static final String PROFILE_URL = "https://github.com/api/v2/json/user/show";, +++ b/spring-social-github/src/test/java/org/springframework/social/github/GitHubTemplateTest.java, +		when(restOperations.getForObject(GitHubTemplate.PROFILE_URL, Map.class)).thenReturn(, +++ b/spring-social-gowalla/src/main/java/org/springframework/social/gowalla/GowallaTemplate.java]