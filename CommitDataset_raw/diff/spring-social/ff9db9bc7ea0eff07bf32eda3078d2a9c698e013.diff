[+++ b/README, +, +Spring Social is an extension of the Spring Framework that helps you connect your, +applications with Software-as-a-Service (SaaS) providers such as Facebook and Twitter., +, +To get up and running quickly using the project, see the Quickstart:, +https://github.com/SpringSource/spring-social/wiki/Quick-Start, +, +-------------------------------------------------------------------------------, +To get the code and build from source, do the following:, +Once complete, you may then import the projects into Eclipse:, +, +-------------------------------------------------------------------------------, +Note that the core Spring Social project no longer contains provider modules., +Each of the provider modules is now in its own project., +This will enable those modules to progress and release on a separate schedule, +than Spring Social and be able to react more quickly to changes in the provider's, +API without the need to wait for a Spring Social release., +, +The SaaS provider-specific projects can be cloned from the following GitHub URLs:, +, +Twitter: git://github.com/SpringSource/spring-social-twitter.git, +Facebook: git://github.com/SpringSource/spring-social-facebook.git, +LinkedIn: git://github.com/SpringSource/spring-social-linkedin.git, +TripIt: git://github.com/SpringSource/spring-social-tripit.git, +GitHub: git://github.com/SpringSource/spring-social-github.git, +Gowalla: git://github.com/SpringSource/spring-social-gowalla.git, +, +Each of these projects uses the same build submodule as Spring Social. Thus,, +you'll need to either clone them with the --recursive switch or init/update the, +submodule as described above from Spring Social., +++ b/README, +, +Spring Social is an extension of the Spring Framework that helps you connect your, +applications with Software-as-a-Service (SaaS) providers such as Facebook and Twitter., +, +To get up and running quickly using the project, see the Quickstart:, +https://github.com/SpringSource/spring-social/wiki/Quick-Start, +, +-------------------------------------------------------------------------------, +To get the code and build from source, do the following:, +Once complete, you may then import the projects into Eclipse:, +, +-------------------------------------------------------------------------------, +Note that the core Spring Social project no longer contains provider modules., +Each of the provider modules is now in its own project., +This will enable those modules to progress and release on a separate schedule, +than Spring Social and be able to react more quickly to changes in the provider's, +API without the need to wait for a Spring Social release., +, +The SaaS provider-specific projects can be cloned from the following GitHub URLs:, +, +Twitter: git://github.com/SpringSource/spring-social-twitter.git, +Facebook: git://github.com/SpringSource/spring-social-facebook.git, +LinkedIn: git://github.com/SpringSource/spring-social-linkedin.git, +TripIt: git://github.com/SpringSource/spring-social-tripit.git, +GitHub: git://github.com/SpringSource/spring-social-github.git, +Gowalla: git://github.com/SpringSource/spring-social-gowalla.git, +, +Each of these projects uses the same build submodule as Spring Social. Thus,, +you'll need to either clone them with the --recursive switch or init/update the, +submodule as described above from Spring Social., +++ b/buildSrc, +Subproject commit 308ed0ee908d4e46f0ed4c4494fb44564ba0a6ff, +++ b/README, +, +Spring Social is an extension of the Spring Framework that helps you connect your, +applications with Software-as-a-Service (SaaS) providers such as Facebook and Twitter., +, +To get up and running quickly using the project, see the Quickstart:, +https://github.com/SpringSource/spring-social/wiki/Quick-Start, +, +-------------------------------------------------------------------------------, +To get the code and build from source, do the following:, +Once complete, you may then import the projects into Eclipse:, +, +-------------------------------------------------------------------------------, +Note that the core Spring Social project no longer contains provider modules., +Each of the provider modules is now in its own project., +This will enable those modules to progress and release on a separate schedule, +than Spring Social and be able to react more quickly to changes in the provider's, +API without the need to wait for a Spring Social release., +, +The SaaS provider-specific projects can be cloned from the following GitHub URLs:, +, +Twitter: git://github.com/SpringSource/spring-social-twitter.git, +Facebook: git://github.com/SpringSource/spring-social-facebook.git, +LinkedIn: git://github.com/SpringSource/spring-social-linkedin.git, +TripIt: git://github.com/SpringSource/spring-social-tripit.git, +GitHub: git://github.com/SpringSource/spring-social-github.git, +Gowalla: git://github.com/SpringSource/spring-social-gowalla.git, +, +Each of these projects uses the same build submodule as Spring Social. Thus,, +you'll need to either clone them with the --recursive switch or init/update the, +submodule as described above from Spring Social., +++ b/buildSrc, +Subproject commit 308ed0ee908d4e46f0ed4c4494fb44564ba0a6ff, +++ b/gradlew, +GRADLE_OPTS="$GRADLE_OPTS -Xmx512m", +    echo "${PROGNAME}: $*"]