[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/UsersConnectionRepository.java, +	/**, +	 * The command to execute to create a new local user profile in the event no user id could be mapped to a connection., +	 * Allows for implicitly creating a user profile from connection data during a provider sign-in attempt., +	 * Defaults to null, indicating explicit sign-up will be required to complete the provider sign-in attempt., +	 * @see #findUserIdsWithConnection(Connection), +	 */, +	void setConnectionSignUp(ConnectionSignUp connectionSignUp);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/UsersConnectionRepository.java, +	/**, +	 * The command to execute to create a new local user profile in the event no user id could be mapped to a connection., +	 * Allows for implicitly creating a user profile from connection data during a provider sign-in attempt., +	 * Defaults to null, indicating explicit sign-up will be required to complete the provider sign-in attempt., +	 * @see #findUserIdsWithConnection(Connection), +	 */, +	void setConnectionSignUp(ConnectionSignUp connectionSignUp);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.java, +	@Override, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/UsersConnectionRepository.java, +	/**, +	 * The command to execute to create a new local user profile in the event no user id could be mapped to a connection., +	 * Allows for implicitly creating a user profile from connection data during a provider sign-in attempt., +	 * Defaults to null, indicating explicit sign-up will be required to complete the provider sign-in attempt., +	 * @see #findUserIdsWithConnection(Connection), +	 */, +	void setConnectionSignUp(ConnectionSignUp connectionSignUp);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.java, +	@Override, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/mem/InMemoryConnectionRepository.java, +import java.util.Set;, +		if (connections.isEmpty()) {, +			MultiValueMap<String, Connection<?>> result = new LinkedMultiValueMap<String, Connection<?>>();, +			Set<String> registeredProviderIds = connectionFactoryLocator.registeredProviderIds();, +			for (String registeredProviderId : registeredProviderIds) {, +				result.put(registeredProviderId, Collections.<Connection<?>>emptyList());, +			}, +			return result;, +		} else {, +	}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/UsersConnectionRepository.java, +	/**, +	 * The command to execute to create a new local user profile in the event no user id could be mapped to a connection., +	 * Allows for implicitly creating a user profile from connection data during a provider sign-in attempt., +	 * Defaults to null, indicating explicit sign-up will be required to complete the provider sign-in attempt., +	 * @see #findUserIdsWithConnection(Connection), +	 */, +	void setConnectionSignUp(ConnectionSignUp connectionSignUp);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.java, +	@Override, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/mem/InMemoryConnectionRepository.java, +import java.util.Set;, +		if (connections.isEmpty()) {, +			MultiValueMap<String, Connection<?>> result = new LinkedMultiValueMap<String, Connection<?>>();, +			Set<String> registeredProviderIds = connectionFactoryLocator.registeredProviderIds();, +			for (String registeredProviderId : registeredProviderIds) {, +				result.put(registeredProviderId, Collections.<Connection<?>>emptyList());, +			}, +			return result;, +		} else {, +	}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/mem/InMemoryUsersConnectionRepository.java, +	@Override, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/UsersConnectionRepository.java, +	/**, +	 * The command to execute to create a new local user profile in the event no user id could be mapped to a connection., +	 * Allows for implicitly creating a user profile from connection data during a provider sign-in attempt., +	 * Defaults to null, indicating explicit sign-up will be required to complete the provider sign-in attempt., +	 * @see #findUserIdsWithConnection(Connection), +	 */, +	void setConnectionSignUp(ConnectionSignUp connectionSignUp);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.java, +	@Override, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/mem/InMemoryConnectionRepository.java, +import java.util.Set;, +		if (connections.isEmpty()) {, +			MultiValueMap<String, Connection<?>> result = new LinkedMultiValueMap<String, Connection<?>>();, +			Set<String> registeredProviderIds = connectionFactoryLocator.registeredProviderIds();, +			for (String registeredProviderId : registeredProviderIds) {, +				result.put(registeredProviderId, Collections.<Connection<?>>emptyList());, +			}, +			return result;, +		} else {, +	}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/mem/InMemoryUsersConnectionRepository.java, +	@Override, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/AbstractUsersConnectionRepositoryTest.java, +package org.springframework.social.connect.jdbc;, +, +import static org.hamcrest.Matchers.hasItems;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertThat;, +import static org.junit.Assert.assertTrue;, +, +import java.util.Arrays;, +import java.util.HashSet;, +import java.util.List;, +import java.util.Set;, +, +import org.junit.Before;]