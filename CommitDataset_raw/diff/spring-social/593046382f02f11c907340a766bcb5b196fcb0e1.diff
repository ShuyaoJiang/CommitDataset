[+++ b/src/main/java/org/springframework/social/twitter/TwitterTemplate.java, +		return buildSearchResults(response, tweets);, +	}, +, +	SearchResults buildSearchResults(Map<String, Object> response, List<Tweet> tweets) {, +		Long maxId = response.containsKey("max_id") ? NumberUtils.parseNumber((String) response.get("max_id"),, +				Long.class) : 0;, +		Long sinceId = response.containsKey("since_id") ? NumberUtils.parseNumber((String) response.get("since_id"),, +				Long.class) : 0;, +		return new SearchResults(tweets, maxId, sinceId, response.get("next_page") == null);, +++ b/src/main/java/org/springframework/social/twitter/TwitterTemplate.java, +		return buildSearchResults(response, tweets);, +	}, +, +	SearchResults buildSearchResults(Map<String, Object> response, List<Tweet> tweets) {, +		Long maxId = response.containsKey("max_id") ? NumberUtils.parseNumber((String) response.get("max_id"),, +				Long.class) : 0;, +		Long sinceId = response.containsKey("since_id") ? NumberUtils.parseNumber((String) response.get("since_id"),, +				Long.class) : 0;, +		return new SearchResults(tweets, maxId, sinceId, response.get("next_page") == null);, +++ b/src/test/java/org/springframework/social/twitter/TwitterTemplateTest.java, +import java.util.ArrayList;, +	@Test, +	public void buildSearchResults() {, +		TwitterTemplate twitter = new TwitterTemplate(null);, +		Map<String, Object> response = new HashMap<String, Object>();, +		response.put("max_id", "42");, +		response.put("since_id", "24");, +		response.put("next_page", "NextPage");, +		SearchResults results = twitter.buildSearchResults(response, new ArrayList<Tweet>());, +		assertEquals(42, results.getMaxId());, +		assertEquals(24, results.getSinceId());, +		assertEquals(false, results.isLastPage());, +	}, +, +	@Test, +	public void buildSearchResults_nullNumbers() {, +		TwitterTemplate twitter = new TwitterTemplate(null);, +		Map<String, Object> response = new HashMap<String, Object>();, +		response.put("next_page", "NextPage");, +		SearchResults results = twitter.buildSearchResults(response, new ArrayList<Tweet>());, +		assertEquals(0, results.getMaxId());, +		assertEquals(0, results.getSinceId());, +		assertEquals(false, results.isLastPage());, +	}]