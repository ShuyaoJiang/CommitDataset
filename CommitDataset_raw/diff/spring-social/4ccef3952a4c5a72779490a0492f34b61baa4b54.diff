[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnection.java, +	// mutators, +, +	/**, +	 * Creates a copy of this connection with the local accountId property set to the value provided., +	 */, +	public ServiceProviderConnection<S> assignAccountId(Serializable accountId);, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnection.java, +	// mutators, +, +	/**, +	 * Creates a copy of this connection with the local accountId property set to the value provided., +	 */, +	public ServiceProviderConnection<S> assignAccountId(Serializable accountId);, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRepository.java, +	ServiceProviderConnection<?> saveConnection(ServiceProviderConnection<?> connection);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnection.java, +	// mutators, +, +	/**, +	 * Creates a copy of this connection with the local accountId property set to the value provided., +	 */, +	public ServiceProviderConnection<S> assignAccountId(Serializable accountId);, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRepository.java, +	ServiceProviderConnection<?> saveConnection(ServiceProviderConnection<?> connection);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/JdbcServiceProviderConnectionRepository.java, +	public ServiceProviderConnection<?> saveConnection(ServiceProviderConnection<?> connection) {, +		if (connection.getId() == null) {, +			if (connection.getAccountId() == null) {, +				throw new IllegalArgumentException("Unable to save new connection because it has not been assigned to a local account; call ServiceProviderConnection#assignAccountId(Serializable) before saving");, +			}, +		} else {, +			// TODO, +		}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnection.java, +	// mutators, +, +	/**, +	 * Creates a copy of this connection with the local accountId property set to the value provided., +	 */, +	public ServiceProviderConnection<S> assignAccountId(Serializable accountId);, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRepository.java, +	ServiceProviderConnection<?> saveConnection(ServiceProviderConnection<?> connection);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/JdbcServiceProviderConnectionRepository.java, +	public ServiceProviderConnection<?> saveConnection(ServiceProviderConnection<?> connection) {, +		if (connection.getId() == null) {, +			if (connection.getAccountId() == null) {, +				throw new IllegalArgumentException("Unable to save new connection because it has not been assigned to a local account; call ServiceProviderConnection#assignAccountId(Serializable) before saving");, +			}, +		} else {, +			// TODO, +		}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/ServiceProviderConnectionImpl.java, +	public ServiceProviderConnection<S> assignAccountId(Serializable accountId) {, +		// TODO Auto-generated method stub, +		return null;, +	}, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnection.java, +	// mutators, +, +	/**, +	 * Creates a copy of this connection with the local accountId property set to the value provided., +	 */, +	public ServiceProviderConnection<S> assignAccountId(Serializable accountId);, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRepository.java, +	ServiceProviderConnection<?> saveConnection(ServiceProviderConnection<?> connection);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/JdbcServiceProviderConnectionRepository.java, +	public ServiceProviderConnection<?> saveConnection(ServiceProviderConnection<?> connection) {, +		if (connection.getId() == null) {, +			if (connection.getAccountId() == null) {, +				throw new IllegalArgumentException("Unable to save new connection because it has not been assigned to a local account; call ServiceProviderConnection#assignAccountId(Serializable) before saving");, +			}, +		} else {, +			// TODO, +		}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/ServiceProviderConnectionImpl.java, +	public ServiceProviderConnection<S> assignAccountId(Serializable accountId) {, +		// TODO Auto-generated method stub, +		return null;, +	}, +, +++ b/spring-social-web/src/main/java/org/springframework/social/web/connect/ConnectController.java, +		ServiceProviderConnection<?> connection = connectionFactory.createOAuth1Connection(provider, accessToken).assignAccountId(accountIdExtractor.extractAccountId(request));, +		connection = connectionRepository.saveConnection(connection);	, +		ServiceProviderConnection<?> connection = connectionFactory.createOAuth2Connection(provider, accessGrant).assignAccountId(accountIdExtractor.extractAccountId(request));, +		connection = connectionRepository.saveConnection(connection);]