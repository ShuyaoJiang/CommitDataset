[+++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +import org.springframework.social.twitter.support.CollectionUtils;, +		List<Number> friendIds = (List<Number>) requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return CollectionUtils.asLongList(friendIds);, +		List<Number> friendIds = (List<Number>) requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +		return CollectionUtils.asLongList(friendIds);, +		List<Number> followerIds = (List<Number>) requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return CollectionUtils.asLongList(followerIds);, +		List<Number> followerIds = (List<Number>) requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +		return CollectionUtils.asLongList(followerIds);, +	, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +import org.springframework.social.twitter.support.CollectionUtils;, +		List<Number> friendIds = (List<Number>) requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return CollectionUtils.asLongList(friendIds);, +		List<Number> friendIds = (List<Number>) requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +		return CollectionUtils.asLongList(friendIds);, +		List<Number> followerIds = (List<Number>) requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return CollectionUtils.asLongList(followerIds);, +		List<Number> followerIds = (List<Number>) requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +		return CollectionUtils.asLongList(followerIds);, +	, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/TimelineTemplate.java, +import org.springframework.social.twitter.support.CollectionUtils;, +		List<Number> retweetedByIds = (List<Number>) lowLevelApi.fetchObject("statuses/" + tweetId + "/retweeted_by/ids.json", List.class);, +		return CollectionUtils.asLongList(retweetedByIds);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +import org.springframework.social.twitter.support.CollectionUtils;, +		List<Number> friendIds = (List<Number>) requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return CollectionUtils.asLongList(friendIds);, +		List<Number> friendIds = (List<Number>) requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +		return CollectionUtils.asLongList(friendIds);, +		List<Number> followerIds = (List<Number>) requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return CollectionUtils.asLongList(followerIds);, +		List<Number> followerIds = (List<Number>) requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +		return CollectionUtils.asLongList(followerIds);, +	, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/TimelineTemplate.java, +import org.springframework.social.twitter.support.CollectionUtils;, +		List<Number> retweetedByIds = (List<Number>) lowLevelApi.fetchObject("statuses/" + tweetId + "/retweeted_by/ids.json", List.class);, +		return CollectionUtils.asLongList(retweetedByIds);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/support/CollectionUtils.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.twitter.support;, +, +import java.util.ArrayList;, +import java.util.List;, +, +public class CollectionUtils {, +, +	private CollectionUtils() {}, +	, +	public static List<Long> asLongList(List<Number> friendIdNumbers) {, +		List<Long> friendIds = new ArrayList<Long>(friendIdNumbers.size());, +		for (Number number : friendIdNumbers) {, +			friendIds.add(number.longValue());, +		}, +		return friendIds;, +	}, +, +}, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/FriendTemplate.java, +import org.springframework.social.twitter.support.CollectionUtils;, +		List<Number> friendIds = (List<Number>) requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return CollectionUtils.asLongList(friendIds);, +		List<Number> friendIds = (List<Number>) requestApi.fetchObject("friends/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +		return CollectionUtils.asLongList(friendIds);, +		List<Number> followerIds = (List<Number>) requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("user_id", String.valueOf(userId)));, +		return CollectionUtils.asLongList(followerIds);, +		List<Number> followerIds = (List<Number>) requestApi.fetchObject("followers/ids.json", List.class, Collections.singletonMap("screen_name", screenName));, +		return CollectionUtils.asLongList(followerIds);, +	, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/TimelineTemplate.java, +import org.springframework.social.twitter.support.CollectionUtils;, +		List<Number> retweetedByIds = (List<Number>) lowLevelApi.fetchObject("statuses/" + tweetId + "/retweeted_by/ids.json", List.class);, +		return CollectionUtils.asLongList(retweetedByIds);, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/support/CollectionUtils.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *]