[+++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/EnableJdbcConnectionRepository.java, +import org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository;, +/**, + * Annotation to enable JDBC-based persistence of connections., + * Configures a singleton {@link JdbcUsersConnectionRepository} and a request-scoped JdbcConnectionRepository. , + * @author Craig Walls, + */, +	/**, +	 * The ID to assign to the ConnectionRepository bean., +	 * Defaults to "connectionRepository". , +	 */, +	/**, +	 * The ID to assign to the UsersConnectionRepository bean., +	 * Defaults to "usersConnectionRepository". , +	 */, +	/**, +	 * The ID of the ConnectionFactoryLocator bean to fetch a ConnectionFactory from when creating/persisting connections., +	 * Defaults to "connectionFactoryLocator". , +	 */, +	/**, +	 * The ID of a DataSource for accessing the database., +	 * Defaults to "dataSource". , +	 */, +	/**, +	 * The ID of a TextEncryptor used when persisting connection details., +	 * Defaults to "textEncryptor". , +	 */, +	/**, +	 * The ID of a UserIdSource bean used to determine the unique identifier of the current user., +	 * Defaults to "userIdSource". , +	 */, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/EnableJdbcConnectionRepository.java, +import org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository;, +/**, + * Annotation to enable JDBC-based persistence of connections., + * Configures a singleton {@link JdbcUsersConnectionRepository} and a request-scoped JdbcConnectionRepository. , + * @author Craig Walls, + */, +	/**, +	 * The ID to assign to the ConnectionRepository bean., +	 * Defaults to "connectionRepository". , +	 */, +	/**, +	 * The ID to assign to the UsersConnectionRepository bean., +	 * Defaults to "usersConnectionRepository". , +	 */, +	/**, +	 * The ID of the ConnectionFactoryLocator bean to fetch a ConnectionFactory from when creating/persisting connections., +	 * Defaults to "connectionFactoryLocator". , +	 */, +	/**, +	 * The ID of a DataSource for accessing the database., +	 * Defaults to "dataSource". , +	 */, +	/**, +	 * The ID of a TextEncryptor used when persisting connection details., +	 * Defaults to "textEncryptor". , +	 */, +	/**, +	 * The ID of a UserIdSource bean used to determine the unique identifier of the current user., +	 * Defaults to "userIdSource". , +	 */, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/JdbcConnectionRepositoryRegistrar.java, +/**, + * {@link ImportBeanDefinitionRegistrar} to enable {@link EnableJdbcConnectionRepository} annotation., + * @author Craig Walls, + */, +class JdbcConnectionRepositoryRegistrar extends JdbcConnectionRepositoryConfigSupport implements ImportBeanDefinitionRegistrar {, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/EnableJdbcConnectionRepository.java, +import org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository;, +/**, + * Annotation to enable JDBC-based persistence of connections., + * Configures a singleton {@link JdbcUsersConnectionRepository} and a request-scoped JdbcConnectionRepository. , + * @author Craig Walls, + */, +	/**, +	 * The ID to assign to the ConnectionRepository bean., +	 * Defaults to "connectionRepository". , +	 */, +	/**, +	 * The ID to assign to the UsersConnectionRepository bean., +	 * Defaults to "usersConnectionRepository". , +	 */, +	/**, +	 * The ID of the ConnectionFactoryLocator bean to fetch a ConnectionFactory from when creating/persisting connections., +	 * Defaults to "connectionFactoryLocator". , +	 */, +	/**, +	 * The ID of a DataSource for accessing the database., +	 * Defaults to "dataSource". , +	 */, +	/**, +	 * The ID of a TextEncryptor used when persisting connection details., +	 * Defaults to "textEncryptor". , +	 */, +	/**, +	 * The ID of a UserIdSource bean used to determine the unique identifier of the current user., +	 * Defaults to "userIdSource". , +	 */, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/JdbcConnectionRepositoryRegistrar.java]