[+++ b/build.gradle, +        classpath('io.spring.gradle:spring-io-plugin:0.0.4.RELEASE'), +        dependencyManagement {, +            springIoTestRuntime {, +                imports {, +                    mavenBom "io.spring.platform:platform-bom:${platformVersion}", +                }, +            }, +++ b/build.gradle, +        classpath('io.spring.gradle:spring-io-plugin:0.0.4.RELEASE'), +        dependencyManagement {, +            springIoTestRuntime {, +                imports {, +                    mavenBom "io.spring.platform:platform-bom:${platformVersion}", +                }, +            }, +++ b/docs/manual/src/asciidoc/index.adoc, +    accessToken varchar(512) not null,, +    secret varchar(512),, +    refreshToken varchar(512),, +To prepopulate the sign up form, you can fetch the user profile data from a connection retrieved from `ProviderSignInUtils#getConnection()`., +@Autowired, +ProviderSignInUtils providerSignInUtils;, +, +    Connection<?> connection = providerSignInUtils.getConnection(request);, +If `ProviderSignInUtils#getConnection()` returns a connection, that means there was a failed provider sign in attempt that can be completed if the user registers to the application. , +To complete the connection call `ProviderSignInUtils#doPostSignUp()`. , +For example, the following method handles the sign up form submission, creates an account and then calls `ProviderSignInUtils#doPostSignUp()` to complete the connection:, +        ProviderSignInUtils.doPostSignUp(account.getUsername(), request);, +++ b/build.gradle, +        classpath('io.spring.gradle:spring-io-plugin:0.0.4.RELEASE'), +        dependencyManagement {, +            springIoTestRuntime {, +                imports {, +                    mavenBom "io.spring.platform:platform-bom:${platformVersion}", +                }, +            }, +++ b/docs/manual/src/asciidoc/index.adoc, +    accessToken varchar(512) not null,, +    secret varchar(512),, +    refreshToken varchar(512),, +To prepopulate the sign up form, you can fetch the user profile data from a connection retrieved from `ProviderSignInUtils#getConnection()`., +@Autowired, +ProviderSignInUtils providerSignInUtils;, +, +    Connection<?> connection = providerSignInUtils.getConnection(request);, +If `ProviderSignInUtils#getConnection()` returns a connection, that means there was a failed provider sign in attempt that can be completed if the user registers to the application. , +To complete the connection call `ProviderSignInUtils#doPostSignUp()`. , +For example, the following method handles the sign up form submission, creates an account and then calls `ProviderSignInUtils#doPostSignUp()` to complete the connection:, +        ProviderSignInUtils.doPostSignUp(account.getUsername(), request);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/UserProfile.java, +	public static final UserProfile EMPTY = new UserProfile(null, null, null, null, null, null);, +, +	private final String id;, +	public UserProfile(String id, String name, String firstName, String lastName, String email, String username) {, +		this.id = id;, +		this.name = name;, +		this.firstName = firstName;, +		this.lastName = lastName;, +		this.email = email;, +		this.username = username;, +	}, +, +	/**, +	 * The user's id in the provider, +	 * May be null if not exposed/supported by the provider., +	 * @return the user's id in the provider, +	 */, +	public String getId() {, +		return id;, +	}, +, +++ b/build.gradle, +        classpath('io.spring.gradle:spring-io-plugin:0.0.4.RELEASE'), +        dependencyManagement {, +            springIoTestRuntime {, +                imports {, +                    mavenBom "io.spring.platform:platform-bom:${platformVersion}", +                }, +            }, +++ b/docs/manual/src/asciidoc/index.adoc, +    accessToken varchar(512) not null,, +    secret varchar(512),, +    refreshToken varchar(512),, +To prepopulate the sign up form, you can fetch the user profile data from a connection retrieved from `ProviderSignInUtils#getConnection()`., +@Autowired, +ProviderSignInUtils providerSignInUtils;, +, +    Connection<?> connection = providerSignInUtils.getConnection(request);, +If `ProviderSignInUtils#getConnection()` returns a connection, that means there was a failed provider sign in attempt that can be completed if the user registers to the application. , +To complete the connection call `ProviderSignInUtils#doPostSignUp()`. , +For example, the following method handles the sign up form submission, creates an account and then calls `ProviderSignInUtils#doPostSignUp()` to complete the connection:, +        ProviderSignInUtils.doPostSignUp(account.getUsername(), request);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/UserProfile.java, +	public static final UserProfile EMPTY = new UserProfile(null, null, null, null, null, null);, +, +	private final String id;, +	public UserProfile(String id, String name, String firstName, String lastName, String email, String username) {, +		this.id = id;, +		this.name = name;]