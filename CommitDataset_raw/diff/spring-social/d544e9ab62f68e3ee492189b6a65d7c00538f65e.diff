[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth2ConnectionFactory.java, +import java.util.UUID;, +, +	 * Generates a value for the state parameter., +	 * @return a random UUID by default. , +	 */, +	public String generateState() {, +		return UUID.randomUUID().toString();, +	}, +, +	/**, +	 * Indicates that this provider supports the state parameter in callbacks to prevent against CSRF., +	 * Default implementation returns true. , +	 */, +	public boolean supportsStateParameter() {, +		return true;, +	}, +, +	/**, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth2ConnectionFactory.java, +import java.util.UUID;, +, +	 * Generates a value for the state parameter., +	 * @return a random UUID by default. , +	 */, +	public String generateState() {, +		return UUID.randomUUID().toString();, +	}, +, +	/**, +	 * Indicates that this provider supports the state parameter in callbacks to prevent against CSRF., +	 * Default implementation returns true. , +	 */, +	public boolean supportsStateParameter() {, +		return true;, +	}, +, +	/**, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AbstractOAuth2ServiceProvider.java, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth2ConnectionFactory.java, +import java.util.UUID;, +, +	 * Generates a value for the state parameter., +	 * @return a random UUID by default. , +	 */, +	public String generateState() {, +		return UUID.randomUUID().toString();, +	}, +, +	/**, +	 * Indicates that this provider supports the state parameter in callbacks to prevent against CSRF., +	 * Default implementation returns true. , +	 */, +	public boolean supportsStateParameter() {, +		return true;, +	}, +, +	/**, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AbstractOAuth2ServiceProvider.java, +, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectSupport.java, +		if (connectionFactory.supportsStateParameter()) {, +			verifyStateParameter(request);, +		}, +		, +	private void verifyStateParameter(NativeWebRequest request) {, +		String state = request.getParameter("state");, +		String originalState = extractCachedOAuth2State(request);, +		if (state != null && !state.equals(originalState)) {, +			throw new IllegalStateException("The OAuth2 'state' parameter doesn't match.");, +		}, +	}, +, +		String state = connectionFactory.generateState();, +		parameters.add("state", state);, +		request.setAttribute(OAUTH2_STATE_ATTRIBUTE, state, RequestAttributes.SCOPE_SESSION);, +	private String extractCachedOAuth2State(WebRequest request) {, +		String state = (String) request.getAttribute(OAUTH2_STATE_ATTRIBUTE, RequestAttributes.SCOPE_SESSION);, +		request.removeAttribute(OAUTH2_STATE_ATTRIBUTE, RequestAttributes.SCOPE_SESSION);, +		return state;		, +	}, +	, +	private static final String OAUTH2_STATE_ATTRIBUTE = "oauth2State";, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/OAuth2ConnectionFactory.java, +import java.util.UUID;, +, +	 * Generates a value for the state parameter., +	 * @return a random UUID by default. , +	 */, +	public String generateState() {, +		return UUID.randomUUID().toString();, +	}, +]