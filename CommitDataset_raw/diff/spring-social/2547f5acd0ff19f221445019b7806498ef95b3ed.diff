[+++ b/samples/facebook-showcase/pom.xml, +		<org.springframework-version>3.1.0.BUILD-SNAPSHOT</org.springframework-version>, +++ b/samples/facebook-showcase/pom.xml, +		<org.springframework-version>3.1.0.BUILD-SNAPSHOT</org.springframework-version>, +++ b/samples/github-showcase/pom.xml, +		<org.springframework-version>3.1.0.BUILD-SNAPSHOT</org.springframework-version>, +++ b/samples/facebook-showcase/pom.xml, +		<org.springframework-version>3.1.0.BUILD-SNAPSHOT</org.springframework-version>, +++ b/samples/github-showcase/pom.xml, +		<org.springframework-version>3.1.0.BUILD-SNAPSHOT</org.springframework-version>, +++ b/samples/gowalla-showcase/pom.xml, +		<org.springframework-version>3.1.0.BUILD-SNAPSHOT</org.springframework-version>, +++ b/samples/facebook-showcase/pom.xml, +		<org.springframework-version>3.1.0.BUILD-SNAPSHOT</org.springframework-version>, +++ b/samples/github-showcase/pom.xml, +		<org.springframework-version>3.1.0.BUILD-SNAPSHOT</org.springframework-version>, +++ b/samples/gowalla-showcase/pom.xml, +		<org.springframework-version>3.1.0.BUILD-SNAPSHOT</org.springframework-version>, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +import java.util.List;, +import org.springframework.http.MediaType;, +import org.springframework.http.converter.FormHttpMessageConverter;, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +		addTextToMapMessageConverter();, +		MultiValueMap<String, String> requestParameters = new LinkedMultiValueMap<String, String>();, +		requestParameters.set("client_id", clientId);, +		requestParameters.set("client_secret", clientSecret);, +		requestParameters.set("code", authorizationCode);, +		requestParameters.set("redirect_uri", redirectUri);, +		requestParameters.set("grant_type", "authorization_code");, +		Map<String, ?> result = getRestOperations().postForObject(accessTokenUrl, requestParameters, Map.class);, +		return new AccessGrant(valueOf(result.get("access_token")), valueOf(result.get("refresh_token")));, +	, +	// private helpers, +	// TODO : Can probably tweak RestTemplate's message converters to deal with this better., +	private String valueOf(Object object) {, +		if (object == null) {, +			return null;, +		} else if (object instanceof List) {, +			List list = (List) object;, +			if (list.size() > 0) {, +				return String.valueOf(list.get(0));, +			}, +			return null;, +		}, +		return String.valueOf(object);, +	}, +, +	/*, +	 * Facebook returns form-encoded results with a content type of "text/plain". The "text/plain" content type prevents, +	 * any of the default encoders from being able to parse the results, even though FormHttpMessageConverter is, +	 * perfectly capable of doing so. This method adds another FormHttpMessageConverter that can read "text/plain" into, +	 * a Map so that this works for Facebook., +	 */, +	private void addTextToMapMessageConverter() {, +		FormHttpMessageConverter messageConverter = new FormHttpMessageConverter() {, +			public boolean canRead(Class<?> clazz, MediaType mediaType) {, +				return clazz.equals(Map.class) && mediaType != null && mediaType.getType().equals("text"), +						&& mediaType.getSubtype().equals("plain");, +			}, +		};, +		restTemplate.getMessageConverters().add(messageConverter);, +	}]