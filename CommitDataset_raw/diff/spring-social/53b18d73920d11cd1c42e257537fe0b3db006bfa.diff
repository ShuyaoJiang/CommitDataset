[+++ b/build.gradle, +    , +        compile project(':spring-social-client'), +        compile project(':spring-social-oauth'), +++ b/build.gradle, +    , +        compile project(':spring-social-client'), +        compile project(':spring-social-oauth'), +++ b/spring-social-client/src/main/java/org/springframework/social/provider/ServiceProvider.java, +	 * A label suitable for display in a UI, typically used to inform the user which service providers he or she has connected with / may connect with. e.g. Twitter., +	 */, +	String getDisplayName();, +, +	/**, +++ b/build.gradle, +    , +        compile project(':spring-social-client'), +        compile project(':spring-social-oauth'), +++ b/spring-social-client/src/main/java/org/springframework/social/provider/ServiceProvider.java, +	 * A label suitable for display in a UI, typically used to inform the user which service providers he or she has connected with / may connect with. e.g. Twitter., +	 */, +	String getDisplayName();, +, +	/**, +++ /dev/null, +++ b/build.gradle, +    , +        compile project(':spring-social-client'), +        compile project(':spring-social-oauth'), +++ b/spring-social-client/src/main/java/org/springframework/social/provider/ServiceProvider.java, +	 * A label suitable for display in a UI, typically used to inform the user which service providers he or she has connected with / may connect with. e.g. Twitter., +	 */, +	String getDisplayName();, +, +	/**, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +    , +        compile project(':spring-social-client'), +        compile project(':spring-social-oauth'), +++ b/spring-social-client/src/main/java/org/springframework/social/provider/ServiceProvider.java, +	 * A label suitable for display in a UI, typically used to inform the user which service providers he or she has connected with / may connect with. e.g. Twitter., +	 */, +	String getDisplayName();, +, +	/**, +++ /dev/null, +++ /dev/null, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/jdbc/package-info.java, +/**, + * JDBC-based implementations of the service provider APIs, supporting storage of provider and connection details in, + * a RDBMS., + */, +package org.springframework.social.provider.jdbc;, +, +++ b/build.gradle, +    , +        compile project(':spring-social-client'), +        compile project(':spring-social-oauth'), +++ b/spring-social-client/src/main/java/org/springframework/social/provider/ServiceProvider.java, +	 * A label suitable for display in a UI, typically used to inform the user which service providers he or she has connected with / may connect with. e.g. Twitter., +	 */, +	String getDisplayName();, +, +	/**, +++ /dev/null, +++ /dev/null, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/jdbc/package-info.java, +/**, + * JDBC-based implementations of the service provider APIs, supporting storage of provider and connection details in, + * a RDBMS., + */, +package org.springframework.social.provider.jdbc;, +, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth1/AbstractOAuth1ServiceProvider.java, +	public AbstractOAuth1ServiceProvider(String id, String displayName, ConnectionRepository connectionRepository, , +		super(id, displayName, connectionRepository);, +++ b/build.gradle, +    , +        compile project(':spring-social-client'), +        compile project(':spring-social-oauth'), +++ b/spring-social-client/src/main/java/org/springframework/social/provider/ServiceProvider.java, +	 * A label suitable for display in a UI, typically used to inform the user which service providers he or she has connected with / may connect with. e.g. Twitter., +	 */, +	String getDisplayName();, +, +	/**, +++ /dev/null, +++ /dev/null, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/jdbc/package-info.java, +/**, + * JDBC-based implementations of the service provider APIs, supporting storage of provider and connection details in, + * a RDBMS., + */, +package org.springframework.social.provider.jdbc;, +, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth1/AbstractOAuth1ServiceProvider.java, +	public AbstractOAuth1ServiceProvider(String id, String displayName, ConnectionRepository connectionRepository, , +		super(id, displayName, connectionRepository);]