[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/providers/FacebookServiceProvider.java, +/*, + * Copyright 2010 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.connect.providers;, +, +import org.springframework.social.connect.AbstractServiceProvider;, +import org.springframework.social.connect.AccountConnectionRepository;, +import org.springframework.social.connect.OAuthToken;, +import org.springframework.social.connect.ServiceProviderParameters;, +import org.springframework.social.facebook.FacebookOperations;, +import org.springframework.social.facebook.FacebookTemplate;, +, +/**, + * Facebook ServiceProvider implementation., + * @author Keith Donald, + */, +public final class FacebookServiceProvider extends AbstractServiceProvider<FacebookOperations> {, +	, +	public FacebookServiceProvider(ServiceProviderParameters parameters, AccountConnectionRepository connectionRepository) {, +		super(parameters, connectionRepository);, +	}, +, +	protected FacebookOperations createServiceOperations(OAuthToken accessToken) {, +		if (accessToken == null) {, +			throw new IllegalStateException("Cannot access Facebook without an access token");, +		}, +		return new FacebookTemplate(accessToken.getValue());, +	}, +, +	protected String fetchProviderAccountId(FacebookOperations facebook) {, +		return facebook.getProfileId();, +	}, +, +	protected String buildProviderProfileUrl(String facebookId, FacebookOperations facebook) {, +		return "http://www.facebook.com/profile.php?id=" + facebookId;, +	}, +, +}, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/providers/FacebookServiceProvider.java, +/*, + * Copyright 2010 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.connect.providers;, +, +import org.springframework.social.connect.AbstractServiceProvider;, +import org.springframework.social.connect.AccountConnectionRepository;, +import org.springframework.social.connect.OAuthToken;, +import org.springframework.social.connect.ServiceProviderParameters;, +import org.springframework.social.facebook.FacebookOperations;, +import org.springframework.social.facebook.FacebookTemplate;, +, +/**, + * Facebook ServiceProvider implementation., + * @author Keith Donald, + */, +public final class FacebookServiceProvider extends AbstractServiceProvider<FacebookOperations> {, +	, +	public FacebookServiceProvider(ServiceProviderParameters parameters, AccountConnectionRepository connectionRepository) {, +		super(parameters, connectionRepository);, +	}, +, +	protected FacebookOperations createServiceOperations(OAuthToken accessToken) {, +		if (accessToken == null) {, +			throw new IllegalStateException("Cannot access Facebook without an access token");, +		}, +		return new FacebookTemplate(accessToken.getValue());, +	}, +, +	protected String fetchProviderAccountId(FacebookOperations facebook) {, +		return facebook.getProfileId();, +	}, +, +	protected String buildProviderProfileUrl(String facebookId, FacebookOperations facebook) {, +		return "http://www.facebook.com/profile.php?id=" + facebookId;, +	}]