[+++ b/spring-social-web/src/main/java/org/springframework/social/web/connect/AccountIdExtractor.java, +package org.springframework.social.web.connect;, +, +import java.io.Serializable;, +, +import org.springframework.web.context.request.WebRequest;, +, +/**, + * Strategy interface used by ConnectController to determine the account ID of the user for purposes of creating connections., + * @author Craig Walls, + */, +public interface AccountIdExtractor {, +, +	/**, +	 * Extracts an account ID from the web request., +	 */, +	Serializable extractAccountId(WebRequest request);, +}, +++ b/spring-social-web/src/main/java/org/springframework/social/web/connect/AccountIdExtractor.java, +package org.springframework.social.web.connect;, +, +import java.io.Serializable;, +, +import org.springframework.web.context.request.WebRequest;, +, +/**, + * Strategy interface used by ConnectController to determine the account ID of the user for purposes of creating connections., + * @author Craig Walls, + */, +public interface AccountIdExtractor {, +, +	/**, +	 * Extracts an account ID from the web request., +	 */, +	Serializable extractAccountId(WebRequest request);, +}, +++ b/spring-social-web/src/main/java/org/springframework/social/web/connect/ConnectController.java, +	private final AccountIdExtractor accountIdExtractor;, +, +	public ConnectController(String applicationUrl, AccountIdExtractor accountIdExtractor) {, +		this.accountIdExtractor = accountIdExtractor;, +	public String connect(@PathVariable String providerId, WebRequest request) {, +		if (getServiceProvider(providerId).isConnected(accountIdExtractor.extractAccountId(request))) {, +		ServiceProviderConnection<?> connection = provider.connect(accountIdExtractor.extractAccountId(request), accessToken);, +		ServiceProviderConnection<?> connection = provider.connect(accountIdExtractor.extractAccountId(request), accessGrant);, +	public String disconnect(@PathVariable String providerId, WebRequest request) {, +		List<ServiceProviderConnection> connections = provider.getConnections(accountIdExtractor.extractAccountId(request));]