[+++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/UserApi.java, +	 * Retrieves the authenticated user's Twitter ID., +	 * @return the user's ID at Twitter, +	long getProfileId();, +	, +	/**, +	 * Retrieves the authenticated user's Twitter screen name, +	 * @return the user's screen name, +	 */, +	String getScreenName();, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/UserApi.java, +	 * Retrieves the authenticated user's Twitter ID., +	 * @return the user's ID at Twitter, +	long getProfileId();, +	, +	/**, +	 * Retrieves the authenticated user's Twitter screen name, +	 * @return the user's screen name, +	 */, +	String getScreenName();, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/support/UserApiImpl.java, +	public long getProfileId() {, +		Map<?, ?> response = restTemplate.getForObject(VERIFY_CREDENTIALS_URL, Map.class);, +		return Long.valueOf(String.valueOf(response.get("id")));, +	}, +, +	public String getScreenName() {, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/UserApi.java, +	 * Retrieves the authenticated user's Twitter ID., +	 * @return the user's ID at Twitter, +	long getProfileId();, +	, +	/**, +	 * Retrieves the authenticated user's Twitter screen name, +	 * @return the user's screen name, +	 */, +	String getScreenName();, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/support/UserApiImpl.java, +	public long getProfileId() {, +		Map<?, ?> response = restTemplate.getForObject(VERIFY_CREDENTIALS_URL, Map.class);, +		return Long.valueOf(String.valueOf(response.get("id")));, +	}, +, +	public String getScreenName() {, +++ b/spring-social-twitter/src/test/java/org/springframework/social/twitter/UserApiImplTest.java, +		assertEquals(7078572, twitter.userApi().getProfileId());, +	}, +, +	@Test, +	public void getScreenName() {, +		responseHeaders.setContentType(MediaType.APPLICATION_JSON);, +		mockServer.expect(requestTo("https://api.twitter.com/1/account/verify_credentials.json")), +				.andExpect(method(GET)), +				.andRespond(withResponse(new ClassPathResource("verify-credentials.json", getClass()), responseHeaders));, +		assertEquals("habuma", twitter.userApi().getScreenName());, +		mockServer.expect(requestTo("https://api.twitter.com/1/users/show.json?user_id=7078572")), +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/UserApi.java, +	 * Retrieves the authenticated user's Twitter ID., +	 * @return the user's ID at Twitter, +	long getProfileId();, +	, +	/**, +	 * Retrieves the authenticated user's Twitter screen name, +	 * @return the user's screen name, +	 */, +	String getScreenName();, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/support/UserApiImpl.java, +	public long getProfileId() {, +		Map<?, ?> response = restTemplate.getForObject(VERIFY_CREDENTIALS_URL, Map.class);, +		return Long.valueOf(String.valueOf(response.get("id")));, +	}, +, +	public String getScreenName() {, +++ b/spring-social-twitter/src/test/java/org/springframework/social/twitter/UserApiImplTest.java, +		assertEquals(7078572, twitter.userApi().getProfileId());, +	}, +, +	@Test, +	public void getScreenName() {, +		responseHeaders.setContentType(MediaType.APPLICATION_JSON);, +		mockServer.expect(requestTo("https://api.twitter.com/1/account/verify_credentials.json")), +				.andExpect(method(GET)), +				.andRespond(withResponse(new ClassPathResource("verify-credentials.json", getClass()), responseHeaders));, +		assertEquals("habuma", twitter.userApi().getScreenName());, +		mockServer.expect(requestTo("https://api.twitter.com/1/users/show.json?user_id=7078572")), +++ b/spring-social-twitter/src/test/java/org/springframework/social/twitter/verify-credentials.json, +{ , +	"id" : 7078572,, +	"screen_name" : "habuma" , +}]