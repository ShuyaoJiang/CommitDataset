[+++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/SigningSupport.java, +		String key = oauthEncode(consumerSecret) + "&" + (tokenSecret != null ? oauthEncode(tokenSecret) : "");, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/SigningSupport.java, +		String key = oauthEncode(consumerSecret) + "&" + (tokenSecret != null ? oauthEncode(tokenSecret) : "");, +++ b/spring-social-core/src/test/java/org/springframework/social/oauth1/SigningSupportTest.java, +	@Test, +	public void buildAuthorizationHeaderValue_oauthEncodedSecrets() throws Exception {, +		SigningSupport signingUtils = new SigningSupport();, +		signingUtils.setTimestampGenerator(new MockTimestampGenerator(123456789, 987654321));, +		URI uri = URIBuilder.fromUri("http://example.com/request").queryParam("b5", "=%3D").queryParam("a3", "a").queryParam("c@", ""), +			.queryParam("a2", "r b").build();, +		HttpRequest request = new SimpleClientHttpRequestFactory().createRequest(uri, HttpMethod.POST);, +		request.getHeaders().setContentType(MediaType.APPLICATION_FORM_URLENCODED);, +		String authorizationHeader = signingUtils.buildAuthorizationHeaderValue(request, "c2&a3=2+q".getBytes(), new OAuth1Credentials("9djdj82h48djs9d2", "con+sumer=secret", "kkk9d7dh3k39sjv7", "token+secret="));, +		assertAuthorizationHeader(authorizationHeader, "7VuTmiewi5yudNuXhlZvT1UI53w%3D");, +	}, +]