[+++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/AbstractServiceProviderElementParser.java, +			String consumerKey, String consumerSecret, String connectionRepositoryBean) {, +		providerBeanBuilder.addConstructorArgValue(consumerKey);, +		providerBeanBuilder.addConstructorArgValue(consumerSecret);, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/AbstractServiceProviderElementParser.java, +			String consumerKey, String consumerSecret, String connectionRepositoryBean) {, +		providerBeanBuilder.addConstructorArgValue(consumerKey);, +		providerBeanBuilder.addConstructorArgValue(consumerSecret);, +++ /dev/null, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/AbstractServiceProviderElementParser.java, +			String consumerKey, String consumerSecret, String connectionRepositoryBean) {, +		providerBeanBuilder.addConstructorArgValue(consumerKey);, +		providerBeanBuilder.addConstructorArgValue(consumerSecret);, +++ /dev/null, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/FacebookProviderElementParser.java, +		return registerServiceProviderBean(parserContext, name, FacebookServiceProvider.class.getName(),, +				element.getAttribute("consumer-key"), element.getAttribute("consumer-secret"),, +				element.getAttribute("connection-repository"));, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/AbstractServiceProviderElementParser.java, +			String consumerKey, String consumerSecret, String connectionRepositoryBean) {, +		providerBeanBuilder.addConstructorArgValue(consumerKey);, +		providerBeanBuilder.addConstructorArgValue(consumerSecret);, +++ /dev/null, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/FacebookProviderElementParser.java, +		return registerServiceProviderBean(parserContext, name, FacebookServiceProvider.class.getName(),, +				element.getAttribute("consumer-key"), element.getAttribute("consumer-secret"),, +				element.getAttribute("connection-repository"));, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/GitHubProviderElementParser.java, +		return registerServiceProviderBean(parserContext, name, GitHubServiceProvider.class.getName(),, +				element.getAttribute("consumer-key"), element.getAttribute("consumer-secret"),, +				element.getAttribute("connection-repository"));, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/AbstractServiceProviderElementParser.java, +			String consumerKey, String consumerSecret, String connectionRepositoryBean) {, +		providerBeanBuilder.addConstructorArgValue(consumerKey);, +		providerBeanBuilder.addConstructorArgValue(consumerSecret);, +++ /dev/null, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/FacebookProviderElementParser.java, +		return registerServiceProviderBean(parserContext, name, FacebookServiceProvider.class.getName(),, +				element.getAttribute("consumer-key"), element.getAttribute("consumer-secret"),, +				element.getAttribute("connection-repository"));, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/GitHubProviderElementParser.java, +		return registerServiceProviderBean(parserContext, name, GitHubServiceProvider.class.getName(),, +				element.getAttribute("consumer-key"), element.getAttribute("consumer-secret"),, +				element.getAttribute("connection-repository"));, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/GowallaProviderElementParser.java, +		return registerServiceProviderBean(parserContext, name, GowallaServiceProvider.class.getName(),, +				element.getAttribute("consumer-key"), element.getAttribute("consumer-secret"),, +				element.getAttribute("connection-repository"));, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/AbstractServiceProviderElementParser.java, +			String consumerKey, String consumerSecret, String connectionRepositoryBean) {, +		providerBeanBuilder.addConstructorArgValue(consumerKey);, +		providerBeanBuilder.addConstructorArgValue(consumerSecret);, +++ /dev/null, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/FacebookProviderElementParser.java, +		return registerServiceProviderBean(parserContext, name, FacebookServiceProvider.class.getName(),, +				element.getAttribute("consumer-key"), element.getAttribute("consumer-secret"),, +				element.getAttribute("connection-repository"));, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/GitHubProviderElementParser.java, +		return registerServiceProviderBean(parserContext, name, GitHubServiceProvider.class.getName(),, +				element.getAttribute("consumer-key"), element.getAttribute("consumer-secret"),, +				element.getAttribute("connection-repository"));, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/GowallaProviderElementParser.java, +		return registerServiceProviderBean(parserContext, name, GowallaServiceProvider.class.getName(),, +				element.getAttribute("consumer-key"), element.getAttribute("consumer-secret"),, +				element.getAttribute("connection-repository"));, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/JdbcConnectionRepositoryElementParser.java, +import org.springframework.security.crypto.encrypt.Encryptors;, +import org.springframework.social.provider.jdbc.JdbcConnectionRepository;, +.genericBeanDefinition(JdbcConnectionRepository.class);, +			beanBuilder.addConstructorArgValue(Encryptors.noOpText());, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/AbstractServiceProviderElementParser.java, +			String consumerKey, String consumerSecret, String connectionRepositoryBean) {, +		providerBeanBuilder.addConstructorArgValue(consumerKey);, +		providerBeanBuilder.addConstructorArgValue(consumerSecret);, +++ /dev/null, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/FacebookProviderElementParser.java, +		return registerServiceProviderBean(parserContext, name, FacebookServiceProvider.class.getName(),, +				element.getAttribute("consumer-key"), element.getAttribute("consumer-secret"),, +				element.getAttribute("connection-repository"));, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/GitHubProviderElementParser.java, +		return registerServiceProviderBean(parserContext, name, GitHubServiceProvider.class.getName(),, +				element.getAttribute("consumer-key"), element.getAttribute("consumer-secret"),, +				element.getAttribute("connection-repository"));, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/GowallaProviderElementParser.java, +		return registerServiceProviderBean(parserContext, name, GowallaServiceProvider.class.getName(),, +				element.getAttribute("consumer-key"), element.getAttribute("consumer-secret"),, +				element.getAttribute("connection-repository"));, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/JdbcConnectionRepositoryElementParser.java, +import org.springframework.security.crypto.encrypt.Encryptors;, +import org.springframework.social.provider.jdbc.JdbcConnectionRepository;, +.genericBeanDefinition(JdbcConnectionRepository.class);, +			beanBuilder.addConstructorArgValue(Encryptors.noOpText());, +++ /dev/null, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/AbstractServiceProviderElementParser.java, +			String consumerKey, String consumerSecret, String connectionRepositoryBean) {, +		providerBeanBuilder.addConstructorArgValue(consumerKey);, +		providerBeanBuilder.addConstructorArgValue(consumerSecret);, +++ /dev/null, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/FacebookProviderElementParser.java, +		return registerServiceProviderBean(parserContext, name, FacebookServiceProvider.class.getName(),]