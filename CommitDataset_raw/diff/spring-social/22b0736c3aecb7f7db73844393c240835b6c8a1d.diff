[+++ b/spring-social-core/src/main/java/org/springframework/social/ApiException.java, +	public ApiException(String message) {, +	public ApiException(String message, Throwable cause) {, +++ b/spring-social-core/src/main/java/org/springframework/social/ApiException.java, +	public ApiException(String message) {, +	public ApiException(String message, Throwable cause) {, +++ b/spring-social-core/src/main/java/org/springframework/social/DuplicateStatusException.java, +import org.springframework.social.OperationNotPermittedException;, +	public DuplicateStatusException(String message) {, +		super(message);, +++ b/spring-social-core/src/main/java/org/springframework/social/ApiException.java, +	public ApiException(String message) {, +	public ApiException(String message, Throwable cause) {, +++ b/spring-social-core/src/main/java/org/springframework/social/DuplicateStatusException.java, +import org.springframework.social.OperationNotPermittedException;, +	public DuplicateStatusException(String message) {, +		super(message);, +++ b/spring-social-core/src/main/java/org/springframework/social/ExpiredAuthorizationException.java, +	public ExpiredAuthorizationException() {, +		super("The authorization has expired.");, +++ b/spring-social-core/src/main/java/org/springframework/social/ApiException.java, +	public ApiException(String message) {, +	public ApiException(String message, Throwable cause) {, +++ b/spring-social-core/src/main/java/org/springframework/social/DuplicateStatusException.java, +import org.springframework.social.OperationNotPermittedException;, +	public DuplicateStatusException(String message) {, +		super(message);, +++ b/spring-social-core/src/main/java/org/springframework/social/ExpiredAuthorizationException.java, +	public ExpiredAuthorizationException() {, +		super("The authorization has expired.");, +++ b/spring-social-core/src/main/java/org/springframework/social/InsufficientPermissionException.java, +	public InsufficientPermissionException() {, +		super("Insufficient permission for this operation.");, +	public InsufficientPermissionException(String requiredPermission) {, +		super("The operation requires '" + requiredPermission + "' permission.");, +++ b/spring-social-core/src/main/java/org/springframework/social/ApiException.java, +	public ApiException(String message) {, +	public ApiException(String message, Throwable cause) {, +++ b/spring-social-core/src/main/java/org/springframework/social/DuplicateStatusException.java, +import org.springframework.social.OperationNotPermittedException;, +	public DuplicateStatusException(String message) {, +		super(message);, +++ b/spring-social-core/src/main/java/org/springframework/social/ExpiredAuthorizationException.java, +	public ExpiredAuthorizationException() {, +		super("The authorization has expired.");, +++ b/spring-social-core/src/main/java/org/springframework/social/InsufficientPermissionException.java, +	public InsufficientPermissionException() {, +		super("Insufficient permission for this operation.");, +	public InsufficientPermissionException(String requiredPermission) {, +		super("The operation requires '" + requiredPermission + "' permission.");, +++ b/spring-social-core/src/main/java/org/springframework/social/InternalServerErrorException.java, +	public InternalServerErrorException(String message) {, +		super(message);, +++ b/spring-social-core/src/main/java/org/springframework/social/ApiException.java, +	public ApiException(String message) {, +	public ApiException(String message, Throwable cause) {, +++ b/spring-social-core/src/main/java/org/springframework/social/DuplicateStatusException.java, +import org.springframework.social.OperationNotPermittedException;, +	public DuplicateStatusException(String message) {, +		super(message);, +++ b/spring-social-core/src/main/java/org/springframework/social/ExpiredAuthorizationException.java, +	public ExpiredAuthorizationException() {, +		super("The authorization has expired.");, +++ b/spring-social-core/src/main/java/org/springframework/social/InsufficientPermissionException.java, +	public InsufficientPermissionException() {, +		super("Insufficient permission for this operation.");, +	public InsufficientPermissionException(String requiredPermission) {, +		super("The operation requires '" + requiredPermission + "' permission.");, +++ b/spring-social-core/src/main/java/org/springframework/social/InternalServerErrorException.java, +	public InternalServerErrorException(String message) {, +		super(message);, +++ b/spring-social-core/src/main/java/org/springframework/social/InvalidAuthorizationException.java, +	public InvalidAuthorizationException(String message) {, +		super(message);, +++ b/spring-social-core/src/main/java/org/springframework/social/ApiException.java, +	public ApiException(String message) {, +	public ApiException(String message, Throwable cause) {, +++ b/spring-social-core/src/main/java/org/springframework/social/DuplicateStatusException.java, +import org.springframework.social.OperationNotPermittedException;, +	public DuplicateStatusException(String message) {, +		super(message);, +++ b/spring-social-core/src/main/java/org/springframework/social/ExpiredAuthorizationException.java, +	public ExpiredAuthorizationException() {, +		super("The authorization has expired.");, +++ b/spring-social-core/src/main/java/org/springframework/social/InsufficientPermissionException.java, +	public InsufficientPermissionException() {, +		super("Insufficient permission for this operation.");, +	public InsufficientPermissionException(String requiredPermission) {, +		super("The operation requires '" + requiredPermission + "' permission.");, +++ b/spring-social-core/src/main/java/org/springframework/social/InternalServerErrorException.java, +	public InternalServerErrorException(String message) {, +		super(message);, +++ b/spring-social-core/src/main/java/org/springframework/social/InvalidAuthorizationException.java, +	public InvalidAuthorizationException(String message) {, +		super(message);, +++ b/spring-social-core/src/main/java/org/springframework/social/MissingAuthorizationException.java, +	public MissingAuthorizationException() {, +		super("Authorization is required for the operation, but the API binding was created without authorization.");, +++ b/spring-social-core/src/main/java/org/springframework/social/ApiException.java, +	public ApiException(String message) {]