[+++ b/spring-social-security/src/main/java/org/springframework/social/security/provider/OAuth2AuthenticationService.java, +	private String defaultScope = "";, +	 * @param defaultScope OAuth scope to use, i.e. requested permissions, +	public void setDefaultScope(String defaultScope) {, +		this.defaultScope = defaultScope;, +			setScope(request, params);, +	private void setScope(HttpServletRequest request, OAuth2Parameters params) {, +		String requestedScope = request.getParameter("scope");, +		if (StringUtils.hasLength(requestedScope)) {, +			params.setScope(requestedScope);, +		} else {, +			params.setScope(defaultScope);, +		}, +	}, +++ b/spring-social-security/src/main/java/org/springframework/social/security/provider/OAuth2AuthenticationService.java, +	private String defaultScope = "";, +	 * @param defaultScope OAuth scope to use, i.e. requested permissions, +	public void setDefaultScope(String defaultScope) {, +		this.defaultScope = defaultScope;, +			setScope(request, params);, +	private void setScope(HttpServletRequest request, OAuth2Parameters params) {, +		String requestedScope = request.getParameter("scope");, +		if (StringUtils.hasLength(requestedScope)) {, +			params.setScope(requestedScope);, +		} else {, +			params.setScope(defaultScope);, +		}, +	}, +++ b/src/dist/changelog.txt, +Spring Social 1.1.0 Milestone 4 (August 19, 2012), +=================================================, +   * SocialAuthenticationFilter now accepts and passes along the value of, +     a 'scope' parameter when doing authorization for an OAuth 2 provider., +     (SOCIAL-389)]