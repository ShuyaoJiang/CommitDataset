[+++ b/spring-social-core/src/main/resources/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.sql, +-- This SQL contains a "create table" that can be used to create a table that JdbcUsersConnectionRepository can persist, +-- connection in. It is, however, not to be assumed to be production-ready, all-purpose SQL. It is merely representative, +-- of the kind of table that JdbcUsersConnectionRepository works with. The table and column names, as well as the general, +-- column types, are what is important. Specific column types and sizes that work may vary across database vendors and, +-- the required sizes may vary across API providers. , +, +	accessToken varchar(512) not null,, +	secret varchar(512),, +	refreshToken varchar(512),, +++ b/spring-social-core/src/main/resources/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.sql, +-- This SQL contains a "create table" that can be used to create a table that JdbcUsersConnectionRepository can persist, +-- connection in. It is, however, not to be assumed to be production-ready, all-purpose SQL. It is merely representative, +-- of the kind of table that JdbcUsersConnectionRepository works with. The table and column names, as well as the general, +-- column types, are what is important. Specific column types and sizes that work may vary across database vendors and, +-- the required sizes may vary across API providers. , +, +	accessToken varchar(512) not null,, +	secret varchar(512),, +	refreshToken varchar(512),, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +	protected static final String DUPLICATE_CONNECTION_ATTRIBUTE = "social_addConnection_duplicate";, +	protected static final String PROVIDER_ERROR_ATTRIBUTE = "social_provider_error";, +	protected static final String AUTHORIZATION_ERROR_ATTRIBUTE = "social_authorization_error";, +++ b/spring-social-core/src/main/resources/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.sql, +-- This SQL contains a "create table" that can be used to create a table that JdbcUsersConnectionRepository can persist, +-- connection in. It is, however, not to be assumed to be production-ready, all-purpose SQL. It is merely representative, +-- of the kind of table that JdbcUsersConnectionRepository works with. The table and column names, as well as the general, +-- column types, are what is important. Specific column types and sizes that work may vary across database vendors and, +-- the required sizes may vary across API providers. , +, +	accessToken varchar(512) not null,, +	secret varchar(512),, +	refreshToken varchar(512),, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +	protected static final String DUPLICATE_CONNECTION_ATTRIBUTE = "social_addConnection_duplicate";, +	protected static final String PROVIDER_ERROR_ATTRIBUTE = "social_provider_error";, +	protected static final String AUTHORIZATION_ERROR_ATTRIBUTE = "social_authorization_error";, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ProviderSignInController.java, +		try {, +++ b/spring-social-core/src/main/resources/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.sql, +-- This SQL contains a "create table" that can be used to create a table that JdbcUsersConnectionRepository can persist, +-- connection in. It is, however, not to be assumed to be production-ready, all-purpose SQL. It is merely representative, +-- of the kind of table that JdbcUsersConnectionRepository works with. The table and column names, as well as the general, +-- column types, are what is important. Specific column types and sizes that work may vary across database vendors and, +-- the required sizes may vary across API providers. , +, +	accessToken varchar(512) not null,, +	secret varchar(512),, +	refreshToken varchar(512),, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +	protected static final String DUPLICATE_CONNECTION_ATTRIBUTE = "social_addConnection_duplicate";, +	protected static final String PROVIDER_ERROR_ATTRIBUTE = "social_provider_error";, +	protected static final String AUTHORIZATION_ERROR_ATTRIBUTE = "social_authorization_error";, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ProviderSignInController.java, +		try {, +++ b/spring-social-web/src/test/java/org/springframework/social/connect/web/ProviderSignInControllerTest.java]