[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth1/AbstractOAuth1ServiceProvider.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth1/AbstractOAuth1ServiceProvider.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public AbstractOAuth2ServiceProvider(String id, ConnectionRepository connectionRepository, OAuth2Operations oauth2Operations) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth1/AbstractOAuth1ServiceProvider.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public AbstractOAuth2ServiceProvider(String id, ConnectionRepository connectionRepository, OAuth2Operations oauth2Operations) {, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/oauth2/OAuth2ServiceProviderTest.java, +			super("test", connectionRepository, new StubOAuth2Operations());, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth1/AbstractOAuth1ServiceProvider.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public AbstractOAuth2ServiceProvider(String id, ConnectionRepository connectionRepository, OAuth2Operations oauth2Operations) {, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/oauth2/OAuth2ServiceProviderTest.java, +			super("test", connectionRepository, new StubOAuth2Operations());, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/connect/FacebookServiceProvider.java, +		super("facebook", connectionRepository, new OAuth2Template(clientId, clientSecret,, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth1/AbstractOAuth1ServiceProvider.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public AbstractOAuth2ServiceProvider(String id, ConnectionRepository connectionRepository, OAuth2Operations oauth2Operations) {, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/oauth2/OAuth2ServiceProviderTest.java, +			super("test", connectionRepository, new StubOAuth2Operations());, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/connect/FacebookServiceProvider.java, +		super("facebook", connectionRepository, new OAuth2Template(clientId, clientSecret,, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/web/FacebookInitTag.java, +			apiKey = resolveApiKey();, +	private String resolveApiKey() throws JspException {, +		// TODO: Resolve from properties, +		return "";, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth1/AbstractOAuth1ServiceProvider.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public AbstractOAuth2ServiceProvider(String id, ConnectionRepository connectionRepository, OAuth2Operations oauth2Operations) {, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/oauth2/OAuth2ServiceProviderTest.java, +			super("test", connectionRepository, new StubOAuth2Operations());, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/connect/FacebookServiceProvider.java, +		super("facebook", connectionRepository, new OAuth2Template(clientId, clientSecret,, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/web/FacebookInitTag.java, +			apiKey = resolveApiKey();, +	private String resolveApiKey() throws JspException {, +		// TODO: Resolve from properties, +		return "";, +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/web/FacebookInitTagTest.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth1/AbstractOAuth1ServiceProvider.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public AbstractOAuth2ServiceProvider(String id, ConnectionRepository connectionRepository, OAuth2Operations oauth2Operations) {, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/oauth2/OAuth2ServiceProviderTest.java, +			super("test", connectionRepository, new StubOAuth2Operations());, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/connect/FacebookServiceProvider.java, +		super("facebook", connectionRepository, new OAuth2Template(clientId, clientSecret,, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/web/FacebookInitTag.java, +			apiKey = resolveApiKey();, +	private String resolveApiKey() throws JspException {, +		// TODO: Resolve from properties, +		return "";, +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/web/FacebookInitTagTest.java, +++ b/spring-social-github/src/main/java/org/springframework/social/github/connect/GitHubServiceProvider.java, +		super("github", connectionRepository, , +				new OAuth2Template(clientId, clientSecret, "https://github.com/login/oauth/authorize?client_id={client_id}&redirect_uri={redirect_uri}&scope={scope}", "https://github.com/login/oauth/access_token"));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth1/AbstractOAuth1ServiceProvider.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public AbstractOAuth2ServiceProvider(String id, ConnectionRepository connectionRepository, OAuth2Operations oauth2Operations) {, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/oauth2/OAuth2ServiceProviderTest.java, +			super("test", connectionRepository, new StubOAuth2Operations());, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/connect/FacebookServiceProvider.java, +		super("facebook", connectionRepository, new OAuth2Template(clientId, clientSecret,, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/web/FacebookInitTag.java, +			apiKey = resolveApiKey();, +	private String resolveApiKey() throws JspException {, +		// TODO: Resolve from properties, +		return "";, +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/web/FacebookInitTagTest.java, +++ b/spring-social-github/src/main/java/org/springframework/social/github/connect/GitHubServiceProvider.java, +		super("github", connectionRepository, , +				new OAuth2Template(clientId, clientSecret, "https://github.com/login/oauth/authorize?client_id={client_id}&redirect_uri={redirect_uri}&scope={scope}", "https://github.com/login/oauth/access_token"));, +++ b/spring-social-gowalla/src/main/java/org/springframework/social/gowalla/connect/GowallaServiceProvider.java, +		super("gowalla", connectionRepository, , +				new OAuth2Template(clientId, clientSecret, "https://gowalla.com/api/oauth/new?client_id={client_id}&redirect_uri={redirect_uri}&scope={scope}", "https://gowalla.com/api/oauth/token"));]