[+++ b/build.gradle, +    springVersion = '3.1.0.M2', +++ b/build.gradle, +    springVersion = '3.1.0.M2', +++ b/docs/src/info/changelog.txt, +Spring Social 1.0.0 Release (September 8, 2011), +===============================================, +  * OAuth-encode consumer/token secrets when creating an OAuth 1 signature key (SOCIAL-248)., +  * Handle signature differences between Spring 3.1M2 and Spring 3.1RC1 RestTemplate.setInterceptors() , +    (SOCIAL-247)., +++ b/build.gradle, +    springVersion = '3.1.0.M2', +++ b/docs/src/info/changelog.txt, +Spring Social 1.0.0 Release (September 8, 2011), +===============================================, +  * OAuth-encode consumer/token secrets when creating an OAuth 1 signature key (SOCIAL-248)., +  * Handle signature differences between Spring 3.1M2 and Spring 3.1RC1 RestTemplate.setInterceptors() , +    (SOCIAL-247)., +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/ProtectedResourceClientFactory.java, +import java.lang.reflect.Method;, +import java.util.List;, +			setInterceptors(client, interceptors);, +	/*, +	 * Sets interceptors on a Spring 3.1 RestTemplate. , +	 * Handles the differences between 3.1M2 and 3.1RC1 setInterceptors() method signatures., +	 * To be removed when Spring 3.1RC1 is released. , +	 */, +	private static void setInterceptors(RestTemplate client, LinkedList<ClientHttpRequestInterceptor> interceptors) {, +		try {, +			Method method = RestTemplate.class.getMethod("setInterceptors", List.class);, +			method.invoke(client, interceptors);, +		} catch (NoSuchMethodException e) {, +			setInterceptors(client, interceptors.toArray(new ClientHttpRequestInterceptor[0]));, +		} catch (Exception shouldntHappen) {}, +	}, +	, +	private static void setInterceptors(RestTemplate client, ClientHttpRequestInterceptor[] interceptors) {, +		try {, +			Method method = RestTemplate.class.getMethod("setInterceptors", interceptors.getClass());, +			method.invoke(client, new Object[] {interceptors});, +		} catch (Exception shouldntHappen) {}, +	}, +	, +	, +++ b/build.gradle, +    springVersion = '3.1.0.M2', +++ b/docs/src/info/changelog.txt, +Spring Social 1.0.0 Release (September 8, 2011), +===============================================, +  * OAuth-encode consumer/token secrets when creating an OAuth 1 signature key (SOCIAL-248)., +  * Handle signature differences between Spring 3.1M2 and Spring 3.1RC1 RestTemplate.setInterceptors() , +    (SOCIAL-247)., +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/ProtectedResourceClientFactory.java, +import java.lang.reflect.Method;, +import java.util.List;, +			setInterceptors(client, interceptors);, +	/*, +	 * Sets interceptors on a Spring 3.1 RestTemplate. , +	 * Handles the differences between 3.1M2 and 3.1RC1 setInterceptors() method signatures., +	 * To be removed when Spring 3.1RC1 is released. , +	 */, +	private static void setInterceptors(RestTemplate client, LinkedList<ClientHttpRequestInterceptor> interceptors) {, +		try {, +			Method method = RestTemplate.class.getMethod("setInterceptors", List.class);, +			method.invoke(client, interceptors);, +		} catch (NoSuchMethodException e) {, +			setInterceptors(client, interceptors.toArray(new ClientHttpRequestInterceptor[0]));, +		} catch (Exception shouldntHappen) {}, +	}, +	, +	private static void setInterceptors(RestTemplate client, ClientHttpRequestInterceptor[] interceptors) {, +		try {, +			Method method = RestTemplate.class.getMethod("setInterceptors", interceptors.getClass());, +			method.invoke(client, new Object[] {interceptors});, +		} catch (Exception shouldntHappen) {}, +	}, +	, +	, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/ProtectedResourceClientFactory.java, +import java.lang.reflect.Method;, +import java.util.List;, +			setInterceptors(client, interceptors);, +	/*, +	 * Sets interceptors on a Spring 3.1 RestTemplate. , +	 * Handles the differences between 3.1M2 and 3.1RC1 setInterceptors() method signatures., +	 * To be removed when Spring 3.1RC1 is released. , +	 */, +	private static void setInterceptors(RestTemplate client, LinkedList<ClientHttpRequestInterceptor> interceptors) {, +		try {, +			Method method = RestTemplate.class.getMethod("setInterceptors", List.class);, +			method.invoke(client, interceptors);, +		} catch (NoSuchMethodException e) {, +			setInterceptors(client, interceptors.toArray(new ClientHttpRequestInterceptor[0]));, +		} catch (Exception shouldntHappen) {}, +	}, +	, +	private static void setInterceptors(RestTemplate client, ClientHttpRequestInterceptor[] interceptors) {, +		try {, +			Method method = RestTemplate.class.getMethod("setInterceptors", interceptors.getClass());, +			method.invoke(client, new Object[] {interceptors});]