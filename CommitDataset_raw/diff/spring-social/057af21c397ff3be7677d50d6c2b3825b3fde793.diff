[+++ b/src/main/java/org/springframework/social/oauth/AccessTokenResolver.java, +package org.springframework.social.oauth;, +, +// TODO: Could this be merged back into AccessTokenServices? Or OAuthTemplate?, +public interface AccessTokenResolver<T> {, +	T resolveAccessToken();, +}, +++ b/src/main/java/org/springframework/social/oauth/AccessTokenResolver.java, +package org.springframework.social.oauth;, +, +// TODO: Could this be merged back into AccessTokenServices? Or OAuthTemplate?, +public interface AccessTokenResolver<T> {, +	T resolveAccessToken();, +}, +++ b/src/main/java/org/springframework/social/oauth/AccessTokenServices.java, +public interface AccessTokenServices<T> {, +	T getToken(String resourceId, Object user) throws AuthenticationException;, +	void storeToken(String resourceId, Object user, T token);, +++ b/src/main/java/org/springframework/social/oauth/AccessTokenResolver.java, +package org.springframework.social.oauth;, +, +// TODO: Could this be merged back into AccessTokenServices? Or OAuthTemplate?, +public interface AccessTokenResolver<T> {, +	T resolveAccessToken();, +}, +++ b/src/main/java/org/springframework/social/oauth/AccessTokenServices.java, +public interface AccessTokenServices<T> {, +	T getToken(String resourceId, Object user) throws AuthenticationException;, +	void storeToken(String resourceId, Object user, T token);, +++ b/src/main/java/org/springframework/social/oauth/AuthorizationException.java, +package org.springframework.social.oauth;, +, +public class AuthorizationException extends RuntimeException {, +	private static final long serialVersionUID = 1L;, +, +	public AuthorizationException(String message, Throwable cause) {, +		super(message, cause);, +	}, +}, +++ b/src/main/java/org/springframework/social/oauth/AccessTokenResolver.java, +package org.springframework.social.oauth;, +, +// TODO: Could this be merged back into AccessTokenServices? Or OAuthTemplate?, +public interface AccessTokenResolver<T> {, +	T resolveAccessToken();, +}, +++ b/src/main/java/org/springframework/social/oauth/AccessTokenServices.java, +public interface AccessTokenServices<T> {, +	T getToken(String resourceId, Object user) throws AuthenticationException;, +	void storeToken(String resourceId, Object user, T token);, +++ b/src/main/java/org/springframework/social/oauth/AuthorizationException.java, +package org.springframework.social.oauth;, +, +public class AuthorizationException extends RuntimeException {, +	private static final long serialVersionUID = 1L;, +, +	public AuthorizationException(String message, Throwable cause) {, +		super(message, cause);, +	}, +}, +++ b/src/main/java/org/springframework/social/oauth/FacebookClientRequestDecorator.java, +package org.springframework.social.oauth;, +, +import java.io.IOException;, +import java.net.URI;, +import java.net.URISyntaxException;, +, +import org.springframework.http.HttpHeaders;, +import org.springframework.http.HttpMethod;, +import org.springframework.http.client.AbstractClientHttpRequest;, +import org.springframework.http.client.ClientHttpRequest;, +import org.springframework.http.client.ClientHttpResponse;, +, +// TODO: Repackage under the facebook package. Kept here for now for convenience' sake, +// TODO: Consider renaming to OAuth2ParameterClientRequestDecorator, +public class FacebookClientRequestDecorator implements OAuthClientRequestDecorator {, +, +	private final AccessTokenResolver<String> tokenResolver;, +, +	public FacebookClientRequestDecorator(AccessTokenResolver<String> tokenResolver) {, +		this.tokenResolver = tokenResolver;, +	}, +, +	@Override, +	public ClientHttpRequest decorate(ClientHttpRequest request) throws AuthorizationException {, +		return new FacebookAuthorizationDecoratedClientHttpRequest(request);, +	}, +, +	private String resolveAccessToken() {, +		return tokenResolver.resolveAccessToken();, +	}, +, +	private class FacebookAuthorizationDecoratedClientHttpRequest extends AbstractClientHttpRequest {, +		private final ClientHttpRequest targetRequest;, +, +		private FacebookAuthorizationDecoratedClientHttpRequest(ClientHttpRequest targetRequest) {, +			this.targetRequest = targetRequest;, +		}, +, +		@Override]