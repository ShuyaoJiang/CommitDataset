[+++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/MediaOperations.java, +	, +	/**, +	 * Uploads a video for the authenticated user., +	 * Note that the video will not be immediately available after uploading, as Facebook performs some post-upload processing on the video., +	 * @param video A {@link Resource} for the video data. The given Resource must implement the getFilename() method (such as {@link FileSystemResource} or {@link ClassPathResource})., +	 * @return the ID of the video., +	 */, +	String uploadVideo(Resource video);, +	, +	/**, +	 * Uploads a video for the authenticated user., +	 * Note that the video will not be immediately available after uploading, as Facebook performs some post-upload processing on the video., +	 * @param video A {@link Resource} for the video data. The given Resource must implement the getFilename() method (such as {@link FileSystemResource} or {@link ClassPathResource})., +	 * @return the ID of the video., +	 */, +	String uploadVideo(Resource video, String title, String description);, +, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/MediaOperations.java, +	, +	/**, +	 * Uploads a video for the authenticated user., +	 * Note that the video will not be immediately available after uploading, as Facebook performs some post-upload processing on the video., +	 * @param video A {@link Resource} for the video data. The given Resource must implement the getFilename() method (such as {@link FileSystemResource} or {@link ClassPathResource})., +	 * @return the ID of the video., +	 */, +	String uploadVideo(Resource video);, +	, +	/**, +	 * Uploads a video for the authenticated user., +	 * Note that the video will not be immediately available after uploading, as Facebook performs some post-upload processing on the video., +	 * @param video A {@link Resource} for the video data. The given Resource must implement the getFilename() method (such as {@link FileSystemResource} or {@link ClassPathResource})., +	 * @return the ID of the video., +	 */, +	String uploadVideo(Resource video, String title, String description);, +, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/FacebookTemplate.java, +		mediaOperations = new MediaTemplate(this, getRestTemplate());, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/MediaOperations.java, +	, +	/**, +	 * Uploads a video for the authenticated user., +	 * Note that the video will not be immediately available after uploading, as Facebook performs some post-upload processing on the video., +	 * @param video A {@link Resource} for the video data. The given Resource must implement the getFilename() method (such as {@link FileSystemResource} or {@link ClassPathResource})., +	 * @return the ID of the video., +	 */, +	String uploadVideo(Resource video);, +	, +	/**, +	 * Uploads a video for the authenticated user., +	 * Note that the video will not be immediately available after uploading, as Facebook performs some post-upload processing on the video., +	 * @param video A {@link Resource} for the video data. The given Resource must implement the getFilename() method (such as {@link FileSystemResource} or {@link ClassPathResource})., +	 * @return the ID of the video., +	 */, +	String uploadVideo(Resource video, String title, String description);, +, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/FacebookTemplate.java, +		mediaOperations = new MediaTemplate(this, getRestTemplate());, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/MediaTemplate.java, +import java.util.Map;, +import org.springframework.web.client.RestTemplate;, +	private final RestTemplate restTemplate;, +, +	public MediaTemplate(GraphApi graphApi, RestTemplate restTemplate) {, +		this.restTemplate = restTemplate;, +	@SuppressWarnings("unchecked"), +	public String uploadVideo(Resource video) {, +		MultiValueMap<String, Object> parts = new LinkedMultiValueMap<String, Object>();, +		parts.set("file", video);, +		Map<String, Object> response = restTemplate.postForObject("https://graph-video.facebook.com/me/videos", parts, Map.class);, +		return (String) response.get("id");, +	}, +	, +	@SuppressWarnings("unchecked"), +	public String uploadVideo(Resource video, String title, String description) {, +		MultiValueMap<String, Object> parts = new LinkedMultiValueMap<String, Object>();, +		parts.set("file", video);, +		parts.set("title", title);, +		parts.set("description", description);, +		Map<String, Object> response = restTemplate.postForObject("https://graph-video.facebook.com/me/videos", parts, Map.class);, +		return (String) response.get("id");, +	}, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/MediaOperations.java, +	, +	/**, +	 * Uploads a video for the authenticated user., +	 * Note that the video will not be immediately available after uploading, as Facebook performs some post-upload processing on the video., +	 * @param video A {@link Resource} for the video data. The given Resource must implement the getFilename() method (such as {@link FileSystemResource} or {@link ClassPathResource})., +	 * @return the ID of the video., +	 */, +	String uploadVideo(Resource video);, +	, +	/**, +	 * Uploads a video for the authenticated user., +	 * Note that the video will not be immediately available after uploading, as Facebook performs some post-upload processing on the video., +	 * @param video A {@link Resource} for the video data. The given Resource must implement the getFilename() method (such as {@link FileSystemResource} or {@link ClassPathResource})., +	 * @return the ID of the video., +	 */, +	String uploadVideo(Resource video, String title, String description);, +]