[+++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +		return connectView();, +		setNoCache(request);, +			return connectView(providerId); , +			return connectedView(providerId);			, +		return connectionStatusRedirect(providerId);, +	}, +, +	// subclassing hooks, +	, +	/**, +	 * Returns the ConnectionFactoryLocator., +	 */, +	protected ConnectionFactoryLocator getConnectionFactoryLocator() {, +		return connectionFactoryLocator;, +	}, +	, +	/**, +	 * Returns the ConnectionRepository., +	 */, +	protected ConnectionRepository getConnectionRepository() {, +		return connectionRepository;, +	}, +	, +	/**, +	 * Returns a RedirectView with the URL to redirect to after a connection is created or deleted., +	 * Defaults to "/connect/{providerId}" relative to the servlet context path. , +	 * May be overridden to handle custom redirection needs., +	 * @param providerId the ID of the provider for which a connection was created or deleted., +	 */, +	protected RedirectView connectionStatusRedirect(String providerId) {, +		return new RedirectView("/connect/" + providerId, true);, +	}, +, +	/**, +	 * Returns the view name of a general connection status page, typically displaying the user's connection status for all providers., +	 * Defaults to "/connect/status". May be overridden to return a custom view name., +	 */, +	protected String connectView() {, +		return getViewPath() + "status";, +	}, +, +	/**, +	 * Returns the view name of a page to display for a provider when the user is not connected to the provider., +	 * Typically this page would offer the user an opportunity to create a connection with the provider., +	 * Defaults to "connect/{providerId}Connect". May be overridden to return a custom view name., +	 * @param providerId the ID of the provider to display the connection status for., +	 */, +	protected String connectView(String providerId) {, +		return getViewPath() + providerId + "Connect";		, +	}, +, +	/**, +	 * Returns the view name of a page to display for a provider when the user is connected to the provider., +	 * Typically this page would allow the user to disconnect from the provider., +	 * Defaults to "connect/{providerId}Connected". May be overridden to return a custom view name., +	 * @param providerId the ID of the provider to display the connection status for., +	 */, +	protected String connectedView(String providerId) {, +		return getViewPath() + providerId + "Connected";		]