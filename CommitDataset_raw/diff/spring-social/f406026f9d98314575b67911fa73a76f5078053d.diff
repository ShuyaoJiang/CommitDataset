[+++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GenericOAuth2ConnectionFactory.java, +	 * @param tokenStrategy The token strategy indicating how the access token should be carried on API requests., +		super(providerId, , +			  new GenericOAuth2ServiceProvider(appId, appSecret, authorizeUrl, authenticateUrl, accessTokenUrl, sendClientCredentialsAsParameters, tokenStrategy), , +			  apiAdapter);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GenericOAuth2ConnectionFactory.java, +	 * @param tokenStrategy The token strategy indicating how the access token should be carried on API requests., +		super(providerId, , +			  new GenericOAuth2ServiceProvider(appId, appSecret, authorizeUrl, authenticateUrl, accessTokenUrl, sendClientCredentialsAsParameters, tokenStrategy), , +			  apiAdapter);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GenericOAuth2ServiceProvider.java, +	 * @param tokenStrategy The token strategy indicating how the access token should be carried on API requests., +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GenericOAuth2ConnectionFactory.java, +	 * @param tokenStrategy The token strategy indicating how the access token should be carried on API requests., +		super(providerId, , +			  new GenericOAuth2ServiceProvider(appId, appSecret, authorizeUrl, authenticateUrl, accessTokenUrl, sendClientCredentialsAsParameters, tokenStrategy), , +			  apiAdapter);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GenericOAuth2ServiceProvider.java, +	 * @param tokenStrategy The token strategy indicating how the access token should be carried on API requests., +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2TokenParameterRequestInterceptor.java, +	/**, +	 * Creates an instance of the interceptor, defaulting to use a parameter named "access_token"., +	 * @param accessToken The access token., +	 */, +	/**, +	 * Creates an instance of the interceptor, using a parameter with the specified name., +	 * @param accessToken The access token., +	 * @param parameterName The name of the query parameter that will carry the access token. , +	 */, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GenericOAuth2ConnectionFactory.java, +	 * @param tokenStrategy The token strategy indicating how the access token should be carried on API requests., +		super(providerId, , +			  new GenericOAuth2ServiceProvider(appId, appSecret, authorizeUrl, authenticateUrl, accessTokenUrl, sendClientCredentialsAsParameters, tokenStrategy), , +			  apiAdapter);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GenericOAuth2ServiceProvider.java, +	 * @param tokenStrategy The token strategy indicating how the access token should be carried on API requests., +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2TokenParameterRequestInterceptor.java, +	/**, +	 * Creates an instance of the interceptor, defaulting to use a parameter named "access_token"., +	 * @param accessToken The access token., +	 */, +	/**, +	 * Creates an instance of the interceptor, using a parameter with the specified name., +	 * @param accessToken The access token., +	 * @param parameterName The name of the query parameter that will carry the access token. , +	 */, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/PreemptiveBasicAuthClientHttpRequestInterceptor.java, + * @author Craig Walls, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GenericOAuth2ConnectionFactory.java, +	 * @param tokenStrategy The token strategy indicating how the access token should be carried on API requests., +		super(providerId, , +			  new GenericOAuth2ServiceProvider(appId, appSecret, authorizeUrl, authenticateUrl, accessTokenUrl, sendClientCredentialsAsParameters, tokenStrategy), , +			  apiAdapter);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/GenericOAuth2ServiceProvider.java, +	 * @param tokenStrategy The token strategy indicating how the access token should be carried on API requests., +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2TokenParameterRequestInterceptor.java, +	/**, +	 * Creates an instance of the interceptor, defaulting to use a parameter named "access_token"., +	 * @param accessToken The access token., +	 */, +	/**, +	 * Creates an instance of the interceptor, using a parameter with the specified name., +	 * @param accessToken The access token., +	 * @param parameterName The name of the query parameter that will carry the access token. , +	 */, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/PreemptiveBasicAuthClientHttpRequestInterceptor.java, + * @author Craig Walls, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/TokenStrategy.java, +/**, + * Strategy enumeration where each value carries an interceptor defining how an access token is carried on API requests., + * @author Craig Walls, + */, +	/**, +	 * Indicates that the access token should be carried in the Authorization header as an OAuth2 Bearer token., +	 */, +	/**, +	 * Indicates that the access token should be carried as a query parameter named "access_token"., +	 */, +	/**, +	 * Indicates that the access token should be carried as a query parameter named "oauth_token"., +	 */, +	abstract ClientHttpRequestInterceptor interceptor(String accessToken, OAuth2Version oauth2Version);]