[+++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/api/DirectMessage.java, +	private final TwitterProfile sender;, +	private final TwitterProfile recipient;, +	public DirectMessage(long id, String text, TwitterProfile sender, TwitterProfile recipient, Date createdAt) {, +		this.sender = sender;, +		this.recipient = recipient;, +	public TwitterProfile getSender() {, +		return sender;, +	public TwitterProfile getRecipient() {, +		return recipient;, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/api/DirectMessage.java, +	private final TwitterProfile sender;, +	private final TwitterProfile recipient;, +	public DirectMessage(long id, String text, TwitterProfile sender, TwitterProfile recipient, Date createdAt) {, +		this.sender = sender;, +		this.recipient = recipient;, +	public TwitterProfile getSender() {, +		return sender;, +	public TwitterProfile getRecipient() {, +		return recipient;, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/api/impl/DirectMessageMixin.java, +import org.springframework.social.twitter.api.TwitterProfile;, +			@JsonProperty("sender") TwitterProfile sender, , +			@JsonProperty("recipient") TwitterProfile receipient, , +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/api/DirectMessage.java, +	private final TwitterProfile sender;, +	private final TwitterProfile recipient;, +	public DirectMessage(long id, String text, TwitterProfile sender, TwitterProfile recipient, Date createdAt) {, +		this.sender = sender;, +		this.recipient = recipient;, +	public TwitterProfile getSender() {, +		return sender;, +	public TwitterProfile getRecipient() {, +		return recipient;, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/api/impl/DirectMessageMixin.java, +import org.springframework.social.twitter.api.TwitterProfile;, +			@JsonProperty("sender") TwitterProfile sender, , +			@JsonProperty("recipient") TwitterProfile receipient, , +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/api/impl/TwitterProfileMixin.java, +import org.codehaus.jackson.map.annotate.JsonDeserialize;, +			@JsonProperty("created_at") @JsonDeserialize(using=TimelineDateDeserializer.class) Date createdDate) {}, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/api/DirectMessage.java, +	private final TwitterProfile sender;, +	private final TwitterProfile recipient;, +	public DirectMessage(long id, String text, TwitterProfile sender, TwitterProfile recipient, Date createdAt) {, +		this.sender = sender;, +		this.recipient = recipient;, +	public TwitterProfile getSender() {, +		return sender;, +	public TwitterProfile getRecipient() {, +		return recipient;, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/api/impl/DirectMessageMixin.java, +import org.springframework.social.twitter.api.TwitterProfile;, +			@JsonProperty("sender") TwitterProfile sender, , +			@JsonProperty("recipient") TwitterProfile receipient, , +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/api/impl/TwitterProfileMixin.java, +import org.codehaus.jackson.map.annotate.JsonDeserialize;, +			@JsonProperty("created_at") @JsonDeserialize(using=TimelineDateDeserializer.class) Date createdDate) {}, +++ b/spring-social-twitter/src/test/java/org/springframework/social/twitter/api/impl/DirectMessageTemplateTest.java, +		assertEquals(24680, messages.get(0).getSender().getId());, +		assertEquals("rclarkson", messages.get(0).getSender().getScreenName());, +		assertEquals(13579, messages.get(0).getRecipient().getId());, +		assertEquals("kdonald", messages.get(0).getRecipient().getScreenName());, +		assertEquals(13579, messages.get(1).getSender().getId());, +		assertEquals("kdonald", messages.get(1).getSender().getScreenName());, +		assertEquals(24680, messages.get(1).getRecipient().getId());, +		assertEquals("rclarkson", messages.get(1).getRecipient().getScreenName());, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/api/DirectMessage.java, +	private final TwitterProfile sender;, +	private final TwitterProfile recipient;, +	public DirectMessage(long id, String text, TwitterProfile sender, TwitterProfile recipient, Date createdAt) {, +		this.sender = sender;, +		this.recipient = recipient;, +	public TwitterProfile getSender() {, +		return sender;, +	public TwitterProfile getRecipient() {, +		return recipient;, +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/api/impl/DirectMessageMixin.java, +import org.springframework.social.twitter.api.TwitterProfile;, +			@JsonProperty("sender") TwitterProfile sender, , +			@JsonProperty("recipient") TwitterProfile receipient, , +++ b/spring-social-twitter/src/main/java/org/springframework/social/twitter/api/impl/TwitterProfileMixin.java, +import org.codehaus.jackson.map.annotate.JsonDeserialize;, +			@JsonProperty("created_at") @JsonDeserialize(using=TimelineDateDeserializer.class) Date createdDate) {}, +++ b/spring-social-twitter/src/test/java/org/springframework/social/twitter/api/impl/DirectMessageTemplateTest.java, +		assertEquals(24680, messages.get(0).getSender().getId());, +		assertEquals("rclarkson", messages.get(0).getSender().getScreenName());, +		assertEquals(13579, messages.get(0).getRecipient().getId());, +		assertEquals("kdonald", messages.get(0).getRecipient().getScreenName());, +		assertEquals(13579, messages.get(1).getSender().getId());, +		assertEquals("kdonald", messages.get(1).getSender().getScreenName());, +		assertEquals(24680, messages.get(1).getRecipient().getId());, +		assertEquals("rclarkson", messages.get(1).getRecipient().getScreenName());, +++ b/spring-social-twitter/src/test/java/org/springframework/social/twitter/api/impl/directMessage.json, +	"sender":, +	{, +		"id_str":"13579",, +		"description":"I'm just Keith",, +		"profile_image_url":"http:\/\/a1.twimg.com\/sticky\/default_profile_images\/default_profile_4_normal.png",, +		"location":"Melbourne, FL",]