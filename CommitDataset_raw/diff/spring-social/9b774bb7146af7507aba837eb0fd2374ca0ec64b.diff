[+++ b/build.gradle, +    , +++ b/build.gradle, +    , +++ b/settings.gradle, +++ b/build.gradle, +    , +++ b/settings.gradle, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/ServiceProvider.java, +	 * A label suitable for display in a UI, typically used to inform the user which service providers he or she has connected with / may connect with. e.g. Twitter., +	 */, +	String getDisplayName();, +, +	/**, +	 * @throws IllegalStateException if no connections have been established between the account and this provider, +++ b/build.gradle, +    , +++ b/settings.gradle, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/ServiceProvider.java, +	 * A label suitable for display in a UI, typically used to inform the user which service providers he or she has connected with / may connect with. e.g. Twitter., +	 */, +	String getDisplayName();, +, +	/**, +	 * @throws IllegalStateException if no connections have been established between the account and this provider, +++ /dev/null, +++ b/build.gradle, +    , +++ b/settings.gradle, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/ServiceProvider.java, +	 * A label suitable for display in a UI, typically used to inform the user which service providers he or she has connected with / may connect with. e.g. Twitter., +	 */, +	String getDisplayName();, +, +	/**, +	 * @throws IllegalStateException if no connections have been established between the account and this provider, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +    , +++ b/settings.gradle, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/ServiceProvider.java, +	 * A label suitable for display in a UI, typically used to inform the user which service providers he or she has connected with / may connect with. e.g. Twitter., +	 */, +	String getDisplayName();, +, +	/**, +	 * @throws IllegalStateException if no connections have been established between the account and this provider, +++ /dev/null, +++ /dev/null, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/jdbc/package-info.java, +/**, + * JDBC-based implementations of the service provider APIs, supporting storage of provider and connection details in, + * a RDBMS., + */, +package org.springframework.social.provider.jdbc;, +, +++ b/build.gradle, +    , +++ b/settings.gradle, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/ServiceProvider.java, +	 * A label suitable for display in a UI, typically used to inform the user which service providers he or she has connected with / may connect with. e.g. Twitter., +	 */, +	String getDisplayName();, +, +	/**, +	 * @throws IllegalStateException if no connections have been established between the account and this provider, +++ /dev/null, +++ /dev/null, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/jdbc/package-info.java, +/**, + * JDBC-based implementations of the service provider APIs, supporting storage of provider and connection details in, + * a RDBMS., + */, +package org.springframework.social.provider.jdbc;, +, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth/OAuthClientRequestSigner.java, +/*, + * Copyright 2010 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.provider.oauth;, +, +import java.util.Map;, +, +import org.springframework.http.client.ClientHttpRequest;, +, +/**, + * Strategy interface for signing a client request with the necessary]