[+++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth/OAuthClientRequestSigner.java, + * Strategy interface for signing a client request with the necessary information for it to be OAuth-authenticated., + * Implementations of this interface will vary for different versions of OAuth., +	, +	/**, +	 * Sign the client http request with OAuth credentials., +	 * To be called before the request is executed., +	 * @param request the client http request, +	 */, +	void sign(ClientHttpRequest request);, +	, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth/OAuthClientRequestSigner.java, + * Strategy interface for signing a client request with the necessary information for it to be OAuth-authenticated., + * Implementations of this interface will vary for different versions of OAuth., +	, +	/**, +	 * Sign the client http request with OAuth credentials., +	 * To be called before the request is executed., +	 * @param request the client http request, +	 */, +	void sign(ClientHttpRequest request);, +	, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth/OAuthSigningClientHttpRequest.java, +import java.io.OutputStream;, + * Implementation of {@link ClientHttpRequest} that wraps another {@link ClientHttpRequest}, + * and signs it with an OAuth <code>Authorization</code> header before it is sent., +public final class OAuthSigningClientHttpRequest implements ClientHttpRequest {, +, +	, +	 * @param delegate The wrapped {@link ClientHttpRequest} that is to be signed, +	 * @param signer An OAuth signer, +	// implementing HttpHeaders, +	, +	public HttpHeaders getHeaders() {, +		return delegate.getHeaders();, +	// implementing HttpOutputMessage, +	public OutputStream getBody() throws IOException {, +		return delegate.getBody();, +, +	// implementing ClientHttpRequest, +, +	public HttpMethod getMethod() {, +		return delegate.getMethod();, +	public ClientHttpResponse execute() throws IOException {, +		signer.sign(delegate);, +		return delegate.execute();, +, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth/OAuthClientRequestSigner.java, + * Strategy interface for signing a client request with the necessary information for it to be OAuth-authenticated., + * Implementations of this interface will vary for different versions of OAuth., +	, +	/**, +	 * Sign the client http request with OAuth credentials., +	 * To be called before the request is executed., +	 * @param request the client http request, +	 */, +	void sign(ClientHttpRequest request);, +	, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth/OAuthSigningClientHttpRequest.java, +import java.io.OutputStream;, + * Implementation of {@link ClientHttpRequest} that wraps another {@link ClientHttpRequest}, + * and signs it with an OAuth <code>Authorization</code> header before it is sent., +public final class OAuthSigningClientHttpRequest implements ClientHttpRequest {, +, +	, +	 * @param delegate The wrapped {@link ClientHttpRequest} that is to be signed, +	 * @param signer An OAuth signer, +	// implementing HttpHeaders, +	, +	public HttpHeaders getHeaders() {, +		return delegate.getHeaders();, +	// implementing HttpOutputMessage, +	public OutputStream getBody() throws IOException {, +		return delegate.getBody();, +, +	// implementing ClientHttpRequest, +, +	public HttpMethod getMethod() {, +		return delegate.getMethod();, +	public ClientHttpResponse execute() throws IOException {, +		signer.sign(delegate);, +		return delegate.execute();, +, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth/OAuthSigningClientHttpRequestFactory.java, +public final class OAuthSigningClientHttpRequestFactory implements ClientHttpRequestFactory {, +, +	, +	public OAuthSigningClientHttpRequestFactory(OAuthClientRequestSigner signer, ClientHttpRequestFactory delegate) {, +		this.delegate = delegate;, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/oauth/OAuthClientRequestSigner.java, + * Strategy interface for signing a client request with the necessary information for it to be OAuth-authenticated., + * Implementations of this interface will vary for different versions of OAuth., +	, +	/**, +	 * Sign the client http request with OAuth credentials., +	 * To be called before the request is executed., +	 * @param request the client http request, +	 */, +	void sign(ClientHttpRequest request);, +	]