[+++ b/build.gradle, +        maven { url "http://repo.spring.io/plugins-release" }, +        classpath("org.springframework.build.gradle:docbook-reference-plugin:0.2.8"), +    group = "org.springframework.social", +    ext.h2Version               = "1.3.173", +    ext.hamcrestVersion         = "1.3", +    ext.httpComponentsVersion   = "4.3.1", +    ext.jacksonVersion          = "2.2.2", +    ext.javaxInjectVersion      = "1", +    ext.junitVersion            = "4.11", +    ext.mockitoVersion          = "1.9.5", +    ext.servletApiVersion       = "3.0.1", +    ext.springVersion           = "4.0.1.RELEASE", +    ext.springSecurityVersion   = "3.2.0.RELEASE", +    ext.thymeleafVersion        = "2.1.2.RELEASE", +    ext.jspApiVersion           = "2.2.1", +    apply plugin: "java", +    apply plugin: "eclipse", +    apply plugin: "idea", +    [compileJava, compileTestJava]*.options*.compilerArgs = ["-Xlint:none"], +        "src/test/resources", , +        "src/test/java", +        classpath.entries.findAll { entry -> entry.path.contains("servlet-api") }*.exported = false, +        manifest.attributes["Implementation-Title"] = subproject.name, +        manifest.attributes["Implementation-Version"] = subproject.version, +            expand(copyright: new Date().format("yyyy"), version: project.version), +        classifier = "sources", +        classifier = "javadoc", +project("spring-social-core") {, +    description = "Foundational module containing the ServiceProvider Connect Framework and Service API invocation support.", +project("spring-social-web") {, +    description = "Spring Web Integration", +        compile project(":spring-social-core"), +project("spring-social-config") {, +    description = "Spring Social Config", +      compile project(":spring-social-core"), +      compile project(":spring-social-security"), optional, +      compile project(":spring-social-web"), +project("spring-social-security") {, +    description = "Spring Security Integration", +        compile project(":spring-social-core"), +        compile project(":spring-social-web"), +    description = "Spring Social", +    apply plugin: "docbook-reference", +        ext.sourceDir = file("src/reference/docbook"), +    // don"t publish the default jar for the root project, +        group = "Documentation", +        description = "Generates aggregated Javadoc API documentation.", +        options.overview = "src/api/overview.html", +        maxMemory = "1024m", +        group = "Distribution", +        classifier = "docs", +        from("src/dist") {, +            include "changelog.txt", +            into "api", +            into "reference", +        group = "Distribution", +        classifier = "schema", +                it.path.endsWith("META-INF/spring.schemas"), +        group = "Distribution", +        classifier = "dist", +        from("src/dist") {, +            include "readme.txt", +            include "license.txt", +            include "notice.txt", +            expand(copyright: new Date().format("yyyy"), version: project.version), +                if (subproject.tasks.findByPath("sourcesJar")) {, +                if (subproject.tasks.findByPath("javadocJar")) {, +        description = "Generates gradlew[.bat] scripts", +        gradleVersion = "1.10", +        from "src/dist", +        include "notice.txt", +        expand(copyright: new Date().format("yyyy"), version: project.version), +        rename { filename -> "NOTICE" }, +        from "src/dist", +        include "license.txt", +        rename { filename -> "LICENSE" }, +build.dependsOn("updateRootDocs")]