[+++ b/samples/gowalla-showcase/src/main/resources/org/springframework/social/samples/gowalla/db/ServiceProviders-data.sql, +insert into ServiceProvider (name, displayName, implementation, apiKey, secret, authorizeUrl, accessTokenUrl) values ('gowalla', 'Gowalla', 'org.springframework.social.connect.providers.GowallaServiceProvider', '71d8cc7bdea44a81a20005328447e7e5', '614328519b634a2e947adec943a92810', 'https://gowalla.com/api/oauth/new?client_id={clientId}&redirect_uri={redirectUri}&scope={scope}', 'https://gowalla.com/api/oauth/token');, +++ b/samples/gowalla-showcase/src/main/resources/org/springframework/social/samples/gowalla/db/ServiceProviders-data.sql, +insert into ServiceProvider (name, displayName, implementation, apiKey, secret, authorizeUrl, accessTokenUrl) values ('gowalla', 'Gowalla', 'org.springframework.social.connect.providers.GowallaServiceProvider', '71d8cc7bdea44a81a20005328447e7e5', '614328519b634a2e947adec943a92810', 'https://gowalla.com/api/oauth/new?client_id={clientId}&redirect_uri={redirectUri}&scope={scope}', 'https://gowalla.com/api/oauth/token');, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractOAuth2ServiceProvider.java, +		tokenRequestParameters.put("grant_type", "authorization_code");, +	@Override, +	public void refreshConnection(Serializable accountId, String providerAccountId) {, +		String refreshToken = connectionRepository.getRefreshToken(accountId, getName(), providerAccountId);, +		if (refreshToken == null) {, +			throw new UnsupportedOperationException("Connection refresh is not supported for this provider.");, +		}, +, +		// TODO : Look into reducing some of the duplication between this method, +		// and the connect() method above, +		Map<String, String> tokenRequestParameters = new HashMap<String, String>();, +		tokenRequestParameters.put("client_id", parameters.getApiKey());, +		tokenRequestParameters.put("client_secret", parameters.getSecret());, +		tokenRequestParameters.put("refresh_token", refreshToken);, +		tokenRequestParameters.put("grant_type", "refresh_token");, +		OAuth2Tokens oauth2Tokens = fetchOAuth2AccessToken(tokenRequestParameters);, +		OAuthToken accessToken = oauth2Tokens.getAccessToken();, +		S serviceOperations = createServiceOperations(accessToken);, +		String username = fetchProviderAccountId(serviceOperations);, +		connectionRepository.updateConnection(accountId, getName(), accessToken, oauth2Tokens.getRefreshToken(),, +				username);, +	}, +, +++ b/samples/gowalla-showcase/src/main/resources/org/springframework/social/samples/gowalla/db/ServiceProviders-data.sql, +insert into ServiceProvider (name, displayName, implementation, apiKey, secret, authorizeUrl, accessTokenUrl) values ('gowalla', 'Gowalla', 'org.springframework.social.connect.providers.GowallaServiceProvider', '71d8cc7bdea44a81a20005328447e7e5', '614328519b634a2e947adec943a92810', 'https://gowalla.com/api/oauth/new?client_id={clientId}&redirect_uri={redirectUri}&scope={scope}', 'https://gowalla.com/api/oauth/token');, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractOAuth2ServiceProvider.java, +		tokenRequestParameters.put("grant_type", "authorization_code");, +	@Override, +	public void refreshConnection(Serializable accountId, String providerAccountId) {, +		String refreshToken = connectionRepository.getRefreshToken(accountId, getName(), providerAccountId);, +		if (refreshToken == null) {, +			throw new UnsupportedOperationException("Connection refresh is not supported for this provider.");, +		}, +, +		// TODO : Look into reducing some of the duplication between this method, +		// and the connect() method above, +		Map<String, String> tokenRequestParameters = new HashMap<String, String>();, +		tokenRequestParameters.put("client_id", parameters.getApiKey());, +		tokenRequestParameters.put("client_secret", parameters.getSecret());, +		tokenRequestParameters.put("refresh_token", refreshToken);, +		tokenRequestParameters.put("grant_type", "refresh_token");, +		OAuth2Tokens oauth2Tokens = fetchOAuth2AccessToken(tokenRequestParameters);, +		OAuthToken accessToken = oauth2Tokens.getAccessToken();, +		S serviceOperations = createServiceOperations(accessToken);, +		String username = fetchProviderAccountId(serviceOperations);, +		connectionRepository.updateConnection(accountId, getName(), accessToken, oauth2Tokens.getRefreshToken(),, +				username);, +	}, +, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractServiceProvider.java, +	public void refreshConnection(Serializable accountId, String providerAccountId) {, +		throw new UnsupportedOperationException("Connection refresh is not supported for this provider.");, +	}, +, +++ b/samples/gowalla-showcase/src/main/resources/org/springframework/social/samples/gowalla/db/ServiceProviders-data.sql, +insert into ServiceProvider (name, displayName, implementation, apiKey, secret, authorizeUrl, accessTokenUrl) values ('gowalla', 'Gowalla', 'org.springframework.social.connect.providers.GowallaServiceProvider', '71d8cc7bdea44a81a20005328447e7e5', '614328519b634a2e947adec943a92810', 'https://gowalla.com/api/oauth/new?client_id={clientId}&redirect_uri={redirectUri}&scope={scope}', 'https://gowalla.com/api/oauth/token');, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractOAuth2ServiceProvider.java, +		tokenRequestParameters.put("grant_type", "authorization_code");, +	@Override, +	public void refreshConnection(Serializable accountId, String providerAccountId) {, +		String refreshToken = connectionRepository.getRefreshToken(accountId, getName(), providerAccountId);, +		if (refreshToken == null) {, +			throw new UnsupportedOperationException("Connection refresh is not supported for this provider.");, +		}, +, +		// TODO : Look into reducing some of the duplication between this method, +		// and the connect() method above, +		Map<String, String> tokenRequestParameters = new HashMap<String, String>();, +		tokenRequestParameters.put("client_id", parameters.getApiKey());, +		tokenRequestParameters.put("client_secret", parameters.getSecret());, +		tokenRequestParameters.put("refresh_token", refreshToken);, +		tokenRequestParameters.put("grant_type", "refresh_token");, +		OAuth2Tokens oauth2Tokens = fetchOAuth2AccessToken(tokenRequestParameters);, +		OAuthToken accessToken = oauth2Tokens.getAccessToken();, +		S serviceOperations = createServiceOperations(accessToken);, +		String username = fetchProviderAccountId(serviceOperations);, +		connectionRepository.updateConnection(accountId, getName(), accessToken, oauth2Tokens.getRefreshToken(),, +				username);, +	}, +, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractServiceProvider.java, +	public void refreshConnection(Serializable accountId, String providerAccountId) {, +		throw new UnsupportedOperationException("Connection refresh is not supported for this provider.");, +	}, +, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AccountConnectionRepository.java, +	void updateConnection(Serializable accountId, String name, OAuthToken accessToken, String refreshToken,, +			String username);, +, +++ b/samples/gowalla-showcase/src/main/resources/org/springframework/social/samples/gowalla/db/ServiceProviders-data.sql, +insert into ServiceProvider (name, displayName, implementation, apiKey, secret, authorizeUrl, accessTokenUrl) values ('gowalla', 'Gowalla', 'org.springframework.social.connect.providers.GowallaServiceProvider', '71d8cc7bdea44a81a20005328447e7e5', '614328519b634a2e947adec943a92810', 'https://gowalla.com/api/oauth/new?client_id={clientId}&redirect_uri={redirectUri}&scope={scope}', 'https://gowalla.com/api/oauth/token');, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractOAuth2ServiceProvider.java, +		tokenRequestParameters.put("grant_type", "authorization_code");, +	@Override, +	public void refreshConnection(Serializable accountId, String providerAccountId) {]