[+++ b/build.gradle, +    mockitoVersion = '1.8.5', +        testCompile "junit:junit:$junitVersion", +        testCompile "org.mockito:mockito-all:$mockitoVersion", +++ b/build.gradle, +    mockitoVersion = '1.8.5', +        testCompile "junit:junit:$junitVersion", +        testCompile "org.mockito:mockito-all:$mockitoVersion", +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +		if (providerUsers == null || providerUsers.isEmpty()) {, +++ b/build.gradle, +    mockitoVersion = '1.8.5', +        testCompile "junit:junit:$junitVersion", +        testCompile "org.mockito:mockito-all:$mockitoVersion", +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +		if (providerUsers == null || providerUsers.isEmpty()) {, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +++ b/build.gradle, +    mockitoVersion = '1.8.5', +        testCompile "junit:junit:$junitVersion", +        testCompile "org.mockito:mockito-all:$mockitoVersion", +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +		if (providerUsers == null || providerUsers.isEmpty()) {, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +++ /dev/null, +++ b/build.gradle, +    mockitoVersion = '1.8.5', +        testCompile "junit:junit:$junitVersion", +        testCompile "org.mockito:mockito-all:$mockitoVersion", +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +		if (providerUsers == null || providerUsers.isEmpty()) {, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +++ /dev/null, +++ b/spring-social-web/src/test/java/org/springframework/social/connect/web/ProviderSignInControllerTest.java, +		private final List<String> matchingUserIds;, +		private ConnectionRepository connectionRepository;, +		private final String providerId;, +			this.providerId = providerId;, +			this.matchingUserIds = matchingUserIds;, +			connectionRepository = mock(ConnectionRepository.class);, +			return matchingUserIds != null ? matchingUserIds : Collections.<String>emptyList();, +			return connectionRepository;, +					return connection.getKey().getProviderId().equals(providerId) && connection.getKey().getProviderUserId().equals("testuser");, +			verify(connectionRepository, times(1)).updateConnection(argThat(matcher));, +++ b/build.gradle, +    mockitoVersion = '1.8.5', +        testCompile "junit:junit:$junitVersion", +        testCompile "org.mockito:mockito-all:$mockitoVersion", +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +		if (providerUsers == null || providerUsers.isEmpty()) {, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +++ /dev/null, +++ b/spring-social-web/src/test/java/org/springframework/social/connect/web/ProviderSignInControllerTest.java, +		private final List<String> matchingUserIds;, +		private ConnectionRepository connectionRepository;, +		private final String providerId;, +			this.providerId = providerId;, +			this.matchingUserIds = matchingUserIds;, +			connectionRepository = mock(ConnectionRepository.class);, +			return matchingUserIds != null ? matchingUserIds : Collections.<String>emptyList();, +			return connectionRepository;, +					return connection.getKey().getProviderId().equals(providerId) && connection.getKey().getProviderUserId().equals("testuser");, +			verify(connectionRepository, times(1)).updateConnection(argThat(matcher));, +++ /dev/null, +++ b/build.gradle, +    mockitoVersion = '1.8.5', +        testCompile "junit:junit:$junitVersion", +        testCompile "org.mockito:mockito-all:$mockitoVersion", +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +		if (providerUsers == null || providerUsers.isEmpty()) {, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +++ /dev/null, +++ b/spring-social-web/src/test/java/org/springframework/social/connect/web/ProviderSignInControllerTest.java, +		private final List<String> matchingUserIds;, +		private ConnectionRepository connectionRepository;, +		private final String providerId;, +			this.providerId = providerId;, +			this.matchingUserIds = matchingUserIds;, +			connectionRepository = mock(ConnectionRepository.class);, +			return matchingUserIds != null ? matchingUserIds : Collections.<String>emptyList();, +			return connectionRepository;, +					return connection.getKey().getProviderId().equals(providerId) && connection.getKey().getProviderUserId().equals("testuser");, +			verify(connectionRepository, times(1)).updateConnection(argThat(matcher));, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +    mockitoVersion = '1.8.5', +        testCompile "junit:junit:$junitVersion", +        testCompile "org.mockito:mockito-all:$mockitoVersion", +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +		if (providerUsers == null || providerUsers.isEmpty()) {, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +++ /dev/null, +++ b/spring-social-web/src/test/java/org/springframework/social/connect/web/ProviderSignInControllerTest.java, +		private final List<String> matchingUserIds;, +		private ConnectionRepository connectionRepository;, +		private final String providerId;, +			this.providerId = providerId;, +			this.matchingUserIds = matchingUserIds;, +			connectionRepository = mock(ConnectionRepository.class);]