[+++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractServiceProvider.java, +		Map<String, String> tokenRequestParameters = new HashMap<String, String>();, +		tokenRequestParameters.put("client_id", parameters.getApiKey());, +		tokenRequestParameters.put("client_secret", parameters.getSecret());, +		tokenRequestParameters.put("code", code);, +		tokenRequestParameters.put("redirect_uri", redirectUri);, +		OAuthToken accessToken = fetchOAuth2AccessToken(tokenRequestParameters);, +		S serviceOperations = createServiceOperations(accessToken);, +		connectionRepository.addConnection(accountId, getName(), accessToken, username,, +	protected OAuthToken fetchOAuth2AccessToken(Map<String, String> tokenRequestParameters) {, +		Map<String, String> result = new RestTemplate().postForObject(parameters.getAccessTokenUrl(),, +				tokenRequestParameters, Map.class);, +		return new OAuthToken(result.get("access_token"));, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractServiceProvider.java, +		Map<String, String> tokenRequestParameters = new HashMap<String, String>();, +		tokenRequestParameters.put("client_id", parameters.getApiKey());, +		tokenRequestParameters.put("client_secret", parameters.getSecret());, +		tokenRequestParameters.put("code", code);, +		tokenRequestParameters.put("redirect_uri", redirectUri);, +		OAuthToken accessToken = fetchOAuth2AccessToken(tokenRequestParameters);, +		S serviceOperations = createServiceOperations(accessToken);, +		connectionRepository.addConnection(accountId, getName(), accessToken, username,, +	protected OAuthToken fetchOAuth2AccessToken(Map<String, String> tokenRequestParameters) {, +		Map<String, String> result = new RestTemplate().postForObject(parameters.getAccessTokenUrl(),, +				tokenRequestParameters, Map.class);, +		return new OAuthToken(result.get("access_token"));, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/providers/FacebookServiceProvider.java, +	protected OAuthToken fetchOAuth2AccessToken(Map<String, String> tokenRequestParameters) {, +		String response = new RestTemplate().getForObject(parameters.getAccessTokenUrl() + ACCESS_TOKEN_QUERY_PARAMETERS,, +				String.class, tokenRequestParameters);, +		String[] nameValuePairs = response.split("\\&");, +				return new OAuthToken(nameAndValue[1]);]