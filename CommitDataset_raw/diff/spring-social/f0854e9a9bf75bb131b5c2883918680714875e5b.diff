[+++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractServiceProvider.java, +	public void disconnect(String providerAccountId) {, +		connectionRepository.disconnect(accountIdResolver.resolveAccountId(), getName());, +	}, +, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractServiceProvider.java, +	public void disconnect(String providerAccountId) {, +		connectionRepository.disconnect(accountIdResolver.resolveAccountId(), getName());, +	}, +, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/JdbcAccountConnectionRepository.java, +		this.removeAllConnectionsQuery = DEFAULT_REMOVE_ALL_CONNECTIONS_QUERY;, +		this.accountConnectionsQuery = DEFAULT_ACCOUNT_CONNECTIONS_QUERY;, +	 * delete from AccountConnection where member = ? and provider = ? and accountId = ?, +	 * </code>, +	 * , +	 * <p>, +	 * An overriding query should follow a similar form, taking a local member, +	 * ID, a provider ID, and a provider account ID., +	 * , +	 * @param removeConnectionQuery, +	 */, +	public void setRemoveConnectionQuery(String removeConnectionQuery) {, +		this.removeConnectionQuery = removeConnectionQuery;, +	}, +, +	public String getRemoveAllConnectionsQuery() {, +		return removeAllConnectionsQuery;, +	}, +, +	/**, +	 * <p>, +	 * Overrides the default query for deleting all connections for a provider., +	 * </p>, +	 * , +	 * <p>, +	 * The default query is:, +	 * </p>, +	 * , +	 * <code>, +	public void setRemoveAllConnectionsQuery(String removeAllConnectionsQuery) {, +		this.removeAllConnectionsQuery = removeAllConnectionsQuery;, +	public String getAccountConnectionsQuery() {, +		return accountConnectionsQuery;, +	public void setAccountConnectionsQuery(String accountConnectionsQuery) {, +		this.accountConnectionsQuery = accountConnectionsQuery;, +		jdbcTemplate.update(removeAllConnectionsQuery, accountId, provider);, +	}, +, +	public void disconnect(Serializable accountId, String provider, String providerAccountId) {, +		jdbcTemplate.update(removeConnectionQuery, accountId, provider, providerAccountId);, +	private String removeAllConnectionsQuery;, +	static final String DEFAULT_REMOVE_CONNECTION_QUERY = "delete from AccountConnection where member = ? and provider = ? and accountId = ?";, +	static final String DEFAULT_REMOVE_ALL_CONNECTIONS_QUERY = "delete from AccountConnection where member = ? and provider = ?";, +	static final String DEFAULT_ACCOUNT_CONNECTIONS_QUERY = "select member, provider, accessToken, secret, accountId, profileUrl from AccountConnection where member = ? and provider = ?";, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractServiceProvider.java, +	public void disconnect(String providerAccountId) {, +		connectionRepository.disconnect(accountIdResolver.resolveAccountId(), getName());, +	}, +, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/JdbcAccountConnectionRepository.java, +		this.removeAllConnectionsQuery = DEFAULT_REMOVE_ALL_CONNECTIONS_QUERY;, +		this.accountConnectionsQuery = DEFAULT_ACCOUNT_CONNECTIONS_QUERY;, +	 * delete from AccountConnection where member = ? and provider = ? and accountId = ?, +	 * </code>, +	 * , +	 * <p>, +	 * An overriding query should follow a similar form, taking a local member, +	 * ID, a provider ID, and a provider account ID., +	 * , +	 * @param removeConnectionQuery, +	 */, +	public void setRemoveConnectionQuery(String removeConnectionQuery) {, +		this.removeConnectionQuery = removeConnectionQuery;, +	}, +, +	public String getRemoveAllConnectionsQuery() {, +		return removeAllConnectionsQuery;, +	}, +, +	/**, +	 * <p>, +	 * Overrides the default query for deleting all connections for a provider., +	 * </p>, +	 * , +	 * <p>, +	 * The default query is:, +	 * </p>, +	 * , +	 * <code>, +	public void setRemoveAllConnectionsQuery(String removeAllConnectionsQuery) {, +		this.removeAllConnectionsQuery = removeAllConnectionsQuery;, +	public String getAccountConnectionsQuery() {, +		return accountConnectionsQuery;, +	public void setAccountConnectionsQuery(String accountConnectionsQuery) {, +		this.accountConnectionsQuery = accountConnectionsQuery;, +		jdbcTemplate.update(removeAllConnectionsQuery, accountId, provider);, +	}, +, +	public void disconnect(Serializable accountId, String provider, String providerAccountId) {]