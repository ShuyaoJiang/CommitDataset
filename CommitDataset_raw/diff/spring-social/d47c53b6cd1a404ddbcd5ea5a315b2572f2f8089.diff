[+++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/FeedOperations.java, +	String post(String message, FacebookLink link);, +	String post(String ownerId, String message, FacebookLink link);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/FeedOperations.java, +	String post(String message, FacebookLink link);, +	String post(String ownerId, String message, FacebookLink link);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/PageOperations.java, +	 * To post a link to the page's feed as the authenticated user, use {@link FeedOperations#post(String, String, FacebookLink)} instead., +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/FeedOperations.java, +	String post(String message, FacebookLink link);, +	String post(String ownerId, String message, FacebookLink link);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/PageOperations.java, +	 * To post a link to the page's feed as the authenticated user, use {@link FeedOperations#post(String, String, FacebookLink)} instead., +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/FeedTemplate.java, +	public String post(String message, FacebookLink link) {, +		return post("me", message, link);, +	public String post(String ownerId, String message, FacebookLink link) {, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/FeedOperations.java, +	String post(String message, FacebookLink link);, +	String post(String ownerId, String message, FacebookLink link);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/PageOperations.java, +	 * To post a link to the page's feed as the authenticated user, use {@link FeedOperations#post(String, String, FacebookLink)} instead., +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/FeedTemplate.java, +	public String post(String message, FacebookLink link) {, +		return post("me", message, link);, +	public String post(String ownerId, String message, FacebookLink link) {, +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/api/FeedTemplateTest.java, +		assertEquals("123456_78901234", facebook.feedOperations().post("Hello Facebook World", link));, +		assertEquals("123456_78901234", facebook.feedOperations().post("123456789", "Hello Facebook World", link));, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/FeedOperations.java, +	String post(String message, FacebookLink link);, +	String post(String ownerId, String message, FacebookLink link);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/PageOperations.java, +	 * To post a link to the page's feed as the authenticated user, use {@link FeedOperations#post(String, String, FacebookLink)} instead., +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/api/impl/FeedTemplate.java, +	public String post(String message, FacebookLink link) {, +		return post("me", message, link);, +	public String post(String ownerId, String message, FacebookLink link) {, +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/api/FeedTemplateTest.java, +		assertEquals("123456_78901234", facebook.feedOperations().post("Hello Facebook World", link));, +		assertEquals("123456_78901234", facebook.feedOperations().post("123456789", "Hello Facebook World", link));, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/signin/web/ProviderSignInUtils.java, +import org.springframework.web.context.request.RequestAttributes;, +	 * @param request the current request attributes, used to extract sign-in attempt information from the current user session, +	public static Connection<?> getConnection(RequestAttributes request) {, +	 * @param request the current request attributes, used to extract sign-in attempt information from the current user session, +	public static void handlePostSignUp(RequestAttributes request) {, +			request.removeAttribute(ProviderSignInAttempt.SESSION_ATTRIBUTE, RequestAttributes.SCOPE_SESSION);, +	private static ProviderSignInAttempt getProviderUserSignInAttempt(RequestAttributes request) {, +		return (ProviderSignInAttempt) request.getAttribute(ProviderSignInAttempt.SESSION_ATTRIBUTE, RequestAttributes.SCOPE_SESSION);]