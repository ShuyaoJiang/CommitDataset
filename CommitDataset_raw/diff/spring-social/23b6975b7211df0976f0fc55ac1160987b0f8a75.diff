[+++ b/samples/twitter-showcase/src/main/resources/org/springframework/social/samples/twitter/db/ServiceProviders-data.sql, +insert into ServiceProvider (name, displayName, implementation, apiKey, secret, requestTokenUrl, authorizeUrl, accessTokenUrl) values ('twitter', 'Twitter', 'org.springframework.social.connect.providers.TwitterServiceProvider', 'YR571S2JiVBOFyJS5MEg', 'Kb8hS0luftwCJX3qVoyiLUMfZDtK1EozFoUkjNLUMx4', 'http://twitter.com/oauth/request_token', 'https://twitter.com/oauth/authorize?oauth_token={requestToken}', 'https://twitter.com/oauth/access_token');, +++ b/samples/twitter-showcase/src/main/resources/org/springframework/social/samples/twitter/db/ServiceProviders-data.sql, +insert into ServiceProvider (name, displayName, implementation, apiKey, secret, requestTokenUrl, authorizeUrl, accessTokenUrl) values ('twitter', 'Twitter', 'org.springframework.social.connect.providers.TwitterServiceProvider', 'YR571S2JiVBOFyJS5MEg', 'Kb8hS0luftwCJX3qVoyiLUMfZDtK1EozFoUkjNLUMx4', 'http://twitter.com/oauth/request_token', 'https://twitter.com/oauth/authorize?oauth_token={requestToken}', 'https://twitter.com/oauth/access_token');, +++ b/spring-social-connect-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +import java.util.HashMap;, +import java.util.Map;, +		Map<String, String> authorizationParameters = new HashMap<String, String>();, +			authorizationParameters.put("requestToken", requestToken.getValue());, +			authorizationParameters.put("redirectUri", baseCallbackUrl + name);, +		return "redirect:" + provider.buildAuthorizeUrl(authorizationParameters);, +++ b/samples/twitter-showcase/src/main/resources/org/springframework/social/samples/twitter/db/ServiceProviders-data.sql, +insert into ServiceProvider (name, displayName, implementation, apiKey, secret, requestTokenUrl, authorizeUrl, accessTokenUrl) values ('twitter', 'Twitter', 'org.springframework.social.connect.providers.TwitterServiceProvider', 'YR571S2JiVBOFyJS5MEg', 'Kb8hS0luftwCJX3qVoyiLUMfZDtK1EozFoUkjNLUMx4', 'http://twitter.com/oauth/request_token', 'https://twitter.com/oauth/authorize?oauth_token={requestToken}', 'https://twitter.com/oauth/access_token');, +++ b/spring-social-connect-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +import java.util.HashMap;, +import java.util.Map;, +		Map<String, String> authorizationParameters = new HashMap<String, String>();, +			authorizationParameters.put("requestToken", requestToken.getValue());, +			authorizationParameters.put("redirectUri", baseCallbackUrl + name);, +		return "redirect:" + provider.buildAuthorizeUrl(authorizationParameters);, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractOAuth1ServiceProvider.java, +		throw new UnsupportedOperationException(, +++ b/samples/twitter-showcase/src/main/resources/org/springframework/social/samples/twitter/db/ServiceProviders-data.sql, +insert into ServiceProvider (name, displayName, implementation, apiKey, secret, requestTokenUrl, authorizeUrl, accessTokenUrl) values ('twitter', 'Twitter', 'org.springframework.social.connect.providers.TwitterServiceProvider', 'YR571S2JiVBOFyJS5MEg', 'Kb8hS0luftwCJX3qVoyiLUMfZDtK1EozFoUkjNLUMx4', 'http://twitter.com/oauth/request_token', 'https://twitter.com/oauth/authorize?oauth_token={requestToken}', 'https://twitter.com/oauth/access_token');, +++ b/spring-social-connect-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +import java.util.HashMap;, +import java.util.Map;, +		Map<String, String> authorizationParameters = new HashMap<String, String>();, +			authorizationParameters.put("requestToken", requestToken.getValue());, +			authorizationParameters.put("redirectUri", baseCallbackUrl + name);, +		return "redirect:" + provider.buildAuthorizeUrl(authorizationParameters);, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractOAuth1ServiceProvider.java, +		throw new UnsupportedOperationException(, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractOAuth2ServiceProvider.java, +		throw new UnsupportedOperationException(, +				"You may not fetch a request token for an OAuth 2-based service provider");, +		throw new UnsupportedOperationException(, +++ b/samples/twitter-showcase/src/main/resources/org/springframework/social/samples/twitter/db/ServiceProviders-data.sql, +insert into ServiceProvider (name, displayName, implementation, apiKey, secret, requestTokenUrl, authorizeUrl, accessTokenUrl) values ('twitter', 'Twitter', 'org.springframework.social.connect.providers.TwitterServiceProvider', 'YR571S2JiVBOFyJS5MEg', 'Kb8hS0luftwCJX3qVoyiLUMfZDtK1EozFoUkjNLUMx4', 'http://twitter.com/oauth/request_token', 'https://twitter.com/oauth/authorize?oauth_token={requestToken}', 'https://twitter.com/oauth/access_token');, +++ b/spring-social-connect-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +import java.util.HashMap;, +import java.util.Map;, +		Map<String, String> authorizationParameters = new HashMap<String, String>();, +			authorizationParameters.put("requestToken", requestToken.getValue());, +			authorizationParameters.put("redirectUri", baseCallbackUrl + name);, +		return "redirect:" + provider.buildAuthorizeUrl(authorizationParameters);, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractOAuth1ServiceProvider.java, +		throw new UnsupportedOperationException(, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractOAuth2ServiceProvider.java, +		throw new UnsupportedOperationException(, +				"You may not fetch a request token for an OAuth 2-based service provider");, +		throw new UnsupportedOperationException(, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractServiceProvider.java, +import java.util.HashMap;, +	public String buildAuthorizeUrl(Map<String, String> authorizationParameters) {, +		Map<String, String> authParametersCopy = new HashMap<String, String>(authorizationParameters);, +		authParametersCopy.put("clientId", getApiKey());, +		return parameters.getAuthorizeUrl().expand(authParametersCopy).toString();, +	}, +, +++ b/samples/twitter-showcase/src/main/resources/org/springframework/social/samples/twitter/db/ServiceProviders-data.sql, +insert into ServiceProvider (name, displayName, implementation, apiKey, secret, requestTokenUrl, authorizeUrl, accessTokenUrl) values ('twitter', 'Twitter', 'org.springframework.social.connect.providers.TwitterServiceProvider', 'YR571S2JiVBOFyJS5MEg', 'Kb8hS0luftwCJX3qVoyiLUMfZDtK1EozFoUkjNLUMx4', 'http://twitter.com/oauth/request_token', 'https://twitter.com/oauth/authorize?oauth_token={requestToken}', 'https://twitter.com/oauth/access_token');, +++ b/spring-social-connect-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +import java.util.HashMap;, +import java.util.Map;, +		Map<String, String> authorizationParameters = new HashMap<String, String>();, +			authorizationParameters.put("requestToken", requestToken.getValue());, +			authorizationParameters.put("redirectUri", baseCallbackUrl + name);, +		return "redirect:" + provider.buildAuthorizeUrl(authorizationParameters);, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractOAuth1ServiceProvider.java, +		throw new UnsupportedOperationException(, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractOAuth2ServiceProvider.java, +		throw new UnsupportedOperationException(, +				"You may not fetch a request token for an OAuth 2-based service provider");, +		throw new UnsupportedOperationException(, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractServiceProvider.java, +import java.util.HashMap;, +	public String buildAuthorizeUrl(Map<String, String> authorizationParameters) {, +		Map<String, String> authParametersCopy = new HashMap<String, String>(authorizationParameters);, +		authParametersCopy.put("clientId", getApiKey());, +		return parameters.getAuthorizeUrl().expand(authParametersCopy).toString();, +	}, +, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/ServiceProvider.java, +import java.util.Map;, +	 * @param authorizationParameters, +	 *            Values to be plugged into the authorization URL. In the case, +	 *            request token. For OAuth 2 it should include the application's, +	 *            redirect URL and optionally the authorization scope., +	String buildAuthorizeUrl(Map<String, String> authorizationParameters);, +++ b/samples/twitter-showcase/src/main/resources/org/springframework/social/samples/twitter/db/ServiceProviders-data.sql, +insert into ServiceProvider (name, displayName, implementation, apiKey, secret, requestTokenUrl, authorizeUrl, accessTokenUrl) values ('twitter', 'Twitter', 'org.springframework.social.connect.providers.TwitterServiceProvider', 'YR571S2JiVBOFyJS5MEg', 'Kb8hS0luftwCJX3qVoyiLUMfZDtK1EozFoUkjNLUMx4', 'http://twitter.com/oauth/request_token', 'https://twitter.com/oauth/authorize?oauth_token={requestToken}', 'https://twitter.com/oauth/access_token');, +++ b/spring-social-connect-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +import java.util.HashMap;, +import java.util.Map;, +		Map<String, String> authorizationParameters = new HashMap<String, String>();, +			authorizationParameters.put("requestToken", requestToken.getValue());, +			authorizationParameters.put("redirectUri", baseCallbackUrl + name);, +		return "redirect:" + provider.buildAuthorizeUrl(authorizationParameters);, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractOAuth1ServiceProvider.java]