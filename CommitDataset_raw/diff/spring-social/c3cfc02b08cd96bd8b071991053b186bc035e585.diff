[+++ b/build.gradle, +    	compile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/build.gradle, +    	compile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/spring-social-linkedin/src/main/java/org/springframework/social/linkedin/api/LinkedInConnections.java, +	, +	private List<LinkedInProfile> connections;, +	, +	public LinkedInConnections(List<LinkedInProfile> connections) {, +		this.connections = connections;, +	}, +++ b/build.gradle, +    	compile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/spring-social-linkedin/src/main/java/org/springframework/social/linkedin/api/LinkedInConnections.java, +	, +	private List<LinkedInProfile> connections;, +	, +	public LinkedInConnections(List<LinkedInProfile> connections) {, +		this.connections = connections;, +	}, +++ b/spring-social-linkedin/src/main/java/org/springframework/social/linkedin/api/LinkedInProfile.java, +, +	private final String id;, +	private final String firstName;, +	private final String lastName;, +	private final String headline;, +	private final String industry;, +	private final String standardProfileUrl;, +	private final String publicProfileUrl;, +	private final String profilePictureUrl;, +	, +	public LinkedInProfile(String id, String firstName, String lastName, String headline, String industry, String publicProfileUrl, String standardProfileUrl, String profilePictureUrl) {, +		this.id = id;, +		this.firstName = firstName;, +		this.lastName = lastName;, +		this.headline = headline;, +		this.industry = industry;, +		this.publicProfileUrl = publicProfileUrl;, +		this.standardProfileUrl = standardProfileUrl;, +		this.profilePictureUrl = profilePictureUrl;, +	}, +		return standardProfileUrl;, +		return publicProfileUrl;, +++ b/build.gradle, +    	compile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/spring-social-linkedin/src/main/java/org/springframework/social/linkedin/api/LinkedInConnections.java, +	, +	private List<LinkedInProfile> connections;, +	, +	public LinkedInConnections(List<LinkedInProfile> connections) {, +		this.connections = connections;, +	}, +++ b/spring-social-linkedin/src/main/java/org/springframework/social/linkedin/api/LinkedInProfile.java, +, +	private final String id;, +	private final String firstName;, +	private final String lastName;, +	private final String headline;, +	private final String industry;, +	private final String standardProfileUrl;, +	private final String publicProfileUrl;, +	private final String profilePictureUrl;, +	, +	public LinkedInProfile(String id, String firstName, String lastName, String headline, String industry, String publicProfileUrl, String standardProfileUrl, String profilePictureUrl) {, +		this.id = id;, +		this.firstName = firstName;, +		this.lastName = lastName;, +		this.headline = headline;, +		this.industry = industry;, +		this.publicProfileUrl = publicProfileUrl;, +		this.standardProfileUrl = standardProfileUrl;, +		this.profilePictureUrl = profilePictureUrl;, +	}, +		return standardProfileUrl;, +		return publicProfileUrl;, +++ b/spring-social-linkedin/src/main/java/org/springframework/social/linkedin/api/impl/LinkedInConnectionsMixin.java, +/*, + * Copyright 2010 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.linkedin.api.impl;, +, +import java.util.List;, +, +import org.codehaus.jackson.annotate.JsonIgnoreProperties;, +import org.codehaus.jackson.annotate.JsonProperty;, +import org.springframework.social.linkedin.api.LinkedInProfile;, +, +@JsonIgnoreProperties(ignoreUnknown = true)]