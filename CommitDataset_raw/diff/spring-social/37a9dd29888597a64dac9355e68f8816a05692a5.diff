[+++ b/docs/src/reference/docbook/overview.xml, +  <title>Spring Social Overview</title>, +++ b/docs/src/reference/docbook/overview.xml, +  <title>Spring Social Overview</title>, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/OAuth1Template.java, +			for (Iterator<Entry<String, List<String>>> additionalParams = additionalParameters.entrySet().iterator(); additionalParams.hasNext();) {, +		MultiValueMap<String, String> customAuthorizeParameters = getCustomAuthorizationParameters();, +		if (customAuthorizeParameters == null) {, +			if(clientAdditionalParameters != null) {, +				customAuthorizeParameters.putAll(clientAdditionalParameters);, +			}, +			return customAuthorizeParameters;, +++ b/docs/src/reference/docbook/overview.xml, +  <title>Spring Social Overview</title>, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/OAuth1Template.java, +			for (Iterator<Entry<String, List<String>>> additionalParams = additionalParameters.entrySet().iterator(); additionalParams.hasNext();) {, +		MultiValueMap<String, String> customAuthorizeParameters = getCustomAuthorizationParameters();, +		if (customAuthorizeParameters == null) {, +			if(clientAdditionalParameters != null) {, +				customAuthorizeParameters.putAll(clientAdditionalParameters);, +			}, +			return customAuthorizeParameters;, +++ b/spring-social-test/src/test/java/org/springframework/social/oauth1/OAuth1TemplateTest.java, +import static org.junit.Assert.*;, +import static org.springframework.http.HttpMethod.*;, +import static org.springframework.social.test.client.RequestMatchers.*;, +import static org.springframework.social.test.client.ResponseCreators.*;, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +	private OAuth1Template customOauth10;, +, +, +		customOauth10 = new OAuth1Template("consumer_key", "consumer_secret", REQUEST_TOKEN_URL,, +				"https://www.someprovider.com/oauth/authorize", null, ACCESS_TOKEN_URL, OAuth1Version.CORE_10) {, +			protected MultiValueMap<String,String> getCustomAuthorizationParameters() {, +				System.out.println("CUSTOM PARAMETERS");, +				MultiValueMap<String, String> parameters = new LinkedMultiValueMap<String, String>();, +				parameters.set("custom_parameter", "custom_parameter_value");, +				return parameters;, +			};, +		};, +	public void buildAuthorizeUrl_customAuthorizeParameters() {, +		assertEquals("https://www.someprovider.com/oauth/authorize?oauth_token=request_token&oauth_callback=http%3A%2F%2Fwww.someclient.com%2Foauth%2Fcallback&custom_parameter=custom_parameter_value",, +				customOauth10.buildAuthorizeUrl("request_token", new OAuth1Parameters("http://www.someclient.com/oauth/callback")));, +	}, +, +	@Test]