[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionLocator.java, +	<S> ServiceProviderConnection<S> single(Integer connectionId, Class<? extends ServiceProvider<S>> serviceProviderClass);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionLocator.java, +	<S> ServiceProviderConnection<S> single(Integer connectionId, Class<? extends ServiceProvider<S>> serviceProviderClass);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRepository.java, +	List<ServiceProviderConnection<?>> findConnectionsById(Serializable accountId, List<Long> connectionIds);, +	ServiceProviderConnection<?> findConnectionById(Serializable accountId, Long connectionId);, +	void removeConnection(Serializable accountId, Long connectionId);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionLocator.java, +	<S> ServiceProviderConnection<S> single(Integer connectionId, Class<? extends ServiceProvider<S>> serviceProviderClass);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRepository.java, +	List<ServiceProviderConnection<?>> findConnectionsById(Serializable accountId, List<Long> connectionIds);, +	ServiceProviderConnection<?> findConnectionById(Serializable accountId, Long connectionId);, +	void removeConnection(Serializable accountId, Long connectionId);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/JdbcServiceProviderConnectionRepository.java, +	public List<ServiceProviderConnection<?>> findConnectionsById(Serializable accountId, List<Long> connectionIds) {, +		return jdbcTemplate.query(SELECT_FROM_SERVICE_PROVIDER_CONNECTION + " where id in (?) and accountId = ? order by providerId, id", connectionMapper, connectionIds, accountId);, +	public ServiceProviderConnection<?> findConnectionById(Serializable accountId, Long connectionId) {, +		return jdbcTemplate.queryForObject(SELECT_FROM_SERVICE_PROVIDER_CONNECTION + " where id = ? and accountId", connectionMapper, connectionId, accountId);, +		jdbcTemplate.update("delete from ServiceProviderConnection where accountId = ? and providerId = ?", accountId, providerId);, +	public void removeConnection(Serializable accountId, Long connectionId) {, +		jdbcTemplate.update("delete from ServiceProviderConnection where id = ? and accountId = ?", connectionId, accountId);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionLocator.java, +	<S> ServiceProviderConnection<S> single(Integer connectionId, Class<? extends ServiceProvider<S>> serviceProviderClass);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRepository.java, +	List<ServiceProviderConnection<?>> findConnectionsById(Serializable accountId, List<Long> connectionIds);, +	ServiceProviderConnection<?> findConnectionById(Serializable accountId, Long connectionId);, +	void removeConnection(Serializable accountId, Long connectionId);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/support/JdbcServiceProviderConnectionRepository.java, +	public List<ServiceProviderConnection<?>> findConnectionsById(Serializable accountId, List<Long> connectionIds) {, +		return jdbcTemplate.query(SELECT_FROM_SERVICE_PROVIDER_CONNECTION + " where id in (?) and accountId = ? order by providerId, id", connectionMapper, connectionIds, accountId);, +	public ServiceProviderConnection<?> findConnectionById(Serializable accountId, Long connectionId) {, +		return jdbcTemplate.queryForObject(SELECT_FROM_SERVICE_PROVIDER_CONNECTION + " where id = ? and accountId", connectionMapper, connectionId, accountId);, +		jdbcTemplate.update("delete from ServiceProviderConnection where accountId = ? and providerId = ?", accountId, providerId);, +	public void removeConnection(Serializable accountId, Long connectionId) {, +		jdbcTemplate.update("delete from ServiceProviderConnection where id = ? and accountId = ?", connectionId, accountId);, +++ b/spring-social-web/src/main/java/org/springframework/social/web/connect/ConnectController.java, +		connectionRepository.removeConnection(accountIdExtractor.extractAccountId(request), connectionId);]