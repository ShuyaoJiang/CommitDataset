[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AccessGrant.java, +	public AccessGrant(String accessToken, String scope, String refreshToken, Long expiresIn) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AccessGrant.java, +	public AccessGrant(String accessToken, String scope, String refreshToken, Long expiresIn) {, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +	protected AccessGrant createAccessGrant(String accessToken, String scope, String refreshToken, Long expiresIn, Map<String, Object> response) {, +	private Long getIntegerValue(Map<String, Object> map, String key) {, +			return Long.valueOf(String.valueOf(map.get(key))); // normalize to String before creating integer value;			, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AccessGrant.java, +	public AccessGrant(String accessToken, String scope, String refreshToken, Long expiresIn) {, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +	protected AccessGrant createAccessGrant(String accessToken, String scope, String refreshToken, Long expiresIn, Map<String, Object> response) {, +	private Long getIntegerValue(Map<String, Object> map, String key) {, +			return Long.valueOf(String.valueOf(map.get(key))); // normalize to String before creating integer value;			, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepositoryTest.java, +		Connection<TestFacebookApi> connection = connectionFactory.createConnection(new AccessGrant("123456789", null, "987654321", 3600L));, +		Connection<TestFacebookApi> connection = connectionFactory.createConnection(new AccessGrant("123456789", null, "987654321", 3600L));, +					return new AccessGrant("765432109", "read", "654321098", 3600L);, +					return new AccessGrant("765432109", "read", "654321098", 3600L);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AccessGrant.java, +	public AccessGrant(String accessToken, String scope, String refreshToken, Long expiresIn) {, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +	protected AccessGrant createAccessGrant(String accessToken, String scope, String refreshToken, Long expiresIn, Map<String, Object> response) {, +	private Long getIntegerValue(Map<String, Object> map, String key) {, +			return Long.valueOf(String.valueOf(map.get(key))); // normalize to String before creating integer value;			, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepositoryTest.java, +		Connection<TestFacebookApi> connection = connectionFactory.createConnection(new AccessGrant("123456789", null, "987654321", 3600L));, +		Connection<TestFacebookApi> connection = connectionFactory.createConnection(new AccessGrant("123456789", null, "987654321", 3600L));, +					return new AccessGrant("765432109", "read", "654321098", 3600L);, +					return new AccessGrant("765432109", "read", "654321098", 3600L);, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/mem/InMemoryUsersConnectionRepositoryTest.java, +		Connection<TestFacebookApi> connection = facebookConnectionFactory.createConnection(new AccessGrant("123456789", null, "987654321", 3600L));, +		Connection<TestFacebookApi> connection = facebookConnectionFactory.createConnection(new AccessGrant("123456789", null, "987654321", 3600L));, +					return new AccessGrant("765432109", "read", "654321098", 3600L);, +					return new AccessGrant("765432109", "read", "654321098", 3600L);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcConnectionRepository.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/AccessGrant.java, +	public AccessGrant(String accessToken, String scope, String refreshToken, Long expiresIn) {, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +	protected AccessGrant createAccessGrant(String accessToken, String scope, String refreshToken, Long expiresIn, Map<String, Object> response) {, +	private Long getIntegerValue(Map<String, Object> map, String key) {, +			return Long.valueOf(String.valueOf(map.get(key))); // normalize to String before creating integer value;			, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepositoryTest.java, +		Connection<TestFacebookApi> connection = connectionFactory.createConnection(new AccessGrant("123456789", null, "987654321", 3600L));, +		Connection<TestFacebookApi> connection = connectionFactory.createConnection(new AccessGrant("123456789", null, "987654321", 3600L));, +					return new AccessGrant("765432109", "read", "654321098", 3600L);, +					return new AccessGrant("765432109", "read", "654321098", 3600L);, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/mem/InMemoryUsersConnectionRepositoryTest.java, +		Connection<TestFacebookApi> connection = facebookConnectionFactory.createConnection(new AccessGrant("123456789", null, "987654321", 3600L));, +		Connection<TestFacebookApi> connection = facebookConnectionFactory.createConnection(new AccessGrant("123456789", null, "987654321", 3600L));, +					return new AccessGrant("765432109", "read", "654321098", 3600L);, +					return new AccessGrant("765432109", "read", "654321098", 3600L);, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/oauth2/StubOAuth2Operations.java, +		return new AccessGrant("12345", null, "23456", 3600L);, +		return new AccessGrant("12345", null, "23456", 3600L);, +		return new AccessGrant("12345", null,  "23456", 3600L);, +		return new AccessGrant("12345", null,  "23456", 3600L);, +		return new AccessGrant("12345", null,  null, 3600L);, +		return new AccessGrant("12345", null,  null, 3600L);]