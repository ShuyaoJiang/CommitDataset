[+++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractServiceProvider.java, +		OAuthToken oauthAccessToken = new OAuthToken(fetchOAuth2AccessToken(rest, request));, +	protected String fetchOAuth2AccessToken(RestTemplate rest, Map<String, String> request) {, +		String accessToken;, +		@SuppressWarnings("unchecked"), +		Map<String, String> result = rest.postForObject(parameters.getAccessTokenUrl(), request, Map.class);, +		accessToken = result.get("access_token");, +		return accessToken;, +	}, +	// subclassing hooks, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractServiceProvider.java, +		OAuthToken oauthAccessToken = new OAuthToken(fetchOAuth2AccessToken(rest, request));, +	protected String fetchOAuth2AccessToken(RestTemplate rest, Map<String, String> request) {, +		String accessToken;, +		@SuppressWarnings("unchecked"), +		Map<String, String> result = rest.postForObject(parameters.getAccessTokenUrl(), request, Map.class);, +		accessToken = result.get("access_token");, +		return accessToken;, +	}, +	// subclassing hooks, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/OAuthVersion.java, +	OAUTH_1, OAUTH_2, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/AbstractServiceProvider.java, +		OAuthToken oauthAccessToken = new OAuthToken(fetchOAuth2AccessToken(rest, request));, +	protected String fetchOAuth2AccessToken(RestTemplate rest, Map<String, String> request) {, +		String accessToken;, +		@SuppressWarnings("unchecked"), +		Map<String, String> result = rest.postForObject(parameters.getAccessTokenUrl(), request, Map.class);, +		accessToken = result.get("access_token");, +		return accessToken;, +	}, +	// subclassing hooks, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/OAuthVersion.java, +	OAUTH_1, OAUTH_2, +++ b/spring-social-connect/src/main/java/org/springframework/social/connect/providers/FacebookServiceProvider.java, +import java.util.Map;, +, +import org.springframework.web.client.RestTemplate;, +	/*, +	 * This method is necessary because Facebook fails to properly adhere to the, +	 * latest OAuth 2 specification draft (draft 11). In particular Facebook, +	 * differs from the spec in the following 2 ways:, +	 * , +	 * 1. The OAuth 2 spec says requests for access tokens should be made via, +	 * POST requests. Facebook only supports GET requests., +	 * , +	 * 2. The OAuth 2 spec limits the access token response to application/json, +	 * content type. Facebook responds with what appears to be form-encoded data, +	 * but with Content-Type set to "text/plain"., +	 * , +	 * In addition, the OAuth 2 spec speaks of a refresh token that may be, +	 * returned so that the client can refresh the access token after it, +	 * expires. Facebook does not support refresh tokens., +	 */, +	@Override, +	protected String fetchOAuth2AccessToken(RestTemplate rest, Map<String, String> request) {, +		String result = rest.getForObject(parameters.getAccessTokenUrl() + ACCESS_TOKEN_QUERY_PARAMETERS, String.class,, +				request);, +		String[] nameValuePairs = result.split("\\&");, +		for (String nameValuePair : nameValuePairs) {, +			String[] nameAndValue = nameValuePair.split("=");, +			if (nameAndValue[0].equals("access_token")) {, +				return nameAndValue[1];, +			}, +		}, +, +		return null;, +	}, +, +	private static final String ACCESS_TOKEN_QUERY_PARAMETERS = "?client_id={client_id}&client_secret={client_secret}&code={code}&redirect_uri={redirect_uri}";, +]