[+++ b/spring-social-security/src/main/java/org/springframework/social/security/SocialAuthenticationFilter.java, +import org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler;, +	, +	public final void doFilter(final ServletRequest req, final ServletResponse res, final FilterChain chain), +		doFilter((HttpServletRequest) req, (HttpServletResponse) res, chain);, +	}, +	public void doFilter(final HttpServletRequest request, final HttpServletResponse response, final FilterChain chain), +			throws IOException, ServletException {, +		if (!response.isCommitted()) {, +			chain.doFilter(request, response);, +		if (getRequestedProviderId(request) != null) {, +			// only redirect explicit auth, +	}, +	public void setPostLoginUrl(String postLoginUrl) {, +		AuthenticationSuccessHandler successHandler = getSuccessHandler();, +		if (successHandler instanceof AbstractAuthenticationTargetUrlRequestHandler) {, +			AbstractAuthenticationTargetUrlRequestHandler h = (AbstractAuthenticationTargetUrlRequestHandler) successHandler;, +			h.setDefaultTargetUrl(postLoginUrl);, +		} else {, +			throw new IllegalStateException("can't set postLoginUrl on unknown successHandler, type is " + successHandler.getClass().getName());, +		}, +	}, +, +		if (successHandler == null) {, +			throw new NullPointerException("successHandler");, +		}, +++ b/spring-social-security/src/main/java/org/springframework/social/security/SocialAuthenticationFilter.java, +import org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler;, +	, +	public final void doFilter(final ServletRequest req, final ServletResponse res, final FilterChain chain), +		doFilter((HttpServletRequest) req, (HttpServletResponse) res, chain);, +	}, +	public void doFilter(final HttpServletRequest request, final HttpServletResponse response, final FilterChain chain), +			throws IOException, ServletException {, +		if (!response.isCommitted()) {, +			chain.doFilter(request, response);, +		if (getRequestedProviderId(request) != null) {, +			// only redirect explicit auth, +	}, +	public void setPostLoginUrl(String postLoginUrl) {, +		AuthenticationSuccessHandler successHandler = getSuccessHandler();, +		if (successHandler instanceof AbstractAuthenticationTargetUrlRequestHandler) {, +			AbstractAuthenticationTargetUrlRequestHandler h = (AbstractAuthenticationTargetUrlRequestHandler) successHandler;, +			h.setDefaultTargetUrl(postLoginUrl);, +		} else {, +			throw new IllegalStateException("can't set postLoginUrl on unknown successHandler, type is " + successHandler.getClass().getName());, +		}, +	}, +, +		if (successHandler == null) {, +			throw new NullPointerException("successHandler");, +		}, +++ b/spring-social-security/src/test/java/org/springframework/social/security/SocialAuthenticationFilterTest.java, +		env.filter.setPostLoginUrl("/success");, +		assertEquals("/success", env.res.getRedirectedUrl());]