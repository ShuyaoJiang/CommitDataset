[+++ b/src/main/java/org/springframework/social/twitter/TwitterOperations.java, +	List<String> getFollowed(String screenName);, +	void tweet(String message, AccessTokenProvider<?> tokenProvider);, +, +	void retweet(long tweetId, AccessTokenProvider<?> tokenProvider);, +++ b/src/main/java/org/springframework/social/twitter/TwitterOperations.java, +	List<String> getFollowed(String screenName);, +	void tweet(String message, AccessTokenProvider<?> tokenProvider);, +, +	void retweet(long tweetId, AccessTokenProvider<?> tokenProvider);, +++ b/src/main/java/org/springframework/social/twitter/TwitterTemplate.java, +	public List<String> getFollowed(String screenName) {, +	public void tweet(String message, AccessTokenProvider<?> tokenProvider) {, +		exchangeForMap(HttpMethod.POST, TWEET_URL, parameters, tokenProvider);, +	}, +, +	public void retweet(long tweetId, AccessTokenProvider<?> tokenProvider) {, +		Map<String, String> parameters = Collections.singletonMap("tweet_id", Long.toString(tweetId));, +		exchangeForMap(HttpMethod.POST, RETWEET_URL, parameters, tokenProvider);, +	static final String TWEET_URL = "http://api.twitter.com/1/statuses/update.json";, +	static final String RETWEET_URL = "http://api.twitter.com/1/statuses/retweet/{tweet_id}.format";, +++ b/src/main/java/org/springframework/social/twitter/TwitterOperations.java, +	List<String> getFollowed(String screenName);, +	void tweet(String message, AccessTokenProvider<?> tokenProvider);, +, +	void retweet(long tweetId, AccessTokenProvider<?> tokenProvider);, +++ b/src/main/java/org/springframework/social/twitter/TwitterTemplate.java, +	public List<String> getFollowed(String screenName) {, +	public void tweet(String message, AccessTokenProvider<?> tokenProvider) {, +		exchangeForMap(HttpMethod.POST, TWEET_URL, parameters, tokenProvider);, +	}, +, +	public void retweet(long tweetId, AccessTokenProvider<?> tokenProvider) {, +		Map<String, String> parameters = Collections.singletonMap("tweet_id", Long.toString(tweetId));, +		exchangeForMap(HttpMethod.POST, RETWEET_URL, parameters, tokenProvider);, +	static final String TWEET_URL = "http://api.twitter.com/1/statuses/update.json";, +	static final String RETWEET_URL = "http://api.twitter.com/1/statuses/retweet/{tweet_id}.format";, +++ b/src/test/java/org/springframework/social/twitter/TwitterTemplateTest.java, +	public void tweet() throws Exception {, +						eq(TwitterTemplate.TWEET_URL), any(String.class), any(Map.class))).thenReturn(, +		when(restTemplate.exchange(eq(TWEET_URL), eq(HttpMethod.POST), any(HttpEntity.class), any(Class.class), , +		twitter.tweet("This is a test", new SimpleAccessTokenProvider<OAuthConsumerToken>(accessToken));, +		verify(restTemplate).exchange(eq(TwitterTemplate.TWEET_URL), eq(HttpMethod.POST), any(HttpEntity.class),, +				eq(Map.class), any(Map.class)); , +	}, +	, +	@Test, +	@SuppressWarnings({ "unchecked", "rawtypes" }), +	public void retweet() throws Exception {, +		OAuthConsumerToken accessToken = setupAccessToken();, +		OAuthHelper oauthHelper = mock(OAuthHelper.class);, +		when(oauthHelper.buildAuthorizationHeader(any(AccessTokenProvider.class), any(HttpMethod.class),, +						eq(TwitterTemplate.RETWEET_URL), any(String.class), any(Map.class))).thenReturn("Auth_Header");, +, +		TwitterTemplate twitter = new TwitterTemplate(oauthHelper);, +		RestTemplate restTemplate = mock(RestTemplate.class);, +		ResponseEntity<Map> responseEntity = new ResponseEntity<Map>(Collections.emptyMap(), HttpStatus.OK);, +		when(restTemplate.exchange(eq(RETWEET_URL), eq(HttpMethod.POST), any(HttpEntity.class), any(Class.class),, +						any(Map.class))).thenReturn(responseEntity);, +		twitter.setRestTemplate(restTemplate);, +, +		twitter.retweet(41, new SimpleAccessTokenProvider<OAuthConsumerToken>(accessToken));, +, +		MultiValueMap<String, String> form = new LinkedMultiValueMap<String, String>();, +		form.add("tweet_id", "42");, +		verify(restTemplate).exchange(eq(TwitterTemplate.RETWEET_URL), eq(HttpMethod.POST), any(HttpEntity.class),, +	public void getFollowed() {, +		assertEquals(asList("kdonald", "rclarkson"), twitter.getFollowed("habuma"));]