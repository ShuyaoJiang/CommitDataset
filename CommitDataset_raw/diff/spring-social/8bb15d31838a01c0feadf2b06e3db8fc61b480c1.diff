[+++ b/spring-social-client/src/main/java/org/springframework/social/provider/support/AbstractServiceProvider.java, + * @param <S> The service API hosted by this service provider., +	public abstract AuthorizationProtocol getAuthorizationProtocol();, +, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/support/AbstractServiceProvider.java, + * @param <S> The service API hosted by this service provider., +	public abstract AuthorizationProtocol getAuthorizationProtocol();, +, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/support/Connection.java, +	private Long id;, +	private String accessToken;, +	private String secret;, +	private String refreshToken;, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/support/AbstractServiceProvider.java, + * @param <S> The service API hosted by this service provider., +	public abstract AuthorizationProtocol getAuthorizationProtocol();, +, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/support/Connection.java, +	private Long id;, +	private String accessToken;, +	private String secret;, +	private String refreshToken;, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/support/ConnectionRepository.java, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/support/AbstractServiceProvider.java, + * @param <S> The service API hosted by this service provider., +	public abstract AuthorizationProtocol getAuthorizationProtocol();, +, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/support/Connection.java, +	private Long id;, +	private String accessToken;, +	private String secret;, +	private String refreshToken;, +++ b/spring-social-client/src/main/java/org/springframework/social/provider/support/ConnectionRepository.java, +++ b/spring-social-client/src/test/java/org/springframework/social/provider/oauth1/OAuth1TemplateTest.java, +import org.junit.Before;, +	private static final String REQUEST_TOKEN_URL = "https://www.someprovider.com/oauth/requestToken";, +	private OAuth1Template oauth1;, +, +	@Before, +	public void setup() {, +		oauth1 = new OAuth1Template("consumer_key", "consumer_secret", REQUEST_TOKEN_URL,, +				"https://www.someprovider.com/oauth/authorize?oauth_token={request_token}", ACCESS_TOKEN_URL);, +	}, +		assertEquals("https://www.someprovider.com/oauth/authorize?oauth_token=request_token", oauth1.buildAuthorizeUrl("request_token"));, +		// TODO : Flesh out proper test, +		// TODO : Flesh out proper test]