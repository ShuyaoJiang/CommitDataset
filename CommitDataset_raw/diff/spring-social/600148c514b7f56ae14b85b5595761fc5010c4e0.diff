[+++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/EmptyMultiValueMap.java, +, +	public void addAll(K key, List<? extends V> values) {, +		throw new UnsupportedOperationException("This empty MultiValueMap is not modifiable");, +	}, +, +	@Override, +	public void addAll(MultiValueMap<K, V> values) {, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/EmptyMultiValueMap.java, +, +	public void addAll(K key, List<? extends V> values) {, +		throw new UnsupportedOperationException("This empty MultiValueMap is not modifiable");, +	}, +, +	@Override, +	public void addAll(MultiValueMap<K, V> values) {, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/TreeMultiValueMap.java, +	public void addAll(K key, List<? extends V> newValues) {, +			values = new LinkedList<>();, +			values.addAll(newValues);, +		}, +, +	@Override, +	public void addAll(MultiValueMap<K, V> values) {, +		Set<java.util.Map.Entry<K, List<V>>> entries = values.entrySet();, +		for (Entry<K, List<V>> entry : entries) {, +			this.addAll(entry.getKey(), entry.getValue());, +		}, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/EmptyMultiValueMap.java, +, +	public void addAll(K key, List<? extends V> values) {, +		throw new UnsupportedOperationException("This empty MultiValueMap is not modifiable");, +	}, +, +	@Override, +	public void addAll(MultiValueMap<K, V> values) {, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth1/TreeMultiValueMap.java, +	public void addAll(K key, List<? extends V> newValues) {, +			values = new LinkedList<>();, +			values.addAll(newValues);, +		}, +, +	@Override, +	public void addAll(MultiValueMap<K, V> values) {, +		Set<java.util.Map.Entry<K, List<V>>> entries = values.entrySet();, +		for (Entry<K, List<V>> entry : entries) {, +			this.addAll(entry.getKey(), entry.getValue());, +		}, +++ b/spring-social-core/src/main/java/org/springframework/social/support/ParameterMap.java, +import java.util.Map.Entry;, +	public void addAll(String key, List<? extends String> newValues) {, +		List<String> values = this.parameters.get(key);, +			values = new LinkedList<>();, +		this.parameters.put(key, values);, +	}, +	@Override, +	public void addAll(MultiValueMap<String, String> values) {, +		Set<java.util.Map.Entry<String, List<String>>> entries = values.entrySet();, +		for (Entry<String, List<String>> entry : entries) {, +			this.addAll(entry.getKey(), entry.getValue());, +		}, +	}]