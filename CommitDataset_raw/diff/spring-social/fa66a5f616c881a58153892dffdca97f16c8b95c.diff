[+++ b/build.gradle, +    hamcrestVersion = '1.2.1', +    mockitoVersion = '1.9.0', +    springTestMvcVersion = "1.0.0.BUILD-SNAPSHOT", +		testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion", +        testCompile "junit:junit-dep:$junitVersion", +        testCompile "org.mockito:mockito-core:$mockitoVersion", +        testCompile "org.springframework:spring-test-mvc:$springTestMvcVersion", +        testCompile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/build.gradle, +    hamcrestVersion = '1.2.1', +    mockitoVersion = '1.9.0', +    springTestMvcVersion = "1.0.0.BUILD-SNAPSHOT", +		testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion", +        testCompile "junit:junit-dep:$junitVersion", +        testCompile "org.mockito:mockito-core:$mockitoVersion", +        testCompile "org.springframework:spring-test-mvc:$springTestMvcVersion", +        testCompile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +		try {, +		} catch (Exception e) {, +			return connectionStatusRedirect(providerId, request);, +		}, +		try {, +		} catch (Exception e) {, +			logger.warn("Exception while handling OAuth1 callback (" + e.getMessage() + "). Redirecting to " + providerId +" connection status page.");, +		}, +++ b/build.gradle, +    hamcrestVersion = '1.2.1', +    mockitoVersion = '1.9.0', +    springTestMvcVersion = "1.0.0.BUILD-SNAPSHOT", +		testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion", +        testCompile "junit:junit-dep:$junitVersion", +        testCompile "org.mockito:mockito-core:$mockitoVersion", +        testCompile "org.springframework:spring-test-mvc:$springTestMvcVersion", +        testCompile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +		try {, +		} catch (Exception e) {, +			return connectionStatusRedirect(providerId, request);, +		}, +		try {, +		} catch (Exception e) {, +			logger.warn("Exception while handling OAuth1 callback (" + e.getMessage() + "). Redirecting to " + providerId +" connection status page.");, +		}, +++ b/spring-social-web/src/test/java/org/springframework/social/connect/web/ConnectControllerTest.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.social.connect.web;, +, +import static java.util.Arrays.*;, +import static org.hamcrest.beans.SamePropertyValuesAs.*;, +import static org.junit.Assert.*;, +import static org.springframework.social.connect.web.test.StubOAuthTemplateBehavior.*;, +import static org.springframework.test.web.server.request.MockMvcRequestBuilders.*;, +import static org.springframework.test.web.server.result.MockMvcResultMatchers.*;, +import static org.springframework.test.web.server.setup.MockMvcBuilders.*;, +, +import java.util.HashSet;, +import java.util.List;, +, +import org.junit.Ignore;, +import org.junit.Test;, +import org.springframework.social.connect.Connection;, +import org.springframework.social.connect.ConnectionData;, +import org.springframework.social.connect.ConnectionFactory;, +import org.springframework.social.connect.support.ConnectionFactoryRegistry;, +import org.springframework.social.connect.web.test.StubConnectionRepository;, +import org.springframework.social.connect.web.test.StubOAuth1ConnectionFactory;, +import org.springframework.social.connect.web.test.StubOAuth2ConnectionFactory;, +import org.springframework.social.connect.web.test.StubOAuthTemplateBehavior;, +import org.springframework.social.connect.web.test.TestApi1;, +import org.springframework.social.connect.web.test.TestApi2;, +import org.springframework.social.oauth1.OAuthToken;, +import org.springframework.test.web.server.MockMvc;, +, +, +public class ConnectControllerTest {, +	, +	private static final String OAUTH2_AUTHORIZE_URL = "https://someprovider.com/oauth/authorize?client_id=clientId&response_type=code&redirect_uri=http%3A%2F%2Flocalhost%3A80%2Fconnect%2Foauth2Provider";, +, +	@Test, +	@Ignore("Revisit this and assert/fix expectations"), +	public void connect_noSuchProvider() throws Exception {, +		ConnectionFactoryRegistry connectionFactoryLocator = new ConnectionFactoryRegistry();, +		ConnectionFactory<TestApi2> connectionFactory = new StubOAuth2ConnectionFactory("clientId", "clientSecret");, +		connectionFactoryLocator.addConnectionFactory(connectionFactory);]