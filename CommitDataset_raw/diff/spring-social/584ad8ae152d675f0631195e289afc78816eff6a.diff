[+++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +import org.codehaus.jackson.map.exc.UnrecognizedPropertyException;, +import org.springframework.web.client.ResourceAccessException;, +		try {, +		} catch (ResourceAccessException e) {, +			// Handle the special case where an unknown alias results in an error returned as a HTTP 200, +			if(e.getCause() instanceof UnrecognizedPropertyException) {, +				UnrecognizedPropertyException jsonException = (UnrecognizedPropertyException) e.getCause();, +				if(jsonException.getUnrecognizedPropertyName().equals("error")) {, +					throw new GraphAPIException("Unknown alias: " + objectId);, +				}, +			}, +			// Handle any other errors that may come back from Facebook as HTTP 200, +			throw new GraphAPIException("Unexpected graph API exception", e.getCause());, +		}, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +import org.codehaus.jackson.map.exc.UnrecognizedPropertyException;, +import org.springframework.web.client.ResourceAccessException;, +		try {, +		} catch (ResourceAccessException e) {, +			// Handle the special case where an unknown alias results in an error returned as a HTTP 200, +			if(e.getCause() instanceof UnrecognizedPropertyException) {, +				UnrecognizedPropertyException jsonException = (UnrecognizedPropertyException) e.getCause();, +				if(jsonException.getUnrecognizedPropertyName().equals("error")) {, +					throw new GraphAPIException("Unknown alias: " + objectId);, +				}, +			}, +			// Handle any other errors that may come back from Facebook as HTTP 200, +			throw new GraphAPIException("Unexpected graph API exception", e.getCause());, +		}, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/GraphAPIException.java, +	public GraphAPIException(String message, Throwable e) {, +		super(message, e);, +	}, +, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +import org.codehaus.jackson.map.exc.UnrecognizedPropertyException;, +import org.springframework.web.client.ResourceAccessException;, +		try {, +		} catch (ResourceAccessException e) {, +			// Handle the special case where an unknown alias results in an error returned as a HTTP 200, +			if(e.getCause() instanceof UnrecognizedPropertyException) {, +				UnrecognizedPropertyException jsonException = (UnrecognizedPropertyException) e.getCause();, +				if(jsonException.getUnrecognizedPropertyName().equals("error")) {, +					throw new GraphAPIException("Unknown alias: " + objectId);, +				}, +			}, +			// Handle any other errors that may come back from Facebook as HTTP 200, +			throw new GraphAPIException("Unexpected graph API exception", e.getCause());, +		}, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/GraphAPIException.java, +	public GraphAPIException(String message, Throwable e) {, +		super(message, e);, +	}, +, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/support/json/FacebookProfileMixin.java, +//@JsonIgnoreProperties(ignoreUnknown = true), +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +import org.codehaus.jackson.map.exc.UnrecognizedPropertyException;, +import org.springframework.web.client.ResourceAccessException;, +		try {, +		} catch (ResourceAccessException e) {, +			// Handle the special case where an unknown alias results in an error returned as a HTTP 200, +			if(e.getCause() instanceof UnrecognizedPropertyException) {, +				UnrecognizedPropertyException jsonException = (UnrecognizedPropertyException) e.getCause();, +				if(jsonException.getUnrecognizedPropertyName().equals("error")) {, +					throw new GraphAPIException("Unknown alias: " + objectId);, +				}, +			}, +			// Handle any other errors that may come back from Facebook as HTTP 200, +			throw new GraphAPIException("Unexpected graph API exception", e.getCause());, +		}, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/GraphAPIException.java, +	public GraphAPIException(String message, Throwable e) {, +		super(message, e);, +	}, +, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/support/json/FacebookProfileMixin.java, +//@JsonIgnoreProperties(ignoreUnknown = true), +++ b/spring-social-facebook/src/test/java/org/springframework/social/facebook/ErrorHandlingTest.java, +import org.springframework.social.facebook.types.FacebookProfile;, +			fail();, +			fail();, +	@Test, +	public void unknownAlias_HTTP200() {, +		// yes, Facebook really does return this error as HTTP 200 (probably should be 404), +		try {, +			mockServer.expect(requestTo("https://graph.facebook.com/dummyalias")), +				.andExpect(method(GET)), +				.andExpect(header("Authorization", "OAuth someAccessToken")), +				.andRespond(withResponse(new ClassPathResource("testdata/error-unknown-alias.json", getClass()), responseHeaders, HttpStatus.OK, ""));, +			facebook.fetchObject("dummyalias", FacebookProfile.class);, +			fail("Expected GraphAPIException when fetching an unknown object alias");, +		} catch (GraphAPIException e) {, +			assertEquals("Unknown alias: dummyalias", e.getMessage());, +		}				, +	}]