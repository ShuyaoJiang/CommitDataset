[+++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +import org.codehaus.jackson.map.ObjectMapper;, +import org.springframework.http.converter.HttpMessageConverter;, +import org.springframework.social.facebook.support.json.FacebookModule;, +		registerFacebookModule(restTemplate);, +	private void registerFacebookModule(RestTemplate restTemplate2) {, +		List<HttpMessageConverter<?>> converters = restTemplate.getMessageConverters();, +		for (HttpMessageConverter<?> converter : converters) {, +			if(converter instanceof MappingJacksonHttpMessageConverter) {, +				MappingJacksonHttpMessageConverter jsonConverter = (MappingJacksonHttpMessageConverter) converter;, +				ObjectMapper objectMapper = new ObjectMapper();				, +				objectMapper.registerModule(new FacebookModule());, +				jsonConverter.setObjectMapper(objectMapper);, +			}, +		}, +	}, +, +	public <T> T fetchObject(String objectId, Class<T> type) {, +		URI uri = URIBuilder.fromUri(GRAPH_API_URL + objectId).build();, +		return restTemplate.getForObject(uri, type);, +	}, +	, +	public <T> T fetchConnections(String objectId, String connectionType, Class<T> type, String... fields) {, +		String joinedFields = join(fields);, +		URI uri = URIBuilder.fromUri(GRAPH_API_URL + objectId + "/" + connectionType).queryParam("fields", joinedFields).build();, +		return restTemplate.getForObject(uri, type);, +	}, +	, +			System.out.println("Error");, +//			Map<String, String> errorDetails = (Map<String, String>) response.get("error");, +//			errorHandler.handleFacebookError(errorDetails);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +import org.codehaus.jackson.map.ObjectMapper;, +import org.springframework.http.converter.HttpMessageConverter;, +import org.springframework.social.facebook.support.json.FacebookModule;, +		registerFacebookModule(restTemplate);, +	private void registerFacebookModule(RestTemplate restTemplate2) {, +		List<HttpMessageConverter<?>> converters = restTemplate.getMessageConverters();, +		for (HttpMessageConverter<?> converter : converters) {, +			if(converter instanceof MappingJacksonHttpMessageConverter) {, +				MappingJacksonHttpMessageConverter jsonConverter = (MappingJacksonHttpMessageConverter) converter;, +				ObjectMapper objectMapper = new ObjectMapper();				, +				objectMapper.registerModule(new FacebookModule());, +				jsonConverter.setObjectMapper(objectMapper);, +			}, +		}, +	}, +, +	public <T> T fetchObject(String objectId, Class<T> type) {, +		URI uri = URIBuilder.fromUri(GRAPH_API_URL + objectId).build();, +		return restTemplate.getForObject(uri, type);, +	}, +	, +	public <T> T fetchConnections(String objectId, String connectionType, Class<T> type, String... fields) {, +		String joinedFields = join(fields);, +		URI uri = URIBuilder.fromUri(GRAPH_API_URL + objectId + "/" + connectionType).queryParam("fields", joinedFields).build();, +		return restTemplate.getForObject(uri, type);, +	}, +	, +			System.out.println("Error");, +//			Map<String, String> errorDetails = (Map<String, String>) response.get("error");, +//			errorHandler.handleFacebookError(errorDetails);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FriendOperations.java, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +import org.codehaus.jackson.map.ObjectMapper;, +import org.springframework.http.converter.HttpMessageConverter;, +import org.springframework.social.facebook.support.json.FacebookModule;, +		registerFacebookModule(restTemplate);, +	private void registerFacebookModule(RestTemplate restTemplate2) {, +		List<HttpMessageConverter<?>> converters = restTemplate.getMessageConverters();, +		for (HttpMessageConverter<?> converter : converters) {, +			if(converter instanceof MappingJacksonHttpMessageConverter) {, +				MappingJacksonHttpMessageConverter jsonConverter = (MappingJacksonHttpMessageConverter) converter;, +				ObjectMapper objectMapper = new ObjectMapper();				, +				objectMapper.registerModule(new FacebookModule());, +				jsonConverter.setObjectMapper(objectMapper);, +			}, +		}, +	}, +, +	public <T> T fetchObject(String objectId, Class<T> type) {, +		URI uri = URIBuilder.fromUri(GRAPH_API_URL + objectId).build();, +		return restTemplate.getForObject(uri, type);, +	}, +	, +	public <T> T fetchConnections(String objectId, String connectionType, Class<T> type, String... fields) {, +		String joinedFields = join(fields);, +		URI uri = URIBuilder.fromUri(GRAPH_API_URL + objectId + "/" + connectionType).queryParam("fields", joinedFields).build();, +		return restTemplate.getForObject(uri, type);, +	}, +	, +			System.out.println("Error");, +//			Map<String, String> errorDetails = (Map<String, String>) response.get("error");, +//			errorHandler.handleFacebookError(errorDetails);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FriendOperations.java, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FriendTemplate.java, +import org.springframework.social.facebook.support.json.FacebookProfileList;, +		return graphApi.fetchConnections(userId, "friends", FacebookProfileList.class, FULL_PROFILE_FIELDS).getList();, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +import org.codehaus.jackson.map.ObjectMapper;]