[+++ b/gradle.properties, +springVersion           = 4.0.6.BUILD-SNAPSHOT, +++ b/gradle.properties, +springVersion           = 4.0.6.BUILD-SNAPSHOT, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/ConnectionFactoryConfigurer.java, +	 * @param connectionFactory the ConnectionFactory to register, +++ b/gradle.properties, +springVersion           = 4.0.6.BUILD-SNAPSHOT, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/ConnectionFactoryConfigurer.java, +	 * @param connectionFactory the ConnectionFactory to register, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/AbstractProviderConfigBeanDefinitionParser.java, +	 * @param apiHelperClass the API helper class, +++ b/gradle.properties, +springVersion           = 4.0.6.BUILD-SNAPSHOT, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/ConnectionFactoryConfigurer.java, +	 * @param connectionFactory the ConnectionFactory to register, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/AbstractProviderConfigBeanDefinitionParser.java, +	 * @param apiHelperClass the API helper class, +++ b/spring-social-core/src/main/java/org/springframework/social/UserIdSource.java, +	 * @return an account ID., +++ b/gradle.properties, +springVersion           = 4.0.6.BUILD-SNAPSHOT, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/ConnectionFactoryConfigurer.java, +	 * @param connectionFactory the ConnectionFactory to register, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/AbstractProviderConfigBeanDefinitionParser.java, +	 * @param apiHelperClass the API helper class, +++ b/spring-social-core/src/main/java/org/springframework/social/UserIdSource.java, +	 * @return an account ID., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/Connection.java, +	 * @return A composite key that consists of the "providerId" plus "providerUserId"; for example, "facebook" and "125660". , +	 * @return the displayable name for the connection, +	 * @return the public URL for the connected user, +	 * @return a String containing the URL to the connection image, +	 * @return true if the connection is valid, +	 * @return true if the connection has expired, +	 * @return a normalized user profile associated with this connection., +	 * @return the provider-specific API binding, +	 * @return a data transfer object containing details about the connection., +++ b/gradle.properties, +springVersion           = 4.0.6.BUILD-SNAPSHOT, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/ConnectionFactoryConfigurer.java, +	 * @param connectionFactory the ConnectionFactory to register, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/AbstractProviderConfigBeanDefinitionParser.java, +	 * @param apiHelperClass the API helper class, +++ b/spring-social-core/src/main/java/org/springframework/social/UserIdSource.java, +	 * @return an account ID., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/Connection.java, +	 * @return A composite key that consists of the "providerId" plus "providerUserId"; for example, "facebook" and "125660". , +	 * @return the displayable name for the connection, +	 * @return the public URL for the connected user, +	 * @return a String containing the URL to the connection image, +	 * @return true if the connection is valid, +	 * @return true if the connection has expired, +	 * @return a normalized user profile associated with this connection., +	 * @return the provider-specific API binding, +	 * @return a data transfer object containing details about the connection., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionFactory.java, +	 * @return the provider ID, +	 * @return the service provider, +	 * @return the ApiAdapter, +++ b/gradle.properties, +springVersion           = 4.0.6.BUILD-SNAPSHOT, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/ConnectionFactoryConfigurer.java, +	 * @param connectionFactory the ConnectionFactory to register, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/AbstractProviderConfigBeanDefinitionParser.java, +	 * @param apiHelperClass the API helper class, +++ b/spring-social-core/src/main/java/org/springframework/social/UserIdSource.java, +	 * @return an account ID., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/Connection.java, +	 * @return A composite key that consists of the "providerId" plus "providerUserId"; for example, "facebook" and "125660". , +	 * @return the displayable name for the connection, +	 * @return the public URL for the connected user, +	 * @return a String containing the URL to the connection image, +	 * @return true if the connection is valid, +	 * @return true if the connection has expired, +	 * @return a normalized user profile associated with this connection., +	 * @return the provider-specific API binding, +	 * @return a data transfer object containing details about the connection., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionFactory.java, +	 * @return the provider ID, +	 * @return the service provider, +	 * @return the ApiAdapter, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionFactoryLocator.java, +	 * @param providerId the provider ID used to look up the ConnectionFactory., +	 * @return the requested ConnectionFactory, +	 * @param apiType the Java type of the API binding used to lookup a matching ConnectionFactory, +	 * @param <A> the API binding type, +     * @return the requested ConnectionFactory, +	 * @return a Set of String containing all of the provider IDs registered with this ConnectionFactoryLocator., +++ b/gradle.properties, +springVersion           = 4.0.6.BUILD-SNAPSHOT, +++ b/spring-social-config/src/main/java/org/springframework/social/config/annotation/ConnectionFactoryConfigurer.java, +	 * @param connectionFactory the ConnectionFactory to register, +++ b/spring-social-config/src/main/java/org/springframework/social/config/xml/AbstractProviderConfigBeanDefinitionParser.java, +	 * @param apiHelperClass the API helper class, +++ b/spring-social-core/src/main/java/org/springframework/social/UserIdSource.java, +	 * @return an account ID., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/Connection.java, +	 * @return A composite key that consists of the "providerId" plus "providerUserId"; for example, "facebook" and "125660". , +	 * @return the displayable name for the connection]