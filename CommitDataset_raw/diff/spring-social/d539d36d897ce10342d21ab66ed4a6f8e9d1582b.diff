[+++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookAccessToken.java, +	/**, +	 * Whether the Facebook access token is required., +	 * <p>, +	 * Default is <code>true</code>, leading to an exception being thrown in, +	 * case the Facebook cookie is missing or if the access token can't be found, +	 * in the cookie. Switch this to <code>false</code> if you prefer a, +	 * <code>null</value> in case of the missing cookie/token., +	 * </p>, +	 */, +	boolean required() default true;, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookAccessToken.java, +	/**, +	 * Whether the Facebook access token is required., +	 * <p>, +	 * Default is <code>true</code>, leading to an exception being thrown in, +	 * case the Facebook cookie is missing or if the access token can't be found, +	 * in the cookie. Switch this to <code>false</code> if you prefer a, +	 * <code>null</value> in case of the missing cookie/token., +	 * </p>, +	 */, +	boolean required() default true;, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookUserId.java, +	/**, +	 * Whether the Facebook user ID is required., +	 * <p>, +	 * Default is <code>true</code>, leading to an exception being thrown in, +	 * case the Facebook cookie is missing or if the user ID can't be found in, +	 * the cookie. Switch this to <code>false</code> if you prefer a, +	 * <code>null</value> in case of the missing cookie/user ID., +	 * </p>, +	 */, +	boolean required() default true;, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookAccessToken.java, +	/**, +	 * Whether the Facebook access token is required., +	 * <p>, +	 * Default is <code>true</code>, leading to an exception being thrown in, +	 * case the Facebook cookie is missing or if the access token can't be found, +	 * in the cookie. Switch this to <code>false</code> if you prefer a, +	 * <code>null</value> in case of the missing cookie/token., +	 * </p>, +	 */, +	boolean required() default true;, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookUserId.java, +	/**, +	 * Whether the Facebook user ID is required., +	 * <p>, +	 * Default is <code>true</code>, leading to an exception being thrown in, +	 * case the Facebook cookie is missing or if the user ID can't be found in, +	 * the cookie. Switch this to <code>false</code> if you prefer a, +	 * <code>null</value> in case of the missing cookie/user ID., +	 * </p>, +	 */, +	boolean required() default true;, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookWebArgumentResolver.java, +import java.util.Collections;, + * <p>, + * Both {@link FacebookAccessToken} and {@link FacebookUserId} are required by, + * default. If the access token or user ID cannot be resolved and if the, + * annotation is set to be required, an exception will be thrown indicating an, + * illegal state. If the annotation is set to not be required, a null will be, + * returned., + * </p>, + * , +		return processParameterAnnotation(parameter, getFacebookCookieData(nativeRequest.getCookies(), apiKey));, +, +	private Map<String, String> getFacebookCookieData(Cookie[] cookies, String apiKey) {, +		if (cookies != null) {, +					return extractDataFromCookie(cookie.getValue());, +		}, +, +		return Collections.<String, String> emptyMap();, +		FacebookUserId userIdAnnotation = parameter.getParameterAnnotation(FacebookUserId.class);, +		if (userIdAnnotation != null) {, +			return resolveUserIdValue(parameter, cookieData, userIdAnnotation);, +		}, +, +		FacebookAccessToken accessTokenAnnotation = parameter.getParameterAnnotation(FacebookAccessToken.class);, +		if (accessTokenAnnotation != null) {, +			return resolveAccessTokenValue(parameter, cookieData, accessTokenAnnotation);, +	    }, +, +, +	private Object resolveAccessTokenValue(MethodParameter parameter, Map<String, String> cookieData,, +			FacebookAccessToken accessTokenAnnotation) {, +		String accessToken = cookieData.get("access_token");, +		if (accessToken != null) {, +			accessToken = accessToken.replaceAll("\\%7C", "|");, +		}, +, +		if (accessToken != null || !accessTokenAnnotation.required()) {, +			return accessToken;, +		}, +, +		throw new IllegalStateException("Parameter " + parameter.getParameterName(), +				+ " is annotated with @FacebookAccessToken, but the data cannot be found in the Facebook cookie. ", +				+ "Either ensure that Facebook authentication has taken place before arriving at this ", +				+ "state or consider setting @FacebookAccessToken's required attribute to false.");, +	}]