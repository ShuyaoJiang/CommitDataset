[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRepository.java, +	List<ServiceProviderConnection<?>> findAllConnections();, +	ServiceProviderConnection<?> findConnection(ServiceProviderConnectionKey connectionKey);, +	void removeConnection(ServiceProviderConnectionKey connectionKey);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRepository.java, +	List<ServiceProviderConnection<?>> findAllConnections();, +	ServiceProviderConnection<?> findConnection(ServiceProviderConnectionKey connectionKey);, +	void removeConnection(ServiceProviderConnectionKey connectionKey);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepository.java, +	public List<ServiceProviderConnection<?>> findAllConnections() {, +	public ServiceProviderConnection<?> findConnection(ServiceProviderConnectionKey connectionKey) {, +	public void removeConnection(ServiceProviderConnectionKey connectionKey) {, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRepository.java, +	List<ServiceProviderConnection<?>> findAllConnections();, +	ServiceProviderConnection<?> findConnection(ServiceProviderConnectionKey connectionKey);, +	void removeConnection(ServiceProviderConnectionKey connectionKey);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepository.java, +	public List<ServiceProviderConnection<?>> findAllConnections() {, +	public ServiceProviderConnection<?> findConnection(ServiceProviderConnectionKey connectionKey) {, +	public void removeConnection(ServiceProviderConnectionKey connectionKey) {, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepositoryTest.java, +	public void findAllConnectionsEmptyResult() {, +		assertTrue(connectionRepository.findAllConnections().isEmpty());, +	public void findConnectionsForUsersEmptyResult() {, +	public void findConnectionsForUsersEmptyInput() {, +	public void removeConnectionsToProviderNoOp() {, +		connectionRepository.removeConnection(new ServiceProviderConnectionKey("facebook", "1"));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ServiceProviderConnectionRepository.java, +	List<ServiceProviderConnection<?>> findAllConnections();, +	ServiceProviderConnection<?> findConnection(ServiceProviderConnectionKey connectionKey);, +	void removeConnection(ServiceProviderConnectionKey connectionKey);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepository.java, +	public List<ServiceProviderConnection<?>> findAllConnections() {, +	public ServiceProviderConnection<?> findConnection(ServiceProviderConnectionKey connectionKey) {, +	public void removeConnection(ServiceProviderConnectionKey connectionKey) {, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcServiceProviderConnectionRepositoryTest.java, +	public void findAllConnectionsEmptyResult() {, +		assertTrue(connectionRepository.findAllConnections().isEmpty());, +	public void findConnectionsForUsersEmptyResult() {, +	public void findConnectionsForUsersEmptyInput() {, +	public void removeConnectionsToProviderNoOp() {, +		connectionRepository.removeConnection(new ServiceProviderConnectionKey("facebook", "1"));, +++ b/spring-social-web/src/main/java/org/springframework/social/web/connect/ConnectController.java, +		connectionRepository.removeConnection(new ServiceProviderConnectionKey(providerId, providerUserId));]