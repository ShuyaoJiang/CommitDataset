[+++ b/src/main/java/org/springframework/social/oauth/CommonsClientRequest.java, +import java.io.UnsupportedEncodingException;, +import java.net.URLEncoder;, +			queryString = parameterName + "=" + encode(parameterValue);, +			queryString += "&" + parameterName + "=" + encode(parameterValue);, +, +	private String encode(String in) {, +		try {, +			return URLEncoder.encode(in, "UTF-8");, +		} catch (UnsupportedEncodingException wontHappen) {, +			return in;, +		}, +	}, +++ b/src/main/java/org/springframework/social/oauth/CommonsClientRequest.java, +import java.io.UnsupportedEncodingException;, +import java.net.URLEncoder;, +			queryString = parameterName + "=" + encode(parameterValue);, +			queryString += "&" + parameterName + "=" + encode(parameterValue);, +, +	private String encode(String in) {, +		try {, +			return URLEncoder.encode(in, "UTF-8");, +		} catch (UnsupportedEncodingException wontHappen) {, +			return in;, +		}, +	}, +++ b/src/test/java/org/springframework/social/oauth/CommonsClientRequestTest.java, +		assertEquals("pipe%7Cdelimited%7Ctoken", queryParameters.get("access_token"));, +++ b/src/main/java/org/springframework/social/oauth/CommonsClientRequest.java, +import java.io.UnsupportedEncodingException;, +import java.net.URLEncoder;, +			queryString = parameterName + "=" + encode(parameterValue);, +			queryString += "&" + parameterName + "=" + encode(parameterValue);, +, +	private String encode(String in) {, +		try {, +			return URLEncoder.encode(in, "UTF-8");, +		} catch (UnsupportedEncodingException wontHappen) {, +			return in;, +		}, +	}, +++ b/src/test/java/org/springframework/social/oauth/CommonsClientRequestTest.java, +		assertEquals("pipe%7Cdelimited%7Ctoken", queryParameters.get("access_token"));, +++ b/src/test/java/org/springframework/social/oauth2/OAuth2ParameterClientRequestSignerTest.java, +				return "157702280911244|48044afccb06d771931a81f8-100001387295207|_w2_8EBi6Z2NdZiDLzKzE3uTmLA";, +		assertEquals("157702280911244|48044afccb06d771931a81f8-100001387295207|_w2_8EBi6Z2NdZiDLzKzE3uTmLA", request, +				.getQueryParameters().get("oauth_token"));, +		signer.setParameterName("access_token");, +		assertEquals("157702280911244|48044afccb06d771931a81f8-100001387295207|_w2_8EBi6Z2NdZiDLzKzE3uTmLA", request, +				.getQueryParameters().get("access_token"));]