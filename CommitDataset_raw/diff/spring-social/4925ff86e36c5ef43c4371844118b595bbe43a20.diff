[+++ b/build.gradle, +    hamcrestVersion = '1.2.1', +    mockitoVersion = '1.9.0', +    springTestMvcVersion = "1.0.0.BUILD-SNAPSHOT", +		testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion", +        testCompile "junit:junit-dep:$junitVersion", +        testCompile "org.mockito:mockito-core:$mockitoVersion", +        testCompile "org.springframework:spring-test-mvc:$springTestMvcVersion", +        testCompile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/build.gradle, +    hamcrestVersion = '1.2.1', +    mockitoVersion = '1.9.0', +    springTestMvcVersion = "1.0.0.BUILD-SNAPSHOT", +		testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion", +        testCompile "junit:junit-dep:$junitVersion", +        testCompile "org.mockito:mockito-core:$mockitoVersion", +        testCompile "org.springframework:spring-test-mvc:$springTestMvcVersion", +        testCompile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionSignUp.java, +	 * @return the new user id (must not be null)., +++ b/build.gradle, +    hamcrestVersion = '1.2.1', +    mockitoVersion = '1.9.0', +    springTestMvcVersion = "1.0.0.BUILD-SNAPSHOT", +		testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion", +        testCompile "junit:junit-dep:$junitVersion", +        testCompile "org.mockito:mockito-core:$mockitoVersion", +        testCompile "org.springframework:spring-test-mvc:$springTestMvcVersion", +        testCompile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionSignUp.java, +	 * @return the new user id (must not be null)., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.java, +++ b/build.gradle, +    hamcrestVersion = '1.2.1', +    mockitoVersion = '1.9.0', +    springTestMvcVersion = "1.0.0.BUILD-SNAPSHOT", +		testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion", +        testCompile "junit:junit-dep:$junitVersion", +        testCompile "org.mockito:mockito-core:$mockitoVersion", +        testCompile "org.springframework:spring-test-mvc:$springTestMvcVersion", +        testCompile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionSignUp.java, +	 * @return the new user id (must not be null)., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.java, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepositoryTest.java, +++ b/build.gradle, +    hamcrestVersion = '1.2.1', +    mockitoVersion = '1.9.0', +    springTestMvcVersion = "1.0.0.BUILD-SNAPSHOT", +		testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion", +        testCompile "junit:junit-dep:$junitVersion", +        testCompile "org.mockito:mockito-core:$mockitoVersion", +        testCompile "org.springframework:spring-test-mvc:$springTestMvcVersion", +        testCompile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionSignUp.java, +	 * @return the new user id (must not be null)., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.java, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepositoryTest.java, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +		try {, +		} catch (Exception e) {, +			return connectionStatusRedirect(providerId, request);, +		}, +		try {, +		} catch (Exception e) {, +			logger.warn("Exception while handling OAuth1 callback (" + e.getMessage() + "). Redirecting to " + providerId +" connection status page.");, +		}, +++ b/build.gradle, +    hamcrestVersion = '1.2.1', +    mockitoVersion = '1.9.0', +    springTestMvcVersion = "1.0.0.BUILD-SNAPSHOT", +		testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion", +        testCompile "junit:junit-dep:$junitVersion", +        testCompile "org.mockito:mockito-core:$mockitoVersion", +        testCompile "org.springframework:spring-test-mvc:$springTestMvcVersion", +        testCompile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion", +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionSignUp.java, +	 * @return the new user id (must not be null)., +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.java, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepositoryTest.java, +++ b/spring-social-web/src/main/java/org/springframework/social/connect/web/ConnectController.java, +		try {, +		} catch (Exception e) {, +			return connectionStatusRedirect(providerId, request);, +		}, +		try {, +		} catch (Exception e) {, +			logger.warn("Exception while handling OAuth1 callback (" + e.getMessage() + "). Redirecting to " + providerId +" connection status page.");, +		}, +++ b/spring-social-web/src/test/java/org/springframework/social/connect/web/ConnectControllerTest.java, +/*, + * Copyright 2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software]