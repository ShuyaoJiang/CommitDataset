[+++ b/docs/src/info/changelog.txt, +Spring Social 1.0.0 Release Candidate 2 (July 26, 2011), +++ b/docs/src/info/changelog.txt, +Spring Social 1.0.0 Release Candidate 2 (July 26, 2011), +++ b/docs/src/reference/docbook/signin.xml, +, +		, +			<note>, +				<para>, +					Some providers offer client-side sign in widgets, such as Twitter @Anywhere's "Connect with Twitter" button and Facebook's <code>&lt;fb:login-button&gt;</code>., +					Although these widgets offer a sign in experience similar to that of <code>ProviderSignInController</code>, they cannot be used to drive <code>ProviderSignInController</code>'s sign in flow., +					The <code>ProviderSignInController</code> sign in flow should be initiated by submitting a POST request as described above., +				</para>, +			</note>, +, +++ b/docs/src/info/changelog.txt, +Spring Social 1.0.0 Release Candidate 2 (July 26, 2011), +++ b/docs/src/reference/docbook/signin.xml, +, +		, +			<note>, +				<para>, +					Some providers offer client-side sign in widgets, such as Twitter @Anywhere's "Connect with Twitter" button and Facebook's <code>&lt;fb:login-button&gt;</code>., +					Although these widgets offer a sign in experience similar to that of <code>ProviderSignInController</code>, they cannot be used to drive <code>ProviderSignInController</code>'s sign in flow., +					The <code>ProviderSignInController</code> sign in flow should be initiated by submitting a POST request as described above., +				</para>, +			</note>, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionSignUp.java, + * @see UsersConnectionRepository#findUserIdWithConnection(Connection), +++ b/docs/src/info/changelog.txt, +Spring Social 1.0.0 Release Candidate 2 (July 26, 2011), +++ b/docs/src/reference/docbook/signin.xml, +, +		, +			<note>, +				<para>, +					Some providers offer client-side sign in widgets, such as Twitter @Anywhere's "Connect with Twitter" button and Facebook's <code>&lt;fb:login-button&gt;</code>., +					Although these widgets offer a sign in experience similar to that of <code>ProviderSignInController</code>, they cannot be used to drive <code>ProviderSignInController</code>'s sign in flow., +					The <code>ProviderSignInController</code> sign in flow should be initiated by submitting a POST request as described above., +				</para>, +			</note>, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionSignUp.java, + * @see UsersConnectionRepository#findUserIdWithConnection(Connection), +++ b/spring-social-core/src/main/java/org/springframework/social/connect/UsersConnectionRepository.java, +	 * Find the id of the <i>single</i> user that has the given {@link Connection}., +	 * Returns null if there is not exactly one local user connected to the provider user., +	String findUserIdWithConnection(Connection<?> connection);, +++ b/docs/src/info/changelog.txt, +Spring Social 1.0.0 Release Candidate 2 (July 26, 2011), +++ b/docs/src/reference/docbook/signin.xml, +, +		, +			<note>, +				<para>, +					Some providers offer client-side sign in widgets, such as Twitter @Anywhere's "Connect with Twitter" button and Facebook's <code>&lt;fb:login-button&gt;</code>., +					Although these widgets offer a sign in experience similar to that of <code>ProviderSignInController</code>, they cannot be used to drive <code>ProviderSignInController</code>'s sign in flow., +					The <code>ProviderSignInController</code> sign in flow should be initiated by submitting a POST request as described above., +				</para>, +			</note>, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionSignUp.java, + * @see UsersConnectionRepository#findUserIdWithConnection(Connection), +++ b/spring-social-core/src/main/java/org/springframework/social/connect/UsersConnectionRepository.java, +	 * Find the id of the <i>single</i> user that has the given {@link Connection}., +	 * Returns null if there is not exactly one local user connected to the provider user., +	String findUserIdWithConnection(Connection<?> connection);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.java, +import org.springframework.dao.IncorrectResultSizeDataAccessException;, +	 * @see #findUserIdWithConnection(Connection), +	public String findUserIdWithConnection(Connection<?> connection) {, +		try {, +			return jdbcTemplate.queryForObject("select userId from " + tablePrefix + "UserConnection where providerId = ? and providerUserId = ?", String.class, key.getProviderId(), key.getProviderUserId());, +		} catch (IncorrectResultSizeDataAccessException e) {, +			if (e.getActualSize() == 0) {, +					return newUserId;, +			return null;, +		}, +++ b/docs/src/info/changelog.txt, +Spring Social 1.0.0 Release Candidate 2 (July 26, 2011), +++ b/docs/src/reference/docbook/signin.xml, +, +		, +			<note>, +				<para>, +					Some providers offer client-side sign in widgets, such as Twitter @Anywhere's "Connect with Twitter" button and Facebook's <code>&lt;fb:login-button&gt;</code>., +					Although these widgets offer a sign in experience similar to that of <code>ProviderSignInController</code>, they cannot be used to drive <code>ProviderSignInController</code>'s sign in flow., +					The <code>ProviderSignInController</code> sign in flow should be initiated by submitting a POST request as described above., +				</para>, +			</note>, +, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/ConnectionSignUp.java, + * @see UsersConnectionRepository#findUserIdWithConnection(Connection), +++ b/spring-social-core/src/main/java/org/springframework/social/connect/UsersConnectionRepository.java, +	 * Find the id of the <i>single</i> user that has the given {@link Connection}., +	 * Returns null if there is not exactly one local user connected to the provider user., +	String findUserIdWithConnection(Connection<?> connection);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.java, +import org.springframework.dao.IncorrectResultSizeDataAccessException;]