[+++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/OAuth2ServiceProvider.java, +	 * @param accessToken the access token returned from {@link OAuth2Operations#exchangeForAccess(String, String)}, +	ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/OAuth2ServiceProvider.java, +	 * @param accessToken the access token returned from {@link OAuth2Operations#exchangeForAccess(String, String)}, +	ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/OAuth2ServiceProvider.java, +	 * @param accessToken the access token returned from {@link OAuth2Operations#exchangeForAccess(String, String)}, +	ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/OAuth2ServiceProvider.java, +	 * @param accessToken the access token returned from {@link OAuth2Operations#exchangeForAccess(String, String)}, +	ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcConnectionRepositoryTest.java, +import static org.junit.Assert.*;, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/OAuth2ServiceProvider.java, +	 * @param accessToken the access token returned from {@link OAuth2Operations#exchangeForAccess(String, String)}, +	ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcConnectionRepositoryTest.java, +import static org.junit.Assert.*;, +++ b/spring-social-test/src/test/java/org/springframework/social/connect/oauth2/StubOAuth2Operations.java, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/OAuth2ServiceProvider.java, +	 * @param accessToken the access token returned from {@link OAuth2Operations#exchangeForAccess(String, String)}, +	ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcConnectionRepositoryTest.java, +import static org.junit.Assert.*;, +++ b/spring-social-test/src/test/java/org/springframework/social/connect/oauth2/StubOAuth2Operations.java, +++ b/spring-social-test/src/test/java/org/springframework/social/oauth2/OAuth2TemplateTest.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNull;, +import static org.springframework.http.HttpMethod.POST;, +import static org.springframework.social.test.client.RequestMatchers.body;, +import static org.springframework.social.test.client.RequestMatchers.method;, +import static org.springframework.social.test.client.RequestMatchers.requestTo;, +import static org.springframework.social.test.client.ResponseCreators.withResponse;, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/OAuth2ServiceProvider.java, +	 * @param accessToken the access token returned from {@link OAuth2Operations#exchangeForAccess(String, String)}, +	ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcConnectionRepositoryTest.java, +import static org.junit.Assert.*;, +++ b/spring-social-test/src/test/java/org/springframework/social/connect/oauth2/StubOAuth2Operations.java, +++ b/spring-social-test/src/test/java/org/springframework/social/oauth2/OAuth2TemplateTest.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNull;, +import static org.springframework.http.HttpMethod.POST;, +import static org.springframework.social.test.client.RequestMatchers.body;, +import static org.springframework.social.test.client.RequestMatchers.method;, +import static org.springframework.social.test.client.RequestMatchers.requestTo;, +import static org.springframework.social.test.client.ResponseCreators.withResponse;, +++ /dev/null, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/AbstractOAuth2ServiceProvider.java, +	public ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken) {, +		return connect(accountId, Connection.oauth2(accessToken.getAccessToken(), accessToken.getRefreshToken()));, +++ b/spring-social-core/src/main/java/org/springframework/social/connect/oauth2/OAuth2ServiceProvider.java, +	 * @param accessToken the access token returned from {@link OAuth2Operations#exchangeForAccess(String, String)}, +	ServiceProviderConnection<S> connect(Serializable accountId, AccessGrant accessToken);, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Operations.java, +++ b/spring-social-core/src/main/java/org/springframework/social/oauth2/OAuth2Template.java, +++ b/spring-social-core/src/test/java/org/springframework/social/connect/jdbc/JdbcConnectionRepositoryTest.java, +import static org.junit.Assert.*;, +++ b/spring-social-test/src/test/java/org/springframework/social/connect/oauth2/StubOAuth2Operations.java, +++ b/spring-social-test/src/test/java/org/springframework/social/oauth2/OAuth2TemplateTest.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNull;, +import static org.springframework.http.HttpMethod.POST;, +import static org.springframework.social.test.client.RequestMatchers.body;]