[+++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +		URIBuilder uriBuilder = URIBuilder.fromUri(GRAPH_API_URL + objectId + "/" + connectionType);, +		if(fields.length > 0) {, +			uriBuilder.queryParam("fields", joinedFields);, +		}		, +		return restTemplate.getForObject(uriBuilder.build(), type);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +		URIBuilder uriBuilder = URIBuilder.fromUri(GRAPH_API_URL + objectId + "/" + connectionType);, +		if(fields.length > 0) {, +			uriBuilder.queryParam("fields", joinedFields);, +		}		, +		return restTemplate.getForObject(uriBuilder.build(), type);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/GroupOperations.java, +import org.springframework.social.facebook.types.GroupMemberReference;, +	List<GroupMemberReference> getMembers(String groupId);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +		URIBuilder uriBuilder = URIBuilder.fromUri(GRAPH_API_URL + objectId + "/" + connectionType);, +		if(fields.length > 0) {, +			uriBuilder.queryParam("fields", joinedFields);, +		}		, +		return restTemplate.getForObject(uriBuilder.build(), type);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/GroupOperations.java, +import org.springframework.social.facebook.types.GroupMemberReference;, +	List<GroupMemberReference> getMembers(String groupId);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/GroupTemplate.java, +import org.springframework.social.facebook.support.json.GroupMemberReferenceList;, +import org.springframework.social.facebook.types.GroupMemberReference;, +		return graphApi.fetchObject(groupId, Group.class);, +	public List<GroupMemberReference> getMembers(String groupId) {, +		return graphApi.fetchConnections(groupId, "members", GroupMemberReferenceList.class).getList();, +	private static final String[] FULL_PROFILE_FIELDS = {"id", "username", "name", "first_name", "last_name", "gender", "locale", "education", "work", "email", "third_party_id", "link", "timezone", "updated_time", "verified", "about", "bio", "birthday", "location", "hometown", "interested_in", "religion", "political", "quotes", "relationship_status", "significant_other", "website"};, +, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +		URIBuilder uriBuilder = URIBuilder.fromUri(GRAPH_API_URL + objectId + "/" + connectionType);, +		if(fields.length > 0) {, +			uriBuilder.queryParam("fields", joinedFields);, +		}		, +		return restTemplate.getForObject(uriBuilder.build(), type);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/GroupOperations.java, +import org.springframework.social.facebook.types.GroupMemberReference;, +	List<GroupMemberReference> getMembers(String groupId);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/GroupTemplate.java, +import org.springframework.social.facebook.support.json.GroupMemberReferenceList;, +import org.springframework.social.facebook.types.GroupMemberReference;, +		return graphApi.fetchObject(groupId, Group.class);, +	public List<GroupMemberReference> getMembers(String groupId) {, +		return graphApi.fetchConnections(groupId, "members", GroupMemberReferenceList.class).getList();, +	private static final String[] FULL_PROFILE_FIELDS = {"id", "username", "name", "first_name", "last_name", "gender", "locale", "education", "work", "email", "third_party_id", "link", "timezone", "updated_time", "verified", "about", "bio", "birthday", "location", "hometown", "interested_in", "religion", "political", "quotes", "relationship_status", "significant_other", "website"};, +, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/LikeTemplate.java, +import org.springframework.social.facebook.support.json.UserLikeList;, +		return graphApi.fetchConnections(userId, "likes", UserLikeList.class).getList();, +		return graphApi.fetchConnections(userId, "books", UserLikeList.class).getList();, +		return graphApi.fetchConnections(userId, "movies", UserLikeList.class).getList();, +		return graphApi.fetchConnections(userId, "music", UserLikeList.class).getList();, +		return graphApi.fetchConnections(userId, "television", UserLikeList.class).getList();, +		return graphApi.fetchConnections(userId, "activities", UserLikeList.class).getList();, +		return graphApi.fetchConnections(userId, "interests", UserLikeList.class).getList();, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +		URIBuilder uriBuilder = URIBuilder.fromUri(GRAPH_API_URL + objectId + "/" + connectionType);, +		if(fields.length > 0) {, +			uriBuilder.queryParam("fields", joinedFields);, +		}		, +		return restTemplate.getForObject(uriBuilder.build(), type);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/GroupOperations.java, +import org.springframework.social.facebook.types.GroupMemberReference;, +	List<GroupMemberReference> getMembers(String groupId);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/GroupTemplate.java, +import org.springframework.social.facebook.support.json.GroupMemberReferenceList;, +import org.springframework.social.facebook.types.GroupMemberReference;, +		return graphApi.fetchObject(groupId, Group.class);, +	public List<GroupMemberReference> getMembers(String groupId) {, +		return graphApi.fetchConnections(groupId, "members", GroupMemberReferenceList.class).getList();, +	private static final String[] FULL_PROFILE_FIELDS = {"id", "username", "name", "first_name", "last_name", "gender", "locale", "education", "work", "email", "third_party_id", "link", "timezone", "updated_time", "verified", "about", "bio", "birthday", "location", "hometown", "interested_in", "religion", "political", "quotes", "relationship_status", "significant_other", "website"};, +, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/LikeTemplate.java, +import org.springframework.social.facebook.support.json.UserLikeList;, +		return graphApi.fetchConnections(userId, "likes", UserLikeList.class).getList();, +		return graphApi.fetchConnections(userId, "books", UserLikeList.class).getList();, +		return graphApi.fetchConnections(userId, "movies", UserLikeList.class).getList();, +		return graphApi.fetchConnections(userId, "music", UserLikeList.class).getList();, +		return graphApi.fetchConnections(userId, "television", UserLikeList.class).getList();, +		return graphApi.fetchConnections(userId, "activities", UserLikeList.class).getList();, +		return graphApi.fetchConnections(userId, "interests", UserLikeList.class).getList();, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/MediaTemplate.java, +import org.springframework.social.facebook.support.json.AlbumList;, +		return graphApi.fetchConnections(userId, "albums", AlbumList.class).getList();, +		return graphApi.fetchObject(albumId, Album.class);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/FacebookTemplate.java, +		URIBuilder uriBuilder = URIBuilder.fromUri(GRAPH_API_URL + objectId + "/" + connectionType);, +		if(fields.length > 0) {, +			uriBuilder.queryParam("fields", joinedFields);, +		}		, +		return restTemplate.getForObject(uriBuilder.build(), type);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/GroupOperations.java, +import org.springframework.social.facebook.types.GroupMemberReference;, +	List<GroupMemberReference> getMembers(String groupId);, +++ b/spring-social-facebook/src/main/java/org/springframework/social/facebook/GroupTemplate.java, +import org.springframework.social.facebook.support.json.GroupMemberReferenceList;, +import org.springframework.social.facebook.types.GroupMemberReference;]