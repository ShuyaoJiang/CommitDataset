[+++ b/abstract-document/src/main/java/com/iluwatar/abstractdocument/AbstractDocument.java, +package com.iluwatar.abstractdocument;, +, +import java.util.List;, +import java.util.Map;, +import java.util.Objects;, +import java.util.function.Function;, +import java.util.stream.Stream;, +, +public abstract class AbstractDocument implements Document {, +, +	private final Map<String, Object> properties;, +, +	protected AbstractDocument(Map<String, Object> properties) {, +		Objects.requireNonNull(properties, "properties map is required");, +		this.properties = properties;, +	}, +, +	@Override, +	public Void put(String key, Object value) {, +		properties.put(key, value);, +		return null;, +	}, +, +	@Override, +	public Object get(String key) {, +		return properties.get(key);, +	}, +, +	@Override, +	public <T> Stream<T> children(String key, Function<Map<String, Object>, T> constructor) {, +		return Stream.of(get(key)), +				.filter(el -> el != null), +				.map(el -> (List<Map<String, Object>>) el), +				.findFirst().get().stream(), +				.map(constructor);, +	}, +, +}, +++ b/abstract-document/src/main/java/com/iluwatar/abstractdocument/AbstractDocument.java, +package com.iluwatar.abstractdocument;, +, +import java.util.List;, +import java.util.Map;, +import java.util.Objects;, +import java.util.function.Function;, +import java.util.stream.Stream;, +, +public abstract class AbstractDocument implements Document {, +, +	private final Map<String, Object> properties;, +, +	protected AbstractDocument(Map<String, Object> properties) {, +		Objects.requireNonNull(properties, "properties map is required");, +		this.properties = properties;, +	}, +, +	@Override, +	public Void put(String key, Object value) {, +		properties.put(key, value);, +		return null;, +	}, +, +	@Override, +	public Object get(String key) {, +		return properties.get(key);, +	}, +, +	@Override, +	public <T> Stream<T> children(String key, Function<Map<String, Object>, T> constructor) {, +		return Stream.of(get(key)), +				.filter(el -> el != null), +				.map(el -> (List<Map<String, Object>>) el), +				.findFirst().get().stream(), +				.map(constructor);, +	}, +, +}, +++ b/abstract-document/src/main/java/com/iluwatar/abstractdocument/Document.java, +package com.iluwatar.abstractdocument;, +, +import java.util.Map;, +import java.util.function.Function;, +import java.util.stream.Stream;, +, +public interface Document {, +, +	/**, +	 * Puts the value related to the key, +	 * , +	 * @param key, +	 * @param value, +	 * @return Void, +	 */, +	Void put(String key, Object value);, +, +	/**, +	 * Gets the value for the key, +	 * , +	 * @param key]