[+++ b/README.md, +* you want to provide a simple interface to a complex subsystem. Subsystems often get more complex  as they evolve. Most patterns, when applied, result in more and smaller classes. This makes the subsystem more reusable and easier to customize, but it also becomes harder to use for clients that don't need to customize it. A facade can provide a simple default view of the subsystem that is good enough for most clients. Only clients needing more customizability will need to look beyond the facade., +**Applicability:** Proxy is applicable whenever there is a need for a more versatile or sophisticated reference to an object than a simple pointer. Here are several common situations in which the Proxy pattern is applicable, +* many related classes differ only in their behavior. Strategies provide a way to configure a class either one of many behaviors, +* you need different variants of an algorithm. for example, you might define algorithms reflecting different space/time trade-offs. Strategies can be used when these variants are implemented as a class hierarchy of algorithms, +**Intent:** Poison Pill is known as predefined data item that allows to provide graceful shutdown for separate distributed consumption process., +* eager loading is expensive or the object to be loaded might not be needed at all]