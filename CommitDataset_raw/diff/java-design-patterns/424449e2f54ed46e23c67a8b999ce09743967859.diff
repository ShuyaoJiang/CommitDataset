[+++ b/README.md, +##Abstract Factory, +##Builder, +##Factory Method, +##Prototype, +##Singleton, +* there must be exactly one instance of a class, and it must be accessible to clients from a well-known access point, +##Adapter, +##Bridge, +##Composite, +##Decorator, +##Facade, +##Flyweight, +##Proxy, +##Chain of responsibility, +##Command, +##Interpreter, +##Iterator, +##Mediator, +##Memento, +##Model-View-Presenter, +**Intent:** Apply a "Separation of Concerns" principle in a way that allows developers to build and test user interfaces., +![alt text](https://github.com/iluwatar/java-design-patterns/blob/master/model-view-presenter/etc/model-view-presenter_1.png "Model-View-Presenter"), +, +**Applicability:** Use the Model-View-Presenter in any of the following situations, +* when you want to improve the "Separation of Concerns" principle in presentation logic, +* when a user interface development and testing is necessary., +, +##Observer, +##State, +##Strategy, +##Template method, +##Visitor, +##Double Checked Locking]