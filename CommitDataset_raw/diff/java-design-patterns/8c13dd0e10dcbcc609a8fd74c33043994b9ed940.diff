[+++ b/double-dispatch/src/main/java/com/iluwatar/App.java, +    	objects.add(new SpaceStationMir(1, 1, 2, 2));, +    	objects.add(new SpaceStationIss(12, 12, 14, 14));, +    	, +    	objects.stream().forEach(o -> System.out.println(o));, +    	System.out.println("");, +    	, +    	objects.stream().forEach(o1 -> objects.stream().forEach(o2 -> { if (o1 != o2 && o1.intersectsWith(o2)) o1.collision(o2); } ));, +    	System.out.println("");, +    	, +    	objects.stream().forEach(o -> System.out.println(o));, +    	System.out.println("");, +++ b/double-dispatch/src/main/java/com/iluwatar/App.java, +    	objects.add(new SpaceStationMir(1, 1, 2, 2));, +    	objects.add(new SpaceStationIss(12, 12, 14, 14));, +    	, +    	objects.stream().forEach(o -> System.out.println(o));, +    	System.out.println("");, +    	, +    	objects.stream().forEach(o1 -> objects.stream().forEach(o2 -> { if (o1 != o2 && o1.intersectsWith(o2)) o1.collision(o2); } ));, +    	System.out.println("");, +    	, +    	objects.stream().forEach(o -> System.out.println(o));, +    	System.out.println("");, +++ b/double-dispatch/src/main/java/com/iluwatar/FlamingAsteroid.java, +, +	@Override, +	public void collision(GameObject gameObject) {, +		gameObject.collisionResolve(this);, +	}, +++ b/double-dispatch/src/main/java/com/iluwatar/App.java, +    	objects.add(new SpaceStationMir(1, 1, 2, 2));, +    	objects.add(new SpaceStationIss(12, 12, 14, 14));, +    	, +    	objects.stream().forEach(o -> System.out.println(o));, +    	System.out.println("");, +    	, +    	objects.stream().forEach(o1 -> objects.stream().forEach(o2 -> { if (o1 != o2 && o1.intersectsWith(o2)) o1.collision(o2); } ));, +    	System.out.println("");, +    	, +    	objects.stream().forEach(o -> System.out.println(o));, +    	System.out.println("");, +++ b/double-dispatch/src/main/java/com/iluwatar/FlamingAsteroid.java, +, +	@Override, +	public void collision(GameObject gameObject) {, +		gameObject.collisionResolve(this);, +	}, +++ b/double-dispatch/src/main/java/com/iluwatar/GameObject.java, +	, +	public abstract void collision(GameObject gameObject);, +	, +	public abstract void collisionResolve(FlamingAsteroid asteroid);, +, +	public abstract void collisionResolve(Meteoroid meteoroid);, +, +	public abstract void collisionResolve(SpaceStationMir mir);, +, +	public abstract void collisionResolve(SpaceStationIss iss);, +++ b/double-dispatch/src/main/java/com/iluwatar/App.java, +    	objects.add(new SpaceStationMir(1, 1, 2, 2));, +    	objects.add(new SpaceStationIss(12, 12, 14, 14));, +    	, +    	objects.stream().forEach(o -> System.out.println(o));, +    	System.out.println("");, +    	, +    	objects.stream().forEach(o1 -> objects.stream().forEach(o2 -> { if (o1 != o2 && o1.intersectsWith(o2)) o1.collision(o2); } ));, +    	System.out.println("");, +    	, +    	objects.stream().forEach(o -> System.out.println(o));, +    	System.out.println("");, +++ b/double-dispatch/src/main/java/com/iluwatar/FlamingAsteroid.java, +, +	@Override, +	public void collision(GameObject gameObject) {, +		gameObject.collisionResolve(this);, +	}, +++ b/double-dispatch/src/main/java/com/iluwatar/GameObject.java, +	, +	public abstract void collision(GameObject gameObject);, +	, +	public abstract void collisionResolve(FlamingAsteroid asteroid);, +, +	public abstract void collisionResolve(Meteoroid meteoroid);, +, +	public abstract void collisionResolve(SpaceStationMir mir);, +, +	public abstract void collisionResolve(SpaceStationIss iss);, +++ b/double-dispatch/src/main/java/com/iluwatar/Meteoroid.java, +, +	@Override, +	public void collision(GameObject gameObject) {, +		gameObject.collisionResolve(this);, +	}, +, +	@Override, +	public void collisionResolve(FlamingAsteroid asteroid) {, +		System.out.println(String.format("%s hits %s", asteroid.getClass().getSimpleName(), this.getClass().getSimpleName()));, +	}, +]