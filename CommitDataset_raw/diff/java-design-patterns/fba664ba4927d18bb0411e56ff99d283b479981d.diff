[+++ b/double-dispatch/src/main/java/com/iluwatar/App.java, +import java.util.ArrayList;, +import java.util.List;, +, +    	List<GameObject> objects = new ArrayList<>();, +    	objects.add(new FlamingAsteroid(0, 0, 5, 5));, +    	objects.add(new SpaceStationMir(1, 1, 4, 4));, +    	objects.add(new Meteoroid(10, 10, 15, 15));, +    	objects.add(new SpaceStationIss(12, 11, 14, 15));, +    	objects.stream().forEach(o1 -> objects.stream().forEach(o2 -> { if (o1 != o2) System.out.println(String.format("%s -> %s", o1, o2)); } ));, +++ b/double-dispatch/src/main/java/com/iluwatar/App.java, +import java.util.ArrayList;, +import java.util.List;, +, +    	List<GameObject> objects = new ArrayList<>();, +    	objects.add(new FlamingAsteroid(0, 0, 5, 5));, +    	objects.add(new SpaceStationMir(1, 1, 4, 4));, +    	objects.add(new Meteoroid(10, 10, 15, 15));, +    	objects.add(new SpaceStationIss(12, 11, 14, 15));, +    	objects.stream().forEach(o1 -> objects.stream().forEach(o2 -> { if (o1 != o2) System.out.println(String.format("%s -> %s", o1, o2)); } ));, +++ /dev/null, +++ b/double-dispatch/src/main/java/com/iluwatar/App.java, +import java.util.ArrayList;, +import java.util.List;, +, +    	List<GameObject> objects = new ArrayList<>();, +    	objects.add(new FlamingAsteroid(0, 0, 5, 5));, +    	objects.add(new SpaceStationMir(1, 1, 4, 4));, +    	objects.add(new Meteoroid(10, 10, 15, 15));, +    	objects.add(new SpaceStationIss(12, 11, 14, 15));, +    	objects.stream().forEach(o1 -> objects.stream().forEach(o2 -> { if (o1 != o2) System.out.println(String.format("%s -> %s", o1, o2)); } ));, +++ /dev/null, +++ b/double-dispatch/src/main/java/com/iluwatar/FlamingAsteroid.java, +package com.iluwatar;, +, +public class FlamingAsteroid extends Meteoroid {, +, +	public FlamingAsteroid(int left, int top, int right, int bottom) {, +		super(left, top, right, bottom);, +		setOnFire(true);, +	}, +}, +++ b/double-dispatch/src/main/java/com/iluwatar/App.java, +import java.util.ArrayList;, +import java.util.List;, +, +    	List<GameObject> objects = new ArrayList<>();, +    	objects.add(new FlamingAsteroid(0, 0, 5, 5));, +    	objects.add(new SpaceStationMir(1, 1, 4, 4));, +    	objects.add(new Meteoroid(10, 10, 15, 15));, +    	objects.add(new SpaceStationIss(12, 11, 14, 15));, +    	objects.stream().forEach(o1 -> objects.stream().forEach(o2 -> { if (o1 != o2) System.out.println(String.format("%s -> %s", o1, o2)); } ));, +++ /dev/null, +++ b/double-dispatch/src/main/java/com/iluwatar/FlamingAsteroid.java, +package com.iluwatar;, +, +public class FlamingAsteroid extends Meteoroid {, +, +	public FlamingAsteroid(int left, int top, int right, int bottom) {, +		super(left, top, right, bottom);, +		setOnFire(true);, +	}, +}, +++ b/double-dispatch/src/main/java/com/iluwatar/GameObject.java, +	private boolean damaged;, +	private boolean onFire;, +	, +		return String.format("%s at %s damaged=%b onFire=%b", this.getClass().getSimpleName(), , +				super.toString(), isDamaged(), isOnFire());, +	}, +	, +	public boolean isOnFire() {, +		return onFire;, +	}, +	, +	public void setOnFire(boolean onFire) {, +		this.onFire = onFire;, +	}, +	, +	public boolean isDamaged() {, +		return damaged;, +	}, +	, +	public void setDamaged(boolean damaged) {, +		this.damaged = damaged;, +++ b/double-dispatch/src/main/java/com/iluwatar/App.java, +import java.util.ArrayList;, +import java.util.List;, +, +    	List<GameObject> objects = new ArrayList<>();, +    	objects.add(new FlamingAsteroid(0, 0, 5, 5));, +    	objects.add(new SpaceStationMir(1, 1, 4, 4));, +    	objects.add(new Meteoroid(10, 10, 15, 15));, +    	objects.add(new SpaceStationIss(12, 11, 14, 15));, +    	objects.stream().forEach(o1 -> objects.stream().forEach(o2 -> { if (o1 != o2) System.out.println(String.format("%s -> %s", o1, o2)); } ));, +++ /dev/null, +++ b/double-dispatch/src/main/java/com/iluwatar/FlamingAsteroid.java, +package com.iluwatar;, +, +public class FlamingAsteroid extends Meteoroid {]