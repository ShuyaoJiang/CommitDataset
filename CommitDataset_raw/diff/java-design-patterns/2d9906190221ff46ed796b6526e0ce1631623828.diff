[+++ b/event-asynchronous/README.md, +---, +layout: pattern, +title: Event-based Asynchronous, +folder: event-asynchronous, +permalink: /patterns/event-asynchronous/, +categories: Other, +tags:, + - Java, +---, +, +## Intent, +The Event-based Asynchronous Pattern makes available the advantages of multithreaded applications while hiding many, +of the complex issues inherent in multithreaded design. Using a class that supports this pattern can allow you to:-, +(1) Perform time-consuming tasks, such as downloads and database operations, "in the background," without interrupting your application. , +(2) Execute multiple operations simultaneously, receiving notifications when each completes. , +(3) Wait for resources to become available without stopping ("hanging") your application. , +(4) Communicate with pending asynchronous operations using the familiar events-and-delegates model., +, +![alt text](./etc/event-asynchronous.png "Event-based Asynchronous"), +, +## Applicability, +Use the Event-based Asynchronous pattern(s) when, +, +* Time-consuming tasks are needed to run in the background without disrupting the current application., +, +## Credits, +, +* [Event-based Asynchronous Pattern Overview](https://msdn.microsoft.com/en-us/library/wewwczdw%28v=vs.110%29.aspx?f=255&MSPPError=-2147217396), +++ b/event-asynchronous/README.md, +---, +layout: pattern, +title: Event-based Asynchronous, +folder: event-asynchronous, +permalink: /patterns/event-asynchronous/, +categories: Other, +tags:, + - Java, +---, +, +## Intent, +The Event-based Asynchronous Pattern makes available the advantages of multithreaded applications while hiding many, +of the complex issues inherent in multithreaded design. Using a class that supports this pattern can allow you to:-, +(1) Perform time-consuming tasks, such as downloads and database operations, "in the background," without interrupting your application. , +(2) Execute multiple operations simultaneously, receiving notifications when each completes. , +(3) Wait for resources to become available without stopping ("hanging") your application. , +(4) Communicate with pending asynchronous operations using the familiar events-and-delegates model., +, +![alt text](./etc/event-asynchronous.png "Event-based Asynchronous"), +, +## Applicability, +Use the Event-based Asynchronous pattern(s) when, +, +* Time-consuming tasks are needed to run in the background without disrupting the current application., +, +## Credits, +, +* [Event-based Asynchronous Pattern Overview](https://msdn.microsoft.com/en-us/library/wewwczdw%28v=vs.110%29.aspx?f=255&MSPPError=-2147217396), +++ b/event-asynchronous/etc/event-asynchronous.png, +++ b/event-asynchronous/README.md, +---, +layout: pattern, +title: Event-based Asynchronous, +folder: event-asynchronous, +permalink: /patterns/event-asynchronous/, +categories: Other, +tags:, + - Java, +---, +, +## Intent, +The Event-based Asynchronous Pattern makes available the advantages of multithreaded applications while hiding many, +of the complex issues inherent in multithreaded design. Using a class that supports this pattern can allow you to:-, +(1) Perform time-consuming tasks, such as downloads and database operations, "in the background," without interrupting your application. , +(2) Execute multiple operations simultaneously, receiving notifications when each completes. , +(3) Wait for resources to become available without stopping ("hanging") your application. , +(4) Communicate with pending asynchronous operations using the familiar events-and-delegates model., +, +![alt text](./etc/event-asynchronous.png "Event-based Asynchronous"), +, +## Applicability, +Use the Event-based Asynchronous pattern(s) when, +, +* Time-consuming tasks are needed to run in the background without disrupting the current application., +, +## Credits, +, +* [Event-based Asynchronous Pattern Overview](https://msdn.microsoft.com/en-us/library/wewwczdw%28v=vs.110%29.aspx?f=255&MSPPError=-2147217396), +++ b/event-asynchronous/etc/event-asynchronous.png, +++ b/event-asynchronous/etc/event-asynchronous.ucls, +<?xml version="1.0" encoding="UTF-8"?>, +<class-diagram version="1.1.10" icons="true" automaticImage="PNG" always-add-relationships="false" , +  generalizations="true" realizations="true" associations="true" dependencies="false" nesting-relationships="true" , +  router="FAN">  , +  <class id="1" language="java" name="com.iluwatar.event.asynchronous.App" project="event-asynchronous" , +    file="/event-asynchronous/src/main/java/com/iluwatar/event/asynchronous/App.java" binary="false" , +    corner="BOTTOM_RIGHT">    , +    <position height="-1" width="-1" x="629" y="221"/>    , +    <display autosize="true" stereotype="true" package="true" initial-value="false" signature="true" , +      sort-features="false" accessors="true" visibility="true">      ]