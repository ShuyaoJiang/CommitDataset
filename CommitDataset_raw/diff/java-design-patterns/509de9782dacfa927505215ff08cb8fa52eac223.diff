[+++ b/builder/etc/builder.ucls, +  <class id="4" language="java" name="com.iluwatar.builder.Hero.Builder" project="builder", +++ b/builder/etc/builder.ucls, +  <class id="4" language="java" name="com.iluwatar.builder.Hero.Builder" project="builder", +++ b/builder/src/main/java/com/iluwatar/builder/App.java, +import com.iluwatar.builder.Hero.Builder;, + * parameters needed. To aid the user we introduce {@link Builder} class. {@link Hero.Builder}, + * {@link Builder} interface. When configuration is ready the build method is called to receive, +        new Hero.Builder(Profession.MAGE, "Riobard").withHairColor(HairColor.BLACK), +        new Hero.Builder(Profession.WARRIOR, "Amberjill").withHairColor(HairColor.BLOND), +        new Hero.Builder(Profession.THIEF, "Desmond").withHairType(HairType.BALD), +++ b/builder/etc/builder.ucls, +  <class id="4" language="java" name="com.iluwatar.builder.Hero.Builder" project="builder", +++ b/builder/src/main/java/com/iluwatar/builder/App.java, +import com.iluwatar.builder.Hero.Builder;, + * parameters needed. To aid the user we introduce {@link Builder} class. {@link Hero.Builder}, + * {@link Builder} interface. When configuration is ready the build method is called to receive, +        new Hero.Builder(Profession.MAGE, "Riobard").withHairColor(HairColor.BLACK), +        new Hero.Builder(Profession.WARRIOR, "Amberjill").withHairColor(HairColor.BLOND), +        new Hero.Builder(Profession.THIEF, "Desmond").withHairType(HairType.BALD), +++ b/builder/src/main/java/com/iluwatar/builder/Hero.java, +  private Hero(Builder builder) {, +  public static class Builder {, +    public Builder(Profession profession, String name) {, +    public Builder withHairType(HairType hairType) {, +    public Builder withHairColor(HairColor hairColor) {, +    public Builder withArmor(Armor armor) {, +    public Builder withWeapon(Weapon weapon) {, +++ b/builder/etc/builder.ucls, +  <class id="4" language="java" name="com.iluwatar.builder.Hero.Builder" project="builder", +++ b/builder/src/main/java/com/iluwatar/builder/App.java, +import com.iluwatar.builder.Hero.Builder;, + * parameters needed. To aid the user we introduce {@link Builder} class. {@link Hero.Builder}, + * {@link Builder} interface. When configuration is ready the build method is called to receive, +        new Hero.Builder(Profession.MAGE, "Riobard").withHairColor(HairColor.BLACK), +        new Hero.Builder(Profession.WARRIOR, "Amberjill").withHairColor(HairColor.BLOND), +        new Hero.Builder(Profession.THIEF, "Desmond").withHairType(HairType.BALD), +++ b/builder/src/main/java/com/iluwatar/builder/Hero.java, +  private Hero(Builder builder) {, +  public static class Builder {, +    public Builder(Profession profession, String name) {, +    public Builder withHairType(HairType hairType) {, +    public Builder withHairColor(HairColor hairColor) {, +    public Builder withArmor(Armor armor) {, +    public Builder withWeapon(Weapon weapon) {, +++ b/builder/src/test/java/com/iluwatar/builder/HeroTest.java, +    new Hero.Builder(null, "Sir without a job");, +    new Hero.Builder(Profession.THIEF, null);, +    final Hero hero = new Hero.Builder(Profession.WARRIOR, heroName)]