[+++ b/layers/src/main/java/com/iluwatar/layers/App.java, +		cakeBakingService.saveNewLayer(new CakeLayerInfo("lemon", 950));, +		cakeBakingService.saveNewLayer(new CakeLayerInfo("vanilla", 950));, +		cakeBakingService.saveNewLayer(new CakeLayerInfo("strawberry", 950));, +		cakeBakingService.saveNewTopping(new CakeToppingInfo("cherry", 350));, +		CakeInfo cake1 = new CakeInfo(new CakeToppingInfo("candies", 0),, +			cakeBakingService.bakeNewCake(cake1);, +		} catch (CakeBakingException e) {, +			e.printStackTrace();, +		}, +		CakeInfo cake2 = new CakeInfo(new CakeToppingInfo("cherry", 0),, +				Arrays.asList(new CakeLayerInfo("vanilla", 0), new CakeLayerInfo("lemon", 0),, +						new CakeLayerInfo("strawberry", 0)));, +		try {, +			cakeBakingService.bakeNewCake(cake2);, +++ b/layers/src/main/java/com/iluwatar/layers/App.java, +		cakeBakingService.saveNewLayer(new CakeLayerInfo("lemon", 950));, +		cakeBakingService.saveNewLayer(new CakeLayerInfo("vanilla", 950));, +		cakeBakingService.saveNewLayer(new CakeLayerInfo("strawberry", 950));, +		cakeBakingService.saveNewTopping(new CakeToppingInfo("cherry", 350));, +		CakeInfo cake1 = new CakeInfo(new CakeToppingInfo("candies", 0),, +			cakeBakingService.bakeNewCake(cake1);, +		} catch (CakeBakingException e) {, +			e.printStackTrace();, +		}, +		CakeInfo cake2 = new CakeInfo(new CakeToppingInfo("cherry", 0),, +				Arrays.asList(new CakeLayerInfo("vanilla", 0), new CakeLayerInfo("lemon", 0),, +						new CakeLayerInfo("strawberry", 0)));, +		try {, +			cakeBakingService.bakeNewCake(cake2);, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingService.java, +	List<CakeToppingInfo> getAvailableToppings();, +	List<CakeLayerInfo> getAvailableLayers();, +++ b/layers/src/main/java/com/iluwatar/layers/App.java, +		cakeBakingService.saveNewLayer(new CakeLayerInfo("lemon", 950));, +		cakeBakingService.saveNewLayer(new CakeLayerInfo("vanilla", 950));, +		cakeBakingService.saveNewLayer(new CakeLayerInfo("strawberry", 950));, +		cakeBakingService.saveNewTopping(new CakeToppingInfo("cherry", 350));, +		CakeInfo cake1 = new CakeInfo(new CakeToppingInfo("candies", 0),, +			cakeBakingService.bakeNewCake(cake1);, +		} catch (CakeBakingException e) {, +			e.printStackTrace();, +		}, +		CakeInfo cake2 = new CakeInfo(new CakeToppingInfo("cherry", 0),, +				Arrays.asList(new CakeLayerInfo("vanilla", 0), new CakeLayerInfo("lemon", 0),, +						new CakeLayerInfo("strawberry", 0)));, +		try {, +			cakeBakingService.bakeNewCake(cake2);, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingService.java, +	List<CakeToppingInfo> getAvailableToppings();, +	List<CakeLayerInfo> getAvailableLayers();, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingServiceImpl.java, +		List<CakeToppingInfo> allToppings = getAvailableToppings();, +		List<CakeLayer> allLayers = getAvailableLayerEntities();, +	private List<CakeTopping> getAvailableToppingEntities() {, +			CakeTopping topping = iterator.next();, +			if (topping.getCake() == null) {, +				result.add(topping);, +			}, +	public List<CakeToppingInfo> getAvailableToppings() {, +			if (next.getCake() == null) {, +		}, +	private List<CakeLayer> getAvailableLayerEntities() {, +			CakeLayer next = iterator.next();, +			if (next.getCake() == null) {, +				result.add(next);, +			}, +	public List<CakeLayerInfo> getAvailableLayers() {, +			if (next.getCake() == null) {, +		}, +++ b/layers/src/main/java/com/iluwatar/layers/App.java, +		cakeBakingService.saveNewLayer(new CakeLayerInfo("lemon", 950));, +		cakeBakingService.saveNewLayer(new CakeLayerInfo("vanilla", 950));, +		cakeBakingService.saveNewLayer(new CakeLayerInfo("strawberry", 950));, +		cakeBakingService.saveNewTopping(new CakeToppingInfo("cherry", 350));, +		CakeInfo cake1 = new CakeInfo(new CakeToppingInfo("candies", 0),, +			cakeBakingService.bakeNewCake(cake1);, +		} catch (CakeBakingException e) {, +			e.printStackTrace();, +		}, +		CakeInfo cake2 = new CakeInfo(new CakeToppingInfo("cherry", 0),, +				Arrays.asList(new CakeLayerInfo("vanilla", 0), new CakeLayerInfo("lemon", 0),, +						new CakeLayerInfo("strawberry", 0)));, +		try {, +			cakeBakingService.bakeNewCake(cake2);, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingService.java, +	List<CakeToppingInfo> getAvailableToppings();, +	List<CakeLayerInfo> getAvailableLayers();, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingServiceImpl.java, +		List<CakeToppingInfo> allToppings = getAvailableToppings();, +		List<CakeLayer> allLayers = getAvailableLayerEntities();, +	private List<CakeTopping> getAvailableToppingEntities() {, +			CakeTopping topping = iterator.next();, +			if (topping.getCake() == null) {, +				result.add(topping);, +			}, +	public List<CakeToppingInfo> getAvailableToppings() {, +			if (next.getCake() == null) {, +		}, +	private List<CakeLayer> getAvailableLayerEntities() {]