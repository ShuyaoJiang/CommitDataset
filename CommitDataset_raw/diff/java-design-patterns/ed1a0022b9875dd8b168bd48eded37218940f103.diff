[+++ b/reactor/src/main/java/com/iluwatar/reactor/app/AppClient.java, +    LOGGER.info("Starting logging clients");, +        LOGGER.error("exception awaiting termination", e);, +    LOGGER.info("Logging clients stopped");, +      LOGGER.error("sleep interrupted", e);, +        LOGGER.error("error sending requests", e);, +        LOGGER.error("error sending packets", e1);, +++ b/reactor/src/main/java/com/iluwatar/reactor/app/AppClient.java, +    LOGGER.info("Starting logging clients");, +        LOGGER.error("exception awaiting termination", e);, +    LOGGER.info("Logging clients stopped");, +      LOGGER.error("sleep interrupted", e);, +        LOGGER.error("error sending requests", e);, +        LOGGER.error("error sending packets", e1);, +++ b/reactor/src/main/java/com/iluwatar/reactor/framework/NioReactor.java, +        LOGGER.error("exception in event loop", e);, +    LOGGER.info("Reactor stopped");, +        LOGGER.error("error closing channel", e1);, +++ b/reactor/src/main/java/com/iluwatar/reactor/app/AppClient.java, +    LOGGER.info("Starting logging clients");, +        LOGGER.error("exception awaiting termination", e);, +    LOGGER.info("Logging clients stopped");, +      LOGGER.error("sleep interrupted", e);, +        LOGGER.error("error sending requests", e);, +        LOGGER.error("error sending packets", e1);, +++ b/reactor/src/main/java/com/iluwatar/reactor/framework/NioReactor.java, +        LOGGER.error("exception in event loop", e);, +    LOGGER.info("Reactor stopped");, +        LOGGER.error("error closing channel", e1);, +++ b/reactor/src/test/java/com/iluwatar/reactor/app/ReactorTest.java, +import com.iluwatar.reactor.framework.NioReactor;, +import org.slf4j.Logger;, +import org.slf4j.LoggerFactory;, +  private static final Logger LOGGER = LoggerFactory.getLogger(ReactorTest.class);, +, +    LOGGER.info("testAppUsingThreadPoolDispatcher start");, +      LOGGER.error("sleep interrupted", e);, +    LOGGER.info("testAppUsingThreadPoolDispatcher stop");, +    LOGGER.info("testAppUsingSameThreadDispatcher start");, +      LOGGER.error("sleep interrupted", e);, +    LOGGER.info("testAppUsingSameThreadDispatcher stop");]