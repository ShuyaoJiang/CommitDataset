[+++ b/layers/pom.xml, +		<dependency>, +			<groupId>org.mockito</groupId>, +			<artifactId>mockito-core</artifactId>, +			<scope>test</scope>, +		</dependency>, +++ b/layers/pom.xml, +		<dependency>, +			<groupId>org.mockito</groupId>, +			<artifactId>mockito-core</artifactId>, +			<scope>test</scope>, +		</dependency>, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingServiceImpl.java, +    List<CakeTopping> allToppings = getAvailableToppingEntities();, +    List<CakeTopping> matchingToppings =, +        allToppings.stream().filter((t) -> t.getName().equals(cakeInfo.cakeToppingInfo.name)), +    CakeTopping topping = toppingBean.findOne(matchingToppings.iterator().next().getId());, +++ b/layers/pom.xml, +		<dependency>, +			<groupId>org.mockito</groupId>, +			<artifactId>mockito-core</artifactId>, +			<scope>test</scope>, +		</dependency>, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingServiceImpl.java, +    List<CakeTopping> allToppings = getAvailableToppingEntities();, +    List<CakeTopping> matchingToppings =, +        allToppings.stream().filter((t) -> t.getName().equals(cakeInfo.cakeToppingInfo.name)), +    CakeTopping topping = toppingBean.findOne(matchingToppings.iterator().next().getId());, +++ b/layers/src/main/java/com/iluwatar/layers/CakeInfo.java, +    return String.format("CakeInfo id=%d topping=%s layers=%s totalCalories=%d", id.orElse(-1L),, +++ b/layers/pom.xml, +		<dependency>, +			<groupId>org.mockito</groupId>, +			<artifactId>mockito-core</artifactId>, +			<scope>test</scope>, +		</dependency>, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingServiceImpl.java, +    List<CakeTopping> allToppings = getAvailableToppingEntities();, +    List<CakeTopping> matchingToppings =, +        allToppings.stream().filter((t) -> t.getName().equals(cakeInfo.cakeToppingInfo.name)), +    CakeTopping topping = toppingBean.findOne(matchingToppings.iterator().next().getId());, +++ b/layers/src/main/java/com/iluwatar/layers/CakeInfo.java, +    return String.format("CakeInfo id=%d topping=%s layers=%s totalCalories=%d", id.orElse(-1L),, +++ b/layers/src/main/java/com/iluwatar/layers/CakeLayerInfo.java, +    return String.format("CakeLayerInfo id=%d name=%s calories=%d", id.orElse(-1L), name, calories);, +++ b/layers/pom.xml, +		<dependency>, +			<groupId>org.mockito</groupId>, +			<artifactId>mockito-core</artifactId>, +			<scope>test</scope>, +		</dependency>, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingServiceImpl.java, +    List<CakeTopping> allToppings = getAvailableToppingEntities();, +    List<CakeTopping> matchingToppings =, +        allToppings.stream().filter((t) -> t.getName().equals(cakeInfo.cakeToppingInfo.name)), +    CakeTopping topping = toppingBean.findOne(matchingToppings.iterator().next().getId());, +++ b/layers/src/main/java/com/iluwatar/layers/CakeInfo.java, +    return String.format("CakeInfo id=%d topping=%s layers=%s totalCalories=%d", id.orElse(-1L),, +++ b/layers/src/main/java/com/iluwatar/layers/CakeLayerInfo.java, +    return String.format("CakeLayerInfo id=%d name=%s calories=%d", id.orElse(-1L), name, calories);, +++ b/layers/src/main/java/com/iluwatar/layers/CakeTopping.java, +    return String.format("id=%s name=%s calories=%d", id, name, calories);, +++ b/layers/pom.xml, +		<dependency>, +			<groupId>org.mockito</groupId>, +			<artifactId>mockito-core</artifactId>, +			<scope>test</scope>, +		</dependency>, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingServiceImpl.java, +    List<CakeTopping> allToppings = getAvailableToppingEntities();, +    List<CakeTopping> matchingToppings =, +        allToppings.stream().filter((t) -> t.getName().equals(cakeInfo.cakeToppingInfo.name)), +    CakeTopping topping = toppingBean.findOne(matchingToppings.iterator().next().getId());, +++ b/layers/src/main/java/com/iluwatar/layers/CakeInfo.java, +    return String.format("CakeInfo id=%d topping=%s layers=%s totalCalories=%d", id.orElse(-1L),, +++ b/layers/src/main/java/com/iluwatar/layers/CakeLayerInfo.java, +    return String.format("CakeLayerInfo id=%d name=%s calories=%d", id.orElse(-1L), name, calories);, +++ b/layers/src/main/java/com/iluwatar/layers/CakeTopping.java, +    return String.format("id=%s name=%s calories=%d", id, name, calories);, +++ b/layers/src/main/java/com/iluwatar/layers/CakeToppingInfo.java, +    return String.format("CakeToppingInfo id=%d name=%s calories=%d", id.orElse(-1L), name, calories);, +++ b/layers/pom.xml, +		<dependency>, +			<groupId>org.mockito</groupId>, +			<artifactId>mockito-core</artifactId>, +			<scope>test</scope>, +		</dependency>, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingServiceImpl.java, +    List<CakeTopping> allToppings = getAvailableToppingEntities();, +    List<CakeTopping> matchingToppings =, +        allToppings.stream().filter((t) -> t.getName().equals(cakeInfo.cakeToppingInfo.name)), +    CakeTopping topping = toppingBean.findOne(matchingToppings.iterator().next().getId());, +++ b/layers/src/main/java/com/iluwatar/layers/CakeInfo.java, +    return String.format("CakeInfo id=%d topping=%s layers=%s totalCalories=%d", id.orElse(-1L),, +++ b/layers/src/main/java/com/iluwatar/layers/CakeLayerInfo.java, +    return String.format("CakeLayerInfo id=%d name=%s calories=%d", id.orElse(-1L), name, calories);, +++ b/layers/src/main/java/com/iluwatar/layers/CakeTopping.java, +    return String.format("id=%s name=%s calories=%d", id, name, calories);, +++ b/layers/src/main/java/com/iluwatar/layers/CakeToppingInfo.java, +    return String.format("CakeToppingInfo id=%d name=%s calories=%d", id.orElse(-1L), name, calories);]