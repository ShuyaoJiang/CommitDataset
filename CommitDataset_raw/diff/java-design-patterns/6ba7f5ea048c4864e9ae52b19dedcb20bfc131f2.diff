[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +		<module>step-builder</module>, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +		<module>step-builder</module>, +++ b/singleton/src/test/java/com/iluwatar/singleton/LazyLoadedSingletonThreadSafetyTest.java, +import java.lang.reflect.Constructor;, +import java.lang.reflect.Field;, +import java.lang.reflect.InvocationTargetException;, +import java.util.ArrayList;, +import java.util.List;, +import java.util.concurrent.*;, +, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNull;, +, + * This class provides several test case that test singleton construction., + * The first proves that multiple calls to the singleton getInstance object are the same when called in the SAME thread., + * The second proves that multiple calls to the singleton getInstance object are the same when called in the DIFFERENT thread., + * The third proves that there is a hole if the singleton is created reflectively, +    private List<ThreadSafeLazyLoadedIvoryTower> threadObjects = new ArrayList<>();, +, +    //NullObject class so Callable has to return something, +    private class NullObject{private NullObject(){}}, +    public void test_MultipleCallsReturnTheSameObjectInSameThread() {, +        //Create several instances in the same calling thread, +        ThreadSafeLazyLoadedIvoryTower instance1 = ThreadSafeLazyLoadedIvoryTower.getInstance();, +        ThreadSafeLazyLoadedIvoryTower instance2 = ThreadSafeLazyLoadedIvoryTower.getInstance();, +        ThreadSafeLazyLoadedIvoryTower instance3 = ThreadSafeLazyLoadedIvoryTower.getInstance();, +        //now check they are equal, +        assertEquals(instance1, instance1);, +        assertEquals(instance1, instance2);, +        assertEquals(instance2, instance3);, +        assertEquals(instance1, instance3);, +    }, +, +    @Test, +    public void test_MultipleCallsReturnTheSameObjectInDifferentThreads() throws InterruptedException, ExecutionException {]