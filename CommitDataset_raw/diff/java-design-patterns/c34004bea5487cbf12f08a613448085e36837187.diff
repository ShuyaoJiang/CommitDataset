[+++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/administration/ConsoleAdministration.java, +    LotteryAdministration administration = injector.getInstance(LotteryAdministration.class);, +    ConsoleAdministrationSrv consoleAdministration = new ConsoleAdministrationSrvImpl(administration, LOGGER);, +          consoleAdministration.getAllSubmittedTickets();, +          consoleAdministration.performLottery();, +          consoleAdministration.resetLottery();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/administration/ConsoleAdministration.java, +    LotteryAdministration administration = injector.getInstance(LotteryAdministration.class);, +    ConsoleAdministrationSrv consoleAdministration = new ConsoleAdministrationSrvImpl(administration, LOGGER);, +          consoleAdministration.getAllSubmittedTickets();, +          consoleAdministration.performLottery();, +          consoleAdministration.resetLottery();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/administration/ConsoleAdministrationSrv.java, +package com.iluwatar.hexagonal.administration;, +, +/**, + * Console interface for lottery administration, + */, +public interface ConsoleAdministrationSrv {, +, +  /**, +   * Get all submitted tickets, +   */, +  void getAllSubmittedTickets();, +, +  /**, +   * Draw lottery numbers, +   */, +  void performLottery();, +, +  /**, +   * Begin new lottery round, +   */, +  void resetLottery();, +}, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/administration/ConsoleAdministration.java, +    LotteryAdministration administration = injector.getInstance(LotteryAdministration.class);, +    ConsoleAdministrationSrv consoleAdministration = new ConsoleAdministrationSrvImpl(administration, LOGGER);, +          consoleAdministration.getAllSubmittedTickets();, +          consoleAdministration.performLottery();, +          consoleAdministration.resetLottery();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/administration/ConsoleAdministrationSrv.java, +package com.iluwatar.hexagonal.administration;, +, +/**, + * Console interface for lottery administration, + */, +public interface ConsoleAdministrationSrv {, +, +  /**, +   * Get all submitted tickets, +   */, +  void getAllSubmittedTickets();, +, +  /**, +   * Draw lottery numbers, +   */, +  void performLottery();, +, +  /**, +   * Begin new lottery round, +   */, +  void resetLottery();, +}, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/administration/ConsoleAdministrationSrvImpl.java, +package com.iluwatar.hexagonal.administration;, +, +import com.iluwatar.hexagonal.domain.LotteryAdministration;, +import com.iluwatar.hexagonal.domain.LotteryNumbers;, +import org.slf4j.Logger;, +, +/**, + * Console implementation for lottery administration, + */, +public class ConsoleAdministrationSrvImpl implements ConsoleAdministrationSrv {, +  private final LotteryAdministration administration;, +  private final Logger logger;, +, +  /**, +   * Constructor, +   */, +  public ConsoleAdministrationSrvImpl(LotteryAdministration administration, Logger logger) {, +    this.administration = administration;, +    this.logger = logger;, +  }, +, +  @Override, +  public void getAllSubmittedTickets() {, +    administration.getAllSubmittedTickets().forEach((k, v) -> logger.info("Key: {}, Value: {}", k, v));, +  }, +, +  @Override, +  public void performLottery() {, +    LotteryNumbers numbers = administration.performLottery();, +    logger.info("The winning numbers: {}", numbers.getNumbersAsString());, +    logger.info("Time to reset the database for next round, eh?");, +  }, +, +  @Override, +  public void resetLottery() {]