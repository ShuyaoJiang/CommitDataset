[+++ b/adapter/etc/adapter.jpg, +++ b/adapter/etc/adapter.jpg, +++ b/adapter/src/main/java/com/iluwatar/App.java, + * target class (GoblinGlider) into suitable one expected, + * by the client (GnomeEngineeringManager)., +    	GnomeEngineeringManager manager = new GnomeEngineeringManager();, +    	manager.operateDevice();, +++ b/adapter/etc/adapter.jpg, +++ b/adapter/src/main/java/com/iluwatar/App.java, + * target class (GoblinGlider) into suitable one expected, + * by the client (GnomeEngineeringManager)., +    	GnomeEngineeringManager manager = new GnomeEngineeringManager();, +    	manager.operateDevice();, +++ b/adapter/src/main/java/com/iluwatar/Engineer.java, + * Engineers can operate devices., +++ b/adapter/etc/adapter.jpg, +++ b/adapter/src/main/java/com/iluwatar/App.java, + * target class (GoblinGlider) into suitable one expected, + * by the client (GnomeEngineeringManager)., +    	GnomeEngineeringManager manager = new GnomeEngineeringManager();, +    	manager.operateDevice();, +++ b/adapter/src/main/java/com/iluwatar/Engineer.java, + * Engineers can operate devices., +++ b/adapter/src/main/java/com/iluwatar/GnomeEngineer.java, + * Adapter class. Adapts the interface of the device, + * (GoblinGlider) into Engineer interface expected , + * by the client (GnomeEngineeringManager)., +++ b/adapter/etc/adapter.jpg, +++ b/adapter/src/main/java/com/iluwatar/App.java, + * target class (GoblinGlider) into suitable one expected, + * by the client (GnomeEngineeringManager)., +    	GnomeEngineeringManager manager = new GnomeEngineeringManager();, +    	manager.operateDevice();, +++ b/adapter/src/main/java/com/iluwatar/Engineer.java, + * Engineers can operate devices., +++ b/adapter/src/main/java/com/iluwatar/GnomeEngineer.java, + * Adapter class. Adapts the interface of the device, + * (GoblinGlider) into Engineer interface expected , + * by the client (GnomeEngineeringManager)., +++ b/adapter/src/main/java/com/iluwatar/GnomeEngineeringManager.java, +package com.iluwatar;, +, +/**, + * , + * GnomeEngineering manager uses Engineer to, + * operate devices., + *, + */, +public class GnomeEngineeringManager implements Engineer {, +, +	private Engineer engineer;, +	, +	public GnomeEngineeringManager() {, +		engineer = new GnomeEngineer();, +	}, +	, +	@Override, +	public void operateDevice() {, +		engineer.operateDevice();, +	}, +}, +++ b/adapter/etc/adapter.jpg, +++ b/adapter/src/main/java/com/iluwatar/App.java, + * target class (GoblinGlider) into suitable one expected, + * by the client (GnomeEngineeringManager)., +    	GnomeEngineeringManager manager = new GnomeEngineeringManager();, +    	manager.operateDevice();, +++ b/adapter/src/main/java/com/iluwatar/Engineer.java, + * Engineers can operate devices., +++ b/adapter/src/main/java/com/iluwatar/GnomeEngineer.java, + * Adapter class. Adapts the interface of the device, + * (GoblinGlider) into Engineer interface expected , + * by the client (GnomeEngineeringManager)., +++ b/adapter/src/main/java/com/iluwatar/GnomeEngineeringManager.java, +package com.iluwatar;, +, +/**, + * , + * GnomeEngineering manager uses Engineer to, + * operate devices., + *, + */, +public class GnomeEngineeringManager implements Engineer {, +, +	private Engineer engineer;, +	, +	public GnomeEngineeringManager() {, +		engineer = new GnomeEngineer();, +	}, +	, +	@Override, +	public void operateDevice() {, +		engineer.operateDevice();, +	}, +}, +++ b/adapter/src/main/java/com/iluwatar/GoblinGlider.java, + * Device class (adaptee in the pattern)., +		System.out.println("Glider attached.");, +		System.out.println("Gaining speed.");, +		System.out.println("Lift-off!");]