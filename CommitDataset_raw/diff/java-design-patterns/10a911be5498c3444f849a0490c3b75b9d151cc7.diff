[+++ b/decorator/src/main/java/com/iluwatar/decorator/App.java, + * Decorator pattern is a more flexible alternative to subclassing. The decorator, + * <p>, +	/**, +	 * Program entry point, +	 * @param args command line args, +	 */, +++ b/decorator/src/main/java/com/iluwatar/decorator/App.java, + * Decorator pattern is a more flexible alternative to subclassing. The decorator, + * <p>, +	/**, +	 * Program entry point, +	 * @param args command line args, +	 */, +++ b/decorator/src/main/java/com/iluwatar/decorator/SmartTroll.java, + * SmartTroll is a decorator for {@link Hostile} objects., + * The calls to the {@link Hostile} interface are intercepted, + * to the decorated {@link Hostile} object., +++ b/decorator/src/main/java/com/iluwatar/decorator/App.java, + * Decorator pattern is a more flexible alternative to subclassing. The decorator, + * <p>, +	/**, +	 * Program entry point, +	 * @param args command line args, +	 */, +++ b/decorator/src/main/java/com/iluwatar/decorator/SmartTroll.java, + * SmartTroll is a decorator for {@link Hostile} objects., + * The calls to the {@link Hostile} interface are intercepted, + * to the decorated {@link Hostile} object., +++ b/decorator/src/main/java/com/iluwatar/decorator/Troll.java, + * Troll implements {@link Hostile} interface directly., +++ b/decorator/src/main/java/com/iluwatar/decorator/App.java, + * Decorator pattern is a more flexible alternative to subclassing. The decorator, + * <p>, +	/**, +	 * Program entry point, +	 * @param args command line args, +	 */, +++ b/decorator/src/main/java/com/iluwatar/decorator/SmartTroll.java, + * SmartTroll is a decorator for {@link Hostile} objects., + * The calls to the {@link Hostile} interface are intercepted, + * to the decorated {@link Hostile} object., +++ b/decorator/src/main/java/com/iluwatar/decorator/Troll.java, + * Troll implements {@link Hostile} interface directly., +++ b/decorator/src/test/java/com/iluwatar/decorator/AppTest.java, +/**, + * , + * Application test, + *, + */]