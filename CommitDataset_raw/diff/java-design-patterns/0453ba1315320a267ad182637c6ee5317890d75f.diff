[+++ b/eip-wire-tap/src/main/java/com/iluwatar/eip/wiretap/App.java, +import org.apache.camel.CamelContext;, +import org.apache.camel.builder.RouteBuilder;, +import org.springframework.context.ConfigurableApplicationContext;, +  public static void main(String[] args) throws Exception{, +    // Run Spring Boot application and obtain ApplicationContext, +    ConfigurableApplicationContext context = SpringApplication.run(App.class, args);, +, +    // Get CamelContext from ApplicationContext, +    CamelContext camelContext = (CamelContext) context.getBean("camelContext");, +, +    // Add a new routes that will handle endpoints form WireTapRoute class., +    camelContext.addRoutes(new RouteBuilder() {, +, +      @Override, +      public void configure() throws Exception {, +        from("{{endpoint}}").log("ENDPOINT: ${body}");, +        from("{{wireTapEndpoint}}").log("WIRETAPPED ENDPOINT: ${body}");, +      }, +, +    });, +, +    // Add producer that will send test message to an entry point in WireTapRoute, +    camelContext.createProducerTemplate().sendBody("{{entry}}", "Test message");, +, +    SpringApplication.exit(context);, +++ b/eip-wire-tap/src/main/java/com/iluwatar/eip/wiretap/App.java, +import org.apache.camel.CamelContext;, +import org.apache.camel.builder.RouteBuilder;, +import org.springframework.context.ConfigurableApplicationContext;, +  public static void main(String[] args) throws Exception{, +    // Run Spring Boot application and obtain ApplicationContext, +    ConfigurableApplicationContext context = SpringApplication.run(App.class, args);, +, +    // Get CamelContext from ApplicationContext, +    CamelContext camelContext = (CamelContext) context.getBean("camelContext");, +, +    // Add a new routes that will handle endpoints form WireTapRoute class., +    camelContext.addRoutes(new RouteBuilder() {, +, +      @Override, +      public void configure() throws Exception {, +        from("{{endpoint}}").log("ENDPOINT: ${body}");, +        from("{{wireTapEndpoint}}").log("WIRETAPPED ENDPOINT: ${body}");, +      }, +, +    });, +, +    // Add producer that will send test message to an entry point in WireTapRoute, +    camelContext.createProducerTemplate().sendBody("{{entry}}", "Test message");, +, +    SpringApplication.exit(context);, +++ b/eip-wire-tap/src/main/java/com/iluwatar/eip/wiretap/routes/WireTapRoute.java, +    from("direct:wireTap").log("Message: ${body}").to("{{wireTapEndpoint}}");, +++ b/eip-wire-tap/src/main/java/com/iluwatar/eip/wiretap/App.java, +import org.apache.camel.CamelContext;, +import org.apache.camel.builder.RouteBuilder;, +import org.springframework.context.ConfigurableApplicationContext;, +  public static void main(String[] args) throws Exception{, +    // Run Spring Boot application and obtain ApplicationContext, +    ConfigurableApplicationContext context = SpringApplication.run(App.class, args);, +, +    // Get CamelContext from ApplicationContext, +    CamelContext camelContext = (CamelContext) context.getBean("camelContext");, +, +    // Add a new routes that will handle endpoints form WireTapRoute class., +    camelContext.addRoutes(new RouteBuilder() {, +, +      @Override, +      public void configure() throws Exception {, +        from("{{endpoint}}").log("ENDPOINT: ${body}");, +        from("{{wireTapEndpoint}}").log("WIRETAPPED ENDPOINT: ${body}");, +      }, +, +    });, +, +    // Add producer that will send test message to an entry point in WireTapRoute, +    camelContext.createProducerTemplate().sendBody("{{entry}}", "Test message");, +, +    SpringApplication.exit(context);, +++ b/eip-wire-tap/src/main/java/com/iluwatar/eip/wiretap/routes/WireTapRoute.java, +    from("direct:wireTap").log("Message: ${body}").to("{{wireTapEndpoint}}");, +++ b/eip-wire-tap/src/test/java/com/iluwatar/eip/wiretap/AppTest.java, +  public void testMain() throws Exception {]