[+++ b/abstract-factory/src/main/java/com/iluwatar/abstractfactory/App.java, +, +  , +, +  /**, +   * Program entry point, +   * , +   * @param args command line args, +   */, +  public static void main(String[] args) {, +	  , +	  App app = new App();, +	  , +	  System.out.println("Elf Kingdom");, +	  KingdomFactory elfKingdomFactory;, +	  elfKingdomFactory = app.getElfKingdomFactory();, +	  app.createKingdom(elfKingdomFactory);, +	  System.out.println(app.getArmy().getDescription());, +	  System.out.println(app.getCastle().getDescription());, +	  System.out.println(app.getKing().getDescription());, +	, +	  System.out.println("\nOrc Kingdom");, +	  KingdomFactory orcKingdomFactory;, +	  orcKingdomFactory = app.getOrcKingdomFactory();, +	  app.createKingdom(orcKingdomFactory);, +	  System.out.println(app.getArmy().getDescription());, +	  System.out.println(app.getCastle().getDescription());, +	  System.out.println(app.getKing().getDescription());, +	  , +  }, +  , +++ b/abstract-factory/src/main/java/com/iluwatar/abstractfactory/App.java, +, +  , +, +  /**, +   * Program entry point, +   * , +   * @param args command line args, +   */, +  public static void main(String[] args) {, +	  , +	  App app = new App();, +	  , +	  System.out.println("Elf Kingdom");, +	  KingdomFactory elfKingdomFactory;, +	  elfKingdomFactory = app.getElfKingdomFactory();, +	  app.createKingdom(elfKingdomFactory);, +	  System.out.println(app.getArmy().getDescription());, +	  System.out.println(app.getCastle().getDescription());, +	  System.out.println(app.getKing().getDescription());, +	, +	  System.out.println("\nOrc Kingdom");, +	  KingdomFactory orcKingdomFactory;, +	  orcKingdomFactory = app.getOrcKingdomFactory();, +	  app.createKingdom(orcKingdomFactory);, +	  System.out.println(app.getArmy().getDescription());, +	  System.out.println(app.getCastle().getDescription());, +	  System.out.println(app.getKing().getDescription());, +	  , +  }, +  , +++ b/dao/pom.xml, +, +  <build>, +, +    <!-- , +    log4j.xml file will be copied both in ${project.build.outputDirectory} , +    and ${project.build.directory}. Thanks to Sean Patrick Floyd , +    (http://stackoverflow.com/questions/5637532/maven-how-to-place-resource-file-together-with-jar) , +    -->, +      , +    <resources>, +      <resource> <!-- regular processing for every resource file -->, +        <directory>src/main/resources</directory>, +      </resource>, +      <resource> <!-- processing with a different output directory for log4j.xml -->, +        <directory>src/main/resources</directory>, +        <includes>, +          <include>log4j.xml</include>, +        </includes>, +        <targetPath>..</targetPath> <!-- relative to target/classes i.e. ${project.build.directory} -->, +      </resource>, +    </resources>, +, +    <plugins>, +, +      <!-- , +      This will exclude log4j.xml file from generated JAR , +      -->, +      <plugin>, +        <groupId>org.apache.maven.plugins</groupId>, +        <artifactId>maven-jar-plugin</artifactId>, +        <version>2.6</version>, +        <configuration>, +          <excludes>, +            <exclude>log4j.xml</exclude>, +          </excludes>, +          <archive>, +            <manifest>]