[+++ b/module/README.md, +---, +layout: pattern, +title: Module, +folder: module, +permalink: /patterns/module/, +pumlid: JShB3OGm303HLg20nFVjnYGM1CN6ycTfVtFSsnjfzY5jPgUqkLqHwXy0mxUU8wuyqidQ8q4IjJqCO-QBWGOtVh5qyd5AKOmW4mT6Nu2-ZiAekapH_hkcSTNa-GC0, +categories: Persistence Tier, +tags:, + - Java, + - Difficulty-Beginner, +---, +, +## Intent, +A layer of mappers that moves data between objects and a database while keeping them independent of each other and the mapper itself, +, +![alt text](./etc/module.png "Module"), +, +## Applicability, +The module pattern is a design pattern used to implement the concept of software modules, defined by modular programming, in a programming language with incomplete direct support for the concept., +, +The Module pattern can be considered a creational pattern and a structural pattern. It manages the creation and organization of other elements, and groups them as the structural pattern does., +, +An object that applies this pattern can provide the equivalent of a namespace, providing the initialization and finalization process of a static class or a class with static members with cleaner, more concise syntax and semantics., +, +It supports specific cases where a class or object can be considered structured, procedural data. And, vice versa, migrate structured, procedural data, and considered as object-oriented., +, +## Credits, +, +* [Module](https://en.wikipedia.org/wiki/Module_pattern), +++ b/module/README.md, +---, +layout: pattern, +title: Module, +folder: module, +permalink: /patterns/module/, +pumlid: JShB3OGm303HLg20nFVjnYGM1CN6ycTfVtFSsnjfzY5jPgUqkLqHwXy0mxUU8wuyqidQ8q4IjJqCO-QBWGOtVh5qyd5AKOmW4mT6Nu2-ZiAekapH_hkcSTNa-GC0, +categories: Persistence Tier, +tags:, + - Java, + - Difficulty-Beginner, +---, +, +## Intent, +A layer of mappers that moves data between objects and a database while keeping them independent of each other and the mapper itself, +, +![alt text](./etc/module.png "Module"), +, +## Applicability, +The module pattern is a design pattern used to implement the concept of software modules, defined by modular programming, in a programming language with incomplete direct support for the concept., +, +The Module pattern can be considered a creational pattern and a structural pattern. It manages the creation and organization of other elements, and groups them as the structural pattern does., +, +An object that applies this pattern can provide the equivalent of a namespace, providing the initialization and finalization process of a static class or a class with static members with cleaner, more concise syntax and semantics., +, +It supports specific cases where a class or object can be considered structured, procedural data. And, vice versa, migrate structured, procedural data, and considered as object-oriented., +, +## Credits, +, +* [Module](https://en.wikipedia.org/wiki/Module_pattern), +++ b/module/pom.xml, +<?xml version="1.0"?>, +<!--, +, +    The MIT License, +    Copyright (c) 2016 Amit Dixit, +, +    Permission is hereby granted, free of charge, to any person obtaining a copy, +    of this software and associated documentation files (the "Software"), to deal, +    in the Software without restriction, including without limitation the rights, +    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell, +    copies of the Software, and to permit persons to whom the Software is, +    furnished to do so, subject to the following conditions:, +, +    The above copyright notice and this permission notice shall be included in, +    all copies or substantial portions of the Software., +, +    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR, +    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,, +    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE, +    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER, +    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,, +    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN, +    THE SOFTWARE., +, +-->, +<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">, +	<modelVersion>4.0.0</modelVersion>, +	<parent>, +		<groupId>com.iluwatar</groupId>, +		<artifactId>java-design-patterns</artifactId>, +		<version>1.14.0-SNAPSHOT</version>, +	</parent>, +	<artifactId>module</artifactId>, +	<dependencies>, +		<dependency>, +			<groupId>junit</groupId>, +			<artifactId>junit</artifactId>, +			<scope>test</scope>, +		</dependency>]