[+++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/administration/ConsoleAdministration.java, +    try (Scanner scanner = new Scanner(System.in)) {, +        if ("1".equals(cmd)) {, +        } else if ("2".equals(cmd)) {, +        } else if ("3".equals(cmd)) {, +        } else if ("4".equals(cmd)) {, +  }, +    return scanner.next();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/administration/ConsoleAdministration.java, +    try (Scanner scanner = new Scanner(System.in)) {, +        if ("1".equals(cmd)) {, +        } else if ("2".equals(cmd)) {, +        } else if ("3".equals(cmd)) {, +        } else if ("4".equals(cmd)) {, +  }, +    return scanner.next();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryService.java, +    if (!result) {, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/administration/ConsoleAdministration.java, +    try (Scanner scanner = new Scanner(System.in)) {, +        if ("1".equals(cmd)) {, +        } else if ("2".equals(cmd)) {, +        } else if ("3".equals(cmd)) {, +        } else if ("4".equals(cmd)) {, +  }, +    return scanner.next();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryService.java, +    if (!result) {, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryTicketCheckResult.java, +  public enum CheckResult { WIN_PRIZE, NO_PRIZE, TICKET_NOT_SUBMITTED }, +    return checkResult == other.checkResult && prizeAmount == other.prizeAmount;, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/administration/ConsoleAdministration.java, +    try (Scanner scanner = new Scanner(System.in)) {, +        if ("1".equals(cmd)) {, +        } else if ("2".equals(cmd)) {, +        } else if ("3".equals(cmd)) {, +        } else if ("4".equals(cmd)) {, +  }, +    return scanner.next();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryService.java, +    if (!result) {, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryTicketCheckResult.java, +  public enum CheckResult { WIN_PRIZE, NO_PRIZE, TICKET_NOT_SUBMITTED }, +    return checkResult == other.checkResult && prizeAmount == other.prizeAmount;, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/eventlog/MongoEventLog.java, +    document.put("message", "Lottery ticket was submitted and bank account was charged for 3 credits.");, +    document.put("message", "Lottery ticket could not be submitted because lack of funds.");, +    document.put("message", "Lottery ticket was checked and unfortunately did not win this time.");, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/administration/ConsoleAdministration.java, +    try (Scanner scanner = new Scanner(System.in)) {, +        if ("1".equals(cmd)) {, +        } else if ("2".equals(cmd)) {, +        } else if ("3".equals(cmd)) {, +        } else if ("4".equals(cmd)) {, +  }, +    return scanner.next();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryService.java, +    if (!result) {, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryTicketCheckResult.java, +  public enum CheckResult { WIN_PRIZE, NO_PRIZE, TICKET_NOT_SUBMITTED }, +    return checkResult == other.checkResult && prizeAmount == other.prizeAmount;, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/eventlog/MongoEventLog.java, +    document.put("message", "Lottery ticket was submitted and bank account was charged for 3 credits.");, +    document.put("message", "Lottery ticket could not be submitted because lack of funds.");, +    document.put("message", "Lottery ticket was checked and unfortunately did not win this time.");, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/service/ConsoleLottery.java, +    try (final Scanner scanner = new Scanner(System.in)) {, +        if ("1".equals(cmd)) {, +          queryLotteryAccountFunds(bank, scanner);, +        } else if ("2".equals(cmd)) {, +          addFundsToLotteryAccount(bank, scanner);, +        } else if ("3".equals(cmd)) {, +          submitTicket(service, scanner);, +        } else if (cmd.equals("4")) {, +          checkTicket(service, scanner);, +        } else if ("5".equals(cmd)) {, +          exit = true;, +        } else {, +          LOGGER.info("Unknown command");, +        }, +      }, +    }, +  }, +, +  private static void checkTicket(LotteryService service, Scanner scanner) {, +    LOGGER.info("What is the ID of the lottery ticket?");, +    String id = readString(scanner);, +    LOGGER.info("Give the 4 comma separated winning numbers?");, +    String numbers = readString(scanner);, +    try {, +      String[] parts = numbers.split(",");, +      Set<Integer> winningNumbers = new HashSet<>();, +      for (int i = 0; i < 4; i++) {, +        winningNumbers.add(Integer.parseInt(parts[i]));, +      }, +      LotteryTicketCheckResult result = service.checkTicketForPrize(, +          new LotteryTicketId(Integer.parseInt(id)), LotteryNumbers.create(winningNumbers));, +      if (result.getResult().equals(LotteryTicketCheckResult.CheckResult.WIN_PRIZE)) {, +        LOGGER.info("Congratulations! The lottery ticket has won!");, +      } else if (result.getResult().equals(LotteryTicketCheckResult.CheckResult.NO_PRIZE)) {]