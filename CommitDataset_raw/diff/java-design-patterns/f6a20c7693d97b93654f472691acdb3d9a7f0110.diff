[+++ b/dao/src/main/java/com/iluwatar/dao/App.java, +    final CustomerDao customerDao = new InMemoryCustomerDao(generateSampleCustomers());, +    log.info("customerDao.getAllCustomers(): " + customerDao.getAll());, +    log.info("customerDao.getCusterById(2): " + customerDao.getById(2));, +    customerDao.add(customer);, +    log.info("customerDao.getAllCustomers(): " + customerDao.getAll());, +    customerDao.update(customer);, +    log.info("customerDao.getAllCustomers(): " + customerDao.getAll());, +    customerDao.delete(customer);, +    log.info("customerDao.getAllCustomers(): " + customerDao.getAll());, +++ b/dao/src/main/java/com/iluwatar/dao/App.java, +    final CustomerDao customerDao = new InMemoryCustomerDao(generateSampleCustomers());, +    log.info("customerDao.getAllCustomers(): " + customerDao.getAll());, +    log.info("customerDao.getCusterById(2): " + customerDao.getById(2));, +    customerDao.add(customer);, +    log.info("customerDao.getAllCustomers(): " + customerDao.getAll());, +    customerDao.update(customer);, +    log.info("customerDao.getAllCustomers(): " + customerDao.getAll());, +    customerDao.delete(customer);, +    log.info("customerDao.getAllCustomers(): " + customerDao.getAll());, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerDao.java, +import java.util.stream.Stream;, +  Stream<Customer> getAll();, +  Customer getById(int id);, +  boolean add(Customer customer);, +  boolean update(Customer customer);, +  boolean delete(Customer customer);, +++ b/dao/src/main/java/com/iluwatar/dao/App.java, +    final CustomerDao customerDao = new InMemoryCustomerDao(generateSampleCustomers());, +    log.info("customerDao.getAllCustomers(): " + customerDao.getAll());, +    log.info("customerDao.getCusterById(2): " + customerDao.getById(2));, +    customerDao.add(customer);, +    log.info("customerDao.getAllCustomers(): " + customerDao.getAll());, +    customerDao.update(customer);, +    log.info("customerDao.getAllCustomers(): " + customerDao.getAll());, +    customerDao.delete(customer);, +    log.info("customerDao.getAllCustomers(): " + customerDao.getAll());, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerDao.java, +import java.util.stream.Stream;, +  Stream<Customer> getAll();, +  Customer getById(int id);, +  boolean add(Customer customer);, +  boolean update(Customer customer);, +  boolean delete(Customer customer);, +++ /dev/null, +++ b/dao/src/main/java/com/iluwatar/dao/App.java, +    final CustomerDao customerDao = new InMemoryCustomerDao(generateSampleCustomers());, +    log.info("customerDao.getAllCustomers(): " + customerDao.getAll());, +    log.info("customerDao.getCusterById(2): " + customerDao.getById(2));, +    customerDao.add(customer);, +    log.info("customerDao.getAllCustomers(): " + customerDao.getAll());, +    customerDao.update(customer);, +    log.info("customerDao.getAllCustomers(): " + customerDao.getAll());, +    customerDao.delete(customer);, +    log.info("customerDao.getAllCustomers(): " + customerDao.getAll());, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerDao.java, +import java.util.stream.Stream;, +  Stream<Customer> getAll();, +  Customer getById(int id);, +  boolean add(Customer customer);, +  boolean update(Customer customer);, +  boolean delete(Customer customer);, +++ /dev/null, +++ b/dao/src/main/java/com/iluwatar/dao/DBCustomerDao.java, +package com.iluwatar.dao;, +, +import java.util.stream.Stream;, +, +public class DBCustomerDao implements CustomerDao {, +, +  @Override, +  public Stream<Customer> getAll() {, +    // TODO Auto-generated method stub, +    return null;, +  }, +, +  @Override, +  public Customer getById(int id) {, +    // TODO Auto-generated method stub, +    return null;, +  }, +, +  @Override, +  public boolean add(Customer customer) {, +    // TODO Auto-generated method stub, +    return false;, +  }, +, +  @Override, +  public boolean update(Customer customer) {, +    // TODO Auto-generated method stub, +    return false;, +  }, +, +  @Override, +  public boolean delete(Customer customer) {, +    // TODO Auto-generated method stub, +    return false;, +  }, +]