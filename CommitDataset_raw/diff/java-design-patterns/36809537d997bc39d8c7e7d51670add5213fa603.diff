[+++ b/singleton/src/main/java/com/iluwatar/singleton/App.java, +/**, + * Singleton pattern., + */, +++ b/singleton/src/main/java/com/iluwatar/singleton/App.java, +/**, + * Singleton pattern., + */, +++ b/singleton/src/main/java/com/iluwatar/singleton/EnumIvoryTower.java, +/**, + * Enum Singleton class., + * Effective Java 2nd Edition (Joshua Bloch) p. 18, + */, + * Enum based singleton implementation., +++ b/singleton/src/main/java/com/iluwatar/singleton/App.java, +/**, + * Singleton pattern., + */, +++ b/singleton/src/main/java/com/iluwatar/singleton/EnumIvoryTower.java, +/**, + * Enum Singleton class., + * Effective Java 2nd Edition (Joshua Bloch) p. 18, + */, + * Enum based singleton implementation., +++ b/singleton/src/main/java/com/iluwatar/singleton/InitializingOnDemandHolderIdiom.java, +/**, + * Singleton pattern., + */, + * <p/>, +    private InitializingOnDemandHolderIdiom() {, +    private static class HelperHolder {, +        public static final InitializingOnDemandHolderIdiom INSTANCE = new InitializingOnDemandHolderIdiom();, +    }, +, +++ b/singleton/src/main/java/com/iluwatar/singleton/App.java, +/**, + * Singleton pattern., + */, +++ b/singleton/src/main/java/com/iluwatar/singleton/EnumIvoryTower.java, +/**, + * Enum Singleton class., + * Effective Java 2nd Edition (Joshua Bloch) p. 18, + */, + * Enum based singleton implementation., +++ b/singleton/src/main/java/com/iluwatar/singleton/InitializingOnDemandHolderIdiom.java, +/**, + * Singleton pattern., + */, + * <p/>, +    private InitializingOnDemandHolderIdiom() {, +    private static class HelperHolder {, +        public static final InitializingOnDemandHolderIdiom INSTANCE = new InitializingOnDemandHolderIdiom();, +    }, +, +++ b/singleton/src/main/java/com/iluwatar/singleton/IvoryTower.java, +/**, + * Singleton pattern., + */, +public final class IvoryTower {, +    /**, +     * Static to class instance of the class., +     */, +    /**, +     * Private constructor so nobody can instantiate the class., +     */, +    /**, +     * To be called by user to, +     * obtain instance of the class., +     *, +     * @return instance of the singleton., +     */, +++ b/singleton/src/main/java/com/iluwatar/singleton/App.java, +/**, + * Singleton pattern., + */, +++ b/singleton/src/main/java/com/iluwatar/singleton/EnumIvoryTower.java, +/**, + * Enum Singleton class., + * Effective Java 2nd Edition (Joshua Bloch) p. 18, + */, + * Enum based singleton implementation., +++ b/singleton/src/main/java/com/iluwatar/singleton/InitializingOnDemandHolderIdiom.java, +/**, + * Singleton pattern., + */, + * <p/>, +    private InitializingOnDemandHolderIdiom() {, +    private static class HelperHolder {, +        public static final InitializingOnDemandHolderIdiom INSTANCE = new InitializingOnDemandHolderIdiom();, +    }, +, +++ b/singleton/src/main/java/com/iluwatar/singleton/IvoryTower.java, +/**, + * Singleton pattern., + */, +public final class IvoryTower {, +    /**, +     * Static to class instance of the class., +     */, +    /**]