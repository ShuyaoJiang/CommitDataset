[+++ b/caching/src/main/java/com/iluwatar/caching/CacheStore.java, +import java.util.List;, +    List<UserAccount> listOfUserAccounts = cache.getCacheDataInListForm();, +    List<UserAccount> listOfUserAccounts = cache.getCacheDataInListForm();, +++ b/caching/src/main/java/com/iluwatar/caching/CacheStore.java, +import java.util.List;, +    List<UserAccount> listOfUserAccounts = cache.getCacheDataInListForm();, +    List<UserAccount> listOfUserAccounts = cache.getCacheDataInListForm();, +++ b/caching/src/main/java/com/iluwatar/caching/DbManager.java, +import java.util.Map;, +  private static Map<String, UserAccount> virtualDB;, +++ b/caching/src/main/java/com/iluwatar/caching/CacheStore.java, +import java.util.List;, +    List<UserAccount> listOfUserAccounts = cache.getCacheDataInListForm();, +    List<UserAccount> listOfUserAccounts = cache.getCacheDataInListForm();, +++ b/caching/src/main/java/com/iluwatar/caching/DbManager.java, +import java.util.Map;, +  private static Map<String, UserAccount> virtualDB;, +++ b/caching/src/main/java/com/iluwatar/caching/LruCache.java, +import java.util.List;, +import java.util.Map;, +  Map<String, Node> cache = new HashMap<>();, +  public List<UserAccount> getCacheDataInListForm() {, +++ b/caching/src/main/java/com/iluwatar/caching/CacheStore.java, +import java.util.List;, +    List<UserAccount> listOfUserAccounts = cache.getCacheDataInListForm();, +    List<UserAccount> listOfUserAccounts = cache.getCacheDataInListForm();, +++ b/caching/src/main/java/com/iluwatar/caching/DbManager.java, +import java.util.Map;, +  private static Map<String, UserAccount> virtualDB;, +++ b/caching/src/main/java/com/iluwatar/caching/LruCache.java, +import java.util.List;, +import java.util.Map;, +  Map<String, Node> cache = new HashMap<>();, +  public List<UserAccount> getCacheDataInListForm() {, +++ b/fluentinterface/src/main/java/com/iluwatar/fluentinterface/fluentiterable/FluentIterable.java, +    List<E> copy = new ArrayList<>();, +++ b/caching/src/main/java/com/iluwatar/caching/CacheStore.java, +import java.util.List;, +    List<UserAccount> listOfUserAccounts = cache.getCacheDataInListForm();, +    List<UserAccount> listOfUserAccounts = cache.getCacheDataInListForm();, +++ b/caching/src/main/java/com/iluwatar/caching/DbManager.java, +import java.util.Map;, +  private static Map<String, UserAccount> virtualDB;, +++ b/caching/src/main/java/com/iluwatar/caching/LruCache.java, +import java.util.List;, +import java.util.Map;, +  Map<String, Node> cache = new HashMap<>();, +  public List<UserAccount> getCacheDataInListForm() {, +++ b/fluentinterface/src/main/java/com/iluwatar/fluentinterface/fluentiterable/FluentIterable.java, +    List<E> copy = new ArrayList<>();, +++ b/flux/src/main/java/com/iluwatar/flux/dispatcher/Dispatcher.java, +    stores.stream().forEach((store) -> store.onAction(action));, +++ b/caching/src/main/java/com/iluwatar/caching/CacheStore.java, +import java.util.List;, +    List<UserAccount> listOfUserAccounts = cache.getCacheDataInListForm();, +    List<UserAccount> listOfUserAccounts = cache.getCacheDataInListForm();, +++ b/caching/src/main/java/com/iluwatar/caching/DbManager.java, +import java.util.Map;, +  private static Map<String, UserAccount> virtualDB;, +++ b/caching/src/main/java/com/iluwatar/caching/LruCache.java, +import java.util.List;, +import java.util.Map;, +  Map<String, Node> cache = new HashMap<>();, +  public List<UserAccount> getCacheDataInListForm() {, +++ b/fluentinterface/src/main/java/com/iluwatar/fluentinterface/fluentiterable/FluentIterable.java, +    List<E> copy = new ArrayList<>();, +++ b/flux/src/main/java/com/iluwatar/flux/dispatcher/Dispatcher.java, +    stores.stream().forEach((store) -> store.onAction(action));, +++ b/flux/src/main/java/com/iluwatar/flux/store/Store.java, +    views.stream().forEach((view) -> view.storeChanged(this));, +++ b/caching/src/main/java/com/iluwatar/caching/CacheStore.java, +import java.util.List;, +    List<UserAccount> listOfUserAccounts = cache.getCacheDataInListForm();, +    List<UserAccount> listOfUserAccounts = cache.getCacheDataInListForm();, +++ b/caching/src/main/java/com/iluwatar/caching/DbManager.java, +import java.util.Map;, +  private static Map<String, UserAccount> virtualDB;, +++ b/caching/src/main/java/com/iluwatar/caching/LruCache.java, +import java.util.List;, +import java.util.Map;, +  Map<String, Node> cache = new HashMap<>();, +  public List<UserAccount> getCacheDataInListForm() {, +++ b/fluentinterface/src/main/java/com/iluwatar/fluentinterface/fluentiterable/FluentIterable.java, +    List<E> copy = new ArrayList<>();, +++ b/flux/src/main/java/com/iluwatar/flux/dispatcher/Dispatcher.java, +    stores.stream().forEach((store) -> store.onAction(action));, +++ b/flux/src/main/java/com/iluwatar/flux/store/Store.java, +    views.stream().forEach((view) -> view.storeChanged(this));, +++ b/half-sync-half-async/src/main/java/com/iluwatar/halfsynchalfasync/App.java, +    return (i) * (i + 1) / 2;, +++ b/caching/src/main/java/com/iluwatar/caching/CacheStore.java, +import java.util.List;, +    List<UserAccount> listOfUserAccounts = cache.getCacheDataInListForm();, +    List<UserAccount> listOfUserAccounts = cache.getCacheDataInListForm();, +++ b/caching/src/main/java/com/iluwatar/caching/DbManager.java, +import java.util.Map;, +  private static Map<String, UserAccount> virtualDB;, +++ b/caching/src/main/java/com/iluwatar/caching/LruCache.java, +import java.util.List;]