[+++ b/abstract-factory/src/main/java/com/iluwatar/abstractfactory/App.java, +    app.createKingdom(new ElfKingdomFactory());, +    app.createKingdom(new OrcKingdomFactory());, +++ b/abstract-factory/src/main/java/com/iluwatar/abstractfactory/App.java, +    app.createKingdom(new ElfKingdomFactory());, +    app.createKingdom(new OrcKingdomFactory());, +++ b/abstract-factory/src/test/java/com/iluwatar/abstractfactory/AbstractFactoryTest.java, +    elfFactory = new ElfKingdomFactory();, +    orcFactory = new OrcKingdomFactory();, +++ b/abstract-factory/src/main/java/com/iluwatar/abstractfactory/App.java, +    app.createKingdom(new ElfKingdomFactory());, +    app.createKingdom(new OrcKingdomFactory());, +++ b/abstract-factory/src/test/java/com/iluwatar/abstractfactory/AbstractFactoryTest.java, +    elfFactory = new ElfKingdomFactory();, +    orcFactory = new OrcKingdomFactory();, +++ b/factory-method/src/main/java/com/iluwatar/factory/method/App.java, +  private final Blacksmith blacksmith;, +  , +  /**, +   * Creates an instance of <code>App</code> which will use <code>blacksmith</code> to manufacture , +   * the weapons for war., +   * <code>App</code> is unaware which concrete implementation of {@link Blacksmith} it is using., +   * The decision of which blacksmith implementation to use may depend on configuration, or, +   * the type of rival in war., +   * @param blacksmith a non-null implementation of blacksmith, +   */, +  public App(Blacksmith blacksmith) {, +    this.blacksmith = blacksmith;, +  }, +  , +    // Lets go to war with Orc weapons, +    App app = new App(new OrcBlacksmith());, +    app.manufactureWeapons();, +    // Lets go to war with Elf weapons, +    app = new App(new ElfBlacksmith());, +    app.manufactureWeapons();, +  }, +  , +  private void manufactureWeapons() {, +    Weapon weapon;, +++ b/abstract-factory/src/main/java/com/iluwatar/abstractfactory/App.java, +    app.createKingdom(new ElfKingdomFactory());, +    app.createKingdom(new OrcKingdomFactory());, +++ b/abstract-factory/src/test/java/com/iluwatar/abstractfactory/AbstractFactoryTest.java, +    elfFactory = new ElfKingdomFactory();, +    orcFactory = new OrcKingdomFactory();, +++ b/factory-method/src/main/java/com/iluwatar/factory/method/App.java, +  private final Blacksmith blacksmith;, +  , +  /**, +   * Creates an instance of <code>App</code> which will use <code>blacksmith</code> to manufacture , +   * the weapons for war., +   * <code>App</code> is unaware which concrete implementation of {@link Blacksmith} it is using., +   * The decision of which blacksmith implementation to use may depend on configuration, or, +   * the type of rival in war., +   * @param blacksmith a non-null implementation of blacksmith, +   */, +  public App(Blacksmith blacksmith) {, +    this.blacksmith = blacksmith;, +  }, +  , +    // Lets go to war with Orc weapons, +    App app = new App(new OrcBlacksmith());, +    app.manufactureWeapons();, +    // Lets go to war with Elf weapons, +    app = new App(new ElfBlacksmith());, +    app.manufactureWeapons();, +  }, +  , +  private void manufactureWeapons() {, +    Weapon weapon;, +++ b/factory-method/src/test/java/com/iluwatar/factory/method/FactoryMethodTest.java, +  private void verifyWeapon(Weapon weapon, WeaponType expectedWeaponType, Class<?> clazz) {]