[+++ b/flux/src/main/java/com/iluwatar/flux/dispatcher/Dispatcher.java, +    stores.stream().forEach(store -> store.onAction(action));, +++ b/flux/src/main/java/com/iluwatar/flux/dispatcher/Dispatcher.java, +    stores.stream().forEach(store -> store.onAction(action));, +++ b/flux/src/main/java/com/iluwatar/flux/store/Store.java, +    views.stream().forEach(view -> view.storeChanged(this));, +++ b/flux/src/main/java/com/iluwatar/flux/dispatcher/Dispatcher.java, +    stores.stream().forEach(store -> store.onAction(action));, +++ b/flux/src/main/java/com/iluwatar/flux/store/Store.java, +    views.stream().forEach(view -> view.storeChanged(this));, +++ b/half-sync-half-async/src/main/java/com/iluwatar/halfsynchalfasync/App.java, +    return i * (i + 1) / 2;, +++ b/flux/src/main/java/com/iluwatar/flux/dispatcher/Dispatcher.java, +    stores.stream().forEach(store -> store.onAction(action));, +++ b/flux/src/main/java/com/iluwatar/flux/store/Store.java, +    views.stream().forEach(view -> view.storeChanged(this));, +++ b/half-sync-half-async/src/main/java/com/iluwatar/halfsynchalfasync/App.java, +    return i * (i + 1) / 2;, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingServiceImpl.java, +        allToppings.stream().filter(t -> t.getName().equals(cakeInfo.cakeToppingInfo.name)), +          allLayers.stream().filter(layer -> layer.getName().equals(info.name)).findFirst();, +++ b/flux/src/main/java/com/iluwatar/flux/dispatcher/Dispatcher.java, +    stores.stream().forEach(store -> store.onAction(action));, +++ b/flux/src/main/java/com/iluwatar/flux/store/Store.java, +    views.stream().forEach(view -> view.storeChanged(this));, +++ b/half-sync-half-async/src/main/java/com/iluwatar/halfsynchalfasync/App.java, +    return i * (i + 1) / 2;, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingServiceImpl.java, +        allToppings.stream().filter(t -> t.getName().equals(cakeInfo.cakeToppingInfo.name)), +          allLayers.stream().filter(layer -> layer.getName().equals(info.name)).findFirst();, +++ b/layers/src/main/java/com/iluwatar/layers/CakeViewImpl.java, +    cakeBakingService.getAllCakes().stream().forEach(cake -> System.out.println(cake));, +++ b/flux/src/main/java/com/iluwatar/flux/dispatcher/Dispatcher.java, +    stores.stream().forEach(store -> store.onAction(action));, +++ b/flux/src/main/java/com/iluwatar/flux/store/Store.java, +    views.stream().forEach(view -> view.storeChanged(this));, +++ b/half-sync-half-async/src/main/java/com/iluwatar/halfsynchalfasync/App.java, +    return i * (i + 1) / 2;, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingServiceImpl.java, +        allToppings.stream().filter(t -> t.getName().equals(cakeInfo.cakeToppingInfo.name)), +          allLayers.stream().filter(layer -> layer.getName().equals(info.name)).findFirst();, +++ b/layers/src/main/java/com/iluwatar/layers/CakeViewImpl.java, +    cakeBakingService.getAllCakes().stream().forEach(cake -> System.out.println(cake));, +++ b/message-channel/src/main/java/com/iluwatar/message/channel/App.java, +    context.getRoutes().stream().forEach(r -> System.out.println(r));, +++ b/flux/src/main/java/com/iluwatar/flux/dispatcher/Dispatcher.java, +    stores.stream().forEach(store -> store.onAction(action));, +++ b/flux/src/main/java/com/iluwatar/flux/store/Store.java, +    views.stream().forEach(view -> view.storeChanged(this));, +++ b/half-sync-half-async/src/main/java/com/iluwatar/halfsynchalfasync/App.java, +    return i * (i + 1) / 2;, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingServiceImpl.java, +        allToppings.stream().filter(t -> t.getName().equals(cakeInfo.cakeToppingInfo.name)), +          allLayers.stream().filter(layer -> layer.getName().equals(info.name)).findFirst();, +++ b/layers/src/main/java/com/iluwatar/layers/CakeViewImpl.java, +    cakeBakingService.getAllCakes().stream().forEach(cake -> System.out.println(cake));, +++ b/message-channel/src/main/java/com/iluwatar/message/channel/App.java, +    context.getRoutes().stream().forEach(r -> System.out.println(r));, +++ b/publish-subscribe/src/main/java/com/iluwatar/publish/subscribe/App.java, +    context.getRoutes().stream().forEach(r -> System.out.println(r));, +++ b/flux/src/main/java/com/iluwatar/flux/dispatcher/Dispatcher.java, +    stores.stream().forEach(store -> store.onAction(action));, +++ b/flux/src/main/java/com/iluwatar/flux/store/Store.java, +    views.stream().forEach(view -> view.storeChanged(this));, +++ b/half-sync-half-async/src/main/java/com/iluwatar/halfsynchalfasync/App.java, +    return i * (i + 1) / 2;, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingServiceImpl.java, +        allToppings.stream().filter(t -> t.getName().equals(cakeInfo.cakeToppingInfo.name)), +          allLayers.stream().filter(layer -> layer.getName().equals(info.name)).findFirst();, +++ b/layers/src/main/java/com/iluwatar/layers/CakeViewImpl.java, +    cakeBakingService.getAllCakes().stream().forEach(cake -> System.out.println(cake));, +++ b/message-channel/src/main/java/com/iluwatar/message/channel/App.java, +    context.getRoutes().stream().forEach(r -> System.out.println(r));, +++ b/publish-subscribe/src/main/java/com/iluwatar/publish/subscribe/App.java, +    context.getRoutes().stream().forEach(r -> System.out.println(r));, +++ b/reactor/src/main/java/com/iluwatar/reactor/app/LoggingHandler.java, +      doLogging((ByteBuffer) readObject);, +++ b/flux/src/main/java/com/iluwatar/flux/dispatcher/Dispatcher.java, +    stores.stream().forEach(store -> store.onAction(action));, +++ b/flux/src/main/java/com/iluwatar/flux/store/Store.java, +    views.stream().forEach(view -> view.storeChanged(this));, +++ b/half-sync-half-async/src/main/java/com/iluwatar/halfsynchalfasync/App.java, +    return i * (i + 1) / 2;, +++ b/layers/src/main/java/com/iluwatar/layers/CakeBakingServiceImpl.java, +        allToppings.stream().filter(t -> t.getName().equals(cakeInfo.cakeToppingInfo.name)), +          allLayers.stream().filter(layer -> layer.getName().equals(info.name)).findFirst();, +++ b/layers/src/main/java/com/iluwatar/layers/CakeViewImpl.java, +    cakeBakingService.getAllCakes().stream().forEach(cake -> System.out.println(cake));, +++ b/message-channel/src/main/java/com/iluwatar/message/channel/App.java, +    context.getRoutes().stream().forEach(r -> System.out.println(r));, +++ b/publish-subscribe/src/main/java/com/iluwatar/publish/subscribe/App.java, +    context.getRoutes().stream().forEach(r -> System.out.println(r));, +++ b/reactor/src/main/java/com/iluwatar/reactor/app/LoggingHandler.java, +      doLogging((ByteBuffer) readObject);, +++ b/repository/src/main/java/com/iluwatar/repository/Person.java, +    result = prime * result + (id == null ? 0 : id.hashCode());, +    result = prime * result + (name == null ? 0 : name.hashCode());, +    result = prime * result + (surname == null ? 0 : surname.hashCode());, +++ b/flux/src/main/java/com/iluwatar/flux/dispatcher/Dispatcher.java, +    stores.stream().forEach(store -> store.onAction(action));]