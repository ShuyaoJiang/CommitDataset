[+++ b/eip-splitter/pom.xml, +++ b/eip-splitter/pom.xml, +++ b/eip-splitter/src/main/java/com/iluwatar/eip/splitter/App.java, + * It is very common in integration systems that incoming messages consists of many items bundled together. For example, + * an invoice document contains multiple invoice lines describing transaction (quantity, name of provided, + * service/sold goods, price etc.). Such bundled messages may not be accepted by other systems. This is where splitter, + * pattern comes in handy. It will take the whole document, split it based on given criteria and send individual, + * items to the endpoint., + * Splitter allows you to split messages based on defined criteria. It takes original message, process it and send, + * multiple parts to the output channel. It is not defined if it should keep the order of items though., + *, +++ b/eip-splitter/pom.xml, +++ b/eip-splitter/src/main/java/com/iluwatar/eip/splitter/App.java, + * It is very common in integration systems that incoming messages consists of many items bundled together. For example, + * an invoice document contains multiple invoice lines describing transaction (quantity, name of provided, + * service/sold goods, price etc.). Such bundled messages may not be accepted by other systems. This is where splitter, + * pattern comes in handy. It will take the whole document, split it based on given criteria and send individual, + * items to the endpoint., + * Splitter allows you to split messages based on defined criteria. It takes original message, process it and send, + * multiple parts to the output channel. It is not defined if it should keep the order of items though., + *, +++ b/eip-splitter/src/main/java/com/iluwatar/eip/splitter/routes/SplitterRoute.java, + * It consumes messages out of the <i>direct:entry</i> entry point and forwards them to <i>direct:endpoint</i>., + * Route accepts messages having body of array or collection of objects. Splitter component split message body and, + * forwards single objects to the endpoint.]