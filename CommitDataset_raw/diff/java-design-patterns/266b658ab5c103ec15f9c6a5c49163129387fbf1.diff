[+++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/database/LotteryTicketRepositoryMock.java, +import com.iluwatar.hexagonal.domain.LotteryTicketId;, +  private Map<LotteryTicketId, LotteryTicket> tickets = new HashMap<>();, +  public Optional<LotteryTicket> findById(LotteryTicketId id) {, +    LotteryTicket ticket = tickets.get(id);, +  public Optional<LotteryTicketId> save(LotteryTicket ticket) {, +    LotteryTicketId id = new LotteryTicketId();, +    tickets.put(id, ticket);, +    return Optional.of(id);, +  public Map<LotteryTicketId, LotteryTicket> findAll() {, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/database/LotteryTicketRepositoryMock.java, +import com.iluwatar.hexagonal.domain.LotteryTicketId;, +  private Map<LotteryTicketId, LotteryTicket> tickets = new HashMap<>();, +  public Optional<LotteryTicket> findById(LotteryTicketId id) {, +    LotteryTicket ticket = tickets.get(id);, +  public Optional<LotteryTicketId> save(LotteryTicket ticket) {, +    LotteryTicketId id = new LotteryTicketId();, +    tickets.put(id, ticket);, +    return Optional.of(id);, +  public Map<LotteryTicketId, LotteryTicket> findAll() {, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryAdministration.java, +  LotteryNumbers performLottery();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/database/LotteryTicketRepositoryMock.java, +import com.iluwatar.hexagonal.domain.LotteryTicketId;, +  private Map<LotteryTicketId, LotteryTicket> tickets = new HashMap<>();, +  public Optional<LotteryTicket> findById(LotteryTicketId id) {, +    LotteryTicket ticket = tickets.get(id);, +  public Optional<LotteryTicketId> save(LotteryTicket ticket) {, +    LotteryTicketId id = new LotteryTicketId();, +    tickets.put(id, ticket);, +    return Optional.of(id);, +  public Map<LotteryTicketId, LotteryTicket> findAll() {, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryAdministration.java, +  LotteryNumbers performLottery();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryService.java, +  LotteryTicketCheckResult checkTicketForPrize(LotteryTicketId id, LotteryNumbers winningNumbers);, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/database/LotteryTicketRepositoryMock.java, +import com.iluwatar.hexagonal.domain.LotteryTicketId;, +  private Map<LotteryTicketId, LotteryTicket> tickets = new HashMap<>();, +  public Optional<LotteryTicket> findById(LotteryTicketId id) {, +    LotteryTicket ticket = tickets.get(id);, +  public Optional<LotteryTicketId> save(LotteryTicket ticket) {, +    LotteryTicketId id = new LotteryTicketId();, +    tickets.put(id, ticket);, +    return Optional.of(id);, +  public Map<LotteryTicketId, LotteryTicket> findAll() {, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryAdministration.java, +  LotteryNumbers performLottery();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryService.java, +  LotteryTicketCheckResult checkTicketForPrize(LotteryTicketId id, LotteryNumbers winningNumbers);, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryServiceImpl.java, +/**, + * The MIT License, + * Copyright (c) 2014 Ilkka Seppälä, + *, + * Permission is hereby granted, free of charge, to any person obtaining a copy, + * of this software and associated documentation files (the "Software"), to deal, + * in the Software without restriction, including without limitation the rights, + * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell, + * copies of the Software, and to permit persons to whom the Software is, + * furnished to do so, subject to the following conditions:, + *, + * The above copyright notice and this permission notice shall be included in, + * all copies or substantial portions of the Software., + *, + * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR, + * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,, + * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE, + * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER, + * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,, + * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN, + * THE SOFTWARE., + */, +package com.iluwatar.hexagonal.domain;, +, +import java.util.Optional;, +, +import com.iluwatar.hexagonal.database.LotteryTicketRepositoryMock;, +import com.iluwatar.hexagonal.domain.LotteryTicketCheckResult.CheckResult;, +import com.iluwatar.hexagonal.domain.LotteryTicketSubmitResult.Result;, +, +public class LotteryServiceImpl implements LotteryService {, +, +  private final LotteryTicketRepository repository;, +  , +  public LotteryServiceImpl() {, +    repository = new LotteryTicketRepositoryMock();, +  }, +  , +  @Override, +  public LotteryTicketSubmitResult submitTicket(LotteryTicket ticket) {, +    Optional<LotteryTicketId> optional = repository.save(ticket);, +    Result result = Result.OK;, +    if (!optional.isPresent()) {, +      result = Result.ERROR;, +    }, +    return new LotteryTicketSubmitResult(result);, +  }, +, +  @Override]