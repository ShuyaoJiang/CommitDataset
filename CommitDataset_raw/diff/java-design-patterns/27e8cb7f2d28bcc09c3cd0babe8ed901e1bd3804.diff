[+++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/banking/MongoBank.java, +import com.iluwatar.hexagonal.mongo.MongoConnectionProperties;, +  public MongoBank(String dbName, String accountsCollectionName) {, +    connect(dbName, accountsCollectionName);, +    connect(DEFAULT_DB, DEFAULT_ACCOUNTS_COLLECTION);, +  public void connect(String dbName, String accountsCollectionName) {, +    MongoConnectionProperties properties = new MongoConnectionProperties().load();, +    mongoClient = new MongoClient(properties.getHost(), properties.getPort());, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/banking/MongoBank.java, +import com.iluwatar.hexagonal.mongo.MongoConnectionProperties;, +  public MongoBank(String dbName, String accountsCollectionName) {, +    connect(dbName, accountsCollectionName);, +    connect(DEFAULT_DB, DEFAULT_ACCOUNTS_COLLECTION);, +  public void connect(String dbName, String accountsCollectionName) {, +    MongoConnectionProperties properties = new MongoConnectionProperties().load();, +    mongoClient = new MongoClient(properties.getHost(), properties.getPort());, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/database/MongoTicketRepository.java, +import com.iluwatar.hexagonal.mongo.MongoConnectionProperties;, +  public MongoTicketRepository(String dbName, String ticketsCollectionName,, +    connect(dbName, ticketsCollectionName, countersCollectionName);, +    connect(DEFAULT_DB, DEFAULT_TICKETS_COLLECTION, DEFAULT_COUNTERS_COLLECTION);, +  public void connect(String dbName, String ticketsCollectionName,, +    MongoConnectionProperties properties = new MongoConnectionProperties().load();, +    mongoClient = new MongoClient(properties.getHost(), properties.getPort());, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/banking/MongoBank.java, +import com.iluwatar.hexagonal.mongo.MongoConnectionProperties;, +  public MongoBank(String dbName, String accountsCollectionName) {, +    connect(dbName, accountsCollectionName);, +    connect(DEFAULT_DB, DEFAULT_ACCOUNTS_COLLECTION);, +  public void connect(String dbName, String accountsCollectionName) {, +    MongoConnectionProperties properties = new MongoConnectionProperties().load();, +    mongoClient = new MongoClient(properties.getHost(), properties.getPort());, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/database/MongoTicketRepository.java, +import com.iluwatar.hexagonal.mongo.MongoConnectionProperties;, +  public MongoTicketRepository(String dbName, String ticketsCollectionName,, +    connect(dbName, ticketsCollectionName, countersCollectionName);, +    connect(DEFAULT_DB, DEFAULT_TICKETS_COLLECTION, DEFAULT_COUNTERS_COLLECTION);, +  public void connect(String dbName, String ticketsCollectionName,, +    MongoConnectionProperties properties = new MongoConnectionProperties().load();, +    mongoClient = new MongoClient(properties.getHost(), properties.getPort());, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/mongo/MongoConnectionProperties.java, +/**, + * The MIT License, + * Copyright (c) 2014 Ilkka Seppälä, + *, + * Permission is hereby granted, free of charge, to any person obtaining a copy, + * of this software and associated documentation files (the "Software"), to deal, + * in the Software without restriction, including without limitation the rights, + * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell, + * copies of the Software, and to permit persons to whom the Software is, + * furnished to do so, subject to the following conditions:, + *, + * The above copyright notice and this permission notice shall be included in, + * all copies or substantial portions of the Software., + *, + * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR, + * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,, + * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE, + * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER, + * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,, + * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN, + * THE SOFTWARE., + */, +package com.iluwatar.hexagonal.mongo;, +, +import java.io.FileInputStream;, +import java.util.Properties;, +, +/**, + * Mongo connection properties, + */, +public class MongoConnectionProperties {, +, +  private static final String DEFAULT_HOST = "localhost";, +  private static final int DEFAULT_PORT = 27017;, +, +  private String host;, +  private int port;, +, +  /**, +   * Constructor, +   */, +  public MongoConnectionProperties() {, +    this.host = DEFAULT_HOST;, +    this.port = DEFAULT_PORT;, +  }, +, +  /**, +   * @return host name, +   */, +  public String getHost() {, +    return host;, +  }, +, +  /**, +   * @return port number, +   */, +  public int getPort() {, +    return port;, +  }]