[+++ b/thread-pool/pom.xml, +    <dependency>, +      <groupId>org.mockito</groupId>, +      <artifactId>mockito-core</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/thread-pool/pom.xml, +    <dependency>, +      <groupId>org.mockito</groupId>, +      <artifactId>mockito-core</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/thread-pool/src/main/java/com/iluwatar/threadpool/CoffeeMakingTask.java, +  private static final int TIME_PER_CUP = 100;, +++ b/thread-pool/pom.xml, +    <dependency>, +      <groupId>org.mockito</groupId>, +      <artifactId>mockito-core</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/thread-pool/src/main/java/com/iluwatar/threadpool/CoffeeMakingTask.java, +  private static final int TIME_PER_CUP = 100;, +++ b/thread-pool/src/main/java/com/iluwatar/threadpool/PotatoPeelingTask.java, +  private static final int TIME_PER_POTATO = 200;, +++ b/thread-pool/pom.xml, +    <dependency>, +      <groupId>org.mockito</groupId>, +      <artifactId>mockito-core</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/thread-pool/src/main/java/com/iluwatar/threadpool/CoffeeMakingTask.java, +  private static final int TIME_PER_CUP = 100;, +++ b/thread-pool/src/main/java/com/iluwatar/threadpool/PotatoPeelingTask.java, +  private static final int TIME_PER_POTATO = 200;, +++ b/thread-pool/src/main/java/com/iluwatar/threadpool/Task.java, +import java.util.concurrent.atomic.AtomicInteger;, +, +  private static final AtomicInteger ID_GENERATOR = new AtomicInteger();, +    this.id = ID_GENERATOR.incrementAndGet();, +++ b/thread-pool/pom.xml, +    <dependency>, +      <groupId>org.mockito</groupId>, +      <artifactId>mockito-core</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/thread-pool/src/main/java/com/iluwatar/threadpool/CoffeeMakingTask.java, +  private static final int TIME_PER_CUP = 100;, +++ b/thread-pool/src/main/java/com/iluwatar/threadpool/PotatoPeelingTask.java, +  private static final int TIME_PER_POTATO = 200;, +++ b/thread-pool/src/main/java/com/iluwatar/threadpool/Task.java, +import java.util.concurrent.atomic.AtomicInteger;, +, +  private static final AtomicInteger ID_GENERATOR = new AtomicInteger();, +    this.id = ID_GENERATOR.incrementAndGet();, +++ b/thread-pool/src/test/java/com/iluwatar/threadpool/CoffeeMakingTaskTest.java, +package com.iluwatar.threadpool;, +, +/**, + * Date: 12/30/15 - 18:23 PM, + *, + * @author Jeroen Meulemeester, + */, +public class CoffeeMakingTaskTest extends TaskTest<CoffeeMakingTask> {, +, +  /**, +   * Create a new test instance, +   */, +  public CoffeeMakingTaskTest() {, +    super(CoffeeMakingTask::new, 100);, +  }, +, +}, +++ b/thread-pool/pom.xml, +    <dependency>, +      <groupId>org.mockito</groupId>, +      <artifactId>mockito-core</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/thread-pool/src/main/java/com/iluwatar/threadpool/CoffeeMakingTask.java, +  private static final int TIME_PER_CUP = 100;, +++ b/thread-pool/src/main/java/com/iluwatar/threadpool/PotatoPeelingTask.java, +  private static final int TIME_PER_POTATO = 200;, +++ b/thread-pool/src/main/java/com/iluwatar/threadpool/Task.java, +import java.util.concurrent.atomic.AtomicInteger;, +, +  private static final AtomicInteger ID_GENERATOR = new AtomicInteger();, +    this.id = ID_GENERATOR.incrementAndGet();, +++ b/thread-pool/src/test/java/com/iluwatar/threadpool/CoffeeMakingTaskTest.java, +package com.iluwatar.threadpool;, +, +/**, + * Date: 12/30/15 - 18:23 PM, + *, + * @author Jeroen Meulemeester, + */, +public class CoffeeMakingTaskTest extends TaskTest<CoffeeMakingTask> {, +, +  /**, +   * Create a new test instance, +   */]