[+++ b/factory-kit/src/main/java/com/iluwatar/factorykit/App.java, +  /**, +   * Program entry point., +   *, +   * @param args @param args command line args, +   */, +++ b/factory-kit/src/main/java/com/iluwatar/factorykit/App.java, +  /**, +   * Program entry point., +   *, +   * @param args @param args command line args, +   */, +++ b/factory-kit/src/main/java/com/iluwatar/factorykit/Weapon.java, + * Interface representing weapon., +++ b/factory-kit/src/main/java/com/iluwatar/factorykit/App.java, +  /**, +   * Program entry point., +   *, +   * @param args @param args command line args, +   */, +++ b/factory-kit/src/main/java/com/iluwatar/factorykit/Weapon.java, + * Interface representing weapon., +++ b/factory-kit/src/main/java/com/iluwatar/factorykit/WeaponFactory.java, + * Functional interface, an example of the factory-kit design pattern., + * <br>Instance created locally gives an opportunity to strictly define, + * which objects types the instance of a factory will be able to create., + * <br>Factory is a placeholder for {@link Builder}s, + * with {@link WeaponFactory#create(WeaponType)} method to initialize new objects., +  /**, +   * Creates an instance of the given type., +   * @param name representing enum of an object type to be created., +   * @return new instance of a requested class implementing {@link Weapon} interface., +   */, +  /**, +   * Creates factory - placeholder for specified {@link Builder}s., +   * @param consumer for the new builder to the factory., +   * @return factory with specified {@link Builder}s, +   */, +++ b/factory-kit/src/main/java/com/iluwatar/factorykit/App.java, +  /**, +   * Program entry point., +   *, +   * @param args @param args command line args, +   */, +++ b/factory-kit/src/main/java/com/iluwatar/factorykit/Weapon.java, + * Interface representing weapon., +++ b/factory-kit/src/main/java/com/iluwatar/factorykit/WeaponFactory.java, + * Functional interface, an example of the factory-kit design pattern., + * <br>Instance created locally gives an opportunity to strictly define, + * which objects types the instance of a factory will be able to create., + * <br>Factory is a placeholder for {@link Builder}s, + * with {@link WeaponFactory#create(WeaponType)} method to initialize new objects., +  /**, +   * Creates an instance of the given type., +   * @param name representing enum of an object type to be created., +   * @return new instance of a requested class implementing {@link Weapon} interface., +   */, +  /**, +   * Creates factory - placeholder for specified {@link Builder}s., +   * @param consumer for the new builder to the factory., +   * @return factory with specified {@link Builder}s, +   */, +++ b/factory-kit/src/main/java/com/iluwatar/factorykit/WeaponType.java, +/**, + * Enumerates {@link Weapon} types, + */]