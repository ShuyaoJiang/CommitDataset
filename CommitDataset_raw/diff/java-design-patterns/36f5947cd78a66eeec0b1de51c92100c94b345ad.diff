[+++ b/interpreter/src/test/java/com/iluwatar/interpreter/ExpressionTest.java, +import org.junit.jupiter.api.TestInstance;, +@TestInstance(TestInstance.Lifecycle.PER_CLASS), +   * Create a new set of test entries with the expected result, +   *, +   * @return The list of parameters used during this test, +   */, +  public abstract Stream<Arguments> expressionProvider();, +, +  /**, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/ExpressionTest.java, +import org.junit.jupiter.api.TestInstance;, +@TestInstance(TestInstance.Lifecycle.PER_CLASS), +   * Create a new set of test entries with the expected result, +   *, +   * @return The list of parameters used during this test, +   */, +  public abstract Stream<Arguments> expressionProvider();, +, +  /**, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/MinusExpressionTest.java, +  @Override, +  public Stream<Arguments> expressionProvider() {, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/ExpressionTest.java, +import org.junit.jupiter.api.TestInstance;, +@TestInstance(TestInstance.Lifecycle.PER_CLASS), +   * Create a new set of test entries with the expected result, +   *, +   * @return The list of parameters used during this test, +   */, +  public abstract Stream<Arguments> expressionProvider();, +, +  /**, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/MinusExpressionTest.java, +  @Override, +  public Stream<Arguments> expressionProvider() {, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/MultiplyExpressionTest.java, +  @Override, +  public Stream<Arguments> expressionProvider() {, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/ExpressionTest.java, +import org.junit.jupiter.api.TestInstance;, +@TestInstance(TestInstance.Lifecycle.PER_CLASS), +   * Create a new set of test entries with the expected result, +   *, +   * @return The list of parameters used during this test, +   */, +  public abstract Stream<Arguments> expressionProvider();, +, +  /**, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/MinusExpressionTest.java, +  @Override, +  public Stream<Arguments> expressionProvider() {, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/MultiplyExpressionTest.java, +  @Override, +  public Stream<Arguments> expressionProvider() {, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/NumberExpressionTest.java, +  @Override, +  public Stream<Arguments> expressionProvider() {, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/ExpressionTest.java, +import org.junit.jupiter.api.TestInstance;, +@TestInstance(TestInstance.Lifecycle.PER_CLASS), +   * Create a new set of test entries with the expected result, +   *, +   * @return The list of parameters used during this test, +   */, +  public abstract Stream<Arguments> expressionProvider();, +, +  /**, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/MinusExpressionTest.java, +  @Override, +  public Stream<Arguments> expressionProvider() {, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/MultiplyExpressionTest.java, +  @Override, +  public Stream<Arguments> expressionProvider() {, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/NumberExpressionTest.java, +  @Override, +  public Stream<Arguments> expressionProvider() {, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/PlusExpressionTest.java, +  @Override, +  public Stream<Arguments> expressionProvider() {, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/ExpressionTest.java, +import org.junit.jupiter.api.TestInstance;, +@TestInstance(TestInstance.Lifecycle.PER_CLASS), +   * Create a new set of test entries with the expected result, +   *, +   * @return The list of parameters used during this test, +   */, +  public abstract Stream<Arguments> expressionProvider();, +, +  /**, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/MinusExpressionTest.java, +  @Override, +  public Stream<Arguments> expressionProvider() {, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/MultiplyExpressionTest.java, +  @Override, +  public Stream<Arguments> expressionProvider() {, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/NumberExpressionTest.java, +  @Override, +  public Stream<Arguments> expressionProvider() {, +++ b/interpreter/src/test/java/com/iluwatar/interpreter/PlusExpressionTest.java]