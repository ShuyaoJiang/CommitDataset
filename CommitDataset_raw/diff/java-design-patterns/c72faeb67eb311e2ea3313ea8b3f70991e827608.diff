[+++ b/resource-acquisition-is-initialization/pom.xml, +    <dependency>, +      <groupId>org.mockito</groupId>, +      <artifactId>mockito-core</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/resource-acquisition-is-initialization/pom.xml, +    <dependency>, +      <groupId>org.mockito</groupId>, +      <artifactId>mockito-core</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/resource-acquisition-is-initialization/src/test/java/com/iluwatar/resource/acquisition/is/initialization/ClosableTest.java, +package com.iluwatar.resource.acquisition.is.initialization;, +, +import org.junit.Test;, +import org.mockito.InOrder;, +, +import static org.mockito.Mockito.inOrder;, +, +/**, + * Date: 12/28/15 - 9:31 PM, + *, + * @author Jeroen Meulemeester, + */, +public class ClosableTest extends StdOutTest {, +, +  @Test, +  public void testOpenClose() throws Exception {, +    final InOrder inOrder = inOrder(getStdOutMock());, +    try (final SlidingDoor door = new SlidingDoor(); final TreasureChest chest = new TreasureChest()) {, +      inOrder.verify(getStdOutMock()).println("Sliding door opens.");, +      inOrder.verify(getStdOutMock()).println("Treasure chest opens.");, +    }, +    inOrder.verify(getStdOutMock()).println("Treasure chest closes.");, +    inOrder.verify(getStdOutMock()).println("Sliding door closes.");, +    inOrder.verifyNoMoreInteractions();, +  }, +, +}, +++ b/resource-acquisition-is-initialization/pom.xml, +    <dependency>, +      <groupId>org.mockito</groupId>, +      <artifactId>mockito-core</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/resource-acquisition-is-initialization/src/test/java/com/iluwatar/resource/acquisition/is/initialization/ClosableTest.java, +package com.iluwatar.resource.acquisition.is.initialization;, +, +import org.junit.Test;, +import org.mockito.InOrder;, +, +import static org.mockito.Mockito.inOrder;, +, +/**, + * Date: 12/28/15 - 9:31 PM, + *, + * @author Jeroen Meulemeester, + */, +public class ClosableTest extends StdOutTest {, +, +  @Test, +  public void testOpenClose() throws Exception {, +    final InOrder inOrder = inOrder(getStdOutMock());, +    try (final SlidingDoor door = new SlidingDoor(); final TreasureChest chest = new TreasureChest()) {, +      inOrder.verify(getStdOutMock()).println("Sliding door opens.");, +      inOrder.verify(getStdOutMock()).println("Treasure chest opens.");, +    }, +    inOrder.verify(getStdOutMock()).println("Treasure chest closes.");, +    inOrder.verify(getStdOutMock()).println("Sliding door closes.");, +    inOrder.verifyNoMoreInteractions();, +  }, +, +}, +++ b/resource-acquisition-is-initialization/src/test/java/com/iluwatar/resource/acquisition/is/initialization/StdOutTest.java, +package com.iluwatar.resource.acquisition.is.initialization;, +, +import org.junit.After;, +import org.junit.Before;, +, +import java.io.PrintStream;, +, +import static org.mockito.Mockito.mock;, +, +/**, + * Date: 12/10/15 - 8:37 PM, + *, + * @author Jeroen Meulemeester, + */, +public abstract class StdOutTest {, +, +  /**, +   * The mocked standard out {@link PrintStream}, required since some actions don't have any, +   * influence on accessible objects, except for writing to std-out using {@link System#out}, +   */, +  private final PrintStream stdOutMock = mock(PrintStream.class);, +, +  /**, +   * Keep the original std-out so it can be restored after the test, +   */]