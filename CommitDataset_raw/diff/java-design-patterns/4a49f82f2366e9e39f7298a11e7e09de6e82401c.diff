[+++ b/feature-toggle/src/main/java/com/iluwatar/featuretoggle/pattern/Service.java, +  boolean isEnhanced();, +, +++ b/feature-toggle/src/main/java/com/iluwatar/featuretoggle/pattern/Service.java, +  boolean isEnhanced();, +, +++ b/feature-toggle/src/main/java/com/iluwatar/featuretoggle/pattern/propertiesversion/PropertiesFeatureToggleVersion.java, +  private boolean isEnhanced;, +  /**, +   *, +   * @param properties {@link Properties} used to configure the service and toggle features., +   */, +    if (properties == null) {, +      throw new IllegalArgumentException("No Properties Provided.");, +    } else {, +      try {, +        isEnhanced = (boolean) properties.get("enhancedWelcome");, +      } catch (Exception e) {, +        throw new IllegalArgumentException("Invalid Enhancement Settings Provided.");, +      }, +    }, +    if (isEnhanced()) {, +, +  @Override, +  public boolean isEnhanced() {, +    return isEnhanced;, +  }, +++ b/feature-toggle/src/main/java/com/iluwatar/featuretoggle/pattern/Service.java, +  boolean isEnhanced();, +, +++ b/feature-toggle/src/main/java/com/iluwatar/featuretoggle/pattern/propertiesversion/PropertiesFeatureToggleVersion.java, +  private boolean isEnhanced;, +  /**, +   *, +   * @param properties {@link Properties} used to configure the service and toggle features., +   */, +    if (properties == null) {, +      throw new IllegalArgumentException("No Properties Provided.");, +    } else {, +      try {, +        isEnhanced = (boolean) properties.get("enhancedWelcome");, +      } catch (Exception e) {, +        throw new IllegalArgumentException("Invalid Enhancement Settings Provided.");, +      }, +    }, +    if (isEnhanced()) {, +, +  @Override, +  public boolean isEnhanced() {, +    return isEnhanced;, +  }, +++ b/feature-toggle/src/main/java/com/iluwatar/featuretoggle/pattern/tieredversion/TieredFeatureToggleVersion.java, +  @Override, +  public boolean isEnhanced() {, +    return true;, +  }, +, +++ b/feature-toggle/src/main/java/com/iluwatar/featuretoggle/pattern/Service.java, +  boolean isEnhanced();, +, +++ b/feature-toggle/src/main/java/com/iluwatar/featuretoggle/pattern/propertiesversion/PropertiesFeatureToggleVersion.java, +  private boolean isEnhanced;, +  /**, +   *, +   * @param properties {@link Properties} used to configure the service and toggle features., +   */, +    if (properties == null) {, +      throw new IllegalArgumentException("No Properties Provided.");, +    } else {, +      try {, +        isEnhanced = (boolean) properties.get("enhancedWelcome");, +      } catch (Exception e) {, +        throw new IllegalArgumentException("Invalid Enhancement Settings Provided.");, +      }, +    }, +    if (isEnhanced()) {, +, +  @Override, +  public boolean isEnhanced() {, +    return isEnhanced;, +  }, +++ b/feature-toggle/src/main/java/com/iluwatar/featuretoggle/pattern/tieredversion/TieredFeatureToggleVersion.java, +  @Override, +  public boolean isEnhanced() {, +    return true;, +  }, +, +++ b/feature-toggle/src/test/java/com/iluwatar/featuretoggle/pattern/propertiesversion/PropertiesFeatureToggleVersionTest.java, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertTrue;, +    assertTrue(service.isEnhanced());, +    assertFalse(service.isEnhanced());, +++ b/feature-toggle/src/main/java/com/iluwatar/featuretoggle/pattern/Service.java, +  boolean isEnhanced();, +, +++ b/feature-toggle/src/main/java/com/iluwatar/featuretoggle/pattern/propertiesversion/PropertiesFeatureToggleVersion.java, +  private boolean isEnhanced;, +  /**, +   *, +   * @param properties {@link Properties} used to configure the service and toggle features.]