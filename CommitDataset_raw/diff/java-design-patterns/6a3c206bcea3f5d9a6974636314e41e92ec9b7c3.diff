[+++ b/README.md, +**Intent:** Provide an interface for creating families of related or dependent objects without specifying their concrete classes., +**Intent:** Separate the construction of a complex object from its representation so that the same construction process can create different representations., +**Intent:** Define an interface for creating an object, but let subclasses decide which class to instantiate. Factory Method lets a class defer instantiation to subclasses., +**Intent:** Specify the kinds of objects to create using a prototypical instance, and create new objects by copying this prototype., +**Intent:** Ensure a class only has one instance, and provide a global point of access to it., +**Intent:** Convert the interface of a class into another interface clients expect. Adapter lets classes work together that couldn't otherwise because of incompatible interfaces., +**Intent:** Decouple an abstraction from its implementationso that the two can vary independently.]