[+++ b/dao/src/main/java/com/iluwatar/dao/App.java, +      statement.execute(CustomerSchemaSql.DELETE_SCHEMA_SQL);, +      statement.execute(CustomerSchemaSql.CREATE_SCHEMA_SQL);, +++ b/dao/src/main/java/com/iluwatar/dao/App.java, +      statement.execute(CustomerSchemaSql.DELETE_SCHEMA_SQL);, +      statement.execute(CustomerSchemaSql.CREATE_SCHEMA_SQL);, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerDao.java, +import java.util.Optional;, +   * @return an optional with customer if a customer with unique identifier <code>id</code>, +   *     exists, empty optional otherwise., +  Optional<Customer> getById(int id) throws Exception;, +++ b/dao/src/main/java/com/iluwatar/dao/App.java, +      statement.execute(CustomerSchemaSql.DELETE_SCHEMA_SQL);, +      statement.execute(CustomerSchemaSql.CREATE_SCHEMA_SQL);, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerDao.java, +import java.util.Optional;, +   * @return an optional with customer if a customer with unique identifier <code>id</code>, +   *     exists, empty optional otherwise., +  Optional<Customer> getById(int id) throws Exception;, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerSchemaSql.java, +package com.iluwatar.dao;, +, +public interface CustomerSchemaSql {, +, +  String CREATE_SCHEMA_SQL = "CREATE TABLE CUSTOMERS (ID NUMBER, FNAME VARCHAR(100), " , +      + "LNAME VARCHAR(100))";, +  , +  String DELETE_SCHEMA_SQL = "DROP TABLE CUSTOMERS";, +}, +++ b/dao/src/main/java/com/iluwatar/dao/App.java, +      statement.execute(CustomerSchemaSql.DELETE_SCHEMA_SQL);, +      statement.execute(CustomerSchemaSql.CREATE_SCHEMA_SQL);, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerDao.java, +import java.util.Optional;, +   * @return an optional with customer if a customer with unique identifier <code>id</code>, +   *     exists, empty optional otherwise., +  Optional<Customer> getById(int id) throws Exception;, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerSchemaSql.java, +package com.iluwatar.dao;, +, +public interface CustomerSchemaSql {, +, +  String CREATE_SCHEMA_SQL = "CREATE TABLE CUSTOMERS (ID NUMBER, FNAME VARCHAR(100), " , +      + "LNAME VARCHAR(100))";, +  , +  String DELETE_SCHEMA_SQL = "DROP TABLE CUSTOMERS";, +}, +++ b/dao/src/main/java/com/iluwatar/dao/DbCustomerDao.java, +import java.util.Optional;, +  public Optional<Customer> getById(int id) throws Exception {, +        return Optional.of(createCustomer(resultSet));, +        return Optional.empty();, +    if (getById(customer.getId()).isPresent()) {, +++ b/dao/src/main/java/com/iluwatar/dao/App.java, +      statement.execute(CustomerSchemaSql.DELETE_SCHEMA_SQL);, +      statement.execute(CustomerSchemaSql.CREATE_SCHEMA_SQL);, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerDao.java, +import java.util.Optional;, +   * @return an optional with customer if a customer with unique identifier <code>id</code>, +   *     exists, empty optional otherwise., +  Optional<Customer> getById(int id) throws Exception;, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerSchemaSql.java, +package com.iluwatar.dao;, +, +public interface CustomerSchemaSql {, +, +  String CREATE_SCHEMA_SQL = "CREATE TABLE CUSTOMERS (ID NUMBER, FNAME VARCHAR(100), " , +      + "LNAME VARCHAR(100))";, +  , +  String DELETE_SCHEMA_SQL = "DROP TABLE CUSTOMERS";, +}, +++ b/dao/src/main/java/com/iluwatar/dao/DbCustomerDao.java, +import java.util.Optional;, +  public Optional<Customer> getById(int id) throws Exception {, +        return Optional.of(createCustomer(resultSet));, +        return Optional.empty();, +    if (getById(customer.getId()).isPresent()) {, +++ b/dao/src/main/java/com/iluwatar/dao/InMemoryCustomerDao.java, +import java.util.Optional;, +  public Optional<Customer> getById(final int id) {, +    return Optional.ofNullable(idToCustomer.get(id));, +    if (getById(customer.getId()).isPresent()) {, +++ b/dao/src/main/java/com/iluwatar/dao/App.java, +      statement.execute(CustomerSchemaSql.DELETE_SCHEMA_SQL);, +      statement.execute(CustomerSchemaSql.CREATE_SCHEMA_SQL);, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerDao.java, +import java.util.Optional;, +   * @return an optional with customer if a customer with unique identifier <code>id</code>, +   *     exists, empty optional otherwise., +  Optional<Customer> getById(int id) throws Exception;, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerSchemaSql.java, +package com.iluwatar.dao;, +, +public interface CustomerSchemaSql {, +, +  String CREATE_SCHEMA_SQL = "CREATE TABLE CUSTOMERS (ID NUMBER, FNAME VARCHAR(100), " , +      + "LNAME VARCHAR(100))";, +  , +  String DELETE_SCHEMA_SQL = "DROP TABLE CUSTOMERS";, +}]