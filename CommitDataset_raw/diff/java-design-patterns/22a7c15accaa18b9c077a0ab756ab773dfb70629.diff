[+++ b/abstract-factory/README.md, +++ b/abstract-factory/README.md, +++ b/data-bus/src/main/java/com/iluwatar/databus/AbstractDataType.java, +++ b/abstract-factory/README.md, +++ b/data-bus/src/main/java/com/iluwatar/databus/AbstractDataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/DataType.java, +++ b/abstract-factory/README.md, +++ b/data-bus/src/main/java/com/iluwatar/databus/AbstractDataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/DataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/Member.java, +++ b/abstract-factory/README.md, +++ b/data-bus/src/main/java/com/iluwatar/databus/AbstractDataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/DataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/Member.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/DataBusTest.java, +++ b/abstract-factory/README.md, +++ b/data-bus/src/main/java/com/iluwatar/databus/AbstractDataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/DataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/Member.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/DataBusTest.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/members/MessageCollectorMemberTest.java, +++ b/abstract-factory/README.md, +++ b/data-bus/src/main/java/com/iluwatar/databus/AbstractDataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/DataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/Member.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/DataBusTest.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/members/MessageCollectorMemberTest.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/members/StatusMemberTest.java, +++ b/abstract-factory/README.md, +++ b/data-bus/src/main/java/com/iluwatar/databus/AbstractDataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/DataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/Member.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/DataBusTest.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/members/MessageCollectorMemberTest.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/members/StatusMemberTest.java, +++ /dev/null, +++ b/abstract-factory/README.md, +++ b/data-bus/src/main/java/com/iluwatar/databus/AbstractDataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/DataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/Member.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/DataBusTest.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/members/MessageCollectorMemberTest.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/members/StatusMemberTest.java, +++ /dev/null, +++ b/dependency-injection/src/main/java/com/iluwatar/dependency/injection/App.java, + *, + *, + *, + * , + * The second wizard ({@link AdvancedWizard}) is more flexible. It does not depend on any concrete, + * implementation but abstraction. It utilizes Dependency Injection pattern allowing its, + * {@link Tobacco} dependency to be injected through its constructor. This way, handling the, + * dependency is no longer the wizard's responsibility. It is resolved outside the wizard class., + * The third example takes the pattern a step further. It uses Guice framework for Dependency, + *, +++ b/abstract-factory/README.md, +++ b/data-bus/src/main/java/com/iluwatar/databus/AbstractDataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/DataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/Member.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/DataBusTest.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/members/MessageCollectorMemberTest.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/members/StatusMemberTest.java, +++ /dev/null, +++ b/dependency-injection/src/main/java/com/iluwatar/dependency/injection/App.java, + *, + *, + *, + * , + * The second wizard ({@link AdvancedWizard}) is more flexible. It does not depend on any concrete, + * implementation but abstraction. It utilizes Dependency Injection pattern allowing its, + * {@link Tobacco} dependency to be injected through its constructor. This way, handling the, + * dependency is no longer the wizard's responsibility. It is resolved outside the wizard class., + * The third example takes the pattern a step further. It uses Guice framework for Dependency, + *, +++ /dev/null, +++ b/abstract-factory/README.md, +++ b/data-bus/src/main/java/com/iluwatar/databus/AbstractDataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/DataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/Member.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/DataBusTest.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/members/MessageCollectorMemberTest.java, +++ b/data-bus/src/test/java/com/iluwatar/databus/members/StatusMemberTest.java, +++ /dev/null, +++ b/dependency-injection/src/main/java/com/iluwatar/dependency/injection/App.java, + *, + *, + *, + * , + * The second wizard ({@link AdvancedWizard}) is more flexible. It does not depend on any concrete, + * implementation but abstraction. It utilizes Dependency Injection pattern allowing its, + * {@link Tobacco} dependency to be injected through its constructor. This way, handling the, + * dependency is no longer the wizard's responsibility. It is resolved outside the wizard class., + * The third example takes the pattern a step further. It uses Guice framework for Dependency, + *, +++ /dev/null, +++ b/event-driven-architecture/README.md, +* [Event-driven architecture - Wikipedia](http://www.computerweekly.com/feature/Write-through-write-around-write-back-Cache-explained), +++ b/abstract-factory/README.md, +++ b/data-bus/src/main/java/com/iluwatar/databus/AbstractDataType.java, +++ b/data-bus/src/main/java/com/iluwatar/databus/DataType.java]