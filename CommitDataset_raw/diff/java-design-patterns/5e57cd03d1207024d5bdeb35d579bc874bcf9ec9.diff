[+++ b/dao/src/main/java/com/iluwatar/dao/CustomerSchemaSql.java, +public interface CustomerSchemaSql {, +  String CREATE_SCHEMA_SQL = "CREATE TABLE CUSTOMERS (ID NUMBER, FNAME VARCHAR(100), " , +  String DELETE_SCHEMA_SQL = "DROP TABLE CUSTOMERS";, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerSchemaSql.java, +public interface CustomerSchemaSql {, +  String CREATE_SCHEMA_SQL = "CREATE TABLE CUSTOMERS (ID NUMBER, FNAME VARCHAR(100), " , +  String DELETE_SCHEMA_SQL = "DROP TABLE CUSTOMERS";, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/administration/ConsoleAdministration.java, +    try (Scanner scanner = new Scanner(System.in)) {, +        if ("1".equals(cmd)) {, +        } else if ("2".equals(cmd)) {, +        } else if ("3".equals(cmd)) {, +        } else if ("4".equals(cmd)) {, +  }, +    return scanner.next();, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerSchemaSql.java, +public interface CustomerSchemaSql {, +  String CREATE_SCHEMA_SQL = "CREATE TABLE CUSTOMERS (ID NUMBER, FNAME VARCHAR(100), " , +  String DELETE_SCHEMA_SQL = "DROP TABLE CUSTOMERS";, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/administration/ConsoleAdministration.java, +    try (Scanner scanner = new Scanner(System.in)) {, +        if ("1".equals(cmd)) {, +        } else if ("2".equals(cmd)) {, +        } else if ("3".equals(cmd)) {, +        } else if ("4".equals(cmd)) {, +  }, +    return scanner.next();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryService.java, +    if (!result) {, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerSchemaSql.java, +public interface CustomerSchemaSql {, +  String CREATE_SCHEMA_SQL = "CREATE TABLE CUSTOMERS (ID NUMBER, FNAME VARCHAR(100), " , +  String DELETE_SCHEMA_SQL = "DROP TABLE CUSTOMERS";, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/administration/ConsoleAdministration.java, +    try (Scanner scanner = new Scanner(System.in)) {, +        if ("1".equals(cmd)) {, +        } else if ("2".equals(cmd)) {, +        } else if ("3".equals(cmd)) {, +        } else if ("4".equals(cmd)) {, +  }, +    return scanner.next();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryService.java, +    if (!result) {, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryTicketCheckResult.java, +  public enum CheckResult { WIN_PRIZE, NO_PRIZE, TICKET_NOT_SUBMITTED }, +    return checkResult == other.checkResult && prizeAmount == other.prizeAmount;, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerSchemaSql.java, +public interface CustomerSchemaSql {, +  String CREATE_SCHEMA_SQL = "CREATE TABLE CUSTOMERS (ID NUMBER, FNAME VARCHAR(100), " , +  String DELETE_SCHEMA_SQL = "DROP TABLE CUSTOMERS";, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/administration/ConsoleAdministration.java, +    try (Scanner scanner = new Scanner(System.in)) {, +        if ("1".equals(cmd)) {, +        } else if ("2".equals(cmd)) {, +        } else if ("3".equals(cmd)) {, +        } else if ("4".equals(cmd)) {, +  }, +    return scanner.next();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryService.java, +    if (!result) {, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryTicketCheckResult.java, +  public enum CheckResult { WIN_PRIZE, NO_PRIZE, TICKET_NOT_SUBMITTED }, +    return checkResult == other.checkResult && prizeAmount == other.prizeAmount;, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/eventlog/MongoEventLog.java, +    document.put("message", "Lottery ticket was submitted and bank account was charged for 3 credits.");, +    document.put("message", "Lottery ticket could not be submitted because lack of funds.");, +    document.put("message", "Lottery ticket was checked and unfortunately did not win this time.");, +++ b/dao/src/main/java/com/iluwatar/dao/CustomerSchemaSql.java, +public interface CustomerSchemaSql {, +  String CREATE_SCHEMA_SQL = "CREATE TABLE CUSTOMERS (ID NUMBER, FNAME VARCHAR(100), " , +  String DELETE_SCHEMA_SQL = "DROP TABLE CUSTOMERS";, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/administration/ConsoleAdministration.java, +    try (Scanner scanner = new Scanner(System.in)) {, +        if ("1".equals(cmd)) {, +        } else if ("2".equals(cmd)) {, +        } else if ("3".equals(cmd)) {, +        } else if ("4".equals(cmd)) {, +  }, +    return scanner.next();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryService.java, +    if (!result) {, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryTicketCheckResult.java, +  public enum CheckResult { WIN_PRIZE, NO_PRIZE, TICKET_NOT_SUBMITTED }, +    return checkResult == other.checkResult && prizeAmount == other.prizeAmount;, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/eventlog/MongoEventLog.java, +    document.put("message", "Lottery ticket was submitted and bank account was charged for 3 credits.");, +    document.put("message", "Lottery ticket could not be submitted because lack of funds.");, +    document.put("message", "Lottery ticket was checked and unfortunately did not win this time.");, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/service/ConsoleLottery.java, +    try (final Scanner scanner = new Scanner(System.in)) {, +        if ("1".equals(cmd)) {, +          queryLotteryAccountFunds(bank, scanner);, +        } else if ("2".equals(cmd)) {, +          addFundsToLotteryAccount(bank, scanner);, +        } else if ("3".equals(cmd)) {, +          submitTicket(service, scanner);, +        } else if ("4".equals(cmd)) {, +          checkTicket(service, scanner);, +        } else if ("5".equals(cmd)) {]