[+++ b/front-controller/pom.xml, +		<dependency>, +			<groupId>org.mockito</groupId>, +			<artifactId>mockito-core</artifactId>, +			<scope>test</scope>, +		</dependency>, +++ b/front-controller/pom.xml, +		<dependency>, +			<groupId>org.mockito</groupId>, +			<artifactId>mockito-core</artifactId>, +			<scope>test</scope>, +		</dependency>, +++ b/front-controller/src/test/java/com/iluwatar/front/controller/ApplicationExceptionTest.java, +package com.iluwatar.front.controller;, +, +import org.junit.Test;, +, +import static org.junit.Assert.*;, +, +/**, + * Date: 12/13/15 - 1:35 PM, + *, + * @author Jeroen Meulemeester, + */, +public class ApplicationExceptionTest {, +, +  @Test, +  public void testCause() throws Exception {, +    final Exception cause = new Exception();, +    assertSame(cause, new ApplicationException(cause).getCause());, +  }, +, +}, +++ b/front-controller/pom.xml, +		<dependency>, +			<groupId>org.mockito</groupId>, +			<artifactId>mockito-core</artifactId>, +			<scope>test</scope>, +		</dependency>, +++ b/front-controller/src/test/java/com/iluwatar/front/controller/ApplicationExceptionTest.java, +package com.iluwatar.front.controller;, +, +import org.junit.Test;, +, +import static org.junit.Assert.*;, +, +/**, + * Date: 12/13/15 - 1:35 PM, + *, + * @author Jeroen Meulemeester, + */, +public class ApplicationExceptionTest {, +, +  @Test, +  public void testCause() throws Exception {, +    final Exception cause = new Exception();, +    assertSame(cause, new ApplicationException(cause).getCause());, +  }, +, +}, +++ b/front-controller/src/test/java/com/iluwatar/front/controller/CommandTest.java, +package com.iluwatar.front.controller;, +, +import org.junit.Test;, +import org.junit.runner.RunWith;, +import org.junit.runners.Parameterized;, +import org.junit.runners.Parameterized.Parameters;, +, +import java.util.ArrayList;, +import java.util.List;, +, +import static org.mockito.Mockito.verify;, +import static org.mockito.Mockito.verifyNoMoreInteractions;, +import static org.mockito.Mockito.verifyZeroInteractions;, +, +/**, + * Date: 12/13/15 - 1:39 PM, + *, + * @author Jeroen Meulemeester, + */, +@RunWith(Parameterized.class), +public class CommandTest extends StdOutTest {, +, +  @Parameters, +  public static List<Object[]> data() {, +    final List<Object[]> parameters = new ArrayList<>();, +    parameters.add(new Object[]{"Archer", "Displaying archers"});, +    parameters.add(new Object[]{"Catapult", "Displaying catapults"});, +    parameters.add(new Object[]{"NonExistentCommand", "Error 500"});, +    return parameters;, +  }, +, +  /**, +   * The view that's been tested, +   */, +  private final String request;, +, +  /**, +   * The expected display message, +   */]