[+++ b/model-view-controller/src/main/java/com/iluwatar/App.java, +    	// create model, view and controller, +    	GiantModel giant = new GiantModel(Health.HEALTHY, Fatigue.ALERT, Nourishment.SATURATED);, +    	GiantView view = new GiantView();, +    	GiantController controller = new GiantController(giant, view);, +    	// initial display, +    	controller.updateView();, +    	// controller receives some interactions that affect the giant, +    	controller.setHealth(Health.WOUNDED);, +    	controller.setNourishment(Nourishment.HUNGRY);, +    	controller.setFatigue(Fatigue.TIRED);, +    	// redisplay, +    	controller.updateView();, +++ b/model-view-controller/src/main/java/com/iluwatar/App.java, +    	// create model, view and controller, +    	GiantModel giant = new GiantModel(Health.HEALTHY, Fatigue.ALERT, Nourishment.SATURATED);, +    	GiantView view = new GiantView();, +    	GiantController controller = new GiantController(giant, view);, +    	// initial display, +    	controller.updateView();, +    	// controller receives some interactions that affect the giant, +    	controller.setHealth(Health.WOUNDED);, +    	controller.setNourishment(Nourishment.HUNGRY);, +    	controller.setFatigue(Fatigue.TIRED);, +    	// redisplay, +    	controller.updateView();, +++ b/model-view-controller/src/main/java/com/iluwatar/Fatigue.java, +package com.iluwatar;, +, +public enum Fatigue {, +, +	ALERT("alert"), TIRED("tired"), SLEEPING("sleeping");, +	, +	private String title;, +	, +	Fatigue(String title) {, +		this.title = title;, +	}, +, +	@Override, +	public String toString() {, +		return title;, +	}	, +}, +++ b/model-view-controller/src/main/java/com/iluwatar/App.java, +    	// create model, view and controller, +    	GiantModel giant = new GiantModel(Health.HEALTHY, Fatigue.ALERT, Nourishment.SATURATED);, +    	GiantView view = new GiantView();, +    	GiantController controller = new GiantController(giant, view);, +    	// initial display, +    	controller.updateView();, +    	// controller receives some interactions that affect the giant, +    	controller.setHealth(Health.WOUNDED);, +    	controller.setNourishment(Nourishment.HUNGRY);, +    	controller.setFatigue(Fatigue.TIRED);, +    	// redisplay, +    	controller.updateView();, +++ b/model-view-controller/src/main/java/com/iluwatar/Fatigue.java, +package com.iluwatar;, +, +public enum Fatigue {, +, +	ALERT("alert"), TIRED("tired"), SLEEPING("sleeping");, +	, +	private String title;, +	, +	Fatigue(String title) {, +		this.title = title;, +	}, +, +	@Override, +	public String toString() {, +		return title;, +	}	, +}, +++ b/model-view-controller/src/main/java/com/iluwatar/GiantController.java, +package com.iluwatar;, +, +public class GiantController {, +, +	private GiantModel giant;, +	private GiantView view;, +, +	public GiantController(GiantModel giant, GiantView view) {, +		this.giant = giant;, +		this.view = view;, +	}, +	, +	public Health getHealth() {, +		return giant.getHealth();, +	}, +, +	public void setHealth(Health health) {, +		this.giant.setHealth(health);, +	}, +, +	public Fatigue getFatigue() {, +		return giant.getFatigue();, +	}, +]