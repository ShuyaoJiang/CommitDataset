[+++ b/serverless/README.md, +Following are optimization katas you should be aware of while building a serverless , +applications, +, +* The Lean function, +    * Concise logic, +    * Efficient/single purpose code, +    * ephemeral environment, +* Eventful Invocations, +    * Succinct payloads, +    * resilient routing, +    * concurrent execution, +* Coordinated calls, +    * Decoupled via APIs, +    * scale-matched downstream, +    * secured, +* Serviceful operations, +    * Automated operations, +    * monitored applications, +    * Innovation mindset, +, +## (Backend as a Service or "BaaS"), +This example creates a backend for ‘persons’ collection which uses DynamoDB NoSQL , +database service also provided by Amazon. , +, +Based on the configuration in `serverless.yml` serverless framework creates following , +resources, +* cloud formation stack for S3 (ServerlessDeploymentBucket), +* IAM Role (IamRoleLambdaExecution), +* cloud watch (log groups), +* API Gateway (ApiGatewayRestApi) , +* Lambda function, +* DynamoDB collection, +  POST - https://xxxxxxxxx.execute-api.us-east-1.amazonaws.com/dev/api/person, +  GET - https://xxxxxxxxx.execute-api.us-east-1.amazonaws.com/dev/api/person/{id}, +  , +Use the following cURL commands to test the endpoints, +, +```cURL, +curl -X GET \, +  https://xxxxxxxxx.execute-api.us-east-1.amazonaws.com/dev/info \, +  -H 'cache-control: no-cache', +```, +, +```cURL, +curl -X POST \, +  https://xxxxxxxxx.execute-api.us-east-1.amazonaws.com/dev/api/person \, +  -H 'cache-control: no-cache' \, +  -H 'content-type: application/json' \, +  -d '{, +	"firstName": "Thor",, +	"lastName": "Odinson",, +	"address": {, +		"addressLineOne": "1 Odin ln",, +		"addressLineTwo": "100",, +		"city": "Asgard",, +		"state": "country of the Gods",, +		"zipCode": "00001", +	}, +}', +```, +, +```cURL, +curl -X GET \, +  https://xxxxxxxxx.execute-api.us-east-1.amazonaws.com/dev/api/person/{id} \, +  -H 'cache-control: no-cache', +```, +]