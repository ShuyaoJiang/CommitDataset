[+++ b/cqrs/src/main/java/com/iluwatar/cqrs/commandes/CommandServiceImpl.java, +/**, + * This class is implementation of {@link ICommandService} interface. It uses Hibernate as an api for persistence., + *, + */, +++ b/cqrs/src/main/java/com/iluwatar/cqrs/commandes/CommandServiceImpl.java, +/**, + * This class is implementation of {@link ICommandService} interface. It uses Hibernate as an api for persistence., + *, + */, +++ b/cqrs/src/main/java/com/iluwatar/cqrs/commandes/ICommandService.java, +/**, + * This interface represents the commands of the CQRS pattern, + *, + */, +++ b/cqrs/src/main/java/com/iluwatar/cqrs/commandes/CommandServiceImpl.java, +/**, + * This class is implementation of {@link ICommandService} interface. It uses Hibernate as an api for persistence., + *, + */, +++ b/cqrs/src/main/java/com/iluwatar/cqrs/commandes/ICommandService.java, +/**, + * This interface represents the commands of the CQRS pattern, + *, + */, +++ b/cqrs/src/main/java/com/iluwatar/cqrs/domain/model/Author.java, + * This is an Author entity. It is used by Hibernate for persistence., +   *          username of the author, +   *          name of the author, +   *          email of the author, +++ b/cqrs/src/main/java/com/iluwatar/cqrs/commandes/CommandServiceImpl.java, +/**, + * This class is implementation of {@link ICommandService} interface. It uses Hibernate as an api for persistence., + *, + */, +++ b/cqrs/src/main/java/com/iluwatar/cqrs/commandes/ICommandService.java, +/**, + * This interface represents the commands of the CQRS pattern, + *, + */, +++ b/cqrs/src/main/java/com/iluwatar/cqrs/domain/model/Author.java, + * This is an Author entity. It is used by Hibernate for persistence., +   *          username of the author, +   *          name of the author, +   *          email of the author, +++ b/cqrs/src/main/java/com/iluwatar/cqrs/domain/model/Book.java, + * This is a Book entity. It is used by Hibernate for persistence. Many books can be written by one {@link Author}, +   *          title of the book, +   *          price of the book, +   *          author of the book, +++ b/cqrs/src/main/java/com/iluwatar/cqrs/commandes/CommandServiceImpl.java, +/**, + * This class is implementation of {@link ICommandService} interface. It uses Hibernate as an api for persistence., + *, + */, +++ b/cqrs/src/main/java/com/iluwatar/cqrs/commandes/ICommandService.java, +/**, + * This interface represents the commands of the CQRS pattern, + *, + */, +++ b/cqrs/src/main/java/com/iluwatar/cqrs/domain/model/Author.java, + * This is an Author entity. It is used by Hibernate for persistence., +   *          username of the author, +   *          name of the author, +   *          email of the author, +++ b/cqrs/src/main/java/com/iluwatar/cqrs/domain/model/Book.java, + * This is a Book entity. It is used by Hibernate for persistence. Many books can be written by one {@link Author}, +   *          title of the book, +   *          price of the book, +   *          author of the book, +++ b/cqrs/src/main/java/com/iluwatar/cqrs/dto/Author.java, +package com.iluwatar.cqrs.dto;, +, +/**, + * , + * This is a DTO (Data Transfer Object) author, contains only useful information to be returned, + *, + */, +public class Author {, +, +  private String name;, +  private String email;, +  private String username;, +, +  /**, +   * , +   * @param name, +   *          name of the author, +   * @param email, +   *          email of the author, +   * @param username, +   *          username of the author, +   */, +  public Author(String name, String email, String username) {, +    super();, +    this.name = name;, +    this.email = email;, +    this.username = username;, +  }, +]