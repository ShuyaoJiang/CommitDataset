[+++ b/abstract-document/src/main/java/com/iluwatar/abstractdocument/AbstractDocument.java, +import java.util.Optional;, +        Optional<List<Map<String, Object>>> any = Stream.of(get(key)), +                .findAny();, +        return any.isPresent() ? any.get().stream().map(constructor) : Stream.empty();, +++ b/abstract-document/src/main/java/com/iluwatar/abstractdocument/AbstractDocument.java, +import java.util.Optional;, +        Optional<List<Map<String, Object>>> any = Stream.of(get(key)), +                .findAny();, +        return any.isPresent() ? any.get().stream().map(constructor) : Stream.empty();, +++ b/abstract-document/src/test/java/com/iluwatar/abstractdocument/AbstractDocumentTest.java, +    @Test, +    public void shouldRetrieveEmptyStreamForNonExistinChildren() {, +        Stream<DocumentImplementation> children = document.children(KEY, DocumentImplementation::new);, +        assertNotNull(children);, +        assertEquals(0, children.count());, +    }, +]