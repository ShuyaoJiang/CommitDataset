[+++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/App.java, +    LotteryAdministration administration = injector.getInstance(LotteryAdministration.class);, +    administration.resetLottery();, +    administration.performLottery();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/App.java, +    LotteryAdministration administration = injector.getInstance(LotteryAdministration.class);, +    administration.resetLottery();, +    administration.performLottery();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/banking/InMemoryBank.java, +    accounts.put(LotteryConstants.SERVICE_BANK_ACCOUNT, LotteryConstants.SERVICE_BANK_ACCOUNT_BALANCE);, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/App.java, +    LotteryAdministration administration = injector.getInstance(LotteryAdministration.class);, +    administration.resetLottery();, +    administration.performLottery();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/banking/InMemoryBank.java, +    accounts.put(LotteryConstants.SERVICE_BANK_ACCOUNT, LotteryConstants.SERVICE_BANK_ACCOUNT_BALANCE);, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/banking/MongoBank.java, +    List<Document> results = accountsCollection.find(search).limit(1).into(new ArrayList<>());, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/App.java, +    LotteryAdministration administration = injector.getInstance(LotteryAdministration.class);, +    administration.resetLottery();, +    administration.performLottery();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/banking/InMemoryBank.java, +    accounts.put(LotteryConstants.SERVICE_BANK_ACCOUNT, LotteryConstants.SERVICE_BANK_ACCOUNT_BALANCE);, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/banking/MongoBank.java, +    List<Document> results = accountsCollection.find(search).limit(1).into(new ArrayList<>());, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/database/MongoTicketRepository.java, +import java.util.stream.Collectors;, +    List<Document> results = ticketsCollection.find(find).limit(1).into(new ArrayList<>());, +    List<Document> docs = ticketsCollection.find(new Document()).into(new ArrayList<>());, +    Set<Integer> numbers = Arrays.stream(doc.getString("numbers").split(",")), +        .map(Integer::parseInt), +        .collect(Collectors.toSet());, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/App.java, +    LotteryAdministration administration = injector.getInstance(LotteryAdministration.class);, +    administration.resetLottery();, +    administration.performLottery();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/banking/InMemoryBank.java, +    accounts.put(LotteryConstants.SERVICE_BANK_ACCOUNT, LotteryConstants.SERVICE_BANK_ACCOUNT_BALANCE);, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/banking/MongoBank.java, +    List<Document> results = accountsCollection.find(search).limit(1).into(new ArrayList<>());, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/database/MongoTicketRepository.java, +import java.util.stream.Collectors;, +    List<Document> results = ticketsCollection.find(find).limit(1).into(new ArrayList<>());, +    List<Document> docs = ticketsCollection.find(new Document()).into(new ArrayList<>());, +    Set<Integer> numbers = Arrays.stream(doc.getString("numbers").split(",")), +        .map(Integer::parseInt), +        .collect(Collectors.toSet());, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryConstants.java, +  public static final int SERVICE_BANK_ACCOUNT_BALANCE = 150000;, +  public static final int PLAYER_MAX_BALANCE = 100;, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/App.java, +    LotteryAdministration administration = injector.getInstance(LotteryAdministration.class);, +    administration.resetLottery();, +    administration.performLottery();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/banking/InMemoryBank.java, +    accounts.put(LotteryConstants.SERVICE_BANK_ACCOUNT, LotteryConstants.SERVICE_BANK_ACCOUNT_BALANCE);, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/banking/MongoBank.java, +    List<Document> results = accountsCollection.find(search).limit(1).into(new ArrayList<>());, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/database/MongoTicketRepository.java, +import java.util.stream.Collectors;, +    List<Document> results = ticketsCollection.find(find).limit(1).into(new ArrayList<>());, +    List<Document> docs = ticketsCollection.find(new Document()).into(new ArrayList<>());, +    Set<Integer> numbers = Arrays.stream(doc.getString("numbers").split(",")), +        .map(Integer::parseInt), +        .collect(Collectors.toSet());, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryConstants.java, +  public static final int SERVICE_BANK_ACCOUNT_BALANCE = 150000;, +  public static final int PLAYER_MAX_BALANCE = 100;, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryNumbers.java, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/App.java, +    LotteryAdministration administration = injector.getInstance(LotteryAdministration.class);, +    administration.resetLottery();, +    administration.performLottery();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/banking/InMemoryBank.java, +    accounts.put(LotteryConstants.SERVICE_BANK_ACCOUNT, LotteryConstants.SERVICE_BANK_ACCOUNT_BALANCE);, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/banking/MongoBank.java, +    List<Document> results = accountsCollection.find(search).limit(1).into(new ArrayList<>());, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/database/MongoTicketRepository.java, +import java.util.stream.Collectors;, +    List<Document> results = ticketsCollection.find(find).limit(1).into(new ArrayList<>());, +    List<Document> docs = ticketsCollection.find(new Document()).into(new ArrayList<>());, +    Set<Integer> numbers = Arrays.stream(doc.getString("numbers").split(",")), +        .map(Integer::parseInt), +        .collect(Collectors.toSet());, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryConstants.java, +  public static final int SERVICE_BANK_ACCOUNT_BALANCE = 150000;, +  public static final int PLAYER_MAX_BALANCE = 100;, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/domain/LotteryNumbers.java, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/sampledata/SampleData.java, +    for (PlayerDetails player : PLAYERS) {, +      wireTransfers.setFunds(player.getBankAccount(),, +          random.nextInt(LotteryConstants.PLAYER_MAX_BALANCE));, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/App.java, +    LotteryAdministration administration = injector.getInstance(LotteryAdministration.class);, +    administration.resetLottery();, +    administration.performLottery();, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/banking/InMemoryBank.java, +    accounts.put(LotteryConstants.SERVICE_BANK_ACCOUNT, LotteryConstants.SERVICE_BANK_ACCOUNT_BALANCE);, +++ b/hexagonal/src/main/java/com/iluwatar/hexagonal/banking/MongoBank.java]