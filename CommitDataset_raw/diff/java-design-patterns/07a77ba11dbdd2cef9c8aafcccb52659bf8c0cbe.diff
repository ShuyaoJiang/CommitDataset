[+++ b/README.md, +Once you are familiar with these concepts you can start drilling down into patterns by any of the following approaches, +++ b/README.md, +Once you are familiar with these concepts you can start drilling down into patterns by any of the following approaches, +++ b/double-checked-locking/src/main/java/com/iluwatar/doublechecked/locking/App.java, +import java.util.concurrent.TimeUnit;, +			executorService.execute(() -> {, +, +		executorService.shutdown();, +		try {, +			executorService.awaitTermination(5, TimeUnit.SECONDS);, +		} catch (InterruptedException e) {, +			System.out.println("Error waiting for ExecutorService shutdown");, +		}, +++ b/README.md, +Once you are familiar with these concepts you can start drilling down into patterns by any of the following approaches, +++ b/double-checked-locking/src/main/java/com/iluwatar/doublechecked/locking/App.java, +import java.util.concurrent.TimeUnit;, +			executorService.execute(() -> {, +, +		executorService.shutdown();, +		try {, +			executorService.awaitTermination(5, TimeUnit.SECONDS);, +		} catch (InterruptedException e) {, +			System.out.println("Error waiting for ExecutorService shutdown");, +		}, +++ b/double-checked-locking/src/main/java/com/iluwatar/doublechecked/locking/Inventory.java, +	private final int inventorySize;, +	private final List<Item> items;, +	private final Lock lock;, +		this.items = new ArrayList<>(inventorySize);, +		this.lock = new ReentrantLock();, +					System.out.println(Thread.currentThread(), +							+ ": items.size()=" + items.size(), +							+ ", inventorySize=" + inventorySize);]