[+++ b/README.md, +* [Flux](#flux), +## <a name="flux">Flux</a> [&#8593;](#list-of-design-patterns), +**Intent:** Flux eschews MVC in favor of a unidirectional data flow. When a user interacts with a view, the view propagates an action through a central dispatcher, to the various stores that hold the application's data and business logic, which updates all of the views that are affected., +, +![alt text](https://github.com/iluwatar/java-design-patterns/blob/master/flux/etc/flux.png "Flux"), +, +**Applicability:** Use the Flux pattern when, +* You want to focus on creating explicit and understandable update paths for your application's data, which makes tracing changes during development simpler and makes bugs easier to track down and fix., +]