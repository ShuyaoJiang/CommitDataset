[+++ b/dirty-flag/README.md, +---, +layout: pattern, +title: Dirty Flag, +folder: dirty-flag, +permalink: /patterns/dirty-flag/, +categories: Other, +tags:, + - Java, + - Difficulty-Easy, + - Performance, +---, +, +## Intent, +To avoid expensive re-acquisition of resources. The resources retain their identity, are kept in some, +fast-access storage, and are re-used to avoid having to acquire them again., +, +![alt text](./etc/dirty-flag.png "Dirty Flag"), +, +## Applicability, +Use the Dirty Flag pattern when, +, +* Repetitious acquisition, initialization, and release of the same resource causes unnecessary performance overhead., +, +## Credits, +, +* [Design Patterns: Dirty Flag](https://www.takeupcode.com/podcast/89-design-patterns-dirty-flag/), +++ b/dirty-flag/README.md, +---, +layout: pattern, +title: Dirty Flag, +folder: dirty-flag, +permalink: /patterns/dirty-flag/, +categories: Other, +tags:, + - Java, + - Difficulty-Easy, + - Performance, +---, +, +## Intent, +To avoid expensive re-acquisition of resources. The resources retain their identity, are kept in some, +fast-access storage, and are re-used to avoid having to acquire them again., +, +![alt text](./etc/dirty-flag.png "Dirty Flag"), +, +## Applicability, +Use the Dirty Flag pattern when, +, +* Repetitious acquisition, initialization, and release of the same resource causes unnecessary performance overhead., +, +## Credits, +, +* [Design Patterns: Dirty Flag](https://www.takeupcode.com/podcast/89-design-patterns-dirty-flag/), +++ b/dirty-flag/etc/dirty-flag.png, +++ b/dirty-flag/README.md, +---, +layout: pattern, +title: Dirty Flag, +folder: dirty-flag, +permalink: /patterns/dirty-flag/, +categories: Other, +tags:, + - Java, + - Difficulty-Easy, + - Performance, +---, +, +## Intent, +To avoid expensive re-acquisition of resources. The resources retain their identity, are kept in some, +fast-access storage, and are re-used to avoid having to acquire them again., +, +![alt text](./etc/dirty-flag.png "Dirty Flag"), +, +## Applicability, +Use the Dirty Flag pattern when, +, +* Repetitious acquisition, initialization, and release of the same resource causes unnecessary performance overhead., +, +## Credits, +, +* [Design Patterns: Dirty Flag](https://www.takeupcode.com/podcast/89-design-patterns-dirty-flag/), +++ b/dirty-flag/etc/dirty-flag.png, +++ b/dirty-flag/pom.xml, +<?xml version="1.0"?>, +<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0", +    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">, +  <modelVersion>4.0.0</modelVersion>, +  <parent>, +    <groupId>com.iluwatar</groupId>, +    <artifactId>java-design-patterns</artifactId>, +    <version>1.19.0-SNAPSHOT</version>, +  </parent>, +  <groupId>com.iluwatar</groupId>, +  <artifactId>dirty-flag</artifactId>, +  <version>1.19.0-SNAPSHOT</version>, +  <name>dirty-flag</name>, +  <url>http://maven.apache.org</url>, +  <properties>, +    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>]