[+++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableNumberValue.java, +        return !valueKeyframes.isEmpty();, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableNumberValue.java, +        return !valueKeyframes.isEmpty();, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatablePointValue.java, +    private final Path animationPath = new Path();, +        if (!animationPath.isEmpty() && usePathAnimation) {, +        return !animationPath.isEmpty() || !pointKeyframes.isEmpty();, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableNumberValue.java, +        return !valueKeyframes.isEmpty();, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatablePointValue.java, +    private final Path animationPath = new Path();, +        if (!animationPath.isEmpty() && usePathAnimation) {, +        return !animationPath.isEmpty() || !pointKeyframes.isEmpty();, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableScaleValue.java, +    private long delay;, +    private long duration;, +        LotteKeyframeAnimation animation = new LotteTransformKeyframeAnimation(keyPath, duration, keyTimes, scaleKeyframes);, +        animation.setInterpolators(interpolators);, +        animation.setStartDelay(delay);, +        return animation;, +        return !scaleKeyframes.isEmpty();, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableNumberValue.java, +        return !valueKeyframes.isEmpty();, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatablePointValue.java, +    private final Path animationPath = new Path();, +        if (!animationPath.isEmpty() && usePathAnimation) {, +        return !animationPath.isEmpty() || !pointKeyframes.isEmpty();, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableScaleValue.java, +    private long delay;, +    private long duration;, +        LotteKeyframeAnimation animation = new LotteTransformKeyframeAnimation(keyPath, duration, keyTimes, scaleKeyframes);, +        animation.setInterpolators(interpolators);, +        animation.setStartDelay(delay);, +        return animation;, +        return !scaleKeyframes.isEmpty();, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteTransformKeyframeAnimation.java, +package com.airbnb.lotte.animation;, +, +import android.support.annotation.FloatRange;, +, +import com.airbnb.lotte.utils.LotteKeyframeAnimation;, +import com.airbnb.lotte.utils.LotteTransform3D;, +, +import java.util.List;, +, +public class LotteTransformKeyframeAnimation extends LotteKeyframeAnimation<LotteTransform3D> {, +    private final List<LotteTransform3D> transforms;, +, +    public LotteTransformKeyframeAnimation(String objectProperty, long duration, List<Float> keyTimes, List<LotteTransform3D> transforms) {, +        super(objectProperty, duration, keyTimes);, +        this.transforms = transforms;, +    }, +, +    @Override, +    public LotteTransform3D getValueForProgress(@FloatRange(from = 0f, to = 1f) float progress) {, +        // TODO, +        return null;, +    }, +}]