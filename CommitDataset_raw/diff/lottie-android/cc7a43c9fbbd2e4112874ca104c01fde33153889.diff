[+++ b/LottieSample/src/androidTest/java/com/airbnb/lottie/LottieTest.kt, +import com.amazonaws.services.s3.model.ListObjectsV2Request, +            withTimeout(TimeUnit.MINUTES.toMillis(45)) {, +        val allObjects = mutableListOf<S3ObjectSummary>(), +        var request = ListObjectsV2Request().apply {, +            bucketName = "lottie-prod-animations", +        }, +        var result = s3Client.listObjectsV2(request), +        allObjects.addAll(result.objectSummaries), +        var startAfter = result.objectSummaries.lastOrNull()?.key, +        while (startAfter != null) {, +            request = ListObjectsV2Request().apply {, +                bucketName = "lottie-prod-animations", +                this.startAfter = startAfter, +            }, +            result = s3Client.listObjectsV2(request), +            allObjects.addAll(result.objectSummaries), +            startAfter = result.objectSummaries.lastOrNull()?.key, +        }, +, +        allObjects.forEach { snapshotProdAnimation(it) }, +++ b/LottieSample/src/androidTest/java/com/airbnb/lottie/LottieTest.kt, +import com.amazonaws.services.s3.model.ListObjectsV2Request, +            withTimeout(TimeUnit.MINUTES.toMillis(45)) {, +        val allObjects = mutableListOf<S3ObjectSummary>(), +        var request = ListObjectsV2Request().apply {, +            bucketName = "lottie-prod-animations", +        }, +        var result = s3Client.listObjectsV2(request), +        allObjects.addAll(result.objectSummaries), +        var startAfter = result.objectSummaries.lastOrNull()?.key, +        while (startAfter != null) {, +            request = ListObjectsV2Request().apply {, +                bucketName = "lottie-prod-animations", +                this.startAfter = startAfter, +            }, +            result = s3Client.listObjectsV2(request), +            allObjects.addAll(result.objectSummaries), +            startAfter = result.objectSummaries.lastOrNull()?.key, +        }, +, +        allObjects.forEach { snapshotProdAnimation(it) }, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/SnapshotTestActivity.kt, +import android.graphics.Typeface, +import com.airbnb.lottie.FontAssetDelegate, +        filmStripView.setFontAssetDelegate(object : FontAssetDelegate() {, +            override fun getFontPath(fontFamily: String?): String {, +                return "fonts/Roboto.ttf", +            }, +        }), +++ b/LottieSample/src/androidTest/java/com/airbnb/lottie/LottieTest.kt, +import com.amazonaws.services.s3.model.ListObjectsV2Request, +            withTimeout(TimeUnit.MINUTES.toMillis(45)) {, +        val allObjects = mutableListOf<S3ObjectSummary>(), +        var request = ListObjectsV2Request().apply {, +            bucketName = "lottie-prod-animations", +        }, +        var result = s3Client.listObjectsV2(request), +        allObjects.addAll(result.objectSummaries), +        var startAfter = result.objectSummaries.lastOrNull()?.key, +        while (startAfter != null) {, +            request = ListObjectsV2Request().apply {, +                bucketName = "lottie-prod-animations", +                this.startAfter = startAfter, +            }, +            result = s3Client.listObjectsV2(request), +            allObjects.addAll(result.objectSummaries), +            startAfter = result.objectSummaries.lastOrNull()?.key, +        }, +, +        allObjects.forEach { snapshotProdAnimation(it) }, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/SnapshotTestActivity.kt, +import android.graphics.Typeface, +import com.airbnb.lottie.FontAssetDelegate, +        filmStripView.setFontAssetDelegate(object : FontAssetDelegate() {, +            override fun getFontPath(fontFamily: String?): String {, +                return "fonts/Roboto.ttf", +            }, +        }), +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/views/FilmStripView.kt, +import com.airbnb.lottie.FontAssetDelegate, +, +    fun setFontAssetDelegate(delegate: FontAssetDelegate) {, +        animationViews.forEach { it.setFontAssetDelegate(delegate) }, +    }, +++ b/LottieSample/src/androidTest/java/com/airbnb/lottie/LottieTest.kt, +import com.amazonaws.services.s3.model.ListObjectsV2Request, +            withTimeout(TimeUnit.MINUTES.toMillis(45)) {, +        val allObjects = mutableListOf<S3ObjectSummary>(), +        var request = ListObjectsV2Request().apply {, +            bucketName = "lottie-prod-animations", +        }, +        var result = s3Client.listObjectsV2(request), +        allObjects.addAll(result.objectSummaries), +        var startAfter = result.objectSummaries.lastOrNull()?.key, +        while (startAfter != null) {, +            request = ListObjectsV2Request().apply {, +                bucketName = "lottie-prod-animations", +                this.startAfter = startAfter, +            }]