[+++ b/LottieSample/screenshots/LottieLogo1.png, +++ b/LottieSample/screenshots/LottieLogo1.png, +++ b/LottieSample/screenshots/LottieLogo2.png, +++ b/LottieSample/screenshots/LottieLogo1.png, +++ b/LottieSample/screenshots/LottieLogo2.png, +++ b/LottieSample/screenshots/MotionCorpse-Jrcanest.png, +++ b/LottieSample/screenshots/LottieLogo1.png, +++ b/LottieSample/screenshots/LottieLogo2.png, +++ b/LottieSample/screenshots/MotionCorpse-Jrcanest.png, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +  @VisibleForTesting void recycleBitmaps() {, +    int screenWidth = Utils.getScreenWidth(getContext());, +    int screenHeight = Utils.getScreenHeight(getContext());, +    int compWidth = composition.getBounds().width();, +    int compHeight = composition.getBounds().height();, +    if (compWidth > screenWidth ||, +        compHeight > screenHeight) {, +      float xScale = screenWidth / (float) compWidth;, +      float yScale = screenHeight / (float) compHeight;, +      setScale(Math.min(xScale, yScale));, +      Log.w(L.TAG, String.format(, +          "Composition larger than the screen %dx%d vs %dx%d. Scaling down.",, +          compWidth, compHeight, screenWidth, screenHeight));, +    }, +, +, +++ b/LottieSample/screenshots/LottieLogo1.png, +++ b/LottieSample/screenshots/LottieLogo2.png, +++ b/LottieSample/screenshots/MotionCorpse-Jrcanest.png, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +  @VisibleForTesting void recycleBitmaps() {, +    int screenWidth = Utils.getScreenWidth(getContext());, +    int screenHeight = Utils.getScreenHeight(getContext());, +    int compWidth = composition.getBounds().width();, +    int compHeight = composition.getBounds().height();, +    if (compWidth > screenWidth ||, +        compHeight > screenHeight) {, +      float xScale = screenWidth / (float) compWidth;, +      float yScale = screenHeight / (float) compHeight;, +      setScale(Math.min(xScale, yScale));, +      Log.w(L.TAG, String.format(, +          "Composition larger than the screen %dx%d vs %dx%d. Scaling down.",, +          compWidth, compHeight, screenWidth, screenHeight));, +    }, +, +, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieDrawable.java, +    setScale(1f);, +++ b/LottieSample/screenshots/LottieLogo1.png, +++ b/LottieSample/screenshots/LottieLogo2.png, +++ b/LottieSample/screenshots/MotionCorpse-Jrcanest.png, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +  @VisibleForTesting void recycleBitmaps() {, +    int screenWidth = Utils.getScreenWidth(getContext());, +    int screenHeight = Utils.getScreenHeight(getContext());, +    int compWidth = composition.getBounds().width();, +    int compHeight = composition.getBounds().height();, +    if (compWidth > screenWidth ||, +        compHeight > screenHeight) {, +      float xScale = screenWidth / (float) compWidth;, +      float yScale = screenHeight / (float) compHeight;, +      setScale(Math.min(xScale, yScale));, +      Log.w(L.TAG, String.format(, +          "Composition larger than the screen %dx%d vs %dx%d. Scaling down.",, +          compWidth, compHeight, screenWidth, screenHeight));, +    }, +, +, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieDrawable.java, +    setScale(1f);, +++ b/lottie/src/main/java/com/airbnb/lottie/Utils.java, +import android.content.Context;, +import android.util.DisplayMetrics;, +import android.view.WindowManager;, +  private static DisplayMetrics displayMetrics;, +, +  static int getScreenWidth(Context context) {, +    if (displayMetrics == null) {, +      displayMetrics = new DisplayMetrics();, +    }, +    WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);, +    wm.getDefaultDisplay().getMetrics(displayMetrics);, +    return displayMetrics.widthPixels;, +  }, +, +  static int getScreenHeight(Context context) {, +    if (displayMetrics == null) {, +      displayMetrics = new DisplayMetrics();, +    }, +    WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);, +    wm.getDefaultDisplay().getMetrics(displayMetrics);, +    return displayMetrics.heightPixels;, +  }]