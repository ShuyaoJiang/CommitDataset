[+++ b/LottieSample/src/main/java/com/airbnb/lottie/samples/AnimationFragment.java, +import android.text.TextUtils;, +              @Override public void onCompositionLoaded(@Nullable LottieComposition composition) {, +                if (composition == null) {, +                  onLoadError();, +                  return;, +                }, +    if (composition.hasImages() && TextUtils.isEmpty(animationView.getImageAssetsFolder())) {, +      //noinspection ConstantConditions, +      Snackbar.make(, +          getView(),, +          "This animation has images and no image folder was set",, +          Snackbar.LENGTH_LONG).show();, +      return;, +    }, +          @Override public void onCompositionLoaded(@Nullable LottieComposition composition) {, +            if (composition == null) {, +              onLoadError();, +              return;, +            }, +            @Override public void onCompositionLoaded(@Nullable LottieComposition composition) {, +              if (composition == null) {, +                onLoadError();, +                return;, +              }, +++ b/LottieSample/src/main/java/com/airbnb/lottie/samples/AnimationFragment.java, +import android.text.TextUtils;, +              @Override public void onCompositionLoaded(@Nullable LottieComposition composition) {, +                if (composition == null) {, +                  onLoadError();, +                  return;, +                }, +    if (composition.hasImages() && TextUtils.isEmpty(animationView.getImageAssetsFolder())) {, +      //noinspection ConstantConditions, +      Snackbar.make(, +          getView(),, +          "This animation has images and no image folder was set",, +          Snackbar.LENGTH_LONG).show();, +      return;, +    }, +          @Override public void onCompositionLoaded(@Nullable LottieComposition composition) {, +            if (composition == null) {, +              onLoadError();, +              return;, +            }, +            @Override public void onCompositionLoaded(@Nullable LottieComposition composition) {, +              if (composition == null) {, +                onLoadError();, +                return;, +              }, +++ b/LottieSample/src/main/res/layout/fragment_animation.xml, +<android.support.design.widget.CoordinatorLayout, +    xmlns:android="http://schemas.android.com/apk/res/android", +    android:layout_width="match_parent", +    android:layout_height="match_parent">, +    <LinearLayout, +</android.support.design.widget.CoordinatorLayout>, +++ b/LottieSample/src/main/java/com/airbnb/lottie/samples/AnimationFragment.java, +import android.text.TextUtils;, +              @Override public void onCompositionLoaded(@Nullable LottieComposition composition) {, +                if (composition == null) {, +                  onLoadError();, +                  return;, +                }, +    if (composition.hasImages() && TextUtils.isEmpty(animationView.getImageAssetsFolder())) {, +      //noinspection ConstantConditions, +      Snackbar.make(, +          getView(),, +          "This animation has images and no image folder was set",, +          Snackbar.LENGTH_LONG).show();, +      return;, +    }, +          @Override public void onCompositionLoaded(@Nullable LottieComposition composition) {, +            if (composition == null) {, +              onLoadError();, +              return;, +            }, +            @Override public void onCompositionLoaded(@Nullable LottieComposition composition) {, +              if (composition == null) {, +                onLoadError();, +                return;, +              }, +++ b/LottieSample/src/main/res/layout/fragment_animation.xml, +<android.support.design.widget.CoordinatorLayout, +    xmlns:android="http://schemas.android.com/apk/res/android", +    android:layout_width="match_parent", +    android:layout_height="match_parent">, +    <LinearLayout, +</android.support.design.widget.CoordinatorLayout>, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +        public void onCompositionLoaded(@Nullable LottieComposition composition) {, +          if (composition != null) {, +          }, +   * If you use image assets, you must explicitly specify the folder in assets/ in which they are, +   * located because bodymovin uses the name filenames across all compositions (img_#)., +   * Do NOT rename the images themselves., +   *, +   * If your images are located in src/main/assets/airbnb_loader/ then call, +   * `setImageAssetsFolder("airbnb_loader/");`., +   */]