[+++ b/After Effects Samples/Test/KeyPath.aep, +++ b/After Effects Samples/Test/KeyPath.aep, +++ b/LottieSample/libs/happo.aar, +++ b/After Effects Samples/Test/KeyPath.aep, +++ b/LottieSample/libs/happo.aar, +++ b/LottieSample/src/androidTest/java/com/airbnb/lottie/LottieSnapshotProvider.java, +import android.graphics.Color;, +import android.graphics.PointF;, +import com.airbnb.lottie.model.KeyPath;, +import com.airbnb.lottie.value.LottieStaticFloatRelativeValueCallback;, +import com.airbnb.lottie.value.LottieStaticPointRelativeValueCallback;, +import com.airbnb.lottie.value.LottieStaticValueCallback;, +import com.airbnb.lottie.value.LottieValueCallback;, +import com.airbnb.lottie.value.ScaleXY;, +    testDynamicProperties();, +  private void testDynamicProperties() {, +    testDynamicProperty(, +        "Fill color",, +        new KeyPath("Shape Layer 1", "Rectangle", "Fill 1"),, +        LottieProperty.COLOR,, +        new LottieStaticValueCallback<>(Color.GREEN));, +, +    testDynamicProperty(, +        "Fill opacity",, +        new KeyPath("Shape Layer 1", "Rectangle", "Fill 1"),, +        LottieProperty.OPACITY,, +        new LottieStaticValueCallback<>(50));, +, +    testDynamicProperty(, +        "Stroke color",, +        new KeyPath("Shape Layer 1", "Rectangle", "Stroke 1"),, +        LottieProperty.STROKE_COLOR,, +        new LottieStaticValueCallback<>(Color.GREEN));, +, +    testDynamicProperty(, +        "Stroke width",, +        new KeyPath("Shape Layer 1", "Rectangle", "Stroke 1"),, +        LottieProperty.STROKE_WIDTH,, +        new LottieStaticFloatRelativeValueCallback(50f));, +, +    testDynamicProperty(, +        "Stroke opacity",, +        new KeyPath("Shape Layer 1", "Rectangle", "Stroke 1"),, +        LottieProperty.OPACITY,, +        new LottieStaticValueCallback<>(50));, +, +    testDynamicProperty(, +        "Transform anchor point",, +        new KeyPath("Shape Layer 1", "Rectangle"),, +        LottieProperty.TRANSFORM_ANCHOR_POINT,, +        new LottieStaticPointRelativeValueCallback(new PointF(20f, 20f)));, +, +    testDynamicProperty(, +        "Transform position",, +        new KeyPath("Shape Layer 1", "Rectangle"),, +        LottieProperty.TRANSFORM_POSITION,, +        new LottieStaticPointRelativeValueCallback(new PointF(20f, 20f)));, +, +    testDynamicProperty(, +        "Transform position (relative)",, +        new KeyPath("Shape Layer 1", "Rectangle"),, +        LottieProperty.TRANSFORM_POSITION,, +        new LottieStaticPointRelativeValueCallback(new PointF(20f, 20f)));, +, +    testDynamicProperty(, +        "Transform opacity",, +        new KeyPath("Shape Layer 1", "Rectangle"),, +        LottieProperty.TRANSFORM_OPACITY,, +        new LottieStaticValueCallback<>(50));, +, +    testDynamicProperty(, +        "Transform rotation",, +        new KeyPath("Shape Layer 1", "Rectangle"),, +        LottieProperty.TRANSFORM_ROTATION,, +        new LottieStaticValueCallback<>(45f));, +, +    testDynamicProperty(, +        "Transform scale",, +        new KeyPath("Shape Layer 1", "Rectangle"),, +        LottieProperty.TRANSFORM_SCALE,, +        new LottieStaticValueCallback<>(new ScaleXY(0.5f, 0.5f)));, +, +    testDynamicProperty(, +        "Ellipse position",, +        new KeyPath("Shape Layer 1", "Ellipse", "Ellipse Path 1"),, +        LottieProperty.POSITION,, +        new LottieStaticPointRelativeValueCallback(new PointF(20f, 20f)));, +, +    testDynamicProperty(, +        "Ellipse size",, +        new KeyPath("Shape Layer 1", "Ellipse", "Ellipse Path 1"),, +        LottieProperty.ELLIPSE_SIZE,, +        new LottieStaticPointRelativeValueCallback(new PointF(40f, 60f)));, +, +    testDynamicProperty(, +        "Star points",, +        new KeyPath("Shape Layer 1", "Star", "Polystar Path 1"),, +        LottieProperty.POLYSTAR_POINTS,, +        new LottieStaticValueCallback<>(8f));, +]