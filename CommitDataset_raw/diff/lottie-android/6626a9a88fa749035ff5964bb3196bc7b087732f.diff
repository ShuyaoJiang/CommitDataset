[+++ b/lottie/src/main/java/com/airbnb/lottie/AnimatableTextProperties.java, +import android.support.annotation.Nullable;, +, +  @Nullable final AnimatableColorValue color;, +  @Nullable final AnimatableColorValue stroke;, +  @Nullable final AnimatableFloatValue strokeWidth;, +  AnimatableTextProperties(@Nullable AnimatableColorValue color,, +      @Nullable AnimatableColorValue stroke, @Nullable AnimatableFloatValue strokeWidth) {, +    this.stroke = stroke;, +    this.strokeWidth = strokeWidth;, +      if (json == null || !json.has("a")) {, +        return new AnimatableTextProperties(null, null, null);, +      }, +      JSONObject animatablePropertiesJson = json.optJSONObject("a");, +      JSONObject colorJson = animatablePropertiesJson.optJSONObject("fc");, +      JSONObject strokeJson = animatablePropertiesJson.optJSONObject("sc");, +      AnimatableColorValue stroke =, +          AnimatableColorValue.Factory.newInstance(strokeJson, composition);, +, +      JSONObject strokeWidthJson = animatablePropertiesJson.optJSONObject("sw");, +      AnimatableFloatValue strokeWidth =, +          AnimatableFloatValue.Factory.newInstance(strokeWidthJson, composition);, +, +, +      return new AnimatableTextProperties(color, stroke, strokeWidth);, +++ b/lottie/src/main/java/com/airbnb/lottie/AnimatableTextProperties.java, +import android.support.annotation.Nullable;, +, +  @Nullable final AnimatableColorValue color;, +  @Nullable final AnimatableColorValue stroke;, +  @Nullable final AnimatableFloatValue strokeWidth;, +  AnimatableTextProperties(@Nullable AnimatableColorValue color,, +      @Nullable AnimatableColorValue stroke, @Nullable AnimatableFloatValue strokeWidth) {, +    this.stroke = stroke;, +    this.strokeWidth = strokeWidth;, +      if (json == null || !json.has("a")) {, +        return new AnimatableTextProperties(null, null, null);, +      }, +      JSONObject animatablePropertiesJson = json.optJSONObject("a");, +      JSONObject colorJson = animatablePropertiesJson.optJSONObject("fc");, +      JSONObject strokeJson = animatablePropertiesJson.optJSONObject("sc");, +      AnimatableColorValue stroke =, +          AnimatableColorValue.Factory.newInstance(strokeJson, composition);, +, +      JSONObject strokeWidthJson = animatablePropertiesJson.optJSONObject("sw");, +      AnimatableFloatValue strokeWidth =, +          AnimatableFloatValue.Factory.newInstance(strokeWidthJson, composition);, +, +, +      return new AnimatableTextProperties(color, stroke, strokeWidth);, +++ b/lottie/src/main/java/com/airbnb/lottie/DocumentData.java, +  @ColorInt int strokeColor;, +  int strokeWidth;, +  boolean strokeOverFill;, +      double lineHeight, @ColorInt int color, @ColorInt int strokeColor, int strokeWidth,, +      boolean strokeOverFill) {, +    this.strokeColor = strokeColor;, +    this.strokeWidth = strokeWidth;, +    this.strokeOverFill = strokeOverFill;, +      JSONArray strokeArray = json.optJSONArray("sc");, +      int strokeColor = 0;, +      if (strokeArray != null) {, +        strokeColor = Color.argb(, +            255,, +            (int) (strokeArray.optDouble(0) * 255),, +            (int) (strokeArray.optDouble(1) * 255),, +            (int) (strokeArray.optDouble(2) * 255));, +      }, +      int strokeWidth = json.optInt("sw");, +      boolean strokeOverFill = json.optBoolean("of");, +, +      return new DocumentData(text, fontFamily, size, justification, tracking, lineHeight, color,, +          strokeColor, strokeWidth, strokeOverFill);, +++ b/lottie/src/main/java/com/airbnb/lottie/AnimatableTextProperties.java, +import android.support.annotation.Nullable;, +, +  @Nullable final AnimatableColorValue color;, +  @Nullable final AnimatableColorValue stroke;, +  @Nullable final AnimatableFloatValue strokeWidth;, +  AnimatableTextProperties(@Nullable AnimatableColorValue color,, +      @Nullable AnimatableColorValue stroke, @Nullable AnimatableFloatValue strokeWidth) {, +    this.stroke = stroke;, +    this.strokeWidth = strokeWidth;, +      if (json == null || !json.has("a")) {, +        return new AnimatableTextProperties(null, null, null);, +      }, +      JSONObject animatablePropertiesJson = json.optJSONObject("a");, +      JSONObject colorJson = animatablePropertiesJson.optJSONObject("fc");, +      JSONObject strokeJson = animatablePropertiesJson.optJSONObject("sc");, +      AnimatableColorValue stroke =, +          AnimatableColorValue.Factory.newInstance(strokeJson, composition);, +, +      JSONObject strokeWidthJson = animatablePropertiesJson.optJSONObject("sw");, +      AnimatableFloatValue strokeWidth =, +          AnimatableFloatValue.Factory.newInstance(strokeWidthJson, composition);, +, +, +      return new AnimatableTextProperties(color, stroke, strokeWidth);, +++ b/lottie/src/main/java/com/airbnb/lottie/DocumentData.java, +  @ColorInt int strokeColor;]