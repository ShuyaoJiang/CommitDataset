[+++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteAnimatableLayer.java, +    private Observable<Number> alpha;, +    protected Observable<Number> sublayerTransform;, +            canvas.rotate((float) sublayerTransform.getValue());, +        throw new IllegalArgumentException("This shouldn't be used.");, +    }, +, +    public void setAlpha(Observable<Number> alpha) {, +        return (int) alpha.getValue();, +    public void setSublayerTransform(Observable<Number> sublayerTransform) {, +        if (this.sublayerTransform != null) {, +            this.sublayerTransform.removeChangeListemer(changedListener);, +        }, +        this.sublayerTransform = sublayerTransform;, +        sublayerTransform.addChangeListener(changedListener);, +    }, +, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteAnimatableLayer.java, +    private Observable<Number> alpha;, +    protected Observable<Number> sublayerTransform;, +            canvas.rotate((float) sublayerTransform.getValue());, +        throw new IllegalArgumentException("This shouldn't be used.");, +    }, +, +    public void setAlpha(Observable<Number> alpha) {, +        return (int) alpha.getValue();, +    public void setSublayerTransform(Observable<Number> sublayerTransform) {, +        if (this.sublayerTransform != null) {, +            this.sublayerTransform.removeChangeListemer(changedListener);, +        }, +        this.sublayerTransform = sublayerTransform;, +        sublayerTransform.addChangeListener(changedListener);, +    }, +, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteEllipseShapeLayer.java, +        setAlpha(transform.getOpacity().getObservable());, +        setSublayerTransform(transform.getRotation().getObservable());, +            fillLayer.setAlpha(fill.getOpacity().getObservable());, +            strokeLayer.setAlpha(stroke.getOpacity().getObservable());, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteAnimatableLayer.java, +    private Observable<Number> alpha;, +    protected Observable<Number> sublayerTransform;, +            canvas.rotate((float) sublayerTransform.getValue());, +        throw new IllegalArgumentException("This shouldn't be used.");, +    }, +, +    public void setAlpha(Observable<Number> alpha) {, +        return (int) alpha.getValue();, +    public void setSublayerTransform(Observable<Number> sublayerTransform) {, +        if (this.sublayerTransform != null) {, +            this.sublayerTransform.removeChangeListemer(changedListener);, +        }, +        this.sublayerTransform = sublayerTransform;, +        sublayerTransform.addChangeListener(changedListener);, +    }, +, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteEllipseShapeLayer.java, +        setAlpha(transform.getOpacity().getObservable());, +        setSublayerTransform(transform.getRotation().getObservable());, +            fillLayer.setAlpha(fill.getOpacity().getObservable());, +            strokeLayer.setAlpha(stroke.getOpacity().getObservable());, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteGroupLayerView.java, +import com.airbnb.lotte.animation.LotteAnimationGroup;, +            sublayerTransform = shapeTransform.getRotation().getObservable();, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteAnimatableLayer.java, +    private Observable<Number> alpha;, +    protected Observable<Number> sublayerTransform;, +            canvas.rotate((float) sublayerTransform.getValue());, +        throw new IllegalArgumentException("This shouldn't be used.");, +    }, +, +    public void setAlpha(Observable<Number> alpha) {, +        return (int) alpha.getValue();, +    public void setSublayerTransform(Observable<Number> sublayerTransform) {, +        if (this.sublayerTransform != null) {, +            this.sublayerTransform.removeChangeListemer(changedListener);, +        }, +        this.sublayerTransform = sublayerTransform;, +        sublayerTransform.addChangeListener(changedListener);, +    }, +, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteEllipseShapeLayer.java, +        setAlpha(transform.getOpacity().getObservable());, +        setSublayerTransform(transform.getRotation().getObservable());, +            fillLayer.setAlpha(fill.getOpacity().getObservable());, +            strokeLayer.setAlpha(stroke.getOpacity().getObservable());, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteGroupLayerView.java, +import com.airbnb.lotte.animation.LotteAnimationGroup;, +            sublayerTransform = shapeTransform.getRotation().getObservable();, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteLayerView.java, +        childContainerLayer.sublayerTransform = layerModel.getRotation().getObservable();, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteAnimatableLayer.java, +    private Observable<Number> alpha;, +    protected Observable<Number> sublayerTransform;, +            canvas.rotate((float) sublayerTransform.getValue());, +        throw new IllegalArgumentException("This shouldn't be used.");, +    }, +, +    public void setAlpha(Observable<Number> alpha) {, +        return (int) alpha.getValue();]