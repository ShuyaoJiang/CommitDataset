[+++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/AnimationFragment.kt, +import com.airbnb.lottie.LottieDrawable, +            if (view.loop.isActivated) {, +                view.animationView.repeatCount = LottieDrawable.INFINITE, +            } else {, +                view.animationView.repeatCount = 0, +            }, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/AnimationFragment.kt, +import com.airbnb.lottie.LottieDrawable, +            if (view.loop.isActivated) {, +                view.animationView.repeatCount = LottieDrawable.INFINITE, +            } else {, +                view.animationView.repeatCount = 0, +            }, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/LottieFontViewGroup.kt, +import com.airbnb.lottie.LottieDrawable, +            cursorView.repeatCount = LottieDrawable.INFINITE, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/AnimationFragment.kt, +import com.airbnb.lottie.LottieDrawable, +            if (view.loop.isActivated) {, +                view.animationView.repeatCount = LottieDrawable.INFINITE, +            } else {, +                view.animationView.repeatCount = 0, +            }, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/LottieFontViewGroup.kt, +import com.airbnb.lottie.LottieDrawable, +            cursorView.repeatCount = LottieDrawable.INFINITE, +++ b/LottieSample/src/main/res/layout/view_holder_grid_item.xml, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/AnimationFragment.kt, +import com.airbnb.lottie.LottieDrawable, +            if (view.loop.isActivated) {, +                view.animationView.repeatCount = LottieDrawable.INFINITE, +            } else {, +                view.animationView.repeatCount = 0, +            }, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/LottieFontViewGroup.kt, +import com.airbnb.lottie.LottieDrawable, +            cursorView.repeatCount = LottieDrawable.INFINITE, +++ b/LottieSample/src/main/res/layout/view_holder_grid_item.xml, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +, +    if (ta.getBoolean(R.styleable.LottieAnimationView_lottie_loop, false)) {, +      lottieDrawable.setRepeatCount(LottieDrawable.INFINITE);, +    }, +, +    if (ta.hasValue(R.styleable.LottieAnimationView_lottie_repeatMode)) {, +      setRepeatMode(ta.getInt(R.styleable.LottieAnimationView_lottie_repeatMode,, +          LottieDrawable.RESTART));, +    }, +, +    if (ta.hasValue(R.styleable.LottieAnimationView_lottie_repeatCount)) {, +      setRepeatCount(ta.getInt(R.styleable.LottieAnimationView_lottie_repeatCount,, +          LottieDrawable.INFINITE));, +    }, +, +    ss.repeatMode = lottieDrawable.getRepeatMode();, +    ss.repeatCount = lottieDrawable.getRepeatCount();, +    setRepeatMode(ss.repeatMode);, +    setRepeatCount(ss.repeatCount);, +  /**, +   * @see #setRepeatCount(int), +   */, +  @Deprecated, +  /**, +   * Defines what this animation should do when it reaches the end. This, +   * setting is applied only when the repeat count is either greater than, +   * 0 or {@link LottieDrawable#INFINITE}. Defaults to {@link LottieDrawable#RESTART}., +   *, +   * @param mode {@link LottieDrawable#RESTART} or {@link LottieDrawable#REVERSE}, +   */, +  public void setRepeatMode(@LottieDrawable.RepeatMode int mode) {, +    lottieDrawable.setRepeatMode(mode);, +  }, +, +  /**, +   * Defines what this animation should do when it reaches the end., +   *, +   * @return either one of {@link LottieDrawable#REVERSE} or {@link LottieDrawable#RESTART}, +   */, +  @LottieDrawable.RepeatMode, +  public int getRepeatMode() {, +    return lottieDrawable.getRepeatMode();, +  }, +, +  /**, +   * Sets how many times the animation should be repeated. If the repeat, +   * count is 0, the animation is never repeated. If the repeat count is, +   * greater than 0 or {@link LottieDrawable#INFINITE}, the repeat mode will be taken, +   * into account. The repeat count is 0 by default., +   *, +   * @param count the number of times the animation should be repeated, +   */, +  public void setRepeatCount(int count) {, +    lottieDrawable.setRepeatCount(count);, +  }, +, +  /**, +   * Defines how many times the animation should repeat. The default value, +   * is 0., +   *]