[+++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/PlayerFragment.kt, +, +            invertColor(it), +            bb.setOnClickListener {, +                animationContainer.setBackgroundColor(bb.getColor()), +                invertColor(bb.getColor()), +            }, +    private fun invertColor(color: Int) {, +        val isDarkBg = color.isDark(), +        animationView.isActivated = isDarkBg, +        toolbar.isActivated = isDarkBg, +    }, +, +    private fun Int.isDark(): Boolean {, +        val y = (299 * Color.red(this) + 587 * Color.green(this) + 114 * Color.blue(this)) / 1000, +        return y < 128, +    }, +, +                val menuIcon = if (item.isChecked) R.drawable.ic_eye_teal else R.drawable.ic_eye_selector, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/PlayerFragment.kt, +, +            invertColor(it), +            bb.setOnClickListener {, +                animationContainer.setBackgroundColor(bb.getColor()), +                invertColor(bb.getColor()), +            }, +    private fun invertColor(color: Int) {, +        val isDarkBg = color.isDark(), +        animationView.isActivated = isDarkBg, +        toolbar.isActivated = isDarkBg, +    }, +, +    private fun Int.isDark(): Boolean {, +        val y = (299 * Color.red(this) + 587 * Color.green(this) + 114 * Color.blue(this)) / 1000, +        return y < 128, +    }, +, +                val menuIcon = if (item.isChecked) R.drawable.ic_eye_teal else R.drawable.ic_eye_selector, +++ b/LottieSample/src/main/res/drawable/ic_eye_selector.xml, +<?xml version="1.0" encoding="utf-8"?>, +<selector xmlns:android="http://schemas.android.com/apk/res/android">, +    <item android:state_activated="true" android:drawable="@drawable/ic_eye_white" />, +    <item android:drawable="@drawable/ic_eye_black" />, +</selector>, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/PlayerFragment.kt, +, +            invertColor(it), +            bb.setOnClickListener {, +                animationContainer.setBackgroundColor(bb.getColor()), +                invertColor(bb.getColor()), +            }, +    private fun invertColor(color: Int) {, +        val isDarkBg = color.isDark(), +        animationView.isActivated = isDarkBg, +        toolbar.isActivated = isDarkBg, +    }, +, +    private fun Int.isDark(): Boolean {, +        val y = (299 * Color.red(this) + 587 * Color.green(this) + 114 * Color.blue(this)) / 1000, +        return y < 128, +    }, +, +                val menuIcon = if (item.isChecked) R.drawable.ic_eye_teal else R.drawable.ic_eye_selector, +++ b/LottieSample/src/main/res/drawable/ic_eye_selector.xml, +<?xml version="1.0" encoding="utf-8"?>, +<selector xmlns:android="http://schemas.android.com/apk/res/android">, +    <item android:state_activated="true" android:drawable="@drawable/ic_eye_white" />, +    <item android:drawable="@drawable/ic_eye_black" />, +</selector>, +++ b/LottieSample/src/main/res/drawable/ic_eye_white.xml, +<vector xmlns:android="http://schemas.android.com/apk/res/android", +        android:width="24dp", +        android:height="24dp", +        android:viewportWidth="24.0", +        android:viewportHeight="24.0">, +    <path, +        android:fillColor="#FFF", +        android:pathData="M12,4.5C7,4.5 2.73,7.61 1,12c1.73,4.39 6,7.5 11,7.5s9.27,-3.11 11,-7.5c-1.73,-4.39 -6,-7.5 -11,-7.5zM12,17c-2.76,0 -5,-2.24 -5,-5s2.24,-5 5,-5 5,2.24 5,5 -2.24,5 -5,5zM12,9c-1.66,0 -3,1.34 -3,3s1.34,3 3,3 3,-1.34 3,-3 -1.34,-3 -3,-3z"/>, +</vector>, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/PlayerFragment.kt, +, +            invertColor(it), +            bb.setOnClickListener {, +                animationContainer.setBackgroundColor(bb.getColor()), +                invertColor(bb.getColor()), +            }, +    private fun invertColor(color: Int) {, +        val isDarkBg = color.isDark(), +        animationView.isActivated = isDarkBg, +        toolbar.isActivated = isDarkBg, +    }, +, +    private fun Int.isDark(): Boolean {, +        val y = (299 * Color.red(this) + 587 * Color.green(this) + 114 * Color.blue(this)) / 1000, +        return y < 128, +    }, +, +                val menuIcon = if (item.isChecked) R.drawable.ic_eye_teal else R.drawable.ic_eye_selector, +++ b/LottieSample/src/main/res/drawable/ic_eye_selector.xml, +<?xml version="1.0" encoding="utf-8"?>]