[+++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteEllipseShapeLayer.java, +import android.graphics.Canvas;, +import android.graphics.Paint;, +import android.graphics.PointF;, +import android.graphics.RectF;, +import android.support.annotation.ColorInt;, +import android.support.annotation.NonNull;, +, +import com.airbnb.lotte.utils.LotteAnimationGroup;, +import com.airbnb.lotte.utils.LotteTransform3D;, +, +import java.util.List;, +, +    private final LotteShapeCircle circleShape;, +    private final LotteShapeFill fill;, +    private final LotteShapeStroke stroke;, +    private final LotteShapeTrimPath trim;, +    private final LotteShapeTransform transformModel;, +, +    private LotteCircleShapeLayer fillLayer;, +    private LotteCircleShapeLayer strokeLayer;, +, +    private LotteAnimationGroup animation;, +    private LotteAnimationGroup strokeAnimation;, +    private LotteAnimationGroup fillAnimation;, +, +        this.circleShape = circleShape;, +        this.fill = fill;, +        this.stroke = stroke;, +        this.trim = trim;, +        this.transformModel = transform;, +, +        setBounds(transform.getCompBounds());, +        anchorPoint = transform.getAnchor().getInitialPoint();, +        setAlpha((int) (transform.getOpacity().getInitialValue() * 255));, +        position = transform.getPosition().getInitialPoint();, +        this.transform = transform.getScale().getInitialScale();, +        sublayerTransform = new LotteTransform3D();, +        sublayerTransform.rotateZ((float) Math.toDegrees(transform.getRotation().getInitialValue()));, +, +        if (fill != null) {, +            fillLayer = new LotteCircleShapeLayer(duration);, +            fillLayer.setColor(fill.getColor().getInitialColor());, +            fillLayer.setAlpha((int) (fill.getOpacity().getInitialValue() * 255));, +            fillLayer.circlePosition = circleShape.getPosition().getInitialPoint();, +            fillLayer.circleSize = circleShape.getSize().getInitialPoint();, +            addLayer(fillLayer);, +        }, +, +        if (stroke != null) {, +            strokeLayer = new LotteCircleShapeLayer(duration);, +            strokeLayer.setStyle(Paint.Style.STROKE);, +            strokeLayer.setColor(stroke.getColor().getInitialColor());, +            strokeLayer.setAlpha((int) (stroke.getOpacity().getInitialValue() * 255));, +            strokeLayer.setLineWidth(stroke.getWidth().getInitialValue());, +            strokeLayer.setDashPattern(stroke.getLineDashPattern());, +            strokeLayer.setLineCapType(stroke.getCapType());, +            strokeLayer.circlePosition = circleShape.getPosition().getInitialPoint();, +            strokeLayer.circleSize = circleShape.getSize().getInitialPoint();, +            addLayer(strokeLayer);, +        }, +    }, +, +    private static final class LotteCircleShapeLayer extends LotteAnimatableLayer {, +, +        private final RectF rect = new RectF();, +        private final Paint paint = new Paint();, +, +        private PointF circleSize;, +        private PointF circlePosition;, +        private List<Float> lineDashPattern;, +        private LotteShapeStroke.LineCapType lineCapType;, +        private LotteShapeStroke.LineJoinType lineJoinType;, +, +        public LotteCircleShapeLayer(long duration) {, +            super(duration);, +            paint.setAntiAlias(true);, +            paint.setStyle(Paint.Style.FILL);, +        }, +, +        public void setStyle(Paint.Style style) {, +            paint.setStyle(style);, +        }, +, +        public void setLineWidth(float width) {, +            paint.setStrokeWidth(width);, +        }, +, +        public void setDashPattern(List<Float> lineDashPattern) {, +            this.lineDashPattern = lineDashPattern;, +        }, +, +        public void setLineCapType(LotteShapeStroke.LineCapType lineCapType) {, +            this.lineCapType = lineCapType;, +        }, +, +        public void setLineJoinType(LotteShapeStroke.LineJoinType lineJoinType) {, +            this.lineJoinType = lineJoinType;, +        }, +]