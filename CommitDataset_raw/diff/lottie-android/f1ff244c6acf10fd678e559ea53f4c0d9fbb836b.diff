[+++ b/lotte/src/main/java/com/airbnb/lotte/L.java, +package com.airbnb.lotte;, +, +public class L {, +    public static boolean DBG = true;, +}, +++ b/lotte/src/main/java/com/airbnb/lotte/L.java, +package com.airbnb.lotte;, +, +public class L {, +    public static boolean DBG = true;, +}, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteAnimatableLayer.java, +import android.graphics.Color;, +import android.support.annotation.NonNull;, +import android.util.Log;, +, +import com.airbnb.lotte.L;, +import com.airbnb.lotte.utils.LotteTransform3D;, +@SuppressWarnings({"unused", "WeakerAccess"}), +    private static final String TAG = LotteAnimatableLayer.class.getSimpleName();, +    private final List<Drawable> layers = new ArrayList<>();, +    protected LotteTransform3D transform;, +    protected LotteTransform3D sublayerTransform;, +    public void draw(@NonNull Canvas canvas) {, +        canvas.save();, +        if (transform != null) {, +            canvas.scale(transform.getScaleX(), transform.getScaleY());, +        }, +, +, +        if (anchorPoint != null) {, +            canvas.translate(-anchorPoint.x, -anchorPoint.y);, +        }, +, +        if (solidBackgroundPaint.getColor() != Color.BLACK) {, +            canvas.drawRect(getBounds(), solidBackgroundPaint);, +           if (L.DBG) Log.d(TAG, "Drawing solid " + Integer.toHexString(solidBackgroundPaint.getColor()) + " at " + getBounds().toShortString() + " canvas " + canvas.getWidth() + "x" + canvas.getHeight());, +        }, +        canvas.restore();, +, +        canvas.clipRect(getBounds());, +++ b/lotte/src/main/java/com/airbnb/lotte/L.java, +package com.airbnb.lotte;, +, +public class L {, +    public static boolean DBG = true;, +}, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteAnimatableLayer.java, +import android.graphics.Color;, +import android.support.annotation.NonNull;, +import android.util.Log;, +, +import com.airbnb.lotte.L;, +import com.airbnb.lotte.utils.LotteTransform3D;, +@SuppressWarnings({"unused", "WeakerAccess"}), +    private static final String TAG = LotteAnimatableLayer.class.getSimpleName();, +    private final List<Drawable> layers = new ArrayList<>();, +    protected LotteTransform3D transform;, +    protected LotteTransform3D sublayerTransform;, +    public void draw(@NonNull Canvas canvas) {, +        canvas.save();, +        if (transform != null) {, +            canvas.scale(transform.getScaleX(), transform.getScaleY());, +        }, +, +, +        if (anchorPoint != null) {, +            canvas.translate(-anchorPoint.x, -anchorPoint.y);, +        }, +, +        if (solidBackgroundPaint.getColor() != Color.BLACK) {, +            canvas.drawRect(getBounds(), solidBackgroundPaint);, +           if (L.DBG) Log.d(TAG, "Drawing solid " + Integer.toHexString(solidBackgroundPaint.getColor()) + " at " + getBounds().toShortString() + " canvas " + canvas.getWidth() + "x" + canvas.getHeight());, +        }, +        canvas.restore();, +, +        canvas.clipRect(getBounds());, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteGroupLayerView.java, +import com.airbnb.lotte.utils.LotteTransform3D;, +            sublayerTransform = new LotteTransform3D();, +++ b/lotte/src/main/java/com/airbnb/lotte/L.java, +package com.airbnb.lotte;, +, +public class L {, +    public static boolean DBG = true;, +}, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteAnimatableLayer.java, +import android.graphics.Color;, +import android.support.annotation.NonNull;, +import android.util.Log;, +, +import com.airbnb.lotte.L;, +import com.airbnb.lotte.utils.LotteTransform3D;, +@SuppressWarnings({"unused", "WeakerAccess"}), +    private static final String TAG = LotteAnimatableLayer.class.getSimpleName();, +    private final List<Drawable> layers = new ArrayList<>();, +    protected LotteTransform3D transform;, +    protected LotteTransform3D sublayerTransform;, +    public void draw(@NonNull Canvas canvas) {]