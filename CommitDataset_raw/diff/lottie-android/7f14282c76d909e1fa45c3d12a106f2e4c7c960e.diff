[+++ /dev/null, +++ /dev/null, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteRectShapeLayer.java, +        private Observable<Float> lineWidth;, +        private Observable<Float> rectCornerRadius;, +        private void setIsStroke() {, +        void setLineWidth(Observable<Float> lineWidth) {, +            paint.setStrokeWidth(lineWidth.getValue());, +                values[i] = lineDashPattern.get(i).getObservable().getValue();, +            paint.setPathEffect(new DashPathEffect(values, lineDashPatternOffset.getObservable().getValue()));, +        void setRectCornerRadius(Observable<Float> rectCornerRadius) {, +            if (rectCornerRadius.getValue() == 0) {, +                canvas.drawRoundRect(fillRect, rectCornerRadius.getValue(), rectCornerRadius.getValue(), paint);, +++ /dev/null, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteRectShapeLayer.java, +        private Observable<Float> lineWidth;, +        private Observable<Float> rectCornerRadius;, +        private void setIsStroke() {, +        void setLineWidth(Observable<Float> lineWidth) {, +            paint.setStrokeWidth(lineWidth.getValue());, +                values[i] = lineDashPattern.get(i).getObservable().getValue();, +            paint.setPathEffect(new DashPathEffect(values, lineDashPatternOffset.getObservable().getValue()));, +        void setRectCornerRadius(Observable<Float> rectCornerRadius) {, +            if (rectCornerRadius.getValue() == 0) {, +                canvas.drawRoundRect(fillRect, rectCornerRadius.getValue(), rectCornerRadius.getValue(), paint);, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteShapeLayer.java, +    private Observable<Float> lineWidth;, +    @Nullable private Observable<Float> strokeStart;, +    @Nullable private Observable<Float> strokeEnd;, +    void setLineWidth(Observable<Float> lineWidth) {, +        paint.setStrokeWidth(lineWidth.getValue());, +    void setTrimPath(Observable<Float> strokeStart, Observable<Float> strokeEnd) {, +            float strokeStartVal = strokeStart.getValue();, +            float strokeEndVal = strokeEnd.getValue();, +++ /dev/null, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteRectShapeLayer.java, +        private Observable<Float> lineWidth;, +        private Observable<Float> rectCornerRadius;, +        private void setIsStroke() {, +        void setLineWidth(Observable<Float> lineWidth) {, +            paint.setStrokeWidth(lineWidth.getValue());, +                values[i] = lineDashPattern.get(i).getObservable().getValue();, +            paint.setPathEffect(new DashPathEffect(values, lineDashPatternOffset.getObservable().getValue()));, +        void setRectCornerRadius(Observable<Float> rectCornerRadius) {, +            if (rectCornerRadius.getValue() == 0) {, +                canvas.drawRoundRect(fillRect, rectCornerRadius.getValue(), rectCornerRadius.getValue(), paint);, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteShapeLayer.java, +    private Observable<Float> lineWidth;, +    @Nullable private Observable<Float> strokeStart;, +    @Nullable private Observable<Float> strokeEnd;, +    void setLineWidth(Observable<Float> lineWidth) {, +        paint.setStrokeWidth(lineWidth.getValue());, +    void setTrimPath(Observable<Float> strokeStart, Observable<Float> strokeEnd) {, +            float strokeStartVal = strokeStart.getValue();, +            float strokeEndVal = strokeEnd.getValue();, +++ b/lotte/src/main/java/com/airbnb/lotte/model/LotteShapeRectangle.java, +import com.airbnb.lotte.animation.LotteAnimatableFloatValue;, +    private LotteAnimatableFloatValue cornerRadius;, +    LotteShapeRectangle(JSONObject json, int frameRate, long compDuration) {, +            cornerRadius = new LotteAnimatableFloatValue(cornerRadiusJson, frameRate, compDuration);, +    public LotteAnimatableFloatValue getCornerRadius() {, +++ /dev/null, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteRectShapeLayer.java, +        private Observable<Float> lineWidth;, +        private Observable<Float> rectCornerRadius;, +        private void setIsStroke() {, +        void setLineWidth(Observable<Float> lineWidth) {, +            paint.setStrokeWidth(lineWidth.getValue());, +                values[i] = lineDashPattern.get(i).getObservable().getValue();, +            paint.setPathEffect(new DashPathEffect(values, lineDashPatternOffset.getObservable().getValue()));, +        void setRectCornerRadius(Observable<Float> rectCornerRadius) {, +            if (rectCornerRadius.getValue() == 0) {, +                canvas.drawRoundRect(fillRect, rectCornerRadius.getValue(), rectCornerRadius.getValue(), paint);, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteShapeLayer.java, +    private Observable<Float> lineWidth;, +    @Nullable private Observable<Float> strokeStart;, +    @Nullable private Observable<Float> strokeEnd;, +    void setLineWidth(Observable<Float> lineWidth) {, +        paint.setStrokeWidth(lineWidth.getValue());, +    void setTrimPath(Observable<Float> strokeStart, Observable<Float> strokeEnd) {, +            float strokeStartVal = strokeStart.getValue();, +            float strokeEndVal = strokeEnd.getValue();, +++ b/lotte/src/main/java/com/airbnb/lotte/model/LotteShapeRectangle.java, +import com.airbnb.lotte.animation.LotteAnimatableFloatValue;, +    private LotteAnimatableFloatValue cornerRadius;, +    LotteShapeRectangle(JSONObject json, int frameRate, long compDuration) {, +            cornerRadius = new LotteAnimatableFloatValue(cornerRadiusJson, frameRate, compDuration);, +    public LotteAnimatableFloatValue getCornerRadius() {, +++ b/lotte/src/main/java/com/airbnb/lotte/model/LotteShapeStroke.java, +    private LotteAnimatableFloatValue width;, +            width = new LotteAnimatableFloatValue(widthJson, frameRate, compDuration);, +    public LotteAnimatableFloatValue getWidth() {, +++ /dev/null, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteRectShapeLayer.java, +        private Observable<Float> lineWidth;, +        private Observable<Float> rectCornerRadius;, +        private void setIsStroke() {, +        void setLineWidth(Observable<Float> lineWidth) {, +            paint.setStrokeWidth(lineWidth.getValue());, +                values[i] = lineDashPattern.get(i).getObservable().getValue();]