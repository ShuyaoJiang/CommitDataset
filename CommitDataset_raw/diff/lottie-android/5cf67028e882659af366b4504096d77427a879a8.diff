[+++ b/LottieSample/src/main/java/com/airbnb/lottie/samples/AnimationFragment.java, +    animationView.setPerformanceTrackingEnabled(true);, +        //noinspection ConstantConditions, +        animationView.getPerformanceTracker().logRenderTimes();, +        //noinspection ConstantConditions, +        animationView.getPerformanceTracker().logRenderTimes();, +        animationView.getPerformanceTracker().clearRenderTimes();, +++ b/LottieSample/src/main/java/com/airbnb/lottie/samples/AnimationFragment.java, +    animationView.setPerformanceTrackingEnabled(true);, +        //noinspection ConstantConditions, +        animationView.getPerformanceTracker().logRenderTimes();, +        //noinspection ConstantConditions, +        animationView.getPerformanceTracker().logRenderTimes();, +        animationView.getPerformanceTracker().clearRenderTimes();, +++ b/lottie/src/main/java/com/airbnb/lottie/BaseLayer.java, +import android.annotation.SuppressLint;, +  @SuppressLint("WrongConstant") @Override, +      recordRenderTime(L.endSection(traceSections.draw));, +    recordRenderTime(L.endSection(traceSections.draw));, +  }, +, +  private void recordRenderTime(float ms) {, +    lottieDrawable.getComposition(), +        .getPerformanceTracker().recordRenderTime(layerModel.getName(), ms);, +, +++ b/LottieSample/src/main/java/com/airbnb/lottie/samples/AnimationFragment.java, +    animationView.setPerformanceTrackingEnabled(true);, +        //noinspection ConstantConditions, +        animationView.getPerformanceTracker().logRenderTimes();, +        //noinspection ConstantConditions, +        animationView.getPerformanceTracker().logRenderTimes();, +        animationView.getPerformanceTracker().clearRenderTimes();, +++ b/lottie/src/main/java/com/airbnb/lottie/BaseLayer.java, +import android.annotation.SuppressLint;, +  @SuppressLint("WrongConstant") @Override, +      recordRenderTime(L.endSection(traceSections.draw));, +    recordRenderTime(L.endSection(traceSections.draw));, +  }, +, +  private void recordRenderTime(float ms) {, +    lottieDrawable.getComposition(), +        .getPerformanceTracker().recordRenderTime(layerModel.getName(), ms);, +, +++ b/lottie/src/main/java/com/airbnb/lottie/L.java, +  private static long[] startTimeNs;, +      startTimeNs = new long[MAX_DEPTH];, +    startTimeNs[traceDepth] = System.nanoTime();, +  static float endSection(String section) {, +    return (System.nanoTime() - startTimeNs[traceDepth + 1]) / 1000000f;, +++ b/LottieSample/src/main/java/com/airbnb/lottie/samples/AnimationFragment.java, +    animationView.setPerformanceTrackingEnabled(true);, +        //noinspection ConstantConditions, +        animationView.getPerformanceTracker().logRenderTimes();, +        //noinspection ConstantConditions, +        animationView.getPerformanceTracker().logRenderTimes();, +        animationView.getPerformanceTracker().clearRenderTimes();, +++ b/lottie/src/main/java/com/airbnb/lottie/BaseLayer.java, +import android.annotation.SuppressLint;, +  @SuppressLint("WrongConstant") @Override, +      recordRenderTime(L.endSection(traceSections.draw));, +    recordRenderTime(L.endSection(traceSections.draw));, +  }, +, +  private void recordRenderTime(float ms) {, +    lottieDrawable.getComposition(), +        .getPerformanceTracker().recordRenderTime(layerModel.getName(), ms);, +, +++ b/lottie/src/main/java/com/airbnb/lottie/L.java, +  private static long[] startTimeNs;, +      startTimeNs = new long[MAX_DEPTH];, +    startTimeNs[traceDepth] = System.nanoTime();, +  static float endSection(String section) {, +    return (System.nanoTime() - startTimeNs[traceDepth + 1]) / 1000000f;, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +  public void setPerformanceTrackingEnabled(boolean enabled) {, +    lottieDrawable.setPerformanceTrackingEnabled(enabled);, +  }, +, +  @Nullable, +  public PerformanceTracker getPerformanceTracker() {, +    return lottieDrawable.getPerformanceTracker();, +  }, +, +++ b/LottieSample/src/main/java/com/airbnb/lottie/samples/AnimationFragment.java, +    animationView.setPerformanceTrackingEnabled(true);, +        //noinspection ConstantConditions, +        animationView.getPerformanceTracker().logRenderTimes();, +        //noinspection ConstantConditions, +        animationView.getPerformanceTracker().logRenderTimes();, +        animationView.getPerformanceTracker().clearRenderTimes();, +++ b/lottie/src/main/java/com/airbnb/lottie/BaseLayer.java, +import android.annotation.SuppressLint;, +  @SuppressLint("WrongConstant") @Override, +      recordRenderTime(L.endSection(traceSections.draw));, +    recordRenderTime(L.endSection(traceSections.draw));, +  }, +, +  private void recordRenderTime(float ms) {, +    lottieDrawable.getComposition(), +        .getPerformanceTracker().recordRenderTime(layerModel.getName(), ms);]