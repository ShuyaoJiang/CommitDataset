[+++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/DynamicActivity.kt, +import android.util.Log, +import kotlinx.android.synthetic.main.activity_dynamic.animationView, +import kotlinx.android.synthetic.main.activity_dynamic.colorButton, +import kotlinx.android.synthetic.main.activity_dynamic.jumpHeight, +import kotlinx.android.synthetic.main.activity_dynamic.speedButton, +, +    companion object {, +        val TAG = DynamicActivity::class.simpleName, +    }, +, +        animationView.addLottieOnCompositionLoadedListener { _ ->, +            animationView.resolveKeyPath(KeyPath("**")).forEach {, +                Log.d(TAG, it.keysToString()), +            }, +        }, +, +        animationView.addValueCallback(KeyPath("LeftArmWave"),, +            LottieProperty.TIME_REMAP) { frameInfo ->, +        animationView.addValueCallback(KeyPath("Body"),, +            LottieProperty.TRANSFORM_POSITION) { frameInfo ->, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/DynamicActivity.kt, +import android.util.Log, +import kotlinx.android.synthetic.main.activity_dynamic.animationView, +import kotlinx.android.synthetic.main.activity_dynamic.colorButton, +import kotlinx.android.synthetic.main.activity_dynamic.jumpHeight, +import kotlinx.android.synthetic.main.activity_dynamic.speedButton, +, +    companion object {, +        val TAG = DynamicActivity::class.simpleName, +    }, +, +        animationView.addLottieOnCompositionLoadedListener { _ ->, +            animationView.resolveKeyPath(KeyPath("**")).forEach {, +                Log.d(TAG, it.keysToString()), +            }, +        }, +, +        animationView.addValueCallback(KeyPath("LeftArmWave"),, +            LottieProperty.TIME_REMAP) { frameInfo ->, +        animationView.addValueCallback(KeyPath("Body"),, +            LottieProperty.TRANSFORM_POSITION) { frameInfo ->, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/LottieApplication.kt, +        L.DBG = true, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/DynamicActivity.kt, +import android.util.Log, +import kotlinx.android.synthetic.main.activity_dynamic.animationView, +import kotlinx.android.synthetic.main.activity_dynamic.colorButton, +import kotlinx.android.synthetic.main.activity_dynamic.jumpHeight, +import kotlinx.android.synthetic.main.activity_dynamic.speedButton, +, +    companion object {, +        val TAG = DynamicActivity::class.simpleName, +    }, +, +        animationView.addLottieOnCompositionLoadedListener { _ ->, +            animationView.resolveKeyPath(KeyPath("**")).forEach {, +                Log.d(TAG, it.keysToString()), +            }, +        }, +, +        animationView.addValueCallback(KeyPath("LeftArmWave"),, +            LottieProperty.TIME_REMAP) { frameInfo ->, +        animationView.addValueCallback(KeyPath("Body"),, +            LottieProperty.TRANSFORM_POSITION) { frameInfo ->, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/LottieApplication.kt, +        L.DBG = true, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +import java.util.HashSet;, +  private Set<LottieOnCompositionLoadedListener> lottieOnCompositionLoadedListeners = new HashSet<>();, +, +    for (LottieOnCompositionLoadedListener lottieOnCompositionLoadedListener : lottieOnCompositionLoadedListeners) {, +        lottieOnCompositionLoadedListener.onCompositionLoaded(composition);, +    }, +, +  public boolean addLottieOnCompositionLoadedListener(@NonNull LottieOnCompositionLoadedListener lottieOnCompositionLoadedListener) {, +    return lottieOnCompositionLoadedListeners.add(lottieOnCompositionLoadedListener);, +  }, +, +  public boolean removeLottieOnCompositionLoadedListener(@NonNull LottieOnCompositionLoadedListener lottieOnCompositionLoadedListener) {, +    return lottieOnCompositionLoadedListeners.remove(lottieOnCompositionLoadedListener);, +  }, +, +  public void removeAllLottieOnCompositionLoadedListener() {, +    lottieOnCompositionLoadedListeners.clear();, +  }, +, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/DynamicActivity.kt, +import android.util.Log, +import kotlinx.android.synthetic.main.activity_dynamic.animationView, +import kotlinx.android.synthetic.main.activity_dynamic.colorButton, +import kotlinx.android.synthetic.main.activity_dynamic.jumpHeight, +import kotlinx.android.synthetic.main.activity_dynamic.speedButton, +, +    companion object {, +        val TAG = DynamicActivity::class.simpleName, +    }, +, +        animationView.addLottieOnCompositionLoadedListener { _ ->, +            animationView.resolveKeyPath(KeyPath("**")).forEach {]