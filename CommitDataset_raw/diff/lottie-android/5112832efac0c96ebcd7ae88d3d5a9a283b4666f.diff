[+++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +import com.airbnb.lottie.model.LottieComposition;, +    @Nullable private LottieComposition composition;, +        jsonToCompositionTask = new AsyncTask<JSONObject, Void, LottieComposition>() {, +            protected LottieComposition doInBackground(JSONObject... params) {, +                return LottieComposition.fromJson(params[0]);, +            protected void onPostExecute(LottieComposition model) {, +        LottieComposition composition = LottieComposition.fromJson(json);, +    private void setComposition(@NonNull LottieComposition composition) {, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +import com.airbnb.lottie.model.LottieComposition;, +    @Nullable private LottieComposition composition;, +        jsonToCompositionTask = new AsyncTask<JSONObject, Void, LottieComposition>() {, +            protected LottieComposition doInBackground(JSONObject... params) {, +                return LottieComposition.fromJson(params[0]);, +            protected void onPostExecute(LottieComposition model) {, +        LottieComposition composition = LottieComposition.fromJson(json);, +    private void setComposition(@NonNull LottieComposition composition) {, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/LayerView.java, +import com.airbnb.lottie.model.LottieComposition;, +    private final LottieComposition composition;, +    public LayerView(Layer layerModel, LottieComposition composition, Callback callback, @Nullable Bitmap mainBitmap, @Nullable Bitmap maskBitmap, @Nullable Bitmap matteBitmap) {, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +import com.airbnb.lottie.model.LottieComposition;, +    @Nullable private LottieComposition composition;, +        jsonToCompositionTask = new AsyncTask<JSONObject, Void, LottieComposition>() {, +            protected LottieComposition doInBackground(JSONObject... params) {, +                return LottieComposition.fromJson(params[0]);, +            protected void onPostExecute(LottieComposition model) {, +        LottieComposition composition = LottieComposition.fromJson(json);, +    private void setComposition(@NonNull LottieComposition composition) {, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/LayerView.java, +import com.airbnb.lottie.model.LottieComposition;, +    private final LottieComposition composition;, +    public LayerView(Layer layerModel, LottieComposition composition, Callback callback, @Nullable Bitmap mainBitmap, @Nullable Bitmap maskBitmap, @Nullable Bitmap matteBitmap) {, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/MaskLayer.java, +import com.airbnb.lottie.model.LottieComposition;, +    MaskLayer(List<Mask> masks, LottieComposition composition, Drawable.Callback callback) {, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +import com.airbnb.lottie.model.LottieComposition;, +    @Nullable private LottieComposition composition;, +        jsonToCompositionTask = new AsyncTask<JSONObject, Void, LottieComposition>() {, +            protected LottieComposition doInBackground(JSONObject... params) {, +                return LottieComposition.fromJson(params[0]);, +            protected void onPostExecute(LottieComposition model) {, +        LottieComposition composition = LottieComposition.fromJson(json);, +    private void setComposition(@NonNull LottieComposition composition) {, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/LayerView.java, +import com.airbnb.lottie.model.LottieComposition;, +    private final LottieComposition composition;, +    public LayerView(Layer layerModel, LottieComposition composition, Callback callback, @Nullable Bitmap mainBitmap, @Nullable Bitmap maskBitmap, @Nullable Bitmap matteBitmap) {, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/MaskLayer.java, +import com.airbnb.lottie.model.LottieComposition;, +    MaskLayer(List<Mask> masks, LottieComposition composition, Drawable.Callback callback) {, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/ParentLayer.java, +import com.airbnb.lottie.model.LottieComposition;, +    ParentLayer(Layer parent, LottieComposition composition, Drawable.Callback callback) {, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +import com.airbnb.lottie.model.LottieComposition;, +    @Nullable private LottieComposition composition;, +        jsonToCompositionTask = new AsyncTask<JSONObject, Void, LottieComposition>() {, +            protected LottieComposition doInBackground(JSONObject... params) {, +                return LottieComposition.fromJson(params[0]);, +            protected void onPostExecute(LottieComposition model) {, +        LottieComposition composition = LottieComposition.fromJson(json);, +    private void setComposition(@NonNull LottieComposition composition) {, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/LayerView.java, +import com.airbnb.lottie.model.LottieComposition;, +    private final LottieComposition composition;, +    public LayerView(Layer layerModel, LottieComposition composition, Callback callback, @Nullable Bitmap mainBitmap, @Nullable Bitmap maskBitmap, @Nullable Bitmap matteBitmap) {, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/MaskLayer.java, +import com.airbnb.lottie.model.LottieComposition;, +    MaskLayer(List<Mask> masks, LottieComposition composition, Drawable.Callback callback) {, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/ParentLayer.java, +import com.airbnb.lottie.model.LottieComposition;, +    ParentLayer(Layer parent, LottieComposition composition, Drawable.Callback callback) {, +++ /dev/null, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +import com.airbnb.lottie.model.LottieComposition;, +    @Nullable private LottieComposition composition;, +        jsonToCompositionTask = new AsyncTask<JSONObject, Void, LottieComposition>() {, +            protected LottieComposition doInBackground(JSONObject... params) {, +                return LottieComposition.fromJson(params[0]);, +            protected void onPostExecute(LottieComposition model) {, +        LottieComposition composition = LottieComposition.fromJson(json);, +    private void setComposition(@NonNull LottieComposition composition) {, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/LayerView.java, +import com.airbnb.lottie.model.LottieComposition;, +    private final LottieComposition composition;, +    public LayerView(Layer layerModel, LottieComposition composition, Callback callback, @Nullable Bitmap mainBitmap, @Nullable Bitmap maskBitmap, @Nullable Bitmap matteBitmap) {, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/MaskLayer.java, +import com.airbnb.lottie.model.LottieComposition;, +    MaskLayer(List<Mask> masks, LottieComposition composition, Drawable.Callback callback) {, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/ParentLayer.java, +import com.airbnb.lottie.model.LottieComposition;, +    ParentLayer(Layer parent, LottieComposition composition, Drawable.Callback callback) {, +++ /dev/null, +++ b/lottie/src/main/java/com/airbnb/lottie/model/Layer.java, +    static Layer fromJson(JSONObject json, LottieComposition composition) {, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java]