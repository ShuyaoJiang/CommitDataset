[+++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableColorValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableColorValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableNumberValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);, +                Float startValue = keyframe.has("s") ? numberValueFromObject(keyframe.get("s")) : null;, +                Float endValue = keyframe.has("e") ? numberValueFromObject(keyframe.get("e")) : null;, +            throw new IllegalArgumentException("Unable to parse animatable number value.", e);, +        } else if (valueObject instanceof JSONArray && ((JSONArray) valueObject).get(0) instanceof Integer) {, +            return new Float(((JSONArray) valueObject).getInt(0));, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableColorValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableNumberValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);, +                Float startValue = keyframe.has("s") ? numberValueFromObject(keyframe.get("s")) : null;, +                Float endValue = keyframe.has("e") ? numberValueFromObject(keyframe.get("e")) : null;, +            throw new IllegalArgumentException("Unable to parse animatable number value.", e);, +        } else if (valueObject instanceof JSONArray && ((JSONArray) valueObject).get(0) instanceof Integer) {, +            return new Float(((JSONArray) valueObject).getInt(0));, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatablePointValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableColorValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableNumberValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);, +                Float startValue = keyframe.has("s") ? numberValueFromObject(keyframe.get("s")) : null;, +                Float endValue = keyframe.has("e") ? numberValueFromObject(keyframe.get("e")) : null;, +            throw new IllegalArgumentException("Unable to parse animatable number value.", e);, +        } else if (valueObject instanceof JSONArray && ((JSONArray) valueObject).get(0) instanceof Integer) {, +            return new Float(((JSONArray) valueObject).getInt(0));, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatablePointValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableProperty.java, +            RECT_POSITION, RECT_CORNER_RADIUS, BACKGROUND_COLOR, HIDDEN, TRIM_PATH_START, TRIM_PATH_END, TRIM_PATH_OFFSET}), +    public static final int TRIM_PATH_START = 13;, +    public static final int TRIM_PATH_END = 14;, +    public static final int TRIM_PATH_OFFSET = 15;, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableColorValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableNumberValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);, +                Float startValue = keyframe.has("s") ? numberValueFromObject(keyframe.get("s")) : null;, +                Float endValue = keyframe.has("e") ? numberValueFromObject(keyframe.get("e")) : null;, +            throw new IllegalArgumentException("Unable to parse animatable number value.", e);, +        } else if (valueObject instanceof JSONArray && ((JSONArray) valueObject).get(0) instanceof Integer) {, +            return new Float(((JSONArray) valueObject).getInt(0));, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatablePointValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableProperty.java, +            RECT_POSITION, RECT_CORNER_RADIUS, BACKGROUND_COLOR, HIDDEN, TRIM_PATH_START, TRIM_PATH_END, TRIM_PATH_OFFSET}), +    public static final int TRIM_PATH_START = 13;, +    public static final int TRIM_PATH_END = 14;, +    public static final int TRIM_PATH_OFFSET = 15;, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableScaleValue.java, +            duration = (long) (durationFrames / (float) frameRate * 1000);, +            delay = (long) (startFrame / (float) frameRate * 1000);, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableColorValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableNumberValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);, +                Float startValue = keyframe.has("s") ? numberValueFromObject(keyframe.get("s")) : null;, +                Float endValue = keyframe.has("e") ? numberValueFromObject(keyframe.get("e")) : null;, +            throw new IllegalArgumentException("Unable to parse animatable number value.", e);, +        } else if (valueObject instanceof JSONArray && ((JSONArray) valueObject).get(0) instanceof Integer) {, +            return new Float(((JSONArray) valueObject).getInt(0));, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatablePointValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableProperty.java, +            RECT_POSITION, RECT_CORNER_RADIUS, BACKGROUND_COLOR, HIDDEN, TRIM_PATH_START, TRIM_PATH_END, TRIM_PATH_OFFSET}), +    public static final int TRIM_PATH_START = 13;, +    public static final int TRIM_PATH_END = 14;, +    public static final int TRIM_PATH_OFFSET = 15;, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableScaleValue.java, +            duration = (long) (durationFrames / (float) frameRate * 1000);, +            delay = (long) (startFrame / (float) frameRate * 1000);, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableShapeValue.java, +            duration = (long) (durationFrames / (float) frameRate * 1000);, +            delay = (long) (startFrame / (float) frameRate * 1000);, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableColorValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableNumberValue.java, +                    duration = (long) (durationFrames / (float) frameRate * 1000);, +                    delay = (long) (startFrame / (float) frameRate * 1000);]