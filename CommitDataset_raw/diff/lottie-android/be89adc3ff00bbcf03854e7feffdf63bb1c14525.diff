[+++ b/lottie/src/main/java/com/airbnb/lottie/layers/AnimatableLayer.java, +import com.airbnb.lottie.utils.ScaleXY;, +    private Observable<Integer> alpha = null;, +    @ColorInt private int backgroundColor;, +        this.backgroundColor = color;, +        int backgroundAlpha = Color.alpha(backgroundColor);, +        if (backgroundAlpha != 0) {, +            int alpha = backgroundAlpha;, +            if (this.alpha != null) {, +                alpha = alpha * this.alpha.getValue() / 255;, +            }, +            solidBackgroundPaint.setAlpha(alpha);, +        if (this.alpha != null) {, +            this.alpha.removeChangeListener(changedListener);, +        }, +        alpha.addChangeListener(changedListener);, +        for (AnimatableLayer layer : layers) {, +            layer.setAlpha(alpha);, +        }, +, +        if (this.alpha != null) {, +            layer.setAlpha(this.alpha);, +        }, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/AnimatableLayer.java, +import com.airbnb.lottie.utils.ScaleXY;, +    private Observable<Integer> alpha = null;, +    @ColorInt private int backgroundColor;, +        this.backgroundColor = color;, +        int backgroundAlpha = Color.alpha(backgroundColor);, +        if (backgroundAlpha != 0) {, +            int alpha = backgroundAlpha;, +            if (this.alpha != null) {, +                alpha = alpha * this.alpha.getValue() / 255;, +            }, +            solidBackgroundPaint.setAlpha(alpha);, +        if (this.alpha != null) {, +            this.alpha.removeChangeListener(changedListener);, +        }, +        alpha.addChangeListener(changedListener);, +        for (AnimatableLayer layer : layers) {, +            layer.setAlpha(alpha);, +        }, +, +        if (this.alpha != null) {, +            layer.setAlpha(this.alpha);, +        }, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/LayerView.java, +        setAlpha(layerModel.getOpacity().getObservable());]