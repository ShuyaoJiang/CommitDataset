[+++ b/LottieSample/src/androidTest/java/com/airbnb/lottie/LottieTest.java, +    MainActivity activity = activityRule.getActivity();, +    TestRobot.testAnimation(activity, "9squares-AlBoardman.json");, +    TestRobot.testAnimation(activity, "EmptyState.json");, +    TestRobot.testAnimation(activity, "HamburgerArrow.json");, +    TestRobot.testAnimation(activity, "LottieLogo1.json");, +    TestRobot.testAnimation(activity, "LottieLogo2.json");, +    TestRobot.testAnimation(activity, "MotionCorpse-Jrcanest.json");, +    TestRobot.testAnimation(activity, "PinJump.json");, +    TestRobot.testAnimation(activity, "TwitterHeart.json");, +    TestRobot.testAnimation(activity, "Tests/Hosts.json");, +    TestRobot.testAnimation(activity, "Tests/LightBulb.json", null,, +    TestRobot.testAnimation(activity, "Tests/LoopPlayOnce.json");, +    TestRobot.testAnimation(activity, "Tests/Alarm.json");, +    TestRobot.testAnimation(activity, "Tests/CheckSwitch.json");, +    TestRobot.testAnimation(activity, "Tests/EllipseTrimPath.json");, +    TestRobot.testAnimation(activity, "Tests/SplitDimensions.json");, +    TestRobot.testAnimation(activity, "Tests/TrimPathsFull.json");, +    TestRobot.testAnimation(activity, "Tests/Laugh4.json");, +    TestRobot.testAnimation(activity, "Tests/Star.json");, +    TestRobot.testAnimation(activity, "Tests/Polygon.json");, +    TestRobot.testAnimation(activity, "Tests/AllSet.json");, +    TestRobot.testAnimation(activity, "Tests/City.json");, +    TestRobot.testAnimation(activity, "Tests/PreCompMadness.json");, +    TestRobot.testAnimation(activity, "Tests/MatteParentPrecomp.json");, +    TestRobot.testAnimation(activity, "Tests/Image.json", "Tests/weaccept");, +    TestRobot.testStatic(activity, "Tests/TrimPathFill.json");, +    TestRobot.testStatic(activity, "Tests/Mask_26.json");, +    TestRobot.testStatic(activity, "Tests/MatteInv.json");, +    TestRobot.testStatic(activity, "Tests/MaskInv.json");, +++ b/LottieSample/src/androidTest/java/com/airbnb/lottie/LottieTest.java, +    MainActivity activity = activityRule.getActivity();, +    TestRobot.testAnimation(activity, "9squares-AlBoardman.json");, +    TestRobot.testAnimation(activity, "EmptyState.json");, +    TestRobot.testAnimation(activity, "HamburgerArrow.json");, +    TestRobot.testAnimation(activity, "LottieLogo1.json");, +    TestRobot.testAnimation(activity, "LottieLogo2.json");, +    TestRobot.testAnimation(activity, "MotionCorpse-Jrcanest.json");, +    TestRobot.testAnimation(activity, "PinJump.json");, +    TestRobot.testAnimation(activity, "TwitterHeart.json");, +    TestRobot.testAnimation(activity, "Tests/Hosts.json");, +    TestRobot.testAnimation(activity, "Tests/LightBulb.json", null,, +    TestRobot.testAnimation(activity, "Tests/LoopPlayOnce.json");, +    TestRobot.testAnimation(activity, "Tests/Alarm.json");, +    TestRobot.testAnimation(activity, "Tests/CheckSwitch.json");, +    TestRobot.testAnimation(activity, "Tests/EllipseTrimPath.json");, +    TestRobot.testAnimation(activity, "Tests/SplitDimensions.json");, +    TestRobot.testAnimation(activity, "Tests/TrimPathsFull.json");, +    TestRobot.testAnimation(activity, "Tests/Laugh4.json");, +    TestRobot.testAnimation(activity, "Tests/Star.json");, +    TestRobot.testAnimation(activity, "Tests/Polygon.json");, +    TestRobot.testAnimation(activity, "Tests/AllSet.json");, +    TestRobot.testAnimation(activity, "Tests/City.json");, +    TestRobot.testAnimation(activity, "Tests/PreCompMadness.json");, +    TestRobot.testAnimation(activity, "Tests/MatteParentPrecomp.json");, +    TestRobot.testAnimation(activity, "Tests/Image.json", "Tests/weaccept");, +    TestRobot.testStatic(activity, "Tests/TrimPathFill.json");, +    TestRobot.testStatic(activity, "Tests/Mask_26.json");, +    TestRobot.testStatic(activity, "Tests/MatteInv.json");, +    TestRobot.testStatic(activity, "Tests/MaskInv.json");, +++ b/lottie/src/main/java/com/airbnb/lottie/AnimatableTransform.java, +  private final AnimatablePathValue anchorPoint;, +  private final IAnimatablePathValue position;, +  private final AnimatableScaleValue scale;, +  private final AnimatableFloatValue rotation;, +  private final AnimatableIntegerValue opacity;, +  AnimatableTransform(AnimatablePathValue anchorPoint, IAnimatablePathValue position,, +      AnimatableScaleValue scale, AnimatableFloatValue rotation, AnimatableIntegerValue opacity) {, +    this.anchorPoint = anchorPoint;, +    this.position = position;, +    this.scale = scale;, +    this.rotation = rotation;, +    this.opacity = opacity;, +  static class Factory {, +    static AnimatableTransform newInstance(LottieComposition composition) {, +      AnimatablePathValue anchorPoint = new AnimatablePathValue();, +      IAnimatablePathValue position = new AnimatablePathValue();, +      AnimatableScaleValue scale = new AnimatableScaleValue(composition);, +      AnimatableFloatValue rotation = new AnimatableFloatValue(composition, 0f);, +      AnimatableIntegerValue opacity = new AnimatableIntegerValue(composition, 255);, +      return new AnimatableTransform(anchorPoint, position, scale, rotation, opacity);, +    }, +, +    static AnimatableTransform newInstance(JSONObject json, LottieComposition composition) {, +      AnimatablePathValue anchorPoint = null;, +      IAnimatablePathValue position = null;, +      AnimatableScaleValue scale = null;, +      AnimatableFloatValue rotation = null;, +      AnimatableIntegerValue opacity = null;, +      return new AnimatableTransform(anchorPoint, position, scale, rotation, opacity);, +    private static void throwMissingTransform(String missingProperty) {, +  }, +++ b/LottieSample/src/androidTest/java/com/airbnb/lottie/LottieTest.java, +    MainActivity activity = activityRule.getActivity();, +    TestRobot.testAnimation(activity, "9squares-AlBoardman.json");, +    TestRobot.testAnimation(activity, "EmptyState.json");, +    TestRobot.testAnimation(activity, "HamburgerArrow.json");, +    TestRobot.testAnimation(activity, "LottieLogo1.json");, +    TestRobot.testAnimation(activity, "LottieLogo2.json");, +    TestRobot.testAnimation(activity, "MotionCorpse-Jrcanest.json");]