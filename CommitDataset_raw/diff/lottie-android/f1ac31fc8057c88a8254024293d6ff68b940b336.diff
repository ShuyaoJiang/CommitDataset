[+++ b/lottie/src/main/java/com/airbnb/lottie/LottieViewAnimator.java, +            if (layer.getOpacity().hasAnimation()) {, +                KeyframeAnimation<Integer> opacity = layer.getOpacity().createAnimation();, +                opacity.addUpdateListener(new KeyframeAnimation.AnimationListener<Integer>() {, +                    @Override, +                    public void onValueChanged(Integer progress) {, +                        view.setAlpha(progress / 255f);, +                    }, +                });, +                animatableValues.add(opacity);, +            }, +            view.setAlpha(layer.getOpacity().getInitialValue() / 255f);, +, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieViewAnimator.java, +            if (layer.getOpacity().hasAnimation()) {, +                KeyframeAnimation<Integer> opacity = layer.getOpacity().createAnimation();, +                opacity.addUpdateListener(new KeyframeAnimation.AnimationListener<Integer>() {, +                    @Override, +                    public void onValueChanged(Integer progress) {, +                        view.setAlpha(progress / 255f);, +                    }, +                });, +                animatableValues.add(opacity);, +            }, +            view.setAlpha(layer.getOpacity().getInitialValue() / 255f);, +, +++ b/lottie/src/main/java/com/airbnb/lottie/model/LottieComposition.java, +        // These are precomps. This naively adds the precomp layers to the main composition., +        // TODO: Significant work will have to be done to properly support them.]