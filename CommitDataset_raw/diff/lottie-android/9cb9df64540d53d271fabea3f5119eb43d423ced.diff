[+++ b/LottieSample/src/main/java/com/airbnb/lottie/samples/LottieFontViewGroup.java, +    void addSpace() {, +    void removeLastView() {, +++ b/LottieSample/src/main/java/com/airbnb/lottie/samples/LottieFontViewGroup.java, +    void addSpace() {, +    void removeLastView() {, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +    public void invalidateDrawable(Drawable dr) {, +        // We always want to invalidate the root drawable to it redraws the whole drawable., +        // Eventually it would be great to be able to invalidate just the changed region., +        super.invalidateDrawable(lottieDrawable);, +    }, +, +    @Override, +        lottieDrawable.setCallback(this);, +        setImageDrawable(lottieDrawable);, +++ b/LottieSample/src/main/java/com/airbnb/lottie/samples/LottieFontViewGroup.java, +    void addSpace() {, +    void removeLastView() {, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +    public void invalidateDrawable(Drawable dr) {, +        // We always want to invalidate the root drawable to it redraws the whole drawable., +        // Eventually it would be great to be able to invalidate just the changed region., +        super.invalidateDrawable(lottieDrawable);, +    }, +, +    @Override, +        lottieDrawable.setCallback(this);, +        setImageDrawable(lottieDrawable);, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/AnimatableLayer.java, +    void clearLayers() {, +++ b/LottieSample/src/main/java/com/airbnb/lottie/samples/LottieFontViewGroup.java, +    void addSpace() {, +    void removeLastView() {, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +    public void invalidateDrawable(Drawable dr) {, +        // We always want to invalidate the root drawable to it redraws the whole drawable., +        // Eventually it would be great to be able to invalidate just the changed region., +        super.invalidateDrawable(lottieDrawable);, +    }, +, +    @Override, +        lottieDrawable.setCallback(this);, +        setImageDrawable(lottieDrawable);, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/AnimatableLayer.java, +    void clearLayers() {, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/LottieDrawable.java, +    public void invalidateSelf() {, +        super.invalidateSelf();, +    }, +, +    @Override, +++ b/LottieSample/src/main/java/com/airbnb/lottie/samples/LottieFontViewGroup.java, +    void addSpace() {, +    void removeLastView() {, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +    public void invalidateDrawable(Drawable dr) {, +        // We always want to invalidate the root drawable to it redraws the whole drawable., +        // Eventually it would be great to be able to invalidate just the changed region., +        super.invalidateDrawable(lottieDrawable);, +    }, +, +    @Override, +        lottieDrawable.setCallback(this);, +        setImageDrawable(lottieDrawable);, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/AnimatableLayer.java, +    void clearLayers() {, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/LottieDrawable.java, +    public void invalidateSelf() {, +        super.invalidateSelf();, +    }, +, +    @Override, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/ShapeLayer.java, +    private final RectF tempRect = new RectF();, +            currentPath.computeBounds(tempRect, false);, +            scaleMatrix.setScale(currentPathScaleX, currentPathScaleY, tempRect.centerX(), tempRect.centerY());]