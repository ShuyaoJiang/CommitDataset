[+++ b/LotteSample/src/debug/java/com/airbnb/lotte/samples/LotteApplication.java, +import android.support.v4.util.Pair;, +public class LotteApplication extends Application implements ILotteApplication {, +, +    private int droppedFrames;, +    private long droppedFramesStartingNs;, +    private long currentFrameNs;, +                .startingXPosition(0), +                .startingYPosition(0), +                    public void doFrame(long previousFrameNs, long currentFrameNs, int droppedFrames) {, +                        LotteApplication.this.droppedFrames += droppedFrames;, +                        LotteApplication.this.currentFrameNs = currentFrameNs;, +, +    @Override, +    public void startRecordingDroppedFrames() {, +        droppedFrames = 0;, +        droppedFramesStartingNs = currentFrameNs;, +    }, +, +    @Override, +    public Pair<Integer, Long> stopRecordingDroppedFrames() {, +        long duration = currentFrameNs - droppedFramesStartingNs;, +        Pair<Integer, Long> ret = new Pair<>(droppedFrames, duration);, +        droppedFrames = 0;, +        return ret;, +    }, +++ b/LotteSample/src/debug/java/com/airbnb/lotte/samples/LotteApplication.java, +import android.support.v4.util.Pair;, +public class LotteApplication extends Application implements ILotteApplication {, +, +    private int droppedFrames;, +    private long droppedFramesStartingNs;, +    private long currentFrameNs;, +                .startingXPosition(0), +                .startingYPosition(0), +                    public void doFrame(long previousFrameNs, long currentFrameNs, int droppedFrames) {, +                        LotteApplication.this.droppedFrames += droppedFrames;, +                        LotteApplication.this.currentFrameNs = currentFrameNs;, +, +    @Override, +    public void startRecordingDroppedFrames() {, +        droppedFrames = 0;, +        droppedFramesStartingNs = currentFrameNs;, +    }, +, +    @Override, +    public Pair<Integer, Long> stopRecordingDroppedFrames() {, +        long duration = currentFrameNs - droppedFramesStartingNs;, +        Pair<Integer, Long> ret = new Pair<>(droppedFrames, duration);, +        droppedFrames = 0;, +        return ret;, +    }, +++ b/LotteSample/src/main/java/com/airbnb/lotte/samples/AnimationFragment.java, +import android.animation.Animator;, +import android.annotation.SuppressLint;, +import android.support.v4.util.Pair;, +import android.widget.TextView;, +    @BindView(R.id.frames_per_second) TextView fpsView;, +    @BindView(R.id.dropped_frames) TextView droppedFramesView;, +    @BindView(R.id.dropped_frames_per_second) TextView droppedFramesPerSecondView;, +        animationView.addAnimatorListener(new Animator.AnimatorListener() {, +            @Override, +            public void onAnimationStart(Animator animation) {, +                startRecordingDroppedFrames();, +            }, +, +            @Override, +            public void onAnimationEnd(Animator animation) {, +                recordDroppedFrames();, +            }, +, +            @Override, +            public void onAnimationCancel(Animator animation) {}, +, +            @Override, +            public void onAnimationRepeat(Animator animation) {, +                recordDroppedFrames();, +                startRecordingDroppedFrames();, +            }, +        });, +            public void onStartTrackingTouch(SeekBar seekBar) {}, +            public void onStopTrackingTouch(SeekBar seekBar) {}, +    @Override, +    public void onStop() {, +        animationView.cancelAnimation();, +        super.onStop();, +    }, +, +, +    private void startRecordingDroppedFrames() {, +        getApplication().startRecordingDroppedFrames();, +    }, +, +    @SuppressLint({"SetTextI18n", "DefaultLocale"}), +    private void recordDroppedFrames() {, +        Pair<Integer, Long> droppedFrames = getApplication().stopRecordingDroppedFrames();, +        int targetFrames = (int) ((droppedFrames.second / 1000000000f) * animationView.getFrameRate());, +        int actualFrames = targetFrames - droppedFrames.first;, +        fpsView.setText(String.format("Fps: %.0f", actualFrames / (animationView.getDuration() / 1000f)));, +        droppedFramesView.setText("Dropped frames: " + droppedFrames.first);]