[+++ b/LottieSample/src/androidTest/java/com/airbnb/lottie/LottieTest.kt, +import android.graphics.*, +import com.airbnb.lottie.value.*, +import kotlinx.coroutines.*, +                "Rectangle corner roundedness",, +                KeyPath("Shape Layer 1", "Rectangle", "Rectangle Path 1"),, +                LottieProperty.CORNER_RADIUS,, +                LottieValueCallback(7f)), +, +        testDynamicProperty(, +                "Rectangle position",, +                KeyPath("Shape Layer 1", "Rectangle", "Rectangle Path 1"),, +                LottieProperty.POSITION,, +                LottieRelativePointValueCallback(PointF(20f, 20f))), +, +        testDynamicProperty(, +                "Rectangle size",, +                KeyPath("Shape Layer 1", "Rectangle", "Rectangle Path 1"),, +                LottieProperty.RECTANGLE_SIZE,, +                LottieRelativePointValueCallback(PointF(30f, 40f))), +, +        testDynamicProperty(, +, +, +++ b/LottieSample/src/androidTest/java/com/airbnb/lottie/LottieTest.kt, +import android.graphics.*, +import com.airbnb.lottie.value.*, +import kotlinx.coroutines.*, +                "Rectangle corner roundedness",, +                KeyPath("Shape Layer 1", "Rectangle", "Rectangle Path 1"),, +                LottieProperty.CORNER_RADIUS,, +                LottieValueCallback(7f)), +, +        testDynamicProperty(, +                "Rectangle position",, +                KeyPath("Shape Layer 1", "Rectangle", "Rectangle Path 1"),, +                LottieProperty.POSITION,, +                LottieRelativePointValueCallback(PointF(20f, 20f))), +, +        testDynamicProperty(, +                "Rectangle size",, +                KeyPath("Shape Layer 1", "Rectangle", "Rectangle Path 1"),, +                LottieProperty.RECTANGLE_SIZE,, +                LottieRelativePointValueCallback(PointF(30f, 40f))), +, +        testDynamicProperty(, +, +, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieProperty.java, +  PointF RECTANGLE_SIZE = new PointF();, +  /** In degrees */, +  Float CORNER_RADIUS = 0f;, +  /** In Px */, +++ b/LottieSample/src/androidTest/java/com/airbnb/lottie/LottieTest.kt, +import android.graphics.*, +import com.airbnb.lottie.value.*, +import kotlinx.coroutines.*, +                "Rectangle corner roundedness",, +                KeyPath("Shape Layer 1", "Rectangle", "Rectangle Path 1"),, +                LottieProperty.CORNER_RADIUS,, +                LottieValueCallback(7f)), +, +        testDynamicProperty(, +                "Rectangle position",, +                KeyPath("Shape Layer 1", "Rectangle", "Rectangle Path 1"),, +                LottieProperty.POSITION,, +                LottieRelativePointValueCallback(PointF(20f, 20f))), +, +        testDynamicProperty(, +                "Rectangle size",, +                KeyPath("Shape Layer 1", "Rectangle", "Rectangle Path 1"),, +                LottieProperty.RECTANGLE_SIZE,, +                LottieRelativePointValueCallback(PointF(30f, 40f))), +, +        testDynamicProperty(, +, +, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieProperty.java, +  PointF RECTANGLE_SIZE = new PointF();, +  /** In degrees */, +  Float CORNER_RADIUS = 0f;, +  /** In Px */, +++ b/lottie/src/main/java/com/airbnb/lottie/animation/content/RectangleContent.java, +import com.airbnb.lottie.LottieProperty;, +  @Override public <T> void addValueCallback(T property, @Nullable LottieValueCallback<T> callback) {, +    if (property == LottieProperty.RECTANGLE_SIZE) {, +        sizeAnimation.setValueCallback((LottieValueCallback<PointF>) callback);, +    } else if (property == LottieProperty.POSITION) {, +        positionAnimation.setValueCallback((LottieValueCallback<PointF>) callback);, +    } else if (property == LottieProperty.CORNER_RADIUS) {, +        cornerRadiusAnimation.setValueCallback((LottieValueCallback<Float>) callback);, +    }]