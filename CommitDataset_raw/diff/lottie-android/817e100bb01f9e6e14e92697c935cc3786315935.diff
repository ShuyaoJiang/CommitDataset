[+++ b/LottieSample/build.gradle, +  implementation 'com.airbnb.android:epoxy:2.16.4', +  kapt 'com.airbnb.android:epoxy-processor:2.16.4', +  implementation 'com.airbnb.android:mvrx:0.5.0', +++ b/LottieSample/build.gradle, +  implementation 'com.airbnb.android:epoxy:2.16.4', +  kapt 'com.airbnb.android:epoxy-processor:2.16.4', +  implementation 'com.airbnb.android:mvrx:0.5.0', +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/BaseEpoxyFragment.kt, +package com.airbnb.lottie.samples, +, +import android.os.Bundle, +import android.view.LayoutInflater, +import android.view.View, +import android.view.ViewGroup, +import com.airbnb.epoxy.AsyncEpoxyController, +import com.airbnb.epoxy.EpoxyController, +import com.airbnb.mvrx.BaseMvRxFragment, +import kotlinx.android.synthetic.main.fragment_base.*, +import kotlinx.android.synthetic.main.fragment_base.view.*, +, +, +private class BaseEpoxyController(, +        private val buildModelsCallback: EpoxyController.() -> Unit, +) : AsyncEpoxyController() {, +    override fun buildModels() {, +        buildModelsCallback(), +    }, +}, +, +abstract class BaseEpoxyFragment : BaseMvRxFragment() {, +, +    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? =, +            inflater.inflate(R.layout.fragment_base, container, false).apply {, +                recyclerView.setController(BaseEpoxyController { buildModels() }), +            }, +, +    override fun invalidate() {, +        recyclerView.requestModelBuild(), +    }, +, +    abstract fun EpoxyController.buildModels(), +}, +++ b/LottieSample/build.gradle, +  implementation 'com.airbnb.android:epoxy:2.16.4', +  kapt 'com.airbnb.android:epoxy-processor:2.16.4', +  implementation 'com.airbnb.android:mvrx:0.5.0', +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/BaseEpoxyFragment.kt, +package com.airbnb.lottie.samples, +, +import android.os.Bundle, +import android.view.LayoutInflater, +import android.view.View, +import android.view.ViewGroup, +import com.airbnb.epoxy.AsyncEpoxyController, +import com.airbnb.epoxy.EpoxyController, +import com.airbnb.mvrx.BaseMvRxFragment, +import kotlinx.android.synthetic.main.fragment_base.*, +import kotlinx.android.synthetic.main.fragment_base.view.*, +, +, +private class BaseEpoxyController(, +        private val buildModelsCallback: EpoxyController.() -> Unit, +) : AsyncEpoxyController() {, +    override fun buildModels() {, +        buildModelsCallback(), +    }, +}, +, +abstract class BaseEpoxyFragment : BaseMvRxFragment() {, +, +    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? =, +            inflater.inflate(R.layout.fragment_base, container, false).apply {, +                recyclerView.setController(BaseEpoxyController { buildModels() }), +            }, +, +    override fun invalidate() {, +        recyclerView.requestModelBuild(), +    }, +, +    abstract fun EpoxyController.buildModels(), +}, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/LottiefilesFragment.kt, +import android.support.v4.app.FragmentActivity, +import com.airbnb.lottie.samples.model.AnimationData, +import com.airbnb.lottie.samples.model.AnimationResponse, +import com.airbnb.lottie.samples.views.loadingView, +import com.airbnb.lottie.samples.views.lottiefilesTabBar, +import com.airbnb.lottie.samples.views.marquee, +import com.airbnb.lottie.samples.views.searchInputItemView, +import com.airbnb.mvrx.*, +data class LottiefilesState(, +        val mode: LottiefilesMode = LottiefilesMode.Recent,, +        val items: List<AnimationData> = emptyList(),, +        val request: Async<AnimationResponse> = Uninitialized,, +        val query: String = "", +) : MvRxState, +class LottiefilesViewModel(, +        initialState: LottiefilesState,, +        private val service: LottiefilesService) : MvRxViewModel<LottiefilesState>(initialState]