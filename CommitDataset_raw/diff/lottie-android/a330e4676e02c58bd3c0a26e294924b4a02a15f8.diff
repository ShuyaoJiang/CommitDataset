[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/lottie/src/main/java/com/airbnb/lottie/AnimatableLayer.java, +  private TransformKeyframeAnimation transform;, +      if (this.transform != null) {, +        alpha = alpha * this.transform.getOpacity().getValue() / 255;, +    if (canvas == null || transform == null) {, +, +    PointF position = layer.transform.getPosition().getValue();, +    float rotation = layer.transform.getRotation().getValue();, +    ScaleXY scale = layer.transform.getScale().getValue();, +    PointF anchorPoint = layer.transform.getAnchorPoint().getValue();, +    float alpha = this.transform == null ? 1f : (this.transform.getOpacity().getValue() / 255f);, +  void setTransform(TransformKeyframeAnimation transform) {, +    addAnimation(transform.getAnchorPoint());, +    addAnimation(transform.getPosition());, +    addAnimation(transform.getScale());, +    addAnimation(transform.getRotation());, +    addAnimation(transform.getOpacity());, +    invalidateSelf();, +++ /dev/null, +++ /dev/null, +++ b/lottie/src/main/java/com/airbnb/lottie/AnimatableLayer.java, +  private TransformKeyframeAnimation transform;, +      if (this.transform != null) {, +        alpha = alpha * this.transform.getOpacity().getValue() / 255;, +    if (canvas == null || transform == null) {, +, +    PointF position = layer.transform.getPosition().getValue();, +    float rotation = layer.transform.getRotation().getValue();, +    ScaleXY scale = layer.transform.getScale().getValue();, +    PointF anchorPoint = layer.transform.getAnchorPoint().getValue();, +    float alpha = this.transform == null ? 1f : (this.transform.getOpacity().getValue() / 255f);, +  void setTransform(TransformKeyframeAnimation transform) {, +    addAnimation(transform.getAnchorPoint());, +    addAnimation(transform.getPosition());, +    addAnimation(transform.getScale());, +    addAnimation(transform.getRotation());, +    addAnimation(transform.getOpacity());, +    invalidateSelf();, +++ b/lottie/src/main/java/com/airbnb/lottie/AnimatableTransform.java, +package com.airbnb.lottie;, +, +import org.json.JSONException;, +import org.json.JSONObject;, +, +class AnimatableTransform {, +  private AnimatablePathValue anchorPoint;, +  private IAnimatablePathValue position;, +  private AnimatableScaleValue scale;, +  private AnimatableFloatValue rotation;, +  private AnimatableIntegerValue opacity;, +, +  AnimatableTransform(LottieComposition composition) {, +    this.anchorPoint = new AnimatablePathValue();, +    this.position = new AnimatablePathValue();, +    this.scale = new AnimatableScaleValue(composition);, +    this.rotation = new AnimatableFloatValue(composition, 0f);, +    this.opacity = new AnimatableIntegerValue(composition, 255);, +  }, +, +  AnimatableTransform(JSONObject json, LottieComposition composition) throws JSONException {, +    JSONObject anchorJson = json.optJSONObject("a");, +    if (anchorJson != null) {, +      anchorPoint = new AnimatablePathValue(anchorJson.get("k"), composition);, +    } else {, +      throwMissingTransform("anchor");, +    }, +, +    JSONObject positionJson = json.optJSONObject("p");, +    if (positionJson != null) {, +      position =, +          AnimatablePathValue.createAnimatablePathOrSplitDimensionPath(positionJson, composition);, +    } else {, +      throwMissingTransform("position");, +    }, +, +    JSONObject scaleJson = json.optJSONObject("s");, +    if (scaleJson != null) {, +      scale = new AnimatableScaleValue(scaleJson, composition, false);, +    } else {, +      throwMissingTransform("scale");, +    }, +, +    JSONObject rotationJson = json.optJSONObject("r");, +    if (rotationJson == null) {, +      rotationJson = json.optJSONObject("rz");, +    }, +    if (rotationJson != null) {, +      rotation = new AnimatableFloatValue(rotationJson, composition, false);, +    } else {, +      throwMissingTransform("rotation");, +    }, +, +    JSONObject opacityJson = json.optJSONObject("o");, +    if (opacityJson != null) {, +      opacity = new AnimatableIntegerValue(opacityJson, composition, false, true);]