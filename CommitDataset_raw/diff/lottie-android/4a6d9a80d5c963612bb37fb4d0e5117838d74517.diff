[+++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteGroupLayerView.java, +            setAlpha(shapeTransform.getOpacity().getObservable());, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteGroupLayerView.java, +            setAlpha(shapeTransform.getOpacity().getObservable());, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteLayerView.java, +import com.airbnb.lotte.utils.LotteTransform3D;, +        PointF position = layer.getPosition().getObservable().getValue();, +        canvas.translate(position.x, position.y);, +        LotteTransform3D scale = layer.getScale().getObservable().getValue();, +        canvas.scale(scale.getScaleX(), scale.getScaleY());, +        canvas.rotate((float) layer.getRotation().getObservable().getValue());, +, +        PointF translation = layer.getAnchor().getObservable().getValue();, +        canvas.translate(-translation.x, -translation.y);, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteGroupLayerView.java, +            setAlpha(shapeTransform.getOpacity().getObservable());, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteLayerView.java, +import com.airbnb.lotte.utils.LotteTransform3D;, +        PointF position = layer.getPosition().getObservable().getValue();, +        canvas.translate(position.x, position.y);, +        LotteTransform3D scale = layer.getScale().getObservable().getValue();, +        canvas.scale(scale.getScaleX(), scale.getScaleY());, +        canvas.rotate((float) layer.getRotation().getObservable().getValue());, +, +        PointF translation = layer.getAnchor().getObservable().getValue();, +        canvas.translate(-translation.x, -translation.y);, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteMaskLayer.java, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteGroupLayerView.java, +            setAlpha(shapeTransform.getOpacity().getObservable());, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteLayerView.java, +import com.airbnb.lotte.utils.LotteTransform3D;, +        PointF position = layer.getPosition().getObservable().getValue();, +        canvas.translate(position.x, position.y);, +        LotteTransform3D scale = layer.getScale().getObservable().getValue();, +        canvas.scale(scale.getScaleX(), scale.getScaleY());, +        canvas.rotate((float) layer.getRotation().getObservable().getValue());, +, +        PointF translation = layer.getAnchor().getObservable().getValue();, +        canvas.translate(-translation.x, -translation.y);, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteMaskLayer.java, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteRectShapeLayer.java, +        setAlpha(transform.getOpacity().getObservable());, +        sublayerTransform = transform.getRotation().getObservable();, +            fillLayer.setShapeAlpha(fill.getOpacity().getObservable());, +            fillLayer.setTransformAlpha(transformModel.getOpacity().getObservable());, +            strokeLayer.setShapeAlpha(stroke.getOpacity().getObservable());, +            strokeLayer.setTransformAlpha(transformModel.getOpacity().getObservable());, +        private final Observable.OnChangedListener alphaChangedListener = new Observable.OnChangedListener() {, +            @Override, +            public void onChanged() {, +                onAlphaChanged();, +            }, +        };, +, +        private Observable<Number> shapeAlpha;, +        private Observable<Number> transformAlpha;, +        public void setShapeAlpha(Observable<Number> alpha) {, +            if (this.shapeAlpha != null) {, +                this.shapeAlpha.removeChangeListemer(alphaChangedListener);, +            }, +            alpha.addChangeListener(alphaChangedListener);, +            onAlphaChanged();, +        public void setTransformAlpha(Observable<Number> alpha) {, +            if (this.transformAlpha != null) {, +                this.transformAlpha.removeChangeListemer(alphaChangedListener);, +            }, +            alpha.addChangeListener(alphaChangedListener);, +            onAlphaChanged();, +        }, +, +        private void onAlphaChanged() {, +            Float shapeAlpha = this.shapeAlpha == null ? 1f : (Float) this.shapeAlpha.getValue();, +            Float transformAlpha = this.transformAlpha == null ? 1f : (Float) this.transformAlpha.getValue();, +            setAlpha((int) ((shapeAlpha * transformAlpha) * 255));]