[+++ b/lottie/src/main/java/com/airbnb/lottie/AnimatableFloatValue.java, +    return new FloatKeyframeAnimation(keyframes);, +++ b/lottie/src/main/java/com/airbnb/lottie/AnimatableFloatValue.java, +    return new FloatKeyframeAnimation(keyframes);, +++ b/lottie/src/main/java/com/airbnb/lottie/AnimatableIntegerValue.java, +    return new IntegerKeyframeAnimation(keyframes);, +++ b/lottie/src/main/java/com/airbnb/lottie/AnimatableFloatValue.java, +    return new FloatKeyframeAnimation(keyframes);, +++ b/lottie/src/main/java/com/airbnb/lottie/AnimatableIntegerValue.java, +    return new IntegerKeyframeAnimation(keyframes);, +++ b/lottie/src/main/java/com/airbnb/lottie/FloatKeyframeAnimation.java, +package com.airbnb.lottie;, +, +import java.util.List;, +, +import static com.airbnb.lottie.MiscUtils.lerp;, +, +class FloatKeyframeAnimation extends KeyframeAnimation<Float> {, +, +  FloatKeyframeAnimation(List<Keyframe<Float>> keyframes) {, +    super(keyframes);, +  }, +, +  @Override Float getValue(Keyframe<Float> keyframe, float keyframeProgress) {, +    return lerp(keyframe.startValue, keyframe.endValue, keyframeProgress);, +  }, +}, +++ b/lottie/src/main/java/com/airbnb/lottie/AnimatableFloatValue.java, +    return new FloatKeyframeAnimation(keyframes);, +++ b/lottie/src/main/java/com/airbnb/lottie/AnimatableIntegerValue.java, +    return new IntegerKeyframeAnimation(keyframes);, +++ b/lottie/src/main/java/com/airbnb/lottie/FloatKeyframeAnimation.java, +package com.airbnb.lottie;, +, +import java.util.List;, +, +import static com.airbnb.lottie.MiscUtils.lerp;, +, +class FloatKeyframeAnimation extends KeyframeAnimation<Float> {, +, +  FloatKeyframeAnimation(List<Keyframe<Float>> keyframes) {, +    super(keyframes);, +  }, +, +  @Override Float getValue(Keyframe<Float> keyframe, float keyframeProgress) {, +    return lerp(keyframe.startValue, keyframe.endValue, keyframeProgress);, +  }, +}, +++ b/lottie/src/main/java/com/airbnb/lottie/IntegerKeyframeAnimation.java, +package com.airbnb.lottie;, +, +import java.util.List;, +, +import static com.airbnb.lottie.MiscUtils.lerp;, +, +class IntegerKeyframeAnimation extends KeyframeAnimation<Integer> {, +, +  IntegerKeyframeAnimation(List<Keyframe<Integer>> keyframes) {, +    super(keyframes);, +  }, +, +  @Override Integer getValue(Keyframe<Integer> keyframe, float keyframeProgress) {, +    return lerp(keyframe.startValue, keyframe.endValue, keyframeProgress);, +  }, +}, +++ b/lottie/src/main/java/com/airbnb/lottie/AnimatableFloatValue.java, +    return new FloatKeyframeAnimation(keyframes);, +++ b/lottie/src/main/java/com/airbnb/lottie/AnimatableIntegerValue.java, +    return new IntegerKeyframeAnimation(keyframes);, +++ b/lottie/src/main/java/com/airbnb/lottie/FloatKeyframeAnimation.java, +package com.airbnb.lottie;, +, +import java.util.List;, +, +import static com.airbnb.lottie.MiscUtils.lerp;, +, +class FloatKeyframeAnimation extends KeyframeAnimation<Float> {, +, +  FloatKeyframeAnimation(List<Keyframe<Float>> keyframes) {, +    super(keyframes);, +  }, +, +  @Override Float getValue(Keyframe<Float> keyframe, float keyframeProgress) {, +    return lerp(keyframe.startValue, keyframe.endValue, keyframeProgress);, +  }, +}, +++ b/lottie/src/main/java/com/airbnb/lottie/IntegerKeyframeAnimation.java, +package com.airbnb.lottie;, +, +import java.util.List;, +, +import static com.airbnb.lottie.MiscUtils.lerp;, +, +class IntegerKeyframeAnimation extends KeyframeAnimation<Integer> {, +, +  IntegerKeyframeAnimation(List<Keyframe<Integer>> keyframes) {, +    super(keyframes);, +  }, +, +  @Override Integer getValue(Keyframe<Integer> keyframe, float keyframeProgress) {]