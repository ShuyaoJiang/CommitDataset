[+++ b/LottieSample/src/main/res/layout/activity_bullseye.xml, +        app:lottie_url="https://raw.githubusercontent.com/airbnb/lottie-android/master/LottieSample/src/main/res/raw/bullseye.json", +++ b/LottieSample/src/main/res/layout/activity_bullseye.xml, +        app:lottie_url="https://raw.githubusercontent.com/airbnb/lottie-android/master/LottieSample/src/main/res/raw/bullseye.json", +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +      boolean hasUrl = ta.hasValue(R.styleable.LottieAnimationView_lottie_url);, +      } else if (hasUrl) {, +        String url = ta.getString(R.styleable.LottieAnimationView_lottie_url);, +        if (url != null) {, +          setAnimationFromUrl(url);, +        }, +  /**, +   * Load a lottie animation from a url. The url can be a json file or a zip file. Use a zip file if you have images. Simply zip them togethre and lottie, +   * will unzip and link the images automatically., +   *, +   * Under the hood, Lottie uses Java HttpURLConnection because it doesn't require any transitive networking dependencies. It will download the file, +   * to the application cache under a temporary name. If the file successfully parses to a composition, it will rename the temporary file to one that, +   * can be accessed immediately for subsequent requests. If the file does not parse to a composition, the temporary file will be deleted., +   */, +  public void setAnimationFromUrl(String url) {, +    clearComposition();, +    cancelLoaderTask();, +    compositionTask = LottieCompositionFactory.fromUrl(getContext(), url), +        .addListener(loadedListener), +        .addFailureListener(failureListener);, +  }, +, +++ b/LottieSample/src/main/res/layout/activity_bullseye.xml, +        app:lottie_url="https://raw.githubusercontent.com/airbnb/lottie-android/master/LottieSample/src/main/res/raw/bullseye.json", +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +      boolean hasUrl = ta.hasValue(R.styleable.LottieAnimationView_lottie_url);, +      } else if (hasUrl) {, +        String url = ta.getString(R.styleable.LottieAnimationView_lottie_url);, +        if (url != null) {, +          setAnimationFromUrl(url);, +        }, +  /**, +   * Load a lottie animation from a url. The url can be a json file or a zip file. Use a zip file if you have images. Simply zip them togethre and lottie, +   * will unzip and link the images automatically., +   *, +   * Under the hood, Lottie uses Java HttpURLConnection because it doesn't require any transitive networking dependencies. It will download the file, +   * to the application cache under a temporary name. If the file successfully parses to a composition, it will rename the temporary file to one that, +   * can be accessed immediately for subsequent requests. If the file does not parse to a composition, the temporary file will be deleted., +   */, +  public void setAnimationFromUrl(String url) {, +    clearComposition();, +    cancelLoaderTask();, +    compositionTask = LottieCompositionFactory.fromUrl(getContext(), url), +        .addListener(loadedListener), +        .addFailureListener(failureListener);, +  }, +, +++ b/lottie/src/main/res/values/attrs.xml, +        <attr name="lottie_url" format="string" />]