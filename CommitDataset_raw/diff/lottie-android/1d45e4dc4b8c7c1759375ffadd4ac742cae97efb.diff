[+++ b/lottie/src/main/java/com/airbnb/lottie/parser/LayerParser.java, +    outFrame = (outFrame > 0 ? outFrame : composition.getEndFrame());, +++ b/lottie/src/main/java/com/airbnb/lottie/parser/LayerParser.java, +    outFrame = (outFrame > 0 ? outFrame : composition.getEndFrame());, +++ b/lottie/src/main/java/com/airbnb/lottie/parser/LottieCompositionParser.java, +          endFrame = (float) reader.nextDouble() - 0.01f;, +++ b/lottie/src/main/java/com/airbnb/lottie/parser/LayerParser.java, +    outFrame = (outFrame > 0 ? outFrame : composition.getEndFrame());, +++ b/lottie/src/main/java/com/airbnb/lottie/parser/LottieCompositionParser.java, +          endFrame = (float) reader.nextDouble() - 0.01f;, +++ b/lottie/src/test/java/com/airbnb/lottie/LottieValueAnimatorUnitTest.java, +    assertClose(0f, animator.getFrame());, +    assertClose(500f, animator.getFrame());, +    assertClose(0.5f, animator.getAnimatedFraction());, +    assertClose(0.5f, animator.getAnimatedValueAbsolute());, +    assertClose(0f, animator.getFrame());, +    assertClose(0f, animator.getAnimatedFraction());, +    assertClose(250f, animator.getFrame());, +    assertClose(0.75f, animator.getAnimatedFraction());, +    assertClose(0.25f, animator.getAnimatedValueAbsolute());, +    assertClose(1000f, animator.getFrame());, +    assertClose(0f, animator.getAnimatedFraction());, +    assertClose(1f, animator.getAnimatedValueAbsolute());, +    assertClose(0f, animator.getFrame());, +    assertClose(1f, animator.getAnimatedFraction());, +    assertClose(0f, animator.getAnimatedValueAbsolute());, +    assertClose(900f, animator.getFrame());, +    assertClose(0f, animator.getAnimatedFraction());, +    assertClose(0.9f, animator.getAnimatedValueAbsolute());, +    assertClose(900f, animator.getFrame());, +    assertClose(0f, animator.getAnimatedFraction());, +    assertClose(0.9f, animator.getAnimatedValueAbsolute());, +    assertClose(0.33333f, animator.getAnimatedFraction());, +    assertClose(0.4f, animator.getAnimatedValueAbsolute());, +    assertClose(400f, animator.getFrame());, +    assertClose(0.66666f, animator.getAnimatedFraction());, +    assertClose(0.4f, animator.getAnimatedValueAbsolute());, +    assertClose(400f, animator.getFrame());, +    assertClose(0.66666f, animator.getAnimatedFraction());, +    assertClose(0.4f, animator.getAnimatedValueAbsolute());, +    assertClose(800f, animator.getFrame());, +    assertClose(0f, animator.getAnimatedFraction());, +    assertClose(0.8f, animator.getAnimatedValueAbsolute());, +    assertClose(animator.getMinFrame(), composition.getStartFrame());, +    assertClose(animator.getMaxFrame(), composition.getEndFrame());, +    assertClose(100.0f, animator.getMinFrame());, +    assertClose(100.0f, animator.getMaxFrame());, +    assertClose(100.0f, animator.getMinFrame());, +    assertClose(900.0f, animator.getMaxFrame());, +    assertClose(100.0f, animator.getMinFrame());, +    assertClose(100.0f, animator.getMinFrame());, +    assertClose(900.0f, animator.getMaxFrame());, +    assertClose(500.0f, animator.getMaxFrame());, +    assertClose(1500.0f, animator.getMaxFrame());, +    assertClose(0.0f, animator.getMaxFrame());, +    assertClose(0.0f, animator.getMinFrame());, +    assertClose(0.0f, animator.getMinFrame());, +    assertClose(1000.0f, animator.getMaxFrame());, +    assertClose(100.0f, animator.getMinFrame());, +    assertClose(1000.0f, animator.getMaxFrame());, +    assertClose(100.0f, animator.getMinFrame());, +    assertClose(1000.0f, animator.getMaxFrame());, +, +  /**, +   * Animations don't render on the out frame so if an animation is 1000 frames, the actual end will be 999.99. This causes, +   * actual fractions to be something like .74999 when you might expect 75., +   */, +  private static void assertClose(float expected, float actual) {, +    assertEquals(expected, actual, expected * 0.01f);, +  }]