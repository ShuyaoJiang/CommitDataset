[+++ b/LottieSample/build.gradle, +  compile 'com.github.PhilJay:MPAndroidChart:v3.0.2', +++ b/LottieSample/build.gradle, +  compile 'com.github.PhilJay:MPAndroidChart:v3.0.2', +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/AnimationFragment.kt, +import android.graphics.Color, +import com.github.mikephil.charting.components.LimitLine, +import com.github.mikephil.charting.components.YAxis, +import com.github.mikephil.charting.data.Entry, +import com.github.mikephil.charting.data.LineData, +import com.github.mikephil.charting.data.LineDataSet, +import kotlin.collections.ArrayList, +    private val handler = Handler(), +    private var renderTimeGraphRange = 4f, +    private val lineDataSet by lazy {, +        val entries = ArrayList<Entry>(101), +        repeat(101) { i ->, +            entries.add(Entry(i.toFloat(), 0f)), +        }, +        val dataSet = LineDataSet(entries, "Render Times"), +        dataSet.mode = LineDataSet.Mode.CUBIC_BEZIER, +        dataSet.cubicIntensity = 0.3f, +        dataSet.setDrawCircles(false), +        dataSet.lineWidth = 1.8f, +        dataSet.color = Color.BLACK, +        dataSet, +    }, +        view.overflowMenu.setDrawableLeft(R.drawable.ic_more_vert, activity), +        view.renderTimesGraph.axisRight.isEnabled = false, +        view.renderTimesGraph.xAxis.isEnabled = false, +        view.renderTimesGraph.legend.isEnabled = false, +        view.renderTimesGraph.description = null, +        view.renderTimesGraph.data = LineData(lineDataSet), +        view.renderTimesGraph.axisLeft.setDrawGridLines(false), +        view.renderTimesGraph.axisLeft.labelCount = 4, +        val ll1 = LimitLine(16f, "60fps"), +        ll1.lineColor = Color.RED, +        ll1.lineWidth = 1.2f, +        ll1.textColor = Color.BLACK, +        ll1.textSize = 8f, +        view.renderTimesGraph.axisLeft.addLimitLine(ll1), +, +        val ll2 = LimitLine(32f, "30fps"), +        ll2.lineColor = Color.RED, +        ll2.lineWidth = 1.2f, +        ll2.textColor = Color.BLACK, +        ll2.textSize = 8f, +        view.renderTimesGraph.axisLeft.addLimitLine(ll2), +, +            R.id.render_times_graph -> consume {, +                renderTimesGraphContainer.setVisibleIf(item.isChecked), +            }, +        renderTimeGraphRange = 8f, +        for (i in 1..lineDataSet.entryCount - 1) {, +            lineDataSet.getEntryForIndex(i).y = 0f, +        }, +        renderTimesGraph.invalidate(), +        animationView.performanceTracker?.addFrameListener { ms ->, +            if (renderTimesGraph == null) {, +                return@addFrameListener, +            }, +            lineDataSet.getEntryForIndex((animationView.progress * 100).toInt()).y = ms, +            renderTimeGraphRange = Math.max(renderTimeGraphRange, ms * 1.2f), +            renderTimesGraph.setVisibleYRange(0f, renderTimeGraphRange, YAxis.AxisDependency.LEFT), +            renderTimesGraph.invalidate(), +        }, +    private fun postUpdatePlayButtonText() = handler.post {, +        if (playButton != null) {, +            updatePlayButtonText(), +        }, +    }, +++ b/LottieSample/build.gradle, +  compile 'com.github.PhilJay:MPAndroidChart:v3.0.2', +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/AnimationFragment.kt, +import android.graphics.Color, +import com.github.mikephil.charting.components.LimitLine, +import com.github.mikephil.charting.components.YAxis, +import com.github.mikephil.charting.data.Entry, +import com.github.mikephil.charting.data.LineData, +import com.github.mikephil.charting.data.LineDataSet, +import kotlin.collections.ArrayList, +    private val handler = Handler(), +    private var renderTimeGraphRange = 4f, +    private val lineDataSet by lazy {, +        val entries = ArrayList<Entry>(101), +        repeat(101) { i ->, +            entries.add(Entry(i.toFloat(), 0f)), +        }, +        val dataSet = LineDataSet(entries, "Render Times"), +        dataSet.mode = LineDataSet.Mode.CUBIC_BEZIER, +        dataSet.cubicIntensity = 0.3f, +        dataSet.setDrawCircles(false), +        dataSet.lineWidth = 1.8f, +        dataSet.color = Color.BLACK, +        dataSet, +    }, +        view.overflowMenu.setDrawableLeft(R.drawable.ic_more_vert, activity), +        view.renderTimesGraph.axisRight.isEnabled = false, +        view.renderTimesGraph.xAxis.isEnabled = false, +        view.renderTimesGraph.legend.isEnabled = false]