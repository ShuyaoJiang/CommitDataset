[+++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, + * You can also set a default cache strategy with {@link R.attr#lottie_cacheStrategy}., + * <p>, +  private CacheStrategy defaultCacheStrategy;, +    int cacheStrategy = ta.getInt(, +        R.styleable.LottieAnimationView_lottie_cacheStrategy,, +        CacheStrategy.None.ordinal());, +    defaultCacheStrategy = CacheStrategy.values()[cacheStrategy];, +    setAnimation(animationName, defaultCacheStrategy);, +  /**, +   * Sets a composition., +   * You can set a default cache strategy if this view was inflated with xml by, +   * using {@link R.attr#lottie_cacheStrategy}., +   */, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, + * You can also set a default cache strategy with {@link R.attr#lottie_cacheStrategy}., + * <p>, +  private CacheStrategy defaultCacheStrategy;, +    int cacheStrategy = ta.getInt(, +        R.styleable.LottieAnimationView_lottie_cacheStrategy,, +        CacheStrategy.None.ordinal());, +    defaultCacheStrategy = CacheStrategy.values()[cacheStrategy];, +    setAnimation(animationName, defaultCacheStrategy);, +  /**, +   * Sets a composition., +   * You can set a default cache strategy if this view was inflated with xml by, +   * using {@link R.attr#lottie_cacheStrategy}., +   */, +++ b/lottie/src/main/res/values/attrs.xml, +        <attr name="lottie_cacheStrategy" format="enum">, +            <enum name="none" value="0" />, +            <enum name="weak" value="1" />, +            <enum name="strong" value="2" />, +        </attr>]