[+++ b/lottie/src/main/java/com/airbnb/lottie/MiscUtils.java, +, +  static int floorMod(float x, float y) {, +    return floorMod((int) x, (int) y);, +  }, +, +  /**, +   * Copied from Math.floorMod in the Android platform., +   */, +  static int floorMod(int x, int y) {, +    return x - floorDiv(x, y) * y;, +  }, +, +  /**, +   * Copied from Math.floorDiv in the Android platform., +   */, +  private static int floorDiv(int x, int y) {, +    int r = x / y;, +    // if the signs are different and modulo not zero, round down, +    if ((x ^ y) < 0 && (r * y != x)) {, +      r--;, +    }, +    return r;, +  }, +++ b/lottie/src/main/java/com/airbnb/lottie/MiscUtils.java, +, +  static int floorMod(float x, float y) {, +    return floorMod((int) x, (int) y);, +  }, +, +  /**, +   * Copied from Math.floorMod in the Android platform., +   */, +  static int floorMod(int x, int y) {, +    return x - floorDiv(x, y) * y;, +  }, +, +  /**, +   * Copied from Math.floorDiv in the Android platform., +   */, +  private static int floorDiv(int x, int y) {, +    int r = x / y;, +    // if the signs are different and modulo not zero, round down, +    if ((x ^ y) < 0 && (r * y != x)) {, +      r--;, +    }, +    return r;, +  }, +++ b/lottie/src/main/java/com/airbnb/lottie/Utils.java, +      newStart = MiscUtils.floorMod(newStart, length);, +      newEnd = MiscUtils.floorMod(newEnd, length);, +, +    if (newStart < 0) {, +      newStart = MiscUtils.floorMod(newStart, length);, +    }, +    if (newEnd < 0) {, +      newEnd = MiscUtils.floorMod(newEnd, length);, +    }, +]