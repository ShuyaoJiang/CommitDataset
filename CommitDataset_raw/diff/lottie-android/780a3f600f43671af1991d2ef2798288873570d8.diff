[+++ b/LottieSample/screenshots/LottieLogo2.png, +++ b/LottieSample/screenshots/LottieLogo2.png, +++ b/LottieSample/screenshots/Tests_CheckSwitch.png, +++ b/LottieSample/screenshots/LottieLogo2.png, +++ b/LottieSample/screenshots/Tests_CheckSwitch.png, +++ b/LottieSample/screenshots/lottiefiles.com_-_Progress_Success.png, +++ b/LottieSample/screenshots/LottieLogo2.png, +++ b/LottieSample/screenshots/Tests_CheckSwitch.png, +++ b/LottieSample/screenshots/lottiefiles.com_-_Progress_Success.png, +++ b/LottieSample/screenshots/lottiefiles.com_-_Touch_ID.png, +++ b/LottieSample/screenshots/LottieLogo2.png, +++ b/LottieSample/screenshots/Tests_CheckSwitch.png, +++ b/LottieSample/screenshots/lottiefiles.com_-_Progress_Success.png, +++ b/LottieSample/screenshots/lottiefiles.com_-_Touch_ID.png, +++ b/lottie/src/main/java/com/airbnb/lottie/Utils.java, +    // If the start and end are length distance apart, just return the path;, +    if (Math.abs(Math.abs(newEnd - newStart) - length) < 1) {, +      return;, +    }, +, +    // If the start and end are equals, return an empty path.]