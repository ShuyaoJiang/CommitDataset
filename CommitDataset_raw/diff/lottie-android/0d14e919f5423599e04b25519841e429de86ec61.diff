[+++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/PlayerFragment.kt, +        hardwareAccelerationToggle.isActivated = animationView.layerType == View.LAYER_TYPE_HARDWARE, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/PlayerFragment.kt, +        hardwareAccelerationToggle.isActivated = animationView.layerType == View.LAYER_TYPE_HARDWARE, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +import android.os.Build;, +    boolean useHardwareLayer = true;, +    if (composition != null && composition.hasDashPattern() && Build.VERSION.SDK_INT < Build.VERSION_CODES.P) {, +      useHardwareLayer = false;, +    }, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/PlayerFragment.kt, +        hardwareAccelerationToggle.isActivated = animationView.layerType == View.LAYER_TYPE_HARDWARE, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +import android.os.Build;, +    boolean useHardwareLayer = true;, +    if (composition != null && composition.hasDashPattern() && Build.VERSION.SDK_INT < Build.VERSION_CODES.P) {, +      useHardwareLayer = false;, +    }, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieComposition.java, +  /**, +   * Used to determine if an animation can be drawn with hardware acceleration., +   */, +  private boolean hasDashPattern;, +  @RestrictTo(RestrictTo.Scope.LIBRARY), +  @RestrictTo(RestrictTo.Scope.LIBRARY), +  public void setHasDashPattern(boolean hasDashPattern) {, +    this.hasDashPattern = hasDashPattern;, +  }, +, +  /**, +   * Used to determine if an animation can be drawn with hardware acceleration., +   */, +  public boolean hasDashPattern() {, +    return hasDashPattern;, +  }, +, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/PlayerFragment.kt, +        hardwareAccelerationToggle.isActivated = animationView.layerType == View.LAYER_TYPE_HARDWARE, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +import android.os.Build;, +    boolean useHardwareLayer = true;, +    if (composition != null && composition.hasDashPattern() && Build.VERSION.SDK_INT < Build.VERSION_CODES.P) {, +      useHardwareLayer = false;, +    }, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieComposition.java, +  /**, +   * Used to determine if an animation can be drawn with hardware acceleration., +   */, +  private boolean hasDashPattern;, +  @RestrictTo(RestrictTo.Scope.LIBRARY), +  @RestrictTo(RestrictTo.Scope.LIBRARY), +  public void setHasDashPattern(boolean hasDashPattern) {, +    this.hasDashPattern = hasDashPattern;, +  }, +, +  /**, +   * Used to determine if an animation can be drawn with hardware acceleration., +   */, +  public boolean hasDashPattern() {, +    return hasDashPattern;, +  }, +, +++ b/lottie/src/main/java/com/airbnb/lottie/parser/GradientStrokeParser.java, +              composition.setHasDashPattern(true);, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/PlayerFragment.kt, +        hardwareAccelerationToggle.isActivated = animationView.layerType == View.LAYER_TYPE_HARDWARE, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +import android.os.Build;, +    boolean useHardwareLayer = true;, +    if (composition != null && composition.hasDashPattern() && Build.VERSION.SDK_INT < Build.VERSION_CODES.P) {, +      useHardwareLayer = false;, +    }, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieComposition.java, +  /**, +   * Used to determine if an animation can be drawn with hardware acceleration., +   */, +  private boolean hasDashPattern;, +  @RestrictTo(RestrictTo.Scope.LIBRARY), +  @RestrictTo(RestrictTo.Scope.LIBRARY), +  public void setHasDashPattern(boolean hasDashPattern) {, +    this.hasDashPattern = hasDashPattern;, +  }, +, +  /**, +   * Used to determine if an animation can be drawn with hardware acceleration., +   */, +  public boolean hasDashPattern() {, +    return hasDashPattern;, +  }, +, +++ b/lottie/src/main/java/com/airbnb/lottie/parser/GradientStrokeParser.java, +              composition.setHasDashPattern(true);, +++ b/lottie/src/main/java/com/airbnb/lottie/parser/ShapeStrokeParser.java, +                composition.setHasDashPattern(true);]