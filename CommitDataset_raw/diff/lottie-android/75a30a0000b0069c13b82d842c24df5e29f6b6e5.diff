[+++ b/lottie/src/main/java/com/airbnb/lottie/CompositionLayer.java, +  @Nullable private Boolean hasMatte;, +  @Nullable private Boolean hasMasks;, +, +    if (hasMasks == null) {, +            hasMasks = true;, +      hasMasks = false;, +    }, +    return hasMasks;, +    if (hasMatte == null) {, +        hasMatte = true;, +          hasMatte = true;, +      hasMatte = false;, +    }, +    return hasMatte;, +++ b/lottie/src/main/java/com/airbnb/lottie/CompositionLayer.java, +  @Nullable private Boolean hasMatte;, +  @Nullable private Boolean hasMasks;, +, +    if (hasMasks == null) {, +            hasMasks = true;, +      hasMasks = false;, +    }, +    return hasMasks;, +    if (hasMatte == null) {, +        hasMatte = true;, +          hasMatte = true;, +      hasMatte = false;, +    }, +    return hasMatte;, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieDrawable.java, +  @SuppressWarnings("WeakerAccess") public void addColorFilterToContent(String layerName, String contentName,, +  @SuppressWarnings("WeakerAccess") public void addColorFilterToLayer(String layerName, @Nullable ColorFilter colorFilter) {, +  @SuppressWarnings("WeakerAccess") public void clearColorFilters() {, +    float scale = this.scale;, +    if (compositionLayer.hasMatte()) {, +      scale = Math.min(this.scale, getMaxScale(canvas));, +    }, +, +  private float getMaxScale(@NonNull Canvas canvas) {, +    float maxScaleX = canvas.getWidth() / (float) composition.getBounds().width();, +    float maxScaleY = canvas.getHeight() / (float) composition.getBounds().height();, +    return Math.min(maxScaleX, maxScaleY);, +  }, +, +      return hashCode() == other.hashCode() && colorFilter == other.colorFilter;, +++ b/lottie/src/main/java/com/airbnb/lottie/CompositionLayer.java, +  @Nullable private Boolean hasMatte;, +  @Nullable private Boolean hasMasks;, +, +    if (hasMasks == null) {, +            hasMasks = true;, +      hasMasks = false;, +    }, +    return hasMasks;, +    if (hasMatte == null) {, +        hasMatte = true;, +          hasMatte = true;, +      hasMatte = false;, +    }, +    return hasMatte;, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieDrawable.java, +  @SuppressWarnings("WeakerAccess") public void addColorFilterToContent(String layerName, String contentName,, +  @SuppressWarnings("WeakerAccess") public void addColorFilterToLayer(String layerName, @Nullable ColorFilter colorFilter) {, +  @SuppressWarnings("WeakerAccess") public void clearColorFilters() {, +    float scale = this.scale;, +    if (compositionLayer.hasMatte()) {, +      scale = Math.min(this.scale, getMaxScale(canvas));, +    }, +, +  private float getMaxScale(@NonNull Canvas canvas) {, +    float maxScaleX = canvas.getWidth() / (float) composition.getBounds().width();, +    float maxScaleY = canvas.getHeight() / (float) composition.getBounds().height();, +    return Math.min(maxScaleX, maxScaleY);, +  }, +, +      return hashCode() == other.hashCode() && colorFilter == other.colorFilter;, +++ b/lottie/src/main/java/com/airbnb/lottie/ShapeLayer.java]