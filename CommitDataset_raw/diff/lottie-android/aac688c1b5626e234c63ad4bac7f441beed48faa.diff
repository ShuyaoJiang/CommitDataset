[+++ b/lotte/src/main/java/com/airbnb/lotte/model/LotteShapeCircle.java, +package com.airbnb.lotte.model;, +, +import org.json.JSONObject;, +, +public class LotteShapeCircle {, +, +    public LotteShapeCircle(JSONObject json, long frameRate) {, +        // TODO, +    }, +}, +++ b/lotte/src/main/java/com/airbnb/lotte/model/LotteShapeCircle.java, +package com.airbnb.lotte.model;, +, +import org.json.JSONObject;, +, +public class LotteShapeCircle {, +, +    public LotteShapeCircle(JSONObject json, long frameRate) {, +        // TODO, +    }, +}, +++ b/lotte/src/main/java/com/airbnb/lotte/model/LotteShapeFill.java, +package com.airbnb.lotte.model;, +, +import org.json.JSONObject;, +, +public class LotteShapeFill {, +, +    public LotteShapeFill(JSONObject json, long frameRate) {, +        // TODO, +    }, +}, +++ b/lotte/src/main/java/com/airbnb/lotte/model/LotteShapeCircle.java, +package com.airbnb.lotte.model;, +, +import org.json.JSONObject;, +, +public class LotteShapeCircle {, +, +    public LotteShapeCircle(JSONObject json, long frameRate) {, +        // TODO, +    }, +}, +++ b/lotte/src/main/java/com/airbnb/lotte/model/LotteShapeFill.java, +package com.airbnb.lotte.model;, +, +import org.json.JSONObject;, +, +public class LotteShapeFill {, +, +    public LotteShapeFill(JSONObject json, long frameRate) {, +        // TODO, +    }, +}, +++ b/lotte/src/main/java/com/airbnb/lotte/model/LotteShapeGroup.java, +import android.support.annotation.Nullable;, +import org.json.JSONArray;, +import org.json.JSONException;, +import java.util.ArrayList;, +import java.util.List;, +, +@SuppressWarnings({"EmptyCatchBlock", "FieldCanBeLocal"}), +    private final List<Object> items = new ArrayList<>();, +, +    public LotteShapeGroup(JSONObject json, long frameRate, Rect compBounds) {, +        JSONArray jsonItems = null;, +        try {, +            jsonItems = json.getJSONArray("it");, +        } catch (JSONException e) {}, +        if (jsonItems == null) {, +            throw new IllegalStateException("There are no items.");, +        }, +, +        for (int i = 0; i < items.size(); i++) {, +            Object newItem = shapeItemWithJson(json, frameRate, compBounds);, +            if (newItem != null) {, +                items.add(newItem);, +            }, +        }, +    }, +, +    @Nullable, +    private Object shapeItemWithJson(JSONObject json, long framerate, Rect compBounds) {, +        String type = null;, +        try {, +            type = json.getString("ty");, +        } catch (JSONException e) { }, +        if (type == null) {, +            throw new IllegalStateException("Shape has no type.");, +        }, +, +        switch (type) {, +            case "gr":, +                return new LotteShapeGroup(json, framerate, compBounds);, +            case "st":, +                return new LotteShapeStroke(json, framerate);, +            case "fl":, +                return new LotteShapeFill(json, framerate);, +            case "tr":]