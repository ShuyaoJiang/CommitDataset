[+++ b/LottieSample/build.gradle, +  buildToolsVersion "27.0.3", +++ b/LottieSample/build.gradle, +  buildToolsVersion "27.0.3", +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/AnimationFragment.kt, +        view.qrCode.setDrawableLeft(R.drawable.ic_qr_scan_selector, myActivity), +        view.sampleAnimations.setDrawableLeft(R.drawable.ic_assets_selector, myActivity), +        view.loadAnimation.setDrawableLeft(R.drawable.ic_file_selector, myActivity), +        view.loadFromJson.setDrawableLeft(R.drawable.ic_network_selector, myActivity), +        view.overflowMenu.setDrawableLeft(R.drawable.ic_more_vert_selector, myActivity), +, +            instructionsTitle.isActivated = invertColors.isActivated, +            qrCode.isActivated = invertColors.isActivated, +            sampleAnimations.isActivated = invertColors.isActivated, +            loadAnimation.isActivated = invertColors.isActivated, +            loadFromJson.isActivated = invertColors.isActivated, +            overflowMenu.isActivated = invertColors.isActivated, +, +            val textAndLineColor = if (invertColors.isActivated) Color.WHITE else Color.BLACK, +            for (limitLine: LimitLine in renderTimesGraph.axisLeft.limitLines) {, +                limitLine.textColor = textAndLineColor, +            }, +            lineDataSet.color = textAndLineColor, +            renderTimesGraphUnit.setTextColor(textAndLineColor), +            renderTimesGraph.axisLeft.textColor = textAndLineColor, +++ b/LottieSample/build.gradle, +  buildToolsVersion "27.0.3", +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/AnimationFragment.kt, +        view.qrCode.setDrawableLeft(R.drawable.ic_qr_scan_selector, myActivity), +        view.sampleAnimations.setDrawableLeft(R.drawable.ic_assets_selector, myActivity), +        view.loadAnimation.setDrawableLeft(R.drawable.ic_file_selector, myActivity), +        view.loadFromJson.setDrawableLeft(R.drawable.ic_network_selector, myActivity), +        view.overflowMenu.setDrawableLeft(R.drawable.ic_more_vert_selector, myActivity), +, +            instructionsTitle.isActivated = invertColors.isActivated, +            qrCode.isActivated = invertColors.isActivated, +            sampleAnimations.isActivated = invertColors.isActivated, +            loadAnimation.isActivated = invertColors.isActivated, +            loadFromJson.isActivated = invertColors.isActivated, +            overflowMenu.isActivated = invertColors.isActivated, +, +            val textAndLineColor = if (invertColors.isActivated) Color.WHITE else Color.BLACK, +            for (limitLine: LimitLine in renderTimesGraph.axisLeft.limitLines) {, +                limitLine.textColor = textAndLineColor, +            }, +            lineDataSet.color = textAndLineColor, +            renderTimesGraphUnit.setTextColor(textAndLineColor), +            renderTimesGraph.axisLeft.textColor = textAndLineColor, +++ b/LottieSample/src/main/res/color/inverted_text.xml, +<?xml version="1.0" encoding="utf-8"?>, +<selector xmlns:android="http://schemas.android.com/apk/res/android">, +	<item android:state_activated="true" android:color="@android:color/white" />, +	<item android:color="@android:color/black" />, +</selector>, +++ b/LottieSample/build.gradle, +  buildToolsVersion "27.0.3", +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/AnimationFragment.kt, +        view.qrCode.setDrawableLeft(R.drawable.ic_qr_scan_selector, myActivity), +        view.sampleAnimations.setDrawableLeft(R.drawable.ic_assets_selector, myActivity), +        view.loadAnimation.setDrawableLeft(R.drawable.ic_file_selector, myActivity), +        view.loadFromJson.setDrawableLeft(R.drawable.ic_network_selector, myActivity), +        view.overflowMenu.setDrawableLeft(R.drawable.ic_more_vert_selector, myActivity), +, +            instructionsTitle.isActivated = invertColors.isActivated, +            qrCode.isActivated = invertColors.isActivated, +            sampleAnimations.isActivated = invertColors.isActivated, +            loadAnimation.isActivated = invertColors.isActivated, +            loadFromJson.isActivated = invertColors.isActivated, +            overflowMenu.isActivated = invertColors.isActivated, +, +            val textAndLineColor = if (invertColors.isActivated) Color.WHITE else Color.BLACK, +            for (limitLine: LimitLine in renderTimesGraph.axisLeft.limitLines) {, +                limitLine.textColor = textAndLineColor, +            }, +            lineDataSet.color = textAndLineColor, +            renderTimesGraphUnit.setTextColor(textAndLineColor), +            renderTimesGraph.axisLeft.textColor = textAndLineColor, +++ b/LottieSample/src/main/res/color/inverted_text.xml, +<?xml version="1.0" encoding="utf-8"?>, +<selector xmlns:android="http://schemas.android.com/apk/res/android">, +	<item android:state_activated="true" android:color="@android:color/white" />, +	<item android:color="@android:color/black" />, +</selector>, +++ b/LottieSample/src/main/res/drawable/ic_assets_selector.xml, +<?xml version="1.0" encoding="utf-8"?>, +<selector xmlns:android="http://schemas.android.com/apk/res/android">, +    <item android:state_activated="true" android:drawable="@drawable/ic_assets_white" />, +    <item android:drawable="@drawable/ic_assets" />, +</selector>, +++ b/LottieSample/build.gradle, +  buildToolsVersion "27.0.3", +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/AnimationFragment.kt, +        view.qrCode.setDrawableLeft(R.drawable.ic_qr_scan_selector, myActivity), +        view.sampleAnimations.setDrawableLeft(R.drawable.ic_assets_selector, myActivity), +        view.loadAnimation.setDrawableLeft(R.drawable.ic_file_selector, myActivity), +        view.loadFromJson.setDrawableLeft(R.drawable.ic_network_selector, myActivity), +        view.overflowMenu.setDrawableLeft(R.drawable.ic_more_vert_selector, myActivity), +, +            instructionsTitle.isActivated = invertColors.isActivated, +            qrCode.isActivated = invertColors.isActivated]