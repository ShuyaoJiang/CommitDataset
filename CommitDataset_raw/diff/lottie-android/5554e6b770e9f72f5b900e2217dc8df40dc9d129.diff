[+++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +import com.airbnb.lottie.layers.RootLayer;, +    private final RootLayer rootLayer = new RootLayer(this);, +            rootLayer.playAnimation();, +        rootLayer.loop(ta.getBoolean(R.styleable.LottieAnimationView_lottie_loop, false));, +        ss.progress = rootLayer.getProgress();, +        ss.isAnimating = rootLayer.isAnimating();, +        ss.isLooping = rootLayer.isLooping();, +        if (!hasInvalidatedThisFrame && rootLayer != null) {, +            super.invalidateDrawable(rootLayer);, +        rootLayer.setCompDuration(composition.getDuration());, +        rootLayer.setBounds(0, 0, composition.getBounds().width(), composition.getBounds().height());, +        setImageDrawable(rootLayer);, +                rootLayer.addLayer(layerView);, +        rootLayer.clearLayers();, +        rootLayer.addAnimatorUpdateListener(updateListener);, +        rootLayer.removeAnimatorUpdateListener(updateListener);, +        rootLayer.addAnimatorListener(listener);, +        rootLayer.removeAnimatorListener(listener);, +        rootLayer.loop(loop);, +        return rootLayer.isAnimating();, +        rootLayer.playAnimation();, +        rootLayer.cancelAnimation();, +        rootLayer.setProgress(progress);, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +import com.airbnb.lottie.layers.RootLayer;, +    private final RootLayer rootLayer = new RootLayer(this);, +            rootLayer.playAnimation();, +        rootLayer.loop(ta.getBoolean(R.styleable.LottieAnimationView_lottie_loop, false));, +        ss.progress = rootLayer.getProgress();, +        ss.isAnimating = rootLayer.isAnimating();, +        ss.isLooping = rootLayer.isLooping();, +        if (!hasInvalidatedThisFrame && rootLayer != null) {, +            super.invalidateDrawable(rootLayer);, +        rootLayer.setCompDuration(composition.getDuration());, +        rootLayer.setBounds(0, 0, composition.getBounds().width(), composition.getBounds().height());, +        setImageDrawable(rootLayer);, +                rootLayer.addLayer(layerView);, +        rootLayer.clearLayers();, +        rootLayer.addAnimatorUpdateListener(updateListener);, +        rootLayer.removeAnimatorUpdateListener(updateListener);, +        rootLayer.addAnimatorListener(listener);, +        rootLayer.removeAnimatorListener(listener);, +        rootLayer.loop(loop);, +        return rootLayer.isAnimating();, +        rootLayer.playAnimation();, +        rootLayer.cancelAnimation();, +        rootLayer.setProgress(progress);, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/GroupLayerView.java, +                RectLayer shapeLayer = new RectLayer(shapeRect, currentFill, currentStroke, currentTransform, compDuration, getCallback());, +++ b/lottie/src/main/java/com/airbnb/lottie/LottieAnimationView.java, +import com.airbnb.lottie.layers.RootLayer;, +    private final RootLayer rootLayer = new RootLayer(this);, +            rootLayer.playAnimation();, +        rootLayer.loop(ta.getBoolean(R.styleable.LottieAnimationView_lottie_loop, false));, +        ss.progress = rootLayer.getProgress();, +        ss.isAnimating = rootLayer.isAnimating();, +        ss.isLooping = rootLayer.isLooping();, +        if (!hasInvalidatedThisFrame && rootLayer != null) {, +            super.invalidateDrawable(rootLayer);, +        rootLayer.setCompDuration(composition.getDuration());, +        rootLayer.setBounds(0, 0, composition.getBounds().width(), composition.getBounds().height());, +        setImageDrawable(rootLayer);, +                rootLayer.addLayer(layerView);, +        rootLayer.clearLayers();, +        rootLayer.addAnimatorUpdateListener(updateListener);, +        rootLayer.removeAnimatorUpdateListener(updateListener);, +        rootLayer.addAnimatorListener(listener);, +        rootLayer.removeAnimatorListener(listener);, +        rootLayer.loop(loop);, +        return rootLayer.isAnimating();, +        rootLayer.playAnimation();, +        rootLayer.cancelAnimation();, +        rootLayer.setProgress(progress);, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/GroupLayerView.java, +                RectLayer shapeLayer = new RectLayer(shapeRect, currentFill, currentStroke, currentTransform, compDuration, getCallback());, +++ b/lottie/src/main/java/com/airbnb/lottie/layers/RectLayer.java, +package com.airbnb.lottie.layers;, +, +import android.graphics.Canvas;, +import android.graphics.DashPathEffect;, +import android.graphics.Paint;, +import android.graphics.PointF;, +import android.graphics.RectF;, +import android.graphics.drawable.Drawable;, +import android.support.annotation.NonNull;, +import android.support.annotation.Nullable;, +, +import com.airbnb.lottie.animatable.AnimatableFloatValue;, +import com.airbnb.lottie.model.ShapeFill;, +import com.airbnb.lottie.model.RectangleShape;, +import com.airbnb.lottie.model.ShapeStroke;, +import com.airbnb.lottie.model.ShapeTransform;, +import com.airbnb.lottie.animatable.Observable;, +, +import java.util.List;, +, +class RectLayer extends AnimatableLayer {, +, +    private final ShapeTransform transformModel;]