[+++ b/LottieSample/screenshots/LottieLogo1.png, +++ b/LottieSample/screenshots/LottieLogo1.png, +++ b/LottieSample/screenshots/LottieLogo2.png, +++ b/LottieSample/screenshots/LottieLogo1.png, +++ b/LottieSample/screenshots/LottieLogo2.png, +++ b/LottieSample/screenshots/MotionCorpse-Jrcanest.png, +++ b/LottieSample/screenshots/LottieLogo1.png, +++ b/LottieSample/screenshots/LottieLogo2.png, +++ b/LottieSample/screenshots/MotionCorpse-Jrcanest.png, +++ b/LottieSample/screenshots/Tests_Laugh4.png, +++ b/LottieSample/screenshots/LottieLogo1.png, +++ b/LottieSample/screenshots/LottieLogo2.png, +++ b/LottieSample/screenshots/MotionCorpse-Jrcanest.png, +++ b/LottieSample/screenshots/Tests_Laugh4.png, +++ b/lottie/src/main/java/com/airbnb/lottie/BitmapCanvas.java, +package com.airbnb.lottie;, +, +import android.graphics.Bitmap;, +import android.graphics.Canvas;, +, +class BitmapCanvas extends Canvas {, +, +  private final Bitmap bitmap;, +, +  BitmapCanvas(Bitmap bitmap) {, +    super(bitmap);, +    this.bitmap = bitmap;, +  }, +, +  Bitmap getBitmap() {, +    return bitmap;, +  }, +}, +++ b/LottieSample/screenshots/LottieLogo1.png, +++ b/LottieSample/screenshots/LottieLogo2.png, +++ b/LottieSample/screenshots/MotionCorpse-Jrcanest.png, +++ b/LottieSample/screenshots/Tests_Laugh4.png, +++ b/lottie/src/main/java/com/airbnb/lottie/BitmapCanvas.java, +package com.airbnb.lottie;, +, +import android.graphics.Bitmap;, +import android.graphics.Canvas;, +, +class BitmapCanvas extends Canvas {, +, +  private final Bitmap bitmap;, +, +  BitmapCanvas(Bitmap bitmap) {, +    super(bitmap);, +    this.bitmap = bitmap;, +  }, +, +  Bitmap getBitmap() {, +    return bitmap;, +  }, +}, +++ b/lottie/src/main/java/com/airbnb/lottie/CanvasPool.java, +package com.airbnb.lottie;, +, +import android.graphics.Bitmap;, +import android.graphics.Color;, +import android.support.v4.util.LongSparseArray;, +, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.Iterator;, +import java.util.List;, +import java.util.Map;, +, +import static junit.framework.Assert.assertNotNull;, +, +class CanvasPool {, +  private final LongSparseArray<List<Bitmap>> availableBitmaps = new LongSparseArray<>();, +  private final Map<BitmapCanvas, Bitmap> canvasBitmapMap = new HashMap<>();, +  private final Map<Bitmap, BitmapCanvas> bitmapCanvasMap = new HashMap<>();, +, +  BitmapCanvas acquire(int width, int height, Bitmap.Config config) {, +    int key = getKey(width, height, config);, +    List<Bitmap> bitmaps = availableBitmaps.get(key);, +    if (bitmaps == null) {, +      bitmaps = new ArrayList<>();, +      availableBitmaps.put(key, bitmaps);, +    }, +, +    BitmapCanvas canvas;, +    if (bitmaps.isEmpty()) {, +      Bitmap bitmap = Bitmap.createBitmap(width, height, config);, +      canvas = new BitmapCanvas(bitmap);, +      canvasBitmapMap.put(canvas, bitmap);, +      bitmapCanvasMap.put(bitmap, canvas);, +    } else {, +      Bitmap bitmap = bitmaps.remove(0);, +      canvas = bitmapCanvasMap.get(bitmap);, +      assertNotNull(canvas);, +    }, +    canvas.getBitmap().eraseColor(Color.TRANSPARENT);, +    return canvas;, +  }, +, +  void release(BitmapCanvas canvas) {]