[+++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteLayer.java, +import android.graphics.Color;, +import android.support.annotation.Nullable;, +import com.airbnb.lotte.model.LotteComposition;, +import com.airbnb.lotte.model.LotteMask;, +import com.airbnb.lotte.model.RemapInterface;, +import org.json.JSONArray;, +import org.json.JSONException;, +import org.json.JSONObject;, +, +import java.util.ArrayList;, +@SuppressWarnings({"UnusedAssignment", "unused", "EmptyCatchBlock"}), +    @SuppressWarnings("WeakerAccess"), +    public static LotteLayer fromJson(JSONObject json, LotteComposition composition) {, +        LotteLayer layer = new LotteLayer();, +        try {, +            layer.layerName = json.getString("nm");, +            layer.layerId = json.getLong("ind");, +            layer.compBounds = composition.getBounds();, +            layer.frameRate = composition.getFrameRate();, +, +            int layerType = json.getInt("ty");, +            if (layerType <= LotteLayerType.Shape.ordinal()) {, +                layer.layerType = LotteLayerType.values()[layerType];, +            } else {, +                layer.layerType = LotteLayerType.Unknown;, +            }, +, +            layer.parentId = json.getLong("parent");, +            layer.inFrame = json.getLong("ip");, +            layer.outFrame = json.getLong("op");, +, +            if (layer.layerType == LotteLayerType.Solid) {, +                layer.solidWidth = json.getInt("sw");, +                layer.solidHeight = json.getInt("sh");, +                layer.compBounds = new Rect(0, 0, layer.solidWidth, layer.solidHeight);, +                layer.solidColor = Color.parseColor(json.getString("sc"));, +            }, +, +            JSONObject ks = json.getJSONObject("ks");, +, +            JSONObject opacity = null;, +            try {, +                opacity = json.getJSONObject("o");, +            } catch (JSONException e) { }, +            if (opacity != null) {, +                layer.opacity = new LotteAnimatableNumberValue(opacity, layer.frameRate);, +                layer.opacity.remapValues(0, 100, 0, 1);, +            }, +, +            JSONObject rotation = null;, +            try {, +                rotation = json.getJSONObject("r");, +            } catch (JSONException e) { }, +            if (rotation != null) {, +                layer.rotation = new LotteAnimatableNumberValue(rotation, layer.frameRate);, +                layer.rotation.remapWith(new RemapInterface() {, +                    @Override, +                    public float remap(float inValue) {, +                        return (float) Math.toRadians(inValue);, +                    }, +                });, +            }, +, +            JSONObject position = null;, +            try {, +                position = json.getJSONObject("p");, +            } catch (JSONException e) { }, +            if (position != null) {, +                layer.position = new LotteAnimatablePointValue(position, layer.frameRate);, +            }, +, +            JSONObject anchor = null;, +            try {, +                anchor = json.getJSONObject("a");, +            } catch (JSONException e) { }, +            if (anchor != null) {, +                layer.anchor = new LotteAnimatablePointValue(anchor, layer.frameRate);, +                layer.anchor.remapPointsFromBounds(new Rect(0, 0, 1, 1));, +                layer.anchor.setUsePathAnimation(false);, +            }, +, +            JSONObject scale = null;, +            try {, +                scale = json.getJSONObject("s");, +            } catch (JSONException e) { }, +            if (scale != null) {, +                layer.scale = new LotteAnimatableScaleValue(scale, layer.frameRate);, +            }, +, +            layer.matteType = MatteType.values()[json.getInt("tt")];, +, +            JSONArray jsonMasks = null;, +            try {, +                jsonMasks = json.getJSONArray("masksProperties");, +            } catch (JSONException e) { }, +            if (jsonMasks != null) {, +                for (int i = 0; i < jsonMasks.length(); i++) {, +                    LotteMask mask = new LotteMask(jsonMasks.getJSONObject(i), layer.frameRate);, +                    layer.masks.add(mask);]