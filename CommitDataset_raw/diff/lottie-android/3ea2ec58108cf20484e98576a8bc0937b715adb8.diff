[+++ b/lotte/src/main/java/com/airbnb/lotte/LotteAnimationView.java, +                maskedLayer.setMatte(layerDrawable);, +                maskedLayer = null;, +++ b/lotte/src/main/java/com/airbnb/lotte/LotteAnimationView.java, +                maskedLayer.setMatte(layerDrawable);, +                maskedLayer = null;, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteAnimatableLayer.java, +    /** CALayer#mask */, +    protected LotteLayerView matte;, +    protected long duration;, +    public void setMatte(LotteLayerView matte) {, +        this.matte = matte;, +    }, +, +++ b/lotte/src/main/java/com/airbnb/lotte/LotteAnimationView.java, +                maskedLayer.setMatte(layerDrawable);, +                maskedLayer = null;, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteAnimatableLayer.java, +    /** CALayer#mask */, +    protected LotteLayerView matte;, +    protected long duration;, +    public void setMatte(LotteLayerView matte) {, +        this.matte = matte;, +    }, +, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteLayerView.java, +            mask = new LotteMaskLayer(layerModel.getMasks(), composition);, +            childContainerLayer.setMask(mask);, +++ b/lotte/src/main/java/com/airbnb/lotte/LotteAnimationView.java, +                maskedLayer.setMatte(layerDrawable);, +                maskedLayer = null;, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteAnimatableLayer.java, +    /** CALayer#mask */, +    protected LotteLayerView matte;, +    protected long duration;, +    public void setMatte(LotteLayerView matte) {, +        this.matte = matte;, +    }, +, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteLayerView.java, +            mask = new LotteMaskLayer(layerModel.getMasks(), composition);, +            childContainerLayer.setMask(mask);, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteMaskLayer.java, +, +            // TODO: animations, +, +    public List<LotteMask> getMasks() {, +        return masks;, +    }, +++ b/lotte/src/main/java/com/airbnb/lotte/LotteAnimationView.java, +                maskedLayer.setMatte(layerDrawable);, +                maskedLayer = null;, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteAnimatableLayer.java, +    /** CALayer#mask */, +    protected LotteLayerView matte;, +    protected long duration;, +    public void setMatte(LotteLayerView matte) {, +        this.matte = matte;, +    }, +, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteLayerView.java, +            mask = new LotteMaskLayer(layerModel.getMasks(), composition);, +            childContainerLayer.setMask(mask);, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteMaskLayer.java, +, +            // TODO: animations, +, +    public List<LotteMask> getMasks() {, +        return masks;, +    }, +++ b/lotte/src/main/java/com/airbnb/lotte/model/LotteMask.java, +import org.json.JSONException;, +    public LotteMask(JSONObject json, int frameRate) {, +        try {, +            closed = json.getBoolean("cl");, +            inverted = json.getBoolean("inv");, +            String mode = json.getString("mode");, +            switch (mode) {, +                case "a":, +                    maskMode = MaskMode.MaskModeAdd;, +                    break;, +                case "s":, +                    maskMode = MaskMode.MaskModeSubtract;, +                    break;, +                case "i":, +                    maskMode = MaskMode.MaskModeIntersect;, +                    break;, +                default:, +                        maskMode = MaskMode.MaskModeUnknown;, +            }, +, +            maskPath = new LotteAnimatableShapeValue(json.getJSONObject("pt"), frameRate, closed);, +            opacity = new LotteAnimatableNumberValue(json.getJSONObject("o"), frameRate);, +        } catch (JSONException e) {, +            throw new IllegalArgumentException("Unable to parse mask. " + json, e);, +        }]