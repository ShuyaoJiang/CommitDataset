[+++ b/LottieSample/src/androidTest/java/com/airbnb/lottie/LottieSnapshotProvider.java, +    LottieValueCallback<ColorFilter> blueColorFilter = new LottieValueCallback<ColorFilter>(new SimpleColorFilter(Color.GREEN));, +    LottieAnimationView animationView = new LottieAnimationView(context);, +    LottieComposition composition = LottieComposition.Factory.fromFileSync(context, "Tests/Shapes.json");, +    animationView.setComposition(composition);, +    animationView.setProgress(0f);, +    ViewGroup.LayoutParams params = new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);, +    animationView.addValueCallback(new KeyPath("**"), LottieProperty.COLOR_FILTER, blueColorFilter);, +    recordSnapshot(animationView, 1080, "android", "Dynamic Properties", "Color Filter before blue", params);, +    blueColorFilter.setValue(new SimpleColorFilter(Color.BLUE));, +    recordSnapshot(animationView, 1080, "android", "Dynamic Properties", "Color Filter after blue", params);, +, +++ b/LottieSample/src/androidTest/java/com/airbnb/lottie/LottieSnapshotProvider.java, +    LottieValueCallback<ColorFilter> blueColorFilter = new LottieValueCallback<ColorFilter>(new SimpleColorFilter(Color.GREEN));, +    LottieAnimationView animationView = new LottieAnimationView(context);, +    LottieComposition composition = LottieComposition.Factory.fromFileSync(context, "Tests/Shapes.json");, +    animationView.setComposition(composition);, +    animationView.setProgress(0f);, +    ViewGroup.LayoutParams params = new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);, +    animationView.addValueCallback(new KeyPath("**"), LottieProperty.COLOR_FILTER, blueColorFilter);, +    recordSnapshot(animationView, 1080, "android", "Dynamic Properties", "Color Filter before blue", params);, +    blueColorFilter.setValue(new SimpleColorFilter(Color.BLUE));, +    recordSnapshot(animationView, 1080, "android", "Dynamic Properties", "Color Filter after blue", params);, +, +++ b/lottie/src/main/java/com/airbnb/lottie/animation/content/BaseStrokeContent.java, +  private final BaseLayer layer;, +    this.layer = layer;, +        colorFilterAnimation.addUpdateListener(this);, +        layer.addAnimation(colorFilterAnimation);, +++ b/LottieSample/src/androidTest/java/com/airbnb/lottie/LottieSnapshotProvider.java, +    LottieValueCallback<ColorFilter> blueColorFilter = new LottieValueCallback<ColorFilter>(new SimpleColorFilter(Color.GREEN));, +    LottieAnimationView animationView = new LottieAnimationView(context);, +    LottieComposition composition = LottieComposition.Factory.fromFileSync(context, "Tests/Shapes.json");, +    animationView.setComposition(composition);, +    animationView.setProgress(0f);, +    ViewGroup.LayoutParams params = new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);, +    animationView.addValueCallback(new KeyPath("**"), LottieProperty.COLOR_FILTER, blueColorFilter);, +    recordSnapshot(animationView, 1080, "android", "Dynamic Properties", "Color Filter before blue", params);, +    blueColorFilter.setValue(new SimpleColorFilter(Color.BLUE));, +    recordSnapshot(animationView, 1080, "android", "Dynamic Properties", "Color Filter after blue", params);, +, +++ b/lottie/src/main/java/com/airbnb/lottie/animation/content/BaseStrokeContent.java, +  private final BaseLayer layer;, +    this.layer = layer;, +        colorFilterAnimation.addUpdateListener(this);, +        layer.addAnimation(colorFilterAnimation);, +++ b/lottie/src/main/java/com/airbnb/lottie/animation/content/FillContent.java, +  private final BaseLayer layer;, +    this.layer = layer;, +        colorFilterAnimation.addUpdateListener(this);, +        layer.addAnimation(colorFilterAnimation);, +++ b/LottieSample/src/androidTest/java/com/airbnb/lottie/LottieSnapshotProvider.java, +    LottieValueCallback<ColorFilter> blueColorFilter = new LottieValueCallback<ColorFilter>(new SimpleColorFilter(Color.GREEN));, +    LottieAnimationView animationView = new LottieAnimationView(context);, +    LottieComposition composition = LottieComposition.Factory.fromFileSync(context, "Tests/Shapes.json");, +    animationView.setComposition(composition);, +    animationView.setProgress(0f);, +    ViewGroup.LayoutParams params = new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);, +    animationView.addValueCallback(new KeyPath("**"), LottieProperty.COLOR_FILTER, blueColorFilter);, +    recordSnapshot(animationView, 1080, "android", "Dynamic Properties", "Color Filter before blue", params);, +    blueColorFilter.setValue(new SimpleColorFilter(Color.BLUE));, +    recordSnapshot(animationView, 1080, "android", "Dynamic Properties", "Color Filter after blue", params);, +, +++ b/lottie/src/main/java/com/airbnb/lottie/animation/content/BaseStrokeContent.java, +  private final BaseLayer layer;, +    this.layer = layer;, +        colorFilterAnimation.addUpdateListener(this);, +        layer.addAnimation(colorFilterAnimation);, +++ b/lottie/src/main/java/com/airbnb/lottie/animation/content/FillContent.java, +  private final BaseLayer layer;, +    this.layer = layer;, +        colorFilterAnimation.addUpdateListener(this);, +        layer.addAnimation(colorFilterAnimation);, +++ b/lottie/src/main/java/com/airbnb/lottie/animation/content/GradientFillContent.java, +import android.support.annotation.NonNull;, +  @NonNull private final String name;, +  private final BaseLayer layer;, +  public GradientFillContent(final LottieDrawable lottieDrawable, BaseLayer layer, GradientFill fill) {, +    this.layer = layer;, +         colorFilterAnimation.addUpdateListener(this);, +         layer.addAnimation(colorFilterAnimation);, +++ b/LottieSample/src/androidTest/java/com/airbnb/lottie/LottieSnapshotProvider.java, +    LottieValueCallback<ColorFilter> blueColorFilter = new LottieValueCallback<ColorFilter>(new SimpleColorFilter(Color.GREEN));, +    LottieAnimationView animationView = new LottieAnimationView(context);, +    LottieComposition composition = LottieComposition.Factory.fromFileSync(context, "Tests/Shapes.json");, +    animationView.setComposition(composition);, +    animationView.setProgress(0f);, +    ViewGroup.LayoutParams params = new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);, +    animationView.addValueCallback(new KeyPath("**"), LottieProperty.COLOR_FILTER, blueColorFilter);, +    recordSnapshot(animationView, 1080, "android", "Dynamic Properties", "Color Filter before blue", params);, +    blueColorFilter.setValue(new SimpleColorFilter(Color.BLUE));, +    recordSnapshot(animationView, 1080, "android", "Dynamic Properties", "Color Filter after blue", params);, +, +++ b/lottie/src/main/java/com/airbnb/lottie/animation/content/BaseStrokeContent.java, +  private final BaseLayer layer;, +    this.layer = layer;, +        colorFilterAnimation.addUpdateListener(this);, +        layer.addAnimation(colorFilterAnimation);, +++ b/lottie/src/main/java/com/airbnb/lottie/animation/content/FillContent.java, +  private final BaseLayer layer;]