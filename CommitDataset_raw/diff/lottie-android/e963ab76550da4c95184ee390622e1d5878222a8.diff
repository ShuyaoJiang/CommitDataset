[+++ b/lotte/src/main/java/com/airbnb/lotte/animation/BaseLotteAnimatableValue.java, +    protected abstract T valueFromObject(Object object) throws JSONException;, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/BaseLotteAnimatableValue.java, +    protected abstract T valueFromObject(Object object) throws JSONException;, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableScaleValue.java, +public class LotteAnimatableScaleValue extends BaseLotteAnimatableValue<LotteTransform3D> {, +        super(scaleValues, frameRate, compDuration);, +    }, +, +    @Override, +    protected LotteTransform3D valueFromObject(Object object) throws JSONException {, +        JSONArray array = (JSONArray) object;, +            if (array.length() >= 2) {, +                return new LotteTransform3D().scale((float) array.getDouble(0) / 100f, (float) array.getDouble(1) / 100f);, +        LotteTransformKeyframeAnimation animation = new LotteTransformKeyframeAnimation(duration, compDuration, keyTimes, keyValues, interpolators);, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/BaseLotteAnimatableValue.java, +    protected abstract T valueFromObject(Object object) throws JSONException;, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableScaleValue.java, +public class LotteAnimatableScaleValue extends BaseLotteAnimatableValue<LotteTransform3D> {, +        super(scaleValues, frameRate, compDuration);, +    }, +, +    @Override, +    protected LotteTransform3D valueFromObject(Object object) throws JSONException {, +        JSONArray array = (JSONArray) object;, +            if (array.length() >= 2) {, +                return new LotteTransform3D().scale((float) array.getDouble(0) / 100f, (float) array.getDouble(1) / 100f);, +        LotteTransformKeyframeAnimation animation = new LotteTransformKeyframeAnimation(duration, compDuration, keyTimes, keyValues, interpolators);, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteLayer.java, +                if (L.DBG) Log.d(TAG, "\tScale=" + layer.scale.toString());, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/BaseLotteAnimatableValue.java, +    protected abstract T valueFromObject(Object object) throws JSONException;, +++ b/lotte/src/main/java/com/airbnb/lotte/animation/LotteAnimatableScaleValue.java, +public class LotteAnimatableScaleValue extends BaseLotteAnimatableValue<LotteTransform3D> {, +        super(scaleValues, frameRate, compDuration);, +    }, +, +    @Override, +    protected LotteTransform3D valueFromObject(Object object) throws JSONException {, +        JSONArray array = (JSONArray) object;, +            if (array.length() >= 2) {, +                return new LotteTransform3D().scale((float) array.getDouble(0) / 100f, (float) array.getDouble(1) / 100f);, +        LotteTransformKeyframeAnimation animation = new LotteTransformKeyframeAnimation(duration, compDuration, keyTimes, keyValues, interpolators);, +++ b/lotte/src/main/java/com/airbnb/lotte/layers/LotteLayer.java, +                if (L.DBG) Log.d(TAG, "\tScale=" + layer.scale.toString());, +++ b/lotte/src/main/java/com/airbnb/lotte/model/LotteShapeTransform.java, +                ", scale=" + scale.toString() +]