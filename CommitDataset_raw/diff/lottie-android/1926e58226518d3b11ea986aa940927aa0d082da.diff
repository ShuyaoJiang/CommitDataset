[+++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/PlayerFragment.kt, +import com.airbnb.lottie.LottieAnimationView, +, +            currentFrameView.text = updateFramesAndDurationLabel(animationView), +, +, +    private fun updateFramesAndDurationLabel(animation: LottieAnimationView): String {, +        val currentFrame = animation.frame.toString(), +        val totalFrames = ("%.0f").format(animation.maxFrame), +, +        val animationSpeed: Float = Math.abs(animation.speed), +, +		val totalTime = ((animation.duration / animationSpeed) / 1000.0), +        val totalTimeFormatted = ("%.1f").format(totalTime), +, +        val progress = (totalTime / 100.0) * (Math.round(animation.progress * 100.0)), +        val progressFormatted = ("%.1f").format(progress), +, +        return "$currentFrame/$totalFrames\n$progressFormatted/$totalTimeFormatted", +    }, +++ b/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/PlayerFragment.kt, +import com.airbnb.lottie.LottieAnimationView, +, +            currentFrameView.text = updateFramesAndDurationLabel(animationView), +, +, +    private fun updateFramesAndDurationLabel(animation: LottieAnimationView): String {, +        val currentFrame = animation.frame.toString(), +        val totalFrames = ("%.0f").format(animation.maxFrame), +, +        val animationSpeed: Float = Math.abs(animation.speed), +, +		val totalTime = ((animation.duration / animationSpeed) / 1000.0), +        val totalTimeFormatted = ("%.1f").format(totalTime), +, +        val progress = (totalTime / 100.0) * (Math.round(animation.progress * 100.0)), +        val progressFormatted = ("%.1f").format(progress), +, +        return "$currentFrame/$totalFrames\n$progressFormatted/$totalTimeFormatted", +    }, +++ b/LottieSample/src/main/res/layout/control_bar_player_controls.xml, +        android:paddingBottom="12dp", +        android:paddingTop="12dp">, +                android:layout_marginTop="16dp"]