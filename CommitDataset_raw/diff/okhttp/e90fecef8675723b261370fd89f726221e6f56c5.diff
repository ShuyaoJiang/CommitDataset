[+++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +import okio.BufferedSource;, +import okio.Sink;, +      // Stream the response to the System.out as it is returned from the server., +      Sink out = Okio.sink(System.out);, +      BufferedSource source = response.body().source();, +      while (!source.exhausted()) {, +        out.write(source.buffer(), source.buffer().size());, +        out.flush();, +      }, +, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +import okio.BufferedSource;, +import okio.Sink;, +      // Stream the response to the System.out as it is returned from the server., +      Sink out = Okio.sink(System.out);, +      BufferedSource source = response.body().source();, +      while (!source.exhausted()) {, +        out.write(source.buffer(), source.buffer().size());, +        out.flush();, +      }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Spdy3ConnectionTest.java, +      sink.write(new Buffer().writeUtf8("f"), 1); // This will time out waiting on the write window., +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +import okio.BufferedSource;, +import okio.Sink;, +      // Stream the response to the System.out as it is returned from the server., +      Sink out = Okio.sink(System.out);, +      BufferedSource source = response.body().source();, +      while (!source.exhausted()) {, +        out.write(source.buffer(), source.buffer().size());, +        out.flush();, +      }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Spdy3ConnectionTest.java, +      sink.write(new Buffer().writeUtf8("f"), 1); // This will time out waiting on the write window., +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyStream.java, +  private long readTimeoutMillis = 0;, +      while (byteCount > 0) {, +          toWrite = Math.min(bytesLeftInWriteWindow, byteCount);, +        byteCount -= toWrite;, +        connection.writeData(id, false, source, toWrite);, +      }]