[+++ /dev/null, +++ /dev/null, +++ b/okhttp/src/main/java/okhttp3/internal/cache/CacheRequest.kt, +/*, + * Copyright (C) 2014 Square, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package okhttp3.internal.cache, +, +import java.io.IOException, +import okio.Sink, +, +interface CacheRequest {, +  @Throws(IOException::class), +  fun body(): Sink, +, +  fun abort(), +}, +++ /dev/null, +++ b/okhttp/src/main/java/okhttp3/internal/cache/CacheRequest.kt, +/*, + * Copyright (C) 2014 Square, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package okhttp3.internal.cache, +, +import java.io.IOException, +import okio.Sink, +, +interface CacheRequest {, +  @Throws(IOException::class), +  fun body(): Sink, +, +  fun abort(), +}, +++ b/okhttp/src/main/java/okhttp3/internal/http/ExchangeCode.kt, +/*, + * Copyright (C) 2012 The Android Open Source Project, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package okhttp3.internal.http, +, +import java.io.IOException, +import okhttp3.Headers, +import okhttp3.Request, +import okhttp3.Response, +import okhttp3.internal.connection.RealConnection, +import okio.Sink, +import okio.Source, +, +/** Encodes HTTP requests and decodes HTTP responses.  */, +interface ExchangeCodec {, +, +  /** Returns the connection that carries this codec.  */, +  fun connection(): RealConnection, +, +  /** Returns an output stream where the request body can be streamed.  */, +  @Throws(IOException::class), +  fun createRequestBody(request: Request, contentLength: Long): Sink, +, +  /** This should update the HTTP engine's sentRequestMillis field.  */, +  @Throws(IOException::class), +  fun writeRequestHeaders(request: Request), +, +  /** Flush the request to the underlying socket.  */, +  @Throws(IOException::class), +  fun flushRequest()]