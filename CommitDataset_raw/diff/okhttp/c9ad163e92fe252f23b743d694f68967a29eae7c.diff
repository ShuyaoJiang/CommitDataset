[+++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +          return new X509Certificate[0];, +++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +          return new X509Certificate[0];, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +import java.net.ProtocolException;, +  @Test public void tooManyProxyAuthFailuresWithConnectionClose() throws IOException {, +    server.useHttps(sslContext.getSocketFactory(), true);, +    server.setProtocols(Collections.singletonList(Protocol.HTTP_1_1));, +    for (int i = 0; i < 21; i++) {, +      server.enqueue(new MockResponse(), +          .setResponseCode(407), +          .addHeader("Proxy-Authenticate: Basic realm=\"localhost\""), +          .addHeader("Connection: close"));, +    }, +, +    client = client.newBuilder(), +        .sslSocketFactory(sslContext.getSocketFactory()), +        .proxy(server.toProxyAddress()), +        .proxyAuthenticator(new RecordingOkAuthenticator("password")), +        .hostnameVerifier(new RecordingHostnameVerifier()), +        .build();, +, +    Request request = new Request.Builder(), +        .url("https://android.com/foo"), +        .build();, +    try {, +      client.newCall(request).execute();, +      fail();, +    } catch (ProtocolException expected) {, +    }, +  }, +, +++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +          return new X509Certificate[0];, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +import java.net.ProtocolException;, +  @Test public void tooManyProxyAuthFailuresWithConnectionClose() throws IOException {, +    server.useHttps(sslContext.getSocketFactory(), true);, +    server.setProtocols(Collections.singletonList(Protocol.HTTP_1_1));, +    for (int i = 0; i < 21; i++) {, +      server.enqueue(new MockResponse(), +          .setResponseCode(407), +          .addHeader("Proxy-Authenticate: Basic realm=\"localhost\""), +          .addHeader("Connection: close"));, +    }, +, +    client = client.newBuilder(), +        .sslSocketFactory(sslContext.getSocketFactory()), +        .proxy(server.toProxyAddress()), +        .proxyAuthenticator(new RecordingOkAuthenticator("password")), +        .hostnameVerifier(new RecordingHostnameVerifier()), +        .build();, +, +    Request request = new Request.Builder(), +        .url("https://android.com/foo"), +        .build();, +    try {, +      client.newCall(request).execute();, +      fail();, +    } catch (ProtocolException expected) {, +    }, +  }, +, +++ b/okhttp-urlconnection/src/test/java/okhttp3/OkUrlFactoryTest.java, +import okhttp3.internal.URLFilter;, +++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +          return new X509Certificate[0];, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +import java.net.ProtocolException;, +  @Test public void tooManyProxyAuthFailuresWithConnectionClose() throws IOException {, +    server.useHttps(sslContext.getSocketFactory(), true);, +    server.setProtocols(Collections.singletonList(Protocol.HTTP_1_1));, +    for (int i = 0; i < 21; i++) {, +      server.enqueue(new MockResponse(), +          .setResponseCode(407), +          .addHeader("Proxy-Authenticate: Basic realm=\"localhost\""), +          .addHeader("Connection: close"));, +    }, +, +    client = client.newBuilder(), +        .sslSocketFactory(sslContext.getSocketFactory()), +        .proxy(server.toProxyAddress()), +        .proxyAuthenticator(new RecordingOkAuthenticator("password")), +        .hostnameVerifier(new RecordingHostnameVerifier()), +        .build();, +, +    Request request = new Request.Builder(), +        .url("https://android.com/foo"), +        .build();, +    try {, +      client.newCall(request).execute();, +      fail();, +    } catch (ProtocolException expected) {, +    }, +  }, +, +++ b/okhttp-urlconnection/src/test/java/okhttp3/OkUrlFactoryTest.java, +import okhttp3.internal.URLFilter;, +++ b/okhttp/src/main/java/okhttp3/CertificatePinner.java]