[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +    serverSocket = serverSocketFactory.createServerSocket();, +    serverSocket.setReuseAddress(port != 0); // Reuse the port if the port number was specified., +    serverSocket.bind(new InetSocketAddress(inetAddress, port), 50);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +    serverSocket = serverSocketFactory.createServerSocket();, +    serverSocket.setReuseAddress(port != 0); // Reuse the port if the port number was specified., +    serverSocket.bind(new InetSocketAddress(inetAddress, port), 50);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/DiskLruCacheTest.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +    serverSocket = serverSocketFactory.createServerSocket();, +    serverSocket.setReuseAddress(port != 0); // Reuse the port if the port number was specified., +    serverSocket.bind(new InetSocketAddress(inetAddress, port), 50);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/DiskLruCacheTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/DiskLruCache.java, +    if (entry == null) {, +      return null;, +    }, +    if (!entry.readable) {, +      return null;, +    }, +, +    // Open all streams eagerly to guarantee that we see a single published, +    // snapshot. If we opened streams lazily then the streams could come, +    // from different edits., +    Source[] sources = new Source[valueCount];, +    try {, +      for (int i = 0; i < valueCount; i++) {, +        sources[i] = Okio.source(entry.cleanFiles[i]);, +      }, +    } catch (FileNotFoundException e) {, +      // A file must have been deleted manually!, +      for (int i = 0; i < valueCount; i++) {, +        if (sources[i] != null) {, +          Util.closeQuietly(sources[i]);, +        } else {, +          break;, +        }, +      }, +      return null;, +    }, +    return new Snapshot(key, entry.sequenceNumber, sources, entry.lengths);]