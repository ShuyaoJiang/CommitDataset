[+++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +      final CacheResponse cacheResponse) throws IOException {, +    final BufferedSource body = Okio.buffer(Okio.source(cacheResponse.getBody()));, +      @Override public BufferedSource source() {, +  private static ResponseBody createOkBody(final URLConnection urlConnection) throws IOException {, +    final BufferedSource body = Okio.buffer(Okio.source(urlConnection.getInputStream()));, +    return new ResponseBody() {, +      @Override public BufferedSource source() {, +      return new InputStream() {, +        @Override public int read() throws IOException {, +      };, +    }, +++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +      final CacheResponse cacheResponse) throws IOException {, +    final BufferedSource body = Okio.buffer(Okio.source(cacheResponse.getBody()));, +      @Override public BufferedSource source() {, +  private static ResponseBody createOkBody(final URLConnection urlConnection) throws IOException {, +    final BufferedSource body = Okio.buffer(Okio.source(urlConnection.getInputStream()));, +    return new ResponseBody() {, +      @Override public BufferedSource source() {, +      return new InputStream() {, +        @Override public int read() throws IOException {, +      };, +    }, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java, +    InputStream is = httpUrlConnection.getInputStream();, +      is.read();, +++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +      final CacheResponse cacheResponse) throws IOException {, +    final BufferedSource body = Okio.buffer(Okio.source(cacheResponse.getBody()));, +      @Override public BufferedSource source() {, +  private static ResponseBody createOkBody(final URLConnection urlConnection) throws IOException {, +    final BufferedSource body = Okio.buffer(Okio.source(urlConnection.getInputStream()));, +    return new ResponseBody() {, +      @Override public BufferedSource source() {, +      return new InputStream() {, +        @Override public int read() throws IOException {, +      };, +    }, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java, +    InputStream is = httpUrlConnection.getInputStream();, +      is.read();, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/ResponseCacheTest.java, +        InputStream is = httpURLConnection.getInputStream();, +          is.read();, +++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +      final CacheResponse cacheResponse) throws IOException {, +    final BufferedSource body = Okio.buffer(Okio.source(cacheResponse.getBody()));, +      @Override public BufferedSource source() {, +  private static ResponseBody createOkBody(final URLConnection urlConnection) throws IOException {, +    final BufferedSource body = Okio.buffer(Okio.source(urlConnection.getInputStream()));, +    return new ResponseBody() {, +      @Override public BufferedSource source() {, +      return new InputStream() {, +        @Override public int read() throws IOException {, +      };, +    }, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java, +    InputStream is = httpUrlConnection.getInputStream();, +      is.read();, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/ResponseCacheTest.java, +        InputStream is = httpURLConnection.getInputStream();, +          is.read();, +++ b/okhttp-ws/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java, +      @Override public BufferedSource source() {, +++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +      final CacheResponse cacheResponse) throws IOException {, +    final BufferedSource body = Okio.buffer(Okio.source(cacheResponse.getBody()));, +      @Override public BufferedSource source() {, +  private static ResponseBody createOkBody(final URLConnection urlConnection) throws IOException {, +    final BufferedSource body = Okio.buffer(Okio.source(urlConnection.getInputStream()));, +    return new ResponseBody() {, +      @Override public BufferedSource source() {, +      return new InputStream() {, +        @Override public int read() throws IOException {, +      };, +    }, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java, +    InputStream is = httpUrlConnection.getInputStream();, +      is.read();, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/ResponseCacheTest.java, +        InputStream is = httpURLConnection.getInputStream();, +          is.read();, +++ b/okhttp-ws/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java, +      @Override public BufferedSource source() {, +++ b/okhttp/src/main/java/com/squareup/okhttp/ResponseBody.java, +  public final InputStream byteStream() {, +  public abstract BufferedSource source();, +  public final Reader charStream() {, +++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +      final CacheResponse cacheResponse) throws IOException {, +    final BufferedSource body = Okio.buffer(Okio.source(cacheResponse.getBody()));, +      @Override public BufferedSource source() {, +  private static ResponseBody createOkBody(final URLConnection urlConnection) throws IOException {, +    final BufferedSource body = Okio.buffer(Okio.source(urlConnection.getInputStream()));, +    return new ResponseBody() {, +      @Override public BufferedSource source() {, +      return new InputStream() {, +        @Override public int read() throws IOException {, +      };]