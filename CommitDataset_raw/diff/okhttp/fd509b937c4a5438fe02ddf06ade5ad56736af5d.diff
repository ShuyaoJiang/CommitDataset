[+++ b/okhttp-tests/src/test/java/okhttp3/CookiesTest.java, +import java.util.Arrays;, +  @Test public void acceptOriginalServerMatchesSubdomain() throws Exception {, +    CookieManager cookieManager = new CookieManager(null, ACCEPT_ORIGINAL_SERVER);, +    JavaNetCookieJar cookieJar = new JavaNetCookieJar(cookieManager);, +, +    HttpUrl url = HttpUrl.parse("https://www.squareup.com/");, +    cookieJar.saveFromResponse(url, Arrays.asList(, +        Cookie.parse(url, "a=android; Domain=squareup.com")));, +    List<Cookie> actualCookies = cookieJar.loadForRequest(url);, +    assertEquals(1, actualCookies.size());, +    assertEquals("a", actualCookies.get(0).name());, +    assertEquals("android", actualCookies.get(0).value());, +  }, +, +  @Test public void acceptOriginalServerMatchesRfc2965Dot() throws Exception {, +    CookieManager cookieManager = new CookieManager(null, ACCEPT_ORIGINAL_SERVER);, +    JavaNetCookieJar cookieJar = new JavaNetCookieJar(cookieManager);, +, +    HttpUrl url = HttpUrl.parse("https://www.squareup.com/");, +    cookieJar.saveFromResponse(url, Arrays.asList(, +        Cookie.parse(url, "a=android; Domain=.squareup.com")));, +    List<Cookie> actualCookies = cookieJar.loadForRequest(url);, +    assertEquals(1, actualCookies.size());, +    assertEquals("a", actualCookies.get(0).name());, +    assertEquals("android", actualCookies.get(0).value());, +  }, +, +  @Test public void acceptOriginalServerMatchesExactly() throws Exception {, +    CookieManager cookieManager = new CookieManager(null, ACCEPT_ORIGINAL_SERVER);, +    JavaNetCookieJar cookieJar = new JavaNetCookieJar(cookieManager);, +, +    HttpUrl url = HttpUrl.parse("https://squareup.com/");, +    cookieJar.saveFromResponse(url, Arrays.asList(, +        Cookie.parse(url, "a=android; Domain=squareup.com")));, +    List<Cookie> actualCookies = cookieJar.loadForRequest(url);, +    assertEquals(1, actualCookies.size());, +    assertEquals("a", actualCookies.get(0).name());, +    assertEquals("android", actualCookies.get(0).value());, +  }, +, +  @Test public void acceptOriginalServerDoesNotMatchDifferentServer() throws Exception {, +    CookieManager cookieManager = new CookieManager(null, ACCEPT_ORIGINAL_SERVER);, +    JavaNetCookieJar cookieJar = new JavaNetCookieJar(cookieManager);, +, +    HttpUrl url1 = HttpUrl.parse("https://api.squareup.com/");, +    cookieJar.saveFromResponse(url1, Arrays.asList(, +        Cookie.parse(url1, "a=android; Domain=api.squareup.com")));, +, +    HttpUrl url2 = HttpUrl.parse("https://www.squareup.com/");, +    List<Cookie> actualCookies = cookieJar.loadForRequest(url2);, +    assertEquals(Collections.<Cookie>emptyList(), actualCookies);, +  }, +, +++ b/okhttp-tests/src/test/java/okhttp3/CookiesTest.java, +import java.util.Arrays;, +  @Test public void acceptOriginalServerMatchesSubdomain() throws Exception {, +    CookieManager cookieManager = new CookieManager(null, ACCEPT_ORIGINAL_SERVER);, +    JavaNetCookieJar cookieJar = new JavaNetCookieJar(cookieManager);, +, +    HttpUrl url = HttpUrl.parse("https://www.squareup.com/");, +    cookieJar.saveFromResponse(url, Arrays.asList(, +        Cookie.parse(url, "a=android; Domain=squareup.com")));, +    List<Cookie> actualCookies = cookieJar.loadForRequest(url);, +    assertEquals(1, actualCookies.size());, +    assertEquals("a", actualCookies.get(0).name());, +    assertEquals("android", actualCookies.get(0).value());, +  }, +, +  @Test public void acceptOriginalServerMatchesRfc2965Dot() throws Exception {, +    CookieManager cookieManager = new CookieManager(null, ACCEPT_ORIGINAL_SERVER);, +    JavaNetCookieJar cookieJar = new JavaNetCookieJar(cookieManager);, +, +    HttpUrl url = HttpUrl.parse("https://www.squareup.com/");, +    cookieJar.saveFromResponse(url, Arrays.asList(, +        Cookie.parse(url, "a=android; Domain=.squareup.com")));, +    List<Cookie> actualCookies = cookieJar.loadForRequest(url);, +    assertEquals(1, actualCookies.size());, +    assertEquals("a", actualCookies.get(0).name());, +    assertEquals("android", actualCookies.get(0).value());, +  }, +, +  @Test public void acceptOriginalServerMatchesExactly() throws Exception {, +    CookieManager cookieManager = new CookieManager(null, ACCEPT_ORIGINAL_SERVER);, +    JavaNetCookieJar cookieJar = new JavaNetCookieJar(cookieManager);, +, +    HttpUrl url = HttpUrl.parse("https://squareup.com/");, +    cookieJar.saveFromResponse(url, Arrays.asList(, +        Cookie.parse(url, "a=android; Domain=squareup.com")));, +    List<Cookie> actualCookies = cookieJar.loadForRequest(url);, +    assertEquals(1, actualCookies.size());, +    assertEquals("a", actualCookies.get(0).name());, +    assertEquals("android", actualCookies.get(0).value());, +  }, +, +  @Test public void acceptOriginalServerDoesNotMatchDifferentServer() throws Exception {, +    CookieManager cookieManager = new CookieManager(null, ACCEPT_ORIGINAL_SERVER);, +    JavaNetCookieJar cookieJar = new JavaNetCookieJar(cookieManager);, +, +    HttpUrl url1 = HttpUrl.parse("https://api.squareup.com/");]