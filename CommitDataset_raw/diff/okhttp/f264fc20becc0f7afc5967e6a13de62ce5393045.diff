[+++ b/okhttp/src/main/java/okhttp3/Headers.java, +    this.namesAndValues = builder.namesAndValues.toArray(new String[0]);, +++ b/okhttp/src/main/java/okhttp3/Headers.java, +    this.namesAndValues = builder.namesAndValues.toArray(new String[0]);, +++ b/okhttp/src/main/java/okhttp3/internal/Util.java, +    return result.toArray(new String[0]);, +++ b/okhttp/src/main/java/okhttp3/Headers.java, +    this.namesAndValues = builder.namesAndValues.toArray(new String[0]);, +++ b/okhttp/src/main/java/okhttp3/internal/Util.java, +    return result.toArray(new String[0]);, +++ b/okhttp/src/main/java/okhttp3/internal/cache/DiskLruCache.java, +    for (Entry entry : lruEntries.values().toArray(new Entry[0])) {, +    for (Entry entry : lruEntries.values().toArray(new Entry[0])) {, +++ b/okhttp/src/main/java/okhttp3/Headers.java, +    this.namesAndValues = builder.namesAndValues.toArray(new String[0]);, +++ b/okhttp/src/main/java/okhttp3/internal/Util.java, +    return result.toArray(new String[0]);, +++ b/okhttp/src/main/java/okhttp3/internal/cache/DiskLruCache.java, +    for (Entry entry : lruEntries.values().toArray(new Entry[0])) {, +    for (Entry entry : lruEntries.values().toArray(new Entry[0])) {, +++ b/okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java, +        streamsToClose = streams.values().toArray(new Http2Stream[0]);, +            streamsToNotify = streams.values().toArray(new Http2Stream[0]);, +        streamsCopy = streams.values().toArray(new Http2Stream[0]);]