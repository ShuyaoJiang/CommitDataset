[+++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java, +, +    /**, +     * Notifies that an additional {@code windowSizeIncrement} bytes can be, +     * sent on {@code streamId} or the connection, if {@code streamId} is zero., +     */, +    void windowUpdate(int streamId, int windowSizeIncrement);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java, +, +    /**, +     * Notifies that an additional {@code windowSizeIncrement} bytes can be, +     * sent on {@code streamId} or the connection, if {@code streamId} is zero., +     */, +    void windowUpdate(int streamId, int windowSizeIncrement);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java, +  /**, +   * Inform peer that an additional {@code windowSizeIncrement} bytes can be, +   * sent on {@code streamId} or the connection, if {@code streamId} is zero., +   */, +  void windowUpdate(int streamId, int windowSizeIncrement) throws IOException;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java, +, +    /**, +     * Notifies that an additional {@code windowSizeIncrement} bytes can be, +     * sent on {@code streamId} or the connection, if {@code streamId} is zero., +     */, +    void windowUpdate(int streamId, int windowSizeIncrement);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java, +  /**, +   * Inform peer that an additional {@code windowSizeIncrement} bytes can be, +   * sent on {@code streamId} or the connection, if {@code streamId} is zero., +   */, +  void windowUpdate(int streamId, int windowSizeIncrement) throws IOException;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft09.java, +      if ((length & 0xffffffffL) > 16383) {, +        throw new IOException("FRAME_SIZE_ERROR max size is 16383: " + length);, +      }, +      if (length != 4) throw ioException("TYPE_WINDOW_UPDATE length !=4: %s", length);, +      int increment = (in.readInt() & 0x7fffffff);, +      if (increment == 0) throw ioException("windowSizeIncrement was 0", increment);, +      handler.windowUpdate(streamId, increment);, +    @Override public synchronized void windowUpdate(int streamId, int increment), +      if (increment == 0 || (increment & 0xffffffffL) > 0x7fffffffL) {, +        throw new IllegalArgumentException(, +            "windowSizeIncrement must be between 1 and 0x7fffffff: " + (increment & 0xffffffffL));, +      }, +      out.writeInt(4 << 16 | (TYPE_WINDOW_UPDATE & 0xff) << 8); // No flags., +      out.writeInt(streamId);, +      out.writeInt(increment);, +    if ((bytes & 0xffffffffL) > 16383) {, +      throw new IllegalArgumentException("FRAME_SIZE_ERROR max size is 16383: " + bytes);, +    }, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java, +, +    /**, +     * Notifies that an additional {@code windowSizeIncrement} bytes can be, +     * sent on {@code streamId} or the connection, if {@code streamId} is zero., +     */, +    void windowUpdate(int streamId, int windowSizeIncrement);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java, +  /**, +   * Inform peer that an additional {@code windowSizeIncrement} bytes can be, +   * sent on {@code streamId} or the connection, if {@code streamId} is zero., +   */, +  void windowUpdate(int streamId, int windowSizeIncrement) throws IOException;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft09.java, +      if ((length & 0xffffffffL) > 16383) {, +        throw new IOException("FRAME_SIZE_ERROR max size is 16383: " + length);, +      }, +      if (length != 4) throw ioException("TYPE_WINDOW_UPDATE length !=4: %s", length);, +      int increment = (in.readInt() & 0x7fffffff);, +      if (increment == 0) throw ioException("windowSizeIncrement was 0", increment);, +      handler.windowUpdate(streamId, increment);, +    @Override public synchronized void windowUpdate(int streamId, int increment), +      if (increment == 0 || (increment & 0xffffffffL) > 0x7fffffffL) {, +        throw new IllegalArgumentException(, +            "windowSizeIncrement must be between 1 and 0x7fffffff: " + (increment & 0xffffffffL));, +      }, +      out.writeInt(4 << 16 | (TYPE_WINDOW_UPDATE & 0xff) << 8); // No flags., +      out.writeInt(streamId);, +      out.writeInt(increment);, +    if ((bytes & 0xffffffffL) > 16383) {, +      throw new IllegalArgumentException("FRAME_SIZE_ERROR max size is 16383: " + bytes);, +    }, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java, +      int increment = w2 & 0x7fffffff;, +      if (increment == 0) throw ioException("windowSizeIncrement was 0", increment);, +      handler.windowUpdate(streamId, increment);, +      if ((byteCount & 0xffffffffL) > 0xffffffL) {, +        throw new IllegalArgumentException(, +            "FRAME_TOO_LARGE max size is 16Mib: " + (byteCount & 0xffffffffL));, +    @Override public synchronized void windowUpdate(int streamId, int increment), +      if (increment == 0 || (increment & 0xffffffffL) > 0x7fffffffL) {, +        throw new IllegalArgumentException(, +            "windowSizeIncrement must be between 1 and 0x7fffffff: " + (increment & 0xffffffffL));, +      }, +      out.writeInt(increment);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java, +, +    /**]