[+++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +      Response response = HttpTransport.readResponse(in).request(request).build();, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +      Response response = HttpTransport.readResponse(in).request(request).build();, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +      return new Response.Builder(), +          .request(request), +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +      Response response = HttpTransport.readResponse(in).request(request).build();, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +      return new Response.Builder(), +          .request(request), +++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java, +import com.squareup.okhttp.internal.http.SyntheticHeaders;, +    return new Builder(this);, +    private Request request;, +    private Headers.Builder headers;, +    public Builder() {, +      headers = new Headers.Builder();, +    }, +, +    private Builder(Response response) {, +      this.request = response.request;, +      this.statusLine = response.statusLine;, +      this.handshake = response.handshake;, +      this.headers = response.headers.newBuilder();, +      this.body = response.body;, +      this.redirectedBy = response.redirectedBy;, +    }, +, +    public Builder request(Request request) {, +      return this;, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +      Response response = HttpTransport.readResponse(in).request(request).build();, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +      return new Response.Builder(), +          .request(request), +++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java, +import com.squareup.okhttp.internal.http.SyntheticHeaders;, +    return new Builder(this);, +    private Request request;, +    private Headers.Builder headers;, +    public Builder() {, +      headers = new Headers.Builder();, +    }, +, +    private Builder(Response response) {, +      this.request = response.request;, +      this.statusLine = response.statusLine;, +      this.handshake = response.handshake;, +      this.headers = response.headers.newBuilder();, +      this.body = response.body;, +      this.redirectedBy = response.redirectedBy;, +    }, +, +    public Builder request(Request request) {, +      return this;, +++ b/okhttp/src/main/java/com/squareup/okhttp/ResponseSource.java, +, +  public boolean usesCache() {, +    return this == CACHE || this == CONDITIONAL_CACHE;, +  }, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +      Response response = HttpTransport.readResponse(in).request(request).build();, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +      return new Response.Builder(), +          .request(request), +++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java, +import com.squareup.okhttp.internal.http.SyntheticHeaders;, +    return new Builder(this);, +    private Request request;, +    private Headers.Builder headers;, +    public Builder() {, +      headers = new Headers.Builder();, +    }, +, +    private Builder(Response response) {, +      this.request = response.request;, +      this.statusLine = response.statusLine;, +      this.handshake = response.handshake;, +      this.headers = response.headers.newBuilder();, +      this.body = response.body;, +      this.redirectedBy = response.redirectedBy;, +    }, +, +    public Builder request(Request request) {, +      return this;, +++ b/okhttp/src/main/java/com/squareup/okhttp/ResponseSource.java, +, +  public boolean usesCache() {, +    return this == CACHE || this == CONDITIONAL_CACHE;, +  }, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/CacheStrategy.java, +import com.squareup.okhttp.MediaType;, +import java.io.IOException;, +import java.io.InputStream;, +import static com.squareup.okhttp.internal.Util.EMPTY_INPUT_STREAM;, +, +  private static final Response.Body EMPTY_BODY = new Response.Body() {, +    @Override public boolean ready() throws IOException {]