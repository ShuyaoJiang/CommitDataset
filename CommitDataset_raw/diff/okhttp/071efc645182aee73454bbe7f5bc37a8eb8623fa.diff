[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java, +, +  @Test public void clearFragment() throws Exception {, +    HttpUrl url = HttpUrl.parse("http://host/#fragment"), +        .newBuilder(), +        .fragment(null), +        .build();, +    assertEquals("http://host/", url.toString());, +    assertEquals(null, url.fragment());, +    assertEquals(null, url.encodedFragment());, +  }, +, +  @Test public void clearEncodedFragment() throws Exception {, +    HttpUrl url = HttpUrl.parse("http://host/#fragment"), +        .newBuilder(), +        .encodedFragment(null), +        .build();, +    assertEquals("http://host/", url.toString());, +    assertEquals(null, url.fragment());, +    assertEquals(null, url.encodedFragment());, +  }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java, +, +  @Test public void clearFragment() throws Exception {, +    HttpUrl url = HttpUrl.parse("http://host/#fragment"), +        .newBuilder(), +        .fragment(null), +        .build();, +    assertEquals("http://host/", url.toString());, +    assertEquals(null, url.fragment());, +    assertEquals(null, url.encodedFragment());, +  }, +, +  @Test public void clearEncodedFragment() throws Exception {, +    HttpUrl url = HttpUrl.parse("http://host/#fragment"), +        .newBuilder(), +        .encodedFragment(null), +        .build();, +    assertEquals("http://host/", url.toString());, +    assertEquals(null, url.fragment());, +    assertEquals(null, url.encodedFragment());, +  }, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpUrl.java, +      this.encodedFragment = fragment != null, +          ? canonicalize(fragment, FRAGMENT_ENCODE_SET, false, false), +          : null;, +      this.encodedFragment = encodedFragment != null, +          ? canonicalize(encodedFragment, FRAGMENT_ENCODE_SET, true, false), +          : null;]