[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +   *, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +   *, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/CustomDispatcherTest.java, +    final URL url = mockWebServer.url("/").url();, +        final URL url = mockWebServer.url(path).url();, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +   *, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/CustomDispatcherTest.java, +    final URL url = mockWebServer.url("/").url();, +        final URL url = mockWebServer.url(path).url();, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +    URL url = server.url("/").url();, +        .addHeader("Location: " + server.url("/new-path")), +    URLConnection connection = server.url("/").url().openConnection();, +    URLConnection connection = server.url("/").url().openConnection();, +    URLConnection connection = server.url("/").url().openConnection();, +    URLConnection urlConnection = server.url("/").url().openConnection();, +    URLConnection urlConnection2 = server.url("/").url().openConnection();, +      server.url("/a").url().openConnection().getInputStream();, +    server.url("/b").url().openConnection().getInputStream(); // Should succeed., +    URLConnection connection = server.url("/").url().openConnection();, +    URLConnection connection = server.url("/").url().openConnection();, +    URLConnection connection = server.url("/").url().openConnection();, +    HttpURLConnection connection = (HttpURLConnection) server.url("/").url().openConnection();, +    URLConnection connection = server.url("/").url().openConnection();, +        server.url("/").url().openConnection().connect();, +      server.url("/").url().openConnection().connect();, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +   *, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/CustomDispatcherTest.java, +    final URL url = mockWebServer.url("/").url();, +        final URL url = mockWebServer.url(path).url();, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +    URL url = server.url("/").url();, +        .addHeader("Location: " + server.url("/new-path")), +    URLConnection connection = server.url("/").url().openConnection();, +    URLConnection connection = server.url("/").url().openConnection();, +    URLConnection connection = server.url("/").url().openConnection();, +    URLConnection urlConnection = server.url("/").url().openConnection();, +    URLConnection urlConnection2 = server.url("/").url().openConnection();, +      server.url("/a").url().openConnection().getInputStream();, +    server.url("/b").url().openConnection().getInputStream(); // Should succeed., +    URLConnection connection = server.url("/").url().openConnection();, +    URLConnection connection = server.url("/").url().openConnection();, +    URLConnection connection = server.url("/").url().openConnection();, +    HttpURLConnection connection = (HttpURLConnection) server.url("/").url().openConnection();, +    URLConnection connection = server.url("/").url().openConnection();, +        server.url("/").url().openConnection().connect();, +      server.url("/").url().openConnection().connect();, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/CacheAdapterTest.java, +    return server.url("/").url();, +    return server.url("/").url();, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +   *, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/CustomDispatcherTest.java, +    final URL url = mockWebServer.url("/").url();, +        final URL url = mockWebServer.url(path).url();, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +    URL url = server.url("/").url();, +        .addHeader("Location: " + server.url("/new-path")), +    URLConnection connection = server.url("/").url().openConnection();, +    URLConnection connection = server.url("/").url().openConnection();, +    URLConnection connection = server.url("/").url().openConnection();, +    URLConnection urlConnection = server.url("/").url().openConnection();, +    URLConnection urlConnection2 = server.url("/").url().openConnection();, +      server.url("/a").url().openConnection().getInputStream();, +    server.url("/b").url().openConnection().getInputStream(); // Should succeed., +    URLConnection connection = server.url("/").url().openConnection();, +    URLConnection connection = server.url("/").url().openConnection();, +    URLConnection connection = server.url("/").url().openConnection();, +    HttpURLConnection connection = (HttpURLConnection) server.url("/").url().openConnection();, +    URLConnection connection = server.url("/").url().openConnection();, +        server.url("/").url().openConnection().connect();, +      server.url("/").url().openConnection().connect();, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/CacheAdapterTest.java, +    return server.url("/").url();, +    return server.url("/").url();, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/ResponseCacheTest.java, +    URL url = server.url("/").url();, +    HttpURLConnection urlConnection = openConnection(server.url("/").url());, +    urlConnection = openConnection(server.url("/").url()); // cached!, +    HttpsURLConnection c1 = (HttpsURLConnection) openConnection(server.url("/").url());, +    HttpsURLConnection c2 = (HttpsURLConnection) openConnection(server.url("/").url()); // cached!, +    HttpURLConnection connection = openConnection(server.url("/").url());, +    connection = openConnection(server.url("/").url()); // cached!, +    assertEquals("ABC", readAscii(openConnection(server.url("/foo").url())));, +    assertEquals("ABC", readAscii(openConnection(server.url("/bar").url())));, +    assertEquals("DEF", readAscii(openConnection(server.url("/baz").url())));, +    HttpsURLConnection connection1 = (HttpsURLConnection) openConnection(server.url("/").url());, +    HttpsURLConnection connection2 = (HttpsURLConnection) openConnection(server.url("/").url());, +        .addHeader("Location: " + server2.url("/").url()));, +    HttpURLConnection connection1 = openConnection(server.url("/").url());, +    HttpURLConnection connection2 = openConnection(server.url("/").url());, +    URL url = server.url("/").url();, +    URL url = server.url("/").url();, +        new InputStreamReader(openConnection(server.url("/").url()).getInputStream()));, +    URLConnection connection = openConnection(server.url("/").url());, +    URLConnection connection = openConnection(server.url("/").url());]