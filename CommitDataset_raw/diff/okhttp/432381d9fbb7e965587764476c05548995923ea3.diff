[+++ b/okhttp-sse/src/main/java/okhttp3/internal/sse/RealEventSource.java, +import okhttp3.internal.Internal;, +import okhttp3.internal.connection.Exchange;, +      // This is a long-lived response. Cancel full-call timeouts., +      Exchange exchange = Internal.instance.exchange(response);, +      if (exchange != null) exchange.timeoutEarlyExit();, +, +++ b/okhttp-sse/src/main/java/okhttp3/internal/sse/RealEventSource.java, +import okhttp3.internal.Internal;, +import okhttp3.internal.connection.Exchange;, +      // This is a long-lived response. Cancel full-call timeouts., +      Exchange exchange = Internal.instance.exchange(response);, +      if (exchange != null) exchange.timeoutEarlyExit();, +, +++ b/okhttp-sse/src/test/java/okhttp3/internal/sse/EventSourceHttpTest.java, +  @Test public void fullCallTimeoutDoesNotApplyOnceConnected() throws Exception {, +        .callTimeout(250, TimeUnit.MILLISECONDS), +  @Test public void fullCallTimeoutAppliesToSetup() throws Exception {, +    client = client.newBuilder(), +        .callTimeout(250, TimeUnit.MILLISECONDS), +        .build();, +, +    server.enqueue(new MockResponse(), +        .setHeadersDelay(500, TimeUnit.MILLISECONDS), +        .setHeader("content-type", "text/event-stream"), +        .setBody("data: hey\n\n"));, +, +    newEventSource();, +    listener.assertFailure("timeout");, +  }, +, +++ b/okhttp-sse/src/main/java/okhttp3/internal/sse/RealEventSource.java, +import okhttp3.internal.Internal;, +import okhttp3.internal.connection.Exchange;, +      // This is a long-lived response. Cancel full-call timeouts., +      Exchange exchange = Internal.instance.exchange(response);, +      if (exchange != null) exchange.timeoutEarlyExit();, +, +++ b/okhttp-sse/src/test/java/okhttp3/internal/sse/EventSourceHttpTest.java, +  @Test public void fullCallTimeoutDoesNotApplyOnceConnected() throws Exception {, +        .callTimeout(250, TimeUnit.MILLISECONDS), +  @Test public void fullCallTimeoutAppliesToSetup() throws Exception {, +    client = client.newBuilder(), +        .callTimeout(250, TimeUnit.MILLISECONDS), +        .build();, +, +    server.enqueue(new MockResponse(), +        .setHeadersDelay(500, TimeUnit.MILLISECONDS), +        .setHeader("content-type", "text/event-stream"), +        .setBody("data: hey\n\n"));, +, +    newEventSource();, +    listener.assertFailure("timeout");, +  }, +, +++ b/okhttp/src/main/java/okhttp3/internal/connection/Exchange.java, +  public void timeoutEarlyExit() {, +    transmitter.timeoutEarlyExit();, +  }, +]