[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, new AbstractResponseCache() {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, new AbstractResponseCache() {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLEncodingTest.java, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, new AbstractResponseCache() {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, new AbstractResponseCache() {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLEncodingTest.java, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, new AbstractResponseCache() {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/huc/CacheAdapterTest.java, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, responseCache);, +    Internal.instance.setResponseCache(client, responseCache);, +    Internal.instance.setResponseCache(client, responseCache);, +    Internal.instance.setResponseCache(client, responseCache);, +    Internal.instance.setResponseCache(client, responseCache);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, new AbstractResponseCache() {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLEncodingTest.java, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, new AbstractResponseCache() {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/huc/CacheAdapterTest.java, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, responseCache);, +    Internal.instance.setResponseCache(client, responseCache);, +    Internal.instance.setResponseCache(client, responseCache);, +    Internal.instance.setResponseCache(client, responseCache);, +    Internal.instance.setResponseCache(client, responseCache);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/huc/ResponseCacheTest.java, +import com.squareup.okhttp.AbstractResponseCache;, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, cache);, +    assertTrue(Internal.instance.internalCache(client) instanceof CacheAdapter);, +    Internal.instance.setResponseCache(client, null);, +    assertNull(Internal.instance.internalCache(client));, +    assertNull(client.getCache());, +    Internal.instance.setResponseCache(client,, +        new InsecureResponseCache(new InMemoryResponseCache()));, +    Internal.instance.setResponseCache(client, new AbstractResponseCache() {, +      @Override public CacheResponse get(URI uri, String requestMethod,, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, new AbstractResponseCache() {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLEncodingTest.java, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, new AbstractResponseCache() {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/huc/CacheAdapterTest.java, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, responseCache);, +    Internal.instance.setResponseCache(client, responseCache);, +    Internal.instance.setResponseCache(client, responseCache);, +    Internal.instance.setResponseCache(client, responseCache);, +    Internal.instance.setResponseCache(client, responseCache);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/huc/ResponseCacheTest.java, +import com.squareup.okhttp.AbstractResponseCache;, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, cache);, +    assertTrue(Internal.instance.internalCache(client) instanceof CacheAdapter);, +    Internal.instance.setResponseCache(client, null);, +    assertNull(Internal.instance.internalCache(client));, +    assertNull(client.getCache());, +    Internal.instance.setResponseCache(client,, +        new InsecureResponseCache(new InMemoryResponseCache()));, +    Internal.instance.setResponseCache(client, new AbstractResponseCache() {, +      @Override public CacheResponse get(URI uri, String requestMethod,, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +  Object getOwner() {, +  void setOwner(Object owner) {, +  boolean clearOwner() {, +  void closeIfOwnedBy(Object owner) throws IOException {, +  void connect(int connectTimeout, int readTimeout, int writeTimeout, Request tunnelRequest), +  boolean isConnected() {, +  boolean isAlive() {, +  boolean isReadable() {, +  void resetIdleStartTime() {, +  boolean isIdle() {, +  boolean isExpired(long keepAliveDurationNs) {, +  long getIdleStartTimeNs() {, +  boolean isSpdy() {, +  void setProtocol(Protocol protocol) {, +  void setTimeouts(int readTimeoutMillis, int writeTimeoutMillis) throws IOException {, +  void incrementRecycleCount() {, +  int recycleCount() {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, new AbstractResponseCache() {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLEncodingTest.java, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, new AbstractResponseCache() {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/huc/CacheAdapterTest.java, +import com.squareup.okhttp.internal.Internal;, +    Internal.instance.setResponseCache(client, responseCache);, +    Internal.instance.setResponseCache(client, responseCache);]