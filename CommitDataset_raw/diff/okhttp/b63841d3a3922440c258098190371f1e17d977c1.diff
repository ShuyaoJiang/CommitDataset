[+++ b/okhttp/src/main/java/com/squareup/okhttp/Address.java, +  public Dns dns() {, +  public SocketFactory socketFactory() {, +  public Authenticator authenticator() {, +  public List<Protocol> protocols() {, +  public List<ConnectionSpec> connectionSpecs() {, +  public ProxySelector proxySelector() {, +   * delegate to the {@linkplain #proxySelector proxy selector}., +  public Proxy proxy() {, +  public SSLSocketFactory sslSocketFactory() {, +  public HostnameVerifier hostnameVerifier() {, +  public CertificatePinner certificatePinner() {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Address.java, +  public Dns dns() {, +  public SocketFactory socketFactory() {, +  public Authenticator authenticator() {, +  public List<Protocol> protocols() {, +  public List<ConnectionSpec> connectionSpecs() {, +  public ProxySelector proxySelector() {, +   * delegate to the {@linkplain #proxySelector proxy selector}., +  public Proxy proxy() {, +  public SSLSocketFactory sslSocketFactory() {, +  public HostnameVerifier hostnameVerifier() {, +  public CertificatePinner certificatePinner() {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Route.java, +   * <strong>Warning:</strong> This may disagree with {@link Address#proxy}, +++ b/okhttp/src/main/java/com/squareup/okhttp/Address.java, +  public Dns dns() {, +  public SocketFactory socketFactory() {, +  public Authenticator authenticator() {, +  public List<Protocol> protocols() {, +  public List<ConnectionSpec> connectionSpecs() {, +  public ProxySelector proxySelector() {, +   * delegate to the {@linkplain #proxySelector proxy selector}., +  public Proxy proxy() {, +  public SSLSocketFactory sslSocketFactory() {, +  public HostnameVerifier hostnameVerifier() {, +  public CertificatePinner certificatePinner() {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Route.java, +   * <strong>Warning:</strong> This may disagree with {@link Address#proxy}, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/RouteSelector.java, +    resetNextProxy(address.url(), address.proxy());, +    if (failedRoute.proxy().type() != Proxy.Type.DIRECT && address.proxySelector() != null) {, +      address.proxySelector().connectFailed(, +      List<Proxy> selectedProxies = address.proxySelector().select(url.uri());, +      List<InetAddress> addresses = address.dns().lookup(socketHost);, +++ b/okhttp/src/main/java/com/squareup/okhttp/Address.java, +  public Dns dns() {, +  public SocketFactory socketFactory() {, +  public Authenticator authenticator() {, +  public List<Protocol> protocols() {, +  public List<ConnectionSpec> connectionSpecs() {, +  public ProxySelector proxySelector() {, +   * delegate to the {@linkplain #proxySelector proxy selector}., +  public Proxy proxy() {, +  public SSLSocketFactory sslSocketFactory() {, +  public HostnameVerifier hostnameVerifier() {, +  public CertificatePinner certificatePinner() {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Route.java, +   * <strong>Warning:</strong> This may disagree with {@link Address#proxy}, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/RouteSelector.java, +    resetNextProxy(address.url(), address.proxy());, +    if (failedRoute.proxy().type() != Proxy.Type.DIRECT && address.proxySelector() != null) {, +      address.proxySelector().connectFailed(, +      List<Proxy> selectedProxies = address.proxySelector().select(url.uri());, +      List<InetAddress> addresses = address.dns().lookup(socketHost);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/StreamAllocation.java, +    newConnection.connect(connectTimeout, readTimeout, writeTimeout, address.connectionSpecs(),, +++ b/okhttp/src/main/java/com/squareup/okhttp/Address.java, +  public Dns dns() {, +  public SocketFactory socketFactory() {, +  public Authenticator authenticator() {, +  public List<Protocol> protocols() {, +  public List<ConnectionSpec> connectionSpecs() {, +  public ProxySelector proxySelector() {, +   * delegate to the {@linkplain #proxySelector proxy selector}., +  public Proxy proxy() {, +  public SSLSocketFactory sslSocketFactory() {, +  public HostnameVerifier hostnameVerifier() {, +  public CertificatePinner certificatePinner() {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Route.java, +   * <strong>Warning:</strong> This may disagree with {@link Address#proxy}, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/RouteSelector.java, +    resetNextProxy(address.url(), address.proxy());, +    if (failedRoute.proxy().type() != Proxy.Type.DIRECT && address.proxySelector() != null) {, +      address.proxySelector().connectFailed(, +      List<Proxy> selectedProxies = address.proxySelector().select(url.uri());, +      List<InetAddress> addresses = address.dns().lookup(socketHost);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/StreamAllocation.java, +    newConnection.connect(connectTimeout, readTimeout, writeTimeout, address.connectionSpecs(),, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/io/RealConnection.java, +    if (route.address().sslSocketFactory() == null, +            ? address.socketFactory().createSocket(), +    if (route.address().sslSocketFactory() != null) {, +    SSLSocketFactory sslSocketFactory = address.sslSocketFactory();, +            sslSocket, address.url().host(), address.protocols());, +      if (!address.hostnameVerifier().verify(address.url().host(), sslSocket.getSession())) {, +      address.certificatePinner().check(address.url().host(),, +              route.address().authenticator(), response, route.proxy());]