[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          // Workaround for bug on Android: closing the input/output streams should close an, +          // SSLSocket but does not. https://code.google.com/p/android/issues/detail?id=97564, +          socket.close();, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          // Workaround for bug on Android: closing the input/output streams should close an, +          // SSLSocket but does not. https://code.google.com/p/android/issues/detail?id=97564, +          socket.close();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionSpecTest.java, +import java.util.HashSet;, +    return new HashSet<String>(Arrays.asList(values));, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          // Workaround for bug on Android: closing the input/output streams should close an, +          // SSLSocket but does not. https://code.google.com/p/android/issues/detail?id=97564, +          socket.close();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionSpecTest.java, +import java.util.HashSet;, +    return new HashSet<String>(Arrays.asList(values));, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionSpec.java, +        String[] oldEnabledCipherSuites = cipherSuitesToEnable;, +        if (cipherSuitesToEnable == null) {, +          oldEnabledCipherSuites = sslSocket.getEnabledCipherSuites();, +        }, +      List<String> cipherSuitesToEnableList =, +          Util.intersect(cipherSuites, cipherSuitesToSelectFrom);, +      cipherSuitesToEnable = cipherSuitesToEnableList.toArray(, +          new String[cipherSuitesToEnableList.size()]);, +    List<String> tlsVersionsToEnable = Util.intersect(tlsVersions, protocolsToSelectFrom);, +        .tlsVersions(tlsVersionsToEnable.toArray(new String[tlsVersionsToEnable.size()])), +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          // Workaround for bug on Android: closing the input/output streams should close an, +          // SSLSocket but does not. https://code.google.com/p/android/issues/detail?id=97564, +          socket.close();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionSpecTest.java, +import java.util.HashSet;, +    return new HashSet<String>(Arrays.asList(values));, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionSpec.java, +        String[] oldEnabledCipherSuites = cipherSuitesToEnable;, +        if (cipherSuitesToEnable == null) {, +          oldEnabledCipherSuites = sslSocket.getEnabledCipherSuites();, +        }, +      List<String> cipherSuitesToEnableList =, +          Util.intersect(cipherSuites, cipherSuitesToSelectFrom);, +      cipherSuitesToEnable = cipherSuitesToEnableList.toArray(, +          new String[cipherSuitesToEnableList.size()]);, +    List<String> tlsVersionsToEnable = Util.intersect(tlsVersions, protocolsToSelectFrom);, +        .tlsVersions(tlsVersionsToEnable.toArray(new String[tlsVersionsToEnable.size()])), +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Util.java, +   * Returns a mutable copy of {@code first} containing only elements also in {@code second}. The, +   * returned elements are in the same order as in {@code first}., +  public static <T> List<T> intersect(T[] first, T[] second) {]