[+++ b/src/test/java/com/google/mockwebserver/MockWebServerTest.java, +import java.io.IOException;, +import java.net.SocketTimeoutException;, +        server.play();, +                .addHeader("Location: " + server.getUrl("/new-path")), +, +    public void testNonHexadecimalChunkSize() throws Exception {, +        server.enqueue(new MockResponse(), +                .setBody("G\r\nxxxxxxxxxxxxxxxx\r\n0\r\n\r\n"), +                .clearHeaders(), +                .addHeader("Transfer-encoding: chunked"));, +        server.play();, +, +        URLConnection connection = server.getUrl("/").openConnection();, +        InputStream in = connection.getInputStream();, +        try {, +            in.read();, +            fail();, +        } catch (IOException expected) {, +        }, +    }, +, +    public void testResponseTimeout() throws Exception {, +        server.enqueue(new MockResponse(), +                .setBody("ABC"), +                .clearHeaders(), +                .addHeader("Content-Length: 4"));, +        server.enqueue(new MockResponse(), +                .setBody("DEF"));, +        server.play();, +, +        URLConnection urlConnection = server.getUrl("/").openConnection();, +        urlConnection.setReadTimeout(1000);, +        InputStream in = urlConnection.getInputStream();, +        assertEquals('A', in.read());, +        assertEquals('B', in.read());, +        assertEquals('C', in.read());, +        try {, +            in.read(); // if Content-Length was accurate, this would return -1 immediately, +            fail();, +        } catch (SocketTimeoutException expected) {, +        }, +, +        URLConnection urlConnection2 = server.getUrl("/").openConnection();, +        InputStream in2 = urlConnection2.getInputStream();, +        assertEquals('D', in2.read());, +        assertEquals('E', in2.read());, +        assertEquals('F', in2.read());, +        assertEquals(-1, in2.read());, +, +        assertEquals(0, server.takeRequest().getSequenceNumber());, +        assertEquals(0, server.takeRequest().getSequenceNumber());, +    }]