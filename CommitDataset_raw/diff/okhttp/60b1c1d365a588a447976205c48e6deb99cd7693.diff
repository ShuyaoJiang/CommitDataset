[+++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java, +    server.listener.assertFailure(EOFException.class, null);, +    client.listener.assertFailure(EOFException.class, null);, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java, +    server.listener.assertFailure(EOFException.class, null);, +    client.listener.assertFailure(EOFException.class, null);, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java, +    clientListener.assertFailure(SocketTimeoutException.class, "timeout");, +    clientListener.assertFailure(SocketTimeoutException.class, "timeout");, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java, +    server.listener.assertFailure(EOFException.class, null);, +    client.listener.assertFailure(EOFException.class, null);, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java, +    clientListener.assertFailure(SocketTimeoutException.class, "timeout");, +    clientListener.assertFailure(SocketTimeoutException.class, "timeout");, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketRecorder.java, +  public void assertFailure(Class<? extends IOException> cls, String message) {, +    assertEquals(message, failure.t.getMessage());, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java, +    server.listener.assertFailure(EOFException.class, null);, +    client.listener.assertFailure(EOFException.class, null);, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java, +    clientListener.assertFailure(SocketTimeoutException.class, "timeout");, +    clientListener.assertFailure(SocketTimeoutException.class, "timeout");, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketRecorder.java, +  public void assertFailure(Class<? extends IOException> cls, String message) {, +    assertEquals(message, failure.t.getMessage());, +++ b/okhttp/src/main/java/okhttp3/EventListener.java, +// TODO(jwilson): make this public after the 3.7 release., +abstract class EventListener {, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java, +    server.listener.assertFailure(EOFException.class, null);, +    client.listener.assertFailure(EOFException.class, null);, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java, +    clientListener.assertFailure(SocketTimeoutException.class, "timeout");, +    clientListener.assertFailure(SocketTimeoutException.class, "timeout");, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketRecorder.java, +  public void assertFailure(Class<? extends IOException> cls, String message) {, +    assertEquals(message, failure.t.getMessage());, +++ b/okhttp/src/main/java/okhttp3/EventListener.java, +// TODO(jwilson): make this public after the 3.7 release., +abstract class EventListener {, +++ b/okhttp/src/main/java/okhttp3/OkHttpClient.java, +  // TODO(jwilson): make this public after the 3.7 release., +  /*public*/ EventListener.Factory eventListenerFactory() {, +    // TODO(jwilson): make this public after the 3.7 release., +    /*public*/ Builder eventListener(EventListener eventListener) {, +    // TODO(jwilson): make this public after the 3.7 release., +    /*public*/ Builder eventListenerFactory(EventListener.Factory eventListenerFactory) {, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java, +    server.listener.assertFailure(EOFException.class, null);, +    client.listener.assertFailure(EOFException.class, null);, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java, +    clientListener.assertFailure(SocketTimeoutException.class, "timeout");, +    clientListener.assertFailure(SocketTimeoutException.class, "timeout");, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketRecorder.java, +  public void assertFailure(Class<? extends IOException> cls, String message) {, +    assertEquals(message, failure.t.getMessage());, +++ b/okhttp/src/main/java/okhttp3/EventListener.java, +// TODO(jwilson): make this public after the 3.7 release., +abstract class EventListener {, +++ b/okhttp/src/main/java/okhttp3/OkHttpClient.java, +  // TODO(jwilson): make this public after the 3.7 release., +  /*public*/ EventListener.Factory eventListenerFactory() {, +    // TODO(jwilson): make this public after the 3.7 release., +    /*public*/ Builder eventListener(EventListener eventListener) {, +    // TODO(jwilson): make this public after the 3.7 release., +    /*public*/ Builder eventListenerFactory(EventListener.Factory eventListenerFactory) {, +++ b/okhttp/src/main/java/okhttp3/RealCall.java, +, +    // TODO(jwilson): this is unsafe publication and not threadsafe.]