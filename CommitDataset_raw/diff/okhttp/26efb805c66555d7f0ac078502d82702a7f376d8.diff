[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/InterceptorTest.java, +  @Test public void applicationInterceptorThrowsRuntimeExceptionAsynchronous() throws Exception {, +    interceptorThrowsRuntimeExceptionAsynchronous(client.interceptors());, +  }, +, +  @Test public void networkInterceptorThrowsRuntimeExceptionAsynchronous() throws Exception {, +    interceptorThrowsRuntimeExceptionAsynchronous(client.networkInterceptors());, +  }, +, +  @Test public void applicationInterceptorReturnsNull() throws Exception {, +    server.enqueue(new MockResponse());, +, +    Interceptor interceptor = new Interceptor() {, +      @Override public Response intercept(Chain chain) throws IOException {, +        chain.proceed(chain.request());, +        return null;, +      }, +    };, +    client.interceptors().add(interceptor);, +, +    ExceptionCatchingExecutor executor = new ExceptionCatchingExecutor();, +    client.setDispatcher(new Dispatcher(executor));, +, +    Request request = new Request.Builder(), +        .url(server.url("/")), +        .build();, +    try {, +      client.newCall(request).execute();, +      fail();, +    } catch (NullPointerException expected) {, +      assertEquals("application interceptor " + interceptor, +          + " returned null", expected.getMessage());, +    }, +  }, +, +  @Test public void networkInterceptorReturnsNull() throws Exception {, +    server.enqueue(new MockResponse());, +, +    Interceptor interceptor = new Interceptor() {, +      @Override public Response intercept(Chain chain) throws IOException {, +        chain.proceed(chain.request());, +        return null;, +      }, +    };, +    client.networkInterceptors().add(interceptor);, +, +    ExceptionCatchingExecutor executor = new ExceptionCatchingExecutor();, +    client.setDispatcher(new Dispatcher(executor));, +, +    Request request = new Request.Builder(), +        .url(server.url("/")), +        .build();, +    try {, +      client.newCall(request).execute();, +      fail();, +    } catch (NullPointerException expected) {, +      assertEquals("network interceptor " + interceptor + " returned null", expected.getMessage());, +    }, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/InterceptorTest.java, +  @Test public void applicationInterceptorThrowsRuntimeExceptionAsynchronous() throws Exception {, +    interceptorThrowsRuntimeExceptionAsynchronous(client.interceptors());, +  }, +, +  @Test public void networkInterceptorThrowsRuntimeExceptionAsynchronous() throws Exception {, +    interceptorThrowsRuntimeExceptionAsynchronous(client.networkInterceptors());, +  }, +, +  @Test public void applicationInterceptorReturnsNull() throws Exception {, +    server.enqueue(new MockResponse());, +, +    Interceptor interceptor = new Interceptor() {, +      @Override public Response intercept(Chain chain) throws IOException {, +        chain.proceed(chain.request());, +        return null;, +      }, +    };, +    client.interceptors().add(interceptor);, +, +    ExceptionCatchingExecutor executor = new ExceptionCatchingExecutor();, +    client.setDispatcher(new Dispatcher(executor));, +, +    Request request = new Request.Builder(), +        .url(server.url("/")), +        .build();, +    try {, +      client.newCall(request).execute();, +      fail();, +    } catch (NullPointerException expected) {, +      assertEquals("application interceptor " + interceptor, +          + " returned null", expected.getMessage());, +    }, +  }, +, +  @Test public void networkInterceptorReturnsNull() throws Exception {, +    server.enqueue(new MockResponse());, +, +    Interceptor interceptor = new Interceptor() {, +      @Override public Response intercept(Chain chain) throws IOException {]