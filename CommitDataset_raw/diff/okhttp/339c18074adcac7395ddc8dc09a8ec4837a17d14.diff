[+++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +import okhttp3.ConnectionPool;, +    // If we don't set this reference, there's no way to clean shutdown persistent connections., +    client.setConnectionPool(ConnectionPool.getDefault());, +++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +import okhttp3.ConnectionPool;, +    // If we don't set this reference, there's no way to clean shutdown persistent connections., +    client.setConnectionPool(ConnectionPool.getDefault());, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/HttpLoggingInterceptorTest.java, +    client.setConnectionPool(null);, +++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +import okhttp3.ConnectionPool;, +    // If we don't set this reference, there's no way to clean shutdown persistent connections., +    client.setConnectionPool(ConnectionPool.getDefault());, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/HttpLoggingInterceptorTest.java, +    client.setConnectionPool(null);, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    ConnectionPool pool = ConnectionPool.getDefault();, +    pool.evictAll();, +    client.setConnectionPool(pool);, +, +++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +import okhttp3.ConnectionPool;, +    // If we don't set this reference, there's no way to clean shutdown persistent connections., +    client.setConnectionPool(ConnectionPool.getDefault());, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/HttpLoggingInterceptorTest.java, +    client.setConnectionPool(null);, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    ConnectionPool pool = ConnectionPool.getDefault();, +    pool.evictAll();, +    client.setConnectionPool(pool);, +, +++ b/okhttp-tests/src/test/java/okhttp3/ConnectionPoolTest.java, +  private final Runnable emptyRunnable = new Runnable() {, +    @Override public void run() {, +    }, +  };, +, +    pool.setCleanupRunnableForTest(emptyRunnable);, +    pool.setCleanupRunnableForTest(emptyRunnable);, +    pool.setCleanupRunnableForTest(emptyRunnable);, +    pool.setCleanupRunnableForTest(emptyRunnable);, +    pool.setCleanupRunnableForTest(emptyRunnable);, +++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +import okhttp3.ConnectionPool;, +    // If we don't set this reference, there's no way to clean shutdown persistent connections., +    client.setConnectionPool(ConnectionPool.getDefault());, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/HttpLoggingInterceptorTest.java, +    client.setConnectionPool(null);, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    ConnectionPool pool = ConnectionPool.getDefault();, +    pool.evictAll();, +    client.setConnectionPool(pool);, +, +++ b/okhttp-tests/src/test/java/okhttp3/ConnectionPoolTest.java, +  private final Runnable emptyRunnable = new Runnable() {, +    @Override public void run() {, +    }, +  };, +, +    pool.setCleanupRunnableForTest(emptyRunnable);, +    pool.setCleanupRunnableForTest(emptyRunnable);, +    pool.setCleanupRunnableForTest(emptyRunnable);, +    pool.setCleanupRunnableForTest(emptyRunnable);, +    pool.setCleanupRunnableForTest(emptyRunnable);, +++ b/okhttp-tests/src/test/java/okhttp3/ConnectionReuseTest.java, +    client.setConnectionPool(new ConnectionPool(0, 5000));, +    client.setConnectionPool(new ConnectionPool(0, 5000));, +    client.setConnectionPool(new ConnectionPool(0, 5000));, +++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +import okhttp3.ConnectionPool;, +    // If we don't set this reference, there's no way to clean shutdown persistent connections., +    client.setConnectionPool(ConnectionPool.getDefault());, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/HttpLoggingInterceptorTest.java, +    client.setConnectionPool(null);, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    ConnectionPool pool = ConnectionPool.getDefault();, +    pool.evictAll();, +    client.setConnectionPool(pool);, +, +++ b/okhttp-tests/src/test/java/okhttp3/ConnectionPoolTest.java, +  private final Runnable emptyRunnable = new Runnable() {, +    @Override public void run() {, +    }, +  };, +, +    pool.setCleanupRunnableForTest(emptyRunnable);, +    pool.setCleanupRunnableForTest(emptyRunnable);, +    pool.setCleanupRunnableForTest(emptyRunnable);, +    pool.setCleanupRunnableForTest(emptyRunnable);, +    pool.setCleanupRunnableForTest(emptyRunnable);, +++ b/okhttp-tests/src/test/java/okhttp3/ConnectionReuseTest.java, +    client.setConnectionPool(new ConnectionPool(0, 5000));, +    client.setConnectionPool(new ConnectionPool(0, 5000));, +    client.setConnectionPool(new ConnectionPool(0, 5000));, +++ b/okhttp-tests/src/test/java/okhttp3/CookieTest.java, +import java.util.List;, +import okhttp3.internal.http.HttpDate;, +import static org.junit.Assert.fail;, +  @Test public void simpleCookie() throws Exception {]