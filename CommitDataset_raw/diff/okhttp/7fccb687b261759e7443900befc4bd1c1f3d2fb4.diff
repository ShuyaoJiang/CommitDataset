[+++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/BitArray.java, +  public void toggle(int index) {, +    data[offset] ^= 1L << shiftOf(index);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/BitArray.java, +  public void toggle(int index) {, +    data[offset] ^= 1L << shiftOf(index);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/HpackDraft05.java, +        referencedHeaders.toggle(headerTableIndex(index));, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/BitArray.java, +  public void toggle(int index) {, +    data[offset] ^= 1L << shiftOf(index);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/HpackDraft05.java, +        referencedHeaders.toggle(headerTableIndex(index));, +++ b/okhttp-protocols/src/test/java/com/squareup/okhttp/internal/BitArrayTest.java, +import static org.junit.Assert.assertFalse;, +  @Test public void toggleBit() {, +    b.toggle(100);, +    b.toggle(1);, +    assertEquals(asList(1), b.toIntegerList());, +    a.toggle(64280);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/BitArray.java, +  public void toggle(int index) {, +    data[offset] ^= 1L << shiftOf(index);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/HpackDraft05.java, +        referencedHeaders.toggle(headerTableIndex(index));, +++ b/okhttp-protocols/src/test/java/com/squareup/okhttp/internal/BitArrayTest.java, +import static org.junit.Assert.assertFalse;, +  @Test public void toggleBit() {, +    b.toggle(100);, +    b.toggle(1);, +    assertEquals(asList(1), b.toIntegerList());, +    a.toggle(64280);, +++ b/okhttp-protocols/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java, +   * http://tools.ietf.org/html/draft-ietf-httpbis-header-compression-05#section-3.2.1, +   */, +  @Test public void toggleIndex() throws IOException {, +    ByteArrayOutputStream out = new ByteArrayOutputStream();, +, +    // Static table entries are copied to the top of the reference set., +    out.write(0x82); // == Indexed - Add ==, +                     // idx = 2 -> :method: GET, +    // Specifying an index to an entry in the reference set removes it., +    out.write(0x81); // == Indexed - Remove ==, +                     // idx = 1 -> :method: GET, +, +    bytesIn.set(out.toByteArray());, +    hpackReader.readHeaders(out.size());, +    hpackReader.emitReferenceSet();, +, +    assertEquals(1, hpackReader.headerCount);, +    assertEquals(42, hpackReader.headerTableByteCount);, +, +    HpackDraft05.HeaderEntry entry = hpackReader.headerTable[headerTableLength() - 1];, +    checkEntry(entry, ":method", "GET", 42);, +    assertHeaderNotReferenced(headerTableLength() - 1);, +, +    assertTrue(hpackReader.getAndReset().isEmpty());, +  }, +, +  /**]