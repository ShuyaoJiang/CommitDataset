[+++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +++ b/okhttp-logging-interceptor/src/main/java/com/squareup/okhttp/logging/HttpLoggingInterceptor.java, +        + response.request().urlString() + " (" + tookMs + "ms" + (!logHeaders ? ", ", +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +++ b/okhttp-logging-interceptor/src/main/java/com/squareup/okhttp/logging/HttpLoggingInterceptor.java, +        + response.request().urlString() + " (" + tookMs + "ms" + (!logHeaders ? ", ", +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/DispatcherTest.java, +        actualUrls.add(call.request().urlString());, +        if (call.request().urlString().equals(url)) {, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +++ b/okhttp-logging-interceptor/src/main/java/com/squareup/okhttp/logging/HttpLoggingInterceptor.java, +        + response.request().urlString() + " (" + tookMs + "ms" + (!logHeaders ? ", ", +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/DispatcherTest.java, +        actualUrls.add(call.request().urlString());, +        if (call.request().urlString().equals(url)) {, +++ b/okhttp-ws/src/main/java/com/squareup/okhttp/ws/WebSocketCall.java, +      String url = response.request().urlString();, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +++ b/okhttp-logging-interceptor/src/main/java/com/squareup/okhttp/logging/HttpLoggingInterceptor.java, +        + response.request().urlString() + " (" + tookMs + "ms" + (!logHeaders ? ", ", +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/DispatcherTest.java, +        actualUrls.add(call.request().urlString());, +        if (call.request().urlString().equals(url)) {, +++ b/okhttp-ws/src/main/java/com/squareup/okhttp/ws/WebSocketCall.java, +      String url = response.request().urlString();, +++ b/okhttp/src/main/java/com/squareup/okhttp/Cache.java, +    return Util.md5Hex(request.urlString());, +      this.url = response.request().urlString();, +      return url.equals(request.urlString()), +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +++ b/okhttp-logging-interceptor/src/main/java/com/squareup/okhttp/logging/HttpLoggingInterceptor.java, +        + response.request().urlString() + " (" + tookMs + "ms" + (!logHeaders ? ", ", +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/DispatcherTest.java, +        actualUrls.add(call.request().urlString());, +        if (call.request().urlString().equals(url)) {, +++ b/okhttp-ws/src/main/java/com/squareup/okhttp/ws/WebSocketCall.java, +      String url = response.request().urlString();, +++ b/okhttp/src/main/java/com/squareup/okhttp/Cache.java, +    return Util.md5Hex(request.urlString());, +      this.url = response.request().urlString();, +      return url.equals(request.urlString()), +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +      super("OkHttp %s", originalRequest.urlString());, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +    assertEquals("http://example.com/", request.urlString());, +++ b/okhttp-logging-interceptor/src/main/java/com/squareup/okhttp/logging/HttpLoggingInterceptor.java, +        + response.request().urlString() + " (" + tookMs + "ms" + (!logHeaders ? ", ", +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/DispatcherTest.java, +        actualUrls.add(call.request().urlString());, +        if (call.request().urlString().equals(url)) {, +++ b/okhttp-ws/src/main/java/com/squareup/okhttp/ws/WebSocketCall.java]