[+++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +    server.enqueue(new MockResponse(), +        .setSocketPolicy(SocketPolicy.DISCONNECT_AT_END), +        .setResponseCode(408), +        .setHeader("Connection", "Close"), +        .setBody("You took too long!"));, +    server.enqueue(new MockResponse().setBody("Body"));, +    Request request = new Request.Builder(), +        .url(server.url("/")), +        .build();, +    Response response = client.newCall(request).execute();, +  @Test public void requestBodyRetransmittedOnClientRequestTimeout() throws Exception {, +        .setResponseCode(408), +    Request request = new Request.Builder(), +        .build();, +    Response response = client.newCall(request).execute();, +  @Test public void disableClientRequestTimeoutRetry() throws IOException {, +    server.enqueue(new MockResponse(), +        .setSocketPolicy(SocketPolicy.DISCONNECT_AT_END), +        .setResponseCode(408), +        .setHeader("Connection", "Close"), +        .setBody("You took too long!"));, +, +    client = client.newBuilder(), +        .retryOnConnectionFailure(false), +        .build();, +, +    Request request = new Request.Builder(), +        .url(server.url("/")), +        .build();, +    Response response = client.newCall(request).execute();, +, +    assertEquals(408, response.code());, +    assertEquals("You took too long!", response.body().string());, +  }, +, +  @Test public void maxClientRequestTimeoutRetries() throws IOException {, +    server.enqueue(new MockResponse(), +        .setSocketPolicy(SocketPolicy.DISCONNECT_AT_END), +        .setResponseCode(408), +        .setHeader("Connection", "Close"), +        .setBody("You took too long!"));, +    server.enqueue(new MockResponse(), +        .setSocketPolicy(SocketPolicy.DISCONNECT_AT_END), +        .setResponseCode(408), +        .setHeader("Connection", "Close"), +        .setBody("You took too long!"));, +, +    Request request = new Request.Builder(), +        .url(server.url("/")), +        .build();, +    Response response = client.newCall(request).execute();, +, +    assertEquals(408, response.code());, +    assertEquals("You took too long!", response.body().string());, +, +    assertEquals(2, server.getRequestCount());, +  }, +, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +    server.enqueue(new MockResponse(), +        .setSocketPolicy(SocketPolicy.DISCONNECT_AT_END), +        .setResponseCode(408), +        .setHeader("Connection", "Close"), +        .setBody("You took too long!"));, +    server.enqueue(new MockResponse().setBody("Body"));, +    Request request = new Request.Builder(), +        .url(server.url("/")), +        .build();, +    Response response = client.newCall(request).execute();, +  @Test public void requestBodyRetransmittedOnClientRequestTimeout() throws Exception {, +        .setResponseCode(408), +    Request request = new Request.Builder(), +        .build();, +    Response response = client.newCall(request).execute();, +  @Test public void disableClientRequestTimeoutRetry() throws IOException {, +    server.enqueue(new MockResponse(), +        .setSocketPolicy(SocketPolicy.DISCONNECT_AT_END), +        .setResponseCode(408), +        .setHeader("Connection", "Close"), +        .setBody("You took too long!"));, +, +    client = client.newBuilder(), +        .retryOnConnectionFailure(false), +        .build();, +, +    Request request = new Request.Builder(), +        .url(server.url("/")), +        .build();, +    Response response = client.newCall(request).execute();, +, +    assertEquals(408, response.code());, +    assertEquals("You took too long!", response.body().string());, +  }, +, +  @Test public void maxClientRequestTimeoutRetries() throws IOException {, +    server.enqueue(new MockResponse(), +        .setSocketPolicy(SocketPolicy.DISCONNECT_AT_END), +        .setResponseCode(408), +        .setHeader("Connection", "Close")]