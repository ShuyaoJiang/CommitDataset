[+++ b/okhttp-tests/src/test/java/okhttp3/EventListenerTest.java, +  /** We incorrectly report a CallEnd event with the CallFailed event. */, +  @Ignore, +++ b/okhttp-tests/src/test/java/okhttp3/EventListenerTest.java, +  /** We incorrectly report a CallEnd event with the CallFailed event. */, +  @Ignore, +++ b/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java, +  public int refusedStreamCount;, +++ b/okhttp-tests/src/test/java/okhttp3/EventListenerTest.java, +  /** We incorrectly report a CallEnd event with the CallFailed event. */, +  @Ignore, +++ b/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java, +  public int refusedStreamCount;, +++ b/okhttp/src/main/java/okhttp3/internal/connection/StreamAllocation.java, +  private RouteSelector.Selection routeSelection;, +  private Route route;, +    RealConnection releasedConnection;, +      releasedConnection = connection;, +      toClose = connection != null && connection.noNewStreams, +          ? transmitterReleaseConnection(), +          : null;, +, +      if (connection != null) {, +        result = connection;, +, +      this.codec = null;, +      socket = this.released, +          ? transmitterReleaseConnection(), +          : null;, +      this.released = true;, +      socket = connection != null && this.codec == null, +          ? transmitterReleaseConnection(), +          : null;, +      if (connection != null || !reportedAcquired) releasedConnection = null;, +      if (released) throw new IllegalStateException();, +, +          connection.refusedStreamCount++;, +          if (connection.refusedStreamCount > 1) {, +      this.codec = null;, +++ b/okhttp-tests/src/test/java/okhttp3/EventListenerTest.java, +  /** We incorrectly report a CallEnd event with the CallFailed event. */, +  @Ignore, +++ b/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java, +  public int refusedStreamCount;, +++ b/okhttp/src/main/java/okhttp3/internal/connection/StreamAllocation.java, +  private RouteSelector.Selection routeSelection;, +  private Route route;, +    RealConnection releasedConnection;, +      releasedConnection = connection;, +      toClose = connection != null && connection.noNewStreams, +          ? transmitterReleaseConnection(), +          : null;, +, +      if (connection != null) {, +        result = connection;, +, +      this.codec = null;, +      socket = this.released, +          ? transmitterReleaseConnection(), +          : null;, +      this.released = true;, +      socket = connection != null && this.codec == null, +          ? transmitterReleaseConnection(), +          : null;, +      if (connection != null || !reportedAcquired) releasedConnection = null;, +      if (released) throw new IllegalStateException();, +, +          connection.refusedStreamCount++;, +          if (connection.refusedStreamCount > 1) {, +      this.codec = null;, +++ b/okhttp/src/main/java/okhttp3/internal/http/RetryAndFollowUpInterceptor.java, +        releaseConnection = false;, +        if (!recover(e, transmitter, requestSendStarted, request)) throw e;, +++ b/okhttp-tests/src/test/java/okhttp3/EventListenerTest.java, +  /** We incorrectly report a CallEnd event with the CallFailed event. */, +  @Ignore, +++ b/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java, +  public int refusedStreamCount;, +++ b/okhttp/src/main/java/okhttp3/internal/connection/StreamAllocation.java, +  private RouteSelector.Selection routeSelection;, +  private Route route;, +    RealConnection releasedConnection;, +      releasedConnection = connection;, +      toClose = connection != null && connection.noNewStreams, +          ? transmitterReleaseConnection(), +          : null;, +, +      if (connection != null) {, +        result = connection;, +, +      this.codec = null;, +      socket = this.released, +          ? transmitterReleaseConnection(), +          : null;, +      this.released = true;, +      socket = connection != null && this.codec == null, +          ? transmitterReleaseConnection(), +          : null;, +      if (connection != null || !reportedAcquired) releasedConnection = null;, +      if (released) throw new IllegalStateException();]