[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java, +    Http20Draft10.Reader frameReader = (Http20Draft10.Reader) connection.frameReader;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java, +    Http20Draft10.Reader frameReader = (Http20Draft10.Reader) connection.frameReader;, +++ b/okhttp/src/main/java/com/squareup/okhttp/Headers.java, +import com.squareup.okhttp.internal.http.HttpDate;, +import java.util.Date;, +  /**, +   * Returns the last value corresponding to the specified field parsed as an, +   * HTTP date, or null if either the field is absent or cannot be parsed as a, +   * date., +   */, +  public Date getDate(String fieldName) {, +    String value = get(fieldName);, +    return value != null ? HttpDate.parse(value) : null;, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java, +    Http20Draft10.Reader frameReader = (Http20Draft10.Reader) connection.frameReader;, +++ b/okhttp/src/main/java/com/squareup/okhttp/Headers.java, +import com.squareup.okhttp.internal.http.HttpDate;, +import java.util.Date;, +  /**, +   * Returns the last value corresponding to the specified field parsed as an, +   * HTTP date, or null if either the field is absent or cannot be parsed as a, +   * date., +   */, +  public Date getDate(String fieldName) {, +    String value = get(fieldName);, +    return value != null ? HttpDate.parse(value) : null;, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +import com.squareup.okhttp.internal.http.OkHeaders;, +    if (OkHeaders.hasVaryAll(response)) {, +      this.varyHeaders = response.request().headers().getAll(OkHeaders.varyFields(response));, +          && OkHeaders.varyMatches(response, varyHeaders, request);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java, +    Http20Draft10.Reader frameReader = (Http20Draft10.Reader) connection.frameReader;, +++ b/okhttp/src/main/java/com/squareup/okhttp/Headers.java, +import com.squareup.okhttp.internal.http.HttpDate;, +import java.util.Date;, +  /**, +   * Returns the last value corresponding to the specified field parsed as an, +   * HTTP date, or null if either the field is absent or cannot be parsed as a, +   * date., +   */, +  public Date getDate(String fieldName) {, +    String value = get(fieldName);, +    return value != null ? HttpDate.parse(value) : null;, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +import com.squareup.okhttp.internal.http.OkHeaders;, +    if (OkHeaders.hasVaryAll(response)) {, +      this.varyHeaders = response.request().headers().getAll(OkHeaders.varyFields(response));, +          && OkHeaders.varyMatches(response, varyHeaders, request);, +++ b/okhttp/src/main/java/com/squareup/okhttp/Protocol.java, + * <p>, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java, +    Http20Draft10.Reader frameReader = (Http20Draft10.Reader) connection.frameReader;, +++ b/okhttp/src/main/java/com/squareup/okhttp/Headers.java, +import com.squareup.okhttp.internal.http.HttpDate;, +import java.util.Date;, +  /**, +   * Returns the last value corresponding to the specified field parsed as an, +   * HTTP date, or null if either the field is absent or cannot be parsed as a, +   * date., +   */, +  public Date getDate(String fieldName) {, +    String value = get(fieldName);, +    return value != null ? HttpDate.parse(value) : null;, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +import com.squareup.okhttp.internal.http.OkHeaders;, +    if (OkHeaders.hasVaryAll(response)) {, +      this.varyHeaders = response.request().headers().getAll(OkHeaders.varyFields(response));, +          && OkHeaders.varyMatches(response, varyHeaders, request);, +++ b/okhttp/src/main/java/com/squareup/okhttp/Protocol.java, + * <p>, +++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java, +    Http20Draft10.Reader frameReader = (Http20Draft10.Reader) connection.frameReader;, +++ b/okhttp/src/main/java/com/squareup/okhttp/Headers.java, +import com.squareup.okhttp.internal.http.HttpDate;, +import java.util.Date;, +  /**, +   * Returns the last value corresponding to the specified field parsed as an, +   * HTTP date, or null if either the field is absent or cannot be parsed as a, +   * date., +   */, +  public Date getDate(String fieldName) {, +    String value = get(fieldName);, +    return value != null ? HttpDate.parse(value) : null;, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +import com.squareup.okhttp.internal.http.OkHeaders;, +    if (OkHeaders.hasVaryAll(response)) {]