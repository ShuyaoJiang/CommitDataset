[+++ b/README.md, +  <version>2.2.0</version>, +compile 'com.squareup.okhttp:okhttp:2.2.0', +  <version>2.2.0</version>, +testCompile 'com.squareup.okhttp:mockwebserver:2.2.0', +++ b/README.md, +  <version>2.2.0</version>, +compile 'com.squareup.okhttp:okhttp:2.2.0', +  <version>2.2.0</version>, +testCompile 'com.squareup.okhttp:mockwebserver:2.2.0', +++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +   * As per the spec, the status line is held as the header with the null key. Returns {@code null}, +   * if there is no status line., +  static String extractStatusLine(Map<String, List<String>> javaResponseHeaders) {, +      return null;, +++ b/README.md, +  <version>2.2.0</version>, +compile 'com.squareup.okhttp:okhttp:2.2.0', +  <version>2.2.0</version>, +testCompile 'com.squareup.okhttp:mockwebserver:2.2.0', +++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +   * As per the spec, the status line is held as the header with the null key. Returns {@code null}, +   * if there is no status line., +  static String extractStatusLine(Map<String, List<String>> javaResponseHeaders) {, +      return null;, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java, +  @Test public void extractStatusLine() {, +    assertNull(, +        JavaApiConverter.extractStatusLine(Collections.<String, List<String>>emptyMap()));, +++ b/README.md, +  <version>2.2.0</version>, +compile 'com.squareup.okhttp:okhttp:2.2.0', +  <version>2.2.0</version>, +testCompile 'com.squareup.okhttp:mockwebserver:2.2.0', +++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +   * As per the spec, the status line is held as the header with the null key. Returns {@code null}, +   * if there is no status line., +  static String extractStatusLine(Map<String, List<String>> javaResponseHeaders) {, +      return null;, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java, +  @Test public void extractStatusLine() {, +    assertNull(, +        JavaApiConverter.extractStatusLine(Collections.<String, List<String>>emptyMap()));, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/ResponseCacheTest.java, +++ b/README.md, +  <version>2.2.0</version>, +compile 'com.squareup.okhttp:okhttp:2.2.0', +  <version>2.2.0</version>, +testCompile 'com.squareup.okhttp:mockwebserver:2.2.0', +++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +   * As per the spec, the status line is held as the header with the null key. Returns {@code null}, +   * if there is no status line., +  static String extractStatusLine(Map<String, List<String>> javaResponseHeaders) {, +      return null;, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java, +  @Test public void extractStatusLine() {, +    assertNull(, +        JavaApiConverter.extractStatusLine(Collections.<String, List<String>>emptyMap()));, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/ResponseCacheTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/OkHttpClientTest.java, +  @Test public void clonedInterceptorsListsAreIndependent() throws Exception {, +    OkHttpClient original = new OkHttpClient();, +    OkHttpClient clone = original.clone();, +    clone.interceptors().add(null);, +    clone.networkInterceptors().add(null);, +    assertEquals(0, original.interceptors().size());, +    assertEquals(0, original.networkInterceptors().size());, +  }, +, +++ b/README.md, +  <version>2.2.0</version>, +compile 'com.squareup.okhttp:okhttp:2.2.0', +  <version>2.2.0</version>, +testCompile 'com.squareup.okhttp:mockwebserver:2.2.0', +++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +   * As per the spec, the status line is held as the header with the null key. Returns {@code null}, +   * if there is no status line., +  static String extractStatusLine(Map<String, List<String>> javaResponseHeaders) {, +      return null;, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java, +  @Test public void extractStatusLine() {, +    assertNull(, +        JavaApiConverter.extractStatusLine(Collections.<String, List<String>>emptyMap()));, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/ResponseCacheTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/OkHttpClientTest.java, +  @Test public void clonedInterceptorsListsAreIndependent() throws Exception {, +    OkHttpClient original = new OkHttpClient();, +    OkHttpClient clone = original.clone();, +    clone.interceptors().add(null);, +    clone.networkInterceptors().add(null);, +    assertEquals(0, original.interceptors().size());, +    assertEquals(0, original.networkInterceptors().size());, +  }, +, +++ b/okhttp-ws/src/main/java/com/squareup/okhttp/ws/WebSocketCall.java, +public final class WebSocketCall {, +  WebSocketCall(OkHttpClient client, Request request) {, +++ b/README.md, +  <version>2.2.0</version>, +compile 'com.squareup.okhttp:okhttp:2.2.0']