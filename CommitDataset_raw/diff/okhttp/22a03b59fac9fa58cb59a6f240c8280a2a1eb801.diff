[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void onlyIfCachedReturns504WhenNotCached() throws Exception {, +    server.play();, +, +    Request request = new Request.Builder(), +        .url(server.getUrl("/")), +        .header("Cache-Control", "only-if-cached"), +        .build();, +, +    executeSynchronously(request), +        .assertCode(504), +        .assertBody(""), +        .assertNoNetworkResponse(), +        .assertNoCacheResponse();, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void onlyIfCachedReturns504WhenNotCached() throws Exception {, +    server.play();, +, +    Request request = new Request.Builder(), +        .url(server.getUrl("/")), +        .header("Cache-Control", "only-if-cached"), +        .build();, +, +    executeSynchronously(request), +        .assertCode(504), +        .assertBody(""), +        .assertNoNetworkResponse(), +        .assertNoCacheResponse();, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +  /** Asserts that the current response didn't use the network. */, +  public RecordedResponse assertNoNetworkResponse() {, +    assertNull(response.networkResponse());, +    return this;, +  }, +, +  /** Asserts that the current response didn't use the cache. */, +  public RecordedResponse assertNoCacheResponse() {, +    assertNull(response.cacheResponse());, +    return this;, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void onlyIfCachedReturns504WhenNotCached() throws Exception {, +    server.play();, +, +    Request request = new Request.Builder(), +        .url(server.getUrl("/")), +        .header("Cache-Control", "only-if-cached"), +        .build();, +, +    executeSynchronously(request), +        .assertCode(504), +        .assertBody(""), +        .assertNoNetworkResponse(), +        .assertNoCacheResponse();, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +  /** Asserts that the current response didn't use the network. */, +  public RecordedResponse assertNoNetworkResponse() {, +    assertNull(response.networkResponse());, +    return this;, +  }, +, +  /** Asserts that the current response didn't use the cache. */, +  public RecordedResponse assertNoCacheResponse() {, +    assertNull(response.cacheResponse());, +    return this;, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/huc/ResponseCacheTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void onlyIfCachedReturns504WhenNotCached() throws Exception {, +    server.play();, +, +    Request request = new Request.Builder(), +        .url(server.getUrl("/")), +        .header("Cache-Control", "only-if-cached"), +        .build();, +, +    executeSynchronously(request), +        .assertCode(504), +        .assertBody(""), +        .assertNoNetworkResponse(), +        .assertNoCacheResponse();, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +  /** Asserts that the current response didn't use the network. */, +  public RecordedResponse assertNoNetworkResponse() {, +    assertNull(response.networkResponse());]