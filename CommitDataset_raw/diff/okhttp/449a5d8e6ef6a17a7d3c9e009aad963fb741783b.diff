[+++ b/.gitignore, +local.properties, +++ b/.gitignore, +local.properties, +++ b/okhttp/build.gradle, +++ b/.gitignore, +local.properties, +++ b/okhttp/build.gradle, +++ b/okhttp/src/main/java/okhttp3/Address.kt, + * Copyright (C) 2012 The Android Open Source Project, +++ b/.gitignore, +local.properties, +++ b/okhttp/build.gradle, +++ b/okhttp/src/main/java/okhttp3/Address.kt, + * Copyright (C) 2012 The Android Open Source Project, +++ b/okhttp/src/main/java/okhttp3/Cache.java, +/*, + * Copyright (C) 2010 The Android Open Source Project, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package okhttp3;, +, +import java.io.Closeable;, +import java.io.File;, +import java.io.Flushable;, +import java.io.IOException;, +import java.security.cert.Certificate;, +import java.security.cert.CertificateEncodingException;, +import java.security.cert.CertificateException;, +import java.security.cert.CertificateFactory;, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.Iterator;, +import java.util.List;, +import java.util.NoSuchElementException;, +import javax.annotation.Nullable;, +import okhttp3.internal.Util;, +import okhttp3.internal.cache.CacheRequest;, +import okhttp3.internal.cache.CacheStrategy;, +import okhttp3.internal.cache.DiskLruCache;, +import okhttp3.internal.cache.InternalCache;, +import okhttp3.internal.http.HttpHeaders;, +import okhttp3.internal.http.HttpMethod;, +import okhttp3.internal.http.StatusLine;, +import okhttp3.internal.io.FileSystem;, +import okhttp3.internal.platform.Platform;, +import okio.Buffer;, +import okio.BufferedSink;, +import okio.BufferedSource;, +import okio.ByteString;, +import okio.ForwardingSink;, +import okio.ForwardingSource;, +import okio.Okio;, +import okio.Sink;, +import okio.Source;, +, +import static okhttp3.internal.InternalKtKt.addHeaderLenient;, +, +/**, + * Caches HTTP and HTTPS responses to the filesystem so they may be reused, saving time and, + * bandwidth., + *, + * <h3>Cache Optimization</h3>, + *, + * <p>To measure cache effectiveness, this class tracks three statistics:, + * <ul>, + *     <li><strong>{@linkplain #requestCount() Request Count:}</strong> the number of HTTP, + *         requests issued since this cache was created., + *     <li><strong>{@linkplain #networkCount() Network Count:}</strong> the number of those, + *         requests that required network use., + *     <li><strong>{@linkplain #hitCount() Hit Count:}</strong> the number of those requests, + *         whose responses were served by the cache., + * </ul>, + *, + * Sometimes a request will result in a conditional cache hit. If the cache contains a stale copy of, + * the response, the client will issue a conditional {@code GET}. The server will then send either, + * the updated response if it has changed, or a short 'not modified' response if the client's copy, + * is still valid. Such responses increment both the network count and hit count., + *, + * <p>The best way to improve the cache hit rate is by configuring the web server to return, + * cacheable responses. Although this client honors all <a, + * href="http://tools.ietf.org/html/rfc7234">HTTP/1.1 (RFC 7234)</a> cache headers, it doesn't cache, + * partial responses., + *, + * <h3>Force a Network Response</h3>, + *, + * <p>In some situations, such as after a user clicks a 'refresh' button, it may be necessary to, + * skip the cache, and fetch data directly from the server. To force a full refresh, add the {@code, + * no-cache} directive: <pre>   {@code]