[+++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +     * --> END POST, +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +     * --> END POST, +++ b/okhttp-tests/src/test/java/okhttp3/HeadersTest.java, +  @Test public void toMultimapAllowsCaseInsensitiveGet() {, +    Headers headers = Headers.of(, +            "cache-control", "no-store",, +            "Cache-Control", "no-cache");, +    Map<String, List<String>> headerMap = headers.toMultimap();, +    assertEquals(2, headerMap.get("cache-control").size());, +    assertEquals(2, headerMap.get("Cache-Control").size());, +  }, +, +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +     * --> END POST, +++ b/okhttp-tests/src/test/java/okhttp3/HeadersTest.java, +  @Test public void toMultimapAllowsCaseInsensitiveGet() {, +    Headers headers = Headers.of(, +            "cache-control", "no-store",, +            "Cache-Control", "no-cache");, +    Map<String, List<String>> headerMap = headers.toMultimap();, +    assertEquals(2, headerMap.get("cache-control").size());, +    assertEquals(2, headerMap.get("Cache-Control").size());, +  }, +, +++ b/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java, +  @Test public void callsNotManagedByDispatcher() throws Exception {, +    server.enqueue(new MockResponse(), +        .setBody("abc"));, +, +    Dispatcher dispatcher = urlFactory.client().dispatcher();, +    assertEquals(0, dispatcher.runningCallsCount());, +, +    connection = urlFactory.open(server.url("/").url());, +    assertEquals(0, dispatcher.runningCallsCount());, +, +    connection.connect();, +    assertEquals(0, dispatcher.runningCallsCount());, +, +    assertContent("abc", connection);, +    assertEquals(0, dispatcher.runningCallsCount());, +  }, +, +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +     * --> END POST, +++ b/okhttp-tests/src/test/java/okhttp3/HeadersTest.java, +  @Test public void toMultimapAllowsCaseInsensitiveGet() {, +    Headers headers = Headers.of(, +            "cache-control", "no-store",, +            "Cache-Control", "no-cache");, +    Map<String, List<String>> headerMap = headers.toMultimap();, +    assertEquals(2, headerMap.get("cache-control").size());, +    assertEquals(2, headerMap.get("Cache-Control").size());, +  }, +, +++ b/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java, +  @Test public void callsNotManagedByDispatcher() throws Exception {, +    server.enqueue(new MockResponse(), +        .setBody("abc"));, +, +    Dispatcher dispatcher = urlFactory.client().dispatcher();, +    assertEquals(0, dispatcher.runningCallsCount());, +, +    connection = urlFactory.open(server.url("/").url());, +    assertEquals(0, dispatcher.runningCallsCount());, +, +    connection.connect();, +    assertEquals(0, dispatcher.runningCallsCount());, +, +    assertContent("abc", connection);, +    assertEquals(0, dispatcher.runningCallsCount());, +  }, +, +++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/OkHttpURLConnection.java, +import okhttp3.Dispatcher;, +    // Use a separate dispatcher so that limits aren't impacted. But use the same executor service!, +    clientBuilder.dispatcher(new Dispatcher(client.dispatcher().executorService()));, +, +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +     * --> END POST, +++ b/okhttp-tests/src/test/java/okhttp3/HeadersTest.java, +  @Test public void toMultimapAllowsCaseInsensitiveGet() {, +    Headers headers = Headers.of(, +            "cache-control", "no-store",, +            "Cache-Control", "no-cache");, +    Map<String, List<String>> headerMap = headers.toMultimap();, +    assertEquals(2, headerMap.get("cache-control").size());, +    assertEquals(2, headerMap.get("Cache-Control").size());, +  }, +, +++ b/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java, +  @Test public void callsNotManagedByDispatcher() throws Exception {, +    server.enqueue(new MockResponse(), +        .setBody("abc"));, +, +    Dispatcher dispatcher = urlFactory.client().dispatcher();, +    assertEquals(0, dispatcher.runningCallsCount());, +, +    connection = urlFactory.open(server.url("/").url());]