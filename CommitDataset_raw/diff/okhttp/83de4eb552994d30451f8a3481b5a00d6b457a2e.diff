[+++ b/src/main/java/com/squareup/okhttp/internal/http/HttpURLConnectionImpl.java, +            } else if (retry == Retry.SAME_CONNECTION && httpEngine.getConnection() != null) {, +                httpEngine.getConnection().setRecycled();, +            if (routeSelector != null && httpEngine.connection != null) {, +            if (routeSelector == null && httpEngine.connection == null) {, +                throw e; // If we failed before finding a route or a connection, give up., +            }, +            if ((routeSelector == null || routeSelector.hasNext()) && isRecoverable(e), +++ b/src/main/java/com/squareup/okhttp/internal/http/HttpURLConnectionImpl.java, +            } else if (retry == Retry.SAME_CONNECTION && httpEngine.getConnection() != null) {, +                httpEngine.getConnection().setRecycled();, +            if (routeSelector != null && httpEngine.connection != null) {, +            if (routeSelector == null && httpEngine.connection == null) {, +                throw e; // If we failed before finding a route or a connection, give up., +            }, +            if ((routeSelector == null || routeSelector.hasNext()) && isRecoverable(e), +++ b/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    /**, +     * Ignored because this test is racy., +     * https://github.com/square/okhttp/issues/90, +     */, +    @Test @Ignore public void serverShutdownOutput() throws Exception {, +    /**, +     * Retry redirects if the socket is closed., +     * https://code.google.com/p/android/issues/detail?id=41576, +     */, +    @Test public void sameConnectionRedirectAndReuse() throws Exception {, +        server.enqueue(new MockResponse(), +                .setResponseCode(HttpURLConnection.HTTP_MOVED_TEMP), +                .setSocketPolicy(SHUTDOWN_INPUT_AT_END), +                .addHeader("Location: /foo"));, +        server.enqueue(new MockResponse().setBody("This is the new page!"));, +        server.play();, +, +        assertContent("This is the new page!", client.open(server.getUrl("/")));, +, +        assertEquals(0, server.takeRequest().getSequenceNumber());, +        assertEquals(0, server.takeRequest().getSequenceNumber());, +    }, +]