[+++ b/.buildscript/deploy_snapshot.sh, +  echo "TODO: fix snapshot deployment for gradle...", +  # ./mvnw clean source:jar javadoc:jar deploy --settings=".buildscript/settings.xml" -DskipTests -B, +++ b/.buildscript/deploy_snapshot.sh, +  echo "TODO: fix snapshot deployment for gradle...", +  # ./mvnw clean source:jar javadoc:jar deploy --settings=".buildscript/settings.xml" -DskipTests -B, +++ b/.github/CONTRIBUTING.md, +sure your code compiles by running `./gradlew check`. Checkstyle failures, +++ b/.buildscript/deploy_snapshot.sh, +  echo "TODO: fix snapshot deployment for gradle...", +  # ./mvnw clean source:jar javadoc:jar deploy --settings=".buildscript/settings.xml" -DskipTests -B, +++ b/.github/CONTRIBUTING.md, +sure your code compiles by running `./gradlew check`. Checkstyle failures, +++ b/.gitignore, +.gradle, +generated, +++ b/.buildscript/deploy_snapshot.sh, +  echo "TODO: fix snapshot deployment for gradle...", +  # ./mvnw clean source:jar javadoc:jar deploy --settings=".buildscript/settings.xml" -DskipTests -B, +++ b/.github/CONTRIBUTING.md, +sure your code compiles by running `./gradlew check`. Checkstyle failures, +++ b/.gitignore, +.gradle, +generated, +++ b/.travis.yml, + - ./gradlew check, +++ b/.buildscript/deploy_snapshot.sh, +  echo "TODO: fix snapshot deployment for gradle...", +  # ./mvnw clean source:jar javadoc:jar deploy --settings=".buildscript/settings.xml" -DskipTests -B, +++ b/.github/CONTRIBUTING.md, +sure your code compiles by running `./gradlew check`. Checkstyle failures, +++ b/.gitignore, +.gradle, +generated, +++ b/.travis.yml, + - ./gradlew check, +++ b/build.gradle, +buildscript {, +  ext.versions = [, +      'airline': '0.8',, +      'android': '4.1.1.4',, +      'animalSniffer': '1.17',, +      'assertj': '3.11.0',, +      'bouncycastle': '1.60',, +      'checkstyle': '8.15',, +      'conscrypt': '2.0.0',, +      'findbugs': '3.0.2',, +      'guava': '27.0.1-jre',, +      'java': '1.8',, +      'jnrUnixsocket': '0.22',, +      'jsoup': '1.11.3',, +      'junit': '4.12',, +      'moshi': '1.8.0',, +      'okio': '1.17.2',, +  ], +, +  ext.deps = [, +      'airline': "io.airlift:airline:${versions.airline}",, +      'android': "com.google.android:android:${versions.android}",, +      'animalSniffer': "org.codehaus.mojo:animal-sniffer-annotations:${versions.animalSniffer}",, +      'assertj': "org.assertj:assertj-core:${versions.assertj}",, +      'bouncycastle': "org.bouncycastle:bcprov-jdk15on:${versions.bouncycastle}",, +      'conscrypt': "org.conscrypt:conscrypt-openjdk-uber:${versions.conscrypt}",, +      'guava': "com.google.guava:guava:${versions.guava}",, +      'jnrUnixsocket': "com.github.jnr:jnr-unixsocket:${versions.jnrUnixsocket}",, +      'jsoup': "org.jsoup:jsoup:${versions.jsoup}",, +      'jsr305': "com.google.code.findbugs:jsr305:${versions.findbugs}",, +      'junit': "junit:junit:${versions.junit}",, +      'moshi': "com.squareup.moshi:moshi:${versions.moshi}",, +      'okio': "com.squareup.okio:okio:${versions.okio}", +  ], +, +  dependencies {, +    // TODO(jwilson): configure maven-publish-plugin to limit which artifacts are published., +    classpath 'com.vanniktech:gradle-maven-publish-plugin:0.8.0', +  }, +, +  repositories {, +    mavenCentral(), +    gradlePluginPortal(), +  }, +}, +, +plugins {, +  id 'ru.vyarus.animalsniffer' version '1.5.0', +  id 'com.github.johnrengelman.shadow' version '4.0.1', +}, +, +allprojects {, +  group = GROUP, +  version = VERSION_NAME, +, +  repositories {, +    mavenCentral(), +  }, +}, +, +subprojects { project ->, +  apply plugin: 'java', +  apply plugin: 'java-library']