[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.internal.bytes.OkBuffers;, +      InputStream bodyIn = OkBuffers.buffer(stream.getSource()).inputStream();, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.internal.bytes.OkBuffers;, +      InputStream bodyIn = OkBuffers.buffer(stream.getSource()).inputStream();, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/bytes/BufferedSink.java, +public interface BufferedSink extends Sink {, +  OkBuffer buffer();, +  BufferedSink write(ByteString byteString) throws IOException;, +  /**, +   * Like {@link OutputStream#write}, this writes a complete byte array to this, +   * sink., +   */, +  BufferedSink write(byte[] source) throws IOException;, +  /**, +   * Like {@link OutputStream#write}, this writes {@code byteCount} bytes, +   * of {@code source}, starting at {@code offset}., +   */, +  BufferedSink write(byte[] source, int offset, int byteCount) throws IOException;, +  BufferedSink writeUtf8(String string) throws IOException;, +  BufferedSink writeByte(int b) throws IOException;, +  BufferedSink writeShort(int s) throws IOException;, +  BufferedSink writeInt(int i) throws IOException;, +  /** Writes complete segments to the sink. Like {@link #flush}, but weaker. */, +  BufferedSink emitCompleteSegments() throws IOException;, +  OutputStream outputStream();, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.internal.bytes.OkBuffers;, +      InputStream bodyIn = OkBuffers.buffer(stream.getSource()).inputStream();, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/bytes/BufferedSink.java, +public interface BufferedSink extends Sink {, +  OkBuffer buffer();, +  BufferedSink write(ByteString byteString) throws IOException;, +  /**, +   * Like {@link OutputStream#write}, this writes a complete byte array to this, +   * sink., +   */, +  BufferedSink write(byte[] source) throws IOException;, +  /**, +   * Like {@link OutputStream#write}, this writes {@code byteCount} bytes, +   * of {@code source}, starting at {@code offset}., +   */, +  BufferedSink write(byte[] source, int offset, int byteCount) throws IOException;, +  BufferedSink writeUtf8(String string) throws IOException;, +  BufferedSink writeByte(int b) throws IOException;, +  BufferedSink writeShort(int s) throws IOException;, +  BufferedSink writeInt(int i) throws IOException;, +  /** Writes complete segments to the sink. Like {@link #flush}, but weaker. */, +  BufferedSink emitCompleteSegments() throws IOException;, +  OutputStream outputStream();, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/bytes/BufferedSource.java, + * without a performance penalty. It also allows clients to read ahead,, + * buffering as much as necessary before consuming input., +public interface BufferedSource extends Source {, +  OkBuffer buffer();, +  boolean exhausted() throws IOException;, +   * an {@link java.io.EOFException} if the source is exhausted before the, +   * required bytes can be read., +  void require(long byteCount) throws IOException;, +  byte readByte() throws IOException;, +  short readShort() throws IOException;, +  int readShortLe() throws IOException;, +  int readInt() throws IOException;, +  int readIntLe() throws IOException;, +   * buffer} as a buffer. Throws an {@link java.io.EOFException} if the source, +   * is exhausted before the requested bytes can be skipped., +  void skip(long byteCount) throws IOException;, +, +  ByteString readByteString(int byteCount) throws IOException;, +, +  String readUtf8(int byteCount) throws IOException;, +   *, +   * @throws java.io.EOFException if the stream is exhausted before the, +   *     requested byte is found., +  long seek(byte b) throws IOException;, +  InputStream inputStream();, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.internal.bytes.OkBuffers;, +      InputStream bodyIn = OkBuffers.buffer(stream.getSource()).inputStream();, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/bytes/BufferedSink.java, +public interface BufferedSink extends Sink {, +  OkBuffer buffer();, +  BufferedSink write(ByteString byteString) throws IOException;, +  /**, +   * Like {@link OutputStream#write}, this writes a complete byte array to this, +   * sink., +   */, +  BufferedSink write(byte[] source) throws IOException;, +  /**, +   * Like {@link OutputStream#write}, this writes {@code byteCount} bytes, +   * of {@code source}, starting at {@code offset}., +   */, +  BufferedSink write(byte[] source, int offset, int byteCount) throws IOException;, +  BufferedSink writeUtf8(String string) throws IOException;, +  BufferedSink writeByte(int b) throws IOException;, +  BufferedSink writeShort(int s) throws IOException;, +  BufferedSink writeInt(int i) throws IOException;, +  /** Writes complete segments to the sink. Like {@link #flush}, but weaker. */, +  BufferedSink emitCompleteSegments() throws IOException;]