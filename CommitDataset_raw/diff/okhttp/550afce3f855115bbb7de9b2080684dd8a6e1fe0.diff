[+++ b/okhttp-sse/pom.xml, +      <groupId>${project.groupId}</groupId>, +      <artifactId>okhttp-testing-support</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +++ b/okhttp-sse/pom.xml, +      <groupId>${project.groupId}</groupId>, +      <artifactId>okhttp-testing-support</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +++ b/okhttp-sse/src/main/java/okhttp3/internal/sse/RealEventSource.java, +    call.timeout().clearTimeout();, +++ b/okhttp-sse/pom.xml, +      <groupId>${project.groupId}</groupId>, +      <artifactId>okhttp-testing-support</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +++ b/okhttp-sse/src/main/java/okhttp3/internal/sse/RealEventSource.java, +    call.timeout().clearTimeout();, +++ b/okhttp-sse/src/test/java/okhttp3/internal/sse/EventSourceHttpTest.java, +import java.util.concurrent.TimeUnit;, +import static okhttp3.TestUtil.defaultClient;, +  private OkHttpClient client = defaultClient();, +  @Test public void callTimeoutIsNotApplied() throws Exception {, +    client = client.newBuilder(), +        .callTimeout(100, TimeUnit.MILLISECONDS), +        .build();, +, +    server.enqueue(new MockResponse(), +        .setBodyDelay(500, TimeUnit.MILLISECONDS), +        .setHeader("content-type", "text/event-stream"), +        .setBody("data: hey\n\n"));, +, +    EventSource source = newEventSource();, +, +    assertEquals("/", source.request().url().encodedPath());, +, +    listener.assertOpen();, +    listener.assertEvent(null, null, "hey");, +    listener.assertClose();, +  }, +, +    EventSource.Factory factory = EventSources.createFactory(client);, +++ b/okhttp-sse/pom.xml, +      <groupId>${project.groupId}</groupId>, +      <artifactId>okhttp-testing-support</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +++ b/okhttp-sse/src/main/java/okhttp3/internal/sse/RealEventSource.java, +    call.timeout().clearTimeout();, +++ b/okhttp-sse/src/test/java/okhttp3/internal/sse/EventSourceHttpTest.java, +import java.util.concurrent.TimeUnit;, +import static okhttp3.TestUtil.defaultClient;, +  private OkHttpClient client = defaultClient();, +  @Test public void callTimeoutIsNotApplied() throws Exception {, +    client = client.newBuilder(), +        .callTimeout(100, TimeUnit.MILLISECONDS), +        .build();, +, +    server.enqueue(new MockResponse(), +        .setBodyDelay(500, TimeUnit.MILLISECONDS), +        .setHeader("content-type", "text/event-stream"), +        .setBody("data: hey\n\n"));, +, +    EventSource source = newEventSource();, +, +    assertEquals("/", source.request().url().encodedPath());, +, +    listener.assertOpen();, +    listener.assertEvent(null, null, "hey");, +    listener.assertClose();, +  }, +, +    EventSource.Factory factory = EventSources.createFactory(client);, +++ b/okhttp-testing-support/src/main/java/okhttp3/TestUtil.java, +/*, + * Copyright (C) 2018 Square, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package okhttp3;, +, +import java.net.InetAddress;, +import java.net.InetSocketAddress;, +import java.net.UnknownHostException;, +import java.util.ArrayList;]