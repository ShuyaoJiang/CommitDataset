[+++ b/okhttp-tests/src/test/java/okhttp3/WholeOperationTimeoutTest.java, +import org.junit.Ignore;, +  @Ignore(, +      "timeout.exit() is called when the first connection is released but timeout.enter() is not called again"), +  @Test, +  public void timeoutFollowingRedirectOnNewConnection() throws Exception {, +    MockWebServer otherServer = new MockWebServer();, +, +    server.enqueue(, +        new MockResponse(), +            .setResponseCode(HttpURLConnection.HTTP_MOVED_TEMP), +            .setHeader("Location", otherServer.url("/")));, +, +    otherServer.enqueue(new MockResponse().setHeadersDelay(500, TimeUnit.MILLISECONDS));, +, +    Request request = new Request.Builder().url(server.url("/")).build();, +, +    Call call = client.newCall(request);, +    call.timeout().timeout(250, TimeUnit.MILLISECONDS);, +    try {, +      Response response = call.execute();, +      fail();, +    } catch (IOException e) {, +      assertTrue(call.isCanceled());, +    }, +  }, +, +++ b/okhttp-tests/src/test/java/okhttp3/WholeOperationTimeoutTest.java, +import org.junit.Ignore;, +  @Ignore(, +      "timeout.exit() is called when the first connection is released but timeout.enter() is not called again"), +  @Test, +  public void timeoutFollowingRedirectOnNewConnection() throws Exception {, +    MockWebServer otherServer = new MockWebServer();, +, +    server.enqueue(, +        new MockResponse(), +            .setResponseCode(HttpURLConnection.HTTP_MOVED_TEMP), +            .setHeader("Location", otherServer.url("/")));, +, +    otherServer.enqueue(new MockResponse().setHeadersDelay(500, TimeUnit.MILLISECONDS));, +, +    Request request = new Request.Builder().url(server.url("/")).build();, +, +    Call call = client.newCall(request);, +    call.timeout().timeout(250, TimeUnit.MILLISECONDS);, +    try {, +      Response response = call.execute();, +      fail();, +    } catch (IOException e) {, +      assertTrue(call.isCanceled());, +    }, +  }, +, +++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java, +  /** https://github.com/square/okhttp/issues/1191 */, +  @Ignore // TODO: recover gracefully when a connection is shutdown.]