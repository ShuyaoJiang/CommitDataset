[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java, +  @Test public void changingSchemeChangesDefaultPort() throws Exception {, +    assertEquals(443, HttpUrl.parse("http://example.com"), +        .newBuilder(), +        .scheme("https"), +        .build().port());, +, +    assertEquals(80, HttpUrl.parse("https://example.com"), +        .newBuilder(), +        .scheme("http"), +        .build().port());, +, +    assertEquals(1234, HttpUrl.parse("https://example.com:1234"), +        .newBuilder(), +        .scheme("http"), +        .build().port());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java, +  @Test public void changingSchemeChangesDefaultPort() throws Exception {, +    assertEquals(443, HttpUrl.parse("http://example.com"), +        .newBuilder(), +        .scheme("https"), +        .build().port());, +, +    assertEquals(80, HttpUrl.parse("https://example.com"), +        .newBuilder(), +        .scheme("http"), +        .build().port());, +, +    assertEquals(1234, HttpUrl.parse("https://example.com:1234"), +        .newBuilder(), +        .scheme("http"), +        .build().port());, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java, +  @Test public void changingSchemeChangesDefaultPort() throws Exception {, +    assertEquals(443, HttpUrl.parse("http://example.com"), +        .newBuilder(), +        .scheme("https"), +        .build().port());, +, +    assertEquals(80, HttpUrl.parse("https://example.com"), +        .newBuilder(), +        .scheme("http"), +        .build().port());, +, +    assertEquals(1234, HttpUrl.parse("https://example.com:1234"), +        .newBuilder(), +        .scheme("http"), +        .build().port());, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpUrl.java, +    // If we're set to a default port, unset it, in case of a scheme change., +    if (port == defaultPort(scheme)) {, +      result.port = -1;, +    } else {, +    }]