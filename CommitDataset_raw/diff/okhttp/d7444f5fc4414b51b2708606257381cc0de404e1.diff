[+++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/ErrorCode.java, +// TODO: revisit for http/2 draft 9, +// http://tools.ietf.org/html/draft-ietf-httpbis-http2-09#section-7, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/ErrorCode.java, +// TODO: revisit for http/2 draft 9, +// http://tools.ietf.org/html/draft-ietf-httpbis-http2-09#section-7, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/HpackDraft05.java, +            clearReferenceSet();, +          // TODO: we should throw something that we can coerce to a PROTOCOL_ERROR, +          throw new AssertionError("unhandled byte: " + Integer.toBinaryString(b));, +    private void clearReferenceSet() {, +      for (int i = headerTable.size() - 1; i != -1; i--) {, +        headerTable.get(i).addTo(emittedHeaders);, +      } else {, +        // TODO: we should throw something that we can coerce to a PROTOCOL_ERROR, +        throw new AssertionError("invalid index " + index);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/ErrorCode.java, +// TODO: revisit for http/2 draft 9, +// http://tools.ietf.org/html/draft-ietf-httpbis-http2-09#section-7, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/HpackDraft05.java, +            clearReferenceSet();, +          // TODO: we should throw something that we can coerce to a PROTOCOL_ERROR, +          throw new AssertionError("unhandled byte: " + Integer.toBinaryString(b));, +    private void clearReferenceSet() {, +      for (int i = headerTable.size() - 1; i != -1; i--) {, +        headerTable.get(i).addTo(emittedHeaders);, +      } else {, +        // TODO: we should throw something that we can coerce to a PROTOCOL_ERROR, +        throw new AssertionError("invalid index " + index);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft09.java, +, +  @Override public String getProtocol() {, +    return "HTTP-draft-09/2.0";, +  }, +, +          List<String> nameValueBlock = hpackReader.getAndReset();, +          handler.headers(false, inFinished, streamId, -1, priority, nameValueBlock,, +      out.writeInt(errorCode.httpCode);, +      // TODO: Implement looping strategy., +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/ErrorCode.java, +// TODO: revisit for http/2 draft 9, +// http://tools.ietf.org/html/draft-ietf-httpbis-http2-09#section-7, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/HpackDraft05.java, +            clearReferenceSet();, +          // TODO: we should throw something that we can coerce to a PROTOCOL_ERROR, +          throw new AssertionError("unhandled byte: " + Integer.toBinaryString(b));, +    private void clearReferenceSet() {, +      for (int i = headerTable.size() - 1; i != -1; i--) {, +        headerTable.get(i).addTo(emittedHeaders);, +      } else {, +        // TODO: we should throw something that we can coerce to a PROTOCOL_ERROR, +        throw new AssertionError("invalid index " + index);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft09.java, +, +  @Override public String getProtocol() {, +    return "HTTP-draft-09/2.0";, +  }, +, +          List<String> nameValueBlock = hpackReader.getAndReset();, +          handler.headers(false, inFinished, streamId, -1, priority, nameValueBlock,, +      out.writeInt(errorCode.httpCode);, +      // TODO: Implement looping strategy., +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java, +  /** http/2: An endpoint must not send a PUSH_PROMISE frame when this is 0. */, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/ErrorCode.java, +// TODO: revisit for http/2 draft 9, +// http://tools.ietf.org/html/draft-ietf-httpbis-http2-09#section-7, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/HpackDraft05.java, +            clearReferenceSet();, +          // TODO: we should throw something that we can coerce to a PROTOCOL_ERROR, +          throw new AssertionError("unhandled byte: " + Integer.toBinaryString(b));, +    private void clearReferenceSet() {, +      for (int i = headerTable.size() - 1; i != -1; i--) {, +        headerTable.get(i).addTo(emittedHeaders);, +      } else {, +        // TODO: we should throw something that we can coerce to a PROTOCOL_ERROR, +        throw new AssertionError("invalid index " + index);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft09.java, +, +  @Override public String getProtocol() {, +    return "HTTP-draft-09/2.0";, +  }, +, +          List<String> nameValueBlock = hpackReader.getAndReset();, +          handler.headers(false, inFinished, streamId, -1, priority, nameValueBlock,, +      out.writeInt(errorCode.httpCode);, +      // TODO: Implement looping strategy., +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java, +  /** http/2: An endpoint must not send a PUSH_PROMISE frame when this is 0. */, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java, +, +  @Override public String getProtocol() {, +    return "spdy/3";, +  }, +, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/ErrorCode.java, +// TODO: revisit for http/2 draft 9, +// http://tools.ietf.org/html/draft-ietf-httpbis-http2-09#section-7, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/HpackDraft05.java, +            clearReferenceSet();]