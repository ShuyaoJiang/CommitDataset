[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void lazilyEvaluateRequestUrl() throws Exception {, +    server.enqueue(new MockResponse().setBody("abc"));, +    server.play();, +, +    Request request1 = new Request.Builder(), +        .url("foo://bar?baz"), +        .build();, +    Request request2 = request1.newBuilder(), +        .url(server.getUrl("/")), +        .build();, +    executeSynchronously(request2), +        .assertCode(200), +        .assertSuccessful(), +        .assertBody("abc");, +  }, +, +      Request request = new Request.Builder(), +          .url("ftp://hostname/path"), +          .build();, +      executeSynchronously(request);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void lazilyEvaluateRequestUrl() throws Exception {, +    server.enqueue(new MockResponse().setBody("abc"));, +    server.play();, +, +    Request request1 = new Request.Builder(), +        .url("foo://bar?baz"), +        .build();, +    Request request2 = request1.newBuilder(), +        .url(server.getUrl("/")), +        .build();, +    executeSynchronously(request2), +        .assertCode(200), +        .assertSuccessful(), +        .assertBody("abc");, +  }, +, +      Request request = new Request.Builder(), +          .url("ftp://hostname/path"), +          .build();, +      executeSynchronously(request);, +++ b/okhttp/src/main/java/com/squareup/okhttp/Request.java, +  private final String urlString;, +  private volatile URL url; // Lazily initialized., +    this.urlString = builder.urlString;, +    this.url = builder.url;, +    try {, +      URL result = url;, +      return result != null ? result : (url = new URL(urlString));, +    } catch (MalformedURLException e) {, +      throw new RuntimeException("Malformed URL: " + urlString, e);, +    }, +    return urlString;, +    private String urlString;, +      this.urlString = request.urlString;, +      if (url == null) throw new IllegalArgumentException("url == null");, +      urlString = url;, +      return this;, +      this.urlString = url.toString();, +      if (urlString == null) throw new IllegalStateException("url == null");]