[+++ b/okhttp/src/main/java/com/squareup/okhttp/Headers.java, +import com.squareup.okhttp.internal.http.HttpDate;, +import java.util.Date;, +  /**, +   * Returns the last value corresponding to the specified field parsed as an, +   * HTTP date, or null if either the field is absent or cannot be parsed as a, +   * date., +   */, +  public Date getDate(String fieldName) {, +    String value = get(fieldName);, +    return value != null ? HttpDate.parse(value) : null;, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/Headers.java, +import com.squareup.okhttp.internal.http.HttpDate;, +import java.util.Date;, +  /**, +   * Returns the last value corresponding to the specified field parsed as an, +   * HTTP date, or null if either the field is absent or cannot be parsed as a, +   * date., +   */, +  public Date getDate(String fieldName) {, +    String value = get(fieldName);, +    return value != null ? HttpDate.parse(value) : null;, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +import com.squareup.okhttp.internal.http.OkHeaders;, +    if (OkHeaders.hasVaryAll(response)) {, +      this.varyHeaders = response.request().headers().getAll(OkHeaders.varyFields(response));, +          && OkHeaders.varyMatches(response, varyHeaders, request);, +++ b/okhttp/src/main/java/com/squareup/okhttp/Headers.java, +import com.squareup.okhttp.internal.http.HttpDate;, +import java.util.Date;, +  /**, +   * Returns the last value corresponding to the specified field parsed as an, +   * HTTP date, or null if either the field is absent or cannot be parsed as a, +   * date., +   */, +  public Date getDate(String fieldName) {, +    String value = get(fieldName);, +    return value != null ? HttpDate.parse(value) : null;, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +import com.squareup.okhttp.internal.http.OkHeaders;, +    if (OkHeaders.hasVaryAll(response)) {, +      this.varyHeaders = response.request().headers().getAll(OkHeaders.varyFields(response));, +          && OkHeaders.varyMatches(response, varyHeaders, request);, +++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/Headers.java, +import com.squareup.okhttp.internal.http.HttpDate;, +import java.util.Date;, +  /**, +   * Returns the last value corresponding to the specified field parsed as an, +   * HTTP date, or null if either the field is absent or cannot be parsed as a, +   * date., +   */, +  public Date getDate(String fieldName) {, +    String value = get(fieldName);, +    return value != null ? HttpDate.parse(value) : null;, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +import com.squareup.okhttp.internal.http.OkHeaders;, +    if (OkHeaders.hasVaryAll(response)) {, +      this.varyHeaders = response.request().headers().getAll(OkHeaders.varyFields(response));, +          && OkHeaders.varyMatches(response, varyHeaders, request);, +++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java, +import java.net.HttpURLConnection;, +import java.util.Date;, +      if (validate(validatingResponse, response)) {, +   * Returns true if {@code cached} should be used; false if {@code network}, +   * response should be used., +   */, +  private static boolean validate(Response cached, Response network) {, +    if (network.code() == HttpURLConnection.HTTP_NOT_MODIFIED) {, +      return true;, +    }, +, +    // The HTTP spec says that if the network's response is older than our, +    // cached response, we may return the cache's response. Like Chrome (but, +    // unlike Firefox), this client prefers to return the newer response., +    Date lastModified = cached.headers().getDate("Last-Modified");, +    if (lastModified != null) {, +      Date networkLastModified = network.headers().getDate("Last-Modified");, +      if (networkLastModified != null, +          && networkLastModified.getTime() < lastModified.getTime()) {, +        return true;, +      }, +    }, +, +    return false;, +  }, +, +  /**, +++ b/okhttp/src/main/java/com/squareup/okhttp/Headers.java, +import com.squareup.okhttp.internal.http.HttpDate;, +import java.util.Date;]