[+++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttp.java, +        .protocols(benchmark.protocols), +          .sslSocketFactory(socketFactory), +          .hostnameVerifier(hostnameVerifier), +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttp.java, +        .protocols(benchmark.protocols), +          .sslSocketFactory(socketFactory), +          .hostnameVerifier(hostnameVerifier), +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttpAsync.java, +        .protocols(benchmark.protocols), +        .dispatcher(new Dispatcher(new ThreadPoolExecutor(benchmark.concurrencyLevel,, +          .sslSocketFactory(socketFactory), +          .hostnameVerifier(hostnameVerifier), +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttp.java, +        .protocols(benchmark.protocols), +          .sslSocketFactory(socketFactory), +          .hostnameVerifier(hostnameVerifier), +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttpAsync.java, +        .protocols(benchmark.protocols), +        .dispatcher(new Dispatcher(new ThreadPoolExecutor(benchmark.concurrencyLevel,, +          .sslSocketFactory(socketFactory), +          .hostnameVerifier(hostnameVerifier), +++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +    builder.followSslRedirects(followRedirects);, +      builder.connectTimeout(connectTimeout, SECONDS);, +      builder.readTimeout(readTimeout, SECONDS);, +      builder.sslSocketFactory(createInsecureSslSocketFactory());, +      builder.hostnameVerifier(createInsecureHostnameVerifier());, +    client.connectionPool().evictAll(); // Close any persistent connections., +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttp.java, +        .protocols(benchmark.protocols), +          .sslSocketFactory(socketFactory), +          .hostnameVerifier(hostnameVerifier), +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttpAsync.java, +        .protocols(benchmark.protocols), +        .dispatcher(new Dispatcher(new ThreadPoolExecutor(benchmark.concurrencyLevel,, +          .sslSocketFactory(socketFactory), +          .hostnameVerifier(hostnameVerifier), +++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +    builder.followSslRedirects(followRedirects);, +      builder.connectTimeout(connectTimeout, SECONDS);, +      builder.readTimeout(readTimeout, SECONDS);, +      builder.sslSocketFactory(createInsecureSslSocketFactory());, +      builder.hostnameVerifier(createInsecureHostnameVerifier());, +    client.connectionPool().evictAll(); // Close any persistent connections., +++ b/okhttp-android-support/src/main/java/okhttp3/AndroidInternal.java, +      builder.cache(okCacheContainer.getCache());, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttp.java, +        .protocols(benchmark.protocols), +          .sslSocketFactory(socketFactory), +          .hostnameVerifier(hostnameVerifier), +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttpAsync.java, +        .protocols(benchmark.protocols), +        .dispatcher(new Dispatcher(new ThreadPoolExecutor(benchmark.concurrencyLevel,, +          .sslSocketFactory(socketFactory), +          .hostnameVerifier(hostnameVerifier), +++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +    builder.followSslRedirects(followRedirects);, +      builder.connectTimeout(connectTimeout, SECONDS);, +      builder.readTimeout(readTimeout, SECONDS);, +      builder.sslSocketFactory(createInsecureSslSocketFactory());, +      builder.hostnameVerifier(createInsecureHostnameVerifier());, +    client.connectionPool().evictAll(); // Close any persistent connections., +++ b/okhttp-android-support/src/main/java/okhttp3/AndroidInternal.java, +      builder.cache(okCacheContainer.getCache());, +++ b/okhttp-android-support/src/test/java/okhttp3/android/HttpResponseCacheTest.java, +  private OkUrlFactory urlFactory;, +    urlFactory = new OkUrlFactory(new OkHttpClient.Builder().build());, +    AndroidInternal.setResponseCache(urlFactory, responseCache);, +    return urlFactory.open(url.url());, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttp.java, +        .protocols(benchmark.protocols), +          .sslSocketFactory(socketFactory), +          .hostnameVerifier(hostnameVerifier), +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttpAsync.java, +        .protocols(benchmark.protocols), +        .dispatcher(new Dispatcher(new ThreadPoolExecutor(benchmark.concurrencyLevel,, +          .sslSocketFactory(socketFactory), +          .hostnameVerifier(hostnameVerifier), +++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +    builder.followSslRedirects(followRedirects);, +      builder.connectTimeout(connectTimeout, SECONDS);, +      builder.readTimeout(readTimeout, SECONDS);, +      builder.sslSocketFactory(createInsecureSslSocketFactory());, +      builder.hostnameVerifier(createInsecureHostnameVerifier());, +    client.connectionPool().evictAll(); // Close any persistent connections., +++ b/okhttp-android-support/src/main/java/okhttp3/AndroidInternal.java, +      builder.cache(okCacheContainer.getCache());, +++ b/okhttp-android-support/src/test/java/okhttp3/android/HttpResponseCacheTest.java, +  private OkUrlFactory urlFactory;, +    urlFactory = new OkUrlFactory(new OkHttpClient.Builder().build());, +    AndroidInternal.setResponseCache(urlFactory, responseCache);, +    return urlFactory.open(url.url());, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/CacheAdapterTest.java, +        .sslSocketFactory(sslContext.getSocketFactory()), +        .hostnameVerifier(hostnameVerifier), +        .sslSocketFactory(sslContext.getSocketFactory()), +        .hostnameVerifier(hostnameVerifier), +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttp.java, +        .protocols(benchmark.protocols)]