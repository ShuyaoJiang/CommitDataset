[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +        .assertSuccessful(), +  @Test public void getReturns500() throws Exception {, +    server.enqueue(new MockResponse().setResponseCode(500));, +    server.play();, +, +    Request request = new Request.Builder(), +        .url(server.getUrl("/")), +        .build();, +, +    executeSynchronously(request), +        .assertCode(500), +        .assertNotSuccessful();, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +        .assertSuccessful(), +  @Test public void getReturns500() throws Exception {, +    server.enqueue(new MockResponse().setResponseCode(500));, +    server.play();, +, +    Request request = new Request.Builder(), +        .url(server.getUrl("/")), +        .build();, +, +    executeSynchronously(request), +        .assertCode(500), +        .assertNotSuccessful();, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertTrue;, +  public RecordedResponse assertSuccessful() {, +    assertTrue(response.isSuccessful());, +    return this;, +  }, +, +  public RecordedResponse assertNotSuccessful() {, +    assertFalse(response.isSuccessful());, +    return this;, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +        .assertSuccessful(), +  @Test public void getReturns500() throws Exception {, +    server.enqueue(new MockResponse().setResponseCode(500));, +    server.play();, +, +    Request request = new Request.Builder(), +        .url(server.getUrl("/")), +        .build();, +, +    executeSynchronously(request), +        .assertCode(500), +        .assertNotSuccessful();, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertTrue;, +  public RecordedResponse assertSuccessful() {, +    assertTrue(response.isSuccessful());, +    return this;, +  }, +, +  public RecordedResponse assertNotSuccessful() {, +    assertFalse(response.isSuccessful());, +    return this;, +  }, +, +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +  @Override public void setFixedLengthStreamingMode(long contentLength) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +        .assertSuccessful(), +  @Test public void getReturns500() throws Exception {, +    server.enqueue(new MockResponse().setResponseCode(500));, +    server.play();, +, +    Request request = new Request.Builder(), +        .url(server.getUrl("/")), +        .build();, +, +    executeSynchronously(request), +        .assertCode(500), +        .assertNotSuccessful();, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertTrue;, +  public RecordedResponse assertSuccessful() {, +    assertTrue(response.isSuccessful());, +    return this;, +  }, +, +  public RecordedResponse assertNotSuccessful() {, +    assertFalse(response.isSuccessful());, +    return this;, +  }]