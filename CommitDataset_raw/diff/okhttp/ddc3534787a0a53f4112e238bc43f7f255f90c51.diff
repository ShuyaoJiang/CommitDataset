[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +import java.net.ProtocolException;, +    assertEquals(2, connection.getContentLength());, +    try {, +      int byteRead = in.read();, +      // OpenJDK behavior: end of stream., +      assertEquals(-1, byteRead);, +    } catch (ProtocolException e) {, +      // On Android, HttpURLConnection is implemented by OkHttp v2. OkHttp, +      // treats an incomplete response body as a ProtocolException., +    }, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +import java.net.ProtocolException;, +    assertEquals(2, connection.getContentLength());, +    try {, +      int byteRead = in.read();, +      // OpenJDK behavior: end of stream., +      assertEquals(-1, byteRead);, +    } catch (ProtocolException e) {, +      // On Android, HttpURLConnection is implemented by OkHttp v2. OkHttp, +      // treats an incomplete response body as a ProtocolException., +    }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +import java.net.ProtocolException;, +    assertEquals(2, connection.getContentLength());, +    try {, +      int byteRead = in.read();, +      // OpenJDK behavior: end of stream., +      assertEquals(-1, byteRead);, +    } catch (ProtocolException e) {, +      // On Android, HttpURLConnection is implemented by OkHttp v2. OkHttp, +      // treats an incomplete response body as a ProtocolException., +    }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/URLConnectionTest.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +import java.net.ProtocolException;, +    assertEquals(2, connection.getContentLength());, +    try {, +      int byteRead = in.read();, +      // OpenJDK behavior: end of stream., +      assertEquals(-1, byteRead);, +    } catch (ProtocolException e) {, +      // On Android, HttpURLConnection is implemented by OkHttp v2. OkHttp, +      // treats an incomplete response body as a ProtocolException., +    }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/URLConnectionTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpUrl.java, +      // Do IDN decoding. This converts {@code â˜ƒ.net} to {@code xn--n3h.net}., +      String idnDecoded = domainToAscii(percentDecoded);, +      if (idnDecoded == null) return null;, +, +      // Confirm that the decoded result doesn't contain any illegal characters., +      int length = idnDecoded.length();, +      if (delimiterOffset(idnDecoded, 0, length, "\u0000\t\n\r #%/:?@[\\]") != length) {, +        return null;, +      }, +, +      return idnDecoded;]