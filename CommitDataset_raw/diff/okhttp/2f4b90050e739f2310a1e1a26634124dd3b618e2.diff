[+++ /dev/null, +++ /dev/null, +++ b/okhttp/src/main/java/okhttp3/internal/platform/AndroidPlatform.java, +  private final Method setUseSessionTickets;, +  private final Method setHostname;, +  private final Method getAlpnSelectedProtocol;, +  private final Method setAlpnProtocols;, +  AndroidPlatform(Class<?> sslParametersClass, Method setUseSessionTickets, Method setHostname,, +      Method getAlpnSelectedProtocol, Method setAlpnProtocols) {, +    try {, +        setUseSessionTickets.invoke(sslSocket, true);, +        setHostname.invoke(sslSocket, hostname);, +      setAlpnProtocols.invoke(sslSocket, concatLengthPrefixed(protocols));, +    } catch (IllegalAccessException | InvocationTargetException e) {, +      throw new AssertionError(e);, +    try {, +      byte[] alpnResult = (byte[]) getAlpnSelectedProtocol.invoke(socket);, +    } catch (IllegalAccessException | InvocationTargetException e) {, +      throw new AssertionError(e);, +    }, +    Class<?> sslParametersClass;, +    Class<?> sslSocketClass;, +      sslParametersClass = Class.forName("com.android.org.conscrypt.SSLParametersImpl");, +      sslSocketClass = Class.forName("com.android.org.conscrypt.OpenSSLSocketImpl");, +    if (Build.VERSION.SDK_INT >= 21) {, +      try {, +        Method setUseSessionTickets = sslSocketClass.getDeclaredMethod(, +            "setUseSessionTickets", boolean.class);, +        Method setHostname = sslSocketClass.getMethod("setHostname", String.class);, +        Method getAlpnSelectedProtocol = sslSocketClass.getMethod("getAlpnSelectedProtocol");, +        Method setAlpnProtocols = sslSocketClass.getMethod("setAlpnProtocols", byte[].class);, +        return new AndroidPlatform(sslParametersClass, setUseSessionTickets, setHostname,, +            getAlpnSelectedProtocol, setAlpnProtocols);, +      } catch (NoSuchMethodException ignored) {, +      }, +    }, +    throw new IllegalStateException(, +        "Expected Android API level 21+ but was " + Build.VERSION.SDK_INT);, +++ /dev/null, +++ b/okhttp/src/main/java/okhttp3/internal/platform/AndroidPlatform.java, +  private final Method setUseSessionTickets;, +  private final Method setHostname;, +  private final Method getAlpnSelectedProtocol;, +  private final Method setAlpnProtocols;, +  AndroidPlatform(Class<?> sslParametersClass, Method setUseSessionTickets, Method setHostname,, +      Method getAlpnSelectedProtocol, Method setAlpnProtocols) {, +    try {, +        setUseSessionTickets.invoke(sslSocket, true);, +        setHostname.invoke(sslSocket, hostname);, +      setAlpnProtocols.invoke(sslSocket, concatLengthPrefixed(protocols));, +    } catch (IllegalAccessException | InvocationTargetException e) {, +      throw new AssertionError(e);, +    try {, +      byte[] alpnResult = (byte[]) getAlpnSelectedProtocol.invoke(socket);, +    } catch (IllegalAccessException | InvocationTargetException e) {, +      throw new AssertionError(e);, +    }, +    Class<?> sslParametersClass;, +    Class<?> sslSocketClass;, +      sslParametersClass = Class.forName("com.android.org.conscrypt.SSLParametersImpl");, +      sslSocketClass = Class.forName("com.android.org.conscrypt.OpenSSLSocketImpl");, +    if (Build.VERSION.SDK_INT >= 21) {, +      try {, +        Method setUseSessionTickets = sslSocketClass.getDeclaredMethod(, +            "setUseSessionTickets", boolean.class);, +        Method setHostname = sslSocketClass.getMethod("setHostname", String.class);, +        Method getAlpnSelectedProtocol = sslSocketClass.getMethod("getAlpnSelectedProtocol");, +        Method setAlpnProtocols = sslSocketClass.getMethod("setAlpnProtocols", byte[].class);, +        return new AndroidPlatform(sslParametersClass, setUseSessionTickets, setHostname,, +            getAlpnSelectedProtocol, setAlpnProtocols);, +      } catch (NoSuchMethodException ignored) {, +      }, +    }, +    throw new IllegalStateException(, +        "Expected Android API level 21+ but was " + Build.VERSION.SDK_INT);, +++ /dev/null]