[+++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +import com.squareup.okhttp.internal.Util;, +import java.util.Arrays;, +import java.util.List;, +import java.util.concurrent.atomic.AtomicReference;, +import static com.squareup.okhttp.internal.Util.immutableList;, +  /**, +   * This is a subset of the cipher suites supported in Chrome 37, current as of 2014-10-5. All of, +   * these suites are available on Android L; earlier releases support a subset of these suites., +   * https://github.com/square/okhttp/issues/330, +   */, +  private static final List<String> CIPHER_SUITES = immutableList(, +      "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", // 0xC0,0x2B  Android L, +      "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",   // 0xC0,0x2F  Android L, +      "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",     // 0x00,0x9E  Android L, +      "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",    // 0xC0,0x0A  Android 4.0, +      "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",    // 0xC0,0x09  Android 4.0, +      "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",      // 0xC0,0x13  Android 4.0, +      "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",      // 0xC0,0x14  Android 4.0, +      "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA",        // 0xC0,0x07  Android 4.0, +      "TLS_ECDHE_RSA_WITH_RC4_128_SHA",          // 0xC0,0x11  Android 4.0, +      "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",        // 0x00,0x33  Android 2.3, +      "TLS_DHE_DSS_WITH_AES_128_CBC_SHA",        // 0x00,0x32  Android 2.3, +      "TLS_DHE_RSA_WITH_AES_256_CBC_SHA",        // 0x00,0x39  Android 2.3, +      "TLS_RSA_WITH_AES_128_GCM_SHA256",         // 0x00,0x9C, +      "TLS_RSA_WITH_AES_128_CBC_SHA",            // 0x00,0x2F  Android 2.3, +      "TLS_RSA_WITH_AES_256_CBC_SHA",            // 0x00,0x35  Android 2.3, +      "SSL_RSA_WITH_3DES_EDE_CBC_SHA",           // 0x00,0x0A  Android 2.3  (Deprecated in L), +      "SSL_RSA_WITH_RC4_128_SHA",                // 0x00,0x05  Android 2.3, +      "SSL_RSA_WITH_RC4_128_MD5"                 // 0x00,0x04  Android 2.3  (Deprecated in L), +  );, +, +  /**, +   * Cache of the intersection between {@link #CIPHER_SUITES} and the platform's supported suites., +   * It's possible that the platform hosts multiple implementations of {@link SSLSocket}, in which, +   * case this cache will be incorrect., +   */, +  private static final AtomicReference<String[]> SELECTED_CIPHER_SUITES = new AtomicReference<>();, +, +    sslSocket.setEnabledCipherSuites(cipherSuites(sslSocket));, +  private String[] cipherSuites(SSLSocket sslSocket) {, +    String[] result = SELECTED_CIPHER_SUITES.get();, +    if (result == null) {, +      List<String> intersection = Util.intersect(CIPHER_SUITES,, +          Arrays.asList(sslSocket.getSupportedCipherSuites()));, +      result = intersection.toArray(new String[intersection.size()]);, +      SELECTED_CIPHER_SUITES.set(result);, +    }, +    return result;, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +import com.squareup.okhttp.internal.Util;, +import java.util.Arrays;, +import java.util.List;, +import java.util.concurrent.atomic.AtomicReference;, +import static com.squareup.okhttp.internal.Util.immutableList;, +  /**, +   * This is a subset of the cipher suites supported in Chrome 37, current as of 2014-10-5. All of, +   * these suites are available on Android L; earlier releases support a subset of these suites., +   * https://github.com/square/okhttp/issues/330, +   */, +  private static final List<String> CIPHER_SUITES = immutableList(, +      "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", // 0xC0,0x2B  Android L, +      "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",   // 0xC0,0x2F  Android L, +      "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",     // 0x00,0x9E  Android L, +      "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",    // 0xC0,0x0A  Android 4.0, +      "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",    // 0xC0,0x09  Android 4.0, +      "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",      // 0xC0,0x13  Android 4.0, +      "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",      // 0xC0,0x14  Android 4.0, +      "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA",        // 0xC0,0x07  Android 4.0, +      "TLS_ECDHE_RSA_WITH_RC4_128_SHA",          // 0xC0,0x11  Android 4.0, +      "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",        // 0x00,0x33  Android 2.3, +      "TLS_DHE_DSS_WITH_AES_128_CBC_SHA",        // 0x00,0x32  Android 2.3, +      "TLS_DHE_RSA_WITH_AES_256_CBC_SHA",        // 0x00,0x39  Android 2.3, +      "TLS_RSA_WITH_AES_128_GCM_SHA256",         // 0x00,0x9C, +      "TLS_RSA_WITH_AES_128_CBC_SHA",            // 0x00,0x2F  Android 2.3, +      "TLS_RSA_WITH_AES_256_CBC_SHA",            // 0x00,0x35  Android 2.3, +      "SSL_RSA_WITH_3DES_EDE_CBC_SHA",           // 0x00,0x0A  Android 2.3  (Deprecated in L), +      "SSL_RSA_WITH_RC4_128_SHA",                // 0x00,0x05  Android 2.3, +      "SSL_RSA_WITH_RC4_128_MD5"                 // 0x00,0x04  Android 2.3  (Deprecated in L), +  );, +, +  /**, +   * Cache of the intersection between {@link #CIPHER_SUITES} and the platform's supported suites., +   * It's possible that the platform hosts multiple implementations of {@link SSLSocket}, in which, +   * case this cache will be incorrect., +   */, +  private static final AtomicReference<String[]> SELECTED_CIPHER_SUITES = new AtomicReference<>();, +, +    sslSocket.setEnabledCipherSuites(cipherSuites(sslSocket));, +  private String[] cipherSuites(SSLSocket sslSocket) {, +    String[] result = SELECTED_CIPHER_SUITES.get();, +    if (result == null) {, +      List<String> intersection = Util.intersect(CIPHER_SUITES,, +          Arrays.asList(sslSocket.getSupportedCipherSuites()));, +      result = intersection.toArray(new String[intersection.size()]);, +      SELECTED_CIPHER_SUITES.set(result);, +    }, +    return result;]