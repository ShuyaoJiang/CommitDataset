[+++ b/mockwebserver/pom.xml, +      <groupId>com.squareup.okhttp</groupId>, +      <artifactId>okhttp-ws</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +++ b/mockwebserver/pom.xml, +      <groupId>com.squareup.okhttp</groupId>, +      <artifactId>okhttp-ws</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import com.squareup.okhttp.ws.WebSocketListener;, +++ b/mockwebserver/pom.xml, +      <groupId>com.squareup.okhttp</groupId>, +      <artifactId>okhttp-ws</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import com.squareup.okhttp.ws.WebSocketListener;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.ws.WebSocketListener;, +import java.util.concurrent.LinkedBlockingDeque;, +import java.util.concurrent.ThreadPoolExecutor;, +import static java.util.concurrent.TimeUnit.SECONDS;, +, +    ThreadPoolExecutor replyExecutor =, +        new ThreadPoolExecutor(1, 1, 1, SECONDS, new LinkedBlockingDeque<Runnable>(),, +            Util.threadFactory(String.format("MockWebServer %s WebSocket", request.getPath()),, +                true));, +    replyExecutor.allowCoreThreadTimeOut(true);, +        new RealWebSocket(false /* is server */, source, sink, new SecureRandom(), replyExecutor,, +            listener, request.getPath()) {, +++ b/mockwebserver/pom.xml, +      <groupId>com.squareup.okhttp</groupId>, +      <artifactId>okhttp-ws</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import com.squareup.okhttp.ws.WebSocketListener;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.ws.WebSocketListener;, +import java.util.concurrent.LinkedBlockingDeque;, +import java.util.concurrent.ThreadPoolExecutor;, +import static java.util.concurrent.TimeUnit.SECONDS;, +, +    ThreadPoolExecutor replyExecutor =, +        new ThreadPoolExecutor(1, 1, 1, SECONDS, new LinkedBlockingDeque<Runnable>(),, +            Util.threadFactory(String.format("MockWebServer %s WebSocket", request.getPath()),, +                true));, +    replyExecutor.allowCoreThreadTimeOut(true);, +        new RealWebSocket(false /* is server */, source, sink, new SecureRandom(), replyExecutor,, +            listener, request.getPath()) {, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +import com.squareup.okhttp.internal.spdy.Http2;, +    Logger logger = Logger.getLogger(Http2.class.getName() + "$FrameLogger");, +++ b/mockwebserver/pom.xml, +      <groupId>com.squareup.okhttp</groupId>, +      <artifactId>okhttp-ws</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import com.squareup.okhttp.ws.WebSocketListener;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.ws.WebSocketListener;, +import java.util.concurrent.LinkedBlockingDeque;, +import java.util.concurrent.ThreadPoolExecutor;, +import static java.util.concurrent.TimeUnit.SECONDS;, +, +    ThreadPoolExecutor replyExecutor =, +        new ThreadPoolExecutor(1, 1, 1, SECONDS, new LinkedBlockingDeque<Runnable>(),, +            Util.threadFactory(String.format("MockWebServer %s WebSocket", request.getPath()),, +                true));, +    replyExecutor.allowCoreThreadTimeOut(true);, +        new RealWebSocket(false /* is server */, source, sink, new SecureRandom(), replyExecutor,, +            listener, request.getPath()) {, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +import com.squareup.okhttp.internal.spdy.Http2;, +    Logger logger = Logger.getLogger(Http2.class.getName() + "$FrameLogger");, +++ b/okhttp-hpacktests/pom.xml, +    <version>2.3.0-SNAPSHOT</version>, +++ b/mockwebserver/pom.xml, +      <groupId>com.squareup.okhttp</groupId>, +      <artifactId>okhttp-ws</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import com.squareup.okhttp.ws.WebSocketListener;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.ws.WebSocketListener;, +import java.util.concurrent.LinkedBlockingDeque;, +import java.util.concurrent.ThreadPoolExecutor;, +import static java.util.concurrent.TimeUnit.SECONDS;, +, +    ThreadPoolExecutor replyExecutor =]