[+++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/OkHttpAsync.java, +    client.newCall(new Request.Builder().tag(System.nanoTime()).url(url).build()).enqueue(callback);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/OkHttpAsync.java, +    client.newCall(new Request.Builder().tag(System.nanoTime()).url(url).build()).enqueue(callback);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +      call.enqueue(callback);, +    call.enqueue(callback);, +      call.enqueue(callback);, +    client.newCall(request).enqueue(callback);, +    client.newCall(new Request.Builder().url(server.getUrl("/a")).build()).enqueue(callback);, +    client.newCall(new Request.Builder().url(server.getUrl("/b")).build()).enqueue(callback);, +    client.newCall(new Request.Builder().url(server.getUrl("/c")).build()).enqueue(callback);, +    client.newCall(request).enqueue(new Response.Callback() {, +        client.newCall(new Request.Builder().url(server.getUrl("/b")).build()).enqueue(callback);, +    client.newCall(request).enqueue(callback);, +    client.newCall(request).enqueue(callback);, +    client.newCall(request).enqueue(callback);, +    client.newCall(request1).enqueue(callback);, +    client.newCall(request2).enqueue(callback);, +    client.newCall(request1).enqueue(callback);, +    client.newCall(request2).enqueue(callback);, +    client.newCall(request).enqueue(callback);, +    client.newCall(request).enqueue(callback);, +    client.newCall(request).enqueue(callback);, +    client.newCall(requestA).enqueue(callback);, +    client.newCall(requestB).enqueue(callback);, +    client.newCall(requestA).enqueue(callback);, +    call.enqueue(new Response.Callback() {, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/OkHttpAsync.java, +    client.newCall(new Request.Builder().tag(System.nanoTime()).url(url).build()).enqueue(callback);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +      call.enqueue(callback);, +    call.enqueue(callback);, +      call.enqueue(callback);, +    client.newCall(request).enqueue(callback);, +    client.newCall(new Request.Builder().url(server.getUrl("/a")).build()).enqueue(callback);, +    client.newCall(new Request.Builder().url(server.getUrl("/b")).build()).enqueue(callback);, +    client.newCall(new Request.Builder().url(server.getUrl("/c")).build()).enqueue(callback);, +    client.newCall(request).enqueue(new Response.Callback() {, +        client.newCall(new Request.Builder().url(server.getUrl("/b")).build()).enqueue(callback);, +    client.newCall(request).enqueue(callback);, +    client.newCall(request).enqueue(callback);, +    client.newCall(request).enqueue(callback);, +    client.newCall(request1).enqueue(callback);, +    client.newCall(request2).enqueue(callback);, +    client.newCall(request1).enqueue(callback);, +    client.newCall(request2).enqueue(callback);, +    client.newCall(request).enqueue(callback);, +    client.newCall(request).enqueue(callback);, +    client.newCall(request).enqueue(callback);, +    client.newCall(requestA).enqueue(callback);, +    client.newCall(requestB).enqueue(callback);, +    client.newCall(requestA).enqueue(callback);, +    call.enqueue(new Response.Callback() {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/DispatcherTest.java, +    client.newCall(newRequest("http://a/1")).enqueue(callback);, +    client.newCall(newRequest("http://a/1")).enqueue(callback);, +    client.newCall(newRequest("http://a/2")).enqueue(callback);, +    client.newCall(newRequest("http://b/1")).enqueue(callback);, +    client.newCall(newRequest("http://b/2")).enqueue(callback);, +    client.newCall(newRequest("http://a/1")).enqueue(callback);, +    client.newCall(newRequest("http://a/2")).enqueue(callback);, +    client.newCall(newRequest("http://a/3")).enqueue(callback);, +    client.newCall(newRequest("http://a/1")).enqueue(callback);, +    client.newCall(newRequest("http://b/1")).enqueue(callback);, +    client.newCall(newRequest("http://c/1")).enqueue(callback);, +    client.newCall(newRequest("http://a/2")).enqueue(callback);, +    client.newCall(newRequest("http://b/2")).enqueue(callback);, +    client.newCall(newRequest("http://a/1")).enqueue(callback);, +    client.newCall(newRequest("http://a/2")).enqueue(callback);, +    client.newCall(newRequest("http://a/3")).enqueue(callback);, +    client.newCall(newRequest("http://a/4")).enqueue(callback);, +    client.newCall(newRequest("http://a/5")).enqueue(callback);, +    client.newCall(newRequest("http://a/1")).enqueue(callback);, +    client.newCall(newRequest("http://b/1")).enqueue(callback);, +    client.newCall(newRequest("http://a/1")).enqueue(callback);, +    client.newCall(newRequest("http://b/1")).enqueue(callback);, +    client.newCall(newRequest("http://b/2")).enqueue(callback);, +    client.newCall(newRequest("http://a/2")).enqueue(callback);, +    client.newCall(newRequest("http://a/1")).enqueue(callback);, +    client.newCall(newRequest("http://b/1")).enqueue(callback);, +    client.newCall(newRequest("http://a/2")).enqueue(callback);, +    client.newCall(newRequest("http://a/1")).enqueue(callback);, +    client.newCall(newRequest("http://a/2", "tag1")).enqueue(callback);, +    client.newCall(newRequest("http://a/1", "tag1")).enqueue(callback);, +    client.newCall(newRequest("http://a/2")).enqueue(callback);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/OkHttpAsync.java, +    client.newCall(new Request.Builder().tag(System.nanoTime()).url(url).build()).enqueue(callback);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +      call.enqueue(callback);, +    call.enqueue(callback);, +      call.enqueue(callback);, +    client.newCall(request).enqueue(callback);, +    client.newCall(new Request.Builder().url(server.getUrl("/a")).build()).enqueue(callback);, +    client.newCall(new Request.Builder().url(server.getUrl("/b")).build()).enqueue(callback);, +    client.newCall(new Request.Builder().url(server.getUrl("/c")).build()).enqueue(callback);, +    client.newCall(request).enqueue(new Response.Callback() {, +        client.newCall(new Request.Builder().url(server.getUrl("/b")).build()).enqueue(callback);, +    client.newCall(request).enqueue(callback);, +    client.newCall(request).enqueue(callback);]