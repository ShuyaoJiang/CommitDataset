[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +import java.net.CacheResponse;, +import java.net.SecureCacheResponse;, +import java.net.URI;, +import java.util.Map;, +  @Test public void cacheReturnsInsecureResponseForSecureRequest() throws IOException {, +    server.useHttps(sslContext.getSocketFactory(), false);, +    server.enqueue(new MockResponse().setBody("ABC"));, +    server.enqueue(new MockResponse().setBody("DEF"));, +    server.play();, +, +    ResponseCache.setDefault(new InsecureResponseCache());, +, +    HttpsURLConnection connection1 = (HttpsURLConnection) client.open(server.getUrl("/"));, +    connection1.setSSLSocketFactory(sslContext.getSocketFactory());, +    connection1.setHostnameVerifier(NULL_HOSTNAME_VERIFIER);, +    assertEquals("ABC", readAscii(connection1));, +, +    // Not cached!, +    HttpsURLConnection connection2 = (HttpsURLConnection) client.open(server.getUrl("/"));, +    connection2.setSSLSocketFactory(sslContext.getSocketFactory());, +    connection2.setHostnameVerifier(NULL_HOSTNAME_VERIFIER);, +    assertEquals("DEF", readAscii(connection2));, +  }, +, +  private class InsecureResponseCache extends ResponseCache {, +    @Override public CacheRequest put(URI uri, URLConnection connection) throws IOException {, +      return cache.put(uri, connection);, +    }, +, +    @Override public CacheResponse get(URI uri, String requestMethod,, +        Map<String, List<String>> requestHeaders) throws IOException {, +      final CacheResponse response = cache.get(uri, requestMethod, requestHeaders);, +      if (response instanceof SecureCacheResponse) {, +        return new CacheResponse() {, +          @Override public InputStream getBody() throws IOException {, +            return response.getBody();, +          }, +          @Override public Map<String, List<String>> getHeaders() throws IOException {, +            return response.getHeaders();, +          }, +        };, +      }, +      return response;, +    }, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +import java.net.CacheResponse;, +import java.net.SecureCacheResponse;, +import java.net.URI;, +import java.util.Map;, +  @Test public void cacheReturnsInsecureResponseForSecureRequest() throws IOException {, +    server.useHttps(sslContext.getSocketFactory(), false);, +    server.enqueue(new MockResponse().setBody("ABC"));, +    server.enqueue(new MockResponse().setBody("DEF"));, +    server.play();, +, +    ResponseCache.setDefault(new InsecureResponseCache());, +, +    HttpsURLConnection connection1 = (HttpsURLConnection) client.open(server.getUrl("/"));, +    connection1.setSSLSocketFactory(sslContext.getSocketFactory());, +    connection1.setHostnameVerifier(NULL_HOSTNAME_VERIFIER);, +    assertEquals("ABC", readAscii(connection1));, +, +    // Not cached!, +    HttpsURLConnection connection2 = (HttpsURLConnection) client.open(server.getUrl("/"));, +    connection2.setSSLSocketFactory(sslContext.getSocketFactory());, +    connection2.setHostnameVerifier(NULL_HOSTNAME_VERIFIER);, +    assertEquals("DEF", readAscii(connection2));, +  }, +, +  private class InsecureResponseCache extends ResponseCache {, +    @Override public CacheRequest put(URI uri, URLConnection connection) throws IOException {, +      return cache.put(uri, connection);, +    }, +, +    @Override public CacheResponse get(URI uri, String requestMethod,, +        Map<String, List<String>> requestHeaders) throws IOException {, +      final CacheResponse response = cache.get(uri, requestMethod, requestHeaders);, +      if (response instanceof SecureCacheResponse) {, +        return new CacheResponse() {, +          @Override public InputStream getBody() throws IOException {, +            return response.getBody();, +          }, +          @Override public Map<String, List<String>> getHeaders() throws IOException {, +            return response.getHeaders();, +          }, +        };, +      }, +      return response;, +    }, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/ResponseCacheTest.java, +, +import org.junit.After;, +import org.junit.Before;, +import org.junit.Test;, +]