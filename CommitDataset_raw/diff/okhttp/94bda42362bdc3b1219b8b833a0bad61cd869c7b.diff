[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/okhttp/src/main/java/okhttp3/internal/Platform.java, +import android.util.Log;, +import java.lang.reflect.InvocationHandler;, +import java.lang.reflect.InvocationTargetException;, +import java.lang.reflect.Method;, +import java.lang.reflect.Proxy;, +import java.util.logging.Level;, +import javax.net.ssl.SSLParameters;, +import static okhttp3.internal.Internal.logger;, +, +    // Attempt to find Android 2.3+ APIs., +    try {, +      Class<?> sslParametersClass;, +      try {, +        sslParametersClass = Class.forName("com.android.org.conscrypt.SSLParametersImpl");, +      } catch (ClassNotFoundException e) {, +        // Older platform before being unbundled., +        sslParametersClass = Class.forName(, +            "org.apache.harmony.xnet.provider.jsse.SSLParametersImpl");, +      OptionalMethod<Socket> setUseSessionTickets = new OptionalMethod<>(, +          null, "setUseSessionTickets", boolean.class);, +      OptionalMethod<Socket> setHostname = new OptionalMethod<>(, +          null, "setHostname", String.class);, +      OptionalMethod<Socket> getAlpnSelectedProtocol = null;, +      OptionalMethod<Socket> setAlpnProtocols = null;, +      // Attempt to find Android 5.0+ APIs., +      try {, +        Class.forName("android.net.Network"); // Arbitrary class added in Android 5.0., +        getAlpnSelectedProtocol = new OptionalMethod<>(byte[].class, "getAlpnSelectedProtocol");, +        setAlpnProtocols = new OptionalMethod<>(null, "setAlpnProtocols", byte[].class);, +      } catch (ClassNotFoundException ignored) {, +      return new Android(sslParametersClass, setUseSessionTickets, setHostname,, +          getAlpnSelectedProtocol, setAlpnProtocols);, +    } catch (ClassNotFoundException ignored) {, +      // This isn't an Android runtime., +    }, +, +    // Find JDK 9 new methods, +    try {, +      Method setProtocolMethod =, +          SSLParameters.class.getMethod("setApplicationProtocols", String[].class);, +      Method getProtocolMethod = SSLSocket.class.getMethod("getApplicationProtocol");, +, +      return new Jdk9Platform(setProtocolMethod, getProtocolMethod);, +    } catch (NoSuchMethodException ignored) {, +      // pre JDK 9, +    }, +, +    // Find Jetty's ALPN extension for OpenJDK., +    try {, +      String negoClassName = "org.eclipse.jetty.alpn.ALPN";, +      Class<?> negoClass = Class.forName(negoClassName);, +      Class<?> providerClass = Class.forName(negoClassName + "$Provider");, +      Class<?> clientProviderClass = Class.forName(negoClassName + "$ClientProvider");, +      Class<?> serverProviderClass = Class.forName(negoClassName + "$ServerProvider");, +      Method putMethod = negoClass.getMethod("put", SSLSocket.class, providerClass);, +      Method getMethod = negoClass.getMethod("get", SSLSocket.class);, +      Method removeMethod = negoClass.getMethod("remove", SSLSocket.class);, +      return new JdkWithJettyBootPlatform(, +          putMethod, getMethod, removeMethod, clientProviderClass, serverProviderClass);, +    } catch (ClassNotFoundException | NoSuchMethodException ignored) {, +  /** Android 2.3 or better. */, +  private static class Android extends Platform {, +    private static final int MAX_LOG_LENGTH = 4000;, +, +    private final Class<?> sslParametersClass;, +    private final OptionalMethod<Socket> setUseSessionTickets;, +    private final OptionalMethod<Socket> setHostname;, +, +    // Non-null on Android 5.0+., +    private final OptionalMethod<Socket> getAlpnSelectedProtocol;, +    private final OptionalMethod<Socket> setAlpnProtocols;, +]