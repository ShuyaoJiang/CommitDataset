[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    StreamAllocation leak = new StreamAllocation(pool, connection.getRoute().address());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    StreamAllocation leak = new StreamAllocation(pool, connection.getRoute().address());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/InterceptorTest.java, +        Address address = chain.connection().getRoute().address();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    StreamAllocation leak = new StreamAllocation(pool, connection.getRoute().address());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/InterceptorTest.java, +        Address address = chain.connection().getRoute().address();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +    assertEquals(address, route.address());, +    assertEquals(proxy, route.proxy());, +    assertEquals(socketAddress, route.socketAddress().getAddress());, +    assertEquals(socketPort, route.socketAddress().getPort());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    StreamAllocation leak = new StreamAllocation(pool, connection.getRoute().address());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/InterceptorTest.java, +        Address address = chain.connection().getRoute().address();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +    assertEquals(address, route.address());, +    assertEquals(proxy, route.proxy());, +    assertEquals(socketAddress, route.socketAddress().getAddress());, +    assertEquals(socketPort, route.socketAddress().getPort());, +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +        ? route.proxy(), +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    StreamAllocation leak = new StreamAllocation(pool, connection.getRoute().address());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/InterceptorTest.java, +        Address address = chain.connection().getRoute().address();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +    assertEquals(address, route.address());, +    assertEquals(proxy, route.proxy());, +    assertEquals(socketAddress, route.socketAddress().getAddress());, +    assertEquals(socketPort, route.socketAddress().getPort());, +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +        ? route.proxy(), +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java, +      Internal.logger.warning("A connection to " + connection.getRoute().address().url(), +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    StreamAllocation leak = new StreamAllocation(pool, connection.getRoute().address());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/InterceptorTest.java, +        Address address = chain.connection().getRoute().address();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +    assertEquals(address, route.address());, +    assertEquals(proxy, route.proxy());, +    assertEquals(socketAddress, route.socketAddress().getAddress());, +    assertEquals(socketPort, route.socketAddress().getPort());, +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +        ? route.proxy(), +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java, +      Internal.logger.warning("A connection to " + connection.getRoute().address().url(), +++ b/okhttp/src/main/java/com/squareup/okhttp/Route.java, +  public Address address() {, +  public Proxy proxy() {, +  public InetSocketAddress socketAddress() {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    StreamAllocation leak = new StreamAllocation(pool, connection.getRoute().address());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/InterceptorTest.java, +        Address address = chain.connection().getRoute().address();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +    assertEquals(address, route.address());, +    assertEquals(proxy, route.proxy());, +    assertEquals(socketAddress, route.socketAddress().getAddress());, +    assertEquals(socketPort, route.socketAddress().getPort());, +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +        ? route.proxy(), +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java, +      Internal.logger.warning("A connection to " + connection.getRoute().address().url(), +++ b/okhttp/src/main/java/com/squareup/okhttp/Route.java, +  public Address address() {, +  public Proxy proxy() {, +  public InetSocketAddress socketAddress() {, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/Http1xStream.java, +        request, httpEngine.getConnection().getRoute().proxy().type());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    StreamAllocation leak = new StreamAllocation(pool, connection.getRoute().address());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/InterceptorTest.java, +        Address address = chain.connection().getRoute().address();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +    assertEquals(address, route.address());, +    assertEquals(proxy, route.proxy());, +    assertEquals(socketAddress, route.socketAddress().getAddress());, +    assertEquals(socketPort, route.socketAddress().getPort());, +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +        ? route.proxy(), +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java, +      Internal.logger.warning("A connection to " + connection.getRoute().address().url(), +++ b/okhttp/src/main/java/com/squareup/okhttp/Route.java, +  public Address address() {, +  public Proxy proxy() {, +  public InetSocketAddress socketAddress() {, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/Http1xStream.java, +        request, httpEngine.getConnection().getRoute().proxy().type());, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java, +        Address address = connection().getRoute().address();, +        ? route.proxy(), +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    StreamAllocation leak = new StreamAllocation(pool, connection.getRoute().address());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/InterceptorTest.java]