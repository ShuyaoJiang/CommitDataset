[+++ b/src/main/java/com/squareup/okhttp/Connection.java, +++ b/src/main/java/com/squareup/okhttp/Connection.java, +++ b/src/main/java/com/squareup/okhttp/internal/net/http/SpdyTransport.java, +++ b/src/main/java/com/squareup/okhttp/Connection.java, +++ b/src/main/java/com/squareup/okhttp/internal/net/http/SpdyTransport.java, +++ /dev/null, +++ b/src/main/java/com/squareup/okhttp/Connection.java, +++ b/src/main/java/com/squareup/okhttp/internal/net/http/SpdyTransport.java, +++ /dev/null, +++ b/src/main/java/com/squareup/okhttp/internal/net/spdy/SpdyStream.java, +                while (pos == -1 && !finished && !closed && rstStatusCode == -1) {, +                    try {, +                        SpdyStream.this.wait();, +                    } catch (InterruptedException e) {, +                        throw new InterruptedIOException();, +                    }, +                }, +++ b/src/main/java/com/squareup/okhttp/Connection.java, +++ b/src/main/java/com/squareup/okhttp/internal/net/http/SpdyTransport.java, +++ /dev/null, +++ b/src/main/java/com/squareup/okhttp/internal/net/spdy/SpdyStream.java, +                while (pos == -1 && !finished && !closed && rstStatusCode == -1) {, +                    try {, +                        SpdyStream.this.wait();, +                    } catch (InterruptedException e) {, +                        throw new InterruptedIOException();, +                    }, +                }, +++ b/src/test/java/com/squareup/okhttp/internal/net/spdy/MockSpdyPeer.java, +                    e.printStackTrace(); // TODO, +++ b/src/main/java/com/squareup/okhttp/Connection.java, +++ b/src/main/java/com/squareup/okhttp/internal/net/http/SpdyTransport.java, +++ /dev/null, +++ b/src/main/java/com/squareup/okhttp/internal/net/spdy/SpdyStream.java, +                while (pos == -1 && !finished && !closed && rstStatusCode == -1) {, +                    try {, +                        SpdyStream.this.wait();, +                    } catch (InterruptedException e) {, +                        throw new InterruptedIOException();, +                    }, +                }, +++ b/src/test/java/com/squareup/okhttp/internal/net/spdy/MockSpdyPeer.java, +                    e.printStackTrace(); // TODO, +++ b/src/test/java/com/squareup/okhttp/internal/net/spdy/SpdyConnectionTest.java, +++ b/src/main/java/com/squareup/okhttp/Connection.java, +++ b/src/main/java/com/squareup/okhttp/internal/net/http/SpdyTransport.java, +++ /dev/null, +++ b/src/main/java/com/squareup/okhttp/internal/net/spdy/SpdyStream.java, +                while (pos == -1 && !finished && !closed && rstStatusCode == -1) {, +                    try {, +                        SpdyStream.this.wait();, +                    } catch (InterruptedException e) {, +                        throw new InterruptedIOException();, +                    }, +                }, +++ b/src/test/java/com/squareup/okhttp/internal/net/spdy/MockSpdyPeer.java, +                    e.printStackTrace(); // TODO, +++ b/src/test/java/com/squareup/okhttp/internal/net/spdy/SpdyConnectionTest.java, +++ b/src/test/java/com/squareup/okhttp/internal/net/spdy/SpdyServer.java, +/*, + * Copyright (C) 2011 The Android Open Source Project, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package com.squareup.okhttp.internal.net.spdy;, +, +import com.squareup.okhttp.internal.net.ssl.SslContextBuilder;, +import java.io.File;, +import java.io.FileInputStream;, +import java.io.IOException;, +import java.io.InputStream;, +import java.io.OutputStream;, +import java.io.OutputStreamWriter;, +import java.io.Writer;, +import java.net.InetAddress;, +import java.net.ServerSocket;, +import java.net.Socket;, +import java.util.Arrays;, +import java.util.List;, +import javax.net.ssl.SSLContext;, +import javax.net.ssl.SSLSocket;, +import javax.net.ssl.SSLSocketFactory;, +import org.eclipse.jetty.npn.NextProtoNego;, +, +/**, + * A basic SPDY server that serves the contents of a local directory., + */, +public final class SpdyServer implements IncomingStreamHandler {, +    private final File baseDirectory;]