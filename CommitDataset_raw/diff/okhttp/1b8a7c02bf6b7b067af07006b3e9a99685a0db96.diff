[+++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/HpackDraft05.java, +import com.squareup.okhttp.internal.Util;, +    private final Huffman.Codec huffmanCodec;, +, +    Reader(boolean client, DataInputStream in) {, +      this.huffmanCodec = client ? Huffman.Codec.RESPONSE : Huffman.Codec.REQUEST;, +        byte[] buff = new byte[length];, +        Util.readFully(in, buff);, +        bytesLeft -= length;, +        return ByteString.of(huffmanCodec.decode(buff));, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/HpackDraft05.java, +import com.squareup.okhttp.internal.Util;, +    private final Huffman.Codec huffmanCodec;, +, +    Reader(boolean client, DataInputStream in) {, +      this.huffmanCodec = client ? Huffman.Codec.RESPONSE : Huffman.Codec.REQUEST;, +        byte[] buff = new byte[length];, +        Util.readFully(in, buff);, +        bytesLeft -= length;, +        return ByteString.of(huffmanCodec.decode(buff));, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft09.java, +      this.hpackReader = new HpackDraft05.Reader(client, this.in);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/HpackDraft05.java, +import com.squareup.okhttp.internal.Util;, +    private final Huffman.Codec huffmanCodec;, +, +    Reader(boolean client, DataInputStream in) {, +      this.huffmanCodec = client ? Huffman.Codec.RESPONSE : Huffman.Codec.REQUEST;, +        byte[] buff = new byte[length];, +        Util.readFully(in, buff);, +        bytesLeft -= length;, +        return ByteString.of(huffmanCodec.decode(buff));, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft09.java, +      this.hpackReader = new HpackDraft05.Reader(client, this.in);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java, +/*, + * Copyright 2013 Twitter, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *     http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package com.squareup.okhttp.internal.spdy;, +, +import java.io.ByteArrayOutputStream;, +import java.io.IOException;, +import java.io.OutputStream;, +, +/**, + * This class was originally composed from the following classes in, + * <a href="https://github.com/twitter/hpack">Twitter Hpack</a>., + * <ul>, + * <li>{@code com.twitter.hpack.HuffmanEncoder}</li>, + * <li>{@code com.twitter.hpack.HuffmanDecoder}</li>, + * <li>{@code com.twitter.hpack.HpackUtil}</li>, + * </ul>, + */, +class Huffman {, +  enum Codec {, +    REQUEST(REQUEST_CODES, REQUEST_CODE_LENGTHS),, +    RESPONSE(RESPONSE_CODES, RESPONSE_CODE_LENGTHS);, +, +    private final Node root = new Node();, +    private final int[] codes;, +    private final byte[] lengths;, +, +    /**, +     * @param codes Index designates the symbol this code represents., +     * @param lengths Index designates the symbol this code represents., +     */, +    Codec(int[] codes, byte[] lengths) {, +      buildTree(codes, lengths);, +      this.codes = codes;, +      this.lengths = lengths;, +    }, +, +    void encode(byte[] data, OutputStream out) throws IOException {, +      long current = 0;, +      int n = 0;, +, +      for (int i = 0; i < data.length; i++) {, +        int b = data[i] & 0xFF;, +        int code = codes[b];, +        int nbits = lengths[b];, +, +        current <<= nbits;, +        current |= code;, +        n += nbits;, +, +        while (n >= 8) {, +          n -= 8;, +          out.write(((int) (current >> n)));]