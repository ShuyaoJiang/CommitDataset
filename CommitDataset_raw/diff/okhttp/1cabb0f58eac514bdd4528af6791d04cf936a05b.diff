[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import java.util.Arrays;, +    List<Header> responseHeaders = Arrays.asList(, +        new Header(":status", "404"),, +        new Header(":version", "HTTP/1.1"),, +        new Header("content-type", "text/plain"), +    );, +    List<Header> responseHeaders = Arrays.asList(, +        new Header(":status", "200"),, +        new Header(":version", "HTTP/1.1"),, +        new Header("content-type", "text/html; charset=UTF-8"), +    );, +    List<Header> responseHeaders = Arrays.asList(, +        new Header(":status", "200"),, +        new Header(":version", "HTTP/1.1"),, +        new Header("content-type", contentType(file)), +    );, +    stream.reply(responseHeaders, true);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import java.util.Arrays;, +    List<Header> responseHeaders = Arrays.asList(, +        new Header(":status", "404"),, +        new Header(":version", "HTTP/1.1"),, +        new Header("content-type", "text/plain"), +    );, +    List<Header> responseHeaders = Arrays.asList(, +        new Header(":status", "200"),, +        new Header(":version", "HTTP/1.1"),, +        new Header("content-type", "text/html; charset=UTF-8"), +    );, +    List<Header> responseHeaders = Arrays.asList(, +        new Header(":status", "200"),, +        new Header(":version", "HTTP/1.1"),, +        new Header("content-type", contentType(file)), +    );, +    stream.reply(responseHeaders, true);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/TestUtil.java, +package com.squareup.okhttp;, +, +import com.squareup.okhttp.internal.spdy.Header;, +import java.util.ArrayList;, +import java.util.List;, +, +public final class TestUtil {, +  private TestUtil() {, +  }, +, +  public static List<Header> headerEntries(String... elements) {, +    List<Header> result = new ArrayList<>(elements.length / 2);, +    for (int i = 0; i < elements.length; i += 2) {, +      result.add(new Header(elements[i], elements[i + 1]));, +    }, +    return result;, +  }, +}, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import java.util.Arrays;, +    List<Header> responseHeaders = Arrays.asList(, +        new Header(":status", "404"),, +        new Header(":version", "HTTP/1.1"),, +        new Header("content-type", "text/plain"), +    );, +    List<Header> responseHeaders = Arrays.asList(, +        new Header(":status", "200"),, +        new Header(":version", "HTTP/1.1"),, +        new Header("content-type", "text/html; charset=UTF-8"), +    );, +    List<Header> responseHeaders = Arrays.asList(, +        new Header(":status", "200"),, +        new Header(":version", "HTTP/1.1"),, +        new Header("content-type", contentType(file)), +    );, +    stream.reply(responseHeaders, true);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/TestUtil.java, +package com.squareup.okhttp;, +, +import com.squareup.okhttp.internal.spdy.Header;, +import java.util.ArrayList;, +import java.util.List;, +, +public final class TestUtil {, +  private TestUtil() {, +  }, +, +  public static List<Header> headerEntries(String... elements) {, +    List<Header> result = new ArrayList<>(elements.length / 2);, +    for (int i = 0; i < elements.length; i += 2) {, +      result.add(new Header(elements[i], elements[i + 1]));, +    }, +    return result;, +  }, +}, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +import static com.squareup.okhttp.TestUtil.headerEntries;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import java.util.Arrays;, +    List<Header> responseHeaders = Arrays.asList(, +        new Header(":status", "404"),, +        new Header(":version", "HTTP/1.1"),, +        new Header("content-type", "text/plain")]