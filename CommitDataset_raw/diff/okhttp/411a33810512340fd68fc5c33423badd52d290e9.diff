[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import okio.Source;, +    Source source = Okio.source(file);, +      BufferedSink out = Okio.buffer(stream.getSink());, +      out.writeAll(source);, +      out.close();, +      Util.closeQuietly(source);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import okio.Source;, +    Source source = Okio.source(file);, +      BufferedSink out = Okio.buffer(stream.getSink());, +      out.writeAll(source);, +      out.close();, +      Util.closeQuietly(source);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    BufferedSink sink = Okio.buffer(Okio.sink(new File(directory, file)));, +    sink.writeUtf8(content);, +    sink.close();, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import okio.Source;, +    Source source = Okio.source(file);, +      BufferedSink out = Okio.buffer(stream.getSink());, +      out.writeAll(source);, +      out.close();, +      Util.closeQuietly(source);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    BufferedSink sink = Okio.buffer(Okio.sink(new File(directory, file)));, +    sink.writeUtf8(content);, +    sink.close();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    } catch (IOException expected) {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import okio.Source;, +    Source source = Okio.source(file);, +      BufferedSink out = Okio.buffer(stream.getSink());, +      out.writeAll(source);, +      out.close();, +      Util.closeQuietly(source);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    BufferedSink sink = Okio.buffer(Okio.sink(new File(directory, file)));, +    sink.writeUtf8(content);, +    sink.close();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    } catch (IOException expected) {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Request.java, +            source = Okio.source(file);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import okio.Source;, +    Source source = Okio.source(file);, +      BufferedSink out = Okio.buffer(stream.getSink());, +      out.writeAll(source);, +      out.close();, +      Util.closeQuietly(source);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    BufferedSink sink = Okio.buffer(Okio.sink(new File(directory, file)));, +    sink.writeUtf8(content);, +    sink.close();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    } catch (IOException expected) {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Request.java, +            source = Okio.source(file);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/DiskLruCache.java, +    BufferedSource source = Okio.buffer(Okio.source(journalFile));, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import okio.Source;, +    Source source = Okio.source(file);, +      BufferedSink out = Okio.buffer(stream.getSink());, +      out.writeAll(source);, +      out.close();, +      Util.closeQuietly(source);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    BufferedSink sink = Okio.buffer(Okio.sink(new File(directory, file)));, +    sink.writeUtf8(content);, +    sink.close();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    } catch (IOException expected) {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Request.java, +            source = Okio.source(file);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/DiskLruCache.java, +    BufferedSource source = Okio.buffer(Okio.source(journalFile));, +++ b/samples/static-server/src/main/java/com/squareup/okhttp/sample/SampleServer.java, +    result.writeAll(Okio.source(file));]