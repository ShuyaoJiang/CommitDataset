[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +      // 17, 'H', 'T', 'T', 'P', '-', 'd', 'r', 'a', 'f', 't', '-', '0', '6', '/', '2', '.', '0',, +  private static final byte[] HTTP_20_DRAFT_06 = new byte[] {, +      'H', 'T', 'T', 'P', '-', 'd', 'r', 'a', 'f', 't', '-', '0', '6', '/', '2', '.', '0', +            } else if (Arrays.equals(selectedProtocol, HTTP_20_DRAFT_06)) {, +              transport = Transport.HTTP_20_DRAFT_06;, +        if (transport == Transport.SPDY_3 || transport == Transport.HTTP_20_DRAFT_06) {, +            builder.http20Draft06();, +    HTTP_11, SPDY_3, HTTP_20_DRAFT_06, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +      // 17, 'H', 'T', 'T', 'P', '-', 'd', 'r', 'a', 'f', 't', '-', '0', '6', '/', '2', '.', '0',, +  private static final byte[] HTTP_20_DRAFT_06 = new byte[] {, +      'H', 'T', 'T', 'P', '-', 'd', 'r', 'a', 'f', 't', '-', '0', '6', '/', '2', '.', '0', +            } else if (Arrays.equals(selectedProtocol, HTTP_20_DRAFT_06)) {, +              transport = Transport.HTTP_20_DRAFT_06;, +        if (transport == Transport.SPDY_3 || transport == Transport.HTTP_20_DRAFT_06) {, +            builder.http20Draft06();, +    HTTP_11, SPDY_3, HTTP_20_DRAFT_06, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Hpack.java, + * Read and write HPACK v03., + * http://tools.ietf.org/html/draft-ietf-httpbis-header-compression-03, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +      // 17, 'H', 'T', 'T', 'P', '-', 'd', 'r', 'a', 'f', 't', '-', '0', '6', '/', '2', '.', '0',, +  private static final byte[] HTTP_20_DRAFT_06 = new byte[] {, +      'H', 'T', 'T', 'P', '-', 'd', 'r', 'a', 'f', 't', '-', '0', '6', '/', '2', '.', '0', +            } else if (Arrays.equals(selectedProtocol, HTTP_20_DRAFT_06)) {, +              transport = Transport.HTTP_20_DRAFT_06;, +        if (transport == Transport.SPDY_3 || transport == Transport.HTTP_20_DRAFT_06) {, +            builder.http20Draft06();, +    HTTP_11, SPDY_3, HTTP_20_DRAFT_06, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Hpack.java, + * Read and write HPACK v03., + * http://tools.ietf.org/html/draft-ietf-httpbis-header-compression-03, +++ /dev/null, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +      // 17, 'H', 'T', 'T', 'P', '-', 'd', 'r', 'a', 'f', 't', '-', '0', '6', '/', '2', '.', '0',, +  private static final byte[] HTTP_20_DRAFT_06 = new byte[] {, +      'H', 'T', 'T', 'P', '-', 'd', 'r', 'a', 'f', 't', '-', '0', '6', '/', '2', '.', '0', +            } else if (Arrays.equals(selectedProtocol, HTTP_20_DRAFT_06)) {, +              transport = Transport.HTTP_20_DRAFT_06;, +        if (transport == Transport.SPDY_3 || transport == Transport.HTTP_20_DRAFT_06) {, +            builder.http20Draft06();, +    HTTP_11, SPDY_3, HTTP_20_DRAFT_06, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Hpack.java, + * Read and write HPACK v03., + * http://tools.ietf.org/html/draft-ietf-httpbis-header-compression-03, +++ /dev/null, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft06.java, +/*, + * Copyright (C) 2013 Square, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package com.squareup.okhttp.internal.spdy;, +, +import com.squareup.okhttp.internal.Util;, +import java.io.ByteArrayOutputStream;, +import java.io.DataInputStream;, +import java.io.DataOutputStream;, +import java.io.IOException;, +import java.io.InputStream;, +import java.io.OutputStream;, +import java.io.UnsupportedEncodingException;, +import java.util.Arrays;, +import java.util.List;, +, +/**, + * Read and write http/2 v06 frames., + * http://tools.ietf.org/html/draft-ietf-httpbis-http2-06, + */, +final class Http20Draft06 implements Variant {, +  private static final byte[] CONNECTION_HEADER;, +  static {, +    try {, +      CONNECTION_HEADER = "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n".getBytes("UTF-8");, +    } catch (UnsupportedEncodingException e) {, +      throw new AssertionError();, +    }, +  }, +, +  static final int TYPE_DATA = 0x0;, +  static final int TYPE_HEADERS = 0x1;, +  static final int TYPE_PRIORITY = 0x2;, +  static final int TYPE_RST_STREAM = 0x3;, +  static final int TYPE_SETTINGS = 0x4;, +  static final int TYPE_PUSH_PROMISE = 0x5;, +  static final int TYPE_PING = 0x6;, +  static final int TYPE_GOAWAY = 0x7;, +  static final int TYPE_WINDOW_UPDATE = 0x9;, +  static final int TYPE_CONTINUATION = 0xa;]