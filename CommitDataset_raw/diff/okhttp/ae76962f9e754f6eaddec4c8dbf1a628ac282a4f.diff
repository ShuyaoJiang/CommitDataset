[+++ b/build.gradle, +++ b/build.gradle, +++ b/mockwebserver/build.gradle, +++ b/build.gradle, +++ b/mockwebserver/build.gradle, +++ b/okhttp-logging-interceptor/build.gradle, +++ b/build.gradle, +++ b/mockwebserver/build.gradle, +++ b/okhttp-logging-interceptor/build.gradle, +++ b/okhttp-logging-interceptor/gradle.properties, +POM_ARTIFACT_ID=okhttp-logging-interceptor, +POM_NAME=okhttp-logging-interceptor, +++ b/build.gradle, +++ b/mockwebserver/build.gradle, +++ b/okhttp-logging-interceptor/build.gradle, +++ b/okhttp-logging-interceptor/gradle.properties, +POM_ARTIFACT_ID=okhttp-logging-interceptor, +POM_NAME=okhttp-logging-interceptor, +++ b/okhttp-tests/src/test/java/okhttp3/OkHttpClientTest.java, +import org.junit.Rule;, +  @Rule public final MockWebServer server = new MockWebServer();, +, +++ b/build.gradle, +++ b/mockwebserver/build.gradle, +++ b/okhttp-logging-interceptor/build.gradle, +++ b/okhttp-logging-interceptor/gradle.properties, +POM_ARTIFACT_ID=okhttp-logging-interceptor, +POM_NAME=okhttp-logging-interceptor, +++ b/okhttp-tests/src/test/java/okhttp3/OkHttpClientTest.java, +import org.junit.Rule;, +  @Rule public final MockWebServer server = new MockWebServer();, +, +++ b/okhttp-tests/src/test/java/okhttp3/SocksProxyTest.java, +import org.junit.Rule;, +  @Rule public final MockWebServer server = new MockWebServer();, +, +++ b/build.gradle, +++ b/mockwebserver/build.gradle, +++ b/okhttp-logging-interceptor/build.gradle, +++ b/okhttp-logging-interceptor/gradle.properties, +POM_ARTIFACT_ID=okhttp-logging-interceptor, +POM_NAME=okhttp-logging-interceptor, +++ b/okhttp-tests/src/test/java/okhttp3/OkHttpClientTest.java, +import org.junit.Rule;, +  @Rule public final MockWebServer server = new MockWebServer();, +, +++ b/okhttp-tests/src/test/java/okhttp3/SocksProxyTest.java, +import org.junit.Rule;, +  @Rule public final MockWebServer server = new MockWebServer();, +, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java, +    closeWebSockets(webSocket, serverListener.assertOpen());, +++ b/build.gradle, +++ b/mockwebserver/build.gradle, +++ b/okhttp-logging-interceptor/build.gradle, +++ b/okhttp-logging-interceptor/gradle.properties, +POM_ARTIFACT_ID=okhttp-logging-interceptor, +POM_NAME=okhttp-logging-interceptor, +++ b/okhttp-tests/src/test/java/okhttp3/OkHttpClientTest.java, +import org.junit.Rule;, +  @Rule public final MockWebServer server = new MockWebServer();, +, +++ b/okhttp-tests/src/test/java/okhttp3/SocksProxyTest.java, +import org.junit.Rule;, +  @Rule public final MockWebServer server = new MockWebServer();, +, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java, +    closeWebSockets(webSocket, serverListener.assertOpen());, +++ b/okhttp-tls/build.gradle, +++ b/build.gradle, +++ b/mockwebserver/build.gradle, +++ b/okhttp-logging-interceptor/build.gradle, +++ b/okhttp-logging-interceptor/gradle.properties, +POM_ARTIFACT_ID=okhttp-logging-interceptor, +POM_NAME=okhttp-logging-interceptor, +++ b/okhttp-tests/src/test/java/okhttp3/OkHttpClientTest.java, +import org.junit.Rule;, +  @Rule public final MockWebServer server = new MockWebServer();, +, +++ b/okhttp-tests/src/test/java/okhttp3/SocksProxyTest.java, +import org.junit.Rule;, +  @Rule public final MockWebServer server = new MockWebServer();, +, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java, +    closeWebSockets(webSocket, serverListener.assertOpen());, +++ b/okhttp-tls/build.gradle, +++ b/okhttp-urlconnection/build.gradle, +++ b/build.gradle, +++ b/mockwebserver/build.gradle, +++ b/okhttp-logging-interceptor/build.gradle, +++ b/okhttp-logging-interceptor/gradle.properties, +POM_ARTIFACT_ID=okhttp-logging-interceptor, +POM_NAME=okhttp-logging-interceptor, +++ b/okhttp-tests/src/test/java/okhttp3/OkHttpClientTest.java, +import org.junit.Rule;, +  @Rule public final MockWebServer server = new MockWebServer();, +, +++ b/okhttp-tests/src/test/java/okhttp3/SocksProxyTest.java, +import org.junit.Rule;, +  @Rule public final MockWebServer server = new MockWebServer();]