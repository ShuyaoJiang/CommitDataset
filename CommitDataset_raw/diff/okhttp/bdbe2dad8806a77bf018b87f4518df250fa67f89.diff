[+++ b/okhttp/src/main/java/okhttp3/internal/platform/AndroidPlatform.java, +import java.security.NoSuchAlgorithmException;, +import javax.net.ssl.SSLContext;, +, +  @Override public SSLContext getSSLContext() {, +    if (Build.VERSION.SDK_INT >= 16 && Build.VERSION.SDK_INT < 22) {, +      try {, +        return SSLContext.getInstance("TLSv1.2");, +      } catch (NoSuchAlgorithmException e) {, +        // fallback to TLS, +      }, +    }, +, +    try {, +      return SSLContext.getInstance("TLS");, +    } catch (NoSuchAlgorithmException e) {, +      throw new IllegalStateException("No TLS provider", e);, +    }, +  }, +++ b/okhttp/src/main/java/okhttp3/internal/platform/AndroidPlatform.java, +import java.security.NoSuchAlgorithmException;, +import javax.net.ssl.SSLContext;, +, +  @Override public SSLContext getSSLContext() {, +    if (Build.VERSION.SDK_INT >= 16 && Build.VERSION.SDK_INT < 22) {, +      try {, +        return SSLContext.getInstance("TLSv1.2");, +      } catch (NoSuchAlgorithmException e) {, +        // fallback to TLS, +      }, +    }, +, +    try {, +      return SSLContext.getInstance("TLS");, +    } catch (NoSuchAlgorithmException e) {, +      throw new IllegalStateException("No TLS provider", e);, +    }, +  }, +++ b/okhttp/src/main/java/okhttp3/internal/platform/Platform.java, +  public void connectSocket(Socket socket, InetSocketAddress address, int connectTimeout), +      throws IOException {, +      throw new IllegalStateException("Unable to extract the trust manager on ", +          + Platform.get(), +          + ", sslSocketFactory is ", +          + sslSocketFactory.getClass());, +    String jvmVersion = System.getProperty("java.specification.version");, +    if ("1.7".equals(jvmVersion)) {, +      try {, +        // JDK 1.7 (public version) only support > TLSv1 with named protocols, +        return SSLContext.getInstance("TLSv1.2");, +      } catch (NoSuchAlgorithmException e) {, +        // fallback to TLS, +      }, +    }, +]