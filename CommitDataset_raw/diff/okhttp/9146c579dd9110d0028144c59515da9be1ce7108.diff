[+++ b/okhttp/src/main/java/com/squareup/okhttp/Job.java, +import static com.squareup.okhttp.internal.http.HttpEngine.MAX_REDIRECTS;, +      Request followUp = engine.followUpRequest();, +      if (followUp == null) {, +      if (engine.getResponse().isRedirect() && ++redirectionCount > MAX_REDIRECTS) {, +        throw new ProtocolException("Too many redirects: " + redirectionCount);, +      }, +, +      // TODO: drop from POST to GET when redirected? HttpURLConnection does., +      // TODO: confirm that Cookies are not retained across hosts., +, +      if (!engine.sameConnection(followUp)) {, +      request = followUp;, +++ b/okhttp/src/main/java/com/squareup/okhttp/Job.java, +import static com.squareup.okhttp.internal.http.HttpEngine.MAX_REDIRECTS;, +      Request followUp = engine.followUpRequest();, +      if (followUp == null) {, +      if (engine.getResponse().isRedirect() && ++redirectionCount > MAX_REDIRECTS) {, +        throw new ProtocolException("Too many redirects: " + redirectionCount);, +      }, +, +      // TODO: drop from POST to GET when redirected? HttpURLConnection does., +      // TODO: confirm that Cookies are not retained across hosts., +, +      if (!engine.sameConnection(followUp)) {, +      request = followUp;, +++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java, +import static com.squareup.okhttp.internal.http.StatusLine.HTTP_TEMP_REDIRECT;, +import static java.net.HttpURLConnection.HTTP_MOVED_PERM;, +import static java.net.HttpURLConnection.HTTP_MOVED_TEMP;, +import static java.net.HttpURLConnection.HTTP_MULT_CHOICE;, +import static java.net.HttpURLConnection.HTTP_SEE_OTHER;, +  /** Returns true if this response redirects to another resource. */, +  public boolean isRedirect() {, +    switch (code) {, +      case HTTP_TEMP_REDIRECT:, +      case HTTP_MULT_CHOICE:, +      case HTTP_MOVED_PERM:, +      case HTTP_MOVED_TEMP:, +      case HTTP_SEE_OTHER:, +        return true;, +      default:, +        return false;, +    }, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/Job.java, +import static com.squareup.okhttp.internal.http.HttpEngine.MAX_REDIRECTS;, +      Request followUp = engine.followUpRequest();, +      if (followUp == null) {, +      if (engine.getResponse().isRedirect() && ++redirectionCount > MAX_REDIRECTS) {, +        throw new ProtocolException("Too many redirects: " + redirectionCount);, +      }, +, +      // TODO: drop from POST to GET when redirected? HttpURLConnection does., +      // TODO: confirm that Cookies are not retained across hosts., +, +      if (!engine.sameConnection(followUp)) {, +      request = followUp;, +++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java, +import static com.squareup.okhttp.internal.http.StatusLine.HTTP_TEMP_REDIRECT;, +import static java.net.HttpURLConnection.HTTP_MOVED_PERM;, +import static java.net.HttpURLConnection.HTTP_MOVED_TEMP;, +import static java.net.HttpURLConnection.HTTP_MULT_CHOICE;, +import static java.net.HttpURLConnection.HTTP_SEE_OTHER;, +  /** Returns true if this response redirects to another resource. */, +  public boolean isRedirect() {, +    switch (code) {, +      case HTTP_TEMP_REDIRECT:, +      case HTTP_MULT_CHOICE:, +      case HTTP_MOVED_PERM:, +      case HTTP_MOVED_TEMP:, +      case HTTP_SEE_OTHER:, +        return true;, +      default:, +        return false;, +    }, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java, +import java.net.Proxy;, +import static com.squareup.okhttp.internal.http.StatusLine.HTTP_TEMP_REDIRECT;, +import static java.net.HttpURLConnection.HTTP_MOVED_PERM;, +import static java.net.HttpURLConnection.HTTP_MOVED_TEMP;, +import static java.net.HttpURLConnection.HTTP_MULT_CHOICE;, +import static java.net.HttpURLConnection.HTTP_PROXY_AUTH;, +import static java.net.HttpURLConnection.HTTP_SEE_OTHER;, +import static java.net.HttpURLConnection.HTTP_UNAUTHORIZED;, +public final class HttpEngine {, +  /**, +   * How many redirects should we follow? Chrome follows 21; Firefox, curl,, +   * and wget follow 20; Safari follows 16; and HTTP/1.0 recommends 5., +   */, +  public static final int MAX_REDIRECTS = 20;, +, +  public void sendRequest() throws IOException {, +  public Sink getRequestBody() {, +  public BufferedSink getBufferedRequestBody() {, +  public boolean hasResponse() {, +  public ResponseSource responseSource() {]