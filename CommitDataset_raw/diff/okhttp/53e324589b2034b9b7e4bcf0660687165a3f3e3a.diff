[+++ b/okhttp-tests/src/test/java/okhttp3/InterceptorTest.java, +    Request request1 = new Request.Builder(), +        .url("http://" + TestUtil.UNREACHABLE_ADDRESS), +++ b/okhttp-tests/src/test/java/okhttp3/InterceptorTest.java, +    Request request1 = new Request.Builder(), +        .url("http://" + TestUtil.UNREACHABLE_ADDRESS), +++ b/okhttp/src/main/java/okhttp3/OkHttpClient.java, +import okhttp3.internal.duplex.HeadersListener;, +      @Override public void duplex(Request.Builder requestBuilder, String method) {, +        requestBuilder.duplex(method);, +      }, +, +, +      @Override public void headersListener(Response response, HeadersListener headersListener) {, +        response.headersListener(headersListener);, +      }, +++ b/okhttp-tests/src/test/java/okhttp3/InterceptorTest.java, +    Request request1 = new Request.Builder(), +        .url("http://" + TestUtil.UNREACHABLE_ADDRESS), +++ b/okhttp/src/main/java/okhttp3/OkHttpClient.java, +import okhttp3.internal.duplex.HeadersListener;, +      @Override public void duplex(Request.Builder requestBuilder, String method) {, +        requestBuilder.duplex(method);, +      }, +, +, +      @Override public void headersListener(Response response, HeadersListener headersListener) {, +        response.headersListener(headersListener);, +      }, +++ b/okhttp/src/main/java/okhttp3/internal/Internal.java, +import okhttp3.internal.duplex.HeadersListener;, +  public abstract void duplex(Request.Builder requestBuilder, String method);, +, +, +  public abstract void headersListener(Response response, HeadersListener headersListener);]