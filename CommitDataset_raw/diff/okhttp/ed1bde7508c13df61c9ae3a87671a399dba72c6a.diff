[+++ b/okhttp-tests/src/test/java/okhttp3/MediaTypeTest.java, +  @Test public void testDoubleQuotesAreSpecial() throws Exception {, +    MediaType mediaType = MediaType.parse("text/plain;a=\";charset=utf-8;b=\"");, +    assertNull(mediaType.charset());, +  }, +, +  @Test public void testSingleQuotesAreNotSpecial() throws Exception {, +    MediaType mediaType = MediaType.parse("text/plain;a=';charset=utf-8;b='");, +    assertEquals("UTF-8", mediaType.charset().name());, +  }, +, +  /**, +   * This is invalid according to RFC 822. But it's what Chrome does and it avoids a potentially, +   * unpleasant IllegalCharsetNameException., +   */, +  @Test public void testCharsetNameIsSingleQuoted() throws Exception {, +    MediaType mediaType = MediaType.parse("text/plain;charset='utf-8'");, +    assertEquals("UTF-8", mediaType.charset().name());, +  }, +, +  @Test public void testCharsetNameIsDoubleQuotedAndSingleQuoted() throws Exception {, +    MediaType mediaType = MediaType.parse("text/plain;charset=\"'utf-8'\"");, +    try {, +      mediaType.charset();, +      fail();, +    } catch (IllegalCharsetNameException expected) {, +    }, +  }, +, +  @Test public void testCharsetNameIsDoubleQuotedSingleQuote() throws Exception {, +    MediaType mediaType = MediaType.parse("text/plain;charset=\"'\"");, +    try {, +      mediaType.charset();, +      fail();, +    } catch (IllegalCharsetNameException expected) {, +    }, +  }, +, +++ b/okhttp-tests/src/test/java/okhttp3/MediaTypeTest.java, +  @Test public void testDoubleQuotesAreSpecial() throws Exception {, +    MediaType mediaType = MediaType.parse("text/plain;a=\";charset=utf-8;b=\"");, +    assertNull(mediaType.charset());, +  }, +, +  @Test public void testSingleQuotesAreNotSpecial() throws Exception {, +    MediaType mediaType = MediaType.parse("text/plain;a=';charset=utf-8;b='");, +    assertEquals("UTF-8", mediaType.charset().name());, +  }, +, +  /**, +   * This is invalid according to RFC 822. But it's what Chrome does and it avoids a potentially, +   * unpleasant IllegalCharsetNameException., +   */, +  @Test public void testCharsetNameIsSingleQuoted() throws Exception {, +    MediaType mediaType = MediaType.parse("text/plain;charset='utf-8'");, +    assertEquals("UTF-8", mediaType.charset().name());, +  }, +, +  @Test public void testCharsetNameIsDoubleQuotedAndSingleQuoted() throws Exception {, +    MediaType mediaType = MediaType.parse("text/plain;charset=\"'utf-8'\"");, +    try {, +      mediaType.charset();, +      fail();, +    } catch (IllegalCharsetNameException expected) {, +    }, +  }, +, +  @Test public void testCharsetNameIsDoubleQuotedSingleQuote() throws Exception {, +    MediaType mediaType = MediaType.parse("text/plain;charset=\"'\"");, +    try {, +      mediaType.charset();, +      fail();, +    } catch (IllegalCharsetNameException expected) {, +    }, +  }, +, +++ b/okhttp/src/main/java/okhttp3/MediaType.java, +      String charsetParameter;, +      String token = parameter.group(2);, +      if (token != null) {, +        // If the token is 'single-quoted' it's invalid! But we're lenient and strip the quotes., +        charsetParameter = (token.startsWith("'") && token.endsWith("'") && token.length() > 2), +            ? token.substring(1, token.length() - 1), +            : token;, +      } else {, +        // Value is "double-quoted". That's valid and our regex group already strips the quotes., +        charsetParameter = parameter.group(3);, +      }]