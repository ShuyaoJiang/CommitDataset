[+++ b/okhttp-tests/src/main/java/okhttp3/AutobahnTester.java, +import okio.ByteString;, +          @Override public void onPong(ByteString payload) {, +      @Override public void onPong(ByteString payload) {, +      @Override public void onPong(ByteString payload) {, +++ b/okhttp-tests/src/main/java/okhttp3/AutobahnTester.java, +import okio.ByteString;, +          @Override public void onPong(ByteString payload) {, +      @Override public void onPong(ByteString payload) {, +      @Override public void onPong(ByteString payload) {, +++ b/okhttp-tests/src/test/java/okhttp3/WebSocketCallTest.java, +import okio.ByteString;, +    client.sendPing(ByteString.encodeUtf8("Hello, WebSockets!"));, +    clientListener.assertPong(ByteString.encodeUtf8("Hello, WebSockets!"));, +  }, +, +  @Test public void nullPingPayloadThrows() throws IOException {, +    webServer.enqueue(new MockResponse().withWebSocketUpgrade(serverListener));, +    enqueueClientWebSocket();, +, +    WebSocket client = clientListener.assertOpen();, +    try {, +      client.sendPing(null);, +      fail();, +    } catch (NullPointerException e) {, +      assertEquals("payload == null", e.getMessage());, +    }, +      @Override public void onPong(ByteString payload) {, +    client.sendPing(ByteString.EMPTY);, +    client.sendPing(ByteString.encodeUtf8("WebSockets are fun!"));, +    clientListener.assertPong(ByteString.encodeUtf8("WebSockets are fun!"));, +++ b/okhttp-tests/src/main/java/okhttp3/AutobahnTester.java, +import okio.ByteString;, +          @Override public void onPong(ByteString payload) {, +      @Override public void onPong(ByteString payload) {, +      @Override public void onPong(ByteString payload) {, +++ b/okhttp-tests/src/test/java/okhttp3/WebSocketCallTest.java, +import okio.ByteString;, +    client.sendPing(ByteString.encodeUtf8("Hello, WebSockets!"));, +    clientListener.assertPong(ByteString.encodeUtf8("Hello, WebSockets!"));, +  }, +, +  @Test public void nullPingPayloadThrows() throws IOException {, +    webServer.enqueue(new MockResponse().withWebSocketUpgrade(serverListener));, +    enqueueClientWebSocket();, +, +    WebSocket client = clientListener.assertOpen();, +    try {, +      client.sendPing(null);, +      fail();, +    } catch (NullPointerException e) {, +      assertEquals("payload == null", e.getMessage());, +    }, +      @Override public void onPong(ByteString payload) {, +    client.sendPing(ByteString.EMPTY);, +    client.sendPing(ByteString.encodeUtf8("WebSockets are fun!"));, +    clientListener.assertPong(ByteString.encodeUtf8("WebSockets are fun!"));, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/EmptyWebSocketListener.java, +import okio.ByteString;, +  @Override public void onPong(ByteString payload) {, +++ b/okhttp-tests/src/main/java/okhttp3/AutobahnTester.java, +import okio.ByteString;, +          @Override public void onPong(ByteString payload) {, +      @Override public void onPong(ByteString payload) {, +      @Override public void onPong(ByteString payload) {, +++ b/okhttp-tests/src/test/java/okhttp3/WebSocketCallTest.java, +import okio.ByteString;, +    client.sendPing(ByteString.encodeUtf8("Hello, WebSockets!"));, +    clientListener.assertPong(ByteString.encodeUtf8("Hello, WebSockets!"));, +  }, +, +  @Test public void nullPingPayloadThrows() throws IOException {, +    webServer.enqueue(new MockResponse().withWebSocketUpgrade(serverListener));, +    enqueueClientWebSocket();, +, +    WebSocket client = clientListener.assertOpen();, +    try {, +      client.sendPing(null);, +      fail();, +    } catch (NullPointerException e) {, +      assertEquals("payload == null", e.getMessage());, +    }, +      @Override public void onPong(ByteString payload) {, +    client.sendPing(ByteString.EMPTY);, +    client.sendPing(ByteString.encodeUtf8("WebSockets are fun!"));, +    clientListener.assertPong(ByteString.encodeUtf8("WebSockets are fun!"));, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/EmptyWebSocketListener.java, +import okio.ByteString;, +  @Override public void onPong(ByteString payload) {, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java, +        client.sendPing(ByteString.encodeUtf8("Pong?"));, +    clientListener.assertPong(ByteString.encodeUtf8("Pong?"));, +    client.sendPing(ByteString.encodeUtf8("Hello!"));, +    clientListener.assertPong(ByteString.encodeUtf8("Hello!"));, +    client.sendPong(ByteString.encodeUtf8("Hello!"));, +    serverListener.assertPong(ByteString.encodeUtf8("Hello!"));, +  }, +, +  @Test public void nullPongPayloadThrows() throws IOException {, +    try {]