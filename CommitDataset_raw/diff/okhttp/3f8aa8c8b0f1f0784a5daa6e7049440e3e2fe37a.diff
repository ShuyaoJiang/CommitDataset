[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java, +      for (int i = 0, size = expiredConnections.size(); i < size; i++) {, +        Util.closeQuietly(expiredConnections.get(i).getSocket());, +  /** @deprecated Use {@link #getMultiplexedConnectionCount()}. */, +  @Deprecated, +    return getMultiplexedConnectionCount();, +  }, +, +  /** Returns total number of multiplexed connections in the pool. */, +  public synchronized int getMultiplexedConnectionCount() {, +    return connections.size() - getMultiplexedConnectionCount();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java, +      for (int i = 0, size = expiredConnections.size(); i < size; i++) {, +        Util.closeQuietly(expiredConnections.get(i).getSocket());, +  /** @deprecated Use {@link #getMultiplexedConnectionCount()}. */, +  @Deprecated, +    return getMultiplexedConnectionCount();, +  }, +, +  /** Returns total number of multiplexed connections in the pool. */, +  public synchronized int getMultiplexedConnectionCount() {, +    return connections.size() - getMultiplexedConnectionCount();, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionSpec.java, +    List<String> supportedCipherSuites =, +        Util.intersect(cipherSuites, sslSocket.getSupportedCipherSuites());, +    List<String> supportedTlsVersions =, +        Util.intersect(tlsVersions, sslSocket.getSupportedProtocols());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(1, pool.getMultiplexedConnectionCount());, +    assertEquals(0, pool.getMultiplexedConnectionCount());, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java, +      for (int i = 0, size = expiredConnections.size(); i < size; i++) {, +        Util.closeQuietly(expiredConnections.get(i).getSocket());, +  /** @deprecated Use {@link #getMultiplexedConnectionCount()}. */, +  @Deprecated, +    return getMultiplexedConnectionCount();, +  }, +, +  /** Returns total number of multiplexed connections in the pool. */]