[+++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +import okio.GzipSink;, +    byte[] bytes = new byte[bodyByteCount];, +    random.nextBytes(bytes);, +    Buffer body = new Buffer().write(bytes);, +      Buffer gzipBody = new Buffer();, +      GzipSink gzipSink = new GzipSink(gzipBody);, +      gzipSink.write(body, body.size());, +      gzipSink.close();, +      body = gzipBody;, +      result.setChunkedBody(body, 1024);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +import okio.GzipSink;, +    byte[] bytes = new byte[bodyByteCount];, +    random.nextBytes(bytes);, +    Buffer body = new Buffer().write(bytes);, +      Buffer gzipBody = new Buffer();, +      GzipSink gzipSink = new GzipSink(gzipBody);, +      gzipSink.write(body, body.size());, +      gzipSink.close();, +      body = gzipBody;, +      result.setChunkedBody(body, 1024);, +++ b/mockwebserver/pom.xml, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +import okio.GzipSink;, +    byte[] bytes = new byte[bodyByteCount];, +    random.nextBytes(bytes);, +    Buffer body = new Buffer().write(bytes);, +      Buffer gzipBody = new Buffer();, +      GzipSink gzipSink = new GzipSink(gzipBody);, +      gzipSink.write(body, body.size());, +      gzipSink.close();, +      body = gzipBody;, +      result.setChunkedBody(body, 1024);, +++ b/mockwebserver/pom.xml, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/Dispatcher.java, +, +  /** @deprecated replaced with {@link #peek}. */, +  protected final SocketPolicy peekSocketPolicy() {, +    throw new UnsupportedOperationException("This API is obsolete. Override peek() instead!");, +  }, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +import okio.GzipSink;, +    byte[] bytes = new byte[bodyByteCount];, +    random.nextBytes(bytes);, +    Buffer body = new Buffer().write(bytes);, +      Buffer gzipBody = new Buffer();, +      GzipSink gzipSink = new GzipSink(gzipBody);, +      gzipSink.write(body, body.size());, +      gzipSink.close();, +      body = gzipBody;, +      result.setChunkedBody(body, 1024);, +++ b/mockwebserver/pom.xml, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/Dispatcher.java, +, +  /** @deprecated replaced with {@link #peek}. */, +  protected final SocketPolicy peekSocketPolicy() {, +    throw new UnsupportedOperationException("This API is obsolete. Override peek() instead!");, +  }, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +    setHeader("Content-Length", 0);, +  /** Returns a copy of the raw HTTP payload. */, +    return body != null ? body.clone() : null;, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +import okio.GzipSink;, +    byte[] bytes = new byte[bodyByteCount];, +    random.nextBytes(bytes);, +    Buffer body = new Buffer().write(bytes);, +      Buffer gzipBody = new Buffer();, +      GzipSink gzipSink = new GzipSink(gzipBody);, +      gzipSink.write(body, body.size());, +      gzipSink.close();, +      body = gzipBody;, +      result.setChunkedBody(body, 1024);, +++ b/mockwebserver/pom.xml, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/Dispatcher.java, +, +  /** @deprecated replaced with {@link #peek}. */, +  protected final SocketPolicy peekSocketPolicy() {, +    throw new UnsupportedOperationException("This API is obsolete. Override peek() instead!");, +  }, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +    setHeader("Content-Length", 0);, +  /** Returns a copy of the raw HTTP payload. */, +    return body != null ? body.clone() : null;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +    Buffer body = response.getBody();, +    if (body == null) return;, +    throttledTransfer(response, socket, body, sink, Long.MAX_VALUE);, +, +      boolean closeStreamAfterHeaders = body != null || !response.getPushPromises().isEmpty();, +      if (body != null) {, +        boolean hasBody = pushPromise.getResponse().getBody() != null;, +            stream.getConnection().pushStream(stream.getId(), pushedHeaders, hasBody);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +import okio.GzipSink;, +    byte[] bytes = new byte[bodyByteCount];, +    random.nextBytes(bytes);, +    Buffer body = new Buffer().write(bytes);, +      Buffer gzipBody = new Buffer();]