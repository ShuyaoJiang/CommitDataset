[+++ b/okhttp-tests/src/test/java/okhttp3/SocksProxy.java, +            long byteCount = source.read(buffer, 8192L);, +++ b/okhttp-tests/src/test/java/okhttp3/SocksProxy.java, +            long byteCount = source.read(buffer, 8192L);, +++ b/okhttp-ws-tests/src/test/java/okhttp3/internal/ws/WebSocketWriterTest.java, +    assertData("017e4000");, +    assertData(bytes.readByteArray(16_384));, +    assertData("007e4000");, +    assertData(bytes.readByteArray(16_384));, +    assertData("007e6000");, +    assertData(bytes.readByteArray(24_576));, +    assertData("007e4000");, +    assertData(bytes.readByteArray(16_384));, +    assertData("007e6000");, +    assertData(bytes.readByteArray(24_576));, +++ b/okhttp-tests/src/test/java/okhttp3/SocksProxy.java, +            long byteCount = source.read(buffer, 8192L);, +++ b/okhttp-ws-tests/src/test/java/okhttp3/internal/ws/WebSocketWriterTest.java, +    assertData("017e4000");, +    assertData(bytes.readByteArray(16_384));, +    assertData("007e4000");, +    assertData(bytes.readByteArray(16_384));, +    assertData("007e6000");, +    assertData(bytes.readByteArray(24_576));, +    assertData("007e4000");, +    assertData(bytes.readByteArray(16_384));, +    assertData("007e6000");, +    assertData(bytes.readByteArray(24_576));, +++ b/okhttp-ws/src/main/java/okhttp3/internal/ws/WebSocketReader.java, +  private final byte[] maskBuffer = new byte[8192];, +++ b/okhttp-tests/src/test/java/okhttp3/SocksProxy.java, +            long byteCount = source.read(buffer, 8192L);, +++ b/okhttp-ws-tests/src/test/java/okhttp3/internal/ws/WebSocketWriterTest.java, +    assertData("017e4000");, +    assertData(bytes.readByteArray(16_384));, +    assertData("007e4000");, +    assertData(bytes.readByteArray(16_384));, +    assertData("007e6000");, +    assertData(bytes.readByteArray(24_576));, +    assertData("007e4000");, +    assertData(bytes.readByteArray(16_384));, +    assertData("007e6000");, +    assertData(bytes.readByteArray(24_576));, +++ b/okhttp-ws/src/main/java/okhttp3/internal/ws/WebSocketReader.java, +  private final byte[] maskBuffer = new byte[8192];, +++ b/okhttp-ws/src/main/java/okhttp3/internal/ws/WebSocketWriter.java, +    maskBuffer = isClient ? new byte[8192] : null;, +          && buffer.size() > contentLength - 8192 /* segment size */;, +++ b/okhttp-tests/src/test/java/okhttp3/SocksProxy.java, +            long byteCount = source.read(buffer, 8192L);, +++ b/okhttp-ws-tests/src/test/java/okhttp3/internal/ws/WebSocketWriterTest.java, +    assertData("017e4000");, +    assertData(bytes.readByteArray(16_384));, +    assertData("007e4000");, +    assertData(bytes.readByteArray(16_384));, +    assertData("007e6000");, +    assertData(bytes.readByteArray(24_576));, +    assertData("007e4000");, +    assertData(bytes.readByteArray(16_384));, +    assertData("007e6000");, +    assertData(bytes.readByteArray(24_576));, +++ b/okhttp-ws/src/main/java/okhttp3/internal/ws/WebSocketReader.java, +  private final byte[] maskBuffer = new byte[8192];, +++ b/okhttp-ws/src/main/java/okhttp3/internal/ws/WebSocketWriter.java, +    maskBuffer = isClient ? new byte[8192] : null;, +          && buffer.size() > contentLength - 8192 /* segment size */;, +++ b/okhttp/src/main/java/okhttp3/internal/Util.java, +      while (source.read(skipBuffer, 8192) != -1) {, +++ b/okhttp-tests/src/test/java/okhttp3/SocksProxy.java, +            long byteCount = source.read(buffer, 8192L);, +++ b/okhttp-ws-tests/src/test/java/okhttp3/internal/ws/WebSocketWriterTest.java, +    assertData("017e4000");, +    assertData(bytes.readByteArray(16_384));, +    assertData("007e4000");, +    assertData(bytes.readByteArray(16_384));, +    assertData("007e6000");, +    assertData(bytes.readByteArray(24_576));, +    assertData("007e4000");, +    assertData(bytes.readByteArray(16_384));, +    assertData("007e6000");, +    assertData(bytes.readByteArray(24_576));, +++ b/okhttp-ws/src/main/java/okhttp3/internal/ws/WebSocketReader.java, +  private final byte[] maskBuffer = new byte[8192];, +++ b/okhttp-ws/src/main/java/okhttp3/internal/ws/WebSocketWriter.java, +    maskBuffer = isClient ? new byte[8192] : null;, +          && buffer.size() > contentLength - 8192 /* segment size */;, +++ b/okhttp/src/main/java/okhttp3/internal/Util.java, +      while (source.read(skipBuffer, 8192) != -1) {, +++ b/pom.xml, +    <okio.version>1.8.0</okio.version>, +    <junit.version>4.11</junit.version>]