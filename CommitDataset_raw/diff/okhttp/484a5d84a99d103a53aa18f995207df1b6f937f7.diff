[+++ b/build.gradle, +  apply plugin: 'checkstyle', +  apply plugin: 'ru.vyarus.animalsniffer', +  apply plugin: 'net.ltgt.errorprone', +  apply plugin: 'org.jetbrains.dokka', +++ b/build.gradle, +  apply plugin: 'checkstyle', +  apply plugin: 'ru.vyarus.animalsniffer', +  apply plugin: 'net.ltgt.errorprone', +  apply plugin: 'org.jetbrains.dokka', +++ b/mockwebserver/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/build.gradle, +  apply plugin: 'checkstyle', +  apply plugin: 'ru.vyarus.animalsniffer', +  apply plugin: 'net.ltgt.errorprone', +  apply plugin: 'org.jetbrains.dokka', +++ b/mockwebserver/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/okcurl/build.gradle, +apply plugin: 'com.github.johnrengelman.shadow', +++ b/build.gradle, +  apply plugin: 'checkstyle', +  apply plugin: 'ru.vyarus.animalsniffer', +  apply plugin: 'net.ltgt.errorprone', +  apply plugin: 'org.jetbrains.dokka', +++ b/mockwebserver/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/okcurl/build.gradle, +apply plugin: 'com.github.johnrengelman.shadow', +++ b/okhttp-logging-interceptor/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/build.gradle, +  apply plugin: 'checkstyle', +  apply plugin: 'ru.vyarus.animalsniffer', +  apply plugin: 'net.ltgt.errorprone', +  apply plugin: 'org.jetbrains.dokka', +++ b/mockwebserver/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/okcurl/build.gradle, +apply plugin: 'com.github.johnrengelman.shadow', +++ b/okhttp-logging-interceptor/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/okhttp-sse/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/build.gradle, +  apply plugin: 'checkstyle', +  apply plugin: 'ru.vyarus.animalsniffer', +  apply plugin: 'net.ltgt.errorprone', +  apply plugin: 'org.jetbrains.dokka', +++ b/mockwebserver/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/okcurl/build.gradle, +apply plugin: 'com.github.johnrengelman.shadow', +++ b/okhttp-logging-interceptor/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/okhttp-sse/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/okhttp-sse/src/main/java/okhttp3/sse/EventSources.kt, +        return RealEventSource(request, listener).apply {, +          connect(client), +        }, +++ b/build.gradle, +  apply plugin: 'checkstyle', +  apply plugin: 'ru.vyarus.animalsniffer', +  apply plugin: 'net.ltgt.errorprone', +  apply plugin: 'org.jetbrains.dokka', +++ b/mockwebserver/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/okcurl/build.gradle, +apply plugin: 'com.github.johnrengelman.shadow', +++ b/okhttp-logging-interceptor/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/okhttp-sse/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/okhttp-sse/src/main/java/okhttp3/sse/EventSources.kt, +        return RealEventSource(request, listener).apply {, +          connect(client), +        }, +++ b/okhttp-tls/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/build.gradle, +  apply plugin: 'checkstyle', +  apply plugin: 'ru.vyarus.animalsniffer', +  apply plugin: 'net.ltgt.errorprone', +  apply plugin: 'org.jetbrains.dokka', +++ b/mockwebserver/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/okcurl/build.gradle, +apply plugin: 'com.github.johnrengelman.shadow', +++ b/okhttp-logging-interceptor/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/okhttp-sse/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp', +++ b/okhttp-sse/src/main/java/okhttp3/sse/EventSources.kt, +        return RealEventSource(request, listener).apply {, +          connect(client), +        }, +++ b/okhttp-tls/build.gradle, +apply plugin: 'me.champeau.gradle.japicmp']