[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/SocksProxy.java, +  public final String HOSTNAME_THAT_ONLY_THE_PROXY_KNOWS = "onlyProxyCanResolveMe.org";, +, +        // Resolve HOSTNAME_THAT_ONLY_THE_PROXY_KNOWS to localhost., +        toAddress = domainName.equalsIgnoreCase(HOSTNAME_THAT_ONLY_THE_PROXY_KNOWS), +            ? InetAddress.getLoopbackAddress(), +            : InetAddress.getByName(domainName);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/SocksProxy.java, +  public final String HOSTNAME_THAT_ONLY_THE_PROXY_KNOWS = "onlyProxyCanResolveMe.org";, +, +        // Resolve HOSTNAME_THAT_ONLY_THE_PROXY_KNOWS to localhost., +        toAddress = domainName.equalsIgnoreCase(HOSTNAME_THAT_ONLY_THE_PROXY_KNOWS), +            ? InetAddress.getLoopbackAddress(), +            : InetAddress.getByName(domainName);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/SocksProxyTest.java, +  @Test public void checkRemoteDNSResolve() throws Exception {, +    // This testcase will fail if the target is resolved locally instead of through the proxy., +    HttpUrl url = server.url("/"), +        .newBuilder(), +        .build();, +    Request request = new Request.Builder().url(url).build();, +    Response response1 = client.newCall(request).execute();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/SocksProxy.java, +  public final String HOSTNAME_THAT_ONLY_THE_PROXY_KNOWS = "onlyProxyCanResolveMe.org";, +, +        // Resolve HOSTNAME_THAT_ONLY_THE_PROXY_KNOWS to localhost., +        toAddress = domainName.equalsIgnoreCase(HOSTNAME_THAT_ONLY_THE_PROXY_KNOWS), +            ? InetAddress.getLoopbackAddress(), +            : InetAddress.getByName(domainName);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/SocksProxyTest.java, +  @Test public void checkRemoteDNSResolve() throws Exception {, +    // This testcase will fail if the target is resolved locally instead of through the proxy., +    HttpUrl url = server.url("/"), +        .newBuilder(), +        .build();, +    Request request = new Request.Builder().url(url).build();, +    Response response1 = client.newCall(request).execute();, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +        + route.inetSocketAddress, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/SocksProxy.java, +  public final String HOSTNAME_THAT_ONLY_THE_PROXY_KNOWS = "onlyProxyCanResolveMe.org";, +, +        // Resolve HOSTNAME_THAT_ONLY_THE_PROXY_KNOWS to localhost., +        toAddress = domainName.equalsIgnoreCase(HOSTNAME_THAT_ONLY_THE_PROXY_KNOWS), +            ? InetAddress.getLoopbackAddress(), +            : InetAddress.getByName(domainName);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/SocksProxyTest.java, +  @Test public void checkRemoteDNSResolve() throws Exception {, +    // This testcase will fail if the target is resolved locally instead of through the proxy., +    HttpUrl url = server.url("/"), +        .newBuilder(), +        .build();, +    Request request = new Request.Builder().url(url).build();, +    Response response1 = client.newCall(request).execute();, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +        + route.inetSocketAddress, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/RouteSelector.java]