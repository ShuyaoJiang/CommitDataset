[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/SslContextBuilder.java, +        localhost = new SslContextBuilder(InetAddress.getByName(null).getHostName()).build();, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/SslContextBuilder.java, +        localhost = new SslContextBuilder(InetAddress.getByName(null).getHostName()).build();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/SslContextBuilder.java, +        localhost = new SslContextBuilder(InetAddress.getByName(null).getHostName()).build();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java, +    if (writerSentClose) throw new IllegalStateException("closed");, +    if (writerSentClose) throw new IllegalStateException("closed");, +    if (writerSentClose) throw new IllegalStateException("closed");, +    if (writerSentClose) throw new IllegalStateException("closed");, +    if (writerSentClose) throw new IllegalStateException("closed");, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/SslContextBuilder.java, +        localhost = new SslContextBuilder(InetAddress.getByName(null).getHostName()).build();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java, +    if (writerSentClose) throw new IllegalStateException("closed");, +    if (writerSentClose) throw new IllegalStateException("closed");, +    if (writerSentClose) throw new IllegalStateException("closed");, +    if (writerSentClose) throw new IllegalStateException("closed");, +    if (writerSentClose) throw new IllegalStateException("closed");, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java, +    if (source == null) throw new NullPointerException("source == null");, +    if (frameCallback == null) throw new NullPointerException("frameCallback == null");, +    if (closed) throw new IOException("closed");, +      if (closed) throw new IOException("closed");, +      if (messageClosed) throw new IllegalStateException("closed");, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/SslContextBuilder.java, +        localhost = new SslContextBuilder(InetAddress.getByName(null).getHostName()).build();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +      assertEquals("closed", e.getMessage());, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java, +    if (writerSentClose) throw new IllegalStateException("closed");, +    if (writerSentClose) throw new IllegalStateException("closed");, +    if (writerSentClose) throw new IllegalStateException("closed");, +    if (writerSentClose) throw new IllegalStateException("closed");, +    if (writerSentClose) throw new IllegalStateException("closed");, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java, +    if (source == null) throw new NullPointerException("source == null");, +    if (frameCallback == null) throw new NullPointerException("frameCallback == null");, +    if (closed) throw new IOException("closed");, +      if (closed) throw new IOException("closed");, +      if (messageClosed) throw new IllegalStateException("closed");, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java, +    if (sink == null) throw new NullPointerException("sink == null");, +    if (random == null) throw new NullPointerException("random == null");, +    if (closed) throw new IOException("closed");, +    if (closed) throw new IOException("closed");, +      if (closed) throw new IOException("closed");, +      if (closed) throw new IOException("closed");]