[+++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +++ b/okhttp-tests/src/test/java/okhttp3/internal/framed/Http2ConnectionTest.java, +  @Test public void peerHttp2ServerZerosCompressionTable() throws Exception {, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +++ b/okhttp-tests/src/test/java/okhttp3/internal/framed/Http2ConnectionTest.java, +  @Test public void peerHttp2ServerZerosCompressionTable() throws Exception {, +++ b/okhttp-urlconnection/pom.xml, +      <groupId>org.codehaus.mojo</groupId>, +      <artifactId>animal-sniffer-annotations</artifactId>, +      <version>${animal.sniffer.version}</version>, +      <optional>true</optional>, +    </dependency>, +    <dependency>, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +++ b/okhttp-tests/src/test/java/okhttp3/internal/framed/Http2ConnectionTest.java, +  @Test public void peerHttp2ServerZerosCompressionTable() throws Exception {, +++ b/okhttp-urlconnection/pom.xml, +      <groupId>org.codehaus.mojo</groupId>, +      <artifactId>animal-sniffer-annotations</artifactId>, +      <version>${animal.sniffer.version}</version>, +      <optional>true</optional>, +    </dependency>, +    <dependency>, +++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/DelegatingHttpsURLConnection.java, +import org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement;, +  @IgnoreJRERequirement // Should only be invoked on Java 7+., +  @Override public long getContentLengthLong() {, +    return delegate.getContentLengthLong();, +  }, +, +  @IgnoreJRERequirement // Should only be invoked on Java 7+., +  @Override public long getHeaderFieldLong(String field, long defaultValue) {, +    return delegate.getHeaderFieldLong(field, defaultValue);, +  }, +, +  @IgnoreJRERequirement // Should only be invoked on Java 7+., +  @Override public void setFixedLengthStreamingMode(long contentLength) {, +    delegate.setFixedLengthStreamingMode(contentLength);, +  }, +, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +++ b/okhttp-tests/src/test/java/okhttp3/internal/framed/Http2ConnectionTest.java, +  @Test public void peerHttp2ServerZerosCompressionTable() throws Exception {, +++ b/okhttp-urlconnection/pom.xml, +      <groupId>org.codehaus.mojo</groupId>, +      <artifactId>animal-sniffer-annotations</artifactId>, +      <version>${animal.sniffer.version}</version>, +      <optional>true</optional>, +    </dependency>, +    <dependency>, +++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/DelegatingHttpsURLConnection.java, +import org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement;, +  @IgnoreJRERequirement // Should only be invoked on Java 7+., +  @Override public long getContentLengthLong() {, +    return delegate.getContentLengthLong();, +  }, +, +  @IgnoreJRERequirement // Should only be invoked on Java 7+., +  @Override public long getHeaderFieldLong(String field, long defaultValue) {, +    return delegate.getHeaderFieldLong(field, defaultValue);, +  }, +, +  @IgnoreJRERequirement // Should only be invoked on Java 7+., +  @Override public void setFixedLengthStreamingMode(long contentLength) {, +    delegate.setFixedLengthStreamingMode(contentLength);, +  }, +, +++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/OkHttpsURLConnection.java, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +++ b/okhttp-tests/src/test/java/okhttp3/internal/framed/Http2ConnectionTest.java, +  @Test public void peerHttp2ServerZerosCompressionTable() throws Exception {, +++ b/okhttp-urlconnection/pom.xml, +      <groupId>org.codehaus.mojo</groupId>, +      <artifactId>animal-sniffer-annotations</artifactId>, +      <version>${animal.sniffer.version}</version>, +      <optional>true</optional>, +    </dependency>, +    <dependency>, +++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/DelegatingHttpsURLConnection.java, +import org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement;, +  @IgnoreJRERequirement // Should only be invoked on Java 7+., +  @Override public long getContentLengthLong() {, +    return delegate.getContentLengthLong();, +  }, +, +  @IgnoreJRERequirement // Should only be invoked on Java 7+., +  @Override public long getHeaderFieldLong(String field, long defaultValue) {, +    return delegate.getHeaderFieldLong(field, defaultValue);, +  }, +, +  @IgnoreJRERequirement // Should only be invoked on Java 7+., +  @Override public void setFixedLengthStreamingMode(long contentLength) {, +    delegate.setFixedLengthStreamingMode(contentLength);, +  }, +, +++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/OkHttpsURLConnection.java, +++ b/okhttp/src/main/java/okhttp3/internal/framed/Http2.java, +      if (settings.getHeaderTableSize() >= 0) {, +        hpackReader.headerTableSizeSetting(settings.getHeaderTableSize());]