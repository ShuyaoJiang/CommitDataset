[+++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/CustomDispatcherTest.java, +  private Thread buildRequestThread(final String path, final AtomicInteger responseCode) {, +    return new Thread(new Runnable() {, +      @Override public void run() {, +        final URL url = mockWebServer.url(path).url();, +        final HttpURLConnection conn;, +        } catch (IOException e) {, +        }, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/CustomDispatcherTest.java, +  private Thread buildRequestThread(final String path, final AtomicInteger responseCode) {, +    return new Thread(new Runnable() {, +      @Override public void run() {, +        final URL url = mockWebServer.url(path).url();, +        final HttpURLConnection conn;, +        } catch (IOException e) {, +        }, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +    new Thread() {, +      @Override public void run() {, +      }, +    }.start();, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/CustomDispatcherTest.java, +  private Thread buildRequestThread(final String path, final AtomicInteger responseCode) {, +    return new Thread(new Runnable() {, +      @Override public void run() {, +        final URL url = mockWebServer.url(path).url();, +        final HttpURLConnection conn;, +        } catch (IOException e) {, +        }, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +    new Thread() {, +      @Override public void run() {, +      }, +    }.start();, +++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +import javax.net.ssl.SSLSession;, +      HttpLoggingInterceptor.Logger logger =, +          new HttpLoggingInterceptor.Logger() {, +            @Override, +            public void log(String message) {, +              System.out.println(message);, +            }, +          };, +    return new HostnameVerifier() {, +      @Override public boolean verify(String s, SSLSession sslSession) {, +        return true;, +      }, +    };, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/CustomDispatcherTest.java, +  private Thread buildRequestThread(final String path, final AtomicInteger responseCode) {, +    return new Thread(new Runnable() {, +      @Override public void run() {, +        final URL url = mockWebServer.url(path).url();, +        final HttpURLConnection conn;, +        } catch (IOException e) {, +        }, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +    new Thread() {, +      @Override public void run() {, +      }, +    }.start();, +++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +import javax.net.ssl.SSLSession;, +      HttpLoggingInterceptor.Logger logger =, +          new HttpLoggingInterceptor.Logger() {, +            @Override, +            public void log(String message) {, +              System.out.println(message);, +            }, +          };, +    return new HostnameVerifier() {, +      @Override public boolean verify(String s, SSLSession sslSession) {, +        return true;, +      }, +    };, +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +    Logger DEFAULT = new Logger() {, +      @Override public void log(String message) {, +        Platform.get().log(INFO, message, null);, +      }, +    };, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/CustomDispatcherTest.java, +  private Thread buildRequestThread(final String path, final AtomicInteger responseCode) {, +    return new Thread(new Runnable() {, +      @Override public void run() {, +        final URL url = mockWebServer.url(path).url();, +        final HttpURLConnection conn;, +        } catch (IOException e) {, +        }, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +    new Thread() {, +      @Override public void run() {, +      }, +    }.start();, +++ b/okcurl/src/main/java/okhttp3/curl/Main.java, +import javax.net.ssl.SSLSession;, +      HttpLoggingInterceptor.Logger logger =, +          new HttpLoggingInterceptor.Logger() {, +            @Override, +            public void log(String message) {]