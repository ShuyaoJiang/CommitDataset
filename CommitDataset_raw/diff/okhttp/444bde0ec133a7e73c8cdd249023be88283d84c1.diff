[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +import static org.junit.Assert.assertNull;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +import static org.junit.Assert.assertNull;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +/** Android's HttpResponseCacheTest. */, +      fail("Expected an IOException because the stream is closed.");, +    client.setResponseCache(cache);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +import static org.junit.Assert.assertNull;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +/** Android's HttpResponseCacheTest. */, +      fail("Expected an IOException because the stream is closed.");, +    client.setResponseCache(cache);, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +import static org.junit.Assert.assertNull;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +/** Android's HttpResponseCacheTest. */, +      fail("Expected an IOException because the stream is closed.");, +    client.setResponseCache(cache);, +++ /dev/null, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +import static org.junit.Assert.assertNull;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +/** Android's HttpResponseCacheTest. */, +      fail("Expected an IOException because the stream is closed.");, +    client.setResponseCache(cache);, +++ /dev/null, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/StatusLineTest.java, +import static org.junit.Assert.fail;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +import static org.junit.Assert.assertNull;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +/** Android's HttpResponseCacheTest. */, +      fail("Expected an IOException because the stream is closed.");, +    client.setResponseCache(cache);, +++ /dev/null, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/StatusLineTest.java, +import static org.junit.Assert.fail;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    client.setResponseCache(cache);, +  @Test public void installDeprecatedJavaNetResponseCache() throws Exception {, +    ResponseCache cache = new ResponseCache() {, +, +    try {, +      client.setResponseCache(cache);, +      fail();, +    } catch (UnsupportedOperationException expected) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +import static org.junit.Assert.assertNull;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +/** Android's HttpResponseCacheTest. */, +      fail("Expected an IOException because the stream is closed.");, +    client.setResponseCache(cache);, +++ /dev/null, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/StatusLineTest.java, +import static org.junit.Assert.fail;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    client.setResponseCache(cache);, +  @Test public void installDeprecatedJavaNetResponseCache() throws Exception {, +    ResponseCache cache = new ResponseCache() {, +, +    try {, +      client.setResponseCache(cache);, +      fail();, +    } catch (UnsupportedOperationException expected) {, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +   *, +   * <p>If unset, the {@link ResponseCache#getDefault() system-wide default}, +   * response cache will be used., +   *, +   * @deprecated OkHttp 2 dropped support for java.net.ResponseCache. That API, +   *     is broken for many reasons: URI instead of URL, no conditional updates,, +   *     no invalidation, and no mechanism for tracking hit rates. Use, +   *     {@link #setOkResponseCache} instead., +  @Deprecated, +    throw new UnsupportedOperationException("OkHttp 2 dropped support for java.net.ResponseCache. ", +        + "Use setOkResponseCache() instead.");, +   * @deprecated OkHttp 2 dropped support for java.net.ResponseCache. That API, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +import static org.junit.Assert.assertNull;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +/** Android's HttpResponseCacheTest. */, +      fail("Expected an IOException because the stream is closed.");, +    client.setResponseCache(cache);, +++ /dev/null, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/StatusLineTest.java, +import static org.junit.Assert.fail;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    client.setResponseCache(cache);, +  @Test public void installDeprecatedJavaNetResponseCache() throws Exception {, +    ResponseCache cache = new ResponseCache() {, +, +    try {]