[+++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +      RawHeaders responseHeaders = RawHeaders.readHttpHeaders(in);, +          requestHeaders = HttpAuthenticator.processAuthHeader(route.address.authenticator,, +              HTTP_PROXY_AUTH, responseHeaders, requestHeaders, route.proxy, url);, +          if (requestHeaders != null) continue;, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +      RawHeaders responseHeaders = RawHeaders.readHttpHeaders(in);, +          requestHeaders = HttpAuthenticator.processAuthHeader(route.address.authenticator,, +              HTTP_PROXY_AUTH, responseHeaders, requestHeaders, route.proxy, url);, +          if (requestHeaders != null) continue;, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +        RawHeaders.Builder varyHeadersBuilder = new RawHeaders.Builder();, +          varyHeadersBuilder.addLine(reader.readLine());, +        varyHeaders = varyHeadersBuilder.build();, +        RawHeaders.Builder responseHeadersBuilder = new RawHeaders.Builder();, +        responseHeadersBuilder.setStatusLine(reader.readLine());, +          responseHeadersBuilder.addLine(reader.readLine());, +        responseHeaders = responseHeadersBuilder.build();, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +      RawHeaders responseHeaders = RawHeaders.readHttpHeaders(in);, +          requestHeaders = HttpAuthenticator.processAuthHeader(route.address.authenticator,, +              HTTP_PROXY_AUTH, responseHeaders, requestHeaders, route.proxy, url);, +          if (requestHeaders != null) continue;, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +        RawHeaders.Builder varyHeadersBuilder = new RawHeaders.Builder();, +          varyHeadersBuilder.addLine(reader.readLine());, +        varyHeaders = varyHeadersBuilder.build();, +        RawHeaders.Builder responseHeadersBuilder = new RawHeaders.Builder();, +        responseHeadersBuilder.setStatusLine(reader.readLine());, +          responseHeadersBuilder.addLine(reader.readLine());, +        responseHeaders = responseHeadersBuilder.build();, +++ b/okhttp/src/main/java/com/squareup/okhttp/Job.java, +        if (request.header("Content-Type") == null) {, +          request = request.newBuilder().header("Content-Type", contentType.toString()).build();, +      HttpEngine engine = newEngine(connection);, +        RawHeaders successorRequestHeaders = HttpAuthenticator.processAuthHeader(, +            client.getAuthenticator(), response.code(), response.rawHeaders(), request.rawHeaders(),, +            selectedProxy, this.request.url());, +        return successorRequestHeaders != null, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +      RawHeaders responseHeaders = RawHeaders.readHttpHeaders(in);, +          requestHeaders = HttpAuthenticator.processAuthHeader(route.address.authenticator,, +              HTTP_PROXY_AUTH, responseHeaders, requestHeaders, route.proxy, url);, +          if (requestHeaders != null) continue;, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +        RawHeaders.Builder varyHeadersBuilder = new RawHeaders.Builder();, +          varyHeadersBuilder.addLine(reader.readLine());, +        varyHeaders = varyHeadersBuilder.build();, +        RawHeaders.Builder responseHeadersBuilder = new RawHeaders.Builder();, +        responseHeadersBuilder.setStatusLine(reader.readLine());, +          responseHeadersBuilder.addLine(reader.readLine());, +        responseHeaders = responseHeadersBuilder.build();, +++ b/okhttp/src/main/java/com/squareup/okhttp/Job.java, +        if (request.header("Content-Type") == null) {, +          request = request.newBuilder().header("Content-Type", contentType.toString()).build();, +      HttpEngine engine = newEngine(connection);, +        RawHeaders successorRequestHeaders = HttpAuthenticator.processAuthHeader(, +            client.getAuthenticator(), response.code(), response.rawHeaders(), request.rawHeaders(),, +            selectedProxy, this.request.url());, +        return successorRequestHeaders != null, +++ b/okhttp/src/main/java/com/squareup/okhttp/Request.java, +    this.headers = builder.headers.build();, +    return headers;, +    private RawHeaders.Builder headers = new RawHeaders.Builder();, +      headers = rawHeaders.newBuilder();, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +      RawHeaders responseHeaders = RawHeaders.readHttpHeaders(in);, +          requestHeaders = HttpAuthenticator.processAuthHeader(route.address.authenticator,, +              HTTP_PROXY_AUTH, responseHeaders, requestHeaders, route.proxy, url);, +          if (requestHeaders != null) continue;, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +        RawHeaders.Builder varyHeadersBuilder = new RawHeaders.Builder();, +          varyHeadersBuilder.addLine(reader.readLine());, +        varyHeaders = varyHeadersBuilder.build();, +        RawHeaders.Builder responseHeadersBuilder = new RawHeaders.Builder();, +        responseHeadersBuilder.setStatusLine(reader.readLine());, +          responseHeadersBuilder.addLine(reader.readLine());, +        responseHeaders = responseHeadersBuilder.build();, +++ b/okhttp/src/main/java/com/squareup/okhttp/Job.java, +        if (request.header("Content-Type") == null) {, +          request = request.newBuilder().header("Content-Type", contentType.toString()).build();, +      HttpEngine engine = newEngine(connection);, +        RawHeaders successorRequestHeaders = HttpAuthenticator.processAuthHeader(, +            client.getAuthenticator(), response.code(), response.rawHeaders(), request.rawHeaders(),, +            selectedProxy, this.request.url());, +        return successorRequestHeaders != null, +++ b/okhttp/src/main/java/com/squareup/okhttp/Request.java, +    this.headers = builder.headers.build();, +    return headers;, +    private RawHeaders.Builder headers = new RawHeaders.Builder();, +      headers = rawHeaders.newBuilder();, +++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java, +    this.headers = builder.headers.build();, +    return headers;, +    private RawHeaders.Builder headers = new RawHeaders.Builder();, +      headers = rawHeaders.newBuilder();, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +      RawHeaders responseHeaders = RawHeaders.readHttpHeaders(in);, +          requestHeaders = HttpAuthenticator.processAuthHeader(route.address.authenticator,, +              HTTP_PROXY_AUTH, responseHeaders, requestHeaders, route.proxy, url);]