[+++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Platform.java, +      // Attempt to find Android 4.0+ APIs., +      Method trafficStatsTagSocket = null;, +      Method trafficStatsUntagSocket = null;, +      try {, +        Class<?> trafficStats = Class.forName("android.net.TrafficStats");, +        trafficStatsTagSocket = trafficStats.getMethod("tagSocket", Socket.class);, +        trafficStatsUntagSocket = trafficStats.getMethod("untagSocket", Socket.class);, +      } catch (ClassNotFoundException ignored) {, +      } catch (NoSuchMethodException ignored) {, +      }, +, +      return new Android(openSslSocketClass, setUseSessionTickets, setHostname,, +          trafficStatsTagSocket, trafficStatsUntagSocket, setNpnProtocols,, +    // Non-null on Android 4.0+., +    private final Method trafficStatsTagSocket;, +    private final Method trafficStatsUntagSocket;, +, +        Method trafficStatsTagSocket, Method trafficStatsUntagSocket, Method setNpnProtocols,, +        Method getNpnSelectedProtocol) {, +      this.trafficStatsTagSocket = trafficStatsTagSocket;, +      this.trafficStatsUntagSocket = trafficStatsUntagSocket;, +, +    @Override public void tagSocket(Socket socket) throws SocketException {, +      if (trafficStatsTagSocket == null) return;, +, +      try {, +        trafficStatsTagSocket.invoke(null, socket);, +      } catch (IllegalAccessException e) {, +        throw new RuntimeException(e);, +      } catch (InvocationTargetException e) {, +        throw new RuntimeException(e);, +      }, +    }, +, +    @Override public void untagSocket(Socket socket) throws SocketException {, +      if (trafficStatsUntagSocket == null) return;, +, +      try {, +        trafficStatsUntagSocket.invoke(null, socket);, +      } catch (IllegalAccessException e) {, +        throw new RuntimeException(e);, +      } catch (InvocationTargetException e) {, +        throw new RuntimeException(e);, +      }, +    }]