[+++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +    String requestStartMessage = "--> ", +        + request.method(), +        + ' ' + request.url(), +        + (connection != null ? " " + connection.protocol() : "");, +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +    String requestStartMessage = "--> ", +        + request.method(), +        + ' ' + request.url(), +        + (connection != null ? " " + connection.protocol() : "");, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/HttpLoggingInterceptorTest.java, +import javax.net.ssl.HostnameVerifier;, +import okhttp3.Protocol;, +import okhttp3.RecordingHostnameVerifier;, +import okhttp3.internal.tls.SslClient;, +  private SslClient sslClient = SslClient.localhost();, +  private HostnameVerifier hostnameVerifier = new RecordingHostnameVerifier();, +        .sslSocketFactory(sslClient.socketFactory, sslClient.trustManager), +        .hostnameVerifier(hostnameVerifier), +        .assertLogEqual("--> GET " + url), +        .assertLogEqual("--> POST " + url + " (3-byte body)"), +        .assertLogEqual("--> GET " + url), +        .assertLogEqual("--> GET " + url), +        .assertLogEqual("--> GET " + url), +        .assertLogEqual("--> POST " + url), +        .assertLogEqual("--> POST " + url), +        .assertLogEqual("--> POST " + url), +        .assertLogEqual("--> GET " + url), +        .assertLogEqual("--> GET " + url), +        .assertLogEqual("--> GET " + url), +        .assertLogEqual("--> POST " + url), +        .assertLogEqual("--> GET " + url), +        .assertLogEqual("--> GET " + url), +        .assertLogEqual("--> GET " + url), +        .assertLogEqual("--> GET " + url), +        .assertLogEqual("--> GET " + url), +        .assertLogEqual("--> GET " + url), +  @Test public void http2() throws Exception {, +    server.useHttps(sslClient.socketFactory, false);, +    url = server.url("/");, +, +    setLevel(Level.BASIC);, +, +    server.enqueue(new MockResponse());, +    Response response = client.newCall(request().build()).execute();, +    assertEquals(Protocol.HTTP_2, response.protocol());, +, +    applicationLogs, +        .assertLogEqual("--> GET " + url), +        .assertLogMatch("<-- 200 OK " + url + " \\(\\d+ms, 0-byte body\\)"), +        .assertNoMoreLogs();, +, +    networkLogs, +        .assertLogEqual("--> GET " + url + " h2"), +        .assertLogMatch("<-- 200 OK " + url + " \\(\\d+ms, 0-byte body\\)"), +        .assertNoMoreLogs();, +  }, +]