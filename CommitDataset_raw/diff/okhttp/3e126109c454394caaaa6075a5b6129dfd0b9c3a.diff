[+++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/HttpLoggingInterceptorTest.java, +        .setBody("Body with unknown charset"));, +        .assertLogEqual("Body with unknown charset"), +        .assertLogEqual("<-- END HTTP (25-byte body)"), +        .assertLogEqual("Body with unknown charset"), +        .assertLogEqual("<-- END HTTP (25-byte body)"), +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/HttpLoggingInterceptorTest.java, +        .setBody("Body with unknown charset"));, +        .assertLogEqual("Body with unknown charset"), +        .assertLogEqual("<-- END HTTP (25-byte body)"), +        .assertLogEqual("Body with unknown charset"), +        .assertLogEqual("<-- END HTTP (25-byte body)"), +++ b/okhttp-tests/src/test/java/okhttp3/MediaTypeTest.java, +    assertNull(MediaType.parse("text/plain; charset=utf-8; charset=utf-16"));, +    assertNull(mediaType.charset());, +    assertNull(mediaType.charset());, +    assertNull(mediaType.charset());, +    assertNull(mediaType.charset());, +    assertNull(mediaType.charset());, +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/HttpLoggingInterceptorTest.java, +        .setBody("Body with unknown charset"));, +        .assertLogEqual("Body with unknown charset"), +        .assertLogEqual("<-- END HTTP (25-byte body)"), +        .assertLogEqual("Body with unknown charset"), +        .assertLogEqual("<-- END HTTP (25-byte body)"), +++ b/okhttp-tests/src/test/java/okhttp3/MediaTypeTest.java, +    assertNull(MediaType.parse("text/plain; charset=utf-8; charset=utf-16"));, +    assertNull(mediaType.charset());, +    assertNull(mediaType.charset());, +    assertNull(mediaType.charset());, +    assertNull(mediaType.charset());, +    assertNull(mediaType.charset());, +++ b/okhttp/src/main/java/okhttp3/MediaType.java, +        return null; // Multiple different charsets!, +    return charset(null);, +   * Returns the charset of this media type, or {@code defaultValue} if either this media type, +   * doesn't specify a charset, of it its charset is unsupported by the current runtime., +    try {, +    } catch (IllegalArgumentException e) {, +      return defaultValue; // This charset is invalid or unsupported. Give up., +    }]