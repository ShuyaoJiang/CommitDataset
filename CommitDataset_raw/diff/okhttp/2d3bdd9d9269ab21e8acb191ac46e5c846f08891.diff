[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +  private List<Protocol> npnProtocols, +      = Util.immutableList(Protocol.HTTP_2, Protocol.SPDY_3, Protocol.HTTP_11);, +                ? Protocol.get(protocolBytes.utf8()), +        if (protocol != Protocol.HTTP_11) {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +  private List<Protocol> npnProtocols, +      = Util.immutableList(Protocol.HTTP_2, Protocol.SPDY_3, Protocol.HTTP_11);, +                ? Protocol.get(protocolBytes.utf8()), +        if (protocol != Protocol.HTTP_11) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +        null, HttpAuthenticator.SYSTEM_DEFAULT, null,, +        Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_11));, +        HttpAuthenticator.SYSTEM_DEFAULT, null,, +        Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_11));, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +  private List<Protocol> npnProtocols, +      = Util.immutableList(Protocol.HTTP_2, Protocol.SPDY_3, Protocol.HTTP_11);, +                ? Protocol.get(protocolBytes.utf8()), +        if (protocol != Protocol.HTTP_11) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +        null, HttpAuthenticator.SYSTEM_DEFAULT, null,, +        Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_11));, +        HttpAuthenticator.SYSTEM_DEFAULT, null,, +        Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_11));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/ExternalHttp2Example.java, +import com.squareup.okhttp.internal.Util;, +        .setProtocols(Util.immutableList(Protocol.HTTP_2, Protocol.HTTP_11)), +        .open(url);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +  private List<Protocol> npnProtocols, +      = Util.immutableList(Protocol.HTTP_2, Protocol.SPDY_3, Protocol.HTTP_11);, +                ? Protocol.get(protocolBytes.utf8()), +        if (protocol != Protocol.HTTP_11) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +        null, HttpAuthenticator.SYSTEM_DEFAULT, null,, +        Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_11));, +        HttpAuthenticator.SYSTEM_DEFAULT, null,, +        Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_11));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/ExternalHttp2Example.java, +import com.squareup.okhttp.internal.Util;, +        .setProtocols(Util.immutableList(Protocol.HTTP_2, Protocol.HTTP_11)), +        .open(url);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/ExternalSpdyExample.java, +import com.squareup.okhttp.internal.Util;, +        .setProtocols(Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_11)).open(url);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +  private List<Protocol> npnProtocols, +      = Util.immutableList(Protocol.HTTP_2, Protocol.SPDY_3, Protocol.HTTP_11);, +                ? Protocol.get(protocolBytes.utf8()), +        if (protocol != Protocol.HTTP_11) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +        null, HttpAuthenticator.SYSTEM_DEFAULT, null,, +        Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_11));, +        HttpAuthenticator.SYSTEM_DEFAULT, null,, +        Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_11));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/ExternalHttp2Example.java, +import com.squareup.okhttp.internal.Util;, +        .setProtocols(Util.immutableList(Protocol.HTTP_2, Protocol.HTTP_11)), +        .open(url);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/ExternalSpdyExample.java, +import com.squareup.okhttp.internal.Util;, +        .setProtocols(Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_11)).open(url);, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +    if (route.modernTls && route.address.protocols.size() > 1) {, +      platform.setNpnProtocols(sslSocket, route.address.protocols);, +      selectedProtocol = Protocol.get(maybeProtocol.utf8()); // Throws IOE on unknown., +    if (selectedProtocol == Protocol.HTTP_11) {, +      httpConnection = new HttpConnection(pool, this, socket, readTimeout, writeTimeout);, +    } else {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +  private List<Protocol> npnProtocols, +      = Util.immutableList(Protocol.HTTP_2, Protocol.SPDY_3, Protocol.HTTP_11);, +                ? Protocol.get(protocolBytes.utf8()), +        if (protocol != Protocol.HTTP_11) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +        null, HttpAuthenticator.SYSTEM_DEFAULT, null,, +        Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_11));, +        HttpAuthenticator.SYSTEM_DEFAULT, null,, +        Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_11));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/ExternalHttp2Example.java, +import com.squareup.okhttp.internal.Util;, +        .setProtocols(Util.immutableList(Protocol.HTTP_2, Protocol.HTTP_11)), +        .open(url);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/ExternalSpdyExample.java, +import com.squareup.okhttp.internal.Util;, +        .setProtocols(Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_11)).open(url);, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +    if (route.modernTls && route.address.protocols.size() > 1) {, +      platform.setNpnProtocols(sslSocket, route.address.protocols);, +      selectedProtocol = Protocol.get(maybeProtocol.utf8()); // Throws IOE on unknown., +    if (selectedProtocol == Protocol.HTTP_11) {, +      httpConnection = new HttpConnection(pool, this, socket, readTimeout, writeTimeout);, +    } else {, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +        protocols.add(Protocol.get(transports.get(i)));, +      result.protocols = Util.immutableList(Protocol.HTTP_2, Protocol.SPDY_3, Protocol.HTTP_11);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +  private List<Protocol> npnProtocols, +      = Util.immutableList(Protocol.HTTP_2, Protocol.SPDY_3, Protocol.HTTP_11);]