[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    Util.closeQuietly(httpA.getSocket());, +    Util.closeQuietly(httpB.getSocket());, +    Util.closeQuietly(httpC.getSocket());, +    Util.closeQuietly(httpD.getSocket());, +    Util.closeQuietly(httpE.getSocket());, +    Util.closeQuietly(spdyA.getSocket());, +    httpA.getSocket().close();, +    Util.closeQuietly(httpA.getSocket());, +    Util.closeQuietly(httpA.getSocket()); // Include a closed connection in the pool., +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    Util.closeQuietly(httpA.getSocket());, +    Util.closeQuietly(httpB.getSocket());, +    Util.closeQuietly(httpC.getSocket());, +    Util.closeQuietly(httpD.getSocket());, +    Util.closeQuietly(httpE.getSocket());, +    Util.closeQuietly(spdyA.getSocket());, +    httpA.getSocket().close();, +    Util.closeQuietly(httpA.getSocket());, +    Util.closeQuietly(httpA.getSocket()); // Include a closed connection in the pool., +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +public final class Connection {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    Util.closeQuietly(httpA.getSocket());, +    Util.closeQuietly(httpB.getSocket());, +    Util.closeQuietly(httpC.getSocket());, +    Util.closeQuietly(httpD.getSocket());, +    Util.closeQuietly(httpE.getSocket());, +    Util.closeQuietly(spdyA.getSocket());, +    httpA.getSocket().close();, +    Util.closeQuietly(httpA.getSocket());, +    Util.closeQuietly(httpA.getSocket()); // Include a closed connection in the pool., +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +public final class Connection {, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java, +        Util.closeQuietly(expiredConnection.getSocket());, +          Util.closeQuietly(connection.getSocket());, +  void recycle(Connection connection) {, +      Util.closeQuietly(connection.getSocket());, +      Util.closeQuietly(connection.getSocket());, +  void share(Connection connection) {, +      Util.closeQuietly(connections.get(i).getSocket());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    Util.closeQuietly(httpA.getSocket());, +    Util.closeQuietly(httpB.getSocket());, +    Util.closeQuietly(httpC.getSocket());, +    Util.closeQuietly(httpD.getSocket());, +    Util.closeQuietly(httpE.getSocket());, +    Util.closeQuietly(spdyA.getSocket());, +    httpA.getSocket().close();, +    Util.closeQuietly(httpA.getSocket());, +    Util.closeQuietly(httpA.getSocket()); // Include a closed connection in the pool., +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +public final class Connection {, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java, +        Util.closeQuietly(expiredConnection.getSocket());, +          Util.closeQuietly(connection.getSocket());, +  void recycle(Connection connection) {, +      Util.closeQuietly(connection.getSocket());, +      Util.closeQuietly(connection.getSocket());, +  void share(Connection connection) {, +      Util.closeQuietly(connections.get(i).getSocket());, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +, +      @Override public void recycle(ConnectionPool pool, Connection connection) {, +        pool.recycle(connection);, +      }, +, +      @Override public void share(ConnectionPool connectionPool, Connection connection) {, +        connectionPool.share(connection);, +      }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    Util.closeQuietly(httpA.getSocket());, +    Util.closeQuietly(httpB.getSocket());, +    Util.closeQuietly(httpC.getSocket());, +    Util.closeQuietly(httpD.getSocket());, +    Util.closeQuietly(httpE.getSocket());, +    Util.closeQuietly(spdyA.getSocket());, +    httpA.getSocket().close();, +    Util.closeQuietly(httpA.getSocket());, +    Util.closeQuietly(httpA.getSocket()); // Include a closed connection in the pool., +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +public final class Connection {, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java, +        Util.closeQuietly(expiredConnection.getSocket());, +          Util.closeQuietly(connection.getSocket());, +  void recycle(Connection connection) {, +      Util.closeQuietly(connection.getSocket());, +      Util.closeQuietly(connection.getSocket());, +  void share(Connection connection) {, +      Util.closeQuietly(connections.get(i).getSocket());, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +, +      @Override public void recycle(ConnectionPool pool, Connection connection) {, +        pool.recycle(connection);, +      }, +, +      @Override public void share(ConnectionPool connectionPool, Connection connection) {, +        connectionPool.share(connection);, +      }]