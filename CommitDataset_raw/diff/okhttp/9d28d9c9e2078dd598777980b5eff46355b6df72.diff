[+++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockResponse.java, +    bytesOut.writeUtf8("0\r\n"); // Last chunk. Trailers follow!, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockResponse.java, +    bytesOut.writeUtf8("0\r\n"); // Last chunk. Trailers follow!, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +    writeHeaders(sink, response.getHeaders());, +, +    Buffer body = response.getBody();, +    if (body == null) return;, +    sleepIfDelayed(response.getBodyDelay(TimeUnit.MILLISECONDS));, +    throttledTransfer(response, socket, body, sink, body.size(), false);, +, +    if ("chunked".equalsIgnoreCase(response.getHeaders().get("Transfer-Encoding"))) {, +      writeHeaders(sink, response.getTrailers());, +    }, +  }, +, +  private void writeHeaders(BufferedSink sink, Headers headers) throws IOException {, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockResponse.java, +    bytesOut.writeUtf8("0\r\n"); // Last chunk. Trailers follow!, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +    writeHeaders(sink, response.getHeaders());, +, +    Buffer body = response.getBody();, +    if (body == null) return;, +    sleepIfDelayed(response.getBodyDelay(TimeUnit.MILLISECONDS));, +    throttledTransfer(response, socket, body, sink, body.size(), false);, +, +    if ("chunked".equalsIgnoreCase(response.getHeaders().get("Transfer-Encoding"))) {, +      writeHeaders(sink, response.getTrailers());, +    }, +  }, +, +  private void writeHeaders(BufferedSink sink, Headers headers) throws IOException {, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +import okio.BufferedSource;, +    BufferedSource bodySource = Okio.buffer(Okio.source(, +        openConnection(server.url("/").url()).getInputStream()));, +    assertEquals("ABCDE\n", bodySource.readUtf8(6));, +      bodySource.readUtf8(21);, +      bodySource.close();, +    CHUNKED {, +    FIXED_LENGTH {, +    END_OF_STREAM {, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockResponse.java, +    bytesOut.writeUtf8("0\r\n"); // Last chunk. Trailers follow!, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +    writeHeaders(sink, response.getHeaders());, +, +    Buffer body = response.getBody();, +    if (body == null) return;, +    sleepIfDelayed(response.getBodyDelay(TimeUnit.MILLISECONDS));, +    throttledTransfer(response, socket, body, sink, body.size(), false);, +, +    if ("chunked".equalsIgnoreCase(response.getHeaders().get("Transfer-Encoding"))) {, +      writeHeaders(sink, response.getTrailers());, +    }, +  }, +, +  private void writeHeaders(BufferedSink sink, Headers headers) throws IOException {, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +import okio.BufferedSource;, +    BufferedSource bodySource = Okio.buffer(Okio.source(, +        openConnection(server.url("/").url()).getInputStream()));, +    assertEquals("ABCDE\n", bodySource.readUtf8(6));, +      bodySource.readUtf8(21);, +      bodySource.close();, +    CHUNKED {, +    FIXED_LENGTH {, +    END_OF_STREAM {, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +      bodySource.readUtf8(21);, +    CHUNKED {, +      @Override void setBody(MockResponse response, Buffer content, int chunkSize) {, +    FIXED_LENGTH {, +    END_OF_STREAM {, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockResponse.java, +    bytesOut.writeUtf8("0\r\n"); // Last chunk. Trailers follow!, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +    writeHeaders(sink, response.getHeaders());, +, +    Buffer body = response.getBody();, +    if (body == null) return;, +    sleepIfDelayed(response.getBodyDelay(TimeUnit.MILLISECONDS));, +    throttledTransfer(response, socket, body, sink, body.size(), false);, +, +    if ("chunked".equalsIgnoreCase(response.getHeaders().get("Transfer-Encoding"))) {, +      writeHeaders(sink, response.getTrailers());, +    }, +  }, +, +  private void writeHeaders(BufferedSink sink, Headers headers) throws IOException {, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +import okio.BufferedSource;, +    BufferedSource bodySource = Okio.buffer(Okio.source(, +        openConnection(server.url("/").url()).getInputStream()));, +    assertEquals("ABCDE\n", bodySource.readUtf8(6));, +      bodySource.readUtf8(21);, +      bodySource.close();, +    CHUNKED {]