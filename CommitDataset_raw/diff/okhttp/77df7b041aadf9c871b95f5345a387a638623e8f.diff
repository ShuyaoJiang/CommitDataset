[+++ b/okhttp-tests/src/test/java/okhttp3/DuplexTest.java, +++ b/okhttp-tests/src/test/java/okhttp3/DuplexTest.java, +++ b/okhttp/src/main/java/okhttp3/internal/http/ExchangeCodec.java, +  Sink createRequestBody(Request request, long contentLength);, +++ b/okhttp-tests/src/test/java/okhttp3/DuplexTest.java, +++ b/okhttp/src/main/java/okhttp3/internal/http/ExchangeCodec.java, +  Sink createRequestBody(Request request, long contentLength);, +++ b/okhttp/src/main/java/okhttp3/internal/http1/Http1ExchangeCodec.java, +  @Override public Sink createRequestBody(Request request, long contentLength) {, +++ b/okhttp-tests/src/test/java/okhttp3/DuplexTest.java, +++ b/okhttp/src/main/java/okhttp3/internal/http/ExchangeCodec.java, +  Sink createRequestBody(Request request, long contentLength);, +++ b/okhttp/src/main/java/okhttp3/internal/http1/Http1ExchangeCodec.java, +  @Override public Sink createRequestBody(Request request, long contentLength) {, +++ b/okhttp/src/main/java/okhttp3/internal/platform/ConscryptPlatform.java, +  @SuppressWarnings("deprecation") private Provider getProvider() {, +    // defaults to true, but allow for older versions of conscrypt if still compatible, +    // new form with boolean is only present in >= 2.0.0, +++ b/okhttp-tests/src/test/java/okhttp3/DuplexTest.java, +++ b/okhttp/src/main/java/okhttp3/internal/http/ExchangeCodec.java, +  Sink createRequestBody(Request request, long contentLength);, +++ b/okhttp/src/main/java/okhttp3/internal/http1/Http1ExchangeCodec.java, +  @Override public Sink createRequestBody(Request request, long contentLength) {, +++ b/okhttp/src/main/java/okhttp3/internal/platform/ConscryptPlatform.java, +  @SuppressWarnings("deprecation") private Provider getProvider() {, +    // defaults to true, but allow for older versions of conscrypt if still compatible, +    // new form with boolean is only present in >= 2.0.0, +++ b/pom.xml, +    <conscrypt.version>2.0.0</conscrypt.version>]