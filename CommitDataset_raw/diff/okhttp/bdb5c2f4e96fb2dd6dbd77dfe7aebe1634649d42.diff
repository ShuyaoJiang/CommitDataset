[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void userAgentIsOmittedByDefault() throws Exception {, +    server.enqueue(new MockResponse());, +    server.play();, +, +    executeSynchronously(new Request.Builder().url(server.getUrl("/")).build());, +, +    RecordedRequest recordedRequest = server.takeRequest();, +    assertNull(recordedRequest.getHeader("User-Agent"));, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void userAgentIsOmittedByDefault() throws Exception {, +    server.enqueue(new MockResponse());, +    server.play();, +, +    executeSynchronously(new Request.Builder().url(server.getUrl("/")).build());, +, +    RecordedRequest recordedRequest = server.takeRequest();, +    assertNull(recordedRequest.getHeader("User-Agent"));, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    System.clearProperty("http.agent");, +  @Test public void userAgentPicksUpHttpAgentSystemProperty() throws Exception {, +    server.enqueue(new MockResponse().setBody("abc"));, +    server.play();, +, +    System.setProperty("http.agent", "foo");, +    assertContent("abc", client.open(server.getUrl("/")));, +, +    RecordedRequest request = server.takeRequest();, +    assertEquals("foo", request.getHeader("User-Agent"));, +  }, +, +  @Test public void userAgentDefaultsToJavaVersion() throws Exception {, +    server.enqueue(new MockResponse().setBody("abc"));, +    server.play();, +, +    assertContent("abc", client.open(server.getUrl("/")));, +, +    RecordedRequest request = server.takeRequest();, +    assertTrue(request.getHeader("User-Agent").startsWith("Java"));, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void userAgentIsOmittedByDefault() throws Exception {, +    server.enqueue(new MockResponse());, +    server.play();, +, +    executeSynchronously(new Request.Builder().url(server.getUrl("/")).build());, +, +    RecordedRequest recordedRequest = server.takeRequest();, +    assertNull(recordedRequest.getHeader("User-Agent"));, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    System.clearProperty("http.agent");, +  @Test public void userAgentPicksUpHttpAgentSystemProperty() throws Exception {, +    server.enqueue(new MockResponse().setBody("abc"));, +    server.play();, +, +    System.setProperty("http.agent", "foo");, +    assertContent("abc", client.open(server.getUrl("/")));, +, +    RecordedRequest request = server.takeRequest();, +    assertEquals("foo", request.getHeader("User-Agent"));, +  }, +, +  @Test public void userAgentDefaultsToJavaVersion() throws Exception {, +    server.enqueue(new MockResponse().setBody("abc"));, +    server.play();, +, +    assertContent("abc", client.open(server.getUrl("/")));, +, +    RecordedRequest request = server.takeRequest();, +    assertTrue(request.getHeader("User-Agent").startsWith("Java"));, +  }, +, +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +    if (headers.get("User-Agent") == null) {, +      builder.header("User-Agent", defaultUserAgent());, +    }, +, +  private String defaultUserAgent() {, +    String agent = System.getProperty("http.agent");, +    return agent != null ? agent : ("Java" + System.getProperty("java.version"));, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void userAgentIsOmittedByDefault() throws Exception {, +    server.enqueue(new MockResponse());, +    server.play();, +, +    executeSynchronously(new Request.Builder().url(server.getUrl("/")).build());, +, +    RecordedRequest recordedRequest = server.takeRequest();, +    assertNull(recordedRequest.getHeader("User-Agent"));, +  }, +]