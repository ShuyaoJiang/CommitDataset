[+++ /dev/null, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void setFollowRedirectsFalse() throws Exception {, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void setFollowRedirectsFalse() throws Exception {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/OkHttpClientTest.java, +import static org.junit.Assert.fail;, +, +  @Test public void setProtocolsRejectsHttp10() throws Exception {, +    OkHttpClient client = new OkHttpClient();, +    try {, +      client.setProtocols(Arrays.asList(Protocol.HTTP_1_0, Protocol.HTTP_1_1));, +      fail();, +    } catch (IllegalArgumentException expected) {, +    }, +  }, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void setFollowRedirectsFalse() throws Exception {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/OkHttpClientTest.java, +import static org.junit.Assert.fail;, +, +  @Test public void setProtocolsRejectsHttp10() throws Exception {, +    OkHttpClient client = new OkHttpClient();, +    try {, +      client.setProtocols(Arrays.asList(Protocol.HTTP_1_0, Protocol.HTTP_1_1));, +      fail();, +    } catch (IllegalArgumentException expected) {, +    }, +  }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void setFollowRedirectsFalse() throws Exception {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/OkHttpClientTest.java, +import static org.junit.Assert.fail;, +, +  @Test public void setProtocolsRejectsHttp10() throws Exception {, +    OkHttpClient client = new OkHttpClient();, +    try {, +      client.setProtocols(Arrays.asList(Protocol.HTTP_1_0, Protocol.HTTP_1_1));, +      fail();, +    } catch (IllegalArgumentException expected) {, +    }, +  }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +import com.squareup.okhttp.internal.Network;, +        .setConnectionPool(ConnectionPool.getDefault());, +    Internal.instance.setNetwork(client, dns);, +, +  private static class FakeDns implements Network {, +    @Override public InetAddress[] resolveInetAddresses(String host) throws UnknownHostException {, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void setFollowRedirectsFalse() throws Exception {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/OkHttpClientTest.java, +import static org.junit.Assert.fail;, +, +  @Test public void setProtocolsRejectsHttp10() throws Exception {, +    OkHttpClient client = new OkHttpClient();, +    try {, +      client.setProtocols(Arrays.asList(Protocol.HTTP_1_0, Protocol.HTTP_1_1));, +      fail();, +    } catch (IllegalArgumentException expected) {, +    }, +  }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +import com.squareup.okhttp.internal.Network;, +        .setConnectionPool(ConnectionPool.getDefault());, +    Internal.instance.setNetwork(client, dns);, +, +  private static class FakeDns implements Network {, +    @Override public InetAddress[] resolveInetAddresses(String host) throws UnknownHostException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/CacheControl.java, +      boolean onlyIfCached) {, +        mustRevalidate, maxStaleSeconds, minFreshSeconds, onlyIfCached);, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void setFollowRedirectsFalse() throws Exception {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/OkHttpClientTest.java, +import static org.junit.Assert.fail;, +, +  @Test public void setProtocolsRejectsHttp10() throws Exception {, +    OkHttpClient client = new OkHttpClient();, +    try {, +      client.setProtocols(Arrays.asList(Protocol.HTTP_1_0, Protocol.HTTP_1_1));, +      fail();, +    } catch (IllegalArgumentException expected) {, +    }, +  }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java]