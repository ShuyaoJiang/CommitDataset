[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft07Test.java, +  @Test public void lowercaseHeaderNameBeforeEmit() throws IOException {, +    hpackWriter.writeHeaders(Arrays.asList(new Header("FoO", "BaR")));, +    assertBytes(0, 3, 'f', 'o', 'o', 3, 'B', 'a', 'R');, +  }, +, +  @Test public void mixedCaseHeaderNameIsMalformed() throws IOException {, +    try {, +      newReader(byteStream(0, 3, 'F', 'o', 'o', 3, 'B', 'a', 'R')).readHeaders();, +      fail();, +    } catch (IOException e) {, +      assertEquals("PROTOCOL_ERROR response malformed: mixed case name: Foo", e.getMessage());, +    }, +    assertEquals(ByteString.EMPTY, newReader(byteStream(0)).readByteString());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft07Test.java, +  @Test public void lowercaseHeaderNameBeforeEmit() throws IOException {, +    hpackWriter.writeHeaders(Arrays.asList(new Header("FoO", "BaR")));, +    assertBytes(0, 3, 'f', 'o', 'o', 3, 'B', 'a', 'R');, +  }, +, +  @Test public void mixedCaseHeaderNameIsMalformed() throws IOException {, +    try {, +      newReader(byteStream(0, 3, 'F', 'o', 'o', 3, 'B', 'a', 'R')).readHeaders();, +      fail();, +    } catch (IOException e) {, +      assertEquals("PROTOCOL_ERROR response malformed: mixed case name: Foo", e.getMessage());, +    }, +    assertEquals(ByteString.EMPTY, newReader(byteStream(0)).readByteString());, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/HpackDraft07.java, +, +      ByteString value = readByteString();, +      ByteString name = checkLowercase(readByteString());, +      ByteString value = readByteString();, +      ByteString value = readByteString();, +      ByteString name = checkLowercase(readByteString());, +      ByteString value = readByteString();, +    /** Reads a potentially Huffman encoded byte string. */, +    ByteString readByteString() throws IOException {, +        return ByteString.of(Huffman.get().decode(source.readByteArray(length)));, +      } else {, +        return source.readByteString(length);, +        ByteString name = headerBlock.get(i).name.toAsciiLowercase();, +, +  /**, +   * An HTTP/2 response cannot contain uppercase header characters and must, +   * be treated as malformed., +   */, +  private static ByteString checkLowercase(ByteString name) throws IOException {, +    for (int i = 0, length = name.size(); i < length; i++) {, +      byte c = name.getByte(i);, +      if (c >= 'A' && c <= 'Z') {, +        throw new IOException("PROTOCOL_ERROR response malformed: mixed case name: " + name.utf8());, +      }, +    }, +    return name;, +  }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft07Test.java, +  @Test public void lowercaseHeaderNameBeforeEmit() throws IOException {, +    hpackWriter.writeHeaders(Arrays.asList(new Header("FoO", "BaR")));, +    assertBytes(0, 3, 'f', 'o', 'o', 3, 'B', 'a', 'R');, +  }, +, +  @Test public void mixedCaseHeaderNameIsMalformed() throws IOException {, +    try {, +      newReader(byteStream(0, 3, 'F', 'o', 'o', 3, 'B', 'a', 'R')).readHeaders();, +      fail();, +    } catch (IOException e) {, +      assertEquals("PROTOCOL_ERROR response malformed: mixed case name: Foo", e.getMessage());, +    }, +    assertEquals(ByteString.EMPTY, newReader(byteStream(0)).readByteString());, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/HpackDraft07.java, +, +      ByteString value = readByteString();, +      ByteString name = checkLowercase(readByteString());, +      ByteString value = readByteString();, +      ByteString value = readByteString();, +      ByteString name = checkLowercase(readByteString());, +      ByteString value = readByteString();, +    /** Reads a potentially Huffman encoded byte string. */, +    ByteString readByteString() throws IOException {, +        return ByteString.of(Huffman.get().decode(source.readByteArray(length)));, +      } else {, +        return source.readByteString(length);, +        ByteString name = headerBlock.get(i).name.toAsciiLowercase();, +, +  /**, +   * An HTTP/2 response cannot contain uppercase header characters and must, +   * be treated as malformed., +   */, +  private static ByteString checkLowercase(ByteString name) throws IOException {, +    for (int i = 0, length = name.size(); i < length; i++) {, +      byte c = name.getByte(i);, +      if (c >= 'A' && c <= 'Z') {, +        throw new IOException("PROTOCOL_ERROR response malformed: mixed case name: " + name.utf8());, +      }, +    }, +    return name;, +  }, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft12.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft07Test.java]