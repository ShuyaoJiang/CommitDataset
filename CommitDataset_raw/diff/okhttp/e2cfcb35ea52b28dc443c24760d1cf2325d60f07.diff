[+++ b/build.gradle, +      'okio': '2.2.2',, +++ b/build.gradle, +      'okio': '2.2.2',, +++ b/okhttp-dnsoverhttps/src/main/java/okhttp3/dnsoverhttps/DnsRecordCodec.kt, +import okio.utf8Size, +      val utf8ByteCount = label.utf8Size(), +    nameBuf.copyTo(this, 0, nameBuf.size), +++ b/build.gradle, +      'okio': '2.2.2',, +++ b/okhttp-dnsoverhttps/src/main/java/okhttp3/dnsoverhttps/DnsRecordCodec.kt, +import okio.utf8Size, +      val utf8ByteCount = label.utf8Size(), +    nameBuf.copyTo(this, 0, nameBuf.size), +++ b/okhttp-dnsoverhttps/src/test/java/okhttp3/dnsoverhttps/DnsOverHttpsTest.java, +import java.io.EOFException;, +      assertThat(ioe.getCause()).isInstanceOf(EOFException.class);, +++ b/build.gradle, +      'okio': '2.2.2',, +++ b/okhttp-dnsoverhttps/src/main/java/okhttp3/dnsoverhttps/DnsRecordCodec.kt, +import okio.utf8Size, +      val utf8ByteCount = label.utf8Size(), +    nameBuf.copyTo(this, 0, nameBuf.size), +++ b/okhttp-dnsoverhttps/src/test/java/okhttp3/dnsoverhttps/DnsOverHttpsTest.java, +import java.io.EOFException;, +      assertThat(ioe.getCause()).isInstanceOf(EOFException.class);, +++ b/okhttp/src/main/java/okhttp3/Cache.kt, +import okio.buffer, +import okio.ByteString.Companion.decodeBase64, +import okio.ByteString.Companion.encodeUtf8, +              val metadata = snapshot.getSource(ENTRY_METADATA).buffer(), +        val source = rawSource.buffer(), +      val sink = editor.newSink(ENTRY_METADATA).buffer(), +          bytes.write(line.decodeBase64()!!), +      bodySource = object : ForwardingSource(source) {, +      }.buffer(), +    fun key(url: HttpUrl): String = url.toString().encodeUtf8().md5().hex(), +++ b/build.gradle, +      'okio': '2.2.2',, +++ b/okhttp-dnsoverhttps/src/main/java/okhttp3/dnsoverhttps/DnsRecordCodec.kt, +import okio.utf8Size, +      val utf8ByteCount = label.utf8Size(), +    nameBuf.copyTo(this, 0, nameBuf.size), +++ b/okhttp-dnsoverhttps/src/test/java/okhttp3/dnsoverhttps/DnsOverHttpsTest.java, +import java.io.EOFException;, +      assertThat(ioe.getCause()).isInstanceOf(EOFException.class);, +++ b/okhttp/src/main/java/okhttp3/Cache.kt, +import okio.buffer, +import okio.ByteString.Companion.decodeBase64, +import okio.ByteString.Companion.encodeUtf8, +              val metadata = snapshot.getSource(ENTRY_METADATA).buffer(), +        val source = rawSource.buffer(), +      val sink = editor.newSink(ENTRY_METADATA).buffer(), +          bytes.write(line.decodeBase64()!!), +      bodySource = object : ForwardingSource(source) {, +      }.buffer(), +    fun key(url: HttpUrl): String = url.toString().encodeUtf8().md5().hex(), +++ b/okhttp/src/main/java/okhttp3/CertificatePinner.kt, +import okio.ByteString.Companion.decodeBase64, +          this.hash = pin.substring("sha1/".length).decodeBase64()!!, +          this.hash = pin.substring("sha256/".length).decodeBase64()!!, +++ b/build.gradle, +      'okio': '2.2.2',, +++ b/okhttp-dnsoverhttps/src/main/java/okhttp3/dnsoverhttps/DnsRecordCodec.kt, +import okio.utf8Size, +      val utf8ByteCount = label.utf8Size(), +    nameBuf.copyTo(this, 0, nameBuf.size), +++ b/okhttp-dnsoverhttps/src/test/java/okhttp3/dnsoverhttps/DnsOverHttpsTest.java, +import java.io.EOFException;, +      assertThat(ioe.getCause()).isInstanceOf(EOFException.class);, +++ b/okhttp/src/main/java/okhttp3/Cache.kt, +import okio.buffer, +import okio.ByteString.Companion.decodeBase64, +import okio.ByteString.Companion.encodeUtf8, +              val metadata = snapshot.getSource(ENTRY_METADATA).buffer(), +        val source = rawSource.buffer(), +      val sink = editor.newSink(ENTRY_METADATA).buffer(), +          bytes.write(line.decodeBase64()!!), +      bodySource = object : ForwardingSource(source) {, +      }.buffer(), +    fun key(url: HttpUrl): String = url.toString().encodeUtf8().md5().hex(), +++ b/okhttp/src/main/java/okhttp3/CertificatePinner.kt, +import okio.ByteString.Companion.decodeBase64, +          this.hash = pin.substring("sha1/".length).decodeBase64()!!, +          this.hash = pin.substring("sha256/".length).decodeBase64()!!, +++ b/okhttp/src/main/java/okhttp3/Credentials.kt, +import okio.ByteString.Companion.encode, +    val encoded = usernameAndPassword.encode(charset).base64(), +++ b/build.gradle, +      'okio': '2.2.2',, +++ b/okhttp-dnsoverhttps/src/main/java/okhttp3/dnsoverhttps/DnsRecordCodec.kt, +import okio.utf8Size, +      val utf8ByteCount = label.utf8Size(), +    nameBuf.copyTo(this, 0, nameBuf.size), +++ b/okhttp-dnsoverhttps/src/test/java/okhttp3/dnsoverhttps/DnsOverHttpsTest.java, +import java.io.EOFException;, +      assertThat(ioe.getCause()).isInstanceOf(EOFException.class);, +++ b/okhttp/src/main/java/okhttp3/Cache.kt, +import okio.buffer, +import okio.ByteString.Companion.decodeBase64]