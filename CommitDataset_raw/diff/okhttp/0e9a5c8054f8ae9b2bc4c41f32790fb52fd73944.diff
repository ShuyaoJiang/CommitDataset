[+++ b/build.gradle, +import net.ltgt.gradle.errorprone.CheckSeverity, +, +  tasks.withType(JavaCompile).configureEach {, +    options.errorprone {, +      check("MissingOverride", CheckSeverity.ERROR), +    }, +  }, +++ b/build.gradle, +import net.ltgt.gradle.errorprone.CheckSeverity, +, +  tasks.withType(JavaCompile).configureEach {, +    options.errorprone {, +      check("MissingOverride", CheckSeverity.ERROR), +    }, +  }, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/LoggingEventListenerTest.java, +    @Override LogRecorder assertLogMatch(String pattern) {, +++ b/build.gradle, +import net.ltgt.gradle.errorprone.CheckSeverity, +, +  tasks.withType(JavaCompile).configureEach {, +    options.errorprone {, +      check("MissingOverride", CheckSeverity.ERROR), +    }, +  }, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/LoggingEventListenerTest.java, +    @Override LogRecorder assertLogMatch(String pattern) {, +++ b/okhttp/src/test/java/okhttp3/DelegatingSSLSocket.java, +  @SuppressWarnings("MissingOverride") // Can only override with JDK 9+, +  @SuppressWarnings("MissingOverride") // Can only override with JDK 9+, +  @SuppressWarnings("MissingOverride") // Can only override with JDK 9+, +  @SuppressWarnings("MissingOverride") // Can only override with JDK 9+, +  @SuppressWarnings({, +      "MissingOverride", // Can only override with JDK 9+, +      "unchecked" // Using reflection to delegate., +  }), +  @SuppressWarnings({, +      "MissingOverride", // Can only override with JDK 9+, +      "unchecked" // Using reflection to delegate., +  }), +++ b/build.gradle, +import net.ltgt.gradle.errorprone.CheckSeverity, +, +  tasks.withType(JavaCompile).configureEach {, +    options.errorprone {, +      check("MissingOverride", CheckSeverity.ERROR), +    }, +  }, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/LoggingEventListenerTest.java, +    @Override LogRecorder assertLogMatch(String pattern) {, +++ b/okhttp/src/test/java/okhttp3/DelegatingSSLSocket.java, +  @SuppressWarnings("MissingOverride") // Can only override with JDK 9+, +  @SuppressWarnings("MissingOverride") // Can only override with JDK 9+, +  @SuppressWarnings("MissingOverride") // Can only override with JDK 9+, +  @SuppressWarnings("MissingOverride") // Can only override with JDK 9+, +  @SuppressWarnings({, +      "MissingOverride", // Can only override with JDK 9+, +      "unchecked" // Using reflection to delegate., +  }), +  @SuppressWarnings({, +      "MissingOverride", // Can only override with JDK 9+, +      "unchecked" // Using reflection to delegate., +  }), +++ b/okhttp/src/test/java/okhttp3/URLConnectionTest.java, +      @Override public Socket createSocket() {, +      @Override public Socket createSocket(InetAddress host, int port) {, +      @Override public Socket createSocket(InetAddress address, int port, InetAddress localAddress,, +      @Override public Socket createSocket(String host, int port) {, +      @Override public Socket createSocket(String host, int port, InetAddress localHost, int localPort) {, +    @Override public X509Certificate[] getAcceptedIssuers() {, +    @Override public void checkClientTrusted(X509Certificate[] chain, String authType) {, +    @Override public void checkServerTrusted(X509Certificate[] chain, String authType) {, +++ b/build.gradle, +import net.ltgt.gradle.errorprone.CheckSeverity, +, +  tasks.withType(JavaCompile).configureEach {, +    options.errorprone {, +      check("MissingOverride", CheckSeverity.ERROR), +    }, +  }, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/LoggingEventListenerTest.java, +    @Override LogRecorder assertLogMatch(String pattern) {, +++ b/okhttp/src/test/java/okhttp3/DelegatingSSLSocket.java, +  @SuppressWarnings("MissingOverride") // Can only override with JDK 9+, +  @SuppressWarnings("MissingOverride") // Can only override with JDK 9+, +  @SuppressWarnings("MissingOverride") // Can only override with JDK 9+, +  @SuppressWarnings("MissingOverride") // Can only override with JDK 9+, +  @SuppressWarnings({, +      "MissingOverride", // Can only override with JDK 9+, +      "unchecked" // Using reflection to delegate., +  }), +  @SuppressWarnings({, +      "MissingOverride", // Can only override with JDK 9+, +      "unchecked" // Using reflection to delegate., +  }), +++ b/okhttp/src/test/java/okhttp3/URLConnectionTest.java, +      @Override public Socket createSocket() {, +      @Override public Socket createSocket(InetAddress host, int port) {, +      @Override public Socket createSocket(InetAddress address, int port, InetAddress localAddress,]