[+++ b/README.md, + [2]: http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.squareup.okhttp&a=okhttp&v=LATEST, +++ b/README.md, + [2]: http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.squareup.okhttp&a=okhttp&v=LATEST, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          bodyOut.toByteArray(), 0, socket);, +++ b/README.md, + [2]: http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.squareup.okhttp&a=okhttp&v=LATEST, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          bodyOut.toByteArray(), 0, socket);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/README.md, + [2]: http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.squareup.okhttp&a=okhttp&v=LATEST, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          bodyOut.toByteArray(), 0, socket);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java, +    idleStartTimeNs = value ? System.nanoTime() : 0L;, +    return idleStartTimeNs != 0L;, +  /** Returns the time in ns when this connection became idle or 0L if connection is not idle. */, +++ b/README.md, + [2]: http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.squareup.okhttp&a=okhttp&v=LATEST, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          bodyOut.toByteArray(), 0, socket);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java, +    idleStartTimeNs = value ? System.nanoTime() : 0L;, +    return idleStartTimeNs != 0L;, +  /** Returns the time in ns when this connection became idle or 0L if connection is not idle. */, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +    return isIdle() && System.nanoTime() - getIdleStartTimeNs() > keepAliveDurationNs;, +++ b/README.md, + [2]: http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.squareup.okhttp&a=okhttp&v=LATEST, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          bodyOut.toByteArray(), 0, socket);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java, +    idleStartTimeNs = value ? System.nanoTime() : 0L;, +    return idleStartTimeNs != 0L;, +  /** Returns the time in ns when this connection became idle or 0L if connection is not idle. */, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +    return isIdle() && System.nanoTime() - getIdleStartTimeNs() > keepAliveDurationNs;, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +  public void cancel(Object tag) {, +++ b/README.md, + [2]: http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.squareup.okhttp&a=okhttp&v=LATEST, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          bodyOut.toByteArray(), 0, socket);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java, +    idleStartTimeNs = value ? System.nanoTime() : 0L;, +    return idleStartTimeNs != 0L;, +  /** Returns the time in ns when this connection became idle or 0L if connection is not idle. */, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +    return isIdle() && System.nanoTime() - getIdleStartTimeNs() > keepAliveDurationNs;, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +  public void cancel(Object tag) {, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpAuthenticator.java, +        if (!"Basic".equalsIgnoreCase(challenge.getScheme())) {, +        if (!"Basic".equalsIgnoreCase(challenge.getScheme())) {, +        if (!value.regionMatches(true, pos, "realm=\"", 0, "realm=\"".length())) {, +++ b/README.md, + [2]: http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.squareup.okhttp&a=okhttp&v=LATEST, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          bodyOut.toByteArray(), 0, socket);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java, +    idleStartTimeNs = value ? System.nanoTime() : 0L;, +    return idleStartTimeNs != 0L;, +  /** Returns the time in ns when this connection became idle or 0L if connection is not idle. */, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +    return isIdle() && System.nanoTime() - getIdleStartTimeNs() > keepAliveDurationNs;, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +  public void cancel(Object tag) {, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpAuthenticator.java, +        if (!"Basic".equalsIgnoreCase(challenge.getScheme())) {, +        if (!"Basic".equalsIgnoreCase(challenge.getScheme())) {, +        if (!value.regionMatches(true, pos, "realm=\"", 0, "realm=\"".length())) {, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpDate.java, +          rfc1123.setTimeZone(TimeZone.getTimeZone("UTC"));, +++ b/README.md, + [2]: http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.squareup.okhttp&a=okhttp&v=LATEST, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          bodyOut.toByteArray(), 0, socket);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java, +    idleStartTimeNs = value ? System.nanoTime() : 0L;, +    return idleStartTimeNs != 0L;, +  /** Returns the time in ns when this connection became idle or 0L if connection is not idle. */, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +    return isIdle() && System.nanoTime() - getIdleStartTimeNs() > keepAliveDurationNs;, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +  public void cancel(Object tag) {, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpAuthenticator.java, +        if (!"Basic".equalsIgnoreCase(challenge.getScheme())) {, +        if (!"Basic".equalsIgnoreCase(challenge.getScheme())) {, +        if (!value.regionMatches(true, pos, "realm=\"", 0, "realm=\"".length())) {, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpDate.java, +          rfc1123.setTimeZone(TimeZone.getTimeZone("UTC"));, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java]