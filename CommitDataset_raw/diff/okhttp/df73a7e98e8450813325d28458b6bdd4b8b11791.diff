[+++ b/okhttp-tests/src/test/java/okhttp3/CertificatePinnerTest.java, +++ b/okhttp-tests/src/test/java/okhttp3/CertificatePinnerTest.java, +++ b/okhttp-tests/src/test/java/okhttp3/SocksProxy.java, +            ? InetAddress.getByName("localhost"), +++ b/okhttp-tests/src/test/java/okhttp3/CertificatePinnerTest.java, +++ b/okhttp-tests/src/test/java/okhttp3/SocksProxy.java, +            ? InetAddress.getByName("localhost"), +++ /dev/null, +++ b/okhttp-tests/src/test/java/okhttp3/CertificatePinnerTest.java, +++ b/okhttp-tests/src/test/java/okhttp3/SocksProxy.java, +            ? InetAddress.getByName("localhost"), +++ /dev/null, +++ /dev/null, +++ b/okhttp-tests/src/test/java/okhttp3/CertificatePinnerTest.java, +++ b/okhttp-tests/src/test/java/okhttp3/SocksProxy.java, +            ? InetAddress.getByName("localhost"), +++ /dev/null, +++ /dev/null, +++ b/okhttp/src/main/java/okhttp3/Authenticator.java, + * <p>Whn authentication is requested by a proxy server, the response code is 407 and the, +++ b/okhttp-tests/src/test/java/okhttp3/CertificatePinnerTest.java, +++ b/okhttp-tests/src/test/java/okhttp3/SocksProxy.java, +            ? InetAddress.getByName("localhost"), +++ /dev/null, +++ /dev/null, +++ b/okhttp/src/main/java/okhttp3/Authenticator.java, + * <p>Whn authentication is requested by a proxy server, the response code is 407 and the, +++ b/okhttp/src/main/java/okhttp3/CertificatePinner.java, +      if (pattern.equals(hostname)) return true;, +      int firstDot = hostname.indexOf('.');, +      return pattern.startsWith("*."), +          && hostname.regionMatches(false, firstDot + 1, pattern, 2, pattern.length() - 2);, +++ b/okhttp-tests/src/test/java/okhttp3/CertificatePinnerTest.java, +++ b/okhttp-tests/src/test/java/okhttp3/SocksProxy.java, +            ? InetAddress.getByName("localhost"), +++ /dev/null, +++ /dev/null, +++ b/okhttp/src/main/java/okhttp3/Authenticator.java, + * <p>Whn authentication is requested by a proxy server, the response code is 407 and the, +++ b/okhttp/src/main/java/okhttp3/CertificatePinner.java, +      if (pattern.equals(hostname)) return true;, +      int firstDot = hostname.indexOf('.');, +      return pattern.startsWith("*."), +          && hostname.regionMatches(false, firstDot + 1, pattern, 2, pattern.length() - 2);, +++ /dev/null]