[+++ b/okhttp-hpacktests/src/test/java/okhttp3/internal/http2/HpackDecodeInteropTest.java, +import org.junit.Assume;, +    Assume.assumeFalse("Test stories missing, checkout git submodule", getStory() == Story.MISSING);, +, +++ b/okhttp-hpacktests/src/test/java/okhttp3/internal/http2/HpackDecodeInteropTest.java, +import org.junit.Assume;, +    Assume.assumeFalse("Test stories missing, checkout git submodule", getStory() == Story.MISSING);, +, +++ b/okhttp-hpacktests/src/test/java/okhttp3/internal/http2/HpackDecodeTestBase.java, +import java.util.Collections;, +import static okhttp3.internal.http2.hpackjson.Story.MISSING;, +    if (interopTests.length == 0) {, +      return Collections.singletonList(new Story[] {MISSING});, +    }, +, +    for (Case testCase : story.getCases()) {, +      bytesIn.write(testCase.getWire());, +      assertSetEquals(String.format("seqno=%d", testCase.getSeqno()), testCase.getHeaders(),, +++ b/okhttp-hpacktests/src/test/java/okhttp3/internal/http2/HpackDecodeInteropTest.java, +import org.junit.Assume;, +    Assume.assumeFalse("Test stories missing, checkout git submodule", getStory() == Story.MISSING);, +, +++ b/okhttp-hpacktests/src/test/java/okhttp3/internal/http2/HpackDecodeTestBase.java, +import java.util.Collections;, +import static okhttp3.internal.http2.hpackjson.Story.MISSING;, +    if (interopTests.length == 0) {, +      return Collections.singletonList(new Story[] {MISSING});, +    }, +, +    for (Case testCase : story.getCases()) {, +      bytesIn.write(testCase.getWire());, +      assertSetEquals(String.format("seqno=%d", testCase.getSeqno()), testCase.getHeaders(),, +++ b/okhttp-hpacktests/src/test/java/okhttp3/internal/http2/HpackRoundTripTest.java, +import org.junit.Assume;, +    Assume.assumeFalse("Test stories missing, checkout git submodule", getStory() == Story.MISSING);, +, +++ b/okhttp-hpacktests/src/test/java/okhttp3/internal/http2/HpackDecodeInteropTest.java, +import org.junit.Assume;, +    Assume.assumeFalse("Test stories missing, checkout git submodule", getStory() == Story.MISSING);, +, +++ b/okhttp-hpacktests/src/test/java/okhttp3/internal/http2/HpackDecodeTestBase.java, +import java.util.Collections;, +import static okhttp3.internal.http2.hpackjson.Story.MISSING;, +    if (interopTests.length == 0) {, +      return Collections.singletonList(new Story[] {MISSING});, +    }, +, +    for (Case testCase : story.getCases()) {, +      bytesIn.write(testCase.getWire());, +      assertSetEquals(String.format("seqno=%d", testCase.getSeqno()), testCase.getHeaders(),, +++ b/okhttp-hpacktests/src/test/java/okhttp3/internal/http2/HpackRoundTripTest.java, +import org.junit.Assume;, +    Assume.assumeFalse("Test stories missing, checkout git submodule", getStory() == Story.MISSING);, +, +++ b/okhttp-hpacktests/src/test/java/okhttp3/internal/http2/hpackjson/HpackJsonUtil.java, +import java.net.URL;, +import java.util.Collections;, +import static okhttp3.internal.http2.hpackjson.Story.MISSING;, +    URL resource = HpackJsonUtil.class.getResource("/hpack-test-case");, +    if (resource == null) {, +      return new String[0];, +    }, +    File testCaseDirectory = new File(resource.toURI());, +, +    if (result.isEmpty()) {, +      // missing files, +      return Collections.singletonList(MISSING);, +    }, +, +++ b/okhttp-hpacktests/src/test/java/okhttp3/internal/http2/HpackDecodeInteropTest.java, +import org.junit.Assume;, +    Assume.assumeFalse("Test stories missing, checkout git submodule", getStory() == Story.MISSING);, +, +++ b/okhttp-hpacktests/src/test/java/okhttp3/internal/http2/HpackDecodeTestBase.java, +import java.util.Collections;, +import static okhttp3.internal.http2.hpackjson.Story.MISSING;, +    if (interopTests.length == 0) {, +      return Collections.singletonList(new Story[] {MISSING});, +    }, +, +    for (Case testCase : story.getCases()) {, +      bytesIn.write(testCase.getWire());, +      assertSetEquals(String.format("seqno=%d", testCase.getSeqno()), testCase.getHeaders(),, +++ b/okhttp-hpacktests/src/test/java/okhttp3/internal/http2/HpackRoundTripTest.java, +import org.junit.Assume;, +    Assume.assumeFalse("Test stories missing, checkout git submodule", getStory() == Story.MISSING);, +, +++ b/okhttp-hpacktests/src/test/java/okhttp3/internal/http2/hpackjson/HpackJsonUtil.java, +import java.net.URL;, +import java.util.Collections;, +import static okhttp3.internal.http2.hpackjson.Story.MISSING;, +    URL resource = HpackJsonUtil.class.getResource("/hpack-test-case");, +    if (resource == null) {, +      return new String[0];, +    }, +    File testCaseDirectory = new File(resource.toURI());, +, +    if (result.isEmpty()) {, +      // missing files, +      return Collections.singletonList(MISSING);]