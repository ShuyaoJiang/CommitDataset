[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    Route httpRoute = new Route(httpAddress, Proxy.NO_PROXY, httpSocketAddress, true);, +    Route spdyRoute = new Route(spdyAddress, Proxy.NO_PROXY, spdySocketAddress, true);, +        pool, new Route(httpAddress, Proxy.NO_PROXY, httpSocketAddress, true));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    Route httpRoute = new Route(httpAddress, Proxy.NO_PROXY, httpSocketAddress, true);, +    Route spdyRoute = new Route(spdyAddress, Proxy.NO_PROXY, spdySocketAddress, true);, +        pool, new Route(httpAddress, Proxy.NO_PROXY, httpSocketAddress, true));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        true);, +        false);, +        true);, +        false);, +        true);, +        false);, +        true);, +        false);, +        true);, +        false);, +        true);, +        false);, +      InetAddress socketAddress, int socketPort, boolean modernTls) {, +    assertEquals(modernTls, connection.getRoute().isModernTls());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    Route httpRoute = new Route(httpAddress, Proxy.NO_PROXY, httpSocketAddress, true);, +    Route spdyRoute = new Route(spdyAddress, Proxy.NO_PROXY, spdySocketAddress, true);, +        pool, new Route(httpAddress, Proxy.NO_PROXY, httpSocketAddress, true));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        true);, +        false);, +        true);, +        false);, +        true);, +        false);, +        true);, +        false);, +        true);, +        false);, +        true);, +        false);, +      InetAddress socketAddress, int socketPort, boolean modernTls) {, +    assertEquals(modernTls, connection.getRoute().isModernTls());, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +    if (route.modernTls) {, +      platform.enableTlsExtensions(sslSocket, route.address.uriHost);, +    } else {, +      platform.supportTlsIntolerantServer(sslSocket);, +    }, +    if (route.modernTls && route.address.protocols.size() > 1) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    Route httpRoute = new Route(httpAddress, Proxy.NO_PROXY, httpSocketAddress, true);, +    Route spdyRoute = new Route(spdyAddress, Proxy.NO_PROXY, spdySocketAddress, true);, +        pool, new Route(httpAddress, Proxy.NO_PROXY, httpSocketAddress, true));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);, +        false);]