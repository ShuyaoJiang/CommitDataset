[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import com.squareup.okhttp.internal.framed.Settings;, +  private Settings settings;, +   * When {@linkplain MockWebServer#setProtocols(java.util.List) protocols}, +   * include {@linkplain com.squareup.okhttp.Protocol#HTTP_2 HTTP/2}, this, +   * pushes {@code settings} before writing the response., +   */, +  public MockResponse withSettings(Settings settings) {, +    this.settings = settings;, +    return this;, +  }, +, +  public Settings getSettings() {, +    return settings;, +  }, +, +  /**, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import com.squareup.okhttp.internal.framed.Settings;, +  private Settings settings;, +   * When {@linkplain MockWebServer#setProtocols(java.util.List) protocols}, +   * include {@linkplain com.squareup.okhttp.Protocol#HTTP_2 HTTP/2}, this, +   * pushes {@code settings} before writing the response., +   */, +  public MockResponse withSettings(Settings settings) {, +    this.settings = settings;, +    return this;, +  }, +, +  public Settings getSettings() {, +    return settings;, +  }, +, +  /**, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.internal.framed.Settings;, +      Settings settings = response.getSettings();, +      if (settings != null) {, +        stream.getConnection().setSettings(settings);, +      }, +, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import com.squareup.okhttp.internal.framed.Settings;, +  private Settings settings;, +   * When {@linkplain MockWebServer#setProtocols(java.util.List) protocols}, +   * include {@linkplain com.squareup.okhttp.Protocol#HTTP_2 HTTP/2}, this, +   * pushes {@code settings} before writing the response., +   */, +  public MockResponse withSettings(Settings settings) {, +    this.settings = settings;, +    return this;, +  }, +, +  public Settings getSettings() {, +    return settings;, +  }, +, +  /**, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.internal.framed.Settings;, +      Settings settings = response.getSettings();, +      if (settings != null) {, +        stream.getConnection().setSettings(settings);, +      }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/framed/HttpOverHttp2Test.java, +/*, + * Copyright (C) 2013 Square, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package com.squareup.okhttp.internal.framed;, +, +import com.squareup.okhttp.Headers;, +import com.squareup.okhttp.Protocol;, +import com.squareup.okhttp.mockwebserver.MockResponse;, +import com.squareup.okhttp.mockwebserver.PushPromise;, +import com.squareup.okhttp.mockwebserver.RecordedRequest;, +import java.net.HttpURLConnection;, +import org.junit.Test;, +, +import static org.junit.Assert.assertEquals;, +, +public class HttpOverHttp2Test extends HttpOverSpdyTest {, +, +  public HttpOverHttp2Test() {, +    super(Protocol.HTTP_2);, +    this.hostHeader = ":authority";, +  }, +]