[+++ b/okhttp-android-support/src/main/java/okhttp3/AndroidShimResponseCache.java, +    return (installedCache.directory().equals(directory), +        && installedCache.maxSize() == maxSize, +    return delegate.size();, +    return delegate.maxSize();, +    return delegate.networkCount();, +    return delegate.hitCount();, +    return delegate.requestCount();, +++ b/okhttp-android-support/src/main/java/okhttp3/AndroidShimResponseCache.java, +    return (installedCache.directory().equals(directory), +        && installedCache.maxSize() == maxSize, +    return delegate.size();, +    return delegate.maxSize();, +    return delegate.networkCount();, +    return delegate.hitCount();, +    return delegate.requestCount();, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    assertEquals(1, cache.writeSuccessCount());, +    assertEquals(0, cache.writeAbortCount());, +    assertEquals(1, cache.writeSuccessCount());, +    assertEquals(0, cache.writeAbortCount());, +    assertEquals(2, cache.requestCount());, +    assertEquals(1, cache.hitCount());, +    assertEquals(2, cache.requestCount());, +    assertEquals(1, cache.networkCount());, +    assertEquals(1, cache.hitCount());, +    assertEquals(4, cache.requestCount()); // 2 requests + 2 redirects, +    assertEquals(2, cache.networkCount());, +    assertEquals(2, cache.hitCount());, +    assertEquals(4, cache.requestCount()); // 2 direct + 2 redirect = 4, +    assertEquals(2, cache.hitCount());, +    assertEquals(4, cache.requestCount()); // 2 direct + 2 redirect = 4, +    assertEquals(2, cache.hitCount());, +    assertEquals(1, cache.writeAbortCount());, +    assertEquals(0, cache.writeSuccessCount());, +    assertEquals(1, cache.writeAbortCount());, +    assertEquals(1, cache.writeSuccessCount());, +    assertEquals(1, cache.writeAbortCount());, +    assertEquals(0, cache.writeSuccessCount());, +    assertEquals(1, cache.writeAbortCount());, +    assertEquals(1, cache.writeSuccessCount());, +    assertEquals(1, client.connectionPool().idleConnectionCount());, +    assertEquals(1, cache.requestCount());, +    assertEquals(0, cache.networkCount());, +    assertEquals(0, cache.hitCount());, +    assertEquals(2, cache.requestCount());, +    assertEquals(1, cache.networkCount());, +    assertEquals(1, cache.hitCount());, +    assertEquals(2, cache.requestCount());, +    assertEquals(1, cache.networkCount());, +    assertEquals(0, cache.hitCount());, +    assertEquals(2, cache.requestCount());, +    assertEquals(1, cache.networkCount());, +    assertEquals(0, cache.hitCount());, +    assertEquals(1, cache.requestCount());, +    assertEquals(1, cache.networkCount());, +    assertEquals(0, cache.hitCount());, +    assertEquals(3, cache.requestCount());, +    assertEquals(3, cache.networkCount());, +    assertEquals(0, cache.hitCount());, +    assertEquals(1, cache.requestCount());, +    assertEquals(1, cache.networkCount());, +    assertEquals(0, cache.hitCount());, +    assertEquals(3, cache.requestCount());, +    assertEquals(3, cache.networkCount());, +    assertEquals(2, cache.hitCount());, +    assertEquals(1, cache.requestCount());, +    assertEquals(1, cache.networkCount());, +    assertEquals(0, cache.hitCount());, +    assertEquals(3, cache.requestCount());, +    assertEquals(1, cache.networkCount());, +    assertEquals(2, cache.hitCount());, +    writeFile(cache.directory(), urlKey + ".0", entryMetadata);, +    writeFile(cache.directory(), urlKey + ".1", entryBody);, +    writeFile(cache.directory(), "journal", journalBody);, +    cache = new Cache(cache.directory(), Integer.MAX_VALUE, fileSystem);, +    writeFile(cache.directory(), urlKey + ".0", entryMetadata);, +    writeFile(cache.directory(), urlKey + ".1", entryBody);, +    writeFile(cache.directory(), "journal", journalBody);, +    cache = new Cache(cache.directory(), Integer.MAX_VALUE, fileSystem);, +    writeFile(cache.directory(), urlKey + ".0", entryMetadata);, +    writeFile(cache.directory(), urlKey + ".1", entryBody);, +    writeFile(cache.directory(), "journal", journalBody);, +    cache = new Cache(cache.directory(), Integer.MAX_VALUE, fileSystem);, +    writeFile(cache.directory(), urlKey + ".0", entryMetadata);, +    writeFile(cache.directory(), urlKey + ".1", entryBody);, +    writeFile(cache.directory(), "journal", journalBody);, +    cache = new Cache(cache.directory(), Integer.MAX_VALUE, fileSystem);, +    assertEquals(0, client.cache().size());, +++ b/okhttp-android-support/src/main/java/okhttp3/AndroidShimResponseCache.java, +    return (installedCache.directory().equals(directory), +        && installedCache.maxSize() == maxSize, +    return delegate.size();, +    return delegate.maxSize();, +    return delegate.networkCount();, +    return delegate.hitCount();, +    return delegate.requestCount();, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    assertEquals(1, cache.writeSuccessCount());, +    assertEquals(0, cache.writeAbortCount());]