[+++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java, +import com.squareup.okhttp.MediaType;, +import com.squareup.okhttp.RequestBody;, +import static com.squareup.okhttp.ws.WebSocket.BINARY;, +import static com.squareup.okhttp.ws.WebSocket.TEXT;, +  @Test public void nullMessageThrows() throws IOException {, +    try {, +      client.sendMessage(null);, +      fail();, +    } catch (NullPointerException e) {, +      assertEquals("message == null", e.getMessage());, +    }, +  }, +, +    client.sendMessage(RequestBody.create(TEXT, "Hello!"));, +    client.sendMessage(RequestBody.create(BINARY, "Hello!"));, +  @Test public void missingContentTypeThrows() throws IOException {, +    try {, +      client.sendMessage(RequestBody.create(null, "Hey!"));, +      fail();, +    } catch (IllegalArgumentException e) {, +      assertEquals("Message content type was null. Must use WebSocket.TEXT or WebSocket.BINARY.",, +          e.getMessage());, +    }, +  }, +, +  @Test public void unknownContentTypeThrows() throws IOException {, +    try {, +      client.sendMessage(RequestBody.create(MediaType.parse("text/plain"), "Hey!"));, +      fail();, +    } catch (IllegalArgumentException e) {, +      assertEquals(, +          "Unknown message content type: text/plain. Must use WebSocket.TEXT or WebSocket.BINARY.",, +          e.getMessage());, +    }, +  }, +, +    RequestBody message = new RequestBody() {, +      @Override public MediaType contentType() {, +        return TEXT;, +      }, +, +      @Override public void writeTo(BufferedSink sink) throws IOException {, +      }, +    };, +    client.sendMessage(message);, +    RequestBody message = new RequestBody() {, +      @Override public MediaType contentType() {, +        return TEXT;, +      }, +, +      @Override public void writeTo(BufferedSink sink) throws IOException {, +      }, +    };, +, +    client.sendMessage(message);, +      client.sendMessage(RequestBody.create(TEXT, "Hello!"));, +      client.sendMessage(RequestBody.create(TEXT, "Hi!"));, +    RequestBody message = new RequestBody() {, +      @Override public MediaType contentType() {, +        return TEXT;, +      }, +, +      @Override public void writeTo(BufferedSink sink) throws IOException {, +    };, +    client.sendMessage(message);, +  }, +    server.sendMessage(RequestBody.create(TEXT, "Hello!"));, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java, +import com.squareup.okhttp.MediaType;, +import com.squareup.okhttp.RequestBody;, +import static com.squareup.okhttp.ws.WebSocket.BINARY;, +import static com.squareup.okhttp.ws.WebSocket.TEXT;, +  @Test public void nullMessageThrows() throws IOException {, +    try {, +      client.sendMessage(null);, +      fail();, +    } catch (NullPointerException e) {, +      assertEquals("message == null", e.getMessage());, +    }, +  }, +, +    client.sendMessage(RequestBody.create(TEXT, "Hello!"));, +    client.sendMessage(RequestBody.create(BINARY, "Hello!"));, +  @Test public void missingContentTypeThrows() throws IOException {, +    try {, +      client.sendMessage(RequestBody.create(null, "Hey!"));, +      fail();, +    } catch (IllegalArgumentException e) {, +      assertEquals("Message content type was null. Must use WebSocket.TEXT or WebSocket.BINARY.",, +          e.getMessage());, +    }, +  }, +, +  @Test public void unknownContentTypeThrows() throws IOException {, +    try {, +      client.sendMessage(RequestBody.create(MediaType.parse("text/plain"), "Hey!"));, +      fail();, +    } catch (IllegalArgumentException e) {, +      assertEquals(]