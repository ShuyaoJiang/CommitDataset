[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/AsyncApiTest.java, +  @Test public void conditionalCacheHit() throws Exception {, +    server.enqueue(new MockResponse(), +        .clearHeaders(), +        .setResponseCode(HttpURLConnection.HTTP_NOT_MODIFIED));, +  @Test public void conditionalCacheMiss() throws Exception {, +    server.enqueue(new MockResponse().setBody("A").addHeader("ETag: v1"));, +    server.enqueue(new MockResponse().setBody("B"));, +    server.play();, +, +    client.setOkResponseCache(cache);, +, +    Request request1 = new Request.Builder(), +        .url(server.getUrl("/")), +        .build();, +    client.enqueue(request1, receiver);, +    receiver.await(request1.url()).assertCode(200).assertBody("A");, +    assertNull(server.takeRequest().getHeader("If-None-Match"));, +, +    Request request2 = new Request.Builder(), +        .url(server.getUrl("/")), +        .build();, +    client.enqueue(request2, receiver);, +    receiver.await(request2.url()).assertCode(200).assertBody("B");, +    assertEquals("v1", server.takeRequest().getHeader("If-None-Match"));, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/AsyncApiTest.java, +  @Test public void conditionalCacheHit() throws Exception {, +    server.enqueue(new MockResponse(), +        .clearHeaders(), +        .setResponseCode(HttpURLConnection.HTTP_NOT_MODIFIED));, +  @Test public void conditionalCacheMiss() throws Exception {, +    server.enqueue(new MockResponse().setBody("A").addHeader("ETag: v1"));, +    server.enqueue(new MockResponse().setBody("B"));, +    server.play();, +, +    client.setOkResponseCache(cache);, +, +    Request request1 = new Request.Builder(), +        .url(server.getUrl("/")), +        .build();, +    client.enqueue(request1, receiver);, +    receiver.await(request1.url()).assertCode(200).assertBody("A");, +    assertNull(server.takeRequest().getHeader("If-None-Match"));, +, +    Request request2 = new Request.Builder(), +        .url(server.getUrl("/")), +        .build();, +    client.enqueue(request2, receiver);, +    receiver.await(request2.url()).assertCode(200).assertBody("B");, +    assertEquals("v1", server.takeRequest().getHeader("If-None-Match"));, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordingReceiver.java, +import java.util.Iterator;, +      for (Iterator<RecordedResponse> i = responses.iterator(); i.hasNext(); ) {, +        RecordedResponse recordedResponse = i.next();, +          i.remove();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/AsyncApiTest.java, +  @Test public void conditionalCacheHit() throws Exception {, +    server.enqueue(new MockResponse(), +        .clearHeaders(), +        .setResponseCode(HttpURLConnection.HTTP_NOT_MODIFIED));, +  @Test public void conditionalCacheMiss() throws Exception {, +    server.enqueue(new MockResponse().setBody("A").addHeader("ETag: v1"));, +    server.enqueue(new MockResponse().setBody("B"));, +    server.play();, +, +    client.setOkResponseCache(cache);, +, +    Request request1 = new Request.Builder(), +        .url(server.getUrl("/")), +        .build();, +    client.enqueue(request1, receiver);, +    receiver.await(request1.url()).assertCode(200).assertBody("A");, +    assertNull(server.takeRequest().getHeader("If-None-Match"));, +, +    Request request2 = new Request.Builder(), +        .url(server.getUrl("/")), +        .build();, +    client.enqueue(request2, receiver);, +    receiver.await(request2.url()).assertCode(200).assertBody("B");, +    assertEquals("v1", server.takeRequest().getHeader("If-None-Match"));, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordingReceiver.java, +import java.util.Iterator;, +      for (Iterator<RecordedResponse> i = responses.iterator(); i.hasNext(); ) {, +        RecordedResponse recordedResponse = i.next();, +          i.remove();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/SyncApiTest.java, +  @Test public void conditionalCacheHit() throws Exception {, +    server.enqueue(new MockResponse(), +        .clearHeaders(), +        .setResponseCode(HttpURLConnection.HTTP_NOT_MODIFIED));, +  @Test public void conditionalCacheMiss() throws Exception {, +    server.enqueue(new MockResponse().setBody("A").addHeader("ETag: v1"));, +    server.enqueue(new MockResponse().setBody("B"));, +    server.play();]