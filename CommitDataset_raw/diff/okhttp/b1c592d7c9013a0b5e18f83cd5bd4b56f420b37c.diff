[+++ b/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java, +    /** From the spdy/3 spec, the default initial window size for all streams is 64 KiB. */, +    static final int DEFAULT_INITIAL_WINDOW_SIZE = 64 * 1024;, +, +++ b/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java, +    /** From the spdy/3 spec, the default initial window size for all streams is 64 KiB. */, +    static final int DEFAULT_INITIAL_WINDOW_SIZE = 64 * 1024;, +, +++ b/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java, +    void writeWindowUpdateLater(final int streamId, final int deltaWindowSize) {, +        writeExecutor.execute(new Runnable() {, +            @Override public void run() {, +                try {, +                    writeWindowUpdate(streamId, deltaWindowSize);, +                } catch (IOException ignored) {, +                }, +            }, +        });, +    }, +, +    void writeWindowUpdate(int streamId, int deltaWindowSize) throws IOException {, +        spdyWriter.windowUpdate(streamId, deltaWindowSize);, +    }, +, +++ b/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java, +    /** From the spdy/3 spec, the default initial window size for all streams is 64 KiB. */, +    static final int DEFAULT_INITIAL_WINDOW_SIZE = 64 * 1024;, +, +++ b/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java, +    void writeWindowUpdateLater(final int streamId, final int deltaWindowSize) {, +        writeExecutor.execute(new Runnable() {, +            @Override public void run() {, +                try {, +                    writeWindowUpdate(streamId, deltaWindowSize);, +                } catch (IOException ignored) {, +                }, +            }, +        });, +    }, +, +    void writeWindowUpdate(int streamId, int deltaWindowSize) throws IOException {, +        spdyWriter.windowUpdate(streamId, deltaWindowSize);, +    }, +, +++ b/src/main/java/com/squareup/okhttp/internal/spdy/SpdyReader.java, +        if (length != 8) throw ioException("TYPE_WINDOW_UPDATE length: %d != 8", length);, +++ b/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java, +    /** From the spdy/3 spec, the default initial window size for all streams is 64 KiB. */, +    static final int DEFAULT_INITIAL_WINDOW_SIZE = 64 * 1024;, +, +++ b/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java, +    void writeWindowUpdateLater(final int streamId, final int deltaWindowSize) {, +        writeExecutor.execute(new Runnable() {, +            @Override public void run() {, +                try {, +                    writeWindowUpdate(streamId, deltaWindowSize);, +                } catch (IOException ignored) {, +                }, +            }, +        });, +    }, +, +    void writeWindowUpdate(int streamId, int deltaWindowSize) throws IOException {, +        spdyWriter.windowUpdate(streamId, deltaWindowSize);, +    }, +, +++ b/src/main/java/com/squareup/okhttp/internal/spdy/SpdyReader.java, +        if (length != 8) throw ioException("TYPE_WINDOW_UPDATE length: %d != 8", length);, +++ b/src/main/java/com/squareup/okhttp/internal/spdy/SpdyStream.java, +    /**, +     * The number of unacknowledged bytes at which the input stream will send, +     * the peer a {@code WINDOW_UPDATE} frame. Must be less than this client's, +     * window size, otherwise the remote peer will stop sending data on this, +     * stream., +     */, +    public static final int WINDOW_UPDATE_THRESHOLD = Settings.DEFAULT_INITIAL_WINDOW_SIZE / 2;, +, +        private final byte[] buffer = new byte[Settings.DEFAULT_INITIAL_WINDOW_SIZE];, +        /**, +         * The total number of bytes consumed by the application (with {@link, +         * #read}), but not yet acknowledged by sending a {@code WINDOW_UPDATE}, +         * frame., +         */, +        private int unacknowledgedBytes = 0;, +, +                // Flow control: notify the peer that we're ready for more data!, +                unacknowledgedBytes += copied;, +                if (unacknowledgedBytes >= WINDOW_UPDATE_THRESHOLD) {, +                    connection.writeWindowUpdateLater(id, unacknowledgedBytes);, +                    unacknowledgedBytes = 0;, +                }, +, +            // TODO: Await flow control (WINDOW_UPDATE) if necessary., +, +++ b/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java, +    /** From the spdy/3 spec, the default initial window size for all streams is 64 KiB. */, +    static final int DEFAULT_INITIAL_WINDOW_SIZE = 64 * 1024;, +, +++ b/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java, +    void writeWindowUpdateLater(final int streamId, final int deltaWindowSize) {]