[+++ b/okhttp/src/main/java/okhttp3/ConnectionPool.java, +import java.io.Closeable;, +  Closeable deduplicate(Address address, StreamAllocation streamAllocation) {, +++ b/okhttp/src/main/java/okhttp3/ConnectionPool.java, +import java.io.Closeable;, +  Closeable deduplicate(Address address, StreamAllocation streamAllocation) {, +++ b/okhttp/src/main/java/okhttp3/OkHttpClient.java, +import java.io.Closeable;, +      @Override public Closeable deduplicate(, +++ b/okhttp/src/main/java/okhttp3/ConnectionPool.java, +import java.io.Closeable;, +  Closeable deduplicate(Address address, StreamAllocation streamAllocation) {, +++ b/okhttp/src/main/java/okhttp3/OkHttpClient.java, +import java.io.Closeable;, +      @Override public Closeable deduplicate(, +++ b/okhttp/src/main/java/okhttp3/internal/Internal.java, +import java.io.Closeable;, +  public abstract Closeable deduplicate(, +++ b/okhttp/src/main/java/okhttp3/ConnectionPool.java, +import java.io.Closeable;, +  Closeable deduplicate(Address address, StreamAllocation streamAllocation) {, +++ b/okhttp/src/main/java/okhttp3/OkHttpClient.java, +import java.io.Closeable;, +      @Override public Closeable deduplicate(, +++ b/okhttp/src/main/java/okhttp3/internal/Internal.java, +import java.io.Closeable;, +  public abstract Closeable deduplicate(, +++ b/okhttp/src/main/java/okhttp3/internal/connection/StreamAllocation.java, +import java.io.Closeable;, +    Closeable closeable = null;, +        closeable = Internal.instance.deduplicate(connectionPool, address, this);, +    closeQuietly(closeable);, +    Closeable closeable;, +      closeable = deallocate(noNewStreams, false, true);, +    closeQuietly(closeable);, +    Closeable closeable;, +      closeable = deallocate(false, true, false);, +    closeQuietly(closeable);, +    Closeable closeable;, +      closeable = deallocate(true, false, false);, +    closeQuietly(closeable);, +  private Closeable deallocate(boolean noNewStreams, boolean released, boolean streamFinished) {, +    Closeable closeable = null;, +            closeable = connection.socket();, +    return closeable;, +    Closeable closeable;, +      closeable = deallocate(noNewStreams, false, true);, +    closeQuietly(closeable);, +  public Closeable releaseAndAcquire(RealConnection newConnection) {, +    Closeable closeable = deallocate(true, false, false);, +    return closeable;, +++ b/okhttp/src/main/java/okhttp3/ConnectionPool.java, +import java.io.Closeable;, +  Closeable deduplicate(Address address, StreamAllocation streamAllocation) {, +++ b/okhttp/src/main/java/okhttp3/OkHttpClient.java, +import java.io.Closeable;, +      @Override public Closeable deduplicate(, +++ b/okhttp/src/main/java/okhttp3/internal/Internal.java, +import java.io.Closeable;, +  public abstract Closeable deduplicate(, +++ b/okhttp/src/main/java/okhttp3/internal/connection/StreamAllocation.java, +import java.io.Closeable;, +    Closeable closeable = null;, +        closeable = Internal.instance.deduplicate(connectionPool, address, this);, +    closeQuietly(closeable);, +    Closeable closeable;, +      closeable = deallocate(noNewStreams, false, true);, +    closeQuietly(closeable);, +    Closeable closeable;, +      closeable = deallocate(false, true, false);, +    closeQuietly(closeable);, +    Closeable closeable;, +      closeable = deallocate(true, false, false);, +    closeQuietly(closeable);, +  private Closeable deallocate(boolean noNewStreams, boolean released, boolean streamFinished) {, +    Closeable closeable = null;, +            closeable = connection.socket();, +    return closeable;, +    Closeable closeable;, +      closeable = deallocate(noNewStreams, false, true);, +    closeQuietly(closeable);, +  public Closeable releaseAndAcquire(RealConnection newConnection) {, +    Closeable closeable = deallocate(true, false, false);, +    return closeable;, +++ b/pom.xml, +    <profile>, +      <id>alpn-when-jdk8_121</id>, +      <activation>, +        <jdk>1.8.0_121</jdk>, +      </activation>, +      <properties>, +        <alpn.jdk8.version>8.1.11.v20170118</alpn.jdk8.version>, +      </properties>, +    </profile>]