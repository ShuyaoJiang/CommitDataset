[+++ b/okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java, +, +  @Test public void topPrivateDomain() {, +    assertEquals("google.com", HttpUrl.parse("https://google.com").topPrivateDomain());, +    assertEquals("google.co.uk", HttpUrl.parse("https://adwords.google.co.uk").topPrivateDomain());, +    assertEquals("xn--ewv.xn--4pvxs.jp", HttpUrl.parse("https://栃.栃木.jp").topPrivateDomain());, +    assertEquals("xn--ewv.xn--4pvxs.jp",, +        HttpUrl.parse("https://xn--ewv.xn--4pvxs.jp").topPrivateDomain());, +, +    assertNull(HttpUrl.parse("https://co.uk").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://square").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://栃木.jp").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://xn--4pvxs.jp").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://localhost").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://127.0.0.1").topPrivateDomain());, +  }, +++ b/okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java, +, +  @Test public void topPrivateDomain() {, +    assertEquals("google.com", HttpUrl.parse("https://google.com").topPrivateDomain());, +    assertEquals("google.co.uk", HttpUrl.parse("https://adwords.google.co.uk").topPrivateDomain());, +    assertEquals("xn--ewv.xn--4pvxs.jp", HttpUrl.parse("https://栃.栃木.jp").topPrivateDomain());, +    assertEquals("xn--ewv.xn--4pvxs.jp",, +        HttpUrl.parse("https://xn--ewv.xn--4pvxs.jp").topPrivateDomain());, +, +    assertNull(HttpUrl.parse("https://co.uk").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://square").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://栃木.jp").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://xn--4pvxs.jp").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://localhost").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://127.0.0.1").topPrivateDomain());, +  }, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java, +    server.listener.assertFailure(EOFException.class);, +    client.listener.assertFailure(EOFException.class);, +++ b/okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java, +, +  @Test public void topPrivateDomain() {, +    assertEquals("google.com", HttpUrl.parse("https://google.com").topPrivateDomain());, +    assertEquals("google.co.uk", HttpUrl.parse("https://adwords.google.co.uk").topPrivateDomain());, +    assertEquals("xn--ewv.xn--4pvxs.jp", HttpUrl.parse("https://栃.栃木.jp").topPrivateDomain());, +    assertEquals("xn--ewv.xn--4pvxs.jp",, +        HttpUrl.parse("https://xn--ewv.xn--4pvxs.jp").topPrivateDomain());, +, +    assertNull(HttpUrl.parse("https://co.uk").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://square").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://栃木.jp").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://xn--4pvxs.jp").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://localhost").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://127.0.0.1").topPrivateDomain());, +  }, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java, +    server.listener.assertFailure(EOFException.class);, +    client.listener.assertFailure(EOFException.class);, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java, +import java.io.EOFException;, +    serverListener.assertFailure(EOFException.class);, +    clientListener.assertFailure(SocketTimeoutException.class, "timeout", "Read timed out");, +    clientListener.assertFailure(SocketTimeoutException.class, "timeout", "Read timed out");, +++ b/okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java, +, +  @Test public void topPrivateDomain() {, +    assertEquals("google.com", HttpUrl.parse("https://google.com").topPrivateDomain());, +    assertEquals("google.co.uk", HttpUrl.parse("https://adwords.google.co.uk").topPrivateDomain());, +    assertEquals("xn--ewv.xn--4pvxs.jp", HttpUrl.parse("https://栃.栃木.jp").topPrivateDomain());, +    assertEquals("xn--ewv.xn--4pvxs.jp",, +        HttpUrl.parse("https://xn--ewv.xn--4pvxs.jp").topPrivateDomain());, +, +    assertNull(HttpUrl.parse("https://co.uk").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://square").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://栃木.jp").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://xn--4pvxs.jp").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://localhost").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://127.0.0.1").topPrivateDomain());, +  }, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java, +    server.listener.assertFailure(EOFException.class);, +    client.listener.assertFailure(EOFException.class);, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java, +import java.io.EOFException;, +    serverListener.assertFailure(EOFException.class);, +    clientListener.assertFailure(SocketTimeoutException.class, "timeout", "Read timed out");, +    clientListener.assertFailure(SocketTimeoutException.class, "timeout", "Read timed out");, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketRecorder.java, +import java.util.Arrays;, +  public void assertFailure(Class<? extends IOException> cls, String... messages) {, +    if (messages.length > 0) {, +      assertTrue(failure.t.getMessage(), Arrays.asList(messages).contains(failure.t.getMessage()));, +    }, +++ b/okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java, +, +  @Test public void topPrivateDomain() {, +    assertEquals("google.com", HttpUrl.parse("https://google.com").topPrivateDomain());, +    assertEquals("google.co.uk", HttpUrl.parse("https://adwords.google.co.uk").topPrivateDomain());, +    assertEquals("xn--ewv.xn--4pvxs.jp", HttpUrl.parse("https://栃.栃木.jp").topPrivateDomain());, +    assertEquals("xn--ewv.xn--4pvxs.jp",, +        HttpUrl.parse("https://xn--ewv.xn--4pvxs.jp").topPrivateDomain());, +, +    assertNull(HttpUrl.parse("https://co.uk").topPrivateDomain());, +    assertNull(HttpUrl.parse("https://square").topPrivateDomain());]