[+++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/CacheAdapter.java, +  @Override public void update(Response cached, Response network) {, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/CacheAdapter.java, +  @Override public void update(Response cached, Response network) {, +++ b/okhttp-apache/src/main/java/okhttp3/apache/OkApacheClient.java, +  private static HttpResponse transformResponse(Response response) {, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/CacheAdapter.java, +  @Override public void update(Response cached, Response network) {, +++ b/okhttp-apache/src/main/java/okhttp3/apache/OkApacheClient.java, +  private static HttpResponse transformResponse(Response response) {, +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +  static boolean isPlaintext(Buffer buffer) {, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/CacheAdapter.java, +  @Override public void update(Response cached, Response network) {, +++ b/okhttp-apache/src/main/java/okhttp3/apache/OkApacheClient.java, +  private static HttpResponse transformResponse(Response response) {, +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +  static boolean isPlaintext(Buffer buffer) {, +++ b/okhttp-tests/src/test/java/okhttp3/DelegatingSocketFactory.java, +  @Override public Socket createSocket() throws IOException {, +  @Override public Socket createSocket(String host, int port) throws IOException {, +  @Override public Socket createSocket(String host, int port, InetAddress localAddress,, +      int localPort) throws IOException {, +  @Override public Socket createSocket(InetAddress host, int port) throws IOException {, +  @Override public Socket createSocket(InetAddress host, int port, InetAddress localAddress,, +      int localPort) throws IOException {, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/CacheAdapter.java, +  @Override public void update(Response cached, Response network) {, +++ b/okhttp-apache/src/main/java/okhttp3/apache/OkApacheClient.java, +  private static HttpResponse transformResponse(Response response) {, +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +  static boolean isPlaintext(Buffer buffer) {, +++ b/okhttp-tests/src/test/java/okhttp3/DelegatingSocketFactory.java, +  @Override public Socket createSocket() throws IOException {, +  @Override public Socket createSocket(String host, int port) throws IOException {, +  @Override public Socket createSocket(String host, int port, InetAddress localAddress,, +      int localPort) throws IOException {, +  @Override public Socket createSocket(InetAddress host, int port) throws IOException {, +  @Override public Socket createSocket(InetAddress host, int port, InetAddress localAddress,, +      int localPort) throws IOException {, +++ b/okhttp-tests/src/test/java/okhttp3/FallbackTestClientSocketFactory.java, +      List<String> enabledCipherSuites = new ArrayList<>(suites.length);, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/CacheAdapter.java, +  @Override public void update(Response cached, Response network) {, +++ b/okhttp-apache/src/main/java/okhttp3/apache/OkApacheClient.java, +  private static HttpResponse transformResponse(Response response) {, +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +  static boolean isPlaintext(Buffer buffer) {, +++ b/okhttp-tests/src/test/java/okhttp3/DelegatingSocketFactory.java, +  @Override public Socket createSocket() throws IOException {, +  @Override public Socket createSocket(String host, int port) throws IOException {, +  @Override public Socket createSocket(String host, int port, InetAddress localAddress,, +      int localPort) throws IOException {, +  @Override public Socket createSocket(InetAddress host, int port) throws IOException {, +  @Override public Socket createSocket(InetAddress host, int port, InetAddress localAddress,, +      int localPort) throws IOException {, +++ b/okhttp-tests/src/test/java/okhttp3/FallbackTestClientSocketFactory.java, +      List<String> enabledCipherSuites = new ArrayList<>(suites.length);, +++ b/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java, +    final List<URI> proxySelectionRequests = new ArrayList<>();, +    private final List<String> calls = new ArrayList<>();, +      List<String> result = new ArrayList<>();, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/CacheAdapter.java, +  @Override public void update(Response cached, Response network) {, +++ b/okhttp-apache/src/main/java/okhttp3/apache/OkApacheClient.java, +  private static HttpResponse transformResponse(Response response) {, +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +  static boolean isPlaintext(Buffer buffer) {, +++ b/okhttp-tests/src/test/java/okhttp3/DelegatingSocketFactory.java, +  @Override public Socket createSocket() throws IOException {, +  @Override public Socket createSocket(String host, int port) throws IOException {, +  @Override public Socket createSocket(String host, int port, InetAddress localAddress,, +      int localPort) throws IOException {, +  @Override public Socket createSocket(InetAddress host, int port) throws IOException {, +  @Override public Socket createSocket(InetAddress host, int port, InetAddress localAddress,, +      int localPort) throws IOException {, +++ b/okhttp-tests/src/test/java/okhttp3/FallbackTestClientSocketFactory.java, +      List<String> enabledCipherSuites = new ArrayList<>(suites.length);, +++ b/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java, +    final List<URI> proxySelectionRequests = new ArrayList<>();, +    private final List<String> calls = new ArrayList<>();, +      List<String> result = new ArrayList<>();, +++ b/okhttp-tests/src/test/java/okhttp3/internal/io/PipeTest.java, +/*, + * Copyright (C) 2016 Square, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package okhttp3.internal.io;, +]