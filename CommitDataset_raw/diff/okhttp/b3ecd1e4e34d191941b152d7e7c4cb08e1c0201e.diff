[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +import com.squareup.okhttp.internal.Network;, +        .setConnectionPool(ConnectionPool.getDefault());, +    Internal.instance.setNetwork(client, dns);, +, +  private static class FakeDns implements Network {, +    @Override public InetAddress[] resolveInetAddresses(String host) throws UnknownHostException {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +import com.squareup.okhttp.internal.Network;, +        .setConnectionPool(ConnectionPool.getDefault());, +    Internal.instance.setNetwork(client, dns);, +, +  private static class FakeDns implements Network {, +    @Override public InetAddress[] resolveInetAddresses(String host) throws UnknownHostException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +import com.squareup.okhttp.internal.Network;, +        .setConnectionPool(ConnectionPool.getDefault());, +    Internal.instance.setNetwork(client, dns);, +, +  private static class FakeDns implements Network {, +    @Override public InetAddress[] resolveInetAddresses(String host) throws UnknownHostException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +import com.squareup.okhttp.internal.Network;, +        .setConnectionPool(ConnectionPool.getDefault());, +    Internal.instance.setNetwork(client, dns);, +, +  private static class FakeDns implements Network {, +    @Override public InetAddress[] resolveInetAddresses(String host) throws UnknownHostException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +++ /dev/null, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +import com.squareup.okhttp.internal.Network;, +      @Override public Network network(OkHttpClient client) {, +        return client.network;, +      }, +, +      @Override public void setNetwork(OkHttpClient client, Network network) {, +        client.network = network;, +      }, +, +  private Network network;, +    if (result.network == null) {, +      result.network = Network.DEFAULT;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +import com.squareup.okhttp.internal.Network;, +        .setConnectionPool(ConnectionPool.getDefault());, +    Internal.instance.setNetwork(client, dns);, +, +  private static class FakeDns implements Network {, +    @Override public InetAddress[] resolveInetAddresses(String host) throws UnknownHostException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +++ /dev/null, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +import com.squareup.okhttp.internal.Network;, +      @Override public Network network(OkHttpClient client) {, +        return client.network;, +      }, +, +      @Override public void setNetwork(OkHttpClient client, Network network) {, +        client.network = network;, +      }, +, +  private Network network;, +    if (result.network == null) {, +      result.network = Network.DEFAULT;, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Internal.java, +  public abstract Network network(OkHttpClient client);, +, +  public abstract void setNetwork(OkHttpClient client, Network network);, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +import com.squareup.okhttp.internal.Network;, +        .setConnectionPool(ConnectionPool.getDefault());, +    Internal.instance.setNetwork(client, dns);, +, +  private static class FakeDns implements Network {, +    @Override public InetAddress[] resolveInetAddresses(String host) throws UnknownHostException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +++ /dev/null, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +import com.squareup.okhttp.internal.Network;, +      @Override public Network network(OkHttpClient client) {, +        return client.network;, +      }, +, +      @Override public void setNetwork(OkHttpClient client, Network network) {, +        client.network = network;, +      }, +, +  private Network network;, +    if (result.network == null) {, +      result.network = Network.DEFAULT;, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Internal.java, +  public abstract Network network(OkHttpClient client);, +, +  public abstract void setNetwork(OkHttpClient client, Network network);, +]