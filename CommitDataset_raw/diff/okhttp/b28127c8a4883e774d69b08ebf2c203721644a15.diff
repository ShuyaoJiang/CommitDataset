[+++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/ApacheHttpClient.java, +  @Override public Runnable request(URL url) {, +    return new ApacheHttpClientRequest(url);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/ApacheHttpClient.java, +  @Override public Runnable request(URL url) {, +    return new ApacheHttpClientRequest(url);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +import java.net.URL;, +    URL url = server.getUrl("/");, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/ApacheHttpClient.java, +  @Override public Runnable request(URL url) {, +    return new ApacheHttpClientRequest(url);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +import java.net.URL;, +    URL url = server.getUrl("/");, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/HttpClient.java, +import java.net.URL;, +  void enqueue(URL url) throws Exception;, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/ApacheHttpClient.java, +  @Override public Runnable request(URL url) {, +    return new ApacheHttpClientRequest(url);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +import java.net.URL;, +    URL url = server.getUrl("/");, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/HttpClient.java, +import java.net.URL;, +  void enqueue(URL url) throws Exception;, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/NettyHttpClient.java, +import com.squareup.okhttp.internal.Util;, +import java.net.URL;, +  private final Deque<URL> backlog = new ArrayDeque<>();, +  @Override public void enqueue(URL url) throws Exception {, +      Channel channel = bootstrap.connect(url.getHost(), Util.getEffectivePort(url)), +    URL url;, +    private void sendRequest(URL url) {, +          HttpVersion.HTTP_1_1, HttpMethod.GET, url.getPath());, +      request.headers().set(HttpHeaders.Names.HOST, url.getHost());, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/ApacheHttpClient.java, +  @Override public Runnable request(URL url) {, +    return new ApacheHttpClientRequest(url);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +import java.net.URL;, +    URL url = server.getUrl("/");, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/HttpClient.java, +import java.net.URL;, +  void enqueue(URL url) throws Exception;, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/NettyHttpClient.java, +import com.squareup.okhttp.internal.Util;, +import java.net.URL;, +  private final Deque<URL> backlog = new ArrayDeque<>();, +  @Override public void enqueue(URL url) throws Exception {, +      Channel channel = bootstrap.connect(url.getHost(), Util.getEffectivePort(url)), +    URL url;, +    private void sendRequest(URL url) {, +          HttpVersion.HTTP_1_1, HttpMethod.GET, url.getPath());, +      request.headers().set(HttpHeaders.Names.HOST, url.getHost());, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/OkHttp.java, +import java.net.URL;, +  @Override public Runnable request(URL url) {, +    private final URL url;, +    public OkHttpRequest(URL url) {, +        HttpURLConnection urlConnection = new OkUrlFactory(client).open(url);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/ApacheHttpClient.java, +  @Override public Runnable request(URL url) {, +    return new ApacheHttpClientRequest(url);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +import java.net.URL;, +    URL url = server.getUrl("/");, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/HttpClient.java, +import java.net.URL;, +  void enqueue(URL url) throws Exception;, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/NettyHttpClient.java, +import com.squareup.okhttp.internal.Util;, +import java.net.URL;, +  private final Deque<URL> backlog = new ArrayDeque<>();, +  @Override public void enqueue(URL url) throws Exception {, +      Channel channel = bootstrap.connect(url.getHost(), Util.getEffectivePort(url)), +    URL url;, +    private void sendRequest(URL url) {, +          HttpVersion.HTTP_1_1, HttpMethod.GET, url.getPath());, +      request.headers().set(HttpHeaders.Names.HOST, url.getHost());, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/OkHttp.java, +import java.net.URL;, +  @Override public Runnable request(URL url) {, +    private final URL url;, +    public OkHttpRequest(URL url) {, +        HttpURLConnection urlConnection = new OkUrlFactory(client).open(url);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/OkHttpAsync.java, +import java.net.URL;, +  @Override public void enqueue(URL url) throws Exception {, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/ApacheHttpClient.java, +  @Override public Runnable request(URL url) {, +    return new ApacheHttpClientRequest(url);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +import java.net.URL;, +    URL url = server.getUrl("/");, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/HttpClient.java, +import java.net.URL;, +  void enqueue(URL url) throws Exception;, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/NettyHttpClient.java]