[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/OkHttpClientTest.java, +import java.util.concurrent.TimeUnit;, +  @Test public void timeoutValidRange() {, +    OkHttpClient client = new OkHttpClient();, +    try {, +      client.setConnectTimeout(1, TimeUnit.NANOSECONDS);, +    } catch (IllegalArgumentException ignored) {, +    }, +    try {, +      client.setWriteTimeout(1, TimeUnit.NANOSECONDS);, +    } catch (IllegalArgumentException ignored) {, +    }, +    try {, +      client.setReadTimeout(1, TimeUnit.NANOSECONDS);, +    } catch (IllegalArgumentException ignored) {, +    }, +    try {, +      client.setConnectTimeout(365, TimeUnit.DAYS);, +    } catch (IllegalArgumentException ignored) {, +    }, +    try {, +      client.setWriteTimeout(365, TimeUnit.DAYS);, +    } catch (IllegalArgumentException ignored) {, +    }, +    try {, +      client.setReadTimeout(365, TimeUnit.DAYS);, +    } catch (IllegalArgumentException ignored) {, +    }, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/OkHttpClientTest.java, +import java.util.concurrent.TimeUnit;, +  @Test public void timeoutValidRange() {, +    OkHttpClient client = new OkHttpClient();, +    try {, +      client.setConnectTimeout(1, TimeUnit.NANOSECONDS);, +    } catch (IllegalArgumentException ignored) {, +    }, +    try {, +      client.setWriteTimeout(1, TimeUnit.NANOSECONDS);, +    } catch (IllegalArgumentException ignored) {, +    }, +    try {, +      client.setReadTimeout(1, TimeUnit.NANOSECONDS);, +    } catch (IllegalArgumentException ignored) {, +    }, +    try {, +      client.setConnectTimeout(365, TimeUnit.DAYS);, +    } catch (IllegalArgumentException ignored) {, +    }, +    try {, +      client.setWriteTimeout(365, TimeUnit.DAYS);, +    } catch (IllegalArgumentException ignored) {, +    }, +    try {, +      client.setReadTimeout(365, TimeUnit.DAYS);, +    } catch (IllegalArgumentException ignored) {, +    }, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +   * Sets the default connect timeout for new connections. A value of 0 means no timeout. Values, +   * must be between 1 and {@link Integer#MAX_VALUE} when converted to milliseconds., +    if (millis == 0 && timeout > 0) throw new IllegalArgumentException("Timeout too small.");, +   * Sets the default read timeout for new connections. A value of 0 means no timeout. Values must, +   * be between 1 and {@link Integer#MAX_VALUE} when converted to milliseconds., +    if (millis == 0 && timeout > 0) throw new IllegalArgumentException("Timeout too small.");, +   * Sets the default write timeout for new connections. A value of 0 means no timeout. Values must, +   * be between 1 and {@link Integer#MAX_VALUE} when converted to milliseconds., +    if (millis == 0 && timeout > 0) throw new IllegalArgumentException("Timeout too small.");]