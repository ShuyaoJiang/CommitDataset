[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/MultipartBuilderTest.java, +        .addFormDataPart("submit-name", "Larry"), +        .addFormDataPart("files", null,, +  @Test public void stringEscapingIsWeird() throws Exception {, +    String expected = "", +        + "--AaB03x\r\n", +        + "Content-Disposition: form-data; name=\"field with spaces\"; filename=\"filename with spaces.txt\"\r\n", +        + "Content-Type: text/plain; charset=utf-8\r\n", +        + "Content-Length: 4\r\n", +        + "\r\n", +        + "okay\r\n", +        + "--AaB03x\r\n", +        + "Content-Disposition: form-data; name=\"field with %22\"\r\n", +        + "Content-Length: 1\r\n", +        + "\r\n", +        + "\"\r\n", +        + "--AaB03x\r\n", +        + "Content-Disposition: form-data; name=\"field with %22\"\r\n", +        + "Content-Length: 3\r\n", +        + "\r\n", +        + "%22\r\n", +        + "--AaB03x\r\n", +        + "Content-Disposition: form-data; name=\"field with \u0391\"\r\n", +        + "Content-Length: 5\r\n", +        + "\r\n", +        + "Alpha\r\n", +        + "--AaB03x--";, +, +    RequestBody requestBody = new MultipartBuilder("AaB03x"), +        .type(MultipartBuilder.FORM), +        .addFormDataPart("field with spaces", "filename with spaces.txt",, +            RequestBody.create(MediaType.parse("text/plain; charset=utf-8"), "okay")), +        .addFormDataPart("field with \"", "\""), +        .addFormDataPart("field with %22", "%22"), +        .addFormDataPart("field with \u0391", "Alpha"), +        .build();, +, +    Buffer buffer = new Buffer();, +    requestBody.writeTo(buffer);, +    assertEquals(expected, buffer.readUtf8());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/MultipartBuilderTest.java, +        .addFormDataPart("submit-name", "Larry"), +        .addFormDataPart("files", null,, +  @Test public void stringEscapingIsWeird() throws Exception {, +    String expected = "", +        + "--AaB03x\r\n", +        + "Content-Disposition: form-data; name=\"field with spaces\"; filename=\"filename with spaces.txt\"\r\n", +        + "Content-Type: text/plain; charset=utf-8\r\n", +        + "Content-Length: 4\r\n", +        + "\r\n", +        + "okay\r\n", +        + "--AaB03x\r\n", +        + "Content-Disposition: form-data; name=\"field with %22\"\r\n", +        + "Content-Length: 1\r\n", +        + "\r\n", +        + "\"\r\n", +        + "--AaB03x\r\n", +        + "Content-Disposition: form-data; name=\"field with %22\"\r\n", +        + "Content-Length: 3\r\n", +        + "\r\n", +        + "%22\r\n", +        + "--AaB03x\r\n", +        + "Content-Disposition: form-data; name=\"field with \u0391\"\r\n", +        + "Content-Length: 5\r\n", +        + "\r\n", +        + "Alpha\r\n", +        + "--AaB03x--";, +, +    RequestBody requestBody = new MultipartBuilder("AaB03x"), +        .type(MultipartBuilder.FORM), +        .addFormDataPart("field with spaces", "filename with spaces.txt",, +            RequestBody.create(MediaType.parse("text/plain; charset=utf-8"), "okay")), +        .addFormDataPart("field with \"", "\""), +        .addFormDataPart("field with %22", "%22"), +        .addFormDataPart("field with \u0391", "Alpha"), +        .build();, +, +    Buffer buffer = new Buffer();, +    requestBody.writeTo(buffer);, +    assertEquals(expected, buffer.readUtf8());, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/MultipartBuilder.java, +  /**, +   * Appends a quoted-string to a StringBuilder., +   *, +   * <p>RFC 2388 is rather vague about how one should escape special characters, +   * in form-data parameters, and as it turns out Firefox and Chrome actually, +   * do rather different things, and both say in their comments that they're, +   * not really sure what the right approach is. We go with Chrome's behavior, +   * (which also experimentally seems to match what IE does), but if you, +   * actually want to have a good chance of things working, please avoid, +   * double-quotes, newlines, percent signs, and the like in your field names., +   */, +  private static StringBuilder appendQuotedString(StringBuilder target, String key) {, +    target.append('"');, +    for (int i = 0, len = key.length(); i < len; i++) {, +      char ch = key.charAt(i);]