[+++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +import okhttp3.internal.Platform;, +  /** Synthetic response header: the local time when the request was sent. */, +  private static final String SENT_MILLIS = Platform.get().getPrefix() + "-Sent-Millis";, +, +  /** Synthetic response header: the local time when the response was received. */, +  private static final String RECEIVED_MILLIS = Platform.get().getPrefix() + "-Received-Millis";, +, +        .add(SENT_MILLIS, Long.toString(okResponse.sentRequestAtMillis())), +        .add(RECEIVED_MILLIS, Long.toString(okResponse.receivedResponseAtMillis())), +        if (name.equals(SENT_MILLIS)) {, +        if (name.equals(RECEIVED_MILLIS)) {, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +import okhttp3.internal.Platform;, +  /** Synthetic response header: the local time when the request was sent. */, +  private static final String SENT_MILLIS = Platform.get().getPrefix() + "-Sent-Millis";, +, +  /** Synthetic response header: the local time when the response was received. */, +  private static final String RECEIVED_MILLIS = Platform.get().getPrefix() + "-Received-Millis";, +, +        .add(SENT_MILLIS, Long.toString(okResponse.sentRequestAtMillis())), +        .add(RECEIVED_MILLIS, Long.toString(okResponse.receivedResponseAtMillis())), +        if (name.equals(SENT_MILLIS)) {, +        if (name.equals(RECEIVED_MILLIS)) {, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +    assertFalse(connection instanceof OkHttpURLConnection);, +    assertFalse(connection2 instanceof OkHttpURLConnection);, +    assertFalse(connection instanceof OkHttpURLConnection);, +    assertFalse(connection2 instanceof OkHttpURLConnection);, +    assertFalse(connection instanceof OkHttpURLConnection);, +    assertFalse(connection2 instanceof OkHttpURLConnection);, +    assertFalse(connection instanceof OkHttpURLConnection);, +    assertFalse(connection2 instanceof OkHttpURLConnection);, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +import okhttp3.internal.Platform;, +  /** Synthetic response header: the local time when the request was sent. */, +  private static final String SENT_MILLIS = Platform.get().getPrefix() + "-Sent-Millis";, +, +  /** Synthetic response header: the local time when the response was received. */, +  private static final String RECEIVED_MILLIS = Platform.get().getPrefix() + "-Received-Millis";, +, +        .add(SENT_MILLIS, Long.toString(okResponse.sentRequestAtMillis())), +        .add(RECEIVED_MILLIS, Long.toString(okResponse.receivedResponseAtMillis())), +        if (name.equals(SENT_MILLIS)) {, +        if (name.equals(RECEIVED_MILLIS)) {, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +    assertFalse(connection instanceof OkHttpURLConnection);, +    assertFalse(connection2 instanceof OkHttpURLConnection);, +    assertFalse(connection instanceof OkHttpURLConnection);, +    assertFalse(connection2 instanceof OkHttpURLConnection);, +    assertFalse(connection instanceof OkHttpURLConnection);, +    assertFalse(connection2 instanceof OkHttpURLConnection);, +    assertFalse(connection instanceof OkHttpURLConnection);, +    assertFalse(connection2 instanceof OkHttpURLConnection);, +++ b/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java, +import static okhttp3.internal.huc.OkHttpURLConnection.SELECTED_PROTOCOL;, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +import okhttp3.internal.Platform;, +  /** Synthetic response header: the local time when the request was sent. */, +  private static final String SENT_MILLIS = Platform.get().getPrefix() + "-Sent-Millis";, +, +  /** Synthetic response header: the local time when the response was received. */, +  private static final String RECEIVED_MILLIS = Platform.get().getPrefix() + "-Received-Millis";, +, +        .add(SENT_MILLIS, Long.toString(okResponse.sentRequestAtMillis())), +        .add(RECEIVED_MILLIS, Long.toString(okResponse.receivedResponseAtMillis())), +        if (name.equals(SENT_MILLIS)) {, +        if (name.equals(RECEIVED_MILLIS)) {, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +    assertFalse(connection instanceof OkHttpURLConnection);, +    assertFalse(connection2 instanceof OkHttpURLConnection);, +    assertFalse(connection instanceof OkHttpURLConnection);, +    assertFalse(connection2 instanceof OkHttpURLConnection);, +    assertFalse(connection instanceof OkHttpURLConnection);, +    assertFalse(connection2 instanceof OkHttpURLConnection);, +    assertFalse(connection instanceof OkHttpURLConnection);, +    assertFalse(connection2 instanceof OkHttpURLConnection);, +++ b/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java, +import static okhttp3.internal.huc.OkHttpURLConnection.SELECTED_PROTOCOL;, +++ b/okhttp-urlconnection/src/main/java/okhttp3/OkUrlFactory.java, +import okhttp3.internal.huc.OkHttpURLConnection;, +import okhttp3.internal.huc.OkHttpsURLConnection;, +    if (protocol.equals("http")) return new OkHttpURLConnection(url, copy, urlFilter);, +    if (protocol.equals("https")) return new OkHttpsURLConnection(url, copy, urlFilter);, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +import okhttp3.internal.Platform;, +  /** Synthetic response header: the local time when the request was sent. */, +  private static final String SENT_MILLIS = Platform.get().getPrefix() + "-Sent-Millis";, +, +  /** Synthetic response header: the local time when the response was received. */, +  private static final String RECEIVED_MILLIS = Platform.get().getPrefix() + "-Received-Millis";, +, +        .add(SENT_MILLIS, Long.toString(okResponse.sentRequestAtMillis())), +        .add(RECEIVED_MILLIS, Long.toString(okResponse.receivedResponseAtMillis())), +        if (name.equals(SENT_MILLIS)) {, +        if (name.equals(RECEIVED_MILLIS)) {, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +    assertFalse(connection instanceof OkHttpURLConnection);, +    assertFalse(connection2 instanceof OkHttpURLConnection);, +    assertFalse(connection instanceof OkHttpURLConnection);]