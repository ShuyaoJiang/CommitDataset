[+++ b/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java, +import java.io.File;, +import java.io.FileNotFoundException;, +import java.net.CookieHandler;, +import java.nio.charset.Charset;, +import java.util.concurrent.atomic.AtomicReference;, +import okhttp3.internal.huc.OkHttpURLConnection;, +, +  @Test public void disconnectDuringConnect_cookieJar() throws Exception {, +    final AtomicReference<HttpURLConnection> connectionHolder = new AtomicReference<>();, +    class DisconnectingCookieJar implements CookieJar {, +      @Override public void saveFromResponse(HttpUrl url, List<Cookie> cookies) { }, +      @Override, +      public List<Cookie> loadForRequest(HttpUrl url) {, +        connectionHolder.get().disconnect();, +        return Collections.emptyList();, +      }, +    }, +    OkHttpClient client = new okhttp3.OkHttpClient.Builder(), +            .cookieJar(new DisconnectingCookieJar()), +            .build();, +, +    URL url = server.url("path that should never be accessed").url();, +    HttpURLConnection connection = new OkHttpURLConnection(url, client);, +    connectionHolder.set(connection);, +    try {, +      connection.getInputStream();, +      fail("Connection should not be established");, +    } catch (IOException expected) {, +      assertEquals("Canceled", expected.getMessage());, +    } finally {, +      connection.disconnect();, +    }, +  }, +]