[+++ b/benchmarks/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/benchmarks/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/mockwebserver/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/benchmarks/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/mockwebserver/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import java.util.Set;, +  private final Set<Socket> openClientSockets =, +      Collections.newSetFromMap(new ConcurrentHashMap<Socket, Boolean>());, +  private final Set<SpdyConnection> openSpdyConnections =, +      Collections.newSetFromMap(new ConcurrentHashMap<SpdyConnection, Boolean>());, +        for (Iterator<Socket> s = openClientSockets.iterator(); s.hasNext(); ) {, +        for (Iterator<SpdyConnection> s = openSpdyConnections.iterator(); s.hasNext(); ) {, +            openClientSockets.add(socket);, +          openClientSockets.add(socket);, +          openSpdyConnections.add(spdyConnection);, +++ b/benchmarks/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/mockwebserver/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import java.util.Set;, +  private final Set<Socket> openClientSockets =, +      Collections.newSetFromMap(new ConcurrentHashMap<Socket, Boolean>());, +  private final Set<SpdyConnection> openSpdyConnections =, +      Collections.newSetFromMap(new ConcurrentHashMap<SpdyConnection, Boolean>());, +        for (Iterator<Socket> s = openClientSockets.iterator(); s.hasNext(); ) {, +        for (Iterator<SpdyConnection> s = openSpdyConnections.iterator(); s.hasNext(); ) {, +            openClientSockets.add(socket);, +          openClientSockets.add(socket);, +          openSpdyConnections.add(spdyConnection);, +++ b/okcurl/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/benchmarks/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/mockwebserver/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import java.util.Set;, +  private final Set<Socket> openClientSockets =, +      Collections.newSetFromMap(new ConcurrentHashMap<Socket, Boolean>());, +  private final Set<SpdyConnection> openSpdyConnections =, +      Collections.newSetFromMap(new ConcurrentHashMap<SpdyConnection, Boolean>());, +        for (Iterator<Socket> s = openClientSockets.iterator(); s.hasNext(); ) {, +        for (Iterator<SpdyConnection> s = openSpdyConnections.iterator(); s.hasNext(); ) {, +            openClientSockets.add(socket);, +          openClientSockets.add(socket);, +          openSpdyConnections.add(spdyConnection);, +++ b/okcurl/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/okhttp-apache/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/benchmarks/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/mockwebserver/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import java.util.Set;, +  private final Set<Socket> openClientSockets =, +      Collections.newSetFromMap(new ConcurrentHashMap<Socket, Boolean>());, +  private final Set<SpdyConnection> openSpdyConnections =, +      Collections.newSetFromMap(new ConcurrentHashMap<SpdyConnection, Boolean>());, +        for (Iterator<Socket> s = openClientSockets.iterator(); s.hasNext(); ) {, +        for (Iterator<SpdyConnection> s = openSpdyConnections.iterator(); s.hasNext(); ) {, +            openClientSockets.add(socket);, +          openClientSockets.add(socket);, +          openSpdyConnections.add(spdyConnection);, +++ b/okcurl/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/okhttp-apache/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/okhttp-tests/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/benchmarks/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/mockwebserver/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import java.util.Set;, +  private final Set<Socket> openClientSockets =, +      Collections.newSetFromMap(new ConcurrentHashMap<Socket, Boolean>());, +  private final Set<SpdyConnection> openSpdyConnections =, +      Collections.newSetFromMap(new ConcurrentHashMap<SpdyConnection, Boolean>());, +        for (Iterator<Socket> s = openClientSockets.iterator(); s.hasNext(); ) {, +        for (Iterator<SpdyConnection> s = openSpdyConnections.iterator(); s.hasNext(); ) {, +            openClientSockets.add(socket);, +          openClientSockets.add(socket);, +          openSpdyConnections.add(spdyConnection);, +++ b/okcurl/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/okhttp-apache/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/okhttp-tests/pom.xml, +    <version>2.1.0-SNAPSHOT</version>, +++ b/okhttp-urlconnection/pom.xml]