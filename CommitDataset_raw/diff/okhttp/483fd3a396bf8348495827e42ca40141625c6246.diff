[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/OkHttpClientTest.java, +import java.net.CookieHandler;, +  private static final ProxySelector DEFAULT_PROXY_SELECTOR = ProxySelector.getDefault();, +  private static final CookieHandler DEFAULT_COOKIE_HANDLER = CookieManager.getDefault();, +  private static final ResponseCache DEFAULT_RESPONSE_CACHE = ResponseCache.getDefault();, +  private static final Authenticator DEFAULT_AUTHENTICATOR = null; // No Authenticator.getDefault()., +, +    ProxySelector.setDefault(DEFAULT_PROXY_SELECTOR);, +    CookieManager.setDefault(DEFAULT_COOKIE_HANDLER);, +    ResponseCache.setDefault(DEFAULT_RESPONSE_CACHE);, +    Authenticator.setDefault(DEFAULT_AUTHENTICATOR);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/OkHttpClientTest.java, +import java.net.CookieHandler;, +  private static final ProxySelector DEFAULT_PROXY_SELECTOR = ProxySelector.getDefault();, +  private static final CookieHandler DEFAULT_COOKIE_HANDLER = CookieManager.getDefault();, +  private static final ResponseCache DEFAULT_RESPONSE_CACHE = ResponseCache.getDefault();, +  private static final Authenticator DEFAULT_AUTHENTICATOR = null; // No Authenticator.getDefault()., +, +    ProxySelector.setDefault(DEFAULT_PROXY_SELECTOR);, +    CookieManager.setDefault(DEFAULT_COOKIE_HANDLER);, +    ResponseCache.setDefault(DEFAULT_RESPONSE_CACHE);, +    Authenticator.setDefault(DEFAULT_AUTHENTICATOR);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java, +  private static final Variant HTTP_20_DRAFT_09 = new Http20Draft12();, +    peer.setVariantAndClient(HTTP_20_DRAFT_09, false);, +    connection(peer, HTTP_20_DRAFT_09);, +    peer.setVariantAndClient(HTTP_20_DRAFT_09, false);, +    SpdyConnection connection = connection(peer, HTTP_20_DRAFT_09);, +    peer.setVariantAndClient(HTTP_20_DRAFT_09, false);, +    SpdyConnection connection = connection(peer, HTTP_20_DRAFT_09);, +    receiveGoAway(HTTP_20_DRAFT_09);, +    connection.ping().roundTripTime(); // Ensure that the GO_AWAY has been received., +    readSendsWindowUpdate(HTTP_20_DRAFT_09);, +    serverSendsEmptyDataClientDoesntSendWindowUpdate(HTTP_20_DRAFT_09);, +    clientSendsEmptyDataServerDoesntSendWindowUpdate(HTTP_20_DRAFT_09);, +    int framesThatFillWindow = roundUp(DEFAULT_INITIAL_WINDOW_SIZE, HTTP_20_DRAFT_09.maxFrameSize());, +    int framesThatFillWindow = roundUp(DEFAULT_INITIAL_WINDOW_SIZE, HTTP_20_DRAFT_09.maxFrameSize());, +    peer.setVariantAndClient(HTTP_20_DRAFT_09, false);, +    byte[] buff = new byte[HTTP_20_DRAFT_09.maxFrameSize() + 1];, +    SpdyConnection connection = connection(peer, HTTP_20_DRAFT_09);, +    assertEquals(HTTP_20_DRAFT_09.maxFrameSize(), data.data.length);, +    peer.setVariantAndClient(HTTP_20_DRAFT_09, false);, +    SpdyConnection connection = connectionBuilder(peer, HTTP_20_DRAFT_09), +    peer.setVariantAndClient(HTTP_20_DRAFT_09, false);, +    SpdyConnection connection = connectionBuilder(peer, HTTP_20_DRAFT_09).build();, +    peer.setVariantAndClient(HTTP_20_DRAFT_09, false);, +    connectionBuilder(peer, HTTP_20_DRAFT_09), +    peer.setVariantAndClient(HTTP_20_DRAFT_09, client);, +    SpdyConnection connection = connection(peer, HTTP_20_DRAFT_09);]