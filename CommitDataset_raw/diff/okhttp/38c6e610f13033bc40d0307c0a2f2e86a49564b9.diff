[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/AddressTest.java, +  private Dns dns = Dns.SYSTEM;, +    Address a = new Address("square.com", 80, dns, socketFactory, null, null, null,, +    Address b = new Address("square.com", 80, dns, socketFactory, null, null, null,, +    Address a = new Address("square.com", 80, dns, socketFactory, null, null, null,, +    Address b = new Address("square.com", 80, dns, socketFactory, null, null, null,, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/AddressTest.java, +  private Dns dns = Dns.SYSTEM;, +    Address a = new Address("square.com", 80, dns, socketFactory, null, null, null,, +    Address b = new Address("square.com", 80, dns, socketFactory, null, null, null,, +    Address a = new Address("square.com", 80, dns, socketFactory, null, null, null,, +    Address b = new Address("square.com", 80, dns, socketFactory, null, null, null,, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +import com.squareup.okhttp.internal.DoubleInetAddressDns;, +import com.squareup.okhttp.internal.SingleInetAddressDns;, +import com.squareup.okhttp.internal.http.FakeDns;, +    client.setDns(new DoubleInetAddressDns());, +    client.setDns(new DoubleInetAddressDns());, +    client.setDns(new DoubleInetAddressDns());, +    client.setDns(new SingleInetAddressDns());, +    client.setDns(new SingleInetAddressDns());, +    client.setDns(new SingleInetAddressDns());, +  @Test public void customDns() throws Exception {, +    // Configure a DNS that returns our MockWebServer for every hostname., +    FakeDns dns = new FakeDns();, +    dns.addresses(Dns.SYSTEM.lookup(server.url("/").host()));, +    client.setDns(dns);, +, +    server.enqueue(new MockResponse());, +    Request request = new Request.Builder(), +        .url(server.url("/").newBuilder().host("android.com").build()), +        .build();, +    executeSynchronously(request).assertCode(200);, +, +    dns.assertRequests("android.com");, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/AddressTest.java, +  private Dns dns = Dns.SYSTEM;, +    Address a = new Address("square.com", 80, dns, socketFactory, null, null, null,, +    Address b = new Address("square.com", 80, dns, socketFactory, null, null, null,, +    Address a = new Address("square.com", 80, dns, socketFactory, null, null, null,, +    Address b = new Address("square.com", 80, dns, socketFactory, null, null, null,, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +import com.squareup.okhttp.internal.DoubleInetAddressDns;, +import com.squareup.okhttp.internal.SingleInetAddressDns;, +import com.squareup.okhttp.internal.http.FakeDns;, +    client.setDns(new DoubleInetAddressDns());, +    client.setDns(new DoubleInetAddressDns());, +    client.setDns(new DoubleInetAddressDns());, +    client.setDns(new SingleInetAddressDns());, +    client.setDns(new SingleInetAddressDns());, +    client.setDns(new SingleInetAddressDns());, +  @Test public void customDns() throws Exception {, +    // Configure a DNS that returns our MockWebServer for every hostname., +    FakeDns dns = new FakeDns();, +    dns.addresses(Dns.SYSTEM.lookup(server.url("/").host()));, +    client.setDns(dns);, +, +    server.enqueue(new MockResponse());, +    Request request = new Request.Builder(), +        .url(server.url("/").newBuilder().host("android.com").build()), +        .build();, +    executeSynchronously(request).assertCode(200);, +, +    dns.assertRequests("android.com");, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    Dns dns = Dns.SYSTEM;, +    httpAddress = new Address(httpServer.getHostName(), httpServer.getPort(), dns, socketFactory,, +        null, null, null, AuthenticatorAdapter.INSTANCE, null,, +    spdyAddress = new Address(spdyServer.getHostName(), spdyServer.getPort(), dns, socketFactory,, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/AddressTest.java, +  private Dns dns = Dns.SYSTEM;, +    Address a = new Address("square.com", 80, dns, socketFactory, null, null, null,, +    Address b = new Address("square.com", 80, dns, socketFactory, null, null, null,, +    Address a = new Address("square.com", 80, dns, socketFactory, null, null, null,, +    Address b = new Address("square.com", 80, dns, socketFactory, null, null, null,, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +import com.squareup.okhttp.internal.DoubleInetAddressDns;, +import com.squareup.okhttp.internal.SingleInetAddressDns;, +import com.squareup.okhttp.internal.http.FakeDns;, +    client.setDns(new DoubleInetAddressDns());, +    client.setDns(new DoubleInetAddressDns());, +    client.setDns(new DoubleInetAddressDns());, +    client.setDns(new SingleInetAddressDns());, +    client.setDns(new SingleInetAddressDns());, +    client.setDns(new SingleInetAddressDns());, +  @Test public void customDns() throws Exception {, +    // Configure a DNS that returns our MockWebServer for every hostname., +    FakeDns dns = new FakeDns();, +    dns.addresses(Dns.SYSTEM.lookup(server.url("/").host()));, +    client.setDns(dns);, +, +    server.enqueue(new MockResponse());, +    Request request = new Request.Builder(), +        .url(server.url("/").newBuilder().host("android.com").build()), +        .build();, +    executeSynchronously(request).assertCode(200);]