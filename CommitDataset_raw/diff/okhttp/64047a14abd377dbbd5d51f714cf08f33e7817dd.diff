[+++ /dev/null, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_MULT_CHOICE, TransferKind.END_OF_STREAM);, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_MOVED_PERM, TransferKind.END_OF_STREAM);, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_MOVED_TEMP, TransferKind.END_OF_STREAM);, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_SEE_OTHER, TransferKind.END_OF_STREAM);, +  @Test public void postRedirectToGetWithChunkedRequest() throws Exception {, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_MOVED_TEMP, TransferKind.CHUNKED);, +  }, +, +  @Test public void postRedirectToGetWithStreamedRequest() throws Exception {, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_MOVED_TEMP, TransferKind.FIXED_LENGTH);, +  }, +, +  private void testResponseRedirectedWithPost(int redirectCode, TransferKind transferKind), +      throws Exception {, +    transferKind.setForRequest(connection, 4);, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_MULT_CHOICE, TransferKind.END_OF_STREAM);, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_MOVED_PERM, TransferKind.END_OF_STREAM);, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_MOVED_TEMP, TransferKind.END_OF_STREAM);, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_SEE_OTHER, TransferKind.END_OF_STREAM);, +  @Test public void postRedirectToGetWithChunkedRequest() throws Exception {, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_MOVED_TEMP, TransferKind.CHUNKED);, +  }, +, +  @Test public void postRedirectToGetWithStreamedRequest() throws Exception {, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_MOVED_TEMP, TransferKind.FIXED_LENGTH);, +  }, +, +  private void testResponseRedirectedWithPost(int redirectCode, TransferKind transferKind), +      throws Exception {, +    transferKind.setForRequest(connection, 4);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpURLConnectionImpl.java, +    boolean bufferRequestBody = false;, +    if (HttpMethod.hasRequestBody(method)) {, +    }, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_MULT_CHOICE, TransferKind.END_OF_STREAM);, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_MOVED_PERM, TransferKind.END_OF_STREAM);, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_MOVED_TEMP, TransferKind.END_OF_STREAM);, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_SEE_OTHER, TransferKind.END_OF_STREAM);, +  @Test public void postRedirectToGetWithChunkedRequest() throws Exception {, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_MOVED_TEMP, TransferKind.CHUNKED);, +  }, +, +  @Test public void postRedirectToGetWithStreamedRequest() throws Exception {, +    testResponseRedirectedWithPost(HttpURLConnection.HTTP_MOVED_TEMP, TransferKind.FIXED_LENGTH);, +  }, +, +  private void testResponseRedirectedWithPost(int redirectCode, TransferKind transferKind), +      throws Exception {, +    transferKind.setForRequest(connection, 4);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpURLConnectionImpl.java, +    boolean bufferRequestBody = false;, +    if (HttpMethod.hasRequestBody(method)) {, +    }, +++ b/okio/src/main/java/okio/Deadline.java, +  public void throwIfReached() throws IOException {]