[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +import static org.junit.Assert.assertSame;, +  @Test public void responseCacheAccessWithOkHttpMember() throws IOException {, +    ResponseCache.setDefault(null);, +    client.setResponseCache(cache);, +    assertSame(cache, client.getOkResponseCache());, +    assertNull(client.getResponseCache());, +  }, +, +  @Test public void responseCacheAccessWithGlobalDefault() throws IOException {, +    ResponseCache.setDefault(cache);, +    client.setResponseCache(null);, +    assertNull(client.getOkResponseCache());, +    assertNull(client.getResponseCache());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +import static org.junit.Assert.assertSame;, +  @Test public void responseCacheAccessWithOkHttpMember() throws IOException {, +    ResponseCache.setDefault(null);, +    client.setResponseCache(cache);, +    assertSame(cache, client.getOkResponseCache());, +    assertNull(client.getResponseCache());, +  }, +, +  @Test public void responseCacheAccessWithGlobalDefault() throws IOException {, +    ResponseCache.setDefault(cache);, +    client.setResponseCache(null);, +    assertNull(client.getOkResponseCache());, +    assertNull(client.getResponseCache());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/ResponseCacheTest.java, +import org.junit.After;, +import org.junit.Before;, +import org.junit.Test;, +import static org.junit.Assert.assertSame;, +  private ResponseCache cache;, +    cache = new InMemoryResponseCache();, +    ResponseCache.setDefault(cache);, +  @Test public void responseCacheAccessWithOkHttpMember() throws IOException {, +    ResponseCache.setDefault(null);, +    client.setResponseCache(cache);, +    assertSame(cache, client.getResponseCache());, +    assertTrue(client.getOkResponseCache() instanceof ResponseCacheAdapter);, +  }, +, +  @Test public void responseCacheAccessWithGlobalDefault() throws IOException {, +    ResponseCache.setDefault(cache);, +    client.setResponseCache(null);, +    assertNull(client.getOkResponseCache());, +    assertNull(client.getResponseCache());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +import static org.junit.Assert.assertSame;, +  @Test public void responseCacheAccessWithOkHttpMember() throws IOException {, +    ResponseCache.setDefault(null);, +    client.setResponseCache(cache);, +    assertSame(cache, client.getOkResponseCache());, +    assertNull(client.getResponseCache());, +  }, +, +  @Test public void responseCacheAccessWithGlobalDefault() throws IOException {, +    ResponseCache.setDefault(cache);, +    client.setResponseCache(null);, +    assertNull(client.getOkResponseCache());, +    assertNull(client.getResponseCache());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/ResponseCacheTest.java, +import org.junit.After;, +import org.junit.Before;, +import org.junit.Test;, +import static org.junit.Assert.assertSame;, +  private ResponseCache cache;, +    cache = new InMemoryResponseCache();, +    ResponseCache.setDefault(cache);, +  @Test public void responseCacheAccessWithOkHttpMember() throws IOException {, +    ResponseCache.setDefault(null);, +    client.setResponseCache(cache);, +    assertSame(cache, client.getResponseCache());, +    assertTrue(client.getOkResponseCache() instanceof ResponseCacheAdapter);, +  }, +, +  @Test public void responseCacheAccessWithGlobalDefault() throws IOException {, +    ResponseCache.setDefault(cache);, +    client.setResponseCache(null);, +    assertNull(client.getOkResponseCache());, +    assertNull(client.getResponseCache());, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +    return setOkResponseCache(toOkResponseCache(responseCache));, +    return responseCache instanceof ResponseCacheAdapter, +        ? ((ResponseCacheAdapter) responseCache).getDelegate(), +        : null;, +      result.responseCache = toOkResponseCache(ResponseCache.getDefault());, +  private OkResponseCache toOkResponseCache(ResponseCache responseCache) {, +    return responseCache == null || responseCache instanceof OkResponseCache]