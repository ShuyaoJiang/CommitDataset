[+++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +  @Test public void combinedCacheHeadersCanBeNonAscii() throws Exception {, +    server.enqueue(new MockResponse(), +        .addHeader("Last-Modified: " + formatDate(-1, TimeUnit.HOURS)), +        .addHeader("Cache-Control: max-age=0"), +        .addHeaderLenient("Alpha", "α"), +        .addHeaderLenient("β", "Beta"), +        .setBody("abcd"));, +    server.enqueue(new MockResponse(), +        .addHeader("Transfer-Encoding: none"), +        .addHeaderLenient("Gamma", "Γ"), +        .addHeaderLenient("Δ", "Delta"), +        .setResponseCode(HttpURLConnection.HTTP_NOT_MODIFIED));, +, +    Response response1 = get(server.url("/"));, +    assertEquals("α", response1.header("Alpha"));, +    assertEquals("Beta", response1.header("β"));, +    assertEquals("abcd", response1.body().string());, +, +    Response response2 = get(server.url("/"));, +    assertEquals("α", response2.header("Alpha"));, +    assertEquals("Beta", response2.header("β"));, +    assertEquals("Γ", response2.header("Gamma"));, +    assertEquals("Delta", response2.header("Δ"));, +    assertEquals("abcd", response2.body().string());, +  }, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +  @Test public void combinedCacheHeadersCanBeNonAscii() throws Exception {, +    server.enqueue(new MockResponse(), +        .addHeader("Last-Modified: " + formatDate(-1, TimeUnit.HOURS)), +        .addHeader("Cache-Control: max-age=0"), +        .addHeaderLenient("Alpha", "α"), +        .addHeaderLenient("β", "Beta"), +        .setBody("abcd"));, +    server.enqueue(new MockResponse(), +        .addHeader("Transfer-Encoding: none"), +        .addHeaderLenient("Gamma", "Γ"), +        .addHeaderLenient("Δ", "Delta"), +        .setResponseCode(HttpURLConnection.HTTP_NOT_MODIFIED));, +, +    Response response1 = get(server.url("/"));, +    assertEquals("α", response1.header("Alpha"));, +    assertEquals("Beta", response1.header("β"));, +    assertEquals("abcd", response1.body().string());, +, +    Response response2 = get(server.url("/"));, +    assertEquals("α", response2.header("Alpha"));, +    assertEquals("Beta", response2.header("β"));, +    assertEquals("Γ", response2.header("Gamma"));, +    assertEquals("Delta", response2.header("Δ"));, +    assertEquals("abcd", response2.body().string());, +  }, +++ b/okhttp-tests/src/test/java/okhttp3/internal/framed/HttpOverSpdyTest.java, +  @Test public void nonAsciiResponseHeader() throws Exception {, +    server.enqueue(new MockResponse(), +        .addHeaderLenient("Alpha", "α"), +        .addHeaderLenient("β", "Beta"));, +, +    Call call = client.newCall(new Request.Builder(), +        .url(server.url("/")), +        .build());, +    Response response = call.execute();, +, +    assertEquals("α", response.header("Alpha"));, +    assertEquals("Beta", response.header("β"));, +  }, +, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +  @Test public void combinedCacheHeadersCanBeNonAscii() throws Exception {, +    server.enqueue(new MockResponse(), +        .addHeader("Last-Modified: " + formatDate(-1, TimeUnit.HOURS)), +        .addHeader("Cache-Control: max-age=0"), +        .addHeaderLenient("Alpha", "α"), +        .addHeaderLenient("β", "Beta"), +        .setBody("abcd"));, +    server.enqueue(new MockResponse(), +        .addHeader("Transfer-Encoding: none"), +        .addHeaderLenient("Gamma", "Γ"), +        .addHeaderLenient("Δ", "Delta"), +        .setResponseCode(HttpURLConnection.HTTP_NOT_MODIFIED));, +, +    Response response1 = get(server.url("/"));, +    assertEquals("α", response1.header("Alpha"));, +    assertEquals("Beta", response1.header("β"));, +    assertEquals("abcd", response1.body().string());, +, +    Response response2 = get(server.url("/"));, +    assertEquals("α", response2.header("Alpha"));, +    assertEquals("Beta", response2.header("β"));, +    assertEquals("Γ", response2.header("Gamma"));, +    assertEquals("Delta", response2.header("Δ"));, +    assertEquals("abcd", response2.body().string());, +  }, +++ b/okhttp-tests/src/test/java/okhttp3/internal/framed/HttpOverSpdyTest.java, +  @Test public void nonAsciiResponseHeader() throws Exception {, +    server.enqueue(new MockResponse(), +        .addHeaderLenient("Alpha", "α"), +        .addHeaderLenient("β", "Beta"));, +, +    Call call = client.newCall(new Request.Builder()]