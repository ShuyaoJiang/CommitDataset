[+++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java, +        if (numberOfPairs < 0) {, +        if (numberOfPairs > 1024) {, +          Logger.getLogger(getClass().getName()).warning("numberOfPairs > 1024: " + numberOfPairs);, +          throw ioException("numberOfPairs > 1024");, +        }, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java, +        if (numberOfPairs < 0) {, +        if (numberOfPairs > 1024) {, +          Logger.getLogger(getClass().getName()).warning("numberOfPairs > 1024: " + numberOfPairs);, +          throw ioException("numberOfPairs > 1024");, +        }, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +import java.io.UnsupportedEncodingException;, +import java.security.MessageDigest;, +import java.security.NoSuchAlgorithmException;, +  private static final char[] DIGITS =, +      { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };, +, +    try {, +      MessageDigest messageDigest = MessageDigest.getInstance("MD5");, +      byte[] md5bytes = messageDigest.digest(uri.toString().getBytes("UTF-8"));, +      return bytesToHexString(md5bytes);, +    } catch (NoSuchAlgorithmException e) {, +      throw new AssertionError(e);, +    } catch (UnsupportedEncodingException e) {, +      throw new AssertionError(e);, +    }, +  }, +, +  private static String bytesToHexString(byte[] bytes) {, +    char[] digits = DIGITS;, +    char[] buf = new char[bytes.length * 2];, +    int c = 0;, +    for (byte b : bytes) {, +      buf[c++] = digits[(b >> 4) & 0xf];, +      buf[c++] = digits[b & 0xf];, +    }, +    return new String(buf);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java, +        if (numberOfPairs < 0) {, +        if (numberOfPairs > 1024) {, +          Logger.getLogger(getClass().getName()).warning("numberOfPairs > 1024: " + numberOfPairs);, +          throw ioException("numberOfPairs > 1024");, +        }, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +import java.io.UnsupportedEncodingException;, +import java.security.MessageDigest;, +import java.security.NoSuchAlgorithmException;, +  private static final char[] DIGITS =, +      { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };, +, +    try {, +      MessageDigest messageDigest = MessageDigest.getInstance("MD5");, +      byte[] md5bytes = messageDigest.digest(uri.toString().getBytes("UTF-8"));, +      return bytesToHexString(md5bytes);, +    } catch (NoSuchAlgorithmException e) {, +      throw new AssertionError(e);, +    } catch (UnsupportedEncodingException e) {, +      throw new AssertionError(e);, +    }, +  }, +, +  private static String bytesToHexString(byte[] bytes) {, +    char[] digits = DIGITS;, +    char[] buf = new char[bytes.length * 2];, +    int c = 0;, +    for (byte b : bytes) {, +      buf[c++] = digits[(b >> 4) & 0xf];, +      buf[c++] = digits[b & 0xf];, +    }, +    return new String(buf);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/RawHeaders.java, +   * value., +    int index = line.indexOf(":");, +    if (index == -1) {, +      addLenient("", line);, +      addLenient(line.substring(0, index), line.substring(index + 1));, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java, +        if (numberOfPairs < 0) {, +        if (numberOfPairs > 1024) {, +          Logger.getLogger(getClass().getName()).warning("numberOfPairs > 1024: " + numberOfPairs);, +          throw ioException("numberOfPairs > 1024");, +        }, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +import java.io.UnsupportedEncodingException;, +import java.security.MessageDigest;, +import java.security.NoSuchAlgorithmException;, +  private static final char[] DIGITS =, +      { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };, +, +    try {, +      MessageDigest messageDigest = MessageDigest.getInstance("MD5");, +      byte[] md5bytes = messageDigest.digest(uri.toString().getBytes("UTF-8"));, +      return bytesToHexString(md5bytes);]