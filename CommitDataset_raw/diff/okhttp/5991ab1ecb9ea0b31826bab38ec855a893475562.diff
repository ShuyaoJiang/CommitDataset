[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +    server.enqueue(new MockResponse(), +        .setResponseCode(401));, +    server.enqueue(new MockResponse(), +        .setResponseCode(302), +  @Test public void cancelTagImmediatelyAfterEnqueue() throws Exception {, +    server.play();, +    Call call = client.newCall(new Request.Builder(), +        .url(server.getUrl("/a")), +        .tag("request"), +        .build());, +    call.enqueue(callback);, +    client.cancel("request");, +    assertEquals(0, server.getRequestCount());, +    callback.await(server.getUrl("/a")).assertFailure("Canceled");, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +    server.enqueue(new MockResponse(), +        .setResponseCode(401));, +    server.enqueue(new MockResponse(), +        .setResponseCode(302), +  @Test public void cancelTagImmediatelyAfterEnqueue() throws Exception {, +    server.play();, +    Call call = client.newCall(new Request.Builder(), +        .url(server.getUrl("/a")), +        .tag("request"), +        .build());, +    call.enqueue(callback);, +    client.cancel("request");, +    assertEquals(0, server.getRequestCount());, +    callback.await(server.getUrl("/a")).assertFailure("Canceled");, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/DispatcherTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +    server.enqueue(new MockResponse(), +        .setResponseCode(401));, +    server.enqueue(new MockResponse(), +        .setResponseCode(302), +  @Test public void cancelTagImmediatelyAfterEnqueue() throws Exception {, +    server.play();, +    Call call = client.newCall(new Request.Builder(), +        .url(server.getUrl("/a")), +        .tag("request"), +        .build());, +    call.enqueue(callback);, +    client.cancel("request");, +    assertEquals(0, server.getRequestCount());, +    callback.await(server.getUrl("/a")).assertFailure("Canceled");, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/DispatcherTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +    void cancel() {, +      Call.this.cancel();, +    }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +    server.enqueue(new MockResponse(), +        .setResponseCode(401));, +    server.enqueue(new MockResponse(), +        .setResponseCode(302), +  @Test public void cancelTagImmediatelyAfterEnqueue() throws Exception {, +    server.play();, +    Call call = client.newCall(new Request.Builder(), +        .url(server.getUrl("/a")), +        .tag("request"), +        .build());, +    call.enqueue(callback);, +    client.cancel("request");, +    assertEquals(0, server.getRequestCount());, +    callback.await(server.getUrl("/a")).assertFailure("Canceled");, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/DispatcherTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +    void cancel() {, +      Call.this.cancel();, +    }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/Dispatcher.java, +    for (AsyncCall call : readyCalls) {, +      if (Util.equal(tag, call.tag())) {, +        call.cancel();, +      }]