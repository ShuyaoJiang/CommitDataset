[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +import java.net.URL;, +  @Test public void deleteWithRequestBody() throws Exception {, +    server.enqueue(new MockResponse().setBody("abc"));, +, +    Request request = new Request.Builder(), +        .url(server.getUrl("/")), +        .method("DELETE", RequestBody.create(MediaType.parse("text/plain"), "def")), +        .build();, +, +    executeSynchronously(request), +        .assertCode(200), +        .assertBody("abc");, +, +    RecordedRequest recordedRequest = server.takeRequest();, +    assertEquals("DELETE", recordedRequest.getMethod());, +    assertEquals("def", recordedRequest.getBody().readUtf8());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +import java.net.URL;, +  @Test public void deleteWithRequestBody() throws Exception {, +    server.enqueue(new MockResponse().setBody("abc"));, +, +    Request request = new Request.Builder(), +        .url(server.getUrl("/")), +        .method("DELETE", RequestBody.create(MediaType.parse("text/plain"), "def")), +        .build();, +, +    executeSynchronously(request), +        .assertCode(200), +        .assertBody("abc");, +, +    RecordedRequest recordedRequest = server.takeRequest();, +    assertEquals("DELETE", recordedRequest.getMethod());, +    assertEquals("def", recordedRequest.getBody().readUtf8());, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/RouteSelector.java, +import java.net.UnknownHostException;, +  private void resetNextInetSocketAddress(Proxy proxy) throws UnknownHostException {]