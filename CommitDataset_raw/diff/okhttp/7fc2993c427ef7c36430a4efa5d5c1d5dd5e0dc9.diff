[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/framed/FramedServer.java, +        FramedConnection framedConnection = new FramedConnection.Builder(false), +            .socket(sslSocket), +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/framed/FramedServer.java, +        FramedConnection framedConnection = new FramedConnection.Builder(false), +            .socket(sslSocket), +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          FramedConnection framedConnection = new FramedConnection.Builder(false), +              .socket(socket), +              .protocol(protocol), +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/framed/FramedServer.java, +        FramedConnection framedConnection = new FramedConnection.Builder(false), +            .socket(sslSocket), +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          FramedConnection framedConnection = new FramedConnection.Builder(false), +              .socket(socket), +              .protocol(protocol), +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/framed/Http2ConnectionTest.java, +    FramedConnection connection = new FramedConnection.Builder(true), +        .socket(socket), +    return new FramedConnection.Builder(true), +        .socket(peer.openSocket()), +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/framed/FramedServer.java, +        FramedConnection framedConnection = new FramedConnection.Builder(false), +            .socket(sslSocket), +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          FramedConnection framedConnection = new FramedConnection.Builder(false), +              .socket(socket), +              .protocol(protocol), +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/framed/Http2ConnectionTest.java, +    FramedConnection connection = new FramedConnection.Builder(true), +        .socket(socket), +    return new FramedConnection.Builder(true), +        .socket(peer.openSocket()), +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/framed/Spdy3ConnectionTest.java, +    new FramedConnection.Builder(true), +        .socket(peer.openSocket()), +        .handler(handler), +        .build();, +    new FramedConnection.Builder(true), +        .socket(peer.openSocket()), +        .handler(handler), +        .build();, +    FramedConnection connection = new FramedConnection.Builder(true), +        .socket(socket), +    return new FramedConnection.Builder(true), +        .socket(peer.openSocket()), +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/framed/FramedServer.java, +        FramedConnection framedConnection = new FramedConnection.Builder(false), +            .socket(sslSocket), +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          FramedConnection framedConnection = new FramedConnection.Builder(false), +              .socket(socket), +              .protocol(protocol), +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/framed/Http2ConnectionTest.java, +    FramedConnection connection = new FramedConnection.Builder(true), +        .socket(socket), +    return new FramedConnection.Builder(true), +        .socket(peer.openSocket()), +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/framed/Spdy3ConnectionTest.java, +    new FramedConnection.Builder(true), +        .socket(peer.openSocket()), +        .handler(handler), +        .build();, +    new FramedConnection.Builder(true), +        .socket(peer.openSocket()), +        .handler(handler), +        .build();, +    FramedConnection connection = new FramedConnection.Builder(true), +        .socket(socket), +    return new FramedConnection.Builder(true), +        .socket(peer.openSocket()), +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/framed/FramedConnection.java, +import okio.BufferedSink;, +    frameWriter = variant.newWriter(builder.sink, client);, +    readerRunnable = new Reader(variant.newReader(builder.source, client));, +    private String hostName;, +    private BufferedSource source;, +    private BufferedSink sink;, +    public Builder(boolean client) throws IOException {, +    }, +, +    public Builder socket(Socket socket) throws IOException {, +      return socket(socket, ((InetSocketAddress) socket.getRemoteSocketAddress()).getHostName(),, +          Okio.buffer(Okio.source(socket)), Okio.buffer(Okio.sink(socket)));, +    }, +, +    public Builder socket(, +        Socket socket, String hostName, BufferedSource source, BufferedSink sink) {, +      this.hostName = hostName;, +      this.source = source;, +      this.sink = sink;, +      return this;, +    final FrameReader frameReader;, +    private Reader(FrameReader frameReader) {, +      this.frameReader = frameReader;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/framed/FramedServer.java, +        FramedConnection framedConnection = new FramedConnection.Builder(false), +            .socket(sslSocket), +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java]