[+++ b/benchmarks/src/main/java/okhttp3/benchmarks/ApacheHttpClient.java, +import okhttp3.mockwebserver.TlsNode;, +import static okhttp3.mockwebserver.internal.tls.TlsUtil.localhost;, +, +      TlsNode tlsNode = localhost();, +          new Scheme("https", 443, new SSLSocketFactory(tlsNode.sslContext())));, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/ApacheHttpClient.java, +import okhttp3.mockwebserver.TlsNode;, +import static okhttp3.mockwebserver.internal.tls.TlsUtil.localhost;, +, +      TlsNode tlsNode = localhost();, +          new Scheme("https", 443, new SSLSocketFactory(tlsNode.sslContext())));, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/Benchmark.java, +import okhttp3.mockwebserver.TlsNode;, +import static okhttp3.mockwebserver.internal.tls.TlsUtil.localhost;, +, +      TlsNode tlsNode = localhost();, +      server.useHttps(tlsNode.sslSocketFactory(), false);, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/ApacheHttpClient.java, +import okhttp3.mockwebserver.TlsNode;, +import static okhttp3.mockwebserver.internal.tls.TlsUtil.localhost;, +, +      TlsNode tlsNode = localhost();, +          new Scheme("https", 443, new SSLSocketFactory(tlsNode.sslContext())));, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/Benchmark.java, +import okhttp3.mockwebserver.TlsNode;, +import static okhttp3.mockwebserver.internal.tls.TlsUtil.localhost;, +, +      TlsNode tlsNode = localhost();, +      server.useHttps(tlsNode.sslSocketFactory(), false);, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/NettyHttpClient.java, +import okhttp3.mockwebserver.TlsNode;, +, +import static okhttp3.mockwebserver.internal.tls.TlsUtil.localhost;, +          TlsNode tlsNode = localhost();, +          SSLEngine engine = tlsNode.sslContext().createSSLEngine();, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/ApacheHttpClient.java, +import okhttp3.mockwebserver.TlsNode;, +import static okhttp3.mockwebserver.internal.tls.TlsUtil.localhost;, +, +      TlsNode tlsNode = localhost();, +          new Scheme("https", 443, new SSLSocketFactory(tlsNode.sslContext())));, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/Benchmark.java, +import okhttp3.mockwebserver.TlsNode;, +import static okhttp3.mockwebserver.internal.tls.TlsUtil.localhost;, +, +      TlsNode tlsNode = localhost();, +      server.useHttps(tlsNode.sslSocketFactory(), false);, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/NettyHttpClient.java, +import okhttp3.mockwebserver.TlsNode;, +, +import static okhttp3.mockwebserver.internal.tls.TlsUtil.localhost;, +          TlsNode tlsNode = localhost();, +          SSLEngine engine = tlsNode.sslContext().createSSLEngine();, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttp.java, +import okhttp3.mockwebserver.TlsNode;, +, +import static okhttp3.mockwebserver.internal.tls.TlsUtil.localhost;, +      TlsNode tlsNode = localhost();, +      SSLSocketFactory socketFactory = tlsNode.sslSocketFactory();, +          .sslSocketFactory(socketFactory, tlsNode.trustManager()), +++ b/benchmarks/src/main/java/okhttp3/benchmarks/ApacheHttpClient.java, +import okhttp3.mockwebserver.TlsNode;, +import static okhttp3.mockwebserver.internal.tls.TlsUtil.localhost;, +, +      TlsNode tlsNode = localhost();, +          new Scheme("https", 443, new SSLSocketFactory(tlsNode.sslContext())));, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/Benchmark.java, +import okhttp3.mockwebserver.TlsNode;, +import static okhttp3.mockwebserver.internal.tls.TlsUtil.localhost;, +, +      TlsNode tlsNode = localhost();, +      server.useHttps(tlsNode.sslSocketFactory(), false);, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/NettyHttpClient.java, +import okhttp3.mockwebserver.TlsNode;, +, +import static okhttp3.mockwebserver.internal.tls.TlsUtil.localhost;, +          TlsNode tlsNode = localhost();, +          SSLEngine engine = tlsNode.sslContext().createSSLEngine();, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttp.java, +import okhttp3.mockwebserver.TlsNode;, +, +import static okhttp3.mockwebserver.internal.tls.TlsUtil.localhost;, +      TlsNode tlsNode = localhost();, +      SSLSocketFactory socketFactory = tlsNode.sslSocketFactory();, +          .sslSocketFactory(socketFactory, tlsNode.trustManager()), +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttpAsync.java, +import okhttp3.mockwebserver.TlsNode;, +, +import static okhttp3.mockwebserver.internal.tls.TlsUtil.localhost;, +      TlsNode tlsNode = localhost();, +      SSLSocketFactory socketFactory = tlsNode.sslSocketFactory();, +          .sslSocketFactory(socketFactory, tlsNode.trustManager()), +++ b/benchmarks/src/main/java/okhttp3/benchmarks/ApacheHttpClient.java, +import okhttp3.mockwebserver.TlsNode;, +import static okhttp3.mockwebserver.internal.tls.TlsUtil.localhost;, +, +      TlsNode tlsNode = localhost();, +          new Scheme("https", 443, new SSLSocketFactory(tlsNode.sslContext())));, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/Benchmark.java]