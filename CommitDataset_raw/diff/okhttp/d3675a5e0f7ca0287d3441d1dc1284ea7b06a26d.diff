[+++ b/CHANGELOG.md, +++ b/CHANGELOG.md, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +      if (position == 0 || position > response.headers().size()) {, +      if (position > response.headers().size()) {, +        return null;, +      }, +++ b/CHANGELOG.md, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +      if (position == 0 || position > response.headers().size()) {, +      if (position > response.headers().size()) {, +        return null;, +      }, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +  @Test public void cancelTagImmediatelyAfterEnqueue() throws Exception {, +        .tag("request"), +    client.cancel("request");, +        client.cancel("request");, +    Request request = new Request.Builder().url(server.url("/a")).tag("request").build();, +      client.newCall(request).execute();, +        client.cancel("request B");, +    Request requestA = new Request.Builder().url(server.url("/a")).tag("request A").build();, +    client.newCall(requestA).enqueue(callback);, +    Request requestB = new Request.Builder().url(server.url("/b")).tag("request B").build();, +    client.newCall(requestB).enqueue(callback);, +, +    Request requestA = new Request.Builder().url(server.url("/a")).tag("request A").build();, +    Request request = new Request.Builder().url(server.url("/a")).tag("request A").build();, +++ b/CHANGELOG.md, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +      if (position == 0 || position > response.headers().size()) {, +      if (position > response.headers().size()) {, +        return null;, +      }, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +  @Test public void cancelTagImmediatelyAfterEnqueue() throws Exception {, +        .tag("request"), +    client.cancel("request");, +        client.cancel("request");, +    Request request = new Request.Builder().url(server.url("/a")).tag("request").build();, +      client.newCall(request).execute();, +        client.cancel("request B");, +    Request requestA = new Request.Builder().url(server.url("/a")).tag("request A").build();, +    client.newCall(requestA).enqueue(callback);, +    Request requestB = new Request.Builder().url(server.url("/b")).tag("request B").build();, +    client.newCall(requestB).enqueue(callback);, +, +    Request requestA = new Request.Builder().url(server.url("/a")).tag("request A").build();, +    Request request = new Request.Builder().url(server.url("/a")).tag("request A").build();, +++ b/okhttp-tests/src/test/java/okhttp3/DispatcherTest.java, +    client.newCall(newRequest("http://a/1", "tag1")).enqueue(callback);, +    client.newCall(newRequest("http://a/2")).enqueue(callback);, +    dispatcher.cancel("tag1");, +++ b/CHANGELOG.md, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +      if (position == 0 || position > response.headers().size()) {, +      if (position > response.headers().size()) {, +        return null;, +      }, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +  @Test public void cancelTagImmediatelyAfterEnqueue() throws Exception {, +        .tag("request"), +    client.cancel("request");, +        client.cancel("request");, +    Request request = new Request.Builder().url(server.url("/a")).tag("request").build();, +      client.newCall(request).execute();, +        client.cancel("request B");, +    Request requestA = new Request.Builder().url(server.url("/a")).tag("request A").build();, +    client.newCall(requestA).enqueue(callback);, +    Request requestB = new Request.Builder().url(server.url("/b")).tag("request B").build();, +    client.newCall(requestB).enqueue(callback);, +, +    Request requestA = new Request.Builder().url(server.url("/a")).tag("request A").build();, +    Request request = new Request.Builder().url(server.url("/a")).tag("request A").build();, +++ b/okhttp-tests/src/test/java/okhttp3/DispatcherTest.java, +    client.newCall(newRequest("http://a/1", "tag1")).enqueue(callback);, +    client.newCall(newRequest("http://a/2")).enqueue(callback);, +    dispatcher.cancel("tag1");, +++ /dev/null, +++ b/CHANGELOG.md, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +      if (position == 0 || position > response.headers().size()) {, +      if (position > response.headers().size()) {, +        return null;, +      }, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +  @Test public void cancelTagImmediatelyAfterEnqueue() throws Exception {, +        .tag("request"), +    client.cancel("request");, +        client.cancel("request");, +    Request request = new Request.Builder().url(server.url("/a")).tag("request").build();, +      client.newCall(request).execute();, +        client.cancel("request B");, +    Request requestA = new Request.Builder().url(server.url("/a")).tag("request A").build();, +    client.newCall(requestA).enqueue(callback);, +    Request requestB = new Request.Builder().url(server.url("/b")).tag("request B").build();, +    client.newCall(requestB).enqueue(callback);, +, +    Request requestA = new Request.Builder().url(server.url("/a")).tag("request A").build();, +    Request request = new Request.Builder().url(server.url("/a")).tag("request A").build();]