[+++ b/okhttp-tests/src/test/java/okhttp3/HeadersTest.java, +  @Test public void headersAddAll() {, +    Headers sourceHeaders = new Headers.Builder(), +        .add("A", "aa"), +        .add("a", "aa"), +        .add("B", "bb"), +        .build();, +    Headers headers = new Headers.Builder(), +        .add("A", "a"), +        .addAll(sourceHeaders), +        .add("C", "c"), +        .build();, +    assertEquals("A: a\nA: aa\na: aa\nB: bb\nC: c\n", headers.toString());, +  }, +, +++ b/okhttp-tests/src/test/java/okhttp3/HeadersTest.java, +  @Test public void headersAddAll() {, +    Headers sourceHeaders = new Headers.Builder(), +        .add("A", "aa"), +        .add("a", "aa"), +        .add("B", "bb"), +        .build();, +    Headers headers = new Headers.Builder(), +        .add("A", "a"), +        .addAll(sourceHeaders), +        .add("C", "c"), +        .build();, +    assertEquals("A: a\nA: aa\na: aa\nB: bb\nC: c\n", headers.toString());, +  }, +, +++ b/okhttp/src/main/java/okhttp3/Headers.java, +    /**, +     * Add a header with the specified name and value. Does validation of header names and values., +     */, +     * Adds all headers from an existing collection. Does validation of header names and values., +     */, +    public Builder addAll(Headers headers) {, +      int size = headers.size();, +      for (int i = 0; i < size; i++) {, +        addLenient(headers.name(i), headers.value(i));, +      }, +, +      return this;, +    }, +, +    /**]