[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +      // TODO: support HTTP/2.0., +      // 17, 'H', 'T', 'T', 'P', '-', 'd', 'r', 'a', 'f', 't', '-', '0', '4', '/', '2', '.', '0',, +  private static final byte[] HTTP_20_DRAFT_04 = new byte[] {, +      'H', 'T', 'T', 'P', '-', 'd', 'r', 'a', 'f', 't', '-', '0', '4', '/', '2', '.', '0', +  };, +            } else if (Arrays.equals(selectedProtocol, HTTP_20_DRAFT_04)) {, +              transport = Transport.HTTP_20_DRAFT_04;, +        if (transport == Transport.SPDY_3 || transport == Transport.HTTP_20_DRAFT_04) {, +          SpdyConnection.Builder builder = new SpdyConnection.Builder(false, socket), +              .handler(spdySocketHandler);, +          if (transport == Transport.SPDY_3) {, +            builder.spdy3();, +          } else {, +            builder.http20Draft04();, +          }, +          SpdyConnection spdyConnection = builder.build();, +          spdyConnection.sendConnectionHeader();, +    HTTP_11, SPDY_3, HTTP_20_DRAFT_04, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +      // TODO: support HTTP/2.0., +      // 17, 'H', 'T', 'T', 'P', '-', 'd', 'r', 'a', 'f', 't', '-', '0', '4', '/', '2', '.', '0',, +  private static final byte[] HTTP_20_DRAFT_04 = new byte[] {, +      'H', 'T', 'T', 'P', '-', 'd', 'r', 'a', 'f', 't', '-', '0', '4', '/', '2', '.', '0', +  };, +            } else if (Arrays.equals(selectedProtocol, HTTP_20_DRAFT_04)) {, +              transport = Transport.HTTP_20_DRAFT_04;, +        if (transport == Transport.SPDY_3 || transport == Transport.HTTP_20_DRAFT_04) {, +          SpdyConnection.Builder builder = new SpdyConnection.Builder(false, socket), +              .handler(spdySocketHandler);, +          if (transport == Transport.SPDY_3) {, +            builder.spdy3();, +          } else {, +            builder.http20Draft04();, +          }, +          SpdyConnection spdyConnection = builder.build();, +          spdyConnection.sendConnectionHeader();, +    HTTP_11, SPDY_3, HTTP_20_DRAFT_04, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft04.java, +/*, + * Copyright (C) 2013 Square, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package com.squareup.okhttp.internal.spdy;, +, +import java.io.DataInputStream;, +import java.io.DataOutputStream;, +import java.io.IOException;, +import java.io.InputStream;, +import java.io.OutputStream;, +import java.util.List;, +, +final class Http20Draft04 implements Variant {, +  @Override public SpdyReader newReader(InputStream in) {, +    return new Reader(in);, +  }, +, +  @Override public SpdyWriter newWriter(OutputStream out) {, +    return new Writer(out);, +  }, +, +  static final class Reader implements SpdyReader {, +    private final DataInputStream in;, +, +    Reader(InputStream in) {, +      this.in = new DataInputStream(in);, +    }, +, +    @Override public boolean nextFrame(Handler handler) throws IOException {, +      return false;, +    }, +, +    @Override public void close() throws IOException {, +      in.close();, +    }, +  }, +, +  static final class Writer implements SpdyWriter {, +    private final DataOutputStream out;, +, +    Writer(OutputStream out) {, +      this.out = new DataOutputStream(out);, +    }, +, +    @Override public synchronized void writeFrame(byte[] data, int offset, int length), +        throws IOException {, +      // TODO: this method no longer makes sense; the raw frame can't support all variants!, +      throw new UnsupportedOperationException("TODO");, +    }]