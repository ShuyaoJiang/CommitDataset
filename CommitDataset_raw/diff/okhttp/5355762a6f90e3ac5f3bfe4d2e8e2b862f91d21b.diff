[+++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +    server.start();, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +    server.start();, +++ b/mockwebserver/README.md, +  server.start();, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +    server.start();, +++ b/mockwebserver/README.md, +  server.start();, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +    if (port == -1) throw new IllegalStateException("Call start() before getPort()");, +    if (inetAddress == null) throw new IllegalStateException("Call start() before getHostName()");, +    if (inetAddress == null) {, +      throw new IllegalStateException("Call start() before toProxyAddress()");, +    }, +  /** @deprecated Use {@link #start()}. */, +    start();, +  }, +, +  /** @deprecated Use {@link #start(int)}. */, +  public void play(int port) throws IOException {, +    start(port);, +  }, +, +  /** Equivalent to {@code start(0)}. */, +  public void start() throws IOException {, +    start(0);, +   * Starts the server., +  public void start(int port) throws IOException {, +    if (executor != null) throw new IllegalStateException("start() already called");, +   * Transfer bytes from {@code in} to {@code out} until either {@code length}, +   * bytes have been transferred or {@code in} is exhausted. The transfer is, +      BufferedSink sink, long limit) throws IOException {, +        long toRead = Math.min(Math.min(2048, limit), bytesPerPeriod - b);, +        if (toRead > 0) {, +          limit -= read;, +        }, +        if (limit == 0) return;, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +    server.start();, +++ b/mockwebserver/README.md, +  server.start();, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +    if (port == -1) throw new IllegalStateException("Call start() before getPort()");, +    if (inetAddress == null) throw new IllegalStateException("Call start() before getHostName()");, +    if (inetAddress == null) {, +      throw new IllegalStateException("Call start() before toProxyAddress()");, +    }, +  /** @deprecated Use {@link #start()}. */, +    start();, +  }, +, +  /** @deprecated Use {@link #start(int)}. */, +  public void play(int port) throws IOException {, +    start(port);, +  }, +, +  /** Equivalent to {@code start(0)}. */, +  public void start() throws IOException {, +    start(0);, +   * Starts the server., +  public void start(int port) throws IOException {, +    if (executor != null) throw new IllegalStateException("start() already called");, +   * Transfer bytes from {@code in} to {@code out} until either {@code length}, +   * bytes have been transferred or {@code in} is exhausted. The transfer is, +      BufferedSink sink, long limit) throws IOException {, +        long toRead = Math.min(Math.min(2048, limit), bytesPerPeriod - b);, +        if (toRead > 0) {, +          limit -= read;, +        }, +        if (limit == 0) return;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRule.java, +      server.start();, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +    server.start();, +++ b/mockwebserver/README.md, +  server.start();, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +    if (port == -1) throw new IllegalStateException("Call start() before getPort()");, +    if (inetAddress == null) throw new IllegalStateException("Call start() before getHostName()");, +    if (inetAddress == null) {, +      throw new IllegalStateException("Call start() before toProxyAddress()");, +    }, +  /** @deprecated Use {@link #start()}. */, +    start();, +  }, +, +  /** @deprecated Use {@link #start(int)}. */, +  public void play(int port) throws IOException {, +    start(port);, +  }, +, +  /** Equivalent to {@code start(0)}. */, +  public void start() throws IOException {, +    start(0);, +   * Starts the server., +  public void start(int port) throws IOException {, +    if (executor != null) throw new IllegalStateException("start() already called");, +   * Transfer bytes from {@code in} to {@code out} until either {@code length}]