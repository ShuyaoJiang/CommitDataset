[+++ b/README.md, +  <version>2.0.0</version>, +or Gradle:, +```groovy, +compile 'com.squareup.okhttp:okhttp:2.0.0', +```, +  <version>2.0.0</version>, +or Gradle:, +```groovy, +testCompile 'com.squareup.okhttp:mockwebserver:2.0.0', +```, +, +++ b/README.md, +  <version>2.0.0</version>, +or Gradle:, +```groovy, +compile 'com.squareup.okhttp:okhttp:2.0.0', +```, +  <version>2.0.0</version>, +or Gradle:, +```groovy, +testCompile 'com.squareup.okhttp:mockwebserver:2.0.0', +```, +, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +        String[] parts = header.split(":", 2);, +++ b/README.md, +  <version>2.0.0</version>, +or Gradle:, +```groovy, +compile 'com.squareup.okhttp:okhttp:2.0.0', +```, +  <version>2.0.0</version>, +or Gradle:, +```groovy, +testCompile 'com.squareup.okhttp:mockwebserver:2.0.0', +```, +, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +        String[] parts = header.split(":", 2);, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +  @Test public void headerSplitWithDate() {, +    Request request = fromArgs("-H", "If-Modified-Since: Mon, 18 Aug 2014 15:16:06 GMT",, +        "http://example.com").createRequest();, +    assertEquals("Mon, 18 Aug 2014 15:16:06 GMT", request.header("If-Modified-Since"));, +  }, +, +++ b/README.md, +  <version>2.0.0</version>, +or Gradle:, +```groovy, +compile 'com.squareup.okhttp:okhttp:2.0.0', +```, +  <version>2.0.0</version>, +or Gradle:, +```groovy, +testCompile 'com.squareup.okhttp:mockwebserver:2.0.0', +```, +, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +        String[] parts = header.split(":", 2);, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +  @Test public void headerSplitWithDate() {, +    Request request = fromArgs("-H", "If-Modified-Since: Mon, 18 Aug 2014 15:16:06 GMT",, +        "http://example.com").createRequest();, +    assertEquals("Mon, 18 Aug 2014 15:16:06 GMT", request.header("If-Modified-Since"));, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +    for (int i = 302; i <= 307; ++i) {, +    assertCached(true, 308);, +++ b/README.md, +  <version>2.0.0</version>, +or Gradle:, +```groovy, +compile 'com.squareup.okhttp:okhttp:2.0.0', +```, +  <version>2.0.0</version>, +or Gradle:, +```groovy, +testCompile 'com.squareup.okhttp:mockwebserver:2.0.0', +```, +, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +        String[] parts = header.split(":", 2);, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +  @Test public void headerSplitWithDate() {, +    Request request = fromArgs("-H", "If-Modified-Since: Mon, 18 Aug 2014 15:16:06 GMT",, +        "http://example.com").createRequest();, +    assertEquals("Mon, 18 Aug 2014 15:16:06 GMT", request.header("If-Modified-Since"));, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +    for (int i = 302; i <= 307; ++i) {, +    assertCached(true, 308);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void cancelInFlightBeforeResponseReadThrowsIOE() throws Exception {, +    server.setDispatcher(new Dispatcher() {, +      @Override public MockResponse dispatch(RecordedRequest request) {, +        client.cancel("request");]