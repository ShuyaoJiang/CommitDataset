[+++ /dev/null, +++ /dev/null, +++ b/src/main/java/com/squareup/okhttp/OkHttpClient.java, +            return new HttpURLConnectionImpl(url, 80, proxy);, +            return new HttpsURLConnectionImpl(url, 443, proxy);, +++ /dev/null, +++ b/src/main/java/com/squareup/okhttp/OkHttpClient.java, +            return new HttpURLConnectionImpl(url, 80, proxy);, +            return new HttpsURLConnectionImpl(url, 443, proxy);, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/com/squareup/okhttp/OkHttpClient.java, +            return new HttpURLConnectionImpl(url, 80, proxy);, +            return new HttpsURLConnectionImpl(url, 443, proxy);, +++ /dev/null, +++ b/src/main/java/com/squareup/okhttp/internal/net/http/HttpEngine.java, +import com.squareup.okhttp.internal.util.ExtendedResponseCache;, +import com.squareup.okhttp.internal.util.ResponseSource;, +import java.net.ProxySelector;, +import java.net.ResponseCache;, +    private final ResponseCache responseCache = ResponseCache.getDefault();, +        if (responseCache instanceof ExtendedResponseCache) {, +            ((ExtendedResponseCache) responseCache).trackResponse(responseSource);, +        if (!policy.getUseCaches() || responseCache == null) {, +        CacheResponse candidate = responseCache.get(uri, method,, +            routeSelector = new RouteSelector(address, uri, ProxySelector.getDefault(), Dns.DEFAULT);, +        if (!policy.getUseCaches() || responseCache == null) {, +        cacheRequest = responseCache.put(uri, getHttpConnectionToCache());, +        CookieHandler cookieHandler = CookieHandler.getDefault();, +                if (responseCache instanceof ExtendedResponseCache) {, +                    ExtendedResponseCache httpResponseCache = (ExtendedResponseCache) responseCache;, +++ /dev/null, +++ b/src/main/java/com/squareup/okhttp/OkHttpClient.java, +            return new HttpURLConnectionImpl(url, 80, proxy);, +            return new HttpsURLConnectionImpl(url, 443, proxy);, +++ /dev/null, +++ b/src/main/java/com/squareup/okhttp/internal/net/http/HttpEngine.java, +import com.squareup.okhttp.internal.util.ExtendedResponseCache;, +import com.squareup.okhttp.internal.util.ResponseSource;, +import java.net.ProxySelector;, +import java.net.ResponseCache;, +    private final ResponseCache responseCache = ResponseCache.getDefault();, +        if (responseCache instanceof ExtendedResponseCache) {, +            ((ExtendedResponseCache) responseCache).trackResponse(responseSource);, +        if (!policy.getUseCaches() || responseCache == null) {, +        CacheResponse candidate = responseCache.get(uri, method,, +            routeSelector = new RouteSelector(address, uri, ProxySelector.getDefault(), Dns.DEFAULT);, +        if (!policy.getUseCaches() || responseCache == null) {, +        cacheRequest = responseCache.put(uri, getHttpConnectionToCache());, +        CookieHandler cookieHandler = CookieHandler.getDefault();, +                if (responseCache instanceof ExtendedResponseCache) {, +                    ExtendedResponseCache httpResponseCache = (ExtendedResponseCache) responseCache;, +++ b/src/main/java/com/squareup/okhttp/internal/net/http/HttpResponseCache.java, +import com.squareup.okhttp.internal.util.ExtendedResponseCache;, +import com.squareup.okhttp.internal.util.ResponseSource;, +++ /dev/null, +++ b/src/main/java/com/squareup/okhttp/OkHttpClient.java, +            return new HttpURLConnectionImpl(url, 80, proxy);, +            return new HttpsURLConnectionImpl(url, 443, proxy);, +++ /dev/null, +++ b/src/main/java/com/squareup/okhttp/internal/net/http/HttpEngine.java, +import com.squareup.okhttp.internal.util.ExtendedResponseCache;, +import com.squareup.okhttp.internal.util.ResponseSource;, +import java.net.ProxySelector;, +import java.net.ResponseCache;, +    private final ResponseCache responseCache = ResponseCache.getDefault();, +        if (responseCache instanceof ExtendedResponseCache) {, +            ((ExtendedResponseCache) responseCache).trackResponse(responseSource);, +        if (!policy.getUseCaches() || responseCache == null) {, +        CacheResponse candidate = responseCache.get(uri, method,, +            routeSelector = new RouteSelector(address, uri, ProxySelector.getDefault(), Dns.DEFAULT);, +        if (!policy.getUseCaches() || responseCache == null) {, +        cacheRequest = responseCache.put(uri, getHttpConnectionToCache());, +        CookieHandler cookieHandler = CookieHandler.getDefault();, +                if (responseCache instanceof ExtendedResponseCache) {, +                    ExtendedResponseCache httpResponseCache = (ExtendedResponseCache) responseCache;, +++ b/src/main/java/com/squareup/okhttp/internal/net/http/HttpResponseCache.java, +import com.squareup.okhttp.internal.util.ExtendedResponseCache;, +import com.squareup.okhttp.internal.util.ResponseSource;, +++ b/src/main/java/com/squareup/okhttp/internal/net/http/HttpTransport.java, +        CookieHandler cookieHandler = CookieHandler.getDefault();, +++ /dev/null, +++ b/src/main/java/com/squareup/okhttp/OkHttpClient.java, +            return new HttpURLConnectionImpl(url, 80, proxy);, +            return new HttpsURLConnectionImpl(url, 443, proxy);, +++ /dev/null, +++ b/src/main/java/com/squareup/okhttp/internal/net/http/HttpEngine.java, +import com.squareup.okhttp.internal.util.ExtendedResponseCache;, +import com.squareup.okhttp.internal.util.ResponseSource;, +import java.net.ProxySelector;, +import java.net.ResponseCache;, +    private final ResponseCache responseCache = ResponseCache.getDefault();, +        if (responseCache instanceof ExtendedResponseCache) {, +            ((ExtendedResponseCache) responseCache).trackResponse(responseSource);, +        if (!policy.getUseCaches() || responseCache == null) {, +        CacheResponse candidate = responseCache.get(uri, method,, +            routeSelector = new RouteSelector(address, uri, ProxySelector.getDefault(), Dns.DEFAULT);, +        if (!policy.getUseCaches() || responseCache == null) {, +        cacheRequest = responseCache.put(uri, getHttpConnectionToCache());, +        CookieHandler cookieHandler = CookieHandler.getDefault();]