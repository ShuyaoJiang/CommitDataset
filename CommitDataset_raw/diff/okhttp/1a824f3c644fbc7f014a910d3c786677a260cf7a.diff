[+++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +import java.io.UnsupportedEncodingException;, +import java.security.MessageDigest;, +import java.security.NoSuchAlgorithmException;, +  private static final char[] DIGITS =, +      { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };, +, +  /** Returns a 32 character string containing a hash of {@code s}. */, +  public static String hash(String s) {, +    try {, +      MessageDigest messageDigest = MessageDigest.getInstance("MD5");, +      byte[] md5bytes = messageDigest.digest(s.getBytes("UTF-8"));, +      return bytesToHexString(md5bytes);, +    } catch (NoSuchAlgorithmException e) {, +      throw new AssertionError(e);, +    } catch (UnsupportedEncodingException e) {, +      throw new AssertionError(e);, +    }, +  }, +, +  private static String bytesToHexString(byte[] bytes) {, +    char[] digits = DIGITS;, +    char[] buf = new char[bytes.length * 2];, +    int c = 0;, +    for (byte b : bytes) {, +      buf[c++] = digits[(b >> 4) & 0xf];, +      buf[c++] = digits[b & 0xf];, +    }, +    return new String(buf);, +  }, +, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +import java.io.UnsupportedEncodingException;, +import java.security.MessageDigest;, +import java.security.NoSuchAlgorithmException;, +  private static final char[] DIGITS =, +      { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };, +, +  /** Returns a 32 character string containing a hash of {@code s}. */, +  public static String hash(String s) {, +    try {, +      MessageDigest messageDigest = MessageDigest.getInstance("MD5");, +      byte[] md5bytes = messageDigest.digest(s.getBytes("UTF-8"));, +      return bytesToHexString(md5bytes);, +    } catch (NoSuchAlgorithmException e) {, +      throw new AssertionError(e);, +    } catch (UnsupportedEncodingException e) {, +      throw new AssertionError(e);, +    }, +  }, +, +  private static String bytesToHexString(byte[] bytes) {, +    char[] digits = DIGITS;, +    char[] buf = new char[bytes.length * 2];, +    int c = 0;, +    for (byte b : bytes) {, +      buf[c++] = digits[(b >> 4) & 0xf];, +      buf[c++] = digits[b & 0xf];, +    }, +    return new String(buf);, +  }, +, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +import java.io.UnsupportedEncodingException;, +import java.security.MessageDigest;, +import java.security.NoSuchAlgorithmException;, +  private static final char[] DIGITS =, +      { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };, +, +  /** Returns a 32 character string containing a hash of {@code s}. */, +  public static String hash(String s) {, +    try {, +      MessageDigest messageDigest = MessageDigest.getInstance("MD5");, +      byte[] md5bytes = messageDigest.digest(s.getBytes("UTF-8"));, +      return bytesToHexString(md5bytes);, +    } catch (NoSuchAlgorithmException e) {, +      throw new AssertionError(e);, +    } catch (UnsupportedEncodingException e) {, +      throw new AssertionError(e);, +    }, +  }, +, +  private static String bytesToHexString(byte[] bytes) {, +    char[] digits = DIGITS;, +    char[] buf = new char[bytes.length * 2];, +    int c = 0;, +    for (byte b : bytes) {, +      buf[c++] = digits[(b >> 4) & 0xf];, +      buf[c++] = digits[b & 0xf];, +    }, +    return new String(buf);, +  }, +, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +    return Util.hash(uri.toString());, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +import java.io.UnsupportedEncodingException;, +import java.security.MessageDigest;]