[+++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/UrlConnection.java, +  static class UrlConnectionRequest implements Runnable {, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/UrlConnection.java, +  static class UrlConnectionRequest implements Runnable {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import com.squareup.okhttp.internal.Util;, +    InputStream in = new FileInputStream(file);, +    try {, +    } finally {, +      Util.closeQuietly(in);, +      Util.closeQuietly(out);, +    }, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/UrlConnection.java, +  static class UrlConnectionRequest implements Runnable {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import com.squareup.okhttp.internal.Util;, +    InputStream in = new FileInputStream(file);, +    try {, +    } finally {, +      Util.closeQuietly(in);, +      Util.closeQuietly(out);, +    }, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/UrlConnection.java, +  static class UrlConnectionRequest implements Runnable {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import com.squareup.okhttp.internal.Util;, +    InputStream in = new FileInputStream(file);, +    try {, +    } finally {, +      Util.closeQuietly(in);, +      Util.closeQuietly(out);, +    }, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/UrlConnection.java, +  static class UrlConnectionRequest implements Runnable {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import com.squareup.okhttp.internal.Util;, +    InputStream in = new FileInputStream(file);, +    try {, +    } finally {, +      Util.closeQuietly(in);, +      Util.closeQuietly(out);, +    }, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/bytes/ByteString.java, +    if (ascii == this.utf8) { // not using String.equals to avoid looping twice., +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/UrlConnection.java, +  static class UrlConnectionRequest implements Runnable {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import com.squareup.okhttp.internal.Util;, +    InputStream in = new FileInputStream(file);, +    try {, +    } finally {, +      Util.closeQuietly(in);, +      Util.closeQuietly(out);, +    }, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/bytes/ByteString.java, +    if (ascii == this.utf8) { // not using String.equals to avoid looping twice., +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft09.java, +    void frameHeader(int length, byte type, byte flags, int streamId) throws IOException {, +      if ((streamId & 0x80000000) != 0) throw illegalArgument("reserved bit set: %s", streamId);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/UrlConnection.java, +  static class UrlConnectionRequest implements Runnable {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import com.squareup.okhttp.internal.Util;, +    InputStream in = new FileInputStream(file);, +    try {, +    } finally {, +      Util.closeQuietly(in);, +      Util.closeQuietly(out);, +    }, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/bytes/ByteString.java, +    if (ascii == this.utf8) { // not using String.equals to avoid looping twice., +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft09.java, +    void frameHeader(int length, byte type, byte flags, int streamId) throws IOException {, +      if ((streamId & 0x80000000) != 0) throw illegalArgument("reserved bit set: %s", streamId);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java, +      // int slot = s3 & 0xff;, +      boolean ack = client == ((id & 1) == 1);, +      boolean payloadIsReply = client != ((payload1 & 1) == 1);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/UrlConnection.java, +  static class UrlConnectionRequest implements Runnable {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import com.squareup.okhttp.internal.Util;, +    InputStream in = new FileInputStream(file);, +    try {, +    } finally {, +      Util.closeQuietly(in);, +      Util.closeQuietly(out);, +    }, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/bytes/ByteString.java]