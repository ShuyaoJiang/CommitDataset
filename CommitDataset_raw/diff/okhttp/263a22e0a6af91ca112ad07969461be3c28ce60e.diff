[+++ b/src/main/java/com/google/mockwebserver/MockResponse.java, +import java.util.Iterator;, +    private int bytesPerSecond = Integer.MAX_VALUE;, +    public MockResponse addHeader(String name, Object value) {, +        return addHeader(name + ": " + String.valueOf(value));, +    }, +, +    public MockResponse setHeader(String name, Object value) {, +        removeHeader(name);, +        return addHeader(name, value);, +    }, +, +    public MockResponse removeHeader(String name) {, +        name += ": ";, +        for (Iterator<String> i = headers.iterator(); i.hasNext();) {, +            String header = i.next();, +            if (name.regionMatches(true, 0, header, 0, name.length())) {, +                i.remove();, +            }, +        }, +        return this;, +    }, +, +    public int getBytesPerSecond() {, +        return bytesPerSecond;, +    }, +, +    /**, +     * Set simulated network speed, in bytes per second., +     */, +    public MockResponse setBytesPerSecond(int bytesPerSecond) {, +        this.bytesPerSecond = bytesPerSecond;, +        return this;, +    }, +, +++ b/src/main/java/com/google/mockwebserver/MockResponse.java, +import java.util.Iterator;, +    private int bytesPerSecond = Integer.MAX_VALUE;, +    public MockResponse addHeader(String name, Object value) {, +        return addHeader(name + ": " + String.valueOf(value));, +    }, +, +    public MockResponse setHeader(String name, Object value) {, +        removeHeader(name);, +        return addHeader(name, value);, +    }, +, +    public MockResponse removeHeader(String name) {, +        name += ": ";, +        for (Iterator<String> i = headers.iterator(); i.hasNext();) {, +            String header = i.next();, +            if (name.regionMatches(true, 0, header, 0, name.length())) {, +                i.remove();, +            }, +        }, +        return this;, +    }, +, +    public int getBytesPerSecond() {, +        return bytesPerSecond;, +    }, +, +    /**, +     * Set simulated network speed, in bytes per second., +     */, +    public MockResponse setBytesPerSecond(int bytesPerSecond) {, +        this.bytesPerSecond = bytesPerSecond;, +        return this;, +    }, +, +++ b/src/main/java/com/google/mockwebserver/MockWebServer.java, +                logger.info("Received request: " + request + " and responded: " + response);, +, +        byte[] body = response.getBody();, +        int bytesPerSecond = response.getBytesPerSecond();, +, +        for (int offset = 0; offset < body.length; offset += bytesPerSecond) {, +            int count = Math.min(body.length - offset, bytesPerSecond);, +            out.write(body, offset, count);, +            out.flush();, +, +            if (offset + count < body.length) {, +                try {, +                    Thread.sleep(1000);, +                } catch (InterruptedException e) {, +                    throw new AssertionError();, +                }, +            }, +        }, +++ b/src/main/java/com/google/mockwebserver/MockResponse.java, +import java.util.Iterator;, +    private int bytesPerSecond = Integer.MAX_VALUE;, +    public MockResponse addHeader(String name, Object value) {, +        return addHeader(name + ": " + String.valueOf(value));, +    }, +, +    public MockResponse setHeader(String name, Object value) {, +        removeHeader(name);, +        return addHeader(name, value);, +    }]