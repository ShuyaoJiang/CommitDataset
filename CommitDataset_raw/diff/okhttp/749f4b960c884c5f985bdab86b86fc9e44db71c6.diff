[+++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +        ? Util.EMPTY_REQUEST, +        ? Util.EMPTY_REQUEST, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +        ? Util.EMPTY_REQUEST, +        ? Util.EMPTY_REQUEST, +++ b/okhttp-apache/src/main/java/okhttp3/apache/OkApacheClient.java, +import okhttp3.internal.Util;, +        body = Util.EMPTY_REQUEST;, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +        ? Util.EMPTY_REQUEST, +        ? Util.EMPTY_REQUEST, +++ b/okhttp-apache/src/main/java/okhttp3/apache/OkApacheClient.java, +import okhttp3.internal.Util;, +        body = Util.EMPTY_REQUEST;, +++ b/okhttp-ws-tests/src/test/java/okhttp3/ws/WebSocketCallTest.java, +import okhttp3.Interceptor;, +import static org.junit.Assert.assertNotNull;, +  private OkHttpClient client = new OkHttpClient.Builder(), +      .addInterceptor(new Interceptor() {, +        @Override public Response intercept(Chain chain) throws IOException {, +          Response response = chain.proceed(chain.request());, +          assertNotNull(response.body()); // Ensure application interceptors never see a null body., +          return response;, +        }, +      }), +      .build();, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +        ? Util.EMPTY_REQUEST, +        ? Util.EMPTY_REQUEST, +++ b/okhttp-apache/src/main/java/okhttp3/apache/OkApacheClient.java, +import okhttp3.internal.Util;, +        body = Util.EMPTY_REQUEST;, +++ b/okhttp-ws-tests/src/test/java/okhttp3/ws/WebSocketCallTest.java, +import okhttp3.Interceptor;, +import static org.junit.Assert.assertNotNull;, +  private OkHttpClient client = new OkHttpClient.Builder(), +      .addInterceptor(new Interceptor() {, +        @Override public Response intercept(Chain chain) throws IOException {, +          Response response = chain.proceed(chain.request());, +          assertNotNull(response.body()); // Ensure application interceptors never see a null body., +          return response;, +        }, +      }), +      .build();, +++ b/okhttp/src/main/java/okhttp3/Request.java, +import okhttp3.internal.Util;, +      return delete(Util.EMPTY_REQUEST);, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +        ? Util.EMPTY_REQUEST, +        ? Util.EMPTY_REQUEST, +++ b/okhttp-apache/src/main/java/okhttp3/apache/OkApacheClient.java, +import okhttp3.internal.Util;, +        body = Util.EMPTY_REQUEST;, +++ b/okhttp-ws-tests/src/test/java/okhttp3/ws/WebSocketCallTest.java, +import okhttp3.Interceptor;, +import static org.junit.Assert.assertNotNull;, +  private OkHttpClient client = new OkHttpClient.Builder(), +      .addInterceptor(new Interceptor() {, +        @Override public Response intercept(Chain chain) throws IOException {, +          Response response = chain.proceed(chain.request());, +          assertNotNull(response.body()); // Ensure application interceptors never see a null body., +          return response;, +        }, +      }), +      .build();, +++ b/okhttp/src/main/java/okhttp3/Request.java, +import okhttp3.internal.Util;, +      return delete(Util.EMPTY_REQUEST);, +++ b/okhttp/src/main/java/okhttp3/internal/Util.java, +import okhttp3.RequestBody;, +import okhttp3.ResponseBody;, +  public static final ResponseBody EMPTY_RESPONSE = ResponseBody.create(null, EMPTY_BYTE_ARRAY);, +  public static final RequestBody EMPTY_REQUEST = RequestBody.create(null, EMPTY_BYTE_ARRAY);, +, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +        ? Util.EMPTY_REQUEST, +        ? Util.EMPTY_REQUEST, +++ b/okhttp-apache/src/main/java/okhttp3/apache/OkApacheClient.java, +import okhttp3.internal.Util;, +        body = Util.EMPTY_REQUEST;, +++ b/okhttp-ws-tests/src/test/java/okhttp3/ws/WebSocketCallTest.java, +import okhttp3.Interceptor;, +import static org.junit.Assert.assertNotNull;, +  private OkHttpClient client = new OkHttpClient.Builder(), +      .addInterceptor(new Interceptor() {, +        @Override public Response intercept(Chain chain) throws IOException {, +          Response response = chain.proceed(chain.request());, +          assertNotNull(response.body()); // Ensure application interceptors never see a null body., +          return response;, +        }, +      }), +      .build();, +++ b/okhttp/src/main/java/okhttp3/Request.java, +import okhttp3.internal.Util;, +      return delete(Util.EMPTY_REQUEST);, +++ b/okhttp/src/main/java/okhttp3/internal/Util.java, +import okhttp3.RequestBody;, +import okhttp3.ResponseBody;, +  public static final ResponseBody EMPTY_RESPONSE = ResponseBody.create(null, EMPTY_BYTE_ARRAY);]