[+++ b/CHANGELOG.md, +++ b/CHANGELOG.md, +++ b/README.md, +  <version>3.4.2</version>, +compile 'com.squareup.okhttp3:okhttp:3.4.2', +  <version>3.4.2</version>, +testCompile 'com.squareup.okhttp3:mockwebserver:3.4.2', +++ b/CHANGELOG.md, +++ b/README.md, +  <version>3.4.2</version>, +compile 'com.squareup.okhttp3:okhttp:3.4.2', +  <version>3.4.2</version>, +testCompile 'com.squareup.okhttp3:mockwebserver:3.4.2', +++ b/okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java, +    assertEquals("http://host/...", baseWithPasswordAndUsername.redact());, +    assertEquals("http://host/...", baseWithUsernameOnly.redact());, +    assertEquals("http://host/...", baseWithPasswordOnly.redact());, +++ b/CHANGELOG.md, +++ b/README.md, +  <version>3.4.2</version>, +compile 'com.squareup.okhttp3:okhttp:3.4.2', +  <version>3.4.2</version>, +testCompile 'com.squareup.okhttp3:mockwebserver:3.4.2', +++ b/okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java, +    assertEquals("http://host/...", baseWithPasswordAndUsername.redact());, +    assertEquals("http://host/...", baseWithUsernameOnly.redact());, +    assertEquals("http://host/...", baseWithPasswordOnly.redact());, +++ b/okhttp-tests/src/test/java/okhttp3/WebSocketHttpTest.java, +    serverListener.assertClosing(1000, "");, +    server.close(1000, null);, +, +++ b/CHANGELOG.md, +++ b/README.md, +  <version>3.4.2</version>, +compile 'com.squareup.okhttp3:okhttp:3.4.2', +  <version>3.4.2</version>, +testCompile 'com.squareup.okhttp3:mockwebserver:3.4.2', +++ b/okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java, +    assertEquals("http://host/...", baseWithPasswordAndUsername.redact());, +    assertEquals("http://host/...", baseWithUsernameOnly.redact());, +    assertEquals("http://host/...", baseWithPasswordOnly.redact());, +++ b/okhttp-tests/src/test/java/okhttp3/WebSocketHttpTest.java, +    serverListener.assertClosing(1000, "");, +    server.close(1000, null);, +, +++ b/okhttp/src/main/java/okhttp3/HttpUrl.java, +   * Returns a string with containing this URL with its username, password, query, and fragment, +   * stripped, and its path replaced with {@code /...}. For example, redacting {@code, +   * http://username:password@example.com/path} returns {@code http://example.com/...}., +  public String redact() {, +    return newBuilder("/..."), +        .username(""), +        .password(""), +        .build(), +        .toString();, +++ b/CHANGELOG.md, +++ b/README.md, +  <version>3.4.2</version>, +compile 'com.squareup.okhttp3:okhttp:3.4.2', +  <version>3.4.2</version>, +testCompile 'com.squareup.okhttp3:mockwebserver:3.4.2', +++ b/okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java, +    assertEquals("http://host/...", baseWithPasswordAndUsername.redact());, +    assertEquals("http://host/...", baseWithUsernameOnly.redact());, +    assertEquals("http://host/...", baseWithPasswordOnly.redact());, +++ b/okhttp-tests/src/test/java/okhttp3/WebSocketHttpTest.java, +    serverListener.assertClosing(1000, "");, +    server.close(1000, null);, +, +++ b/okhttp/src/main/java/okhttp3/HttpUrl.java, +   * Returns a string with containing this URL with its username, password, query, and fragment, +   * stripped, and its path replaced with {@code /...}. For example, redacting {@code, +   * http://username:password@example.com/path} returns {@code http://example.com/...}., +  public String redact() {, +    return newBuilder("/..."), +        .username(""), +        .password(""), +        .build(), +        .toString();, +++ b/okhttp/src/main/java/okhttp3/RealCall.java, +    return originalRequest.url().redact();]