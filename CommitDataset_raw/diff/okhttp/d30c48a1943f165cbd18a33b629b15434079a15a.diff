[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +    MockWebServer redirectTarget = new MockWebServer();, +    redirectTarget.enqueue(new MockResponse().setBody("Page 2"));, +    redirectTarget.play();, +        .addHeader("Location: " + redirectTarget.getUrl("/")));, +    RecordedRequest request2 = redirectTarget.takeRequest();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +    MockWebServer redirectTarget = new MockWebServer();, +    redirectTarget.enqueue(new MockResponse().setBody("Page 2"));, +    redirectTarget.play();, +        .addHeader("Location: " + redirectTarget.getUrl("/")));, +    RecordedRequest request2 = redirectTarget.takeRequest();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +    Response redirectedBy = response.priorResponse();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +    MockWebServer redirectTarget = new MockWebServer();, +    redirectTarget.enqueue(new MockResponse().setBody("Page 2"));, +    redirectTarget.play();, +        .addHeader("Location: " + redirectTarget.getUrl("/")));, +    RecordedRequest request2 = redirectTarget.takeRequest();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +    Response redirectedBy = response.priorResponse();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/RecordingAuthenticator.java, +    this.calls.add("host=" + getRequestingHost(), +        + " port=" + getRequestingPort(), +        + " site=" + getRequestingSite().getHostName(), +        + " url=" + getRequestingURL(), +        + " type=" + getRequestorType(), +        + " prompt=" + getRequestingPrompt(), +        + " protocol=" + getRequestingProtocol(), +        + " scheme=" + getRequestingScheme());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +    MockWebServer redirectTarget = new MockWebServer();, +    redirectTarget.enqueue(new MockResponse().setBody("Page 2"));, +    redirectTarget.play();, +        .addHeader("Location: " + redirectTarget.getUrl("/")));, +    RecordedRequest request2 = redirectTarget.takeRequest();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +    Response redirectedBy = response.priorResponse();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/RecordingAuthenticator.java, +    this.calls.add("host=" + getRequestingHost(), +        + " port=" + getRequestingPort(), +        + " site=" + getRequestingSite().getHostName(), +        + " url=" + getRequestingURL(), +        + " type=" + getRequestorType(), +        + " prompt=" + getRequestingPrompt(), +        + " protocol=" + getRequestingProtocol(), +        + " scheme=" + getRequestingScheme());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    assertTrue(call, call.contains("site=" + url.getHost()));, +    assertTrue(call, call.contains("site=" + url.getHost()));, +    server2 = new MockWebServer();, +    Response redirectedBy = challengeResponse.priorResponse();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +    MockWebServer redirectTarget = new MockWebServer();, +    redirectTarget.enqueue(new MockResponse().setBody("Page 2"));, +    redirectTarget.play();, +        .addHeader("Location: " + redirectTarget.getUrl("/")));, +    RecordedRequest request2 = redirectTarget.takeRequest();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +    Response redirectedBy = response.priorResponse();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/RecordingAuthenticator.java, +    this.calls.add("host=" + getRequestingHost(), +        + " port=" + getRequestingPort(), +        + " site=" + getRequestingSite().getHostName(), +        + " url=" + getRequestingURL(), +        + " type=" + getRequestorType(), +        + " prompt=" + getRequestingPrompt(), +        + " protocol=" + getRequestingProtocol(), +        + " scheme=" + getRequestingScheme());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    assertTrue(call, call.contains("site=" + url.getHost()));, +    assertTrue(call, call.contains("site=" + url.getHost()));, +    server2 = new MockWebServer();, +    Response redirectedBy = challengeResponse.priorResponse();, +++ b/okhttp/src/main/java/com/squareup/okhttp/Protocol.java, +   * href="http://tools.ietf.org/html/draft-ietf-httpbis-http2-12">draft 12</a>, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +    MockWebServer redirectTarget = new MockWebServer();, +    redirectTarget.enqueue(new MockResponse().setBody("Page 2"));, +    redirectTarget.play();, +        .addHeader("Location: " + redirectTarget.getUrl("/")));, +    RecordedRequest request2 = redirectTarget.takeRequest();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +    Response redirectedBy = response.priorResponse();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/RecordingAuthenticator.java, +    this.calls.add("host=" + getRequestingHost(), +        + " port=" + getRequestingPort(), +        + " site=" + getRequestingSite().getHostName(), +        + " url=" + getRequestingURL(), +        + " type=" + getRequestorType(), +        + " prompt=" + getRequestingPrompt(), +        + " protocol=" + getRequestingProtocol(), +        + " scheme=" + getRequestingScheme());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    assertTrue(call, call.contains("site=" + url.getHost()));, +    assertTrue(call, call.contains("site=" + url.getHost()));, +    server2 = new MockWebServer();, +    Response redirectedBy = challengeResponse.priorResponse();, +++ b/okhttp/src/main/java/com/squareup/okhttp/Protocol.java]