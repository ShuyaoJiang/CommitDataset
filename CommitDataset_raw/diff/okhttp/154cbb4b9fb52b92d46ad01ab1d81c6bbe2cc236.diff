[+++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft09.java, +      short length = (short) ((w1 & 0x3fff0000) >> 16); // 14-bit unsigned., +      if (length < 0 || length > 16383) {, +      byte type = (byte) ((w1 & 0xff00) >> 8);, +      byte flags = (byte) (w1 & 0xff);, +          readData(handler, length, flags, streamId);, +          readHeaders(handler, length, flags, streamId);, +          readPriority(handler, length, flags, streamId);, +          readRstStream(handler, length, flags, streamId);, +          readSettings(handler, length, flags, streamId);, +          readPushPromise(handler, length, flags, streamId);, +          readPing(handler, length, flags, streamId);, +          readGoAway(handler, length, flags, streamId);, +          readWindowUpdate(handler, length, flags, streamId);, +    private void readHeaders(Handler handler, short length, byte flags, int streamId), +    private List<Header> readHeaderBlock(short length, boolean endHeaders, int streamId), +    private void readData(Handler handler, short length, byte flags, int streamId), +        throws IOException {, +    private void readPriority(Handler handler, short length, byte flags, int streamId), +    private void readRstStream(Handler handler, short length, byte flags, int streamId), +    private void readSettings(Handler handler, short length, byte flags, int streamId), +    private void readPushPromise(Handler handler, short length, byte flags, int streamId), +    private void readPing(Handler handler, short length, byte flags, int streamId), +        throws IOException {, +    private void readGoAway(Handler handler, short length, byte flags, int streamId), +    private void readWindowUpdate(Handler handler, short length, byte flags, int streamId), +    short bytesLeft;, +      bytesLeft = (short) ((w1 & 0x3fff0000) >> 16); // 14-bit unsigned., +      if (bytesLeft < 0 || bytesLeft > 16383) {, +        throw new IOException("FRAME_SIZE_ERROR max size is 16383: " + bytesLeft);, +      }]