[+++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +    assertEquals("B", readAscii(openConnection(url)));, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +    assertEquals("B", readAscii(openConnection(url)));, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +  /**, +   * When the server returns a full response body we will store it and return it regardless of what, +   * its Last-Modified date is. This behavior was different prior to OkHttp 3.5 when we would prefer, +   * the response with the later Last-Modified date., +   *, +   * https://github.com/square/okhttp/issues/2886, +   */, +    server.enqueue(new MockResponse(), +        .setResponseCode(HttpURLConnection.HTTP_NOT_MODIFIED));, +    assertEquals("B", get(url).body().string());, +    assertEquals("B", get(url).body().string());, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +    assertEquals("B", readAscii(openConnection(url)));, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +  /**, +   * When the server returns a full response body we will store it and return it regardless of what, +   * its Last-Modified date is. This behavior was different prior to OkHttp 3.5 when we would prefer, +   * the response with the later Last-Modified date., +   *, +   * https://github.com/square/okhttp/issues/2886, +   */, +    server.enqueue(new MockResponse(), +        .setResponseCode(HttpURLConnection.HTTP_NOT_MODIFIED));, +    assertEquals("B", get(url).body().string());, +    assertEquals("B", get(url).body().string());, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +            .addProxy(server2.toProxyAddress())), +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +    assertEquals("B", readAscii(openConnection(url)));, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +  /**, +   * When the server returns a full response body we will store it and return it regardless of what, +   * its Last-Modified date is. This behavior was different prior to OkHttp 3.5 when we would prefer, +   * the response with the later Last-Modified date., +   *, +   * https://github.com/square/okhttp/issues/2886, +   */, +    server.enqueue(new MockResponse(), +        .setResponseCode(HttpURLConnection.HTTP_NOT_MODIFIED));, +    assertEquals("B", get(url).body().string());, +    assertEquals("B", get(url).body().string());, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +            .addProxy(server2.toProxyAddress())), +++ b/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java, +            .addProxy(server2.toProxyAddress())), +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +    assertEquals("B", readAscii(openConnection(url)));, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +  /**, +   * When the server returns a full response body we will store it and return it regardless of what, +   * its Last-Modified date is. This behavior was different prior to OkHttp 3.5 when we would prefer, +   * the response with the later Last-Modified date., +   *, +   * https://github.com/square/okhttp/issues/2886, +   */, +    server.enqueue(new MockResponse(), +        .setResponseCode(HttpURLConnection.HTTP_NOT_MODIFIED));, +    assertEquals("B", get(url).body().string());, +    assertEquals("B", get(url).body().string());, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +            .addProxy(server2.toProxyAddress())), +++ b/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java, +            .addProxy(server2.toProxyAddress())), +++ b/okhttp-tests/src/test/java/okhttp3/internal/connection/RouteSelectorTest.java, +    // Finally try the only IP address of the origin server., +    assertTrue(routeSelector.hasNext());, +    dns.addresses(makeFakeAddresses(253, 1));, +    assertRoute(routeSelector.next(), address, NO_PROXY, dns.address(0), uriPort);, +    dns.assertRequests(uriHost);, +, +    assertTrue(routeSelector.hasNext());, +    dns.addresses(makeFakeAddresses(254, 1));, +    assertRoute(routeSelector.next(), address, NO_PROXY, dns.address(0), uriPort);, +    dns.assertRequests(uriHost);, +, +    // Origin, +    dns.addresses(makeFakeAddresses(253, 2));, +    assertRoute(routeSelector.next(), address, NO_PROXY, dns.address(0), uriPort);, +    dns.assertRequests(uriHost);, +    assertRoute(routeSelector.next(), address, NO_PROXY, dns.address(1), uriPort);, +, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +    assertEquals("B", readAscii(openConnection(url)));, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +  /**, +   * When the server returns a full response body we will store it and return it regardless of what, +   * its Last-Modified date is. This behavior was different prior to OkHttp 3.5 when we would prefer, +   * the response with the later Last-Modified date., +   *, +   * https://github.com/square/okhttp/issues/2886, +   */, +    server.enqueue(new MockResponse(), +        .setResponseCode(HttpURLConnection.HTTP_NOT_MODIFIED));, +    assertEquals("B", get(url).body().string());, +    assertEquals("B", get(url).body().string());]