[+++ b/okhttp-dnsoverhttps/src/main/java/okhttp3/dnsoverhttps/DnsOverHttps.kt, +      return bootstrapDnsHosts(bootstrapDnsHosts.toList()), +++ b/okhttp-dnsoverhttps/src/main/java/okhttp3/dnsoverhttps/DnsOverHttps.kt, +      return bootstrapDnsHosts(bootstrapDnsHosts.toList()), +++ b/okhttp/build.gradle, +      'okhttp3.CertificatePinner#check(java.lang.String, java.util.List)',, +      'okhttp3.CertificatePinner#check(java.lang.String, java.security.cert.Certificate\\[\\])',, +      'okhttp3.CertificatePinner$Builder#add(java.lang.String, java.lang.String\\[\\])',, +      'okhttp3.CertificatePinner$Builder#build()',, +      'okhttp3.CertificatePinner$Pin#matches(java.lang.String)',, +      'okhttp3.CipherSuite#javaName()',, +      'okhttp3.ConnectionSpec#cipherSuites()',, +      'okhttp3.ConnectionSpec#isCompatible(javax.net.ssl.SSLSocket)',, +      'okhttp3.ConnectionSpec#isTls()',, +      'okhttp3.ConnectionSpec#supportsTlsExtensions()',, +      'okhttp3.ConnectionSpec#tlsVersions()',, +      'okhttp3.ConnectionSpec$Builder#allEnabledCipherSuites()',, +      'okhttp3.ConnectionSpec$Builder#allEnabledTlsVersions()',, +      'okhttp3.ConnectionSpec$Builder#build()',, +      'okhttp3.ConnectionSpec$Builder#cipherSuites(okhttp3.CipherSuite\\[\\])',, +      'okhttp3.ConnectionSpec$Builder#cipherSuites(java.lang.String\\[\\])',, +      'okhttp3.ConnectionSpec$Builder#supportsTlsExtensions(boolean)',, +      'okhttp3.ConnectionSpec$Builder#tlsVersions(okhttp3.TlsVersion\\[\\])',, +      'okhttp3.ConnectionSpec$Builder#tlsVersions(java.lang.String\\[\\])',, +++ b/okhttp-dnsoverhttps/src/main/java/okhttp3/dnsoverhttps/DnsOverHttps.kt, +      return bootstrapDnsHosts(bootstrapDnsHosts.toList()), +++ b/okhttp/build.gradle, +      'okhttp3.CertificatePinner#check(java.lang.String, java.util.List)',, +      'okhttp3.CertificatePinner#check(java.lang.String, java.security.cert.Certificate\\[\\])',, +      'okhttp3.CertificatePinner$Builder#add(java.lang.String, java.lang.String\\[\\])',, +      'okhttp3.CertificatePinner$Builder#build()',, +      'okhttp3.CertificatePinner$Pin#matches(java.lang.String)',, +      'okhttp3.CipherSuite#javaName()',, +      'okhttp3.ConnectionSpec#cipherSuites()',, +      'okhttp3.ConnectionSpec#isCompatible(javax.net.ssl.SSLSocket)',, +      'okhttp3.ConnectionSpec#isTls()',, +      'okhttp3.ConnectionSpec#supportsTlsExtensions()',, +      'okhttp3.ConnectionSpec#tlsVersions()',, +      'okhttp3.ConnectionSpec$Builder#allEnabledCipherSuites()',, +      'okhttp3.ConnectionSpec$Builder#allEnabledTlsVersions()',, +      'okhttp3.ConnectionSpec$Builder#build()',, +      'okhttp3.ConnectionSpec$Builder#cipherSuites(okhttp3.CipherSuite\\[\\])',, +      'okhttp3.ConnectionSpec$Builder#cipherSuites(java.lang.String\\[\\])',, +      'okhttp3.ConnectionSpec$Builder#supportsTlsExtensions(boolean)',, +      'okhttp3.ConnectionSpec$Builder#tlsVersions(okhttp3.TlsVersion\\[\\])',, +      'okhttp3.ConnectionSpec$Builder#tlsVersions(java.lang.String\\[\\])',, +++ /dev/null, +++ b/okhttp-dnsoverhttps/src/main/java/okhttp3/dnsoverhttps/DnsOverHttps.kt, +      return bootstrapDnsHosts(bootstrapDnsHosts.toList()), +++ b/okhttp/build.gradle, +      'okhttp3.CertificatePinner#check(java.lang.String, java.util.List)',, +      'okhttp3.CertificatePinner#check(java.lang.String, java.security.cert.Certificate\\[\\])',, +      'okhttp3.CertificatePinner$Builder#add(java.lang.String, java.lang.String\\[\\])',, +      'okhttp3.CertificatePinner$Builder#build()',, +      'okhttp3.CertificatePinner$Pin#matches(java.lang.String)',, +      'okhttp3.CipherSuite#javaName()',, +      'okhttp3.ConnectionSpec#cipherSuites()',, +      'okhttp3.ConnectionSpec#isCompatible(javax.net.ssl.SSLSocket)',, +      'okhttp3.ConnectionSpec#isTls()',, +      'okhttp3.ConnectionSpec#supportsTlsExtensions()',, +      'okhttp3.ConnectionSpec#tlsVersions()',, +      'okhttp3.ConnectionSpec$Builder#allEnabledCipherSuites()',, +      'okhttp3.ConnectionSpec$Builder#allEnabledTlsVersions()',, +      'okhttp3.ConnectionSpec$Builder#build()',, +      'okhttp3.ConnectionSpec$Builder#cipherSuites(okhttp3.CipherSuite\\[\\])',, +      'okhttp3.ConnectionSpec$Builder#cipherSuites(java.lang.String\\[\\])',, +      'okhttp3.ConnectionSpec$Builder#supportsTlsExtensions(boolean)',, +      'okhttp3.ConnectionSpec$Builder#tlsVersions(okhttp3.TlsVersion\\[\\])',, +      'okhttp3.ConnectionSpec$Builder#tlsVersions(java.lang.String\\[\\])',, +++ /dev/null, +++ b/okhttp/src/main/java/okhttp3/CertificatePinner.kt, +/*, + * Copyright (C) 2014 Square, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package okhttp3, +, +import okhttp3.internal.tls.CertificateChainCleaner, +import okio.ByteString, +import java.security.cert.Certificate, +import java.security.cert.X509Certificate, +import java.util.Objects, +import javax.net.ssl.SSLPeerUnverifiedException, +, +/**, + * Constrains which certificates are trusted. Pinning certificates defends against attacks on, + * certificate authorities. It also prevents connections through man-in-the-middle certificate, + * authorities either known or unknown to the application's user., + *]