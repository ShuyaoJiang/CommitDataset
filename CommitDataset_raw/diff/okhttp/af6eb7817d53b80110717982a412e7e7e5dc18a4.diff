[+++ b/mockwebserver/README.md, +  URL baseUrl = server.url("/v1/chat/");, +++ b/mockwebserver/README.md, +  URL baseUrl = server.url("/v1/chat/");, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +++ b/mockwebserver/README.md, +  URL baseUrl = server.url("/v1/chat/");, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          @Override protected void closeConnection() throws IOException {, +++ b/mockwebserver/README.md, +  URL baseUrl = server.url("/v1/chat/");, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          @Override protected void closeConnection() throws IOException {, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +    assertEquals(2, connection.getHeaderFieldLong("Content-Length", -1));, +    assertEquals(-1, in.read());, +++ b/mockwebserver/README.md, +  URL baseUrl = server.url("/v1/chat/");, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          @Override protected void closeConnection() throws IOException {, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +    assertEquals(2, connection.getHeaderFieldLong("Content-Length", -1));, +    assertEquals(-1, in.read());, +++ /dev/null, +++ b/mockwebserver/README.md, +  URL baseUrl = server.url("/v1/chat/");, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          @Override protected void closeConnection() throws IOException {, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +    assertEquals(2, connection.getHeaderFieldLong("Content-Length", -1));, +    assertEquals(-1, in.read());, +++ /dev/null, +++ /dev/null, +++ b/mockwebserver/README.md, +  URL baseUrl = server.url("/v1/chat/");, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          @Override protected void closeConnection() throws IOException {, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +    assertEquals(2, connection.getHeaderFieldLong("Content-Length", -1));, +    assertEquals(-1, in.read());, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/mockwebserver/README.md, +  URL baseUrl = server.url("/v1/chat/");, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          @Override protected void closeConnection() throws IOException {, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +    assertEquals(2, connection.getHeaderFieldLong("Content-Length", -1));, +    assertEquals(-1, in.read());, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/mockwebserver/README.md, +  URL baseUrl = server.url("/v1/chat/");, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          @Override protected void closeConnection() throws IOException {, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +    assertEquals(2, connection.getHeaderFieldLong("Content-Length", -1));, +    assertEquals(-1, in.read());, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingSSLSocketFactory.java, +    configureSocket(sslSocket);, +    return sslSocket;, +    configureSocket(sslSocket);, +    return sslSocket;, +    configureSocket(sslSocket);, +    return sslSocket;, +    configureSocket(sslSocket);, +    return sslSocket;, +    configureSocket(sslSocket);, +    return sslSocket;, +    configureSocket(sslSocket);, +    return sslSocket;, +++ b/mockwebserver/README.md, +  URL baseUrl = server.url("/v1/chat/");, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          @Override protected void closeConnection() throws IOException {, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +    assertEquals(2, connection.getHeaderFieldLong("Content-Length", -1));, +    assertEquals(-1, in.read());, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingSSLSocketFactory.java, +    configureSocket(sslSocket);, +    return sslSocket;]