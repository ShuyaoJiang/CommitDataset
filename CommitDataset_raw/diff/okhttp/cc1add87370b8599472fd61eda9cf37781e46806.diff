[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    RealConnection c1 = newConnection(pool, routeA1, 50L);, +    RealConnection c1 = newConnection(pool, routeA1, 50L);, +    RealConnection c1 = newConnection(pool, routeA1, 75L);, +    RealConnection c2 = newConnection(pool, routeB1, 50L);, +    RealConnection c1 = newConnection(pool, routeA1, 50L);, +    RealConnection c2 = newConnection(pool, routeB1, 75L);, +    RealConnection c3 = newConnection(pool, routeC1, 75L);, +    RealConnection c1 = newConnection(pool, routeA1, 0L);, +  private RealConnection newConnection(ConnectionPool pool, Route route, long idleAtNanos) {, +    synchronized (pool) {, +      pool.put(connection);, +    }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    RealConnection c1 = newConnection(pool, routeA1, 50L);, +    RealConnection c1 = newConnection(pool, routeA1, 50L);, +    RealConnection c1 = newConnection(pool, routeA1, 75L);, +    RealConnection c2 = newConnection(pool, routeB1, 50L);, +    RealConnection c1 = newConnection(pool, routeA1, 50L);, +    RealConnection c2 = newConnection(pool, routeB1, 75L);, +    RealConnection c3 = newConnection(pool, routeC1, 75L);, +    RealConnection c1 = newConnection(pool, routeA1, 0L);, +  private RealConnection newConnection(ConnectionPool pool, Route route, long idleAtNanos) {, +    synchronized (pool) {, +      pool.put(connection);, +    }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/URLConnectionTest.java, +    assertContent("ABCDE", client.open(server.getUrl("/")), 5);, +    assertContent("ABCDE", client.open(server.getUrl("/")), 5);, +    MockResponse pleaseAuthenticate = new MockResponse().setResponseCode(responseCode), +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    RealConnection c1 = newConnection(pool, routeA1, 50L);, +    RealConnection c1 = newConnection(pool, routeA1, 50L);, +    RealConnection c1 = newConnection(pool, routeA1, 75L);, +    RealConnection c2 = newConnection(pool, routeB1, 50L);, +    RealConnection c1 = newConnection(pool, routeA1, 50L);, +    RealConnection c2 = newConnection(pool, routeB1, 75L);, +    RealConnection c3 = newConnection(pool, routeC1, 75L);, +    RealConnection c1 = newConnection(pool, routeA1, 0L);, +  private RealConnection newConnection(ConnectionPool pool, Route route, long idleAtNanos) {, +    synchronized (pool) {, +      pool.put(connection);, +    }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/URLConnectionTest.java, +    assertContent("ABCDE", client.open(server.getUrl("/")), 5);, +    assertContent("ABCDE", client.open(server.getUrl("/")), 5);, +    MockResponse pleaseAuthenticate = new MockResponse().setResponseCode(responseCode), +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    RealConnection c1 = newConnection(pool, routeA1, 50L);, +    RealConnection c1 = newConnection(pool, routeA1, 50L);, +    RealConnection c1 = newConnection(pool, routeA1, 75L);, +    RealConnection c2 = newConnection(pool, routeB1, 50L);, +    RealConnection c1 = newConnection(pool, routeA1, 50L);, +    RealConnection c2 = newConnection(pool, routeB1, 75L);, +    RealConnection c3 = newConnection(pool, routeC1, 75L);, +    RealConnection c1 = newConnection(pool, routeA1, 0L);, +  private RealConnection newConnection(ConnectionPool pool, Route route, long idleAtNanos) {, +    synchronized (pool) {, +      pool.put(connection);, +    }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/URLConnectionTest.java, +    assertContent("ABCDE", client.open(server.getUrl("/")), 5);, +    assertContent("ABCDE", client.open(server.getUrl("/")), 5);, +    MockResponse pleaseAuthenticate = new MockResponse().setResponseCode(responseCode), +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java, +  RealConnection get(Address address, StreamAllocation streamAllocation) {, +    assert (Thread.holdsLock(this));, +  void put(RealConnection connection) {, +    assert (Thread.holdsLock(this));, +  boolean connectionBecameIdle(RealConnection connection) {, +    assert (Thread.holdsLock(this));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    RealConnection c1 = newConnection(pool, routeA1, 50L);, +    RealConnection c1 = newConnection(pool, routeA1, 50L);, +    RealConnection c1 = newConnection(pool, routeA1, 75L);, +    RealConnection c2 = newConnection(pool, routeB1, 50L);, +    RealConnection c1 = newConnection(pool, routeA1, 50L);, +    RealConnection c2 = newConnection(pool, routeB1, 75L);, +    RealConnection c3 = newConnection(pool, routeC1, 75L);, +    RealConnection c1 = newConnection(pool, routeA1, 0L);, +  private RealConnection newConnection(ConnectionPool pool, Route route, long idleAtNanos) {, +    synchronized (pool) {, +      pool.put(connection);, +    }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/URLConnectionTest.java, +    assertContent("ABCDE", client.open(server.getUrl("/")), 5);, +    assertContent("ABCDE", client.open(server.getUrl("/")), 5);, +    MockResponse pleaseAuthenticate = new MockResponse().setResponseCode(responseCode), +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java, +  RealConnection get(Address address, StreamAllocation streamAllocation) {, +    assert (Thread.holdsLock(this));, +  void put(RealConnection connection) {, +    assert (Thread.holdsLock(this));, +  boolean connectionBecameIdle(RealConnection connection) {, +    assert (Thread.holdsLock(this));, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +import com.squareup.okhttp.internal.io.RealConnection;]