[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/RecordedRequest.java, +import com.squareup.okhttp.TlsVersion;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/RecordedRequest.java, +import com.squareup.okhttp.TlsVersion;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +import com.squareup.okhttp.Connection;, +import com.squareup.okhttp.ConnectionPool;, +    RouteSelector routeSelector = RouteSelector.get(httpRequest, client);, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[0],, +      routeSelector.nextUnconnected();, +    RouteSelector routeSelector = RouteSelector.get(httpRequest, client);, +    Connection connection = routeSelector.nextUnconnected();, +    routeDatabase.failed(connection.getRoute());, +    routeSelector = RouteSelector.get(httpRequest, client);, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[0],, +      routeSelector.nextUnconnected();, +    RouteSelector routeSelector = RouteSelector.get(httpRequest, client);, +    assertConnection(routeSelector.nextUnconnected(), address, proxyA, dns.inetAddresses[0],, +    assertConnection(routeSelector.nextUnconnected(), address, proxyA, dns.inetAddresses[1],, +    RouteSelector routeSelector = RouteSelector.get(httpRequest, client);, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[0],, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[1],, +    RouteSelector routeSelector = RouteSelector.get(httpRequest, client);, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[0],, +    RouteSelector routeSelector = RouteSelector.get(httpRequest, client);, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[0],, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[1],, +    RouteSelector routeSelector = RouteSelector.get(httpRequest, client);, +    assertConnection(routeSelector.nextUnconnected(), address, proxyA, dns.inetAddresses[0], proxyAPort,, +    assertConnection(routeSelector.nextUnconnected(), address, proxyA, dns.inetAddresses[1], proxyAPort,, +    assertConnection(routeSelector.nextUnconnected(), address, proxyB, dns.inetAddresses[0], proxyBPort,, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[0], uriPort,, +    RouteSelector routeSelector = RouteSelector.get(httpRequest, client);, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[0], uriPort,, +    RouteSelector routeSelector = RouteSelector.get(httpRequest, client);, +    assertConnection(routeSelector.nextUnconnected(), address, proxyA, dns.inetAddresses[0],, +      routeSelector.nextUnconnected();, +    assertConnection(routeSelector.nextUnconnected(), address, proxyA, dns.inetAddresses[0],, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[0],, +    RouteSelector routeSelector = RouteSelector.get(httpsRequest, client);, +    Connection connection = routeSelector.nextUnconnected();, +    routeSelector.connectFailed(connection, new IOException("Non SSL exception"));, +    RouteSelector routeSelector = RouteSelector.get(httpsRequest, client);, +    Connection connection = routeSelector.nextUnconnected();, +    routeSelector.connectFailed(connection, new SSLHandshakeException("SSL exception"));, +    Address address = new Address(uriHost, uriPort, socketFactory, sslSocketFactory,, +        hostnameVerifier, null, authenticator, null, protocols, connectionSpecs, proxySelector);, +    RouteSelector routeSelector = RouteSelector.get(httpsRequest, client);, +    assertConnection(routeSelector.nextUnconnected(), address, proxyA, dns.inetAddresses[0],, +    assertConnection(routeSelector.nextUnconnected(), address, proxyA, dns.inetAddresses[0],, +    assertConnection(routeSelector.nextUnconnected(), address, proxyA, dns.inetAddresses[1],, +    assertConnection(routeSelector.nextUnconnected(), address, proxyA, dns.inetAddresses[1],, +    assertConnection(routeSelector.nextUnconnected(), address, proxyB, dns.inetAddresses[0],, +    assertConnection(routeSelector.nextUnconnected(), address, proxyB, dns.inetAddresses[0],, +    assertConnection(routeSelector.nextUnconnected(), address, proxyB, dns.inetAddresses[1],, +    assertConnection(routeSelector.nextUnconnected(), address, proxyB, dns.inetAddresses[1],, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[0],, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[0],, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[1],, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[1],, +    RouteSelector routeSelector = RouteSelector.get(httpsRequest, client);, +    List<Connection> regularRoutes = new ArrayList<>();, +      regularRoutes.add(routeSelector.nextUnconnected());, +    routeDatabase.failed(regularRoutes.get(0).getRoute());, +    routeSelector = RouteSelector.get(httpsRequest, client);, +    List<Connection> routesWithFailedRoute = new ArrayList<>();, +      routesWithFailedRoute.add(routeSelector.nextUnconnected());, +    assertEquals(regularRoutes.get(0).getRoute(),, +        routesWithFailedRoute.get(routesWithFailedRoute.size() - 1).getRoute());, +  private void assertConnection(Connection connection, Address address, Proxy proxy,, +    assertEquals(address, connection.getRoute().getAddress());, +    assertEquals(proxy, connection.getRoute().getProxy());, +    assertEquals(socketAddress, connection.getRoute().getSocketAddress().getAddress());, +    assertEquals(socketPort, connection.getRoute().getSocketAddress().getPort());, +    assertEquals(connectionSpec, connection.getRoute().getConnectionSpec());, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/RecordedRequest.java, +import com.squareup.okhttp.TlsVersion;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +import com.squareup.okhttp.Connection;, +import com.squareup.okhttp.ConnectionPool;, +    RouteSelector routeSelector = RouteSelector.get(httpRequest, client);, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[0],, +      routeSelector.nextUnconnected();, +    RouteSelector routeSelector = RouteSelector.get(httpRequest, client);, +    Connection connection = routeSelector.nextUnconnected();, +    routeDatabase.failed(connection.getRoute());, +    routeSelector = RouteSelector.get(httpRequest, client);, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[0],, +      routeSelector.nextUnconnected();, +    RouteSelector routeSelector = RouteSelector.get(httpRequest, client);, +    assertConnection(routeSelector.nextUnconnected(), address, proxyA, dns.inetAddresses[0],, +    assertConnection(routeSelector.nextUnconnected(), address, proxyA, dns.inetAddresses[1],, +    RouteSelector routeSelector = RouteSelector.get(httpRequest, client);, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[0],, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[1],, +    RouteSelector routeSelector = RouteSelector.get(httpRequest, client);, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[0],, +    RouteSelector routeSelector = RouteSelector.get(httpRequest, client);, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[0],, +    assertConnection(routeSelector.nextUnconnected(), address, NO_PROXY, dns.inetAddresses[1],]