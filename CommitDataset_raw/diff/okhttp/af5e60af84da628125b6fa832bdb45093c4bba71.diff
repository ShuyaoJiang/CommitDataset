[+++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/SpdyTransport.java, +    long fixedContentLength = httpEngine.policy.getFixedContentLength();, +    if (fixedContentLength != -1) {, +      httpEngine.requestHeaders.setContentLength(fixedContentLength);, +    }, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/SpdyTransport.java, +    long fixedContentLength = httpEngine.policy.getFixedContentLength();, +    if (fixedContentLength != -1) {, +      httpEngine.requestHeaders.setContentLength(fixedContentLength);, +    }, +++ b/okhttp/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java, +import static org.junit.Assert.assertArrayEquals;, +import static org.junit.Assert.assertNull;, +  byte[] postBytes = "FGHIJ".getBytes(Util.UTF_8);, +, +  /** An output stream can be written to more than once, so we can't guess content length. */, +   @Test public void noDefaultContentLengthOnPost() throws Exception {, +    connection.getOutputStream().write(postBytes);, +    assertArrayEquals(postBytes, request.getBody());, +    assertNull(request.getHeader("Content-Length"));, +  }, +, +  @Test public void userSuppliedContentLengthHeader() throws Exception {, +    MockResponse response = new MockResponse().setBody("ABCDE");, +    server.enqueue(response);, +    server.play();, +, +    HttpURLConnection connection = client.open(server.getUrl("/foo"));, +    connection.setRequestProperty("Content-Length", String.valueOf(postBytes.length));, +    connection.setDoOutput(true);, +    connection.getOutputStream().write(postBytes);, +    assertContent("ABCDE", connection, Integer.MAX_VALUE);, +, +    RecordedRequest request = server.takeRequest();, +    assertEquals("POST /foo HTTP/1.1", request.getRequestLine());, +    assertArrayEquals(postBytes, request.getBody());, +    assertEquals(postBytes.length, Integer.parseInt(request.getHeader("Content-Length")));, +  }, +, +  @Test public void setFixedLengthStreamingModeSetsContentLength() throws Exception {, +    MockResponse response = new MockResponse().setBody("ABCDE");, +    server.enqueue(response);, +    server.play();, +, +    HttpURLConnection connection = client.open(server.getUrl("/foo"));, +    connection.setFixedLengthStreamingMode(postBytes.length);, +    connection.setDoOutput(true);, +    connection.getOutputStream().write(postBytes);, +    assertContent("ABCDE", connection, Integer.MAX_VALUE);, +, +    RecordedRequest request = server.takeRequest();, +    assertEquals("POST /foo HTTP/1.1", request.getRequestLine());, +    assertArrayEquals(postBytes, request.getBody());, +    assertEquals(postBytes.length, Integer.parseInt(request.getHeader("Content-Length")));]