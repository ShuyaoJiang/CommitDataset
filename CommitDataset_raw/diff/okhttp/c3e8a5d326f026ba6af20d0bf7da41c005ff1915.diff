[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +    } catch (IOException e){, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +    } catch (IOException e){, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +   * @throws IOException if the request could not be executed due to, +   *     cancellation, a connectivity problem or timeout. Because networks can, +   *     fail during an exchange, it is possible that the remote server, +   *     accepted the request before the failure., +    if (result == null) throw new IOException("Canceled");, +              .exception(new IOException("Canceled")), +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +    } catch (IOException e){, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +   * @throws IOException if the request could not be executed due to, +   *     cancellation, a connectivity problem or timeout. Because networks can, +   *     fail during an exchange, it is possible that the remote server, +   *     accepted the request before the failure., +    if (result == null) throw new IOException("Canceled");, +              .exception(new IOException("Canceled")), +++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java, +     * Called when the request could not be executed due to cancellation, a, +     * connectivity problem or timeout. Because networks can fail during an, +     * exchange, it is possible that the remote server accepted the request, +     * before the failure.]