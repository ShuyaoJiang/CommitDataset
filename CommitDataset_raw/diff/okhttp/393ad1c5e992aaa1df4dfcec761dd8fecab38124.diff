[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void getWithRequestBody() throws Exception {, +    server.enqueue(new MockResponse());, +    server.play();, +, +    try {, +      new Request.Builder().method("GET", RequestBody.create(MediaType.parse("text/plain"), "abc"));, +      fail();, +    } catch (IllegalArgumentException expected) {, +    }, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void getWithRequestBody() throws Exception {, +    server.enqueue(new MockResponse());, +    server.play();, +, +    try {, +      new Request.Builder().method("GET", RequestBody.create(MediaType.parse("text/plain"), "abc"));, +      fail();, +    } catch (IllegalArgumentException expected) {, +    }, +  }, +, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void getWithRequestBody() throws Exception {, +    server.enqueue(new MockResponse());, +    server.play();, +, +    try {, +      new Request.Builder().method("GET", RequestBody.create(MediaType.parse("text/plain"), "abc"));, +      fail();, +    } catch (IllegalArgumentException expected) {, +    }, +  }, +, +++ /dev/null, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void getWithRequestBody() throws Exception {, +    server.enqueue(new MockResponse());, +    server.play();, +, +    try {, +      new Request.Builder().method("GET", RequestBody.create(MediaType.parse("text/plain"), "abc"));, +      fail();, +    } catch (IllegalArgumentException expected) {, +    }, +  }, +, +++ /dev/null, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java, +/*, + * Copyright (C) 2011 The Android Open Source Project, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package com.squareup.okhttp.internal.spdy;, +, +import com.squareup.okhttp.internal.Util;, +import java.io.IOException;, +import java.io.InterruptedIOException;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, +import java.util.concurrent.TimeUnit;, +import java.util.concurrent.atomic.AtomicInteger;, +import okio.Buffer;, +import okio.BufferedSink;, +import okio.BufferedSource;, +import okio.ByteString;, +import okio.Okio;, +import okio.Sink;, +import okio.Source;, +import org.junit.After;, +import org.junit.Test;, +, +import static com.squareup.okhttp.internal.Util.headerEntries;, +import static com.squareup.okhttp.internal.spdy.ErrorCode.CANCEL;, +import static com.squareup.okhttp.internal.spdy.ErrorCode.INTERNAL_ERROR;, +import static com.squareup.okhttp.internal.spdy.ErrorCode.INVALID_STREAM;, +import static com.squareup.okhttp.internal.spdy.ErrorCode.PROTOCOL_ERROR;, +import static com.squareup.okhttp.internal.spdy.ErrorCode.REFUSED_STREAM;, +import static com.squareup.okhttp.internal.spdy.ErrorCode.STREAM_IN_USE;, +import static com.squareup.okhttp.internal.spdy.Settings.DEFAULT_INITIAL_WINDOW_SIZE;, +import static com.squareup.okhttp.internal.spdy.Settings.PERSIST_VALUE;, +import static com.squareup.okhttp.internal.spdy.Spdy3.TYPE_DATA;, +import static com.squareup.okhttp.internal.spdy.Spdy3.TYPE_GOAWAY;]