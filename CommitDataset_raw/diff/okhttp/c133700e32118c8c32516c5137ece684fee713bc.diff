[+++ b/okhttp/src/main/java/okhttp3/Response.java, +  /**, +   * Closes the response body. Equivalent to {@code body().close()}., +   *, +   * <p>It is an error to close a response that is not eligible for a body. This includes the, +   * responses returned from {@link #cacheResponse}, {@link #networkResponse}, and {@link, +   * #priorResponse()}., +   */, +    if (body == null) {, +      throw new IllegalStateException("response is not eligible for a body and must not be closed");, +    }, +++ b/okhttp/src/main/java/okhttp3/Response.java, +  /**, +   * Closes the response body. Equivalent to {@code body().close()}., +   *, +   * <p>It is an error to close a response that is not eligible for a body. This includes the, +   * responses returned from {@link #cacheResponse}, {@link #networkResponse}, and {@link, +   * #priorResponse()}., +   */, +    if (body == null) {, +      throw new IllegalStateException("response is not eligible for a body and must not be closed");, +    }, +++ b/okhttp/src/main/java/okhttp3/WebSocket.java, +    /**, +     * Creates a new web socket and immediately returns it. Creating a web socket initiates an, +     * asynchronous process to connect the socket. Once that succeeds or fails, {@code listener}, +     * will be notified. The caller must either close or cancel the returned web socket when it is, +     * no longer in use., +     */]