[+++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString((int) buffer.size()).toByteArray(),, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString((int) buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString((int) buffer.size()).hex();, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString((int) buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString((int) buffer.size()).hex();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString((int) buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString((int) buffer.size()).hex();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    assertValidRequestMethod("PATCH");, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString((int) buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString((int) buffer.size()).hex();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    assertValidRequestMethod("PATCH");, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java, +    ByteString actual = bytesOut.readByteString((int) bytesOut.size());, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString((int) buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString((int) buffer.size()).hex();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    assertValidRequestMethod("PATCH");, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java, +    ByteString actual = bytesOut.readByteString((int) bytesOut.size());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/MockSpdyPeer.java, +    byte[] outBytes = bytesOut.readByteString((int) bytesOut.size()).toByteArray();, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString((int) buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString((int) buffer.size()).hex();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    assertValidRequestMethod("PATCH");, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java, +    ByteString actual = bytesOut.readByteString((int) bytesOut.size());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/MockSpdyPeer.java, +    byte[] outBytes = bytesOut.readByteString((int) bytesOut.size()).toByteArray();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java, +    String actual = buffer.readUtf8((int) buffer.size());, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString((int) buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString((int) buffer.size()).hex();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    assertValidRequestMethod("PATCH");, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java, +    ByteString actual = bytesOut.readByteString((int) bytesOut.size());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/MockSpdyPeer.java, +    byte[] outBytes = bytesOut.readByteString((int) bytesOut.size()).toByteArray();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java, +    String actual = buffer.readUtf8((int) buffer.size());, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +import com.squareup.okhttp.internal.http.HttpMethod;, +    if (HttpMethod.invalidatesCache(request.method())) {, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString((int) buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString((int) buffer.size()).hex();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    assertValidRequestMethod("PATCH");, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java, +    ByteString actual = bytesOut.readByteString((int) bytesOut.size());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/MockSpdyPeer.java, +    byte[] outBytes = bytesOut.readByteString((int) bytesOut.size()).toByteArray();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java, +    String actual = buffer.readUtf8((int) buffer.size());, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +import com.squareup.okhttp.internal.http.HttpMethod;, +    if (HttpMethod.invalidatesCache(request.method())) {, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java, +    return HttpMethod.hasRequestBody(request.method());, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString((int) buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString((int) buffer.size()).hex();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    assertValidRequestMethod("PATCH");, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java, +    ByteString actual = bytesOut.readByteString((int) bytesOut.size());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/MockSpdyPeer.java, +    byte[] outBytes = bytesOut.readByteString((int) bytesOut.size()).toByteArray();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java, +    String actual = buffer.readUtf8((int) buffer.size());, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +import com.squareup.okhttp.internal.http.HttpMethod;]