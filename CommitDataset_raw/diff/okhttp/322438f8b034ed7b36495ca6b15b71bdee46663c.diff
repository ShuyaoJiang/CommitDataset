[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/AsyncApiTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/AsyncApiTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/SyncApiTest.java, +  @Test public void setFollowSslRedirectsFalse() throws Exception {, +    server.useHttps(sslContext.getSocketFactory(), false);, +    server.enqueue(new MockResponse(), +        .setResponseCode(301), +        .addHeader("Location: http://square.com"));, +    server.play();, +, +    client.setFollowSslRedirects(false);, +    client.setSslSocketFactory(sslContext.getSocketFactory());, +    client.setHostnameVerifier(new RecordingHostnameVerifier());, +, +    Request request = new Request.Builder().url(server.getUrl("/")).build();, +    Response response = client.execute(request);, +    assertEquals(301, response.code());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/AsyncApiTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/SyncApiTest.java, +  @Test public void setFollowSslRedirectsFalse() throws Exception {, +    server.useHttps(sslContext.getSocketFactory(), false);, +    server.enqueue(new MockResponse(), +        .setResponseCode(301), +        .addHeader("Location: http://square.com"));, +    server.play();, +, +    client.setFollowSslRedirects(false);, +    client.setSslSocketFactory(sslContext.getSocketFactory());, +    client.setHostnameVerifier(new RecordingHostnameVerifier());, +, +    Request request = new Request.Builder().url(server.getUrl("/")).build();, +    Response response = client.execute(request);, +    assertEquals(301, response.code());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/AsyncApiTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/SyncApiTest.java, +  @Test public void setFollowSslRedirectsFalse() throws Exception {, +    server.useHttps(sslContext.getSocketFactory(), false);, +    server.enqueue(new MockResponse(), +        .setResponseCode(301), +        .addHeader("Location: http://square.com"));, +    server.play();, +, +    client.setFollowSslRedirects(false);, +    client.setSslSocketFactory(sslContext.getSocketFactory());, +    client.setHostnameVerifier(new RecordingHostnameVerifier());, +, +    Request request = new Request.Builder().url(server.getUrl("/")).build();, +    Response response = client.execute(request);, +    assertEquals(301, response.code());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/Job.java, +          BufferedSink sink = engine.getBufferedRequestBody();, +      case HTTP_TEMP_REDIRECT:, +        // "If the 307 status code is received in response to a request other than GET or HEAD,, +        // the user agent MUST NOT automatically redirect the request", +        if (!request.method().equals("GET") && !request.method().equals("HEAD")) return null;, +        // fall-through, +        String location = response.header("Location");, +        if (location == null) return null;, +        URL url = new URL(request.url(), location);, +, +        // Don't follow redirects to unsupported protocols., +        if (!url.getProtocol().equals("https") && !url.getProtocol().equals("http")) return null;, +, +        // If configured, don't follow redirects between SSL and non-SSL., +        boolean sameProtocol = url.getProtocol().equals(request.url().getProtocol());, +        if (!sameProtocol && !client.getFollowSslRedirects()) return null;]