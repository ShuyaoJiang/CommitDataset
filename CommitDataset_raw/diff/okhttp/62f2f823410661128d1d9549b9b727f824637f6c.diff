[+++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java, +import java.net.HttpURLConnection;, +import java.util.Arrays;, +import okhttp3.Protocol;, +  /**, +   * We had a bug where web socket connections were leaked if the HTTP connection upgrade was not, +   * successful. This test confirms that connections are released back to the connection pool!, +   * https://github.com/square/okhttp/issues/4258, +   */, +  @Test public void webSocketConnectionIsReleased() throws Exception {, +    // This test assumes HTTP/1.1 pooling semantics., +    client = client.newBuilder(), +        .protocols(Arrays.asList(Protocol.HTTP_1_1)), +        .build();, +, +    webServer.enqueue(new MockResponse(), +        .setResponseCode(HttpURLConnection.HTTP_NOT_FOUND), +        .setBody("not found!"));, +    webServer.enqueue(new MockResponse());, +, +    newWebSocket();, +    clientListener.assertFailure();, +, +    Request regularRequest = new Request.Builder(), +        .url(webServer.url("/")), +        .build();, +    Response response = client.newCall(regularRequest).execute();, +    response.close();, +, +    assertEquals(0, webServer.takeRequest().getSequenceNumber());, +    assertEquals(1, webServer.takeRequest().getSequenceNumber());, +  }, +, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java, +import java.net.HttpURLConnection;, +import java.util.Arrays;, +import okhttp3.Protocol;, +  /**, +   * We had a bug where web socket connections were leaked if the HTTP connection upgrade was not, +   * successful. This test confirms that connections are released back to the connection pool!, +   * https://github.com/square/okhttp/issues/4258, +   */, +  @Test public void webSocketConnectionIsReleased() throws Exception {, +    // This test assumes HTTP/1.1 pooling semantics., +    client = client.newBuilder(), +        .protocols(Arrays.asList(Protocol.HTTP_1_1)), +        .build();, +, +    webServer.enqueue(new MockResponse(), +        .setResponseCode(HttpURLConnection.HTTP_NOT_FOUND), +        .setBody("not found!"));, +    webServer.enqueue(new MockResponse());, +, +    newWebSocket();, +    clientListener.assertFailure();, +, +    Request regularRequest = new Request.Builder(), +        .url(webServer.url("/")), +        .build();, +    Response response = client.newCall(regularRequest).execute();, +    response.close();, +, +    assertEquals(0, webServer.takeRequest().getSequenceNumber());, +    assertEquals(1, webServer.takeRequest().getSequenceNumber());, +  }, +, +++ b/okhttp/src/main/java/okhttp3/internal/http/RetryAndFollowUpInterceptor.java]