[+++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +          stream.close(ErrorCode.fromHttp2(peekedResponse.getHttp2ErrorCode()), null);, +        stream.close(ErrorCode.NO_ERROR, null);, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +          stream.close(ErrorCode.fromHttp2(peekedResponse.getHttp2ErrorCode()), null);, +        stream.close(ErrorCode.NO_ERROR, null);, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +    // TODO https://github.com/square/okhttp/issues/4703, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +          stream.close(ErrorCode.fromHttp2(peekedResponse.getHttp2ErrorCode()), null);, +        stream.close(ErrorCode.NO_ERROR, null);, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +    // TODO https://github.com/square/okhttp/issues/4703, +++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java, +import java.io.EOFException;, +  @Rule public final TestRule timeout = new Timeout(5_000, TimeUnit.MILLISECONDS);, +    stream1.close(ErrorCode.CANCEL, null);, +    } catch (EOFException expected) {, +      assertEquals("Expected a SETTINGS frame but was 1", expected.getMessage());, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +          stream.close(ErrorCode.fromHttp2(peekedResponse.getHttp2ErrorCode()), null);, +        stream.close(ErrorCode.NO_ERROR, null);, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +    // TODO https://github.com/square/okhttp/issues/4703, +++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java, +import java.io.EOFException;, +  @Rule public final TestRule timeout = new Timeout(5_000, TimeUnit.MILLISECONDS);, +    stream1.close(ErrorCode.CANCEL, null);, +    } catch (EOFException expected) {, +      assertEquals("Expected a SETTINGS frame but was 1", expected.getMessage());, +++ b/okhttp-tests/src/test/java/okhttp3/internal/tls/CertificatePinnerChainValidationTest.java, +    // TODO https://github.com/square/okhttp/issues/4703, +    // TODO https://github.com/square/okhttp/issues/4703, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +          stream.close(ErrorCode.fromHttp2(peekedResponse.getHttp2ErrorCode()), null);, +        stream.close(ErrorCode.NO_ERROR, null);, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +    // TODO https://github.com/square/okhttp/issues/4703, +++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java, +import java.io.EOFException;, +  @Rule public final TestRule timeout = new Timeout(5_000, TimeUnit.MILLISECONDS);, +    stream1.close(ErrorCode.CANCEL, null);, +    } catch (EOFException expected) {, +      assertEquals("Expected a SETTINGS frame but was 1", expected.getMessage());, +++ b/okhttp-tests/src/test/java/okhttp3/internal/tls/CertificatePinnerChainValidationTest.java, +    // TODO https://github.com/square/okhttp/issues/4703, +    // TODO https://github.com/square/okhttp/issues/4703, +++ b/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java, +    stream.close(ErrorCode.REFUSED_STREAM, null);, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +          stream.close(ErrorCode.fromHttp2(peekedResponse.getHttp2ErrorCode()), null);, +        stream.close(ErrorCode.NO_ERROR, null);, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +    // TODO https://github.com/square/okhttp/issues/4703, +++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java, +import java.io.EOFException;, +  @Rule public final TestRule timeout = new Timeout(5_000, TimeUnit.MILLISECONDS);, +    stream1.close(ErrorCode.CANCEL, null);, +    } catch (EOFException expected) {, +      assertEquals("Expected a SETTINGS frame but was 1", expected.getMessage());, +++ b/okhttp-tests/src/test/java/okhttp3/internal/tls/CertificatePinnerChainValidationTest.java, +    // TODO https://github.com/square/okhttp/issues/4703, +    // TODO https://github.com/square/okhttp/issues/4703, +++ b/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java, +    stream.close(ErrorCode.REFUSED_STREAM, null);, +++ b/okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java, +import javax.annotation.Nullable;, +            failConnection(e);, +                failConnection(e);, +        failConnection(null);, +      failConnection(e);, +  @Override public void close() {, +    close(ErrorCode.NO_ERROR, ErrorCode.CANCEL, null);, +  void close(ErrorCode connectionCode, ErrorCode streamCode, @Nullable IOException cause) {, +    } catch (IOException ignored) {, +          stream.close(streamCode, cause);, +        } catch (IOException ignored) {, +    } catch (IOException ignored) {, +    } catch (IOException ignored) {, +  private void failConnection(@Nullable IOException e) {, +    close(ErrorCode.PROTOCOL_ERROR, ErrorCode.PROTOCOL_ERROR, e);, +      IOException errorException = null;, +        errorException = e;, +        close(connectionErrorCode, streamErrorCode, errorException);, +                  newStream.close(ErrorCode.PROTOCOL_ERROR, e);, +              failConnection(e);, +        stream.close(REFUSED_STREAM, null);, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +          stream.close(ErrorCode.fromHttp2(peekedResponse.getHttp2ErrorCode()), null);, +        stream.close(ErrorCode.NO_ERROR, null);, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +    // TODO https://github.com/square/okhttp/issues/4703, +++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java, +import java.io.EOFException;, +  @Rule public final TestRule timeout = new Timeout(5_000, TimeUnit.MILLISECONDS);, +    stream1.close(ErrorCode.CANCEL, null);, +    } catch (EOFException expected) {, +      assertEquals("Expected a SETTINGS frame but was 1", expected.getMessage());, +++ b/okhttp-tests/src/test/java/okhttp3/internal/tls/CertificatePinnerChainValidationTest.java, +    // TODO https://github.com/square/okhttp/issues/4703]