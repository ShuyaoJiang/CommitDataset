[+++ b/.travis.yml, +  - ./gradlew :okhttp:test --tests EventListenerTest, +++ b/.travis.yml, +  - ./gradlew :okhttp:test --tests EventListenerTest, +++ b/build.gradle, +    testLogging {, +      showStandardStreams = true, +    }, +  }, +, +  test {, +    filter {, +      includeTestsMatching "okhttp3.EventListenerTest.requestBodyFailHttp*", +    }, +  }, +, +  test {, +++ b/.travis.yml, +  - ./gradlew :okhttp:test --tests EventListenerTest, +++ b/build.gradle, +    testLogging {, +      showStandardStreams = true, +    }, +  }, +, +  test {, +    filter {, +      includeTestsMatching "okhttp3.EventListenerTest.requestBodyFailHttp*", +    }, +  }, +, +  test {, +++ b/okhttp/src/test/java/okhttp3/EventListenerTest.java, +import java.time.Clock;, +import okhttp3.logging.LoggingEventListener;, +  // XXX, +    client = client.newBuilder().eventListenerFactory(new LoggingEventListener.Factory()).build();, +    System.out.println("XXX requestBodyFailHttp2OverHttps start");, +    System.out.println("XXX requestBodyFailHttp2OverHttps end");, +    long start = System.currentTimeMillis();, +        long start = System.currentTimeMillis();, +          long start2 = System.currentTimeMillis();, +          System.out.println("XXX write took " + (System.currentTimeMillis() - start2));, +        System.out.println("XXX all writes took " + (System.currentTimeMillis() - start));, +, +    System.out.println("XXX took" + (System.currentTimeMillis() - start));, +        .protocols(asList(Protocol.HTTP_2, Protocol.HTTP_1_1))]