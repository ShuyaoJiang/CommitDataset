[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +    for (int i = 302; i <= 307; ++i) {, +    assertCached(true, 308);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +    for (int i = 302; i <= 307; ++i) {, +    assertCached(true, 308);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +import static com.squareup.okhttp.internal.http.StatusLine.HTTP_PERM_REDIRECT;, +    testRedirect(true, "GET");, +    testRedirect(true, "HEAD");, +    testRedirect(true, "OPTIONS");, +    testRedirect(true, "POST");, +  @Test public void response308WithGet() throws Exception {, +    testRedirect(false, "GET");, +  }, +, +  @Test public void response308WithHead() throws Exception {, +    testRedirect(false, "HEAD");, +  }, +, +  @Test public void response308WithOptions() throws Exception {, +    testRedirect(false, "OPTIONS");, +  }, +, +  @Test public void response308WithPost() throws Exception {, +    testRedirect(false, "POST");, +  }, +, +  private void testRedirect(boolean temporary, String method) throws Exception {, +        .setResponseCode(temporary ? HTTP_TEMP_REDIRECT : HTTP_PERM_REDIRECT), +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +    for (int i = 302; i <= 307; ++i) {, +    assertCached(true, 308);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +import static com.squareup.okhttp.internal.http.StatusLine.HTTP_PERM_REDIRECT;, +    testRedirect(true, "GET");, +    testRedirect(true, "HEAD");, +    testRedirect(true, "OPTIONS");, +    testRedirect(true, "POST");, +  @Test public void response308WithGet() throws Exception {, +    testRedirect(false, "GET");, +  }, +, +  @Test public void response308WithHead() throws Exception {, +    testRedirect(false, "HEAD");, +  }, +, +  @Test public void response308WithOptions() throws Exception {, +    testRedirect(false, "OPTIONS");, +  }, +, +  @Test public void response308WithPost() throws Exception {, +    testRedirect(false, "POST");, +  }, +, +  private void testRedirect(boolean temporary, String method) throws Exception {, +        .setResponseCode(temporary ? HTTP_TEMP_REDIRECT : HTTP_PERM_REDIRECT), +++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java, +import static com.squareup.okhttp.internal.http.StatusLine.HTTP_PERM_REDIRECT;, +      case HTTP_PERM_REDIRECT:, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +    for (int i = 302; i <= 307; ++i) {, +    assertCached(true, 308);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +import static com.squareup.okhttp.internal.http.StatusLine.HTTP_PERM_REDIRECT;, +    testRedirect(true, "GET");, +    testRedirect(true, "HEAD");, +    testRedirect(true, "OPTIONS");, +    testRedirect(true, "POST");, +  @Test public void response308WithGet() throws Exception {, +    testRedirect(false, "GET");, +  }, +, +  @Test public void response308WithHead() throws Exception {, +    testRedirect(false, "HEAD");, +  }, +, +  @Test public void response308WithOptions() throws Exception {, +    testRedirect(false, "OPTIONS");, +  }, +, +  @Test public void response308WithPost() throws Exception {, +    testRedirect(false, "POST");, +  }, +, +  private void testRedirect(boolean temporary, String method) throws Exception {, +        .setResponseCode(temporary ? HTTP_TEMP_REDIRECT : HTTP_PERM_REDIRECT), +++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java, +import static com.squareup.okhttp.internal.http.StatusLine.HTTP_PERM_REDIRECT;, +      case HTTP_PERM_REDIRECT:, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/CacheStrategy.java, +import static com.squareup.okhttp.internal.http.StatusLine.HTTP_PERM_REDIRECT;, +import static java.net.HttpURLConnection.HTTP_GONE;, +import static java.net.HttpURLConnection.HTTP_MOVED_PERM;, +import static java.net.HttpURLConnection.HTTP_MULT_CHOICE;, +import static java.net.HttpURLConnection.HTTP_NOT_AUTHORITATIVE;, +import static java.net.HttpURLConnection.HTTP_OK;, +    if (responseCode != HTTP_OK, +        && responseCode != HTTP_NOT_AUTHORITATIVE, +        && responseCode != HTTP_MULT_CHOICE]