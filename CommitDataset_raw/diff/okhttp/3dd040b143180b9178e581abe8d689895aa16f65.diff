[+++ b/okhttp-tests/src/test/java/okhttp3/CacheControlTest.java, +    Headers headers = Headers.of(, +        "Cache-Control", "max-age=12",, +        "Pragma", "must-revalidate", +    );, +    assertThat(cacheControl.toString()).isEqualTo("max-age=12, must-revalidate");, +    Headers headers = Headers.of(, +        "Cache-Control", "max-age=12",, +        "Cache-Control", "must-revalidate", +    );, +    assertThat(cacheControl.toString()).isEqualTo("max-age=12, must-revalidate");, +    assertThat(cacheControl.toString()).isEqualTo("must-revalidate");, +    assertThat(cacheControl.toString()).isSameAs(cacheControl.toString());, +++ b/okhttp-tests/src/test/java/okhttp3/CacheControlTest.java, +    Headers headers = Headers.of(, +        "Cache-Control", "max-age=12",, +        "Pragma", "must-revalidate", +    );, +    assertThat(cacheControl.toString()).isEqualTo("max-age=12, must-revalidate");, +    Headers headers = Headers.of(, +        "Cache-Control", "max-age=12",, +        "Cache-Control", "must-revalidate", +    );, +    assertThat(cacheControl.toString()).isEqualTo("max-age=12, must-revalidate");, +    assertThat(cacheControl.toString()).isEqualTo("must-revalidate");, +    assertThat(cacheControl.toString()).isSameAs(cacheControl.toString());, +++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java, +    assertThat(firstFrame(logs, "DATA")), +        .overridingErrorMessage("data logged"), +        .contains("0 DATA          END_STREAM");, +++ b/okhttp-tests/src/test/java/okhttp3/CacheControlTest.java, +    Headers headers = Headers.of(, +        "Cache-Control", "max-age=12",, +        "Pragma", "must-revalidate", +    );, +    assertThat(cacheControl.toString()).isEqualTo("max-age=12, must-revalidate");, +    Headers headers = Headers.of(, +        "Cache-Control", "max-age=12",, +        "Cache-Control", "must-revalidate", +    );, +    assertThat(cacheControl.toString()).isEqualTo("max-age=12, must-revalidate");, +    assertThat(cacheControl.toString()).isEqualTo("must-revalidate");, +    assertThat(cacheControl.toString()).isSameAs(cacheControl.toString());, +++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java, +    assertThat(firstFrame(logs, "DATA")), +        .overridingErrorMessage("data logged"), +        .contains("0 DATA          END_STREAM");, +++ b/okhttp/build.gradle, +      'okhttp3.CacheControl#immutable()',, +      'okhttp3.CacheControl#isPrivate()',, +      'okhttp3.CacheControl#isPublic()',, +      'okhttp3.CacheControl#maxAgeSeconds()',, +      'okhttp3.CacheControl#maxStaleSeconds()',, +      'okhttp3.CacheControl#minFreshSeconds()',, +      'okhttp3.CacheControl#mustRevalidate()',, +      'okhttp3.CacheControl#noCache()',, +      'okhttp3.CacheControl#noStore()',, +      'okhttp3.CacheControl#noTransform()',, +      'okhttp3.CacheControl#onlyIfCached()',, +      'okhttp3.CacheControl#sMaxAgeSeconds()',, +      'okhttp3.CacheControl$Builder#build()',, +      'okhttp3.CacheControl$Builder#immutable()',, +      'okhttp3.CacheControl$Builder#maxAge(int, java.util.concurrent.TimeUnit)',, +      'okhttp3.CacheControl$Builder#maxStale(int, java.util.concurrent.TimeUnit)',, +      'okhttp3.CacheControl$Builder#minFresh(int, java.util.concurrent.TimeUnit)',, +      'okhttp3.CacheControl$Builder#noCache()',, +      'okhttp3.CacheControl$Builder#noStore()',, +      'okhttp3.CacheControl$Builder#noTransform()',, +      'okhttp3.CacheControl$Builder#onlyIfCached()',, +      'okhttp3.TlsVersion#javaName()',, +++ b/okhttp-tests/src/test/java/okhttp3/CacheControlTest.java, +    Headers headers = Headers.of(, +        "Cache-Control", "max-age=12",, +        "Pragma", "must-revalidate", +    );, +    assertThat(cacheControl.toString()).isEqualTo("max-age=12, must-revalidate");, +    Headers headers = Headers.of(, +        "Cache-Control", "max-age=12",, +        "Cache-Control", "must-revalidate", +    );, +    assertThat(cacheControl.toString()).isEqualTo("max-age=12, must-revalidate");, +    assertThat(cacheControl.toString()).isEqualTo("must-revalidate");, +    assertThat(cacheControl.toString()).isSameAs(cacheControl.toString());, +++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java, +    assertThat(firstFrame(logs, "DATA")), +        .overridingErrorMessage("data logged"), +        .contains("0 DATA          END_STREAM");, +++ b/okhttp/build.gradle, +      'okhttp3.CacheControl#immutable()',, +      'okhttp3.CacheControl#isPrivate()',, +      'okhttp3.CacheControl#isPublic()',, +      'okhttp3.CacheControl#maxAgeSeconds()',, +      'okhttp3.CacheControl#maxStaleSeconds()',, +      'okhttp3.CacheControl#minFreshSeconds()',, +      'okhttp3.CacheControl#mustRevalidate()',, +      'okhttp3.CacheControl#noCache()',, +      'okhttp3.CacheControl#noStore()',, +      'okhttp3.CacheControl#noTransform()',, +      'okhttp3.CacheControl#onlyIfCached()',, +      'okhttp3.CacheControl#sMaxAgeSeconds()',]