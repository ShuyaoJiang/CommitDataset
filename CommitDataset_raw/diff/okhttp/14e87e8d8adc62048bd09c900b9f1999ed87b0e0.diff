[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import com.squareup.okhttp.internal.ByteString;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import com.squareup.okhttp.internal.ByteString;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.Protocol;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import com.squareup.okhttp.internal.ByteString;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.Protocol;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft09.java, +import com.squareup.okhttp.internal.ByteString;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import com.squareup.okhttp.internal.ByteString;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.Protocol;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft09.java, +import com.squareup.okhttp.internal.ByteString;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java, +import com.squareup.okhttp.Protocol;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import com.squareup.okhttp.internal.ByteString;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.Protocol;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft09.java, +import com.squareup.okhttp.internal.ByteString;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java, +import com.squareup.okhttp.Protocol;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java, +import com.squareup.okhttp.internal.NamedRunnable;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import com.squareup.okhttp.internal.ByteString;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.Protocol;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft09.java, +import com.squareup.okhttp.internal.ByteString;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java, +import com.squareup.okhttp.Protocol;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java, +import com.squareup.okhttp.internal.NamedRunnable;, +++ b/okhttp/src/main/java/com/squareup/okhttp/Request.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import com.squareup.okhttp.internal.ByteString;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.Protocol;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft09.java, +import com.squareup.okhttp.internal.ByteString;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java, +import com.squareup.okhttp.Protocol;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java, +import com.squareup.okhttp.internal.NamedRunnable;, +++ b/okhttp/src/main/java/com/squareup/okhttp/Request.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java, +  // TODO: move out of public API, +  // TODO: move out of public API, +  // TODO: move out of public API, +  // TODO: move out of public API, +        if ("Last-Modified".equalsIgnoreCase(fieldName)) {, +    // TODO: move out of public API, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import com.squareup.okhttp.internal.ByteString;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.Protocol;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft09.java, +import com.squareup.okhttp.internal.ByteString;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java, +import com.squareup.okhttp.Protocol;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java, +import com.squareup.okhttp.internal.NamedRunnable;, +++ b/okhttp/src/main/java/com/squareup/okhttp/Request.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java, +  // TODO: move out of public API, +  // TODO: move out of public API, +  // TODO: move out of public API, +  // TODO: move out of public API, +        if ("Last-Modified".equalsIgnoreCase(fieldName)) {, +    // TODO: move out of public API, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/CacheStrategy.java, +import java.util.Date;, + * <p>Selecting a cache strategy may add conditions to the request (like the, + * "If-Modified-Since" header for conditional GETs) or warnings to the cached, + * response (if the cached data is potentially stale)., +  public static class Factory {, +    final long nowMillis;, +    final Request request;, +    final Response cacheResponse;, +, +    /** The server's time when the cached response was served, if known. */, +    private Date servedDate;, +, +    /** The last modified date of the cached response, if known. */, +    private Date lastModified;, +, +    /**, +     * The expiration date of the cached response, if known. If both this field, +     * and the max age are set, the max age is preferred., +     */, +    private Date expires;, +, +    /**]