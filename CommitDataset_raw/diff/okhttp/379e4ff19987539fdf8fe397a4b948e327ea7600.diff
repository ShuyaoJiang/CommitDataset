[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import static com.squareup.okhttp.internal.Util.byteStringList;, +        byteStringList(":status", "404", ":version", "HTTP/1.1", "content-type", "text/plain");, +        byteStringList(":status", "200", ":version", "HTTP/1.1", "content-type",, +    stream.reply(, +        byteStringList(":status", "200", ":version", "HTTP/1.1", "content-type", contentType(file)),, +        true);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import static com.squareup.okhttp.internal.Util.byteStringList;, +        byteStringList(":status", "404", ":version", "HTTP/1.1", "content-type", "text/plain");, +        byteStringList(":status", "200", ":version", "HTTP/1.1", "content-type",, +    stream.reply(, +        byteStringList(":status", "200", ":version", "HTTP/1.1", "content-type", contentType(file)),, +        true);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/ByteString.java, +  public static ByteString concat(ByteString... byteStrings) {, +    int size = 0;, +    for (ByteString byteString : byteStrings) {, +      size += byteString.size();, +    }, +    byte[] result = new byte[size];, +    int pos = 0;, +    for (ByteString byteString : byteStrings) {, +      System.arraycopy(byteString.data, 0, result, pos, byteString.size());, +      pos += byteString.size();, +    }, +    return ByteString.of(result);, +  }, +, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import static com.squareup.okhttp.internal.Util.byteStringList;, +        byteStringList(":status", "404", ":version", "HTTP/1.1", "content-type", "text/plain");, +        byteStringList(":status", "200", ":version", "HTTP/1.1", "content-type",, +    stream.reply(, +        byteStringList(":status", "200", ":version", "HTTP/1.1", "content-type", contentType(file)),, +        true);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/ByteString.java, +  public static ByteString concat(ByteString... byteStrings) {, +    int size = 0;, +    for (ByteString byteString : byteStrings) {, +      size += byteString.size();, +    }, +    byte[] result = new byte[size];, +    int pos = 0;, +    for (ByteString byteString : byteStrings) {, +      System.arraycopy(byteString.data, 0, result, pos, byteString.size());, +      pos += byteString.size();, +    }, +    return ByteString.of(result);, +  }, +, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +  public static List<ByteString> byteStringList(String... strings) {, +    List<ByteString> result = new ArrayList<ByteString>(strings.length);, +      result.add(ByteString.encodeUtf8(string));, +    return result;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import static com.squareup.okhttp.internal.Util.byteStringList;, +        byteStringList(":status", "404", ":version", "HTTP/1.1", "content-type", "text/plain");, +        byteStringList(":status", "200", ":version", "HTTP/1.1", "content-type",, +    stream.reply(, +        byteStringList(":status", "200", ":version", "HTTP/1.1", "content-type", contentType(file)),, +        true);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/ByteString.java, +  public static ByteString concat(ByteString... byteStrings) {, +    int size = 0;, +    for (ByteString byteString : byteStrings) {, +      size += byteString.size();, +    }, +    byte[] result = new byte[size];, +    int pos = 0;, +    for (ByteString byteString : byteStrings) {, +      System.arraycopy(byteString.data, 0, result, pos, byteString.size());, +      pos += byteString.size();, +    }, +    return ByteString.of(result);, +  }, +, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +  public static List<ByteString> byteStringList(String... strings) {, +    List<ByteString> result = new ArrayList<ByteString>(strings.length);, +      result.add(ByteString.encodeUtf8(string));, +    return result;, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java, +, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import static com.squareup.okhttp.internal.Util.byteStringList;, +        byteStringList(":status", "404", ":version", "HTTP/1.1", "content-type", "text/plain");, +        byteStringList(":status", "200", ":version", "HTTP/1.1", "content-type",, +    stream.reply(, +        byteStringList(":status", "200", ":version", "HTTP/1.1", "content-type", contentType(file)),, +        true);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/ByteString.java, +  public static ByteString concat(ByteString... byteStrings) {, +    int size = 0;, +    for (ByteString byteString : byteStrings) {, +      size += byteString.size();, +    }, +    byte[] result = new byte[size];, +    int pos = 0;]