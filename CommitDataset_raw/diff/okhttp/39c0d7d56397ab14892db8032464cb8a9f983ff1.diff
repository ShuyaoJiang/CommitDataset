[+++ b/checkstyle.xml, +++ b/checkstyle.xml, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft04.java, +      int w1;, +      try {, +        w1 = in.readInt();, +      } catch (IOException e) {, +        return false; // This might be a normal socket close., +      }, +      int w2 = in.readInt();, +, +      int length = w1 & 0xffff;, +      int type = (w1 & 0xff0000) >> 16;, +      int flags = (w1 & 0xff000000) >> 24;, +      boolean r = (w2 & 0x80000000) != 0;, +      int streamId = (w2 & 0x7fffffff);, +, +      throw new UnsupportedOperationException("TODO");, +    @Override public synchronized void synStream(boolean outFinished, boolean inFinished,, +        int streamId, int associatedStreamId, int priority, int slot, List<String> nameValueBlock), +        throws IOException {, +    @Override public synchronized void synReply(boolean outFinished, int streamId,, +    @Override public synchronized void data(boolean outFinished, int streamId, byte[] data), +      data(outFinished, streamId, data, 0, data.length);, +    }, +, +    @Override public void data(boolean outFinished, int streamId, byte[] data, int offset,, +        int byteCount) throws IOException {, +++ b/checkstyle.xml, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft04.java, +      int w1;, +      try {, +        w1 = in.readInt();, +      } catch (IOException e) {, +        return false; // This might be a normal socket close., +      }, +      int w2 = in.readInt();, +, +      int length = w1 & 0xffff;, +      int type = (w1 & 0xff0000) >> 16;, +      int flags = (w1 & 0xff000000) >> 24;, +      boolean r = (w2 & 0x80000000) != 0;, +      int streamId = (w2 & 0x7fffffff);, +, +      throw new UnsupportedOperationException("TODO");, +    @Override public synchronized void synStream(boolean outFinished, boolean inFinished,, +        int streamId, int associatedStreamId, int priority, int slot, List<String> nameValueBlock), +        throws IOException {, +    @Override public synchronized void synReply(boolean outFinished, int streamId,, +    @Override public synchronized void data(boolean outFinished, int streamId, byte[] data), +      data(outFinished, streamId, data, 0, data.length);, +    }, +, +    @Override public void data(boolean outFinished, int streamId, byte[] data, int offset,, +        int byteCount) throws IOException {, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java, +  static final int TYPE_DATA = 0x0;, +  static final int TYPE_SYN_STREAM = 0x1;, +  static final int TYPE_SYN_REPLY = 0x2;, +  static final int TYPE_RST_STREAM = 0x3;, +  static final int TYPE_SETTINGS = 0x4;, +  static final int TYPE_NOOP = 0x5;, +  static final int TYPE_PING = 0x6;, +  static final int TYPE_GOAWAY = 0x7;, +  static final int TYPE_HEADERS = 0x8;, +  static final int TYPE_WINDOW_UPDATE = 0x9;, +  static final int TYPE_CREDENTIAL = 0x10;, +, +  static final int FLAG_FIN = 0x1;, +  static final int FLAG_UNIDIRECTIONAL = 0x2;, +, +  static final int VERSION = 3;, +, +          case TYPE_SYN_STREAM:, +          case TYPE_SYN_REPLY:, +          case TYPE_RST_STREAM:, +          case TYPE_SETTINGS:, +          case TYPE_NOOP:, +          case TYPE_PING:, +          case TYPE_GOAWAY:, +          case TYPE_HEADERS:, +          case TYPE_WINDOW_UPDATE:, +          case TYPE_CREDENTIAL:, +        boolean inFinished = (flags & FLAG_FIN) != 0;, +        handler.data(inFinished, streamId, in, length);, +, +      boolean inFinished = (flags & FLAG_FIN) != 0;, +      boolean outFinished = (flags & FLAG_UNIDIRECTIONAL) != 0;, +      handler.synStream(outFinished, inFinished, streamId, associatedStreamId, priority, slot,, +          nameValueBlock);, +      boolean inFinished = (flags & FLAG_FIN) != 0;, +      handler.synReply(inFinished, streamId, nameValueBlock);, +          if (values.length() == 0) throw ioException("values.length == 0");, +    @Override public synchronized void synStream(boolean outFinished, boolean inFinished,, +        int streamId, int associatedStreamId, int priority, int slot, List<String> nameValueBlock), +        throws IOException {, +      int type = TYPE_SYN_STREAM;, +      int flags = (outFinished ? FLAG_FIN : 0) | (inFinished ? FLAG_UNIDIRECTIONAL : 0);, +      out.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);, +        boolean outFinished, int streamId, List<String> nameValueBlock) throws IOException {]