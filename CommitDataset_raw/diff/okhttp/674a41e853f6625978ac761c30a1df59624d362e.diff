[+++ b/.github/CONTRIBUTING.md, +++ b/.github/CONTRIBUTING.md, +++ b/bom/pom.xml, +  <parent>, +    <artifactId>parent</artifactId>, +  </parent>, +, +  <artifactId>okhttp-bom</artifactId>, +++ b/.github/CONTRIBUTING.md, +++ b/bom/pom.xml, +  <parent>, +    <artifactId>parent</artifactId>, +  </parent>, +, +  <artifactId>okhttp-bom</artifactId>, +++ /dev/null, +++ b/.github/CONTRIBUTING.md, +++ b/bom/pom.xml, +  <parent>, +    <artifactId>parent</artifactId>, +  </parent>, +, +  <artifactId>okhttp-bom</artifactId>, +++ /dev/null, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockResponse.java, +  /** Replaces all headers with those specified in {@code headers}. */, +++ b/.github/CONTRIBUTING.md, +++ b/bom/pom.xml, +  <parent>, +    <artifactId>parent</artifactId>, +  </parent>, +, +  <artifactId>okhttp-bom</artifactId>, +++ /dev/null, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockResponse.java, +  /** Replaces all headers with those specified in {@code headers}. */, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +      writeResponse(stream, response);, +      if (!readBody && peek.getSocketPolicy() == EXPECT_CONTINUE) {, +    private void writeResponse(Http2Stream stream, MockResponse response) throws IOException {, +      boolean closeStreamAfterHeaders = body != null || !response.getPushPromises().isEmpty();, +      stream.writeHeaders(http2Headers, closeStreamAfterHeaders);, +      pushPromises(stream, response.getPushPromises());, +      } else if (closeStreamAfterHeaders) {, +    private void pushPromises(Http2Stream stream, List<PushPromise> promises) throws IOException {, +        writeResponse(pushedStream, pushPromise.response());, +++ b/.github/CONTRIBUTING.md, +++ b/bom/pom.xml, +  <parent>, +    <artifactId>parent</artifactId>, +  </parent>, +, +  <artifactId>okhttp-bom</artifactId>, +++ /dev/null, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockResponse.java, +  /** Replaces all headers with those specified in {@code headers}. */, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +      writeResponse(stream, response);, +      if (!readBody && peek.getSocketPolicy() == EXPECT_CONTINUE) {, +    private void writeResponse(Http2Stream stream, MockResponse response) throws IOException {, +      boolean closeStreamAfterHeaders = body != null || !response.getPushPromises().isEmpty();, +      stream.writeHeaders(http2Headers, closeStreamAfterHeaders);, +      pushPromises(stream, response.getPushPromises());, +      } else if (closeStreamAfterHeaders) {, +    private void pushPromises(Http2Stream stream, List<PushPromise> promises) throws IOException {, +        writeResponse(pushedStream, pushPromise.response());, +++ /dev/null, +++ b/.github/CONTRIBUTING.md, +++ b/bom/pom.xml, +  <parent>, +    <artifactId>parent</artifactId>, +  </parent>, +, +  <artifactId>okhttp-bom</artifactId>, +++ /dev/null, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockResponse.java, +  /** Replaces all headers with those specified in {@code headers}. */, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +      writeResponse(stream, response);, +      if (!readBody && peek.getSocketPolicy() == EXPECT_CONTINUE) {, +    private void writeResponse(Http2Stream stream, MockResponse response) throws IOException {, +      boolean closeStreamAfterHeaders = body != null || !response.getPushPromises().isEmpty();, +      stream.writeHeaders(http2Headers, closeStreamAfterHeaders);, +      pushPromises(stream, response.getPushPromises());, +      } else if (closeStreamAfterHeaders) {, +    private void pushPromises(Http2Stream stream, List<PushPromise> promises) throws IOException {, +        writeResponse(pushedStream, pushPromise.response());, +++ /dev/null, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +++ b/.github/CONTRIBUTING.md, +++ b/bom/pom.xml, +  <parent>, +    <artifactId>parent</artifactId>, +  </parent>, +, +  <artifactId>okhttp-bom</artifactId>, +++ /dev/null, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockResponse.java, +  /** Replaces all headers with those specified in {@code headers}. */, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java]