[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +        return Arrays.asList(Protocol.SPDY_3.toString());, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +        return Arrays.asList(Protocol.SPDY_3.toString());, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +            ByteString protocolBytes = Platform.get().getNpnSelectedProtocol(sslSocket);, +            protocol = protocolBytes != null, +                ? Protocol.find(protocolBytes.utf8()), +                : Protocol.HTTP_11;, +            + " protocol is " + protocol.toString());, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +        return Arrays.asList(Protocol.SPDY_3.toString());, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +            ByteString protocolBytes = Platform.get().getNpnSelectedProtocol(sslSocket);, +            protocol = protocolBytes != null, +                ? Protocol.find(protocolBytes.utf8()), +                : Protocol.HTTP_11;, +            + " protocol is " + protocol.toString());, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +    return Joiner.on(", ").join(Protocol.values());, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +        return Arrays.asList(Protocol.SPDY_3.toString());, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +            ByteString protocolBytes = Platform.get().getNpnSelectedProtocol(sslSocket);, +            protocol = protocolBytes != null, +                ? Protocol.find(protocolBytes.utf8()), +                : Protocol.HTTP_11;, +            + " protocol is " + protocol.toString());, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +    return Joiner.on(", ").join(Protocol.values());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +    assertEquals(Protocol.SPDY_3.toString(), headers.get(OkHeaders.SELECTED_PROTOCOL));, +    assertEquals(Protocol.SPDY_3.toString(), headers.value(0));, +    assertEquals(Protocol.SPDY_3.toString(), headers.value(0));, +    assertEquals(Protocol.HTTP_2.toString(), headers.value(0));, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +        return Arrays.asList(Protocol.SPDY_3.toString());, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +            ByteString protocolBytes = Platform.get().getNpnSelectedProtocol(sslSocket);, +            protocol = protocolBytes != null, +                ? Protocol.find(protocolBytes.utf8()), +                : Protocol.HTTP_11;, +            + " protocol is " + protocol.toString());, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +    return Joiner.on(", ").join(Protocol.values());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +    assertEquals(Protocol.SPDY_3.toString(), headers.get(OkHeaders.SELECTED_PROTOCOL));, +    assertEquals(Protocol.SPDY_3.toString(), headers.value(0));, +    assertEquals(Protocol.SPDY_3.toString(), headers.value(0));, +    assertEquals(Protocol.HTTP_2.toString(), headers.value(0));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    assertEquals(Arrays.asList(protocol.toString()), protocolValues);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +        return Arrays.asList(Protocol.SPDY_3.toString());, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +            ByteString protocolBytes = Platform.get().getNpnSelectedProtocol(sslSocket);, +            protocol = protocolBytes != null, +                ? Protocol.find(protocolBytes.utf8()), +                : Protocol.HTTP_11;, +            + " protocol is " + protocol.toString());, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +    return Joiner.on(", ").join(Protocol.values());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +    assertEquals(Protocol.SPDY_3.toString(), headers.get(OkHeaders.SELECTED_PROTOCOL));, +    assertEquals(Protocol.SPDY_3.toString(), headers.value(0));, +    assertEquals(Protocol.SPDY_3.toString(), headers.value(0));, +    assertEquals(Protocol.HTTP_2.toString(), headers.value(0));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    assertEquals(Arrays.asList(protocol.toString()), protocolValues);, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +      selectedProtocol = Protocol.find(maybeProtocol.utf8()); // Throws IOE on unknown., +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +        return Arrays.asList(Protocol.SPDY_3.toString());, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +            ByteString protocolBytes = Platform.get().getNpnSelectedProtocol(sslSocket);, +            protocol = protocolBytes != null, +                ? Protocol.find(protocolBytes.utf8()), +                : Protocol.HTTP_11;, +            + " protocol is " + protocol.toString());, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +    return Joiner.on(", ").join(Protocol.values());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +    assertEquals(Protocol.SPDY_3.toString(), headers.get(OkHeaders.SELECTED_PROTOCOL));, +    assertEquals(Protocol.SPDY_3.toString(), headers.value(0));, +    assertEquals(Protocol.SPDY_3.toString(), headers.value(0));, +    assertEquals(Protocol.HTTP_2.toString(), headers.value(0));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +    assertEquals(Arrays.asList(protocol.toString()), protocolValues);, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +      selectedProtocol = Protocol.find(maybeProtocol.utf8()); // Throws IOE on unknown., +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +        protocols.add(Protocol.find(transports.get(i)));, +      transports.add(protocols.get(i).toString());, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +        return Arrays.asList(Protocol.SPDY_3.toString());, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +            ByteString protocolBytes = Platform.get().getNpnSelectedProtocol(sslSocket);, +            protocol = protocolBytes != null, +                ? Protocol.find(protocolBytes.utf8()), +                : Protocol.HTTP_11;]