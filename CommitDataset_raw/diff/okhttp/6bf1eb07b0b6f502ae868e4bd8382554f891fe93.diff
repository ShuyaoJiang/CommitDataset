[+++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +    @Override public void maybeRemove(String requestMethod, URI uri) throws IOException {, +      HttpResponseCache.this.maybeRemove(requestMethod, uri);, +    }, +, +    if (maybeRemove(requestMethod, uri)) {, +    }, +    if (!requestMethod.equals("GET")) {, +      editor = cache.edit(uriToKey(uri));, +  /**, +   * Returns true if the supplied {@code requestMethod} potentially invalidates an entry in the, +   * cache., +   */, +  private boolean maybeRemove(String requestMethod, URI uri) {, +    if (requestMethod.equals("POST") || requestMethod.equals("PUT") || requestMethod.equals(, +        "DELETE")) {, +      try {, +        cache.remove(uriToKey(uri));, +      } catch (IOException ignored) {, +        // The cache cannot be written., +      }, +      return true;, +    }, +    return false;, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +    @Override public void maybeRemove(String requestMethod, URI uri) throws IOException {, +      HttpResponseCache.this.maybeRemove(requestMethod, uri);, +    }, +, +    if (maybeRemove(requestMethod, uri)) {, +    }, +    if (!requestMethod.equals("GET")) {, +      editor = cache.edit(uriToKey(uri));, +  /**, +   * Returns true if the supplied {@code requestMethod} potentially invalidates an entry in the, +   * cache., +   */, +  private boolean maybeRemove(String requestMethod, URI uri) {, +    if (requestMethod.equals("POST") || requestMethod.equals("PUT") || requestMethod.equals(, +        "DELETE")) {, +      try {, +        cache.remove(uriToKey(uri));, +      } catch (IOException ignored) {, +        // The cache cannot be written., +      }, +      return true;, +    }, +    return false;, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java, +import java.net.HttpURLConnection;, +    HttpURLConnection connectionToCache = policy.getHttpConnectionToCache();, +, +      policy.responseCache.maybeRemove(connectionToCache.getRequestMethod(), uri);, +    cacheRequest = policy.responseCache.put(uri, connectionToCache);, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +    @Override public void maybeRemove(String requestMethod, URI uri) throws IOException {, +      HttpResponseCache.this.maybeRemove(requestMethod, uri);, +    }, +, +    if (maybeRemove(requestMethod, uri)) {, +    }, +    if (!requestMethod.equals("GET")) {, +      editor = cache.edit(uriToKey(uri));, +  /**, +   * Returns true if the supplied {@code requestMethod} potentially invalidates an entry in the, +   * cache., +   */, +  private boolean maybeRemove(String requestMethod, URI uri) {, +    if (requestMethod.equals("POST") || requestMethod.equals("PUT") || requestMethod.equals(, +        "DELETE")) {, +      try {, +        cache.remove(uriToKey(uri));, +      } catch (IOException ignored) {, +        // The cache cannot be written., +      }, +      return true;, +    }, +    return false;, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java, +import java.net.HttpURLConnection;, +    HttpURLConnection connectionToCache = policy.getHttpConnectionToCache();, +, +      policy.responseCache.maybeRemove(connectionToCache.getRequestMethod(), uri);, +    cacheRequest = policy.responseCache.put(uri, connectionToCache);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/OkResponseCache.java, +  /** Remove any cache entries for the supplied {@code uri} if the request method invalidates. */, +  void maybeRemove(String requestMethod, URI uri) throws IOException;, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +    @Override public void maybeRemove(String requestMethod, URI uri) throws IOException {, +      HttpResponseCache.this.maybeRemove(requestMethod, uri);, +    }, +, +    if (maybeRemove(requestMethod, uri)) {]