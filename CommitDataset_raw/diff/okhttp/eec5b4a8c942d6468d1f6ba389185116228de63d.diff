[+++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +    if (!HttpMethod.METHODS.contains(method)) {, +      throw new ProtocolException(, +          "Expected one of " + HttpMethod.METHODS + " but was " + method);, +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +    if (!HttpMethod.METHODS.contains(method)) {, +      throw new ProtocolException(, +          "Expected one of " + HttpMethod.METHODS + " but was " + method);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java, +  private static final byte[] CRLF = { '\r', '\n' };, +  private static final byte[] FINAL_CHUNK = { '0', '\r', '\n', '\r', '\n' };, +      sink.write(CRLF);, +  private abstract class AbstractSource implements Source {, +    @Override public Timeout timeout() {, +      return source.timeout();, +    }, +, +  private class FixedLengthSource extends AbstractSource {, +  private class ChunkedSource extends AbstractSource {, +  private class UnknownLengthSource extends AbstractSource {, +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +    if (!HttpMethod.METHODS.contains(method)) {, +      throw new ProtocolException(, +          "Expected one of " + HttpMethod.METHODS + " but was " + method);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java, +  private static final byte[] CRLF = { '\r', '\n' };, +  private static final byte[] FINAL_CHUNK = { '0', '\r', '\n', '\r', '\n' };, +      sink.write(CRLF);, +  private abstract class AbstractSource implements Source {, +    @Override public Timeout timeout() {, +      return source.timeout();, +    }, +, +  private class FixedLengthSource extends AbstractSource {, +  private class ChunkedSource extends AbstractSource {, +  private class UnknownLengthSource extends AbstractSource {, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpMethod.java, +import java.util.Arrays;, +import java.util.LinkedHashSet;, +import java.util.Set;, +, +  public static final Set<String> METHODS = new LinkedHashSet<>(Arrays.asList(, +      "OPTIONS", "GET", "HEAD", "POST", "PUT", "DELETE", "TRACE", "PATCH"));, +]