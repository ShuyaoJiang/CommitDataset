[+++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/OkHttpURLConnection.java, +import okhttp3.internal.Util;, +    String agent = Util.getSystemProperty("http.agent", null);, +++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/OkHttpURLConnection.java, +import okhttp3.internal.Util;, +    String agent = Util.getSystemProperty("http.agent", null);, +++ b/okhttp/src/main/java/okhttp3/internal/Util.java, +import java.security.AccessControlException;, +, +  /**, +   * Returns the system property, or defaultValue if the system property is null or, +   * cannot be read (e.g. because of security policy restrictions)., +   */, +  public static String getSystemProperty(String key, @Nullable String defaultValue) {, +    final String value;, +    try {, +      value = System.getProperty(key);, +    } catch (AccessControlException ex) {, +      return defaultValue;, +    }, +    return value != null ? value : defaultValue;, +  }, +++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/OkHttpURLConnection.java, +import okhttp3.internal.Util;, +    String agent = Util.getSystemProperty("http.agent", null);, +++ b/okhttp/src/main/java/okhttp3/internal/Util.java, +import java.security.AccessControlException;, +, +  /**, +   * Returns the system property, or defaultValue if the system property is null or, +   * cannot be read (e.g. because of security policy restrictions)., +   */, +  public static String getSystemProperty(String key, @Nullable String defaultValue) {, +    final String value;, +    try {, +      value = System.getProperty(key);, +    } catch (AccessControlException ex) {, +      return defaultValue;, +    }, +    return value != null ? value : defaultValue;, +  }, +++ b/okhttp/src/main/java/okhttp3/internal/platform/Platform.java, +import okhttp3.internal.Util;, +    if ("conscrypt".equals(Util.getSystemProperty("okhttp.platform", null))) {, +    String jvmVersion = Util.getSystemProperty("java.specification.version", null);]