[+++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString(buffer.size()).toByteArray(),, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString(buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString(buffer.size()).hex();, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString(buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString(buffer.size()).hex();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    Date since = new Date();, +    connection.setIfModifiedSince(since.getTime());, +    assertTrue(request.getHeaders().contains("If-Modified-Since: " + formatDate(since)));, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString(buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString(buffer.size()).hex();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    Date since = new Date();, +    connection.setIfModifiedSince(since.getTime());, +    assertTrue(request.getHeaders().contains("If-Modified-Since: " + formatDate(since)));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java, +    ByteString actual = bytesOut.readByteString(bytesOut.size());, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString(buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString(buffer.size()).hex();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    Date since = new Date();, +    connection.setIfModifiedSince(since.getTime());, +    assertTrue(request.getHeaders().contains("If-Modified-Since: " + formatDate(since)));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java, +    ByteString actual = bytesOut.readByteString(bytesOut.size());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/MockSpdyPeer.java, +    byte[] outBytes = bytesOut.readByteString(bytesOut.size()).toByteArray();, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString(buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString(buffer.size()).hex();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    Date since = new Date();, +    connection.setIfModifiedSince(since.getTime());, +    assertTrue(request.getHeaders().contains("If-Modified-Since: " + formatDate(since)));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java, +    ByteString actual = bytesOut.readByteString(bytesOut.size());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/MockSpdyPeer.java, +    byte[] outBytes = bytesOut.readByteString(bytesOut.size()).toByteArray();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java, +    String actual = buffer.readUtf8(buffer.size());, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString(buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString(buffer.size()).hex();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    Date since = new Date();, +    connection.setIfModifiedSince(since.getTime());, +    assertTrue(request.getHeaders().contains("If-Modified-Since: " + formatDate(since)));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java, +    ByteString actual = bytesOut.readByteString(bytesOut.size());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/MockSpdyPeer.java, +    byte[] outBytes = bytesOut.readByteString(bytesOut.size()).toByteArray();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java, +    String actual = buffer.readUtf8(buffer.size());, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/CacheStrategy.java, +        conditionalRequestBuilder.header("If-Modified-Since", HttpDate.format(lastModified));, +        conditionalRequestBuilder.header("If-Modified-Since", HttpDate.format(servedDate));, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString(buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString(buffer.size()).hex();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    Date since = new Date();, +    connection.setIfModifiedSince(since.getTime());, +    assertTrue(request.getHeaders().contains("If-Modified-Since: " + formatDate(since)));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java, +    ByteString actual = bytesOut.readByteString(bytesOut.size());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/MockSpdyPeer.java, +    byte[] outBytes = bytesOut.readByteString(bytesOut.size()).toByteArray();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java, +    String actual = buffer.readUtf8(buffer.size());, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/CacheStrategy.java, +        conditionalRequestBuilder.header("If-Modified-Since", HttpDate.format(lastModified));, +        conditionalRequestBuilder.header("If-Modified-Since", HttpDate.format(servedDate));, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpDate.java, +      "EEE, dd-MMM-yyyy HH:mm:ss z", "EEE, dd-MMM-yyyy HH-mm-ss z", "EEE, dd MMM yy HH:mm:ss z",, +      "EEE dd-MMM-yyyy HH:mm:ss z", "EEE dd MMM yyyy HH:mm:ss z", "EEE dd-MMM-yyyy HH-mm-ss z",, +      "EEE dd-MMM-yy HH:mm:ss z", "EEE dd MMM yy HH:mm:ss z", "EEE,dd-MMM-yy HH:mm:ss z",, +      "EEE,dd-MMM-yyyy HH:mm:ss z", "EEE, dd-MM-yyyy HH:mm:ss z",, +      "EEE MMM d yyyy HH:mm:ss z", };, +++ b/okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java, +      return new String(buffer.readByteString(buffer.size()).toByteArray(),, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +    return buffer.readByteString(buffer.size()).hex();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    Date since = new Date();, +    connection.setIfModifiedSince(since.getTime());, +    assertTrue(request.getHeaders().contains("If-Modified-Since: " + formatDate(since)));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java, +    ByteString actual = bytesOut.readByteString(bytesOut.size());]