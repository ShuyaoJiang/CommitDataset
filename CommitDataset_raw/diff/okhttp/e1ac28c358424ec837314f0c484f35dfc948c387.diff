[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import static com.squareup.okhttp.internal.Util.headerEntries;, +, +    for (int i = 0, size = requestHeaders.size(); i < size; i++) {, +    List<Header> responseHeaders =, +        headerEntries(":status", "404", ":version", "HTTP/1.1", "content-type", "text/plain");, +    List<Header> responseHeaders =, +        headerEntries(":status", "200", ":version", "HTTP/1.1", "content-type",, +            "text/html; charset=UTF-8");, +    stream.reply(, +        headerEntries(":status", "200", ":version", "HTTP/1.1", "content-type", contentType(file)),, +        true);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import static com.squareup.okhttp.internal.Util.headerEntries;, +, +    for (int i = 0, size = requestHeaders.size(); i < size; i++) {, +    List<Header> responseHeaders =, +        headerEntries(":status", "404", ":version", "HTTP/1.1", "content-type", "text/plain");, +    List<Header> responseHeaders =, +        headerEntries(":status", "200", ":version", "HTTP/1.1", "content-type",, +            "text/html; charset=UTF-8");, +    stream.reply(, +        headerEntries(":status", "200", ":version", "HTTP/1.1", "content-type", contentType(file)),, +        true);, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +        for (int i = 0, size = headers.size(); i < size; i++) {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import static com.squareup.okhttp.internal.Util.headerEntries;, +, +    for (int i = 0, size = requestHeaders.size(); i < size; i++) {, +    List<Header> responseHeaders =, +        headerEntries(":status", "404", ":version", "HTTP/1.1", "content-type", "text/plain");, +    List<Header> responseHeaders =, +        headerEntries(":status", "200", ":version", "HTTP/1.1", "content-type",, +            "text/html; charset=UTF-8");, +    stream.reply(, +        headerEntries(":status", "200", ":version", "HTTP/1.1", "content-type", contentType(file)),, +        true);, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +        for (int i = 0, size = headers.size(); i < size; i++) {, +++ b/okhttp-apache/src/main/java/com/squareup/okhttp/apache/OkApacheClient.java, +    for (int i = 0, size = headers.size(); i < size; i++) {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import static com.squareup.okhttp.internal.Util.headerEntries;, +, +    for (int i = 0, size = requestHeaders.size(); i < size; i++) {, +    List<Header> responseHeaders =, +        headerEntries(":status", "404", ":version", "HTTP/1.1", "content-type", "text/plain");, +    List<Header> responseHeaders =, +        headerEntries(":status", "200", ":version", "HTTP/1.1", "content-type",, +            "text/html; charset=UTF-8");, +    stream.reply(, +        headerEntries(":status", "200", ":version", "HTTP/1.1", "content-type", contentType(file)),, +        true);, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +        for (int i = 0, size = headers.size(); i < size; i++) {, +++ b/okhttp-apache/src/main/java/com/squareup/okhttp/apache/OkApacheClient.java, +    for (int i = 0, size = headers.size(); i < size; i++) {, +++ /dev/null, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import static com.squareup.okhttp.internal.Util.headerEntries;, +, +    for (int i = 0, size = requestHeaders.size(); i < size; i++) {, +    List<Header> responseHeaders =, +        headerEntries(":status", "404", ":version", "HTTP/1.1", "content-type", "text/plain");, +    List<Header> responseHeaders =, +        headerEntries(":status", "200", ":version", "HTTP/1.1", "content-type",, +            "text/html; charset=UTF-8");, +    stream.reply(, +        headerEntries(":status", "200", ":version", "HTTP/1.1", "content-type", contentType(file)),, +        true);, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +        for (int i = 0, size = headers.size(); i < size; i++) {, +++ b/okhttp-apache/src/main/java/com/squareup/okhttp/apache/OkApacheClient.java, +    for (int i = 0, size = headers.size(); i < size; i++) {, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +import static com.squareup.okhttp.internal.Util.headerEntries;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +import static com.squareup.okhttp.internal.Util.headerEntries;, +, +    for (int i = 0, size = requestHeaders.size(); i < size; i++) {, +    List<Header> responseHeaders =, +        headerEntries(":status", "404", ":version", "HTTP/1.1", "content-type", "text/plain");, +    List<Header> responseHeaders =, +        headerEntries(":status", "200", ":version", "HTTP/1.1", "content-type",, +            "text/html; charset=UTF-8");, +    stream.reply(, +        headerEntries(":status", "200", ":version", "HTTP/1.1", "content-type", contentType(file)),, +        true);, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +        for (int i = 0, size = headers.size(); i < size; i++) {, +++ b/okhttp-apache/src/main/java/com/squareup/okhttp/apache/OkApacheClient.java, +    for (int i = 0, size = headers.size(); i < size; i++) {, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +import static com.squareup.okhttp.internal.Util.headerEntries;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java, +import static com.squareup.okhttp.internal.Util.headerEntries;, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java]