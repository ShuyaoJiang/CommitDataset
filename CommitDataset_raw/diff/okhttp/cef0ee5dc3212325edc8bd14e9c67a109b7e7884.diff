[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +, +  @Test public void toMultimapGroupsHeaders() {, +    Headers headers = Headers.of(, +        "cache-control", "no-cache",, +        "cache-control", "no-store",, +        "user-agent", "OkHttp");, +    Map<String, List<String>> headerMap = headers.toMultimap();, +    assertEquals(2, headerMap.get("cache-control").size());, +    assertEquals(1, headerMap.get("user-agent").size());, +  }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java, +, +  @Test public void toMultimapGroupsHeaders() {, +    Headers headers = Headers.of(, +        "cache-control", "no-cache",, +        "cache-control", "no-store",, +        "user-agent", "OkHttp");, +    Map<String, List<String>> headerMap = headers.toMultimap();, +    assertEquals(2, headerMap.get("cache-control").size());, +    assertEquals(1, headerMap.get("user-agent").size());, +  }, +++ b/okhttp/src/main/java/com/squareup/okhttp/Headers.java, +import java.util.LinkedHashMap;, +  public Map<String, List<String>> toMultimap() {, +    Map<String, List<String>> result = new LinkedHashMap<String, List<String>>();, +    for (int i = 0, size = size(); i < size; i++) {, +      String name = name(i);, +      List<String> values = result.get(name);, +      if (values == null) {, +        values = new ArrayList<>(2);, +        result.put(name, values);, +      }, +      values.add(value(i));, +    }, +    return result;, +  }, +]