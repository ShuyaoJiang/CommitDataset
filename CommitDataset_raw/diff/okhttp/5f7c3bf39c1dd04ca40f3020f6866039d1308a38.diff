[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java, +import java.util.Arrays;, +   * Variable-length quantity special cases strings which are longer than 127, +   * bytes.  Values such as cookies can be 4KiB, and should be possible to send., +   *, +   * <p> http://tools.ietf.org/html/draft-ietf-httpbis-header-compression-05#section-4.1.2, +   */, +  @Test public void largeHeaderValue() throws IOException {, +    char[] value = new char[4096];, +    Arrays.fill(value, '!');, +    List<Header> headerBlock = headerEntries("cookie", new String(value));, +, +    hpackWriter.writeHeaders(headerBlock);, +    bytesIn.write(bytesOut, bytesOut.size());, +    hpackReader.readHeaders();, +    hpackReader.emitReferenceSet();, +, +    assertEquals(0, hpackReader.headerCount);, +, +    assertEquals(headerBlock, hpackReader.getAndReset());, +  }, +, +  /**, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java, +import java.util.Arrays;, +   * Variable-length quantity special cases strings which are longer than 127, +   * bytes.  Values such as cookies can be 4KiB, and should be possible to send., +   *, +   * <p> http://tools.ietf.org/html/draft-ietf-httpbis-header-compression-05#section-4.1.2, +   */, +  @Test public void largeHeaderValue() throws IOException {, +    char[] value = new char[4096];, +    Arrays.fill(value, '!');, +    List<Header> headerBlock = headerEntries("cookie", new String(value));, +, +    hpackWriter.writeHeaders(headerBlock);, +    bytesIn.write(bytesOut, bytesOut.size());, +    hpackReader.readHeaders();, +    hpackReader.emitReferenceSet();, +, +    assertEquals(0, hpackReader.headerCount);, +, +    assertEquals(headerBlock, hpackReader.getAndReset());, +  }, +, +  /**, +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java, +import java.util.Arrays;, +   * Variable-length quantity special cases strings which are longer than 127, +   * bytes.  Values such as cookies can be 4KiB, and should be possible to send., +   *, +   * <p> http://tools.ietf.org/html/draft-ietf-httpbis-header-compression-05#section-4.1.2, +   */, +  @Test public void largeHeaderValue() throws IOException {, +    char[] value = new char[4096];, +    Arrays.fill(value, '!');, +    List<Header> headerBlock = headerEntries("cookie", new String(value));, +, +    hpackWriter.writeHeaders(headerBlock);, +    bytesIn.write(bytesOut, bytesOut.size());, +    hpackReader.readHeaders();, +    hpackReader.emitReferenceSet();, +, +    assertEquals(0, hpackReader.headerCount);, +, +    assertEquals(headerBlock, hpackReader.getAndReset());, +  }, +, +  /**, +++ /dev/null, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpsURLConnectionImpl.java, +import java.io.IOException;, +import java.io.InputStream;, +import java.io.OutputStream;, +import java.net.ProtocolException;, +import java.security.Permission;, +import java.security.Principal;, +import java.security.cert.Certificate;, +import java.util.List;, +import java.util.Map;, +import javax.net.ssl.HttpsURLConnection;, +import javax.net.ssl.SSLPeerUnverifiedException;, +public final class HttpsURLConnectionImpl extends HttpsURLConnection {, +, +  /** Reuse HttpURLConnectionImpl. */, +    super(url);, +    delegate = new HttpURLConnectionImpl(url, client);, +  @Override public String getCipherSuite() {, +    Handshake handshake = handshake();, +    return handshake != null ? handshake.cipherSuite() : null;, +  @Override public Certificate[] getLocalCertificates() {, +    Handshake handshake = handshake();, +    if (handshake == null) return null;, +    List<Certificate> result = handshake.localCertificates();, +    return !result.isEmpty() ? result.toArray(new Certificate[result.size()]) : null;, +  }, +, +  @Override public Certificate[] getServerCertificates() throws SSLPeerUnverifiedException {, +    Handshake handshake = handshake();]