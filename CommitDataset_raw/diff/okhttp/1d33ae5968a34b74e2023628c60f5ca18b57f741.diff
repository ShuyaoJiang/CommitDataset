[+++ b/okhttp-apache/src/test/java/com/squareup/okhttp/apache/OkApacheClientTest.java, +import com.google.mockwebserver.RecordedRequest;, +import java.io.ByteArrayInputStream;, +import java.util.Arrays;, +import org.apache.http.entity.ByteArrayEntity;, +import org.apache.http.entity.InputStreamEntity;, +import org.junit.Before;, +import static org.junit.Assert.assertTrue;, +  private MockWebServer server;, +  private OkApacheClient client;, +, +  @Before public void setUp() throws IOException {, +    client = new OkApacheClient();, +    server = new MockWebServer();, +    server.play();, +  }, +, +  @Test public void postByteEntity() throws Exception {, +    server.enqueue(new MockResponse());, +, +    final HttpPost post = new HttpPost(server.getUrl("/").toURI());, +    byte[] body = "Hello, world!".getBytes("UTF-8");, +    post.setEntity(new ByteArrayEntity(body));, +    client.execute(post);, +, +    RecordedRequest request = server.takeRequest();, +    assertTrue(Arrays.equals(body, request.getBody()));, +    assertEquals(request.getHeader("Content-Length"), "13");, +  }, +, +  @Test public void postInputStreamEntity() throws Exception {, +    server.enqueue(new MockResponse());, +, +    final HttpPost post = new HttpPost(server.getUrl("/").toURI());, +    byte[] body = "Hello, world!".getBytes("UTF-8");, +    post.setEntity(new InputStreamEntity(new ByteArrayInputStream(body), body.length));, +    client.execute(post);, +, +    RecordedRequest request = server.takeRequest();, +    assertTrue(Arrays.equals(body, request.getBody()));, +    assertEquals(request.getHeader("Content-Length"), "13");, +  }]