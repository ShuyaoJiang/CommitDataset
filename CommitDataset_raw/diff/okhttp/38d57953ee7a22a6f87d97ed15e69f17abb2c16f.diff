[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void cancelInFlightBeforeResponseReadThrowsIOE() throws Exception {, +    server.setDispatcher(new Dispatcher() {, +      @Override public MockResponse dispatch(RecordedRequest request) {, +        client.cancel("request");, +        return new MockResponse().setBody("A");, +      }, +    });, +    server.play();, +, +    Request request = new Request.Builder().url(server.getUrl("/a")).tag("request").build();, +    try {, +      client.newCall(request).execute();, +      fail();, +    } catch (IOException e) {, +    }, +  }, +, +  @Test public void cancelInFlightBeforeResponseReadThrowsIOE_HTTP_2() throws Exception {, +    enableProtocol(Protocol.HTTP_2);, +    cancelInFlightBeforeResponseReadThrowsIOE();, +  }, +, +  @Test public void cancelInFlightBeforeResponseReadThrowsIOE_SPDY_3() throws Exception {, +    enableProtocol(Protocol.SPDY_3);, +    cancelInFlightBeforeResponseReadThrowsIOE();, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void cancelInFlightBeforeResponseReadThrowsIOE() throws Exception {, +    server.setDispatcher(new Dispatcher() {, +      @Override public MockResponse dispatch(RecordedRequest request) {, +        client.cancel("request");, +        return new MockResponse().setBody("A");, +      }, +    });, +    server.play();, +, +    Request request = new Request.Builder().url(server.getUrl("/a")).tag("request").build();, +    try {, +      client.newCall(request).execute();, +      fail();, +    } catch (IOException e) {, +    }, +  }, +, +  @Test public void cancelInFlightBeforeResponseReadThrowsIOE_HTTP_2() throws Exception {, +    enableProtocol(Protocol.HTTP_2);, +    cancelInFlightBeforeResponseReadThrowsIOE();, +  }, +, +  @Test public void cancelInFlightBeforeResponseReadThrowsIOE_SPDY_3() throws Exception {, +    enableProtocol(Protocol.SPDY_3);, +    cancelInFlightBeforeResponseReadThrowsIOE();, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +    try {, +      client.getDispatcher().executed(this);, +      System.out.println("releasing");, +    } finally {, +      client.getDispatcher().finished(this);, +    }, +  }, +, +  Object tag() {, +    return request.tag();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void cancelInFlightBeforeResponseReadThrowsIOE() throws Exception {, +    server.setDispatcher(new Dispatcher() {, +      @Override public MockResponse dispatch(RecordedRequest request) {, +        client.cancel("request");, +        return new MockResponse().setBody("A");, +      }, +    });, +    server.play();, +, +    Request request = new Request.Builder().url(server.getUrl("/a")).tag("request").build();, +    try {, +      client.newCall(request).execute();, +      fail();, +    } catch (IOException e) {, +    }, +  }, +, +  @Test public void cancelInFlightBeforeResponseReadThrowsIOE_HTTP_2() throws Exception {, +    enableProtocol(Protocol.HTTP_2);, +    cancelInFlightBeforeResponseReadThrowsIOE();, +  }, +, +  @Test public void cancelInFlightBeforeResponseReadThrowsIOE_SPDY_3() throws Exception {, +    enableProtocol(Protocol.SPDY_3);, +    cancelInFlightBeforeResponseReadThrowsIOE();, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +    try {, +      client.getDispatcher().executed(this);, +      System.out.println("releasing");, +    } finally {]