[+++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +import java.io.IOException;, +import java.net.URLConnection;, +import java.net.URLStreamHandler;, +import java.net.URLStreamHandlerFactory;, +public final class OkHttpClient implements URLStreamHandlerFactory {, +, +  /**, +   * Creates a URLStreamHandler as a {@link URL#setURLStreamHandlerFactory}., +   *, +   * <p>This code configures OkHttp to handle all HTTP and HTTPS connections, +   * created with {@link URL#openConnection()}: <pre>   {@code, +   *, +   *   OkHttpClient okHttpClient = new OkHttpClient();, +   *   URL.setURLStreamHandlerFactory(okHttpClient);, +   * }</pre>, +   */, +  public URLStreamHandler createURLStreamHandler(final String protocol) {, +    if (!protocol.equals("http") && !protocol.equals("https")) return null;, +, +    return new URLStreamHandler() {, +      @Override protected URLConnection openConnection(URL url) {, +        return open(url);, +      }, +, +      @Override protected URLConnection openConnection(URL url, Proxy proxy) {, +        return open(url, proxy);, +      }, +, +      @Override protected int getDefaultPort() {, +        if (protocol.equals("http")) return 80;, +        if (protocol.equals("https")) return 443;, +        throw new AssertionError();, +      }, +    };, +  }, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +import java.io.IOException;, +import java.net.URLConnection;, +import java.net.URLStreamHandler;, +import java.net.URLStreamHandlerFactory;, +public final class OkHttpClient implements URLStreamHandlerFactory {, +, +  /**, +   * Creates a URLStreamHandler as a {@link URL#setURLStreamHandlerFactory}., +   *, +   * <p>This code configures OkHttp to handle all HTTP and HTTPS connections, +   * created with {@link URL#openConnection()}: <pre>   {@code, +   *, +   *   OkHttpClient okHttpClient = new OkHttpClient();, +   *   URL.setURLStreamHandlerFactory(okHttpClient);, +   * }</pre>, +   */, +  public URLStreamHandler createURLStreamHandler(final String protocol) {, +    if (!protocol.equals("http") && !protocol.equals("https")) return null;, +, +    return new URLStreamHandler() {, +      @Override protected URLConnection openConnection(URL url) {, +        return open(url);, +      }, +, +      @Override protected URLConnection openConnection(URL url, Proxy proxy) {, +        return open(url, proxy);, +      }, +, +      @Override protected int getDefaultPort() {, +        if (protocol.equals("http")) return 80;, +        if (protocol.equals("https")) return 443;, +        throw new AssertionError();, +      }, +    };, +  }, +++ /dev/null]