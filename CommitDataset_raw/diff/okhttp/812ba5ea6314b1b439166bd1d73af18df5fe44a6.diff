[+++ b/.gitignore, +++ b/.gitignore, +++ b/okhttp-apache/src/main/java/com/squareup/okhttp/apache/OkApacheClient.java, +        // Buffer short, fixed-length request bodies. This costs memory, but permits the request to, +        // be transparently retried if there is a connection failure., +++ b/.gitignore, +++ b/okhttp-apache/src/main/java/com/squareup/okhttp/apache/OkApacheClient.java, +        // Buffer short, fixed-length request bodies. This costs memory, but permits the request to, +        // be transparently retried if there is a connection failure., +++ b/okhttp-apache/src/test/java/com/squareup/okhttp/apache/OkApacheClientTest.java, +++ b/.gitignore, +++ b/okhttp-apache/src/main/java/com/squareup/okhttp/apache/OkApacheClient.java, +        // Buffer short, fixed-length request bodies. This costs memory, but permits the request to, +        // be transparently retried if there is a connection failure., +++ b/okhttp-apache/src/test/java/com/squareup/okhttp/apache/OkApacheClientTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +++ b/.gitignore, +++ b/okhttp-apache/src/main/java/com/squareup/okhttp/apache/OkApacheClient.java, +        // Buffer short, fixed-length request bodies. This costs memory, but permits the request to, +        // be transparently retried if there is a connection failure., +++ b/okhttp-apache/src/test/java/com/squareup/okhttp/apache/OkApacheClientTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +        : OkHostnameVerifier.INSTANCE;, +++ b/.gitignore, +++ b/okhttp-apache/src/main/java/com/squareup/okhttp/apache/OkApacheClient.java, +        // Buffer short, fixed-length request bodies. This costs memory, but permits the request to, +        // be transparently retried if there is a connection failure., +++ b/okhttp-apache/src/test/java/com/squareup/okhttp/apache/OkApacheClientTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +        : OkHostnameVerifier.INSTANCE;, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Platform.java, +      openSslSocketClass = Class.forName("org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl");, +    return getMtu != null ? new Java5(getMtu) : new Platform();, +  private static class Java5 extends Platform {, +    private Java5(Method getMtu) {, +  /**, +   * Android version 2.3 and newer support TLS session tickets and server name, +   * indication (SNI)., +   */, +  private static class Android23 extends Java5 {, +  /**, +   * OpenJDK 7 plus {@code org.mortbay.jetty.npn/npn-boot} on the boot class, +   * path., +   */, +  private static class JdkWithJettyNpnPlatform extends Java5 {, +++ b/.gitignore, +++ b/okhttp-apache/src/main/java/com/squareup/okhttp/apache/OkApacheClient.java, +        // Buffer short, fixed-length request bodies. This costs memory, but permits the request to, +        // be transparently retried if there is a connection failure., +++ b/okhttp-apache/src/test/java/com/squareup/okhttp/apache/OkApacheClientTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +        : OkHostnameVerifier.INSTANCE;, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Platform.java, +      openSslSocketClass = Class.forName("org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl");, +    return getMtu != null ? new Java5(getMtu) : new Platform();, +  private static class Java5 extends Platform {, +    private Java5(Method getMtu) {, +  /**, +   * Android version 2.3 and newer support TLS session tickets and server name, +   * indication (SNI)., +   */, +  private static class Android23 extends Java5 {, +  /**, +   * OpenJDK 7 plus {@code org.mortbay.jetty.npn/npn-boot} on the boot class, +   * path., +   */, +  private static class JdkWithJettyNpnPlatform extends Java5 {, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java, +          hostnameVerifier, policy.authenticator, policy.requestedProxy, policy.transports);, +++ b/.gitignore, +++ b/okhttp-apache/src/main/java/com/squareup/okhttp/apache/OkApacheClient.java, +        // Buffer short, fixed-length request bodies. This costs memory, but permits the request to, +        // be transparently retried if there is a connection failure., +++ b/okhttp-apache/src/test/java/com/squareup/okhttp/apache/OkApacheClientTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +        : OkHostnameVerifier.INSTANCE;, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Platform.java, +      openSslSocketClass = Class.forName("org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl");, +    return getMtu != null ? new Java5(getMtu) : new Platform();, +  private static class Java5 extends Platform {, +    private Java5(Method getMtu) {, +  /**, +   * Android version 2.3 and newer support TLS session tickets and server name, +   * indication (SNI)., +   */, +  private static class Android23 extends Java5 {, +  /**, +   * OpenJDK 7 plus {@code org.mortbay.jetty.npn/npn-boot} on the boot class, +   * path., +   */, +  private static class JdkWithJettyNpnPlatform extends Java5 {, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java, +          hostnameVerifier, policy.authenticator, policy.requestedProxy, policy.transports);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java, +    RawHeaders headers = RawHeaders.fromBytes(socketIn);, +    httpEngine.connection.setHttpMinorVersion(headers.getHttpMinorVersion());]