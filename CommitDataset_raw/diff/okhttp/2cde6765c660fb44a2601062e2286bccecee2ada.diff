[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/AutobahnTester.java, +          @Override public void onOpen(WebSocket webSocket, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response) {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/AutobahnTester.java, +          @Override public void onOpen(WebSocket webSocket, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response) {, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/WebSocketCallTest.java, +      @Override public void onOpen(final WebSocket webSocket, Response response) {, +        new Thread() {, +          @Override public void run() {, +            try {, +            } catch (IOException e) {, +              throw new AssertionError(e);, +            }, +          }, +        }.start();, +      @Override public void onOpen(final WebSocket webSocket, Response response) {, +        new Thread() {, +          @Override public void run() {, +            try {, +            } catch (IOException e) {, +              throw new AssertionError(e);, +            }, +          }, +        }.start();, +      @Override public void onOpen(WebSocket webSocket, Response response) {, +    @Override public void onOpen(WebSocket webSocket, Response response) {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/AutobahnTester.java, +          @Override public void onOpen(WebSocket webSocket, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response) {, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/WebSocketCallTest.java, +      @Override public void onOpen(final WebSocket webSocket, Response response) {, +        new Thread() {, +          @Override public void run() {, +            try {, +            } catch (IOException e) {, +              throw new AssertionError(e);, +            }, +          }, +        }.start();, +      @Override public void onOpen(final WebSocket webSocket, Response response) {, +        new Thread() {, +          @Override public void run() {, +            try {, +            } catch (IOException e) {, +              throw new AssertionError(e);, +            }, +          }, +        }.start();, +      @Override public void onOpen(WebSocket webSocket, Response response) {, +    @Override public void onOpen(WebSocket webSocket, Response response) {, +++ b/okhttp-ws/src/main/java/com/squareup/okhttp/ws/WebSocketCall.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/AutobahnTester.java, +          @Override public void onOpen(WebSocket webSocket, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response) {, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/WebSocketCallTest.java, +      @Override public void onOpen(final WebSocket webSocket, Response response) {, +        new Thread() {, +          @Override public void run() {, +            try {, +            } catch (IOException e) {, +              throw new AssertionError(e);, +            }, +          }, +        }.start();, +      @Override public void onOpen(final WebSocket webSocket, Response response) {, +        new Thread() {, +          @Override public void run() {, +            try {, +            } catch (IOException e) {, +              throw new AssertionError(e);, +            }, +          }, +        }.start();, +      @Override public void onOpen(WebSocket webSocket, Response response) {, +    @Override public void onOpen(WebSocket webSocket, Response response) {, +++ b/okhttp-ws/src/main/java/com/squareup/okhttp/ws/WebSocketCall.java, +++ b/okhttp-ws/src/main/java/com/squareup/okhttp/ws/WebSocketListener.java, +   * Called when the request has successfully been upgraded to a web socket. This method is called, +   * on the message reading thread to allow setting up any state before the, +   * {@linkplain #onMessage message}, {@linkplain #onPong pong}, and {@link #onClose close}, +   * callbacks start., +   * <p>, +   * <b>Do not</b> use this callback to write to the web socket. Start a new thread or use, +   * another thread in your application., +  void onOpen(WebSocket webSocket, Response response);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/AutobahnTester.java, +          @Override public void onOpen(WebSocket webSocket, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response) {]