[+++ b/src/main/java/com/squareup/okhttp/internal/net/spdy/SpdyConnection.java, +        @Override public void headers(int flags, int streamId, List<String> nameValueBlock), +                throws IOException {, +            SpdyStream replyStream = getStream(streamId);, +            if (replyStream != null) {, +                try {, +                    replyStream.receiveHeaders(nameValueBlock);, +                } catch (ProtocolException e) {, +                    replyStream.closeLater(SpdyStream.RST_PROTOCOL_ERROR);, +                }, +            }, +        }, +, +++ b/src/main/java/com/squareup/okhttp/internal/net/spdy/SpdyConnection.java, +        @Override public void headers(int flags, int streamId, List<String> nameValueBlock), +                throws IOException {, +            SpdyStream replyStream = getStream(streamId);, +            if (replyStream != null) {, +                try {, +                    replyStream.receiveHeaders(nameValueBlock);, +                } catch (ProtocolException e) {, +                    replyStream.closeLater(SpdyStream.RST_PROTOCOL_ERROR);, +                }, +            }, +        }, +, +++ b/src/main/java/com/squareup/okhttp/internal/net/spdy/SpdyReader.java, +                readHeaders(handler, flags, length);, +                return true;, +    private void readHeaders(Handler handler, int flags, int length) throws IOException {, +        int w1 = in.readInt();, +        in.readShort(); // unused, +        int streamId = w1 & 0x7fffffff;, +        List<String> nameValueBlock = readNameValueBlock(length - 6);, +        handler.headers(flags, streamId, nameValueBlock);, +    }, +, +        void headers(int flags, int streamId, List<String> nameValueBlock) throws IOException;, +++ b/src/main/java/com/squareup/okhttp/internal/net/spdy/SpdyConnection.java, +        @Override public void headers(int flags, int streamId, List<String> nameValueBlock), +                throws IOException {, +            SpdyStream replyStream = getStream(streamId);, +            if (replyStream != null) {, +                try {, +                    replyStream.receiveHeaders(nameValueBlock);, +                } catch (ProtocolException e) {, +                    replyStream.closeLater(SpdyStream.RST_PROTOCOL_ERROR);, +                }, +            }, +        }, +, +++ b/src/main/java/com/squareup/okhttp/internal/net/spdy/SpdyReader.java, +                readHeaders(handler, flags, length);, +                return true;, +    private void readHeaders(Handler handler, int flags, int length) throws IOException {, +        int w1 = in.readInt();, +        in.readShort(); // unused, +        int streamId = w1 & 0x7fffffff;, +        List<String> nameValueBlock = readNameValueBlock(length - 6);, +        handler.headers(flags, streamId, nameValueBlock);, +    }, +, +        void headers(int flags, int streamId, List<String> nameValueBlock) throws IOException;, +++ b/src/main/java/com/squareup/okhttp/internal/net/spdy/SpdyStream.java, +import java.util.ArrayList;, +    void receiveHeaders(List<String> headers) throws IOException {, +        assert (!Thread.holdsLock(SpdyStream.this));, +        synchronized (this) {, +            if (responseHeaders == null) {, +                throw new ProtocolException();, +            }, +            List<String> newHeaders = new ArrayList<String>();, +            newHeaders.addAll(responseHeaders);, +            newHeaders.addAll(headers);, +            this.responseHeaders = newHeaders;, +        }, +    }, +, +++ b/src/main/java/com/squareup/okhttp/internal/net/spdy/SpdyConnection.java, +        @Override public void headers(int flags, int streamId, List<String> nameValueBlock), +                throws IOException {, +            SpdyStream replyStream = getStream(streamId);, +            if (replyStream != null) {, +                try {, +                    replyStream.receiveHeaders(nameValueBlock);, +                } catch (ProtocolException e) {, +                    replyStream.closeLater(SpdyStream.RST_PROTOCOL_ERROR);, +                }, +            }, +        }, +, +++ b/src/main/java/com/squareup/okhttp/internal/net/spdy/SpdyReader.java, +                readHeaders(handler, flags, length);, +                return true;, +    private void readHeaders(Handler handler, int flags, int length) throws IOException {, +        int w1 = in.readInt();, +        in.readShort(); // unused, +        int streamId = w1 & 0x7fffffff;, +        List<String> nameValueBlock = readNameValueBlock(length - 6);, +        handler.headers(flags, streamId, nameValueBlock);]