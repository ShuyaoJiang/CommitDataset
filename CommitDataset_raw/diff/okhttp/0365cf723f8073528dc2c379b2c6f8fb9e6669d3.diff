[+++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +import okio.Buffer;, +      result.setChunkedBody(new Buffer().write(body), 1024);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +import okio.Buffer;, +      result.setChunkedBody(new Buffer().write(body), 1024);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import okio.Buffer;, +  private Buffer body;, +    setBody(new Buffer());, +  public Buffer getBody() {, +    return body != null ? body.clone() : null; // Defensive copy., +    return bodyStream != null ? bodyStream : getBody().inputStream();, +    return setBody(new Buffer().write(body));, +  }, +, +  public MockResponse setBody(Buffer body) {, +    setHeader("Content-Length", body.size());, +    this.body = body.clone(); // Defensive copy., +    return setBody(new Buffer().writeUtf8(body));, +  public MockResponse setChunkedBody(Buffer body, int maxChunkSize) {, +    Buffer bytesOut = new Buffer();, +    while (!body.exhausted()) {, +      long chunkSize = Math.min(body.size(), maxChunkSize);, +      bytesOut.writeUtf8(Long.toHexString(chunkSize));, +      bytesOut.writeUtf8("\r\n");, +      bytesOut.write(body, chunkSize);, +      bytesOut.writeUtf8("\r\n");, +    bytesOut.writeUtf8("0\r\n\r\n"); // Last chunk + empty trailer + CRLF., +    this.body = bytesOut;, +    return setChunkedBody(new Buffer().writeUtf8(body), maxChunkSize);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +import okio.Buffer;, +      result.setChunkedBody(new Buffer().write(body), 1024);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import okio.Buffer;, +  private Buffer body;, +    setBody(new Buffer());, +  public Buffer getBody() {, +    return body != null ? body.clone() : null; // Defensive copy., +    return bodyStream != null ? bodyStream : getBody().inputStream();, +    return setBody(new Buffer().write(body));, +  }, +, +  public MockResponse setBody(Buffer body) {, +    setHeader("Content-Length", body.size());, +    this.body = body.clone(); // Defensive copy., +    return setBody(new Buffer().writeUtf8(body));, +  public MockResponse setChunkedBody(Buffer body, int maxChunkSize) {, +    Buffer bytesOut = new Buffer();, +    while (!body.exhausted()) {, +      long chunkSize = Math.min(body.size(), maxChunkSize);, +      bytesOut.writeUtf8(Long.toHexString(chunkSize));, +      bytesOut.writeUtf8("\r\n");, +      bytesOut.write(body, chunkSize);, +      bytesOut.writeUtf8("\r\n");, +    bytesOut.writeUtf8("0\r\n\r\n"); // Last chunk + empty trailer + CRLF., +    this.body = bytesOut;, +    return setChunkedBody(new Buffer().writeUtf8(body), maxChunkSize);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +      Buffer body = response.getBody();, +      if (body == null) body = new Buffer();, +        Buffer pushedBody = pushPromise.getResponse().getBody();, +            stream.getConnection().pushStream(stream.getId(), pushedHeaders, pushedBody.size() > 0);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +import okio.Buffer;, +      result.setChunkedBody(new Buffer().write(body), 1024);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import okio.Buffer;, +  private Buffer body;, +    setBody(new Buffer());, +  public Buffer getBody() {, +    return body != null ? body.clone() : null; // Defensive copy., +    return bodyStream != null ? bodyStream : getBody().inputStream();, +    return setBody(new Buffer().write(body));, +  }, +, +  public MockResponse setBody(Buffer body) {, +    setHeader("Content-Length", body.size());, +    this.body = body.clone(); // Defensive copy., +    return setBody(new Buffer().writeUtf8(body));, +  public MockResponse setChunkedBody(Buffer body, int maxChunkSize) {, +    Buffer bytesOut = new Buffer();, +    while (!body.exhausted()) {, +      long chunkSize = Math.min(body.size(), maxChunkSize);, +      bytesOut.writeUtf8(Long.toHexString(chunkSize));, +      bytesOut.writeUtf8("\r\n");, +      bytesOut.write(body, chunkSize);, +      bytesOut.writeUtf8("\r\n");, +    bytesOut.writeUtf8("0\r\n\r\n"); // Last chunk + empty trailer + CRLF., +    this.body = bytesOut;, +    return setChunkedBody(new Buffer().writeUtf8(body), maxChunkSize);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +      Buffer body = response.getBody();, +      if (body == null) body = new Buffer();, +        Buffer pushedBody = pushPromise.getResponse().getBody();, +            stream.getConnection().pushStream(stream.getId(), pushedHeaders, pushedBody.size() > 0);, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +import okio.Buffer;, +      Buffer buffer = new Buffer();]