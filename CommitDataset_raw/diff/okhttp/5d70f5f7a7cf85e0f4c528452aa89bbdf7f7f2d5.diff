[+++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +, +      if (response.getSocketPolicy() == DISCONNECT_AT_END) {, +        Http2Connection connection = stream.getConnection();, +        connection.shutdown(ErrorCode.NO_ERROR);, +      }, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +, +      if (response.getSocketPolicy() == DISCONNECT_AT_END) {, +        Http2Connection connection = stream.getConnection();, +        connection.shutdown(ErrorCode.NO_ERROR);, +      }, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/SocketPolicy.java, +   * Close the socket after the response. This is the default HTTP/1.0 behavior. For HTTP/2, +   * connections, this sends a <a href="https://tools.ietf.org/html/rfc7540#section-6.8">GOAWAY, +   * frame</a> immediately after the response and will close the connection when the client's socket, +   * is exhausted., +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +, +      if (response.getSocketPolicy() == DISCONNECT_AT_END) {, +        Http2Connection connection = stream.getConnection();, +        connection.shutdown(ErrorCode.NO_ERROR);, +      }, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/SocketPolicy.java, +   * Close the socket after the response. This is the default HTTP/1.0 behavior. For HTTP/2, +   * connections, this sends a <a href="https://tools.ietf.org/html/rfc7540#section-6.8">GOAWAY, +   * frame</a> immediately after the response and will close the connection when the client's socket, +   * is exhausted., +++ b/okhttp/src/main/java/okhttp3/HttpUrl.java, +   * <p>These differences may have a significant consequence when the URI is interpretted by a, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +, +      if (response.getSocketPolicy() == DISCONNECT_AT_END) {, +        Http2Connection connection = stream.getConnection();, +        connection.shutdown(ErrorCode.NO_ERROR);, +      }, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/SocketPolicy.java, +   * Close the socket after the response. This is the default HTTP/1.0 behavior. For HTTP/2, +   * connections, this sends a <a href="https://tools.ietf.org/html/rfc7540#section-6.8">GOAWAY, +   * frame</a> immediately after the response and will close the connection when the client's socket, +   * is exhausted., +++ b/okhttp/src/main/java/okhttp3/HttpUrl.java, +   * <p>These differences may have a significant consequence when the URI is interpretted by a, +++ b/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java, +      return !http2Connection.isShutdown();, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +, +      if (response.getSocketPolicy() == DISCONNECT_AT_END) {, +        Http2Connection connection = stream.getConnection();, +        connection.shutdown(ErrorCode.NO_ERROR);, +      }, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/SocketPolicy.java, +   * Close the socket after the response. This is the default HTTP/1.0 behavior. For HTTP/2, +   * connections, this sends a <a href="https://tools.ietf.org/html/rfc7540#section-6.8">GOAWAY, +   * frame</a> immediately after the response and will close the connection when the client's socket, +   * is exhausted., +++ b/okhttp/src/main/java/okhttp3/HttpUrl.java, +   * <p>These differences may have a significant consequence when the URI is interpretted by a, +++ b/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java, +      return !http2Connection.isShutdown();, +++ b/okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java, +      // TODO: propagate exception message into debugData., +      // TODO: configure a timeout on the reader so that it doesn’t block forever., +  public synchronized boolean isShutdown() {, +    return shutdown;, +  }, +, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +, +      if (response.getSocketPolicy() == DISCONNECT_AT_END) {, +        Http2Connection connection = stream.getConnection();, +        connection.shutdown(ErrorCode.NO_ERROR);, +      }, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/SocketPolicy.java, +   * Close the socket after the response. This is the default HTTP/1.0 behavior. For HTTP/2, +   * connections, this sends a <a href="https://tools.ietf.org/html/rfc7540#section-6.8">GOAWAY, +   * frame</a> immediately after the response and will close the connection when the client's socket, +   * is exhausted., +++ b/okhttp/src/main/java/okhttp3/HttpUrl.java, +   * <p>These differences may have a significant consequence when the URI is interpretted by a, +++ b/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java, +      return !http2Connection.isShutdown();, +++ b/okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java, +      // TODO: propagate exception message into debugData., +      // TODO: configure a timeout on the reader so that it doesn’t block forever., +  public synchronized boolean isShutdown() {, +    return shutdown;, +  }, +, +++ b/okhttp/src/main/java/okhttp3/internal/http2/Http2Writer.java, +   * and (@code :path}., +   * @param byteCount must be between 0 and the minimum of {code source.length} and {@link, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +, +      if (response.getSocketPolicy() == DISCONNECT_AT_END) {, +        Http2Connection connection = stream.getConnection();, +        connection.shutdown(ErrorCode.NO_ERROR);, +      }, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/SocketPolicy.java, +   * Close the socket after the response. This is the default HTTP/1.0 behavior. For HTTP/2]