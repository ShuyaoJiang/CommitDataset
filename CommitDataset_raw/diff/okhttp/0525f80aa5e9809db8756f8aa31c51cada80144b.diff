[+++ b/CHANGELOG.md, +    connections for HTTP/1.x. With this update the connection pool manages both, +++ b/CHANGELOG.md, +    connections for HTTP/1.x. With this update the connection pool manages both, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +   *, +++ b/CHANGELOG.md, +    connections for HTTP/1.x. With this update the connection pool manages both, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +   *, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/CustomDispatcherTest.java, +    final URL url = mockWebServer.getUrl("/");, +        final URL url = mockWebServer.getUrl(path);, +++ b/CHANGELOG.md, +    connections for HTTP/1.x. With this update the connection pool manages both, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +   *, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/CustomDispatcherTest.java, +    final URL url = mockWebServer.getUrl("/");, +        final URL url = mockWebServer.getUrl(path);, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +    URL url = server.getUrl("/");, +        .addHeader("Location: " + server.getUrl("/new-path")), +    URLConnection connection = server.getUrl("/").openConnection();, +    URLConnection connection = server.getUrl("/").openConnection();, +    URLConnection connection = server.getUrl("/").openConnection();, +    URLConnection urlConnection = server.getUrl("/").openConnection();, +    URLConnection urlConnection2 = server.getUrl("/").openConnection();, +      server.getUrl("/a").openConnection().getInputStream();, +    server.getUrl("/b").openConnection().getInputStream(); // Should succeed., +    URLConnection connection = server.getUrl("/").openConnection();, +    URLConnection connection = server.getUrl("/").openConnection();, +    URLConnection connection = server.getUrl("/").openConnection();, +    HttpURLConnection connection = (HttpURLConnection) server.getUrl("/").openConnection();, +    URLConnection connection = server.getUrl("/").openConnection();, +        server.getUrl("/").openConnection().connect();, +      server.getUrl("/").openConnection().connect();, +++ b/CHANGELOG.md, +    connections for HTTP/1.x. With this update the connection pool manages both, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +   *, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/CustomDispatcherTest.java, +    final URL url = mockWebServer.getUrl("/");, +        final URL url = mockWebServer.getUrl(path);, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +    URL url = server.getUrl("/");, +        .addHeader("Location: " + server.getUrl("/new-path")), +    URLConnection connection = server.getUrl("/").openConnection();, +    URLConnection connection = server.getUrl("/").openConnection();, +    URLConnection connection = server.getUrl("/").openConnection();, +    URLConnection urlConnection = server.getUrl("/").openConnection();, +    URLConnection urlConnection2 = server.getUrl("/").openConnection();, +      server.getUrl("/a").openConnection().getInputStream();, +    server.getUrl("/b").openConnection().getInputStream(); // Should succeed., +    URLConnection connection = server.getUrl("/").openConnection();, +    URLConnection connection = server.getUrl("/").openConnection();, +    URLConnection connection = server.getUrl("/").openConnection();, +    HttpURLConnection connection = (HttpURLConnection) server.getUrl("/").openConnection();, +    URLConnection connection = server.getUrl("/").openConnection();, +        server.getUrl("/").openConnection().connect();, +      server.getUrl("/").openConnection().connect();, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/CacheAdapterTest.java, +    return server.getUrl("/");, +    return server.getUrl("/");, +++ b/CHANGELOG.md, +    connections for HTTP/1.x. With this update the connection pool manages both, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +   *, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/CustomDispatcherTest.java, +    final URL url = mockWebServer.getUrl("/");, +        final URL url = mockWebServer.getUrl(path);, +++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +    URL url = server.getUrl("/");, +        .addHeader("Location: " + server.getUrl("/new-path")), +    URLConnection connection = server.getUrl("/").openConnection();, +    URLConnection connection = server.getUrl("/").openConnection();, +    URLConnection connection = server.getUrl("/").openConnection();, +    URLConnection urlConnection = server.getUrl("/").openConnection();, +    URLConnection urlConnection2 = server.getUrl("/").openConnection();, +      server.getUrl("/a").openConnection().getInputStream();, +    server.getUrl("/b").openConnection().getInputStream(); // Should succeed., +    URLConnection connection = server.getUrl("/").openConnection();, +    URLConnection connection = server.getUrl("/").openConnection();, +    URLConnection connection = server.getUrl("/").openConnection();, +    HttpURLConnection connection = (HttpURLConnection) server.getUrl("/").openConnection();, +    URLConnection connection = server.getUrl("/").openConnection();, +        server.getUrl("/").openConnection().connect();, +      server.getUrl("/").openConnection().connect();, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/CacheAdapterTest.java, +    return server.getUrl("/");, +    return server.getUrl("/");, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/ResponseCacheTest.java, +    URL url = server.getUrl("/");, +    HttpURLConnection urlConnection = openConnection(server.getUrl("/"));, +    urlConnection = openConnection(server.getUrl("/")); // cached!, +    HttpsURLConnection c1 = (HttpsURLConnection) openConnection(server.getUrl("/"));, +    HttpsURLConnection c2 = (HttpsURLConnection) openConnection(server.getUrl("/")); // cached!, +    HttpURLConnection connection = openConnection(server.getUrl("/"));, +    connection = openConnection(server.getUrl("/")); // cached!, +    assertEquals("ABC", readAscii(openConnection(server.getUrl("/foo"))));]