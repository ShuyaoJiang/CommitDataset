[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/DiskLruCache.java, +import java.io.BufferedWriter;, +import java.io.InputStreamReader;, +import java.io.OutputStreamWriter;, +import java.io.Writer;, +  private Writer journalWriter;, +        cache.journalWriter = new BufferedWriter(, +            new OutputStreamWriter(new FileOutputStream(cache.journalFile, true), Util.US_ASCII));, +    Writer writer = new BufferedWriter(, +        new OutputStreamWriter(new FileOutputStream(journalFileTmp), Util.US_ASCII));, +      writer.write(MAGIC);, +      writer.write("\n");, +      writer.write(VERSION_1);, +      writer.write("\n");, +      writer.write(Integer.toString(appVersion));, +      writer.write("\n");, +      writer.write(Integer.toString(valueCount));, +      writer.write("\n");, +      writer.write("\n");, +          writer.write(DIRTY + ' ' + entry.key + '\n');, +          writer.write(CLEAN + ' ' + entry.key + entry.getLengths() + '\n');, +    journalWriter = new BufferedWriter(, +        new OutputStreamWriter(new FileOutputStream(journalFile, true), Util.US_ASCII));, +    journalWriter.append(READ + ' ' + key + '\n');, +    journalWriter.write(DIRTY + ' ' + key + '\n');, +      journalWriter.write(CLEAN + ' ' + entry.key + entry.getLengths() + '\n');, +      journalWriter.write(REMOVE + ' ' + entry.key + '\n');, +    journalWriter.append(REMOVE + ' ' + key + '\n');, +    return Util.readFully(new InputStreamReader(in, Util.UTF_8));, +      Writer writer = null;, +        writer = new OutputStreamWriter(newOutputStream(index), Util.UTF_8);, +        writer.write(value);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/DiskLruCache.java, +import java.io.BufferedWriter;, +import java.io.InputStreamReader;, +import java.io.OutputStreamWriter;, +import java.io.Writer;, +  private Writer journalWriter;, +        cache.journalWriter = new BufferedWriter(, +            new OutputStreamWriter(new FileOutputStream(cache.journalFile, true), Util.US_ASCII));, +    Writer writer = new BufferedWriter(, +        new OutputStreamWriter(new FileOutputStream(journalFileTmp), Util.US_ASCII));, +      writer.write(MAGIC);, +      writer.write("\n");, +      writer.write(VERSION_1);, +      writer.write("\n");, +      writer.write(Integer.toString(appVersion));, +      writer.write("\n");, +      writer.write(Integer.toString(valueCount));, +      writer.write("\n");, +      writer.write("\n");, +          writer.write(DIRTY + ' ' + entry.key + '\n');, +          writer.write(CLEAN + ' ' + entry.key + entry.getLengths() + '\n');, +    journalWriter = new BufferedWriter(, +        new OutputStreamWriter(new FileOutputStream(journalFile, true), Util.US_ASCII));, +    journalWriter.append(READ + ' ' + key + '\n');, +    journalWriter.write(DIRTY + ' ' + key + '\n');, +      journalWriter.write(CLEAN + ' ' + entry.key + entry.getLengths() + '\n');, +      journalWriter.write(REMOVE + ' ' + entry.key + '\n');, +    journalWriter.append(REMOVE + ' ' + key + '\n');, +    return Util.readFully(new InputStreamReader(in, Util.UTF_8));, +      Writer writer = null;, +        writer = new OutputStreamWriter(newOutputStream(index), Util.UTF_8);, +        writer.write(value);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Util.java, +import java.io.Reader;, +import java.io.StringWriter;, +  /** Returns the remainder of 'reader' as a string, closing it when done. */, +  public static String readFully(Reader reader) throws IOException {, +    try {, +      StringWriter writer = new StringWriter();, +      char[] buffer = new char[1024];, +      int count;, +      while ((count = reader.read(buffer)) != -1) {, +        writer.write(buffer, 0, count);, +      return writer.toString();, +    } finally {, +      reader.close();, +    }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/DiskLruCache.java, +import java.io.BufferedWriter;, +import java.io.InputStreamReader;, +import java.io.OutputStreamWriter;, +import java.io.Writer;, +  private Writer journalWriter;]