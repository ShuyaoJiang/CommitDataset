[+++ b/mockwebserver/src/main/java/okhttp3/internal/tls/SslClient.java, +    private String keyStoreType = KeyStore.getDefaultType();, +    public Builder certificateChain(KeyPair keyPair, X509Certificate keyCert,, +    public Builder keyStoreType(String keyStoreType) {, +      this.keyStoreType = keyStoreType;, +      return this;, +    }, +, +        KeyStore keyStore = KeyStore.getInstance(keyStoreType);, +++ b/mockwebserver/src/main/java/okhttp3/internal/tls/SslClient.java, +    private String keyStoreType = KeyStore.getDefaultType();, +    public Builder certificateChain(KeyPair keyPair, X509Certificate keyCert,, +    public Builder keyStoreType(String keyStoreType) {, +      this.keyStoreType = keyStoreType;, +      return this;, +    }, +, +        KeyStore keyStore = KeyStore.getInstance(keyStoreType);, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +import static org.junit.Assume.assumeFalse;, +    assumeFalse(getPlatform().equals("jdk9"));, +, +    assumeFalse(getPlatform().equals("jdk9"));, +, +, +  private String getPlatform() {, +    return System.getProperty("okhttp.platform", "platform");, +  }, +++ b/mockwebserver/src/main/java/okhttp3/internal/tls/SslClient.java, +    private String keyStoreType = KeyStore.getDefaultType();, +    public Builder certificateChain(KeyPair keyPair, X509Certificate keyCert,, +    public Builder keyStoreType(String keyStoreType) {, +      this.keyStoreType = keyStoreType;, +      return this;, +    }, +, +        KeyStore keyStore = KeyStore.getInstance(keyStoreType);, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +import static org.junit.Assume.assumeFalse;, +    assumeFalse(getPlatform().equals("jdk9"));, +, +    assumeFalse(getPlatform().equals("jdk9"));, +, +, +  private String getPlatform() {, +    return System.getProperty("okhttp.platform", "platform");, +  }, +++ b/okhttp-tests/src/test/java/okhttp3/ConnectionReuseTest.java, +    SslClient sslClient2 = new SslClient.Builder().build();, +        .sslSocketFactory(sslClient2.socketFactory, sslClient2.trustManager), +++ b/mockwebserver/src/main/java/okhttp3/internal/tls/SslClient.java, +    private String keyStoreType = KeyStore.getDefaultType();, +    public Builder certificateChain(KeyPair keyPair, X509Certificate keyCert,, +    public Builder keyStoreType(String keyStoreType) {, +      this.keyStoreType = keyStoreType;, +      return this;, +    }, +, +        KeyStore keyStore = KeyStore.getInstance(keyStoreType);, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +import static org.junit.Assume.assumeFalse;, +    assumeFalse(getPlatform().equals("jdk9"));, +, +    assumeFalse(getPlatform().equals("jdk9"));, +, +, +  private String getPlatform() {, +    return System.getProperty("okhttp.platform", "platform");, +  }, +++ b/okhttp-tests/src/test/java/okhttp3/ConnectionReuseTest.java, +    SslClient sslClient2 = new SslClient.Builder().build();, +        .sslSocketFactory(sslClient2.socketFactory, sslClient2.trustManager), +++ b/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java, +    enableProtocol(Protocol.HTTP_2);, +++ b/mockwebserver/src/main/java/okhttp3/internal/tls/SslClient.java, +    private String keyStoreType = KeyStore.getDefaultType();, +    public Builder certificateChain(KeyPair keyPair, X509Certificate keyCert,, +    public Builder keyStoreType(String keyStoreType) {, +      this.keyStoreType = keyStoreType;, +      return this;, +    }, +, +        KeyStore keyStore = KeyStore.getInstance(keyStoreType);, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java, +import static org.junit.Assume.assumeFalse;, +    assumeFalse(getPlatform().equals("jdk9"));, +, +    assumeFalse(getPlatform().equals("jdk9"));, +, +, +  private String getPlatform() {, +    return System.getProperty("okhttp.platform", "platform");, +  }, +++ b/okhttp-tests/src/test/java/okhttp3/ConnectionReuseTest.java, +    SslClient sslClient2 = new SslClient.Builder().build();, +        .sslSocketFactory(sslClient2.socketFactory, sslClient2.trustManager), +++ b/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java, +    enableProtocol(Protocol.HTTP_2);, +++ b/okhttp-tests/src/test/java/okhttp3/internal/framed/Http2ConnectionTest.java, +++ b/mockwebserver/src/main/java/okhttp3/internal/tls/SslClient.java]