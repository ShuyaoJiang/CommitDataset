[+++ b/okhttp-tests/src/test/java/okhttp3/EventListenerTest.java, +import org.junit.Ignore;, +  @Ignore("the CallEnd event is omitted"), +  @Test public void emptyResponseBody() throws IOException {, +    server.enqueue(new MockResponse(), +        .setBody(""), +        .setBodyDelay(1, TimeUnit.SECONDS), +        .setSocketPolicy(SocketPolicy.DISCONNECT_DURING_RESPONSE_BODY));, +, +    Call call = client.newCall(new Request.Builder(), +        .url(server.url("/")), +        .build());, +    Response response = call.execute();, +    response.body().close();, +, +    List<String> expectedEvents = Arrays.asList("CallStart", "DnsStart", "DnsEnd",, +        "ConnectStart", "ConnectEnd", "ConnectionAcquired", "RequestHeadersStart",, +        "RequestHeadersEnd", "ResponseHeadersStart", "ResponseHeadersEnd", "ResponseBodyStart",, +        "ResponseBodyEnd", "ConnectionReleased", "CallEnd");, +    assertEquals(expectedEvents, listener.recordedEventTypes());, +  }, +, +  @Ignore("this reports CallFailed not CallEnd"), +  @Test public void responseBodyClosedClosedWithoutReadingAllData() throws IOException {, +    server.enqueue(new MockResponse(), +        .setBody("abc"), +        .setBodyDelay(1, TimeUnit.SECONDS), +        .setSocketPolicy(SocketPolicy.DISCONNECT_DURING_RESPONSE_BODY));, +, +    Call call = client.newCall(new Request.Builder(), +        .url(server.url("/")), +        .build());, +    Response response = call.execute();, +    response.body().close();, +, +    List<String> expectedEvents = Arrays.asList("CallStart", "DnsStart", "DnsEnd",, +        "ConnectStart", "ConnectEnd", "ConnectionAcquired", "RequestHeadersStart",, +        "RequestHeadersEnd", "ResponseHeadersStart", "ResponseHeadersEnd", "ResponseBodyStart",, +        "ResponseBodyEnd", "ConnectionReleased", "CallEnd");, +    assertEquals(expectedEvents, listener.recordedEventTypes());, +  }, +]