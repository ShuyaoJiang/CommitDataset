[+++ b/okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java, +, +  @Test public void builderToString() {, +    assertEquals("https://host.com/path", parse("https://host.com/path").newBuilder().toString());, +, +  @Test public void incompleteBuilderToString() {, +    assertEquals("https:///path",, +        new HttpUrl.Builder().scheme("https").encodedPath("/path").toString());, +    assertEquals("://host.com/path",, +        new HttpUrl.Builder().host("host.com").encodedPath("/path").toString());, +    assertEquals("://host.com:8080/path",, +        new HttpUrl.Builder().host("host.com").encodedPath("/path").port(8080).toString());, +++ b/okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java, +, +  @Test public void builderToString() {, +    assertEquals("https://host.com/path", parse("https://host.com/path").newBuilder().toString());, +, +  @Test public void incompleteBuilderToString() {, +    assertEquals("https:///path",, +        new HttpUrl.Builder().scheme("https").encodedPath("/path").toString());, +    assertEquals("://host.com/path",, +        new HttpUrl.Builder().host("host.com").encodedPath("/path").toString());, +    assertEquals("://host.com:8080/path",, +        new HttpUrl.Builder().host("host.com").encodedPath("/path").port(8080).toString());, +++ b/okhttp/src/main/java/okhttp3/HttpUrl.java, +      if (scheme != null) {, +      }, +      if (host != null) {, +      }, +      if (port != -1 || scheme != null) {, +        if (scheme == null || effectivePort != defaultPort(scheme)) {, +      }]