[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java, +  @Test public void hostnameLowercaseCharactersMappedDirectly() throws Exception {, +    assertEquals("abcd", HttpUrl.parse("http://abcd").host());, +    assertEquals("xn--4xa", HttpUrl.parse("http://σ").host());, +  }, +, +  @Test public void hostnameUppercaseCharactersConvertedToLowercase() throws Exception {, +    assertEquals("abcd", HttpUrl.parse("http://ABCD").host());, +    assertEquals("xn--4xa", HttpUrl.parse("http://Σ").host());, +  }, +, +  @Test public void hostnameIgnoredCharacters() throws Exception {, +    // The soft hyphen (­) should be ignored., +    assertEquals("abcd", HttpUrl.parse("http://AB\u00adCD").host());, +  }, +, +  @Test public void hostnameMultipleCharacterMapping() throws Exception {, +    // Map the single character telephone symbol (℡) to the string "tel"., +    assertEquals("tel", HttpUrl.parse("http://\u2121").host());, +  }, +, +  @Test public void hostnameMappingLastMappedCodePoint() throws Exception {, +    assertEquals("xn--pu5l", HttpUrl.parse("http://\uD87E\uDE1D").host());, +  }, +, +  @Ignore // The java.net.IDN implementation doesn't ignore characters that it should., +  @Test public void hostnameMappingLastIgnoredCodePoint() throws Exception {, +    assertEquals("abcd", HttpUrl.parse("http://ab\uDB40\uDDEFcd").host());, +  }, +, +  @Test public void hostnameMappingLastDisallowedCodePoint() throws Exception {, +    assertEquals(null, HttpUrl.parse("http://\uDBFF\uDFFF"));, +  }, +, +  @Ignore // java.net.InetAddress isn't as strict as it should be., +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java, +  @Test public void hostnameLowercaseCharactersMappedDirectly() throws Exception {, +    assertEquals("abcd", HttpUrl.parse("http://abcd").host());, +    assertEquals("xn--4xa", HttpUrl.parse("http://σ").host());, +  }, +, +  @Test public void hostnameUppercaseCharactersConvertedToLowercase() throws Exception {, +    assertEquals("abcd", HttpUrl.parse("http://ABCD").host());, +    assertEquals("xn--4xa", HttpUrl.parse("http://Σ").host());, +  }, +, +  @Test public void hostnameIgnoredCharacters() throws Exception {, +    // The soft hyphen (­) should be ignored., +    assertEquals("abcd", HttpUrl.parse("http://AB\u00adCD").host());, +  }, +, +  @Test public void hostnameMultipleCharacterMapping() throws Exception {, +    // Map the single character telephone symbol (℡) to the string "tel"., +    assertEquals("tel", HttpUrl.parse("http://\u2121").host());, +  }, +, +  @Test public void hostnameMappingLastMappedCodePoint() throws Exception {, +    assertEquals("xn--pu5l", HttpUrl.parse("http://\uD87E\uDE1D").host());, +  }, +, +  @Ignore // The java.net.IDN implementation doesn't ignore characters that it should., +  @Test public void hostnameMappingLastIgnoredCodePoint() throws Exception {, +    assertEquals("abcd", HttpUrl.parse("http://ab\uDB40\uDDEFcd").host());, +  }, +, +  @Test public void hostnameMappingLastDisallowedCodePoint() throws Exception {, +    assertEquals(null, HttpUrl.parse("http://\uDBFF\uDFFF"));, +  }, +, +  @Ignore // java.net.InetAddress isn't as strict as it should be., +++ /dev/null, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java, +  @Test public void hostnameLowercaseCharactersMappedDirectly() throws Exception {, +    assertEquals("abcd", HttpUrl.parse("http://abcd").host());, +    assertEquals("xn--4xa", HttpUrl.parse("http://σ").host());, +  }, +, +  @Test public void hostnameUppercaseCharactersConvertedToLowercase() throws Exception {, +    assertEquals("abcd", HttpUrl.parse("http://ABCD").host());, +    assertEquals("xn--4xa", HttpUrl.parse("http://Σ").host());, +  }, +, +  @Test public void hostnameIgnoredCharacters() throws Exception {, +    // The soft hyphen (­) should be ignored., +    assertEquals("abcd", HttpUrl.parse("http://AB\u00adCD").host());, +  }, +, +  @Test public void hostnameMultipleCharacterMapping() throws Exception {, +    // Map the single character telephone symbol (℡) to the string "tel"., +    assertEquals("tel", HttpUrl.parse("http://\u2121").host());, +  }, +, +  @Test public void hostnameMappingLastMappedCodePoint() throws Exception {, +    assertEquals("xn--pu5l", HttpUrl.parse("http://\uD87E\uDE1D").host());, +  }, +, +  @Ignore // The java.net.IDN implementation doesn't ignore characters that it should., +  @Test public void hostnameMappingLastIgnoredCodePoint() throws Exception {, +    assertEquals("abcd", HttpUrl.parse("http://ab\uDB40\uDDEFcd").host());, +  }]