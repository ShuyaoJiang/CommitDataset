[+++ b/okhttp/src/main/java/com/squareup/okhttp/CertificatePinner.java, +      message.append("\n    ").append(pin(x509Certificate)), +          .append(": ").append(x509Certificate.getSubjectDN().getName());, +++ b/okhttp/src/main/java/com/squareup/okhttp/CertificatePinner.java, +      message.append("\n    ").append(pin(x509Certificate)), +          .append(": ").append(x509Certificate.getSubjectDN().getName());, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +import com.squareup.okhttp.internal.tls.OkHostnameVerifier;, +import java.security.cert.X509Certificate;, +      X509Certificate cert = (X509Certificate) sslSocket.getSession().getPeerCertificates()[0];, +      throw new IOException("Hostname " + route.address.uriHost + " not verified:", +          + "\n    certificate: " + CertificatePinner.pin(cert), +          + "\n    DN: " + cert.getSubjectDN().getName(), +          + "\n    subjectAltNames: " + OkHostnameVerifier.allSubjectAltNames(cert));, +++ b/okhttp/src/main/java/com/squareup/okhttp/CertificatePinner.java, +      message.append("\n    ").append(pin(x509Certificate)), +          .append(": ").append(x509Certificate.getSubjectDN().getName());, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +import com.squareup.okhttp.internal.tls.OkHostnameVerifier;, +import java.security.cert.X509Certificate;, +      X509Certificate cert = (X509Certificate) sslSocket.getSession().getPeerCertificates()[0];, +      throw new IOException("Hostname " + route.address.uriHost + " not verified:", +          + "\n    certificate: " + CertificatePinner.pin(cert), +          + "\n    DN: " + cert.getSubjectDN().getName(), +          + "\n    subjectAltNames: " + OkHostnameVerifier.allSubjectAltNames(cert));, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/tls/OkHostnameVerifier.java, +  public static List<String> allSubjectAltNames(X509Certificate certificate) {, +    List<String> result = new ArrayList<>();, +    result.addAll(getSubjectAltNames(certificate, ALT_IPA_NAME));, +    result.addAll(getSubjectAltNames(certificate, ALT_DNS_NAME));, +    return result;, +  }, +, +  private static List<String> getSubjectAltNames(X509Certificate certificate, int type) {, +++ b/okhttp/src/main/java/com/squareup/okhttp/CertificatePinner.java, +      message.append("\n    ").append(pin(x509Certificate)), +          .append(": ").append(x509Certificate.getSubjectDN().getName());, +++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java, +import com.squareup.okhttp.internal.tls.OkHostnameVerifier;, +import java.security.cert.X509Certificate;, +      X509Certificate cert = (X509Certificate) sslSocket.getSession().getPeerCertificates()[0];, +      throw new IOException("Hostname " + route.address.uriHost + " not verified:", +          + "\n    certificate: " + CertificatePinner.pin(cert), +          + "\n    DN: " + cert.getSubjectDN().getName(), +          + "\n    subjectAltNames: " + OkHostnameVerifier.allSubjectAltNames(cert));, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/tls/OkHostnameVerifier.java, +  public static List<String> allSubjectAltNames(X509Certificate certificate) {, +    List<String> result = new ArrayList<>();, +    result.addAll(getSubjectAltNames(certificate, ALT_IPA_NAME));, +    result.addAll(getSubjectAltNames(certificate, ALT_DNS_NAME));, +    return result;, +  }, +, +  private static List<String> getSubjectAltNames(X509Certificate certificate, int type) {, +++ b/samples/guide/src/main/java/com/squareup/okhttp/recipes/SynchronousGet.java, +        .url("https://publicobject.com/helloworld.txt")]