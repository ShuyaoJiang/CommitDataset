[+++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/BitArray.java, +import static java.lang.String.format;, +, +public interface BitArray {, +, +  void clear();, +, +  void set(int index);, +, +  void toggle(int index);, +, +  boolean get(int index);, +, +  void shiftLeft(int count);, +, +  /** Bit set that only supports settings bits 0 - 63. */, +  public final class FixedCapacity implements BitArray {, +    long data = 0x0000000000000000L;, +, +    @Override public void clear() {, +      data = 0x0000000000000000L;, +    }, +, +    @Override public void set(int index) {, +      data |= (1L << checkInput(index));, +    }, +, +    @Override public void toggle(int index) {, +      data ^= (1L << checkInput(index));, +    }, +, +    @Override public boolean get(int index) {, +      return ((data >> checkInput(index)) & 1L) == 1;, +    }, +, +    @Override public void shiftLeft(int count) {, +      data = data << checkInput(count);, +    }, +, +    @Override public String toString() {, +      return Long.toBinaryString(data);, +    }, +, +    public BitArray toVariableCapacity() {, +      return new VariableCapacity(this);, +    }, +, +    private static int checkInput(int index) {, +      if (index < 0 || index > 63) {, +        throw new IllegalArgumentException(format("input must be between 0 and 63: %s", index));, +      }, +      return index;, +    }, +  }, +, +  /** Bit set that grows as needed. */, +  public final class VariableCapacity implements BitArray {, +    public VariableCapacity() {, +    private VariableCapacity(FixedCapacity small) {, +      data = new long[] {small.data, 0};, +    }, +, +    @Override public void clear() {, +    @Override public void set(int index) {, +      checkInput(index);, +    @Override public void toggle(int index) {, +      checkInput(index);, +    @Override public boolean get(int index) {, +      checkInput(index);, +    @Override public void shiftLeft(int count) {, +      start -= checkInput(count);, +, +    private static int checkInput(int index) {, +      if (index < 0) {, +        throw new IllegalArgumentException(format("input must be a positive number: %s", index));, +      }, +      return index;, +    }, +  }, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/BitArray.java, +import static java.lang.String.format;, +, +public interface BitArray {, +, +  void clear();, +, +  void set(int index);, +, +  void toggle(int index);, +, +  boolean get(int index);, +, +  void shiftLeft(int count);, +, +  /** Bit set that only supports settings bits 0 - 63. */, +  public final class FixedCapacity implements BitArray {, +    long data = 0x0000000000000000L;, +, +    @Override public void clear() {, +      data = 0x0000000000000000L;]