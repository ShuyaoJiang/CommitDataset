[+++ b/okhttp-tests/src/test/java/okhttp3/internal/publicsuffix/PublicSuffixDatabaseTest.java, +import okhttp3.internal.Util;, +import static org.junit.Assert.fail;, +    if (domain == null) {, +      try {, +        publicSuffixDatabase.getEffectiveTldPlusOne(null);, +        fail();, +      } catch (NullPointerException expected) {, +      }, +      return;, +    }, +, +    String canonicalDomain = Util.domainToAscii(domain);, +    if (canonicalDomain == null) return;, +, +    String result = publicSuffixDatabase.getEffectiveTldPlusOne(canonicalDomain);, +    if (registrablePart == null) {, +      assertNull(result);, +    } else {, +      assertEquals(Util.domainToAscii(registrablePart), result);, +    }, +++ b/okhttp-tests/src/test/java/okhttp3/internal/publicsuffix/PublicSuffixDatabaseTest.java, +import okhttp3.internal.Util;, +import static org.junit.Assert.fail;, +    if (domain == null) {, +      try {, +        publicSuffixDatabase.getEffectiveTldPlusOne(null);, +        fail();, +      } catch (NullPointerException expected) {, +      }, +      return;, +    }, +, +    String canonicalDomain = Util.domainToAscii(domain);, +    if (canonicalDomain == null) return;, +, +    String result = publicSuffixDatabase.getEffectiveTldPlusOne(canonicalDomain);, +    if (registrablePart == null) {, +      assertNull(result);, +    } else {, +      assertEquals(Util.domainToAscii(registrablePart), result);, +    }, +++ b/okhttp/src/main/java/okhttp3/internal/publicsuffix/PublicSuffixDatabase.java, +   *, +   * @param domain A canonicalized domain. An International Domain Name (IDN) should be punycode, +   *    encoded., +    if (domain == null) throw new NullPointerException("domain == null");, +    // We use UTF-8 in the list so we need to convert to Unicode., +    String unicodeDomain = IDN.toUnicode(domain);, +    String[] punycodeLabels = domain.split("\\.");, +    for (int i = firstLabelOffset; i < punycodeLabels.length; i++) {, +      effectiveTldPlusOne.append(punycodeLabels[i]).append('.');]