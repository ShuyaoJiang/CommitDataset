[+++ b/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java, +import com.squareup.okhttp.mockwebserver.rule.MockWebServerRule;, +import org.junit.Rule;, +import org.junit.Test;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +public final class MockWebServerTest {, +  @Rule public final MockWebServerRule server = new MockWebServerRule();, +  @Test public void recordedRequestAccessors() {, +  @Test public void defaultMockResponse() {, +  @Test public void setBodyAdjustsHeaders() throws IOException {, +  @Test public void mockResponseAddHeader() {, +    assertEquals(Arrays.asList("Cookie: s=square", "Cookie: a=android"), response.getHeaders());, +  @Test public void mockResponseSetHeader() {, +    assertEquals(Arrays.asList("Cookies: delicious", "cookie: r=robot"), response.getHeaders());, +  @Test public void expect100ContinueWithBody() throws Exception {, +  @Test public void expect100ContinueWithNoBody() throws Exception {, +  @Test public void regularResponse() throws Exception {, +  @Test public void redirect() throws Exception {, +  @Test public void dispatchBlocksWaitingForEnqueue() throws Exception {, +  @Test public void nonHexadecimalChunkSize() throws Exception {, +  @Test public void responseTimeout() throws Exception {, +    server.enqueue(new MockResponse().setBody("DEF"));, +  @Test public void disconnectAtStart() throws Exception {, +    } catch (IOException expected) {, +  @Test public void streamingResponseBody() throws Exception {, +  @Test public void throttleRequest() throws Exception {, +  @Test public void throttleResponse() throws Exception {, +  @Test public void delayResponse() throws IOException {]