[+++ b/src/main/java/com/squareup/okhttp/Connection.java, +        if (modernTls) {, +            platform.enableTlsExtensions(sslSocket, address.uriHost);, +        } else {, +            platform.supportTlsIntolerantServer(sslSocket);, +        }, +++ b/src/main/java/com/squareup/okhttp/Connection.java, +        if (modernTls) {, +            platform.enableTlsExtensions(sslSocket, address.uriHost);, +        } else {, +            platform.supportTlsIntolerantServer(sslSocket);, +        }, +++ b/src/main/java/com/squareup/okhttp/internal/Platform.java, +    /**, +     * Attempt a TLS connection with useful extensions enabled. This mode, +     * supports more features, but is less likely to be compatible with older, +     * HTTPS servers., +     */, +    public void enableTlsExtensions(SSLSocket socket, String uriHost) {, +, +    /**, +     * Attempt a secure connection with basic functionality to maximize, +     * compatibility. Currently this uses SSL 3.0., +     */, +    public void supportTlsIntolerantServer(SSLSocket socket) {, +        socket.setEnabledProtocols(new String[]{"SSLv3"});, +        @Override public void enableTlsExtensions(SSLSocket socket, String uriHost) {, +            super.enableTlsExtensions(socket, uriHost);, +            if (openSslSocketClass.isInstance(socket)) {, +++ b/src/main/java/com/squareup/okhttp/Connection.java, +        if (modernTls) {, +            platform.enableTlsExtensions(sslSocket, address.uriHost);, +        } else {, +            platform.supportTlsIntolerantServer(sslSocket);, +        }, +++ b/src/main/java/com/squareup/okhttp/internal/Platform.java, +    /**, +     * Attempt a TLS connection with useful extensions enabled. This mode, +     * supports more features, but is less likely to be compatible with older, +     * HTTPS servers., +     */, +    public void enableTlsExtensions(SSLSocket socket, String uriHost) {, +, +    /**, +     * Attempt a secure connection with basic functionality to maximize, +     * compatibility. Currently this uses SSL 3.0., +     */, +    public void supportTlsIntolerantServer(SSLSocket socket) {, +        socket.setEnabledProtocols(new String[]{"SSLv3"});, +        @Override public void enableTlsExtensions(SSLSocket socket, String uriHost) {, +            super.enableTlsExtensions(socket, uriHost);, +            if (openSslSocketClass.isInstance(socket)) {, +++ b/src/main/java/com/squareup/okhttp/internal/http/RouteSelector.java, +import static com.squareup.okhttp.internal.Util.getEffectivePort;, +    /** Uses {@link com.squareup.okhttp.internal.Platform#enableTlsExtensions}. */, +    /** Uses {@link com.squareup.okhttp.internal.Platform#supportTlsIntolerantServer}. */, +    /** No TLS mode. */]