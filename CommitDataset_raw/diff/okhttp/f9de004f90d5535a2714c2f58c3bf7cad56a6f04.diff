[+++ b/okhttp/src/main/java/okhttp3/EventListener.java, +/**, + * EventListener for analytic events for an OkHttpClient instance., + *, + * <p>All start/connect/acquire events will eventually receive a matching end/release event,, + * either successful (non-null parameters), or failed (non-null throwable).  The first common, + * parameters of each event pair are used to link the event in case of concurrent or repeated, + * events e.g. dnsStart(call, domainName) -> dnsEnd(call, domainName, inetAddressList, throwable)., + *, + * <p>Nesting is as follows, + * <ul>, + * <li>call -> (dns -> connect -> secure connect)* -> request events</li>, + * <li>call -> (connection acquire/release)*</li>, + * </ul>, + *, + * <p>Request events are ordered: requestHeaders -> requestBody -> responseHeaders -> responseBody, + *, + * <p>Since connections may be reused, the dns and connect events may not be present for a call,, + * or may be repeated in case of failure retries, even concurrently in case of happy eyeballs type, + * scenarios. A redirect cross domain, or to use https may cause additional connection and request, + * events., + *, + * <p>All events must fast, without external locking, cannot throw exceptions,, + * attempt to mutate the event parameters, or be reentrant back into the client., + * Any IO - writing to files or network should be done asynchronously., + */, +++ b/okhttp/src/main/java/okhttp3/EventListener.java, +/**, + * EventListener for analytic events for an OkHttpClient instance., + *, + * <p>All start/connect/acquire events will eventually receive a matching end/release event,, + * either successful (non-null parameters), or failed (non-null throwable).  The first common, + * parameters of each event pair are used to link the event in case of concurrent or repeated, + * events e.g. dnsStart(call, domainName) -> dnsEnd(call, domainName, inetAddressList, throwable)., + *, + * <p>Nesting is as follows, + * <ul>, + * <li>call -> (dns -> connect -> secure connect)* -> request events</li>, + * <li>call -> (connection acquire/release)*</li>, + * </ul>, + *, + * <p>Request events are ordered: requestHeaders -> requestBody -> responseHeaders -> responseBody, + *, + * <p>Since connections may be reused, the dns and connect events may not be present for a call,, + * or may be repeated in case of failure retries, even concurrently in case of happy eyeballs type, + * scenarios. A redirect cross domain, or to use https may cause additional connection and request, + * events., + *, + * <p>All events must fast, without external locking, cannot throw exceptions,, + * attempt to mutate the event parameters, or be reentrant back into the client., + * Any IO - writing to files or network should be done asynchronously., + */, +++ b/okhttp/src/main/java/okhttp3/OkHttpClient.java, +    /**, +     * Configure a single client scoped listener that will receive all analytic events, +     * for this client., +     *, +     * @see EventListener for semantics and restrictions on listener implementations., +     */, +    /**, +     * Configure a factory to provide per-call scoped listeners that will receive analytic events, +     * for this client., +     *, +     * @see EventListener for semantics and restrictions on listener implementations., +     */]