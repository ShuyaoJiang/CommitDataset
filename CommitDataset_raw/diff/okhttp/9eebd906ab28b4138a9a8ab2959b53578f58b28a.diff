[+++ b/okhttp/src/main/java/okhttp3/EventListener.java, +public abstract class EventListener {, +  public static final EventListener NONE = new EventListener() {, +  static EventListener.Factory factory(final EventListener listener) {, +    return new EventListener.Factory() {, +      public EventListener create(Call call) {, +        return listener;, +      }, +    };, +  }, +, +++ b/okhttp/src/main/java/okhttp3/EventListener.java, +public abstract class EventListener {, +  public static final EventListener NONE = new EventListener() {, +  static EventListener.Factory factory(final EventListener listener) {, +    return new EventListener.Factory() {, +      public EventListener create(Call call) {, +        return listener;, +      }, +    };, +  }, +, +++ b/okhttp/src/main/java/okhttp3/OkHttpClient.java, +  final EventListener.Factory eventListenerFactory;, +    this.eventListenerFactory = builder.eventListenerFactory;, +  public EventListener.Factory eventListenerFactory() {, +    return eventListenerFactory;, +  }, +, +    EventListener.Factory eventListenerFactory;, +      eventListenerFactory = EventListener.factory(EventListener.NONE);, +      this.eventListenerFactory = okHttpClient.eventListenerFactory;, +    public Builder eventListener(EventListener eventListener) {, +      if (eventListener == null) throw new NullPointerException("eventListener == null");, +      this.eventListenerFactory = EventListener.factory(eventListener);, +      return this;, +    }, +, +    public Builder eventListenerFactory(EventListener.Factory eventListenerFactory) {, +      if (eventListenerFactory == null) {, +        throw new NullPointerException("eventListenerFactory == null");, +      }, +      this.eventListenerFactory = eventListenerFactory;, +      return this;, +    }, +, +++ b/okhttp/src/main/java/okhttp3/EventListener.java, +public abstract class EventListener {, +  public static final EventListener NONE = new EventListener() {, +  static EventListener.Factory factory(final EventListener listener) {, +    return new EventListener.Factory() {, +      public EventListener create(Call call) {, +        return listener;, +      }, +    };, +  }, +, +++ b/okhttp/src/main/java/okhttp3/OkHttpClient.java, +  final EventListener.Factory eventListenerFactory;, +    this.eventListenerFactory = builder.eventListenerFactory;, +  public EventListener.Factory eventListenerFactory() {, +    return eventListenerFactory;, +  }, +, +    EventListener.Factory eventListenerFactory;, +      eventListenerFactory = EventListener.factory(EventListener.NONE);, +      this.eventListenerFactory = okHttpClient.eventListenerFactory;, +    public Builder eventListener(EventListener eventListener) {, +      if (eventListener == null) throw new NullPointerException("eventListener == null");, +      this.eventListenerFactory = EventListener.factory(eventListener);, +      return this;, +    }, +, +    public Builder eventListenerFactory(EventListener.Factory eventListenerFactory) {, +      if (eventListenerFactory == null) {, +        throw new NullPointerException("eventListenerFactory == null");, +      }, +      this.eventListenerFactory = eventListenerFactory;, +      return this;, +    }, +, +++ b/okhttp/src/main/java/okhttp3/RealCall.java, +  final EventListener eventListener;, +    final EventListener.Factory eventListenerFactory = client.eventListenerFactory();, +, +    this.eventListener = eventListenerFactory.create(this);]