[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  // https://github.com/square/okhttp/issues/1801, +  @Test public void asyncCallEngineInitialized() throws Exception {, +    OkHttpClient c = new OkHttpClient();, +    c.interceptors().add(new Interceptor() {, +      @Override public Response intercept(Chain chain) throws IOException {, +        throw new IOException();, +      }, +    });, +    Request request = new Request.Builder().url(server.url("/")).build();, +    c.newCall(request).enqueue(callback);, +    RecordedResponse response = callback.await(request.httpUrl());, +    assertEquals(request, response.request);, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  // https://github.com/square/okhttp/issues/1801, +  @Test public void asyncCallEngineInitialized() throws Exception {, +    OkHttpClient c = new OkHttpClient();, +    c.interceptors().add(new Interceptor() {, +      @Override public Response intercept(Chain chain) throws IOException {, +        throw new IOException();, +      }, +    });, +    Request request = new Request.Builder().url(server.url("/")).build();, +    c.newCall(request).enqueue(callback);, +    RecordedResponse response = callback.await(request.httpUrl());, +    assertEquals(request, response.request);, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +          Request request = engine == null ? originalRequest : engine.getRequest();, +          responseCallback.onFailure(request, e);]