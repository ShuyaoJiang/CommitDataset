[+++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +      result.setChunkedBody(body, 1024);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +      result.setChunkedBody(body, 1024);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import com.squareup.okhttp.internal.Util;, +import java.io.ByteArrayInputStream;, +import java.io.ByteArrayOutputStream;, +import java.io.IOException;, +import java.io.UnsupportedEncodingException;, +  private byte[] body;, +    setBody(new byte[0]);, +  public byte[] getBody() {, +    return body;, +    return bodyStream != null ? bodyStream : new ByteArrayInputStream(body);, +    setHeader("Content-Length", body.length);, +    this.body = body;, +    try {, +      return setBody(body.getBytes("UTF-8"));, +    } catch (UnsupportedEncodingException e) {, +      throw new AssertionError();, +    }, +  public MockResponse setChunkedBody(byte[] body, int maxChunkSize) {, +    try {, +      ByteArrayOutputStream bytesOut = new ByteArrayOutputStream();, +      int pos = 0;, +      while (pos < body.length) {, +        int chunkSize = Math.min(body.length - pos, maxChunkSize);, +        bytesOut.write(Integer.toHexString(chunkSize).getBytes(Util.US_ASCII));, +        bytesOut.write("\r\n".getBytes(Util.US_ASCII));, +        bytesOut.write(body, pos, chunkSize);, +        bytesOut.write("\r\n".getBytes(Util.US_ASCII));, +        pos += chunkSize;, +      bytesOut.write("0\r\n\r\n".getBytes(Util.US_ASCII)); // Last chunk + empty trailer + crlf., +      this.body = bytesOut.toByteArray();, +    } catch (IOException e) {, +      throw new AssertionError(); // In-memory I/O doesn't throw IOExceptions., +    }, +    try {, +      return setChunkedBody(body.getBytes("UTF-8"), maxChunkSize);, +    } catch (UnsupportedEncodingException e) {, +      throw new AssertionError();, +    }, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +      result.setChunkedBody(body, 1024);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import com.squareup.okhttp.internal.Util;, +import java.io.ByteArrayInputStream;, +import java.io.ByteArrayOutputStream;, +import java.io.IOException;, +import java.io.UnsupportedEncodingException;, +  private byte[] body;, +    setBody(new byte[0]);, +  public byte[] getBody() {, +    return body;, +    return bodyStream != null ? bodyStream : new ByteArrayInputStream(body);, +    setHeader("Content-Length", body.length);, +    this.body = body;, +    try {, +      return setBody(body.getBytes("UTF-8"));, +    } catch (UnsupportedEncodingException e) {, +      throw new AssertionError();, +    }, +  public MockResponse setChunkedBody(byte[] body, int maxChunkSize) {, +    try {, +      ByteArrayOutputStream bytesOut = new ByteArrayOutputStream();, +      int pos = 0;, +      while (pos < body.length) {, +        int chunkSize = Math.min(body.length - pos, maxChunkSize);, +        bytesOut.write(Integer.toHexString(chunkSize).getBytes(Util.US_ASCII));, +        bytesOut.write("\r\n".getBytes(Util.US_ASCII));, +        bytesOut.write(body, pos, chunkSize);, +        bytesOut.write("\r\n".getBytes(Util.US_ASCII));, +        pos += chunkSize;, +      bytesOut.write("0\r\n\r\n".getBytes(Util.US_ASCII)); // Last chunk + empty trailer + crlf., +      this.body = bytesOut.toByteArray();, +    } catch (IOException e) {, +      throw new AssertionError(); // In-memory I/O doesn't throw IOExceptions., +    }, +    try {, +      return setChunkedBody(body.getBytes("UTF-8"), maxChunkSize);, +    } catch (UnsupportedEncodingException e) {, +      throw new AssertionError();, +    }, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +      Buffer body = new Buffer();, +      if (response.getBody() != null) {, +        body.write(response.getBody());, +      }, +        byte[] pushedBody = pushPromise.getResponse().getBody();, +            stream.getConnection().pushStream(stream.getId(), pushedHeaders, pushedBody.length > 0);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +      result.setChunkedBody(body, 1024);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import com.squareup.okhttp.internal.Util;, +import java.io.ByteArrayInputStream;, +import java.io.ByteArrayOutputStream;, +import java.io.IOException;, +import java.io.UnsupportedEncodingException;, +  private byte[] body;]