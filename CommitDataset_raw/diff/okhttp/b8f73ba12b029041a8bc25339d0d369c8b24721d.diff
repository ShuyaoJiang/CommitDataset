[+++ b/build.gradle, +  def platform = System.getProperty("okhttp.platform", "jdk8"), +  if (platform == "jdk8") {, +++ b/build.gradle, +  def platform = System.getProperty("okhttp.platform", "jdk8"), +  if (platform == "jdk8") {, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +    return System.getProperty("okhttp.platform", "jdk8");, +++ b/build.gradle, +  def platform = System.getProperty("okhttp.platform", "jdk8"), +  if (platform == "jdk8") {, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +    return System.getProperty("okhttp.platform", "jdk8");, +++ b/okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.java, +  boolean canRetry() {, +      // Don't try if the failure wasn't our fault!, +      if (!hasStreamFailure) return false;, +++ b/build.gradle, +  def platform = System.getProperty("okhttp.platform", "jdk8"), +  if (platform == "jdk8") {, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +    return System.getProperty("okhttp.platform", "jdk8");, +++ b/okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.java, +  boolean canRetry() {, +      // Don't try if the failure wasn't our fault!, +      if (!hasStreamFailure) return false;, +++ b/okhttp/src/main/java/okhttp3/internal/connection/Transmitter.java, +      if (sameConnection(this.request.url(), request.url())) return; // Already ready., +    return exchangeFinder.canRetry();, +++ b/build.gradle, +  def platform = System.getProperty("okhttp.platform", "jdk8"), +  if (platform == "jdk8") {, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +    return System.getProperty("okhttp.platform", "jdk8");, +++ b/okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.java, +  boolean canRetry() {, +      // Don't try if the failure wasn't our fault!, +      if (!hasStreamFailure) return false;, +++ b/okhttp/src/main/java/okhttp3/internal/connection/Transmitter.java, +      if (sameConnection(this.request.url(), request.url())) return; // Already ready., +    return exchangeFinder.canRetry();, +++ b/okhttp/src/main/java/okhttp3/internal/platform/Jdk8WithJettyBootPlatform.kt, +      val jvmVersion = System.getProperty("java.specification.version", "unknown"), +      try {, +        // 1.8, 9, 10, 11, 12 etc, +        val version = jvmVersion.toInt(), +        if (version >= 9) return null, +      } catch (nfe: NumberFormatException) {, +        // expected on >= JDK 9, +      }, +, +++ b/build.gradle, +  def platform = System.getProperty("okhttp.platform", "jdk8"), +  if (platform == "jdk8") {, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +    return System.getProperty("okhttp.platform", "jdk8");, +++ b/okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.java, +  boolean canRetry() {, +      // Don't try if the failure wasn't our fault!, +      if (!hasStreamFailure) return false;, +++ b/okhttp/src/main/java/okhttp3/internal/connection/Transmitter.java, +      if (sameConnection(this.request.url(), request.url())) return; // Already ready., +    return exchangeFinder.canRetry();, +++ b/okhttp/src/main/java/okhttp3/internal/platform/Jdk8WithJettyBootPlatform.kt, +      val jvmVersion = System.getProperty("java.specification.version", "unknown"), +      try {, +        // 1.8, 9, 10, 11, 12 etc, +        val version = jvmVersion.toInt(), +        if (version >= 9) return null, +      } catch (nfe: NumberFormatException) {, +        // expected on >= JDK 9, +      }, +, +++ b/okhttp/src/main/java/okhttp3/internal/platform/Platform.kt, +    private @Volatile var platform = findPlatform(), +    fun get(): Platform = platform, +, +    internal fun resetForTests(platform: Platform = findPlatform()) {, +      this.platform = platform, +    }, +++ b/build.gradle, +  def platform = System.getProperty("okhttp.platform", "jdk8"), +  if (platform == "jdk8") {, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +    return System.getProperty("okhttp.platform", "jdk8");, +++ b/okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.java, +  boolean canRetry() {, +      // Don't try if the failure wasn't our fault!, +      if (!hasStreamFailure) return false;, +++ b/okhttp/src/main/java/okhttp3/internal/connection/Transmitter.java, +      if (sameConnection(this.request.url(), request.url())) return; // Already ready., +    return exchangeFinder.canRetry();, +++ b/okhttp/src/main/java/okhttp3/internal/platform/Jdk8WithJettyBootPlatform.kt, +      val jvmVersion = System.getProperty("java.specification.version", "unknown"), +      try {, +        // 1.8, 9, 10, 11, 12 etc, +        val version = jvmVersion.toInt(), +        if (version >= 9) return null, +      } catch (nfe: NumberFormatException) {, +        // expected on >= JDK 9]