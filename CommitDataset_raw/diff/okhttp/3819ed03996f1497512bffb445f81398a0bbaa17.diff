[+++ b/okhttp-tests/src/test/java/okhttp3/ConnectionCoalescingTest.java, +++ b/okhttp-tests/src/test/java/okhttp3/ConnectionCoalescingTest.java, +++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/Http2Test.java, +  @Test public void readSettingsFrameExperimentalId() throws IOException {, +    writeMedium(frame, 6); // 2 for the code and 4 for the value, +    frame.writeByte(Http2.TYPE_SETTINGS);, +    frame.writeByte(Http2.FLAG_NONE);, +    frame.writeInt(0); // Settings are always on the connection stream 0., +    frame.write(ByteString.decodeHex("f000")); // Id reserved for experimental use., +    frame.writeInt(1);, +, +    reader.nextFrame(false, new BaseTestHandler() {, +      @Override public void settings(boolean clearPrevious, Settings settings) {, +        // no-op, +      }, +    });, +  }, +, +++ b/okhttp-tests/src/test/java/okhttp3/ConnectionCoalescingTest.java, +++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/Http2Test.java, +  @Test public void readSettingsFrameExperimentalId() throws IOException {, +    writeMedium(frame, 6); // 2 for the code and 4 for the value, +    frame.writeByte(Http2.TYPE_SETTINGS);, +    frame.writeByte(Http2.FLAG_NONE);, +    frame.writeInt(0); // Settings are always on the connection stream 0., +    frame.write(ByteString.decodeHex("f000")); // Id reserved for experimental use., +    frame.writeInt(1);, +, +    reader.nextFrame(false, new BaseTestHandler() {, +      @Override public void settings(boolean clearPrevious, Settings settings) {, +        // no-op, +      }, +    });, +  }, +, +++ b/okhttp/src/main/java/okhttp3/internal/connection/StreamAllocation.java, +      if (connection != null) return connection;, +++ b/okhttp-tests/src/test/java/okhttp3/ConnectionCoalescingTest.java, +++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/Http2Test.java, +  @Test public void readSettingsFrameExperimentalId() throws IOException {, +    writeMedium(frame, 6); // 2 for the code and 4 for the value, +    frame.writeByte(Http2.TYPE_SETTINGS);, +    frame.writeByte(Http2.FLAG_NONE);, +    frame.writeInt(0); // Settings are always on the connection stream 0., +    frame.write(ByteString.decodeHex("f000")); // Id reserved for experimental use., +    frame.writeInt(1);, +, +    reader.nextFrame(false, new BaseTestHandler() {, +      @Override public void settings(boolean clearPrevious, Settings settings) {, +        // no-op, +      }, +    });, +  }, +, +++ b/okhttp/src/main/java/okhttp3/internal/connection/StreamAllocation.java, +      if (connection != null) return connection;, +++ b/okhttp/src/main/java/okhttp3/internal/http2/Settings.java, +    if (id < 0 || id >= values.length) {]