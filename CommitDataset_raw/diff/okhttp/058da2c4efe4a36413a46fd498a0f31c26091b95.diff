[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +      if (!httpEngine.sameConnection(followUp.url())) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +      if (!httpEngine.sameConnection(followUp.url())) {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +      if (!engine.sameConnection(followUp.url())) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +      if (!httpEngine.sameConnection(followUp.url())) {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +      if (!engine.sameConnection(followUp.url())) {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java, +   * The wire-level request that initiated this HTTP response. This is not, +   * necessarily the same request issued by the application:, +   *         may copy headers like {@code Content-Length} from the request body., +   *     <li>It may be the request generated in response to an HTTP redirect or, +   *         authentication challenge. In this case the request URL may be, +   *         different than the initial request URL., +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +      if (!httpEngine.sameConnection(followUp.url())) {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +      if (!engine.sameConnection(followUp.url())) {, +++ b/okhttp/src/main/java/com/squareup/okhttp/Response.java, +   * The wire-level request that initiated this HTTP response. This is not, +   * necessarily the same request issued by the application:, +   *         may copy headers like {@code Content-Length} from the request body., +   *     <li>It may be the request generated in response to an HTTP redirect or, +   *         authentication challenge. In this case the request URL may be, +   *         different than the initial request URL., +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java, +    if (transport != null && connection != null && !transport.canReuseConnection()) {, +        // When redirecting across hosts, drop all authentication headers. This, +        // is potentially annoying to the application layer since they have no, +        // way to retain them., +        if (!sameConnection(url)) {, +          requestBuilder.removeHeader("Authorization");, +        }, +, +   * Returns true if an HTTP request for {@code followUp} can reuse the, +   * connection used by this engine., +  public boolean sameConnection(URL followUp) {, +    URL url = userRequest.url();, +    return url.getHost().equals(followUp.getHost()), +        && getEffectivePort(url) == getEffectivePort(followUp), +        && url.getProtocol().equals(followUp.getProtocol());]