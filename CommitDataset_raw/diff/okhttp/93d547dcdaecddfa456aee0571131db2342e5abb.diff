[+++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +        .url(request.url()), +      super(response.request().url().url());, +++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +        .url(request.url()), +      super(response.request().url().url());, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java, +    assertEquals(request.url(), cacheRequest.url());, +    assertEquals(request.url(), cacheRequest.url());, +++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +        .url(request.url()), +      super(response.request().url().url());, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java, +    assertEquals(request.url(), cacheRequest.url());, +    assertEquals(request.url(), cacheRequest.url());, +++ b/okhttp-logging-interceptor/src/main/java/com/squareup/okhttp/logging/HttpLoggingInterceptor.java, +        "--> " + request.method() + ' ' + request.url() + ' ' + protocol(protocol);, +++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +        .url(request.url()), +      super(response.request().url().url());, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java, +    assertEquals(request.url(), cacheRequest.url());, +    assertEquals(request.url(), cacheRequest.url());, +++ b/okhttp-logging-interceptor/src/main/java/com/squareup/okhttp/logging/HttpLoggingInterceptor.java, +        "--> " + request.method() + ' ' + request.url() + ' ' + protocol(protocol);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +    assertEquals(httpUrl, request.url());, +    callback.await(request.url()), +    RecordedResponse response = callback.await(request.url());, +    callback.await(request.url()).assertHandshake();, +    callback.await(request.url()).assertBody("abc");, +    callback.await(request.url()), +    callback.await(request1.url()).assertCode(200).assertBody("A");, +    callback.await(request2.url()).assertCode(200).assertBody("A");, +    callback.await(request1.url()).assertCode(200).assertBody("A");, +    callback.await(request2.url()).assertCode(200).assertBody("B");, +    callback.await(requestA.url()).assertBody("A");, +    callback.await(requestB.url()).assertFailure("Canceled");, +    callback.await(requestA.url()).assertFailure("Canceled", "stream was reset: CANCEL",, +++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +        .url(request.url()), +      super(response.request().url().url());, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java, +    assertEquals(request.url(), cacheRequest.url());, +    assertEquals(request.url(), cacheRequest.url());, +++ b/okhttp-logging-interceptor/src/main/java/com/squareup/okhttp/logging/HttpLoggingInterceptor.java, +        "--> " + request.method() + ' ' + request.url() + ' ' + protocol(protocol);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +    assertEquals(httpUrl, request.url());, +    callback.await(request.url()), +    RecordedResponse response = callback.await(request.url());, +    callback.await(request.url()).assertHandshake();, +    callback.await(request.url()).assertBody("abc");, +    callback.await(request.url()), +    callback.await(request1.url()).assertCode(200).assertBody("A");, +    callback.await(request2.url()).assertCode(200).assertBody("A");, +    callback.await(request1.url()).assertCode(200).assertBody("A");, +    callback.await(request2.url()).assertCode(200).assertBody("B");, +    callback.await(requestA.url()).assertBody("A");, +    callback.await(requestB.url()).assertFailure("Canceled");, +    callback.await(requestA.url()).assertFailure("Canceled", "stream was reset: CANCEL",, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/InterceptorTest.java, +    callback.await(request.url()), +        if (chain.request().url().encodedPath().equals("/b")) {, +        if (chain.request().url().encodedPath().equals("/b")) {, +            callbackA.await(requestA.url()).assertBody("a");, +    callbackB.await(requestB.url()).assertBody("b");, +++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +        .url(request.url()), +      super(response.request().url().url());, +++ b/okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java, +    assertEquals(request.url(), cacheRequest.url());, +    assertEquals(request.url(), cacheRequest.url());, +++ b/okhttp-logging-interceptor/src/main/java/com/squareup/okhttp/logging/HttpLoggingInterceptor.java, +        "--> " + request.method() + ' ' + request.url() + ' ' + protocol(protocol);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +    assertEquals(httpUrl, request.url());, +    callback.await(request.url()), +    RecordedResponse response = callback.await(request.url());, +    callback.await(request.url()).assertHandshake();, +    callback.await(request.url()).assertBody("abc");, +    callback.await(request.url()), +    callback.await(request1.url()).assertCode(200).assertBody("A");, +    callback.await(request2.url()).assertCode(200).assertBody("A");, +    callback.await(request1.url()).assertCode(200).assertBody("A");, +    callback.await(request2.url()).assertCode(200).assertBody("B");, +    callback.await(requestA.url()).assertBody("A");, +    callback.await(requestB.url()).assertFailure("Canceled");, +    callback.await(requestA.url()).assertFailure("Canceled", "stream was reset: CANCEL",, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/InterceptorTest.java, +    callback.await(request.url()), +        if (chain.request().url().encodedPath().equals("/b")) {, +        if (chain.request().url().encodedPath().equals("/b")) {, +            callbackA.await(requestA.url()).assertBody("a");, +    callbackB.await(requestB.url()).assertBody("b");, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +  public RecordedResponse assertRequestUrl(HttpUrl url) {, +++ b/okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java, +        .url(request.url()), +      super(response.request().url().url());]