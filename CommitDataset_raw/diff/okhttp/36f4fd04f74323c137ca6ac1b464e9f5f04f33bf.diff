[+++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +import java.io.InterruptedIOException;, +      } catch (InterruptedException ignored) {, +          throw new AssertionError();, +          throw new InterruptedIOException();, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +import java.io.InterruptedIOException;, +      } catch (InterruptedException ignored) {, +          throw new AssertionError();, +          throw new InterruptedIOException();, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/CustomDispatcherTest.java, +      public MockResponse dispatch(RecordedRequest request) throws InterruptedException {, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +import java.io.InterruptedIOException;, +      } catch (InterruptedException ignored) {, +          throw new AssertionError();, +          throw new InterruptedIOException();, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/CustomDispatcherTest.java, +      public MockResponse dispatch(RecordedRequest request) throws InterruptedException {, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +  @Test public void disconnectRequestHalfway() throws IOException, InterruptedException {, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +import java.io.InterruptedIOException;, +      } catch (InterruptedException ignored) {, +          throw new AssertionError();, +          throw new InterruptedIOException();, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/CustomDispatcherTest.java, +      public MockResponse dispatch(RecordedRequest request) throws InterruptedException {, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +  @Test public void disconnectRequestHalfway() throws IOException, InterruptedException {, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/JavaApiConverterTest.java, +    return RequestBody.create(MediaType.get("text/plain"), bodyText);, +        return MediaType.get("text/plain; charset=utf-8");, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +import java.io.InterruptedIOException;, +      } catch (InterruptedException ignored) {, +          throw new AssertionError();, +          throw new InterruptedIOException();, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/CustomDispatcherTest.java, +      public MockResponse dispatch(RecordedRequest request) throws InterruptedException {, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +  @Test public void disconnectRequestHalfway() throws IOException, InterruptedException {, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/JavaApiConverterTest.java, +    return RequestBody.create(MediaType.get("text/plain"), bodyText);, +        return MediaType.get("text/plain; charset=utf-8");, +++ b/okhttp-apache/src/main/java/okhttp3/apache/HttpEntityBody.java, +  private static final MediaType DEFAULT_MEDIA_TYPE = MediaType.get("application/octet-stream");, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +import java.io.InterruptedIOException;, +      } catch (InterruptedException ignored) {, +          throw new AssertionError();, +          throw new InterruptedIOException();, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/CustomDispatcherTest.java, +      public MockResponse dispatch(RecordedRequest request) throws InterruptedException {, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +  @Test public void disconnectRequestHalfway() throws IOException, InterruptedException {, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/JavaApiConverterTest.java, +    return RequestBody.create(MediaType.get("text/plain"), bodyText);, +        return MediaType.get("text/plain; charset=utf-8");, +++ b/okhttp-apache/src/main/java/okhttp3/apache/HttpEntityBody.java, +  private static final MediaType DEFAULT_MEDIA_TYPE = MediaType.get("application/octet-stream");, +++ b/okhttp-dnsoverhttps/src/main/java/okhttp3/dnsoverhttps/DnsOverHttps.java, +  public static final MediaType DNS_MESSAGE = MediaType.get("application/dns-message");, +  public static final MediaType UDPWIREFORMAT = MediaType.get("application/dns-udpwireformat");, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +import java.io.InterruptedIOException;, +      } catch (InterruptedException ignored) {, +          throw new AssertionError();, +          throw new InterruptedIOException();, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/CustomDispatcherTest.java, +      public MockResponse dispatch(RecordedRequest request) throws InterruptedException {, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +  @Test public void disconnectRequestHalfway() throws IOException, InterruptedException {, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/JavaApiConverterTest.java, +    return RequestBody.create(MediaType.get("text/plain"), bodyText);, +        return MediaType.get("text/plain; charset=utf-8");, +++ b/okhttp-apache/src/main/java/okhttp3/apache/HttpEntityBody.java, +  private static final MediaType DEFAULT_MEDIA_TYPE = MediaType.get("application/octet-stream");, +++ b/okhttp-dnsoverhttps/src/main/java/okhttp3/dnsoverhttps/DnsOverHttps.java, +  public static final MediaType DNS_MESSAGE = MediaType.get("application/dns-message");, +  public static final MediaType UDPWIREFORMAT = MediaType.get("application/dns-udpwireformat");, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/HttpLoggingInterceptorTest.java, +  private static final MediaType PLAIN = MediaType.get("text/plain; charset=utf-8");, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +import java.io.InterruptedIOException;, +      } catch (InterruptedException ignored) {, +          throw new AssertionError();, +          throw new InterruptedIOException();, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/CustomDispatcherTest.java, +      public MockResponse dispatch(RecordedRequest request) throws InterruptedException {, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +  @Test public void disconnectRequestHalfway() throws IOException, InterruptedException {, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/JavaApiConverterTest.java, +    return RequestBody.create(MediaType.get("text/plain"), bodyText);, +        return MediaType.get("text/plain; charset=utf-8");, +++ b/okhttp-apache/src/main/java/okhttp3/apache/HttpEntityBody.java, +  private static final MediaType DEFAULT_MEDIA_TYPE = MediaType.get("application/octet-stream");, +++ b/okhttp-dnsoverhttps/src/main/java/okhttp3/dnsoverhttps/DnsOverHttps.java, +  public static final MediaType DNS_MESSAGE = MediaType.get("application/dns-message");, +  public static final MediaType UDPWIREFORMAT = MediaType.get("application/dns-udpwireformat");]