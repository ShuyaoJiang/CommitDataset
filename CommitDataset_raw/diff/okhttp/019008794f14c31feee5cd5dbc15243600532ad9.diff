[+++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +            Platform.get().afterHandshake(sslSocket);, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +            Platform.get().afterHandshake(sslSocket);, +++ b/okhttp-tests/src/test/java/okhttp3/WholeOperationTimeoutTest.java, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +            Platform.get().afterHandshake(sslSocket);, +++ b/okhttp-tests/src/test/java/okhttp3/WholeOperationTimeoutTest.java, +++ b/okhttp/src/main/java/okhttp3/RealCall.java, +    IOException ioException = null;, +      ioException = e;, +      throw e;, +      transmitter.noMoreExchanges(ioException);, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +            Platform.get().afterHandshake(sslSocket);, +++ b/okhttp-tests/src/test/java/okhttp3/WholeOperationTimeoutTest.java, +++ b/okhttp/src/main/java/okhttp3/RealCall.java, +    IOException ioException = null;, +      ioException = e;, +      throw e;, +      transmitter.noMoreExchanges(ioException);, +++ b/okhttp/src/main/java/okhttp3/internal/connection/Exchange.java, +  void bodyComplete(, +    transmitter.exchangeMessageDone(this, requestDone, responseDone, e);, +        complete(e);, +        throw e;, +        complete(e);, +        throw e;, +    private void complete(@Nullable IOException e) {, +      if (completed) return;, +      bodyComplete(bytesReceived, false, true, e);, +        complete(e);, +        throw e;, +    void complete(@Nullable IOException e) {, +      if (completed) return;, +      bodyComplete(bytesReceived, true, false, e);, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +            Platform.get().afterHandshake(sslSocket);, +++ b/okhttp-tests/src/test/java/okhttp3/WholeOperationTimeoutTest.java, +++ b/okhttp/src/main/java/okhttp3/RealCall.java, +    IOException ioException = null;, +      ioException = e;, +      throw e;, +      transmitter.noMoreExchanges(ioException);, +++ b/okhttp/src/main/java/okhttp3/internal/connection/Exchange.java, +  void bodyComplete(, +    transmitter.exchangeMessageDone(this, requestDone, responseDone, e);, +        complete(e);, +        throw e;, +        complete(e);, +        throw e;, +    private void complete(@Nullable IOException e) {, +      if (completed) return;, +      bodyComplete(bytesReceived, false, true, e);, +        complete(e);, +        throw e;, +    void complete(@Nullable IOException e) {, +      if (completed) return;, +      bodyComplete(bytesReceived, true, false, e);, +++ b/okhttp/src/main/java/okhttp3/internal/connection/Transmitter.java, +  void exchangeMessageDone(, +        return; // This exchange was detached violently!, +      maybeReleaseConnection(e, false);, +  public void noMoreExchanges(IOException e) {, +    maybeReleaseConnection(e, false);, +  private void maybeReleaseConnection(@Nullable IOException e, boolean force) {, +      if (e != null) {]