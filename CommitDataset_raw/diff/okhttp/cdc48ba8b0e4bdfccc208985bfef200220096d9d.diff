[+++ b/okhttp-tests/src/test/java/okhttp3/EventListenerTest.java, +    assertNull(dnsEnd.ioe);, +    assertTrue(dnsEnd.ioe instanceof UnknownHostException);, +    assertTrue(dnsEnd.ioe instanceof UnknownHostException);, +    assertNull(connectEnd.ioe);, +    assertNotNull(connectEnd.ioe);, +    assertNull(connectEnd.ioe);, +    assertNull(connectEnd.ioe);, +    assertNull(connectEnd.ioe);, +    assertNull(secureEnd.ioe);, +    assertNotNull(secureEnd.ioe);, +    assertNull(secureEnd.ioe);, +    assertNotNull(responseBodyEnd.ioe);, +    assertNotNull(responseBodyEnd.ioe);, +++ b/okhttp-tests/src/test/java/okhttp3/EventListenerTest.java, +    assertNull(dnsEnd.ioe);, +    assertTrue(dnsEnd.ioe instanceof UnknownHostException);, +    assertTrue(dnsEnd.ioe instanceof UnknownHostException);, +    assertNull(connectEnd.ioe);, +    assertNotNull(connectEnd.ioe);, +    assertNull(connectEnd.ioe);, +    assertNull(connectEnd.ioe);, +    assertNull(connectEnd.ioe);, +    assertNull(secureEnd.ioe);, +    assertNotNull(secureEnd.ioe);, +    assertNull(secureEnd.ioe);, +    assertNotNull(responseBodyEnd.ioe);, +    assertNotNull(responseBodyEnd.ioe);, +++ b/okhttp-tests/src/test/java/okhttp3/RecordingEventListener.java, +import java.io.IOException;, +      IOException ioe) {, +    logEvent(new DnsEnd(call, domainName, inetAddressList, ioe));, +  @Override public void secureConnectEnd(Call call, Handshake handshake, IOException ioe) {, +    logEvent(new SecureConnectEnd(call, handshake, ioe));, +      @Nullable Proxy proxy, Protocol protocol, IOException ioe) {, +    logEvent(new ConnectEnd(call, inetSocketAddress, proxy, protocol, ioe));, +  @Override public void requestHeadersEnd(Call call, long headerLength, IOException ioe) {, +    logEvent(new RequestHeadersEnd(call, headerLength, ioe));, +  @Override public void requestBodyEnd(Call call, long bytesWritten, IOException ioe) {, +    logEvent(new RequestBodyEnd(call, bytesWritten, ioe));, +  @Override public void responseHeadersEnd(Call call, long headerLength, IOException ioe) {, +    logEvent(new ResponseHeadersEnd(call, headerLength, ioe));, +  @Override public void responseBodyEnd(Call call, long bytesRead, IOException ioe) {, +    logEvent(new ResponseBodyEnd(call, bytesRead, ioe));, +  @Override public void callEnd(Call call, IOException ioe) {, +    logEvent(new CallEnd(call, ioe));, +    final IOException ioe;, +    DnsEnd(Call call, String domainName, List<InetAddress> inetAddressList, IOException ioe) {, +      super(call, domainName, inetAddressList, ioe);, +      this.ioe = ioe;, +    final IOException ioe;, +        IOException ioe) {, +      super(call, inetSocketAddress, proxy, protocol, ioe);, +      this.ioe = ioe;, +    final IOException ioe;, +    SecureConnectEnd(Call call, Handshake handshake, IOException ioe) {, +      super(call, handshake, ioe);, +      this.ioe = ioe;, +    final IOException ioe;, +    CallEnd(Call call, IOException ioe) {, +      super(call, ioe);, +      this.ioe = ioe;, +    final IOException ioe;, +    RequestHeadersEnd(Call call, long headerLength, IOException ioe) {, +      super(call, headerLength, ioe);, +      this.ioe = ioe;, +    final IOException ioe;, +    RequestBodyEnd(Call call, long bytesWritten, IOException ioe) {, +      super(call, bytesWritten, ioe);, +      this.ioe = ioe;, +    final IOException ioe;, +    ResponseHeadersEnd(Call call, long headerLength, IOException ioe) {, +      super(call, headerLength, ioe);, +      this.ioe = ioe;, +    final IOException ioe;, +    ResponseBodyEnd(Call call, long bytesRead, IOException ioe) {, +      super(call, bytesRead, ioe);, +      this.ioe = ioe;, +++ b/okhttp-tests/src/test/java/okhttp3/EventListenerTest.java, +    assertNull(dnsEnd.ioe);, +    assertTrue(dnsEnd.ioe instanceof UnknownHostException);, +    assertTrue(dnsEnd.ioe instanceof UnknownHostException);, +    assertNull(connectEnd.ioe);, +    assertNotNull(connectEnd.ioe);, +    assertNull(connectEnd.ioe);, +    assertNull(connectEnd.ioe);, +    assertNull(connectEnd.ioe);, +    assertNull(secureEnd.ioe);, +    assertNotNull(secureEnd.ioe);, +    assertNull(secureEnd.ioe);, +    assertNotNull(responseBodyEnd.ioe);, +    assertNotNull(responseBodyEnd.ioe);, +++ b/okhttp-tests/src/test/java/okhttp3/RecordingEventListener.java, +import java.io.IOException;, +      IOException ioe) {, +    logEvent(new DnsEnd(call, domainName, inetAddressList, ioe));, +  @Override public void secureConnectEnd(Call call, Handshake handshake, IOException ioe) {, +    logEvent(new SecureConnectEnd(call, handshake, ioe));, +      @Nullable Proxy proxy, Protocol protocol, IOException ioe) {, +    logEvent(new ConnectEnd(call, inetSocketAddress, proxy, protocol, ioe));]