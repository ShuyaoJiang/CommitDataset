[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +        .matches("okhttp/\\d\\.\\d\\.\\d(-SNAPSHOT|-RC\\d+)?"));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +        .matches("okhttp/\\d\\.\\d\\.\\d(-SNAPSHOT|-RC\\d+)?"));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/DiskLruCacheTest.java, +    setString(creator, 0, "ABC");, +    setString(creator, 1, "DE");, +    assertSnapshotValue(snapshot, 0, "ABC");, +    assertSnapshotValue(snapshot, 1, "DE");, +    setString(creator, 0, "A");, +    setString(creator, 1, "B");, +    assertSnapshotValue(snapshot, 0, "A");, +    assertSnapshotValue(snapshot, 1, "B");, +    setString(creator, 0, "A");, +    setString(creator, 1, "B");, +    assertSnapshotValue(snapshot, 0, "A");, +    assertSnapshotValue(snapshot, 1, "B");, +    setString(creator, 0, "AB");, +    setString(creator, 1, "C");, +    setString(creator, 0, "AB");, +    setString(creator, 1, "C");, +    setString(creator, 0, "A");, +    setString(creator, 1, "BC");, +    setString(k1Creator, 0, "AB");, +    setString(k1Creator, 1, "C");, +    setString(k2Creator, 0, "DEF");, +    setString(k2Creator, 1, "G");, +    setString(editor, 0, "A");, +    setString(editor, 1, "B");, +    setString(editor, 0, "A");, +    setString(editor, 1, "B");, +    setString(editor, 0, "ABC");, +    setString(editor, 1, "B");, +    setString(a, 0, "a1");, +    setString(a, 1, "a2");, +    setString(v1Creator, 0, "AAaa");, +    setString(v1Creator, 1, "BBbb");, +    setString(v1Updater, 0, "CCcc");, +    setString(v1Updater, 1, "DDdd");, +    assertSnapshotValue(snapshot2, 0, "CCcc");, +    assertSnapshotValue(snapshot2, 1, "DDdd");, +    assertSnapshotValue(snapshot1, 1, "BBbb");, +    setString(creator, 1, "A");, +    setString(creator2, 0, "B");, +    setString(creator2, 1, "C");, +    setString(creator, 1, "A");, +    setString(creator, 0, "A");, +    setString(creator, 1, "B");, +    setString(updater, 0, "C");, +    assertSnapshotValue(snapshot, 0, "C");, +    assertSnapshotValue(snapshot, 1, "B");, +    setString(creator, 0, "ABC");, +    setString(creator, 1, "DE");, +    assertSnapshotValue(snapshot, 0, "ABC");, +    assertSnapshotValue(snapshot, 1, "DE");, +    setString(creator, 0, "ABC");, +    setString(creator, 1, "DE");, +    setString(creator, 0, "F");, +    setString(creator, 1, "GH");, +    assertSnapshotValue(snapshotA, 0, "ABC");, +    assertSnapshotValue(snapshotA, 1, "DE");, +    assertSnapshotValue(snapshotB, 0, "F");, +    assertSnapshotValue(snapshotB, 1, "GH");, +    setString(editor, 1, "a2");, +    setString(toAbort, 0, "b");, +    setString(editor, 1, "a2");, +    setString(toAbort, 0, "b");, +    setString(a, 1, "a2");, +    setString(a, 0, "a1");, +    setString(a, 1, "a2");, +    setString(a, 0, "a123");, +    setString(a, 1, "a1");, +    setString(a, 0, "a1");, +    setString(a, 1, "a2");, +    setString(a, 0, "a1");, +    setString(a, 1, "a2");, +    assertSnapshotValue(a, 0, "a");, +    assertSnapshotValue(a, 1, "a");, +    assertSnapshotValue(a, 0, "a1");, +    assertSnapshotValue(a, 1, "a2");, +    assertSnapshotValue(b, 0, "b1");, +    assertSnapshotValue(b, 1, "b2");, +    assertSnapshotValue(c, 0, "c1");, +    assertSnapshotValue(c, 1, "c2");, +    assertSnapshotValue(b, 0, "b3");, +    assertSnapshotValue(b, 1, "b4");, +      setString(editor, 0, "A");, +    setString(editor, 0, value0);, +    setString(editor, 1, value1);, +  public static void setString(DiskLruCache.Editor editor, int index, String value) throws IOException {, +    BufferedSink writer = Okio.buffer(editor.newSink(index));, +    writer.writeUtf8(value);, +    writer.close();, +  }, +, +    assertSnapshotValue(snapshot, 0, value0);, +    assertSnapshotValue(snapshot, 1, value1);, +  private void assertSnapshotValue(DiskLruCache.Snapshot snapshot, int index, String value), +      throws IOException {, +    assertEquals(value, sourceAsString(snapshot.getSource(index)));]