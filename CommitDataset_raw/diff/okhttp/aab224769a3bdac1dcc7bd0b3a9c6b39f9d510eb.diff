[+++ b/.gitignore, +local.properties, +++ b/.gitignore, +local.properties, +++ b/okhttp/build.gradle, +      'okhttp3.Challenge#scheme()',, +      'okhttp3.Challenge#authParams()',, +      'okhttp3.Challenge#realm()',, +      'okhttp3.Challenge#charset()',, +      'okhttp3.Challenge#withCharset(java.nio.charset.Charset)',, +      'okhttp3.Address#certificatePinner()',, +      'okhttp3.Address#connectionSpecs()',, +      'okhttp3.Address#dns()',, +      'okhttp3.Address#hostnameVerifier()',, +      'okhttp3.Address#protocols()',, +      'okhttp3.Address#proxy()',, +      'okhttp3.Address#proxyAuthenticator()',, +      'okhttp3.Address#proxySelector()',, +      'okhttp3.Address#sslSocketFactory()',, +      'okhttp3.Address#url()',, +      'okhttp3.Address#socketFactory()',, +      'okhttp3.Handshake#cipherSuite()',, +      'okhttp3.Handshake#localCertificates()',, +      'okhttp3.Handshake#localPrincipal()',, +      'okhttp3.Handshake#peerCertificates()',, +      'okhttp3.Handshake#tlsVersion()',, +      'okhttp3.Handshake#peerPrincipal()',, +++ b/.gitignore, +local.properties, +++ b/okhttp/build.gradle, +      'okhttp3.Challenge#scheme()',, +      'okhttp3.Challenge#authParams()',, +      'okhttp3.Challenge#realm()',, +      'okhttp3.Challenge#charset()',, +      'okhttp3.Challenge#withCharset(java.nio.charset.Charset)',, +      'okhttp3.Address#certificatePinner()',, +      'okhttp3.Address#connectionSpecs()',, +      'okhttp3.Address#dns()',, +      'okhttp3.Address#hostnameVerifier()',, +      'okhttp3.Address#protocols()',, +      'okhttp3.Address#proxy()',, +      'okhttp3.Address#proxyAuthenticator()',, +      'okhttp3.Address#proxySelector()',, +      'okhttp3.Address#sslSocketFactory()',, +      'okhttp3.Address#url()',, +      'okhttp3.Address#socketFactory()',, +      'okhttp3.Handshake#cipherSuite()',, +      'okhttp3.Handshake#localCertificates()',, +      'okhttp3.Handshake#localPrincipal()',, +      'okhttp3.Handshake#peerCertificates()',, +      'okhttp3.Handshake#tlsVersion()',, +      'okhttp3.Handshake#peerPrincipal()',, +++ /dev/null, +++ b/.gitignore, +local.properties, +++ b/okhttp/build.gradle, +      'okhttp3.Challenge#scheme()',, +      'okhttp3.Challenge#authParams()',, +      'okhttp3.Challenge#realm()',, +      'okhttp3.Challenge#charset()',, +      'okhttp3.Challenge#withCharset(java.nio.charset.Charset)',, +      'okhttp3.Address#certificatePinner()',, +      'okhttp3.Address#connectionSpecs()',, +      'okhttp3.Address#dns()',, +      'okhttp3.Address#hostnameVerifier()',, +      'okhttp3.Address#protocols()',, +      'okhttp3.Address#proxy()',, +      'okhttp3.Address#proxyAuthenticator()',, +      'okhttp3.Address#proxySelector()',, +      'okhttp3.Address#sslSocketFactory()',, +      'okhttp3.Address#url()',, +      'okhttp3.Address#socketFactory()',, +      'okhttp3.Handshake#cipherSuite()',, +      'okhttp3.Handshake#localCertificates()',, +      'okhttp3.Handshake#localPrincipal()',, +      'okhttp3.Handshake#peerCertificates()',, +      'okhttp3.Handshake#tlsVersion()',, +      'okhttp3.Handshake#peerPrincipal()',, +++ /dev/null, +++ b/okhttp/src/main/java/okhttp3/Address.kt, +/*, + * Copyright (C) 2019 The Android Open Source Project, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package okhttp3, +, +import java.net.Proxy, +import java.net.ProxySelector, +import java.util.Objects]