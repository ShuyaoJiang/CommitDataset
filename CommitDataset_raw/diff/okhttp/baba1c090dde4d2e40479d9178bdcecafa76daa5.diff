[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void unspecifiedRequestBodyContentTypeDoesNotGetDefault() throws Exception {, +    server.enqueue(new MockResponse());, +    server.play();, +, +    Request request = new Request.Builder(), +        .url(server.getUrl("/")), +        .method("POST", RequestBody.create(null, "abc")), +        .build();, +, +    executeSynchronously(request).assertCode(200);, +, +    RecordedRequest recordedRequest = server.takeRequest();, +    assertEquals(null, recordedRequest.getHeader("Content-Type"));, +    assertEquals("3", recordedRequest.getHeader("Content-Length"));, +    assertEquals("abc", recordedRequest.getUtf8Body());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void unspecifiedRequestBodyContentTypeDoesNotGetDefault() throws Exception {, +    server.enqueue(new MockResponse());, +    server.play();, +, +    Request request = new Request.Builder(), +        .url(server.getUrl("/")), +        .method("POST", RequestBody.create(null, "abc")), +        .build();, +, +    executeSynchronously(request).assertCode(200);, +, +    RecordedRequest recordedRequest = server.takeRequest();, +    assertEquals(null, recordedRequest.getHeader("Content-Type"));, +    assertEquals("3", recordedRequest.getHeader("Content-Length"));, +    assertEquals("abc", recordedRequest.getUtf8Body());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +  @Test public void unspecifiedRequestBodyContentTypeGetsDefault() throws Exception {, +    server.enqueue(new MockResponse());, +    server.play();, +, +    connection = client.open(server.getUrl("/"));, +    connection.setDoOutput(true);, +    connection.getOutputStream().write("abc".getBytes(UTF_8));, +    assertEquals(200, connection.getResponseCode());, +, +    RecordedRequest request = server.takeRequest();, +    assertEquals("application/x-www-form-urlencoded", request.getHeader("Content-Type"));, +    assertEquals("3", request.getHeader("Content-Length"));, +    assertEquals("abc", request.getUtf8Body());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void unspecifiedRequestBodyContentTypeDoesNotGetDefault() throws Exception {, +    server.enqueue(new MockResponse());, +    server.play();, +, +    Request request = new Request.Builder(), +        .url(server.getUrl("/")), +        .method("POST", RequestBody.create(null, "abc")), +        .build();, +, +    executeSynchronously(request).assertCode(200);, +, +    RecordedRequest recordedRequest = server.takeRequest();, +    assertEquals(null, recordedRequest.getHeader("Content-Type"));, +    assertEquals("3", recordedRequest.getHeader("Content-Length"));, +    assertEquals("abc", recordedRequest.getUtf8Body());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +  @Test public void unspecifiedRequestBodyContentTypeGetsDefault() throws Exception {, +    server.enqueue(new MockResponse());, +    server.play();, +, +    connection = client.open(server.getUrl("/"));, +    connection.setDoOutput(true);, +    connection.getOutputStream().write("abc".getBytes(UTF_8));, +    assertEquals(200, connection.getResponseCode());, +, +    RecordedRequest request = server.takeRequest();, +    assertEquals("application/x-www-form-urlencoded", request.getHeader("Content-Type"));, +    assertEquals("3", request.getHeader("Content-Length"));, +    assertEquals("abc", request.getUtf8Body());, +  }, +, +++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java, +      // Specify how the request body is terminated., +, +      // Add a content type for the request body, if one isn't already present., +      if (headers.get("Content-Type") == null) {, +        builder.header("Content-Type", "application/x-www-form-urlencoded");, +      }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void unspecifiedRequestBodyContentTypeDoesNotGetDefault() throws Exception {, +    server.enqueue(new MockResponse());, +    server.play();, +, +    Request request = new Request.Builder(), +        .url(server.getUrl("/"))]