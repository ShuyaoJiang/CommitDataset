[+++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +    response.setHeader("Sec-WebSocket-Accept", WebSocketProtocol.acceptHeader(key));, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +    response.setHeader("Sec-WebSocket-Accept", WebSocketProtocol.acceptHeader(key));, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +    response.setHeader("Sec-WebSocket-Accept", WebSocketProtocol.acceptHeader(key));, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +++ /dev/null, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +    response.setHeader("Sec-WebSocket-Accept", WebSocketProtocol.acceptHeader(key));, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +++ /dev/null, +++ /dev/null, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +    response.setHeader("Sec-WebSocket-Accept", WebSocketProtocol.acceptHeader(key));, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +++ /dev/null, +++ /dev/null, +++ b/okhttp-urlconnection/src/test/java/okhttp3/UrlConnectionCacheTest.java, +    String urlKey = Cache.key(HttpUrl.get(url));, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +    response.setHeader("Sec-WebSocket-Accept", WebSocketProtocol.acceptHeader(key));, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +++ /dev/null, +++ /dev/null, +++ b/okhttp-urlconnection/src/test/java/okhttp3/UrlConnectionCacheTest.java, +    String urlKey = Cache.key(HttpUrl.get(url));, +++ b/okhttp/src/main/java/okhttp3/Cache.java, +  public static String key(HttpUrl url) {, +    return ByteString.encodeUtf8(url.toString()).md5().hex();, +    String key = key(request.url());, +      editor = cache.edit(key(response.request().url()));, +    cache.remove(key(request.url()));, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +    response.setHeader("Sec-WebSocket-Accept", WebSocketProtocol.acceptHeader(key));, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +++ /dev/null, +++ /dev/null, +++ b/okhttp-urlconnection/src/test/java/okhttp3/UrlConnectionCacheTest.java, +    String urlKey = Cache.key(HttpUrl.get(url));, +++ b/okhttp/src/main/java/okhttp3/Cache.java, +  public static String key(HttpUrl url) {, +    return ByteString.encodeUtf8(url.toString()).md5().hex();, +    String key = key(request.url());, +      editor = cache.edit(key(response.request().url()));, +    cache.remove(key(request.url()));, +++ b/okhttp/src/main/java/okhttp3/CertificatePinner.java, +    return ByteString.of(x509Certificate.getPublicKey().getEncoded()).sha1();, +    return ByteString.of(x509Certificate.getPublicKey().getEncoded()).sha256();, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +    response.setHeader("Sec-WebSocket-Accept", WebSocketProtocol.acceptHeader(key));, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);, +++ /dev/null, +++ /dev/null, +++ b/okhttp-urlconnection/src/test/java/okhttp3/UrlConnectionCacheTest.java, +    String urlKey = Cache.key(HttpUrl.get(url));, +++ b/okhttp/src/main/java/okhttp3/Cache.java, +  public static String key(HttpUrl url) {, +    return ByteString.encodeUtf8(url.toString()).md5().hex();, +    String key = key(request.url());, +      editor = cache.edit(key(response.request().url()));, +    cache.remove(key(request.url()));, +++ b/okhttp/src/main/java/okhttp3/CertificatePinner.java, +    return ByteString.of(x509Certificate.getPublicKey().getEncoded()).sha1();, +    return ByteString.of(x509Certificate.getPublicKey().getEncoded()).sha256();, +++ /dev/null, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +    response.setHeader("Sec-WebSocket-Accept", WebSocketProtocol.acceptHeader(key));, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    String urlKey = Cache.key(url);, +    String urlKey = Cache.key(url);]