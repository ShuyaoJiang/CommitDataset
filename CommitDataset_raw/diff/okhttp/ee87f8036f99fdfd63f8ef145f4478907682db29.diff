[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +  @Test public void get_HTTP_2() throws Exception {, +    enableProtocol(Protocol.HTTP_2);, +  @Test public void get_HTTPS() throws Exception {, +    enableTls();, +    get();, +  }, +, +  @Test public void get_SPDY_3() throws Exception {, +    enableProtocol(Protocol.SPDY_3);, +  @Test public void head_HTTPS() throws Exception {, +    enableTls();, +  @Test public void head_SPDY_3() throws Exception {, +    enableProtocol(Protocol.SPDY_3);, +    head();, +  }, +, +  @Test public void post_HTTPS() throws Exception {, +    enableTls();, +  @Test public void post_SPDY_3() throws Exception {, +    enableProtocol(Protocol.SPDY_3);, +    post();, +  }, +, +  @Test public void postZerolength_HTTPS() throws Exception {, +    enableTls();, +  @Test public void postZeroLength_SPDY_3() throws Exception {, +    enableProtocol(Protocol.SPDY_3);, +    postZeroLength();, +  }, +, +  @Test public void postBodyRetransmittedAfterAuthorizationFail_HTTPS() throws Exception {, +    enableTls();, +  @Test public void postBodyRetransmittedAfterAuthorizationFail_SPDY_3() throws Exception {, +    enableProtocol(Protocol.SPDY_3);, +    postBodyRetransmittedAfterAuthorizationFail("abc");, +  }, +, +  @Test public void postEmptyBodyRetransmittedAfterAuthorizationFail_HTTPS() throws Exception {, +    enableTls();, +  @Test public void postEmptyBodyRetransmittedAfterAuthorizationFail_SPDY_3() throws Exception {, +    enableProtocol(Protocol.SPDY_3);, +    postBodyRetransmittedAfterAuthorizationFail("");, +  }, +, +  @Test public void delete_HTTPS() throws Exception {, +    enableTls();, +  @Test public void delete_SPDY_3() throws Exception {, +    enableProtocol(Protocol.SPDY_3);, +    delete();, +  }, +, +  @Test public void put_HTTPS() throws Exception {, +    enableTls();, +  @Test public void put_SPDY_3() throws Exception {, +    enableProtocol(Protocol.SPDY_3);, +    put();, +  }, +, +  @Test public void patch_HTTP_2() throws Exception {, +    enableProtocol(Protocol.HTTP_2);, +  @Test public void patch_HTTPS() throws Exception {, +    enableTls();, +    patch();, +  }, +, +  @Test public void patch_SPDY_3() throws Exception {, +    enableProtocol(Protocol.SPDY_3);, +    enableTls();, +    enableTls();, +    enableTls();, +    enableTls();, +    enableTls();, +  @Test public void cancelInFlightBeforeResponseReadThrowsIOE_HTTPS() throws Exception {, +    enableTls();, +    cancelInFlightBeforeResponseReadThrowsIOE();, +  }, +, +  @Test public void canceledBeforeIOSignalsOnFailure_HTTPS() throws Exception {, +    enableTls();, +    canceledBeforeIOSignalsOnFailure();, +  }, +, +  @Test public void canceledBeforeResponseReadSignalsOnFailure_HTTPS() throws Exception {, +    enableTls();, +    canceledBeforeResponseReadSignalsOnFailure();, +  }, +, +  @Test public void canceledAfterResponseIsDeliveredBreaksStreamButSignalsOnce_HTTPS(), +      throws Exception {, +    enableTls();, +    canceledAfterResponseIsDeliveredBreaksStreamButSignalsOnce();, +  }, +, +    enableTls();, +    client.setProtocols(Arrays.asList(protocol, Protocol.HTTP_1_1));, +    server.setProtocols(client.getProtocols());, +  }, +, +  private void enableTls() {]