[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketReaderTest.java, +  @Test public void clientFramePayloadShort() throws IOException {, +    data.write(ByteString.decodeHex("817E000548656c6c6f")); // Hello, +    clientReader.processNextFrame();, +    callback.assertTextMessage("Hello");, +  }, +, +  @Test public void clientFramePayloadLong() throws IOException {, +    data.write(ByteString.decodeHex("817f000000000000000548656c6c6f")); // Hello, +    clientReader.processNextFrame();, +    callback.assertTextMessage("Hello");, +  }, +, +  @Test public void clientFramePayloadTooLongThrows() throws IOException {, +    data.write(ByteString.decodeHex("817f8000000000000000"));, +    try {, +      clientReader.processNextFrame();, +      fail();, +    } catch (ProtocolException e) {, +      assertEquals("Frame length 0x8000000000000000 > 0x7FFFFFFFFFFFFFFF", e.getMessage());, +    }, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketReaderTest.java, +  @Test public void clientFramePayloadShort() throws IOException {, +    data.write(ByteString.decodeHex("817E000548656c6c6f")); // Hello, +    clientReader.processNextFrame();, +    callback.assertTextMessage("Hello");, +  }, +, +  @Test public void clientFramePayloadLong() throws IOException {, +    data.write(ByteString.decodeHex("817f000000000000000548656c6c6f")); // Hello, +    clientReader.processNextFrame();, +    callback.assertTextMessage("Hello");, +  }, +, +  @Test public void clientFramePayloadTooLongThrows() throws IOException {, +    data.write(ByteString.decodeHex("817f8000000000000000"));, +    try {, +      clientReader.processNextFrame();, +      fail();, +    } catch (ProtocolException e) {, +      assertEquals("Frame length 0x8000000000000000 > 0x7FFFFFFFFFFFFFFF", e.getMessage());, +    }, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java, +    byte[] payload = binaryData(0xffff);, +    assertData("827effff");, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketReaderTest.java, +  @Test public void clientFramePayloadShort() throws IOException {, +    data.write(ByteString.decodeHex("817E000548656c6c6f")); // Hello, +    clientReader.processNextFrame();, +    callback.assertTextMessage("Hello");, +  }, +, +  @Test public void clientFramePayloadLong() throws IOException {, +    data.write(ByteString.decodeHex("817f000000000000000548656c6c6f")); // Hello, +    clientReader.processNextFrame();, +    callback.assertTextMessage("Hello");, +  }, +, +  @Test public void clientFramePayloadTooLongThrows() throws IOException {, +    data.write(ByteString.decodeHex("817f8000000000000000"));, +    try {, +      clientReader.processNextFrame();, +      fail();, +    } catch (ProtocolException e) {, +      assertEquals("Frame length 0x8000000000000000 > 0x7FFFFFFFFFFFFFFF", e.getMessage());, +    }, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java, +    byte[] payload = binaryData(0xffff);, +    assertData("827effff");, +++ b/okhttp/src/main/java/com/squareup/okhttp/Request.java, +      urlString = url;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketReaderTest.java, +  @Test public void clientFramePayloadShort() throws IOException {, +    data.write(ByteString.decodeHex("817E000548656c6c6f")); // Hello, +    clientReader.processNextFrame();, +    callback.assertTextMessage("Hello");, +  }, +, +  @Test public void clientFramePayloadLong() throws IOException {, +    data.write(ByteString.decodeHex("817f000000000000000548656c6c6f")); // Hello, +    clientReader.processNextFrame();, +    callback.assertTextMessage("Hello");, +  }, +, +  @Test public void clientFramePayloadTooLongThrows() throws IOException {, +    data.write(ByteString.decodeHex("817f8000000000000000"));, +    try {, +      clientReader.processNextFrame();, +      fail();]