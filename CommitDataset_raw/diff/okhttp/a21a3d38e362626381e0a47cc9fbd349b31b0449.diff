[+++ /dev/null, +++ /dev/null, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +  private int redirectionCount;, +  /** The request; possibly a consequence of redirects or auth headers. */, +  private Request request;, +  protected Call(OkHttpClient client, Request request) {, +    this.request = request;, +      Response result = getResponse(false);, +      engine.releaseConnection(); // Transfer ownership of the body to the caller., +    return request.tag();, +      super("OkHttp %s", request.urlString());, +      return request.url().getHost();, +      return request;, +      return request.tag();, +        Response response = getResponse(false);, +          responseCallback.onFailure(request, new IOException("Canceled"));, +          engine.releaseConnection();, +          responseCallback.onFailure(request, e);, +      String redactedUrl = new URL(request.url(), "/...").toString();, +  Response getResponse(boolean forWebSocket) throws IOException {, +      if (canceled) return null;, +++ /dev/null, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +  private int redirectionCount;, +  /** The request; possibly a consequence of redirects or auth headers. */, +  private Request request;, +  protected Call(OkHttpClient client, Request request) {, +    this.request = request;, +      Response result = getResponse(false);, +      engine.releaseConnection(); // Transfer ownership of the body to the caller., +    return request.tag();, +      super("OkHttp %s", request.urlString());, +      return request.url().getHost();, +      return request;, +      return request.tag();, +        Response response = getResponse(false);, +          responseCallback.onFailure(request, new IOException("Canceled"));, +          engine.releaseConnection();, +          responseCallback.onFailure(request, e);, +      String redactedUrl = new URL(request.url(), "/...").toString();, +  Response getResponse(boolean forWebSocket) throws IOException {, +      if (canceled) return null;, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionSpec.java, +      .tlsVersions(TlsVersion.TLS_1_2, TlsVersion.TLS_1_1, TlsVersion.TLS_1_0), +      .tlsVersions(TlsVersion.TLS_1_0), +++ /dev/null, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +  private int redirectionCount;, +  /** The request; possibly a consequence of redirects or auth headers. */, +  private Request request;, +  protected Call(OkHttpClient client, Request request) {, +    this.request = request;, +      Response result = getResponse(false);, +      engine.releaseConnection(); // Transfer ownership of the body to the caller., +    return request.tag();, +      super("OkHttp %s", request.urlString());, +      return request.url().getHost();, +      return request;, +      return request.tag();, +        Response response = getResponse(false);, +          responseCallback.onFailure(request, new IOException("Canceled"));, +          engine.releaseConnection();, +          responseCallback.onFailure(request, e);, +      String redactedUrl = new URL(request.url(), "/...").toString();, +  Response getResponse(boolean forWebSocket) throws IOException {, +      if (canceled) return null;, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionSpec.java, +      .tlsVersions(TlsVersion.TLS_1_2, TlsVersion.TLS_1_1, TlsVersion.TLS_1_0), +      .tlsVersions(TlsVersion.TLS_1_0), +++ /dev/null, +++ /dev/null, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +  private int redirectionCount;, +  /** The request; possibly a consequence of redirects or auth headers. */, +  private Request request;, +  protected Call(OkHttpClient client, Request request) {, +    this.request = request;, +      Response result = getResponse(false);, +      engine.releaseConnection(); // Transfer ownership of the body to the caller., +    return request.tag();, +      super("OkHttp %s", request.urlString());, +      return request.url().getHost();, +      return request;, +      return request.tag();, +        Response response = getResponse(false);, +          responseCallback.onFailure(request, new IOException("Canceled"));, +          engine.releaseConnection();, +          responseCallback.onFailure(request, e);, +      String redactedUrl = new URL(request.url(), "/...").toString();, +  Response getResponse(boolean forWebSocket) throws IOException {, +      if (canceled) return null;, +++ b/okhttp/src/main/java/com/squareup/okhttp/ConnectionSpec.java, +      .tlsVersions(TlsVersion.TLS_1_2, TlsVersion.TLS_1_1, TlsVersion.TLS_1_0), +      .tlsVersions(TlsVersion.TLS_1_0), +++ /dev/null, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +        return call.getResponse(forWebSocket);, +++ /dev/null, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java]