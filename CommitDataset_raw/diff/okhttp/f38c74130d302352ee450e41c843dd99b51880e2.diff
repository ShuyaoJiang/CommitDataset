[+++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/LoggingEventListener.java, +    logWithTime("secureConnectEnd: " + handshake);, +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/LoggingEventListener.java, +    logWithTime("secureConnectEnd: " + handshake);, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/LoggingEventListenerTest.java, +        .assertLogMatch("secureConnectEnd: Handshake\\{", +            + "tlsVersion=TLS_1_2 ", +            + "cipherSuite=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 ", +            + "peerCertificates=\\[CN=localhost\\] ", +            + "localCertificates=\\[\\]}"), +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/LoggingEventListener.java, +    logWithTime("secureConnectEnd: " + handshake);, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/LoggingEventListenerTest.java, +        .assertLogMatch("secureConnectEnd: Handshake\\{", +            + "tlsVersion=TLS_1_2 ", +            + "cipherSuite=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 ", +            + "peerCertificates=\\[CN=localhost\\] ", +            + "localCertificates=\\[\\]}"), +++ b/okhttp/src/main/java/okhttp3/Handshake.java, +import java.util.ArrayList;, +, +  @Override public String toString() {, +    return "Handshake{", +        + "tlsVersion=", +        + tlsVersion, +        + " cipherSuite=", +        + cipherSuite, +        + " peerCertificates=", +        + names(peerCertificates), +        + " localCertificates=", +        + names(localCertificates), +        + '}';, +  }, +, +  private List<String> names(List<Certificate> certificates) {, +    ArrayList<String> strings = new ArrayList<>();, +, +    for (Certificate cert : certificates) {, +      if (cert instanceof X509Certificate) {, +        strings.add(String.valueOf(((X509Certificate) cert).getSubjectDN()));, +      } else {, +        strings.add(cert.getType());, +      }, +    }, +, +    return strings;, +  }]