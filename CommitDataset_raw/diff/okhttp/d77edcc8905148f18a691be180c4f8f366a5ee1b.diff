[+++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +      Handshake handshake = Handshake.get(cipherSuite, nullSafeImmutableList(peerCertificates),, +          nullSafeImmutableList(localCertificates));, +      Handshake handshake = Handshake.get(cipherSuite, peerCertificates, localCertificates);, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +      Handshake handshake = Handshake.get(cipherSuite, nullSafeImmutableList(peerCertificates),, +          nullSafeImmutableList(localCertificates));, +      Handshake handshake = Handshake.get(cipherSuite, peerCertificates, localCertificates);, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/JavaApiConverterTest.java, +    Handshake handshake = Handshake.get(CipherSuite.TLS_RSA_WITH_NULL_MD5,, +    Handshake handshake = Handshake.get(CipherSuite.TLS_RSA_WITH_NULL_MD5,, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +      Handshake handshake = Handshake.get(cipherSuite, nullSafeImmutableList(peerCertificates),, +          nullSafeImmutableList(localCertificates));, +      Handshake handshake = Handshake.get(cipherSuite, peerCertificates, localCertificates);, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/JavaApiConverterTest.java, +    Handshake handshake = Handshake.get(CipherSuite.TLS_RSA_WITH_NULL_MD5,, +    Handshake handshake = Handshake.get(CipherSuite.TLS_RSA_WITH_NULL_MD5,, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +      Handshake handshake = Handshake.get(cipherSuite, nullSafeImmutableList(peerCertificates),, +          nullSafeImmutableList(localCertificates));, +      Handshake handshake = Handshake.get(cipherSuite, peerCertificates, localCertificates);, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/JavaApiConverterTest.java, +    Handshake handshake = Handshake.get(CipherSuite.TLS_RSA_WITH_NULL_MD5,, +    Handshake handshake = Handshake.get(CipherSuite.TLS_RSA_WITH_NULL_MD5,, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +++ b/okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java, +    assertEquals(new URI("http://host/#"), url.uri()); // Control characters may be stripped!, +  @Test public void toUriWithControlCharacters() throws Exception {, +    // Percent-encoded in the path., +    assertEquals(new URI("http://host/a%00b"), HttpUrl.parse("http://host/a\u0000b").uri());, +    assertEquals(new URI("http://host/a%C2%80b"), HttpUrl.parse("http://host/a\u0080b").uri());, +    assertEquals(new URI("http://host/a%C2%9Fb"), HttpUrl.parse("http://host/a\u009fb").uri());, +    // Percent-encoded in the query., +    assertEquals(new URI("http://host/?a%00b"), HttpUrl.parse("http://host/?a\u0000b").uri());, +    assertEquals(new URI("http://host/?a%C2%80b"), HttpUrl.parse("http://host/?a\u0080b").uri());, +    assertEquals(new URI("http://host/?a%C2%9Fb"), HttpUrl.parse("http://host/?a\u009fb").uri());, +    // Stripped from the fragment., +    assertEquals(new URI("http://host/#a%00b"), HttpUrl.parse("http://host/#a\u0000b").uri());, +    assertEquals(new URI("http://host/#ab"), HttpUrl.parse("http://host/#a\u0080b").uri());, +    assertEquals(new URI("http://host/#ab"), HttpUrl.parse("http://host/#a\u009fb").uri());, +, +  @Test public void toUriWithSpaceCharacters() throws Exception {, +    // Percent-encoded in the path., +    assertEquals(new URI("http://host/a%0Bb"), HttpUrl.parse("http://host/a\u000bb").uri());, +    assertEquals(new URI("http://host/a%20b"), HttpUrl.parse("http://host/a b").uri());, +    assertEquals(new URI("http://host/a%E2%80%89b"), HttpUrl.parse("http://host/a\u2009b").uri());, +    assertEquals(new URI("http://host/a%E3%80%80b"), HttpUrl.parse("http://host/a\u3000b").uri());, +    // Percent-encoded in the query., +    assertEquals(new URI("http://host/?a%0Bb"), HttpUrl.parse("http://host/?a\u000bb").uri());, +    assertEquals(new URI("http://host/?a%20b"), HttpUrl.parse("http://host/?a b").uri());, +    assertEquals(new URI("http://host/?a%E2%80%89b"), HttpUrl.parse("http://host/?a\u2009b").uri());, +    assertEquals(new URI("http://host/?a%E3%80%80b"), HttpUrl.parse("http://host/?a\u3000b").uri());, +    // Stripped from the fragment., +    assertEquals(new URI("http://host/#a%0Bb"), HttpUrl.parse("http://host/#a\u000bb").uri());, +    assertEquals(new URI("http://host/#a%20b"), HttpUrl.parse("http://host/#a b").uri());, +    assertEquals(new URI("http://host/#ab"), HttpUrl.parse("http://host/#a\u2009b").uri());, +    assertEquals(new URI("http://host/#ab"), HttpUrl.parse("http://host/#a\u3000b").uri());, +  }, +, +  @Test public void toUriWithNonHexPercentEscape() throws Exception {, +    assertEquals(new URI("http://host/%25xx"), HttpUrl.parse("http://host/%xx").uri());, +  }, +, +  @Test public void toUriWithTruncatedPercentEscape() throws Exception {, +    assertEquals(new URI("http://host/%25a"), HttpUrl.parse("http://host/%a").uri());, +    assertEquals(new URI("http://host/%25"), HttpUrl.parse("http://host/%").uri());, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +      Handshake handshake = Handshake.get(cipherSuite, nullSafeImmutableList(peerCertificates),, +          nullSafeImmutableList(localCertificates));, +      Handshake handshake = Handshake.get(cipherSuite, peerCertificates, localCertificates);, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/JavaApiConverterTest.java, +    Handshake handshake = Handshake.get(CipherSuite.TLS_RSA_WITH_NULL_MD5,, +    Handshake handshake = Handshake.get(CipherSuite.TLS_RSA_WITH_NULL_MD5,, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +++ b/okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java, +    assertEquals(new URI("http://host/#"), url.uri()); // Control characters may be stripped!, +  @Test public void toUriWithControlCharacters() throws Exception {, +    // Percent-encoded in the path., +    assertEquals(new URI("http://host/a%00b"), HttpUrl.parse("http://host/a\u0000b").uri());, +    assertEquals(new URI("http://host/a%C2%80b"), HttpUrl.parse("http://host/a\u0080b").uri());, +    assertEquals(new URI("http://host/a%C2%9Fb"), HttpUrl.parse("http://host/a\u009fb").uri());, +    // Percent-encoded in the query., +    assertEquals(new URI("http://host/?a%00b"), HttpUrl.parse("http://host/?a\u0000b").uri());, +    assertEquals(new URI("http://host/?a%C2%80b"), HttpUrl.parse("http://host/?a\u0080b").uri());, +    assertEquals(new URI("http://host/?a%C2%9Fb"), HttpUrl.parse("http://host/?a\u009fb").uri());, +    // Stripped from the fragment., +    assertEquals(new URI("http://host/#a%00b"), HttpUrl.parse("http://host/#a\u0000b").uri());, +    assertEquals(new URI("http://host/#ab"), HttpUrl.parse("http://host/#a\u0080b").uri());, +    assertEquals(new URI("http://host/#ab"), HttpUrl.parse("http://host/#a\u009fb").uri());, +, +  @Test public void toUriWithSpaceCharacters() throws Exception {, +    // Percent-encoded in the path., +    assertEquals(new URI("http://host/a%0Bb"), HttpUrl.parse("http://host/a\u000bb").uri());, +    assertEquals(new URI("http://host/a%20b"), HttpUrl.parse("http://host/a b").uri());, +    assertEquals(new URI("http://host/a%E2%80%89b"), HttpUrl.parse("http://host/a\u2009b").uri());, +    assertEquals(new URI("http://host/a%E3%80%80b"), HttpUrl.parse("http://host/a\u3000b").uri());, +    // Percent-encoded in the query., +    assertEquals(new URI("http://host/?a%0Bb"), HttpUrl.parse("http://host/?a\u000bb").uri());]