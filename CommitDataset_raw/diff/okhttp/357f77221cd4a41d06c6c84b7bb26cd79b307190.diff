[+++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java, +        this.responseHeaders = combinedHeaders;, +, +        // Update the cache after applying the combined headers but before initializing the content, +        // stream, otherwise the Content-Encoding header (if present) will be stripped from the, +        // combined headers and not end up in the cache file if transparent gzip compression is, +        // turned on., +, +        initContentStream(cachedResponseBody);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java, +        this.responseHeaders = combinedHeaders;, +, +        // Update the cache after applying the combined headers but before initializing the content, +        // stream, otherwise the Content-Encoding header (if present) will be stripped from the, +        // combined headers and not end up in the cache file if transparent gzip compression is, +        // turned on., +, +        initContentStream(cachedResponseBody);, +++ b/okhttp/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    server.enqueue(new MockResponse().setResponseCode(HttpURLConnection.HTTP_NOT_MODIFIED));, +, +    // At least three request/response pairs are required because after the first request is cached, +    // a different execution path might be taken. Thus modifications to the cache applied during, +    // the second request might not be visible until another request is performed., +    assertEquals("ABCABCABC", readAscii(openConnection(server.getUrl("/"))));]