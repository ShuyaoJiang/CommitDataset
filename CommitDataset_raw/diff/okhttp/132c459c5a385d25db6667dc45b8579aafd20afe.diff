[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.Protocol;, +        ByteString name = spdyHeaders.get(i).name;, +        if (name.equals(Header.TARGET_METHOD)) {, +        } else if (name.equals(Header.TARGET_PATH)) {, +        } else if (name.equals(Header.VERSION)) {, +          httpHeaders.add(name.utf8() + ": " + value);, +        spdyHeaders.add(new Header(headerParts[0], headerParts[1]));, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.Protocol;, +        ByteString name = spdyHeaders.get(i).name;, +        if (name.equals(Header.TARGET_METHOD)) {, +        } else if (name.equals(Header.TARGET_PATH)) {, +        } else if (name.equals(Header.VERSION)) {, +          httpHeaders.add(name.utf8() + ": " + value);, +        spdyHeaders.add(new Header(headerParts[0], headerParts[1]));, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/ByteString.java, +import static com.squareup.okhttp.internal.Util.asciiLowerCase;, +, +  /** A singleton empty {@code ByteString}. */, +   * Returns a new byte string containing a clone of the bytes of {@code data}., +   * Returns true when {@code ascii} is not null and equals the bytes wrapped, +   * by this byte string., +  public boolean equalsAscii(String ascii) {, +    if (ascii == this.utf8) {, +      return true;, +    }, +    if (ascii == null || data.length != ascii.length()) {, +      return false;, +    }, +    for (int i = 0; i < data.length; i++) {, +      if (data[i] != ascii.charAt(i)) return false;, +    }, +    return true;, +   * @throws java.io.EOFException if {@code in} has fewer than {@code count}, +   * bytes to read., +    Util.readFully(in, result);, +    return new ByteString(result);, +, +  /**, +   * Reads {@code count} bytes from {@code in} and returns the result converted, +   * to ASCII lowercase., +   *, +   * @throws java.io.EOFException if {@code in} has fewer than {@code count}, +   * bytes to read., +   */, +  public static ByteString readLowerCase(InputStream in, int count) throws IOException {, +    byte[] result = new byte[count];, +    Util.readFully(in, result);, +    asciiLowerCase(result);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +import com.squareup.okhttp.Protocol;, +        ByteString name = spdyHeaders.get(i).name;, +        if (name.equals(Header.TARGET_METHOD)) {, +        } else if (name.equals(Header.TARGET_PATH)) {, +        } else if (name.equals(Header.VERSION)) {, +          httpHeaders.add(name.utf8() + ": " + value);, +        spdyHeaders.add(new Header(headerParts[0], headerParts[1]));, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/ByteString.java, +import static com.squareup.okhttp.internal.Util.asciiLowerCase;, +, +  /** A singleton empty {@code ByteString}. */, +   * Returns a new byte string containing a clone of the bytes of {@code data}., +   * Returns true when {@code ascii} is not null and equals the bytes wrapped, +   * by this byte string., +  public boolean equalsAscii(String ascii) {, +    if (ascii == this.utf8) {, +      return true;, +    }, +    if (ascii == null || data.length != ascii.length()) {, +      return false;, +    }, +    for (int i = 0; i < data.length; i++) {, +      if (data[i] != ascii.charAt(i)) return false;, +    }, +    return true;, +   * @throws java.io.EOFException if {@code in} has fewer than {@code count}, +   * bytes to read., +    Util.readFully(in, result);, +    return new ByteString(result);, +, +  /**, +   * Reads {@code count} bytes from {@code in} and returns the result converted, +   * to ASCII lowercase., +   *, +   * @throws java.io.EOFException if {@code in} has fewer than {@code count}, +   * bytes to read., +   */, +  public static ByteString readLowerCase(InputStream in, int count) throws IOException {, +    byte[] result = new byte[count];, +    Util.readFully(in, result);, +    asciiLowerCase(result);, +++ b/okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Util.java, +, +  /** Mutates the byte array to ensure all characters are lowercase. */, +  public static void asciiLowerCase(byte[] bytes) {]