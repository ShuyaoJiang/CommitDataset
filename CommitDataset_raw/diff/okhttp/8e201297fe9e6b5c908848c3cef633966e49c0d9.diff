[+++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +    server.play();, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +    server.play();, +++ b/mockwebserver/README.md, +  server.play();, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +    server.play();, +++ b/mockwebserver/README.md, +  server.play();, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import com.squareup.okhttp.Headers;, +  private Headers.Builder headers = new Headers.Builder();, +      result.headers = headers.build().newBuilder();, +    Headers headers = this.headers.build();, +    int size = headers.size();, +    List<String> headerList = new ArrayList<>(size);, +    for (int i = 0; i < size; i++) {, +      headerList.add(headers.name(i) + ": " + headers.value(i));, +    }, +    return headerList;, +  }, +, +  Headers getNewHeaders() {, +    return headers.build();, +    headers = new Headers.Builder();, +    headers.add(name, String.valueOf(value));, +    return this;, +  /** Replaces all headers with those specified in {@code headers}. */, +  public MockResponse setHeaders(Headers headers) {, +    this.headers = headers.newBuilder();, +    return this;, +  }, +, +    headers.removeAll(name);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +    server.play();, +++ b/mockwebserver/README.md, +  server.play();, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import com.squareup.okhttp.Headers;, +  private Headers.Builder headers = new Headers.Builder();, +      result.headers = headers.build().newBuilder();, +    Headers headers = this.headers.build();, +    int size = headers.size();, +    List<String> headerList = new ArrayList<>(size);, +    for (int i = 0; i < size; i++) {, +      headerList.add(headers.name(i) + ": " + headers.value(i));, +    }, +    return headerList;, +  }, +, +  Headers getNewHeaders() {, +    return headers.build();, +    headers = new Headers.Builder();, +    headers.add(name, String.valueOf(value));, +    return this;, +  /** Replaces all headers with those specified in {@code headers}. */, +  public MockResponse setHeaders(Headers headers) {, +    this.headers = headers.newBuilder();, +    return this;, +  }, +, +    headers.removeAll(name);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +    if (port == -1) throw new IllegalStateException("Call play() before getPort()");, +    if (inetAddress == null) throw new IllegalStateException("Call play() before getHostName()");, +    if (inetAddress == null) throw new IllegalStateException("Call play() before toProxyAddress()");, +  /** Equivalent to {@code play(0)}. */, +    play(0);, +   * Starts the server, serves all enqueued requests, and shuts the server down., +  public void play(int port) throws IOException {, +    if (executor != null) throw new IllegalStateException("play() already called");, +    Headers.Builder headers = new Headers.Builder();, +    return new RecordedRequest(request, headers.build(), chunkSizes, requestBody.receivedByteCount,, +    final Request fancyRequest = new Request.Builder(), +        .get().url(request.getPath()), +        .headers(request.getNewHeaders()), +        .build();, +    final Response fancyResponse = new Response.Builder(), +        .headers(response.getNewHeaders()), +        .protocol(Protocol.HTTP_1_1), +        .build();, +      Headers.Builder httpHeaders = new Headers.Builder();, +          httpHeaders.add(name.utf8(), value);, +      return new RecordedRequest(requestLine, httpHeaders.build(), chunkSizes, body.size(), body,, +      Headers headers = response.getNewHeaders();, +        spdyHeaders.add(new Header(headers.name(i), headers.value(i)));, +        Headers pushPromiseHeaders = pushPromise.getHeaders();, +        for (int i = 0, size = pushPromiseHeaders.size(); i < size; i++) {, +          pushedHeaders.add(new Header(pushPromiseHeaders.name(i), pushPromiseHeaders.value(i)));, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +    server.play();, +++ b/mockwebserver/README.md, +  server.play();, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java, +import com.squareup.okhttp.Headers;, +  private Headers.Builder headers = new Headers.Builder();, +      result.headers = headers.build().newBuilder();, +    Headers headers = this.headers.build();]