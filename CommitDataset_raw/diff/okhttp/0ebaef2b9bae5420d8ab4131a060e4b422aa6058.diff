[+++ b/okhttp-tests/src/test/java/okhttp3/HeadersTest.java, +  @Test public void addUnsafeNonAsciiRejectsUnicodeName() {, +    try {, +      Headers headers = new Headers.Builder(), +          .addUnsafeNonAscii("héader1", "value1"), +          .build();, +      fail("Should have complained about invalid value");, +    } catch (IllegalArgumentException expected) {, +      assertEquals("Unexpected char 0xe9 at 1 in header name: héader1",, +          expected.getMessage());, +    }, +  }, +, +  @Test public void addUnsafeNonAsciiAcceptsUnicodeValue() {, +    Headers headers = new Headers.Builder(), +        .addUnsafeNonAscii("header1", "valué1"), +        .build();, +    assertEquals("header1: valué1\n", headers.toString());, +  }, +, +++ b/okhttp-tests/src/test/java/okhttp3/HeadersTest.java, +  @Test public void addUnsafeNonAsciiRejectsUnicodeName() {, +    try {, +      Headers headers = new Headers.Builder(), +          .addUnsafeNonAscii("héader1", "value1"), +          .build();, +      fail("Should have complained about invalid value");, +    } catch (IllegalArgumentException expected) {, +      assertEquals("Unexpected char 0xe9 at 1 in header name: héader1",, +          expected.getMessage());, +    }, +  }, +, +  @Test public void addUnsafeNonAsciiAcceptsUnicodeValue() {, +    Headers headers = new Headers.Builder(), +        .addUnsafeNonAscii("header1", "valué1"), +        .build();, +    assertEquals("header1: valué1\n", headers.toString());, +  }, +, +++ b/okhttp/src/main/java/okhttp3/Headers.java, +      checkName(name);, +      checkValue(value, name);, +      checkName(name);, +      checkValue(value, name);, +  static void checkName(String name) {, +  }, +, +  static void checkValue(String value, String name) {, +      checkName(name);, +      checkValue(value, name);, +      return addLenient(name, value);, +    }, +, +    /**, +     * Add a header with the specified name and value. Does validation of header names, allowing, +     * non-ASCII values., +     */, +    public Builder addUnsafeNonAscii(String name, String value) {, +      checkName(name);, +      checkName(name);, +      checkValue(value, name);]