[+++ b/mockwebserver/pom.xml, +<project xmlns="http://maven.apache.org/POM/4.0.0", +    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">, +++ b/mockwebserver/pom.xml, +<project xmlns="http://maven.apache.org/POM/4.0.0", +    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">, +++ b/mockwebserver/src/main/java/okhttp3/internal/SslContextBuilder.java, + * Constructs an SSL context for testing. This uses Bouncy Castle to generate a self-signed, + * certificate for a single hostname such as "localhost"., + * <p>The crypto performed by this class is relatively slow. Clients should reuse SSL context, + * instances where possible., +   * @param hostName the subject of the host. For TLS this should be the domain name that the client, +   * uses to identify the server., +   * Generates a certificate for {@code hostName} containing {@code keyPair}'s public key, signed by, +   * {@code keyPair}'s private key., +++ b/mockwebserver/pom.xml, +<project xmlns="http://maven.apache.org/POM/4.0.0", +    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">, +++ b/mockwebserver/src/main/java/okhttp3/internal/SslContextBuilder.java, + * Constructs an SSL context for testing. This uses Bouncy Castle to generate a self-signed, + * certificate for a single hostname such as "localhost"., + * <p>The crypto performed by this class is relatively slow. Clients should reuse SSL context, + * instances where possible., +   * @param hostName the subject of the host. For TLS this should be the domain name that the client, +   * uses to identify the server., +   * Generates a certificate for {@code hostName} containing {@code keyPair}'s public key, signed by, +   * {@code keyPair}'s private key., +++ b/mockwebserver/src/main/java/okhttp3/internal/framed/FramedServer.java, +import okhttp3.Protocol;, +import okhttp3.internal.Platform;, +import okhttp3.internal.SslContextBuilder;, +import okhttp3.internal.Util;, +++ b/mockwebserver/pom.xml, +<project xmlns="http://maven.apache.org/POM/4.0.0", +    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">, +++ b/mockwebserver/src/main/java/okhttp3/internal/SslContextBuilder.java, + * Constructs an SSL context for testing. This uses Bouncy Castle to generate a self-signed, + * certificate for a single hostname such as "localhost"., + * <p>The crypto performed by this class is relatively slow. Clients should reuse SSL context, + * instances where possible., +   * @param hostName the subject of the host. For TLS this should be the domain name that the client, +   * uses to identify the server., +   * Generates a certificate for {@code hostName} containing {@code keyPair}'s public key, signed by, +   * {@code keyPair}'s private key., +++ b/mockwebserver/src/main/java/okhttp3/internal/framed/FramedServer.java, +import okhttp3.Protocol;, +import okhttp3.internal.Platform;, +import okhttp3.internal.SslContextBuilder;, +import okhttp3.internal.Util;, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/Dispatcher.java, +   * Returns a response to satisfy {@code request}. This method may block (for instance, to wait on, +   * a CountdownLatch)., +   * Returns an early guess of the next response, used for policy on how an incoming request should, +   * be received. The default implementation returns an empty response. Mischievous implementations, +   * can return other values to test HTTP edge cases, such as unhappy socket policies or throttled, +   * request bodies., +++ b/mockwebserver/pom.xml, +<project xmlns="http://maven.apache.org/POM/4.0.0", +    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">, +++ b/mockwebserver/src/main/java/okhttp3/internal/SslContextBuilder.java, + * Constructs an SSL context for testing. This uses Bouncy Castle to generate a self-signed, + * certificate for a single hostname such as "localhost"., + * <p>The crypto performed by this class is relatively slow. Clients should reuse SSL context, + * instances where possible., +   * @param hostName the subject of the host. For TLS this should be the domain name that the client, +   * uses to identify the server., +   * Generates a certificate for {@code hostName} containing {@code keyPair}'s public key, signed by, +   * {@code keyPair}'s private key., +++ b/mockwebserver/src/main/java/okhttp3/internal/framed/FramedServer.java, +import okhttp3.Protocol;, +import okhttp3.internal.Platform;, +import okhttp3.internal.SslContextBuilder;, +import okhttp3.internal.Util;, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/Dispatcher.java, +   * Returns a response to satisfy {@code request}. This method may block (for instance, to wait on, +   * a CountdownLatch)., +   * Returns an early guess of the next response, used for policy on how an incoming request should, +   * be received. The default implementation returns an empty response. Mischievous implementations, +   * can return other values to test HTTP edge cases, such as unhappy socket policies or throttled, +   * request bodies., +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockResponse.java, +import java.util.ArrayList;, +import java.util.List;, +import java.util.concurrent.TimeUnit;, +   * Removes all HTTP headers including any "Content-Length" and "Transfer-encoding" headers that, +   * were added by default., +   * Adds {@code header} as an HTTP header. For well-formed HTTP {@code header} should contain a, +   * name followed by a colon and a value., +   * Adds a new header with the name and value. This may be used to add multiple headers with the, +   * same name., +   * Adds a new header with the name and value. This may be used to add multiple headers with the, +   * same name. Unlike {@link #addHeader(String, Object)} this does not validate the name and, +   * value., +   * Removes all headers named {@code name}, then adds a new header with the name and value., +   * Sets the response body to {@code body}, chunked every {@code maxChunkSize} bytes.]