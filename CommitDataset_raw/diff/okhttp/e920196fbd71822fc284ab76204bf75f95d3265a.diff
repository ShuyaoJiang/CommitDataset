[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +import com.squareup.okhttp.internal.huc.AuthenticatorAdapter;, +        null, AuthenticatorAdapter.INSTANCE, null,, +        AuthenticatorAdapter.INSTANCE, null,, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +import com.squareup.okhttp.internal.huc.AuthenticatorAdapter;, +        null, AuthenticatorAdapter.INSTANCE, null,, +        AuthenticatorAdapter.INSTANCE, null,, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/RecordingOkAuthenticator.java, +import com.squareup.okhttp.Request;, +import com.squareup.okhttp.Response;, +  public final String credential;, +  public RecordingOkAuthenticator(String credential) {, +  @Override public Request authenticate(Proxy proxy, Response response) {, +        + " url=" + response.request().url(), +        + " challenges=" + response.challenges());, +    return response.request().newBuilder(), +        .addHeader("Authorization", credential), +        .build();, +  @Override public Request authenticateProxy(Proxy proxy, Response response) {, +        + " url=" + response.request().url(), +        + " challenges=" + response.challenges());, +    return response.request().newBuilder(), +        .addHeader("Proxy-Authorization", credential), +        .build();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +import com.squareup.okhttp.internal.huc.AuthenticatorAdapter;, +        null, AuthenticatorAdapter.INSTANCE, null,, +        AuthenticatorAdapter.INSTANCE, null,, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/RecordingOkAuthenticator.java, +import com.squareup.okhttp.Request;, +import com.squareup.okhttp.Response;, +  public final String credential;, +  public RecordingOkAuthenticator(String credential) {, +  @Override public Request authenticate(Proxy proxy, Response response) {, +        + " url=" + response.request().url(), +        + " challenges=" + response.challenges());, +    return response.request().newBuilder(), +        .addHeader("Authorization", credential), +        .build();, +  @Override public Request authenticateProxy(Proxy proxy, Response response) {, +        + " url=" + response.request().url(), +        + " challenges=" + response.challenges());, +    return response.request().newBuilder(), +        .addHeader("Proxy-Authorization", credential), +        .build();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +import com.squareup.okhttp.internal.huc.AuthenticatorAdapter;, +  private final OkAuthenticator authenticator = AuthenticatorAdapter.INSTANCE;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +import com.squareup.okhttp.internal.huc.AuthenticatorAdapter;, +        null, AuthenticatorAdapter.INSTANCE, null,, +        AuthenticatorAdapter.INSTANCE, null,, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/RecordingOkAuthenticator.java, +import com.squareup.okhttp.Request;, +import com.squareup.okhttp.Response;, +  public final String credential;, +  public RecordingOkAuthenticator(String credential) {, +  @Override public Request authenticate(Proxy proxy, Response response) {, +        + " url=" + response.request().url(), +        + " challenges=" + response.challenges());, +    return response.request().newBuilder(), +        .addHeader("Authorization", credential), +        .build();, +  @Override public Request authenticateProxy(Proxy proxy, Response response) {, +        + " url=" + response.request().url(), +        + " challenges=" + response.challenges());, +    return response.request().newBuilder(), +        .addHeader("Proxy-Authorization", credential), +        .build();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java, +import com.squareup.okhttp.internal.huc.AuthenticatorAdapter;, +  private final OkAuthenticator authenticator = AuthenticatorAdapter.INSTANCE;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java, +import com.squareup.okhttp.Credentials;, +    String credential = Credentials.basic("jesse", "peanutbutter");, +        "Authorization: " + credential);, +    RecordingOkAuthenticator authenticator = new RecordingOkAuthenticator("oauthed abc123");, +    assertContains(server.takeRequest().getHeaders(), "Authorization: oauthed abc123");, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +import com.squareup.okhttp.internal.huc.AuthenticatorAdapter;, +        null, AuthenticatorAdapter.INSTANCE, null,, +        AuthenticatorAdapter.INSTANCE, null,, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/RecordingOkAuthenticator.java, +import com.squareup.okhttp.Request;, +import com.squareup.okhttp.Response;, +  public final String credential;, +  public RecordingOkAuthenticator(String credential) {, +  @Override public Request authenticate(Proxy proxy, Response response) {, +        + " url=" + response.request().url(), +        + " challenges=" + response.challenges());, +    return response.request().newBuilder(), +        .addHeader("Authorization", credential), +        .build();, +  @Override public Request authenticateProxy(Proxy proxy, Response response) {, +        + " url=" + response.request().url(), +        + " challenges=" + response.challenges());, +    return response.request().newBuilder(), +        .addHeader("Proxy-Authorization", credential), +        .build();]