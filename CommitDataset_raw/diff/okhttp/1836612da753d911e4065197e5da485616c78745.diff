[+++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/OkHttpAsync.java, +      @Override public void onFailure(Request request, Throwable throwable) {, +        System.out.println("Failed: " + throwable);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/OkHttpAsync.java, +      @Override public void onFailure(Request request, Throwable throwable) {, +        System.out.println("Failed: " + throwable);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/OkHttpAsync.java, +      @Override public void onFailure(Request request, Throwable throwable) {, +        System.out.println("Failed: " + throwable);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +  public final Throwable failure;, +  RecordedResponse(Request request, Response response, String body, Throwable failure) {, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/OkHttpAsync.java, +      @Override public void onFailure(Request request, Throwable throwable) {, +        System.out.println("Failed: " + throwable);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +  public final Throwable failure;, +  RecordedResponse(Request request, Response response, String body, Throwable failure) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordingCallback.java, +  @Override public synchronized void onFailure(Request request, Throwable throwable) {, +    responses.add(new RecordedResponse(request, null, null, throwable));, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/OkHttpAsync.java, +      @Override public void onFailure(Request request, Throwable throwable) {, +        System.out.println("Failed: " + throwable);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +  public final Throwable failure;, +  RecordedResponse(Request request, Response response, String body, Throwable failure) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordingCallback.java, +  @Override public synchronized void onFailure(Request request, Throwable throwable) {, +    responses.add(new RecordedResponse(request, null, null, throwable));, +++ b/okhttp/src/main/java/com/squareup/okhttp/Callback.java, +  void onFailure(Request request, Throwable throwable);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/OkHttpAsync.java, +      @Override public void onFailure(Request request, Throwable throwable) {, +        System.out.println("Failed: " + throwable);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +  public final Throwable failure;, +  RecordedResponse(Request request, Response response, String body, Throwable failure) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordingCallback.java, +  @Override public synchronized void onFailure(Request request, Throwable throwable) {, +    responses.add(new RecordedResponse(request, null, null, throwable));, +++ b/okhttp/src/main/java/com/squareup/okhttp/Callback.java, +  void onFailure(Request request, Throwable throwable);, +++ b/samples/guide/src/main/java/com/squareup/okhttp/recipes/AsynchronousGet.java, +      @Override public void onFailure(Request request, Throwable throwable) {, +        throwable.printStackTrace();, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/OkHttpAsync.java, +      @Override public void onFailure(Request request, Throwable throwable) {, +        System.out.println("Failed: " + throwable);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +      @Override public void onFailure(Request request, Throwable throwable) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordedResponse.java, +  public final Throwable failure;, +  RecordedResponse(Request request, Response response, String body, Throwable failure) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/RecordingCallback.java, +  @Override public synchronized void onFailure(Request request, Throwable throwable) {, +    responses.add(new RecordedResponse(request, null, null, throwable));, +++ b/okhttp/src/main/java/com/squareup/okhttp/Callback.java, +  void onFailure(Request request, Throwable throwable);, +++ b/samples/guide/src/main/java/com/squareup/okhttp/recipes/AsynchronousGet.java, +      @Override public void onFailure(Request request, Throwable throwable) {, +        throwable.printStackTrace();, +++ b/samples/guide/src/main/java/com/squareup/okhttp/recipes/Authenticate.java, +/*, + * Copyright (C) 2014 Square, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *]