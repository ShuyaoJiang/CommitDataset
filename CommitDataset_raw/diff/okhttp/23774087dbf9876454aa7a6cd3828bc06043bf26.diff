[+++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +  List<Protocol> protocols = Arrays.asList(Protocol.HTTP_1_1);, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +  List<Protocol> protocols = Arrays.asList(Protocol.HTTP_1_1);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +      = Util.immutableList(Protocol.HTTP_2, Protocol.SPDY_3, Protocol.HTTP_1_1);, +    if (!protocols.contains(Protocol.HTTP_1_1)) {, +        Protocol protocol = Protocol.HTTP_1_1;, +            String protocolString = Platform.get().getNpnSelectedProtocol(sslSocket);, +            protocol = protocolString != null, +                ? Protocol.get(protocolString), +                : Protocol.HTTP_1_1;, +        if (protocol != Protocol.HTTP_1_1) {, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +  List<Protocol> protocols = Arrays.asList(Protocol.HTTP_1_1);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +      = Util.immutableList(Protocol.HTTP_2, Protocol.SPDY_3, Protocol.HTTP_1_1);, +    if (!protocols.contains(Protocol.HTTP_1_1)) {, +        Protocol protocol = Protocol.HTTP_1_1;, +            String protocolString = Platform.get().getNpnSelectedProtocol(sslSocket);, +            protocol = protocolString != null, +                ? Protocol.get(protocolString), +                : Protocol.HTTP_1_1;, +        if (protocol != Protocol.HTTP_1_1) {, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +import com.squareup.okhttp.internal.http.StatusLine;, +        System.out.println(StatusLine.get(response));, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +  List<Protocol> protocols = Arrays.asList(Protocol.HTTP_1_1);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +      = Util.immutableList(Protocol.HTTP_2, Protocol.SPDY_3, Protocol.HTTP_1_1);, +    if (!protocols.contains(Protocol.HTTP_1_1)) {, +        Protocol protocol = Protocol.HTTP_1_1;, +            String protocolString = Platform.get().getNpnSelectedProtocol(sslSocket);, +            protocol = protocolString != null, +                ? Protocol.get(protocolString), +                : Protocol.HTTP_1_1;, +        if (protocol != Protocol.HTTP_1_1) {, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +import com.squareup.okhttp.internal.http.StatusLine;, +        System.out.println(StatusLine.get(response));, +++ b/okhttp-apache/src/main/java/com/squareup/okhttp/apache/OkApacheClient.java, +    String message = response.message();, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +  List<Protocol> protocols = Arrays.asList(Protocol.HTTP_1_1);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +      = Util.immutableList(Protocol.HTTP_2, Protocol.SPDY_3, Protocol.HTTP_1_1);, +    if (!protocols.contains(Protocol.HTTP_1_1)) {, +        Protocol protocol = Protocol.HTTP_1_1;, +            String protocolString = Platform.get().getNpnSelectedProtocol(sslSocket);, +            protocol = protocolString != null, +                ? Protocol.get(protocolString), +                : Protocol.HTTP_1_1;, +        if (protocol != Protocol.HTTP_1_1) {, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +import com.squareup.okhttp.internal.http.StatusLine;, +        System.out.println(StatusLine.get(response));, +++ b/okhttp-apache/src/main/java/com/squareup/okhttp/apache/OkApacheClient.java, +    String message = response.message();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +        Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_1_1));, +        Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_1_1));, +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +  List<Protocol> protocols = Arrays.asList(Protocol.HTTP_1_1);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +      = Util.immutableList(Protocol.HTTP_2, Protocol.SPDY_3, Protocol.HTTP_1_1);, +    if (!protocols.contains(Protocol.HTTP_1_1)) {, +        Protocol protocol = Protocol.HTTP_1_1;, +            String protocolString = Platform.get().getNpnSelectedProtocol(sslSocket);, +            protocol = protocolString != null, +                ? Protocol.get(protocolString), +                : Protocol.HTTP_1_1;, +        if (protocol != Protocol.HTTP_1_1) {, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +import com.squareup.okhttp.internal.http.StatusLine;, +        System.out.println(StatusLine.get(response));, +++ b/okhttp-apache/src/main/java/com/squareup/okhttp/apache/OkApacheClient.java, +    String message = response.message();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +        Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_1_1));, +        Util.immutableList(Protocol.SPDY_3, Protocol.HTTP_1_1));, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/ExternalHttp2Example.java, +        .setProtocols(Util.immutableList(Protocol.HTTP_2, Protocol.HTTP_1_1)), +++ b/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/Benchmark.java, +  List<Protocol> protocols = Arrays.asList(Protocol.HTTP_1_1);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +      = Util.immutableList(Protocol.HTTP_2, Protocol.SPDY_3, Protocol.HTTP_1_1);, +    if (!protocols.contains(Protocol.HTTP_1_1)) {, +        Protocol protocol = Protocol.HTTP_1_1;, +            String protocolString = Platform.get().getNpnSelectedProtocol(sslSocket);, +            protocol = protocolString != null, +                ? Protocol.get(protocolString), +                : Protocol.HTTP_1_1;, +        if (protocol != Protocol.HTTP_1_1) {, +++ b/okcurl/src/main/java/com/squareup/okhttp/curl/Main.java, +import com.squareup.okhttp.internal.http.StatusLine;, +        System.out.println(StatusLine.get(response));, +++ b/okhttp-apache/src/main/java/com/squareup/okhttp/apache/OkApacheClient.java, +    String message = response.message();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java]