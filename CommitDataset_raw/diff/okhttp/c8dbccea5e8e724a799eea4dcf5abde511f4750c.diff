[+++ b/okhttp-tests/fuzzingserver-config.json, +  "url": "ws://127.0.0.1:9099",, +++ b/okhttp-tests/fuzzingserver-config.json, +  "url": "ws://127.0.0.1:9099",, +++ b/okhttp-tests/fuzzingserver-expected.txt, +"4.2.4 OK", +"5.15 OK", +"7.1.5 OK", +++ b/okhttp-tests/fuzzingserver-config.json, +  "url": "ws://127.0.0.1:9099",, +++ b/okhttp-tests/fuzzingserver-expected.txt, +"4.2.4 OK", +"5.15 OK", +"7.1.5 OK", +++ b/okhttp-tests/src/main/java/okhttp3/AutobahnTester.java, +  private static final String HOST = "ws://localhost:9099";, +        webSocket.close(1000, null);, +++ b/okhttp-tests/fuzzingserver-config.json, +  "url": "ws://127.0.0.1:9099",, +++ b/okhttp-tests/fuzzingserver-expected.txt, +"4.2.4 OK", +"5.15 OK", +"7.1.5 OK", +++ b/okhttp-tests/src/main/java/okhttp3/AutobahnTester.java, +  private static final String HOST = "ws://localhost:9099";, +        webSocket.close(1000, null);, +++ b/okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.java, +import static okhttp3.internal.ws.WebSocketProtocol.validateCloseCode;, +  private static final long MAX_QUEUE_SIZE = 16 * 1024 * 1024; // 16 MiB., +    validateCloseCode(code);, +++ b/okhttp-tests/fuzzingserver-config.json, +  "url": "ws://127.0.0.1:9099",, +++ b/okhttp-tests/fuzzingserver-expected.txt, +"4.2.4 OK", +"5.15 OK", +"7.1.5 OK", +++ b/okhttp-tests/src/main/java/okhttp3/AutobahnTester.java, +  private static final String HOST = "ws://localhost:9099";, +        webSocket.close(1000, null);, +++ b/okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.java, +import static okhttp3.internal.ws.WebSocketProtocol.validateCloseCode;, +  private static final long MAX_QUEUE_SIZE = 16 * 1024 * 1024; // 16 MiB., +    validateCloseCode(code);, +++ b/okhttp/src/main/java/okhttp3/internal/ws/WebSocketProtocol.java, +  static String closeCodeExceptionMessage(int code) {, +      return "Code must be in range [1000,5000): " + code;, +      return "Code " + code + " is reserved and may not be used.";, +    } else {, +      return null;, +, +  static void validateCloseCode(int code) {, +    String message = closeCodeExceptionMessage(code);, +    if (message != null) throw new IllegalArgumentException(message);, +++ b/okhttp-tests/fuzzingserver-config.json, +  "url": "ws://127.0.0.1:9099",, +++ b/okhttp-tests/fuzzingserver-expected.txt, +"4.2.4 OK", +"5.15 OK", +"7.1.5 OK", +++ b/okhttp-tests/src/main/java/okhttp3/AutobahnTester.java, +  private static final String HOST = "ws://localhost:9099";, +        webSocket.close(1000, null);, +++ b/okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.java, +import static okhttp3.internal.ws.WebSocketProtocol.validateCloseCode;, +  private static final long MAX_QUEUE_SIZE = 16 * 1024 * 1024; // 16 MiB., +    validateCloseCode(code);, +++ b/okhttp/src/main/java/okhttp3/internal/ws/WebSocketProtocol.java, +  static String closeCodeExceptionMessage(int code) {, +      return "Code must be in range [1000,5000): " + code;, +      return "Code " + code + " is reserved and may not be used.";, +    } else {, +      return null;, +, +  static void validateCloseCode(int code) {, +    String message = closeCodeExceptionMessage(code);, +    if (message != null) throw new IllegalArgumentException(message);, +++ b/okhttp/src/main/java/okhttp3/internal/ws/WebSocketReader.java, +          String codeExceptionMessage = WebSocketProtocol.closeCodeExceptionMessage(code);, +          if (codeExceptionMessage != null) throw new ProtocolException(codeExceptionMessage);, +++ b/okhttp-tests/fuzzingserver-config.json, +  "url": "ws://127.0.0.1:9099",, +++ b/okhttp-tests/fuzzingserver-expected.txt, +"4.2.4 OK", +"5.15 OK", +"7.1.5 OK", +++ b/okhttp-tests/src/main/java/okhttp3/AutobahnTester.java, +  private static final String HOST = "ws://localhost:9099";, +        webSocket.close(1000, null);, +++ b/okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.java, +import static okhttp3.internal.ws.WebSocketProtocol.validateCloseCode;, +  private static final long MAX_QUEUE_SIZE = 16 * 1024 * 1024; // 16 MiB., +    validateCloseCode(code);, +++ b/okhttp/src/main/java/okhttp3/internal/ws/WebSocketProtocol.java, +  static String closeCodeExceptionMessage(int code) {, +      return "Code must be in range [1000,5000): " + code;, +      return "Code " + code + " is reserved and may not be used.";, +    } else {, +      return null;, +, +  static void validateCloseCode(int code) {]