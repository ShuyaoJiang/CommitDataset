[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +  /** https://github.com/square/okhttp/issues/947 */, +  @Test public void gzipAndVaryOnAcceptEncoding() throws Exception {, +    server.enqueue(new MockResponse(), +        .setBody(gzip("ABCABCABC")), +        .addHeader("Content-Encoding: gzip"), +        .addHeader("Vary: Accept-Encoding"), +        .addHeader("Cache-Control: max-age=60"));, +    server.enqueue(new MockResponse().setBody("FAIL"));, +, +    assertEquals("ABCABCABC", readAscii(client.open(server.getUrl("/"))));, +    assertEquals("ABCABCABC", readAscii(client.open(server.getUrl("/"))));, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +  /** https://github.com/square/okhttp/issues/947 */, +  @Test public void gzipAndVaryOnAcceptEncoding() throws Exception {, +    server.enqueue(new MockResponse(), +        .setBody(gzip("ABCABCABC")), +        .addHeader("Content-Encoding: gzip"), +        .addHeader("Vary: Accept-Encoding"), +        .addHeader("Cache-Control: max-age=60"));, +    server.enqueue(new MockResponse().setBody("FAIL"));, +, +    assertEquals("ABCABCABC", readAscii(client.open(server.getUrl("/"))));, +    assertEquals("ABCABCABC", readAscii(client.open(server.getUrl("/"))));, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +      new Request.Builder().url("ftp://hostname/path");, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +  /** https://github.com/square/okhttp/issues/947 */, +  @Test public void gzipAndVaryOnAcceptEncoding() throws Exception {, +    server.enqueue(new MockResponse(), +        .setBody(gzip("ABCABCABC")), +        .addHeader("Content-Encoding: gzip"), +        .addHeader("Vary: Accept-Encoding"), +        .addHeader("Cache-Control: max-age=60"));, +    server.enqueue(new MockResponse().setBody("FAIL"));, +, +    assertEquals("ABCABCABC", readAscii(client.open(server.getUrl("/"))));, +    assertEquals("ABCABCABC", readAscii(client.open(server.getUrl("/"))));, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +      new Request.Builder().url("ftp://hostname/path");, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http2ConnectionTest.java, +    int windowUpdateThreshold = DEFAULT_INITIAL_WINDOW_SIZE / 2;, +      // Send frames summing to windowUpdateThreshold., +      for (int sent = 0, count; sent < windowUpdateThreshold; sent += count) {, +        count = Math.min(HTTP_2.maxFrameSize(), windowUpdateThreshold - sent);, +        peer.sendFrame().data(false, 3, data(count));, +      }, +    while (in.read(buffer, 1024) != -1) {, +      if (buffer.size() == 3 * windowUpdateThreshold) break;, +    }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +  /** https://github.com/square/okhttp/issues/947 */, +  @Test public void gzipAndVaryOnAcceptEncoding() throws Exception {, +    server.enqueue(new MockResponse(), +        .setBody(gzip("ABCABCABC")), +        .addHeader("Content-Encoding: gzip"), +        .addHeader("Vary: Accept-Encoding"), +        .addHeader("Cache-Control: max-age=60"));, +    server.enqueue(new MockResponse().setBody("FAIL"));, +, +    assertEquals("ABCABCABC", readAscii(client.open(server.getUrl("/"))));, +    assertEquals("ABCABCABC", readAscii(client.open(server.getUrl("/"))));, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +      new Request.Builder().url("ftp://hostname/path");, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http2ConnectionTest.java, +    int windowUpdateThreshold = DEFAULT_INITIAL_WINDOW_SIZE / 2;, +      // Send frames summing to windowUpdateThreshold., +      for (int sent = 0, count; sent < windowUpdateThreshold; sent += count) {, +        count = Math.min(HTTP_2.maxFrameSize(), windowUpdateThreshold - sent);, +        peer.sendFrame().data(false, 3, data(count));, +      }, +    while (in.read(buffer, 1024) != -1) {, +      if (buffer.size() == 3 * windowUpdateThreshold) break;, +    }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Spdy3ConnectionTest.java, +    int windowUpdateThreshold = DEFAULT_INITIAL_WINDOW_SIZE / 2;, +      // Send frames summing to windowUpdateThreshold., +      for (int sent = 0, count; sent < windowUpdateThreshold; sent += count) {, +        count = Math.min(SPDY3.maxFrameSize(), windowUpdateThreshold - sent);, +        peer.sendFrame().data(false, 1, data(count));, +      }, +    while (in.read(buffer, 1024) != -1) {, +      if (buffer.size() == 3 * windowUpdateThreshold) break;, +    }, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +  /** https://github.com/square/okhttp/issues/947 */, +  @Test public void gzipAndVaryOnAcceptEncoding() throws Exception {, +    server.enqueue(new MockResponse(), +        .setBody(gzip("ABCABCABC")), +        .addHeader("Content-Encoding: gzip"), +        .addHeader("Vary: Accept-Encoding"), +        .addHeader("Cache-Control: max-age=60"));]