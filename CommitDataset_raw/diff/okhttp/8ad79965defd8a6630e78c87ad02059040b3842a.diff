[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft12Test.java, +  final Buffer frame = new Buffer();, +  final FrameReader fr = new Http20Draft12.Reader(frame, 4096, false);, +  final int expectedStreamId = 15;, +      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,, +, +    // Write the first headers frame., +    // Write the continuation frame, specifying no more frames are expected., +      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,, +    // Write the push promise frame, specifying the associated stream ID., +    // Write the first headers frame., +    // Write the continuation frame, specifying no more frames are expected., +    frame.writeShort(15); // 3 settings * 5 bytes (1 for the code and 4 for the value)., +    frame.writeShort(5); // 1 for the code and 4 for the value, +    frame.writeShort(5); // 1 for the code and 4 for the value, +    frame.writeShort(5); // 1 for the code and 4 for the value, +    fr.nextFrame(new BaseTestHandler() {, +    byte[] expectedData = new byte[16383];, +    int zippedSize = (int) zipped.size();, +    int dataLength = 1123;, +    byte[] expectedData = new byte[dataLength];, +    int paddingLength = 257;, +    byte[] padding = new byte[paddingLength];, +    int dataLength = 1123;, +    byte[] expectedData = new byte[dataLength];, +    int dataLength = 1123;, +    byte[] expectedData = new byte[dataLength];, +    int dataLength = 1123;, +    byte[] expectedData = new byte[dataLength];, +    int paddingLength = 257;, +    byte[] padding = new byte[paddingLength];, +    int dataLength = 1123;, +    byte[] expectedData = new byte[dataLength];, +    int paddingLength = 257;, +    byte[] padding = new byte[paddingLength];, +    int paddingLength = 257;, +    byte[] padding = new byte[paddingLength];, +    byte[] padding = new byte[0xffff];, +    int paddingLength = 257;, +    byte[] padding = new byte[paddingLength];, +, +    // Write the first headers frame., +    // Write the continuation frame, specifying no more frames are expected., +, +    // Write the first headers frame., +    // Write the continuation frame, specifying no more frames are expected., +, +    // Write the first headers frame., +    // Write the continuation frame, specifying no more frames are expected., +    int paddingLength = 257;, +    byte[] padding = new byte[paddingLength];, +, +    // Write the first headers frame., +    // Write the continuation frame, specifying no more frames are expected., +    byte[] padding = new byte[0xffff];, +    // Write the first headers frame., +    // Write the continuation frame, specifying no more frames are expected., +    fr.nextFrame(new BaseTestHandler() {, +    fr.nextFrame(new BaseTestHandler() {, +    fr.nextFrame(new BaseTestHandler() {, +        assertEquals(0xffffffffL, maxAge);, +        assertEquals(0xffffffffL, maxAge);, +      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft12Test.java, +  final Buffer frame = new Buffer();, +  final FrameReader fr = new Http20Draft12.Reader(frame, 4096, false);, +  final int expectedStreamId = 15;, +      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,, +, +    // Write the first headers frame., +    // Write the continuation frame, specifying no more frames are expected., +      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,, +    // Write the push promise frame, specifying the associated stream ID., +    // Write the first headers frame., +    // Write the continuation frame, specifying no more frames are expected., +    frame.writeShort(15); // 3 settings * 5 bytes (1 for the code and 4 for the value)., +    frame.writeShort(5); // 1 for the code and 4 for the value, +    frame.writeShort(5); // 1 for the code and 4 for the value, +    frame.writeShort(5); // 1 for the code and 4 for the value, +    fr.nextFrame(new BaseTestHandler() {, +    byte[] expectedData = new byte[16383];, +    int zippedSize = (int) zipped.size();, +    int dataLength = 1123;, +    byte[] expectedData = new byte[dataLength];, +    int paddingLength = 257;, +    byte[] padding = new byte[paddingLength];, +    int dataLength = 1123;, +    byte[] expectedData = new byte[dataLength];, +    int dataLength = 1123;, +    byte[] expectedData = new byte[dataLength];, +    int dataLength = 1123;, +    byte[] expectedData = new byte[dataLength];, +    int paddingLength = 257;, +    byte[] padding = new byte[paddingLength];, +    int dataLength = 1123;, +    byte[] expectedData = new byte[dataLength];, +    int paddingLength = 257;, +    byte[] padding = new byte[paddingLength];, +    int paddingLength = 257;, +    byte[] padding = new byte[paddingLength];]