[+++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttpAsync.java, +import okhttp3.Call;, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttpAsync.java, +import okhttp3.Call;, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +    callback.await(server.url("/a")), +    callback.await(server.url("/0")), +    callback.await(server.url("/0")).assertFailure("Too many follow-up requests: 21");, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttpAsync.java, +import okhttp3.Call;, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +    callback.await(server.url("/a")), +    callback.await(server.url("/0")), +    callback.await(server.url("/0")).assertFailure("Too many follow-up requests: 21");, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +++ b/okhttp-tests/src/test/java/okhttp3/RecordingCallback.java, +  @Override public synchronized void onFailure(Call call, IOException e) {, +    responses.add(new RecordedResponse(call.request(), null, null, null, e));, +  @Override public synchronized void onResponse(Call call, Response response) throws IOException {, +    responses.add(new RecordedResponse(call.request(), response, null, body, null));, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttpAsync.java, +import okhttp3.Call;, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +    callback.await(server.url("/a")), +    callback.await(server.url("/0")), +    callback.await(server.url("/0")).assertFailure("Too many follow-up requests: 21");, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +++ b/okhttp-tests/src/test/java/okhttp3/RecordingCallback.java, +  @Override public synchronized void onFailure(Call call, IOException e) {, +    responses.add(new RecordedResponse(call.request(), null, null, null, e));, +  @Override public synchronized void onResponse(Call call, Response response) throws IOException {, +    responses.add(new RecordedResponse(call.request(), response, null, body, null));, +++ b/okhttp-ws/src/main/java/okhttp3/ws/WebSocketCall.java, +      @Override public void onResponse(Call call, Response response) throws IOException {, +      @Override public void onFailure(Call call, IOException e) {, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttpAsync.java, +import okhttp3.Call;, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +    callback.await(server.url("/a")), +    callback.await(server.url("/0")), +    callback.await(server.url("/0")).assertFailure("Too many follow-up requests: 21");, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +++ b/okhttp-tests/src/test/java/okhttp3/RecordingCallback.java, +  @Override public synchronized void onFailure(Call call, IOException e) {, +    responses.add(new RecordedResponse(call.request(), null, null, null, e));, +  @Override public synchronized void onResponse(Call call, Response response) throws IOException {, +    responses.add(new RecordedResponse(call.request(), response, null, body, null));, +++ b/okhttp-ws/src/main/java/okhttp3/ws/WebSocketCall.java, +      @Override public void onResponse(Call call, Response response) throws IOException {, +      @Override public void onFailure(Call call, IOException e) {, +++ b/okhttp/src/main/java/okhttp3/Callback.java, +  void onFailure(Call call, IOException e);, +  void onResponse(Call call, Response response) throws IOException;, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttpAsync.java, +import okhttp3.Call;, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +      @Override public void onFailure(Call call, IOException e) {, +      @Override public void onResponse(Call call, Response response) throws IOException {, +      @Override public void onFailure(Call call, IOException e) {]