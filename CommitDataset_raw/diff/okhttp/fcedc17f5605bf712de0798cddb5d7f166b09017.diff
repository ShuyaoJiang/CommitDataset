[+++ b/mockwebserver/src/main/java/okhttp3/internal/framed/FramedServer.java, +      System.out.println(e.getMessage());, +++ b/mockwebserver/src/main/java/okhttp3/internal/framed/FramedServer.java, +      System.out.println(e.getMessage());, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/Dispatcher.java, +++ b/mockwebserver/src/main/java/okhttp3/internal/framed/FramedServer.java, +      System.out.println(e.getMessage());, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/Dispatcher.java, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +++ b/mockwebserver/src/main/java/okhttp3/internal/framed/FramedServer.java, +      System.out.println(e.getMessage());, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/Dispatcher.java, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/QueueDispatcher.java, +    return responseQueue.take();, +++ b/mockwebserver/src/main/java/okhttp3/internal/framed/FramedServer.java, +      System.out.println(e.getMessage());, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/Dispatcher.java, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/QueueDispatcher.java, +    return responseQueue.take();, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +++ b/mockwebserver/src/main/java/okhttp3/internal/framed/FramedServer.java, +      System.out.println(e.getMessage());, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/Dispatcher.java, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/QueueDispatcher.java, +    return responseQueue.take();, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +    Headers okHeaders = extractOkResponseHeaders(httpUrlConnection);, +    Headers okHeaders = extractOkHeaders(javaResponse);, +      Headers headers = extractOkHeaders(requestHeaders);, +    final Headers headers = response.headers();, +  private static Headers extractOkHeaders(CacheResponse javaResponse) throws IOException {, +    return extractOkHeaders(javaResponseHeaders);, +  private static Headers extractOkResponseHeaders(HttpURLConnection httpUrlConnection) {, +    return extractOkHeaders(javaResponseHeaders);, +   * entry (one with a {@code null} key) is discarded., +  static Headers extractOkHeaders(Map<String, List<String>> javaHeaders) {, +++ b/mockwebserver/src/main/java/okhttp3/internal/framed/FramedServer.java, +      System.out.println(e.getMessage());, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/Dispatcher.java, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/QueueDispatcher.java, +    return responseQueue.take();, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +    Headers okHeaders = extractOkResponseHeaders(httpUrlConnection);, +    Headers okHeaders = extractOkHeaders(javaResponse);, +      Headers headers = extractOkHeaders(requestHeaders);, +    final Headers headers = response.headers();, +  private static Headers extractOkHeaders(CacheResponse javaResponse) throws IOException {, +    return extractOkHeaders(javaResponseHeaders);, +  private static Headers extractOkResponseHeaders(HttpURLConnection httpUrlConnection) {, +    return extractOkHeaders(javaResponseHeaders);, +   * entry (one with a {@code null} key) is discarded., +  static Headers extractOkHeaders(Map<String, List<String>> javaHeaders) {, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/JavaApiConverterTest.java, +    Headers okHeaders = JavaApiConverter.extractOkHeaders(javaResponseHeaders);, +++ b/mockwebserver/src/main/java/okhttp3/internal/framed/FramedServer.java, +      System.out.println(e.getMessage());, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/Dispatcher.java, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/QueueDispatcher.java, +    return responseQueue.take();, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +    Headers okHeaders = extractOkResponseHeaders(httpUrlConnection);, +    Headers okHeaders = extractOkHeaders(javaResponse);, +      Headers headers = extractOkHeaders(requestHeaders);, +    final Headers headers = response.headers();, +  private static Headers extractOkHeaders(CacheResponse javaResponse) throws IOException {, +    return extractOkHeaders(javaResponseHeaders);, +  private static Headers extractOkResponseHeaders(HttpURLConnection httpUrlConnection) {, +    return extractOkHeaders(javaResponseHeaders);, +   * entry (one with a {@code null} key) is discarded., +  static Headers extractOkHeaders(Map<String, List<String>> javaHeaders) {, +++ b/okhttp-android-support/src/test/java/okhttp3/internal/huc/JavaApiConverterTest.java, +    Headers okHeaders = JavaApiConverter.extractOkHeaders(javaResponseHeaders);, +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +        Platform.get().log(message);, +    Response response = chain.proceed(request);, +++ b/mockwebserver/src/main/java/okhttp3/internal/framed/FramedServer.java, +      System.out.println(e.getMessage());, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/Dispatcher.java, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/QueueDispatcher.java, +    return responseQueue.take();, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +++ b/okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java, +    Headers okHeaders = extractOkResponseHeaders(httpUrlConnection);, +    Headers okHeaders = extractOkHeaders(javaResponse);, +      Headers headers = extractOkHeaders(requestHeaders);, +    final Headers headers = response.headers();, +  private static Headers extractOkHeaders(CacheResponse javaResponse) throws IOException {, +    return extractOkHeaders(javaResponseHeaders);, +  private static Headers extractOkResponseHeaders(HttpURLConnection httpUrlConnection) {, +    return extractOkHeaders(javaResponseHeaders);, +   * entry (one with a {@code null} key) is discarded.]