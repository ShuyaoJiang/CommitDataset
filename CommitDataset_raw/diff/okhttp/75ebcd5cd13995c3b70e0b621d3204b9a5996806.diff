[+++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +     * --> POST /greeting HTTP/1.1 (3-byte body), +     * <-- HTTP/1.1 200 OK (22ms, 6-byte body), +     * --> POST /greeting HTTP/1.1, +     * <-- HTTP/1.1 200 OK (22ms), +     * --> POST /greeting HTTP/1.1, +     * <-- HTTP/1.1 200 OK (22ms), +    String requestStartMessage =, +        "--> " + request.method() + ' ' + request.url() + ' ' + protocol(protocol);, +, +  private static String protocol(Protocol protocol) {, +    return protocol == Protocol.HTTP_1_0 ? "HTTP/1.0" : "HTTP/1.1";, +  }, +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +     * --> POST /greeting HTTP/1.1 (3-byte body), +     * <-- HTTP/1.1 200 OK (22ms, 6-byte body), +     * --> POST /greeting HTTP/1.1, +     * <-- HTTP/1.1 200 OK (22ms), +     * --> POST /greeting HTTP/1.1, +     * <-- HTTP/1.1 200 OK (22ms), +    String requestStartMessage =, +        "--> " + request.method() + ' ' + request.url() + ' ' + protocol(protocol);, +, +  private static String protocol(Protocol protocol) {, +    return protocol == Protocol.HTTP_1_0 ? "HTTP/1.0" : "HTTP/1.1";, +  }, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/HttpLoggingInterceptorTest.java, +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1 (3-byte body)"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1 (3-byte body)"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +++ b/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java, +     * --> POST /greeting HTTP/1.1 (3-byte body), +     * <-- HTTP/1.1 200 OK (22ms, 6-byte body), +     * --> POST /greeting HTTP/1.1, +     * <-- HTTP/1.1 200 OK (22ms), +     * --> POST /greeting HTTP/1.1, +     * <-- HTTP/1.1 200 OK (22ms), +    String requestStartMessage =, +        "--> " + request.method() + ' ' + request.url() + ' ' + protocol(protocol);, +, +  private static String protocol(Protocol protocol) {, +    return protocol == Protocol.HTTP_1_0 ? "HTTP/1.0" : "HTTP/1.1";, +  }, +++ b/okhttp-logging-interceptor/src/test/java/okhttp3/logging/HttpLoggingInterceptorTest.java, +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1 (3-byte body)"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1 (3-byte body)"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1"), +        .assertLogEqual("--> POST " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1"), +        .assertLogEqual("--> GET " + url + " HTTP/1.1")]