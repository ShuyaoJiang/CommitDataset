[+++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    // A cache miss writes the cache., +    long t0 = System.currentTimeMillis();, +    assertEquals(0, response1.receivedResponseAtMillis() - t0, 250.0);, +    // A conditional cache hit updates the cache., +    Thread.sleep(500); // Make sure t0 and t1 are distinct., +    long t1 = System.currentTimeMillis();, +    assertEquals(0, response2.receivedResponseAtMillis() - t1, 250.0);, +    // A full cache hit reads the cache., +    Thread.sleep(500); // Make sure t1 and t2 are distinct., +    long t2 = System.currentTimeMillis();, +    assertEquals(0, response3.receivedResponseAtMillis() - t1, 250.0);, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    // A cache miss writes the cache., +    long t0 = System.currentTimeMillis();, +    assertEquals(0, response1.receivedResponseAtMillis() - t0, 250.0);, +    // A conditional cache hit updates the cache., +    Thread.sleep(500); // Make sure t0 and t1 are distinct., +    long t1 = System.currentTimeMillis();, +    assertEquals(0, response2.receivedResponseAtMillis() - t1, 250.0);, +    // A full cache hit reads the cache., +    Thread.sleep(500); // Make sure t1 and t2 are distinct., +    long t2 = System.currentTimeMillis();, +    assertEquals(0, response3.receivedResponseAtMillis() - t1, 250.0);, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +    long request1SentAt = System.currentTimeMillis();, +        .assertSentRequestAtMillis(request2SentAt, request2ReceivedAt), +        .assertReceivedResponseAtMillis(request2SentAt, request2ReceivedAt);, +        .assertSentRequestAtMillis(request1SentAt, request1ReceivedAt), +        .assertReceivedResponseAtMillis(request1SentAt, request1ReceivedAt);, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    // A cache miss writes the cache., +    long t0 = System.currentTimeMillis();, +    assertEquals(0, response1.receivedResponseAtMillis() - t0, 250.0);, +    // A conditional cache hit updates the cache., +    Thread.sleep(500); // Make sure t0 and t1 are distinct., +    long t1 = System.currentTimeMillis();, +    assertEquals(0, response2.receivedResponseAtMillis() - t1, 250.0);, +    // A full cache hit reads the cache., +    Thread.sleep(500); // Make sure t1 and t2 are distinct., +    long t2 = System.currentTimeMillis();, +    assertEquals(0, response3.receivedResponseAtMillis() - t1, 250.0);, +++ b/okhttp-tests/src/test/java/okhttp3/CallTest.java, +    long request1SentAt = System.currentTimeMillis();, +        .assertSentRequestAtMillis(request2SentAt, request2ReceivedAt), +        .assertReceivedResponseAtMillis(request2SentAt, request2ReceivedAt);, +        .assertSentRequestAtMillis(request1SentAt, request1ReceivedAt), +        .assertReceivedResponseAtMillis(request1SentAt, request1ReceivedAt);, +++ b/okhttp/src/main/java/okhttp3/internal/cache/CacheInterceptor.java, +            .sentRequestAtMillis(networkResponse.sentRequestAtMillis()), +            .receivedResponseAtMillis(networkResponse.receivedResponseAtMillis())]