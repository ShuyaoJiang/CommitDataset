[+++ b/samples/guide/src/main/java/com/squareup/okhttp/guide/Recipes.java, +import com.squareup.okhttp.MediaType;, +import com.squareup.okhttp.RequestBody;, +import okio.BufferedSink;, +    if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);, +        if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);, +    if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);, +, +    if (!response1.isSuccessful()) throw new IOException("Unexpected code " + response1);, +, +    if (!response2.isSuccessful()) throw new IOException("Unexpected code " + response2);, +, +  public void postString() throws Exception {, +    MediaType mediaType = MediaType.parse("text/x-markdown; charset=utf-8");, +    String postBody = "", +        + "Releases\n", +        + "--------\n", +        + "\n", +        + " * _1.0_ May 6, 2013\n", +        + " * _1.1_ June 15, 2013\n", +        + " * _1.2_ August 11, 2013\n";, +, +    OkHttpClient client = new OkHttpClient();, +    Request request = new Request.Builder(), +        .url("https://api.github.com/markdown/raw"), +        .post(RequestBody.create(mediaType, postBody)), +        .build();, +, +    Response response = client.newCall(request).execute();, +    if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);, +, +    System.out.println(response.body().string());, +  }, +, +  public void postFile() throws Exception {, +    MediaType mediaType = MediaType.parse("text/x-markdown; charset=utf-8");, +    File file = new File("README.md");, +, +    OkHttpClient client = new OkHttpClient();, +    Request request = new Request.Builder(), +        .url("https://api.github.com/markdown/raw"), +        .post(RequestBody.create(mediaType, file)), +        .build();, +, +    Response response = client.newCall(request).execute();, +    if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);, +, +    System.out.println(response.body().string());, +  }, +, +  public void postStreaming() throws Exception {, +    RequestBody requestBody = new RequestBody() {, +      MediaType mediaType = MediaType.parse("text/x-markdown; charset=utf-8");, +, +      @Override public MediaType contentType() {, +        return mediaType;, +      }, +, +      @Override public void writeTo(BufferedSink sink) throws IOException {, +        sink.writeUtf8("Numbers\n");, +        sink.writeUtf8("-------\n");, +        for (int i = 2; i <= 997; i++) {, +          sink.writeUtf8(String.format(" * %s = %s\n", i, factor(i)));, +        }, +      }, +, +      private String factor(int n) {, +        for (int i = 2; i < n; i++) {, +          int x = n / i;, +          if (x * i == n) return factor(x) + " Ã— " + i;, +        }, +        return Integer.toString(n);, +      }, +    };, +, +    OkHttpClient client = new OkHttpClient();, +    Request request = new Request.Builder(), +        .url("https://api.github.com/markdown/raw"), +        .post(requestBody), +        .build();, +, +    Response response = client.newCall(request).execute();, +    if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);, +, +    System.out.println(response.body().string());, +  }, +, +    recipes.postString();, +    recipes.postFile();, +    recipes.postStreaming();]