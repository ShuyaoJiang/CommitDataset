[+++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          listener.onOpen(webSocket, fancyResponse);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          listener.onOpen(webSocket, fancyResponse);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          listener.onOpen(webSocket, fancyResponse);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          listener.onOpen(webSocket, fancyResponse);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/AutobahnTester.java, +          @Override public void onOpen(WebSocket webSocket, Response response), +          @Override public void onFailure(IOException e, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response), +      @Override public void onFailure(IOException e, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response), +      @Override public void onFailure(IOException e, Response response) {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          listener.onOpen(webSocket, fancyResponse);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/AutobahnTester.java, +          @Override public void onOpen(WebSocket webSocket, Response response), +          @Override public void onFailure(IOException e, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response), +      @Override public void onFailure(IOException e, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response), +      @Override public void onFailure(IOException e, Response response) {, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/WebSocketCallTest.java, +      @Override public void onOpen(WebSocket webSocket, Response response), +      @Override public void onOpen(WebSocket webSocket, Response response), +    server.enqueue(new MockResponse(), +        .setResponseCode(101), +      @Override public void onOpen(WebSocket webSocket, Response response), +      @Override public void onFailure(IOException e, Response response) {, +        listener.onFailure(e, null);, +    @Override public void onOpen(WebSocket webSocket, Response response), +    @Override public void onFailure(IOException e, Response response) {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          listener.onOpen(webSocket, fancyResponse);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/AutobahnTester.java, +          @Override public void onOpen(WebSocket webSocket, Response response), +          @Override public void onFailure(IOException e, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response), +      @Override public void onFailure(IOException e, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response), +      @Override public void onFailure(IOException e, Response response) {, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/WebSocketCallTest.java, +      @Override public void onOpen(WebSocket webSocket, Response response), +      @Override public void onOpen(WebSocket webSocket, Response response), +    server.enqueue(new MockResponse(), +        .setResponseCode(101), +      @Override public void onOpen(WebSocket webSocket, Response response), +      @Override public void onFailure(IOException e, Response response) {, +        listener.onFailure(e, null);, +    @Override public void onOpen(WebSocket webSocket, Response response), +    @Override public void onFailure(IOException e, Response response) {, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/WebSocketRecorder.java, +  @Override public void onOpen(WebSocket webSocket, Response response) {, +  @Override public void onFailure(IOException e, Response response) {, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          listener.onOpen(webSocket, fancyResponse);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/AutobahnTester.java, +          @Override public void onOpen(WebSocket webSocket, Response response), +          @Override public void onFailure(IOException e, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response), +      @Override public void onFailure(IOException e, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response), +      @Override public void onFailure(IOException e, Response response) {, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/WebSocketCallTest.java, +      @Override public void onOpen(WebSocket webSocket, Response response), +      @Override public void onOpen(WebSocket webSocket, Response response), +    server.enqueue(new MockResponse(), +        .setResponseCode(101), +      @Override public void onOpen(WebSocket webSocket, Response response), +      @Override public void onFailure(IOException e, Response response) {, +        listener.onFailure(e, null);, +    @Override public void onOpen(WebSocket webSocket, Response response), +    @Override public void onFailure(IOException e, Response response) {, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/WebSocketRecorder.java, +  @Override public void onOpen(WebSocket webSocket, Response response) {, +  @Override public void onFailure(IOException e, Response response) {, +++ b/okhttp-ws/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java, +    listener.onFailure(e, null);, +++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java, +          listener.onOpen(webSocket, fancyResponse);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/okhttp-ws-tests/src/test/java/com/squareup/okhttp/ws/AutobahnTester.java, +          @Override public void onOpen(WebSocket webSocket, Response response), +          @Override public void onFailure(IOException e, Response response) {, +      @Override public void onOpen(WebSocket webSocket, Response response), +      @Override public void onFailure(IOException e, Response response) {]