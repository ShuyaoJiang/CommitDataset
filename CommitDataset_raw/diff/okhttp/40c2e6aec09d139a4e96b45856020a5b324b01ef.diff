[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +import static com.squareup.okhttp.internal.Internal.logger;, +    logger.addHandler(logHandler);, +    logger.removeHandler(logHandler);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +import static com.squareup.okhttp.internal.Internal.logger;, +    logger.addHandler(logHandler);, +    logger.removeHandler(logHandler);, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +import static com.squareup.okhttp.internal.Internal.logger;, +          logger.log(Level.INFO, "Callback failure for " + toLoggableString(), e);, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +import static com.squareup.okhttp.internal.Internal.logger;, +    logger.addHandler(logHandler);, +    logger.removeHandler(logHandler);, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +import static com.squareup.okhttp.internal.Internal.logger;, +          logger.log(Level.INFO, "Callback failure for " + toLoggableString(), e);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Internal.java, +import java.util.logging.Logger;, +  public static final Logger logger = Logger.getLogger(OkHttpClient.class.getName());, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +import static com.squareup.okhttp.internal.Internal.logger;, +    logger.addHandler(logHandler);, +    logger.removeHandler(logHandler);, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +import static com.squareup.okhttp.internal.Internal.logger;, +          logger.log(Level.INFO, "Callback failure for " + toLoggableString(), e);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Internal.java, +import java.util.logging.Logger;, +  public static final Logger logger = Logger.getLogger(OkHttpClient.class.getName());, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Platform.java, +import static com.squareup.okhttp.internal.Internal.logger;, +, +          logger.log(Level.INFO, "NPN/ALPN callback dropped: SPDY and HTTP/2 are disabled. ", +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +import static com.squareup.okhttp.internal.Internal.logger;, +    logger.addHandler(logHandler);, +    logger.removeHandler(logHandler);, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +import static com.squareup.okhttp.internal.Internal.logger;, +          logger.log(Level.INFO, "Callback failure for " + toLoggableString(), e);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Internal.java, +import java.util.logging.Logger;, +  public static final Logger logger = Logger.getLogger(OkHttpClient.class.getName());, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Platform.java, +import static com.squareup.okhttp.internal.Internal.logger;, +, +          logger.log(Level.INFO, "NPN/ALPN callback dropped: SPDY and HTTP/2 are disabled. ", +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft14.java, +import static com.squareup.okhttp.internal.Internal.logger;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +import static com.squareup.okhttp.internal.Internal.logger;, +    logger.addHandler(logHandler);, +    logger.removeHandler(logHandler);, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +import static com.squareup.okhttp.internal.Internal.logger;, +          logger.log(Level.INFO, "Callback failure for " + toLoggableString(), e);, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Internal.java, +import java.util.logging.Logger;, +  public static final Logger logger = Logger.getLogger(OkHttpClient.class.getName());, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Platform.java, +import static com.squareup.okhttp.internal.Internal.logger;, +, +          logger.log(Level.INFO, "NPN/ALPN callback dropped: SPDY and HTTP/2 are disabled. ", +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft14.java, +import static com.squareup.okhttp.internal.Internal.logger;, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java, +import java.util.Iterator;, +        for (Iterator<Map.Entry<Integer, SpdyStream>> i = streams.entrySet().iterator();, +            i.hasNext(); ) {, +          Map.Entry<Integer, SpdyStream> entry = i.next();, +          int streamId = entry.getKey();, +          if (streamId > lastGoodStreamId && entry.getValue().isLocallyInitiated()) {, +            entry.getValue().receiveRstStream(ErrorCode.REFUSED_STREAM);, +            i.remove();, +          }]