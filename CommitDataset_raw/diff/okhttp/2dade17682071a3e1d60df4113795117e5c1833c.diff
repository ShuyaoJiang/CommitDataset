[+++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +  @Test public void hostnameImplicitlyStarts() throws IOException {, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +  @Test public void hostnameImplicitlyStarts() throws IOException {, +++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/HttpURLConnectionImpl.java, +    String hostname = url.getHost();, +      hostname = proxyAddress.getHostName();, +    return new SocketPermission(hostname + ":" + hostPort, "connect, resolve");, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +  @Test public void hostnameImplicitlyStarts() throws IOException {, +++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/HttpURLConnectionImpl.java, +    String hostname = url.getHost();, +      hostname = proxyAddress.getHostName();, +    return new SocketPermission(hostname + ":" + hostPort, "connect, resolve");, +++ b/okhttp/src/main/java/okhttp3/Cache.java, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +  @Test public void hostnameImplicitlyStarts() throws IOException {, +++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/HttpURLConnectionImpl.java, +    String hostname = url.getHost();, +      hostname = proxyAddress.getHostName();, +    return new SocketPermission(hostname + ":" + hostPort, "connect, resolve");, +++ b/okhttp/src/main/java/okhttp3/Cache.java, +++ b/okhttp/src/main/java/okhttp3/Handshake.java, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +  @Test public void hostnameImplicitlyStarts() throws IOException {, +++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/HttpURLConnectionImpl.java, +    String hostname = url.getHost();, +      hostname = proxyAddress.getHostName();, +    return new SocketPermission(hostname + ":" + hostPort, "connect, resolve");, +++ b/okhttp/src/main/java/okhttp3/Cache.java, +++ b/okhttp/src/main/java/okhttp3/Handshake.java, +++ b/okhttp/src/main/java/okhttp3/internal/ConnectionSpecSelector.java, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +  @Test public void hostnameImplicitlyStarts() throws IOException {, +++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/HttpURLConnectionImpl.java, +    String hostname = url.getHost();, +      hostname = proxyAddress.getHostName();, +    return new SocketPermission(hostname + ":" + hostPort, "connect, resolve");, +++ b/okhttp/src/main/java/okhttp3/Cache.java, +++ b/okhttp/src/main/java/okhttp3/Handshake.java, +++ b/okhttp/src/main/java/okhttp3/internal/ConnectionSpecSelector.java, +++ b/okhttp/src/main/java/okhttp3/internal/DiskLruCache.java, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +  @Test public void hostnameImplicitlyStarts() throws IOException {, +++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/HttpURLConnectionImpl.java, +    String hostname = url.getHost();, +      hostname = proxyAddress.getHostName();, +    return new SocketPermission(hostname + ":" + hostPort, "connect, resolve");, +++ b/okhttp/src/main/java/okhttp3/Cache.java, +++ b/okhttp/src/main/java/okhttp3/Handshake.java, +++ b/okhttp/src/main/java/okhttp3/internal/ConnectionSpecSelector.java, +++ b/okhttp/src/main/java/okhttp3/internal/DiskLruCache.java, +++ b/okhttp/src/main/java/okhttp3/internal/FaultHidingSink.java, +/*, + * Copyright (C) 2015 Square, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +  @Test public void hostnameImplicitlyStarts() throws IOException {, +++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/HttpURLConnectionImpl.java, +    String hostname = url.getHost();, +      hostname = proxyAddress.getHostName();, +    return new SocketPermission(hostname + ":" + hostPort, "connect, resolve");, +++ b/okhttp/src/main/java/okhttp3/Cache.java, +++ b/okhttp/src/main/java/okhttp3/Handshake.java, +++ b/okhttp/src/main/java/okhttp3/internal/ConnectionSpecSelector.java, +++ b/okhttp/src/main/java/okhttp3/internal/DiskLruCache.java, +++ b/okhttp/src/main/java/okhttp3/internal/FaultHidingSink.java, +/*, + * Copyright (C) 2015 Square, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +++ b/okhttp/src/main/java/okhttp3/internal/NamedRunnable.java, +++ b/mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java, +  @Test public void hostnameImplicitlyStarts() throws IOException {, +++ b/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/HttpURLConnectionImpl.java, +    String hostname = url.getHost();, +      hostname = proxyAddress.getHostName();]