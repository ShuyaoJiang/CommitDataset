[+++ b/okhttp-tests/src/main/java/okhttp3/AutobahnTester.java, +                  webSocket.message(response);, +++ b/okhttp-tests/src/main/java/okhttp3/AutobahnTester.java, +                  webSocket.message(response);, +++ b/okhttp-tests/src/test/java/okhttp3/WebSocketCallTest.java, +    client.message(RequestBody.create(TEXT, "Hello, WebSockets!"));, +    client.message(RequestBody.create(BINARY, "Hello!"));, +      client.message(null);, +      client.message(RequestBody.create(null, "Hey!"));, +      client.message(RequestBody.create(MediaType.parse("text/plain"), "Hey!"));, +    client.ping(ByteString.encodeUtf8("Hello, WebSockets!"));, +      client.ping(null);, +    server.message(RequestBody.create(TEXT, "Hello, WebSockets!"));, +    server.message(RequestBody.create(TEXT, "Hello, WebSockets!"));, +    client.ping(ByteString.EMPTY);, +    client.ping(ByteString.encodeUtf8("WebSockets are fun!"));, +    webSocket.message(RequestBody.create(TEXT, "abc"));, +++ b/okhttp-tests/src/main/java/okhttp3/AutobahnTester.java, +                  webSocket.message(response);, +++ b/okhttp-tests/src/test/java/okhttp3/WebSocketCallTest.java, +    client.message(RequestBody.create(TEXT, "Hello, WebSockets!"));, +    client.message(RequestBody.create(BINARY, "Hello!"));, +      client.message(null);, +      client.message(RequestBody.create(null, "Hey!"));, +      client.message(RequestBody.create(MediaType.parse("text/plain"), "Hey!"));, +    client.ping(ByteString.encodeUtf8("Hello, WebSockets!"));, +      client.ping(null);, +    server.message(RequestBody.create(TEXT, "Hello, WebSockets!"));, +    server.message(RequestBody.create(TEXT, "Hello, WebSockets!"));, +    client.ping(ByteString.EMPTY);, +    client.ping(ByteString.encodeUtf8("WebSockets are fun!"));, +    webSocket.message(RequestBody.create(TEXT, "abc"));, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java, +    client.message(message);, +        client.ping(ByteString.encodeUtf8("Pong?"));, +    client.message(message);, +    client.ping(ByteString.encodeUtf8("Hello!"));, +      client.ping(ByteString.encodeUtf8("Pong?"));, +      client.message(RequestBody.create(TEXT, "Hello!"));, +      client.ping(ByteString.encodeUtf8("Ping!"));, +      client.message(RequestBody.create(TEXT, "Hello!"));, +      client.ping(ByteString.encodeUtf8("Ping!"));, +      client.message(RequestBody.create(TEXT, "Hello!"));, +      client.message(RequestBody.create(TEXT, "Hello!"));, +      client.ping(ByteString.encodeUtf8("Ping!"));, +      client.ping(ByteString.encodeUtf8("Pong?"));, +      client.message(RequestBody.create(TEXT, "Hi!"));, +    client.message(message);, +    server.message(RequestBody.create(TEXT, "Hello!"));, +++ b/okhttp-tests/src/main/java/okhttp3/AutobahnTester.java, +                  webSocket.message(response);, +++ b/okhttp-tests/src/test/java/okhttp3/WebSocketCallTest.java, +    client.message(RequestBody.create(TEXT, "Hello, WebSockets!"));, +    client.message(RequestBody.create(BINARY, "Hello!"));, +      client.message(null);, +      client.message(RequestBody.create(null, "Hey!"));, +      client.message(RequestBody.create(MediaType.parse("text/plain"), "Hey!"));, +    client.ping(ByteString.encodeUtf8("Hello, WebSockets!"));, +      client.ping(null);, +    server.message(RequestBody.create(TEXT, "Hello, WebSockets!"));, +    server.message(RequestBody.create(TEXT, "Hello, WebSockets!"));, +    client.ping(ByteString.EMPTY);, +    client.ping(ByteString.encodeUtf8("WebSockets are fun!"));, +    webSocket.message(RequestBody.create(TEXT, "abc"));, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java, +    client.message(message);, +        client.ping(ByteString.encodeUtf8("Pong?"));, +    client.message(message);, +    client.ping(ByteString.encodeUtf8("Hello!"));, +      client.ping(ByteString.encodeUtf8("Pong?"));, +      client.message(RequestBody.create(TEXT, "Hello!"));, +      client.ping(ByteString.encodeUtf8("Ping!"));, +      client.message(RequestBody.create(TEXT, "Hello!"));, +      client.ping(ByteString.encodeUtf8("Ping!"));, +      client.message(RequestBody.create(TEXT, "Hello!"));, +      client.message(RequestBody.create(TEXT, "Hello!"));, +      client.ping(ByteString.encodeUtf8("Ping!"));, +      client.ping(ByteString.encodeUtf8("Pong?"));, +      client.message(RequestBody.create(TEXT, "Hi!"));, +    client.message(message);, +    server.message(RequestBody.create(TEXT, "Hello!"));, +++ b/okhttp/src/main/java/okhttp3/WebSocket.java, +  void message(RequestBody message) throws IOException;, +  void ping(ByteString payload) throws IOException;, +++ b/okhttp-tests/src/main/java/okhttp3/AutobahnTester.java, +                  webSocket.message(response);, +++ b/okhttp-tests/src/test/java/okhttp3/WebSocketCallTest.java, +    client.message(RequestBody.create(TEXT, "Hello, WebSockets!"));, +    client.message(RequestBody.create(BINARY, "Hello!"));, +      client.message(null);, +      client.message(RequestBody.create(null, "Hey!"));, +      client.message(RequestBody.create(MediaType.parse("text/plain"), "Hey!"));, +    client.ping(ByteString.encodeUtf8("Hello, WebSockets!"));, +      client.ping(null);, +    server.message(RequestBody.create(TEXT, "Hello, WebSockets!"));, +    server.message(RequestBody.create(TEXT, "Hello, WebSockets!"));, +    client.ping(ByteString.EMPTY);, +    client.ping(ByteString.encodeUtf8("WebSockets are fun!"));, +    webSocket.message(RequestBody.create(TEXT, "abc"));, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java]