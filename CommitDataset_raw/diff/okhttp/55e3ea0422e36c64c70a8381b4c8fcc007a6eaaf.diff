[+++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java, +import static okhttp3.internal.http2.Http2Connection.Listener.REFUSE_INCOMING_STREAMS;, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    Http2Connection connection = connect(peer);, +    // Verify the peer received the second ACK., +    Http2Connection connection = connectWithSettings(client, settings);, +    Http2Connection connection = connectWithSettings(client, settings);, +    Http2Connection connection = connectWithSettings(true, settings);, +    peer.acceptFrame(); // ACK, +    peer.acceptFrame(); // PING, +    Http2Connection connection = connect(peer);, +    peer.takeFrame(); // PING, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    assertEquals(5, peer.frameCount());, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    assertEquals(5, peer.frameCount());, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer, observer, REFUSE_INCOMING_STREAMS);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    connect(peer, PushObserver.CANCEL, REFUSE_INCOMING_STREAMS);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    connect(peer);, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer, IGNORE, listener);, +    Http2Connection connection = connect(peer);, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());, +    peer.acceptFrame(); // ACK, +    Http2Connection connection = connect(peer);, +    peer.sendFrame().settings(new Settings());]