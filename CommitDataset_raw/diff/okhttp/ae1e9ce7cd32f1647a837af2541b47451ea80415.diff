[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +        engine.close(); // Close the connection if it isn't already., +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +        engine.close(); // Close the connection if it isn't already., +++ b/okhttp/src/main/java/com/squareup/okhttp/Callback.java, +   * Response#body}., +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +        engine.close(); // Close the connection if it isn't already., +++ b/okhttp/src/main/java/com/squareup/okhttp/Callback.java, +   * Response#body}., +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +  public void setConnectTimeout(long timeout, TimeUnit unit) {, +  public void setReadTimeout(long timeout, TimeUnit unit) {, +  public void setWriteTimeout(long timeout, TimeUnit unit) {, +  void setInternalCache(InternalCache internalCache) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java, +++ b/okhttp/src/main/java/com/squareup/okhttp/Call.java, +        engine.close(); // Close the connection if it isn't already., +++ b/okhttp/src/main/java/com/squareup/okhttp/Callback.java, +   * Response#body}., +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +  public void setConnectTimeout(long timeout, TimeUnit unit) {, +  public void setReadTimeout(long timeout, TimeUnit unit) {, +  public void setWriteTimeout(long timeout, TimeUnit unit) {, +  void setInternalCache(InternalCache internalCache) {, +++ b/samples/guide/src/main/java/com/squareup/okhttp/recipes/PerCallSettings.java, +      OkHttpClient cloned = client.clone(); // Clone to make a customized OkHttp for this request., +      cloned.setReadTimeout(500, TimeUnit.MILLISECONDS);, +, +      Response response = cloned.newCall(request).execute();, +      OkHttpClient cloned = client.clone(); // Clone to make a customized OkHttp for this request., +      cloned.setReadTimeout(3000, TimeUnit.MILLISECONDS);, +, +      Response response = cloned.newCall(request).execute();]