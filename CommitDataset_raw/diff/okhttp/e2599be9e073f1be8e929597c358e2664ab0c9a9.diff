[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +  // For compatibility with Java HttpURLConnections, and when Android-bundled and and older, +  // app-bundled OkHttp library are in use at the same time in an Android app, the HttpResponseCache, +  // must behave as a working, Java compliant, ResponseCache., +  @Test public void testHttpResponseCacheIsValidResponseCache() throws Exception {, +    assertSame(cache, ResponseCache.getDefault());, +, +    String body = "Body";, +    server.enqueue(new MockResponse().setBody(body));, +    server.play();, +, +    // Use a standard Java HttpURLConnection, which will pick up the default ResponseCache., +    URL url = server.getUrl("/");, +    HttpURLConnection connection = (HttpURLConnection) url.openConnection();, +    assertEquals(body, readAscii(connection));, +    connection.disconnect();, +, +    // Next request should be cached., +    HttpURLConnection connection2 = (HttpURLConnection) url.openConnection();, +    assertEquals(body, readAscii(connection2));, +    connection2.disconnect();, +, +    assertEquals(1, server.getRequestCount());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +  // For compatibility with Java HttpURLConnections, and when Android-bundled and and older, +  // app-bundled OkHttp library are in use at the same time in an Android app, the HttpResponseCache, +  // must behave as a working, Java compliant, ResponseCache., +  @Test public void testHttpResponseCacheIsValidResponseCache() throws Exception {, +    assertSame(cache, ResponseCache.getDefault());, +, +    String body = "Body";, +    server.enqueue(new MockResponse().setBody(body));, +    server.play();, +, +    // Use a standard Java HttpURLConnection, which will pick up the default ResponseCache., +    URL url = server.getUrl("/");, +    HttpURLConnection connection = (HttpURLConnection) url.openConnection();, +    assertEquals(body, readAscii(connection));, +    connection.disconnect();, +, +    // Next request should be cached., +    HttpURLConnection connection2 = (HttpURLConnection) url.openConnection();, +    assertEquals(body, readAscii(connection2));, +    connection2.disconnect();, +, +    assertEquals(1, server.getRequestCount());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/JavaApiConverterTest.java, +/*, + * Copyright (C) 2014 Square, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package com.squareup.okhttp.internal.http;, +, +import com.squareup.okhttp.Handshake;, +import com.squareup.okhttp.Headers;, +import com.squareup.okhttp.MediaType;, +import com.squareup.okhttp.OkHttpClient;, +import com.squareup.okhttp.Request;, +import com.squareup.okhttp.Response;, +import com.squareup.okhttp.internal.SslContextBuilder;, +import com.squareup.okhttp.internal.Util;, +import com.squareup.okhttp.mockwebserver.MockResponse;, +import com.squareup.okhttp.mockwebserver.MockWebServer;, +, +import org.junit.After;, +import org.junit.Before;, +import org.junit.Test;, +, +import java.io.ByteArrayInputStream;, +import java.io.ByteArrayOutputStream;, +import java.io.IOException;, +import java.io.InputStream;, +import java.net.CacheResponse;, +import java.net.HttpURLConnection;, +import java.net.SecureCacheResponse;, +import java.net.URI;, +import java.net.URL;, +import java.nio.charset.StandardCharsets;, +import java.security.Principal;, +import java.security.cert.Certificate;, +import java.security.cert.CertificateException;, +import java.security.cert.CertificateFactory;, +import java.security.cert.X509Certificate;, +import java.util.Arrays;]