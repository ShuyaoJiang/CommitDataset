[+++ b/CHANGELOG.md, +    `runningCalls()` and `queuedCalls()` methods. You can write code that, +    selects calls by tag, host, or whatever, and invokes `Call.cancel()` on the, +    ones that are no longer necessary., +++ b/CHANGELOG.md, +    `runningCalls()` and `queuedCalls()` methods. You can write code that, +    selects calls by tag, host, or whatever, and invokes `Call.cancel()` on the, +    ones that are no longer necessary., +++ b/okhttp-android-support/src/main/java/okhttp3/AndroidShimResponseCache.java, +    return (installedCache.getDirectory().equals(directory), +        && installedCache.getMaxSize() == maxSize, +    return delegate.getSize();, +    return delegate.getMaxSize();, +    return delegate.getNetworkCount();, +    return delegate.getHitCount();, +    return delegate.getRequestCount();, +++ b/CHANGELOG.md, +    `runningCalls()` and `queuedCalls()` methods. You can write code that, +    selects calls by tag, host, or whatever, and invokes `Call.cancel()` on the, +    ones that are no longer necessary., +++ b/okhttp-android-support/src/main/java/okhttp3/AndroidShimResponseCache.java, +    return (installedCache.getDirectory().equals(directory), +        && installedCache.getMaxSize() == maxSize, +    return delegate.getSize();, +    return delegate.getMaxSize();, +    return delegate.getNetworkCount();, +    return delegate.getHitCount();, +    return delegate.getRequestCount();, +++ b/okhttp-tests/src/test/java/okhttp3/CacheTest.java, +    assertEquals(1, cache.getWriteSuccessCount());, +    assertEquals(0, cache.getWriteAbortCount());, +    assertEquals(1, cache.getWriteSuccessCount());, +    assertEquals(0, cache.getWriteAbortCount());, +    assertEquals(2, cache.getRequestCount());, +    assertEquals(1, cache.getHitCount());, +    assertEquals(2, cache.getRequestCount());, +    assertEquals(1, cache.getNetworkCount());, +    assertEquals(1, cache.getHitCount());, +    assertEquals(4, cache.getRequestCount()); // 2 requests + 2 redirects, +    assertEquals(2, cache.getNetworkCount());, +    assertEquals(2, cache.getHitCount());, +    assertEquals(4, cache.getRequestCount()); // 2 direct + 2 redirect = 4, +    assertEquals(2, cache.getHitCount());, +    assertEquals(4, cache.getRequestCount()); // 2 direct + 2 redirect = 4, +    assertEquals(2, cache.getHitCount());, +    assertEquals(1, cache.getWriteAbortCount());, +    assertEquals(0, cache.getWriteSuccessCount());, +    assertEquals(1, cache.getWriteAbortCount());, +    assertEquals(1, cache.getWriteSuccessCount());, +    assertEquals(1, cache.getWriteAbortCount());, +    assertEquals(0, cache.getWriteSuccessCount());, +    assertEquals(1, cache.getWriteAbortCount());, +    assertEquals(1, cache.getWriteSuccessCount());, +    assertEquals(1, client.connectionPool().getIdleConnectionCount());, +    assertEquals(1, cache.getRequestCount());, +    assertEquals(0, cache.getNetworkCount());, +    assertEquals(0, cache.getHitCount());, +    assertEquals(2, cache.getRequestCount());, +    assertEquals(1, cache.getNetworkCount());, +    assertEquals(1, cache.getHitCount());, +    assertEquals(2, cache.getRequestCount());, +    assertEquals(1, cache.getNetworkCount());, +    assertEquals(0, cache.getHitCount());, +    assertEquals(2, cache.getRequestCount());, +    assertEquals(1, cache.getNetworkCount());, +    assertEquals(0, cache.getHitCount());, +    assertEquals(1, cache.getRequestCount());, +    assertEquals(1, cache.getNetworkCount());, +    assertEquals(0, cache.getHitCount());, +    assertEquals(3, cache.getRequestCount());, +    assertEquals(3, cache.getNetworkCount());, +    assertEquals(0, cache.getHitCount());, +    assertEquals(1, cache.getRequestCount());, +    assertEquals(1, cache.getNetworkCount());, +    assertEquals(0, cache.getHitCount());, +    assertEquals(3, cache.getRequestCount());, +    assertEquals(3, cache.getNetworkCount());, +    assertEquals(2, cache.getHitCount());, +    assertEquals(1, cache.getRequestCount());, +    assertEquals(1, cache.getNetworkCount());, +    assertEquals(0, cache.getHitCount());, +    assertEquals(3, cache.getRequestCount());, +    assertEquals(1, cache.getNetworkCount());, +    assertEquals(2, cache.getHitCount());, +    writeFile(cache.getDirectory(), urlKey + ".0", entryMetadata);, +    writeFile(cache.getDirectory(), urlKey + ".1", entryBody);, +    writeFile(cache.getDirectory(), "journal", journalBody);, +    cache = new Cache(cache.getDirectory(), Integer.MAX_VALUE, fileSystem);, +    writeFile(cache.getDirectory(), urlKey + ".0", entryMetadata);, +    writeFile(cache.getDirectory(), urlKey + ".1", entryBody);, +    writeFile(cache.getDirectory(), "journal", journalBody);, +    cache = new Cache(cache.getDirectory(), Integer.MAX_VALUE, fileSystem);, +    writeFile(cache.getDirectory(), urlKey + ".0", entryMetadata);, +    writeFile(cache.getDirectory(), urlKey + ".1", entryBody);, +    writeFile(cache.getDirectory(), "journal", journalBody);, +    cache = new Cache(cache.getDirectory(), Integer.MAX_VALUE, fileSystem);, +    writeFile(cache.getDirectory(), urlKey + ".0", entryMetadata);, +    writeFile(cache.getDirectory(), urlKey + ".1", entryBody);, +    writeFile(cache.getDirectory(), "journal", journalBody);, +    cache = new Cache(cache.getDirectory(), Integer.MAX_VALUE, fileSystem);]