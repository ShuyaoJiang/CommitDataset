[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    RealConnection c1 = newConnection(routeA1, 50L);, +    pool.put(c1);, +    RealConnection c1 = newConnection(routeA1, 50L);, +    pool.put(c1);, +    RealConnection c1 = newConnection(routeA1, 75L);, +    pool.put(c1);, +, +    RealConnection c2 = newConnection(routeB1, 50L);, +    pool.put(c2);, +    RealConnection c1 = newConnection(routeA1, 50L);, +    pool.put(c1);, +, +    RealConnection c2 = newConnection(routeB1, 75L);, +    pool.put(c2);, +    RealConnection c3 = newConnection(routeC1, 75L);, +    pool.put(c3);, +    RealConnection c1 = newConnection(routeA1, 0L);, +    pool.put(c1);, +  private RealConnection newConnection(Route route, long idleAtNanos) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    RealConnection c1 = newConnection(routeA1, 50L);, +    pool.put(c1);, +    RealConnection c1 = newConnection(routeA1, 50L);, +    pool.put(c1);, +    RealConnection c1 = newConnection(routeA1, 75L);, +    pool.put(c1);, +, +    RealConnection c2 = newConnection(routeB1, 50L);, +    pool.put(c2);, +    RealConnection c1 = newConnection(routeA1, 50L);, +    pool.put(c1);, +, +    RealConnection c2 = newConnection(routeB1, 75L);, +    pool.put(c2);, +    RealConnection c3 = newConnection(routeC1, 75L);, +    pool.put(c3);, +    RealConnection c1 = newConnection(routeA1, 0L);, +    pool.put(c1);, +  private RealConnection newConnection(Route route, long idleAtNanos) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/URLConnectionTest.java, +    connection.getInputStream().close();, +    connection.getInputStream().close();, +    HttpURLConnection c1 = client.open(server.getUrl("/"));, +    assertContent("ABCDE", c1, 5);, +    HttpURLConnection c2 = client.open(server.getUrl("/"));, +    assertContent("ABCDE", c2, 5);, +, +    c1.getInputStream().close();, +    c2.getInputStream().close();, +    in.close();, +    in.close();, +    conn.getErrorStream().close();, +    connection.getInputStream().close();, +    } finally {, +      connection.getInputStream().close();, +    } finally {, +      connection.getInputStream().close();, +    connection.getInputStream().close();, +    MockResponse pleaseAuthenticate = new MockResponse(), +        .setResponseCode(responseCode), +    connection.getErrorStream().close();, +    in.close();, +    connection.getInputStream().close();, +    connection.getInputStream().close();, +    connection.getInputStream().close();, +    connection.getInputStream().close();, +    connection.getInputStream().close();, +    connection.getInputStream().close();, +    connection.getInputStream().close();, +    connection.getInputStream().close();, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java, +    RealConnection c1 = newConnection(routeA1, 50L);, +    pool.put(c1);, +    RealConnection c1 = newConnection(routeA1, 50L);, +    pool.put(c1);, +    RealConnection c1 = newConnection(routeA1, 75L);, +    pool.put(c1);, +, +    RealConnection c2 = newConnection(routeB1, 50L);, +    pool.put(c2);, +    RealConnection c1 = newConnection(routeA1, 50L);, +    pool.put(c1);, +, +    RealConnection c2 = newConnection(routeB1, 75L);, +    pool.put(c2);, +    RealConnection c3 = newConnection(routeC1, 75L);, +    pool.put(c3);, +    RealConnection c1 = newConnection(routeA1, 0L);, +    pool.put(c1);, +  private RealConnection newConnection(Route route, long idleAtNanos) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/URLConnectionTest.java, +    connection.getInputStream().close();, +    connection.getInputStream().close();, +    HttpURLConnection c1 = client.open(server.getUrl("/"));, +    assertContent("ABCDE", c1, 5);, +    HttpURLConnection c2 = client.open(server.getUrl("/"));, +    assertContent("ABCDE", c2, 5);, +, +    c1.getInputStream().close();]