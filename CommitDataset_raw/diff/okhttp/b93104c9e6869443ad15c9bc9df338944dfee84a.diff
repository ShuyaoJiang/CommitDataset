[+++ b/okhttp-logging-interceptor/src/main/java/com/squareup/okhttp/logging/HttpLoggingInterceptor.java, +import com.squareup.okhttp.internal.http.HttpEngine;, +      if (logBody && HttpEngine.hasBody(response)) {, +++ b/okhttp-logging-interceptor/src/main/java/com/squareup/okhttp/logging/HttpLoggingInterceptor.java, +import com.squareup.okhttp.internal.http.HttpEngine;, +      if (logBody && HttpEngine.hasBody(response)) {, +++ b/okhttp-logging-interceptor/src/test/java/com/squareup/okhttp/logging/HttpLoggingInterceptorTest.java, +  private String host;, +, +  private final LogRecorder networkLogs = new LogRecorder();, +  private final HttpLoggingInterceptor networkInterceptor =, +      new HttpLoggingInterceptor(networkLogs);, +, +  private final LogRecorder applicationLogs = new LogRecorder();, +  private final HttpLoggingInterceptor applicationInterceptor =, +      new HttpLoggingInterceptor(applicationLogs);, +, +  private void setLevel(Level level) {, +    networkInterceptor.setLevel(level);, +    applicationInterceptor.setLevel(level);, +  }, +    client.networkInterceptors().add(networkInterceptor);, +    client.interceptors().add(applicationInterceptor);, +, +    host = server.getHostName() + ":" + server.getPort();, +      applicationInterceptor.setLevel(null);, +      assertSame(applicationInterceptor, applicationInterceptor.setLevel(level));, +, +    applicationLogs.assertNoMoreLogs();, +    networkLogs.assertNoMoreLogs();, +    setLevel(Level.BASIC);, +    applicationLogs, +        .assertLogEqual("--> GET / HTTP/1.1"), +        .assertLogMatch("<-- HTTP/1\\.1 200 OK \\(\\d+ms, 0-byte body\\)"), +        .assertNoMoreLogs();, +, +    networkLogs, +        .assertLogEqual("--> GET / HTTP/1.1"), +        .assertLogMatch("<-- HTTP/1\\.1 200 OK \\(\\d+ms, 0-byte body\\)"), +        .assertNoMoreLogs();, +    setLevel(Level.BASIC);, +    applicationLogs, +        .assertLogEqual("--> POST / HTTP/1.1 (3-byte body)"), +        .assertLogMatch("<-- HTTP/1\\.1 200 OK \\(\\d+ms, 0-byte body\\)"), +        .assertNoMoreLogs();, +, +    networkLogs, +        .assertLogEqual("--> POST / HTTP/1.1 (3-byte body)"), +        .assertLogMatch("<-- HTTP/1\\.1 200 OK \\(\\d+ms, 0-byte body\\)"), +        .assertNoMoreLogs();, +    setLevel(Level.BASIC);, +        .setHeader("Content-Type", PLAIN));, +    applicationLogs, +        .assertLogEqual("--> GET / HTTP/1.1"), +        .assertLogMatch("<-- HTTP/1\\.1 200 OK \\(\\d+ms, 6-byte body\\)"), +        .assertNoMoreLogs();, +, +    networkLogs, +        .assertLogEqual("--> GET / HTTP/1.1"), +        .assertLogMatch("<-- HTTP/1\\.1 200 OK \\(\\d+ms, 6-byte body\\)"), +        .assertNoMoreLogs();, +    setLevel(Level.HEADERS);, +    applicationLogs, +        .assertLogEqual("--> GET / HTTP/1.1"), +        .assertLogEqual("--> END GET"), +        .assertLogMatch("<-- HTTP/1\\.1 200 OK \\(\\d+ms\\)"), +        .assertLogEqual("Content-Length: 0"), +        .assertLogEqual("OkHttp-Selected-Protocol: http/1.1"), +        .assertLogMatch("OkHttp-Sent-Millis: \\d+"), +        .assertLogMatch("OkHttp-Received-Millis: \\d+"), +        .assertLogEqual("<-- END HTTP"), +        .assertNoMoreLogs();, +, +    networkLogs, +        .assertLogEqual("--> GET / HTTP/1.1"), +        .assertLogEqual("Host: " + host), +        .assertLogEqual("Connection: Keep-Alive"), +        .assertLogEqual("Accept-Encoding: gzip"), +        .assertLogMatch("User-Agent: okhttp/.+"), +        .assertLogEqual("--> END GET"), +        .assertLogMatch("<-- HTTP/1\\.1 200 OK \\(\\d+ms\\)"), +        .assertLogEqual("Content-Length: 0"), +        .assertLogEqual("OkHttp-Selected-Protocol: http/1.1"), +        .assertLogMatch("OkHttp-Sent-Millis: \\d+"), +        .assertLogMatch("OkHttp-Received-Millis: \\d+"), +        .assertLogEqual("<-- END HTTP"), +        .assertNoMoreLogs();, +    setLevel(Level.HEADERS);, +    applicationLogs, +        .assertLogEqual("--> POST / HTTP/1.1"), +        // TODO force content-type and content-length to show here, +        .assertLogEqual("--> END POST"), +        .assertLogMatch("<-- HTTP/1\\.1 200 OK \\(\\d+ms\\)"), +        .assertLogEqual("Content-Length: 0"), +        .assertLogEqual("OkHttp-Selected-Protocol: http/1.1"), +        .assertLogMatch("OkHttp-Sent-Millis: \\d+"), +        .assertLogMatch("OkHttp-Received-Millis: \\d+"), +        .assertLogEqual("<-- END HTTP"), +        .assertNoMoreLogs();, +]