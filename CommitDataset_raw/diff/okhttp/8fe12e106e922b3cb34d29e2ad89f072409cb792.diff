[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    @Override public void remove(Request request) throws IOException {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    @Override public void remove(Request request) throws IOException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +    if (HttpMethod.invalidatesCache(response.request().method())) {, +      try {, +        remove(response.request());, +      } catch (IOException ignored) {, +        // The cache cannot be written., +      }, +  @Override public void remove(Request request) throws IOException {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    @Override public void remove(Request request) throws IOException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +    if (HttpMethod.invalidatesCache(response.request().method())) {, +      try {, +        remove(response.request());, +      } catch (IOException ignored) {, +        // The cache cannot be written., +      }, +  @Override public void remove(Request request) throws IOException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +   * @throws IOException if the request could not be executed due to a, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    @Override public void remove(Request request) throws IOException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +    if (HttpMethod.invalidatesCache(response.request().method())) {, +      try {, +        remove(response.request());, +      } catch (IOException ignored) {, +        // The cache cannot be written., +      }, +  @Override public void remove(Request request) throws IOException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +   * @throws IOException if the request could not be executed due to a, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkResponseCache.java, +   * Remove any cache entries for the supplied {@code request}. This is invoked, +   * when the client invalidates the cache, such as when making POST requests., +  void remove(Request request) throws IOException;, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    @Override public void remove(Request request) throws IOException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +    if (HttpMethod.invalidatesCache(response.request().method())) {, +      try {, +        remove(response.request());, +      } catch (IOException ignored) {, +        // The cache cannot be written., +      }, +  @Override public void remove(Request request) throws IOException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +   * @throws IOException if the request could not be executed due to a, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkResponseCache.java, +   * Remove any cache entries for the supplied {@code request}. This is invoked, +   * when the client invalidates the cache, such as when making POST requests., +  void remove(Request request) throws IOException;, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/CacheStrategy.java, +   * Returns true if {@code response} can be stored to later serve another, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    @Override public void remove(Request request) throws IOException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +    if (HttpMethod.invalidatesCache(response.request().method())) {, +      try {, +        remove(response.request());, +      } catch (IOException ignored) {, +        // The cache cannot be written., +      }, +  @Override public void remove(Request request) throws IOException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +   * @throws IOException if the request could not be executed due to a, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkResponseCache.java, +   * Remove any cache entries for the supplied {@code request}. This is invoked, +   * when the client invalidates the cache, such as when making POST requests., +  void remove(Request request) throws IOException;, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/CacheStrategy.java, +   * Returns true if {@code response} can be stored to later serve another, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java, +      if (HttpMethod.invalidatesCache(request.method())) {, +        try {, +          responseCache.remove(request);, +        } catch (IOException ignored) {, +          // The cache cannot be written., +        }, +      }, +      if (!OkHeaders.isEndToEnd(fieldName) || network.header(fieldName) == null) {, +      if (OkHeaders.isEndToEnd(fieldName)) {, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpResponseCacheTest.java, +    @Override public void remove(Request request) throws IOException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/HttpResponseCache.java, +    if (HttpMethod.invalidatesCache(response.request().method())) {, +      try {, +        remove(response.request());, +      } catch (IOException ignored) {, +        // The cache cannot be written., +      }, +  @Override public void remove(Request request) throws IOException {, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java, +   * @throws IOException if the request could not be executed due to a, +++ b/okhttp/src/main/java/com/squareup/okhttp/OkResponseCache.java, +   * Remove any cache entries for the supplied {@code request}. This is invoked]