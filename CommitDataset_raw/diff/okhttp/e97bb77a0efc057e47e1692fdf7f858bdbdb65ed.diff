[+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/DiskLruCacheTest.java, +  @Test public void isClosed_uninitializedCache() throws Exception {, +    // Create an uninitialized cache., +    cache = new DiskLruCache(cacheDir, appVersion, 2, Integer.MAX_VALUE, executor);, +    toClose.add(cache);, +, +    assertFalse(cache.isClosed());, +    cache.close();, +    assertTrue(cache.isClosed());, +  }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/DiskLruCacheTest.java, +  @Test public void isClosed_uninitializedCache() throws Exception {, +    // Create an uninitialized cache., +    cache = new DiskLruCache(cacheDir, appVersion, 2, Integer.MAX_VALUE, executor);, +    toClose.add(cache);, +, +    assertFalse(cache.isClosed());, +    cache.close();, +    assertTrue(cache.isClosed());, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/Request.java, +    public Builder delete(RequestBody body) {, +      return method("DELETE", body);, +    }, +, +++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/DiskLruCacheTest.java, +  @Test public void isClosed_uninitializedCache() throws Exception {, +    // Create an uninitialized cache., +    cache = new DiskLruCache(cacheDir, appVersion, 2, Integer.MAX_VALUE, executor);, +    toClose.add(cache);, +, +    assertFalse(cache.isClosed());, +    cache.close();, +    assertTrue(cache.isClosed());, +  }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/Request.java, +    public Builder delete(RequestBody body) {, +      return method("DELETE", body);, +    }, +, +++ b/okhttp/src/main/java/com/squareup/okhttp/internal/DiskLruCache.java, +  private boolean closed;, +        if (!initialized | closed) {, +          return; // Nothing to do, +        closed = false;, +    if (initialized) {, +  }, +    return closed;, +    if (!initialized || closed) {, +      closed = true;, +      return;, +    closed = true;, +          if (closed) return false;, +      // Eat all writes silently. Nom nom.]