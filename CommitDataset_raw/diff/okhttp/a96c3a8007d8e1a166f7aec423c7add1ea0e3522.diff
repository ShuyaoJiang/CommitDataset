[+++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +import org.junit.rules.TestRule;, +import org.junit.runner.Description;, +import org.junit.runners.model.Statement;, +public final class MockWebServer implements TestRule, Closeable {, +  private synchronized void maybeStart() {, +  @Override public Statement apply(final Statement base, Description description) {, +    return new Statement() {, +      @Override public void evaluate() throws Throwable {, +        maybeStart();, +        try {, +          base.evaluate();, +        } finally {, +          try {, +            shutdown();, +          } catch (IOException e) {, +            logger.log(Level.WARNING, "MockWebServer shutdown failed", e);, +          }, +        }, +      }, +    };, +  }, +, +    maybeStart();, +    maybeStart();, +    maybeStart();, +    try {, +    } catch (IOException e) {, +      webSocket.failWebSocket(e, null);, +    } finally {, +  }, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +import org.junit.rules.TestRule;, +import org.junit.runner.Description;, +import org.junit.runners.model.Statement;, +public final class MockWebServer implements TestRule, Closeable {, +  private synchronized void maybeStart() {, +  @Override public Statement apply(final Statement base, Description description) {, +    return new Statement() {, +      @Override public void evaluate() throws Throwable {, +        maybeStart();, +        try {, +          base.evaluate();, +        } finally {, +          try {, +            shutdown();, +          } catch (IOException e) {, +            logger.log(Level.WARNING, "MockWebServer shutdown failed", e);, +          }, +        }, +      }, +    };, +  }, +, +    maybeStart();, +    maybeStart();, +    maybeStart();, +    try {, +    } catch (IOException e) {, +      webSocket.failWebSocket(e, null);, +    } finally {, +  }, +++ b/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java, +++ b/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java, +import org.junit.rules.TestRule;, +import org.junit.runner.Description;, +import org.junit.runners.model.Statement;, +public final class MockWebServer implements TestRule, Closeable {, +  private synchronized void maybeStart() {, +  @Override public Statement apply(final Statement base, Description description) {, +    return new Statement() {, +      @Override public void evaluate() throws Throwable {, +        maybeStart();, +        try {, +          base.evaluate();, +        } finally {, +          try {, +            shutdown();, +          } catch (IOException e) {, +            logger.log(Level.WARNING, "MockWebServer shutdown failed", e);, +          }, +        }, +      }, +    };, +  }, +, +    maybeStart();, +    maybeStart();, +    maybeStart();, +    try {, +    } catch (IOException e) {, +      webSocket.failWebSocket(e, null);, +    } finally {, +  }, +++ b/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java, +++ b/okhttp-tests/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java, +  @After public void tearDown() throws Exception {, +    server.source.close();, +    client.source.close();, +    server.webSocket.tearDown();]