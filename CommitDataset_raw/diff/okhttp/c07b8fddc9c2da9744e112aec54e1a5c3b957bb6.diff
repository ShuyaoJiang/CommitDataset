[+++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java, +    // Wait until the server has completely filled the stream and connection flow-control windows., +    int expectedFrameCount = Http2Connection.OKHTTP_CLIENT_WINDOW_SIZE / 16384;, +    int dataFrameCount = 0;, +    while (dataFrameCount < expectedFrameCount) {, +      String log = http2Handler.take();, +      if (log.equals("FINE: << 0x00000003 16384 DATA          ")) {, +        dataFrameCount++;, +      }, +    }, +    // Wait until the server has completely filled the stream and connection flow-control windows., +    int expectedFrameCount = Http2Connection.OKHTTP_CLIENT_WINDOW_SIZE / 16384;, +    int dataFrameCount = 0;, +    while (dataFrameCount < expectedFrameCount) {, +      String log = http2Handler.take();, +      if (log.equals("FINE: << 0x00000003 16384 DATA          ")) {, +        dataFrameCount++;, +      }, +    }, +++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java, +    // Wait until the server has completely filled the stream and connection flow-control windows., +    int expectedFrameCount = Http2Connection.OKHTTP_CLIENT_WINDOW_SIZE / 16384;, +    int dataFrameCount = 0;, +    while (dataFrameCount < expectedFrameCount) {, +      String log = http2Handler.take();, +      if (log.equals("FINE: << 0x00000003 16384 DATA          ")) {, +        dataFrameCount++;, +      }, +    }, +    // Wait until the server has completely filled the stream and connection flow-control windows., +    int expectedFrameCount = Http2Connection.OKHTTP_CLIENT_WINDOW_SIZE / 16384;, +    int dataFrameCount = 0;, +    while (dataFrameCount < expectedFrameCount) {, +      String log = http2Handler.take();, +      if (log.equals("FINE: << 0x00000003 16384 DATA          ")) {, +        dataFrameCount++;, +      }, +    }, +++ b/okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.java, +    if (outFinished) {, +++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java, +    // Wait until the server has completely filled the stream and connection flow-control windows., +    int expectedFrameCount = Http2Connection.OKHTTP_CLIENT_WINDOW_SIZE / 16384;, +    int dataFrameCount = 0;, +    while (dataFrameCount < expectedFrameCount) {, +      String log = http2Handler.take();, +      if (log.equals("FINE: << 0x00000003 16384 DATA          ")) {, +        dataFrameCount++;, +      }, +    }, +    // Wait until the server has completely filled the stream and connection flow-control windows., +    int expectedFrameCount = Http2Connection.OKHTTP_CLIENT_WINDOW_SIZE / 16384;, +    int dataFrameCount = 0;, +    while (dataFrameCount < expectedFrameCount) {, +      String log = http2Handler.take();, +      if (log.equals("FINE: << 0x00000003 16384 DATA          ")) {, +        dataFrameCount++;, +      }, +    }, +++ b/okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.java, +    if (outFinished) {, +++ b/samples/guide/pom.xml, +      <groupId>com.squareup.okhttp3</groupId>, +      <artifactId>mockwebserver</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +      <groupId>com.squareup.okhttp3</groupId>, +      <artifactId>okhttp-tls</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +++ b/okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java, +    // Wait until the server has completely filled the stream and connection flow-control windows., +    int expectedFrameCount = Http2Connection.OKHTTP_CLIENT_WINDOW_SIZE / 16384;, +    int dataFrameCount = 0;, +    while (dataFrameCount < expectedFrameCount) {, +      String log = http2Handler.take();, +      if (log.equals("FINE: << 0x00000003 16384 DATA          ")) {, +        dataFrameCount++;, +      }, +    }, +    // Wait until the server has completely filled the stream and connection flow-control windows., +    int expectedFrameCount = Http2Connection.OKHTTP_CLIENT_WINDOW_SIZE / 16384;, +    int dataFrameCount = 0;, +    while (dataFrameCount < expectedFrameCount) {, +      String log = http2Handler.take();, +      if (log.equals("FINE: << 0x00000003 16384 DATA          ")) {, +        dataFrameCount++;, +      }, +    }, +++ b/okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.java, +    if (outFinished) {, +++ b/samples/guide/pom.xml, +      <groupId>com.squareup.okhttp3</groupId>, +      <artifactId>mockwebserver</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +      <groupId>com.squareup.okhttp3</groupId>]