[+++ b/README.md, +An HTTP & SPDY client for Android and Java applications., +, +For more information please see [the website][1]., +, +Download [the latest JAR][2] or grab via Maven:, +OkHttp's test suite creates an in-process HTTPS server. Prior to Android 2.3, SSL server sockets, +were broken, and so HTTPS tests will time out when run on such devices., +, + [1]: http://square.github.io/okhttp, + [2]: http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.squareup.okhttp&a=okhttp&v=LATEST, +++ b/README.md, +An HTTP & SPDY client for Android and Java applications., +, +For more information please see [the website][1]., +, +Download [the latest JAR][2] or grab via Maven:, +OkHttp's test suite creates an in-process HTTPS server. Prior to Android 2.3, SSL server sockets, +were broken, and so HTTPS tests will time out when run on such devices., +, + [1]: http://square.github.io/okhttp, + [2]: http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.squareup.okhttp&a=okhttp&v=LATEST, +++ b/okhttp-apache/pom.xml, +, +    <dependency>, +      <groupId>junit</groupId>, +      <artifactId>junit</artifactId>, +      <scope>test</scope>, +    </dependency>, +    <dependency>, +      <groupId>com.google.mockwebserver</groupId>, +      <artifactId>mockwebserver</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/README.md, +An HTTP & SPDY client for Android and Java applications., +, +For more information please see [the website][1]., +, +Download [the latest JAR][2] or grab via Maven:, +OkHttp's test suite creates an in-process HTTPS server. Prior to Android 2.3, SSL server sockets, +were broken, and so HTTPS tests will time out when run on such devices., +, + [1]: http://square.github.io/okhttp, + [2]: http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.squareup.okhttp&a=okhttp&v=LATEST, +++ b/okhttp-apache/pom.xml, +, +    <dependency>, +      <groupId>junit</groupId>, +      <artifactId>junit</artifactId>, +      <scope>test</scope>, +    </dependency>, +    <dependency>, +      <groupId>com.google.mockwebserver</groupId>, +      <artifactId>mockwebserver</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/okhttp-apache/src/test/java/com/squareup/okhttp/apache/OkApacheClientTest.java, +package com.squareup.okhttp.apache;, +, +import com.google.mockwebserver.MockResponse;, +import com.google.mockwebserver.MockWebServer;, +import java.io.IOException;, +import org.apache.http.Header;, +import org.apache.http.HttpResponse;, +import org.apache.http.client.methods.HttpGet;, +import org.apache.http.util.EntityUtils;, +import org.junit.After;, +import org.junit.Test;, +, +import static org.junit.Assert.assertEquals;, +, +public class OkApacheClientTest {, +  private MockWebServer server = new MockWebServer();, +  private OkApacheClient client = new OkApacheClient();, +, +  @After public void tearDown() throws IOException {, +    server.shutdown();, +  }, +, +  @Test public void success() throws Exception {, +    server.enqueue(new MockResponse().setBody("Hello, World!"));, +    server.play();, +, +    HttpGet request = new HttpGet(server.getUrl("/").toURI());, +    HttpResponse response = client.execute(request);, +    String actual = EntityUtils.toString(response.getEntity());, +    assertEquals("Hello, World!", actual);, +  }, +, +  @Test public void redirect() throws Exception {, +    server.enqueue(new MockResponse().setResponseCode(302).addHeader("Location", "/foo"));, +    server.enqueue(new MockResponse().setBody("Hello, Redirect!"));, +    server.play();, +, +    HttpGet request = new HttpGet(server.getUrl("/").toURI());, +    HttpResponse response = client.execute(request);, +    String actual = EntityUtils.toString(response.getEntity());, +    assertEquals("Hello, Redirect!", actual);, +  }]