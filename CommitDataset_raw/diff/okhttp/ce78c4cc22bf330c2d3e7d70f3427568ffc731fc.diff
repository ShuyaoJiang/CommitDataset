[+++ b/benchmarks/src/main/java/okhttp3/benchmarks/ApacheHttpClient.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +          new Scheme("https", 443, new SSLSocketFactory(handshakeCertificates.sslContext())));, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/ApacheHttpClient.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +          new Scheme("https", 443, new SSLSocketFactory(handshakeCertificates.sslContext())));, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/Benchmark.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +      server.useHttps(handshakeCertificates.sslSocketFactory(), false);, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/ApacheHttpClient.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +          new Scheme("https", 443, new SSLSocketFactory(handshakeCertificates.sslContext())));, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/Benchmark.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +      server.useHttps(handshakeCertificates.sslSocketFactory(), false);, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/NettyHttpClient.java, +import okhttp3.tls.HandshakeCertificates;, +      @Override public void initChannel(SocketChannel channel) {, +          HandshakeCertificates handshakeCertificates = localhost();, +          SSLEngine engine = handshakeCertificates.sslContext().createSSLEngine();, +        ChannelHandlerContext context, HttpObject message) {, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/ApacheHttpClient.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +          new Scheme("https", 443, new SSLSocketFactory(handshakeCertificates.sslContext())));, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/Benchmark.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +      server.useHttps(handshakeCertificates.sslSocketFactory(), false);, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/NettyHttpClient.java, +import okhttp3.tls.HandshakeCertificates;, +      @Override public void initChannel(SocketChannel channel) {, +          HandshakeCertificates handshakeCertificates = localhost();, +          SSLEngine engine = handshakeCertificates.sslContext().createSSLEngine();, +        ChannelHandlerContext context, HttpObject message) {, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttp.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +      SSLSocketFactory socketFactory = handshakeCertificates.sslSocketFactory();, +          .sslSocketFactory(socketFactory, handshakeCertificates.trustManager()), +++ b/benchmarks/src/main/java/okhttp3/benchmarks/ApacheHttpClient.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +          new Scheme("https", 443, new SSLSocketFactory(handshakeCertificates.sslContext())));, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/Benchmark.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +      server.useHttps(handshakeCertificates.sslSocketFactory(), false);, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/NettyHttpClient.java, +import okhttp3.tls.HandshakeCertificates;, +      @Override public void initChannel(SocketChannel channel) {, +          HandshakeCertificates handshakeCertificates = localhost();, +          SSLEngine engine = handshakeCertificates.sslContext().createSSLEngine();, +        ChannelHandlerContext context, HttpObject message) {, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttp.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +      SSLSocketFactory socketFactory = handshakeCertificates.sslSocketFactory();, +          .sslSocketFactory(socketFactory, handshakeCertificates.trustManager()), +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttpAsync.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +      SSLSocketFactory socketFactory = handshakeCertificates.sslSocketFactory();, +          .sslSocketFactory(socketFactory, handshakeCertificates.trustManager()), +++ b/benchmarks/src/main/java/okhttp3/benchmarks/ApacheHttpClient.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +          new Scheme("https", 443, new SSLSocketFactory(handshakeCertificates.sslContext())));, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/Benchmark.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +      server.useHttps(handshakeCertificates.sslSocketFactory(), false);, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/NettyHttpClient.java, +import okhttp3.tls.HandshakeCertificates;, +      @Override public void initChannel(SocketChannel channel) {, +          HandshakeCertificates handshakeCertificates = localhost();, +          SSLEngine engine = handshakeCertificates.sslContext().createSSLEngine();, +        ChannelHandlerContext context, HttpObject message) {, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttp.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +      SSLSocketFactory socketFactory = handshakeCertificates.sslSocketFactory();, +          .sslSocketFactory(socketFactory, handshakeCertificates.trustManager()), +++ b/benchmarks/src/main/java/okhttp3/benchmarks/OkHttpAsync.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +      SSLSocketFactory socketFactory = handshakeCertificates.sslSocketFactory();, +          .sslSocketFactory(socketFactory, handshakeCertificates.trustManager()), +++ b/benchmarks/src/main/java/okhttp3/benchmarks/UrlConnection.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();, +      SSLSocketFactory socketFactory = handshakeCertificates.sslSocketFactory();, +++ b/benchmarks/src/main/java/okhttp3/benchmarks/ApacheHttpClient.java, +import okhttp3.tls.HandshakeCertificates;, +      HandshakeCertificates handshakeCertificates = localhost();]