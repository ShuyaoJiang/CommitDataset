[+++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionContext.java, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionContext.java, +++ b/plugin/src/test/java/org/elasticsearch/xpack/watcher/execution/ManualExecutionTests.java, +import java.util.Locale;, +        } else {, +            String ackState = executeWatchResponse.getRecordSource().getValue("_status.actions.log.ack.state");, +            if (ignoreCondition || conditionAlwaysTrue) {, +                assertThat(ackState, is(ActionStatus.AckStatus.State.ACKABLE.toString().toLowerCase(Locale.ROOT)));, +            } else {, +                assertThat(ackState, is(ActionStatus.AckStatus.State.AWAITS_SUCCESSFUL_EXECUTION.toString().toLowerCase(Locale.ROOT)));, +            }, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionContext.java, +++ b/plugin/src/test/java/org/elasticsearch/xpack/watcher/execution/ManualExecutionTests.java, +import java.util.Locale;, +        } else {, +            String ackState = executeWatchResponse.getRecordSource().getValue("_status.actions.log.ack.state");, +            if (ignoreCondition || conditionAlwaysTrue) {, +                assertThat(ackState, is(ActionStatus.AckStatus.State.ACKABLE.toString().toLowerCase(Locale.ROOT)));, +            } else {, +                assertThat(ackState, is(ActionStatus.AckStatus.State.AWAITS_SUCCESSFUL_EXECUTION.toString().toLowerCase(Locale.ROOT)));, +            }, +++ b/plugin/src/test/java/org/elasticsearch/xpack/watcher/transport/action/execute/ExecuteWatchTests.java, +        assertValue(record, "_status.actions.log.ack.state", is("ackable"));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionContext.java, +++ b/plugin/src/test/java/org/elasticsearch/xpack/watcher/execution/ManualExecutionTests.java, +import java.util.Locale;, +        } else {, +            String ackState = executeWatchResponse.getRecordSource().getValue("_status.actions.log.ack.state");, +            if (ignoreCondition || conditionAlwaysTrue) {, +                assertThat(ackState, is(ActionStatus.AckStatus.State.ACKABLE.toString().toLowerCase(Locale.ROOT)));, +            } else {, +                assertThat(ackState, is(ActionStatus.AckStatus.State.AWAITS_SUCCESSFUL_EXECUTION.toString().toLowerCase(Locale.ROOT)));, +            }, +++ b/plugin/src/test/java/org/elasticsearch/xpack/watcher/transport/action/execute/ExecuteWatchTests.java, +        assertValue(record, "_status.actions.log.ack.state", is("ackable"));, +++ b/plugin/src/test/resources/rest-api-spec/test/watcher/execute_watch/10_basic.yaml, +                  "text" : "execute_watch/10.yaml payload", +  - match: { watch_record._status.actions.log.ack.state: "ackable" }, +, +---, +"Test execute watch API with user supplied watch", +, +  - do:, +      xpack.watcher.execute_watch:, +        id: "test_watch", +        body: >, +          {, +            "watch" : {, +              "trigger": {, +                "schedule" : { "cron" : "0 0 0 1 * ? 2099" }, +              },, +              "input": {, +                "simple": {, +                  "foo": "bar", +                }, +              },, +              "condition": {, +                "always": {}, +              },, +              "actions": {, +                "log" : {, +                  "logging" : {, +                    "text" : "execute_watch/10.yaml payload", +                  }, +                }, +              }, +            }, +          }, +, +  - match: { watch_record.watch_id: "test_watch" }, +  - match: { watch_record.trigger_event.type: "manual" }, +  - match: { watch_record.state: "executed" }, +  - match: { watch_record._status.state.active: true }, +  - match: { watch_record._status.actions.log.ack.state: "ackable" }]