[+++ b/core/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java, +                    logger.debug("{}: Failed to execute [{}] while moving to second phase", e, shardIt.shardId(), request);, +                    logger.debug("{}: Failed to execute [{}]", t, shard != null ? shard.shortSummary() : shardIt.shardId(), request);, +                logger.trace("{}: Failed to execute [{}] lastShard [{}]", t, shard != null ? shard.shortSummary() : shardIt.shardId(),, +                    request, lastShard);, +                        logger.debug("{}: Failed to execute [{}] lastShard [{}]", t,, +                            shard != null ? shard.shortSummary() : shardIt.shardId(), request, lastShard);, +++ b/core/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java, +                    logger.debug("{}: Failed to execute [{}] while moving to second phase", e, shardIt.shardId(), request);, +                    logger.debug("{}: Failed to execute [{}]", t, shard != null ? shard.shortSummary() : shardIt.shardId(), request);, +                logger.trace("{}: Failed to execute [{}] lastShard [{}]", t, shard != null ? shard.shortSummary() : shardIt.shardId(),, +                    request, lastShard);, +                        logger.debug("{}: Failed to execute [{}] lastShard [{}]", t,, +                            shard != null ? shard.shortSummary() : shardIt.shardId(), request, lastShard);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryAndFetchAsyncAction.java, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +++ b/core/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java, +                    logger.debug("{}: Failed to execute [{}] while moving to second phase", e, shardIt.shardId(), request);, +                    logger.debug("{}: Failed to execute [{}]", t, shard != null ? shard.shortSummary() : shardIt.shardId(), request);, +                logger.trace("{}: Failed to execute [{}] lastShard [{}]", t, shard != null ? shard.shortSummary() : shardIt.shardId(),, +                    request, lastShard);, +                        logger.debug("{}: Failed to execute [{}] lastShard [{}]", t,, +                            shard != null ? shard.shortSummary() : shardIt.shardId(), request, lastShard);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryAndFetchAsyncAction.java, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryThenFetchAsyncAction.java, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +++ b/core/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java, +                    logger.debug("{}: Failed to execute [{}] while moving to second phase", e, shardIt.shardId(), request);, +                    logger.debug("{}: Failed to execute [{}]", t, shard != null ? shard.shortSummary() : shardIt.shardId(), request);, +                logger.trace("{}: Failed to execute [{}] lastShard [{}]", t, shard != null ? shard.shortSummary() : shardIt.shardId(),, +                    request, lastShard);, +                        logger.debug("{}: Failed to execute [{}] lastShard [{}]", t,, +                            shard != null ? shard.shortSummary() : shardIt.shardId(), request, lastShard);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryAndFetchAsyncAction.java, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryThenFetchAsyncAction.java, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +++ b/core/src/main/java/org/elasticsearch/cluster/NodeConnectionsService.java, +                    logger.warn("failed to disconnect to node [{}]", e, node);, +++ b/core/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java, +                    logger.debug("{}: Failed to execute [{}] while moving to second phase", e, shardIt.shardId(), request);, +                    logger.debug("{}: Failed to execute [{}]", t, shard != null ? shard.shortSummary() : shardIt.shardId(), request);, +                logger.trace("{}: Failed to execute [{}] lastShard [{}]", t, shard != null ? shard.shortSummary() : shardIt.shardId(),, +                    request, lastShard);, +                        logger.debug("{}: Failed to execute [{}] lastShard [{}]", t,, +                            shard != null ? shard.shortSummary() : shardIt.shardId(), request, lastShard);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryAndFetchAsyncAction.java, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryThenFetchAsyncAction.java, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +++ b/core/src/main/java/org/elasticsearch/cluster/NodeConnectionsService.java, +                    logger.warn("failed to disconnect to node [{}]", e, node);, +++ b/core/src/main/java/org/elasticsearch/common/logging/ESLogger.java, +import org.elasticsearch.common.SuppressLoggerChecks;, +@SuppressLoggerChecks(reason = "safely delegates to itself"), +++ b/core/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java, +                    logger.debug("{}: Failed to execute [{}] while moving to second phase", e, shardIt.shardId(), request);, +                    logger.debug("{}: Failed to execute [{}]", t, shard != null ? shard.shortSummary() : shardIt.shardId(), request);, +                logger.trace("{}: Failed to execute [{}] lastShard [{}]", t, shard != null ? shard.shortSummary() : shardIt.shardId(),, +                    request, lastShard);, +                        logger.debug("{}: Failed to execute [{}] lastShard [{}]", t,, +                            shard != null ? shard.shortSummary() : shardIt.shardId(), request, lastShard);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryAndFetchAsyncAction.java, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryThenFetchAsyncAction.java, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +++ b/core/src/main/java/org/elasticsearch/cluster/NodeConnectionsService.java, +                    logger.warn("failed to disconnect to node [{}]", e, node);, +++ b/core/src/main/java/org/elasticsearch/common/logging/ESLogger.java, +import org.elasticsearch.common.SuppressLoggerChecks;, +@SuppressLoggerChecks(reason = "safely delegates to itself"), +++ b/core/src/main/java/org/elasticsearch/discovery/zen/elect/ElectMasterService.java, +            logger.warn("value for setting \"{}\" is too low. This can result in data loss! Please set it to at least a quorum of master-" +, +                    "eligible nodes (current value: [{}], total number of master-eligible nodes used for publishing in this round: [{}])",, +                ElectMasterService.DISCOVERY_ZEN_MINIMUM_MASTER_NODES_SETTING.getKey(), minimumMasterNodes(),, +                newState.getNodes().getMasterNodes().size());, +++ b/core/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java, +                    logger.debug("{}: Failed to execute [{}] while moving to second phase", e, shardIt.shardId(), request);, +                    logger.debug("{}: Failed to execute [{}]", t, shard != null ? shard.shortSummary() : shardIt.shardId(), request);, +                logger.trace("{}: Failed to execute [{}] lastShard [{}]", t, shard != null ? shard.shortSummary() : shardIt.shardId(),, +                    request, lastShard);, +                        logger.debug("{}: Failed to execute [{}] lastShard [{}]", t,, +                            shard != null ? shard.shortSummary() : shardIt.shardId(), request, lastShard);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryAndFetchAsyncAction.java, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryThenFetchAsyncAction.java, +                    logger.debug("Node [{}] not available for scroll request [{}]", target.getNode(), scrollId.getSource());, +++ b/core/src/main/java/org/elasticsearch/cluster/NodeConnectionsService.java, +                    logger.warn("failed to disconnect to node [{}]", e, node);, +++ b/core/src/main/java/org/elasticsearch/common/logging/ESLogger.java, +import org.elasticsearch.common.SuppressLoggerChecks;, +@SuppressLoggerChecks(reason = "safely delegates to itself"), +++ b/core/src/main/java/org/elasticsearch/discovery/zen/elect/ElectMasterService.java]