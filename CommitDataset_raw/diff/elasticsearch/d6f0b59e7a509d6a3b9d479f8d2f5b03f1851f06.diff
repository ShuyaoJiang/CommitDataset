[+++ b/plugin/build.gradle, +  executable = new File(project.runtimeJavaHome, 'bin/keytool'), +++ b/plugin/build.gradle, +  executable = new File(project.runtimeJavaHome, 'bin/keytool'), +++ b/plugin/bwc-snapshot-dummy-projects/build.gradle, +      if (project.rootProject.ext.runtimeJavaVersion == JavaVersion.VERSION_1_8 && ["5.6", "6.0", "6.1"].contains(bwcBranch)) {, +        /*, +         * If runtime Java home is set to JDK 8 and we are building branches that are officially built with JDK 8, push this to JAVA_HOME for, +         * these builds., +         */, +        environment('JAVA_HOME', System.getenv('RUNTIME_JAVA_HOME')), +      }, +        executable new File(xpackCheckoutDir, 'gradlew').toString(), +      args ":x-pack-elasticsearch:plugin:assemble", "-Dbuild.snapshot=${System.getProperty('build.snapshot') ?: 'true'}", +        args "--${logLevel.name().toLowerCase(Locale.ENGLISH)}", +        args "--stacktrace", +        args "--full-stacktrace", +++ b/plugin/build.gradle, +  executable = new File(project.runtimeJavaHome, 'bin/keytool'), +++ b/plugin/bwc-snapshot-dummy-projects/build.gradle, +      if (project.rootProject.ext.runtimeJavaVersion == JavaVersion.VERSION_1_8 && ["5.6", "6.0", "6.1"].contains(bwcBranch)) {, +        /*, +         * If runtime Java home is set to JDK 8 and we are building branches that are officially built with JDK 8, push this to JAVA_HOME for, +         * these builds., +         */, +        environment('JAVA_HOME', System.getenv('RUNTIME_JAVA_HOME')), +      }, +        executable new File(xpackCheckoutDir, 'gradlew').toString(), +      args ":x-pack-elasticsearch:plugin:assemble", "-Dbuild.snapshot=${System.getProperty('build.snapshot') ?: 'true'}", +        args "--${logLevel.name().toLowerCase(Locale.ENGLISH)}", +        args "--stacktrace", +        args "--full-stacktrace", +++ b/qa/smoke-test-plugins-ssl/build.gradle, +  executable = new File(project.runtimeJavaHome, 'bin/keytool'), +  executable = new File(project.runtimeJavaHome, 'bin/keytool'), +  executable = new File(project.runtimeJavaHome, 'bin/keytool'), +  executable = new File(project.runtimeJavaHome, 'bin/keytool'), +  executable = new File(project.runtimeJavaHome, 'bin/keytool'), +  executable = new File(project.runtimeJavaHome, 'bin/keytool')]