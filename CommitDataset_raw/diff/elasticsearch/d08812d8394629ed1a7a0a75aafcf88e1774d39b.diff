[+++ b/core/build.gradle, +  compile 'io.netty:netty:3.10.6.Final', +++ b/core/build.gradle, +  compile 'io.netty:netty:3.10.6.Final', +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/build.gradle, +  compile 'io.netty:netty:3.10.6.Final', +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/test/java/org/elasticsearch/common/bytes/AbstractBytesReferenceTestCase.java, +, +, +        if (sliceLength == 0 && sliceOffset != sliceRef.offset) {, +            // some impls optimize this to an empty instance then the offset will be 0, +            assertEquals(0, sliceRef.offset);, +        } else {, +        }, +++ b/core/build.gradle, +  compile 'io.netty:netty:3.10.6.Final', +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/test/java/org/elasticsearch/common/bytes/AbstractBytesReferenceTestCase.java, +, +, +        if (sliceLength == 0 && sliceOffset != sliceRef.offset) {, +            // some impls optimize this to an empty instance then the offset will be 0, +            assertEquals(0, sliceRef.offset);, +        } else {, +        }, +++ b/core/src/test/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPingIT.java, +import org.elasticsearch.common.util.concurrent.ConcurrentCollections;, +        ConcurrentMap<TransportAddress, AtomicInteger> counters = ConcurrentCollections.newConcurrentMap();, +++ b/core/build.gradle, +  compile 'io.netty:netty:3.10.6.Final', +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/test/java/org/elasticsearch/common/bytes/AbstractBytesReferenceTestCase.java, +, +, +        if (sliceLength == 0 && sliceOffset != sliceRef.offset) {, +            // some impls optimize this to an empty instance then the offset will be 0, +            assertEquals(0, sliceRef.offset);, +        } else {, +        }, +++ b/core/src/test/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPingIT.java, +import org.elasticsearch.common.util.concurrent.ConcurrentCollections;, +        ConcurrentMap<TransportAddress, AtomicInteger> counters = ConcurrentCollections.newConcurrentMap();, +++ /dev/null, +++ b/core/build.gradle, +  compile 'io.netty:netty:3.10.6.Final', +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/test/java/org/elasticsearch/common/bytes/AbstractBytesReferenceTestCase.java, +, +, +        if (sliceLength == 0 && sliceOffset != sliceRef.offset) {, +            // some impls optimize this to an empty instance then the offset will be 0, +            assertEquals(0, sliceRef.offset);, +        } else {, +        }, +++ b/core/src/test/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPingIT.java, +import org.elasticsearch.common.util.concurrent.ConcurrentCollections;, +        ConcurrentMap<TransportAddress, AtomicInteger> counters = ConcurrentCollections.newConcurrentMap();, +++ /dev/null, +++ b/distribution/licenses/netty-3.10.6.Final.jar.sha1, +18ed04a0e502896552854926e908509db2987a00, +++ b/core/build.gradle, +  compile 'io.netty:netty:3.10.6.Final', +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/test/java/org/elasticsearch/common/bytes/AbstractBytesReferenceTestCase.java, +, +, +        if (sliceLength == 0 && sliceOffset != sliceRef.offset) {, +            // some impls optimize this to an empty instance then the offset will be 0, +            assertEquals(0, sliceRef.offset);, +        } else {, +        }, +++ b/core/src/test/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPingIT.java, +import org.elasticsearch.common.util.concurrent.ConcurrentCollections;, +        ConcurrentMap<TransportAddress, AtomicInteger> counters = ConcurrentCollections.newConcurrentMap();, +++ /dev/null, +++ b/distribution/licenses/netty-3.10.6.Final.jar.sha1, +18ed04a0e502896552854926e908509db2987a00, +++ /dev/null, +++ b/core/build.gradle, +  compile 'io.netty:netty:3.10.6.Final', +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/test/java/org/elasticsearch/common/bytes/AbstractBytesReferenceTestCase.java, +, +, +        if (sliceLength == 0 && sliceOffset != sliceRef.offset) {, +            // some impls optimize this to an empty instance then the offset will be 0, +            assertEquals(0, sliceRef.offset);, +        } else {, +        }, +++ b/core/src/test/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPingIT.java, +import org.elasticsearch.common.util.concurrent.ConcurrentCollections;, +        ConcurrentMap<TransportAddress, AtomicInteger> counters = ConcurrentCollections.newConcurrentMap();, +++ /dev/null, +++ b/distribution/licenses/netty-3.10.6.Final.jar.sha1, +18ed04a0e502896552854926e908509db2987a00, +++ /dev/null, +++ /dev/null, +++ b/core/build.gradle]