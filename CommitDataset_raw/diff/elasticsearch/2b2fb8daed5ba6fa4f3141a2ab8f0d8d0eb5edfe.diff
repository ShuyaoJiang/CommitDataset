[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +            transport = new TransportInfo(in);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +            transport = new TransportInfo(in);, +++ b/core/src/main/java/org/elasticsearch/transport/TransportInfo.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class TransportInfo implements Writeable, ToXContent {, +    public TransportInfo(StreamInput in) throws IOException {, +    static final class Fields {, +        static final String TRANSPORT = "transport";, +        static final String BOUND_ADDRESS = "bound_address";, +        static final String PUBLISH_ADDRESS = "publish_address";, +        static final String PROFILES = "profiles";, +    }, +, +    @Override, +    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +        builder.startObject(Fields.TRANSPORT);, +        builder.array(Fields.BOUND_ADDRESS, (Object[]) address.boundAddresses());, +        builder.field(Fields.PUBLISH_ADDRESS, address.publishAddress().toString());, +        builder.startObject(Fields.PROFILES);, +        if (profileAddresses != null && profileAddresses.size() > 0) {, +            for (Map.Entry<String, BoundTransportAddress> entry : profileAddresses.entrySet()) {, +                builder.startObject(entry.getKey());, +                builder.array(Fields.BOUND_ADDRESS, (Object[]) entry.getValue().boundAddresses());, +                builder.field(Fields.PUBLISH_ADDRESS, entry.getValue().publishAddress().toString());, +                builder.endObject();, +            }, +        }, +        builder.endObject();, +        builder.endObject();, +        return builder;, +    }, +]