[+++ b/server/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java, +        if (quoted) {, +            return getFieldQuery(field, queryText, getPhraseSlop());, +        }, +, +        if (field != null && EXISTS_FIELD.equals(field)) {, +            return existsQuery(queryText);, +        }, +, +++ b/server/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java, +        if (quoted) {, +            return getFieldQuery(field, queryText, getPhraseSlop());, +        }, +, +        if (field != null && EXISTS_FIELD.equals(field)) {, +            return existsQuery(queryText);, +        }, +, +++ b/server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java, +, +        for (boolean quoted : new boolean[] {true, false}) {, +            String value = (quoted ? "\"" : "") + STRING_FIELD_NAME + (quoted ? "\"" : "");, +            queryBuilder = new QueryStringQueryBuilder("_exists_:" + value);, +            query = queryBuilder.toQuery(context);, +            if (context.getIndexSettings().getIndexVersionCreated().onOrAfter(Version.V_6_1_0), +                && (context.fieldMapper(STRING_FIELD_NAME).omitNorms() == false)) {, +                assertThat(query, equalTo(new ConstantScoreQuery(new NormsFieldExistsQuery(STRING_FIELD_NAME))));, +            } else {, +                assertThat(query, equalTo(new ConstantScoreQuery(new TermQuery(new Term("_field_names", STRING_FIELD_NAME)))));, +            }, +        }]