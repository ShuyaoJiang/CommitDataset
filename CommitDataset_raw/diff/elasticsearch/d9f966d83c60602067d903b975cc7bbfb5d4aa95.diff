[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/field/data/FieldDataType.java, +, +        public static boolean isNumeric(FieldDataType type) {, +            return type == INT || type == LONG || type == FLOAT || type == DOUBLE;, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/field/data/FieldDataType.java, +, +        public static boolean isNumeric(FieldDataType type) {, +            return type == INT || type == LONG || type == FLOAT || type == DOUBLE;, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/IndexQueryParserModule.java, +            bindings.processXContentQueryFilter(NumericRangeFilterParser.NAME, NumericRangeFilterParser.class);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/field/data/FieldDataType.java, +, +        public static boolean isNumeric(FieldDataType type) {, +            return type == INT || type == LONG || type == FLOAT || type == DOUBLE;, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/IndexQueryParserModule.java, +            bindings.processXContentQueryFilter(NumericRangeFilterParser.NAME, NumericRangeFilterParser.class);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/FilterBuilders.java, +     * A filter that restricts search results to values that are within the given numeric range. Uses the, +     * field data cache (loading all the values for the specified field into memory), +     *, +     * @param name The field name, +     */, +    public static NumericRangeFilterBuilder numericRangeFilter(String name) {, +        return new NumericRangeFilterBuilder(name);, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/field/data/FieldDataType.java, +, +        public static boolean isNumeric(FieldDataType type) {, +            return type == INT || type == LONG || type == FLOAT || type == DOUBLE;, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/IndexQueryParserModule.java, +            bindings.processXContentQueryFilter(NumericRangeFilterParser.NAME, NumericRangeFilterParser.class);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/FilterBuilders.java, +     * A filter that restricts search results to values that are within the given numeric range. Uses the, +     * field data cache (loading all the values for the specified field into memory), +     *, +     * @param name The field name, +     */, +    public static NumericRangeFilterBuilder numericRangeFilter(String name) {, +        return new NumericRangeFilterBuilder(name);, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/NumericRangeFilterBuilder.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.index.query.xcontent;, +, +import org.elasticsearch.common.xcontent.XContentBuilder;, +, +import java.io.IOException;, +, +/**, + * A filter that restricts search results to values that are within the given numeric range., + *, + * <p>Uses the field data cache (loading all the values for the specified field into memory)., + *, + * @author kimchy (shay.banon), + */, +public class NumericRangeFilterBuilder extends BaseFilterBuilder {, +, +    private final String name;, +, +    private Object from;, +, +    private Object to;, +, +    private boolean includeLower = true;, +, +    private boolean includeUpper = true;, +, +    private String filterName;, +, +    /**, +     * A filter that restricts search results to values that are within the given range., +     *, +     * @param name The field name, +     */]