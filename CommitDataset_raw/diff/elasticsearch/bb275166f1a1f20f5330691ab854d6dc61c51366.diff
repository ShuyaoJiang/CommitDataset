[+++ b/docs/reference/cluster/nodes-stats.asciidoc, +By default, all stats are returned. You can limit this by combining any, +of `indices`, `os`, `process`, `jvm`, `network`, `transport`, `http`,, +`fs`, `breaker` and `thread_pool`. For example:, +curl -XGET 'http://localhost:9200/_nodes/stats/os', +curl -XGET 'http://localhost:9200/_nodes/stats/os,process', +curl localhost:9200/_nodes/stats/indices/field1,field2?pretty, +curl localhost:9200/_nodes/stats/indices/field*?pretty, +++ b/docs/reference/cluster/nodes-stats.asciidoc, +By default, all stats are returned. You can limit this by combining any, +of `indices`, `os`, `process`, `jvm`, `network`, `transport`, `http`,, +`fs`, `breaker` and `thread_pool`. For example:, +curl -XGET 'http://localhost:9200/_nodes/stats/os', +curl -XGET 'http://localhost:9200/_nodes/stats/os,process', +curl localhost:9200/_nodes/stats/indices/field1,field2?pretty, +curl localhost:9200/_nodes/stats/indices/field*?pretty, +++ b/src/main/java/org/elasticsearch/action/admin/indices/stats/IndexShardStats.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.io.stream.Streamable;, +import java.io.IOException;, +public class IndexShardStats implements Iterable<ShardStats>, Streamable {, +    private ShardId shardId;, +    private ShardStats[] shards;, +    private IndexShardStats() {}, +, +    public IndexShardStats(ShardId shardId, ShardStats[] shards) {, +, +    @Override, +    public void readFrom(StreamInput in) throws IOException {, +        shardId = ShardId.readShardId(in);, +        int shardSize = in.readVInt();, +        shards = new ShardStats[shardSize];, +        for (int i = 0; i < shardSize; i++) {, +            shards[i] = ShardStats.readShardStats(in);, +        }, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        shardId.writeTo(out);, +        out.writeVInt(shards.length);, +        for (ShardStats stats : shards) {, +            stats.writeTo(out);, +        }, +    }, +, +    public static IndexShardStats readIndexShardStats(StreamInput in) throws IOException {, +        IndexShardStats indexShardStats = new IndexShardStats();, +        indexShardStats.readFrom(in);, +        return indexShardStats;, +    }, +, +++ b/docs/reference/cluster/nodes-stats.asciidoc, +By default, all stats are returned. You can limit this by combining any, +of `indices`, `os`, `process`, `jvm`, `network`, `transport`, `http`,, +`fs`, `breaker` and `thread_pool`. For example:, +curl -XGET 'http://localhost:9200/_nodes/stats/os', +curl -XGET 'http://localhost:9200/_nodes/stats/os,process', +curl localhost:9200/_nodes/stats/indices/field1,field2?pretty, +curl localhost:9200/_nodes/stats/indices/field*?pretty, +++ b/src/main/java/org/elasticsearch/action/admin/indices/stats/IndexShardStats.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.io.stream.Streamable;, +import java.io.IOException;, +public class IndexShardStats implements Iterable<ShardStats>, Streamable {, +    private ShardId shardId;, +    private ShardStats[] shards;, +    private IndexShardStats() {}, +, +    public IndexShardStats(ShardId shardId, ShardStats[] shards) {, +, +    @Override, +    public void readFrom(StreamInput in) throws IOException {, +        shardId = ShardId.readShardId(in);, +        int shardSize = in.readVInt();, +        shards = new ShardStats[shardSize];, +        for (int i = 0; i < shardSize; i++) {, +            shards[i] = ShardStats.readShardStats(in);, +        }, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        shardId.writeTo(out);, +        out.writeVInt(shards.length);, +        for (ShardStats stats : shards) {, +            stats.writeTo(out);, +        }, +    }, +, +    public static IndexShardStats readIndexShardStats(StreamInput in) throws IOException {, +        IndexShardStats indexShardStats = new IndexShardStats();, +        indexShardStats.readFrom(in);, +        return indexShardStats;, +    }, +, +++ b/src/main/java/org/elasticsearch/indices/InternalIndicesService.java, +import com.google.common.collect.*;]