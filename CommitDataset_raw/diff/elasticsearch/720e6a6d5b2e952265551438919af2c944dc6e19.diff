[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +        sb.append("nodes: \n");, +                    sb.append("new_master ").append(newMasterNode());, +                    sb.append("detected_master ").append(newMasterNode());, +                    sb.append("master {new ").append(newMasterNode());, +                        sb.append(", previous ").append(previousMasterNode());, +                    sb.append("removed {");, +                    sb.append("added {");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +        sb.append("nodes: \n");, +                    sb.append("new_master ").append(newMasterNode());, +                    sb.append("detected_master ").append(newMasterNode());, +                    sb.append("master {new ").append(newMasterNode());, +                        sb.append(", previous ").append(previousMasterNode());, +                    sb.append("removed {");, +                    sb.append("added {");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java, +        sb.append(", node[").append(currentNodeId).append("], ");, +            sb.append("relocating [").append(relocatingNodeId).append("], ");, +            sb.append("[R]");, +        sb.append(", s[").append(state).append("]");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +        sb.append("nodes: \n");, +                    sb.append("new_master ").append(newMasterNode());, +                    sb.append("detected_master ").append(newMasterNode());, +                    sb.append("master {new ").append(newMasterNode());, +                        sb.append(", previous ").append(previousMasterNode());, +                    sb.append("removed {");, +                    sb.append("added {");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java, +        sb.append(", node[").append(currentNodeId).append("], ");, +            sb.append("relocating [").append(relocatingNodeId).append("], ");, +            sb.append("[R]");, +        sb.append(", s[").append(state).append("]");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexRoutingTable.java, +        StringBuilder sb = new StringBuilder("-- index [" + index + "]\n");, +            sb.append("----shard_id [").append(indexShard.shardId().index().name()).append("][").append(indexShard.shardId().id()).append("]\n");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +        sb.append("nodes: \n");, +                    sb.append("new_master ").append(newMasterNode());, +                    sb.append("detected_master ").append(newMasterNode());, +                    sb.append("master {new ").append(newMasterNode());, +                        sb.append(", previous ").append(previousMasterNode());, +                    sb.append("removed {");, +                    sb.append("added {");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java, +        sb.append(", node[").append(currentNodeId).append("], ");, +            sb.append("relocating [").append(relocatingNodeId).append("], ");, +            sb.append("[R]");, +        sb.append(", s[").append(state).append("]");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexRoutingTable.java, +        StringBuilder sb = new StringBuilder("-- index [" + index + "]\n");, +            sb.append("----shard_id [").append(indexShard.shardId().index().name()).append("][").append(indexShard.shardId().id()).append("]\n");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java, +        sb.append("-----node_id[").append(nodeId).append("]\n");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +        sb.append("nodes: \n");, +                    sb.append("new_master ").append(newMasterNode());, +                    sb.append("detected_master ").append(newMasterNode());, +                    sb.append("master {new ").append(newMasterNode());, +                        sb.append(", previous ").append(previousMasterNode());, +                    sb.append("removed {");, +                    sb.append("added {");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java, +        sb.append(", node[").append(currentNodeId).append("], ");, +            sb.append("relocating [").append(relocatingNodeId).append("], ");, +            sb.append("[R]");, +        sb.append(", s[").append(state).append("]");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexRoutingTable.java, +        StringBuilder sb = new StringBuilder("-- index [" + index + "]\n");, +            sb.append("----shard_id [").append(indexShard.shardId().index().name()).append("][").append(indexShard.shardId().id()).append("]\n");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java, +        sb.append("-----node_id[").append(nodeId).append("]\n");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +        StringBuilder sb = new StringBuilder("routing_nodes:\n");, +        sb.append("---- unassigned\n");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +        sb.append("nodes: \n");, +                    sb.append("new_master ").append(newMasterNode());, +                    sb.append("detected_master ").append(newMasterNode());, +                    sb.append("master {new ").append(newMasterNode());, +                        sb.append(", previous ").append(previousMasterNode());, +                    sb.append("removed {");, +                    sb.append("added {");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java, +        sb.append(", node[").append(currentNodeId).append("], ");, +            sb.append("relocating [").append(relocatingNodeId).append("], ");, +            sb.append("[R]");, +        sb.append(", s[").append(state).append("]");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexRoutingTable.java, +        StringBuilder sb = new StringBuilder("-- index [" + index + "]\n");, +            sb.append("----shard_id [").append(indexShard.shardId().index().name()).append("][").append(indexShard.shardId().id()).append("]\n");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java, +        sb.append("-----node_id[").append(nodeId).append("]\n");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +        StringBuilder sb = new StringBuilder("routing_nodes:\n");, +        sb.append("---- unassigned\n");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java, +        StringBuilder sb = new StringBuilder("routing_table:\n");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java]