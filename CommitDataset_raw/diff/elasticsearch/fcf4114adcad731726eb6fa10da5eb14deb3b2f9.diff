[+++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, +        if (coordinates.length == 3 && pluginId.contains("/") == false && pluginId.startsWith("file:") == false) {, +        if (pluginId.contains(":") == false) {, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, +        if (coordinates.length == 3 && pluginId.contains("/") == false && pluginId.startsWith("file:") == false) {, +        if (pluginId.contains(":") == false) {, +++ b/distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java, +import org.apache.lucene.util.IOUtils;, +import java.io.FileNotFoundException;, +    public void testFileNotMaven() throws Exception {, +        Tuple<Path, Environment> env = createEnv(fs, temp);, +        String dir = randomAlphaOfLength(10) + ":" + randomAlphaOfLength(5) + "\\" + randomAlphaOfLength(5);, +        Exception e = expectThrows(Exception.class,, +            // has two colons, so it appears similar to maven coordinates, +            () -> installPlugin("file:" + dir, env.v1()));, +        assertFalse(e.getMessage(), e.getMessage().contains("maven.org"));, +        assertTrue(e.getMessage(), e.getMessage().contains(dir));, +    }, +, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, +        if (coordinates.length == 3 && pluginId.contains("/") == false && pluginId.startsWith("file:") == false) {, +        if (pluginId.contains(":") == false) {, +++ b/distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java, +import org.apache.lucene.util.IOUtils;, +import java.io.FileNotFoundException;, +    public void testFileNotMaven() throws Exception {, +        Tuple<Path, Environment> env = createEnv(fs, temp);, +        String dir = randomAlphaOfLength(10) + ":" + randomAlphaOfLength(5) + "\\" + randomAlphaOfLength(5);, +        Exception e = expectThrows(Exception.class,, +            // has two colons, so it appears similar to maven coordinates, +            () -> installPlugin("file:" + dir, env.v1()));, +        assertFalse(e.getMessage(), e.getMessage().contains("maven.org"));, +        assertTrue(e.getMessage(), e.getMessage().contains(dir));, +    }, +, +++ b/plugins/examples/meta-plugin/build.gradle, +    setupCommand 'installMetaPlugin',, +            'bin/elasticsearch-plugin', 'install', 'file:' + buildZip.archivePath, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, +        if (coordinates.length == 3 && pluginId.contains("/") == false && pluginId.startsWith("file:") == false) {, +        if (pluginId.contains(":") == false) {, +++ b/distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java, +import org.apache.lucene.util.IOUtils;, +import java.io.FileNotFoundException;, +    public void testFileNotMaven() throws Exception {, +        Tuple<Path, Environment> env = createEnv(fs, temp);, +        String dir = randomAlphaOfLength(10) + ":" + randomAlphaOfLength(5) + "\\" + randomAlphaOfLength(5);, +        Exception e = expectThrows(Exception.class,, +            // has two colons, so it appears similar to maven coordinates, +            () -> installPlugin("file:" + dir, env.v1()));, +        assertFalse(e.getMessage(), e.getMessage().contains("maven.org"));, +        assertTrue(e.getMessage(), e.getMessage().contains(dir));, +    }, +, +++ b/plugins/examples/meta-plugin/build.gradle, +    setupCommand 'installMetaPlugin',, +            'bin/elasticsearch-plugin', 'install', 'file:' + buildZip.archivePath, +++ b/plugins/examples/meta-plugin/src/test/resources/rest-api-spec/test/smoke_test_plugins/10_basic.yml, +    - match:  { nodes.$master.plugins.0.name: dummy-plugin1  }, +    - match:  { nodes.$master.plugins.1.name: dummy-plugin2  }]