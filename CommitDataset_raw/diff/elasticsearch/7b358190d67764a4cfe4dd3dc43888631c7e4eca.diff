[+++ b/benchmarks/build.gradle, +tasks.remove(assemble) // Not published so no need to assemble, +, +++ b/benchmarks/build.gradle, +tasks.remove(assemble) // Not published so no need to assemble, +, +++ b/build.gradle, +, +/* Remove assemble on all qa projects because we don't need to publish, + * artifacts for them. */, +gradle.projectsEvaluated {, +  subprojects {, +    if (project.path.startsWith(':qa')) {, +      Task assemble = project.tasks.findByName('assemble'), +      if (assemble) {, +        project.tasks.remove(assemble), +      }, +    }, +  }, +}, +++ b/benchmarks/build.gradle, +tasks.remove(assemble) // Not published so no need to assemble, +, +++ b/build.gradle, +, +/* Remove assemble on all qa projects because we don't need to publish, + * artifacts for them. */, +gradle.projectsEvaluated {, +  subprojects {, +    if (project.path.startsWith(':qa')) {, +      Task assemble = project.tasks.findByName('assemble'), +      if (assemble) {, +        project.tasks.remove(assemble), +      }, +    }, +  }, +}, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                // build poms with assemble (if the assemble task exists), +                Task assemble = project.tasks.findByName('assemble'), +                if (assemble) {, +                    assemble.dependsOn(t), +                }, +++ b/benchmarks/build.gradle, +tasks.remove(assemble) // Not published so no need to assemble, +, +++ b/build.gradle, +, +/* Remove assemble on all qa projects because we don't need to publish, + * artifacts for them. */, +gradle.projectsEvaluated {, +  subprojects {, +    if (project.path.startsWith(':qa')) {, +      Task assemble = project.tasks.findByName('assemble'), +      if (assemble) {, +        project.tasks.remove(assemble), +      }, +    }, +  }, +}, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                // build poms with assemble (if the assemble task exists), +                Task assemble = project.tasks.findByName('assemble'), +                if (assemble) {, +                    assemble.dependsOn(t), +                }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        // Docs are published separately so no need to assemble, +        project.tasks.remove(project.assemble), +++ b/benchmarks/build.gradle, +tasks.remove(assemble) // Not published so no need to assemble, +, +++ b/build.gradle, +, +/* Remove assemble on all qa projects because we don't need to publish, + * artifacts for them. */, +gradle.projectsEvaluated {, +  subprojects {, +    if (project.path.startsWith(':qa')) {, +      Task assemble = project.tasks.findByName('assemble'), +      if (assemble) {, +        project.tasks.remove(assemble), +      }, +    }, +  }, +}, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                // build poms with assemble (if the assemble task exists), +                Task assemble = project.tasks.findByName('assemble'), +                if (assemble) {, +                    assemble.dependsOn(t), +                }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        // Docs are published separately so no need to assemble, +        project.tasks.remove(project.assemble), +++ b/client/benchmark/build.gradle, +tasks.remove(assemble) // Not published so no need to assemble, +, +++ b/benchmarks/build.gradle, +tasks.remove(assemble) // Not published so no need to assemble]