[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import static org.elasticsearch.common.xcontent.XContentParserUtils.ensureExpectedToken;, +        XContentParser.Token token = parser.nextToken();, +        ensureExpectedToken(XContentParser.Token.FIELD_NAME, token, parser::getTokenLocation);, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, Version.V_5_0_2),, +        UNKNOWN_NAMED_OBJECT_EXCEPTION(org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException.class,, +                org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException::new, 148, Version.V_5_2_0_UNRELEASED);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import static org.elasticsearch.common.xcontent.XContentParserUtils.ensureExpectedToken;, +        XContentParser.Token token = parser.nextToken();, +        ensureExpectedToken(XContentParser.Token.FIELD_NAME, token, parser::getTokenLocation);, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, Version.V_5_0_2),, +        UNKNOWN_NAMED_OBJECT_EXCEPTION(org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException.class,, +                org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException::new, 148, Version.V_5_2_0_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchParseException.java, +/**, + * Unchecked exception that is translated into a {@code 400 BAD REQUEST} error when it bubbles out over HTTP., + */, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import static org.elasticsearch.common.xcontent.XContentParserUtils.ensureExpectedToken;, +        XContentParser.Token token = parser.nextToken();, +        ensureExpectedToken(XContentParser.Token.FIELD_NAME, token, parser::getTokenLocation);, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, Version.V_5_0_2),, +        UNKNOWN_NAMED_OBJECT_EXCEPTION(org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException.class,, +                org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException::new, 148, Version.V_5_2_0_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchParseException.java, +/**, + * Unchecked exception that is translated into a {@code 400 BAD REQUEST} error when it bubbles out over HTTP., + */, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import java.net.URI;, +import java.net.URISyntaxException;, +     *, +    public String getLocation(@Nullable String routing) throws URISyntaxException {, +, +        URI uri = new URI(location.toString());, +        return uri.toASCIIString();, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import static org.elasticsearch.common.xcontent.XContentParserUtils.ensureExpectedToken;, +        XContentParser.Token token = parser.nextToken();, +        ensureExpectedToken(XContentParser.Token.FIELD_NAME, token, parser::getTokenLocation);, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, Version.V_5_0_2),, +        UNKNOWN_NAMED_OBJECT_EXCEPTION(org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException.class,, +                org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException::new, 148, Version.V_5_2_0_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchParseException.java, +/**, + * Unchecked exception that is translated into a {@code 400 BAD REQUEST} error when it bubbles out over HTTP., + */, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import java.net.URI;, +import java.net.URISyntaxException;, +     *, +    public String getLocation(@Nullable String routing) throws URISyntaxException {, +, +        URI uri = new URI(location.toString());, +        return uri.toASCIIString();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        final ClusterState state = clusterService.state();, +        final ClusterStateObserver observer = new ClusterStateObserver(state, clusterService, null, logger, threadPool.getThreadContext());, +                final ClusterHealthResponse response = getResponse(request, observer.setAndGetObservedState(), concreteWaitFor, true);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import static org.elasticsearch.common.xcontent.XContentParserUtils.ensureExpectedToken;, +        XContentParser.Token token = parser.nextToken();, +        ensureExpectedToken(XContentParser.Token.FIELD_NAME, token, parser::getTokenLocation);, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, Version.V_5_0_2),, +        UNKNOWN_NAMED_OBJECT_EXCEPTION(org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException.class,, +                org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException::new, 148, Version.V_5_2_0_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchParseException.java, +/**, + * Unchecked exception that is translated into a {@code 400 BAD REQUEST} error when it bubbles out over HTTP., + */, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import java.net.URI;, +import java.net.URISyntaxException;, +     *, +    public String getLocation(@Nullable String routing) throws URISyntaxException {, +, +        URI uri = new URI(location.toString());, +        return uri.toASCIIString();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        final ClusterState state = clusterService.state();, +        final ClusterStateObserver observer = new ClusterStateObserver(state, clusterService, null, logger, threadPool.getThreadContext());, +                final ClusterHealthResponse response = getResponse(request, observer.setAndGetObservedState(), concreteWaitFor, true);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/TransportGetTaskAction.java, +import org.elasticsearch.common.xcontent.NamedXContentRegistry;, +    private final NamedXContentRegistry xContentRegistry;, +            IndexNameExpressionResolver indexNameExpressionResolver, ClusterService clusterService, Client client,, +            NamedXContentRegistry xContentRegistry) {, +        this.xContentRegistry = xContentRegistry;, +        try (XContentParser parser = XContentHelper.createParser(xContentRegistry, response.getSourceAsBytesRef())) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import static org.elasticsearch.common.xcontent.XContentParserUtils.ensureExpectedToken;, +        XContentParser.Token token = parser.nextToken();]