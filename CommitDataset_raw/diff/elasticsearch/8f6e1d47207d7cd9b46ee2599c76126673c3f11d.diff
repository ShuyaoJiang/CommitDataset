[+++ b/docs/reference/query-dsl/queries/template-query.asciidoc, +GET /_search, +Alternatively passing the template as an escaped string works as well:, +GET /_search, +            "query": "{\"match_{{template}}\": {}}\"", <1>, +<1> New line characters (`\n`) should be escaped as `\\n` or removed,, +    and quotes (`"`) should be escaped as `\\"`., +You can register a template by storing it in the `config/scripts` directory., +In order to execute the stored template, reference it by name in the `query`, +parameter:, +GET /_search, +            "query": "storedTemplate", <1>, +<1> Name of the the query template in `config/scripts/`., +GET /_search, +There is also a dedicated `template` endpoint, which allows you to specify the template query directly., +You can use the `/_search/template` endpoint for that., +, +[source,js], +------------------------------------------, +GET /_search/template, +{, +    "template" : {, +      "query": { "match" : { "{{my_field}}" : "{{my_value}}" } },, +      "size" : {{my_size}}, +    },, +    "params" : {, +        "my_field" : "foo",, +        "my_value" : "bar",, +        "my_size" : 5, +    }, +}, +------------------------------------------, +, +can do with it check out the http://mustache.github.io/mustache.5.html[online, +documentation of the mustache project]., +, +[float], +==== More template examples, +, +[float], +===== Filling in a query string with a single value, +, +[source,js], +------------------------------------------, +GET /_search/template, +{, +    "template": {, +        "query": {, +            "match": {, +                "title": "{{query_string}}", +            }, +        }, +    },, +    "params": {, +        "query_string": "search for these words", +    }, +}, +------------------------------------------, +, +[float], +===== Passing an array of strings, +, +[source,js], +------------------------------------------, +GET /_search/template, +{, +  "template": {, +    "query": {, +      "terms": {, +        "status": [, +          "{{#status}}",, +          "{{.}}",, +          "{{/status}}", +        ], +      }, +    }, +  },, +  "params": {, +    "status": [ "pending", "published" ], +  }, +}, +------------------------------------------, +, +which is rendered as:, +, +[source,js], +------------------------------------------, +{, +"query": {, +  "terms": {, +    "status": [ "pending", "published" ], +  }, +}, +------------------------------------------, +, +[float], +===== Default values, +, +A default value is written as `{{var}}{{^var}}default{{/var}}` for instance:, +]