[+++ b/src/main/java/org/elasticsearch/search/internal/InternalSearchHits.java, +import org.elasticsearch.Version;, +import java.util.*;, +                final IntObjectOpenHashMap<SearchShardTarget> handleShardLookup = context.handleShardLookup();, +                final int lookupSize = in.readVInt();, +                if (in.getVersion().onOrAfter(Version.V_1_4_0)) {, +                        handleShardLookup.put(i + 1, readSearchShardTarget(in));, +                    }, +                } else {, +                    for (int i = 0; i < lookupSize; i++) {, +                        handleShardLookup.put(in.readVInt(), readSearchShardTarget(in));, +                    }, +                List<SearchShardTarget> targets = new ArrayList<>();, +                            targets.add(hit.shard());, +                out.writeVInt(targets.size());, +                if (out.getVersion().onOrAfter(Version.V_1_4_0)) {, +                    for (int i = 0; i < targets.size(); i++) {, +                        // the ordinal is implicit here since we write it in-order, +                        targets.get(i).writeTo(out);, +                    }, +                } else {, +                    for (int i = 0; i < targets.size(); i++) {, +                        out.writeVInt(i+1);, +                        targets.get(i).writeTo(out);, +++ b/src/main/java/org/elasticsearch/search/internal/InternalSearchHits.java, +import org.elasticsearch.Version;, +import java.util.*;, +                final IntObjectOpenHashMap<SearchShardTarget> handleShardLookup = context.handleShardLookup();, +                final int lookupSize = in.readVInt();, +                if (in.getVersion().onOrAfter(Version.V_1_4_0)) {, +                        handleShardLookup.put(i + 1, readSearchShardTarget(in));, +                    }, +                } else {, +                    for (int i = 0; i < lookupSize; i++) {, +                        handleShardLookup.put(in.readVInt(), readSearchShardTarget(in));, +                    }, +                List<SearchShardTarget> targets = new ArrayList<>();, +                            targets.add(hit.shard());, +                out.writeVInt(targets.size());, +                if (out.getVersion().onOrAfter(Version.V_1_4_0)) {, +                    for (int i = 0; i < targets.size(); i++) {, +                        // the ordinal is implicit here since we write it in-order, +                        targets.get(i).writeTo(out);, +                    }, +                } else {, +                    for (int i = 0; i < targets.size(); i++) {, +                        out.writeVInt(i+1);, +                        targets.get(i).writeTo(out);, +++ b/src/test/java/org/elasticsearch/search/sort/SimpleSortTests.java, +    @Test, +        final int numIndices = scaledRandomIntBetween(2, 25); // at most 25 days in the month, +          final int numDocs = scaledRandomIntBetween(1, 23);  // hour of the day, +        ensureGreen();, +++ b/src/main/java/org/elasticsearch/search/internal/InternalSearchHits.java, +import org.elasticsearch.Version;, +import java.util.*;, +                final IntObjectOpenHashMap<SearchShardTarget> handleShardLookup = context.handleShardLookup();, +                final int lookupSize = in.readVInt();, +                if (in.getVersion().onOrAfter(Version.V_1_4_0)) {, +                        handleShardLookup.put(i + 1, readSearchShardTarget(in));, +                    }, +                } else {, +                    for (int i = 0; i < lookupSize; i++) {, +                        handleShardLookup.put(in.readVInt(), readSearchShardTarget(in));, +                    }, +                List<SearchShardTarget> targets = new ArrayList<>();, +                            targets.add(hit.shard());, +                out.writeVInt(targets.size());, +                if (out.getVersion().onOrAfter(Version.V_1_4_0)) {, +                    for (int i = 0; i < targets.size(); i++) {, +                        // the ordinal is implicit here since we write it in-order, +                        targets.get(i).writeTo(out);, +                    }, +                } else {, +                    for (int i = 0; i < targets.size(); i++) {, +                        out.writeVInt(i+1);, +                        targets.get(i).writeTo(out);, +++ b/src/test/java/org/elasticsearch/search/sort/SimpleSortTests.java, +    @Test, +        final int numIndices = scaledRandomIntBetween(2, 25); // at most 25 days in the month, +          final int numDocs = scaledRandomIntBetween(1, 23);  // hour of the day, +        ensureGreen();, +++ b/src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java, +            assertThat("Stream should be fully read with version [" + version + "] for streamable [" + newInstance + "]", input.available(), equalTo(0));, +            assertThat("Serialization failed with version [" + version + "] bytes should be equal for streamable [" + streamable + "]", serialize(version, newInstance), equalTo(orig));]