[+++ b/src/main/java/org/elasticsearch/common/breaker/ChildMemoryCircuitBreaker.java, +    private final String name;, +                                     HierarchyCircuitBreakerService parent, String name) {, +                                     ESLogger logger, HierarchyCircuitBreakerService parent, String name) {, +                    logger.warn("[{}] New used memory {} [{}] for data of [{}] would be larger than configured breaker: {} [{}], breaking",, +    public String getName() {, +++ b/src/main/java/org/elasticsearch/common/breaker/ChildMemoryCircuitBreaker.java, +    private final String name;, +                                     HierarchyCircuitBreakerService parent, String name) {, +                                     ESLogger logger, HierarchyCircuitBreakerService parent, String name) {, +                    logger.warn("[{}] New used memory {} [{}] for data of [{}] would be larger than configured breaker: {} [{}], breaking",, +    public String getName() {, +++ b/src/main/java/org/elasticsearch/common/breaker/CircuitBreaker.java, +    public static final String PARENT = "parent";, +    public static final String FIELDDATA = "fielddata";, +    public static final String REQUEST = "request";, +    public String getName();, +++ b/src/main/java/org/elasticsearch/common/breaker/ChildMemoryCircuitBreaker.java, +    private final String name;, +                                     HierarchyCircuitBreakerService parent, String name) {, +                                     ESLogger logger, HierarchyCircuitBreakerService parent, String name) {, +                    logger.warn("[{}] New used memory {} [{}] for data of [{}] would be larger than configured breaker: {} [{}], breaking",, +    public String getName() {, +++ b/src/main/java/org/elasticsearch/common/breaker/CircuitBreaker.java, +    public static final String PARENT = "parent";, +    public static final String FIELDDATA = "fielddata";, +    public static final String REQUEST = "request";, +    public String getName();, +++ b/src/main/java/org/elasticsearch/common/breaker/MemoryCircuitBreaker.java, +    public String getName() {, +        return FIELDDATA;, +++ b/src/main/java/org/elasticsearch/common/breaker/ChildMemoryCircuitBreaker.java, +    private final String name;, +                                     HierarchyCircuitBreakerService parent, String name) {, +                                     ESLogger logger, HierarchyCircuitBreakerService parent, String name) {, +                    logger.warn("[{}] New used memory {} [{}] for data of [{}] would be larger than configured breaker: {} [{}], breaking",, +    public String getName() {, +++ b/src/main/java/org/elasticsearch/common/breaker/CircuitBreaker.java, +    public static final String PARENT = "parent";, +    public static final String FIELDDATA = "fielddata";, +    public static final String REQUEST = "request";, +    public String getName();, +++ b/src/main/java/org/elasticsearch/common/breaker/MemoryCircuitBreaker.java, +    public String getName() {, +        return FIELDDATA;, +++ b/src/main/java/org/elasticsearch/common/breaker/NoopCircuitBreaker.java, +    private final String name;, +    public NoopCircuitBreaker(String name) {, +    public String getName() {, +++ b/src/main/java/org/elasticsearch/common/breaker/ChildMemoryCircuitBreaker.java, +    private final String name;, +                                     HierarchyCircuitBreakerService parent, String name) {, +                                     ESLogger logger, HierarchyCircuitBreakerService parent, String name) {, +                    logger.warn("[{}] New used memory {} [{}] for data of [{}] would be larger than configured breaker: {} [{}], breaking",, +    public String getName() {, +++ b/src/main/java/org/elasticsearch/common/breaker/CircuitBreaker.java, +    public static final String PARENT = "parent";, +    public static final String FIELDDATA = "fielddata";, +    public static final String REQUEST = "request";, +    public String getName();, +++ b/src/main/java/org/elasticsearch/common/breaker/MemoryCircuitBreaker.java, +    public String getName() {, +        return FIELDDATA;, +++ b/src/main/java/org/elasticsearch/common/breaker/NoopCircuitBreaker.java, +    private final String name;, +    public NoopCircuitBreaker(String name) {, +    public String getName() {, +++ b/src/main/java/org/elasticsearch/common/util/BigArrays.java, +            CircuitBreaker breaker = this.breakerService.getBreaker(CircuitBreaker.REQUEST);, +++ b/src/main/java/org/elasticsearch/common/breaker/ChildMemoryCircuitBreaker.java, +    private final String name;, +                                     HierarchyCircuitBreakerService parent, String name) {, +                                     ESLogger logger, HierarchyCircuitBreakerService parent, String name) {, +                    logger.warn("[{}] New used memory {} [{}] for data of [{}] would be larger than configured breaker: {} [{}], breaking",, +    public String getName() {, +++ b/src/main/java/org/elasticsearch/common/breaker/CircuitBreaker.java, +    public static final String PARENT = "parent";, +    public static final String FIELDDATA = "fielddata";, +    public static final String REQUEST = "request";, +    public String getName();, +++ b/src/main/java/org/elasticsearch/common/breaker/MemoryCircuitBreaker.java, +    public String getName() {, +        return FIELDDATA;, +++ b/src/main/java/org/elasticsearch/common/breaker/NoopCircuitBreaker.java, +    private final String name;, +    public NoopCircuitBreaker(String name) {, +    public String getName() {, +++ b/src/main/java/org/elasticsearch/common/util/BigArrays.java, +            CircuitBreaker breaker = this.breakerService.getBreaker(CircuitBreaker.REQUEST);, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalsBuilder.java, +        breakerService.getBreaker(CircuitBreaker.FIELDDATA).addWithoutBreaking(memorySizeInBytes);, +++ b/src/main/java/org/elasticsearch/common/breaker/ChildMemoryCircuitBreaker.java, +    private final String name;, +                                     HierarchyCircuitBreakerService parent, String name) {, +                                     ESLogger logger, HierarchyCircuitBreakerService parent, String name) {, +                    logger.warn("[{}] New used memory {} [{}] for data of [{}] would be larger than configured breaker: {} [{}], breaking",, +    public String getName() {, +++ b/src/main/java/org/elasticsearch/common/breaker/CircuitBreaker.java, +    public static final String PARENT = "parent";, +    public static final String FIELDDATA = "fielddata";]