[+++ b/src/main/java/org/elasticsearch/common/compress/lzf/LZFCompressedStreamOutput.java, +    public LZFCompressedStreamOutput(StreamOutput out, ChunkEncoder encoder) throws IOException {, +        this.encoder = encoder;, +++ b/src/main/java/org/elasticsearch/common/compress/lzf/LZFCompressedStreamOutput.java, +    public LZFCompressedStreamOutput(StreamOutput out, ChunkEncoder encoder) throws IOException {, +        this.encoder = encoder;, +++ b/src/main/java/org/elasticsearch/common/compress/lzf/LZFCompressor.java, +import com.ning.compress.lzf.ChunkEncoder;, +import com.ning.compress.lzf.util.ChunkEncoderFactory;, +    private ChunkEncoder encoder;, +, +        this.encoder = ChunkEncoderFactory.safeInstance();, +        Loggers.getLogger(LZFCompressor.class).debug("using encoder [{}] and decoder[{}] ",, +                this.encoder.getClass().getSimpleName(),, +                this.decoder.getClass().getSimpleName());, +        return LZFEncoder.encode(encoder, data, offset, length);, +        return new LZFCompressedStreamOutput(out, encoder);]