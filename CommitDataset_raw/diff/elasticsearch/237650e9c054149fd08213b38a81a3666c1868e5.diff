[+++ b/modules/transport-netty4/src/test/java/org/elasticsearch/http/netty4/Netty4HttpClient.java, +import org.elasticsearch.tasks.Task;, +            list.add(response.headers().get(Task.X_OPAQUE_ID));, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/http/netty4/Netty4HttpClient.java, +import org.elasticsearch.tasks.Task;, +            list.add(response.headers().get(Task.X_OPAQUE_ID));, +++ b/plugins/transport-nio/src/test/java/org/elasticsearch/http/nio/Netty4HttpClient.java, +import org.elasticsearch.tasks.Task;, +            list.add(response.headers().get(Task.X_OPAQUE_ID));, +            httpRequest.headers().add(Task.X_OPAQUE_ID, String.valueOf(i));, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/http/netty4/Netty4HttpClient.java, +import org.elasticsearch.tasks.Task;, +            list.add(response.headers().get(Task.X_OPAQUE_ID));, +++ b/plugins/transport-nio/src/test/java/org/elasticsearch/http/nio/Netty4HttpClient.java, +import org.elasticsearch.tasks.Task;, +            list.add(response.headers().get(Task.X_OPAQUE_ID));, +            httpRequest.headers().add(Task.X_OPAQUE_ID, String.valueOf(i));, +++ b/server/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.tasks.Task;, +            Stream.of(Task.X_OPAQUE_ID), +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/http/netty4/Netty4HttpClient.java, +import org.elasticsearch.tasks.Task;, +            list.add(response.headers().get(Task.X_OPAQUE_ID));, +++ b/plugins/transport-nio/src/test/java/org/elasticsearch/http/nio/Netty4HttpClient.java, +import org.elasticsearch.tasks.Task;, +            list.add(response.headers().get(Task.X_OPAQUE_ID));, +            httpRequest.headers().add(Task.X_OPAQUE_ID, String.valueOf(i));, +++ b/server/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.tasks.Task;, +            Stream.of(Task.X_OPAQUE_ID), +++ b/server/src/main/java/org/elasticsearch/http/DefaultRestChannel.java, +import static org.elasticsearch.tasks.Task.X_OPAQUE_ID;, +, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/http/netty4/Netty4HttpClient.java, +import org.elasticsearch.tasks.Task;, +            list.add(response.headers().get(Task.X_OPAQUE_ID));, +++ b/plugins/transport-nio/src/test/java/org/elasticsearch/http/nio/Netty4HttpClient.java, +import org.elasticsearch.tasks.Task;, +            list.add(response.headers().get(Task.X_OPAQUE_ID));, +            httpRequest.headers().add(Task.X_OPAQUE_ID, String.valueOf(i));, +++ b/server/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.tasks.Task;, +            Stream.of(Task.X_OPAQUE_ID), +++ b/server/src/main/java/org/elasticsearch/http/DefaultRestChannel.java, +import static org.elasticsearch.tasks.Task.X_OPAQUE_ID;, +, +++ b/server/src/main/java/org/elasticsearch/index/SearchSlowLog.java, +import org.elasticsearch.tasks.Task;, +            if (context.getTask().getHeader(Task.X_OPAQUE_ID) != null) {, +                sb.append("id[").append(context.getTask().getHeader(Task.X_OPAQUE_ID)).append("], ");, +            } else {, +                sb.append("id[], ");, +            }, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/http/netty4/Netty4HttpClient.java, +import org.elasticsearch.tasks.Task;, +            list.add(response.headers().get(Task.X_OPAQUE_ID));, +++ b/plugins/transport-nio/src/test/java/org/elasticsearch/http/nio/Netty4HttpClient.java, +import org.elasticsearch.tasks.Task;, +            list.add(response.headers().get(Task.X_OPAQUE_ID));, +            httpRequest.headers().add(Task.X_OPAQUE_ID, String.valueOf(i));, +++ b/server/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.tasks.Task;, +            Stream.of(Task.X_OPAQUE_ID), +++ b/server/src/main/java/org/elasticsearch/http/DefaultRestChannel.java, +import static org.elasticsearch.tasks.Task.X_OPAQUE_ID;, +, +++ b/server/src/main/java/org/elasticsearch/index/SearchSlowLog.java, +import org.elasticsearch.tasks.Task;, +            if (context.getTask().getHeader(Task.X_OPAQUE_ID) != null) {, +                sb.append("id[").append(context.getTask().getHeader(Task.X_OPAQUE_ID)).append("], ");, +            } else {, +                sb.append("id[], ");, +            }, +++ b/server/src/main/java/org/elasticsearch/node/Node.java, +import org.elasticsearch.tasks.Task;, +                Stream.of(Task.X_OPAQUE_ID), +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/http/netty4/Netty4HttpClient.java, +import org.elasticsearch.tasks.Task;, +            list.add(response.headers().get(Task.X_OPAQUE_ID));, +++ b/plugins/transport-nio/src/test/java/org/elasticsearch/http/nio/Netty4HttpClient.java, +import org.elasticsearch.tasks.Task;, +            list.add(response.headers().get(Task.X_OPAQUE_ID));, +            httpRequest.headers().add(Task.X_OPAQUE_ID, String.valueOf(i));, +++ b/server/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.tasks.Task;, +            Stream.of(Task.X_OPAQUE_ID), +++ b/server/src/main/java/org/elasticsearch/http/DefaultRestChannel.java, +import static org.elasticsearch.tasks.Task.X_OPAQUE_ID;, +, +++ b/server/src/main/java/org/elasticsearch/index/SearchSlowLog.java, +import org.elasticsearch.tasks.Task;, +            if (context.getTask().getHeader(Task.X_OPAQUE_ID) != null) {, +                sb.append("id[").append(context.getTask().getHeader(Task.X_OPAQUE_ID)).append("], ");, +            } else {, +                sb.append("id[], ");, +            }, +++ b/server/src/main/java/org/elasticsearch/node/Node.java, +import org.elasticsearch.tasks.Task;, +                Stream.of(Task.X_OPAQUE_ID), +++ b/server/src/main/java/org/elasticsearch/tasks/Task.java]