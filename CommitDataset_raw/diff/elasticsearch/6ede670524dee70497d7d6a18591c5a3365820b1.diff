[+++ b/README.textile, +The above will index information into the @kimchy@ index, with two types, @info@ and @tweet@. Each user will get their own special index., +++ b/README.textile, +The above will index information into the @kimchy@ index, with two types, @info@ and @tweet@. Each user will get their own special index., +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]common[/\\]settings[/\\]loader[/\\]PropertiesSettingsLoader.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]common[/\\]settings[/\\]loader[/\\]JsonSettingsLoaderTests.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]common[/\\]settings[/\\]loader[/\\]YamlSettingsLoaderTests.java" checks="LineLength" />, +++ b/README.textile, +The above will index information into the @kimchy@ index, with two types, @info@ and @tweet@. Each user will get their own special index., +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]common[/\\]settings[/\\]loader[/\\]PropertiesSettingsLoader.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]common[/\\]settings[/\\]loader[/\\]JsonSettingsLoaderTests.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]common[/\\]settings[/\\]loader[/\\]YamlSettingsLoaderTests.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/common/settings/loader/PropertiesSettingsLoader.java, +        Properties props = new NoDuplicatesProperties();, +        FastStringReader reader = new FastStringReader(source);, +            props.load(reader);, +            Map<String, String> result = new HashMap<>();, +            IOUtils.closeWhileHandlingException(reader);, +    @Override, +    public Map<String, String> load(byte[] source) throws IOException {, +        Properties props = new NoDuplicatesProperties();, +        StreamInput stream = StreamInput.wrap(source);, +        try {, +            props.load(stream);, +            Map<String, String> result = new HashMap<>();, +            for (Map.Entry entry : props.entrySet()) {, +                result.put((String) entry.getKey(), (String) entry.getValue());, +            }, +            return result;, +        } finally {, +            IOUtils.closeWhileHandlingException(stream);, +        }, +            Object previousValue = super.put(key, value);, +                throw new ElasticsearchParseException("duplicate settings key [{}] found, previous value [{}], current value [{}]", key, previousValue, value);, +++ b/README.textile, +The above will index information into the @kimchy@ index, with two types, @info@ and @tweet@. Each user will get their own special index., +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]common[/\\]settings[/\\]loader[/\\]PropertiesSettingsLoader.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]common[/\\]settings[/\\]loader[/\\]JsonSettingsLoaderTests.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]common[/\\]settings[/\\]loader[/\\]YamlSettingsLoaderTests.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/common/settings/loader/PropertiesSettingsLoader.java, +        Properties props = new NoDuplicatesProperties();, +        FastStringReader reader = new FastStringReader(source);, +            props.load(reader);, +            Map<String, String> result = new HashMap<>();, +            IOUtils.closeWhileHandlingException(reader);, +    @Override, +    public Map<String, String> load(byte[] source) throws IOException {, +        Properties props = new NoDuplicatesProperties();, +        StreamInput stream = StreamInput.wrap(source);, +        try {, +            props.load(stream);, +            Map<String, String> result = new HashMap<>();, +            for (Map.Entry entry : props.entrySet()) {, +                result.put((String) entry.getKey(), (String) entry.getValue());, +            }, +            return result;, +        } finally {, +            IOUtils.closeWhileHandlingException(stream);, +        }, +            Object previousValue = super.put(key, value);, +                throw new ElasticsearchParseException("duplicate settings key [{}] found, previous value [{}], current value [{}]", key, previousValue, value);, +++ b/core/src/test/java/org/elasticsearch/common/settings/loader/JsonSettingsLoaderTests.java, +/**, + *, + */, +        String json = "/org/elasticsearch/common/settings/loader/test-settings.json";, +        Settings settings = settingsBuilder(), +        String json = "{\"foo\":\"bar\",\"foo\":\"baz\"}";, +        try {, +            settingsBuilder(), +                    .loadFromSource(json), +                    .build();, +            fail("expected exception");, +        } catch (SettingsException e) {, +            assertTrue(e.toString().contains("duplicate settings key [foo] found at line number [1], column number [20], previous value [bar], current value [baz]"));, +        }, +        final ElasticsearchParseException e = expectThrows(ElasticsearchParseException.class, () -> new JsonSettingsLoader(false).load(json));, +++ b/README.textile, +The above will index information into the @kimchy@ index, with two types, @info@ and @tweet@. Each user will get their own special index., +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]common[/\\]settings[/\\]loader[/\\]PropertiesSettingsLoader.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]common[/\\]settings[/\\]loader[/\\]JsonSettingsLoaderTests.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]common[/\\]settings[/\\]loader[/\\]YamlSettingsLoaderTests.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/common/settings/loader/PropertiesSettingsLoader.java, +        Properties props = new NoDuplicatesProperties();, +        FastStringReader reader = new FastStringReader(source);, +            props.load(reader);, +            Map<String, String> result = new HashMap<>();, +            IOUtils.closeWhileHandlingException(reader);, +    @Override, +    public Map<String, String> load(byte[] source) throws IOException {, +        Properties props = new NoDuplicatesProperties();, +        StreamInput stream = StreamInput.wrap(source);, +        try {, +            props.load(stream);, +            Map<String, String> result = new HashMap<>();, +            for (Map.Entry entry : props.entrySet()) {]