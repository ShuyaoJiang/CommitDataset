[+++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapChecks.java, +        private static final long MAX_NUMBER_OF_THREADS_THRESHOLD = 1 << 12;, +            return getMaxNumberOfThreads() != -1 && getMaxNumberOfThreads() < MAX_NUMBER_OF_THREADS_THRESHOLD;, +                MAX_NUMBER_OF_THREADS_THRESHOLD);, +        private static final long LIMIT = 1 << 18;, +            return getMaxMapCount() != -1 && getMaxMapCount() < LIMIT;, +                    LIMIT);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapChecks.java, +        private static final long MAX_NUMBER_OF_THREADS_THRESHOLD = 1 << 12;, +            return getMaxNumberOfThreads() != -1 && getMaxNumberOfThreads() < MAX_NUMBER_OF_THREADS_THRESHOLD;, +                MAX_NUMBER_OF_THREADS_THRESHOLD);, +        private static final long LIMIT = 1 << 18;, +            return getMaxMapCount() != -1 && getMaxMapCount() < LIMIT;, +                    LIMIT);, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +    protected static final boolean MULTI_POLYGON_MAY_OVERLAP = false;, +    protected static final boolean AUTO_VALIDATE_JTS_GEOMETRY = true;, +    protected static final boolean AUTO_INDEX_JTS_GEOMETRY = true;//may want to turn off once SpatialStrategy impls do it., +        JtsGeometry jtsGeometry = new JtsGeometry(geom, SPATIAL_CONTEXT, false, MULTI_POLYGON_MAY_OVERLAP);, +        if (AUTO_VALIDATE_JTS_GEOMETRY), +        if (AUTO_INDEX_JTS_GEOMETRY), +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapChecks.java, +        private static final long MAX_NUMBER_OF_THREADS_THRESHOLD = 1 << 12;, +            return getMaxNumberOfThreads() != -1 && getMaxNumberOfThreads() < MAX_NUMBER_OF_THREADS_THRESHOLD;, +                MAX_NUMBER_OF_THREADS_THRESHOLD);, +        private static final long LIMIT = 1 << 18;, +            return getMaxMapCount() != -1 && getMaxMapCount() < LIMIT;, +                    LIMIT);, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +    protected static final boolean MULTI_POLYGON_MAY_OVERLAP = false;, +    protected static final boolean AUTO_VALIDATE_JTS_GEOMETRY = true;, +    protected static final boolean AUTO_INDEX_JTS_GEOMETRY = true;//may want to turn off once SpatialStrategy impls do it., +        JtsGeometry jtsGeometry = new JtsGeometry(geom, SPATIAL_CONTEXT, false, MULTI_POLYGON_MAY_OVERLAP);, +        if (AUTO_VALIDATE_JTS_GEOMETRY), +        if (AUTO_INDEX_JTS_GEOMETRY), +++ b/core/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java, +    private static final String RECOVERY_PREFIX = "recovery.";, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapChecks.java, +        private static final long MAX_NUMBER_OF_THREADS_THRESHOLD = 1 << 12;, +            return getMaxNumberOfThreads() != -1 && getMaxNumberOfThreads() < MAX_NUMBER_OF_THREADS_THRESHOLD;, +                MAX_NUMBER_OF_THREADS_THRESHOLD);, +        private static final long LIMIT = 1 << 18;, +            return getMaxMapCount() != -1 && getMaxMapCount() < LIMIT;, +                    LIMIT);, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +    protected static final boolean MULTI_POLYGON_MAY_OVERLAP = false;, +    protected static final boolean AUTO_VALIDATE_JTS_GEOMETRY = true;, +    protected static final boolean AUTO_INDEX_JTS_GEOMETRY = true;//may want to turn off once SpatialStrategy impls do it., +        JtsGeometry jtsGeometry = new JtsGeometry(geom, SPATIAL_CONTEXT, false, MULTI_POLYGON_MAY_OVERLAP);, +        if (AUTO_VALIDATE_JTS_GEOMETRY), +        if (AUTO_INDEX_JTS_GEOMETRY), +++ b/core/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java, +    private static final String RECOVERY_PREFIX = "recovery.";, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/DirectCandidateGenerator.java, +    private static final double LOG_BASE = 5;, +            return max(0, round(termFrequency * (log10(termFrequency - frequencyPlateau) * (1.0 / log10(LOG_BASE))) + 1));]