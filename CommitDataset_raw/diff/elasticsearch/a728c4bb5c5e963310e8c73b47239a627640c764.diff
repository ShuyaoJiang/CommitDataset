[+++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        registerAggregation(new AggregationSpec(GlobalAggregationBuilder::new, GlobalAggregationBuilder::parse,, +                GlobalAggregationBuilder.AGGREGATION_NAME_FIELD).addResultReader(InternalGlobal::new));, +        registerAggregation(new AggregationSpec(FilterAggregationBuilder::new, FilterAggregationBuilder::parse,, +                FilterAggregationBuilder.AGGREGATION_NAME_FIELD).addResultReader(InternalFilter::new));, +        registerAggregation(new AggregationSpec(FiltersAggregationBuilder::new, FiltersAggregationBuilder::parse,, +                FiltersAggregationBuilder.AGGREGATION_NAME_FIELD).addResultReader(InternalFilters::new));, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        registerAggregation(new AggregationSpec(GlobalAggregationBuilder::new, GlobalAggregationBuilder::parse,, +                GlobalAggregationBuilder.AGGREGATION_NAME_FIELD).addResultReader(InternalGlobal::new));, +        registerAggregation(new AggregationSpec(FilterAggregationBuilder::new, FilterAggregationBuilder::parse,, +                FilterAggregationBuilder.AGGREGATION_NAME_FIELD).addResultReader(InternalFilter::new));, +        registerAggregation(new AggregationSpec(FiltersAggregationBuilder::new, FiltersAggregationBuilder::parse,, +                FiltersAggregationBuilder.AGGREGATION_NAME_FIELD).addResultReader(InternalFilters::new));, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregation.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import java.io.IOException;, +     * Read from a stream., +     */, +    protected InternalMultiBucketAggregation(StreamInput in) throws IOException {, +        super(in);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        registerAggregation(new AggregationSpec(GlobalAggregationBuilder::new, GlobalAggregationBuilder::parse,, +                GlobalAggregationBuilder.AGGREGATION_NAME_FIELD).addResultReader(InternalGlobal::new));, +        registerAggregation(new AggregationSpec(FilterAggregationBuilder::new, FilterAggregationBuilder::parse,, +                FilterAggregationBuilder.AGGREGATION_NAME_FIELD).addResultReader(InternalFilter::new));, +        registerAggregation(new AggregationSpec(FiltersAggregationBuilder::new, FiltersAggregationBuilder::parse,, +                FiltersAggregationBuilder.AGGREGATION_NAME_FIELD).addResultReader(InternalFilters::new));, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregation.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import java.io.IOException;, +     * Read from a stream., +     */, +    protected InternalMultiBucketAggregation(StreamInput in) throws IOException {, +        super(in);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/InternalSingleBucketAggregation.java, +    /**, +     * Read from a stream., +     */, +    protected InternalSingleBucketAggregation(StreamInput in) throws IOException {, +        super(in);, +        docCount = in.readVLong();, +        aggregations = InternalAggregations.readAggregations(in);, +    }, +, +    @Override, +    protected void doReadFrom(StreamInput in) throws IOException {, +        docCount = in.readVLong();, +        aggregations = InternalAggregations.readAggregations(in);, +    }, +, +    @Override, +    protected void doWriteTo(StreamOutput out) throws IOException {, +        out.writeVLong(docCount);, +        aggregations.writeTo(out);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        registerAggregation(new AggregationSpec(GlobalAggregationBuilder::new, GlobalAggregationBuilder::parse,, +                GlobalAggregationBuilder.AGGREGATION_NAME_FIELD).addResultReader(InternalGlobal::new));, +        registerAggregation(new AggregationSpec(FilterAggregationBuilder::new, FilterAggregationBuilder::parse,, +                FilterAggregationBuilder.AGGREGATION_NAME_FIELD).addResultReader(InternalFilter::new));, +        registerAggregation(new AggregationSpec(FiltersAggregationBuilder::new, FiltersAggregationBuilder::parse,, +                FiltersAggregationBuilder.AGGREGATION_NAME_FIELD).addResultReader(InternalFilters::new));, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregation.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import java.io.IOException;, +     * Read from a stream., +     */, +    protected InternalMultiBucketAggregation(StreamInput in) throws IOException {, +        super(in);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/InternalSingleBucketAggregation.java, +    /**, +     * Read from a stream., +     */, +    protected InternalSingleBucketAggregation(StreamInput in) throws IOException {, +        super(in);, +        docCount = in.readVLong();, +        aggregations = InternalAggregations.readAggregations(in);, +    }, +, +    @Override, +    protected void doReadFrom(StreamInput in) throws IOException {, +        docCount = in.readVLong();, +        aggregations = InternalAggregations.readAggregations(in);, +    }, +, +    @Override, +    protected void doWriteTo(StreamOutput out) throws IOException {, +        out.writeVLong(docCount);, +        aggregations.writeTo(out);]