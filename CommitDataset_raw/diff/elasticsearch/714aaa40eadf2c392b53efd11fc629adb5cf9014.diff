[+++ b/src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java, +        return new SuggestField(names.indexName(), input, this.fieldType, payload, analyzingSuggestLookupProvider);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java, +        return new SuggestField(names.indexName(), input, this.fieldType, payload, analyzingSuggestLookupProvider);, +++ b/src/main/java/org/elasticsearch/search/suggest/completion/AnalyzingCompletionLookupProvider.java, +import org.apache.lucene.util.fst.ByteSequenceOutputs;, +import org.apache.lucene.util.fst.FST;, +import org.apache.lucene.util.fst.PairOutputs;, +import org.apache.lucene.util.fst.PositiveIntOutputs;, +, +    }, +, +    ;, +                AnalyzingSuggestHolder analyzingSuggestHolder = lookupMap.get(mapper.names().indexName());, +++ b/src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java, +        return new SuggestField(names.indexName(), input, this.fieldType, payload, analyzingSuggestLookupProvider);, +++ b/src/main/java/org/elasticsearch/search/suggest/completion/AnalyzingCompletionLookupProvider.java, +import org.apache.lucene.util.fst.ByteSequenceOutputs;, +import org.apache.lucene.util.fst.FST;, +import org.apache.lucene.util.fst.PairOutputs;, +import org.apache.lucene.util.fst.PositiveIntOutputs;, +, +    }, +, +    ;, +                AnalyzingSuggestHolder analyzingSuggestHolder = lookupMap.get(mapper.names().indexName());, +++ b/src/test/java/org/elasticsearch/search/suggest/CompletionSuggestSearchTests.java, +import org.elasticsearch.AbstractSharedClusterTest;, +                .field("path", "just_name"), +                new CompletionSuggestionBuilder("suggs").field("suggest").text("f").size(10), +                new CompletionSuggestionBuilder("suggs").field("suggest").text("f").size(10)]