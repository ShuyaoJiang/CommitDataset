[+++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/search/facet/HistogramFacetSearchBenchmark.java, +        System.out.println("--> Warmup DONE");, +        totalQueryTime = 0;, +        for (int j = 0; j < QUERY_COUNT; j++) {, +            SearchResponse searchResponse = client.prepareSearch(), +                    .setQuery(matchAllQuery()), +                    .addFacet(dateHistogramFacet("date").field("date").interval("day")), +                    .execute().actionGet();, +            if (searchResponse.hits().totalHits() != COUNT) {, +                System.err.println("--> mismatch on hits");, +            }, +            totalQueryTime += searchResponse.tookInMillis();, +        }, +        System.out.println("--> Date Histogram Facet (date) " + (totalQueryTime / QUERY_COUNT) + "ms");, +, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/search/facet/HistogramFacetSearchBenchmark.java, +        System.out.println("--> Warmup DONE");, +        totalQueryTime = 0;, +        for (int j = 0; j < QUERY_COUNT; j++) {, +            SearchResponse searchResponse = client.prepareSearch(), +                    .setQuery(matchAllQuery()), +                    .addFacet(dateHistogramFacet("date").field("date").interval("day")), +                    .execute().actionGet();, +            if (searchResponse.hits().totalHits() != COUNT) {, +                System.err.println("--> mismatch on hits");, +            }, +            totalQueryTime += searchResponse.tookInMillis();, +        }, +        System.out.println("--> Date Histogram Facet (date) " + (totalQueryTime / QUERY_COUNT) + "ms");, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/FacetBuilders.java, +import org.elasticsearch.search.facet.datehistogram.DateHistogramFacetBuilder;, +    public static DateHistogramFacetBuilder dateHistogramFacet(String facetName) {, +        return new DateHistogramFacetBuilder(facetName);, +    }, +, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/search/facet/HistogramFacetSearchBenchmark.java, +        System.out.println("--> Warmup DONE");, +        totalQueryTime = 0;, +        for (int j = 0; j < QUERY_COUNT; j++) {, +            SearchResponse searchResponse = client.prepareSearch(), +                    .setQuery(matchAllQuery()), +                    .addFacet(dateHistogramFacet("date").field("date").interval("day")), +                    .execute().actionGet();, +            if (searchResponse.hits().totalHits() != COUNT) {, +                System.err.println("--> mismatch on hits");, +            }, +            totalQueryTime += searchResponse.tookInMillis();, +        }, +        System.out.println("--> Date Histogram Facet (date) " + (totalQueryTime / QUERY_COUNT) + "ms");, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/FacetBuilders.java, +import org.elasticsearch.search.facet.datehistogram.DateHistogramFacetBuilder;, +    public static DateHistogramFacetBuilder dateHistogramFacet(String facetName) {, +        return new DateHistogramFacetBuilder(facetName);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/FacetModule.java, +import org.elasticsearch.search.facet.datehistogram.DateHistogramFacetProcessor;, +        processors.add(DateHistogramFacetProcessor.class);, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/search/facet/HistogramFacetSearchBenchmark.java, +        System.out.println("--> Warmup DONE");, +        totalQueryTime = 0;, +        for (int j = 0; j < QUERY_COUNT; j++) {, +            SearchResponse searchResponse = client.prepareSearch(), +                    .setQuery(matchAllQuery()), +                    .addFacet(dateHistogramFacet("date").field("date").interval("day")), +                    .execute().actionGet();, +            if (searchResponse.hits().totalHits() != COUNT) {, +                System.err.println("--> mismatch on hits");, +            }, +            totalQueryTime += searchResponse.tookInMillis();, +        }, +        System.out.println("--> Date Histogram Facet (date) " + (totalQueryTime / QUERY_COUNT) + "ms");, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/FacetBuilders.java, +import org.elasticsearch.search.facet.datehistogram.DateHistogramFacetBuilder;, +    public static DateHistogramFacetBuilder dateHistogramFacet(String facetName) {, +        return new DateHistogramFacetBuilder(facetName);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/FacetModule.java, +import org.elasticsearch.search.facet.datehistogram.DateHistogramFacetProcessor;, +        processors.add(DateHistogramFacetProcessor.class);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/TransportFacetModule.java, +import org.elasticsearch.search.facet.datehistogram.InternalDateHistogramFacet;, +        InternalDateHistogramFacet.registerStreams();, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/search/facet/HistogramFacetSearchBenchmark.java, +        System.out.println("--> Warmup DONE");, +        totalQueryTime = 0;, +        for (int j = 0; j < QUERY_COUNT; j++) {, +            SearchResponse searchResponse = client.prepareSearch(), +                    .setQuery(matchAllQuery()), +                    .addFacet(dateHistogramFacet("date").field("date").interval("day")), +                    .execute().actionGet();, +            if (searchResponse.hits().totalHits() != COUNT) {, +                System.err.println("--> mismatch on hits");, +            }, +            totalQueryTime += searchResponse.tookInMillis();, +        }]