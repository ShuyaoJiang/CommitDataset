[+++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +                return fastReadByteArray();, +                return readArrayList();, +                return readArray();, +                return readLinkedHashMap();, +                return readHashMap();, +                return readDate();, +                return readDateTime();, +    private byte[] fastReadByteArray() throws IOException {, +        int bytesSize = readVInt();, +        byte[] value = new byte[bytesSize];, +        readBytes(value, 0, bytesSize);, +        return value;, +    }, +, +    @SuppressWarnings("unchecked"), +    private List readArrayList() throws IOException {, +        int size = readVInt();, +        List list = new ArrayList(size);, +        for (int i = 0; i < size; i++) {, +            list.add(readGenericValue());, +        }, +        return list;, +    }, +, +    private DateTime readDateTime() throws IOException {, +        final String timeZoneId = readString();, +        return new DateTime(readLong(), DateTimeZone.forID(timeZoneId));, +    }, +, +    private Object[] readArray() throws IOException {, +        int size8 = readVInt();, +        Object[] list8 = new Object[size8];, +        for (int i = 0; i < size8; i++) {, +            list8[i] = readGenericValue();, +        }, +        return list8;, +    }, +, +    private Map readLinkedHashMap() throws IOException {, +        int size9 = readVInt();, +        Map map9 = new LinkedHashMap(size9);, +        for (int i = 0; i < size9; i++) {, +            map9.put(readString(), readGenericValue());, +        }, +        return map9;, +    }, +, +    private Map readHashMap() throws IOException {, +        int size10 = readVInt();, +        Map map10 = new HashMap(size10);, +        for (int i = 0; i < size10; i++) {, +            map10.put(readString(), readGenericValue());, +        }, +        return map10;, +    }, +, +    private Date readDate() throws IOException {, +        return new Date(readLong());, +    }, +]