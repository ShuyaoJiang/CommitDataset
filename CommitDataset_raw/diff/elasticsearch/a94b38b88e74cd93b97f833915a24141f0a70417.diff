[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/x-pack/plugin/ccr/build.gradle, +import com.carrotsearch.gradle.junit4.RandomizedTestingTask, +import org.elasticsearch.gradle.BuildPlugin, +, +evaluationDependsOn(':x-pack-elasticsearch:plugin:core'), +, +apply plugin: 'elasticsearch.esplugin', +esplugin {, +    name 'x-pack-ccr', +    description 'Elasticsearch Expanded Pack Plugin - CCR', +    classname 'org.elasticsearch.xpack.ccr.Ccr', +    hasNativeController false, +    requiresKeystore true, +    extendedPlugins = ['x-pack-core'], +    licenseFile project(':x-pack-elasticsearch').file('LICENSE.txt'), +    noticeFile project(':x-pack-elasticsearch').file('NOTICE.txt'), +}, +archivesBaseName = 'x-pack-ccr', +, +licenseHeaders.enabled = false, +, +integTest.enabled = false, +, +// Instead we create a separate task to run the, +// tests based on ESIntegTestCase, +task internalClusterTest(type: RandomizedTestingTask,, +        group: JavaBasePlugin.VERIFICATION_GROUP,, +        description: 'Java fantasy integration tests',, +        dependsOn: test.dependsOn) {, +    configure(BuildPlugin.commonTestConfig(project)), +    classpath = project.test.classpath, +    testClassesDir = project.test.testClassesDir, +    include '**/*IT.class', +    systemProperty 'es.set.netty.runtime.available.processors', 'false', +}, +check.dependsOn internalClusterTest, +internalClusterTest.mustRunAfter test, +, +dependencies {, +    compileOnly "org.elasticsearch:elasticsearch:${version}", +    compileOnly "org.elasticsearch.plugin:x-pack-core:${version}", +    testCompile project(path: xpackModule('core'), configuration: 'testArtifacts'), +}, +, +dependencyLicenses {, +    ignoreSha 'x-pack-core', +}, +, +// TODO: Fix unchecked warnings, +compileTestJava.options.compilerArgs << "-Xlint:-unchecked", +, +run {, +    plugin ':x-pack-elasticsearch:plugin:core', +}, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/x-pack/plugin/ccr/build.gradle, +import com.carrotsearch.gradle.junit4.RandomizedTestingTask, +import org.elasticsearch.gradle.BuildPlugin, +, +evaluationDependsOn(':x-pack-elasticsearch:plugin:core'), +, +apply plugin: 'elasticsearch.esplugin', +esplugin {, +    name 'x-pack-ccr', +    description 'Elasticsearch Expanded Pack Plugin - CCR', +    classname 'org.elasticsearch.xpack.ccr.Ccr', +    hasNativeController false, +    requiresKeystore true, +    extendedPlugins = ['x-pack-core'], +    licenseFile project(':x-pack-elasticsearch').file('LICENSE.txt'), +    noticeFile project(':x-pack-elasticsearch').file('NOTICE.txt'), +}, +archivesBaseName = 'x-pack-ccr', +, +licenseHeaders.enabled = false, +, +integTest.enabled = false, +, +// Instead we create a separate task to run the, +// tests based on ESIntegTestCase, +task internalClusterTest(type: RandomizedTestingTask,, +        group: JavaBasePlugin.VERIFICATION_GROUP,, +        description: 'Java fantasy integration tests',]