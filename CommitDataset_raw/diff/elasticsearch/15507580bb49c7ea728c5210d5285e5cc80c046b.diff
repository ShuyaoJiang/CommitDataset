[+++ b/core/src/main/java/org/elasticsearch/gateway/Gateway.java, +                   TransportNodesListGatewayMetaState listGatewayMetaState, Discovery discovery) {, +        ClusterState.Builder builder = ClusterState.builder(clusterService.state().getClusterName());, +++ b/core/src/main/java/org/elasticsearch/gateway/Gateway.java, +                   TransportNodesListGatewayMetaState listGatewayMetaState, Discovery discovery) {, +        ClusterState.Builder builder = ClusterState.builder(clusterService.state().getClusterName());, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +++ b/core/src/main/java/org/elasticsearch/gateway/Gateway.java, +                   TransportNodesListGatewayMetaState listGatewayMetaState, Discovery discovery) {, +        ClusterState.Builder builder = ClusterState.builder(clusterService.state().getClusterName());, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayService.java, +import org.elasticsearch.discovery.Discovery;, +import org.elasticsearch.env.NodeEnvironment;, +    public GatewayService(Settings settings, AllocationService allocationService, ClusterService clusterService,, +                          DiscoveryService discoveryService, ThreadPool threadPool,, +                          NodeEnvironment nodeEnvironment, GatewayMetaState metaState,, +                          TransportNodesListGatewayMetaState listGatewayMetaState, Discovery discovery) {, +        this.gateway = new Gateway(settings, clusterService, nodeEnvironment, metaState, listGatewayMetaState, discovery);, +    public Gateway getGateway() {, +        return gateway;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/gateway/Gateway.java, +                   TransportNodesListGatewayMetaState listGatewayMetaState, Discovery discovery) {, +        ClusterState.Builder builder = ClusterState.builder(clusterService.state().getClusterName());, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayService.java, +import org.elasticsearch.discovery.Discovery;, +import org.elasticsearch.env.NodeEnvironment;, +    public GatewayService(Settings settings, AllocationService allocationService, ClusterService clusterService,, +                          DiscoveryService discoveryService, ThreadPool threadPool,, +                          NodeEnvironment nodeEnvironment, GatewayMetaState metaState,, +                          TransportNodesListGatewayMetaState listGatewayMetaState, Discovery discovery) {, +        this.gateway = new Gateway(settings, clusterService, nodeEnvironment, metaState, listGatewayMetaState, discovery);, +    public Gateway getGateway() {, +        return gateway;, +    }, +, +++ b/core/src/test/java/org/elasticsearch/discovery/DiscoveryModuleTests.java, +import org.elasticsearch.test.NoopDiscovery;, +        module.addDiscoveryType("custom", NoopDiscovery.class);, +        assertBinding(module, Discovery.class, NoopDiscovery.class);, +++ b/core/src/main/java/org/elasticsearch/gateway/Gateway.java, +                   TransportNodesListGatewayMetaState listGatewayMetaState, Discovery discovery) {, +        ClusterState.Builder builder = ClusterState.builder(clusterService.state().getClusterName());, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayService.java, +import org.elasticsearch.discovery.Discovery;, +import org.elasticsearch.env.NodeEnvironment;, +    public GatewayService(Settings settings, AllocationService allocationService, ClusterService clusterService,, +                          DiscoveryService discoveryService, ThreadPool threadPool,, +                          NodeEnvironment nodeEnvironment, GatewayMetaState metaState,, +                          TransportNodesListGatewayMetaState listGatewayMetaState, Discovery discovery) {, +        this.gateway = new Gateway(settings, clusterService, nodeEnvironment, metaState, listGatewayMetaState, discovery);, +    public Gateway getGateway() {, +        return gateway;, +    }, +, +++ b/core/src/test/java/org/elasticsearch/discovery/DiscoveryModuleTests.java, +import org.elasticsearch.test.NoopDiscovery;, +        module.addDiscoveryType("custom", NoopDiscovery.class);, +        assertBinding(module, Discovery.class, NoopDiscovery.class);, +++ b/core/src/test/java/org/elasticsearch/gateway/GatewayIndexStateIT.java, +        final Gateway gateway1 = internalCluster().getInstance(GatewayService.class, node_1).getGateway();, +++ b/core/src/main/java/org/elasticsearch/gateway/Gateway.java, +                   TransportNodesListGatewayMetaState listGatewayMetaState, Discovery discovery) {, +        ClusterState.Builder builder = ClusterState.builder(clusterService.state().getClusterName());, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayService.java, +import org.elasticsearch.discovery.Discovery;, +import org.elasticsearch.env.NodeEnvironment;, +    public GatewayService(Settings settings, AllocationService allocationService, ClusterService clusterService,, +                          DiscoveryService discoveryService, ThreadPool threadPool,, +                          NodeEnvironment nodeEnvironment, GatewayMetaState metaState,, +                          TransportNodesListGatewayMetaState listGatewayMetaState, Discovery discovery) {, +        this.gateway = new Gateway(settings, clusterService, nodeEnvironment, metaState, listGatewayMetaState, discovery);, +    public Gateway getGateway() {, +        return gateway;, +    }, +, +++ b/core/src/test/java/org/elasticsearch/discovery/DiscoveryModuleTests.java, +import org.elasticsearch.test.NoopDiscovery;, +        module.addDiscoveryType("custom", NoopDiscovery.class);, +        assertBinding(module, Discovery.class, NoopDiscovery.class);, +++ b/core/src/test/java/org/elasticsearch/gateway/GatewayIndexStateIT.java, +        final Gateway gateway1 = internalCluster().getInstance(GatewayService.class, node_1).getGateway();, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/gateway/Gateway.java, +                   TransportNodesListGatewayMetaState listGatewayMetaState, Discovery discovery) {, +        ClusterState.Builder builder = ClusterState.builder(clusterService.state().getClusterName());, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayService.java, +import org.elasticsearch.discovery.Discovery;, +import org.elasticsearch.env.NodeEnvironment;, +    public GatewayService(Settings settings, AllocationService allocationService, ClusterService clusterService,, +                          DiscoveryService discoveryService, ThreadPool threadPool,, +                          NodeEnvironment nodeEnvironment, GatewayMetaState metaState,, +                          TransportNodesListGatewayMetaState listGatewayMetaState, Discovery discovery) {, +        this.gateway = new Gateway(settings, clusterService, nodeEnvironment, metaState, listGatewayMetaState, discovery);]