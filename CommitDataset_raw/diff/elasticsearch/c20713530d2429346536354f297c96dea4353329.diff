[+++ b/docs/reference/modules/snapshots.asciidoc, +++ b/docs/reference/modules/snapshots.asciidoc, +++ b/docs/reference/modules/threadpool.asciidoc, +`snapshot`::, +    For snapshot/restore operations, defaults to `scaling`, +    keep-alive `5m`,, +    size `(# of available processors)/2`., +, +`snapshot_data`::, +    For snapshot/restore operations on data files, defaults to `scaling`, +    with a `5m` keep-alive,, +    size `5`., +, +++ b/docs/reference/modules/snapshots.asciidoc, +++ b/docs/reference/modules/threadpool.asciidoc, +`snapshot`::, +    For snapshot/restore operations, defaults to `scaling`, +    keep-alive `5m`,, +    size `(# of available processors)/2`., +, +`snapshot_data`::, +    For snapshot/restore operations on data files, defaults to `scaling`, +    with a `5m` keep-alive,, +    size `5`., +, +++ b/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobStore.java, +import org.elasticsearch.threadpool.ThreadPool;, +    private final ThreadPool threadPool;, +    public FsBlobStore(Settings settings, ThreadPool threadPool, File path) {, +        this.threadPool = threadPool;, +        return threadPool.executor(ThreadPool.Names.SNAPSHOT_DATA);, +++ b/docs/reference/modules/snapshots.asciidoc, +++ b/docs/reference/modules/threadpool.asciidoc, +`snapshot`::, +    For snapshot/restore operations, defaults to `scaling`, +    keep-alive `5m`,, +    size `(# of available processors)/2`., +, +`snapshot_data`::, +    For snapshot/restore operations on data files, defaults to `scaling`, +    with a `5m` keep-alive,, +    size `5`., +, +++ b/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobStore.java, +import org.elasticsearch.threadpool.ThreadPool;, +    private final ThreadPool threadPool;, +    public FsBlobStore(Settings settings, ThreadPool threadPool, File path) {, +        this.threadPool = threadPool;, +        return threadPool.executor(ThreadPool.Names.SNAPSHOT_DATA);, +++ b/src/main/java/org/elasticsearch/common/blobstore/url/URLBlobStore.java, +import org.elasticsearch.threadpool.ThreadPool;, +    private final ThreadPool threadPool;, +     * @param threadPool thread pool for read operations, +    public URLBlobStore(Settings settings, ThreadPool threadPool, URL path) {, +        this.threadPool = threadPool;, +        return threadPool.executor(ThreadPool.Names.SNAPSHOT_DATA);, +++ b/docs/reference/modules/snapshots.asciidoc, +++ b/docs/reference/modules/threadpool.asciidoc, +`snapshot`::, +    For snapshot/restore operations, defaults to `scaling`, +    keep-alive `5m`,, +    size `(# of available processors)/2`., +, +`snapshot_data`::, +    For snapshot/restore operations on data files, defaults to `scaling`, +    with a `5m` keep-alive,, +    size `5`., +, +++ b/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobStore.java, +import org.elasticsearch.threadpool.ThreadPool;, +    private final ThreadPool threadPool;, +    public FsBlobStore(Settings settings, ThreadPool threadPool, File path) {, +        this.threadPool = threadPool;, +        return threadPool.executor(ThreadPool.Names.SNAPSHOT_DATA);, +++ b/src/main/java/org/elasticsearch/common/blobstore/url/URLBlobStore.java, +import org.elasticsearch.threadpool.ThreadPool;, +    private final ThreadPool threadPool;, +     * @param threadPool thread pool for read operations, +    public URLBlobStore(Settings settings, ThreadPool threadPool, URL path) {, +        this.threadPool = threadPool;, +        return threadPool.executor(ThreadPool.Names.SNAPSHOT_DATA);, +++ b/src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java, +import org.elasticsearch.indices.recovery.RecoveryState;, +                threadPool.executor(ThreadPool.Names.FLUSH).execute(new Runnable() {, +++ b/docs/reference/modules/snapshots.asciidoc, +++ b/docs/reference/modules/threadpool.asciidoc, +`snapshot`::, +    For snapshot/restore operations, defaults to `scaling`, +    keep-alive `5m`,, +    size `(# of available processors)/2`., +, +`snapshot_data`::, +    For snapshot/restore operations on data files, defaults to `scaling`, +    with a `5m` keep-alive,, +    size `5`., +, +++ b/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobStore.java, +import org.elasticsearch.threadpool.ThreadPool;, +    private final ThreadPool threadPool;, +    public FsBlobStore(Settings settings, ThreadPool threadPool, File path) {]