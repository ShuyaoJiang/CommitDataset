[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/plugins/RemovePluginCommand.java, +import java.util.Locale;, + * A command for the plugin CLI to remove a plugin from Elasticsearch., +        super("removes a plugin from Elasticsearch");, +    protected void execute(final Terminal terminal, final OptionSet options, final Environment env), +            throws Exception {, +        final String pluginName = arguments.value(options);, +        execute(terminal, pluginName, env);, +    void execute(final Terminal terminal, final String pluginName, final Environment env), +            throws IOException, UserException {, +        terminal.println("-> removing [" + Strings.coalesceToEmpty(pluginName) + "]...");, +            final String message = String.format(, +                    Locale.ROOT,, +                    "plugin [%s] not found; ", +                            + "run 'elasticsearch-plugin list' to get list of installed plugins",, +                    pluginName);, +            throw new UserException(ExitCodes.CONFIG, message);, +                throw new UserException(, +                        ExitCodes.IO_ERROR, "bin dir for " + pluginName + " is not a directory");, +            terminal.println(VERBOSE, "removing [" + pluginBinDir + "]");, +        terminal.println(VERBOSE, "removing [" + pluginDir + "]");, +            /*, +             * On a union file system if the plugin that we are removing is not installed on the, +             * top layer then atomic move will not be supported. In this case, we fall back to a, +             * non-atomic move., +             */, +        /*, +         * We preserve the config files in case the user is upgrading the plugin, but we print a, +         * message so the user knows in case they want to remove manually., +         */, +            final String message = String.format(, +                    Locale.ROOT,, +                    "-> preserving plugin config files [%s] in case of upgrade; ", +                            + "delete manually if not needed",, +                    pluginConfigDir);, +            terminal.println(message);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/plugins/RemovePluginCommand.java, +import java.util.Locale;, + * A command for the plugin CLI to remove a plugin from Elasticsearch., +        super("removes a plugin from Elasticsearch");, +    protected void execute(final Terminal terminal, final OptionSet options, final Environment env), +            throws Exception {, +        final String pluginName = arguments.value(options);, +        execute(terminal, pluginName, env);, +    void execute(final Terminal terminal, final String pluginName, final Environment env), +            throws IOException, UserException {, +        terminal.println("-> removing [" + Strings.coalesceToEmpty(pluginName) + "]...");, +            final String message = String.format(, +                    Locale.ROOT,, +                    "plugin [%s] not found; ", +                            + "run 'elasticsearch-plugin list' to get list of installed plugins",, +                    pluginName);, +            throw new UserException(ExitCodes.CONFIG, message);, +                throw new UserException(, +                        ExitCodes.IO_ERROR, "bin dir for " + pluginName + " is not a directory");, +            terminal.println(VERBOSE, "removing [" + pluginBinDir + "]");, +        terminal.println(VERBOSE, "removing [" + pluginDir + "]");, +            /*, +             * On a union file system if the plugin that we are removing is not installed on the, +             * top layer then atomic move will not be supported. In this case, we fall back to a, +             * non-atomic move., +             */, +        /*, +         * We preserve the config files in case the user is upgrading the plugin, but we print a, +         * message so the user knows in case they want to remove manually., +         */, +            final String message = String.format(, +                    Locale.ROOT,, +                    "-> preserving plugin config files [%s] in case of upgrade; ", +                            + "delete manually if not needed",, +                    pluginConfigDir);, +            terminal.println(message);, +++ b/qa/evil-tests/src/test/java/org/elasticsearch/plugins/RemovePluginCommandTests.java, +        assertTrue(e.getMessage(), e.getMessage().contains("plugin [dne] not found"));, +        assertEquals("plugin [fake] not found; run 'elasticsearch-plugin list' to get list of installed plugins", e.getMessage());, +            assertEquals("-> removing [fake]...", reader.readLine());, +            assertEquals("ERROR: plugin [fake] not found; run 'elasticsearch-plugin list' to get list of installed plugins",, +        return "-> preserving plugin config files [" + configDir + "] in case of upgrade; delete manually if not needed";]