[+++ b/rest-api-spec/test/indices.stats/12_level.yaml, +  - do:, +      cluster.health:, +          wait_for_status: yellow, +, +++ b/rest-api-spec/test/indices.stats/12_level.yaml, +  - do:, +      cluster.health:, +          wait_for_status: yellow, +, +++ b/src/main/java/org/elasticsearch/rest/action/admin/indices/analyze/RestAnalyzeAction.java, +import org.elasticsearch.common.bytes.BytesArray;, +, +, +        if (request.hasContent() || request.hasParam("source")) {, +            XContentType type = contentType(request);, +                    text = bodyContent(request).toUtf8();, +                buildFromContent(bodyContent(request), analyzeRequest);, +    private XContentType contentType(final RestRequest request) {, +        if (request.hasContent()) {, +            return XContentFactory.xContentType(request.content());, +        } else if (request.hasParam("source")) {, +            return XContentFactory.xContentType(request.param("source"));, +        }, +        throw new ElasticsearchIllegalArgumentException("Can't guess contentType neither source nor content available");, +    }, +, +    private BytesReference bodyContent(final RestRequest request) {, +        if (request.hasContent()) {, +            return request.content();, +        } else if (request.hasParam("source")) {, +            return new BytesArray(request.param("source"));, +        }, +        throw new ElasticsearchIllegalArgumentException("Can't guess contentType neither source nor content available");, +    }, +, +++ b/rest-api-spec/test/indices.stats/12_level.yaml, +  - do:, +      cluster.health:, +          wait_for_status: yellow, +, +++ b/src/main/java/org/elasticsearch/rest/action/admin/indices/analyze/RestAnalyzeAction.java, +import org.elasticsearch.common.bytes.BytesArray;, +, +, +        if (request.hasContent() || request.hasParam("source")) {, +            XContentType type = contentType(request);, +                    text = bodyContent(request).toUtf8();, +                buildFromContent(bodyContent(request), analyzeRequest);, +    private XContentType contentType(final RestRequest request) {, +        if (request.hasContent()) {, +            return XContentFactory.xContentType(request.content());, +        } else if (request.hasParam("source")) {, +            return XContentFactory.xContentType(request.param("source"));, +        }, +        throw new ElasticsearchIllegalArgumentException("Can't guess contentType neither source nor content available");, +    }, +, +    private BytesReference bodyContent(final RestRequest request) {, +        if (request.hasContent()) {, +            return request.content();, +        } else if (request.hasParam("source")) {, +            return new BytesArray(request.param("source"));, +        }, +        throw new ElasticsearchIllegalArgumentException("Can't guess contentType neither source nor content available");, +    }, +, +++ b/src/main/java/org/elasticsearch/rest/action/search/RestSearchScrollAction.java, +import org.elasticsearch.common.bytes.BytesArray;, +        if (request.hasContent() || request.hasParam("source")) {, +            XContentType type = contentType(request);, +                    scrollId = bodyContent(request).toUtf8();, +                buildFromContent(bodyContent(request), searchScrollRequest);, +    private XContentType contentType(final RestRequest request) {, +        if (request.hasContent()) {, +            return XContentFactory.xContentType(request.content());, +        } else if (request.hasParam("source")) {, +            return XContentFactory.xContentType(request.param("source"));, +        }, +        throw new ElasticsearchIllegalArgumentException("Can't guess contentType neither source nor content available");, +    }, +, +    private BytesReference bodyContent(final RestRequest request) {, +        if (request.hasContent()) {, +            return request.content();, +        } else if (request.hasParam("source")) {, +            return new BytesArray(request.param("source"));, +        }, +        throw new ElasticsearchIllegalArgumentException("Can't guess contentType neither source nor content available");, +    }, +, +, +++ b/rest-api-spec/test/indices.stats/12_level.yaml, +  - do:, +      cluster.health:, +          wait_for_status: yellow, +, +++ b/src/main/java/org/elasticsearch/rest/action/admin/indices/analyze/RestAnalyzeAction.java, +import org.elasticsearch.common.bytes.BytesArray;, +]