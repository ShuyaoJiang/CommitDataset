[+++ b/server/src/main/java/org/elasticsearch/index/mapper/KeywordFieldMapper.java, +import org.apache.lucene.search.NormsFieldExistsQuery;, +                    TypeParsers.parseNorms(builder, name, propNode);, +            } else if (omitNorms()) {, +            } else {, +                return new NormsFieldExistsQuery(name());, +, +            if (fieldType().hasDocValues() == false && fieldType().omitNorms()) {, +        if (fieldType().hasDocValues()) {, +            fields.add(new SortedSetDocValuesField(fieldType().name(), binaryValue));, +        }, +    }, +++ b/server/src/main/java/org/elasticsearch/index/mapper/KeywordFieldMapper.java, +import org.apache.lucene.search.NormsFieldExistsQuery;, +                    TypeParsers.parseNorms(builder, name, propNode);, +            } else if (omitNorms()) {, +            } else {, +                return new NormsFieldExistsQuery(name());, +, +            if (fieldType().hasDocValues() == false && fieldType().omitNorms()) {, +        if (fieldType().hasDocValues()) {, +            fields.add(new SortedSetDocValuesField(fieldType().name(), binaryValue));, +        }, +    }, +++ b/server/src/main/java/org/elasticsearch/index/mapper/TypeParsers.java, +    public static void parseNorms(FieldMapper.Builder builder, String fieldName, Object propNode) {, +                parseNorms(builder, name, propNode);, +++ b/server/src/main/java/org/elasticsearch/index/mapper/KeywordFieldMapper.java, +import org.apache.lucene.search.NormsFieldExistsQuery;, +                    TypeParsers.parseNorms(builder, name, propNode);, +            } else if (omitNorms()) {, +            } else {, +                return new NormsFieldExistsQuery(name());, +, +            if (fieldType().hasDocValues() == false && fieldType().omitNorms()) {, +        if (fieldType().hasDocValues()) {, +            fields.add(new SortedSetDocValuesField(fieldType().name(), binaryValue));, +        }, +    }, +++ b/server/src/main/java/org/elasticsearch/index/mapper/TypeParsers.java, +    public static void parseNorms(FieldMapper.Builder builder, String fieldName, Object propNode) {, +                parseNorms(builder, name, propNode);, +++ b/server/src/test/java/org/elasticsearch/index/mapper/KeywordFieldMapperTests.java, +            .startObject("properties"), +                .startObject("field"), +                    .field("type", "keyword"), +                    .field("doc_values", false), +                    .field("norms", true), +                .endObject(), +            .endObject(), +        assertEquals(1, fields.length);, +, +        IndexableField[] fieldNamesFields = doc.rootDoc().getFields(FieldNamesFieldMapper.NAME);, +        assertEquals(0, fieldNamesFields.length);, +++ b/server/src/main/java/org/elasticsearch/index/mapper/KeywordFieldMapper.java, +import org.apache.lucene.search.NormsFieldExistsQuery;, +                    TypeParsers.parseNorms(builder, name, propNode);, +            } else if (omitNorms()) {, +            } else {, +                return new NormsFieldExistsQuery(name());, +, +            if (fieldType().hasDocValues() == false && fieldType().omitNorms()) {, +        if (fieldType().hasDocValues()) {, +            fields.add(new SortedSetDocValuesField(fieldType().name(), binaryValue));, +        }, +    }, +++ b/server/src/main/java/org/elasticsearch/index/mapper/TypeParsers.java, +    public static void parseNorms(FieldMapper.Builder builder, String fieldName, Object propNode) {, +                parseNorms(builder, name, propNode);, +++ b/server/src/test/java/org/elasticsearch/index/mapper/KeywordFieldMapperTests.java, +            .startObject("properties"), +                .startObject("field"), +                    .field("type", "keyword"), +                    .field("doc_values", false), +                    .field("norms", true), +                .endObject(), +            .endObject(), +        assertEquals(1, fields.length);, +, +        IndexableField[] fieldNamesFields = doc.rootDoc().getFields(FieldNamesFieldMapper.NAME);, +        assertEquals(0, fieldNamesFields.length);, +++ b/server/src/test/java/org/elasticsearch/index/mapper/KeywordFieldTypeTests.java, +import org.apache.lucene.search.DocValuesFieldExistsQuery;, +import org.apache.lucene.search.NormsFieldExistsQuery;, +import org.apache.lucene.search.TermInSetQuery;, +    public void testExistsQuery() {, +        MappedFieldType ft = createDefaultFieldType();, +        ft.setName("field");, +, +        ft.setHasDocValues(true);, +        ft.setOmitNorms(true);, +        assertEquals(new DocValuesFieldExistsQuery("field"), ft.existsQuery(null));, +, +        ft.setHasDocValues(false);, +        ft.setOmitNorms(false);, +        assertEquals(new NormsFieldExistsQuery("field"), ft.existsQuery(null));, +, +        ft.setHasDocValues(false);, +        ft.setOmitNorms(true);, +        assertEquals(new TermQuery(new Term(FieldNamesFieldMapper.NAME, "field")), ft.existsQuery(null));]