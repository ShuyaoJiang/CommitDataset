[+++ b/src/main/java/org/elasticsearch/indices/recovery/RecoveryState.java, +        public int hashCode() {, +            int result = name.hashCode();, +            result = 31 * result + (int) (length ^ (length >>> 32));, +            result = 31 * result + (int) (recovered ^ (recovered >>> 32));, +            result = 31 * result + (reused ? 1 : 0);, +            return result;, +        }, +, +        @Override, +++ b/src/main/java/org/elasticsearch/indices/recovery/RecoveryState.java, +        public int hashCode() {, +            int result = name.hashCode();, +            result = 31 * result + (int) (length ^ (length >>> 32));, +            result = 31 * result + (int) (recovered ^ (recovered >>> 32));, +            result = 31 * result + (reused ? 1 : 0);, +            return result;, +        }, +, +        @Override, +++ b/src/test/java/org/elasticsearch/indices/recovery/RecoveryStateTest.java, +, +    @Test, +    public void testFileHashCodeAndEquals() {, +        File f = new File("foo", randomIntBetween(0, 100), randomBoolean());, +        File anotherFile = new File(f.name(), f.length(), f.reused());, +        assertEquals(f, anotherFile);, +        assertEquals(f.hashCode(), anotherFile.hashCode());, +        int iters = randomIntBetween(10, 100);, +        for (int i = 0; i < iters; i++) {, +            f = new File("foo", randomIntBetween(0, 100), randomBoolean());, +            anotherFile = new File(f.name(), randomIntBetween(0, 100), randomBoolean());, +            if (f.equals(anotherFile)) {, +                assertEquals(f.hashCode(), anotherFile.hashCode());, +            } else if (f.hashCode() != anotherFile.hashCode()) {, +               assertFalse(f.equals(anotherFile));, +            }, +        }, +, +    }]