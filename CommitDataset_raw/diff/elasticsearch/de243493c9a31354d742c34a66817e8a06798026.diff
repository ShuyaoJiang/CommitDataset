[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.settings.ClusterDynamicSettings;, +import org.elasticsearch.cluster.settings.DynamicSettings;, +    private final DynamicSettings dynamicSettings;, +, +                                                AllocationService allocationService, @ClusterDynamicSettings DynamicSettings dynamicSettings) {, +        this.dynamicSettings = dynamicSettings;, +                        if (dynamicSettings.hasDynamicSetting(entry.getKey()) || entry.getKey().startsWith("logger.")) {, +                        if (dynamicSettings.hasDynamicSetting(entry.getKey()) || entry.getKey().startsWith("logger.")) {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.settings.ClusterDynamicSettings;, +import org.elasticsearch.cluster.settings.DynamicSettings;, +    private final DynamicSettings dynamicSettings;, +, +                                                AllocationService allocationService, @ClusterDynamicSettings DynamicSettings dynamicSettings) {, +        this.dynamicSettings = dynamicSettings;, +                        if (dynamicSettings.hasDynamicSetting(entry.getKey()) || entry.getKey().startsWith("logger.")) {, +                        if (dynamicSettings.hasDynamicSetting(entry.getKey()) || entry.getKey().startsWith("logger.")) {, +++ b/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.settings.ClusterDynamicSettingsModule;, +import org.elasticsearch.index.settings.IndexDynamicSettingsModule;, +        return ImmutableList.of(new AllocationModule(settings),, +                new OperationRoutingModule(settings),, +                new ClusterDynamicSettingsModule(),, +                new IndexDynamicSettingsModule());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.settings.ClusterDynamicSettings;, +import org.elasticsearch.cluster.settings.DynamicSettings;, +    private final DynamicSettings dynamicSettings;, +, +                                                AllocationService allocationService, @ClusterDynamicSettings DynamicSettings dynamicSettings) {, +        this.dynamicSettings = dynamicSettings;, +                        if (dynamicSettings.hasDynamicSetting(entry.getKey()) || entry.getKey().startsWith("logger.")) {, +                        if (dynamicSettings.hasDynamicSetting(entry.getKey()) || entry.getKey().startsWith("logger.")) {, +++ b/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.settings.ClusterDynamicSettingsModule;, +import org.elasticsearch.index.settings.IndexDynamicSettingsModule;, +        return ImmutableList.of(new AllocationModule(settings),, +                new OperationRoutingModule(settings),, +                new ClusterDynamicSettingsModule(),, +                new IndexDynamicSettingsModule());, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import java.util.HashMap;, +import java.util.Locale;, +import java.util.Map;, +import static org.elasticsearch.cluster.node.DiscoveryNodeFilters.OpType.AND;, +import static org.elasticsearch.cluster.node.DiscoveryNodeFilters.OpType.OR;, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.settings.ClusterDynamicSettings;, +import org.elasticsearch.cluster.settings.DynamicSettings;, +    private final DynamicSettings dynamicSettings;, +, +                                                AllocationService allocationService, @ClusterDynamicSettings DynamicSettings dynamicSettings) {, +        this.dynamicSettings = dynamicSettings;, +                        if (dynamicSettings.hasDynamicSetting(entry.getKey()) || entry.getKey().startsWith("logger.")) {, +                        if (dynamicSettings.hasDynamicSetting(entry.getKey()) || entry.getKey().startsWith("logger.")) {, +++ b/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.settings.ClusterDynamicSettingsModule;, +import org.elasticsearch.index.settings.IndexDynamicSettingsModule;, +        return ImmutableList.of(new AllocationModule(settings),, +                new OperationRoutingModule(settings),, +                new ClusterDynamicSettingsModule(),, +                new IndexDynamicSettingsModule());, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import java.util.HashMap;, +import java.util.Locale;, +import java.util.Map;, +import static org.elasticsearch.cluster.node.DiscoveryNodeFilters.OpType.AND;, +import static org.elasticsearch.cluster.node.DiscoveryNodeFilters.OpType.OR;, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.settings.ClusterDynamicSettings;, +import org.elasticsearch.cluster.settings.DynamicSettings;, +    private final DynamicSettings dynamicSettings;, +, +                                                AllocationService allocationService, @ClusterDynamicSettings DynamicSettings dynamicSettings) {, +        this.dynamicSettings = dynamicSettings;, +                        if (dynamicSettings.hasDynamicSetting(entry.getKey()) || entry.getKey().startsWith("logger.")) {, +                        if (dynamicSettings.hasDynamicSetting(entry.getKey()) || entry.getKey().startsWith("logger.")) {, +++ b/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.settings.ClusterDynamicSettingsModule;, +import org.elasticsearch.index.settings.IndexDynamicSettingsModule;, +        return ImmutableList.of(new AllocationModule(settings),, +                new OperationRoutingModule(settings),, +                new ClusterDynamicSettingsModule(),, +                new IndexDynamicSettingsModule());, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import java.util.HashMap;, +import java.util.Locale;, +import java.util.Map;, +import static org.elasticsearch.cluster.node.DiscoveryNodeFilters.OpType.AND;, +import static org.elasticsearch.cluster.node.DiscoveryNodeFilters.OpType.OR;, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +import org.elasticsearch.cluster.settings.DynamicSettings;, +import org.elasticsearch.index.settings.IndexDynamicSettings;, +    private final DynamicSettings dynamicSettings;, +, +    public MetaDataUpdateSettingsService(Settings settings, ClusterService clusterService, AllocationService allocationService, @IndexDynamicSettings DynamicSettings dynamicSettings) {, +        this.dynamicSettings = dynamicSettings;]