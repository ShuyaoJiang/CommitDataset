[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/LoggedExec.groovy, +            standardOutput = new ByteArrayOutputStream(), +            errorOutput = standardOutput, +                    standardOutput.toString('UTF-8').eachLine { line -> logger.error(line) }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/LoggedExec.groovy, +            standardOutput = new ByteArrayOutputStream(), +            errorOutput = standardOutput, +                    standardOutput.toString('UTF-8').eachLine { line -> logger.error(line) }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/BatsOverVagrantTask.groovy, +class BatsOverVagrantTask extends DefaultTask {, +  String boxName, +  ExecAction execAction, +    execAction = getExecActionFactory().newExecAction(), +  @Inject, +  ProgressLoggerFactory getProgressLoggerFactory() {, +    throw new UnsupportedOperationException();, +  }, +, +  @Inject, +  ExecActionFactory getExecActionFactory() {, +    throw new UnsupportedOperationException();, +  }, +, +  void boxName(String boxName) {, +    this.boxName = boxName, +  }, +, +  void command(String command) {, +    this.command = command, +  }, +, +  @TaskAction, +  void exec() {, +    // It'd be nice if --machine-readable were, well, nice, +    execAction.commandLine(['vagrant', 'ssh', boxName, '--command', command]), +    execAction.setStandardOutput(new TapLoggerOutputStream(, +      command: command,, +      logger: logger)), +    execAction.execute();, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/LoggedExec.groovy, +            standardOutput = new ByteArrayOutputStream(), +            errorOutput = standardOutput, +                    standardOutput.toString('UTF-8').eachLine { line -> logger.error(line) }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/BatsOverVagrantTask.groovy, +class BatsOverVagrantTask extends DefaultTask {, +  String boxName, +  ExecAction execAction, +    execAction = getExecActionFactory().newExecAction(), +  @Inject, +  ProgressLoggerFactory getProgressLoggerFactory() {, +    throw new UnsupportedOperationException();, +  }, +, +  @Inject, +  ExecActionFactory getExecActionFactory() {, +    throw new UnsupportedOperationException();, +  }, +, +  void boxName(String boxName) {, +    this.boxName = boxName, +  }, +, +  void command(String command) {, +    this.command = command, +  }, +, +  @TaskAction, +  void exec() {, +    // It'd be nice if --machine-readable were, well, nice, +    execAction.commandLine(['vagrant', 'ssh', boxName, '--command', command]), +    execAction.setStandardOutput(new TapLoggerOutputStream(, +      command: command,, +      logger: logger)), +    execAction.execute();, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/TapLoggerOutputStream.groovy, +    progressLogger.setDescription("TAP output for $args.command"), +    progressLogger.progress("Starting $args.command..."), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/LoggedExec.groovy, +            standardOutput = new ByteArrayOutputStream(), +            errorOutput = standardOutput, +                    standardOutput.toString('UTF-8').eachLine { line -> logger.error(line) }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/BatsOverVagrantTask.groovy, +class BatsOverVagrantTask extends DefaultTask {, +  String boxName, +  ExecAction execAction, +    execAction = getExecActionFactory().newExecAction(), +  @Inject, +  ProgressLoggerFactory getProgressLoggerFactory() {, +    throw new UnsupportedOperationException();, +  }, +, +  @Inject, +  ExecActionFactory getExecActionFactory() {, +    throw new UnsupportedOperationException();, +  }, +, +  void boxName(String boxName) {, +    this.boxName = boxName, +  }, +]