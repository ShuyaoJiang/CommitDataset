[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +                // We're about to send a second update task, so we need to check if we're still the elected master, +                // For example the minimum_master_node could have been breached and we're no longer elected master,, +                // so we should *not* execute the reroute., +                if (!clusterService.state().nodes().localNodeMaster()) {, +                    logger.debug("Skipping reroute after cluster update settings, because node is no longer master");, +                    listener.onResponse(new ClusterUpdateSettingsResponse(updateSettingsAcked, transientUpdates.build(), persistentUpdates.build()));, +                    return;, +                }, +, +                // The reason the reroute needs to be send as separate update task, is that all the *cluster* settings are encapsulate, +                // in the components (e.g. FilterAllocationDecider), so the changes made by the first call aren't visible, +                // to the components until the ClusterStateListener instances have been invoked, but are visible after, +                // the first update task has been completed., +                        listener.onFailure(new ElasticsearchException("reroute after update settings failed", t));]