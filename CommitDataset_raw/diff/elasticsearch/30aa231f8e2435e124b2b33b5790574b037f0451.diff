[+++ b/core/src/main/java/org/elasticsearch/plugins/PluginManager.java, +                    "discovery-ec2",, +                    "mapper-size",, +                    "repository-s3", +++ b/core/src/main/java/org/elasticsearch/plugins/PluginManager.java, +                    "discovery-ec2",, +                    "mapper-size",, +                    "repository-s3", +++ b/core/src/test/java/org/elasticsearch/NamingConventionTests.java, +import com.google.common.base.Joiner;, +import com.google.common.collect.Sets;, +, +import org.elasticsearch.common.SuppressForbidden;, +import org.junit.Ignore;, +import java.nio.file.*;, +                " match the naming convention. Concrete classes must end with [Test|Tests]:\n" + Joiner.on('\n').join(missingSuffix),, +        assertTrue("Classes ending with [Test|Tests] are abstract or interfaces:\n" + Joiner.on('\n').join(notRunnable),, +        assertTrue("Classes ending with [Test|Tests] must subclass [" + classesToSubclass +"]:\n" + Joiner.on('\n').join(notImplementing),, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginManager.java, +                    "discovery-ec2",, +                    "mapper-size",, +                    "repository-s3", +++ b/core/src/test/java/org/elasticsearch/NamingConventionTests.java, +import com.google.common.base.Joiner;, +import com.google.common.collect.Sets;, +, +import org.elasticsearch.common.SuppressForbidden;, +import org.junit.Ignore;, +import java.nio.file.*;, +                " match the naming convention. Concrete classes must end with [Test|Tests]:\n" + Joiner.on('\n').join(missingSuffix),, +        assertTrue("Classes ending with [Test|Tests] are abstract or interfaces:\n" + Joiner.on('\n').join(notRunnable),, +        assertTrue("Classes ending with [Test|Tests] must subclass [" + classesToSubclass +"]:\n" + Joiner.on('\n').join(notImplementing),, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginManager.java, +                    "discovery-ec2",, +                    "mapper-size",, +                    "repository-s3", +++ b/core/src/test/java/org/elasticsearch/NamingConventionTests.java, +import com.google.common.base.Joiner;, +import com.google.common.collect.Sets;, +, +import org.elasticsearch.common.SuppressForbidden;, +import org.junit.Ignore;, +import java.nio.file.*;, +                " match the naming convention. Concrete classes must end with [Test|Tests]:\n" + Joiner.on('\n').join(missingSuffix),, +        assertTrue("Classes ending with [Test|Tests] are abstract or interfaces:\n" + Joiner.on('\n').join(notRunnable),, +        assertTrue("Classes ending with [Test|Tests] must subclass [" + classesToSubclass +"]:\n" + Joiner.on('\n').join(notImplementing),, +++ /dev/null, +++ b/docs/plugins/discovery-ec2.asciidoc, +[[discovery-ec2]], +=== EC2 Discovery Plugin, +, +The EC2 discovery plugin uses the https://github.com/aws/aws-sdk-java[AWS API] for unicast discovery., +, +[[discovery-ec2-install]], +[float], +==== Installation, +, +This plugin can be installed using the plugin manager:, +, +[source,sh], +----------------------------------------------------------------, +sudo bin/plugin install discovery-ec2, +----------------------------------------------------------------, +, +The plugin must be installed on every node in the cluster, and each node must, +be restarted after installation., +, +[[discovery-ec2-remove]], +[float], +==== Removal, +, +The plugin can be removed with the following command:, +, +[source,sh], +----------------------------------------------------------------, +sudo bin/plugin remove discovery-ec2, +----------------------------------------------------------------, +, +The node must be stopped before removing the plugin., +, +[[discovery-ec2-usage]], +==== Getting started with AWS, +, +The plugin will default to using, +http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html[IAM Role], +credentials for authentication. These can be overridden by, in increasing, +order of precedence, system properties `aws.accessKeyId` and `aws.secretKey`,, +environment variables `AWS_ACCESS_KEY_ID` and `AWS_SECRET_KEY`, or the, +elasticsearch config using `cloud.aws.access_key` and `cloud.aws.secret_key`:, +, +[source,yaml], +----, +cloud:, +    aws:, +        access_key: AKVAIQBF2RECL7FJWGJQ, +        secret_key: vExyMThREXeRMm/b/LRzEB8jWwvzQeXgjqMX+6br, +----, +, +[[discovery-ec2-usage-security]]]