[+++ b/buildSrc/build.gradle, +    distribution project(':distribution:archives:windows-zip'), +    distribution project(':distribution:archives:oss-windows-zip'), +    distribution project(':distribution:archives:darwin-tar'), +    distribution project(':distribution:archives:oss-darwin-tar'), +    distribution project(':distribution:archives:linux-tar'), +    distribution project(':distribution:archives:oss-linux-tar'), +++ b/buildSrc/build.gradle, +    distribution project(':distribution:archives:windows-zip'), +    distribution project(':distribution:archives:oss-windows-zip'), +    distribution project(':distribution:archives:darwin-tar'), +    distribution project(':distribution:archives:oss-darwin-tar'), +    distribution project(':distribution:archives:linux-tar'), +    distribution project(':distribution:archives:oss-linux-tar'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        String os = getOs(), +        String classifier = "${os}-x86_64", +        String packaging = os.equals('windows') ? 'zip' : 'tar.gz', +        String snapshotProject = "${os}-${os.equals('windows') ? 'zip' : 'tar'}", +        if (version.before("7.0.0")) {, +            snapshotProject = "zip", +        }, +        if (distro.equals("oss")) {, +            snapshotProject = "oss-" + snapshotProject, +        }, +            dependency = project.dependencies.project(, +                        path: ":distribution:bwc:${unreleasedInfo.gradleProjectName}", configuration: snapshotProject), +            if (version.before('7.0.0')) {, +                classifier = "" // for bwc, before we had classifiers, +            }, +            // group does not matter as it is not used when we pull from the ivy repo that points to the download service, +            dependency = "dnm:${artifactName}:${elasticsearchVersion}${classifier}@${packaging}", +            if (getOs().equals("windows")) {, +            } else {, +                // macos and linux use tar, +                from {, +                    project.tarTree(project.resources.gzip(configuration.singleFile)), +                }, +            }, +, +    /** Find the current OS */, +    static String getOs() {, +        String os = "linux", +        if (Os.FAMILY_WINDOWS) {, +            os = "windows", +        } else if (Os.FAMILY_MAC) {, +            os = "darwin", +        }, +        return os, +    }, +++ b/buildSrc/build.gradle, +    distribution project(':distribution:archives:windows-zip'), +    distribution project(':distribution:archives:oss-windows-zip'), +    distribution project(':distribution:archives:darwin-tar'), +    distribution project(':distribution:archives:oss-darwin-tar'), +    distribution project(':distribution:archives:linux-tar'), +    distribution project(':distribution:archives:oss-linux-tar'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        String os = getOs(), +        String classifier = "${os}-x86_64", +        String packaging = os.equals('windows') ? 'zip' : 'tar.gz', +        String snapshotProject = "${os}-${os.equals('windows') ? 'zip' : 'tar'}", +        if (version.before("7.0.0")) {, +            snapshotProject = "zip", +        }, +        if (distro.equals("oss")) {, +            snapshotProject = "oss-" + snapshotProject, +        }, +            dependency = project.dependencies.project(, +                        path: ":distribution:bwc:${unreleasedInfo.gradleProjectName}", configuration: snapshotProject), +            if (version.before('7.0.0')) {, +                classifier = "" // for bwc, before we had classifiers, +            }, +            // group does not matter as it is not used when we pull from the ivy repo that points to the download service, +            dependency = "dnm:${artifactName}:${elasticsearchVersion}${classifier}@${packaging}", +            if (getOs().equals("windows")) {, +            } else {, +                // macos and linux use tar, +                from {, +                    project.tarTree(project.resources.gzip(configuration.singleFile)), +                }, +            }, +, +    /** Find the current OS */, +    static String getOs() {, +        String os = "linux", +        if (Os.FAMILY_WINDOWS) {, +            os = "windows", +        } else if (Os.FAMILY_MAC) {, +            os = "darwin", +        }, +        return os, +    }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +            'archives:linux-tar',, +            'archives:oss-linux-tar',, +            'archives:windows-zip',, +            'archives:oss-windows-zip',, +++ b/buildSrc/build.gradle, +    distribution project(':distribution:archives:windows-zip')]