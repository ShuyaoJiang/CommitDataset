[+++ b/src/main/java/org/elasticsearch/shield/ssl/SSLService.java, +        String keyPassword = settings.get("keystore.key_password", componentSettings.get("keystore.key_password", keyStorePassword));, +            KeyManagerFactory keyManagerFactory = createKeyManagerFactory(keyStorePath, keyStorePassword, keyStoreAlgorithm, keyPassword);, +    private KeyManagerFactory createKeyManagerFactory(String keyStore, String keyStorePassword, String keyStoreAlgorithm, String keyPassword) {, +            kmf.init(ks, keyPassword.toCharArray());, +++ b/src/main/java/org/elasticsearch/shield/ssl/SSLService.java, +        String keyPassword = settings.get("keystore.key_password", componentSettings.get("keystore.key_password", keyStorePassword));, +            KeyManagerFactory keyManagerFactory = createKeyManagerFactory(keyStorePath, keyStorePassword, keyStoreAlgorithm, keyPassword);, +    private KeyManagerFactory createKeyManagerFactory(String keyStore, String keyStorePassword, String keyStoreAlgorithm, String keyPassword) {, +            kmf.init(ks, keyPassword.toCharArray());, +++ b/src/test/java/org/elasticsearch/shield/ssl/SSLServiceTests.java, +import java.nio.file.Path;, +import java.nio.file.Paths;, +    Path testnodeStore;, +        testnodeStore = Paths.get(getClass().getResource("/org/elasticsearch/shield/transport/ssl/certs/simple/testnode.jks").toURI());, +                            .put("shield.ssl.keystore.path", testnodeStore), +                            .put("shield.ssl.truststore.path", testnodeStore), +        Path testClientStore = Paths.get(getClass().getResource("/org/elasticsearch/shield/transport/ssl/certs/simple/testclient.jks").toURI());, +                .put("shield.ssl.keystore.path", testnodeStore), +                .put("truststore.path", testClientStore), +            .put("shield.ssl.keystore.path", testnodeStore), +, +    @Test, +    public void testThatKeyStoreAndKeyCanHaveDifferentPasswords() throws Exception {, +        Path differentPasswordsStore = Paths.get(getClass().getResource("/org/elasticsearch/shield/transport/ssl/certs/simple/testnode-different-passwords.jks").toURI());, +        new SSLService(settingsBuilder(), +                .put("shield.ssl.keystore.path", differentPasswordsStore), +                .put("shield.ssl.keystore.password", "testnode"), +                .put("shield.ssl.keystore.key_password", "testnode1"), +                .build()).createSSLEngine();, +    }, +, +    @Test(expected = ElasticsearchSSLException.class), +    public void testIncorrectKeyPasswordThrowsException() throws Exception {, +        Path differentPasswordsStore = Paths.get(getClass().getResource("/org/elasticsearch/shield/transport/ssl/certs/simple/testnode-different-passwords.jks").toURI());, +        new SSLService(settingsBuilder(), +                .put("shield.ssl.keystore.path", differentPasswordsStore), +                .put("shield.ssl.keystore.password", "testnode"), +                .build()).createSSLEngine();, +    }, +++ b/src/main/java/org/elasticsearch/shield/ssl/SSLService.java, +        String keyPassword = settings.get("keystore.key_password", componentSettings.get("keystore.key_password", keyStorePassword));, +            KeyManagerFactory keyManagerFactory = createKeyManagerFactory(keyStorePath, keyStorePassword, keyStoreAlgorithm, keyPassword);, +    private KeyManagerFactory createKeyManagerFactory(String keyStore, String keyStorePassword, String keyStoreAlgorithm, String keyPassword) {, +            kmf.init(ks, keyPassword.toCharArray());, +++ b/src/test/java/org/elasticsearch/shield/ssl/SSLServiceTests.java, +import java.nio.file.Path;, +import java.nio.file.Paths;, +    Path testnodeStore;, +        testnodeStore = Paths.get(getClass().getResource("/org/elasticsearch/shield/transport/ssl/certs/simple/testnode.jks").toURI());, +                            .put("shield.ssl.keystore.path", testnodeStore), +                            .put("shield.ssl.truststore.path", testnodeStore), +        Path testClientStore = Paths.get(getClass().getResource("/org/elasticsearch/shield/transport/ssl/certs/simple/testclient.jks").toURI());, +                .put("shield.ssl.keystore.path", testnodeStore), +                .put("truststore.path", testClientStore), +            .put("shield.ssl.keystore.path", testnodeStore), +, +    @Test, +    public void testThatKeyStoreAndKeyCanHaveDifferentPasswords() throws Exception {, +        Path differentPasswordsStore = Paths.get(getClass().getResource("/org/elasticsearch/shield/transport/ssl/certs/simple/testnode-different-passwords.jks").toURI());, +        new SSLService(settingsBuilder(), +                .put("shield.ssl.keystore.path", differentPasswordsStore), +                .put("shield.ssl.keystore.password", "testnode"), +                .put("shield.ssl.keystore.key_password", "testnode1"), +                .build()).createSSLEngine();, +    }, +, +    @Test(expected = ElasticsearchSSLException.class), +    public void testIncorrectKeyPasswordThrowsException() throws Exception {, +        Path differentPasswordsStore = Paths.get(getClass().getResource("/org/elasticsearch/shield/transport/ssl/certs/simple/testnode-different-passwords.jks").toURI());, +        new SSLService(settingsBuilder(), +                .put("shield.ssl.keystore.path", differentPasswordsStore), +                .put("shield.ssl.keystore.password", "testnode"), +                .build()).createSSLEngine();, +    }, +++ b/src/test/resources/org/elasticsearch/shield/transport/ssl/certs/simple/testnode-different-passwords.jks]