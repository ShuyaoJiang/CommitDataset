[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/config/Job.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.Nullable;, +    public static final ParseField JOB_VERSION = new ParseField("job_version");, +        PARSER.declareString(Builder::setJobVersion, JOB_VERSION);, +, +    /**, +     * The version when the job was created., +     * Will be null for versions before 5.5., +     */, +    @Nullable, +    private final Version jobVersion;, +, +    private Job(String jobId, String jobType, Version jobVersion, String description, Date createTime,, +        this.jobVersion = jobVersion;, +        if (in.getVersion().onOrAfter(Version.V_5_5_0_UNRELEASED)) {, +            jobVersion = in.readBoolean() ? Version.readVersion(in) : null;, +        } else {, +            jobVersion = null;, +        }, +    public Version getJobVersion() {, +        return jobVersion;, +    }, +, +        if (out.getVersion().onOrAfter(Version.V_5_5_0_UNRELEASED)) {, +            if (jobVersion != null) {, +                out.writeBoolean(true);, +                Version.writeVersion(jobVersion, out);, +            } else {, +                out.writeBoolean(false);, +            }, +        }, +        if (jobVersion != null) {, +            builder.field(JOB_VERSION.getPreferredName(), jobVersion);, +        }, +        return Objects.equals(this.jobId, that.jobId), +                && Objects.equals(this.jobType, that.jobType), +                && Objects.equals(this.jobVersion, that.jobVersion), +                && Objects.equals(this.description, that.description), +        return Objects.hash(jobId, jobType, jobVersion, description, createTime, finishedTime, lastDataTime, analysisConfig,, +    // Class already extends from AbstractDiffable, so copied from ToXContentToBytes#toString(), +        private Version jobVersion;, +            this.jobType = job.getJobType();, +            this.jobVersion = job.getJobVersion();, +            if (in.getVersion().onOrAfter(Version.V_5_5_0_UNRELEASED)) {, +                jobVersion = in.readBoolean() ? Version.readVersion(in) : null;, +            }, +        public void setJobVersion(Version jobVersion) {, +            this.jobVersion = jobVersion;, +        }, +, +        private void setJobVersion(String jobVersion) {, +            this.jobVersion = Version.fromString(jobVersion);, +        }, +, +            if (out.getVersion().onOrAfter(Version.V_5_5_0_UNRELEASED)) {, +                if (jobVersion != null) {, +                    out.writeBoolean(true);, +                    Version.writeVersion(jobVersion, out);, +                } else {, +                    out.writeBoolean(false);, +                }, +            }, +            if (jobVersion != null) {, +                builder.field(JOB_VERSION.getPreferredName(), jobVersion);, +            }, +                    && Objects.equals(this.jobType, that.jobType), +                    && Objects.equals(this.jobVersion, that.jobVersion), +            return Objects.hash(id, jobType, jobVersion, description, analysisConfig, analysisLimits, dataDescription, createTime,, +                    finishedTime, lastDataTime, modelPlotConfig, renormalizationWindowDays, backgroundPersistInterval,, +                    modelSnapshotRetentionDays, resultsRetentionDays, customSettings, modelSnapshotId, resultsIndexName, deleted);, +        /**, +         * Builds a job with the given {@code createTime} and the current version., +         * This should be used when a new job is created as opposed to {@link #build()}., +         *, +         * @param createTime The time this job was created, +         * @return The job, +         */, +            setJobVersion(Version.CURRENT);, +        /**, +         * Builds a job., +         * This should be used when an existing job is being built, +         * as opposed to {@link #build(Date)}., +         *, +         * @return The job, +         */, +                    id, jobType, jobVersion, description, createTime, finishedTime, lastDataTime,, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/config/Job.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.Nullable;, +    public static final ParseField JOB_VERSION = new ParseField("job_version");, +        PARSER.declareString(Builder::setJobVersion, JOB_VERSION);, +, +    /**, +     * The version when the job was created., +     * Will be null for versions before 5.5., +     */, +    @Nullable, +    private final Version jobVersion;, +]