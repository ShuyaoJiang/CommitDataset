[+++ b/build.gradle, +    "org.elasticsearch.plugin:parent-join-client:${version}": ':modules:parent-join',, +++ b/build.gradle, +    "org.elasticsearch.plugin:parent-join-client:${version}": ':modules:parent-join',, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/build.gradle, +    "org.elasticsearch.plugin:parent-join-client:${version}": ':modules:parent-join',, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/rest-high-level/build.gradle, +  // for parent/child testing, +  testCompile "org.elasticsearch.plugin:parent-join-client:${version}", +++ b/build.gradle, +    "org.elasticsearch.plugin:parent-join-client:${version}": ':modules:parent-join',, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/rest-high-level/build.gradle, +  // for parent/child testing, +  testCompile "org.elasticsearch.plugin:parent-join-client:${version}", +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +import static org.elasticsearch.join.query.JoinQueryBuilders.hasChildQuery;, +import static org.elasticsearch.join.query.JoinQueryBuilders.hasParentQuery;, +++ b/build.gradle, +    "org.elasticsearch.plugin:parent-join-client:${version}": ':modules:parent-join',, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/rest-high-level/build.gradle, +  // for parent/child testing, +  testCompile "org.elasticsearch.plugin:parent-join-client:${version}", +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +import static org.elasticsearch.join.query.JoinQueryBuilders.hasChildQuery;, +import static org.elasticsearch.join.query.JoinQueryBuilders.hasParentQuery;, +++ b/client/transport/build.gradle, +  compile "org.elasticsearch.plugin:parent-join-client:${version}", +++ b/build.gradle, +    "org.elasticsearch.plugin:parent-join-client:${version}": ':modules:parent-join',, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/rest-high-level/build.gradle, +  // for parent/child testing, +  testCompile "org.elasticsearch.plugin:parent-join-client:${version}", +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +import static org.elasticsearch.join.query.JoinQueryBuilders.hasChildQuery;, +import static org.elasticsearch.join.query.JoinQueryBuilders.hasParentQuery;, +++ b/client/transport/build.gradle, +  compile "org.elasticsearch.plugin:parent-join-client:${version}", +++ b/client/transport/src/main/java/org/elasticsearch/transport/client/PreBuiltTransportClient.java, +import org.elasticsearch.join.ParentJoinPlugin;, + * {@link MustachePlugin},, + * {@link ParentJoinPlugin}, +                MustachePlugin.class,, +                ParentJoinPlugin.class));, +++ b/build.gradle, +    "org.elasticsearch.plugin:parent-join-client:${version}": ':modules:parent-join',, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/rest-high-level/build.gradle, +  // for parent/child testing, +  testCompile "org.elasticsearch.plugin:parent-join-client:${version}", +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +import static org.elasticsearch.join.query.JoinQueryBuilders.hasChildQuery;, +import static org.elasticsearch.join.query.JoinQueryBuilders.hasParentQuery;, +++ b/client/transport/build.gradle, +  compile "org.elasticsearch.plugin:parent-join-client:${version}", +++ b/client/transport/src/main/java/org/elasticsearch/transport/client/PreBuiltTransportClient.java, +import org.elasticsearch.join.ParentJoinPlugin;, + * {@link MustachePlugin},, + * {@link ParentJoinPlugin}, +                MustachePlugin.class,, +                ParentJoinPlugin.class));, +++ b/client/transport/src/test/java/org/elasticsearch/transport/client/PreBuiltTransportClientTests.java, +import org.elasticsearch.join.ParentJoinPlugin;, +        for (Class<? extends Plugin> plugin :, +                Arrays.asList(ParentJoinPlugin.class, ReindexPlugin.class, PercolatorPlugin.class, MustachePlugin.class)) {, +++ b/build.gradle, +    "org.elasticsearch.plugin:parent-join-client:${version}": ':modules:parent-join',, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/rest-high-level/build.gradle, +  // for parent/child testing, +  testCompile "org.elasticsearch.plugin:parent-join-client:${version}", +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +import static org.elasticsearch.join.query.JoinQueryBuilders.hasChildQuery;, +import static org.elasticsearch.join.query.JoinQueryBuilders.hasParentQuery;, +++ b/client/transport/build.gradle, +  compile "org.elasticsearch.plugin:parent-join-client:${version}", +++ b/client/transport/src/main/java/org/elasticsearch/transport/client/PreBuiltTransportClient.java, +import org.elasticsearch.join.ParentJoinPlugin;, + * {@link MustachePlugin},, + * {@link ParentJoinPlugin}, +                MustachePlugin.class,, +                ParentJoinPlugin.class));, +++ b/client/transport/src/test/java/org/elasticsearch/transport/client/PreBuiltTransportClientTests.java, +import org.elasticsearch.join.ParentJoinPlugin;, +        for (Class<? extends Plugin> plugin :, +                Arrays.asList(ParentJoinPlugin.class, ReindexPlugin.class, PercolatorPlugin.class, MustachePlugin.class)) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesResponse.java, +        List<RepositoryMetaData> repositoryListBuilder = new ArrayList<>(size);, +++ b/build.gradle, +    "org.elasticsearch.plugin:parent-join-client:${version}": ':modules:parent-join',, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/rest-high-level/build.gradle, +  // for parent/child testing, +  testCompile "org.elasticsearch.plugin:parent-join-client:${version}", +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +import static org.elasticsearch.join.query.JoinQueryBuilders.hasChildQuery;]