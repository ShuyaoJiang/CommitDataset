[+++ b/elasticsearch/x-pack/license-plugin/src/main/java/org/elasticsearch/license/plugin/Licensing.java, +    @Inject, +            return Collections.<Module>singletonList(new LicensingModule());, +++ b/elasticsearch/x-pack/license-plugin/src/main/java/org/elasticsearch/license/plugin/Licensing.java, +    @Inject, +            return Collections.<Module>singletonList(new LicensingModule());, +++ b/elasticsearch/x-pack/license-plugin/src/main/java/org/elasticsearch/license/plugin/LicensingModule.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.license.plugin;, +, +import org.elasticsearch.common.inject.AbstractModule;, +import org.elasticsearch.license.core.LicenseVerifier;, +import org.elasticsearch.license.plugin.core.LicenseeRegistry;, +import org.elasticsearch.license.plugin.core.LicensesManagerService;, +import org.elasticsearch.license.plugin.core.LicensesService;, +, +public class LicensingModule extends AbstractModule {, +, +    @Override, +    protected void configure() {, +        bind(LicenseVerifier.class).asEagerSingleton();, +        bind(LicensesService.class).asEagerSingleton();, +        bind(LicenseeRegistry.class).to(LicensesService.class);, +        bind(LicensesManagerService.class).to(LicensesService.class);, +    }, +, +}, +++ b/elasticsearch/x-pack/license-plugin/src/main/java/org/elasticsearch/license/plugin/Licensing.java, +    @Inject, +            return Collections.<Module>singletonList(new LicensingModule());, +++ b/elasticsearch/x-pack/license-plugin/src/main/java/org/elasticsearch/license/plugin/LicensingModule.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.license.plugin;, +, +import org.elasticsearch.common.inject.AbstractModule;, +import org.elasticsearch.license.core.LicenseVerifier;, +import org.elasticsearch.license.plugin.core.LicenseeRegistry;, +import org.elasticsearch.license.plugin.core.LicensesManagerService;, +import org.elasticsearch.license.plugin.core.LicensesService;, +, +public class LicensingModule extends AbstractModule {, +, +    @Override, +    protected void configure() {, +        bind(LicenseVerifier.class).asEagerSingleton();, +        bind(LicensesService.class).asEagerSingleton();, +        bind(LicenseeRegistry.class).to(LicensesService.class);, +        bind(LicensesManagerService.class).to(LicensesService.class);, +    }, +, +}, +++ b/elasticsearch/x-pack/license-plugin/src/main/java/org/elasticsearch/license/plugin/core/LicensesService.java, +    // pkg private for tests, +    static final TimeValue TRIAL_LICENSE_DURATION = TimeValue.timeValueHours(30 * 24);, +    public LicensesService(Settings settings, ClusterService clusterService, Clock clock) {, +        clusterService.submitStateUpdateTask("generate trial license for [" + TRIAL_LICENSE_DURATION + "]", new ClusterStateUpdateTask() {, +                            .expiryDate(issueDate + TRIAL_LICENSE_DURATION.getMillis());, +            if (currentClusterState.getNodes().isLocalNodeElectedMaster() &&, +                prevLicensesMetaData == null &&, +                (currentLicensesMetaData == null || currentLicensesMetaData.getLicense() == null)) {, +                registerTrialLicense();, +            if (clusterState.getNodes().isLocalNodeElectedMaster() &&, +                (currentMetaData == null || currentMetaData.getLicense() == null)) {, +                registerTrialLicense();, +++ b/elasticsearch/x-pack/license-plugin/src/main/java/org/elasticsearch/license/plugin/Licensing.java, +    @Inject, +            return Collections.<Module>singletonList(new LicensingModule());, +++ b/elasticsearch/x-pack/license-plugin/src/main/java/org/elasticsearch/license/plugin/LicensingModule.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.license.plugin;, +, +import org.elasticsearch.common.inject.AbstractModule;, +import org.elasticsearch.license.core.LicenseVerifier;, +import org.elasticsearch.license.plugin.core.LicenseeRegistry;, +import org.elasticsearch.license.plugin.core.LicensesManagerService;, +import org.elasticsearch.license.plugin.core.LicensesService;, +, +public class LicensingModule extends AbstractModule {, +, +    @Override, +    protected void configure() {, +        bind(LicenseVerifier.class).asEagerSingleton();, +        bind(LicensesService.class).asEagerSingleton();, +        bind(LicenseeRegistry.class).to(LicensesService.class);, +        bind(LicensesManagerService.class).to(LicensesService.class);, +    }, +, +}]