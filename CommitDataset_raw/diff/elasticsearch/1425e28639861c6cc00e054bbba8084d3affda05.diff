[+++ b/docs/reference/modules/snapshots.asciidoc, +[float], +=== Partial restore, +, +added[1.3.0], +, +By default, entire restore operation will fail if one or more indices participating in the operation don't have, +snapshots of all shards available. It can occur if some shards failed to snapshot for example. It is still possible to, +restore such indices by setting `partial` to `true`. Please note, that only successfully snapshotted shards will be, +restored in this case and all missing shards will be recreated empty., +, +++ b/docs/reference/modules/snapshots.asciidoc, +[float], +=== Partial restore, +, +added[1.3.0], +, +By default, entire restore operation will fail if one or more indices participating in the operation don't have, +snapshots of all shards available. It can occur if some shards failed to snapshot for example. It is still possible to, +restore such indices by setting `partial` to `true`. Please note, that only successfully snapshotted shards will be, +restored in this case and all missing shards will be recreated empty., +, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import org.elasticsearch.Version;, +    private boolean partial = false;, +, +     * Returns true if indices with failed to snapshot shards should be partially restored., +     *, +     * @return true if indices with failed to snapshot shards should be partially restored, +     */, +    public boolean partial() {, +        return partial;, +    }, +, +    /**, +     * Set to true to allow indices with failed to snapshot shards should be partially restored., +     *, +     * @param partial true if indices with failed to snapshot shards should be partially restored., +     * @return this request, +     */, +    public RestoreSnapshotRequest partial(boolean partial) {, +        this.partial = partial;, +        return this;, +    }, +, +    /**, +            } else if (name.equals("partial")) {, +                partial(nodeBooleanValue(entry.getValue()));, +        if (in.getVersion().onOrAfter(Version.V_1_3_0)) {, +            partial = in.readBoolean();, +        }, +        if (out.getVersion().onOrAfter(Version.V_1_3_0)) {, +            out.writeBoolean(partial);, +        }, +++ b/docs/reference/modules/snapshots.asciidoc, +[float], +=== Partial restore, +, +added[1.3.0], +, +By default, entire restore operation will fail if one or more indices participating in the operation don't have, +snapshots of all shards available. It can occur if some shards failed to snapshot for example. It is still possible to, +restore such indices by setting `partial` to `true`. Please note, that only successfully snapshotted shards will be, +restored in this case and all missing shards will be recreated empty., +, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import org.elasticsearch.Version;, +    private boolean partial = false;, +, +     * Returns true if indices with failed to snapshot shards should be partially restored., +     *, +     * @return true if indices with failed to snapshot shards should be partially restored, +     */, +    public boolean partial() {, +        return partial;, +    }, +, +    /**, +     * Set to true to allow indices with failed to snapshot shards should be partially restored., +     *, +     * @param partial true if indices with failed to snapshot shards should be partially restored., +     * @return this request, +     */, +    public RestoreSnapshotRequest partial(boolean partial) {, +        this.partial = partial;, +        return this;, +    }, +, +    /**, +            } else if (name.equals("partial")) {, +                partial(nodeBooleanValue(entry.getValue()));, +        if (in.getVersion().onOrAfter(Version.V_1_3_0)) {, +            partial = in.readBoolean();, +        }, +        if (out.getVersion().onOrAfter(Version.V_1_3_0)) {, +            out.writeBoolean(partial);, +        }, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequestBuilder.java, +    /**, +     * If set to true the restore procedure will restore partially snapshotted indices]