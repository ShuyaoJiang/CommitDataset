[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java, +        messages.put(XPackField.BEATS, new String[] {, +            "Beats will continue to poll centrally-managed configuration", +        });, +        messages.put(XPackField.BEATS, XPackLicenseState::beatsAcknowledgementMessages);, +                if (isBasic(currentMode) == false) {, +    private static String[] beatsAcknowledgementMessages(OperationMode currentMode, OperationMode newMode) {, +        switch (newMode) {, +            case BASIC:, +                if (isBasic(currentMode) == false) {, +                    return new String[] { "Beats will no longer be able to use centrally-managed configuration" };, +                }, +                break;, +        }, +        return Strings.EMPTY_ARRAY;, +    }, +, +    private static boolean isBasic(OperationMode mode) {, +        return mode == OperationMode.BASIC;, +    }, +, +        return localStatus.active && (isBasic(localStatus.mode) == false);, +    /**, +     * Beats is allowed as long as there is an active license of type TRIAL, STANDARD, GOLD or PLATINUM, +     * @return {@code true} as long as there is a valid license, +     */, +    public boolean isBeatsAllowed() {, +        Status localStatus = status;, +        return localStatus.active && (isBasic(localStatus.mode) == false);, +, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java, +        messages.put(XPackField.BEATS, new String[] {, +            "Beats will continue to poll centrally-managed configuration", +        });, +        messages.put(XPackField.BEATS, XPackLicenseState::beatsAcknowledgementMessages);, +                if (isBasic(currentMode) == false) {, +    private static String[] beatsAcknowledgementMessages(OperationMode currentMode, OperationMode newMode) {, +        switch (newMode) {, +            case BASIC:, +                if (isBasic(currentMode) == false) {, +                    return new String[] { "Beats will no longer be able to use centrally-managed configuration" };, +                }, +                break;, +        }, +        return Strings.EMPTY_ARRAY;, +    }, +, +    private static boolean isBasic(OperationMode mode) {, +        return mode == OperationMode.BASIC;, +    }, +, +        return localStatus.active && (isBasic(localStatus.mode) == false);, +    /**, +     * Beats is allowed as long as there is an active license of type TRIAL, STANDARD, GOLD or PLATINUM, +     * @return {@code true} as long as there is a valid license, +     */, +    public boolean isBeatsAllowed() {, +        Status localStatus = status;, +        return localStatus.active && (isBasic(localStatus.mode) == false);, +, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/XPackClientPlugin.java, +import org.elasticsearch.xpack.core.beats.BeatsFeatureSetUsage;, +                // beats, +                new NamedWriteableRegistry.Entry(XPackFeatureSet.Usage.class, XPackField.BEATS, BeatsFeatureSetUsage::new),, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java, +        messages.put(XPackField.BEATS, new String[] {, +            "Beats will continue to poll centrally-managed configuration", +        });, +        messages.put(XPackField.BEATS, XPackLicenseState::beatsAcknowledgementMessages);, +                if (isBasic(currentMode) == false) {, +    private static String[] beatsAcknowledgementMessages(OperationMode currentMode, OperationMode newMode) {, +        switch (newMode) {, +            case BASIC:, +                if (isBasic(currentMode) == false) {, +                    return new String[] { "Beats will no longer be able to use centrally-managed configuration" };, +                }, +                break;, +        }, +        return Strings.EMPTY_ARRAY;, +    }, +, +    private static boolean isBasic(OperationMode mode) {, +        return mode == OperationMode.BASIC;, +    }, +, +        return localStatus.active && (isBasic(localStatus.mode) == false);, +    /**, +     * Beats is allowed as long as there is an active license of type TRIAL, STANDARD, GOLD or PLATINUM, +     * @return {@code true} as long as there is a valid license, +     */, +    public boolean isBeatsAllowed() {, +        Status localStatus = status;, +        return localStatus.active && (isBasic(localStatus.mode) == false);, +, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/XPackClientPlugin.java, +import org.elasticsearch.xpack.core.beats.BeatsFeatureSetUsage;, +                // beats, +                new NamedWriteableRegistry.Entry(XPackFeatureSet.Usage.class, XPackField.BEATS, BeatsFeatureSetUsage::new),, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/XPackField.java, +    /** Name constant for the Beats feature. */]