[+++ b/rest-api-spec/test/template/20_search.yaml, +  - do:, +      catch: /ElasticsearchIllegalArgumentException.Unable.to.find.on.disk.script.simple1/, +      search_template:, +        body: { "template" : "simple1" }, +, +++ b/rest-api-spec/test/template/20_search.yaml, +  - do:, +      catch: /ElasticsearchIllegalArgumentException.Unable.to.find.on.disk.script.simple1/, +      search_template:, +        body: { "template" : "simple1" }, +, +++ b/src/main/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequest.java, +        if (in.getVersion().before(Version.V_1_5_0)) {, +            in.readOptionalString(); //Preference, +            in.readBoolean(); //Refresh, +            in.readByte(); //Realtime, +        if (in.getVersion().before(Version.V_1_5_0)) {, +            FetchSourceContext.optionalReadFromStream(in);, +        }, +        if (out.getVersion().before(Version.V_1_5_0)) {, +            out.writeOptionalString("_local"); //Preference, +            out.writeBoolean(true); //Refresh, +            out.writeByte((byte) -1); //Realtime, +        if (out.getVersion().before(Version.V_1_5_0)) {, +            FetchSourceContext.optionalWriteToStream(null, out);, +        }, +, +        return "[" + ScriptService.SCRIPT_INDEX + "][" + scriptLang + "][" + id + "]";, +++ b/rest-api-spec/test/template/20_search.yaml, +  - do:, +      catch: /ElasticsearchIllegalArgumentException.Unable.to.find.on.disk.script.simple1/, +      search_template:, +        body: { "template" : "simple1" }, +, +++ b/src/main/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequest.java, +        if (in.getVersion().before(Version.V_1_5_0)) {, +            in.readOptionalString(); //Preference, +            in.readBoolean(); //Refresh, +            in.readByte(); //Realtime, +        if (in.getVersion().before(Version.V_1_5_0)) {, +            FetchSourceContext.optionalReadFromStream(in);, +        }, +        if (out.getVersion().before(Version.V_1_5_0)) {, +            out.writeOptionalString("_local"); //Preference, +            out.writeBoolean(true); //Refresh, +            out.writeByte((byte) -1); //Realtime, +        if (out.getVersion().before(Version.V_1_5_0)) {, +            FetchSourceContext.optionalWriteToStream(null, out);, +        }, +, +        return "[" + ScriptService.SCRIPT_INDEX + "][" + scriptLang + "][" + id + "]";, +++ b/src/main/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequestBuilder.java, +++ b/rest-api-spec/test/template/20_search.yaml, +  - do:, +      catch: /ElasticsearchIllegalArgumentException.Unable.to.find.on.disk.script.simple1/, +      search_template:, +        body: { "template" : "simple1" }, +, +++ b/src/main/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequest.java, +        if (in.getVersion().before(Version.V_1_5_0)) {, +            in.readOptionalString(); //Preference, +            in.readBoolean(); //Refresh, +            in.readByte(); //Realtime, +        if (in.getVersion().before(Version.V_1_5_0)) {, +            FetchSourceContext.optionalReadFromStream(in);, +        }, +        if (out.getVersion().before(Version.V_1_5_0)) {, +            out.writeOptionalString("_local"); //Preference, +            out.writeBoolean(true); //Refresh, +            out.writeByte((byte) -1); //Realtime, +        if (out.getVersion().before(Version.V_1_5_0)) {, +            FetchSourceContext.optionalWriteToStream(null, out);, +        }, +, +        return "[" + ScriptService.SCRIPT_INDEX + "][" + scriptLang + "][" + id + "]";, +++ b/src/main/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequestBuilder.java, +++ b/src/main/java/org/elasticsearch/index/query/TemplateQueryParser.java, +++ b/rest-api-spec/test/template/20_search.yaml, +  - do:, +      catch: /ElasticsearchIllegalArgumentException.Unable.to.find.on.disk.script.simple1/, +      search_template:, +        body: { "template" : "simple1" }, +, +++ b/src/main/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequest.java, +        if (in.getVersion().before(Version.V_1_5_0)) {, +            in.readOptionalString(); //Preference, +            in.readBoolean(); //Refresh, +            in.readByte(); //Realtime, +        if (in.getVersion().before(Version.V_1_5_0)) {, +            FetchSourceContext.optionalReadFromStream(in);, +        }, +        if (out.getVersion().before(Version.V_1_5_0)) {, +            out.writeOptionalString("_local"); //Preference, +            out.writeBoolean(true); //Refresh, +            out.writeByte((byte) -1); //Realtime, +        if (out.getVersion().before(Version.V_1_5_0)) {, +            FetchSourceContext.optionalWriteToStream(null, out);, +        }, +]