[+++ b/src/test/java/org/elasticsearch/test/integration/search/facet/ExtendedFacetsTests.java, +        long seed = System.currentTimeMillis(); // LuceneTestCase..., +            int numOfVals = 400;, +            for (int i = 0; i < numOfVals; i++) {, +            String[] allUniqueFieldValues = uniqueValuesSet.toArray(new String[uniqueValuesSet.size()]);, +            Set<String> allField1Values = new HashSet<String>();, +            Set<String> allField1AndField2Values = new HashSet<String>();, +                int numField1Values = random.nextInt(17);, +                Set<String> field1Values = new HashSet<String>(numField1Values);, +                for (int j = 0; j <= numField1Values; j++) {, +                    boolean added = false;, +                    while (!added) {, +                        added = field1Values.add(allUniqueFieldValues[random.nextInt(numOfVals)]);, +                    }, +                }, +                allField1Values.addAll(field1Values);, +                allField1AndField2Values.addAll(field1Values);, +                String field2Val = allUniqueFieldValues[random.nextInt(numOfVals)];, +                allField1AndField2Values.add(field2Val);, +                                .field("field1_concrete", field1Values), +                                .field("field1_paged", field1Values), +                                .field("field1_fst", field1Values), +                addControlValues(queryValToField1FacetEntries, field1Values, queryVal);, +                addControlValues(queryValToField1and2FacetEntries, field1Values, queryVal);, +                    Set<String> allFieldValues;, +                        allFieldValues = allField1AndField2Values;, +                        allFieldValues = allField1Values;, +                    if (numberOfShards() == 1 || compType == TermsFacet.ComparatorType.TERM || compType == TermsFacet.ComparatorType.REVERSE_TERM) {, +                        size = allFieldValues.size();, +                    List<Tuple<Text, Integer>> expectedFacetEntries = getExpectedFacetEntries(allFieldValues, queryControlFacets, size, compType, excludes, regex, allTerms);, +    private void addControlValues(Map<String, Map<String, Integer>> queryValToFacetFieldEntries, Set<String> fieldValues, String queryVal) {, +        for (String fieldValue : fieldValues) {, +            addControlValues(queryValToFacetFieldEntries, fieldValue, queryVal);, +        }, +    }, +, +    private List<Tuple<Text, Integer>> getExpectedFacetEntries(Set<String> fieldValues,]