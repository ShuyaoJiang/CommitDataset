[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +import java.nio.file.Files, +            if (Os.isFamily(Os.FAMILY_WINDOWS)) {, +                /*, +                 * We have to delay building the string as the path will not exist during configuration which will fail on Windows due to, +                 * getting the short name requiring the path to already exist., +                 */, +                args.add("${-> getShortPathName(wrapperScript.toString())}"), +            } else {, +            }, +        if (Os.isFamily(Os.FAMILY_WINDOWS)) {, +            /*, +             * We have to delay building the string as the path will not exist during configuration which will fail on Windows due to, +             * getting the short name requiring the path to already exist., +             */, +            env.put('ES_PATH_CONF', "${-> getShortPathName(pathConf.toString())}"), +        }, +        else {, +        }, +            if (Os.isFamily(Os.FAMILY_WINDOWS)) {, +                /*, +                 * We have to delay building the string as the path will not exist during configuration which will fail on Windows due to, +                 * getting the short name requiring the path to already exist., +                 */, +                args.addAll("-E", "path.conf=${-> getShortPathName(pathConf.toString())}"), +            } else {, +        }, +            if (Os.isFamily(Os.FAMILY_WINDOWS)) {, +                /*, +                 * We have to delay building the string as the path will not exist during configuration which will fail on Windows due to, +                 * getting the short name requiring the path to already exist. This one is extra tricky because usually we rely on the node, +                 * creating its data directory on startup but we simply can not do that here because getting the short path name requires, +                 * the directory to already exist. Therefore, we create this directory immediately before getting the short name., +                 */, +                args.addAll("-E", "path.data=${-> Files.createDirectories(Paths.get(dataDir.toString())); getShortPathName(dataDir.toString())}"), +            } else {, +        }]