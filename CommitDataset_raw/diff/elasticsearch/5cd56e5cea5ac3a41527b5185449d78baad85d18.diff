[+++ b/src/main/java/org/elasticsearch/index/analysis/FieldNameAnalyzer.java, +import com.carrotsearch.hppc.ObjectObjectOpenHashMap;, +    private final ObjectObjectOpenHashMap<String, Analyzer> analyzers;, +    public FieldNameAnalyzer(ObjectObjectOpenHashMap<String, Analyzer> analyzers, Analyzer defaultAnalyzer) {, +        this.analyzers = analyzers;, +    public ObjectObjectOpenHashMap<String, Analyzer> analyzers() {, +++ b/src/main/java/org/elasticsearch/index/analysis/FieldNameAnalyzer.java, +import com.carrotsearch.hppc.ObjectObjectOpenHashMap;, +    private final ObjectObjectOpenHashMap<String, Analyzer> analyzers;, +    public FieldNameAnalyzer(ObjectObjectOpenHashMap<String, Analyzer> analyzers, Analyzer defaultAnalyzer) {, +        this.analyzers = analyzers;, +    public ObjectObjectOpenHashMap<String, Analyzer> analyzers() {, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +import com.carrotsearch.hppc.ObjectObjectOpenHashMap;, +import com.google.common.collect.ImmutableList;, +import com.google.common.collect.UnmodifiableIterator;, +import org.elasticsearch.common.hppc.HppcMaps;, +    private final DocumentMapper docMapper;, +    private final FieldMappersLookup fieldMappers;, +    private volatile FieldNameAnalyzer indexAnalyzer;, +    private volatile FieldNameAnalyzer searchAnalyzer;, +    private volatile FieldNameAnalyzer searchQuoteAnalyzer;, +    public DocumentFieldMappers(DocumentMapper docMapper) {, +        this.docMapper = docMapper;, +        this.fieldMappers = new FieldMappersLookup();, +        this.indexAnalyzer = new FieldNameAnalyzer(HppcMaps.<String, Analyzer>newMap(), docMapper.indexAnalyzer());, +        this.searchAnalyzer = new FieldNameAnalyzer(HppcMaps.<String, Analyzer>newMap(), docMapper.searchAnalyzer());, +        this.searchQuoteAnalyzer = new FieldNameAnalyzer(HppcMaps.<String, Analyzer>newMap(), docMapper.searchQuotedAnalyzer());, +    public void addNewMappers(Iterable<FieldMapper> newMappers) {, +        fieldMappers.addNewMappers(newMappers);, +        final ObjectObjectOpenHashMap<String, Analyzer> indexAnalyzers = this.indexAnalyzer.analyzers().clone();, +        final ObjectObjectOpenHashMap<String, Analyzer> searchAnalyzers = this.searchAnalyzer.analyzers().clone();, +        final ObjectObjectOpenHashMap<String, Analyzer> searchQuoteAnalyzers = this.searchQuoteAnalyzer.analyzers().clone();, +        for (FieldMapper fieldMapper : newMappers) {, +        return this.fieldMappers.mappers();, +        return fieldMappers.mappers().contains(fieldMapper);, +        return fieldMappers.name(name);, +        return fieldMappers.indexName(indexName);, +        return fieldMappers.fullName(fullName);, +        return fieldMappers.simpleMatchToIndexNames(pattern);, +        return fieldMappers.simpleMatchToFullName(pattern);, +        return fieldMappers.smartName(name);, +        return fieldMappers.smartNameFieldMapper(name);, +++ b/src/main/java/org/elasticsearch/index/analysis/FieldNameAnalyzer.java, +import com.carrotsearch.hppc.ObjectObjectOpenHashMap;, +    private final ObjectObjectOpenHashMap<String, Analyzer> analyzers;, +    public FieldNameAnalyzer(ObjectObjectOpenHashMap<String, Analyzer> analyzers, Analyzer defaultAnalyzer) {, +        this.analyzers = analyzers;, +    public ObjectObjectOpenHashMap<String, Analyzer> analyzers() {, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +import com.carrotsearch.hppc.ObjectObjectOpenHashMap;, +import com.google.common.collect.ImmutableList;, +import com.google.common.collect.UnmodifiableIterator;, +import org.elasticsearch.common.hppc.HppcMaps;, +    private final DocumentMapper docMapper;, +    private final FieldMappersLookup fieldMappers;, +    private volatile FieldNameAnalyzer indexAnalyzer;, +    private volatile FieldNameAnalyzer searchAnalyzer;, +    private volatile FieldNameAnalyzer searchQuoteAnalyzer;, +    public DocumentFieldMappers(DocumentMapper docMapper) {, +        this.docMapper = docMapper;, +        this.fieldMappers = new FieldMappersLookup();, +        this.indexAnalyzer = new FieldNameAnalyzer(HppcMaps.<String, Analyzer>newMap(), docMapper.indexAnalyzer());, +        this.searchAnalyzer = new FieldNameAnalyzer(HppcMaps.<String, Analyzer>newMap(), docMapper.searchAnalyzer());, +        this.searchQuoteAnalyzer = new FieldNameAnalyzer(HppcMaps.<String, Analyzer>newMap(), docMapper.searchQuotedAnalyzer());, +    public void addNewMappers(Iterable<FieldMapper> newMappers) {, +        fieldMappers.addNewMappers(newMappers);, +        final ObjectObjectOpenHashMap<String, Analyzer> indexAnalyzers = this.indexAnalyzer.analyzers().clone();, +        final ObjectObjectOpenHashMap<String, Analyzer> searchAnalyzers = this.searchAnalyzer.analyzers().clone();, +        final ObjectObjectOpenHashMap<String, Analyzer> searchQuoteAnalyzers = this.searchQuoteAnalyzer.analyzers().clone();, +        for (FieldMapper fieldMapper : newMappers) {, +        return this.fieldMappers.mappers();, +        return fieldMappers.mappers().contains(fieldMapper);, +        return fieldMappers.name(name);, +        return fieldMappers.indexName(indexName);, +        return fieldMappers.fullName(fullName);, +        return fieldMappers.simpleMatchToIndexNames(pattern);, +        return fieldMappers.simpleMatchToFullName(pattern);, +        return fieldMappers.smartName(name);, +        return fieldMappers.smartNameFieldMapper(name);, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    private final DocumentFieldMappers fieldMappers;, +        this.fieldMappers = new DocumentFieldMappers(this);, +        this.fieldMappers.addNewMappers(fieldMappersAgg.mappers);, +            this.fieldMappers.addNewMappers(Arrays.asList(fieldMappers));, +++ b/src/main/java/org/elasticsearch/index/analysis/FieldNameAnalyzer.java, +import com.carrotsearch.hppc.ObjectObjectOpenHashMap;, +    private final ObjectObjectOpenHashMap<String, Analyzer> analyzers;, +    public FieldNameAnalyzer(ObjectObjectOpenHashMap<String, Analyzer> analyzers, Analyzer defaultAnalyzer) {, +        this.analyzers = analyzers;, +    public ObjectObjectOpenHashMap<String, Analyzer> analyzers() {, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +import com.carrotsearch.hppc.ObjectObjectOpenHashMap;, +import com.google.common.collect.ImmutableList;, +import com.google.common.collect.UnmodifiableIterator;, +import org.elasticsearch.common.hppc.HppcMaps;, +    private final DocumentMapper docMapper;, +    private final FieldMappersLookup fieldMappers;, +    private volatile FieldNameAnalyzer indexAnalyzer;, +    private volatile FieldNameAnalyzer searchAnalyzer;]