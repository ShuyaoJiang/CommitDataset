[+++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/get/TransportGetAliasesAction.java, +        @SuppressWarnings("unchecked") // ImmutableList to List results incompatible type, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/get/TransportGetAliasesAction.java, +        @SuppressWarnings("unchecked") // ImmutableList to List results incompatible type, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/get/TransportGetAliasesAction.java, +        @SuppressWarnings("unchecked") // ImmutableList to List results incompatible type, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/rest/action/admin/indices/alias/get/RestGetAliasesAction.java, +import java.util.Locale;, +        final GetAliasesRequest getAliasesRequest = new GetAliasesRequest(aliases);, +                    if (response.getAliases().isEmpty()) {, +                        String message = String.format(Locale.ROOT, "alias [%s] missing", toNamesString(getAliasesRequest.aliases()));, +                        builder.startObject(), +                                .field("error", message), +                                .field("status", RestStatus.NOT_FOUND.getStatus()), +                                .endObject();, +                        channel.sendResponse(new XContentRestResponse(request, RestStatus.NOT_FOUND, builder));, +                        return;, +                    }, +, +    private static String toNamesString(String... names) {, +        if (names == null || names.length == 0) {, +            return "";, +        } else if (names.length == 1) {, +            return names[0];, +        } else {, +            StringBuilder builder = new StringBuilder(names[0]);, +            for (int i = 1; i < names.length; i++) {, +                builder.append(',').append(names[i]);, +            }, +            return builder.toString();, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/get/TransportGetAliasesAction.java, +        @SuppressWarnings("unchecked") // ImmutableList to List results incompatible type, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/rest/action/admin/indices/alias/get/RestGetAliasesAction.java, +import java.util.Locale;, +        final GetAliasesRequest getAliasesRequest = new GetAliasesRequest(aliases);, +                    if (response.getAliases().isEmpty()) {, +                        String message = String.format(Locale.ROOT, "alias [%s] missing", toNamesString(getAliasesRequest.aliases()));, +                        builder.startObject(), +                                .field("error", message), +                                .field("status", RestStatus.NOT_FOUND.getStatus()), +                                .endObject();, +                        channel.sendResponse(new XContentRestResponse(request, RestStatus.NOT_FOUND, builder));, +                        return;, +                    }, +, +    private static String toNamesString(String... names) {, +        if (names == null || names.length == 0) {, +            return "";, +        } else if (names.length == 1) {, +            return names[0];, +        } else {, +            StringBuilder builder = new StringBuilder(names[0]);, +            for (int i = 1; i < names.length; i++) {, +                builder.append(',').append(names[i]);, +            }, +            return builder.toString();, +        }, +    }, +, +++ b/src/test/java/org/elasticsearch/benchmark/aliases/AliasesBenchmark.java, +        if (response.getAliases().isEmpty()) {, +        } else {, +            return response.getAliases().get(INDEX_NAME).size();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/get/TransportGetAliasesAction.java, +        @SuppressWarnings("unchecked") // ImmutableList to List results incompatible type, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/rest/action/admin/indices/alias/get/RestGetAliasesAction.java, +import java.util.Locale;, +        final GetAliasesRequest getAliasesRequest = new GetAliasesRequest(aliases);, +                    if (response.getAliases().isEmpty()) {, +                        String message = String.format(Locale.ROOT, "alias [%s] missing", toNamesString(getAliasesRequest.aliases()));, +                        builder.startObject(), +                                .field("error", message), +                                .field("status", RestStatus.NOT_FOUND.getStatus()), +                                .endObject();, +                        channel.sendResponse(new XContentRestResponse(request, RestStatus.NOT_FOUND, builder));, +                        return;, +                    }, +, +    private static String toNamesString(String... names) {, +        if (names == null || names.length == 0) {, +            return "";, +        } else if (names.length == 1) {, +            return names[0];, +        } else {, +            StringBuilder builder = new StringBuilder(names[0]);, +            for (int i = 1; i < names.length; i++) {, +                builder.append(',').append(names[i]);, +            }, +            return builder.toString();, +        }, +    }, +, +++ b/src/test/java/org/elasticsearch/benchmark/aliases/AliasesBenchmark.java]