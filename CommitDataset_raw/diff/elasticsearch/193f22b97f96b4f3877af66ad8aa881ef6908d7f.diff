[+++ b/sql/shared-proto/src/main/java/org/elasticsearch/xpack/sql/protocol/shared/SqlDataInput.java, +    /**, +     * Override the built-in {@link DataInput#readUTF()}, +     * to support strings that need more than 65535 charcters., +     */, +    @Override, +    public String readUTF() throws IOException {, +        int splits = delegate.readInt();, +        if (splits == 0) {, +            return delegate.readUTF();, +        }, +        StringBuilder b = new StringBuilder(SqlDataOutput.WORST_CASE_SPLIT * splits);, +        for (int i = 0; i < splits; i++) {, +            b.append(delegate.readUTF());, +        }, +        return b.toString();, +    }, +, +++ b/sql/shared-proto/src/main/java/org/elasticsearch/xpack/sql/protocol/shared/SqlDataInput.java, +    /**, +     * Override the built-in {@link DataInput#readUTF()}, +     * to support strings that need more than 65535 charcters., +     */, +    @Override, +    public String readUTF() throws IOException {, +        int splits = delegate.readInt();, +        if (splits == 0) {, +            return delegate.readUTF();, +        }, +        StringBuilder b = new StringBuilder(SqlDataOutput.WORST_CASE_SPLIT * splits);, +        for (int i = 0; i < splits; i++) {, +            b.append(delegate.readUTF());, +        }, +        return b.toString();, +    }, +, +++ b/sql/shared-proto/src/main/java/org/elasticsearch/xpack/sql/protocol/shared/SqlDataOutput.java, +    /**, +     * The maximum size of a string to submit to {@link #delegate}'s, +     * {@link DataOutput#writeUTF(String)}. The {@code 65535} is the, +     * number of bytes that the string can be encoded to. The {@code 3}, +     * is the "worst case" for the number of bytes used to encode each, +     * char., +     */, +    static final int WORST_CASE_SPLIT = 65535 / 3;, +    /**, +     * Override the built-in {@link DataOutput#writeUTF(String)}, +     * to support strings that need more than 65535 charcters., +     */, +    @Override, +    public void writeUTF(String s) throws IOException {, +        int splits = s.length() / WORST_CASE_SPLIT + 1;, +        delegate.writeInt(splits);, +, +        int start = 0;, +        while (true) {, +            int end = Math.min(s.length(), start + WORST_CASE_SPLIT);, +            delegate.writeUTF(s.substring(start, end));, +            if (end == s.length()) {, +                break;, +            }, +            start = end;, +        }, +    }, +, +++ b/sql/shared-proto/src/main/java/org/elasticsearch/xpack/sql/protocol/shared/SqlDataInput.java, +    /**, +     * Override the built-in {@link DataInput#readUTF()}, +     * to support strings that need more than 65535 charcters., +     */, +    @Override, +    public String readUTF() throws IOException {, +        int splits = delegate.readInt();, +        if (splits == 0) {, +            return delegate.readUTF();, +        }, +        StringBuilder b = new StringBuilder(SqlDataOutput.WORST_CASE_SPLIT * splits);, +        for (int i = 0; i < splits; i++) {, +            b.append(delegate.readUTF());, +        }, +        return b.toString();, +    }, +, +++ b/sql/shared-proto/src/main/java/org/elasticsearch/xpack/sql/protocol/shared/SqlDataOutput.java, +    /**, +     * The maximum size of a string to submit to {@link #delegate}'s, +     * {@link DataOutput#writeUTF(String)}. The {@code 65535} is the, +     * number of bytes that the string can be encoded to. The {@code 3}, +     * is the "worst case" for the number of bytes used to encode each, +     * char., +     */, +    static final int WORST_CASE_SPLIT = 65535 / 3;, +    /**, +     * Override the built-in {@link DataOutput#writeUTF(String)}, +     * to support strings that need more than 65535 charcters., +     */, +    @Override, +    public void writeUTF(String s) throws IOException {, +        int splits = s.length() / WORST_CASE_SPLIT + 1;, +        delegate.writeInt(splits);]