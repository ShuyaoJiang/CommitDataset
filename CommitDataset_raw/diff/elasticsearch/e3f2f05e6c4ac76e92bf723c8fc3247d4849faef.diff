[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/dataframe/DataFrameField.java, +    public static final ParseField SOURCE = new ParseField("source");, +    public static final ParseField DESTINATION = new ParseField("dest");, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/dataframe/DataFrameField.java, +    public static final ParseField SOURCE = new ParseField("source");, +    public static final ParseField DESTINATION = new ParseField("dest");, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/dataframe/action/PreviewDataFrameTransformAction.java, +import org.elasticsearch.xpack.core.dataframe.DataFrameField;, +            content.put(DataFrameField.DESTINATION.getPreferredName(), "unused-transform-preview-index");, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/dataframe/DataFrameField.java, +    public static final ParseField SOURCE = new ParseField("source");, +    public static final ParseField DESTINATION = new ParseField("dest");, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/dataframe/action/PreviewDataFrameTransformAction.java, +import org.elasticsearch.xpack.core.dataframe.DataFrameField;, +            content.put(DataFrameField.DESTINATION.getPreferredName(), "unused-transform-preview-index");, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/dataframe/transforms/DataFrameTransformConfig.java, +        parser.declareString(constructorArg(), DataFrameField.SOURCE);, +        parser.declareString(constructorArg(), DataFrameField.DESTINATION);, +        this.source = ExceptionsHelper.requireNonNull(source, DataFrameField.SOURCE.getPreferredName());, +        this.dest = ExceptionsHelper.requireNonNull(dest, DataFrameField.DESTINATION.getPreferredName());, +        builder.field(DataFrameField.SOURCE.getPreferredName(), source);, +        builder.field(DataFrameField.DESTINATION.getPreferredName(), dest);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/dataframe/DataFrameField.java, +    public static final ParseField SOURCE = new ParseField("source");, +    public static final ParseField DESTINATION = new ParseField("dest");, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/dataframe/action/PreviewDataFrameTransformAction.java, +import org.elasticsearch.xpack.core.dataframe.DataFrameField;, +            content.put(DataFrameField.DESTINATION.getPreferredName(), "unused-transform-preview-index");, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/dataframe/transforms/DataFrameTransformConfig.java, +        parser.declareString(constructorArg(), DataFrameField.SOURCE);, +        parser.declareString(constructorArg(), DataFrameField.DESTINATION);, +        this.source = ExceptionsHelper.requireNonNull(source, DataFrameField.SOURCE.getPreferredName());, +        this.dest = ExceptionsHelper.requireNonNull(dest, DataFrameField.DESTINATION.getPreferredName());, +        builder.field(DataFrameField.SOURCE.getPreferredName(), source);, +        builder.field(DataFrameField.DESTINATION.getPreferredName(), dest);, +++ b/x-pack/plugin/data-frame/src/main/java/org/elasticsearch/xpack/dataframe/persistence/DataFrameInternalIndex.java, +        builder.field(DYNAMIC, "false");, +            .endObject(), +            .startObject(DataFrameField.SOURCE.getPreferredName()), +                .field(TYPE, KEYWORD), +            .endObject(), +            .startObject(DataFrameField.DESTINATION.getPreferredName()), +                .field(TYPE, KEYWORD)]