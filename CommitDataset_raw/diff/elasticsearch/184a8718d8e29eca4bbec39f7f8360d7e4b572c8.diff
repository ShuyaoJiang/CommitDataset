[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.flush.FlushRequest;, +import org.elasticsearch.action.admin.indices.flush.FlushResponse;, +     * Flush one or more indices using the Flush API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-flush.html"> Flush API on elastic.co</a>, +     */, +    public FlushResponse flush(FlushRequest flushRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(flushRequest, Request::flush, FlushResponse::fromXContent,, +                emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously flush one or more indices using the Flush API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-flush.html"> Flush API on elastic.co</a>, +     */, +    public void flushAsync(FlushRequest flushRequest, ActionListener<FlushResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(flushRequest, Request::flush, FlushResponse::fromXContent,, +                listener, emptySet(), headers);, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.flush.FlushRequest;, +import org.elasticsearch.action.admin.indices.flush.FlushResponse;, +     * Flush one or more indices using the Flush API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-flush.html"> Flush API on elastic.co</a>, +     */, +    public FlushResponse flush(FlushRequest flushRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(flushRequest, Request::flush, FlushResponse::fromXContent,, +                emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously flush one or more indices using the Flush API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-flush.html"> Flush API on elastic.co</a>, +     */, +    public void flushAsync(FlushRequest flushRequest, ActionListener<FlushResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(flushRequest, Request::flush, FlushResponse::fromXContent,, +                listener, emptySet(), headers);, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java, +import org.elasticsearch.action.admin.indices.flush.FlushRequest;, +        return new Request(HttpPost.METHOD_NAME, endpoint, parameters.getParams(), null);, +    }, +    static Request flush(FlushRequest flushRequest) {, +        String endpoint = endpoint(flushRequest.indices(), "_flush");, +        Params parameters = Params.builder();, +        parameters.withIndicesOptions(flushRequest.indicesOptions());, +        parameters.putParam("wait_if_ongoing", Boolean.toString(flushRequest.waitIfOngoing()));, +        parameters.putParam("force", Boolean.toString(flushRequest.force()));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.flush.FlushRequest;, +import org.elasticsearch.action.admin.indices.flush.FlushResponse;, +     * Flush one or more indices using the Flush API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-flush.html"> Flush API on elastic.co</a>, +     */, +    public FlushResponse flush(FlushRequest flushRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(flushRequest, Request::flush, FlushResponse::fromXContent,, +                emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously flush one or more indices using the Flush API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-flush.html"> Flush API on elastic.co</a>, +     */, +    public void flushAsync(FlushRequest flushRequest, ActionListener<FlushResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(flushRequest, Request::flush, FlushResponse::fromXContent,, +                listener, emptySet(), headers);, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java, +import org.elasticsearch.action.admin.indices.flush.FlushRequest;, +        return new Request(HttpPost.METHOD_NAME, endpoint, parameters.getParams(), null);, +    }, +    static Request flush(FlushRequest flushRequest) {, +        String endpoint = endpoint(flushRequest.indices(), "_flush");, +        Params parameters = Params.builder();, +        parameters.withIndicesOptions(flushRequest.indicesOptions());, +        parameters.putParam("wait_if_ongoing", Boolean.toString(flushRequest.waitIfOngoing()));, +        parameters.putParam("force", Boolean.toString(flushRequest.force()));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/IndicesClientIT.java, +import org.elasticsearch.action.admin.indices.flush.FlushRequest;, +import org.elasticsearch.action.admin.indices.flush.FlushResponse;, +    public void testFlush() throws IOException {, +        {, +            String index = "index";, +            Settings settings = Settings.builder(), +                    .put("number_of_shards", 1), +                    .put("number_of_replicas", 0), +                    .build();, +            createIndex(index, settings);]