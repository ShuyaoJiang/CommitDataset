[+++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/CcrLicenseChecker.java, +                HasPrivilegesResponse.ResourcePrivileges resourcePrivileges = response.getIndexPrivileges().iterator().next();, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/CcrLicenseChecker.java, +                HasPrivilegesResponse.ResourcePrivileges resourcePrivileges = response.getIndexPrivileges().iterator().next();, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/user/HasPrivilegesResponse.java, +import java.util.Set;, +import java.util.TreeSet;, +    private Set<ResourcePrivileges> index;, +    private Map<String, Set<ResourcePrivileges>> application;, +        this.cluster = Collections.unmodifiableMap(cluster);, +        this.index = Collections.unmodifiableSet(sorted(index));, +        final Map<String, Set<ResourcePrivileges>> applicationPrivileges = new HashMap<>();, +        application.forEach((key, val) -> applicationPrivileges.put(key, Collections.unmodifiableSet(sorted(val))));, +        this.application = Collections.unmodifiableMap(applicationPrivileges);, +    private static Set<ResourcePrivileges> sorted(Collection<ResourcePrivileges> resources) {, +        final Set<ResourcePrivileges> set = new TreeSet<>(Comparator.comparing(o -> o.resource));, +        set.addAll(resources);, +        return set;, +        return cluster;, +    public Set<ResourcePrivileges> getIndexPrivileges() {, +        return index;, +    public Map<String, Set<ResourcePrivileges>> getApplicationPrivileges() {, +        return application;, +    private static Set<ResourcePrivileges> readResourcePrivileges(StreamInput in) throws IOException {, +        final Set<ResourcePrivileges> set = new TreeSet<>(Comparator.comparing(o -> o.resource));, +            set.add(new ResourcePrivileges(index, privileges));, +        return set;, +    private static void writeResourcePrivileges(StreamOutput out, Set<ResourcePrivileges> privileges) throws IOException {, +    private void appendResources(XContentBuilder builder, String field, Set<HasPrivilegesResponse.ResourcePrivileges> privileges), +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/CcrLicenseChecker.java, +                HasPrivilegesResponse.ResourcePrivileges resourcePrivileges = response.getIndexPrivileges().iterator().next();, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/user/HasPrivilegesResponse.java, +import java.util.Set;, +import java.util.TreeSet;, +    private Set<ResourcePrivileges> index;, +    private Map<String, Set<ResourcePrivileges>> application;, +        this.cluster = Collections.unmodifiableMap(cluster);, +        this.index = Collections.unmodifiableSet(sorted(index));, +        final Map<String, Set<ResourcePrivileges>> applicationPrivileges = new HashMap<>();, +        application.forEach((key, val) -> applicationPrivileges.put(key, Collections.unmodifiableSet(sorted(val))));, +        this.application = Collections.unmodifiableMap(applicationPrivileges);, +    private static Set<ResourcePrivileges> sorted(Collection<ResourcePrivileges> resources) {, +        final Set<ResourcePrivileges> set = new TreeSet<>(Comparator.comparing(o -> o.resource));, +        set.addAll(resources);, +        return set;, +        return cluster;, +    public Set<ResourcePrivileges> getIndexPrivileges() {, +        return index;, +    public Map<String, Set<ResourcePrivileges>> getApplicationPrivileges() {, +        return application;, +    private static Set<ResourcePrivileges> readResourcePrivileges(StreamInput in) throws IOException {, +        final Set<ResourcePrivileges> set = new TreeSet<>(Comparator.comparing(o -> o.resource));, +            set.add(new ResourcePrivileges(index, privileges));, +        return set;, +    private static void writeResourcePrivileges(StreamOutput out, Set<ResourcePrivileges> privileges) throws IOException {, +    private void appendResources(XContentBuilder builder, String field, Set<HasPrivilegesResponse.ResourcePrivileges> privileges), +++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/user/TransportHasPrivilegesActionTests.java, +import java.util.Iterator;, +import java.util.Set;, +        final ResourcePrivileges result = response.getIndexPrivileges().iterator().next();, +        final Iterator<ResourcePrivileges> indexPrivilegesIterator = response.getIndexPrivileges().iterator();, +        final ResourcePrivileges academy = indexPrivilegesIterator.next();, +        final ResourcePrivileges initiative = indexPrivilegesIterator.next();, +        final ResourcePrivileges school = indexPrivilegesIterator.next();, +        final ResourcePrivileges result = response.getIndexPrivileges().iterator().next();, +        final Set<ResourcePrivileges> kibanaPrivileges = response.getApplicationPrivileges().get("kibana");, +        final Set<ResourcePrivileges> app1 = response.getApplicationPrivileges().get("app1");, +        final Set<ResourcePrivileges> app2 = response.getApplicationPrivileges().get("app2");]