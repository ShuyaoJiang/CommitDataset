[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/PutJobAction.java, +            // In 6.1 we want to make the model memory size limit more prominent, and also reduce the default from, +            // 4GB to 1GB.  However, changing the meaning of a null model memory limit for existing jobs would be a, +            // breaking change, so instead we add an explicit limit to newly created jobs that didn't have one when, +            // submitted, +            jobBuilder.setDefaultMemoryLimitIfUnset();, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/PutJobAction.java, +            // In 6.1 we want to make the model memory size limit more prominent, and also reduce the default from, +            // 4GB to 1GB.  However, changing the meaning of a null model memory limit for existing jobs would be a, +            // breaking change, so instead we add an explicit limit to newly created jobs that didn't have one when, +            // submitted, +            jobBuilder.setDefaultMemoryLimitIfUnset();, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/config/AnalysisLimits.java, +, +    /**, +     * Prior to 6.1 the default model memory size limit was 4GB, and defined in the C++ code.  The default, +     * is now 1GB and defined here in the Java code.  However, changing the meaning of a null model memory, +     * limit for existing jobs would be a breaking change, so instead the meaning of <code>null</code> is, +     * still to use the default from the C++ code, but newly created jobs will have this explicit setting, +     * added if none is provided., +     */, +    static final long DEFAULT_MODEL_MEMORY_LIMIT_MB = 1024L;, +, +     * A value of <code>null</code> will result to the default defined in the C++ code being used., +     * However, for jobs created in version 6.1 or higher this will rarely be <code>null</code> because, +     * the put_job action set it to a new default defined in the Java code., +    public AnalysisLimits(Long categorizationExamplesLimit) {, +        this(DEFAULT_MODEL_MEMORY_LIMIT_MB, categorizationExamplesLimit);, +    }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/PutJobAction.java, +            // In 6.1 we want to make the model memory size limit more prominent, and also reduce the default from, +            // 4GB to 1GB.  However, changing the meaning of a null model memory limit for existing jobs would be a, +            // breaking change, so instead we add an explicit limit to newly created jobs that didn't have one when, +            // submitted, +            jobBuilder.setDefaultMemoryLimitIfUnset();, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/config/AnalysisLimits.java, +, +    /**, +     * Prior to 6.1 the default model memory size limit was 4GB, and defined in the C++ code.  The default, +     * is now 1GB and defined here in the Java code.  However, changing the meaning of a null model memory, +     * limit for existing jobs would be a breaking change, so instead the meaning of <code>null</code> is, +     * still to use the default from the C++ code, but newly created jobs will have this explicit setting, +     * added if none is provided., +     */, +    static final long DEFAULT_MODEL_MEMORY_LIMIT_MB = 1024L;, +, +     * A value of <code>null</code> will result to the default defined in the C++ code being used., +     * However, for jobs created in version 6.1 or higher this will rarely be <code>null</code> because, +     * the put_job action set it to a new default defined in the Java code., +    public AnalysisLimits(Long categorizationExamplesLimit) {, +        this(DEFAULT_MODEL_MEMORY_LIMIT_MB, categorizationExamplesLimit);, +    }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/config/Job.java, +        /**, +         * In 6.1 we want to make the model memory size limit more prominent, and also reduce the default from, +         * 4GB to 1GB.  However, changing the meaning of a null model memory limit for existing jobs would be a, +         * breaking change, so instead we add an explicit limit to newly created jobs that didn't have one when, +         * submitted, +         */, +        public void setDefaultMemoryLimitIfUnset() {, +            if (analysisLimits == null) {, +                analysisLimits = new AnalysisLimits((Long) null);, +            } else if (analysisLimits.getModelMemoryLimit() == null) {, +                analysisLimits = new AnalysisLimits(analysisLimits.getCategorizationExamplesLimit());, +            }, +        }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/PutJobAction.java, +            // In 6.1 we want to make the model memory size limit more prominent, and also reduce the default from, +            // 4GB to 1GB.  However, changing the meaning of a null model memory limit for existing jobs would be a, +            // breaking change, so instead we add an explicit limit to newly created jobs that didn't have one when, +            // submitted, +            jobBuilder.setDefaultMemoryLimitIfUnset();, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/config/AnalysisLimits.java, +, +    /**, +     * Prior to 6.1 the default model memory size limit was 4GB, and defined in the C++ code.  The default, +     * is now 1GB and defined here in the Java code.  However, changing the meaning of a null model memory, +     * limit for existing jobs would be a breaking change, so instead the meaning of <code>null</code> is, +     * still to use the default from the C++ code, but newly created jobs will have this explicit setting, +     * added if none is provided., +     */, +    static final long DEFAULT_MODEL_MEMORY_LIMIT_MB = 1024L;, +, +     * A value of <code>null</code> will result to the default defined in the C++ code being used., +     * However, for jobs created in version 6.1 or higher this will rarely be <code>null</code> because, +     * the put_job action set it to a new default defined in the Java code., +    public AnalysisLimits(Long categorizationExamplesLimit) {, +        this(DEFAULT_MODEL_MEMORY_LIMIT_MB, categorizationExamplesLimit);, +    }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/config/Job.java, +        /**, +         * In 6.1 we want to make the model memory size limit more prominent, and also reduce the default from]