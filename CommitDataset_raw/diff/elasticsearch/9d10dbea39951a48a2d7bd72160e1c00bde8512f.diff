[+++ b/client/rest/build.gradle, + * shaded to the `org.elasticsearch.client` package. 2 artifacts come out of this build process. The shading process, + * only modifies the imports and class names and locations. It does not do any processing on the files. The classes used, + * to interact with the rest client are no different from the dependencies in the shade configuration, besides in name., + * actual shaded jar (2) are only executed on the cli. Tests run in an IDE rely on the deps (1) jar., + * 1) A jar that contains *only* the `org.elasticsearch.client` shaded dependencies. This is a jar that is built before, + *    the src is compiled. This jar is only used by the rest client so will compile. There exists a chicken-egg, + *    situation where the src needs compilation and depends on `org.elasticsearch.client` shaded classes, so an, + *    intermediary jar needs to exist to satisfy the compile. The `deps` classifier is added to this jar., + * 2) The *actual* jar that will be used by clients. This has no classifier, contains the rest client src and, +  from zipTree(shadeDeps.outputs.files.singleFile), +  dependsOn shadeDeps, +// remove the deps jar from the classpath to avoid jarHell, +  // cleanup to remove the deps jar from the classpath, +  if (gradle.gradleVersion == "3.3") {, +  } else if (gradle.gradleVersion > "3.3") {, +    configurations.runtimeElements.extendsFrom = [], +++ b/client/rest/build.gradle, + * shaded to the `org.elasticsearch.client` package. 2 artifacts come out of this build process. The shading process, + * only modifies the imports and class names and locations. It does not do any processing on the files. The classes used, + * to interact with the rest client are no different from the dependencies in the shade configuration, besides in name., + * actual shaded jar (2) are only executed on the cli. Tests run in an IDE rely on the deps (1) jar., + * 1) A jar that contains *only* the `org.elasticsearch.client` shaded dependencies. This is a jar that is built before, + *    the src is compiled. This jar is only used by the rest client so will compile. There exists a chicken-egg, + *    situation where the src needs compilation and depends on `org.elasticsearch.client` shaded classes, so an, + *    intermediary jar needs to exist to satisfy the compile. The `deps` classifier is added to this jar., + * 2) The *actual* jar that will be used by clients. This has no classifier, contains the rest client src and, +  from zipTree(shadeDeps.outputs.files.singleFile), +  dependsOn shadeDeps, +// remove the deps jar from the classpath to avoid jarHell, +  // cleanup to remove the deps jar from the classpath, +  if (gradle.gradleVersion == "3.3") {, +  } else if (gradle.gradleVersion > "3.3") {, +    configurations.runtimeElements.extendsFrom = [], +++ b/core/src/main/resources/org/elasticsearch/bootstrap/test-framework.policy]