[+++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/document/GetActionTests.java, +import org.elasticsearch.action.delete.DeleteResponse;, +, +        logger.info("--> update doc 1");, +        client.prepareIndex("test", "type1", "1").setSource("field1", "value1_1", "field2", "value2_1").execute().actionGet();, +, +        logger.info("--> realtime get 1");, +        response = client.prepareGet("test", "type1", "1").execute().actionGet();, +        assertThat(response.exists(), equalTo(true));, +        assertThat(response.sourceAsMap().get("field1").toString(), equalTo("value1_1"));, +        assertThat(response.sourceAsMap().get("field2").toString(), equalTo("value2_1"));, +, +        logger.info("--> update doc 1 again");, +        client.prepareIndex("test", "type1", "1").setSource("field1", "value1_2", "field2", "value2_2").execute().actionGet();, +, +        response = client.prepareGet("test", "type1", "1").execute().actionGet();, +        assertThat(response.exists(), equalTo(true));, +        assertThat(response.sourceAsMap().get("field1").toString(), equalTo("value1_2"));, +        assertThat(response.sourceAsMap().get("field2").toString(), equalTo("value2_2"));, +, +        DeleteResponse deleteResponse = client.prepareDelete("test", "type1", "1").execute().actionGet();, +        assertThat(deleteResponse.notFound(), equalTo(false));, +, +        response = client.prepareGet("test", "type1", "1").execute().actionGet();, +        assertThat(response.exists(), equalTo(false));]