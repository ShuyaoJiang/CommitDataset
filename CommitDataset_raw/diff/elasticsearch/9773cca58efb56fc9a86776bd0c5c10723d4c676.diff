[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.indexing.IndexingStats;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.indexing.IndexingStats;, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                indexShard.indexingService().noopUpdate(updateRequest.type());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.indexing.IndexingStats;, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                indexShard.indexingService().noopUpdate(updateRequest.type());, +++ b/core/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +                        shard.indexingService().noopUpdate(request.type());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.indexing.IndexingStats;, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                indexShard.indexingService().noopUpdate(updateRequest.type());, +++ b/core/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +                        shard.indexingService().noopUpdate(request.type());, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.index.indexing.IndexingSlowLog;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.indexing.IndexingStats;, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                indexShard.indexingService().noopUpdate(updateRequest.type());, +++ b/core/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +                        shard.indexingService().noopUpdate(request.type());, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.index.indexing.IndexingSlowLog;, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +import org.elasticsearch.index.mapper.MappedFieldType;, +                indexShard = new ShadowIndexShard(shardId, this.indexSettings, path, store, indexCache, mapperService, similarityService, indexFieldData, engineFactory, eventListener, searcherWrapper, nodeServicesProvider);, +                indexShard = new IndexShard(shardId, this.indexSettings, path, store, indexCache, mapperService, similarityService, indexFieldData, engineFactory, eventListener, searcherWrapper, nodeServicesProvider);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.indexing.IndexingStats;, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                indexShard.indexingService().noopUpdate(updateRequest.type());, +++ b/core/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +                        shard.indexingService().noopUpdate(request.type());, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.index.indexing.IndexingSlowLog;, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +import org.elasticsearch.index.mapper.MappedFieldType;, +                indexShard = new ShadowIndexShard(shardId, this.indexSettings, path, store, indexCache, mapperService, similarityService, indexFieldData, engineFactory, eventListener, searcherWrapper, nodeServicesProvider);, +                indexShard = new IndexShard(shardId, this.indexSettings, path, store, indexCache, mapperService, similarityService, indexFieldData, engineFactory, eventListener, searcherWrapper, nodeServicesProvider);, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.indexing.IndexingStats;, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                indexShard.indexingService().noopUpdate(updateRequest.type());, +++ b/core/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +                        shard.indexingService().noopUpdate(request.type());, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.index.indexing.IndexingSlowLog;, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +import org.elasticsearch.index.mapper.MappedFieldType;, +                indexShard = new ShadowIndexShard(shardId, this.indexSettings, path, store, indexCache, mapperService, similarityService, indexFieldData, engineFactory, eventListener, searcherWrapper, nodeServicesProvider);, +                indexShard = new IndexShard(shardId, this.indexSettings, path, store, indexCache, mapperService, similarityService, indexFieldData, engineFactory, eventListener, searcherWrapper, nodeServicesProvider);, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java, +import org.elasticsearch.index.indexing.ShardIndexingService;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.indexing.IndexingStats;, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                indexShard.indexingService().noopUpdate(updateRequest.type());, +++ b/core/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +                        shard.indexingService().noopUpdate(request.type());, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.index.indexing.IndexingSlowLog;, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +import org.elasticsearch.index.mapper.MappedFieldType;, +                indexShard = new ShadowIndexShard(shardId, this.indexSettings, path, store, indexCache, mapperService, similarityService, indexFieldData, engineFactory, eventListener, searcherWrapper, nodeServicesProvider);, +                indexShard = new IndexShard(shardId, this.indexSettings, path, store, indexCache, mapperService, similarityService, indexFieldData, engineFactory, eventListener, searcherWrapper, nodeServicesProvider);, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java, +import org.elasticsearch.index.indexing.ShardIndexingService;, +++ b/core/src/main/java/org/elasticsearch/index/indexing/IndexingOperationListener.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +package org.elasticsearch.index.indexing;, +, +import org.elasticsearch.index.engine.Engine;, +, +/**, + * An indexing listener for indexing, delete, events.]