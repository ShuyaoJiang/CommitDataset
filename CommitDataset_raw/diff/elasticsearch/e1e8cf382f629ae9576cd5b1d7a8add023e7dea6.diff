[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/DateHistogramGroupConfig.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/DateHistogramGroupConfig.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/HistogramGroupConfig.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/DateHistogramGroupConfig.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/HistogramGroupConfig.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/MetricConfig.java, +    public static final ParseField MIN = new ParseField("min");, +    public static final ParseField MAX = new ParseField("max");, +    public static final ParseField SUM = new ParseField("sum");, +    public static final ParseField AVG = new ParseField("avg");, +    public static final ParseField VALUE_COUNT = new ParseField("value_count");, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/DateHistogramGroupConfig.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/HistogramGroupConfig.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/MetricConfig.java, +    public static final ParseField MIN = new ParseField("min");, +    public static final ParseField MAX = new ParseField("max");, +    public static final ParseField SUM = new ParseField("sum");, +    public static final ParseField AVG = new ParseField("avg");, +    public static final ParseField VALUE_COUNT = new ParseField("value_count");, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/TermsGroupConfig.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/DateHistogramGroupConfig.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/HistogramGroupConfig.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/MetricConfig.java, +    public static final ParseField MIN = new ParseField("min");, +    public static final ParseField MAX = new ParseField("max");, +    public static final ParseField SUM = new ParseField("sum");, +    public static final ParseField AVG = new ParseField("avg");, +    public static final ParseField VALUE_COUNT = new ParseField("value_count");, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/TermsGroupConfig.java, +++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/rollup/job/TermsGroupConfigSerializingTests.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/DateHistogramGroupConfig.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/HistogramGroupConfig.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/MetricConfig.java, +    public static final ParseField MIN = new ParseField("min");, +    public static final ParseField MAX = new ParseField("max");, +    public static final ParseField SUM = new ParseField("sum");, +    public static final ParseField AVG = new ParseField("avg");, +    public static final ParseField VALUE_COUNT = new ParseField("value_count");, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/TermsGroupConfig.java, +++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/rollup/job/TermsGroupConfigSerializingTests.java, +++ b/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/job/RollupIndexer.java, +import org.elasticsearch.search.aggregations.AggregationBuilder;, +import org.elasticsearch.search.aggregations.bucket.composite.DateHistogramValuesSourceBuilder;, +import org.elasticsearch.search.aggregations.bucket.composite.HistogramValuesSourceBuilder;, +import org.elasticsearch.search.aggregations.bucket.composite.TermsValuesSourceBuilder;, +import org.elasticsearch.search.aggregations.bucket.histogram.HistogramAggregationBuilder;, +import org.elasticsearch.search.aggregations.bucket.terms.TermsAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.avg.AvgAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.max.MaxAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.min.MinAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.sum.SumAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.valuecount.ValueCountAggregationBuilder;, +import org.elasticsearch.search.aggregations.support.ValueType;, +import org.elasticsearch.search.aggregations.support.ValuesSourceAggregationBuilder;, +import org.elasticsearch.xpack.core.rollup.job.MetricConfig;, +import org.elasticsearch.xpack.core.rollup.job.TermsGroupConfig;, +import org.joda.time.DateTimeZone;, +import static java.util.Collections.singletonList;, +import static java.util.Collections.unmodifiableList;, +import static org.elasticsearch.xpack.core.rollup.RollupField.formatFieldName;, +, +        List<CompositeValuesSourceBuilder<?>> builders = createValueSourceBuilders(groupConfig);, +, +        List<AggregationBuilder> aggregations = createAggregationBuilders(config.getMetricsConfig());, +        aggregations.forEach(composite::subAggregation);, +, +    public static List<CompositeValuesSourceBuilder<?>> createValueSourceBuilders(final GroupConfig groupConfig) {, +        final List<CompositeValuesSourceBuilder<?>> builders = new ArrayList<>();, +        // Add all the agg builders to our request in order: date_histo -> histo -> terms, +        if (groupConfig != null) {, +            final DateHistogramGroupConfig dateHistogram = groupConfig.getDateHistogram();, +            builders.addAll(createValueSourceBuilders(dateHistogram));, +, +            final HistogramGroupConfig histogram = groupConfig.getHistogram();, +            builders.addAll(createValueSourceBuilders(histogram));, +, +            final TermsGroupConfig terms = groupConfig.getTerms();, +            builders.addAll(createValueSourceBuilders(terms));, +        }, +        return unmodifiableList(builders);, +    }, +, +    public static List<CompositeValuesSourceBuilder<?>> createValueSourceBuilders(final DateHistogramGroupConfig dateHistogram) {, +        final String dateHistogramField = dateHistogram.getField();, +        final String dateHistogramName = RollupField.formatIndexerAggName(dateHistogramField, DateHistogramAggregationBuilder.NAME);, +        final DateHistogramValuesSourceBuilder dateHistogramBuilder = new DateHistogramValuesSourceBuilder(dateHistogramName);, +        dateHistogramBuilder.dateHistogramInterval(dateHistogram.getInterval());, +        dateHistogramBuilder.field(dateHistogramField);, +        dateHistogramBuilder.timeZone(toDateTimeZone(dateHistogram.getTimeZone()));, +        return singletonList(dateHistogramBuilder);, +    }, +, +    public static List<CompositeValuesSourceBuilder<?>> createValueSourceBuilders(final HistogramGroupConfig histogram) {, +        final List<CompositeValuesSourceBuilder<?>> builders = new ArrayList<>();, +        if (histogram != null) {, +            for (String field : histogram.getFields()) {, +                final String histogramName = RollupField.formatIndexerAggName(field, HistogramAggregationBuilder.NAME);, +                final HistogramValuesSourceBuilder histogramBuilder = new HistogramValuesSourceBuilder(histogramName);, +                histogramBuilder.interval(histogram.getInterval());, +                histogramBuilder.field(field);]