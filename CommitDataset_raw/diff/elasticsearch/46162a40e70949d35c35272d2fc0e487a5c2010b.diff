[+++ b/docs/reference/setup/bootstrap-checks.asciidoc, +<<bootstrap.mlockall,`bootstrap.mlockall`>> is enabled, the JVM will, +lock the initial size of the heap on startup. If the initial heap size, +is not equal to the maximum heap size, after a resize it will not be the, +case that all of the JVM heap is locked in memory. To pass the heap size, +check, you must configure the <<heap-size,heap size>>., +, +though, https://en.wikipedia.org/wiki/Everything_is_a_file[everything is, +a file]. For example, "files" could be a physical file, a virtual file, +(e.g., ``/proc/loadavg`), or network sockets. Elasticsearch requires, +lots file descriptors (e.g., every shard is composed of multiple, +segments and other files, plus connections to other nodes, etc.). This, +bootstrap check is enforced on OS X and Linux. To pass the file, +descriptor check, you might have to configure <<file-descriptors,file, +descriptors>>., +configuring, +<<minimum_master_nodes,`discovery.zen.minimum_master_nodes`>> to be, +equal to a quorum of master-eligible nodes, it is not possible for the, +cluster to suffer from split brain because during a network partition, +there can be at most one side of the partition that contains a quorum of, +master nodes. The minimum master nodes check enforces that you've set, +must configure, +<<minimum_master_nodes,`discovery.zen.minimum_master_nodes`>>., +configured <<minimum_master_nodes,`discovery.zen.minimum_master_nodes`>>, +correctly, only that you have it configured. Elasticsearch does log a, +warning message if it detects that <<minimum_master_nodes>> is, +incorrectly configured based on the number of master-eligible nodes, +visible in the cluster state. Future versions of Elasticsearch will, +contain stricter enforcement of, +<<minimum_master_nodes,`discovery.zen.minimum_master_nodes`>>.]