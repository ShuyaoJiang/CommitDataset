[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.admin.cluster.settings.TransportClusterUpdateSettingsAction;, +        bind(TransportClusterUpdateSettingsAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.admin.cluster.settings.TransportClusterUpdateSettingsAction;, +        bind(TransportClusterUpdateSettingsAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActions.java, +            public static final String UPDATE_SETTINGS = "/cluster/updateSettings";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.admin.cluster.settings.TransportClusterUpdateSettingsAction;, +        bind(TransportClusterUpdateSettingsAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActions.java, +            public static final String UPDATE_SETTINGS = "/cluster/updateSettings";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/settings/ClusterUpdateSettingsRequest.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.action.admin.cluster.settings;, +, +import org.elasticsearch.ElasticSearchGenerationException;, +import org.elasticsearch.action.ActionRequestValidationException;, +import org.elasticsearch.action.support.master.MasterNodeOperationRequest;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentType;, +, +import java.io.IOException;, +import java.util.Map;, +, +import static org.elasticsearch.action.Actions.*;, +import static org.elasticsearch.common.settings.ImmutableSettings.Builder.*;, +import static org.elasticsearch.common.settings.ImmutableSettings.*;, +, +/**, + */, +public class ClusterUpdateSettingsRequest extends MasterNodeOperationRequest {, +, +    private Settings transientSettings = EMPTY_SETTINGS;, +    private Settings persistentSettings = EMPTY_SETTINGS;, +, +    public ClusterUpdateSettingsRequest() {, +    }, +, +    @Override public ActionRequestValidationException validate() {, +        ActionRequestValidationException validationException = null;, +        if (transientSettings.getAsMap().isEmpty() && persistentSettings.getAsMap().isEmpty()) {, +            validationException = addValidationError("no settings to update", validationException);, +        }, +        return validationException;, +    }, +, +    Settings transientSettings() {, +        return transientSettings;, +    }, +, +    Settings persistentSettings() {, +        return persistentSettings;, +    }, +, +    public ClusterUpdateSettingsRequest transientSettings(Settings settings) {, +        this.transientSettings = settings;, +        return this;, +    }, +, +    public ClusterUpdateSettingsRequest transientSettings(Settings.Builder settings) {, +        this.transientSettings = settings.build();, +        return this;, +    }, +, +    public ClusterUpdateSettingsRequest transientSettings(String source) {, +        this.transientSettings = ImmutableSettings.settingsBuilder().loadFromSource(source).build();, +        return this;, +    }, +, +    public ClusterUpdateSettingsRequest transientSettings(Map source) {, +        try {, +            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON);, +            builder.map(source);, +            transientSettings(builder.string());, +        } catch (IOException e) {]