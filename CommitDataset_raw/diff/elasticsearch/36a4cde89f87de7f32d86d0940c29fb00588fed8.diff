[+++ b/config/elasticsearch.yml, +, +++ b/config/elasticsearch.yml, +, +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +    /**, +     * Causes the updated document to be percolated. The parameter is the percolate query, +     * to use to reduce the percolated queries that are going to run against this doc. Can be, +     * set to <tt>*</tt> to indicate that all percolate queries should be run., +     */, +    public UpdateRequestBuilder setPercolate(String percolate) {, +        request.percolate(percolate);, +        return this;, +    }, +, +++ b/config/elasticsearch.yml, +, +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +    /**, +     * Causes the updated document to be percolated. The parameter is the percolate query, +     * to use to reduce the percolated queries that are going to run against this doc. Can be, +     * set to <tt>*</tt> to indicate that all percolate queries should be run., +     */, +    public UpdateRequestBuilder setPercolate(String percolate) {, +        request.percolate(percolate);, +        return this;, +    }, +, +++ b/src/main/java/org/elasticsearch/plugins/PluginsService.java, +        logger.info("loaded {}, sites {}", plugins.keySet(), sitePlugins());, +++ b/config/elasticsearch.yml, +, +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +    /**, +     * Causes the updated document to be percolated. The parameter is the percolate query, +     * to use to reduce the percolated queries that are going to run against this doc. Can be, +     * set to <tt>*</tt> to indicate that all percolate queries should be run., +     */, +    public UpdateRequestBuilder setPercolate(String percolate) {, +        request.percolate(percolate);, +        return this;, +    }, +, +++ b/src/main/java/org/elasticsearch/plugins/PluginsService.java, +        logger.info("loaded {}, sites {}", plugins.keySet(), sitePlugins());, +++ b/src/test/java/org/elasticsearch/test/integration/document/DocumentActionsTests.java, +++ b/config/elasticsearch.yml, +, +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +    /**, +     * Causes the updated document to be percolated. The parameter is the percolate query, +     * to use to reduce the percolated queries that are going to run against this doc. Can be, +     * set to <tt>*</tt> to indicate that all percolate queries should be run., +     */, +    public UpdateRequestBuilder setPercolate(String percolate) {, +        request.percolate(percolate);, +        return this;, +    }, +, +++ b/src/main/java/org/elasticsearch/plugins/PluginsService.java, +        logger.info("loaded {}, sites {}", plugins.keySet(), sitePlugins());, +++ b/src/test/java/org/elasticsearch/test/integration/document/DocumentActionsTests.java, +++ b/src/test/java/org/elasticsearch/test/integration/update/UpdateTests.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.test.integration.update;, +, +import org.elasticsearch.action.admin.cluster.health.ClusterHealthResponse;, +import org.elasticsearch.action.admin.cluster.health.ClusterHealthStatus;, +import org.elasticsearch.action.get.GetResponse;, +import org.elasticsearch.action.update.UpdateResponse;, +import org.elasticsearch.client.Client;, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.index.engine.DocumentMissingException;, +import org.elasticsearch.test.integration.AbstractNodesTests;, +import org.testng.annotations.AfterClass;, +import org.testng.annotations.BeforeClass;, +import org.testng.annotations.Test;, +, +import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;, +import static org.elasticsearch.index.query.QueryBuilders.termQuery;]