[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, environment.scriptsFile(), "read,readlink");, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, environment.scriptsFile(), "read,readlink");, +++ b/core/src/main/java/org/elasticsearch/env/Environment.java, +    private final Path scriptsFile;, +, +        if (settings.get("path.scripts") != null) {, +            scriptsFile = PathUtils.get(cleanPath(settings.get("path.scripts")));, +        } else {, +            scriptsFile = configFile.resolve("scripts");, +        }, +, +    /**, +     * Location of on-disk scripts, +     */, +    public Path scriptsFile() {, +        return scriptsFile;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, environment.scriptsFile(), "read,readlink");, +++ b/core/src/main/java/org/elasticsearch/env/Environment.java, +    private final Path scriptsFile;, +, +        if (settings.get("path.scripts") != null) {, +            scriptsFile = PathUtils.get(cleanPath(settings.get("path.scripts")));, +        } else {, +            scriptsFile = configFile.resolve("scripts");, +        }, +, +    /**, +     * Location of on-disk scripts, +     */, +    public Path scriptsFile() {, +        return scriptsFile;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +        scriptsDirectory = env.scriptsFile();, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, environment.scriptsFile(), "read,readlink");, +++ b/core/src/main/java/org/elasticsearch/env/Environment.java, +    private final Path scriptsFile;, +, +        if (settings.get("path.scripts") != null) {, +            scriptsFile = PathUtils.get(cleanPath(settings.get("path.scripts")));, +        } else {, +            scriptsFile = configFile.resolve("scripts");, +        }, +, +    /**, +     * Location of on-disk scripts, +     */, +    public Path scriptsFile() {, +        return scriptsFile;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +        scriptsDirectory = env.scriptsFile();, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/DirectCandidateGenerator.java, +                        // We should not use frequency(term) here because it will analyze the term again, +                        // If preFilter and postFilter are the same analyzer it would fail. , +                        long freq = internalFrequency(term);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, environment.scriptsFile(), "read,readlink");, +++ b/core/src/main/java/org/elasticsearch/env/Environment.java, +    private final Path scriptsFile;, +, +        if (settings.get("path.scripts") != null) {, +            scriptsFile = PathUtils.get(cleanPath(settings.get("path.scripts")));, +        } else {, +            scriptsFile = configFile.resolve("scripts");, +        }, +, +    /**, +     * Location of on-disk scripts, +     */, +    public Path scriptsFile() {, +        return scriptsFile;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +        scriptsDirectory = env.scriptsFile();, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/DirectCandidateGenerator.java, +                        // We should not use frequency(term) here because it will analyze the term again, +                        // If preFilter and postFilter are the same analyzer it would fail. , +                        long freq = internalFrequency(term);, +++ b/core/src/test/java/org/elasticsearch/bootstrap/SecurityTests.java, +        settingsBuilder.put("path.scripts", esHome.resolve("scripts").toString());, +        // scripts file: ro, +        assertExactPermissions(new FilePermission(environment.scriptsFile().toString(), "read,readlink"), permissions);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, environment.scriptsFile(), "read,readlink");, +++ b/core/src/main/java/org/elasticsearch/env/Environment.java, +    private final Path scriptsFile;, +, +        if (settings.get("path.scripts") != null) {, +            scriptsFile = PathUtils.get(cleanPath(settings.get("path.scripts")));, +        } else {]