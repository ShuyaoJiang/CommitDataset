[+++ b/core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java, +        if (version != that.version) {, +            return false;, +        }, +        if (unassignedInfo != null ? !unassignedInfo.equals(that.unassignedInfo) : that.unassignedInfo != null) {, +            return false;, +        }, +        result = 31 * result + (int) (version ^ (version >>> 32));, +        result = 31 * result + (unassignedInfo != null ? unassignedInfo.hashCode() : 0);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java, +        if (version != that.version) {, +            return false;, +        }, +        if (unassignedInfo != null ? !unassignedInfo.equals(that.unassignedInfo) : that.unassignedInfo != null) {, +            return false;, +        }, +        result = 31 * result + (int) (version ^ (version >>> 32));, +        result = 31 * result + (unassignedInfo != null ? unassignedInfo.hashCode() : 0);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/UnassignedInfo.java, +, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) return true;, +        if (o == null || getClass() != o.getClass()) return false;, +, +        UnassignedInfo that = (UnassignedInfo) o;, +, +        if (timestamp != that.timestamp) return false;, +        if (reason != that.reason) return false;, +        if (message != null ? !message.equals(that.message) : that.message != null) return false;, +        return !(failure != null ? !failure.equals(that.failure) : that.failure != null);, +, +    }, +, +    @Override, +    public int hashCode() {, +        int result = reason != null ? reason.hashCode() : 0;, +        result = 31 * result + (int) (timestamp ^ (timestamp >>> 32));, +        result = 31 * result + (message != null ? message.hashCode() : 0);, +        result = 31 * result + (failure != null ? failure.hashCode() : 0);, +        return result;, +    }, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java, +        if (version != that.version) {, +            return false;, +        }, +        if (unassignedInfo != null ? !unassignedInfo.equals(that.unassignedInfo) : that.unassignedInfo != null) {, +            return false;, +        }, +        result = 31 * result + (int) (version ^ (version >>> 32));, +        result = 31 * result + (unassignedInfo != null ? unassignedInfo.hashCode() : 0);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/UnassignedInfo.java, +, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) return true;, +        if (o == null || getClass() != o.getClass()) return false;, +, +        UnassignedInfo that = (UnassignedInfo) o;, +, +        if (timestamp != that.timestamp) return false;, +        if (reason != that.reason) return false;, +        if (message != null ? !message.equals(that.message) : that.message != null) return false;, +        return !(failure != null ? !failure.equals(that.failure) : that.failure != null);, +, +    }, +, +    @Override, +    public int hashCode() {, +        int result = reason != null ? reason.hashCode() : 0;, +        result = 31 * result + (int) (timestamp ^ (timestamp >>> 32));, +        result = 31 * result + (message != null ? message.hashCode() : 0);, +        result = 31 * result + (failure != null ? failure.hashCode() : 0);, +        return result;, +    }, +++ b/core/src/test/java/org/elasticsearch/cluster/ClusterStateDiffIT.java, +import static org.elasticsearch.cluster.routing.RandomShardRoutingMutator.randomChange;, +import static org.elasticsearch.cluster.routing.RandomShardRoutingMutator.randomReason;, +import static org.elasticsearch.test.XContentTestUtils.differenceBetweenMapsIgnoringArrayOrder;, +                assertNull(differenceBetweenMapsIgnoringArrayOrder(convertToMap(clusterStateFromDiffs), convertToMap(clusterState)));, +                    builder.add(randomChangeToIndexRoutingTable(clusterState.routingTable().indicesRouting().get(index), clusterState.nodes().nodes().keys().toArray(String.class)));, +                UnassignedInfo unassignedInfo = null;, +                if (randomInt(5) == 1) {, +                    unassignedInfo = new UnassignedInfo(randomReason(), randomAsciiOfLength(10));, +                }, +                        TestShardRouting.newShardRouting(index, i, randomFrom(nodeIds), null, null, j == 0,, +                                ShardRoutingState.fromValue((byte) randomIntBetween(2, 4)), 1, unassignedInfo));, +     * Randomly updates index routing table in the cluster state, +     */, +    private IndexRoutingTable randomChangeToIndexRoutingTable(IndexRoutingTable original, String[] nodes) {, +        IndexRoutingTable.Builder builder = IndexRoutingTable.builder(original.getIndex());, +        for (ObjectCursor<IndexShardRoutingTable> indexShardRoutingTable :  original.shards().values()) {, +            for (ShardRouting shardRouting : indexShardRoutingTable.value.shards()) {, +                final ShardRouting newShardRouting = new ShardRouting(shardRouting);, +                randomChange(newShardRouting, nodes);, +                builder.addShard(indexShardRoutingTable.value, newShardRouting);, +            }, +        }, +        return builder.build();, +    }]