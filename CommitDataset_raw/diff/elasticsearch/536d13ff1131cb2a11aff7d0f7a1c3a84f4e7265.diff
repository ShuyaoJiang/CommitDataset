[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +            process = new ProcessInfo(in);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +            process = new ProcessInfo(in);, +++ b/core/src/main/java/org/elasticsearch/monitor/process/ProcessInfo.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class ProcessInfo implements Writeable, ToXContent {, +    private final long refreshInterval;, +    private final long id;, +    private final boolean mlockall;, +    public ProcessInfo(long id, boolean mlockall, long refreshInterval) {, +        this.refreshInterval = refreshInterval;, +    }, +, +    public ProcessInfo(StreamInput in) throws IOException {, +        refreshInterval = in.readLong();, +        id = in.readLong();, +        mlockall = in.readBoolean();, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        out.writeLong(refreshInterval);, +        out.writeLong(id);, +        out.writeBoolean(mlockall);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +            process = new ProcessInfo(in);, +++ b/core/src/main/java/org/elasticsearch/monitor/process/ProcessInfo.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class ProcessInfo implements Writeable, ToXContent {, +    private final long refreshInterval;, +    private final long id;, +    private final boolean mlockall;, +    public ProcessInfo(long id, boolean mlockall, long refreshInterval) {, +        this.refreshInterval = refreshInterval;, +    }, +, +    public ProcessInfo(StreamInput in) throws IOException {, +        refreshInterval = in.readLong();, +        id = in.readLong();, +        mlockall = in.readBoolean();, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        out.writeLong(refreshInterval);, +        out.writeLong(id);, +        out.writeBoolean(mlockall);, +++ b/core/src/main/java/org/elasticsearch/monitor/process/ProcessProbe.java, +    public ProcessInfo processInfo(long refreshInterval) {, +        return new ProcessInfo(jvmInfo().pid(), BootstrapInfo.isMemoryLocked(), refreshInterval);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +            process = new ProcessInfo(in);, +++ b/core/src/main/java/org/elasticsearch/monitor/process/ProcessInfo.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class ProcessInfo implements Writeable, ToXContent {, +    private final long refreshInterval;, +    private final long id;, +    private final boolean mlockall;, +    public ProcessInfo(long id, boolean mlockall, long refreshInterval) {, +        this.refreshInterval = refreshInterval;, +    }, +, +    public ProcessInfo(StreamInput in) throws IOException {, +        refreshInterval = in.readLong();, +        id = in.readLong();, +        mlockall = in.readBoolean();, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        out.writeLong(refreshInterval);, +        out.writeLong(id);, +        out.writeBoolean(mlockall);, +++ b/core/src/main/java/org/elasticsearch/monitor/process/ProcessProbe.java, +    public ProcessInfo processInfo(long refreshInterval) {, +        return new ProcessInfo(jvmInfo().pid(), BootstrapInfo.isMemoryLocked(), refreshInterval);, +++ b/core/src/main/java/org/elasticsearch/monitor/process/ProcessService.java, +        this.info = probe.processInfo(refreshInterval.millis());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +            process = new ProcessInfo(in);, +++ b/core/src/main/java/org/elasticsearch/monitor/process/ProcessInfo.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class ProcessInfo implements Writeable, ToXContent {, +    private final long refreshInterval;, +    private final long id;, +    private final boolean mlockall;, +    public ProcessInfo(long id, boolean mlockall, long refreshInterval) {, +        this.refreshInterval = refreshInterval;, +    }, +, +    public ProcessInfo(StreamInput in) throws IOException {, +        refreshInterval = in.readLong();, +        id = in.readLong();, +        mlockall = in.readBoolean();, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        out.writeLong(refreshInterval);]