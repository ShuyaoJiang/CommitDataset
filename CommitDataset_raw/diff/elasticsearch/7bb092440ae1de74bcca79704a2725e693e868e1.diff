[+++ b/src/main/java/org/elasticsearch/common/lucene/docset/ContextDocIdSet.java, + * A holder for a {@link DocIdSet} and the {@link AtomicReaderContext} it is associated with., +++ b/src/main/java/org/elasticsearch/common/lucene/docset/ContextDocIdSet.java, + * A holder for a {@link DocIdSet} and the {@link AtomicReaderContext} it is associated with., +++ b/src/main/java/org/elasticsearch/search/facet/FacetExecutor.java, +import org.apache.lucene.search.DocIdSetIterator;, + * The facet executor requires at least the {@link #collector()} method to be implemented,, + * with an optional {@link #post()} implementation if specific optimizations can be done., +        /**, +         * A filtered post execution., +         */, +, +        /**, +         * A {@link FacetExecutor.Collector} based post., +         */, +        public static class Collector extends Post {, +, +            private final FacetExecutor.Collector collector;, +, +            public Collector(FacetExecutor.Collector collector) {, +                this.collector = collector;, +            }, +, +            @Override, +            public void executePost(List<ContextDocIdSet> docSets) throws IOException {, +                for (int i = 0; i < docSets.size(); i++) {, +                    ContextDocIdSet docSet = docSets.get(i);, +                    collector.setNextReader(docSet.context);, +                    DocIdSetIterator it = docSet.docSet.iterator();, +                    int doc;, +                    while ((doc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {, +                        collector.collect(doc);, +                    }, +                }, +                collector.postCollection();, +            }, +        }, +     * A post based facet that executes the facet using the aggregated docs. By default, +     * uses the {@link Post.Collector} based implementation., +     * <p/>, +     * Can be overridden if a more optimized non collector based implementation can be implemented., +    public Post post() {, +        return new Post.Collector(collector());, +    }, +++ b/src/main/java/org/elasticsearch/common/lucene/docset/ContextDocIdSet.java, + * A holder for a {@link DocIdSet} and the {@link AtomicReaderContext} it is associated with., +++ b/src/main/java/org/elasticsearch/search/facet/FacetExecutor.java, +import org.apache.lucene.search.DocIdSetIterator;, + * The facet executor requires at least the {@link #collector()} method to be implemented,, + * with an optional {@link #post()} implementation if specific optimizations can be done., +        /**, +         * A filtered post execution., +         */, +, +        /**, +         * A {@link FacetExecutor.Collector} based post., +         */, +        public static class Collector extends Post {, +, +            private final FacetExecutor.Collector collector;, +, +            public Collector(FacetExecutor.Collector collector) {, +                this.collector = collector;, +            }, +, +            @Override, +            public void executePost(List<ContextDocIdSet> docSets) throws IOException {, +                for (int i = 0; i < docSets.size(); i++) {, +                    ContextDocIdSet docSet = docSets.get(i);, +                    collector.setNextReader(docSet.context);, +                    DocIdSetIterator it = docSet.docSet.iterator();, +                    int doc;, +                    while ((doc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {, +                        collector.collect(doc);, +                    }, +                }, +                collector.postCollection();, +            }, +        }, +     * A post based facet that executes the facet using the aggregated docs. By default, +     * uses the {@link Post.Collector} based implementation., +     * <p/>, +     * Can be overridden if a more optimized non collector based implementation can be implemented., +    public Post post() {, +        return new Post.Collector(collector());, +    }, +++ b/src/main/java/org/elasticsearch/search/facet/datehistogram/CountDateHistogramFacetExecutor.java, +++ b/src/main/java/org/elasticsearch/common/lucene/docset/ContextDocIdSet.java, + * A holder for a {@link DocIdSet} and the {@link AtomicReaderContext} it is associated with., +++ b/src/main/java/org/elasticsearch/search/facet/FacetExecutor.java, +import org.apache.lucene.search.DocIdSetIterator;, + * The facet executor requires at least the {@link #collector()} method to be implemented,, + * with an optional {@link #post()} implementation if specific optimizations can be done., +        /**, +         * A filtered post execution., +         */, +, +        /**, +         * A {@link FacetExecutor.Collector} based post., +         */]