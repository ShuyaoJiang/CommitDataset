[+++ b/x-pack/plugin/sql/qa/src/main/resources/agg.sql-spec, +aggAvgAndMaxWithLikeFilter, +SELECT CAST(AVG(salary) AS LONG) AS avg, CAST(SUM(salary) AS LONG) AS s FROM "test_emp" WHERE first_name LIKE 'G%';, +++ b/x-pack/plugin/sql/qa/src/main/resources/agg.sql-spec, +aggAvgAndMaxWithLikeFilter, +SELECT CAST(AVG(salary) AS LONG) AS avg, CAST(SUM(salary) AS LONG) AS s FROM "test_emp" WHERE first_name LIKE 'G%';, +++ b/x-pack/plugin/sql/qa/src/main/resources/datetime.sql-spec, +//, +// H2 uses the local timezone instead of the specified one, +//, +currentTimestampMonth-Ignore, +++ b/x-pack/plugin/sql/qa/src/main/resources/agg.sql-spec, +aggAvgAndMaxWithLikeFilter, +SELECT CAST(AVG(salary) AS LONG) AS avg, CAST(SUM(salary) AS LONG) AS s FROM "test_emp" WHERE first_name LIKE 'G%';, +++ b/x-pack/plugin/sql/qa/src/main/resources/datetime.sql-spec, +//, +// H2 uses the local timezone instead of the specified one, +//, +currentTimestampMonth-Ignore, +++ b/x-pack/plugin/sql/qa/src/main/resources/filter.sql-spec, +whereFieldWithNotLikeMatch, +SELECT last_name l FROM "test_emp" WHERE emp_no < 10020 AND first_name NOT LIKE 'Ma%';, +++ b/x-pack/plugin/sql/qa/src/main/resources/agg.sql-spec, +aggAvgAndMaxWithLikeFilter, +SELECT CAST(AVG(salary) AS LONG) AS avg, CAST(SUM(salary) AS LONG) AS s FROM "test_emp" WHERE first_name LIKE 'G%';, +++ b/x-pack/plugin/sql/qa/src/main/resources/datetime.sql-spec, +//, +// H2 uses the local timezone instead of the specified one, +//, +currentTimestampMonth-Ignore, +++ b/x-pack/plugin/sql/qa/src/main/resources/filter.sql-spec, +whereFieldWithNotLikeMatch, +SELECT last_name l FROM "test_emp" WHERE emp_no < 10020 AND first_name NOT LIKE 'Ma%';, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/whitelist/InternalSqlScriptUtils.java, +        // TODO: this needs to be improved to avoid creating the pattern on every call, +++ b/x-pack/plugin/sql/qa/src/main/resources/agg.sql-spec, +aggAvgAndMaxWithLikeFilter, +SELECT CAST(AVG(salary) AS LONG) AS avg, CAST(SUM(salary) AS LONG) AS s FROM "test_emp" WHERE first_name LIKE 'G%';, +++ b/x-pack/plugin/sql/qa/src/main/resources/datetime.sql-spec, +//, +// H2 uses the local timezone instead of the specified one, +//, +currentTimestampMonth-Ignore, +++ b/x-pack/plugin/sql/qa/src/main/resources/filter.sql-spec, +whereFieldWithNotLikeMatch, +SELECT last_name l FROM "test_emp" WHERE emp_no < 10020 AND first_name NOT LIKE 'Ma%';, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/whitelist/InternalSqlScriptUtils.java, +        // TODO: this needs to be improved to avoid creating the pattern on every call, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/predicate/regex/Like.java, +    private final LikePattern pattern;, +, +    public Like(Location location, Expression left, LikePattern pattern) {, +        super(location, left, pattern.asJavaRegex());, +        this.pattern = pattern;, +    }, +, +    public LikePattern pattern() {, +        return pattern;, +        return NodeInfo.create(this, Like::new, field(), pattern);, +    protected Like replaceChild(Expression newLeft) {, +        return new Like(location(), newLeft, pattern);, +++ b/x-pack/plugin/sql/qa/src/main/resources/agg.sql-spec, +aggAvgAndMaxWithLikeFilter, +SELECT CAST(AVG(salary) AS LONG) AS avg, CAST(SUM(salary) AS LONG) AS s FROM "test_emp" WHERE first_name LIKE 'G%';, +++ b/x-pack/plugin/sql/qa/src/main/resources/datetime.sql-spec, +//, +// H2 uses the local timezone instead of the specified one, +//, +currentTimestampMonth-Ignore, +++ b/x-pack/plugin/sql/qa/src/main/resources/filter.sql-spec, +whereFieldWithNotLikeMatch, +SELECT last_name l FROM "test_emp" WHERE emp_no < 10020 AND first_name NOT LIKE 'Ma%';, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/whitelist/InternalSqlScriptUtils.java, +        // TODO: this needs to be improved to avoid creating the pattern on every call, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/predicate/regex/Like.java, +    private final LikePattern pattern;, +, +    public Like(Location location, Expression left, LikePattern pattern) {, +        super(location, left, pattern.asJavaRegex());, +        this.pattern = pattern;, +    }, +, +    public LikePattern pattern() {, +        return pattern;, +        return NodeInfo.create(this, Like::new, field(), pattern);, +    protected Like replaceChild(Expression newLeft) {, +        return new Like(location(), newLeft, pattern);, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/predicate/regex/LikePattern.java, +public class LikePattern {, +    public LikePattern(String pattern, char escape) {, +++ b/x-pack/plugin/sql/qa/src/main/resources/agg.sql-spec, +aggAvgAndMaxWithLikeFilter, +SELECT CAST(AVG(salary) AS LONG) AS avg, CAST(SUM(salary) AS LONG) AS s FROM "test_emp" WHERE first_name LIKE 'G%';, +++ b/x-pack/plugin/sql/qa/src/main/resources/datetime.sql-spec, +//, +// H2 uses the local timezone instead of the specified one, +//, +currentTimestampMonth-Ignore, +++ b/x-pack/plugin/sql/qa/src/main/resources/filter.sql-spec, +whereFieldWithNotLikeMatch]