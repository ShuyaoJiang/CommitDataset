[+++ b/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +import java.io.Closeable;, +public class BulkProcessor implements Closeable {, +    @Override, +    public void ensureOpen() {, +        if (closed) {, +            throw new ElasticsearchIllegalStateException("bulk process already closed");, +        }, +    }, +, +        ensureOpen();, +        ensureOpen();, +    /**, +     * Flush pending delete or index requests., +     */, +    public synchronized void flush() {, +        ensureOpen();, +        if (bulkRequest.numberOfActions() > 0) {, +            execute();, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +import java.io.Closeable;, +public class BulkProcessor implements Closeable {, +    @Override, +    public void ensureOpen() {, +        if (closed) {, +            throw new ElasticsearchIllegalStateException("bulk process already closed");, +        }, +    }, +, +        ensureOpen();, +        ensureOpen();, +    /**, +     * Flush pending delete or index requests., +     */, +    public synchronized void flush() {, +        ensureOpen();, +        if (bulkRequest.numberOfActions() > 0) {, +            execute();, +        }, +    }, +, +++ b/src/test/java/org/elasticsearch/document/BulkTests.java, +        try (BulkProcessor processor = BulkProcessor.builder(client(), listener).setBulkActions(5), +                                        .setConcurrentRequests(1).setName("foo").build()) {, +, +    @Test, +    public void testBulkProcessorFlush() throws InterruptedException {, +        final BlockingQueue<BulkResponse> responseQueue = new SynchronousQueue();, +, +        BulkProcessor.Listener listener = new BulkProcessor.Listener() {, +            @Override, +            public void beforeBulk(long executionId, BulkRequest request) {}, +, +            @Override, +            public void afterBulk(long executionId, BulkRequest request, BulkResponse response) {, +                responseQueue.add(response);, +            }, +, +            @Override, +            public void afterBulk(long executionId, BulkRequest request, Throwable failure) {}, +        };, +, +        try (BulkProcessor processor = BulkProcessor.builder(client(), listener).setBulkActions(6), +                                        .setConcurrentRequests(1).setName("foo").build()) {, +            Map<String, Object> data = Maps.newHashMap();, +            data.put("foo", "bar");, +, +            processor.add(new IndexRequest("test", "test", "1").source(data));, +            processor.add(new IndexRequest("test", "test", "2").source(data));, +            processor.add(new IndexRequest("test", "test", "3").source(data));, +            processor.add(new IndexRequest("test", "test", "4").source(data));, +            processor.add(new IndexRequest("test", "test", "5").source(data));, +, +            processor.flush();, +, +            BulkResponse response = responseQueue.poll(1, TimeUnit.SECONDS);, +            assertThat("Could not get a bulk response even after an explicit flush.", response, is(notNullValue()));, +            assertThat(response.getItems().length, is(5));, +        }, +    }]