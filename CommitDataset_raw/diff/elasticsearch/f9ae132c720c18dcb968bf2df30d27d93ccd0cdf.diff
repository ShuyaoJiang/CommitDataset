[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/shard/recovery/RecoveryTarget.java, +import org.apache.lucene.store.AlreadyClosedException;, +            if (cause instanceof AlreadyClosedException) {, +                listener.onIgnoreRecovery(true, "source shard is closed (" + request.sourceNode() + ")");, +                return;, +            }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/shard/recovery/RecoveryTarget.java, +import org.apache.lucene.store.AlreadyClosedException;, +            if (cause instanceof AlreadyClosedException) {, +                listener.onIgnoreRecovery(true, "source shard is closed (" + request.sourceNode() + ")");, +                return;, +            }, +, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/cluster/MinimumMasterNodesTests.java, +                .put("discovery.zen.ping_timeout", "200ms"), +                .put("discovery.initial_state_timeout", "500ms"), +        ClusterHealthResponse clusterHealthResponse = client("node1").admin().cluster().prepareHealth().setWaitForNodes("2").execute().actionGet();, +        assertThat(clusterHealthResponse.timedOut(), equalTo(false));, +        clusterHealthResponse = client("node1").admin().cluster().prepareHealth().setWaitForNodes("2").execute().actionGet();, +        assertThat(clusterHealthResponse.timedOut(), equalTo(false));, +        clusterHealthResponse = client("node1").admin().cluster().prepareHealth().setWaitForNodes("2").execute().actionGet();, +        assertThat(clusterHealthResponse.timedOut(), equalTo(false));, +                .put("discovery.zen.ping_timeout", "200ms"), +                .put("discovery.initial_state_timeout", "500ms"), +, +        ClusterHealthResponse clusterHealthResponse = client("node1").admin().cluster().prepareHealth().setWaitForNodes("4").execute().actionGet();, +        assertThat(clusterHealthResponse.timedOut(), equalTo(false));, +        Thread.sleep(500);, +        clusterHealthResponse = client("node1").admin().cluster().prepareHealth().setWaitForNodes("4").execute().actionGet();, +        assertThat(clusterHealthResponse.timedOut(), equalTo(false));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/shard/recovery/RecoveryTarget.java, +import org.apache.lucene.store.AlreadyClosedException;, +            if (cause instanceof AlreadyClosedException) {, +                listener.onIgnoreRecovery(true, "source shard is closed (" + request.sourceNode() + ")");, +                return;, +            }, +, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/cluster/MinimumMasterNodesTests.java, +                .put("discovery.zen.ping_timeout", "200ms"), +                .put("discovery.initial_state_timeout", "500ms"), +        ClusterHealthResponse clusterHealthResponse = client("node1").admin().cluster().prepareHealth().setWaitForNodes("2").execute().actionGet();, +        assertThat(clusterHealthResponse.timedOut(), equalTo(false));, +        clusterHealthResponse = client("node1").admin().cluster().prepareHealth().setWaitForNodes("2").execute().actionGet();, +        assertThat(clusterHealthResponse.timedOut(), equalTo(false));, +        clusterHealthResponse = client("node1").admin().cluster().prepareHealth().setWaitForNodes("2").execute().actionGet();, +        assertThat(clusterHealthResponse.timedOut(), equalTo(false));, +                .put("discovery.zen.ping_timeout", "200ms"), +                .put("discovery.initial_state_timeout", "500ms"), +, +        ClusterHealthResponse clusterHealthResponse = client("node1").admin().cluster().prepareHealth().setWaitForNodes("4").execute().actionGet();, +        assertThat(clusterHealthResponse.timedOut(), equalTo(false));, +        Thread.sleep(500);, +        clusterHealthResponse = client("node1").admin().cluster().prepareHealth().setWaitForNodes("4").execute().actionGet();, +        assertThat(clusterHealthResponse.timedOut(), equalTo(false));, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/consistencylevel/WriteConsistencyLevelTests.java, +                    .setTimeout(timeValueMillis(100)).execute().actionGet();, +                    .setTimeout(timeValueMillis(100)).execute().actionGet();]