[+++ b/server/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Should each {@link org.elasticsearch.search.SearchHit} be returned with the, +     * sequence number and primary term of the last modification of the document., +     */, +    public SearchRequestBuilder seqNoAndPrimaryTerm(boolean seqNoAndPrimaryTerm) {, +        sourceBuilder().seqNoAndPrimaryTerm(seqNoAndPrimaryTerm);, +        return this;, +    }, +, +    /**, +++ b/server/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Should each {@link org.elasticsearch.search.SearchHit} be returned with the, +     * sequence number and primary term of the last modification of the document., +     */, +    public SearchRequestBuilder seqNoAndPrimaryTerm(boolean seqNoAndPrimaryTerm) {, +        sourceBuilder().seqNoAndPrimaryTerm(seqNoAndPrimaryTerm);, +        return this;, +    }, +, +    /**, +++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/TokenService.java, +import org.elasticsearch.action.update.UpdateRequestBuilder;, +                                UpdateRequestBuilder updateRequest =, +                                        .setRefreshPolicy(RefreshPolicy.WAIT_UNTIL);, +                                if (clusterService.state().nodes().getMinNodeVersion().onOrAfter(Version.V_6_7_0)) {, +                                    updateRequest.setIfSeqNo(response.getSeqNo());, +                                    updateRequest.setIfPrimaryTerm(response.getPrimaryTerm());, +                                } else {, +                                    updateRequest.setVersion(response.getVersion());, +                                }, +                                executeAsyncWithOrigin(client.threadPool().getThreadContext(), SECURITY_ORIGIN, updateRequest.request(),]