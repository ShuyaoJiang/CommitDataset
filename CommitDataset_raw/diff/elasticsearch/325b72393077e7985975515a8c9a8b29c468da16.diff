[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/src/main/java/org/elasticsearch/client/RestClient.java, +import org.apache.http.Consts;, +import org.apache.http.entity.ContentType;, +    public static ContentType JSON_CONTENT_TYPE = ContentType.create("application/json", Consts.UTF_8);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/src/main/java/org/elasticsearch/client/RestClient.java, +import org.apache.http.Consts;, +import org.apache.http.entity.ContentType;, +    public static ContentType JSON_CONTENT_TYPE = ContentType.create("application/json", Consts.UTF_8);, +++ b/core/src/test/java/org/elasticsearch/http/netty/NettyHttpCompressionIT.java, +import org.apache.http.entity.StringEntity;, +import org.apache.http.message.BasicHeader;, +import org.elasticsearch.client.ElasticsearchResponse;, +import org.elasticsearch.client.RestClient;, +import java.util.Collections;, +    private static final StringEntity SAMPLE_DOCUMENT = new StringEntity("{\n" +, +        "}", RestClient.JSON_CONTENT_TYPE);, +        try (RestClient client = restClient(HttpClients.custom().addInterceptorFirst(headerExtractor).build())) {, +            ElasticsearchResponse response = client.performRequest("GET", "/", Collections.emptyMap(), null,, +                    new BasicHeader(HttpHeaders.ACCEPT_ENCODING, GZIP_ENCODING));, +            assertEquals(200, response.getStatusLine().getStatusCode());, +    }, +        CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().addInterceptorFirst(headerExtractor).build();, +        try (RestClient client = restClient(httpClient)) {, +            ElasticsearchResponse response = client.performRequest("GET", "/", Collections.emptyMap(), null);, +            assertEquals(200, response.getStatusLine().getStatusCode());, +    }, +        CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().addInterceptorFirst(headerExtractor).build();, +        try (RestClient client = restClient(httpClient)) {, +            ElasticsearchResponse response = client.performRequest("POST", "/company/employees/1", Collections.emptyMap(), SAMPLE_DOCUMENT);, +            assertEquals(201, response.getStatusLine().getStatusCode());, +    }, +        try (RestClient client = restClient(HttpClients.custom().addInterceptorFirst(headerExtractor).build())) {, +            ElasticsearchResponse response = client.performRequest("POST", "/company/employees/2", Collections.emptyMap(), SAMPLE_DOCUMENT);, +            assertEquals(201, response.getStatusLine().getStatusCode());, +    }, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/src/main/java/org/elasticsearch/client/RestClient.java, +import org.apache.http.Consts;, +import org.apache.http.entity.ContentType;, +    public static ContentType JSON_CONTENT_TYPE = ContentType.create("application/json", Consts.UTF_8);, +++ b/core/src/test/java/org/elasticsearch/http/netty/NettyHttpCompressionIT.java, +import org.apache.http.entity.StringEntity;, +import org.apache.http.message.BasicHeader;, +import org.elasticsearch.client.ElasticsearchResponse;, +import org.elasticsearch.client.RestClient;, +import java.util.Collections;, +    private static final StringEntity SAMPLE_DOCUMENT = new StringEntity("{\n" +, +        "}", RestClient.JSON_CONTENT_TYPE);, +        try (RestClient client = restClient(HttpClients.custom().addInterceptorFirst(headerExtractor).build())) {, +            ElasticsearchResponse response = client.performRequest("GET", "/", Collections.emptyMap(), null,, +                    new BasicHeader(HttpHeaders.ACCEPT_ENCODING, GZIP_ENCODING));, +            assertEquals(200, response.getStatusLine().getStatusCode());, +    }, +        CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().addInterceptorFirst(headerExtractor).build();, +        try (RestClient client = restClient(httpClient)) {, +            ElasticsearchResponse response = client.performRequest("GET", "/", Collections.emptyMap(), null);, +            assertEquals(200, response.getStatusLine().getStatusCode());, +    }, +        CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().addInterceptorFirst(headerExtractor).build();, +        try (RestClient client = restClient(httpClient)) {, +            ElasticsearchResponse response = client.performRequest("POST", "/company/employees/1", Collections.emptyMap(), SAMPLE_DOCUMENT);, +            assertEquals(201, response.getStatusLine().getStatusCode());, +    }, +        try (RestClient client = restClient(HttpClients.custom().addInterceptorFirst(headerExtractor).build())) {, +            ElasticsearchResponse response = client.performRequest("POST", "/company/employees/2", Collections.emptyMap(), SAMPLE_DOCUMENT);, +            assertEquals(201, response.getStatusLine().getStatusCode());, +    }, +++ b/core/src/test/java/org/elasticsearch/options/detailederrors/DetailedErrorsDisabledIT.java, +import org.elasticsearch.client.ElasticsearchResponse;, +import org.elasticsearch.client.ElasticsearchResponseException;, +import org.elasticsearch.client.RestClient;, +, +import java.util.Collections;, +        try (RestClient restClient = restClient()) {, +            restClient.performRequest("DELETE", "/", Collections.singletonMap("error_trace", "true"), null);, +            fail("request should have failed");, +        } catch(ElasticsearchResponseException e) {, +            ElasticsearchResponse response = e.getElasticsearchResponse();, +            assertThat(response.getFirstHeader("Content-Type"), is("application/json"));, +            assertThat(e.getResponseBody(), is("{\"error\":\"error traces in responses are disabled.\"}"));, +            assertThat(response.getStatusLine().getStatusCode(), is(400));, +        }, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/src/main/java/org/elasticsearch/client/RestClient.java, +import org.apache.http.Consts;, +import org.apache.http.entity.ContentType;, +    public static ContentType JSON_CONTENT_TYPE = ContentType.create("application/json", Consts.UTF_8);, +++ b/core/src/test/java/org/elasticsearch/http/netty/NettyHttpCompressionIT.java, +import org.apache.http.entity.StringEntity;, +import org.apache.http.message.BasicHeader;, +import org.elasticsearch.client.ElasticsearchResponse;, +import org.elasticsearch.client.RestClient;, +import java.util.Collections;, +    private static final StringEntity SAMPLE_DOCUMENT = new StringEntity("{\n" +, +        "}", RestClient.JSON_CONTENT_TYPE);, +        try (RestClient client = restClient(HttpClients.custom().addInterceptorFirst(headerExtractor).build())) {, +            ElasticsearchResponse response = client.performRequest("GET", "/", Collections.emptyMap(), null,]