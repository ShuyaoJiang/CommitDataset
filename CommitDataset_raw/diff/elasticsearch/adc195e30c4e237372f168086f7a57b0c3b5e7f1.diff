[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java, +            validationException = addValidationError("index patterns are missing", validationException);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java, +            validationException = addValidationError("index patterns are missing", validationException);, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequestTests.java, +import org.elasticsearch.action.ActionRequestValidationException;, +import static org.hamcrest.Matchers.containsString;, +import static org.hamcrest.Matchers.hasSize;, +import static org.hamcrest.Matchers.nullValue;, +import static org.hamcrest.core.Is.is;, +, +, +    public void testValidateErrorMessage() throws Exception {, +        PutIndexTemplateRequest request = new PutIndexTemplateRequest();, +        ActionRequestValidationException withoutNameAndPattern = request.validate();, +        assertThat(withoutNameAndPattern.getMessage(), containsString("name is missing"));, +        assertThat(withoutNameAndPattern.getMessage(), containsString("index patterns are missing"));, +, +        request.name("foo");, +        ActionRequestValidationException withoutIndexPatterns = request.validate();, +        assertThat(withoutIndexPatterns.validationErrors(), hasSize(1));, +        assertThat(withoutIndexPatterns.getMessage(), containsString("index patterns are missing"));, +, +        request.patterns(Collections.singletonList("test-*"));, +        ActionRequestValidationException noError = request.validate();, +        assertThat(noError, is(nullValue()));, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java, +            validationException = addValidationError("index patterns are missing", validationException);, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequestTests.java, +import org.elasticsearch.action.ActionRequestValidationException;, +import static org.hamcrest.Matchers.containsString;, +import static org.hamcrest.Matchers.hasSize;, +import static org.hamcrest.Matchers.nullValue;, +import static org.hamcrest.core.Is.is;, +, +, +    public void testValidateErrorMessage() throws Exception {, +        PutIndexTemplateRequest request = new PutIndexTemplateRequest();, +        ActionRequestValidationException withoutNameAndPattern = request.validate();, +        assertThat(withoutNameAndPattern.getMessage(), containsString("name is missing"));, +        assertThat(withoutNameAndPattern.getMessage(), containsString("index patterns are missing"));, +, +        request.name("foo");, +        ActionRequestValidationException withoutIndexPatterns = request.validate();, +        assertThat(withoutIndexPatterns.validationErrors(), hasSize(1));, +        assertThat(withoutIndexPatterns.getMessage(), containsString("index patterns are missing"));, +, +        request.patterns(Collections.singletonList("test-*"));, +        ActionRequestValidationException noError = request.validate();, +        assertThat(noError, is(nullValue()));, +    }, +, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/indices.put_template/10_basic.yml, +, +---, +"Put index template without index_patterns":, +, +  - do:, +      catch: /index patterns are missing/, +      indices.put_template:, +        name: test, +        body: {}]