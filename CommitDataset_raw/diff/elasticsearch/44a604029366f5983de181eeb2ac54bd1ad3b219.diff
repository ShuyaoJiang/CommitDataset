[+++ b/src/main/java/org/elasticsearch/index/IndexModule.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.jmx.JmxService;, +    private final Settings settings;, +, +    public IndexModule(Settings settings) {, +        this.settings = settings;, +    }, +, +        if (JmxService.shouldExport(settings)) {, +}, +++ b/src/main/java/org/elasticsearch/index/IndexModule.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.jmx.JmxService;, +    private final Settings settings;, +, +    public IndexModule(Settings settings) {, +        this.settings = settings;, +    }, +, +        if (JmxService.shouldExport(settings)) {, +}, +++ b/src/main/java/org/elasticsearch/index/service/InternalIndexService.java, +        modules.add(new IndexShardModule(indexSettings, shardId));, +++ b/src/main/java/org/elasticsearch/index/IndexModule.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.jmx.JmxService;, +    private final Settings settings;, +, +    public IndexModule(Settings settings) {, +        this.settings = settings;, +    }, +, +        if (JmxService.shouldExport(settings)) {, +}, +++ b/src/main/java/org/elasticsearch/index/service/InternalIndexService.java, +        modules.add(new IndexShardModule(indexSettings, shardId));, +++ b/src/main/java/org/elasticsearch/index/shard/IndexShardModule.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.jmx.JmxService;, +    private final Settings settings;, +, +    public IndexShardModule(Settings settings, ShardId shardId) {, +        this.settings = settings;, +        if (JmxService.shouldExport(settings)) {, +}, +++ b/src/main/java/org/elasticsearch/index/IndexModule.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.jmx.JmxService;, +    private final Settings settings;, +, +    public IndexModule(Settings settings) {, +        this.settings = settings;, +    }, +, +        if (JmxService.shouldExport(settings)) {, +}, +++ b/src/main/java/org/elasticsearch/index/service/InternalIndexService.java, +        modules.add(new IndexShardModule(indexSettings, shardId));, +++ b/src/main/java/org/elasticsearch/index/shard/IndexShardModule.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.jmx.JmxService;, +    private final Settings settings;, +, +    public IndexShardModule(Settings settings, ShardId shardId) {, +        this.settings = settings;, +        if (JmxService.shouldExport(settings)) {, +}, +++ b/src/main/java/org/elasticsearch/index/store/StoreModule.java, +import org.elasticsearch.jmx.JmxService;, +        if (JmxService.shouldExport(settings)) {, +            bind(StoreManagement.class).asEagerSingleton();, +        }, +++ b/src/main/java/org/elasticsearch/index/IndexModule.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.jmx.JmxService;, +    private final Settings settings;, +, +    public IndexModule(Settings settings) {, +        this.settings = settings;, +    }, +, +        if (JmxService.shouldExport(settings)) {, +}, +++ b/src/main/java/org/elasticsearch/index/service/InternalIndexService.java, +        modules.add(new IndexShardModule(indexSettings, shardId));, +++ b/src/main/java/org/elasticsearch/index/shard/IndexShardModule.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.jmx.JmxService;, +    private final Settings settings;, +, +    public IndexShardModule(Settings settings, ShardId shardId) {, +        this.settings = settings;, +        if (JmxService.shouldExport(settings)) {, +}, +++ b/src/main/java/org/elasticsearch/index/store/StoreModule.java, +import org.elasticsearch.jmx.JmxService;, +        if (JmxService.shouldExport(settings)) {, +            bind(StoreManagement.class).asEagerSingleton();, +        }]