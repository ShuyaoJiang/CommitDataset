[+++ b/src/main/java/org/elasticsearch/percolator/PercolatorService.java, +, +import org.apache.lucene.search.BooleanClause;, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.MatchAllDocsQuery;, +import org.apache.lucene.search.Query;, +import org.apache.lucene.search.ScoreDoc;, +import org.apache.lucene.search.TopDocs;, +import org.elasticsearch.index.mapper.DocumentMapper;, +import org.elasticsearch.index.mapper.FieldMapper;, +import org.elasticsearch.index.mapper.MapperService;, +import org.elasticsearch.index.mapper.ParsedDocument;, +import org.elasticsearch.index.mapper.Uid;, +import org.elasticsearch.percolator.QueryCollector.Count;, +import org.elasticsearch.percolator.QueryCollector.Match;, +import org.elasticsearch.percolator.QueryCollector.MatchAndScore;, +import org.elasticsearch.percolator.QueryCollector.MatchAndSort;, +import static org.elasticsearch.percolator.QueryCollector.count;, +import static org.elasticsearch.percolator.QueryCollector.match;, +import static org.elasticsearch.percolator.QueryCollector.matchAndScore;, +        return InternalAggregations.reduce(aggregationsList, new ReduceContext(bigArrays, scriptService));, +++ b/src/main/java/org/elasticsearch/percolator/PercolatorService.java, +, +import org.apache.lucene.search.BooleanClause;, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.MatchAllDocsQuery;, +import org.apache.lucene.search.Query;, +import org.apache.lucene.search.ScoreDoc;, +import org.apache.lucene.search.TopDocs;, +import org.elasticsearch.index.mapper.DocumentMapper;, +import org.elasticsearch.index.mapper.FieldMapper;, +import org.elasticsearch.index.mapper.MapperService;, +import org.elasticsearch.index.mapper.ParsedDocument;, +import org.elasticsearch.index.mapper.Uid;, +import org.elasticsearch.percolator.QueryCollector.Count;, +import org.elasticsearch.percolator.QueryCollector.Match;, +import org.elasticsearch.percolator.QueryCollector.MatchAndScore;, +import org.elasticsearch.percolator.QueryCollector.MatchAndSort;, +import static org.elasticsearch.percolator.QueryCollector.count;, +import static org.elasticsearch.percolator.QueryCollector.match;, +import static org.elasticsearch.percolator.QueryCollector.matchAndScore;, +        return InternalAggregations.reduce(aggregationsList, new ReduceContext(bigArrays, scriptService));, +++ b/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java, +        public ReduceContext(BigArrays bigArrays, ScriptService scriptService) {, +    public abstract InternalAggregation reduce(List<InternalAggregation> aggregations, ReduceContext reduceContext);, +++ b/src/main/java/org/elasticsearch/percolator/PercolatorService.java, +, +import org.apache.lucene.search.BooleanClause;, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.MatchAllDocsQuery;, +import org.apache.lucene.search.Query;, +import org.apache.lucene.search.ScoreDoc;, +import org.apache.lucene.search.TopDocs;, +import org.elasticsearch.index.mapper.DocumentMapper;, +import org.elasticsearch.index.mapper.FieldMapper;, +import org.elasticsearch.index.mapper.MapperService;, +import org.elasticsearch.index.mapper.ParsedDocument;, +import org.elasticsearch.index.mapper.Uid;, +import org.elasticsearch.percolator.QueryCollector.Count;, +import org.elasticsearch.percolator.QueryCollector.Match;, +import org.elasticsearch.percolator.QueryCollector.MatchAndScore;, +import org.elasticsearch.percolator.QueryCollector.MatchAndSort;, +import static org.elasticsearch.percolator.QueryCollector.count;, +import static org.elasticsearch.percolator.QueryCollector.match;, +import static org.elasticsearch.percolator.QueryCollector.matchAndScore;, +        return InternalAggregations.reduce(aggregationsList, new ReduceContext(bigArrays, scriptService));, +++ b/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java, +        public ReduceContext(BigArrays bigArrays, ScriptService scriptService) {, +    public abstract InternalAggregation reduce(List<InternalAggregation> aggregations, ReduceContext reduceContext);, +++ b/src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java, +            reducedAggregations.add(first.reduce(aggregations, context));, +++ b/src/main/java/org/elasticsearch/percolator/PercolatorService.java, +, +import org.apache.lucene.search.BooleanClause;, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.MatchAllDocsQuery;, +import org.apache.lucene.search.Query;, +import org.apache.lucene.search.ScoreDoc;, +import org.apache.lucene.search.TopDocs;, +import org.elasticsearch.index.mapper.DocumentMapper;, +import org.elasticsearch.index.mapper.FieldMapper;, +import org.elasticsearch.index.mapper.MapperService;, +import org.elasticsearch.index.mapper.ParsedDocument;, +import org.elasticsearch.index.mapper.Uid;, +import org.elasticsearch.percolator.QueryCollector.Count;, +import org.elasticsearch.percolator.QueryCollector.Match;, +import org.elasticsearch.percolator.QueryCollector.MatchAndScore;, +import org.elasticsearch.percolator.QueryCollector.MatchAndSort;, +import static org.elasticsearch.percolator.QueryCollector.count;, +import static org.elasticsearch.percolator.QueryCollector.match;, +import static org.elasticsearch.percolator.QueryCollector.matchAndScore;, +        return InternalAggregations.reduce(aggregationsList, new ReduceContext(bigArrays, scriptService));]