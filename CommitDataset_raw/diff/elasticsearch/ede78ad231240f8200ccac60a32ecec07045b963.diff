[+++ b/TESTING.asciidoc, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT \, +`*Yaml*IT` are the executable test classes that runs all the, +++ b/TESTING.asciidoc, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT \, +`*Yaml*IT` are the executable test classes that runs all the, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/LoggerUsageTask.groovy, +    private FileCollection classDirectories;, +                // Default to main and test class files, +                List files = [], +                // But only if the source sets that will make them exist, +                if (project.sourceSets.findByName("main")) {, +                    files.add(project.sourceSets.main.output.classesDir), +                if (project.sourceSets.findByName("test")) {, +                    files.add(project.sourceSets.test.output.classesDir), +                /* In an extra twist, it isn't good enough that the source set, +                 * exists. Empty source sets won't make a classes directory, +                 * which will cause the check to fail. We have to filter the, +                 * empty directories out manually. This filter is done right, +                 * before the actual logger usage check giving the rest of the, +                 * build the opportunity to actually build the directory., +                 */, +                classDirectories = project.files(files).filter { it.exists() }, +    FileCollection getClassDirectories() {, +    void setClassDirectories(FileCollection classDirectories) {, +++ b/TESTING.asciidoc, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT \, +`*Yaml*IT` are the executable test classes that runs all the, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/LoggerUsageTask.groovy, +    private FileCollection classDirectories;, +                // Default to main and test class files, +                List files = [], +                // But only if the source sets that will make them exist, +                if (project.sourceSets.findByName("main")) {, +                    files.add(project.sourceSets.main.output.classesDir), +                if (project.sourceSets.findByName("test")) {, +                    files.add(project.sourceSets.test.output.classesDir), +                /* In an extra twist, it isn't good enough that the source set, +                 * exists. Empty source sets won't make a classes directory, +                 * which will cause the check to fail. We have to filter the, +                 * empty directories out manually. This filter is done right, +                 * before the actual logger usage check giving the rest of the, +                 * build the opportunity to actually build the directory., +                 */, +                classDirectories = project.files(files).filter { it.exists() }, +    FileCollection getClassDirectories() {, +    void setClassDirectories(FileCollection classDirectories) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]WaitActiveShardCountIT.java" checks="LineLength" />, +++ b/TESTING.asciidoc, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT \, +`*Yaml*IT` are the executable test classes that runs all the, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/LoggerUsageTask.groovy, +    private FileCollection classDirectories;, +                // Default to main and test class files, +                List files = [], +                // But only if the source sets that will make them exist, +                if (project.sourceSets.findByName("main")) {, +                    files.add(project.sourceSets.main.output.classesDir), +                if (project.sourceSets.findByName("test")) {, +                    files.add(project.sourceSets.test.output.classesDir), +                /* In an extra twist, it isn't good enough that the source set, +                 * exists. Empty source sets won't make a classes directory, +                 * which will cause the check to fail. We have to filter the, +                 * empty directories out manually. This filter is done right, +                 * before the actual logger usage check giving the rest of the, +                 * build the opportunity to actually build the directory., +                 */, +                classDirectories = project.files(files).filter { it.exists() }, +    FileCollection getClassDirectories() {, +    void setClassDirectories(FileCollection classDirectories) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]WaitActiveShardCountIT.java" checks="LineLength" />, +++ b/buildSrc/src/main/resources/forbidden/jdk-signatures.txt, +@defaultMessage Stopping threads explicitly leads to inconsistent states. Use interrupt() instead., +java.lang.Thread#stop(), +java.lang.Thread#stop(java.lang.Throwable), +, +++ b/TESTING.asciidoc, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT \, +`*Yaml*IT` are the executable test classes that runs all the, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/LoggerUsageTask.groovy, +    private FileCollection classDirectories;, +                // Default to main and test class files, +                List files = [], +                // But only if the source sets that will make them exist, +                if (project.sourceSets.findByName("main")) {, +                    files.add(project.sourceSets.main.output.classesDir), +                if (project.sourceSets.findByName("test")) {, +                    files.add(project.sourceSets.test.output.classesDir), +                /* In an extra twist, it isn't good enough that the source set, +                 * exists. Empty source sets won't make a classes directory, +                 * which will cause the check to fail. We have to filter the, +                 * empty directories out manually. This filter is done right, +                 * before the actual logger usage check giving the rest of the]