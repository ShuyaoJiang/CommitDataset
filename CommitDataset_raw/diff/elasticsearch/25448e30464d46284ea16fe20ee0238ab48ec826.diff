[+++ b/buildSrc/build.gradle, +++ b/buildSrc/build.gradle, +++ /dev/null, +++ b/buildSrc/build.gradle, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import org.gradle.internal.logging.progress.ProgressLoggerFactory, +import javax.inject.Inject, +, +class RandomizedTestingTask extends DefaultTask {, +    @Inject, +    ProgressLoggerFactory getProgressLoggerFactory() {, +        throw new UnsupportedOperationException(), +    }, +, +++ b/buildSrc/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import org.gradle.internal.logging.progress.ProgressLoggerFactory, +import javax.inject.Inject, +, +class RandomizedTestingTask extends DefaultTask {, +    @Inject, +    ProgressLoggerFactory getProgressLoggerFactory() {, +        throw new UnsupportedOperationException(), +    }, +, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestProgressLogger.groovy, +import org.gradle.internal.logging.progress.ProgressLogger, +import org.gradle.internal.logging.progress.ProgressLoggerFactory, +    /** Factory to build a progress logger when testing starts */, +    ProgressLoggerFactory factory, +       lets us move things around without worrying about breaking things. */, +        progressLogger = factory.newOperation(TestProgressLogger), +        progressLogger.setDescription('Randomized test runner'), +++ b/buildSrc/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import org.gradle.internal.logging.progress.ProgressLoggerFactory, +import javax.inject.Inject, +, +class RandomizedTestingTask extends DefaultTask {, +    @Inject, +    ProgressLoggerFactory getProgressLoggerFactory() {, +        throw new UnsupportedOperationException(), +    }, +, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestProgressLogger.groovy, +import org.gradle.internal.logging.progress.ProgressLogger, +import org.gradle.internal.logging.progress.ProgressLoggerFactory, +    /** Factory to build a progress logger when testing starts */, +    ProgressLoggerFactory factory, +       lets us move things around without worrying about breaking things. */, +        progressLogger = factory.newOperation(TestProgressLogger), +        progressLogger.setDescription('Randomized test runner'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/TapLoggerOutputStream.groovy, +import org.gradle.internal.logging.progress.ProgressLogger, +        progressLogger = args.factory.newOperation(VagrantLoggerOutputStream), +++ b/buildSrc/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import org.gradle.internal.logging.progress.ProgressLoggerFactory, +import javax.inject.Inject, +, +class RandomizedTestingTask extends DefaultTask {, +    @Inject, +    ProgressLoggerFactory getProgressLoggerFactory() {, +        throw new UnsupportedOperationException(), +    }, +, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestProgressLogger.groovy, +import org.gradle.internal.logging.progress.ProgressLogger, +import org.gradle.internal.logging.progress.ProgressLoggerFactory, +    /** Factory to build a progress logger when testing starts */, +    ProgressLoggerFactory factory, +       lets us move things around without worrying about breaking things. */]