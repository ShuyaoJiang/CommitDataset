[+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/execution/search/extractor/FieldHitExtractor.java, +                    if (i < path.length - 1) {, +                    } else {, +                        // We exhausted the path and got a map, +                        // If it is an object - it will be handled in the value extractor, +                        value = node;, +                    }, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/execution/search/extractor/FieldHitExtractor.java, +                    if (i < path.length - 1) {, +                    } else {, +                        // We exhausted the path and got a map, +                        // If it is an object - it will be handled in the value extractor, +                        value = node;, +                    }, +++ b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/execution/search/extractor/FieldHitExtractorTests.java, +    public void testObjectsForSourceValue() throws IOException {, +        String fieldName = randomAlphaOfLength(5);, +        FieldHitExtractor fe = new FieldHitExtractor(fieldName, null, false);, +        SearchHit hit = new SearchHit(1);, +        XContentBuilder source = JsonXContent.contentBuilder();, +        source.startObject(); {, +            source.startObject(fieldName); {, +                source.field("b", "c");, +            }, +            source.endObject();, +        }, +        source.endObject();, +        BytesReference sourceRef = BytesReference.bytes(source);, +        hit.sourceRef(sourceRef);, +        SqlException ex = expectThrows(SqlException.class, () -> fe.extract(hit));, +        assertThat(ex.getMessage(), is("Objects (returned by [" + fieldName + "]) are not supported"));, +    }, +]