[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +            validateSettingKey(setting);, +, +    protected void validateSettingKey(Setting setting) {, +        if (isValidKey(setting.getKey()) == false && (setting.isGroupSetting() && isValidGroupKey(setting.getKey())) == false) {, +            throw new IllegalArgumentException("illegal settings key: [" + setting.getKey() + "]");, +        }, +    }, +, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +            validateSettingKey(setting);, +, +    protected void validateSettingKey(Setting setting) {, +        if (isValidKey(setting.getKey()) == false && (setting.isGroupSetting() && isValidGroupKey(setting.getKey())) == false) {, +            throw new IllegalArgumentException("illegal settings key: [" + setting.getKey() + "]");, +        }, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +    @Override, +    protected void validateSettingKey(Setting setting) {, +        if (setting.getKey().startsWith("index.") == false) {, +            throw new IllegalArgumentException("illegal settings key: [" + setting.getKey() + "] must start with [index.]");, +        }, +        super.validateSettingKey(setting);, +    }, +, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +            validateSettingKey(setting);, +, +    protected void validateSettingKey(Setting setting) {, +        if (isValidKey(setting.getKey()) == false && (setting.isGroupSetting() && isValidGroupKey(setting.getKey())) == false) {, +            throw new IllegalArgumentException("illegal settings key: [" + setting.getKey() + "]");, +        }, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +    @Override, +    protected void validateSettingKey(Setting setting) {, +        if (setting.getKey().startsWith("index.") == false) {, +            throw new IllegalArgumentException("illegal settings key: [" + setting.getKey() + "] must start with [index.]");, +        }, +        super.validateSettingKey(setting);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/settings/Settings.java, +     * Returns <tt>true</tt> if this settings object contains no settings, +     * @return <tt>true</tt> if this settings object contains no settings, +     */, +    public boolean isEmpty() {, +        return this.settings.isEmpty();, +    }, +, +    /**, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +            validateSettingKey(setting);, +, +    protected void validateSettingKey(Setting setting) {, +        if (isValidKey(setting.getKey()) == false && (setting.isGroupSetting() && isValidGroupKey(setting.getKey())) == false) {, +            throw new IllegalArgumentException("illegal settings key: [" + setting.getKey() + "]");, +        }, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +    @Override, +    protected void validateSettingKey(Setting setting) {, +        if (setting.getKey().startsWith("index.") == false) {, +            throw new IllegalArgumentException("illegal settings key: [" + setting.getKey() + "] must start with [index.]");, +        }, +        super.validateSettingKey(setting);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/settings/Settings.java, +     * Returns <tt>true</tt> if this settings object contains no settings, +     * @return <tt>true</tt> if this settings object contains no settings, +     */, +    public boolean isEmpty() {, +        return this.settings.isEmpty();, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java, +        final Predicate<String> acceptOnlyClusterSettings = TRIBE_CLIENT_NODE_SETTINGS_PREDICATE.negate();, +        if (setting.hasNodeScope() || setting.hasIndexScope()) {, +            }, +            if (setting.hasIndexScope()) {, +            }, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +            validateSettingKey(setting);, +, +    protected void validateSettingKey(Setting setting) {, +        if (isValidKey(setting.getKey()) == false && (setting.isGroupSetting() && isValidGroupKey(setting.getKey())) == false) {, +            throw new IllegalArgumentException("illegal settings key: [" + setting.getKey() + "]");, +        }]