[+++ b/modules/lang-painless/src/test/resources/rest-api-spec/test/painless/10_basic.yaml, +# Integration tests for Painless Plugin, +#, +"Painless plugin loaded":, +    - do:, +        cluster.state: {}, +, +    # Get master node id, +    - set: { master_node: master }, +, +    - do:, +        nodes.info: {}, +, +    - match:  { nodes.$master.modules.0.name: lang-painless }, +++ b/modules/lang-painless/src/test/resources/rest-api-spec/test/painless/10_basic.yaml, +# Integration tests for Painless Plugin, +#, +"Painless plugin loaded":, +    - do:, +        cluster.state: {}, +, +    # Get master node id, +    - set: { master_node: master }, +, +    - do:, +        nodes.info: {}, +, +    - match:  { nodes.$master.modules.0.name: lang-painless }, +++ b/modules/lang-painless/src/test/resources/rest-api-spec/test/painless/15_update.yaml, +---, +"Update Script":, +, +  - do:, +      index:, +          index:  test_1, +          type:   test, +          id:     1, +          body:, +              foo:    bar, +              count:  1, +, +  - do:, +      update:, +          index:  test_1, +          type:   test, +          id:     1, +          body:, +            script:, +              lang:   painless, +              inline: "ctx._source.foo = params.bar", +              params: { bar: 'xxx' }, +, +  - match: { _index:   test_1 }, +  - match: { _type:    test   }, +  - match: { _id:      "1"    }, +  - match: { _version: 2      }, +, +  - do:, +      get:, +          index:  test_1, +          type:   test, +          id:     1, +, +  - match: { _source.foo:        xxx }, +  - match: { _source.count:      1   }, +, +  - do:, +      update:, +          index:  test_1, +          type:   test, +          id:     1, +          body:, +            script:, +              lang:   painless, +              inline: "ctx._source.foo = 'yyy'", +, +  - match: { _index:   test_1 }, +  - match: { _type:    test   }, +  - match: { _id:      "1"    }, +  - match: { _version: 3      }, +, +  - do:, +      get:, +          index:  test_1, +          type:   test, +          id:     1, +, +  - match: { _source.foo:        yyy }, +  - match: { _source.count:      1   }, +, +  - do:, +      update:, +          index:  test_1, +          type:   test, +          id:     1, +          body:, +            script:, +              lang:   painless, +              inline: "ctx._source.missing_length = ctx._source.missing?.length()", +]