[+++ b/.ci/java-versions.properties, +++ b/.ci/java-versions.properties, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/.ci/java-versions.properties, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/.ci/java-versions.properties, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ /dev/null, +++ b/.ci/java-versions.properties, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +    static Request rethrottleReindex(RethrottleRequest rethrottleRequest) {, +        return rethrottle(rethrottleRequest, "_reindex");, +    }, +, +    static Request rethrottleUpdateByQuery(RethrottleRequest rethrottleRequest) {, +        return rethrottle(rethrottleRequest, "_update_by_query");, +    }, +, +    static Request rethrottleDeleteByQuery(RethrottleRequest rethrottleRequest) {, +        return rethrottle(rethrottleRequest, "_delete_by_query");, +    }, +, +    private static Request rethrottle(RethrottleRequest rethrottleRequest, String firstPathPart) {, +        String endpoint = new EndpointBuilder().addPathPart(firstPathPart).addPathPart(rethrottleRequest.getTaskId().toString()), +++ b/.ci/java-versions.properties, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +    static Request rethrottleReindex(RethrottleRequest rethrottleRequest) {, +        return rethrottle(rethrottleRequest, "_reindex");, +    }, +, +    static Request rethrottleUpdateByQuery(RethrottleRequest rethrottleRequest) {, +        return rethrottle(rethrottleRequest, "_update_by_query");, +    }, +, +    static Request rethrottleDeleteByQuery(RethrottleRequest rethrottleRequest) {, +        return rethrottle(rethrottleRequest, "_delete_by_query");, +    }, +, +    private static Request rethrottle(RethrottleRequest rethrottleRequest, String firstPathPart) {, +        String endpoint = new EndpointBuilder().addPathPart(firstPathPart).addPathPart(rethrottleRequest.getTaskId().toString()), +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +     * Executes a delete by query rethrottle request., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html">, +     *     Delete By Query API on elastic.co</a>, +     * @param rethrottleRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public final ListTasksResponse deleteByQueryRethrottle(RethrottleRequest rethrottleRequest, RequestOptions options) throws IOException {, +        return performRequestAndParseEntity(rethrottleRequest, RequestConverters::rethrottleDeleteByQuery, options,, +                ListTasksResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously execute an delete by query rethrottle request., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html">, +     *     Delete By Query API on elastic.co</a>, +     * @param rethrottleRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public final void deleteByQueryRethrottleAsync(RethrottleRequest rethrottleRequest, RequestOptions options,, +            ActionListener<ListTasksResponse> listener) {, +        performRequestAsyncAndParseEntity(rethrottleRequest, RequestConverters::rethrottleDeleteByQuery, options,, +                ListTasksResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +     * Executes a update by query rethrottle request., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html">, +     *     Update By Query API on elastic.co</a>, +     * @param rethrottleRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public final ListTasksResponse updateByQueryRethrottle(RethrottleRequest rethrottleRequest, RequestOptions options) throws IOException {, +        return performRequestAndParseEntity(rethrottleRequest, RequestConverters::rethrottleUpdateByQuery, options,, +                ListTasksResponse::fromXContent, emptySet());, +    }, +]