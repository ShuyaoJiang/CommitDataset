[+++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +When requesting detailed buckets (typically for displaying a "zoomed in" map) a filter like <<query-dsl-geo-bounding-box-query,geo_bounding_box>> should be applied to narrow the subject area otherwise potentially millions of buckets will be created and returned., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +When requesting detailed buckets (typically for displaying a "zoomed in" map) a filter like <<query-dsl-geo-bounding-box-query,geo_bounding_box>> should be applied to narrow the subject area otherwise potentially millions of buckets will be created and returned., +++ b/docs/reference/api-conventions.asciidoc, +the <<query-dsl-geo-distance-query>>), the default unit if none is specified is, +The `precision` parameter in the <<query-dsl-geohash-cell-query>> accepts, +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +When requesting detailed buckets (typically for displaying a "zoomed in" map) a filter like <<query-dsl-geo-bounding-box-query,geo_bounding_box>> should be applied to narrow the subject area otherwise potentially millions of buckets will be created and returned., +++ b/docs/reference/api-conventions.asciidoc, +the <<query-dsl-geo-distance-query>>), the default unit if none is specified is, +The `precision` parameter in the <<query-dsl-geohash-cell-query>> accepts, +++ b/docs/reference/getting-started.asciidoc, +But queries do not always to produce scores, in particular when they are only used for "filtering" the document set. Elasticsearch detects these situations and automatically optimizes query execution in order not to compute useless scores., +To understand filters, let's first introduce the <<query-dsl-filtered-query,`filtered` query>>, which allows you to combine a query (like `match_all`, `match`, `bool`, etc.) together with another query which is only used for filtering. As an example, let's introduce the <<query-dsl-range-query,`range` query>>, which allows us to filter documents by a range of values. This is generally used for numeric or date filtering., +Dissecting the above, the filtered query contains a `match_all` query (the query part) and a `range` query (the filter part). We can substitute any other queries into the query and the filter parts. In the above case, the range query makes perfect sense since documents falling into the range all match "equally", i.e., no document is more relevant than another., +In addition to the `match_all`, `match`, `bool`, `filtered`, and `range` queries, there are a lot of other query types that are available and we won't go into them here. Since we already have a basic understanding of how they work, it shouldn't be too difficult to apply this knowledge in learning and experimenting with the other query types., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +When requesting detailed buckets (typically for displaying a "zoomed in" map) a filter like <<query-dsl-geo-bounding-box-query,geo_bounding_box>> should be applied to narrow the subject area otherwise potentially millions of buckets will be created and returned., +++ b/docs/reference/api-conventions.asciidoc, +the <<query-dsl-geo-distance-query>>), the default unit if none is specified is, +The `precision` parameter in the <<query-dsl-geohash-cell-query>> accepts, +++ b/docs/reference/getting-started.asciidoc, +But queries do not always to produce scores, in particular when they are only used for "filtering" the document set. Elasticsearch detects these situations and automatically optimizes query execution in order not to compute useless scores., +To understand filters, let's first introduce the <<query-dsl-filtered-query,`filtered` query>>, which allows you to combine a query (like `match_all`, `match`, `bool`, etc.) together with another query which is only used for filtering. As an example, let's introduce the <<query-dsl-range-query,`range` query>>, which allows us to filter documents by a range of values. This is generally used for numeric or date filtering., +Dissecting the above, the filtered query contains a `match_all` query (the query part) and a `range` query (the filter part). We can substitute any other queries into the query and the filter parts. In the above case, the range query makes perfect sense since documents falling into the range all match "equally", i.e., no document is more relevant than another., +In addition to the `match_all`, `match`, `bool`, `filtered`, and `range` queries, there are a lot of other query types that are available and we won't go into them here. Since we already have a basic understanding of how they work, it shouldn't be too difficult to apply this knowledge in learning and experimenting with the other query types., +++ b/docs/reference/mapping/types/geo-point-type.asciidoc, +by the <<query-dsl-geohash-cell-query>> to find geopoints within a, +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +When requesting detailed buckets (typically for displaying a "zoomed in" map) a filter like <<query-dsl-geo-bounding-box-query,geo_bounding_box>> should be applied to narrow the subject area otherwise potentially millions of buckets will be created and returned., +++ b/docs/reference/api-conventions.asciidoc, +the <<query-dsl-geo-distance-query>>), the default unit if none is specified is, +The `precision` parameter in the <<query-dsl-geohash-cell-query>> accepts, +++ b/docs/reference/getting-started.asciidoc, +But queries do not always to produce scores, in particular when they are only used for "filtering" the document set. Elasticsearch detects these situations and automatically optimizes query execution in order not to compute useless scores., +To understand filters, let's first introduce the <<query-dsl-filtered-query,`filtered` query>>, which allows you to combine a query (like `match_all`, `match`, `bool`, etc.) together with another query which is only used for filtering. As an example, let's introduce the <<query-dsl-range-query,`range` query>>, which allows us to filter documents by a range of values. This is generally used for numeric or date filtering., +Dissecting the above, the filtered query contains a `match_all` query (the query part) and a `range` query (the filter part). We can substitute any other queries into the query and the filter parts. In the above case, the range query makes perfect sense since documents falling into the range all match "equally", i.e., no document is more relevant than another., +In addition to the `match_all`, `match`, `bool`, `filtered`, and `range` queries, there are a lot of other query types that are available and we won't go into them here. Since we already have a basic understanding of how they work, it shouldn't be too difficult to apply this knowledge in learning and experimenting with the other query types., +++ b/docs/reference/mapping/types/geo-point-type.asciidoc, +by the <<query-dsl-geohash-cell-query>> to find geopoints within a, +++ b/docs/reference/mapping/types/geo-shape-type.asciidoc, +<<query-dsl-geo-shape-query,geo_shape Query>>., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +When requesting detailed buckets (typically for displaying a "zoomed in" map) a filter like <<query-dsl-geo-bounding-box-query,geo_bounding_box>> should be applied to narrow the subject area otherwise potentially millions of buckets will be created and returned., +++ b/docs/reference/api-conventions.asciidoc, +the <<query-dsl-geo-distance-query>>), the default unit if none is specified is, +The `precision` parameter in the <<query-dsl-geohash-cell-query>> accepts, +++ b/docs/reference/getting-started.asciidoc, +But queries do not always to produce scores, in particular when they are only used for "filtering" the document set. Elasticsearch detects these situations and automatically optimizes query execution in order not to compute useless scores., +To understand filters, let's first introduce the <<query-dsl-filtered-query,`filtered` query>>, which allows you to combine a query (like `match_all`, `match`, `bool`, etc.) together with another query which is only used for filtering. As an example, let's introduce the <<query-dsl-range-query,`range` query>>, which allows us to filter documents by a range of values. This is generally used for numeric or date filtering., +Dissecting the above, the filtered query contains a `match_all` query (the query part) and a `range` query (the filter part). We can substitute any other queries into the query and the filter parts. In the above case, the range query makes perfect sense since documents falling into the range all match "equally", i.e., no document is more relevant than another., +In addition to the `match_all`, `match`, `bool`, `filtered`, and `range` queries, there are a lot of other query types that are available and we won't go into them here. Since we already have a basic understanding of how they work, it shouldn't be too difficult to apply this knowledge in learning and experimenting with the other query types., +++ b/docs/reference/mapping/types/geo-point-type.asciidoc, +by the <<query-dsl-geohash-cell-query>> to find geopoints within a, +++ b/docs/reference/mapping/types/geo-shape-type.asciidoc, +<<query-dsl-geo-shape-query,geo_shape Query>>., +++ b/docs/reference/mapping/types/nested-type.asciidoc, +<<query-dsl-nested-query,nested query>>., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +When requesting detailed buckets (typically for displaying a "zoomed in" map) a filter like <<query-dsl-geo-bounding-box-query,geo_bounding_box>> should be applied to narrow the subject area otherwise potentially millions of buckets will be created and returned., +++ b/docs/reference/api-conventions.asciidoc, +the <<query-dsl-geo-distance-query>>), the default unit if none is specified is, +The `precision` parameter in the <<query-dsl-geohash-cell-query>> accepts, +++ b/docs/reference/getting-started.asciidoc, +But queries do not always to produce scores, in particular when they are only used for "filtering" the document set. Elasticsearch detects these situations and automatically optimizes query execution in order not to compute useless scores., +To understand filters, let's first introduce the <<query-dsl-filtered-query,`filtered` query>>, which allows you to combine a query (like `match_all`, `match`, `bool`, etc.) together with another query which is only used for filtering. As an example, let's introduce the <<query-dsl-range-query,`range` query>>, which allows us to filter documents by a range of values. This is generally used for numeric or date filtering., +Dissecting the above, the filtered query contains a `match_all` query (the query part) and a `range` query (the filter part). We can substitute any other queries into the query and the filter parts. In the above case, the range query makes perfect sense since documents falling into the range all match "equally", i.e., no document is more relevant than another., +In addition to the `match_all`, `match`, `bool`, `filtered`, and `range` queries, there are a lot of other query types that are available and we won't go into them here. Since we already have a basic understanding of how they work, it shouldn't be too difficult to apply this knowledge in learning and experimenting with the other query types., +++ b/docs/reference/mapping/types/geo-point-type.asciidoc, +by the <<query-dsl-geohash-cell-query>> to find geopoints within a, +++ b/docs/reference/mapping/types/geo-shape-type.asciidoc, +<<query-dsl-geo-shape-query,geo_shape Query>>., +++ b/docs/reference/mapping/types/nested-type.asciidoc, +<<query-dsl-nested-query,nested query>>., +++ b/docs/reference/migration/migrate_1_4.asciidoc, +<<indices-aliases,Aliases>> can include <<query-dsl,filters>> which, +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +When requesting detailed buckets (typically for displaying a "zoomed in" map) a filter like <<query-dsl-geo-bounding-box-query,geo_bounding_box>> should be applied to narrow the subject area otherwise potentially millions of buckets will be created and returned., +++ b/docs/reference/api-conventions.asciidoc, +the <<query-dsl-geo-distance-query>>), the default unit if none is specified is, +The `precision` parameter in the <<query-dsl-geohash-cell-query>> accepts, +++ b/docs/reference/getting-started.asciidoc, +But queries do not always to produce scores, in particular when they are only used for "filtering" the document set. Elasticsearch detects these situations and automatically optimizes query execution in order not to compute useless scores., +To understand filters, let's first introduce the <<query-dsl-filtered-query,`filtered` query>>, which allows you to combine a query (like `match_all`, `match`, `bool`, etc.) together with another query which is only used for filtering. As an example, let's introduce the <<query-dsl-range-query,`range` query>>, which allows us to filter documents by a range of values. This is generally used for numeric or date filtering., +Dissecting the above, the filtered query contains a `match_all` query (the query part) and a `range` query (the filter part). We can substitute any other queries into the query and the filter parts. In the above case, the range query makes perfect sense since documents falling into the range all match "equally", i.e., no document is more relevant than another., +In addition to the `match_all`, `match`, `bool`, `filtered`, and `range` queries, there are a lot of other query types that are available and we won't go into them here. Since we already have a basic understanding of how they work, it shouldn't be too difficult to apply this knowledge in learning and experimenting with the other query types., +++ b/docs/reference/mapping/types/geo-point-type.asciidoc, +by the <<query-dsl-geohash-cell-query>> to find geopoints within a, +++ b/docs/reference/mapping/types/geo-shape-type.asciidoc, +<<query-dsl-geo-shape-query,geo_shape Query>>., +++ b/docs/reference/mapping/types/nested-type.asciidoc, +<<query-dsl-nested-query,nested query>>., +++ b/docs/reference/migration/migrate_1_4.asciidoc, +<<indices-aliases,Aliases>> can include <<query-dsl,filters>> which, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +`org.elasticsearch.index.queries.FilterBuilders` has been removed as part of the merge of, +queries and filters. These filters are now available in `QueryBuilders` with the same name., +All methods that used to accept a `FilterBuilder` now accept a `QueryBuilder` instead., +]