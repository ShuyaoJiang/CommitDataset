[+++ b/core/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +++ b/core/src/main/java/org/elasticsearch/gateway/MetaStateService.java, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +++ b/core/src/main/java/org/elasticsearch/gateway/MetaStateService.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesModule.java, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +++ b/core/src/main/java/org/elasticsearch/gateway/MetaStateService.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesModule.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +++ b/core/src/main/java/org/elasticsearch/gateway/MetaStateService.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesModule.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import org.elasticsearch.gateway.MetaStateService;, +            final MetaStateService metaStateService = new MetaStateService(settings, nodeEnvironment);, +            final IndicesService indicesService = new IndicesService(settings, pluginsService, nodeEnvironment,, +                settingsModule.getClusterSettings(), analysisModule.getAnalysisRegistry(), searchModule.getQueryParserRegistry(),, +                clusterModule.getIndexNameExpressionResolver(), indicesModule.getMapperRegistry(), namedWriteableRegistry,, +                threadPool, settingsModule.getIndexScopedSettings(), circuitBreakerService, metaStateService);, +                    b.bind(MetaDataUpgrader.class).toInstance(metaDataUpgrader);, +                    b.bind(MetaStateService.class).toInstance(metaStateService);, +                    b.bind(IndicesService.class).toInstance(indicesService);, +, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +++ b/core/src/main/java/org/elasticsearch/gateway/MetaStateService.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesModule.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import org.elasticsearch.gateway.MetaStateService;, +            final MetaStateService metaStateService = new MetaStateService(settings, nodeEnvironment);, +            final IndicesService indicesService = new IndicesService(settings, pluginsService, nodeEnvironment,, +                settingsModule.getClusterSettings(), analysisModule.getAnalysisRegistry(), searchModule.getQueryParserRegistry(),, +                clusterModule.getIndexNameExpressionResolver(), indicesModule.getMapperRegistry(), namedWriteableRegistry,, +                threadPool, settingsModule.getIndexScopedSettings(), circuitBreakerService, metaStateService);, +                    b.bind(MetaDataUpgrader.class).toInstance(metaDataUpgrader);, +                    b.bind(MetaStateService.class).toInstance(metaStateService);, +                    b.bind(IndicesService.class).toInstance(indicesService);, +, +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestTypesExistsAction.java, +        controller.registerHandler(HEAD, "/{index}/{type}", this);, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +++ b/core/src/main/java/org/elasticsearch/gateway/MetaStateService.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesModule.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import org.elasticsearch.gateway.MetaStateService;, +            final MetaStateService metaStateService = new MetaStateService(settings, nodeEnvironment);, +            final IndicesService indicesService = new IndicesService(settings, pluginsService, nodeEnvironment,, +                settingsModule.getClusterSettings(), analysisModule.getAnalysisRegistry(), searchModule.getQueryParserRegistry(),, +                clusterModule.getIndexNameExpressionResolver(), indicesModule.getMapperRegistry(), namedWriteableRegistry,, +                threadPool, settingsModule.getIndexScopedSettings(), circuitBreakerService, metaStateService);, +                    b.bind(MetaDataUpgrader.class).toInstance(metaDataUpgrader);, +                    b.bind(MetaStateService.class).toInstance(metaStateService);, +                    b.bind(IndicesService.class).toInstance(indicesService);, +, +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestTypesExistsAction.java, +        controller.registerHandler(HEAD, "/{index}/{type}", this);, +++ b/docs/reference/indices/indices-exists.asciidoc, +curl -XHEAD -i 'http://localhost:9200/twitter', +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +++ b/core/src/main/java/org/elasticsearch/gateway/MetaStateService.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesModule.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import org.elasticsearch.gateway.MetaStateService;, +            final MetaStateService metaStateService = new MetaStateService(settings, nodeEnvironment);, +            final IndicesService indicesService = new IndicesService(settings, pluginsService, nodeEnvironment,, +                settingsModule.getClusterSettings(), analysisModule.getAnalysisRegistry(), searchModule.getQueryParserRegistry(),, +                clusterModule.getIndexNameExpressionResolver(), indicesModule.getMapperRegistry(), namedWriteableRegistry,, +                threadPool, settingsModule.getIndexScopedSettings(), circuitBreakerService, metaStateService);, +                    b.bind(MetaDataUpgrader.class).toInstance(metaDataUpgrader);, +                    b.bind(MetaStateService.class).toInstance(metaStateService);, +                    b.bind(IndicesService.class).toInstance(indicesService);, +, +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestTypesExistsAction.java, +        controller.registerHandler(HEAD, "/{index}/{type}", this);, +++ b/docs/reference/indices/indices-exists.asciidoc, +curl -XHEAD -i 'http://localhost:9200/twitter', +++ b/docs/reference/indices/types-exists.asciidoc, +curl -XHEAD -i 'http://localhost:9200/twitter/tweet', +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +++ b/core/src/main/java/org/elasticsearch/gateway/MetaStateService.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesModule.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import org.elasticsearch.gateway.MetaStateService;, +            final MetaStateService metaStateService = new MetaStateService(settings, nodeEnvironment);, +            final IndicesService indicesService = new IndicesService(settings, pluginsService, nodeEnvironment,, +                settingsModule.getClusterSettings(), analysisModule.getAnalysisRegistry(), searchModule.getQueryParserRegistry(),, +                clusterModule.getIndexNameExpressionResolver(), indicesModule.getMapperRegistry(), namedWriteableRegistry,, +                threadPool, settingsModule.getIndexScopedSettings(), circuitBreakerService, metaStateService);, +                    b.bind(MetaDataUpgrader.class).toInstance(metaDataUpgrader);, +                    b.bind(MetaStateService.class).toInstance(metaStateService);, +                    b.bind(IndicesService.class).toInstance(indicesService);, +, +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestTypesExistsAction.java, +        controller.registerHandler(HEAD, "/{index}/{type}", this);, +++ b/docs/reference/indices/indices-exists.asciidoc]