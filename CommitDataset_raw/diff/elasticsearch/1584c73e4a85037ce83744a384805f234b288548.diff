[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +    public NodeInfo(Version version, Build build, DiscoveryNode node, @Nullable ImmutableMap<String, String> serviceAttributes, @Nullable Settings settings,, +        return getNode().getHostName();, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +    public NodeInfo(Version version, Build build, DiscoveryNode node, @Nullable ImmutableMap<String, String> serviceAttributes, @Nullable Settings settings,, +        return getNode().getHostName();, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoResponse.java, +            builder.field("host", nodeInfo.getNode().getHostName(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("ip", nodeInfo.getNode().getHostAddress(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +    public NodeInfo(Version version, Build build, DiscoveryNode node, @Nullable ImmutableMap<String, String> serviceAttributes, @Nullable Settings settings,, +        return getNode().getHostName();, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoResponse.java, +            builder.field("host", nodeInfo.getNode().getHostName(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("ip", nodeInfo.getNode().getHostAddress(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +    public NodeStats(DiscoveryNode node, long timestamp, @Nullable NodeIndicesStats indices,, +        return getNode().getHostName();, +            builder.field("host", getNode().getHostName(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("ip", getNode().getAddress(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +    public NodeInfo(Version version, Build build, DiscoveryNode node, @Nullable ImmutableMap<String, String> serviceAttributes, @Nullable Settings settings,, +        return getNode().getHostName();, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoResponse.java, +            builder.field("host", nodeInfo.getNode().getHostName(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("ip", nodeInfo.getNode().getHostAddress(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +    public NodeStats(DiscoveryNode node, long timestamp, @Nullable NodeIndicesStats indices,, +        return getNode().getHostName();, +            builder.field("host", getNode().getHostName(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("ip", getNode().getAddress(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +                        newNodes.add(new DiscoveryNode(nodeWithInfo.name(), nodeWithInfo.id(), nodeWithInfo.getHostName(), nodeWithInfo.getHostAddress(), listedNode.address(), nodeWithInfo.attributes(), nodeWithInfo.version()));, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +    public NodeInfo(Version version, Build build, DiscoveryNode node, @Nullable ImmutableMap<String, String> serviceAttributes, @Nullable Settings settings,, +        return getNode().getHostName();, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoResponse.java, +            builder.field("host", nodeInfo.getNode().getHostName(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("ip", nodeInfo.getNode().getHostAddress(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +    public NodeStats(DiscoveryNode node, long timestamp, @Nullable NodeIndicesStats indices,, +        return getNode().getHostName();, +            builder.field("host", getNode().getHostName(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("ip", getNode().getAddress(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +                        newNodes.add(new DiscoveryNode(nodeWithInfo.name(), nodeWithInfo.id(), nodeWithInfo.getHostName(), nodeWithInfo.getHostAddress(), listedNode.address(), nodeWithInfo.attributes(), nodeWithInfo.version()));, +++ b/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.network.NetworkUtils;, +    private String hostName;, +    private String hostAddress;, +        this(nodeName, nodeId, NetworkUtils.getLocalHostName(""), NetworkUtils.getLocalHostAddress(""), address, attributes, version);, +    }, +, +    public DiscoveryNode(String nodeName, String nodeId, String hostName, String hostAddress, TransportAddress address, Map<String, String> attributes, Version version) {, +        this.hostName = hostName.intern();, +        this.hostAddress = hostAddress.intern();, +    public String getHostName() {, +        return this.hostName;, +    }, +, +    public String getHostAddress() {, +        return this.hostAddress;, +    }, +, +        hostName = in.readString().intern();, +        hostAddress = in.readString().intern();, +        out.writeString(hostName);, +        out.writeString(hostAddress);, +        if (Strings.hasLength(hostName)) {, +            sb.append('[').append(hostName).append(']');, +        }, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +    public NodeInfo(Version version, Build build, DiscoveryNode node, @Nullable ImmutableMap<String, String> serviceAttributes, @Nullable Settings settings,, +        return getNode().getHostName();, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoResponse.java, +            builder.field("host", nodeInfo.getNode().getHostName(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("ip", nodeInfo.getNode().getHostAddress(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +    public NodeStats(DiscoveryNode node, long timestamp, @Nullable NodeIndicesStats indices,, +        return getNode().getHostName();, +            builder.field("host", getNode().getHostName(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("ip", getNode().getAddress(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +                        newNodes.add(new DiscoveryNode(nodeWithInfo.name(), nodeWithInfo.id(), nodeWithInfo.getHostName(), nodeWithInfo.getHostAddress(), listedNode.address(), nodeWithInfo.attributes(), nodeWithInfo.version()));, +++ b/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.network.NetworkUtils;, +    private String hostName;, +    private String hostAddress;, +        this(nodeName, nodeId, NetworkUtils.getLocalHostName(""), NetworkUtils.getLocalHostAddress(""), address, attributes, version);, +    }, +, +    public DiscoveryNode(String nodeName, String nodeId, String hostName, String hostAddress, TransportAddress address, Map<String, String> attributes, Version version) {, +        this.hostName = hostName.intern();, +        this.hostAddress = hostAddress.intern();, +    public String getHostName() {, +        return this.hostName;, +    }, +]