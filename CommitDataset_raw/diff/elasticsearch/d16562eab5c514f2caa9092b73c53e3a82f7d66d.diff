[+++ b/build.gradle, +      repositories {, +        maven {, +          name = 'localTest', +          url = "${rootProject.buildDir}/local-test-repo", +    }, +  }, +, +    "org.elasticsearch.plugin:elasticsearch-scripting-painless-spi:${version}": ':modules:lang-painless:spi',, +++ b/build.gradle, +      repositories {, +        maven {, +          name = 'localTest', +          url = "${rootProject.buildDir}/local-test-repo", +    }, +  }, +, +    "org.elasticsearch.plugin:elasticsearch-scripting-painless-spi:${version}": ':modules:lang-painless:spi',, +++ b/buildSrc/build.gradle, +    // integration test requires the local testing repo for example plugin builds, +    dependsOn project.rootProject.allprojects.collect {, +      it.tasks.matching { it.name == 'publishNebulaPublicationToLocalTestRepository'}, +    }, +    // tell BuildExamplePluginsIT where to find the example plugins, +    systemProperty (, +            'test.build-tools.plugin.examples',, +            files(, +                    project(':example-plugins').subprojects.collect { it.projectDir }, +            ).asPath,, +    ), +    systemProperty 'test.local-test-repo-path', "${rootProject.buildDir}/local-test-repo", +    systemProperty 'test.lucene-snapshot-revision', (versions.lucene =~ /\w+-snapshot-([a-z0-9]+)/)[0][1], +++ b/build.gradle, +      repositories {, +        maven {, +          name = 'localTest', +          url = "${rootProject.buildDir}/local-test-repo", +    }, +  }, +, +    "org.elasticsearch.plugin:elasticsearch-scripting-painless-spi:${version}": ':modules:lang-painless:spi',, +++ b/buildSrc/build.gradle, +    // integration test requires the local testing repo for example plugin builds, +    dependsOn project.rootProject.allprojects.collect {, +      it.tasks.matching { it.name == 'publishNebulaPublicationToLocalTestRepository'}, +    }, +    // tell BuildExamplePluginsIT where to find the example plugins, +    systemProperty (, +            'test.build-tools.plugin.examples',, +            files(, +                    project(':example-plugins').subprojects.collect { it.projectDir }, +            ).asPath,, +    ), +    systemProperty 'test.local-test-repo-path', "${rootProject.buildDir}/local-test-repo", +    systemProperty 'test.lucene-snapshot-revision', (versions.lucene =~ /\w+-snapshot-([a-z0-9]+)/)[0][1], +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                            artifacts = [ project.tasks.shadowJar ], +++ b/build.gradle, +      repositories {, +        maven {, +          name = 'localTest', +          url = "${rootProject.buildDir}/local-test-repo", +    }, +  }, +, +    "org.elasticsearch.plugin:elasticsearch-scripting-painless-spi:${version}": ':modules:lang-painless:spi',, +++ b/buildSrc/build.gradle, +    // integration test requires the local testing repo for example plugin builds, +    dependsOn project.rootProject.allprojects.collect {, +      it.tasks.matching { it.name == 'publishNebulaPublicationToLocalTestRepository'}, +    }, +    // tell BuildExamplePluginsIT where to find the example plugins, +    systemProperty (, +            'test.build-tools.plugin.examples',, +            files(, +                    project(':example-plugins').subprojects.collect { it.projectDir }, +            ).asPath,, +    ), +    systemProperty 'test.local-test-repo-path', "${rootProject.buildDir}/local-test-repo", +    systemProperty 'test.lucene-snapshot-revision', (versions.lucene =~ /\w+-snapshot-([a-z0-9]+)/)[0][1], +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                            artifacts = [ project.tasks.shadowJar ], +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/build.gradle, +      repositories {, +        maven {, +          name = 'localTest', +          url = "${rootProject.buildDir}/local-test-repo", +    }, +  }, +, +    "org.elasticsearch.plugin:elasticsearch-scripting-painless-spi:${version}": ':modules:lang-painless:spi',, +++ b/buildSrc/build.gradle, +    // integration test requires the local testing repo for example plugin builds, +    dependsOn project.rootProject.allprojects.collect {, +      it.tasks.matching { it.name == 'publishNebulaPublicationToLocalTestRepository'}, +    }, +    // tell BuildExamplePluginsIT where to find the example plugins, +    systemProperty (, +            'test.build-tools.plugin.examples',]