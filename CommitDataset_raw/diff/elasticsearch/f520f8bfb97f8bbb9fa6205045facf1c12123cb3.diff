[+++ b/core/src/test/java/org/elasticsearch/index/query/RangeQueryBuilderTests.java, +import org.elasticsearch.common.ParseFieldMatcher;, +import org.hamcrest.core.IsEqual;, +, +    public void testNamedQueryParsing() throws IOException {, +        String json =, +                "{\n" +, +                "  \"range\" : {\n" +, +                "    \"timestamp\" : {\n" +, +                "      \"from\" : \"2015-01-01 00:00:00\",\n" +, +                "      \"to\" : \"now\",\n" +, +                "      \"boost\" : 1.0,\n" +, +                "      \"_name\" : \"my_range\"\n" +, +                "    }\n" +, +                "  }\n" +, +                "}";, +        assertNotNull(parseQuery(json));, +, +        json =, +                "{\n" +, +                "  \"range\" : {\n" +, +                "    \"timestamp\" : {\n" +, +                "      \"from\" : \"2015-01-01 00:00:00\",\n" +, +                "      \"to\" : \"now\",\n" +, +                "      \"boost\" : 1.0\n" +, +                "    },\n" +, +                "    \"_name\" : \"my_range\"\n" +, +                "  }\n" +, +                "}";, +, +        // non strict parsing should accept "_name" on top level, +        assertNotNull(parseQuery(json, ParseFieldMatcher.EMPTY));, +, +        // with strict parsing, ParseField will throw exception, +        try {, +            parseQuery(json, ParseFieldMatcher.STRICT);, +            fail("Strict parsing should trigger exception for '_name' on top level");, +        } catch (IllegalArgumentException e) {, +            assertThat(e.getMessage(), equalTo("Deprecated field [_name] used, replaced by [query name is not supported in short version of range query]"));, +        }, +    }]