[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +import org.elasticsearch.cluster.block.ClusterBlock;, +import org.elasticsearch.cluster.block.ClusterBlockLevel;, +import org.elasticsearch.cluster.block.ClusterBlocks;, +    public final ClusterBlock NO_MASTER_BLOCK = new ClusterBlock(2, "no master", ClusterBlockLevel.ALL);, +, +    private final boolean blockClusterOnNoMaster;, +, +        this.blockClusterOnNoMaster = componentSettings.getAsBoolean("block_on_no_master", true);, +                clusterService.submitStateUpdateTask("zen-disco-join (elected_as_master)", new ProcessedClusterStateUpdateTask() {, +                        ClusterBlocks clusterBlocks = ClusterBlocks.builder().blocks(currentState.blocks()).removeGlobalBlock(NO_MASTER_BLOCK).build();, +                        return newClusterStateBuilder().state(currentState).nodes(builder).blocks(clusterBlocks).build();, +                clusterService.submitStateUpdateTask("zen-disco-join (detected master)", new ProcessedClusterStateUpdateTask() {, +                    @Override public ClusterState execute(ClusterState currentState) {, +                        ClusterBlocks clusterBlocks = ClusterBlocks.builder().blocks(currentState.blocks()).removeGlobalBlock(NO_MASTER_BLOCK).build();, +                        return newClusterStateBuilder().state(currentState).blocks(clusterBlocks).build();, +                    }, +, +                    @Override public void clusterStateProcessed(ClusterState clusterState) {, +                        sendInitialStateEventIfNeeded();, +                    }, +                });, +                ClusterBlocks clusterBlocks = currentState.blocks();, +                        clusterBlocks = ClusterBlocks.builder().blocks(clusterBlocks).addGlobalBlock(NO_MASTER_BLOCK).build();, +                    return newClusterStateBuilder().state(currentState).blocks(clusterBlocks).nodes(latestDiscoNodes).build();]