[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterState.java, +import org.elasticsearch.common.io.stream.BytesStreamInput;, +import org.elasticsearch.common.io.stream.BytesStreamOutput;, +import org.elasticsearch.common.io.stream.CachedStreamOutput;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +        return routingTable.routingNodes(this);, +        routingNodes = routingTable.routingNodes(this);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterState.java, +import org.elasticsearch.common.io.stream.BytesStreamInput;, +import org.elasticsearch.common.io.stream.BytesStreamOutput;, +import org.elasticsearch.common.io.stream.CachedStreamOutput;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +        return routingTable.routingNodes(this);, +        routingNodes = routingTable.routingNodes(this);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +, +    private final DiscoveryNode node;, +    public RoutingNode(DiscoveryNode node) {, +        this(node, new ArrayList<MutableShardRouting>());, +    public RoutingNode(DiscoveryNode node, List<MutableShardRouting> shards) {, +        this.node = node;, +    public DiscoveryNode node() {, +        return this.node;, +    }, +, +        return this.node.id();, +        shard.assignToNode(node.id());, +        sb.append("-----node_id[").append(node.id()).append("]\n");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterState.java, +import org.elasticsearch.common.io.stream.BytesStreamInput;, +import org.elasticsearch.common.io.stream.BytesStreamOutput;, +import org.elasticsearch.common.io.stream.CachedStreamOutput;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +        return routingTable.routingNodes(this);, +        routingNodes = routingTable.routingNodes(this);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +, +    private final DiscoveryNode node;, +    public RoutingNode(DiscoveryNode node) {, +        this(node, new ArrayList<MutableShardRouting>());, +    public RoutingNode(DiscoveryNode node, List<MutableShardRouting> shards) {, +        this.node = node;, +    public DiscoveryNode node() {, +        return this.node;, +    }, +, +        return this.node.id();, +        shard.assignToNode(node.id());, +        sb.append("-----node_id[").append(node.id()).append("]\n");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +import org.elasticsearch.cluster.ClusterState;, +    public RoutingNodes(ClusterState clusterState) {, +        this.metaData = clusterState.metaData();, +        this.blocks = clusterState.blocks();, +        this.routingTable = clusterState.routingTable();, +            this.nodesToShards.put(nodeId, new RoutingNode(clusterState.nodes().get(nodeId), entry.getValue()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterState.java, +import org.elasticsearch.common.io.stream.BytesStreamInput;, +import org.elasticsearch.common.io.stream.BytesStreamOutput;, +import org.elasticsearch.common.io.stream.CachedStreamOutput;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +        return routingTable.routingNodes(this);, +        routingNodes = routingTable.routingNodes(this);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +, +    private final DiscoveryNode node;, +    public RoutingNode(DiscoveryNode node) {, +        this(node, new ArrayList<MutableShardRouting>());, +    public RoutingNode(DiscoveryNode node, List<MutableShardRouting> shards) {, +        this.node = node;, +    public DiscoveryNode node() {, +        return this.node;, +    }, +, +        return this.node.id();, +        shard.assignToNode(node.id());, +        sb.append("-----node_id[").append(node.id()).append("]\n");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +import org.elasticsearch.cluster.ClusterState;, +    public RoutingNodes(ClusterState clusterState) {, +        this.metaData = clusterState.metaData();, +        this.blocks = clusterState.blocks();, +        this.routingTable = clusterState.routingTable();, +            this.nodesToShards.put(nodeId, new RoutingNode(clusterState.nodes().get(nodeId), entry.getValue()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java, +        return new RoutingNodes(state);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterState.java, +import org.elasticsearch.common.io.stream.BytesStreamInput;, +import org.elasticsearch.common.io.stream.BytesStreamOutput;, +import org.elasticsearch.common.io.stream.CachedStreamOutput;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +        return routingTable.routingNodes(this);]