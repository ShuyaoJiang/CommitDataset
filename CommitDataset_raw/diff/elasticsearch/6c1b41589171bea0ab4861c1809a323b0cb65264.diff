[+++ b/TESTING.asciidoc, +cd $TESTROOT, +++ b/TESTING.asciidoc, +cd $TESTROOT, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                'node.testattr'                : 'test',, +++ b/TESTING.asciidoc, +cd $TESTROOT, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                'node.testattr'                : 'test',, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +                logger.trace("cluster is blocked, scheduling a retry", blockException);, +++ b/TESTING.asciidoc, +cd $TESTROOT, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                'node.testattr'                : 'test',, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +                logger.trace("cluster is blocked, scheduling a retry", blockException);, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +import org.elasticsearch.ExceptionsHelper;, +                    logger.error("NodeStatsAction timed out for ClusterInfoUpdateJob", e);, +                    logger.error("IndicesStatsAction timed out for ClusterInfoUpdateJob", e);, +++ b/TESTING.asciidoc, +cd $TESTROOT, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                'node.testattr'                : 'test',, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +                logger.trace("cluster is blocked, scheduling a retry", blockException);, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +import org.elasticsearch.ExceptionsHelper;, +                    logger.error("NodeStatsAction timed out for ClusterInfoUpdateJob", e);, +                    logger.error("IndicesStatsAction timed out for ClusterInfoUpdateJob", e);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeService.java, +        if (attributes.containsKey("client")) {, +            throw new IllegalArgumentException("node.client setting is no longer supported, use " + Node.NODE_MASTER_SETTING.getKey(), +                    + ", " + Node.NODE_DATA_SETTING.getKey() + " and " + Node.NODE_INGEST_SETTING.getKey() + " explicitly instead");, +        attributes.remove("name"); // name is extracted in other places, +        Set<DiscoveryNode.Role> roles = new HashSet<>();, +        for (DiscoveryNode.Role role : DiscoveryNode.Role.values()) {, +            String isRoleEnabled = attributes.remove(role.getRoleName());, +            //all existing roles default to true, +            if (isRoleEnabled == null || Booleans.parseBooleanExact(isRoleEnabled)) {, +                roles.add(role);, +            }, +        }, +++ b/TESTING.asciidoc, +cd $TESTROOT, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                'node.testattr'                : 'test',, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +                logger.trace("cluster is blocked, scheduling a retry", blockException);, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +import org.elasticsearch.ExceptionsHelper;, +                    logger.error("NodeStatsAction timed out for ClusterInfoUpdateJob", e);, +                    logger.error("IndicesStatsAction timed out for ClusterInfoUpdateJob", e);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeService.java, +        if (attributes.containsKey("client")) {, +            throw new IllegalArgumentException("node.client setting is no longer supported, use " + Node.NODE_MASTER_SETTING.getKey(), +                    + ", " + Node.NODE_DATA_SETTING.getKey() + " and " + Node.NODE_INGEST_SETTING.getKey() + " explicitly instead");, +        attributes.remove("name"); // name is extracted in other places, +        Set<DiscoveryNode.Role> roles = new HashSet<>();, +        for (DiscoveryNode.Role role : DiscoveryNode.Role.values()) {, +            String isRoleEnabled = attributes.remove(role.getRoleName());, +            //all existing roles default to true, +            if (isRoleEnabled == null || Booleans.parseBooleanExact(isRoleEnabled)) {, +                roles.add(role);, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/indices/ttl/IndicesTTLService.java, +                            logger.warn("failed to execute bulk: ", e);, +++ b/TESTING.asciidoc, +cd $TESTROOT, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                'node.testattr'                : 'test',, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +                logger.trace("cluster is blocked, scheduling a retry", blockException);, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +import org.elasticsearch.ExceptionsHelper;, +                    logger.error("NodeStatsAction timed out for ClusterInfoUpdateJob", e);, +                    logger.error("IndicesStatsAction timed out for ClusterInfoUpdateJob", e);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeService.java, +        if (attributes.containsKey("client")) {, +            throw new IllegalArgumentException("node.client setting is no longer supported, use " + Node.NODE_MASTER_SETTING.getKey(), +                    + ", " + Node.NODE_DATA_SETTING.getKey() + " and " + Node.NODE_INGEST_SETTING.getKey() + " explicitly instead");, +        attributes.remove("name"); // name is extracted in other places, +        Set<DiscoveryNode.Role> roles = new HashSet<>();, +        for (DiscoveryNode.Role role : DiscoveryNode.Role.values()) {, +            String isRoleEnabled = attributes.remove(role.getRoleName());, +            //all existing roles default to true, +            if (isRoleEnabled == null || Booleans.parseBooleanExact(isRoleEnabled)) {, +                roles.add(role);, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/indices/ttl/IndicesTTLService.java, +                            logger.warn("failed to execute bulk: ", e);, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +    // this sucks that folks can mistype data, master or ingest and get away with it., +    // TODO: we should move this to node.attribute.${name} = ${value} instead., +    public static final Setting<Settings> NODE_ATTRIBUTES = Setting.groupSetting("node.", Property.NodeScope);, +++ b/TESTING.asciidoc]