[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, + * @author kimchy (shay.banon), +            for (final DfsSearchResult dfsResult : dfsResults) {, +                    executeSecondPhase(dfsResult, counter, node, querySearchRequest);, +                            for (final DfsSearchResult dfsResult : dfsResults) {, +                                    executeSecondPhase(dfsResult, counter, node, querySearchRequest);, +                    for (final DfsSearchResult dfsResult : dfsResults) {, +                                        executeSecondPhase(dfsResult, counter, node, querySearchRequest);, +                                executeSecondPhase(dfsResult, counter, node, querySearchRequest);, +        private void executeSecondPhase(final DfsSearchResult dfsResult, final AtomicInteger counter, DiscoveryNode node, final QuerySearchRequest querySearchRequest) {, +                    result.shardTarget(dfsResult.shardTarget());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, + * @author kimchy (shay.banon), +            for (final DfsSearchResult dfsResult : dfsResults) {, +                    executeSecondPhase(dfsResult, counter, node, querySearchRequest);, +                            for (final DfsSearchResult dfsResult : dfsResults) {, +                                    executeSecondPhase(dfsResult, counter, node, querySearchRequest);, +                    for (final DfsSearchResult dfsResult : dfsResults) {, +                                        executeSecondPhase(dfsResult, counter, node, querySearchRequest);, +                                executeSecondPhase(dfsResult, counter, node, querySearchRequest);, +        private void executeSecondPhase(final DfsSearchResult dfsResult, final AtomicInteger counter, DiscoveryNode node, final QuerySearchRequest querySearchRequest) {, +                    result.shardTarget(dfsResult.shardTarget());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, + * @author kimchy (shay.banon), +            for (final DfsSearchResult dfsResult : dfsResults) {, +                    executeQuery(dfsResult, counter, querySearchRequest, node);, +                            for (final DfsSearchResult dfsResult : dfsResults) {, +                                    executeQuery(dfsResult, counter, querySearchRequest, node);, +                    for (final DfsSearchResult dfsResult : dfsResults) {, +                                        executeQuery(dfsResult, counter, querySearchRequest, node);, +                                executeQuery(dfsResult, counter, querySearchRequest, node);, +        private void executeQuery(final DfsSearchResult dfsResult, final AtomicInteger counter, final QuerySearchRequest querySearchRequest, DiscoveryNode node) {, +                    result.shardTarget(dfsResult.shardTarget());, +            for (final Map.Entry<SearchShardTarget, ExtTIntArrayList> entry : docIdsToLoad.entrySet()) {, +                    executeFetch(entry.getKey(), counter, fetchSearchRequest, node);, +                            for (final Map.Entry<SearchShardTarget, ExtTIntArrayList> entry : docIdsToLoad.entrySet()) {, +                                    executeFetch(entry.getKey(), counter, fetchSearchRequest, node);, +                    for (final Map.Entry<SearchShardTarget, ExtTIntArrayList> entry : docIdsToLoad.entrySet()) {, +                                        executeFetch(entry.getKey(), counter, fetchSearchRequest, node);, +                                executeFetch(entry.getKey(), counter, fetchSearchRequest, node);, +        private void executeFetch(final SearchShardTarget shardTarget, final AtomicInteger counter, final FetchSearchRequest fetchSearchRequest, DiscoveryNode node) {, +                    result.shardTarget(shardTarget);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, + * @author kimchy (shay.banon), +            for (final DfsSearchResult dfsResult : dfsResults) {, +                    executeSecondPhase(dfsResult, counter, node, querySearchRequest);, +                            for (final DfsSearchResult dfsResult : dfsResults) {, +                                    executeSecondPhase(dfsResult, counter, node, querySearchRequest);, +                    for (final DfsSearchResult dfsResult : dfsResults) {, +                                        executeSecondPhase(dfsResult, counter, node, querySearchRequest);, +                                executeSecondPhase(dfsResult, counter, node, querySearchRequest);, +        private void executeSecondPhase(final DfsSearchResult dfsResult, final AtomicInteger counter, DiscoveryNode node, final QuerySearchRequest querySearchRequest) {, +                    result.shardTarget(dfsResult.shardTarget());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, + * @author kimchy (shay.banon), +            for (final DfsSearchResult dfsResult : dfsResults) {, +                    executeQuery(dfsResult, counter, querySearchRequest, node);, +                            for (final DfsSearchResult dfsResult : dfsResults) {, +                                    executeQuery(dfsResult, counter, querySearchRequest, node);, +                    for (final DfsSearchResult dfsResult : dfsResults) {, +                                        executeQuery(dfsResult, counter, querySearchRequest, node);, +                                executeQuery(dfsResult, counter, querySearchRequest, node);, +        private void executeQuery(final DfsSearchResult dfsResult, final AtomicInteger counter, final QuerySearchRequest querySearchRequest, DiscoveryNode node) {, +                    result.shardTarget(dfsResult.shardTarget());, +            for (final Map.Entry<SearchShardTarget, ExtTIntArrayList> entry : docIdsToLoad.entrySet()) {, +                    executeFetch(entry.getKey(), counter, fetchSearchRequest, node);, +                            for (final Map.Entry<SearchShardTarget, ExtTIntArrayList> entry : docIdsToLoad.entrySet()) {, +                                    executeFetch(entry.getKey(), counter, fetchSearchRequest, node);, +                    for (final Map.Entry<SearchShardTarget, ExtTIntArrayList> entry : docIdsToLoad.entrySet()) {, +                                        executeFetch(entry.getKey(), counter, fetchSearchRequest, node);, +                                executeFetch(entry.getKey(), counter, fetchSearchRequest, node);, +        private void executeFetch(final SearchShardTarget shardTarget, final AtomicInteger counter, final FetchSearchRequest fetchSearchRequest, DiscoveryNode node) {, +                    result.shardTarget(shardTarget);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java, +            for (final Map.Entry<SearchShardTarget, ExtTIntArrayList> entry : docIdsToLoad.entrySet()) {, +                    executeFetch(entry.getKey(), counter, fetchSearchRequest, node);, +                            for (final Map.Entry<SearchShardTarget, ExtTIntArrayList> entry : docIdsToLoad.entrySet()) {, +                                    executeFetch(entry.getKey(), counter, fetchSearchRequest, node);, +                    for (final Map.Entry<SearchShardTarget, ExtTIntArrayList> entry : docIdsToLoad.entrySet()) {, +                                        executeFetch(entry.getKey(), counter, fetchSearchRequest, node);, +                                executeFetch(entry.getKey(), counter, fetchSearchRequest, node);, +        private void executeFetch(final SearchShardTarget shardTarget, final AtomicInteger counter, final FetchSearchRequest fetchSearchRequest, DiscoveryNode node) {, +                    result.shardTarget(shardTarget);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, + * @author kimchy (shay.banon), +            for (final DfsSearchResult dfsResult : dfsResults) {, +                    executeSecondPhase(dfsResult, counter, node, querySearchRequest);, +                            for (final DfsSearchResult dfsResult : dfsResults) {, +                                    executeSecondPhase(dfsResult, counter, node, querySearchRequest);, +                    for (final DfsSearchResult dfsResult : dfsResults) {]