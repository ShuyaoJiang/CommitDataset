[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]query[/\\]terms[/\\]TermsLookup.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]request[/\\]IndicesRequestCache.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]query[/\\]IndicesRequestCacheIT.java" checks="LineLength" />, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]query[/\\]terms[/\\]TermsLookup.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]request[/\\]IndicesRequestCache.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]query[/\\]IndicesRequestCacheIT.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +import org.elasticsearch.indices.cache.request.IndicesRequestCache;, +                indicesService.getIndicesRequestCache().clear(shard);, +                    indicesService.getIndicesRequestCache().clear(shard);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]query[/\\]terms[/\\]TermsLookup.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]request[/\\]IndicesRequestCache.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]query[/\\]IndicesRequestCacheIT.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +import org.elasticsearch.indices.cache.request.IndicesRequestCache;, +                indicesService.getIndicesRequestCache().clear(shard);, +                    indicesService.getIndicesRequestCache().clear(shard);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.IndexService;, +import org.elasticsearch.index.shard.ShardId;, +import org.elasticsearch.indices.IndicesService;, +import org.elasticsearch.indices.cache.query.IndicesQueryCache;, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]query[/\\]terms[/\\]TermsLookup.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]request[/\\]IndicesRequestCache.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]query[/\\]IndicesRequestCacheIT.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +import org.elasticsearch.indices.cache.request.IndicesRequestCache;, +                indicesService.getIndicesRequestCache().clear(shard);, +                    indicesService.getIndicesRequestCache().clear(shard);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.IndexService;, +import org.elasticsearch.index.shard.ShardId;, +import org.elasticsearch.indices.IndicesService;, +import org.elasticsearch.indices.cache.query.IndicesQueryCache;, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                        list.add(new BulkItemRequest(i, new DeleteRequest(deleteRequest)));, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]query[/\\]terms[/\\]TermsLookup.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]request[/\\]IndicesRequestCache.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]query[/\\]IndicesRequestCacheIT.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +import org.elasticsearch.indices.cache.request.IndicesRequestCache;, +                indicesService.getIndicesRequestCache().clear(shard);, +                    indicesService.getIndicesRequestCache().clear(shard);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.IndexService;, +import org.elasticsearch.index.shard.ShardId;, +import org.elasticsearch.indices.IndicesService;, +import org.elasticsearch.indices.cache.query.IndicesQueryCache;, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                        list.add(new BulkItemRequest(i, new DeleteRequest(deleteRequest)));, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +import org.elasticsearch.action.ActionRequest;, +    /**, +     * Copy constructor that creates a new delete request that is a copy of the one provided as an argument., +     */, +    public DeleteRequest(DeleteRequest request) {, +        this(request, request);, +    }, +, +    /**, +     * Copy constructor that creates a new delete request that is a copy of the one provided as an argument., +     * The new request will inherit though headers and context from the original request that caused it., +     */, +    public DeleteRequest(DeleteRequest request, ActionRequest originalRequest) {, +        super(request);, +        this.type = request.type();, +        this.id = request.id();, +        this.routing = request.routing();, +        this.parent = request.parent();, +        this.refresh = request.refresh();, +        this.version = request.version();, +        this.versionType = request.versionType();, +    }, +, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]query[/\\]terms[/\\]TermsLookup.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]request[/\\]IndicesRequestCache.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cache[/\\]query[/\\]IndicesRequestCacheIT.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +import org.elasticsearch.indices.cache.request.IndicesRequestCache;, +                indicesService.getIndicesRequestCache().clear(shard);, +                    indicesService.getIndicesRequestCache().clear(shard);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.IndexService;, +import org.elasticsearch.index.shard.ShardId;, +import org.elasticsearch.indices.IndicesService;, +import org.elasticsearch.indices.cache.query.IndicesQueryCache;, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                        list.add(new BulkItemRequest(i, new DeleteRequest(deleteRequest)));, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +import org.elasticsearch.action.ActionRequest;, +    /**, +     * Copy constructor that creates a new delete request that is a copy of the one provided as an argument., +     */, +    public DeleteRequest(DeleteRequest request) {]