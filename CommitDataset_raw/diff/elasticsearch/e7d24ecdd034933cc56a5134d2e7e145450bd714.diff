[+++ b/src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java, +        DiscoveryNode masterDiscoNode = findMasterNode(nodes);, +        IndexRequestBuilder[] indexRequests = new IndexRequestBuilder[scaledRandomIntBetween(1, 1000)];, +        DiscoveryNode masterDiscoNode = findMasterNode(nodes);, +, +        // but first make sure we have no initializing shards and all is green, +        // (waiting for green here, because indexing / search in a yellow index is fine as long as no other nodes go down), +        ensureGreen("test");, +        String isolatedNode = null;, +                isolatedNode = node;, +        assert isolatedNode != null;, +            if (!nodeId.equals(isolatedNode)) {, +                addFailToSendNoConnectRule(nodeId, isolatedNode);, +                addFailToSendNoConnectRule(isolatedNode, nodeId);, +            final Client isolatedNodeClient = internalCluster().client(isolatedNode);, +                if (!nodeId.equals(isolatedNode)) {, +                    clearNoConnectRule(nodeId, isolatedNode);, +                    clearNoConnectRule(isolatedNode, nodeId);, +            GetResponse getResponse = client.prepareGet("test", "type", "0").get();, +                getResponse = client.prepareGet("test", "type", String.valueOf(i)).get();, +    private DiscoveryNode findMasterNode(List<String> nodes) {, +        DiscoveryNode masterDiscoNode = null;, +        for (String node : nodes) {, +            ClusterState state = internalCluster().client(node).admin().cluster().prepareState().setLocal(true).execute().actionGet().getState();, +            assertThat(state.nodes().size(), equalTo(3));, +            if (masterDiscoNode == null) {, +                masterDiscoNode = state.nodes().masterNode();, +            } else {, +                assertThat(state.nodes().masterNode(), equalTo(masterDiscoNode));, +            }, +        }, +        assert masterDiscoNode != null;, +        return masterDiscoNode;, +    }, +]