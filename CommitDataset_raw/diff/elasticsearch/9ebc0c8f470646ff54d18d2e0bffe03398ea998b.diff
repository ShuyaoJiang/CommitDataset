[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +            searchContext.parsedQuery(searchContext.getQueryShardContext().toQuery(request.query()));, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +            searchContext.parsedQuery(searchContext.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +         * Read from a stream., +         */, +        public Failure(StreamInput in) throws IOException {, +            index = in.readString();, +            type = in.readString();, +            id = in.readOptionalString();, +            cause = in.readThrowable();, +            status = ExceptionsHelper.status(cause);, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            out.writeString(getIndex());, +            out.writeString(getType());, +            out.writeOptionalString(getId());, +            out.writeThrowable(getCause());, +        }, +, +, +        /**, +            failure = new Failure(in);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +            searchContext.parsedQuery(searchContext.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +         * Read from a stream., +         */, +        public Failure(StreamInput in) throws IOException {, +            index = in.readString();, +            type = in.readString();, +            id = in.readOptionalString();, +            cause = in.readThrowable();, +            status = ExceptionsHelper.status(cause);, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            out.writeString(getIndex());, +            out.writeString(getType());, +            out.writeOptionalString(getId());, +            out.writeThrowable(getCause());, +        }, +, +, +        /**, +            failure = new Failure(in);, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsShardResponse.java, +    private Map<String, FieldStats<?>> fieldStats;, +    public FieldStatsShardResponse(ShardId shardId, Map<String, FieldStats<?>> fieldStats) {, +    public Map<String, FieldStats<?>> getFieldStats() {, +        for (Map.Entry<String, FieldStats<?>> entry : fieldStats.entrySet()) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +            searchContext.parsedQuery(searchContext.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +         * Read from a stream., +         */, +        public Failure(StreamInput in) throws IOException {, +            index = in.readString();, +            type = in.readString();, +            id = in.readOptionalString();, +            cause = in.readThrowable();, +            status = ExceptionsHelper.status(cause);, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            out.writeString(getIndex());, +            out.writeString(getType());, +            out.writeOptionalString(getId());, +            out.writeThrowable(getCause());, +        }, +, +, +        /**, +            failure = new Failure(in);, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsShardResponse.java, +    private Map<String, FieldStats<?>> fieldStats;, +    public FieldStatsShardResponse(ShardId shardId, Map<String, FieldStats<?>> fieldStats) {, +    public Map<String, FieldStats<?>> getFieldStats() {, +        for (Map.Entry<String, FieldStats<?>> entry : fieldStats.entrySet()) {, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/TransportFieldStatsTransportAction.java, +                Map<String, FieldStats<?>> fieldStats = shardResponse.getFieldStats();, +                for (Map.Entry<String, FieldStats<?>> entry : fieldStats.entrySet()) {, +                    FieldStats<?> existing = indexMergedFieldStats.get(entry.getKey());, +        Map<String, FieldStats<?>> fieldStats = new HashMap<>();, +                if (fieldType == null) {, +                FieldStats<?> stats = fieldType.stats(searcher.reader());, +                if (stats != null) {, +                    fieldStats.put(field, stats);, +                }, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml]