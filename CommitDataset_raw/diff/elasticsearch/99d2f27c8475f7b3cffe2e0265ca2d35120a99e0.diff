[+++ b/src/main/java/org/elasticsearch/common/io/stream/AdapterStreamInput.java, +import org.elasticsearch.common.text.Text;, +    public Text readText() throws IOException {, +        return in.readText();, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/io/stream/AdapterStreamInput.java, +import org.elasticsearch.common.text.Text;, +    public Text readText() throws IOException {, +        return in.readText();, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/io/stream/AdapterStreamOutput.java, +import org.elasticsearch.common.text.Text;, +    public void writeText(Text text) throws IOException {, +        out.writeText(text);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/io/stream/AdapterStreamInput.java, +import org.elasticsearch.common.text.Text;, +    public Text readText() throws IOException {, +        return in.readText();, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/io/stream/AdapterStreamOutput.java, +import org.elasticsearch.common.text.Text;, +    public void writeText(Text text) throws IOException {, +        out.writeText(text);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.common.text.StringAndBytesText;, +import org.elasticsearch.common.text.Text;, +    public Text readText() throws IOException {, +        // use StringAndBytes so we can cache the string if its ever converted to it, +        return new StringAndBytesText(readBytesReference());, +    }, +, +++ b/src/main/java/org/elasticsearch/common/io/stream/AdapterStreamInput.java, +import org.elasticsearch.common.text.Text;, +    public Text readText() throws IOException {, +        return in.readText();, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/io/stream/AdapterStreamOutput.java, +import org.elasticsearch.common.text.Text;, +    public void writeText(Text text) throws IOException {, +        out.writeText(text);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.common.text.StringAndBytesText;, +import org.elasticsearch.common.text.Text;, +    public Text readText() throws IOException {, +        // use StringAndBytes so we can cache the string if its ever converted to it, +        return new StringAndBytesText(readBytesReference());, +    }, +, +++ b/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.common.text.Text;, +    public void writeText(Text text) throws IOException {, +        // always write the bytes..., +        // TODO: TextBytesOptimization we could potentially optimize this, and write the bytes directly to the output stream converting to UTF8 in case its a string, +        writeBytesReference(text.bytes());, +    }, +, +++ b/src/main/java/org/elasticsearch/common/io/stream/AdapterStreamInput.java, +import org.elasticsearch.common.text.Text;, +    public Text readText() throws IOException {, +        return in.readText();, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/io/stream/AdapterStreamOutput.java, +import org.elasticsearch.common.text.Text;, +    public void writeText(Text text) throws IOException {, +        out.writeText(text);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.common.text.StringAndBytesText;, +import org.elasticsearch.common.text.Text;, +    public Text readText() throws IOException {, +        // use StringAndBytes so we can cache the string if its ever converted to it, +        return new StringAndBytesText(readBytesReference());, +    }, +, +++ b/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.common.text.Text;, +    public void writeText(Text text) throws IOException {, +        // always write the bytes..., +        // TODO: TextBytesOptimization we could potentially optimize this, and write the bytes directly to the output stream converting to UTF8 in case its a string]