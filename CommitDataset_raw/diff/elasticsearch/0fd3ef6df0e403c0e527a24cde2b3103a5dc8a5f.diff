[+++ b/src/main/java/org/elasticsearch/index/query/FilteredQueryBuilder.java, +     * @param queryBuilder  The query to apply the filter to (Can be null), +    public FilteredQueryBuilder(@Nullable QueryBuilder queryBuilder, @Nullable FilterBuilder filterBuilder) {, +        if (queryBuilder != null) {, +        }, +++ b/src/main/java/org/elasticsearch/index/query/FilteredQueryBuilder.java, +     * @param queryBuilder  The query to apply the filter to (Can be null), +    public FilteredQueryBuilder(@Nullable QueryBuilder queryBuilder, @Nullable FilterBuilder filterBuilder) {, +        if (queryBuilder != null) {, +        }, +++ b/src/main/java/org/elasticsearch/index/query/QueryBuilders.java, +    public static FilteredQueryBuilder filteredQuery(@Nullable QueryBuilder queryBuilder, @Nullable FilterBuilder filterBuilder) {, +++ b/src/main/java/org/elasticsearch/index/query/FilteredQueryBuilder.java, +     * @param queryBuilder  The query to apply the filter to (Can be null), +    public FilteredQueryBuilder(@Nullable QueryBuilder queryBuilder, @Nullable FilterBuilder filterBuilder) {, +        if (queryBuilder != null) {, +        }, +++ b/src/main/java/org/elasticsearch/index/query/QueryBuilders.java, +    public static FilteredQueryBuilder filteredQuery(@Nullable QueryBuilder queryBuilder, @Nullable FilterBuilder filterBuilder) {, +++ b/src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java, +    @Test // see #7365, +    public void testFilteredQueryWithoutQuery() throws Exception {, +        createIndex("test");, +        ensureYellow("test");, +        indexRandom(true, client().prepareIndex("test", "type1", "1").setSource("field1", "value1"));, +        SearchResponse response = client().prepareSearch(), +                .setQuery(QueryBuilders.filteredQuery(null,, +                        FilterBuilders.termFilter("field1", "value1"))).get();, +        assertSearchResponse(response);, +        assertHitCount(response, 1l);, +    }, +]