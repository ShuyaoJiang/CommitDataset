[+++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    Query regexpQuery(Object value, int flags, @Nullable MultiTermQuery.RewriteMethod method, @Nullable QueryParseContext context);, +    Filter regexpFilter(Object value, int flags, @Nullable QueryParseContext parseContext);, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    Query regexpQuery(Object value, int flags, @Nullable MultiTermQuery.RewriteMethod method, @Nullable QueryParseContext context);, +    Filter regexpFilter(Object value, int flags, @Nullable QueryParseContext parseContext);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    public Query regexpQuery(Object value, int flags, @Nullable MultiTermQuery.RewriteMethod method, @Nullable QueryParseContext context) {, +    public Filter regexpFilter(Object value, int flags, @Nullable QueryParseContext parseContext) {, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    Query regexpQuery(Object value, int flags, @Nullable MultiTermQuery.RewriteMethod method, @Nullable QueryParseContext context);, +    Filter regexpFilter(Object value, int flags, @Nullable QueryParseContext parseContext);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    public Query regexpQuery(Object value, int flags, @Nullable MultiTermQuery.RewriteMethod method, @Nullable QueryParseContext context) {, +    public Filter regexpFilter(Object value, int flags, @Nullable QueryParseContext parseContext) {, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java, +    public Query regexpQuery(Object value, int flags, @Nullable MultiTermQuery.RewriteMethod method, @Nullable QueryParseContext context) {, +            RegexpQuery regexpQuery = new RegexpQuery(new Term(UidFieldMapper.NAME, Uid.createUidAsBytes(Iterables.getFirst(queryTypes, null), BytesRefs.toBytesRef(value))), flags);, +            RegexpQuery regexpQuery = new RegexpQuery(new Term(UidFieldMapper.NAME, Uid.createUidAsBytes(queryType, BytesRefs.toBytesRef(value))), flags);, +    public Filter regexpFilter(Object value, int flags, @Nullable QueryParseContext context) {, +            return new RegexpFilter(new Term(UidFieldMapper.NAME, Uid.createUidAsBytes(Iterables.getFirst(queryTypes, null), BytesRefs.toBytesRef(value))), flags);, +            filter.add(new RegexpFilter(new Term(UidFieldMapper.NAME, Uid.createUidAsBytes(queryType, BytesRefs.toBytesRef(value))), flags), BooleanClause.Occur.SHOULD);, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    Query regexpQuery(Object value, int flags, @Nullable MultiTermQuery.RewriteMethod method, @Nullable QueryParseContext context);, +    Filter regexpFilter(Object value, int flags, @Nullable QueryParseContext parseContext);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    public Query regexpQuery(Object value, int flags, @Nullable MultiTermQuery.RewriteMethod method, @Nullable QueryParseContext context) {, +    public Filter regexpFilter(Object value, int flags, @Nullable QueryParseContext parseContext) {, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java, +    public Query regexpQuery(Object value, int flags, @Nullable MultiTermQuery.RewriteMethod method, @Nullable QueryParseContext context) {, +            RegexpQuery regexpQuery = new RegexpQuery(new Term(UidFieldMapper.NAME, Uid.createUidAsBytes(Iterables.getFirst(queryTypes, null), BytesRefs.toBytesRef(value))), flags);, +            RegexpQuery regexpQuery = new RegexpQuery(new Term(UidFieldMapper.NAME, Uid.createUidAsBytes(queryType, BytesRefs.toBytesRef(value))), flags);, +    public Filter regexpFilter(Object value, int flags, @Nullable QueryParseContext context) {, +            return new RegexpFilter(new Term(UidFieldMapper.NAME, Uid.createUidAsBytes(Iterables.getFirst(queryTypes, null), BytesRefs.toBytesRef(value))), flags);, +            filter.add(new RegexpFilter(new Term(UidFieldMapper.NAME, Uid.createUidAsBytes(queryType, BytesRefs.toBytesRef(value))), flags), BooleanClause.Occur.SHOULD);, +++ b/src/main/java/org/elasticsearch/index/query/RegexpFilterParser.java, +import org.elasticsearch.common.lucene.BytesRefs;, +        Object value = null;, +        Object secondaryValue = null;, +                            value = parser.objectBytes();, +                    secondaryValue = parser.objectBytes();, +            filter = new RegexpFilter(new Term(fieldName, BytesRefs.toBytesRef(value)), flagsValue);, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    Query regexpQuery(Object value, int flags, @Nullable MultiTermQuery.RewriteMethod method, @Nullable QueryParseContext context);, +    Filter regexpFilter(Object value, int flags, @Nullable QueryParseContext parseContext);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    public Query regexpQuery(Object value, int flags, @Nullable MultiTermQuery.RewriteMethod method, @Nullable QueryParseContext context) {, +    public Filter regexpFilter(Object value, int flags, @Nullable QueryParseContext parseContext) {, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java, +    public Query regexpQuery(Object value, int flags, @Nullable MultiTermQuery.RewriteMethod method, @Nullable QueryParseContext context) {, +            RegexpQuery regexpQuery = new RegexpQuery(new Term(UidFieldMapper.NAME, Uid.createUidAsBytes(Iterables.getFirst(queryTypes, null), BytesRefs.toBytesRef(value))), flags);, +            RegexpQuery regexpQuery = new RegexpQuery(new Term(UidFieldMapper.NAME, Uid.createUidAsBytes(queryType, BytesRefs.toBytesRef(value))), flags);, +    public Filter regexpFilter(Object value, int flags, @Nullable QueryParseContext context) {, +            return new RegexpFilter(new Term(UidFieldMapper.NAME, Uid.createUidAsBytes(Iterables.getFirst(queryTypes, null), BytesRefs.toBytesRef(value))), flags);, +            filter.add(new RegexpFilter(new Term(UidFieldMapper.NAME, Uid.createUidAsBytes(queryType, BytesRefs.toBytesRef(value))), flags), BooleanClause.Occur.SHOULD);, +++ b/src/main/java/org/elasticsearch/index/query/RegexpFilterParser.java, +import org.elasticsearch.common.lucene.BytesRefs;, +        Object value = null;, +        Object secondaryValue = null;, +                            value = parser.objectBytes();, +                    secondaryValue = parser.objectBytes();, +            filter = new RegexpFilter(new Term(fieldName, BytesRefs.toBytesRef(value)), flagsValue);, +++ b/src/main/java/org/elasticsearch/index/query/RegexpQueryParser.java, +import org.elasticsearch.common.lucene.BytesRefs;, +        Object value = null;, +                        value = parser.objectBytes();, +            value = parser.objectBytes();, +            RegexpQuery regexpQuery = new RegexpQuery(new Term(fieldName, BytesRefs.toBytesRef(value)), flagsValue);]