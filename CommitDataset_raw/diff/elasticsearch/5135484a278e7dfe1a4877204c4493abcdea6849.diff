[+++ b/qa/die-with-dignity/src/test/java/org/elasticsearch/qa/die_with_dignity/DieWithDignityIT.java, +import org.apache.lucene.util.Constants;, +import org.hamcrest.Matcher;, +import java.io.IOException;, +import static org.hamcrest.Matchers.containsString;, +import static org.hamcrest.Matchers.either;, +import static org.hamcrest.Matchers.hasToString;, +        IOException e = expectThrows(IOException.class, () -> client().performRequest("GET", "/_die_with_dignity"));, +        Matcher<IOException> failureMatcher = instanceOf(ConnectionClosedException.class);, +        if (Constants.WINDOWS) {, +            /*, +             * If the other side closes the connection while we're waiting to fill our buffer, +             * we can get IOException with the message below. It seems to only come up on, +             * Windows and it *feels* like it could be a ConnectionClosedException but, +             * upstream does not consider this a bug:, +             * https://issues.apache.org/jira/browse/HTTPASYNC-134, +             *, +             * So we catch it here and consider it "ok"., +            */, +            failureMatcher = either(failureMatcher), +                    .or(hasToString(containsString("An existing connection was forcibly closed by the remote host")));, +        }, +        assertThat(e, failureMatcher);]