[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetInfluencersAction.java, +        private boolean descending = true;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetInfluencersAction.java, +        private boolean descending = true;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetBucketsAction.java, +        if (restRequest.hasContentOrSourceParam()) {, +            XContentParser parser = restRequest.contentOrSourceParamParser();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetInfluencersAction.java, +        private boolean descending = true;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetBucketsAction.java, +        if (restRequest.hasContentOrSourceParam()) {, +            XContentParser parser = restRequest.contentOrSourceParamParser();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetCategoriesAction.java, +        if (restRequest.hasContentOrSourceParam()) {, +            XContentParser parser = restRequest.contentOrSourceParamParser();, +                        restRequest.paramAsInt(Request.FROM.getPreferredName(), PageParams.DEFAULT_FROM),, +                        restRequest.paramAsInt(Request.SIZE.getPreferredName(), PageParams.DEFAULT_SIZE), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetInfluencersAction.java, +        private boolean descending = true;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetBucketsAction.java, +        if (restRequest.hasContentOrSourceParam()) {, +            XContentParser parser = restRequest.contentOrSourceParamParser();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetCategoriesAction.java, +        if (restRequest.hasContentOrSourceParam()) {, +            XContentParser parser = restRequest.contentOrSourceParamParser();, +                        restRequest.paramAsInt(Request.FROM.getPreferredName(), PageParams.DEFAULT_FROM),, +                        restRequest.paramAsInt(Request.SIZE.getPreferredName(), PageParams.DEFAULT_SIZE), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetInfluencersAction.java, +import org.elasticsearch.xpack.ml.job.config.Job;, +        if (restRequest.hasContentOrSourceParam()) {, +            XContentParser parser = restRequest.contentOrSourceParamParser();, +            request.setExcludeInterim(restRequest.paramAsBoolean(GetInfluencersAction.Request.EXCLUDE_INTERIM.getPreferredName(),, +                    request.isExcludeInterim()));, +                    Double.parseDouble(restRequest.param(GetInfluencersAction.Request.INFLUENCER_SCORE.getPreferredName(),, +                            String.valueOf(request.getInfluencerScore()))));, +            request.setSort(restRequest.param(GetInfluencersAction.Request.SORT_FIELD.getPreferredName(), request.getSort()));, +            request.setDescending(restRequest.paramAsBoolean(GetInfluencersAction.Request.DESCENDING_SORT.getPreferredName(),, +                    request.isDescending()));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetInfluencersAction.java, +        private boolean descending = true;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetBucketsAction.java, +        if (restRequest.hasContentOrSourceParam()) {, +            XContentParser parser = restRequest.contentOrSourceParamParser();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetCategoriesAction.java, +        if (restRequest.hasContentOrSourceParam()) {, +            XContentParser parser = restRequest.contentOrSourceParamParser();, +                        restRequest.paramAsInt(Request.FROM.getPreferredName(), PageParams.DEFAULT_FROM),, +                        restRequest.paramAsInt(Request.SIZE.getPreferredName(), PageParams.DEFAULT_SIZE), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetInfluencersAction.java, +import org.elasticsearch.xpack.ml.job.config.Job;, +        if (restRequest.hasContentOrSourceParam()) {, +            XContentParser parser = restRequest.contentOrSourceParamParser();, +            request.setExcludeInterim(restRequest.paramAsBoolean(GetInfluencersAction.Request.EXCLUDE_INTERIM.getPreferredName(),, +                    request.isExcludeInterim()));, +                    Double.parseDouble(restRequest.param(GetInfluencersAction.Request.INFLUENCER_SCORE.getPreferredName(),, +                            String.valueOf(request.getInfluencerScore()))));, +            request.setSort(restRequest.param(GetInfluencersAction.Request.SORT_FIELD.getPreferredName(), request.getSort()));, +            request.setDescending(restRequest.paramAsBoolean(GetInfluencersAction.Request.DESCENDING_SORT.getPreferredName(),, +                    request.isDescending()));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetRecordsAction.java, +        if (restRequest.hasContentOrSourceParam()) {, +            XContentParser parser = restRequest.contentOrSourceParamParser();, +                    Double.parseDouble(restRequest.param(GetRecordsAction.Request.RECORD_SCORE_FILTER.getPreferredName(),, +                            String.valueOf(request.getRecordScoreFilter()))));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetInfluencersAction.java, +        private boolean descending = true;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetBucketsAction.java, +        if (restRequest.hasContentOrSourceParam()) {, +            XContentParser parser = restRequest.contentOrSourceParamParser();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetCategoriesAction.java, +        if (restRequest.hasContentOrSourceParam()) {, +            XContentParser parser = restRequest.contentOrSourceParamParser();, +                        restRequest.paramAsInt(Request.FROM.getPreferredName(), PageParams.DEFAULT_FROM),, +                        restRequest.paramAsInt(Request.SIZE.getPreferredName(), PageParams.DEFAULT_SIZE), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetInfluencersAction.java, +import org.elasticsearch.xpack.ml.job.config.Job;, +        if (restRequest.hasContentOrSourceParam()) {, +            XContentParser parser = restRequest.contentOrSourceParamParser();, +            request.setExcludeInterim(restRequest.paramAsBoolean(GetInfluencersAction.Request.EXCLUDE_INTERIM.getPreferredName(),, +                    request.isExcludeInterim()));, +                    Double.parseDouble(restRequest.param(GetInfluencersAction.Request.INFLUENCER_SCORE.getPreferredName(),, +                            String.valueOf(request.getInfluencerScore()))));, +            request.setSort(restRequest.param(GetInfluencersAction.Request.SORT_FIELD.getPreferredName(), request.getSort()));, +            request.setDescending(restRequest.paramAsBoolean(GetInfluencersAction.Request.DESCENDING_SORT.getPreferredName(),, +                    request.isDescending()));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetRecordsAction.java, +        if (restRequest.hasContentOrSourceParam()) {, +            XContentParser parser = restRequest.contentOrSourceParamParser();, +                    Double.parseDouble(restRequest.param(GetRecordsAction.Request.RECORD_SCORE_FILTER.getPreferredName(),, +                            String.valueOf(request.getRecordScoreFilter()))));, +++ b/plugin/src/test/resources/rest-api-spec/test/ml/jobs_get_result_buckets.yml, +"Test get buckets with paging":, +  - do:, +      xpack.ml.get_buckets:, +        job_id: "jobs-get-result-buckets", +        from: 1, +        size: 2, +, +  - match: { count: 3 }, +  - length: { buckets: 2 }]