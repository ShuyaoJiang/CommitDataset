[+++ b/docs/reference/search/aggregations/bucket/terms-aggregation.asciidoc, +, +==== Execution hint, +, +There are two mechanisms by which terms aggregations can be executed: either by using field values directly in order to aggregate, +data per-bucket (`map`), or by using ordinals of the field values instead of the values themselves (`ordinals`). Although the, +latter execution mode can be expected to be slightly faster, it is only available for use when the underlying data source exposes, +those terms ordinals. Moreover, it may actually be slower if most field values are unique. Elasticsearch tries to have sensible, +defaults when it comes to the execution mode that should be used, but in case you know that an execution mode may perform better, +than the other one, you have the ability to provide Elasticsearch with a hint:, +, +[source,js], +--------------------------------------------------, +{, +    "aggs" : {, +        "tags" : {, +             "terms" : {, +                 "field" : "tags",, +                 "execution_hint": "map" <1>, +             }, +         }, +    }, +}, +--------------------------------------------------, +, +<1> the possible values are `map` and `ordinals`, +, +Please note that Elasticsearch will ignore this execution hint if it is not applicable., +++ b/docs/reference/search/aggregations/bucket/terms-aggregation.asciidoc, +, +==== Execution hint, +, +There are two mechanisms by which terms aggregations can be executed: either by using field values directly in order to aggregate, +data per-bucket (`map`), or by using ordinals of the field values instead of the values themselves (`ordinals`). Although the, +latter execution mode can be expected to be slightly faster, it is only available for use when the underlying data source exposes, +those terms ordinals. Moreover, it may actually be slower if most field values are unique. Elasticsearch tries to have sensible, +defaults when it comes to the execution mode that should be used, but in case you know that an execution mode may perform better, +than the other one, you have the ability to provide Elasticsearch with a hint:, +, +[source,js], +--------------------------------------------------, +{, +    "aggs" : {, +        "tags" : {, +             "terms" : {, +                 "field" : "tags",, +                 "execution_hint": "map" <1>, +             }, +         }, +    }, +}, +--------------------------------------------------, +, +<1> the possible values are `map` and `ordinals`, +, +Please note that Elasticsearch will ignore this execution hint if it is not applicable., +++ b/src/main/java/org/elasticsearch/common/util/BigArrays.java, +, +        @Override, +        public void fill(long fromIndex, long toIndex, long value) {, +            assert indexIsInt(fromIndex);, +            assert indexIsInt(toIndex);, +            Arrays.fill(array, (int) fromIndex, (int) toIndex, value);, +        }, +++ b/docs/reference/search/aggregations/bucket/terms-aggregation.asciidoc, +, +==== Execution hint, +, +There are two mechanisms by which terms aggregations can be executed: either by using field values directly in order to aggregate, +data per-bucket (`map`), or by using ordinals of the field values instead of the values themselves (`ordinals`). Although the, +latter execution mode can be expected to be slightly faster, it is only available for use when the underlying data source exposes, +those terms ordinals. Moreover, it may actually be slower if most field values are unique. Elasticsearch tries to have sensible, +defaults when it comes to the execution mode that should be used, but in case you know that an execution mode may perform better, +than the other one, you have the ability to provide Elasticsearch with a hint:, +, +[source,js], +--------------------------------------------------, +{, +    "aggs" : {, +        "tags" : {, +             "terms" : {, +                 "field" : "tags",, +                 "execution_hint": "map" <1>, +             }, +         }, +    }, +}, +--------------------------------------------------, +, +<1> the possible values are `map` and `ordinals`, +, +Please note that Elasticsearch will ignore this execution hint if it is not applicable., +++ b/src/main/java/org/elasticsearch/common/util/BigArrays.java, +, +        @Override, +        public void fill(long fromIndex, long toIndex, long value) {, +            assert indexIsInt(fromIndex);, +            assert indexIsInt(toIndex);, +            Arrays.fill(array, (int) fromIndex, (int) toIndex, value);, +        }]