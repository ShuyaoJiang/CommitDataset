[+++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +        private Tuple<String, String> getScriptNameExt(Path file) {, +            Path scriptPath = scriptsDirectory.relativize(file);, +            int extIndex = scriptPath.toString().lastIndexOf('.');, +            if (extIndex <= 0) {, +                return null;, +            }, +, +            String ext = scriptPath.toString().substring(extIndex + 1);, +            if (ext.isEmpty()) {, +                return null;, +            }, +, +            String scriptName = scriptPath.toString().substring(0, extIndex).replace(scriptPath.getFileSystem().getSeparator(), "_");, +            return new Tuple<>(scriptName, ext);, +        }, +, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +        private Tuple<String, String> getScriptNameExt(Path file) {, +            Path scriptPath = scriptsDirectory.relativize(file);, +            int extIndex = scriptPath.toString().lastIndexOf('.');, +            if (extIndex <= 0) {, +                return null;, +            }, +, +            String ext = scriptPath.toString().substring(extIndex + 1);, +            if (ext.isEmpty()) {, +                return null;, +            }, +, +            String scriptName = scriptPath.toString().substring(0, extIndex).replace(scriptPath.getFileSystem().getSeparator(), "_");, +            return new Tuple<>(scriptName, ext);, +        }, +, +++ b/core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java, +    public void testScriptCompiledOnceHiddenFileDetected() throws IOException {, +, +        Path testFileScript = scriptsFilePath.resolve("file_script.tst");, +        Streams.copy("test_file_script".getBytes("UTF-8"), Files.newOutputStream(testFileScript));, +        CompiledScript compiledScript = scriptService.compile(new Script("file_script", ScriptType.FILE, "test", null),, +        assertThat(compiledScript.compiled(), equalTo((Object) "compiled_test_file_script"));, +        Files.delete(testFileScript);]