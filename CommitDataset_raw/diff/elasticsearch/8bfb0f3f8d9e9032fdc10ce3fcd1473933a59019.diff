[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder;, +import org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilder;, +import org.elasticsearch.search.suggest.term.TermSuggestionBuilder;, +        entries.add(new NamedXContentRegistry.Entry(Suggest.Suggestion.class, new ParseField(TermSuggestionBuilder.SUGGESTION_NAME),, +        entries.add(new NamedXContentRegistry.Entry(Suggest.Suggestion.class, new ParseField(PhraseSuggestionBuilder.SUGGESTION_NAME),, +        entries.add(new NamedXContentRegistry.Entry(Suggest.Suggestion.class, new ParseField(CompletionSuggestionBuilder.SUGGESTION_NAME),, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder;, +import org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilder;, +import org.elasticsearch.search.suggest.term.TermSuggestionBuilder;, +        entries.add(new NamedXContentRegistry.Entry(Suggest.Suggestion.class, new ParseField(TermSuggestionBuilder.SUGGESTION_NAME),, +        entries.add(new NamedXContentRegistry.Entry(Suggest.Suggestion.class, new ParseField(PhraseSuggestionBuilder.SUGGESTION_NAME),, +        entries.add(new NamedXContentRegistry.Entry(Suggest.Suggestion.class, new ParseField(CompletionSuggestionBuilder.SUGGESTION_NAME),, +++ b/docs/reference/release-notes/7.0.0-alpha1.asciidoc, +, +Suggesters::, +* Plugins that register suggesters can now define their own types of suggestions and must, +  explicitly indicate the type of suggestion that they produce. Existing plugins will, +  require changes to their plugin registration. See the `custom-suggester` example, +  plugin {pull}30284[#30284], +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder;, +import org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilder;, +import org.elasticsearch.search.suggest.term.TermSuggestionBuilder;, +        entries.add(new NamedXContentRegistry.Entry(Suggest.Suggestion.class, new ParseField(TermSuggestionBuilder.SUGGESTION_NAME),, +        entries.add(new NamedXContentRegistry.Entry(Suggest.Suggestion.class, new ParseField(PhraseSuggestionBuilder.SUGGESTION_NAME),, +        entries.add(new NamedXContentRegistry.Entry(Suggest.Suggestion.class, new ParseField(CompletionSuggestionBuilder.SUGGESTION_NAME),, +++ b/docs/reference/release-notes/7.0.0-alpha1.asciidoc, +, +Suggesters::, +* Plugins that register suggesters can now define their own types of suggestions and must, +  explicitly indicate the type of suggestion that they produce. Existing plugins will, +  require changes to their plugin registration. See the `custom-suggester` example, +  plugin {pull}30284[#30284], +++ b/plugins/examples/custom-suggester/build.gradle, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +apply plugin: 'elasticsearch.esplugin', +, +esplugin {, +    name 'custom-suggester', +    description 'An example plugin showing how to write and register a custom suggester', +    classname 'org.elasticsearch.example.customsuggester.CustomSuggesterPlugin', +}, +, +integTestCluster {, +    numNodes = 2, +}, +, +// this plugin has no unit tests, only rest tests, +tasks.test.enabled = false, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder;, +import org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilder;, +import org.elasticsearch.search.suggest.term.TermSuggestionBuilder;, +        entries.add(new NamedXContentRegistry.Entry(Suggest.Suggestion.class, new ParseField(TermSuggestionBuilder.SUGGESTION_NAME),, +        entries.add(new NamedXContentRegistry.Entry(Suggest.Suggestion.class, new ParseField(PhraseSuggestionBuilder.SUGGESTION_NAME),, +        entries.add(new NamedXContentRegistry.Entry(Suggest.Suggestion.class, new ParseField(CompletionSuggestionBuilder.SUGGESTION_NAME),, +++ b/docs/reference/release-notes/7.0.0-alpha1.asciidoc, +, +Suggesters::, +* Plugins that register suggesters can now define their own types of suggestions and must, +  explicitly indicate the type of suggestion that they produce. Existing plugins will, +  require changes to their plugin registration. See the `custom-suggester` example, +  plugin {pull}30284[#30284], +++ b/plugins/examples/custom-suggester/build.gradle, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations]