[+++ b/src/test/java/org/elasticsearch/search/basic/SearchWithRandomExceptionsTests.java, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertHitCount;, +                client().prepareIndex("test", "initial", "" + i).setTimeout(TimeValue.timeValueSeconds(1)).setSource("test", "init").get();, +            added[i] = false;, +                IndexResponse indexResponse = client().prepareIndex("test", "type", Integer.toString(i)).setTimeout(TimeValue.timeValueSeconds(1)).setSource("test", English.intToEnglish(i)).get();, +, +                long expectedResults = added[docToQuery] ? 1 : 0;, +                SearchResponse searchResponse = client().prepareSearch().setTypes("type").setQuery(QueryBuilders.matchQuery("test", English.intToEnglish(docToQuery))).get();, +                if (searchResponse.getSuccessfulShards() == test.numPrimaries && !refreshFailed) {, +                    assertThat(searchResponse.getHits().getTotalHits(), Matchers.equalTo(expectedResults));, +                }, +                searchResponse = client().prepareSearch().setTypes("type").setQuery(QueryBuilders.matchAllQuery()).get();, +                logger.info("Match all Successful shards: [{}]  numShards: [{}]", searchResponse.getSuccessfulShards(), test.numPrimaries);, +                if (searchResponse.getSuccessfulShards() == test.numPrimaries && !refreshFailed) {, +                    assertThat(searchResponse.getHits().getTotalHits(), Matchers.equalTo(numCreated));, +                }, +            ensureGreen();, +            SearchResponse searchResponse = client().prepareSearch().setTypes("initial").setQuery(QueryBuilders.matchQuery("test", "init")).get();, +            assertHitCount(searchResponse, numInitialDocs);]