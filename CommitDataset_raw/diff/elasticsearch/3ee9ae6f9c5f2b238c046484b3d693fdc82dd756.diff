[+++ b/pom.xml, +            <version>0.7.1</version>, +        </dependency>, +, +        <dependency> <!-- ES uses byte* hashes -->, +            <groupId>com.carrotsearch</groupId>, +            <artifactId>hppc</artifactId>, +            <version>0.7.1</version>, +            <classifier>esoteric</classifier>, +                                <tests.thirdparty>${tests.thirdparty}</tests.thirdparty>, +                                <tests.config>${tests.config}</tests.config>, +++ b/pom.xml, +            <version>0.7.1</version>, +        </dependency>, +, +        <dependency> <!-- ES uses byte* hashes -->, +            <groupId>com.carrotsearch</groupId>, +            <artifactId>hppc</artifactId>, +            <version>0.7.1</version>, +            <classifier>esoteric</classifier>, +                                <tests.thirdparty>${tests.thirdparty}</tests.thirdparty>, +                                <tests.config>${tests.config}</tests.config>, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +            float boost = settings.boosts().getOrDefault(field, 1f);, +++ b/pom.xml, +            <version>0.7.1</version>, +        </dependency>, +, +        <dependency> <!-- ES uses byte* hashes -->, +            <groupId>com.carrotsearch</groupId>, +            <artifactId>hppc</artifactId>, +            <version>0.7.1</version>, +            <classifier>esoteric</classifier>, +                                <tests.thirdparty>${tests.thirdparty}</tests.thirdparty>, +                                <tests.config>${tests.config}</tests.config>, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +            float boost = settings.boosts().getOrDefault(field, 1f);, +++ b/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +import com.carrotsearch.hppc.ObjectFloatHashMap;, +    ObjectFloatHashMap<String> boosts = null;, +    public ObjectFloatHashMap<String> boosts() {, +    public void boosts(ObjectFloatHashMap<String> boosts) {, +++ b/pom.xml, +            <version>0.7.1</version>, +        </dependency>, +, +        <dependency> <!-- ES uses byte* hashes -->, +            <groupId>com.carrotsearch</groupId>, +            <artifactId>hppc</artifactId>, +            <version>0.7.1</version>, +            <classifier>esoteric</classifier>, +                                <tests.thirdparty>${tests.thirdparty}</tests.thirdparty>, +                                <tests.config>${tests.config}</tests.config>, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +            float boost = settings.boosts().getOrDefault(field, 1f);, +++ b/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +import com.carrotsearch.hppc.ObjectFloatHashMap;, +    ObjectFloatHashMap<String> boosts = null;, +    public ObjectFloatHashMap<String> boosts() {, +    public void boosts(ObjectFloatHashMap<String> boosts) {, +++ b/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +import com.carrotsearch.hppc.ObjectIntHashMap;, +        private ObjectIntHashMap<BytesRef> seenSurfaceForms = HppcMaps.Object.Integer.ensureNoNullKeys(256, 0.75f);, +, +            final int keySlot;, +            if (count > 0 && (keySlot = seenSurfaceForms.indexOf(surface)) >= 0) {, +                surfaceIndex = seenSurfaceForms.indexGet(keySlot);, +++ b/pom.xml, +            <version>0.7.1</version>, +        </dependency>, +, +        <dependency> <!-- ES uses byte* hashes -->, +            <groupId>com.carrotsearch</groupId>, +            <artifactId>hppc</artifactId>, +            <version>0.7.1</version>, +            <classifier>esoteric</classifier>, +                                <tests.thirdparty>${tests.thirdparty}</tests.thirdparty>, +                                <tests.config>${tests.config}</tests.config>, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +            float boost = settings.boosts().getOrDefault(field, 1f);, +++ b/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +import com.carrotsearch.hppc.ObjectFloatHashMap;, +    ObjectFloatHashMap<String> boosts = null;, +    public ObjectFloatHashMap<String> boosts() {, +    public void boosts(ObjectFloatHashMap<String> boosts) {, +++ b/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +import com.carrotsearch.hppc.ObjectIntHashMap;, +        private ObjectIntHashMap<BytesRef> seenSurfaceForms = HppcMaps.Object.Integer.ensureNoNullKeys(256, 0.75f);, +, +            final int keySlot;, +            if (count > 0 && (keySlot = seenSurfaceForms.indexOf(surface)) >= 0) {, +                surfaceIndex = seenSurfaceForms.indexGet(keySlot);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsIndices.java, +import com.carrotsearch.hppc.ObjectObjectHashMap;, +        ObjectObjectHashMap<String, ShardStats> countsPerIndex = new ObjectObjectHashMap<>();, +++ b/pom.xml, +            <version>0.7.1</version>, +        </dependency>, +, +        <dependency> <!-- ES uses byte* hashes -->]