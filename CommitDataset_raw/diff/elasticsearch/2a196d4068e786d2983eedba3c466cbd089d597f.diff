[+++ b/build.gradle, +    "org.elasticsearch.client:rest:${version}": ':client:rest',, +    "org.elasticsearch.client:sniffer:${version}": ':client:sniffer',, +    "org.elasticsearch.client:test:${version}": ':client:test',, +++ b/build.gradle, +    "org.elasticsearch.client:rest:${version}": ':client:rest',, +    "org.elasticsearch.client:sniffer:${version}": ':client:sniffer',, +    "org.elasticsearch.client:test:${version}": ':client:test',, +++ b/buildSrc/build.gradle, +  compile 'ru.vyarus:gradle-animalsniffer-plugin:1.0.1', +++ b/build.gradle, +    "org.elasticsearch.client:rest:${version}": ':client:rest',, +    "org.elasticsearch.client:sniffer:${version}": ':client:sniffer',, +    "org.elasticsearch.client:test:${version}": ':client:test',, +++ b/buildSrc/build.gradle, +  compile 'ru.vyarus:gradle-animalsniffer-plugin:1.0.1', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                // Plugins declare integration tests as "Tests" instead of IT., +++ b/build.gradle, +    "org.elasticsearch.client:rest:${version}": ':client:rest',, +    "org.elasticsearch.client:sniffer:${version}": ':client:sniffer',, +    "org.elasticsearch.client:test:${version}": ':client:test',, +++ b/buildSrc/build.gradle, +  compile 'ru.vyarus:gradle-animalsniffer-plugin:1.0.1', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                // Plugins declare integration tests as "Tests" instead of IT., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/NamingConventionsTask.groovy, +                args('--test-class', testClass), +                } else {, +                    args('--integ-test-class', integTestClass), +++ b/build.gradle, +    "org.elasticsearch.client:rest:${version}": ':client:rest',, +    "org.elasticsearch.client:sniffer:${version}": ':client:sniffer',, +    "org.elasticsearch.client:test:${version}": ':client:test',, +++ b/buildSrc/build.gradle, +  compile 'ru.vyarus:gradle-animalsniffer-plugin:1.0.1', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                // Plugins declare integration tests as "Tests" instead of IT., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/NamingConventionsTask.groovy, +                args('--test-class', testClass), +                } else {, +                    args('--integ-test-class', integTestClass), +++ b/buildSrc/src/main/java/org/elasticsearch/test/NamingConventionsCheck.java, +        Class<?> testClass = null;, +        Class<?> integTestClass = null;, +        Path rootPath = null;, +        for (int i = 0; i < args.length; i++) {, +            String arg = args[i];, +            switch (arg) {, +                case "--test-class":, +                    testClass = loadClassWithoutInitializing(args[++i]);, +                    break;, +                case "--integ-test-class":, +                    integTestClass = loadClassWithoutInitializing(args[++i]);, +                    break;, +                    break;, +                    break;, +                    rootPath = Paths.get(args[++i]);, +                    fail("unsupported argument '" + arg + "'");, +, +        NamingConventionsCheck check = new NamingConventionsCheck(testClass, integTestClass);, +        check.check(rootPath, skipIntegTestsInDisguise);, +        if (skipIntegTestsInDisguise == false) {, +            assertNoViolations("Subclasses of " + check.integTestClass.getSimpleName() +, +                    " should end with IT as they are integration tests", check.integTestsInDisguise);, +    public void check(Path rootPath, boolean skipTestsInDisguised) throws IOException {, +                        if (skipTestsInDisguised == false && integTestClass.isAssignableFrom(clazz)) {, +++ b/build.gradle, +    "org.elasticsearch.client:rest:${version}": ':client:rest',, +    "org.elasticsearch.client:sniffer:${version}": ':client:sniffer',, +    "org.elasticsearch.client:test:${version}": ':client:test',, +++ b/buildSrc/build.gradle, +  compile 'ru.vyarus:gradle-animalsniffer-plugin:1.0.1', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                // Plugins declare integration tests as "Tests" instead of IT., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/NamingConventionsTask.groovy, +                args('--test-class', testClass), +                } else {, +                    args('--integ-test-class', integTestClass), +++ b/buildSrc/src/main/java/org/elasticsearch/test/NamingConventionsCheck.java, +        Class<?> testClass = null;, +        Class<?> integTestClass = null;, +        Path rootPath = null;, +        for (int i = 0; i < args.length; i++) {, +            String arg = args[i];, +            switch (arg) {, +                case "--test-class":, +                    testClass = loadClassWithoutInitializing(args[++i]);, +                    break;, +                case "--integ-test-class":, +                    integTestClass = loadClassWithoutInitializing(args[++i]);, +                    break;, +                    break;, +                    break;, +                    rootPath = Paths.get(args[++i]);, +                    fail("unsupported argument '" + arg + "'");, +, +        NamingConventionsCheck check = new NamingConventionsCheck(testClass, integTestClass);, +        check.check(rootPath, skipIntegTestsInDisguise);, +        if (skipIntegTestsInDisguise == false) {]