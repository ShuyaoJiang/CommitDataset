[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java, +    public ClusterStateRequest listenerThreaded(boolean listenerThreaded) {, +        super.listenerThreaded(listenerThreaded);, +        return this;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java, +    public ClusterStateRequest listenerThreaded(boolean listenerThreaded) {, +        super.listenerThreaded(listenerThreaded);, +        return this;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/action/search/TransportSearchScrollAction.java, +            // no need for a threaded listener, +            request.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java, +    public ClusterStateRequest listenerThreaded(boolean listenerThreaded) {, +        super.listenerThreaded(listenerThreaded);, +        return this;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/action/search/TransportSearchScrollAction.java, +            // no need for a threaded listener, +            request.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/rest/action/admin/cluster/health/RestClusterHealthAction.java, +        clusterHealthRequest.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java, +    public ClusterStateRequest listenerThreaded(boolean listenerThreaded) {, +        super.listenerThreaded(listenerThreaded);, +        return this;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/action/search/TransportSearchScrollAction.java, +            // no need for a threaded listener, +            request.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/rest/action/admin/cluster/health/RestClusterHealthAction.java, +        clusterHealthRequest.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/rest/action/admin/cluster/reroute/RestClusterRerouteAction.java, +        clusterRerouteRequest.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java, +    public ClusterStateRequest listenerThreaded(boolean listenerThreaded) {, +        super.listenerThreaded(listenerThreaded);, +        return this;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/action/search/TransportSearchScrollAction.java, +            // no need for a threaded listener, +            request.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/rest/action/admin/cluster/health/RestClusterHealthAction.java, +        clusterHealthRequest.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/rest/action/admin/cluster/reroute/RestClusterRerouteAction.java, +        clusterRerouteRequest.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/rest/action/admin/cluster/settings/RestClusterGetSettingsAction.java, +                .listenerThreaded(false), +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java, +    public ClusterStateRequest listenerThreaded(boolean listenerThreaded) {, +        super.listenerThreaded(listenerThreaded);, +        return this;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/action/search/TransportSearchScrollAction.java, +            // no need for a threaded listener, +            request.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/rest/action/admin/cluster/health/RestClusterHealthAction.java, +        clusterHealthRequest.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/rest/action/admin/cluster/reroute/RestClusterRerouteAction.java, +        clusterRerouteRequest.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/rest/action/admin/cluster/settings/RestClusterGetSettingsAction.java, +                .listenerThreaded(false), +++ b/src/main/java/org/elasticsearch/rest/action/admin/cluster/settings/RestClusterUpdateSettingsAction.java, +        clusterUpdateSettingsRequest.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java, +    public ClusterStateRequest listenerThreaded(boolean listenerThreaded) {, +        super.listenerThreaded(listenerThreaded);, +        return this;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/action/search/TransportSearchScrollAction.java, +            // no need for a threaded listener, +            request.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/rest/action/admin/cluster/health/RestClusterHealthAction.java, +        clusterHealthRequest.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/rest/action/admin/cluster/reroute/RestClusterRerouteAction.java, +        clusterRerouteRequest.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/rest/action/admin/cluster/settings/RestClusterGetSettingsAction.java, +                .listenerThreaded(false), +++ b/src/main/java/org/elasticsearch/rest/action/admin/cluster/settings/RestClusterUpdateSettingsAction.java, +        clusterUpdateSettingsRequest.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/rest/action/admin/cluster/state/RestClusterStateAction.java, +        clusterStateRequest.listenerThreaded(false);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java, +    public ClusterStateRequest listenerThreaded(boolean listenerThreaded) {, +        super.listenerThreaded(listenerThreaded);]