[+++ b/src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/get/RestGetMappingAction.java, +import static org.elasticsearch.rest.RestStatus.NOT_FOUND;, +                    boolean foundAny = false;, +, +                    if (indices.length == 1 && metaData.indices().isEmpty()) {, +, +                    if (indices.length == 1 && types.size() == 1) {, +                            foundAny = true;, +                                foundAny = true;, +                    channel.sendResponse(new XContentRestResponse(request, foundAny ? OK : NOT_FOUND, builder));, +++ b/src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/get/RestGetMappingAction.java, +import static org.elasticsearch.rest.RestStatus.NOT_FOUND;, +                    boolean foundAny = false;, +, +                    if (indices.length == 1 && metaData.indices().isEmpty()) {, +, +                    if (indices.length == 1 && types.size() == 1) {, +                            foundAny = true;, +                                foundAny = true;, +                    channel.sendResponse(new XContentRestResponse(request, foundAny ? OK : NOT_FOUND, builder));, +++ b/src/main/java/org/elasticsearch/rest/action/admin/indices/settings/RestGetSettingsAction.java, +import org.elasticsearch.index.Index;, +import org.elasticsearch.indices.IndexMissingException;, +import static org.elasticsearch.rest.RestStatus.NOT_FOUND;, +, +                    if (metaData.indices().isEmpty()) {, +                        channel.sendResponse(new XContentThrowableRestResponse(request, new IndexMissingException(new Index(indices[0]))));, +                        return;, +                    }, +, +                    boolean foundAny = false;, +                        foundAny = true;, +                    channel.sendResponse(new XContentRestResponse(request, foundAny ? OK : NOT_FOUND, builder));]