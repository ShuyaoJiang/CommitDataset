[+++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrail.java, +import org.elasticsearch.shield.transport.n2n.ProfileIpFilterRule;, +import java.net.InetAddress;, +, +, +        @Override, +        public void connectionGranted(InetAddress inetAddress, ProfileIpFilterRule rule) {, +        }, +, +        @Override, +        public void connectionDenied(InetAddress inetAddress, ProfileIpFilterRule rule) {, +        }, +    void connectionGranted(InetAddress inetAddress, ProfileIpFilterRule rule);, +, +    void connectionDenied(InetAddress inetAddress, ProfileIpFilterRule rule);, +++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrail.java, +import org.elasticsearch.shield.transport.n2n.ProfileIpFilterRule;, +import java.net.InetAddress;, +, +, +        @Override, +        public void connectionGranted(InetAddress inetAddress, ProfileIpFilterRule rule) {, +        }, +, +        @Override, +        public void connectionDenied(InetAddress inetAddress, ProfileIpFilterRule rule) {, +        }, +    void connectionGranted(InetAddress inetAddress, ProfileIpFilterRule rule);, +, +    void connectionDenied(InetAddress inetAddress, ProfileIpFilterRule rule);, +++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrailService.java, +import org.elasticsearch.shield.transport.n2n.ProfileIpFilterRule;, +import java.net.InetAddress;, +, +    @Override, +    public void connectionGranted(InetAddress inetAddress, ProfileIpFilterRule rule) {, +        for (AuditTrail auditTrail : auditTrails) {, +            auditTrail.connectionGranted(inetAddress, rule);, +        }, +    }, +, +    @Override, +    public void connectionDenied(InetAddress inetAddress, ProfileIpFilterRule rule) {, +        for (AuditTrail auditTrail : auditTrails) {, +            auditTrail.connectionDenied(inetAddress, rule);, +        }, +    }, +++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrail.java, +import org.elasticsearch.shield.transport.n2n.ProfileIpFilterRule;, +import java.net.InetAddress;, +, +, +        @Override, +        public void connectionGranted(InetAddress inetAddress, ProfileIpFilterRule rule) {, +        }, +, +        @Override, +        public void connectionDenied(InetAddress inetAddress, ProfileIpFilterRule rule) {, +        }, +    void connectionGranted(InetAddress inetAddress, ProfileIpFilterRule rule);, +, +    void connectionDenied(InetAddress inetAddress, ProfileIpFilterRule rule);, +++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrailService.java, +import org.elasticsearch.shield.transport.n2n.ProfileIpFilterRule;, +import java.net.InetAddress;, +, +    @Override, +    public void connectionGranted(InetAddress inetAddress, ProfileIpFilterRule rule) {, +        for (AuditTrail auditTrail : auditTrails) {, +            auditTrail.connectionGranted(inetAddress, rule);, +        }, +    }, +, +    @Override, +    public void connectionDenied(InetAddress inetAddress, ProfileIpFilterRule rule) {, +        for (AuditTrail auditTrail : auditTrails) {, +            auditTrail.connectionDenied(inetAddress, rule);, +        }, +    }, +++ b/src/main/java/org/elasticsearch/shield/audit/logfile/LoggingAuditTrail.java, +import org.elasticsearch.shield.transport.n2n.ProfileIpFilterRule;, +import java.net.InetAddress;, +, +    @Override, +    public void connectionGranted(InetAddress inetAddress, ProfileIpFilterRule rule) {, +        if (logger.isTraceEnabled()) {, +            logger.trace("CONNECTION_GRANTED\thost=[{}], rule=[{}]", inetAddress.getHostAddress(), rule);, +        }, +    }, +, +    @Override, +    public void connectionDenied(InetAddress inetAddress, ProfileIpFilterRule rule) {, +        if (logger.isDebugEnabled()) {, +            logger.debug("CONNECTION_DENIED\thost=[{}], rule=[{}]", inetAddress.getHostAddress(), rule);, +        } else {, +            logger.error("CONNECTION_DENIED\thost=[{}]", inetAddress.getHostAddress());, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrail.java]