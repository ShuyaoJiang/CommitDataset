[+++ b/build.gradle, +import org.gradle.api.tasks.options.Option, +import com.carrotsearch.gradle.junit4.RandomizedTestingTask, +, +import java.util.function.Predicate, +  throw new GradleException('You must run gradle idea from the root of elasticsearch before importing into IntelliJ'), +++ b/build.gradle, +import org.gradle.api.tasks.options.Option, +import com.carrotsearch.gradle.junit4.RandomizedTestingTask, +, +import java.util.function.Predicate, +  throw new GradleException('You must run gradle idea from the root of elasticsearch before importing into IntelliJ'), +++ b/buildSrc/build.gradle, +import java.nio.file.Files, +++ b/build.gradle, +import org.gradle.api.tasks.options.Option, +import com.carrotsearch.gradle.junit4.RandomizedTestingTask, +, +import java.util.function.Predicate, +  throw new GradleException('You must run gradle idea from the root of elasticsearch before importing into IntelliJ'), +++ b/buildSrc/build.gradle, +import java.nio.file.Files, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/TestClustersPlugin.java, +        // When the daemon is used, but does not work correctly and eventually dies off (e.x. due to non interruptable, +++ b/build.gradle, +import org.gradle.api.tasks.options.Option, +import com.carrotsearch.gradle.junit4.RandomizedTestingTask, +, +import java.util.function.Predicate, +  throw new GradleException('You must run gradle idea from the root of elasticsearch before importing into IntelliJ'), +++ b/buildSrc/build.gradle, +import java.nio.file.Files, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/TestClustersPlugin.java, +        // When the daemon is used, but does not work correctly and eventually dies off (e.x. due to non interruptable, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]get[/\\]GetActionIT.java" checks="LineLength" />, +++ b/build.gradle, +import org.gradle.api.tasks.options.Option, +import com.carrotsearch.gradle.junit4.RandomizedTestingTask, +, +import java.util.function.Predicate, +  throw new GradleException('You must run gradle idea from the root of elasticsearch before importing into IntelliJ'), +++ b/buildSrc/build.gradle, +import java.nio.file.Files, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/TestClustersPlugin.java, +        // When the daemon is used, but does not work correctly and eventually dies off (e.x. due to non interruptable, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]get[/\\]GetActionIT.java" checks="LineLength" />, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +, +# Remove once Lucene 7.7 is integrated, +@defaultMessage Use org.apache.lucene.document.XLatLonShape classes instead, +org.apache.lucene.document.LatLonShape, +org.apache.lucene.document.LatLonShapeBoundingBoxQuery, +org.apache.lucene.document.LatLonShapeLineQuery, +org.apache.lucene.document.LatLonShapePolygonQuery, +org.apache.lucene.document.LatLonShapeQuery, +, +org.apache.lucene.geo.Rectangle2D @ use @org.apache.lucene.geo.XRectangle2D instead, +, +org.apache.lucene.geo.Tessellator @ use @org.apache.lucene.geo.XTessellator instead, +++ b/build.gradle, +import org.gradle.api.tasks.options.Option, +import com.carrotsearch.gradle.junit4.RandomizedTestingTask, +, +import java.util.function.Predicate, +  throw new GradleException('You must run gradle idea from the root of elasticsearch before importing into IntelliJ'), +++ b/buildSrc/build.gradle, +import java.nio.file.Files, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/TestClustersPlugin.java, +        // When the daemon is used, but does not work correctly and eventually dies off (e.x. due to non interruptable, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]get[/\\]GetActionIT.java" checks="LineLength" />, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +, +# Remove once Lucene 7.7 is integrated, +@defaultMessage Use org.apache.lucene.document.XLatLonShape classes instead, +org.apache.lucene.document.LatLonShape, +org.apache.lucene.document.LatLonShapeBoundingBoxQuery, +org.apache.lucene.document.LatLonShapeLineQuery, +org.apache.lucene.document.LatLonShapePolygonQuery, +org.apache.lucene.document.LatLonShapeQuery, +, +org.apache.lucene.geo.Rectangle2D @ use @org.apache.lucene.geo.XRectangle2D instead, +, +org.apache.lucene.geo.Tessellator @ use @org.apache.lucene.geo.XTessellator instead, +++ b/buildSrc/version.properties, +lucene            = 8.0.0-snapshot-774e9aefbc, +++ b/build.gradle, +import org.gradle.api.tasks.options.Option, +import com.carrotsearch.gradle.junit4.RandomizedTestingTask, +, +import java.util.function.Predicate, +  throw new GradleException('You must run gradle idea from the root of elasticsearch before importing into IntelliJ'), +++ b/buildSrc/build.gradle, +import java.nio.file.Files, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/TestClustersPlugin.java, +        // When the daemon is used, but does not work correctly and eventually dies off (e.x. due to non interruptable, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]get[/\\]GetActionIT.java" checks="LineLength" />]