[+++ b/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +import org.elasticsearch.common.Booleans;, +        return Booleans.isExplicitTrue(client);, +        return Booleans.isExplicitTrue(master);, +        return Booleans.isExplicitTrue(data);, +        return Booleans.parseBooleanExact(data);, +        return client != null && Booleans.parseBooleanExact(client);, +        return Booleans.parseBooleanExact(master);, +++ b/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +import org.elasticsearch.common.Booleans;, +        return Booleans.isExplicitTrue(client);, +        return Booleans.isExplicitTrue(master);, +        return Booleans.isExplicitTrue(data);, +        return Booleans.parseBooleanExact(data);, +        return client != null && Booleans.parseBooleanExact(client);, +        return Booleans.parseBooleanExact(master);, +++ b/src/main/java/org/elasticsearch/common/Booleans.java, +import org.elasticsearch.ElasticsearchIllegalArgumentException;, +    /***, +     *, +     * @param value, +     * @return true/false, +     * throws exception if string cannot be parsed to boolean, +     */, +    public static Boolean parseBooleanExact(String value){, +, +        boolean isFalse = isExplicitFalse(value);, +        if (isFalse) {, +            return false;, +        }, +        boolean isTrue = isExplicitTrue(value);, +        if (isTrue) {, +            return true;, +        }, +, +        throw new ElasticsearchIllegalArgumentException("value cannot be parsed to boolean [ true/1/on/yes OR false/0/off/no ]  ");, +    }, +, +++ b/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +import org.elasticsearch.common.Booleans;, +        return Booleans.isExplicitTrue(client);, +        return Booleans.isExplicitTrue(master);, +        return Booleans.isExplicitTrue(data);, +        return Booleans.parseBooleanExact(data);, +        return client != null && Booleans.parseBooleanExact(client);, +        return Booleans.parseBooleanExact(master);, +++ b/src/main/java/org/elasticsearch/common/Booleans.java, +import org.elasticsearch.ElasticsearchIllegalArgumentException;, +    /***, +     *, +     * @param value, +     * @return true/false, +     * throws exception if string cannot be parsed to boolean, +     */, +    public static Boolean parseBooleanExact(String value){, +, +        boolean isFalse = isExplicitFalse(value);, +        if (isFalse) {, +            return false;, +        }, +        boolean isTrue = isExplicitTrue(value);, +        if (isTrue) {, +            return true;, +        }, +, +        throw new ElasticsearchIllegalArgumentException("value cannot be parsed to boolean [ true/1/on/yes OR false/0/off/no ]  ");, +    }, +, +++ b/src/test/java/org/elasticsearch/common/BooleansTests.java, +import org.elasticsearch.ElasticsearchIllegalArgumentException;, +    @Test, +    public void parseBooleanExact() {, +        assertThat(Booleans.parseBooleanExact(randomFrom("true", "on", "yes", "1")), is(true));, +        assertThat(Booleans.parseBooleanExact(randomFrom("false", "off", "no", "0")), is(false));, +        try {, +            Booleans.parseBooleanExact(randomFrom(null, "fred", "foo", "barney"));, +            fail("Expected exception while parsing invalid boolean value ");, +        } catch (Exception ex) {, +            assertTrue(ex instanceof ElasticsearchIllegalArgumentException);, +        }, +    }, +]