[+++ b/src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java, +import org.elasticsearch.common.util.concurrent.AbstractRunnable;, +                        threadPool.executor(executor).execute(new AbstractRunnable() {, +, +                            // we must never reject on because of thread pool capacity on replicas, +                            @Override, +                            public boolean isForceExecution() {, +                                return true;, +                            }, +++ b/src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java, +import org.elasticsearch.common.util.concurrent.AbstractRunnable;, +                        threadPool.executor(executor).execute(new AbstractRunnable() {, +, +                            // we must never reject on because of thread pool capacity on replicas, +                            @Override, +                            public boolean isForceExecution() {, +                                return true;, +                            }, +++ b/src/main/java/org/elasticsearch/common/util/concurrent/AbstractRunnable.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.util.concurrent;, +, +/**, + * An extension to runnable., + */, +public abstract class AbstractRunnable implements Runnable {, +, +    /**, +     * Should the runnable force its execution in case it gets rejected?, +     */, +    public boolean isForceExecution() {, +        return false;, +    }, +}, +++ b/src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java, +import org.elasticsearch.common.util.concurrent.AbstractRunnable;, +                        threadPool.executor(executor).execute(new AbstractRunnable() {, +, +                            // we must never reject on because of thread pool capacity on replicas, +                            @Override, +                            public boolean isForceExecution() {, +                                return true;, +                            }, +++ b/src/main/java/org/elasticsearch/common/util/concurrent/AbstractRunnable.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.util.concurrent;, +, +/**, + * An extension to runnable., + */, +public abstract class AbstractRunnable implements Runnable {, +, +    /**, +     * Should the runnable force its execution in case it gets rejected?, +     */, +    public boolean isForceExecution() {, +        return false;, +    }, +}, +++ b/src/main/java/org/elasticsearch/common/util/concurrent/EsAbortPolicy.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +import org.elasticsearch.ElasticSearchInterruptedException;, +import java.util.concurrent.BlockingQueue;, +        if (r instanceof AbstractRunnable) {]