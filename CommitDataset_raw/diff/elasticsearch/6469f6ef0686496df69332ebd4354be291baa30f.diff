[+++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +        if (this.fieldType().omitNorms() != fieldMergeWith.fieldType.omitNorms()) {, +            mergeContext.addConflict("mapper [" + names.fullName() + "] has different `norms.enabled` values");, +        }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +        if (this.fieldType().omitNorms() != fieldMergeWith.fieldType.omitNorms()) {, +            mergeContext.addConflict("mapper [" + names.fullName() + "] has different `norms.enabled` values");, +        }, +++ b/src/test/java/org/elasticsearch/indices/mapping/UpdateMappingTests.java, +    @Test(expected = MergeMappingException.class), +    public void updateMappingWithNormsConflicts() throws Exception {, +        client().admin().indices().prepareCreate("test"), +                .addMapping("type", "{\"type\":{\"properties\":{\"body\":{\"type\":\"string\", \"norms\": { \"enabled\": false }}}}}"), +                .execute().actionGet();, +        PutMappingResponse putMappingResponse = client().admin().indices().preparePutMapping("test").setType("type"), +                .setSource("{\"type\":{\"properties\":{\"body\":{\"type\":\"string\", \"norms\": { \"enabled\": true }}}}}"), +                .execute().actionGet();, +    }, +]