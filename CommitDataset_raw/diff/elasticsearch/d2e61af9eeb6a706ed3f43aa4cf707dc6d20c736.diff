[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchScanAction.java, +                scrollId = buildScrollId(request.searchType(), queryResults.values(), ImmutableMap.of("total_hits", Long.toString(internalResponse.hits().totalHits())));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchScanAction.java, +                scrollId = buildScrollId(request.searchType(), queryResults.values(), ImmutableMap.of("total_hits", Long.toString(internalResponse.hits().totalHits())));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollScanAction.java, +                final InternalSearchResponse internalResponse = new InternalSearchResponse(new InternalSearchHits(InternalSearchHits.EMPTY, Long.parseLong(this.scrollId.attributes().get("total_hits")), 0.0f), null, false);, +            ((InternalSearchHits) internalResponse.hits()).totalHits = Long.parseLong(this.scrollId.attributes().get("total_hits"));, +                scrollId = TransportSearchHelper.buildScrollId(this.scrollId.type(), queryFetchResults.values(), this.scrollId.attributes()); // continue moving the total_hits, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchScanAction.java, +                scrollId = buildScrollId(request.searchType(), queryResults.values(), ImmutableMap.of("total_hits", Long.toString(internalResponse.hits().totalHits())));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollScanAction.java, +                final InternalSearchResponse internalResponse = new InternalSearchResponse(new InternalSearchHits(InternalSearchHits.EMPTY, Long.parseLong(this.scrollId.attributes().get("total_hits")), 0.0f), null, false);, +            ((InternalSearchHits) internalResponse.hits()).totalHits = Long.parseLong(this.scrollId.attributes().get("total_hits"));, +                scrollId = TransportSearchHelper.buildScrollId(this.scrollId.type(), queryFetchResults.values(), this.scrollId.attributes()); // continue moving the total_hits, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/internal/InternalSearchHits.java, +    public long totalHits;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchScanAction.java, +                scrollId = buildScrollId(request.searchType(), queryResults.values(), ImmutableMap.of("total_hits", Long.toString(internalResponse.hits().totalHits())));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollScanAction.java, +                final InternalSearchResponse internalResponse = new InternalSearchResponse(new InternalSearchHits(InternalSearchHits.EMPTY, Long.parseLong(this.scrollId.attributes().get("total_hits")), 0.0f), null, false);, +            ((InternalSearchHits) internalResponse.hits()).totalHits = Long.parseLong(this.scrollId.attributes().get("total_hits"));, +                scrollId = TransportSearchHelper.buildScrollId(this.scrollId.type(), queryFetchResults.values(), this.scrollId.attributes()); // continue moving the total_hits, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/internal/InternalSearchHits.java, +    public long totalHits;, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/search/scan/SearchScanTests.java, +    @Test public void shard1docs100size3() throws Exception {, +        testScroll(1, 100, 3);, +    }, +, +    @Test public void shard1docs100size7() throws Exception {, +        testScroll(1, 100, 7);, +    }, +, +    @Test public void shard1docs100size13() throws Exception {, +        testScroll(1, 100, 13);, +    }, +, +    @Test public void shard1docs100size24() throws Exception {, +        testScroll(1, 100, 24);, +    }, +, +    @Test public void shard1docs100size45() throws Exception {, +        testScroll(1, 100, 45);, +    }, +, +    @Test public void shard1docs100size63() throws Exception {, +        testScroll(1, 100, 63);, +    }, +, +    @Test public void shard1docs100size89() throws Exception {, +        testScroll(1, 100, 89);, +    }, +, +    @Test public void shard1docs100size120() throws Exception {, +        testScroll(1, 100, 120);, +    }, +, +    @Test public void shard3docs100size3() throws Exception {, +        testScroll(3, 100, 3);, +    }, +, +    @Test public void shard3docs100size7() throws Exception {, +        testScroll(3, 100, 7);, +    }, +, +    @Test public void shard3docs100size13() throws Exception {, +        testScroll(3, 100, 13);, +    }, +, +    @Test public void shard3docs100size24() throws Exception {, +        testScroll(3, 100, 24);, +    }, +, +    @Test public void shard3docs100size45() throws Exception {, +        testScroll(3, 100, 45);, +    }, +, +    @Test public void shard3docs100size63() throws Exception {, +        testScroll(3, 100, 63);, +    }, +, +    @Test public void shard3docs100size89() throws Exception {, +        testScroll(3, 100, 89);, +    }, +, +    @Test public void shard3docs100size120() throws Exception {, +        testScroll(3, 100, 120);, +    }, +, +    private void testScroll(int numberOfShards, long numberOfDocs, int size) throws Exception {, +        client.admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards", numberOfShards)).execute().actionGet();, +        for (int i = 0; i < numberOfDocs; i++) {, +                .setSize(size), +        assertThat(searchResponse.hits().totalHits(), equalTo(numberOfDocs));, +            assertThat(searchResponse.hits().totalHits(), equalTo(numberOfDocs));, +            if (searchResponse.hits().hits().length == 0) {]