[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        // The distribution can be configured with -Dtests.distribution on the command line, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'zip'), +            '\\{build_flavor\\}' :, +                project.integTestCluster.distribution.startsWith('oss-') ? 'oss' : 'default',, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        // The distribution can be configured with -Dtests.distribution on the command line, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'zip'), +            '\\{build_flavor\\}' :, +                project.integTestCluster.distribution.startsWith('oss-') ? 'oss' : 'default',, +++ b/docs/Versions.asciidoc, +:build_flavor:          default, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        // The distribution can be configured with -Dtests.distribution on the command line, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'zip'), +            '\\{build_flavor\\}' :, +                project.integTestCluster.distribution.startsWith('oss-') ? 'oss' : 'default',, +++ b/docs/Versions.asciidoc, +:build_flavor:          default, +++ b/docs/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        // The distribution can be configured with -Dtests.distribution on the command line, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'zip'), +            '\\{build_flavor\\}' :, +                project.integTestCluster.distribution.startsWith('oss-') ? 'oss' : 'default',, +++ b/docs/Versions.asciidoc, +:build_flavor:          default, +++ b/docs/build.gradle, +++ b/docs/plugins/discovery-azure-classic.asciidoc, +    "build_flavor" : "{build_flavor}",, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        // The distribution can be configured with -Dtests.distribution on the command line, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'zip'), +            '\\{build_flavor\\}' :, +                project.integTestCluster.distribution.startsWith('oss-') ? 'oss' : 'default',, +++ b/docs/Versions.asciidoc, +:build_flavor:          default, +++ b/docs/build.gradle, +++ b/docs/plugins/discovery-azure-classic.asciidoc, +    "build_flavor" : "{build_flavor}",, +++ b/docs/reference/cat/nodeattrs.asciidoc, +// TEST[s/\?v/\?v&s=node,attr/], +// Sort the resulting attributes so we can assert on them more easilly, +..., +node-0 127.0.0.1 127.0.0.1 testattr test, +..., +// TESTRESPONSE[s/\.\.\.\n$/\n(.+ xpack\\.installed true\n)?\n/], +// TESTRESPONSE[s/\.\.\.\n/(.+ ml\\..+\n)*/ _cat], +// If xpack is not installed then neither ... with match anything, +// If xpack is installed then the first ... contains ml attributes, +// and the second contains xpack.installed=true, +// TEST[s/,value/,value&s=node,attr/], +// Sort the resulting attributes so we can assert on them more easilly, +..., +node-0 19566 testattr test, +..., +// TESTRESPONSE[s/19566/\\d*/], +// TESTRESPONSE[s/\.\.\.\n$/\n(.+ xpack\\.installed true\n)?\n/], +// TESTRESPONSE[s/\.\.\.\n/(.+ ml\\..+\n)*/ _cat], +// If xpack is not installed then neither ... with match anything, +// If xpack is installed then the first ... contains ml attributes, +// and the second contains xpack.installed=true, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        // The distribution can be configured with -Dtests.distribution on the command line, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'zip'), +            '\\{build_flavor\\}' :, +                project.integTestCluster.distribution.startsWith('oss-') ? 'oss' : 'default',, +++ b/docs/Versions.asciidoc, +:build_flavor:          default, +++ b/docs/build.gradle, +++ b/docs/plugins/discovery-azure-classic.asciidoc, +    "build_flavor" : "{build_flavor}",, +++ b/docs/reference/cat/nodeattrs.asciidoc, +// TEST[s/\?v/\?v&s=node,attr/], +// Sort the resulting attributes so we can assert on them more easilly, +..., +node-0 127.0.0.1 127.0.0.1 testattr test, +..., +// TESTRESPONSE[s/\.\.\.\n$/\n(.+ xpack\\.installed true\n)?\n/], +// TESTRESPONSE[s/\.\.\.\n/(.+ ml\\..+\n)*/ _cat], +// If xpack is not installed then neither ... with match anything, +// If xpack is installed then the first ... contains ml attributes, +// and the second contains xpack.installed=true, +// TEST[s/,value/,value&s=node,attr/], +// Sort the resulting attributes so we can assert on them more easilly, +..., +node-0 19566 testattr test, +..., +// TESTRESPONSE[s/19566/\\d*/], +// TESTRESPONSE[s/\.\.\.\n$/\n(.+ xpack\\.installed true\n)?\n/], +// TESTRESPONSE[s/\.\.\.\n/(.+ ml\\..+\n)*/ _cat], +// If xpack is not installed then neither ... with match anything, +// If xpack is installed then the first ... contains ml attributes, +// and the second contains xpack.installed=true, +++ b/docs/reference/cat/templates.asciidoc, +// TEST[s/templates/templates\/template*/], +// The substitions do two things:, +// 1. Filter the response to just templates matching the te* pattern, +//    so that we only get the templates we expect regardless of which, +//    templates exist. If xpack is installed there will be unexpected]