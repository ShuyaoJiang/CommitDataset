[+++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestProxyActionFilter.java, +import java.util.Collection;, +        DiscoveryNode[] ingestNodes = clusterService.state().getNodes().getIngestNodes().values().toArray(DiscoveryNode.class);, +        if (ingestNodes.length == 0) {, +        return ingestNodes[(index) % ingestNodes.length];, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestProxyActionFilter.java, +import java.util.Collection;, +        DiscoveryNode[] ingestNodes = clusterService.state().getNodes().getIngestNodes().values().toArray(DiscoveryNode.class);, +        if (ingestNodes.length == 0) {, +        return ingestNodes[(index) % ingestNodes.length];, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +import org.elasticsearch.node.NodeModule;, +    private final ImmutableOpenMap<String, DiscoveryNode> ingestNodes;, +    private DiscoveryNodes(ImmutableOpenMap<String, DiscoveryNode> nodes, ImmutableOpenMap<String, DiscoveryNode> dataNodes,, +                           ImmutableOpenMap<String, DiscoveryNode> masterNodes, ImmutableOpenMap<String, DiscoveryNode> ingestNodes,, +                           String masterNodeId, String localNodeId, Version minNodeVersion, Version minNonClientNodeVersion) {, +        this.ingestNodes = ingestNodes;, +     * @return All the ingest nodes arranged by their ids, +     */, +    public ImmutableOpenMap<String, DiscoveryNode> getIngestNodes() {, +        return ingestNodes;, +    }, +, +    /**, +            ImmutableOpenMap.Builder<String, DiscoveryNode> ingestNodesBuilder = ImmutableOpenMap.builder();, +                if (NodeModule.isNodeIngestEnabled(nodeEntry.value.getAttributes())) {, +                    ingestNodesBuilder.put(nodeEntry.key, nodeEntry.value);, +                }, +            return new DiscoveryNodes(, +                nodes.build(), dataNodesBuilder.build(), masterNodesBuilder.build(), ingestNodesBuilder.build(),, +                masterNodeId, localNodeId, minNodeVersion, minNonClientNodeVersion, +            );]