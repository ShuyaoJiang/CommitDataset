[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/stream/BytesStreamInput.java, +    public BytesStreamInput(byte buf[], int offset, int length) {, +        this.pos = offset;, +        this.count = Math.min(offset + length, buf.length);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/stream/BytesStreamInput.java, +    public BytesStreamInput(byte buf[], int offset, int length) {, +        this.pos = offset;, +        this.count = Math.min(offset + length, buf.length);, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/document/GetActionTests.java, +import static org.elasticsearch.common.xcontent.XContentFactory.*;, +        client.admin().indices().prepareDelete().execute().actionGet();, +, +, +    @Test public void realtimeGetWithCompress() throws Exception {, +        client.admin().indices().prepareDelete().execute().actionGet();, +, +        client.admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("index.refresh_interval", -1)), +                .addMapping("type", jsonBuilder().startObject().startObject("type").startObject("_source").field("compress", true).endObject().endObject().endObject()), +                .execute().actionGet();, +, +        ClusterHealthResponse clusterHealth = client.admin().cluster().health(clusterHealthRequest().waitForGreenStatus()).actionGet();, +        assertThat(clusterHealth.timedOut(), equalTo(false));, +        assertThat(clusterHealth.status(), equalTo(ClusterHealthStatus.GREEN));, +, +        StringBuilder sb = new StringBuilder();, +        for (int i = 0; i < 10000; i++) {, +            sb.append((char) i);, +        }, +        String fieldValue = sb.toString();, +        client.prepareIndex("test", "type", "1").setSource("field", fieldValue).execute().actionGet();, +, +        // realtime get, +        GetResponse getResponse = client.prepareGet("test", "type", "1").execute().actionGet();, +        assertThat(getResponse.exists(), equalTo(true));, +        assertThat(getResponse.sourceAsMap().get("field").toString(), equalTo(fieldValue));, +    }]