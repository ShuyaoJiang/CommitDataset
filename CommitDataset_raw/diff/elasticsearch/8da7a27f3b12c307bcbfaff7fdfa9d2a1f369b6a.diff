[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.client.indices.PutMappingRequest;, +     * Updates the mappings on an index using the Put Mapping API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-put-mapping.html">, +     * Put Mapping API on elastic.co</a>, +     * @param putMappingRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     *, +     * @deprecated This method uses an old request object which still refers to types, a deprecated feature. The method, +     * {@link #putMapping(PutMappingRequest, RequestOptions)} should be used instead, which accepts a new request object., +     */, +    @Deprecated, +    public AcknowledgedResponse putMapping(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest putMappingRequest,, +                                           RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(putMappingRequest, IndicesRequestConverters::putMapping, options,, +            AcknowledgedResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously updates the mappings on an index using the Put Mapping API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-put-mapping.html">, +     * Put Mapping API on elastic.co</a>, +     * @param putMappingRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     *, +     * @deprecated This method uses an old request object which still refers to types, a deprecated feature. The, +     * method {@link #putMappingAsync(PutMappingRequest, RequestOptions, ActionListener)} should be used instead,, +     * which accepts a new request object., +     */, +    @Deprecated, +    public void putMappingAsync(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest putMappingRequest,, +                                RequestOptions options,, +                                ActionListener<AcknowledgedResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(putMappingRequest, IndicesRequestConverters::putMapping, options,, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.client.indices.PutMappingRequest;, +     * Updates the mappings on an index using the Put Mapping API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-put-mapping.html">, +     * Put Mapping API on elastic.co</a>, +     * @param putMappingRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     *, +     * @deprecated This method uses an old request object which still refers to types, a deprecated feature. The method, +     * {@link #putMapping(PutMappingRequest, RequestOptions)} should be used instead, which accepts a new request object., +     */, +    @Deprecated, +    public AcknowledgedResponse putMapping(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest putMappingRequest,, +                                           RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(putMappingRequest, IndicesRequestConverters::putMapping, options,, +            AcknowledgedResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously updates the mappings on an index using the Put Mapping API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-put-mapping.html">, +     * Put Mapping API on elastic.co</a>, +     * @param putMappingRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     *, +     * @deprecated This method uses an old request object which still refers to types, a deprecated feature. The, +     * method {@link #putMappingAsync(PutMappingRequest, RequestOptions, ActionListener)} should be used instead,, +     * which accepts a new request object., +     */, +    @Deprecated, +    public void putMappingAsync(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest putMappingRequest,, +                                RequestOptions options,, +                                ActionListener<AcknowledgedResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(putMappingRequest, IndicesRequestConverters::putMapping, options,, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesRequestConverters.java, +import org.elasticsearch.client.indices.PutMappingRequest;, +, +        Request request = new Request(HttpPut.METHOD_NAME, RequestConverters.endpoint(putMappingRequest.indices(), "_mapping"));, +, +        RequestConverters.Params parameters = new RequestConverters.Params(request);, +        parameters.withTimeout(putMappingRequest.timeout());, +        parameters.withMasterTimeout(putMappingRequest.masterNodeTimeout());, +        request.setEntity(RequestConverters.createEntity(putMappingRequest, RequestConverters.REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +    static Request putMapping(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest putMappingRequest) throws IOException {, +        Request request = new Request(HttpPut.METHOD_NAME, RequestConverters.endpoint(putMappingRequest.indices(),, +            "_mapping", putMappingRequest.type()));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.client.indices.PutMappingRequest;, +     * Updates the mappings on an index using the Put Mapping API.]