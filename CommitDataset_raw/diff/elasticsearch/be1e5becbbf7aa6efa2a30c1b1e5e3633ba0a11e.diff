[+++ b/src/main/java/org/elasticsearch/index/fielddata/ScriptDocValues.java, +import org.elasticsearch.common.unit.DistanceUnit;, +import org.elasticsearch.index.search.geo.GeoDistance;, +import org.joda.time.MutableDateTime;, +        private final MutableDateTime date = new MutableDateTime(0);, +        public MutableDateTime getDate() {, +            date.setMillis(getValue());, +            return date;, +        }, +, +, +        public double factorDistance(double lat, double lon) {, +            GeoPoint point = getValue();, +            return GeoDistance.FACTOR.calculate(point.lat(), point.lon(), lat, lon, DistanceUnit.MILES);, +        }, +, +        public double factorDistanceWithDefault(double lat, double lon, double defaultValue) {, +            if (isEmpty()) {, +                return defaultValue;, +            }, +            GeoPoint point = getValue();, +            return GeoDistance.FACTOR.calculate(point.lat(), point.lon(), lat, lon, DistanceUnit.MILES);, +        }, +, +        public double factorDistance02(double lat, double lon) {, +            GeoPoint point = getValue();, +            return GeoDistance.FACTOR.calculate(point.lat(), point.lon(), lat, lon, DistanceUnit.MILES) + 1;, +        }, +, +        public double factorDistance13(double lat, double lon) {, +            GeoPoint point = getValue();, +            return GeoDistance.FACTOR.calculate(point.lat(), point.lon(), lat, lon, DistanceUnit.MILES) + 2;, +        }, +, +        public double arcDistance(double lat, double lon) {, +            GeoPoint point = getValue();, +            return GeoDistance.ARC.calculate(point.lat(), point.lon(), lat, lon, DistanceUnit.MILES);, +        }, +, +        public double arcDistanceWithDefault(double lat, double lon, double defaultValue) {, +            if (isEmpty()) {, +                return defaultValue;, +            }, +            GeoPoint point = getValue();, +            return GeoDistance.ARC.calculate(point.lat(), point.lon(), lat, lon, DistanceUnit.MILES);, +        }, +, +        public double arcDistanceInKm(double lat, double lon) {, +            GeoPoint point = getValue();, +            return GeoDistance.ARC.calculate(point.lat(), point.lon(), lat, lon, DistanceUnit.KILOMETERS);, +        }, +, +        public double arcDistanceInKmWithDefault(double lat, double lon, double defaultValue) {, +            if (isEmpty()) {, +                return defaultValue;, +            }, +            GeoPoint point = getValue();, +            return GeoDistance.ARC.calculate(point.lat(), point.lon(), lat, lon, DistanceUnit.KILOMETERS);, +        }, +, +        public double distance(double lat, double lon) {, +            GeoPoint point = getValue();, +            return GeoDistance.PLANE.calculate(point.lat(), point.lon(), lat, lon, DistanceUnit.MILES);, +        }, +, +        public double distanceWithDefault(double lat, double lon, double defaultValue) {, +            if (isEmpty()) {, +                return defaultValue;, +            }, +            GeoPoint point = getValue();, +            return GeoDistance.PLANE.calculate(point.lat(), point.lon(), lat, lon, DistanceUnit.MILES);, +        }, +, +        public double distanceInKm(double lat, double lon) {, +            GeoPoint point = getValue();, +            return GeoDistance.PLANE.calculate(point.lat(), point.lon(), lat, lon, DistanceUnit.KILOMETERS);, +        }, +, +        public double distanceInKmWithDefault(double lat, double lon, double defaultValue) {, +            if (isEmpty()) {, +                return defaultValue;, +            }, +            GeoPoint point = getValue();, +            return GeoDistance.PLANE.calculate(point.lat(), point.lon(), lat, lon, DistanceUnit.KILOMETERS);, +        }, +++ b/src/main/java/org/elasticsearch/index/fielddata/ScriptDocValues.java, +import org.elasticsearch.common.unit.DistanceUnit;, +import org.elasticsearch.index.search.geo.GeoDistance;, +import org.joda.time.MutableDateTime;, +        private final MutableDateTime date = new MutableDateTime(0);, +        public MutableDateTime getDate() {, +            date.setMillis(getValue());, +            return date;, +        }, +, +, +        public double factorDistance(double lat, double lon) {, +            GeoPoint point = getValue();, +            return GeoDistance.FACTOR.calculate(point.lat(), point.lon(), lat, lon, DistanceUnit.MILES);, +        }]