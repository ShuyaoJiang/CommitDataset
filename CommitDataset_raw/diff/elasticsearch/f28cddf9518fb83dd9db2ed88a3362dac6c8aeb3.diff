[+++ b/client/rest/src/main/java/org/elasticsearch/client/RestClient.java, + * The method {@link #performRequest(Request)} allows to send a request to the cluster. When, +++ b/client/rest/src/main/java/org/elasticsearch/client/RestClient.java, + * The method {@link #performRequest(Request)} allows to send a request to the cluster. When, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientSingleHostIntegTests.java, +            Request request = new Request(method, "/" + statusCode);, +            RequestOptions.Builder options = request.getOptions().toBuilder();, +            for (Header header : requestHeaders) {, +                options.addHeader(header.getName(), header.getValue());, +            }, +            request.setOptions(options);, +                esResponse = restClient.performRequest(request);, +++ b/client/rest/src/main/java/org/elasticsearch/client/RestClient.java, + * The method {@link #performRequest(Request)} allows to send a request to the cluster. When, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientSingleHostIntegTests.java, +            Request request = new Request(method, "/" + statusCode);, +            RequestOptions.Builder options = request.getOptions().toBuilder();, +            for (Header header : requestHeaders) {, +                options.addHeader(header.getName(), header.getValue());, +            }, +            request.setOptions(options);, +                esResponse = restClient.performRequest(request);, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientSingleHostTests.java, +                Response response = restClient.performRequest(new Request(method, "/" + okStatusCode));, +                    Request request = new Request(method, "/" + errorStatusCode);, +                    if (false == ignoreParam.isEmpty()) {, +                        request.addParameter("ignore", ignoreParam);, +                    Response response = restClient.performRequest(request);, +                restClient.performRequest(new Request(method, "/coe"));, +                restClient.performRequest(new Request(method, "/soe"));, +++ b/client/rest/src/main/java/org/elasticsearch/client/RestClient.java, + * The method {@link #performRequest(Request)} allows to send a request to the cluster. When, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientSingleHostIntegTests.java, +            Request request = new Request(method, "/" + statusCode);, +            RequestOptions.Builder options = request.getOptions().toBuilder();, +            for (Header header : requestHeaders) {, +                options.addHeader(header.getName(), header.getValue());, +            }, +            request.setOptions(options);, +                esResponse = restClient.performRequest(request);, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientSingleHostTests.java, +                Response response = restClient.performRequest(new Request(method, "/" + okStatusCode));, +                    Request request = new Request(method, "/" + errorStatusCode);, +                    if (false == ignoreParam.isEmpty()) {, +                        request.addParameter("ignore", ignoreParam);, +                    Response response = restClient.performRequest(request);, +                restClient.performRequest(new Request(method, "/coe"));, +                restClient.performRequest(new Request(method, "/soe"));, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientTests.java, +++ b/client/rest/src/main/java/org/elasticsearch/client/RestClient.java, + * The method {@link #performRequest(Request)} allows to send a request to the cluster. When, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientSingleHostIntegTests.java, +            Request request = new Request(method, "/" + statusCode);, +            RequestOptions.Builder options = request.getOptions().toBuilder();, +            for (Header header : requestHeaders) {, +                options.addHeader(header.getName(), header.getValue());, +            }, +            request.setOptions(options);, +                esResponse = restClient.performRequest(request);, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientSingleHostTests.java, +                Response response = restClient.performRequest(new Request(method, "/" + okStatusCode));, +                    Request request = new Request(method, "/" + errorStatusCode);, +                    if (false == ignoreParam.isEmpty()) {, +                        request.addParameter("ignore", ignoreParam);, +                    Response response = restClient.performRequest(request);, +                restClient.performRequest(new Request(method, "/coe"));, +                restClient.performRequest(new Request(method, "/soe"));, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientTests.java, +++ b/docs/reference/migration/migrate_7_0.asciidoc, +* <<breaking_70_low_level_restclient_changes>>, +include::migrate_7_0/low_level_restclient.asciidoc[], +++ b/client/rest/src/main/java/org/elasticsearch/client/RestClient.java, + * The method {@link #performRequest(Request)} allows to send a request to the cluster. When, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientSingleHostIntegTests.java, +            Request request = new Request(method, "/" + statusCode);, +            RequestOptions.Builder options = request.getOptions().toBuilder();, +            for (Header header : requestHeaders) {, +                options.addHeader(header.getName(), header.getValue());, +            }, +            request.setOptions(options);, +                esResponse = restClient.performRequest(request);, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientSingleHostTests.java, +                Response response = restClient.performRequest(new Request(method, "/" + okStatusCode));, +                    Request request = new Request(method, "/" + errorStatusCode);, +                    if (false == ignoreParam.isEmpty()) {, +                        request.addParameter("ignore", ignoreParam);, +                    Response response = restClient.performRequest(request);, +                restClient.performRequest(new Request(method, "/coe"));, +                restClient.performRequest(new Request(method, "/soe"));, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientTests.java, +++ b/docs/reference/migration/migrate_7_0.asciidoc, +* <<breaking_70_low_level_restclient_changes>>, +include::migrate_7_0/low_level_restclient.asciidoc[], +++ b/docs/reference/migration/migrate_7_0/low_level_restclient.asciidoc, +[[breaking_70_low_level_restclient_changes]], +=== Low-level REST client changes, +, +==== Deprecated flavors of performRequest have been removed, +, +We deprecated the flavors of `performRequest` and `performRequestAsync` that]