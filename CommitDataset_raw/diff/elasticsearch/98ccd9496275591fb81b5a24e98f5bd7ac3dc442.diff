[+++ b/server/src/main/java/org/elasticsearch/action/search/SearchTransportService.java, +import org.elasticsearch.action.support.HandledTransportAction;, +                searchService.executeQueryPhase(request, (SearchTask) task, new HandledTransportAction.ChannelActionListener<>(, +                    channel, QUERY_ACTION_NAME, request));, +++ b/server/src/main/java/org/elasticsearch/action/search/SearchTransportService.java, +import org.elasticsearch.action.support.HandledTransportAction;, +                searchService.executeQueryPhase(request, (SearchTask) task, new HandledTransportAction.ChannelActionListener<>(, +                    channel, QUERY_ACTION_NAME, request));, +++ b/server/src/main/java/org/elasticsearch/action/support/HandledTransportAction.java, +import org.apache.logging.log4j.LogManager;, +import org.apache.logging.log4j.Logger;, +import org.elasticsearch.transport.TransportRequest;, +import org.elasticsearch.transport.TransportResponse;, +            Logger logger = HandledTransportAction.this.logger;, +            execute(task, request, new ChannelActionListener<>(channel, actionName, request));, +        }, +    }, +, +    public static final class ChannelActionListener<Response extends TransportResponse, Request extends TransportRequest> implements, +        ActionListener<Response> {, +        private final Logger logger = LogManager.getLogger(getClass());, +        private final TransportChannel channel;, +        private final Request request;, +        private final String actionName;, +, +        public ChannelActionListener(TransportChannel channel, String actionName, Request request) {, +            this.channel = channel;, +            this.request = request;, +            this.actionName = actionName;, +        }, +]