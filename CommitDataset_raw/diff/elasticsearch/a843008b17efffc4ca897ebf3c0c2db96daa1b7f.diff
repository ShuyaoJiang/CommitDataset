[+++ b/docs/reference/migration/migrate_2_0.asciidoc, +The default value for the `require_field_match` option is `true` rather than, +`false`, meaning that the highlighters will take the fields that were queried, +into account by default. That means for instance that highlighting any field, +when querying the `_all` field will produce no highlighted snippets by default,, +given that the match was on the `_all` field only. Querying the same fields, +that need to be highlighted is the cleaner solution to get highlighted snippets, +back. Otherwise `require_field_match` option can be set to `false` to ignore, +field names completely when highlighting., +, +, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +The default value for the `require_field_match` option is `true` rather than, +`false`, meaning that the highlighters will take the fields that were queried, +into account by default. That means for instance that highlighting any field, +when querying the `_all` field will produce no highlighted snippets by default,, +given that the match was on the `_all` field only. Querying the same fields, +that need to be highlighted is the cleaner solution to get highlighted snippets, +back. Otherwise `require_field_match` option can be set to `false` to ignore, +field names completely when highlighting., +, +, +++ b/docs/reference/search/request/highlighting.asciidoc, +`require_field_match` can be set to `false` which will cause any field to, +be highlighted regardless of whether the query matched specifically on them., +The default behaviour is `true`, meaning that only fields that hold a query, +match will be highlighted., +++ b/docs/reference/migration/migrate_2_0.asciidoc, +The default value for the `require_field_match` option is `true` rather than, +`false`, meaning that the highlighters will take the fields that were queried, +into account by default. That means for instance that highlighting any field, +when querying the `_all` field will produce no highlighted snippets by default,, +given that the match was on the `_all` field only. Querying the same fields, +that need to be highlighted is the cleaner solution to get highlighted snippets, +back. Otherwise `require_field_match` option can be set to `false` to ignore, +field names completely when highlighting., +, +, +++ b/docs/reference/search/request/highlighting.asciidoc, +`require_field_match` can be set to `false` which will cause any field to, +be highlighted regardless of whether the query matched specifically on them., +The default behaviour is `true`, meaning that only fields that hold a query, +match will be highlighted., +++ b/src/main/java/org/elasticsearch/search/highlight/HighlighterParseElement.java, +                .requireFieldMatch(true).forceSource(false).fragmentCharSize(100).numberOfFragments(5), +++ b/docs/reference/migration/migrate_2_0.asciidoc, +The default value for the `require_field_match` option is `true` rather than, +`false`, meaning that the highlighters will take the fields that were queried, +into account by default. That means for instance that highlighting any field, +when querying the `_all` field will produce no highlighted snippets by default,, +given that the match was on the `_all` field only. Querying the same fields, +that need to be highlighted is the cleaner solution to get highlighted snippets, +back. Otherwise `require_field_match` option can be set to `false` to ignore, +field names completely when highlighting., +, +, +++ b/docs/reference/search/request/highlighting.asciidoc, +`require_field_match` can be set to `false` which will cause any field to, +be highlighted regardless of whether the query matched specifically on them., +The default behaviour is `true`, meaning that only fields that hold a query, +match will be highlighted., +++ b/src/main/java/org/elasticsearch/search/highlight/HighlighterParseElement.java, +                .requireFieldMatch(true).forceSource(false).fragmentCharSize(100).numberOfFragments(5), +++ b/src/test/java/org/elasticsearch/search/highlight/HighlighterSearchTests.java, +                .addHighlightedField("titleTV", -1, 2).setHighlighterRequireFieldMatch(false), +                        .field(new HighlightBuilder.Field("field2").preTags("<field2>").postTags("</field2>").fragmentSize(50).requireFieldMatch(false)));, +                .highlight(highlight().field("field1").order("score").preTags("<xxx>").postTags("</xxx>").requireFieldMatch(false));, +                .highlight(highlight().field("field2").order("score").preTags("<xxx>").postTags("</xxx>").requireFieldMatch(false));, +                .highlight(highlight().field("field2").order("score").preTags("<xxx>").postTags("</xxx>").requireFieldMatch(false));, +                .highlight(highlight().field("field2").order("score").preTags("<xxx>").postTags("</xxx>").requireFieldMatch(false));, +                .highlight(highlight().field("field2").order("score").preTags("<xxx>").postTags("</xxx>").requireFieldMatch(false));, +                .highlight(highlight().field("field1", 100, 0).order("score").preTags("<xxx>").postTags("</xxx>").requireFieldMatch(false));, +                .highlight(highlight().field("field2", 100, 0).order("score").preTags("<xxx>").postTags("</xxx>").requireFieldMatch(false));, +                .highlight(highlight().field("field2", 100, 0).order("score").preTags("<xxx>").postTags("</xxx>").requireFieldMatch(false));, +        logger.info("--> searching on field1, highlighting on field1");, +        logger.info("--> searching on field2, highlighting on field2");, +        logger.info("--> searching on field2, highlighting on field2");, +        logger.info("--> searching on field2, highlighting on field2, falling back to the plain highlighter");, +                .query(matchPhraseQuery("_all", "quick brown")), +                .highlight(highlight().field("field2").preTags("<xxx>").postTags("</xxx>").highlighterType("highlighter").requireFieldMatch(false));]