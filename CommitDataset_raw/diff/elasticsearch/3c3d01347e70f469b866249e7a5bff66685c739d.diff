[+++ b/.idea/runConfigurations/Bootstrap__No_Plugins_.xml, +    <option name="VM_PARAMETERS" value="-server -Xmx1g -Des-foreground=yes -XX:+AggressiveOpts -XX:+UseParNewGC -XX:+UseConcMarkSweepGCa" />, +    <ConfigurationWrapper RunnerId="Profile " />, +++ b/.idea/runConfigurations/Bootstrap__No_Plugins_.xml, +    <option name="VM_PARAMETERS" value="-server -Xmx1g -Des-foreground=yes -XX:+AggressiveOpts -XX:+UseParNewGC -XX:+UseConcMarkSweepGCa" />, +    <ConfigurationWrapper RunnerId="Profile " />, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/stress/SingleThreadIndexingStress.java, +        Node[] nodes = new Node[1];, +        for (int i = 0; i < nodes.length; i++) {, +            nodes[i] = nodeBuilder().settings(settingsBuilder().put(settings).put("name", "node" + i)).node();, +        }, +        for (Node node : nodes) {, +            node.close();, +        }, +        long time = System.currentTimeMillis();, +        return jsonBuilder().startObject(), +                .field("id", id), +                .field("numeric1", time), +                .field("numeric2", time), +                .field("numeric3", time), +                .field("numeric4", time), +                .field("numeric5", time), +                .field("numeric6", time), +                .field("numeric7", time), +                .field("numeric8", time), +                .field("numeric9", time), +                .field("numeric10", time), +                .field("name", nameValue), +                .endObject();, +++ b/.idea/runConfigurations/Bootstrap__No_Plugins_.xml, +    <option name="VM_PARAMETERS" value="-server -Xmx1g -Des-foreground=yes -XX:+AggressiveOpts -XX:+UseParNewGC -XX:+UseConcMarkSweepGCa" />, +    <ConfigurationWrapper RunnerId="Profile " />, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/stress/SingleThreadIndexingStress.java, +        Node[] nodes = new Node[1];, +        for (int i = 0; i < nodes.length; i++) {, +            nodes[i] = nodeBuilder().settings(settingsBuilder().put(settings).put("name", "node" + i)).node();, +        }, +        for (Node node : nodes) {, +            node.close();, +        }, +        long time = System.currentTimeMillis();, +        return jsonBuilder().startObject(), +                .field("id", id), +                .field("numeric1", time), +                .field("numeric2", time), +                .field("numeric3", time), +                .field("numeric4", time), +                .field("numeric5", time), +                .field("numeric6", time), +                .field("numeric7", time), +                .field("numeric8", time), +                .field("numeric9", time), +                .field("numeric10", time), +                .field("name", nameValue), +                .endObject();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/FastStringReader.java, +        if (len == 0) {, +++ b/.idea/runConfigurations/Bootstrap__No_Plugins_.xml, +    <option name="VM_PARAMETERS" value="-server -Xmx1g -Des-foreground=yes -XX:+AggressiveOpts -XX:+UseParNewGC -XX:+UseConcMarkSweepGCa" />, +    <ConfigurationWrapper RunnerId="Profile " />, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/stress/SingleThreadIndexingStress.java, +        Node[] nodes = new Node[1];, +        for (int i = 0; i < nodes.length; i++) {, +            nodes[i] = nodeBuilder().settings(settingsBuilder().put(settings).put("name", "node" + i)).node();, +        }, +        for (Node node : nodes) {, +            node.close();, +        }, +        long time = System.currentTimeMillis();, +        return jsonBuilder().startObject(), +                .field("id", id), +                .field("numeric1", time), +                .field("numeric2", time), +                .field("numeric3", time), +                .field("numeric4", time), +                .field("numeric5", time), +                .field("numeric6", time), +                .field("numeric7", time), +                .field("numeric8", time), +                .field("numeric9", time), +                .field("numeric10", time), +                .field("name", nameValue), +                .endObject();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/FastStringReader.java, +        if (len == 0) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/all/AllEntries.java, +        private final FastStringReader reader;, +        public Entry(String name, FastStringReader reader, float boost) {, +        public FastStringReader reader() {, +    private boolean customBoost = false;, +, +        if (boost != 1.0f) {, +            customBoost = true;, +        }, +        if (customBoost) {, +                // close(); No need to close, we work on in mem readers, +                if (it.hasNext()) {, +                    current = it.next();, +                } else {, +                    current = null;]