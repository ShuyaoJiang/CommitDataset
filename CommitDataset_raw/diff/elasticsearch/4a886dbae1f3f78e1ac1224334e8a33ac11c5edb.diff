[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/CustomFiltersScoreQueryBuilder.java, +import org.elasticsearch.common.trove.list.array.TFloatArrayList;, +    private TFloatArrayList boosts = new TFloatArrayList();, +        this.boosts.add(-1);, +        return this;, +    }, +, +    public CustomFiltersScoreQueryBuilder add(FilterBuilder filter, float boost) {, +        this.filters.add(filter);, +        this.scripts.add(null);, +        this.boosts.add(boost);, +            String script = scripts.get(i);, +            if (script != null) {, +                builder.field("script", script);, +            } else {, +                builder.field("boost", boosts.get(i));, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/CustomFiltersScoreQueryBuilder.java, +import org.elasticsearch.common.trove.list.array.TFloatArrayList;, +    private TFloatArrayList boosts = new TFloatArrayList();, +        this.boosts.add(-1);, +        return this;, +    }, +, +    public CustomFiltersScoreQueryBuilder add(FilterBuilder filter, float boost) {, +        this.filters.add(filter);, +        this.scripts.add(null);, +        this.boosts.add(boost);, +            String script = scripts.get(i);, +            if (script != null) {, +                builder.field("script", script);, +            } else {, +                builder.field("boost", boosts.get(i));, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/CustomFiltersScoreQueryParser.java, +import org.elasticsearch.common.lucene.search.function.BoostScoreFunction;, +import org.elasticsearch.common.lucene.search.function.ScoreFunction;, +import org.elasticsearch.common.trove.list.array.TFloatArrayList;, +        TFloatArrayList boosts = new TFloatArrayList();, +                        float fboost = Float.NaN;, +                                } else if ("boost".equals(currentFieldName)) {, +                                    fboost = parser.floatValue();, +                        if (script == null && fboost == -1) {, +                            throw new QueryParsingException(parseContext.index(), "[custom_filters_score] missing 'script' or 'boost' in filters array element");, +                        boosts.add(fboost);, +            ScoreFunction scoreFunction;, +            String script = scripts.get(i);, +            if (script != null) {, +                SearchScript searchScript = context.scriptService().search(context.lookup(), scriptLang, script, vars);, +                scoreFunction = new CustomScoreQueryParser.ScriptScoreFunction(searchScript);, +            } else {, +                scoreFunction = new BoostScoreFunction(boosts.get(i));, +            }, +            filterFunctions[i] = new FiltersFunctionScoreQuery.FilterFunction(filters.get(i), scoreFunction);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/CustomFiltersScoreQueryBuilder.java, +import org.elasticsearch.common.trove.list.array.TFloatArrayList;, +    private TFloatArrayList boosts = new TFloatArrayList();, +        this.boosts.add(-1);, +        return this;, +    }, +, +    public CustomFiltersScoreQueryBuilder add(FilterBuilder filter, float boost) {, +        this.filters.add(filter);, +        this.scripts.add(null);, +        this.boosts.add(boost);, +            String script = scripts.get(i);, +            if (script != null) {, +                builder.field("script", script);, +            } else {, +                builder.field("boost", boosts.get(i));, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/CustomFiltersScoreQueryParser.java, +import org.elasticsearch.common.lucene.search.function.BoostScoreFunction;, +import org.elasticsearch.common.lucene.search.function.ScoreFunction;, +import org.elasticsearch.common.trove.list.array.TFloatArrayList;, +        TFloatArrayList boosts = new TFloatArrayList();, +                        float fboost = Float.NaN;, +                                } else if ("boost".equals(currentFieldName)) {, +                                    fboost = parser.floatValue();, +                        if (script == null && fboost == -1) {, +                            throw new QueryParsingException(parseContext.index(), "[custom_filters_score] missing 'script' or 'boost' in filters array element");, +                        boosts.add(fboost);, +            ScoreFunction scoreFunction;, +            String script = scripts.get(i);, +            if (script != null) {, +                SearchScript searchScript = context.scriptService().search(context.lookup(), scriptLang, script, vars);, +                scoreFunction = new CustomScoreQueryParser.ScriptScoreFunction(searchScript);, +            } else {, +                scoreFunction = new BoostScoreFunction(boosts.get(i));, +            }, +            filterFunctions[i] = new FiltersFunctionScoreQuery.FilterFunction(filters.get(i), scoreFunction);, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/search/customscore/CustomScoreSearchTests.java, +, +        searchResponse = client.prepareSearch("test"), +                .setQuery(customFiltersScoreQuery(matchAllQuery()), +                        .add(termFilter("field", "value4"), 2), +                        .add(termFilter("field", "value2"), 3)), +                .setExplain(true), +                .execute().actionGet();, +]