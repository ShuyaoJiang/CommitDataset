[+++ b/plugins/discovery-ec2/src/main/java/org/elasticsearch/discovery/ec2/AwsEc2Service.java, +import org.elasticsearch.common.settings.SecureSetting;, +import org.elasticsearch.common.settings.SecureString;, +    Setting<SecureString> KEY_SETTING = new Setting<>("cloud.aws.access_key", "", SecureString::new,, +            Property.NodeScope, Property.Filtered, Property.Shared, Property.Deprecated);, +    Setting<SecureString> SECRET_SETTING = new Setting<>("cloud.aws.secret_key", "", SecureString::new,, +        Property.NodeScope, Property.Filtered, Property.Shared, Property.Deprecated);, +        Property.NodeScope, Property.Shared, Property.Deprecated);, +    Setting<String> PROXY_HOST_SETTING = Setting.simpleString("cloud.aws.proxy.host",, +        Property.NodeScope, Property.Shared, Property.Deprecated);, +    Setting<Integer> PROXY_PORT_SETTING = Setting.intSetting("cloud.aws.proxy.port", 80, 0, 1<<16,, +        Property.NodeScope, Property.Shared, Property.Deprecated);, +    Setting<SecureString> PROXY_USERNAME_SETTING = new Setting<>("cloud.aws.proxy.username", "", SecureString::new,, +        Property.NodeScope, Property.Filtered, Property.Shared, Property.Deprecated);, +    Setting<SecureString> PROXY_PASSWORD_SETTING = new Setting<>("cloud.aws.proxy.password", "", SecureString::new,, +        Property.NodeScope, Property.Filtered, Property.Shared, Property.Deprecated);, +    Setting<String> SIGNER_SETTING = Setting.simpleString("cloud.aws.signer", Property.NodeScope, Property.Shared, Property.Deprecated);, +        new Setting<>("cloud.aws.region", "", s -> s.toLowerCase(Locale.ROOT), Property.NodeScope, Property.Shared, Property.Deprecated);, +        TimeValue.timeValueMillis(ClientConfiguration.DEFAULT_SOCKET_TIMEOUT), Property.NodeScope, Property.Shared, Property.Deprecated);, +        Setting<SecureString> KEY_SETTING = new Setting<>("cloud.aws.ec2.access_key", AwsEc2Service.KEY_SETTING,, +            SecureString::new, Property.NodeScope, Property.Filtered, Property.Deprecated);, +, +        Setting<SecureString> SECRET_SETTING = new Setting<>("cloud.aws.ec2.secret_key", AwsEc2Service.SECRET_SETTING,, +            SecureString::new, Property.NodeScope, Property.Filtered, Property.Deprecated);, +            s -> Protocol.valueOf(s.toUpperCase(Locale.ROOT)), Property.NodeScope, Property.Deprecated);, +            Function.identity(), Property.NodeScope, Property.Deprecated);, +            s -> Setting.parseInt(s, 0, 1<<16, "cloud.aws.ec2.proxy.port"), Property.NodeScope, Property.Deprecated);, +        Setting<SecureString> PROXY_USERNAME_SETTING = new Setting<>("cloud.aws.ec2.proxy.username", AwsEc2Service.PROXY_USERNAME_SETTING,, +            SecureString::new, Property.NodeScope, Property.Filtered, Property.Deprecated);, +        Setting<SecureString> PROXY_PASSWORD_SETTING = new Setting<>("cloud.aws.ec2.proxy.password", AwsEc2Service.PROXY_PASSWORD_SETTING,, +            SecureString::new, Property.NodeScope, Property.Filtered, Property.Deprecated);, +            Property.NodeScope, Property.Deprecated);, +            s -> s.toLowerCase(Locale.ROOT), Property.NodeScope, Property.Deprecated);, +        Setting<String> ENDPOINT_SETTING = Setting.simpleString("cloud.aws.ec2.endpoint", Property.NodeScope, Property.Deprecated);, +            Setting.timeSetting("cloud.aws.ec2.read_timeout", AwsEc2Service.READ_TIMEOUT, Property.NodeScope, Property.Deprecated);, +        /** The access key (ie login id) for connecting to ec2. */, +        Setting<SecureString> ACCESS_KEY_SETTING = SecureSetting.secureString("discovery.ec2.access_key", CLOUD_EC2.KEY_SETTING, false);, +, +        /** The secret key (ie password) for connecting to ec2. */, +        Setting<SecureString> SECRET_KEY_SETTING = SecureSetting.secureString("discovery.ec2.secret_key", CLOUD_EC2.SECRET_SETTING, false);, +, +        /** An override for the ec2 endpoint to connect to. */, +        Setting<String> ENDPOINT_SETTING = new Setting<>("discovery.ec2.endpoint", CLOUD_EC2.ENDPOINT_SETTING,, +            s -> s.toLowerCase(Locale.ROOT), Setting.Property.NodeScope);, +, +        /** The protocol to use to connect to to ec2. */, +        Setting<Protocol> PROTOCOL_SETTING = new Setting<>("discovery.ec2.protocol", CLOUD_EC2.PROTOCOL_SETTING,, +            s -> Protocol.valueOf(s.toUpperCase(Locale.ROOT)), Setting.Property.NodeScope);, +, +        /** The host name of a proxy to connect to ec2 through. */, +        Setting<String> PROXY_HOST_SETTING = new Setting<>("discovery.ec2.proxy.host", CLOUD_EC2.PROXY_HOST_SETTING,, +            Function.identity(), Setting.Property.NodeScope);, +, +        /** The port of a proxy to connect to ec2 through. */, +        Setting<Integer> PROXY_PORT_SETTING = Setting.intSetting("discovery.ec2.proxy.port", CLOUD_EC2.PROXY_PORT_SETTING,, +            0, Setting.Property.NodeScope);, +, +        /** The username of a proxy to connect to s3 through. */, +        Setting<SecureString> PROXY_USERNAME_SETTING = SecureSetting.secureString("discovery.ec2.proxy.username",, +            CLOUD_EC2.PROXY_USERNAME_SETTING, false);, +, +        /** The password of a proxy to connect to s3 through. */, +        Setting<SecureString> PROXY_PASSWORD_SETTING =  SecureSetting.secureString("discovery.ec2.proxy.password",, +            CLOUD_EC2.PROXY_PASSWORD_SETTING, false);, +, +        /** The socket timeout for connecting to s3. */, +        Setting<TimeValue> READ_TIMEOUT_SETTING = Setting.timeSetting("discovery.ec2.read_timeout",, +            CLOUD_EC2.READ_TIMEOUT, Setting.Property.NodeScope);, +, +++ b/plugins/discovery-ec2/src/main/java/org/elasticsearch/discovery/ec2/AwsEc2Service.java, +import org.elasticsearch.common.settings.SecureSetting;, +import org.elasticsearch.common.settings.SecureString;, +    Setting<SecureString> KEY_SETTING = new Setting<>("cloud.aws.access_key", "", SecureString::new,, +            Property.NodeScope, Property.Filtered, Property.Shared, Property.Deprecated);, +    Setting<SecureString> SECRET_SETTING = new Setting<>("cloud.aws.secret_key", "", SecureString::new,, +        Property.NodeScope, Property.Filtered, Property.Shared, Property.Deprecated);, +        Property.NodeScope, Property.Shared, Property.Deprecated);, +    Setting<String> PROXY_HOST_SETTING = Setting.simpleString("cloud.aws.proxy.host",, +        Property.NodeScope, Property.Shared, Property.Deprecated);, +    Setting<Integer> PROXY_PORT_SETTING = Setting.intSetting("cloud.aws.proxy.port", 80, 0, 1<<16,, +        Property.NodeScope, Property.Shared, Property.Deprecated);, +    Setting<SecureString> PROXY_USERNAME_SETTING = new Setting<>("cloud.aws.proxy.username", "", SecureString::new,, +        Property.NodeScope, Property.Filtered, Property.Shared, Property.Deprecated);, +    Setting<SecureString> PROXY_PASSWORD_SETTING = new Setting<>("cloud.aws.proxy.password", "", SecureString::new,, +        Property.NodeScope, Property.Filtered, Property.Shared, Property.Deprecated);, +    Setting<String> SIGNER_SETTING = Setting.simpleString("cloud.aws.signer", Property.NodeScope, Property.Shared, Property.Deprecated);, +        new Setting<>("cloud.aws.region", "", s -> s.toLowerCase(Locale.ROOT), Property.NodeScope, Property.Shared, Property.Deprecated);, +        TimeValue.timeValueMillis(ClientConfiguration.DEFAULT_SOCKET_TIMEOUT), Property.NodeScope, Property.Shared, Property.Deprecated);, +        Setting<SecureString> KEY_SETTING = new Setting<>("cloud.aws.ec2.access_key", AwsEc2Service.KEY_SETTING,, +            SecureString::new, Property.NodeScope, Property.Filtered, Property.Deprecated);, +, +        Setting<SecureString> SECRET_SETTING = new Setting<>("cloud.aws.ec2.secret_key", AwsEc2Service.SECRET_SETTING,, +            SecureString::new, Property.NodeScope, Property.Filtered, Property.Deprecated);, +            s -> Protocol.valueOf(s.toUpperCase(Locale.ROOT)), Property.NodeScope, Property.Deprecated);, +            Function.identity(), Property.NodeScope, Property.Deprecated);, +            s -> Setting.parseInt(s, 0, 1<<16, "cloud.aws.ec2.proxy.port"), Property.NodeScope, Property.Deprecated);, +        Setting<SecureString> PROXY_USERNAME_SETTING = new Setting<>("cloud.aws.ec2.proxy.username", AwsEc2Service.PROXY_USERNAME_SETTING,, +            SecureString::new, Property.NodeScope, Property.Filtered, Property.Deprecated);, +        Setting<SecureString> PROXY_PASSWORD_SETTING = new Setting<>("cloud.aws.ec2.proxy.password", AwsEc2Service.PROXY_PASSWORD_SETTING,, +            SecureString::new, Property.NodeScope, Property.Filtered, Property.Deprecated);]