[+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/integration/BulkUpdateTests.java, +import org.elasticsearch.client.Request;, +import org.elasticsearch.client.RequestOptions;, +        final RequestOptions.Builder optionsBuilder = RequestOptions.DEFAULT.toBuilder();, +        optionsBuilder.addHeader("Authorization", UsernamePasswordToken.basicAuthHeaderValue(SecuritySettingsSource.TEST_USER_NAME,, +        final RequestOptions options = optionsBuilder.build();, +        Request createRequest = new Request("PUT", path);, +        createRequest.setOptions(options);, +        createRequest.setJsonEntity("{\"test\":\"test\"}");, +        getRestClient().performRequest(createRequest);, +        Request getRequest = new Request("GET", path);, +        getRequest.setOptions(options);, +        assertThat(EntityUtils.toString(getRestClient().performRequest(getRequest).getEntity()), containsString("\"test\":\"test\""));, +        Request updateRequest = new Request("POST", path + "/_update");, +        updateRequest.setOptions(options);, +        updateRequest.setJsonEntity("{\"doc\": {\"not test\": \"not test\"}}");, +        getRestClient().performRequest(updateRequest);, +        String afterUpdate = EntityUtils.toString(getRestClient().performRequest(getRequest).getEntity());, +        assertThat(afterUpdate, containsString("\"test\":\"test\""));, +        assertThat(afterUpdate, containsString("\"not test\":\"not test\""));, +        Request bulkRequest = new Request("POST", "/_bulk");, +        bulkRequest.setOptions(options);, +        bulkRequest.setJsonEntity(, +                "{\"update\": {\"_index\": \"index1\", \"_type\": \"type\", \"_id\": \"1\"}}\n" +, +                "{\"doc\": {\"bulk updated\":\"bulk updated\"}}\n");, +        getRestClient().performRequest(bulkRequest);, +        String afterBulk = EntityUtils.toString(getRestClient().performRequest(getRequest).getEntity());, +        assertThat(afterBulk, containsString("\"test\":\"test\""));, +        assertThat(afterBulk, containsString("\"not test\":\"not test\""));, +        assertThat(afterBulk, containsString("\"bulk updated\":\"bulk updated\""));, +++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/integration/BulkUpdateTests.java, +import org.elasticsearch.client.Request;, +import org.elasticsearch.client.RequestOptions;, +        final RequestOptions.Builder optionsBuilder = RequestOptions.DEFAULT.toBuilder();, +        optionsBuilder.addHeader("Authorization", UsernamePasswordToken.basicAuthHeaderValue(SecuritySettingsSource.TEST_USER_NAME,, +        final RequestOptions options = optionsBuilder.build();, +        Request createRequest = new Request("PUT", path);, +        createRequest.setOptions(options);, +        createRequest.setJsonEntity("{\"test\":\"test\"}");, +        getRestClient().performRequest(createRequest);, +        Request getRequest = new Request("GET", path);, +        getRequest.setOptions(options);, +        assertThat(EntityUtils.toString(getRestClient().performRequest(getRequest).getEntity()), containsString("\"test\":\"test\""));, +        Request updateRequest = new Request("POST", path + "/_update");, +        updateRequest.setOptions(options);, +        updateRequest.setJsonEntity("{\"doc\": {\"not test\": \"not test\"}}");, +        getRestClient().performRequest(updateRequest);, +        String afterUpdate = EntityUtils.toString(getRestClient().performRequest(getRequest).getEntity());, +        assertThat(afterUpdate, containsString("\"test\":\"test\""));, +        assertThat(afterUpdate, containsString("\"not test\":\"not test\""));, +        Request bulkRequest = new Request("POST", "/_bulk");, +        bulkRequest.setOptions(options);, +        bulkRequest.setJsonEntity(, +                "{\"update\": {\"_index\": \"index1\", \"_type\": \"type\", \"_id\": \"1\"}}\n" +, +                "{\"doc\": {\"bulk updated\":\"bulk updated\"}}\n");, +        getRestClient().performRequest(bulkRequest);, +        String afterBulk = EntityUtils.toString(getRestClient().performRequest(getRequest).getEntity());, +        assertThat(afterBulk, containsString("\"test\":\"test\""));, +        assertThat(afterBulk, containsString("\"not test\":\"not test\""));, +        assertThat(afterBulk, containsString("\"bulk updated\":\"bulk updated\""));, +++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/integration/ClearRealmsCacheTests.java, +import org.elasticsearch.client.Request;, +import org.elasticsearch.client.RequestOptions;, +            Request request = new Request("POST", path);, +            for (Map.Entry<String, String> param : params.entrySet()) {, +                request.addParameter(param.getKey(), param.getValue());, +            }, +            RequestOptions.Builder options = request.getOptions().toBuilder();, +            options.addHeader("Authorization", UsernamePasswordToken.basicAuthHeaderValue(SecuritySettingsSource.TEST_USER_NAME,, +                    new SecureString(SecuritySettingsSourceField.TEST_PASSWORD.toCharArray())));, +            request.setOptions(options);, +            Response response = getRestClient().performRequest(request);, +++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/integration/BulkUpdateTests.java, +import org.elasticsearch.client.Request;, +import org.elasticsearch.client.RequestOptions;, +        final RequestOptions.Builder optionsBuilder = RequestOptions.DEFAULT.toBuilder();, +        optionsBuilder.addHeader("Authorization", UsernamePasswordToken.basicAuthHeaderValue(SecuritySettingsSource.TEST_USER_NAME,, +        final RequestOptions options = optionsBuilder.build();, +        Request createRequest = new Request("PUT", path);, +        createRequest.setOptions(options);, +        createRequest.setJsonEntity("{\"test\":\"test\"}");, +        getRestClient().performRequest(createRequest);, +        Request getRequest = new Request("GET", path);, +        getRequest.setOptions(options);, +        assertThat(EntityUtils.toString(getRestClient().performRequest(getRequest).getEntity()), containsString("\"test\":\"test\""));, +        Request updateRequest = new Request("POST", path + "/_update");, +        updateRequest.setOptions(options);, +        updateRequest.setJsonEntity("{\"doc\": {\"not test\": \"not test\"}}");, +        getRestClient().performRequest(updateRequest);, +        String afterUpdate = EntityUtils.toString(getRestClient().performRequest(getRequest).getEntity());, +        assertThat(afterUpdate, containsString("\"test\":\"test\""));, +        assertThat(afterUpdate, containsString("\"not test\":\"not test\""));, +        Request bulkRequest = new Request("POST", "/_bulk");, +        bulkRequest.setOptions(options);, +        bulkRequest.setJsonEntity(, +                "{\"update\": {\"_index\": \"index1\", \"_type\": \"type\", \"_id\": \"1\"}}\n" +, +                "{\"doc\": {\"bulk updated\":\"bulk updated\"}}\n");, +        getRestClient().performRequest(bulkRequest);, +        String afterBulk = EntityUtils.toString(getRestClient().performRequest(getRequest).getEntity());, +        assertThat(afterBulk, containsString("\"test\":\"test\""));]