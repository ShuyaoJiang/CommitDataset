[+++ b/core/src/main/java/org/elasticsearch/index/query/MatchQueryBuilder.java, +        // TODO lower this version once this has been backported to 6.0.0, +        if (in.getVersion().before(Version.V_7_0_0_alpha1)) {, +            MatchQuery.Type.readFromStream(in);  // deprecated type, +        }, +        // TODO lower this version once this has been backported to 6.0.0, +        if (in.getVersion().before(Version.V_7_0_0_alpha1)) {, +            in.readVInt(); // deprecated slop, +        }, +        // TODO lower this version once this has been backported to 6.0.0, +        if (out.getVersion().before(Version.V_7_0_0_alpha1)) {, +            MatchQuery.Type.BOOLEAN.writeTo(out); // deprecated type, +        }, +        // TODO lower this version once this has been backported to 6.0.0, +        if (out.getVersion().before(Version.V_7_0_0_alpha1)) {, +            out.writeVInt(MatchQuery.DEFAULT_PHRASE_SLOP); // deprecated slop, +        }, +        Query query = matchQuery.parse(MatchQuery.Type.BOOLEAN, fieldName, value);, +        return Objects.hash(fieldName, value, operator, analyzer,, +++ b/core/src/main/java/org/elasticsearch/index/query/MatchQueryBuilder.java, +        // TODO lower this version once this has been backported to 6.0.0, +        if (in.getVersion().before(Version.V_7_0_0_alpha1)) {, +            MatchQuery.Type.readFromStream(in);  // deprecated type, +        }, +        // TODO lower this version once this has been backported to 6.0.0, +        if (in.getVersion().before(Version.V_7_0_0_alpha1)) {, +            in.readVInt(); // deprecated slop, +        }, +        // TODO lower this version once this has been backported to 6.0.0, +        if (out.getVersion().before(Version.V_7_0_0_alpha1)) {, +            MatchQuery.Type.BOOLEAN.writeTo(out); // deprecated type, +        }, +        // TODO lower this version once this has been backported to 6.0.0, +        if (out.getVersion().before(Version.V_7_0_0_alpha1)) {, +            out.writeVInt(MatchQuery.DEFAULT_PHRASE_SLOP); // deprecated slop, +        }, +        Query query = matchQuery.parse(MatchQuery.Type.BOOLEAN, fieldName, value);, +        return Objects.hash(fieldName, value, operator, analyzer,, +++ b/core/src/test/java/org/elasticsearch/index/query/MatchQueryBuilderTests.java, +++ b/core/src/main/java/org/elasticsearch/index/query/MatchQueryBuilder.java, +        // TODO lower this version once this has been backported to 6.0.0, +        if (in.getVersion().before(Version.V_7_0_0_alpha1)) {, +            MatchQuery.Type.readFromStream(in);  // deprecated type, +        }, +        // TODO lower this version once this has been backported to 6.0.0, +        if (in.getVersion().before(Version.V_7_0_0_alpha1)) {, +            in.readVInt(); // deprecated slop, +        }, +        // TODO lower this version once this has been backported to 6.0.0, +        if (out.getVersion().before(Version.V_7_0_0_alpha1)) {, +            MatchQuery.Type.BOOLEAN.writeTo(out); // deprecated type, +        }, +        // TODO lower this version once this has been backported to 6.0.0, +        if (out.getVersion().before(Version.V_7_0_0_alpha1)) {, +            out.writeVInt(MatchQuery.DEFAULT_PHRASE_SLOP); // deprecated slop, +        }, +        Query query = matchQuery.parse(MatchQuery.Type.BOOLEAN, fieldName, value);, +        return Objects.hash(fieldName, value, operator, analyzer,, +++ b/core/src/test/java/org/elasticsearch/index/query/MatchQueryBuilderTests.java, +++ b/core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java, +, +                .setQuery(QueryBuilders.matchPhraseQuery("tags", "long tag")), +                .setQuery(QueryBuilders.matchPhraseQuery("tags", "long tag")), +                        .setQuery(QueryBuilders.matchPhraseQuery("tags", "long tag")), +            .setQuery(QueryBuilders.matchQuery("field", "highlight")), +                .setQuery(QueryBuilders.matchQuery("text", "test")), +            .setQuery(QueryBuilders.matchQuery("text", "test")), +++ b/core/src/main/java/org/elasticsearch/index/query/MatchQueryBuilder.java, +        // TODO lower this version once this has been backported to 6.0.0, +        if (in.getVersion().before(Version.V_7_0_0_alpha1)) {, +            MatchQuery.Type.readFromStream(in);  // deprecated type, +        }, +        // TODO lower this version once this has been backported to 6.0.0, +        if (in.getVersion().before(Version.V_7_0_0_alpha1)) {, +            in.readVInt(); // deprecated slop, +        }, +        // TODO lower this version once this has been backported to 6.0.0, +        if (out.getVersion().before(Version.V_7_0_0_alpha1)) {, +            MatchQuery.Type.BOOLEAN.writeTo(out); // deprecated type, +        }, +        // TODO lower this version once this has been backported to 6.0.0, +        if (out.getVersion().before(Version.V_7_0_0_alpha1)) {, +            out.writeVInt(MatchQuery.DEFAULT_PHRASE_SLOP); // deprecated slop, +        }, +        Query query = matchQuery.parse(MatchQuery.Type.BOOLEAN, fieldName, value);, +        return Objects.hash(fieldName, value, operator, analyzer,, +++ b/core/src/test/java/org/elasticsearch/index/query/MatchQueryBuilderTests.java, +++ b/core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java, +, +                .setQuery(QueryBuilders.matchPhraseQuery("tags", "long tag")), +                .setQuery(QueryBuilders.matchPhraseQuery("tags", "long tag")), +                        .setQuery(QueryBuilders.matchPhraseQuery("tags", "long tag")), +            .setQuery(QueryBuilders.matchQuery("field", "highlight")), +                .setQuery(QueryBuilders.matchQuery("text", "test")), +            .setQuery(QueryBuilders.matchQuery("text", "test")), +++ b/core/src/test/java/org/elasticsearch/search/query/MultiMatchQueryIT.java, +        MatchQuery.Type type = MatchQuery.Type.BOOLEAN;, +, +        MatchQuery.Type type = MatchQuery.Type.BOOLEAN;, +                MatchQuery.Type type = MatchQuery.Type.BOOLEAN;]