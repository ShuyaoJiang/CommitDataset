[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/CacheRecycler.java, +import org.elasticsearch.common.trove.ExtTDoubleObjectHashMap;, +import org.elasticsearch.common.trove.ExtTHashMap;, +        doubleObjectHashMap.remove();, +    // ----- ExtTHashMap -----, +    private static ThreadLocal<SoftReference<Deque<ExtTHashMap>>> hashMap = new ThreadLocal<SoftReference<Deque<ExtTHashMap>>>();, +    public static <K, V> ExtTHashMap<K, V> popHashMap() {, +        SoftReference<Deque<ExtTHashMap>> ref = hashMap.get();, +        Deque<ExtTHashMap> deque = ref == null ? null : ref.get();, +            deque = new ArrayDeque<ExtTHashMap>();, +            hashMap.set(new SoftReference<Deque<ExtTHashMap>>(deque));, +            return new ExtTHashMap();, +        ExtTHashMap map = deque.pollFirst();, +    public static void pushHashMap(ExtTHashMap map) {, +        SoftReference<Deque<ExtTHashMap>> ref = hashMap.get();, +        Deque<ExtTHashMap> deque = ref == null ? null : ref.get();, +            deque = new ArrayDeque<ExtTHashMap>();, +            hashMap.set(new SoftReference<Deque<ExtTHashMap>>(deque));, +    // ------ ExtTDoubleObjectHashMap -----, +, +    private static ThreadLocal<SoftReference<Deque<ExtTDoubleObjectHashMap>>> doubleObjectHashMap = new ThreadLocal<SoftReference<Deque<ExtTDoubleObjectHashMap>>>();, +, +    public static <T> ExtTDoubleObjectHashMap<T> popDoubleObjectMap() {, +        SoftReference<Deque<ExtTDoubleObjectHashMap>> ref = doubleObjectHashMap.get();, +        Deque<ExtTDoubleObjectHashMap> deque = ref == null ? null : ref.get();, +        if (deque == null) {, +            deque = new ArrayDeque<ExtTDoubleObjectHashMap>();, +            doubleObjectHashMap.set(new SoftReference<Deque<ExtTDoubleObjectHashMap>>(deque));, +        }, +        if (deque.isEmpty()) {, +            return new ExtTDoubleObjectHashMap();, +        }, +        ExtTDoubleObjectHashMap map = deque.pollFirst();, +        map.clear();, +        return map;, +    }, +, +    public static void pushDoubleObjectMap(ExtTDoubleObjectHashMap map) {, +        SoftReference<Deque<ExtTDoubleObjectHashMap>> ref = doubleObjectHashMap.get();, +        Deque<ExtTDoubleObjectHashMap> deque = ref == null ? null : ref.get();, +        if (deque == null) {, +            deque = new ArrayDeque<ExtTDoubleObjectHashMap>();, +            doubleObjectHashMap.set(new SoftReference<Deque<ExtTDoubleObjectHashMap>>(deque));, +        }, +        deque.add(map);, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/CacheRecycler.java, +import org.elasticsearch.common.trove.ExtTDoubleObjectHashMap;, +import org.elasticsearch.common.trove.ExtTHashMap;, +        doubleObjectHashMap.remove();, +    // ----- ExtTHashMap -----, +    private static ThreadLocal<SoftReference<Deque<ExtTHashMap>>> hashMap = new ThreadLocal<SoftReference<Deque<ExtTHashMap>>>();, +    public static <K, V> ExtTHashMap<K, V> popHashMap() {, +        SoftReference<Deque<ExtTHashMap>> ref = hashMap.get();, +        Deque<ExtTHashMap> deque = ref == null ? null : ref.get();, +            deque = new ArrayDeque<ExtTHashMap>();, +            hashMap.set(new SoftReference<Deque<ExtTHashMap>>(deque));, +            return new ExtTHashMap();, +        ExtTHashMap map = deque.pollFirst();, +    public static void pushHashMap(ExtTHashMap map) {, +        SoftReference<Deque<ExtTHashMap>> ref = hashMap.get();, +        Deque<ExtTHashMap> deque = ref == null ? null : ref.get();, +            deque = new ArrayDeque<ExtTHashMap>();, +            hashMap.set(new SoftReference<Deque<ExtTHashMap>>(deque));, +    // ------ ExtTDoubleObjectHashMap -----, +, +    private static ThreadLocal<SoftReference<Deque<ExtTDoubleObjectHashMap>>> doubleObjectHashMap = new ThreadLocal<SoftReference<Deque<ExtTDoubleObjectHashMap>>>();, +, +    public static <T> ExtTDoubleObjectHashMap<T> popDoubleObjectMap() {, +        SoftReference<Deque<ExtTDoubleObjectHashMap>> ref = doubleObjectHashMap.get();, +        Deque<ExtTDoubleObjectHashMap> deque = ref == null ? null : ref.get();, +        if (deque == null) {, +            deque = new ArrayDeque<ExtTDoubleObjectHashMap>();, +            doubleObjectHashMap.set(new SoftReference<Deque<ExtTDoubleObjectHashMap>>(deque));, +        }, +        if (deque.isEmpty()) {, +            return new ExtTDoubleObjectHashMap();, +        }, +        ExtTDoubleObjectHashMap map = deque.pollFirst();, +        map.clear();, +        return map;, +    }, +, +    public static void pushDoubleObjectMap(ExtTDoubleObjectHashMap map) {, +        SoftReference<Deque<ExtTDoubleObjectHashMap>> ref = doubleObjectHashMap.get();, +        Deque<ExtTDoubleObjectHashMap> deque = ref == null ? null : ref.get();, +        if (deque == null) {, +            deque = new ArrayDeque<ExtTDoubleObjectHashMap>();, +            doubleObjectHashMap.set(new SoftReference<Deque<ExtTDoubleObjectHashMap>>(deque));, +        }, +        deque.add(map);, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/field/data/NumericFieldData.java, +    public abstract void forEachValueInDoc(int docId, MissingLongValueInDocProc proc);, +, +    public static interface MissingLongValueInDocProc {, +        void onValue(int docId, long value);, +, +        void onMissing(int docId);, +    }]