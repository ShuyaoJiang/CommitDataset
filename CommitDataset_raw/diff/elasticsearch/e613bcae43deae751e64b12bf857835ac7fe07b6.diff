[+++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ /dev/null, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/server/src/main/java/org/elasticsearch/common/geo/ShapeRelation.java, +import org.apache.lucene.document.LatLonShape.QueryRelation;, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/server/src/main/java/org/elasticsearch/common/geo/ShapeRelation.java, +import org.apache.lucene.document.LatLonShape.QueryRelation;, +++ b/server/src/main/java/org/elasticsearch/index/mapper/GeoShapeFieldMapper.java, +import org.apache.lucene.document.LatLonShape;, + * FieldMapper for indexing {@link LatLonShape}s., +    /** parsing logic for {@link LatLonShape} indexing */, +            indexFields(context, LatLonShape.createIndexableFields(name(), pt.lat(), pt.lon()));, +            indexFields(context, LatLonShape.createIndexableFields(name(), pt[1], pt[0]));, +            indexFields(context, LatLonShape.createIndexableFields(name(), (Line)luceneShape));, +            indexFields(context, LatLonShape.createIndexableFields(name(), (Polygon) luceneShape));, +                indexFields(context, LatLonShape.createIndexableFields(name(), pts[i][1], pts[i][0]));, +                indexFields(context, LatLonShape.createIndexableFields(name(), lines[i]));, +                indexFields(context, LatLonShape.createIndexableFields(name(), polys[i]));, +            indexFields(context, LatLonShape.createIndexableFields(name(), p));, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/server/src/main/java/org/elasticsearch/common/geo/ShapeRelation.java, +import org.apache.lucene.document.LatLonShape.QueryRelation;, +++ b/server/src/main/java/org/elasticsearch/index/mapper/GeoShapeFieldMapper.java, +import org.apache.lucene.document.LatLonShape;, + * FieldMapper for indexing {@link LatLonShape}s., +    /** parsing logic for {@link LatLonShape} indexing */, +            indexFields(context, LatLonShape.createIndexableFields(name(), pt.lat(), pt.lon()));, +            indexFields(context, LatLonShape.createIndexableFields(name(), pt[1], pt[0]));, +            indexFields(context, LatLonShape.createIndexableFields(name(), (Line)luceneShape));, +            indexFields(context, LatLonShape.createIndexableFields(name(), (Polygon) luceneShape));, +                indexFields(context, LatLonShape.createIndexableFields(name(), pts[i][1], pts[i][0]));, +                indexFields(context, LatLonShape.createIndexableFields(name(), lines[i]));, +                indexFields(context, LatLonShape.createIndexableFields(name(), polys[i]));, +            indexFields(context, LatLonShape.createIndexableFields(name(), p));, +++ b/server/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java, +import org.apache.lucene.document.LatLonShape;, +            geoQuery = LatLonShape.newLineQuery(fieldName(), relation.getLuceneRelation(), (Line[]) queryShape);, +            geoQuery = LatLonShape.newPolygonQuery(fieldName(), relation.getLuceneRelation(), (Polygon[]) queryShape);, +            geoQuery = LatLonShape.newLineQuery(fieldName(), relation.getLuceneRelation(), (Line) queryShape);, +            geoQuery = LatLonShape.newPolygonQuery(fieldName(), relation.getLuceneRelation(), (Polygon) queryShape);, +            geoQuery = LatLonShape.newBoxQuery(fieldName(), relation.getLuceneRelation(),, +            return LatLonShape.newBoxQuery(fieldName, relation.getLuceneRelation(), pt[1], pt[1], pt[0], pt[0]);]