[+++ b/qa/rolling-upgrade/src/test/java/org/elasticsearch/upgrades/RecoveryIT.java, +                // remove the replica and guaranteed the primary is placed on the old node, +                ensureGreen(index); // wait for the primary to be assigned, +                ensureNoInitializingShards(); // wait for all other shard activity to finish, +++ b/qa/rolling-upgrade/src/test/java/org/elasticsearch/upgrades/RecoveryIT.java, +                // remove the replica and guaranteed the primary is placed on the old node, +                ensureGreen(index); // wait for the primary to be assigned, +                ensureNoInitializingShards(); // wait for all other shard activity to finish, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java, +    /**, +     * waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards, +     * in the cluster and doesn't require to know how many nodes/replica there are., +     */, +    protected void ensureNoInitializingShards() throws IOException {, +        Map<String, String> params = new HashMap<>();, +        params.put("wait_for_no_initializing_shards", "true");, +        params.put("timeout", "70s");, +        params.put("level", "shards");, +        assertOK(client().performRequest("GET", "_cluster/health/", params));, +    }, +]