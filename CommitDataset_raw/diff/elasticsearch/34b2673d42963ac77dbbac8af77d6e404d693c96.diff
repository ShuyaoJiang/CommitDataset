[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, "path.home", environment.binFile(), "read,readlink");, +        addPath(policy, "path.home", environment.libFile(), "read,readlink");, +        addPath(policy, "path.home", environment.modulesFile(), "read,readlink");, +        addPath(policy, "path.plugins", environment.pluginsFile(), "read,readlink");, +        addPath(policy, "path.conf", environment.configFile(), "read,readlink");, +        addPath(policy, "path.scripts", environment.scriptsFile(), "read,readlink");, +        addPath(policy, "path.logs", environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, "path.shared_data", environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.repo", path, "read,readlink,write,delete");, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, "path.home", environment.binFile(), "read,readlink");, +        addPath(policy, "path.home", environment.libFile(), "read,readlink");, +        addPath(policy, "path.home", environment.modulesFile(), "read,readlink");, +        addPath(policy, "path.plugins", environment.pluginsFile(), "read,readlink");, +        addPath(policy, "path.conf", environment.configFile(), "read,readlink");, +        addPath(policy, "path.scripts", environment.scriptsFile(), "read,readlink");, +        addPath(policy, "path.logs", environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, "path.shared_data", environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.repo", path, "read,readlink,write,delete");, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +import org.elasticsearch.common.settings.Setting;, +, +    public static final Setting<TimeValue> CLIENT_TRANSPORT_NODES_SAMPLER_INTERVAL = Setting.positiveTimeSetting("client.transport.nodes_sampler_interval", timeValueSeconds(5), false, Setting.Scope.CLUSTER);, +    public static final Setting<TimeValue> CLIENT_TRANSPORT_PING_TIMEOUT = Setting.positiveTimeSetting("client.transport.ping_timeout", timeValueSeconds(5), false, Setting.Scope.CLUSTER);, +    public static final Setting<Boolean> CLIENT_TRANSPORT_IGNORE_CLUSTER_NAME = Setting.boolSetting("client.transport.ignore_cluster_name", false, false, Setting.Scope.CLUSTER);, +, +        this.nodesSamplerInterval = CLIENT_TRANSPORT_NODES_SAMPLER_INTERVAL.get(this.settings);, +        this.pingTimeout = CLIENT_TRANSPORT_PING_TIMEOUT.get(this.settings).millis();, +        this.ignoreClusterName = CLIENT_TRANSPORT_IGNORE_CLUSTER_NAME.get(this.settings);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, "path.home", environment.binFile(), "read,readlink");, +        addPath(policy, "path.home", environment.libFile(), "read,readlink");, +        addPath(policy, "path.home", environment.modulesFile(), "read,readlink");, +        addPath(policy, "path.plugins", environment.pluginsFile(), "read,readlink");, +        addPath(policy, "path.conf", environment.configFile(), "read,readlink");, +        addPath(policy, "path.scripts", environment.scriptsFile(), "read,readlink");, +        addPath(policy, "path.logs", environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, "path.shared_data", environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.repo", path, "read,readlink,write,delete");, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +import org.elasticsearch.common.settings.Setting;, +, +    public static final Setting<TimeValue> CLIENT_TRANSPORT_NODES_SAMPLER_INTERVAL = Setting.positiveTimeSetting("client.transport.nodes_sampler_interval", timeValueSeconds(5), false, Setting.Scope.CLUSTER);, +    public static final Setting<TimeValue> CLIENT_TRANSPORT_PING_TIMEOUT = Setting.positiveTimeSetting("client.transport.ping_timeout", timeValueSeconds(5), false, Setting.Scope.CLUSTER);, +    public static final Setting<Boolean> CLIENT_TRANSPORT_IGNORE_CLUSTER_NAME = Setting.boolSetting("client.transport.ignore_cluster_name", false, false, Setting.Scope.CLUSTER);, +, +        this.nodesSamplerInterval = CLIENT_TRANSPORT_NODES_SAMPLER_INTERVAL.get(this.settings);, +        this.pingTimeout = CLIENT_TRANSPORT_PING_TIMEOUT.get(this.settings).millis();, +        this.ignoreClusterName = CLIENT_TRANSPORT_IGNORE_CLUSTER_NAME.get(this.settings);, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.client.transport.TransportClientNodesService;, +        TransportClientNodesService.CLIENT_TRANSPORT_NODES_SAMPLER_INTERVAL, // TODO these transport client settings are kind of odd here and should only be valid if we are a transport client, +        TransportClientNodesService.CLIENT_TRANSPORT_PING_TIMEOUT,, +        TransportClientNodesService.CLIENT_TRANSPORT_IGNORE_CLUSTER_NAME,, +        ScriptService.SCRIPT_CACHE_SIZE_SETTING)));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, "path.home", environment.binFile(), "read,readlink");, +        addPath(policy, "path.home", environment.libFile(), "read,readlink");, +        addPath(policy, "path.home", environment.modulesFile(), "read,readlink");, +        addPath(policy, "path.plugins", environment.pluginsFile(), "read,readlink");, +        addPath(policy, "path.conf", environment.configFile(), "read,readlink");, +        addPath(policy, "path.scripts", environment.scriptsFile(), "read,readlink");, +        addPath(policy, "path.logs", environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, "path.shared_data", environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.repo", path, "read,readlink,write,delete");, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +import org.elasticsearch.common.settings.Setting;, +, +    public static final Setting<TimeValue> CLIENT_TRANSPORT_NODES_SAMPLER_INTERVAL = Setting.positiveTimeSetting("client.transport.nodes_sampler_interval", timeValueSeconds(5), false, Setting.Scope.CLUSTER);, +    public static final Setting<TimeValue> CLIENT_TRANSPORT_PING_TIMEOUT = Setting.positiveTimeSetting("client.transport.ping_timeout", timeValueSeconds(5), false, Setting.Scope.CLUSTER);, +    public static final Setting<Boolean> CLIENT_TRANSPORT_IGNORE_CLUSTER_NAME = Setting.boolSetting("client.transport.ignore_cluster_name", false, false, Setting.Scope.CLUSTER);, +, +        this.nodesSamplerInterval = CLIENT_TRANSPORT_NODES_SAMPLER_INTERVAL.get(this.settings);, +        this.pingTimeout = CLIENT_TRANSPORT_PING_TIMEOUT.get(this.settings).millis();, +        this.ignoreClusterName = CLIENT_TRANSPORT_IGNORE_CLUSTER_NAME.get(this.settings);, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.client.transport.TransportClientNodesService;, +        TransportClientNodesService.CLIENT_TRANSPORT_NODES_SAMPLER_INTERVAL, // TODO these transport client settings are kind of odd here and should only be valid if we are a transport client, +        TransportClientNodesService.CLIENT_TRANSPORT_PING_TIMEOUT,, +        TransportClientNodesService.CLIENT_TRANSPORT_IGNORE_CLUSTER_NAME,, +        ScriptService.SCRIPT_CACHE_SIZE_SETTING)));, +++ b/core/src/main/java/org/elasticsearch/common/settings/Setting.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, "path.home", environment.binFile(), "read,readlink");, +        addPath(policy, "path.home", environment.libFile(), "read,readlink");, +        addPath(policy, "path.home", environment.modulesFile(), "read,readlink");, +        addPath(policy, "path.plugins", environment.pluginsFile(), "read,readlink");, +        addPath(policy, "path.conf", environment.configFile(), "read,readlink");, +        addPath(policy, "path.scripts", environment.scriptsFile(), "read,readlink");, +        addPath(policy, "path.logs", environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, "path.shared_data", environment.sharedDataFile(), "read,readlink,write,delete");]