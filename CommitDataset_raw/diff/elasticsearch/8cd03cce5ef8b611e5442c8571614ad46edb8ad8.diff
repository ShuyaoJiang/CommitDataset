[+++ b/core/src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java, +            if (parserContext.indexVersionCreated().onOrAfter(Version.V_2_0_0_beta1)) {, +                return builder;, +            parseField(builder, builder.name, node, parserContext);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java, +            if (parserContext.indexVersionCreated().onOrAfter(Version.V_2_0_0_beta1)) {, +                return builder;, +            parseField(builder, builder.name, node, parserContext);, +++ b/core/src/test/java/org/elasticsearch/index/mapper/index/IndexTypeMapperTests.java, +    private Settings bwcSettings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.V_1_4_2.id).build();, +    public void testSimpleIndexMapperEnabledBackcompat() throws Exception {, +        DocumentMapper docMapper = createIndex("test", bwcSettings).mapperService().documentMapperParser().parse(mapping);, +    public void testExplicitDisabledIndexMapperBackcompat() throws Exception {, +        DocumentMapper docMapper = createIndex("test", bwcSettings).mapperService().documentMapperParser().parse(mapping);, +    public void testThatMergingFieldMappingAllowsDisablingBackcompat() throws Exception {, +        DocumentMapperParser parser = createIndex("test", bwcSettings).mapperService().documentMapperParser();, +    public void testThatDisablingWorksWhenMergingBackcompat() throws Exception {, +        DocumentMapperParser parser = createIndex("test", bwcSettings).mapperService().documentMapperParser();, +, +        DocumentMapper docMapper = createIndex("test", bwcSettings).mapperService().documentMapperParser().parse(mapping);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java, +            if (parserContext.indexVersionCreated().onOrAfter(Version.V_2_0_0_beta1)) {, +                return builder;, +            parseField(builder, builder.name, node, parserContext);, +++ b/core/src/test/java/org/elasticsearch/index/mapper/index/IndexTypeMapperTests.java, +    private Settings bwcSettings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.V_1_4_2.id).build();, +    public void testSimpleIndexMapperEnabledBackcompat() throws Exception {, +        DocumentMapper docMapper = createIndex("test", bwcSettings).mapperService().documentMapperParser().parse(mapping);, +    public void testExplicitDisabledIndexMapperBackcompat() throws Exception {, +        DocumentMapper docMapper = createIndex("test", bwcSettings).mapperService().documentMapperParser().parse(mapping);, +    public void testThatMergingFieldMappingAllowsDisablingBackcompat() throws Exception {, +        DocumentMapperParser parser = createIndex("test", bwcSettings).mapperService().documentMapperParser();, +    public void testThatDisablingWorksWhenMergingBackcompat() throws Exception {, +        DocumentMapperParser parser = createIndex("test", bwcSettings).mapperService().documentMapperParser();, +, +        DocumentMapper docMapper = createIndex("test", bwcSettings).mapperService().documentMapperParser().parse(mapping);, +++ b/docs/reference/mapping/fields/index-field.asciidoc, +When performing queries across multiple indexes, it is sometimes desirable, +to add query clauses that are associated with documents of only certain, +indexes. The `_index` field allows matching on the index a document was, +indexed into. Its value is accessible in queries, aggregations, scripts, and when sorting:, +++ b/core/src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java, +            if (parserContext.indexVersionCreated().onOrAfter(Version.V_2_0_0_beta1)) {, +                return builder;, +            parseField(builder, builder.name, node, parserContext);, +++ b/core/src/test/java/org/elasticsearch/index/mapper/index/IndexTypeMapperTests.java, +    private Settings bwcSettings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.V_1_4_2.id).build();, +    public void testSimpleIndexMapperEnabledBackcompat() throws Exception {, +        DocumentMapper docMapper = createIndex("test", bwcSettings).mapperService().documentMapperParser().parse(mapping);, +    public void testExplicitDisabledIndexMapperBackcompat() throws Exception {, +        DocumentMapper docMapper = createIndex("test", bwcSettings).mapperService().documentMapperParser().parse(mapping);, +    public void testThatMergingFieldMappingAllowsDisablingBackcompat() throws Exception {, +        DocumentMapperParser parser = createIndex("test", bwcSettings).mapperService().documentMapperParser();, +    public void testThatDisablingWorksWhenMergingBackcompat() throws Exception {, +        DocumentMapperParser parser = createIndex("test", bwcSettings).mapperService().documentMapperParser();, +, +        DocumentMapper docMapper = createIndex("test", bwcSettings).mapperService().documentMapperParser().parse(mapping);, +++ b/docs/reference/mapping/fields/index-field.asciidoc, +When performing queries across multiple indexes, it is sometimes desirable, +to add query clauses that are associated with documents of only certain, +indexes. The `_index` field allows matching on the index a document was, +indexed into. Its value is accessible in queries, aggregations, scripts, and when sorting:, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +* `_index` configuration can no longer be changed.]