[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/uid/UidField.java, +            // Note, only master docs uid have version payload, so we can use that info to not, +            // take them into account, +            do {, +                    continue;, +                    continue;, +            } while (uid.next());, +            return new DocIdAndVersion(docId, -2, reader);, +            // Note, only master docs uid have version payload, so we can use that info to not, +            // take them into account, +            do {, +                    continue;, +                    continue;, +            } while (uid.next());, +            return -2;, +    public String uid() {, +        return this.uid;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/uid/UidField.java, +            // Note, only master docs uid have version payload, so we can use that info to not, +            // take them into account, +            do {, +                    continue;, +                    continue;, +            } while (uid.next());, +            return new DocIdAndVersion(docId, -2, reader);, +            // Note, only master docs uid have version payload, so we can use that info to not, +            // take them into account, +            do {, +                    continue;, +                    continue;, +            } while (uid.next());, +            return -2;, +    public String uid() {, +        return this.uid;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/engine/Engine.java, +        List<Document> docs();, +        public List<Document> docs() {, +            return this.doc.docs();, +            return (UidField) doc.masterDoc().getFieldable(UidFieldMapper.NAME);, +        public List<Document> docs() {, +            return this.doc.docs();, +            return (UidField) doc.masterDoc().getFieldable(UidFieldMapper.NAME);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/uid/UidField.java, +            // Note, only master docs uid have version payload, so we can use that info to not, +            // take them into account, +            do {, +                    continue;, +                    continue;, +            } while (uid.next());, +            return new DocIdAndVersion(docId, -2, reader);, +            // Note, only master docs uid have version payload, so we can use that info to not, +            // take them into account, +            do {, +                    continue;, +                    continue;, +            } while (uid.next());, +            return -2;, +    public String uid() {, +        return this.uid;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/engine/Engine.java, +        List<Document> docs();, +        public List<Document> docs() {, +            return this.doc.docs();, +            return (UidField) doc.masterDoc().getFieldable(UidFieldMapper.NAME);, +        public List<Document> docs() {, +            return this.doc.docs();, +            return (UidField) doc.masterDoc().getFieldable(UidFieldMapper.NAME);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java, +                if (create.docs().size() > 1) {, +                    writer.updateDocuments(create.uid(), create.docs(), create.analyzer());, +                } else {, +                    writer.updateDocument(create.uid(), create.docs().get(0), create.analyzer());, +                }, +                if (create.docs().size() > 1) {, +                    writer.addDocuments(create.docs(), create.analyzer());, +                } else {, +                    writer.addDocument(create.docs().get(0), create.analyzer());, +                }, +                if (index.docs().size() > 1) {, +                    writer.updateDocuments(index.uid(), index.docs(), index.analyzer());, +                } else {, +                    writer.updateDocument(index.uid(), index.docs().get(0), index.analyzer());, +                }, +                    if (index.docs().size() > 1) {, +                        writer.addDocuments(index.docs(), index.analyzer());, +                        writer.addDocument(index.docs().get(0), index.analyzer());, +                    }, +                } else {, +                    if (index.docs().size() > 1) {, +                        writer.updateDocuments(index.uid(), index.docs(), index.analyzer());, +                    } else {, +                        writer.updateDocument(index.uid(), index.docs().get(0), index.analyzer());, +                    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/uid/UidField.java]