[+++ b/securesm/src/main/java/org/elasticsearch/SecureSM.java, +  private final String[] classesThatCanExit;, +   * Creates a new security manager with the specified list of regular expressions as the those that class names will be tested against to, +   * check whether or not a class can exit or halt the virtual machine., +   * @param classesThatCanExit the list of classes that can exit or halt the virtual machine, +  public SecureSM(final String[] classesThatCanExit) {, +    this.classesThatCanExit = classesThatCanExit;, +   * Creates a new security manager with a standard set of test packages being the only packages that can exit or halt the virtual machine., +   * The packages that can exit are:, +   * <ul>, +   * </ul>, +  static final String[] TEST_RUNNER_PACKAGES = new String[] {, +    "org\\.apache\\.maven\\.surefire\\.booter\\..*",, +    "com\\.carrotsearch\\.ant\\.tasks\\.junit4\\.slave\\..*",, +    "org\\.eclipse.jdt\\.internal\\.junit\\.runner\\..*",, +    "com\\.intellij\\.rt\\.execution\\.junit\\..*", +   *, +   * @param status the exit status, +            if (classesThatCanExit == null) {, +            if (classCanExit(className, classesThatCanExit)) {, +  static boolean classCanExit(final String className, final String[] classesThatCanExit) {, +    for (final String classThatCanExit : classesThatCanExit) {, +      if (className.matches(classThatCanExit)) {, +        return true;, +      }, +    }, +    return false;, +  }, +, +++ b/securesm/src/main/java/org/elasticsearch/SecureSM.java, +  private final String[] classesThatCanExit;, +   * Creates a new security manager with the specified list of regular expressions as the those that class names will be tested against to, +   * check whether or not a class can exit or halt the virtual machine., +   * @param classesThatCanExit the list of classes that can exit or halt the virtual machine, +  public SecureSM(final String[] classesThatCanExit) {, +    this.classesThatCanExit = classesThatCanExit;, +   * Creates a new security manager with a standard set of test packages being the only packages that can exit or halt the virtual machine., +   * The packages that can exit are:, +   * <ul>, +   * </ul>, +  static final String[] TEST_RUNNER_PACKAGES = new String[] {, +    "org\\.apache\\.maven\\.surefire\\.booter\\..*",, +    "com\\.carrotsearch\\.ant\\.tasks\\.junit4\\.slave\\..*",, +    "org\\.eclipse.jdt\\.internal\\.junit\\.runner\\..*",, +    "com\\.intellij\\.rt\\.execution\\.junit\\..*", +   *, +   * @param status the exit status, +            if (classesThatCanExit == null) {, +            if (classCanExit(className, classesThatCanExit)) {, +  static boolean classCanExit(final String className, final String[] classesThatCanExit) {, +    for (final String classThatCanExit : classesThatCanExit) {, +      if (className.matches(classThatCanExit)) {, +        return true;, +      }, +    }, +    return false;, +  }, +, +++ b/securesm/src/test/java/org/elasticsearch/TestSecureSM.java, +, +  @Test, +  public void testClassCanExit() {, +    assertTrue(SecureSM.classCanExit("org.apache.maven.surefire.booter.CommandReader", SecureSM.TEST_RUNNER_PACKAGES));, +    assertTrue(SecureSM.classCanExit("com.carrotsearch.ant.tasks.junit4.slave.JvmExit", SecureSM.TEST_RUNNER_PACKAGES));, +    assertTrue(SecureSM.classCanExit("org.eclipse.jdt.internal.junit.runner.RemoteTestRunner", SecureSM.TEST_RUNNER_PACKAGES));, +    assertTrue(SecureSM.classCanExit("com.intellij.rt.execution.junit.JUnitStarter", SecureSM.TEST_RUNNER_PACKAGES));, +    assertTrue(SecureSM.classCanExit("org.elasticsearch.Foo", new String[]{"org.elasticsearch.Foo"}));, +    assertFalse(SecureSM.classCanExit("org.elasticsearch.Foo", new String[]{"org.elasticsearch.Bar"}));, +  }]