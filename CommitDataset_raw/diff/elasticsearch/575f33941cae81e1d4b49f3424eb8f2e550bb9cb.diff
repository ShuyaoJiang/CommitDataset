[+++ b/x-pack/plugin/ccr/build.gradle, +    compileOnly project(path: xpackModule('core'), configuration: 'default'), +++ b/x-pack/plugin/ccr/build.gradle, +    compileOnly project(path: xpackModule('core'), configuration: 'default'), +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-incompatible-license/build.gradle, +    testCompile project(path: xpackModule('core'), configuration: 'testArtifacts'), +++ b/x-pack/plugin/ccr/build.gradle, +    compileOnly project(path: xpackModule('core'), configuration: 'default'), +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-incompatible-license/build.gradle, +    testCompile project(path: xpackModule('core'), configuration: 'testArtifacts'), +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-security/build.gradle, +    testCompile project(path: xpackModule('core'), configuration: 'testArtifacts'), +++ b/x-pack/plugin/ccr/build.gradle, +    compileOnly project(path: xpackModule('core'), configuration: 'default'), +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-incompatible-license/build.gradle, +    testCompile project(path: xpackModule('core'), configuration: 'testArtifacts'), +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-security/build.gradle, +    testCompile project(path: xpackModule('core'), configuration: 'testArtifacts'), +++ b/x-pack/plugin/ccr/qa/multi-cluster/build.gradle, +    testCompile project(path: xpackModule('core'), configuration: 'testArtifacts'), +++ b/x-pack/plugin/ccr/build.gradle, +    compileOnly project(path: xpackModule('core'), configuration: 'default'), +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-incompatible-license/build.gradle, +    testCompile project(path: xpackModule('core'), configuration: 'testArtifacts'), +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-security/build.gradle, +    testCompile project(path: xpackModule('core'), configuration: 'testArtifacts'), +++ b/x-pack/plugin/ccr/qa/multi-cluster/build.gradle, +    testCompile project(path: xpackModule('core'), configuration: 'testArtifacts'), +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/index/engine/FollowingEngineTests.java, +        followingEngine.recoverFromTranslog(Long.MAX_VALUE);]