[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +     * Tries to find first based on {@link #fullName(String)}, then by {@link #indexName(String)}., +     */, +    public FieldMappers smartName(String name) {, +        FieldMappers fieldMappers = fullName(name);, +        if (fieldMappers != null) {, +            return fieldMappers;, +        }, +        return indexName(name);, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +     * Tries to find first based on {@link #fullName(String)}, then by {@link #indexName(String)}., +     */, +    public FieldMappers smartName(String name) {, +        FieldMappers fieldMappers = fullName(name);, +        if (fieldMappers != null) {, +            return fieldMappers;, +        }, +        return indexName(name);, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +import org.apache.lucene.document.Fieldable;, + * @author kimchy (shay.banon), +     *, +     * Parses the source into a parsed document., +     *, +     * <p>Validates that the source has the provided id and type. Note, most times, +     * we will already have the id and the type even though they exist in the source as well., +     */, +    ParsedDocument parse(@Nullable String type, @Nullable String id, byte[] source, @Nullable ParseListener listener) throws MapperParsingException;, +, +    /**, +, +    /**, +     * A listener to be called during the parse process., +     */, +    public static interface ParseListener<ParseContext> {, +, +        public static final ParseListener EMPTY = new ParseListenerAdapter();, +, +        /**, +         * Called before a field is added to the document. Return <tt>true</tt> to include, +         * it in the document., +         */, +        boolean beforeFieldAdded(FieldMapper fieldMapper, Fieldable fieldable, ParseContext parseContent);, +    }, +, +    public static class ParseListenerAdapter implements ParseListener {, +, +        @Override public boolean beforeFieldAdded(FieldMapper fieldMapper, Fieldable fieldable, Object parseContext) {, +            return true;, +        }, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +     * Tries to find first based on {@link #fullName(String)}, then by {@link #indexName(String)}., +     */, +    public FieldMappers smartName(String name) {, +        FieldMappers fieldMappers = fullName(name);, +        if (fieldMappers != null) {, +            return fieldMappers;, +        }, +        return indexName(name);, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +import org.apache.lucene.document.Fieldable;, + * @author kimchy (shay.banon), +     *, +     * Parses the source into a parsed document., +     *, +     * <p>Validates that the source has the provided id and type. Note, most times, +     * we will already have the id and the type even though they exist in the source as well., +     */, +    ParsedDocument parse(@Nullable String type, @Nullable String id, byte[] source, @Nullable ParseListener listener) throws MapperParsingException;, +, +    /**, +, +    /**, +     * A listener to be called during the parse process., +     */, +    public static interface ParseListener<ParseContext> {, +, +        public static final ParseListener EMPTY = new ParseListenerAdapter();, +, +        /**, +         * Called before a field is added to the document. Return <tt>true</tt> to include, +         * it in the document., +         */, +        boolean beforeFieldAdded(FieldMapper fieldMapper, Fieldable fieldable, ParseContext parseContent);, +    }, +, +    public static class ParseListenerAdapter implements ParseListener {, +, +        @Override public boolean beforeFieldAdded(FieldMapper fieldMapper, Fieldable fieldable, Object parseContext) {, +            return true;]