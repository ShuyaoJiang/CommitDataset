[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/MigrationDocumentationIT.java, +import org.elasticsearch.action.get.GetRequest;, +import static java.util.Collections.singletonMap;, +            //tag::migration-create-index, +            //end::migration-create-index, +            Map<String, String> parameters = singletonMap("wait_for_status", "green");, +            Response response = client.getLowLevelClient().performRequest("GET", "/_cluster/health", parameters); // <1>, +    public void testRequests() throws Exception {, +            assertBusy(() -> assertFalse(client.exists(new GetRequest("index", "doc", "id"))));, +        }, +        {, +            //tag::migration-request-sync-execution, +            DeleteRequest request = new DeleteRequest("index", "doc", "id");, +            DeleteResponse response = client.delete(request); // <1>, +            //end::migration-request-sync-execution, +            assertEquals(RestStatus.NOT_FOUND, response.status());, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/MigrationDocumentationIT.java, +import org.elasticsearch.action.get.GetRequest;, +import static java.util.Collections.singletonMap;, +            //tag::migration-create-index, +            //end::migration-create-index, +            Map<String, String> parameters = singletonMap("wait_for_status", "green");, +            Response response = client.getLowLevelClient().performRequest("GET", "/_cluster/health", parameters); // <1>, +    public void testRequests() throws Exception {, +            assertBusy(() -> assertFalse(client.exists(new GetRequest("index", "doc", "id"))));, +        }, +        {, +            //tag::migration-request-sync-execution, +            DeleteRequest request = new DeleteRequest("index", "doc", "id");, +            DeleteResponse response = client.delete(request); // <1>, +            //end::migration-request-sync-execution, +            assertEquals(RestStatus.NOT_FOUND, response.status());, +++ b/docs/java-rest/high-level/migration.asciidoc, +include-tagged::{doc-tests}/MigrationDocumentationIT.java[migration-create-index], +<1> Call the cluster's health REST endpoint and wait for the cluster health to become green,, +then get back a `Response` object.]