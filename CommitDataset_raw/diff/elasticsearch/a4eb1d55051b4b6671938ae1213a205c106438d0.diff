[+++ b/docs/reference/search/aggregations/metrics/extendedstats-aggregation.asciidoc, +The `extended_stats` aggregations is an extended version of the <<search-aggregations-metrics-stats-aggregation,`stats`>> aggregation, where additional metrics are added such as `sum_of_squares`, `variance`, `std_deviation` and `std_deviation_bounds`., +        "grade_stats": {, +           "count": 9,, +           "max": 99,, +           "avg": 86,, +           "sum": 774,, +           "sum_of_squares": 67028,, +           "variance": 51.55555555555556,, +           "std_deviation": 7.180219742846005,, +           "std_deviation_bounds": {, +            "upper": 100.36043948569201,, +            "lower": 71.63956051430799, +           }, +The name of the aggregation (`grades_stats` above) also serves as the key by which the aggregation result can be retrieved from the returned response., +, +==== Standard Deviation Bounds, +coming[1.4.3], +, +By default, the `extended_stats` metric will return an object called `std_deviation_bounds`, which provides an interval of plus/minus two standard, +deviations from the mean.  This can be a useful way to visualize variance of your data.  If you want a different boundary, for example, +three standard deviations, you can set `sigma` in the request:, +, +[source,js], +--------------------------------------------------, +{, +    "aggs" : {, +        "grades_stats" : {, +            "extended_stats" : {, +                "field" : "grade",, +                "sigma" : 3 <1>, +            }, +        }, +    }, +}, +--------------------------------------------------, +<1> `sigma` controls how many standard deviations +/- from the mean should be displayed coming[1.4.3], +, +`sigma` can be any non-negative double, meaning you can request non-integer values such as `1.5`.  A value of `0` is valid, but will simply, +return the average for both `upper` and `lower` bounds., +, +.Standard Deviation and Bounds require normality, +[NOTE], +=====, +The standard deviation and its bounds are displayed by default, but they are not always applicable to all data-sets.  Your data must, +be normally distributed for the metrics to make sense.  The statistics behind standard deviations assumes normally distributed data, so, +if your data is skewed heavily left or right, the value returned will be misleading., +=====, +++ b/docs/reference/search/aggregations/metrics/extendedstats-aggregation.asciidoc, +The `extended_stats` aggregations is an extended version of the <<search-aggregations-metrics-stats-aggregation,`stats`>> aggregation, where additional metrics are added such as `sum_of_squares`, `variance`, `std_deviation` and `std_deviation_bounds`., +        "grade_stats": {, +           "count": 9,, +           "max": 99,, +           "avg": 86,, +           "sum": 774,, +           "sum_of_squares": 67028,, +           "variance": 51.55555555555556,, +           "std_deviation": 7.180219742846005,, +           "std_deviation_bounds": {, +            "upper": 100.36043948569201,, +            "lower": 71.63956051430799, +           }, +The name of the aggregation (`grades_stats` above) also serves as the key by which the aggregation result can be retrieved from the returned response., +, +==== Standard Deviation Bounds, +coming[1.4.3], +, +By default, the `extended_stats` metric will return an object called `std_deviation_bounds`, which provides an interval of plus/minus two standard, +deviations from the mean.  This can be a useful way to visualize variance of your data.  If you want a different boundary, for example, +three standard deviations, you can set `sigma` in the request:, +, +[source,js], +--------------------------------------------------, +{, +    "aggs" : {, +        "grades_stats" : {, +            "extended_stats" : {, +                "field" : "grade",, +                "sigma" : 3 <1>, +            }, +        }, +    }, +}, +--------------------------------------------------, +<1> `sigma` controls how many standard deviations +/- from the mean should be displayed coming[1.4.3], +, +`sigma` can be any non-negative double, meaning you can request non-integer values such as `1.5`.  A value of `0` is valid, but will simply, +return the average for both `upper` and `lower` bounds., +, +.Standard Deviation and Bounds require normality, +[NOTE], +=====, +The standard deviation and its bounds are displayed by default, but they are not always applicable to all data-sets.  Your data must, +be normally distributed for the metrics to make sense.  The statistics behind standard deviations assumes normally distributed data, so, +if your data is skewed heavily left or right, the value returned will be misleading., +=====, +++ b/src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ExtendedStats.java, +     * The upper or lower bounds of the stdDeviation, +     */, +    double getStdDeviationBound(Bounds bound);]