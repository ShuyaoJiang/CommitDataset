[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/ValuesSourceMetricsAggregationBuilder.java, +import org.elasticsearch.script.Script;, +    private Script script;, +    @Deprecated, +    private String scriptString; // TODO Remove in 3.0, +    @Deprecated, +    private String lang; // TODO Remove in 3.0, +    @Deprecated, +    private Map<String, Object> params; // TODO Remove in 3.0, +    /**, +     * The script to use for this aggregation, +     */, +    public B script(Script script) {, +    /**, +     * @deprecated use {@link #script(Script)} instead., +     */, +    @Deprecated, +    @SuppressWarnings("unchecked"), +    public B script(String script) {, +        this.scriptString = script;, +        return (B) this;, +    }, +, +    /**, +     * @deprecated use {@link #script(Script)} instead., +     */, +    @Deprecated, +    /**, +     * @deprecated use {@link #script(Script)} instead., +     */, +    @Deprecated, +    /**, +     * @deprecated use {@link #script(Script)} instead., +     */, +    @Deprecated, +    @SuppressWarnings("unchecked"), +    public B format(String format) {, +        this.format = format;, +        return (B) this;, +    }, +, +        if (scriptString != null) {, +            builder.field("script", scriptString);, +        }, +, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/ValuesSourceMetricsAggregationBuilder.java, +import org.elasticsearch.script.Script;, +    private Script script;, +    @Deprecated, +    private String scriptString; // TODO Remove in 3.0, +    @Deprecated, +    private String lang; // TODO Remove in 3.0, +    @Deprecated, +    private Map<String, Object> params; // TODO Remove in 3.0, +    /**, +     * The script to use for this aggregation, +     */, +    public B script(Script script) {, +    /**, +     * @deprecated use {@link #script(Script)} instead., +     */, +    @Deprecated, +    @SuppressWarnings("unchecked"), +    public B script(String script) {, +        this.scriptString = script;, +        return (B) this;, +    }, +, +    /**, +     * @deprecated use {@link #script(Script)} instead., +     */, +    @Deprecated, +    /**, +     * @deprecated use {@link #script(Script)} instead., +     */, +    @Deprecated, +    /**, +     * @deprecated use {@link #script(Script)} instead., +     */, +    @Deprecated, +    @SuppressWarnings("unchecked"), +    public B format(String format) {, +        this.format = format;, +        return (B) this;, +    }, +, +        if (scriptString != null) {, +            builder.field("script", scriptString);, +        }, +, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/metrics/AbstractNumericTests.java, +    public abstract void testSingleValuedField_WithValueScript_OldScriptAPI() throws Exception;, +, +    public abstract void testSingleValuedField_WithValueScript_WithParams_OldScriptAPI() throws Exception;, +, +    public abstract void testMultiValuedField_WithValueScript_OldScriptAPI() throws Exception;, +, +    public abstract void testMultiValuedField_WithValueScript_WithParams_OldScriptAPI() throws Exception;, +, +    public abstract void testScript_SingleValued_OldScriptAPI() throws Exception;]