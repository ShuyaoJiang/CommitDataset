[+++ b/src/main/java/org/elasticsearch/indices/InternalIndicesLifecycle.java, + * InternalIndicesLifecycle handles invoking each listener for the Index. All, + * exceptions thrown by listeners are logged and then re-thrown to stop further, + * index action., +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +++ b/src/main/java/org/elasticsearch/indices/InternalIndicesLifecycle.java, + * InternalIndicesLifecycle handles invoking each listener for the Index. All, + * exceptions thrown by listeners are logged and then re-thrown to stop further, + * index action., +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +                throw t;, +++ b/src/test/java/org/elasticsearch/indices/IndicesLifecycleListenerTests.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.action.admin.cluster.state.ClusterStateResponse;, +        //create an index that should fail, +        try {, +            client().admin().indices().prepareCreate("failed").setSettings(SETTING_NUMBER_OF_SHARDS, 1, "index.fail", true).get();, +            fail("should have thrown an exception");, +        } catch (ElasticsearchException e) {, +            assertTrue(e.getMessage().contains("failing on purpose"));, +            ClusterStateResponse resp = client().admin().cluster().prepareState().get();, +            assertFalse(resp.getState().routingTable().indicesRouting().keySet().contains("failed"));, +        }, +, +, +            if (indexSettings.getAsBoolean("index.fail", false)) {, +                throw new ElasticsearchException("failing on purpose");, +            }]