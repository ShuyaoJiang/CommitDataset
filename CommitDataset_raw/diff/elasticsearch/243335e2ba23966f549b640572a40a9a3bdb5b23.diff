[+++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ESClientYamlSuiteTestCase.java, +            for (ExecutableSection executableSection : testCandidate.getSetupSection().getExecutableSections()) {, +                executeSection(executableSection);, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ESClientYamlSuiteTestCase.java, +            for (ExecutableSection executableSection : testCandidate.getSetupSection().getExecutableSections()) {, +                executeSection(executableSection);, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/section/SetupSection.java, +            if ("do".equals(parser.currentName())) {, +                setupSection.addDoSection(DoSection.parse(parser));, +            } else if ("set".equals(parser.currentName())) {, +                setupSection.addSetSection(SetSection.parse(parser));, +            } else {, +    private List<ExecutableSection> executableSections = new ArrayList<>();, +    public List<ExecutableSection> getExecutableSections() {, +        return executableSections;, +        this.executableSections.add(doSection);, +    }, +, +    public void addSetSection(SetSection setSection) {, +        this.executableSections.add(setSection);, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ESClientYamlSuiteTestCase.java, +            for (ExecutableSection executableSection : testCandidate.getSetupSection().getExecutableSections()) {, +                executeSection(executableSection);, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/section/SetupSection.java, +            if ("do".equals(parser.currentName())) {, +                setupSection.addDoSection(DoSection.parse(parser));, +            } else if ("set".equals(parser.currentName())) {, +                setupSection.addSetSection(SetSection.parse(parser));, +            } else {, +    private List<ExecutableSection> executableSections = new ArrayList<>();, +    public List<ExecutableSection> getExecutableSections() {, +        return executableSections;, +        this.executableSections.add(doSection);, +    }, +, +    public void addSetSection(SetSection setSection) {, +        this.executableSections.add(setSection);, +++ b/test/framework/src/test/java/org/elasticsearch/test/rest/yaml/section/ClientYamlTestSuiteTests.java, +            assertThat(restTestSuite.getSetupSection().getExecutableSections().size(), equalTo(1));, +            final ExecutableSection maybeDoSection = restTestSuite.getSetupSection().getExecutableSections().get(0);, +            assertThat(maybeDoSection, instanceOf(DoSection.class));, +            final DoSection doSection = (DoSection) maybeDoSection;, +            assertThat(doSection.getApiCallSection().getApi(), equalTo("indices.create"));, +            assertThat(doSection.getApiCallSection().getParams().size(), equalTo(1));, +            assertThat(doSection.getApiCallSection().getParams().get("index"),, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ESClientYamlSuiteTestCase.java, +            for (ExecutableSection executableSection : testCandidate.getSetupSection().getExecutableSections()) {, +                executeSection(executableSection);, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/section/SetupSection.java, +            if ("do".equals(parser.currentName())) {, +                setupSection.addDoSection(DoSection.parse(parser));, +            } else if ("set".equals(parser.currentName())) {, +                setupSection.addSetSection(SetSection.parse(parser));, +            } else {, +    private List<ExecutableSection> executableSections = new ArrayList<>();, +    public List<ExecutableSection> getExecutableSections() {, +        return executableSections;, +        this.executableSections.add(doSection);, +    }, +, +    public void addSetSection(SetSection setSection) {, +        this.executableSections.add(setSection);, +++ b/test/framework/src/test/java/org/elasticsearch/test/rest/yaml/section/ClientYamlTestSuiteTests.java, +            assertThat(restTestSuite.getSetupSection().getExecutableSections().size(), equalTo(1));, +            final ExecutableSection maybeDoSection = restTestSuite.getSetupSection().getExecutableSections().get(0);, +            assertThat(maybeDoSection, instanceOf(DoSection.class));, +            final DoSection doSection = (DoSection) maybeDoSection;, +            assertThat(doSection.getApiCallSection().getApi(), equalTo("indices.create"));, +            assertThat(doSection.getApiCallSection().getParams().size(), equalTo(1));, +            assertThat(doSection.getApiCallSection().getParams().get("index"),, +++ b/test/framework/src/test/java/org/elasticsearch/test/rest/yaml/section/SetupSectionTests.java, +import java.io.IOException;, +, +import static org.hamcrest.Matchers.hasKey;, +import static org.hamcrest.Matchers.hasSize;, +import static org.hamcrest.Matchers.instanceOf;, +        assertThat(setupSection.getExecutableSections().size(), equalTo(2));, +        assertThat(setupSection.getExecutableSections().get(0), instanceOf(DoSection.class));, +        assertThat(((DoSection)setupSection.getExecutableSections().get(0)).getApiCallSection().getApi(), equalTo("index1"));, +        assertThat(setupSection.getExecutableSections().get(1), instanceOf(DoSection.class));, +        assertThat(((DoSection)setupSection.getExecutableSections().get(1)).getApiCallSection().getApi(), equalTo("index2"));, +    }, +, +    public void testParseSetSectionInSetupSection() throws IOException {, +        parser = createParser(YamlXContent.yamlXContent,, +                "- do:\n" +, +                "    cluster.state: {}\n" +, +                "- set: { master_node: master }\n" +, +                "- do:\n" +, +                "    nodes.info:\n" +, +                "      metric: [ http, transport ]\n" +, +                "- set: {nodes.$master.http.publish_address: host}\n" +, +                "- set: {nodes.$master.transport.publish_address: transport_host}\n");, +, +        final SetupSection setupSection = SetupSection.parse(parser);, +, +        assertNotNull(setupSection);, +        assertTrue(setupSection.getSkipSection().isEmpty());, +        assertThat(setupSection.getExecutableSections().size(), equalTo(5));, +        assertThat(setupSection.getExecutableSections().get(0), instanceOf(DoSection.class));]