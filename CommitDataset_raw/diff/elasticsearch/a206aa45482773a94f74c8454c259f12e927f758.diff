[+++ b/src/main/java/org/elasticsearch/common/property/PropertyPlaceholder.java, +                if (propVal == null && placeholderResolver.shouldIgnoreMissing(placeholder)) {, +                    propVal = "";, +                }, +, +        boolean shouldIgnoreMissing(String placeholderName);, +++ b/src/main/java/org/elasticsearch/common/property/PropertyPlaceholder.java, +                if (propVal == null && placeholderResolver.shouldIgnoreMissing(placeholder)) {, +                    propVal = "";, +                }, +, +        boolean shouldIgnoreMissing(String placeholderName);, +++ b/src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java, +                    if (placeholderName.startsWith("env.")) {, +                        // explicit env var prefix, +                        return System.getenv(placeholderName.substring("env.".length()));, +                    }, +, +                @Override, +                public boolean shouldIgnoreMissing(String placeholderName) {, +                    // if its an explicit env var, we are ok with not having a value for it and treat it as optional, +                    if (placeholderName.startsWith("env.")) {, +                        return true;, +                    }, +                    return false;, +                }, +                String value = propertyPlaceholder.replacePlaceholders(entry.getValue(), placeholderResolver);, +                if (Strings.hasLength(value)) {, +                    map.put(entry.getKey(), value);, +                }]