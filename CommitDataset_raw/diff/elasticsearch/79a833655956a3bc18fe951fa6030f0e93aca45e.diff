[+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/TemplateUpgradeService.java, +            logger.info("Starting template upgrade to version {}, {} templates will be updated and {} will be removed",, +                Version.CURRENT,, +                changes.get().v1().size(),, +                changes.get().v2().size());, +            DiscoveryNode masterNode = nodes.getMasterNode();, +            if (masterNode == null) {, +                return false;, +            }, +            if (maxVersion.equals(masterNode.getVersion())) {, +                    if(updatesInProgress.decrementAndGet() == 0) {, +                        logger.info("Finished upgrading templates to version {}", Version.CURRENT);, +                    }, +                    if(updatesInProgress.decrementAndGet() == 0) {, +                        logger.info("Templates were upgraded to version {}", Version.CURRENT);, +                    }, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/TemplateUpgradeService.java, +            logger.info("Starting template upgrade to version {}, {} templates will be updated and {} will be removed",, +                Version.CURRENT,, +                changes.get().v1().size(),, +                changes.get().v2().size());, +            DiscoveryNode masterNode = nodes.getMasterNode();, +            if (masterNode == null) {, +                return false;, +            }, +            if (maxVersion.equals(masterNode.getVersion())) {, +                    if(updatesInProgress.decrementAndGet() == 0) {, +                        logger.info("Finished upgrading templates to version {}", Version.CURRENT);, +                    }, +                    if(updatesInProgress.decrementAndGet() == 0) {, +                        logger.info("Templates were upgraded to version {}", Version.CURRENT);, +                    }, +++ b/core/src/test/java/org/elasticsearch/cluster/metadata/TemplateUpgradeServiceIT.java, +import static org.hamcrest.Matchers.hasSize;, +        AtomicInteger updateCount = new AtomicInteger();, +            // the updates only happen on cluster state updates, so we need to make sure that the cluster state updates are happening, +            // so we need to simulate updates to make sure the template upgrade kicks in, +            assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(, +                Settings.builder().put(TestPlugin.UPDATE_TEMPLATE_DUMMY_SETTING.getKey(), updateCount.incrementAndGet()), +            ).get());, +            assertThat(templates.size(), equalTo(3));, +            assertThat(templates, hasSize(2));]