[+++ b/docs/reference/aggregations.asciidoc, +<<search-aggregations-pipeline, _Pipeline_>>::, +include::aggregations/pipeline.asciidoc[], +++ b/docs/reference/aggregations.asciidoc, +<<search-aggregations-pipeline, _Pipeline_>>::, +include::aggregations/pipeline.asciidoc[], +++ b/docs/reference/aggregations/pipeline.asciidoc, +[[search-aggregations-pipeline]], +, +== Pipeline Aggregations, +, +coming[2.0.0], +, +experimental[], +, +Pipeline aggregations work on the outputs produced from other aggregations rather than from document sets, adding, +information to the output tree. There are many different types of pipeline aggregation, each computing different information from, +other aggregations, but these types can broken down into two families:, +, +_Parent_::, +                A family of pipeline aggregations that is provided with the output of its parent aggregation and is able, +                to compute new buckets or new aggregations to add to existing buckets., +, +_Sibling_::, +                Pipeline aggregations that are provided with the output of a sibling aggregation and are able to compute a, +                new aggregation which will be at the same level as the sibling aggregation., +, +Pipeline aggregations can reference the aggregations they need to perform their computation by using the `buckets_paths`, +parameter to indicate the paths to the required metrics. The syntax for defining these paths can be found in the, +<<bucket-path-syntax, `buckets_path` Syntax>> section below., +, +Pipeline aggregations cannot have sub-aggregations but depending on the type it can reference another pipeline in the `buckets_path`, +allowing pipeline aggregations to be chained.  For example, you can chain together two derivatives to calculate the second derivative, +(e.g. a derivative of a derivative)., +, +NOTE: Because pipeline aggregations only add to the output, when chaining pipeline aggregations the output of each pipeline aggregation , +will be included in the final output., +, +[[bucket-path-syntax]], +[float], +=== `buckets_path` Syntax, +, +Most pipeline aggregations require another aggregation as their input.  The input aggregation is defined via the `buckets_path`, +parameter, which follows a specific format:, +, +--------------------------------------------------, +AGG_SEPARATOR       :=  '>', +METRIC_SEPARATOR    :=  '.', +AGG_NAME            :=  <the name of the aggregation>, +METRIC              :=  <the name of the metric (in case of multi-value metrics aggregation)>, +PATH                :=  <AGG_NAME>[<AGG_SEPARATOR><AGG_NAME>]*[<METRIC_SEPARATOR><METRIC>], +--------------------------------------------------, +, +For example, the path `"my_bucket>my_stats.avg"` will path to the `avg` value in the `"my_stats"` metric, which is, +contained in the `"my_bucket"` bucket aggregation., +, +Paths are relative from the position of the pipeline aggregation; they are not absolute paths, and the path cannot go back "up" the, +aggregation tree. For example, this moving average is embedded inside a date_histogram and refers to a "sibling", +metric `"the_sum"`:, +, +[source,js], +--------------------------------------------------, +{, +    "my_date_histo":{, +        "date_histogram":{, +            "field":"timestamp",, +            "interval":"day", +        },, +        "aggs":{, +            "the_sum":{, +                "sum":{ "field": "lemmings" } <1>, +            },, +            "the_movavg":{, +                "moving_avg":{ "buckets_path": "the_sum" } <2>, +            }, +        }, +    }, +}, +--------------------------------------------------, +<1> The metric is called `"the_sum"`, +<2> The `buckets_path` refers to the metric via a relative path `"the_sum"`, +, +`buckets_path` is also used for Sibling pipeline aggregations, where the aggregation is "next" to a series of buckets, +instead of embedded "inside" them.  For example, the `max_bucket` aggregation uses the `buckets_path` to specify, +a metric embedded inside a sibling aggregation:, +, +[source,js], +--------------------------------------------------, +{, +    "aggs" : {, +        "sales_per_month" : {, +            "date_histogram" : {, +                "field" : "date",, +                "interval" : "month", +            },, +            "aggs": {, +                "sales": {, +                    "sum": {, +                        "field": "price", +                    }]