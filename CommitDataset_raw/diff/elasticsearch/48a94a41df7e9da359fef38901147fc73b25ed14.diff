[+++ b/src/main/java/org/elasticsearch/search/aggregations/reducers/derivative/DerivativeBuilder.java, +import org.elasticsearch.search.aggregations.bucket.histogram.DateHistogramInterval;, +import org.elasticsearch.search.aggregations.reducers.BucketHelpers.GapPolicy;, +    private String units;, +    public DerivativeBuilder units(String units) {, +        this.units = units;, +        return this;, +    }, +, +    public DerivativeBuilder units(DateHistogramInterval units) {, +        this.units = units.toString();, +        return this;, +    }, +, +        if (units != null) {, +            builder.field(DerivativeParser.UNITS.getPreferredName(), units);, +        }, +++ b/src/main/java/org/elasticsearch/search/aggregations/reducers/derivative/DerivativeBuilder.java, +import org.elasticsearch.search.aggregations.bucket.histogram.DateHistogramInterval;, +import org.elasticsearch.search.aggregations.reducers.BucketHelpers.GapPolicy;, +    private String units;, +    public DerivativeBuilder units(String units) {, +        this.units = units;, +        return this;, +    }, +, +    public DerivativeBuilder units(DateHistogramInterval units) {, +        this.units = units.toString();, +        return this;, +    }, +, +        if (units != null) {, +            builder.field(DerivativeParser.UNITS.getPreferredName(), units);, +        }, +++ b/src/main/java/org/elasticsearch/search/aggregations/reducers/derivative/DerivativeParser.java, +import com.google.common.collect.ImmutableMap;, +, +import org.elasticsearch.common.collect.MapBuilder;, +import org.elasticsearch.common.rounding.DateTimeUnit;, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.search.aggregations.reducers.BucketHelpers.GapPolicy;, +    public static final ParseField UNITS = new ParseField("units");, +, +    private final ImmutableMap<String, DateTimeUnit> dateFieldUnits;, +, +    public DerivativeParser() {, +        dateFieldUnits = MapBuilder.<String, DateTimeUnit> newMapBuilder().put("year", DateTimeUnit.YEAR_OF_CENTURY), +                .put("1y", DateTimeUnit.YEAR_OF_CENTURY).put("quarter", DateTimeUnit.QUARTER).put("1q", DateTimeUnit.QUARTER), +                .put("month", DateTimeUnit.MONTH_OF_YEAR).put("1M", DateTimeUnit.MONTH_OF_YEAR).put("week", DateTimeUnit.WEEK_OF_WEEKYEAR), +                .put("1w", DateTimeUnit.WEEK_OF_WEEKYEAR).put("day", DateTimeUnit.DAY_OF_MONTH).put("1d", DateTimeUnit.DAY_OF_MONTH), +                .put("hour", DateTimeUnit.HOUR_OF_DAY).put("1h", DateTimeUnit.HOUR_OF_DAY).put("minute", DateTimeUnit.MINUTES_OF_HOUR), +                .put("1m", DateTimeUnit.MINUTES_OF_HOUR).put("second", DateTimeUnit.SECOND_OF_MINUTE), +                .put("1s", DateTimeUnit.SECOND_OF_MINUTE).immutableMap();, +    }, +        String units = null;, +                } else if (UNITS.match(currentFieldName)) {, +                    units = parser.text();, +        long xAxisUnits = -1;, +        if (units != null) {, +            DateTimeUnit dateTimeUnit = dateFieldUnits.get(units);, +            if (dateTimeUnit != null) {, +                xAxisUnits = dateTimeUnit.field().getDurationField().getUnitMillis();, +            } else {, +                TimeValue timeValue = TimeValue.parseTimeValue(units, null);, +                if (timeValue != null) {, +                    xAxisUnits = timeValue.getMillis();, +                }, +            }, +        }, +, +        return new DerivativeReducer.Factory(reducerName, bucketsPaths, formatter, gapPolicy, xAxisUnits);, +++ b/src/main/java/org/elasticsearch/search/aggregations/reducers/derivative/DerivativeBuilder.java, +import org.elasticsearch.search.aggregations.bucket.histogram.DateHistogramInterval;, +import org.elasticsearch.search.aggregations.reducers.BucketHelpers.GapPolicy;, +    private String units;, +    public DerivativeBuilder units(String units) {, +        this.units = units;, +        return this;, +    }, +, +    public DerivativeBuilder units(DateHistogramInterval units) {, +        this.units = units.toString();, +        return this;, +    }, +, +        if (units != null) {, +            builder.field(DerivativeParser.UNITS.getPreferredName(), units);, +        }, +++ b/src/main/java/org/elasticsearch/search/aggregations/reducers/derivative/DerivativeParser.java, +import com.google.common.collect.ImmutableMap;, +, +import org.elasticsearch.common.collect.MapBuilder;, +import org.elasticsearch.common.rounding.DateTimeUnit;, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.search.aggregations.reducers.BucketHelpers.GapPolicy;, +    public static final ParseField UNITS = new ParseField("units");, +, +    private final ImmutableMap<String, DateTimeUnit> dateFieldUnits;, +, +    public DerivativeParser() {]