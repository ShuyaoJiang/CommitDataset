[+++ b/qa/multi-cluster-search/build.gradle, +dependencies {, +  testCompile "org.elasticsearch.client:elasticsearch-rest-high-level-client:${version}", +}, +, +unitTest.enabled = false // no unit tests for multi-cluster-search, only integration tests, +++ b/qa/multi-cluster-search/build.gradle, +dependencies {, +  testCompile "org.elasticsearch.client:elasticsearch-rest-high-level-client:${version}", +}, +, +unitTest.enabled = false // no unit tests for multi-cluster-search, only integration tests, +++ b/qa/multi-cluster-search/src/test/java/org/elasticsearch/search/CCSDuelIT.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.search;, +, +import com.carrotsearch.randomizedtesting.RandomizedContext;, +import com.carrotsearch.randomizedtesting.annotations.TimeoutSuite;, +import org.apache.lucene.search.join.ScoreMode;, +import org.apache.lucene.util.TimeUnits;, +import org.elasticsearch.action.ActionListener;, +import org.elasticsearch.action.LatchedActionListener;, +import org.elasticsearch.action.admin.indices.refresh.RefreshRequest;, +import org.elasticsearch.action.admin.indices.refresh.RefreshResponse;, +import org.elasticsearch.action.bulk.BulkProcessor;, +import org.elasticsearch.action.bulk.BulkRequest;, +import org.elasticsearch.action.bulk.BulkResponse;, +import org.elasticsearch.action.index.IndexRequest;, +import org.elasticsearch.action.index.IndexResponse;, +import org.elasticsearch.action.search.SearchRequest;, +import org.elasticsearch.action.search.SearchResponse;, +import org.elasticsearch.action.support.WriteRequest;, +import org.elasticsearch.client.RequestOptions;, +import org.elasticsearch.client.RestClient;, +import org.elasticsearch.client.RestHighLevelClient;, +import org.elasticsearch.client.indices.CreateIndexRequest;, +import org.elasticsearch.client.indices.CreateIndexResponse;, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.bytes.BytesReference;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.xcontent.XContentHelper;, +import org.elasticsearch.common.xcontent.XContentType;, +import org.elasticsearch.core.internal.io.IOUtils;, +import org.elasticsearch.index.query.InnerHitBuilder;, +import org.elasticsearch.index.query.MatchQueryBuilder;, +import org.elasticsearch.index.query.QueryBuilders;, +import org.elasticsearch.index.query.RangeQueryBuilder;, +import org.elasticsearch.index.query.TermQueryBuilder;, +import org.elasticsearch.index.query.TermsQueryBuilder;, +import org.elasticsearch.indices.TermsLookup;, +import org.elasticsearch.join.query.HasChildQueryBuilder;, +import org.elasticsearch.join.query.HasParentQueryBuilder;, +import org.elasticsearch.script.Script;, +import org.elasticsearch.script.ScriptType;, +import org.elasticsearch.search.aggregations.Aggregation;, +import org.elasticsearch.search.aggregations.BucketOrder;, +import org.elasticsearch.search.aggregations.bucket.MultiBucketsAggregation;, +import org.elasticsearch.search.aggregations.bucket.filter.FilterAggregationBuilder;, +import org.elasticsearch.search.aggregations.bucket.histogram.DateHistogramAggregationBuilder;, +import org.elasticsearch.search.aggregations.bucket.histogram.DateHistogramInterval;, +import org.elasticsearch.search.aggregations.bucket.terms.TermsAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.CardinalityAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.SumAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.TopHitsAggregationBuilder;, +import org.elasticsearch.search.aggregations.pipeline.DerivativePipelineAggregationBuilder;, +import org.elasticsearch.search.aggregations.pipeline.MaxBucketPipelineAggregationBuilder;, +import org.elasticsearch.search.aggregations.support.ValueType;, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +import org.elasticsearch.search.collapse.CollapseBuilder;, +import org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilder;, +import org.elasticsearch.search.rescore.QueryRescoreMode;, +import org.elasticsearch.search.rescore.QueryRescorerBuilder;, +import org.elasticsearch.search.sort.ScoreSortBuilder;, +import org.elasticsearch.search.sort.SortOrder;, +import org.elasticsearch.search.suggest.SuggestBuilder;, +import org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder;, +import org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorBuilder;, +import org.elasticsearch.search.suggest.phrase.PhraseSuggestion;, +import org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilder;, +import org.elasticsearch.search.suggest.term.TermSuggestion;, +import org.elasticsearch.search.suggest.term.TermSuggestionBuilder;, +import org.elasticsearch.test.NotEqualMessageBuilder;]