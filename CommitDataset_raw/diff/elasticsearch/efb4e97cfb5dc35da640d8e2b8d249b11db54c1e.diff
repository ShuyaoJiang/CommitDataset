[+++ b/build.gradle, +      gradleVersion = gradle.getGradleVersion(), +++ b/build.gradle, +      gradleVersion = gradle.getGradleVersion(), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingPlugin.groovy, +            oldTestProvider = tasks.named('test'), +++ b/build.gradle, +      gradleVersion = gradle.getGradleVersion(), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingPlugin.groovy, +            oldTestProvider = tasks.named('test'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +    static Task createCopyRestSpecTask(Project project, Provider<Boolean> includePackagedTests) {, +++ b/build.gradle, +      gradleVersion = gradle.getGradleVersion(), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingPlugin.groovy, +            oldTestProvider = tasks.named('test'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +    static Task createCopyRestSpecTask(Project project, Provider<Boolean> includePackagedTests) {, +++ b/buildSrc/version.properties, +lucene            = 7.4.0, +++ b/build.gradle, +      gradleVersion = gradle.getGradleVersion(), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingPlugin.groovy, +            oldTestProvider = tasks.named('test'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +    static Task createCopyRestSpecTask(Project project, Provider<Boolean> includePackagedTests) {, +++ b/buildSrc/version.properties, +lucene            = 7.4.0, +++ b/client/rest-high-level/build.gradle, +import org.elasticsearch.gradle.test.RestIntegTestTask, +import org.gradle.api.internal.provider.Providers, +//we need to copy the yaml spec so we can check naming (see RestHighlevelClientTests#testApiNamingConventions), +Task copyRestSpec = RestIntegTestTask.createCopyRestSpecTask(project, Providers.FALSE), +test.dependsOn(copyRestSpec), +, +  //this is needed to make RestHighLevelClientTests#testApiNamingConventions work from IDEs, +  testCompile "org.elasticsearch:rest-api-spec:${version}", +++ b/build.gradle, +      gradleVersion = gradle.getGradleVersion(), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingPlugin.groovy, +            oldTestProvider = tasks.named('test'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +    static Task createCopyRestSpecTask(Project project, Provider<Boolean> includePackagedTests) {, +++ b/buildSrc/version.properties, +lucene            = 7.4.0, +++ b/client/rest-high-level/build.gradle, +import org.elasticsearch.gradle.test.RestIntegTestTask, +import org.gradle.api.internal.provider.Providers, +//we need to copy the yaml spec so we can check naming (see RestHighlevelClientTests#testApiNamingConventions), +Task copyRestSpec = RestIntegTestTask.createCopyRestSpecTask(project, Providers.FALSE), +test.dependsOn(copyRestSpec), +, +  //this is needed to make RestHighLevelClientTests#testApiNamingConventions work from IDEs, +  testCompile "org.elasticsearch:rest-api-spec:${version}", +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +    public GetMappingsResponse getMapping(GetMappingsRequest getMappingsRequest, RequestOptions options) throws IOException {, +    public void getMappingAsync(GetMappingsRequest getMappingsRequest, RequestOptions options,, +     * @deprecated use {@link #forcemerge(ForceMergeRequest, RequestOptions)} instead, +    @Deprecated, +        return forcemerge(forceMergeRequest, options);, +    }, +, +    /**, +     * Force merge one or more indices using the Force Merge API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-forcemerge.html">, +     * Force Merge API on elastic.co</a>, +     * @param forceMergeRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public ForceMergeResponse forcemerge(ForceMergeRequest forceMergeRequest, RequestOptions options) throws IOException {, +     * @deprecated use {@link #forcemergeAsync(ForceMergeRequest, RequestOptions, ActionListener)} instead, +    @Deprecated, +        forcemergeAsync(forceMergeRequest, options, listener);, +    }, +, +    /**, +     * Asynchronously force merge one or more indices using the Force Merge API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-forcemerge.html">, +     * Force Merge API on elastic.co</a>, +     * @param forceMergeRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void forcemergeAsync(ForceMergeRequest forceMergeRequest, RequestOptions options, ActionListener<ForceMergeResponse> listener) {, +++ b/build.gradle, +      gradleVersion = gradle.getGradleVersion(), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingPlugin.groovy, +            oldTestProvider = tasks.named('test'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +    static Task createCopyRestSpecTask(Project project, Provider<Boolean> includePackagedTests) {, +++ b/buildSrc/version.properties, +lucene            = 7.4.0, +++ b/client/rest-high-level/build.gradle, +import org.elasticsearch.gradle.test.RestIntegTestTask, +import org.gradle.api.internal.provider.Providers, +//we need to copy the yaml spec so we can check naming (see RestHighlevelClientTests#testApiNamingConventions), +Task copyRestSpec = RestIntegTestTask.createCopyRestSpecTask(project, Providers.FALSE), +test.dependsOn(copyRestSpec)]