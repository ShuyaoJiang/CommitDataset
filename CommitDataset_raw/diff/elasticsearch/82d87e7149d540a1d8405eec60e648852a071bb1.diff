[+++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/CompoundProcessor.java, +import java.util.Map;, +    static final String ON_FAILURE_MESSAGE_FIELD = "on_failure_message";, +    static final String ON_FAILURE_PROCESSOR_FIELD = "on_failure_processor";, +            try {, +                    executeOnFailure(ingestDocument, e, processor.getType());, +                }, +                return;, +            }, +    void executeOnFailure(IngestDocument ingestDocument, Exception cause, String failedProcessorType) throws Exception {, +        Map<String, String> ingestMetadata = ingestDocument.getIngestMetadata();, +        try {, +            ingestMetadata.put(ON_FAILURE_MESSAGE_FIELD, cause.getMessage());, +            ingestMetadata.put(ON_FAILURE_PROCESSOR_FIELD, failedProcessorType);, +        } finally {, +            ingestMetadata.remove(ON_FAILURE_MESSAGE_FIELD);, +            ingestMetadata.remove(ON_FAILURE_PROCESSOR_FIELD);, +        }, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/CompoundProcessor.java, +import java.util.Map;, +    static final String ON_FAILURE_MESSAGE_FIELD = "on_failure_message";, +    static final String ON_FAILURE_PROCESSOR_FIELD = "on_failure_processor";, +            try {, +                    executeOnFailure(ingestDocument, e, processor.getType());, +                }, +                return;, +            }, +    void executeOnFailure(IngestDocument ingestDocument, Exception cause, String failedProcessorType) throws Exception {, +        Map<String, String> ingestMetadata = ingestDocument.getIngestMetadata();, +        try {, +            ingestMetadata.put(ON_FAILURE_MESSAGE_FIELD, cause.getMessage());, +            ingestMetadata.put(ON_FAILURE_PROCESSOR_FIELD, failedProcessorType);, +        } finally {, +            ingestMetadata.remove(ON_FAILURE_MESSAGE_FIELD);, +            ingestMetadata.remove(ON_FAILURE_PROCESSOR_FIELD);, +        }, +++ b/plugins/ingest/src/test/java/org/elasticsearch/ingest/processor/CompoundProcessorTests.java, +import org.mockito.stubbing.Answer;, +import java.util.Map;, +import static org.mockito.Mockito.doAnswer;, +import static org.mockito.Mockito.when;, +        when(processor.getType()).thenReturn("failed_processor");, +, +        Exception error = new RuntimeException("error");, +, +        when(processor.getType()).thenReturn("first");, +        doThrow(error).doNothing().when(processor).execute(ingestDocument);, +, +        Answer checkMetadataAnswer = invocationOnMock -> {, +            @SuppressWarnings("unchecked"), +            IngestDocument ingestDocument = (IngestDocument) invocationOnMock.getArguments()[0];, +            Map<String, String> ingestMetadata = ingestDocument.getIngestMetadata();, +            assertThat(ingestMetadata.size(), equalTo(2));, +            assertThat(ingestMetadata.get(CompoundProcessor.ON_FAILURE_MESSAGE_FIELD), equalTo("error"));, +            assertThat(ingestMetadata.get(CompoundProcessor.ON_FAILURE_PROCESSOR_FIELD), equalTo("first"));, +            return null;, +        };, +        doAnswer(checkMetadataAnswer).when(processorNext).execute(ingestDocument);, +, +        CompoundProcessor compoundProcessor = spy(new CompoundProcessor(Arrays.asList(processor), Arrays.asList(processorNext)));, +        verify(compoundProcessor).executeOnFailure(ingestDocument, error, "first");, +, +        Exception error = new RuntimeException("error");, +        when(processor.getType()).thenReturn("first");, +        doThrow(error).doNothing().when(processor).execute(ingestDocument);, +        Answer checkMetadataAnswer = invocationOnMock -> {, +            @SuppressWarnings("unchecked"), +            IngestDocument ingestDocument = (IngestDocument) invocationOnMock.getArguments()[0];, +            Map<String, String> ingestMetadata = ingestDocument.getIngestMetadata();, +            assertThat(ingestMetadata.size(), equalTo(2));, +            assertThat(ingestMetadata.get(CompoundProcessor.ON_FAILURE_MESSAGE_FIELD), equalTo("error"));, +            assertThat(ingestMetadata.get(CompoundProcessor.ON_FAILURE_PROCESSOR_FIELD), equalTo("first"));, +            return null;, +        };, +        doAnswer(checkMetadataAnswer).when(processorToFail).execute(ingestDocument);, +        when(processorToFail.getType()).thenReturn("second");, +        doThrow(error).doNothing().when(processorToFail).execute(ingestDocument);, +        Answer checkLastMetadataAnswer = invocationOnMock -> {, +            @SuppressWarnings("unchecked"), +            IngestDocument ingestDocument = (IngestDocument) invocationOnMock.getArguments()[0];, +            Map<String, String> ingestMetadata = ingestDocument.getIngestMetadata();, +            assertThat(ingestMetadata.size(), equalTo(2));, +            assertThat(ingestMetadata.get(CompoundProcessor.ON_FAILURE_MESSAGE_FIELD), equalTo("error"));, +            assertThat(ingestMetadata.get(CompoundProcessor.ON_FAILURE_PROCESSOR_FIELD), equalTo("second"));, +            return null;, +        };, +        doAnswer(checkLastMetadataAnswer).when(lastProcessor).execute(ingestDocument);, +        verify(compoundProcessor, times(1)).executeOnFailure(ingestDocument, error, "first");, +        verify(compoundOnFailProcessor, times(1)).executeOnFailure(ingestDocument, error, "second");, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/CompoundProcessor.java, +import java.util.Map;, +    static final String ON_FAILURE_MESSAGE_FIELD = "on_failure_message";, +    static final String ON_FAILURE_PROCESSOR_FIELD = "on_failure_processor";, +            try {, +                    executeOnFailure(ingestDocument, e, processor.getType());, +                }, +                return;, +            }, +    void executeOnFailure(IngestDocument ingestDocument, Exception cause, String failedProcessorType) throws Exception {, +        Map<String, String> ingestMetadata = ingestDocument.getIngestMetadata();]