[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +     * than the search type will cause this source to be overridden, consider using, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +     * than the search type will cause this source to be overridden, consider using, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/search/scan/SearchScanScrollingTests.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.test.integration.search.scan;, +, +import org.elasticsearch.action.search.SearchResponse;, +import org.elasticsearch.action.search.SearchType;, +import org.elasticsearch.client.Client;, +import org.elasticsearch.common.collect.Sets;, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.search.SearchHit;, +import org.elasticsearch.test.integration.AbstractNodesTests;, +import org.testng.annotations.AfterClass;, +import org.testng.annotations.BeforeClass;, +import org.testng.annotations.Test;, +, +import java.util.Set;, +, +import static org.elasticsearch.index.query.QueryBuilders.*;, +import static org.hamcrest.MatcherAssert.*;, +import static org.hamcrest.Matchers.*;, +, +public class SearchScanScrollingTests extends AbstractNodesTests {, +, +    private Client client;, +, +    @BeforeClass public void createNodes() throws Exception {, +        startNode("node1");, +        startNode("node2");, +        client = getClient();, +    }, +, +    @AfterClass public void closeNodes() {, +        client.close();, +        closeAllNodes();, +    }, +, +    protected Client getClient() {, +        return client("node1");, +    }, +, +    @Test public void shard1docs100size3() throws Exception {, +        testScroll(1, 100, 3);, +    }, +, +    @Test public void shard1docs100size7() throws Exception {, +        testScroll(1, 100, 7);, +    }, +, +    @Test public void shard1docs100size13() throws Exception {, +        testScroll(1, 100, 13);, +    }, +, +    @Test public void shard1docs100size24() throws Exception {, +        testScroll(1, 100, 24);, +    }, +, +    @Test public void shard1docs100size45() throws Exception {, +        testScroll(1, 100, 45);, +    }, +, +    @Test public void shard1docs100size63() throws Exception {, +        testScroll(1, 100, 63);, +    }, +, +    @Test public void shard1docs100size89() throws Exception {, +        testScroll(1, 100, 89);, +    }, +, +    @Test public void shard1docs100size99() throws Exception {, +        testScroll(1, 100, 99);, +    }, +, +    @Test public void shard1docs100size100() throws Exception {, +        testScroll(1, 100, 100);, +    }, +, +    @Test public void shard1docs100size101() throws Exception {]