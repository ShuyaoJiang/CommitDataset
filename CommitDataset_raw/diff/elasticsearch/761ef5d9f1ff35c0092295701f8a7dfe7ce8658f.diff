[+++ b/src/main/java/org/elasticsearch/script/groovy/GroovyScriptCompilationException.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.script.groovy;, +, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.rest.RestStatus;, +, +/**, + * Exception used to wrap groovy script compilation exceptions so they are, + * correctly serialized between nodes., + */, +public class GroovyScriptCompilationException extends ElasticsearchException {, +    public GroovyScriptCompilationException(String message) {, +        super(message);, +    }, +, +    @Override, +    public RestStatus status() {, +        return RestStatus.BAD_REQUEST;, +    }, +}, +++ b/src/main/java/org/elasticsearch/script/groovy/GroovyScriptCompilationException.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.script.groovy;, +, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.rest.RestStatus;, +, +/**, + * Exception used to wrap groovy script compilation exceptions so they are, + * correctly serialized between nodes., + */, +public class GroovyScriptCompilationException extends ElasticsearchException {, +    public GroovyScriptCompilationException(String message) {, +        super(message);, +    }, +, +    @Override, +    public RestStatus status() {, +        return RestStatus.BAD_REQUEST;, +    }, +}, +++ b/src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java, +import org.elasticsearch.ExceptionsHelper;, +import org.elasticsearch.common.logging.ESLogger;, +        try {, +        } catch (Throwable e) {, +            if (logger.isTraceEnabled()) {, +                logger.trace("exception compiling Groovy script:", e);, +            }, +            throw new GroovyScriptCompilationException(ExceptionsHelper.detailedMessage(e));, +        }, +            return new GroovyScript(createScript(compiledScript, allVars), this.logger);, +            return new GroovyScript(scriptObject, lookup, this.logger);, +        private final ESLogger logger;, +        public GroovyScript(Script script, ESLogger logger) {, +            this(script, null, logger);, +        public GroovyScript(Script script, SearchLookup lookup, ESLogger logger) {, +            this.logger = logger;, +            try {, +            } catch (Throwable e) {, +                if (logger.isTraceEnabled()) {, +                    logger.trace("exception running Groovy script", e);, +                }]