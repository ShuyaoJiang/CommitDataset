[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/IndicesAdminClient.java, +    AnalyzeRequestBuilder prepareAnalyze(String index, String text);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/IndicesAdminClient.java, +    AnalyzeRequestBuilder prepareAnalyze(String index, String text);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/support/AbstractIndicesAdminClient.java, +    @Override public AnalyzeRequestBuilder prepareAnalyze(String index, String text) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/IndicesAdminClient.java, +    AnalyzeRequestBuilder prepareAnalyze(String index, String text);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/support/AbstractIndicesAdminClient.java, +    @Override public AnalyzeRequestBuilder prepareAnalyze(String index, String text) {, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/indices/analyze/AnalyzeActionTests.java, +            AnalyzeResponse analyzeResponse = client.admin().indices().prepareAnalyze("test", "this is a test").execute().actionGet();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/IndicesAdminClient.java, +    AnalyzeRequestBuilder prepareAnalyze(String index, String text);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/support/AbstractIndicesAdminClient.java, +    @Override public AnalyzeRequestBuilder prepareAnalyze(String index, String text) {, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/indices/analyze/AnalyzeActionTests.java, +            AnalyzeResponse analyzeResponse = client.admin().indices().prepareAnalyze("test", "this is a test").execute().actionGet();, +++ b/plugins/lang/groovy/src/main/groovy/org/elasticsearch/groovy/client/GIndicesAdminClient.groovy, +import org.elasticsearch.action.admin.indices.analyze.AnalyzeRequest, +import org.elasticsearch.action.admin.indices.analyze.AnalyzeResponse, +import org.elasticsearch.action.admin.indices.template.delete.DeleteIndexTemplateRequest, +import org.elasticsearch.action.admin.indices.template.delete.DeleteIndexTemplateResponse, +import org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateRequest, +import org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateResponse, +import org.elasticsearch.client.action.admin.indices.analyze.AnalyzeRequestBuilder, +import org.elasticsearch.client.action.admin.indices.template.delete.DeleteIndexTemplateRequestBuilder, +import org.elasticsearch.client.action.admin.indices.template.put.PutIndexTemplateRequestBuilder, +, +    // ANALYZE, +, +    AnalyzeRequestBuilder prepareAnalyze(String index, String text) {, +        indicesAdminClient.prepareAnalyze(index, text);, +    }, +, +    GActionFuture<AnalyzeResponse> analyze(Closure c) {, +        AnalyzeRequest request = new AnalyzeRequest(), +        c.setDelegate request, +        c.resolveStrategy = gClient.resolveStrategy;, +        c.call();, +        analyze(request), +    }, +, +    GActionFuture<AnalyzeResponse> analyze(AnalyzeRequest request) {, +        GActionFuture<AnalyzeResponse> future = new GActionFuture<AnalyzeResponse>(internalClient.threadPool(), request), +        indicesAdminClient.analyze(request, future), +        return future, +    }, +, +    // PUT INDEX TEMPLATE, +, +    PutIndexTemplateRequestBuilder preparePutTemplate(String name) {, +        indicesAdminClient.preparePutTemplate(name);, +    }, +, +    GActionFuture<PutIndexTemplateResponse> putTemplate(Closure c) {, +        PutIndexTemplateRequest request = new PutIndexTemplateRequest(), +        c.setDelegate request, +        c.resolveStrategy = gClient.resolveStrategy;, +        c.call();, +        putTemplate(request), +    }, +, +    GActionFuture<PutIndexTemplateResponse> putTemplate(PutIndexTemplateRequest request) {, +        GActionFuture<PutIndexTemplateResponse> future = new GActionFuture<PutIndexTemplateResponse>(internalClient.threadPool(), request), +        indicesAdminClient.putTemplate(request, future), +        return future, +    }, +, +    // DELETE INDEX TEMPLATE, +, +    DeleteIndexTemplateRequestBuilder prepareDeleteTemplate(String name) {, +        indicesAdminClient.prepareDeleteTemplate(name);, +    }, +, +    GActionFuture<DeleteIndexTemplateResponse> deleteTemplate(Closure c) {, +        DeleteIndexTemplateRequest request = new DeleteIndexTemplateRequest(), +        c.setDelegate request, +        c.resolveStrategy = gClient.resolveStrategy;, +        c.call();, +        deleteTemplate(request), +    }, +, +    GActionFuture<DeleteIndexTemplateResponse> deleteTemplate(DeleteIndexTemplateRequest request) {, +        GActionFuture<DeleteIndexTemplateResponse> future = new GActionFuture<DeleteIndexTemplateResponse>(internalClient.threadPool(), request), +        indicesAdminClient.deleteTemplate(request, future), +        return future, +    }]