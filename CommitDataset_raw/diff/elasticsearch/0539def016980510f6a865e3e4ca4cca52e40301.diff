[+++ b/core/src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java, +        /**, +         * Read from a stream., +         */, +        Item(StreamInput in) throws IOException {, +            index = in.readOptionalString();, +            type = in.readOptionalString();, +            if (in.readBoolean()) {, +                doc = (BytesReference) in.readGenericValue();, +            } else {, +                id = in.readString();, +            }, +            fields = in.readOptionalStringArray();, +            perFieldAnalyzer = (Map<String, String>) in.readGenericValue();, +            routing = in.readOptionalString();, +            version = in.readLong();, +            versionType = VersionType.readVersionTypeFrom(in);, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            out.writeOptionalString(index);, +            out.writeOptionalString(type);, +            out.writeBoolean(doc != null);, +            if (doc != null) {, +                out.writeGenericValue(doc);, +            } else {, +                out.writeString(id);, +            }, +            out.writeOptionalStringArray(fields);, +            out.writeGenericValue(perFieldAnalyzer);, +            out.writeOptionalString(routing);, +            out.writeLong(version);, +            versionType.writeTo(out);, +        }, +, +            items[i] = new Item(in);, +++ b/core/src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java, +        /**, +         * Read from a stream., +         */, +        Item(StreamInput in) throws IOException {, +            index = in.readOptionalString();, +            type = in.readOptionalString();, +            if (in.readBoolean()) {, +                doc = (BytesReference) in.readGenericValue();, +            } else {, +                id = in.readString();, +            }, +            fields = in.readOptionalStringArray();, +            perFieldAnalyzer = (Map<String, String>) in.readGenericValue();, +            routing = in.readOptionalString();, +            version = in.readLong();, +            versionType = VersionType.readVersionTypeFrom(in);, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            out.writeOptionalString(index);, +            out.writeOptionalString(type);, +            out.writeBoolean(doc != null);, +            if (doc != null) {, +                out.writeGenericValue(doc);, +            } else {, +                out.writeString(id);, +            }, +            out.writeOptionalStringArray(fields);, +            out.writeGenericValue(perFieldAnalyzer);, +            out.writeOptionalString(routing);, +            out.writeLong(version);, +            versionType.writeTo(out);, +        }, +, +            items[i] = new Item(in);, +++ b/core/src/test/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilderTests.java, +        Item newItem = new Item(StreamInput.wrap(output.bytes()));]