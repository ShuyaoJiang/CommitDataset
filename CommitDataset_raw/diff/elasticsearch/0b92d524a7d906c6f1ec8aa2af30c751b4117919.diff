[+++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/PrecisionAtN.java, + * By default documents with a rating equal or bigger than 1 are considered to be "relevant" for the precision, + * calculation. This value can be changes using the "relevant_rating_threshold" parameter., +    /** ratings equal or above this value will be considered relevant. */, +    private int relevantRatingThreshhold = 1;, +, +    private static final ParseField SIZE_FIELD = new ParseField("size");, +    private static final ParseField RELEVANT_RATING_FIELD = new ParseField("relevant_rating_threshold");, +    private static final ConstructingObjectParser<PrecisionAtN, ParseFieldMatcherSupplier> PARSER = new ConstructingObjectParser<>(, +            "precision_at", a -> new PrecisionAtN((Integer) a[0]));, +, +    static {, +        PARSER.declareInt(ConstructingObjectParser.constructorArg(), SIZE_FIELD);, +        PARSER.declareInt(PrecisionAtN::setRelevantRatingThreshhold, RELEVANT_RATING_FIELD);, +    }, +, +    /**, +     * Sets the rating threshold above which ratings are considered to be "relevant" for this metric., +     * */, +    public void setRelevantRatingThreshhold(int threshold) {, +        this.relevantRatingThreshhold = threshold;, +    }, +    /**, +     * Return the rating threshold above which ratings are considered to be "relevant" for this metric., +     * Defaults to 1., +     * */, +    public int getRelevantRatingThreshold() {, +        return relevantRatingThreshhold ;, +            if (doc.getRating() >= this.relevantRatingThreshhold) {, +            } else {, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/PrecisionAtN.java, + * By default documents with a rating equal or bigger than 1 are considered to be "relevant" for the precision, + * calculation. This value can be changes using the "relevant_rating_threshold" parameter., +    /** ratings equal or above this value will be considered relevant. */, +    private int relevantRatingThreshhold = 1;, +, +    private static final ParseField SIZE_FIELD = new ParseField("size");, +    private static final ParseField RELEVANT_RATING_FIELD = new ParseField("relevant_rating_threshold");, +    private static final ConstructingObjectParser<PrecisionAtN, ParseFieldMatcherSupplier> PARSER = new ConstructingObjectParser<>(, +            "precision_at", a -> new PrecisionAtN((Integer) a[0]));, +, +    static {, +        PARSER.declareInt(ConstructingObjectParser.constructorArg(), SIZE_FIELD);, +        PARSER.declareInt(PrecisionAtN::setRelevantRatingThreshhold, RELEVANT_RATING_FIELD);, +    }, +, +    /**, +     * Sets the rating threshold above which ratings are considered to be "relevant" for this metric., +     * */, +    public void setRelevantRatingThreshhold(int threshold) {, +        this.relevantRatingThreshhold = threshold;, +    }, +    /**, +     * Return the rating threshold above which ratings are considered to be "relevant" for this metric., +     * Defaults to 1., +     * */, +    public int getRelevantRatingThreshold() {, +        return relevantRatingThreshhold ;, +            if (doc.getRating() >= this.relevantRatingThreshhold) {, +            } else {, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/ReciprocalRank.java, + * By default documents with a rating equal or bigger than 1 are considered to be "relevant" for the reciprocal rank, + * calculation. This value can be changes using the "relevant_rating_threshold" parameter., +    /** ratings equal or above this value will be considered relevant. */, +    private int relevantRatingThreshhold = 1;, +, +     * Sets the rating threshold above which ratings are considered to be "relevant" for this metric., +     * */, +    public void setRelevantRatingThreshhold(int threshold) {, +        this.relevantRatingThreshhold = threshold;, +    }, +, +    /**, +     * Return the rating threshold above which ratings are considered to be "relevant" for this metric., +     * Defaults to 1., +     * */, +    public int getRelevantRatingThreshold() {, +        return relevantRatingThreshhold ;, +    }, +, +    /**, +            if (doc.getRating() >= this.relevantRatingThreshhold) {, +            } else {, +            RatedDocumentKey key = new RatedDocumentKey(hits[i].getIndex(), hits[i].getType(), hits[i].getId());, +            if (relevantDocIds.contains(key)) {, +                    firstRelevant = i + 1; // add one because rank is not 0-based, +                unknownDocIds.add(key);, +    private static final ParseField RELEVANT_RATING_FIELD = new ParseField("relevant_rating_threshold");, +        PARSER.declareInt(ReciprocalRank::setRelevantRatingThreshhold, RELEVANT_RATING_FIELD);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/PrecisionAtN.java, + * By default documents with a rating equal or bigger than 1 are considered to be "relevant" for the precision, + * calculation. This value can be changes using the "relevant_rating_threshold" parameter., +    /** ratings equal or above this value will be considered relevant. */, +    private int relevantRatingThreshhold = 1;, +, +    private static final ParseField SIZE_FIELD = new ParseField("size");, +    private static final ParseField RELEVANT_RATING_FIELD = new ParseField("relevant_rating_threshold");, +    private static final ConstructingObjectParser<PrecisionAtN, ParseFieldMatcherSupplier> PARSER = new ConstructingObjectParser<>(, +            "precision_at", a -> new PrecisionAtN((Integer) a[0]));, +]