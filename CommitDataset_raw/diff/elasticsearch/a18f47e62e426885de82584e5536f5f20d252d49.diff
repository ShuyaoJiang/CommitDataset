[+++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +, +    boolean isSortable();, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +, +    boolean isSortable();, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    @Override, +    public boolean isSortable() {, +        return true;, +    }, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +, +    boolean isSortable();, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    @Override, +    public boolean isSortable() {, +        return true;, +    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java, +    @Override, +    public boolean isSortable() {, +        return false;, +    }, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +, +    boolean isSortable();, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    @Override, +    public boolean isSortable() {, +        return true;, +    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java, +    @Override, +    public boolean isSortable() {, +        return false;, +    }, +++ b/src/main/java/org/elasticsearch/search/sort/SortParseElement.java, +import org.elasticsearch.index.mapper.core.CompletionFieldMapper;, +            if (!fieldMapper.isSortable()) {, +                throw new SearchParseException(context, "Sorting not supported for field[" + fieldName + "]");, +            }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +, +    boolean isSortable();, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    @Override, +    public boolean isSortable() {, +        return true;, +    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java, +    @Override, +    public boolean isSortable() {, +        return false;, +    }, +++ b/src/main/java/org/elasticsearch/search/sort/SortParseElement.java, +import org.elasticsearch.index.mapper.core.CompletionFieldMapper;, +            if (!fieldMapper.isSortable()) {, +                throw new SearchParseException(context, "Sorting not supported for field[" + fieldName + "]");, +            }, +, +++ b/src/test/java/org/elasticsearch/search/suggest/CompletionSuggestSearchTests.java, +import org.elasticsearch.action.search.SearchPhaseExecutionException;, +import org.elasticsearch.search.sort.FieldSortBuilder;, +    @Test, +    public void testThatSortingOnCompletionFieldReturnsUsefulException() throws Exception {, +        createIndexAndMapping();, +, +        client().prepareIndex(INDEX, TYPE, "1").setSource(jsonBuilder(), +                .startObject().startObject(FIELD), +                .startArray("input").value("Nirvana").endArray(), +                .endObject().endObject(), +        ).get();, +, +        refresh();, +        try {, +            client().prepareSearch(INDEX).setTypes(TYPE).addSort(new FieldSortBuilder(FIELD)).execute().actionGet();, +            fail("Expected an exception due to trying to sort on completion field, but did not happen");, +        } catch (SearchPhaseExecutionException e) {, +            assertThat(e.status().getStatus(), is(400));, +            assertThat(e.getMessage(), containsString("Sorting not supported for field[" + FIELD + "]"));, +        }, +    }, +, +]