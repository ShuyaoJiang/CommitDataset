[+++ b/src/main/java/org/elasticsearch/common/io/stream/CachedStreamOutput.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +import org.elasticsearch.monitor.jvm.JvmInfo;, +    public static int COUNT_LIMIT = 100; // number of concurrent entries cached, +, +    static {, +        // guess the maximum size per entry and the maximum number of entries based on the heap size, +        long maxHeap = JvmInfo.jvmInfo().mem().heapMax().bytes();, +        if (maxHeap < ByteSizeValue.parseBytesSizeValue("500mb").bytes()) {, +            BYTES_LIMIT = (int) ByteSizeValue.parseBytesSizeValue("500kb").bytes();, +            COUNT_LIMIT = 10;, +        } else if (maxHeap < ByteSizeValue.parseBytesSizeValue("1gb").bytes()) {, +            BYTES_LIMIT = (int) ByteSizeValue.parseBytesSizeValue("1mb").bytes();, +            COUNT_LIMIT = 20;, +        } else if (maxHeap < ByteSizeValue.parseBytesSizeValue("4gb").bytes()) {, +            BYTES_LIMIT = (int) ByteSizeValue.parseBytesSizeValue("2mb").bytes();, +            COUNT_LIMIT = 50;, +        } else if (maxHeap < ByteSizeValue.parseBytesSizeValue("10gb").bytes()) {, +            BYTES_LIMIT = (int) ByteSizeValue.parseBytesSizeValue("5mb").bytes();, +            COUNT_LIMIT = 50;, +        } else {, +            BYTES_LIMIT = (int) ByteSizeValue.parseBytesSizeValue("10mb").bytes();, +            COUNT_LIMIT = 100;, +        }, +    }]