[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterChangedEvent.java, + * @author kimchy (shay.banon), +    public ClusterChangedEvent(String source, ClusterState state, ClusterState previousState) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterChangedEvent.java, + * @author kimchy (shay.banon), +    public ClusterChangedEvent(String source, ClusterState state, ClusterState previousState) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterState.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterChangedEvent.java, + * @author kimchy (shay.banon), +    public ClusterChangedEvent(String source, ClusterState state, ClusterState previousState) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterState.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +    private final boolean recoveredFromGateway;, +    private MetaData(ImmutableMap<String, IndexMetaData> indices, boolean recoveredFromGateway, int maxNumberOfShardsPerNode) {, +        this.recoveredFromGateway = recoveredFromGateway;, +    /**, +     * Has the cluster state been recovered from the gateway., +     */, +    public boolean recoveredFromGateway() {, +        return this.recoveredFromGateway;, +    }, +, +        private boolean recoveredFromGateway = false;, +, +            this.indices.putAll(metaData.indices);, +            this.recoveredFromGateway = metaData.recoveredFromGateway();, +        /**, +         * Indicates that this cluster state has been recovered from the gateawy., +         */, +        public Builder markAsRecoveredFromGateway() {, +            this.recoveredFromGateway = true;, +            return this;, +        }, +, +            return new MetaData(indices.immutableMap(), recoveredFromGateway, maxNumberOfShardsPerNode);, +            // we only serialize it using readFrom, not in to/from XContent, +            builder.recoveredFromGateway = in.readBoolean();, +            out.writeBoolean(metaData.recoveredFromGateway());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterChangedEvent.java, + * @author kimchy (shay.banon), +    public ClusterChangedEvent(String source, ClusterState state, ClusterState previousState) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterState.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +    private final boolean recoveredFromGateway;, +    private MetaData(ImmutableMap<String, IndexMetaData> indices, boolean recoveredFromGateway, int maxNumberOfShardsPerNode) {, +        this.recoveredFromGateway = recoveredFromGateway;, +    /**, +     * Has the cluster state been recovered from the gateway., +     */, +    public boolean recoveredFromGateway() {, +        return this.recoveredFromGateway;, +    }, +, +        private boolean recoveredFromGateway = false;, +, +            this.indices.putAll(metaData.indices);, +            this.recoveredFromGateway = metaData.recoveredFromGateway();, +        /**, +         * Indicates that this cluster state has been recovered from the gateawy., +         */, +        public Builder markAsRecoveredFromGateway() {, +            this.recoveredFromGateway = true;, +            return this;, +        }, +, +            return new MetaData(indices.immutableMap(), recoveredFromGateway, maxNumberOfShardsPerNode);, +            // we only serialize it using readFrom, not in to/from XContent, +            builder.recoveredFromGateway = in.readBoolean();, +            out.writeBoolean(metaData.recoveredFromGateway());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +                    ClusterChangedEvent clusterChangedEvent = new ClusterChangedEvent(source, clusterState, previousClusterState);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterChangedEvent.java, + * @author kimchy (shay.banon), +    public ClusterChangedEvent(String source, ClusterState state, ClusterState previousState) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterState.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +    private final boolean recoveredFromGateway;, +    private MetaData(ImmutableMap<String, IndexMetaData> indices, boolean recoveredFromGateway, int maxNumberOfShardsPerNode) {, +        this.recoveredFromGateway = recoveredFromGateway;, +    /**, +     * Has the cluster state been recovered from the gateway., +     */, +    public boolean recoveredFromGateway() {, +        return this.recoveredFromGateway;, +    }, +, +        private boolean recoveredFromGateway = false;, +, +            this.indices.putAll(metaData.indices);, +            this.recoveredFromGateway = metaData.recoveredFromGateway();, +        /**, +         * Indicates that this cluster state has been recovered from the gateawy., +         */, +        public Builder markAsRecoveredFromGateway() {, +            this.recoveredFromGateway = true;, +            return this;]