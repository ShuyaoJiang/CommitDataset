[+++ b/core/src/main/java/org/elasticsearch/index/store/IndexStoreConfig.java, + * For instance it maintains the node level rate limiter configuration: updates to the cluster that disable or enable, +++ b/core/src/main/java/org/elasticsearch/index/store/IndexStoreConfig.java, + * For instance it maintains the node level rate limiter configuration: updates to the cluster that disable or enable, +++ b/core/src/test/java/org/elasticsearch/cluster/settings/ClusterSettingsIT.java, +import org.elasticsearch.index.store.IndexStoreConfig;, +        String key1 = IndexStoreConfig.INDICES_STORE_THROTTLE_MAX_BYTES_PER_SEC;, +++ b/core/src/main/java/org/elasticsearch/index/store/IndexStoreConfig.java, + * For instance it maintains the node level rate limiter configuration: updates to the cluster that disable or enable, +++ b/core/src/test/java/org/elasticsearch/cluster/settings/ClusterSettingsIT.java, +import org.elasticsearch.index.store.IndexStoreConfig;, +        String key1 = IndexStoreConfig.INDICES_STORE_THROTTLE_MAX_BYTES_PER_SEC;, +++ b/core/src/test/java/org/elasticsearch/test/InternalTestCluster.java, +import org.elasticsearch.index.store.IndexStoreConfig;, +                builder.put(IndexStoreConfig.INDICES_STORE_THROTTLE_MAX_BYTES_PER_SEC, new ByteSizeValue(RandomInts.randomIntBetween(random, 1, 10), ByteSizeUnit.MB));, +                builder.put(IndexStoreConfig.INDICES_STORE_THROTTLE_MAX_BYTES_PER_SEC, new ByteSizeValue(RandomInts.randomIntBetween(random, 10, 200), ByteSizeUnit.MB));, +            builder.put(IndexStoreConfig.INDICES_STORE_THROTTLE_TYPE, RandomPicks.randomFrom(random, StoreRateLimiting.Type.values()));]