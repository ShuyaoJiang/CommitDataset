[+++ b/client/rest-high-level/build.gradle, +  signaturesURLs += [file('src/main/resources/forbidden/rest-high-level-signatures.txt').toURI().toURL()], +++ b/client/rest-high-level/build.gradle, +  signaturesURLs += [file('src/main/resources/forbidden/rest-high-level-signatures.txt').toURI().toURL()], +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java, +import org.elasticsearch.common.SuppressForbidden;, +import java.nio.charset.Charset;, +        final byte separator = bulkContentType.xContent().streamSeparator();, +        final ContentType requestContentType = createContentType(bulkContentType);, +        ContentType contentType = createContentType(indexRequest.getContentType());, +        return new ByteArrayEntity(source.bytes, source.offset, source.length, createContentType(xContentType));, +     * Returns a {@link ContentType} from a given {@link XContentType}., +     *, +     * @param xContentType the {@link XContentType}, +     * @return the {@link ContentType}, +     */, +    @SuppressForbidden(reason = "Only allowed place to convert a XContentType to a ContentType"), +    static ContentType createContentType(final XContentType xContentType) {, +        return ContentType.create(xContentType.mediaTypeWithoutParameters(), (Charset) null);, +    }, +, +    /**, +++ b/client/rest-high-level/build.gradle, +  signaturesURLs += [file('src/main/resources/forbidden/rest-high-level-signatures.txt').toURI().toURL()], +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java, +import org.elasticsearch.common.SuppressForbidden;, +import java.nio.charset.Charset;, +        final byte separator = bulkContentType.xContent().streamSeparator();, +        final ContentType requestContentType = createContentType(bulkContentType);, +        ContentType contentType = createContentType(indexRequest.getContentType());, +        return new ByteArrayEntity(source.bytes, source.offset, source.length, createContentType(xContentType));, +     * Returns a {@link ContentType} from a given {@link XContentType}., +     *, +     * @param xContentType the {@link XContentType}, +     * @return the {@link ContentType}, +     */, +    @SuppressForbidden(reason = "Only allowed place to convert a XContentType to a ContentType"), +    static ContentType createContentType(final XContentType xContentType) {, +        return ContentType.create(xContentType.mediaTypeWithoutParameters(), (Charset) null);, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/resources/forbidden/rest-high-level-signatures.txt, +# Licensed to Elasticsearch under one or more contributor, +# license agreements. See the NOTICE file distributed with, +# this work for additional information regarding copyright, +# ownership. Elasticsearch licenses this file to you under, +# the Apache License, Version 2.0 (the "License"); you may, +# not use this file except in compliance  with the License., +# You may obtain a copy of the License at, +#, +#     http://www.apache.org/licenses/LICENSE-2.0, +#, +# Unless required by applicable law or agreed to in writing,, +# software distributed under the License is distributed on, +# an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,, +# either express or implied. See the License for the specific, +# language governing permissions and limitations under the License., +, +@defaultMessage Use Request#createContentType(XContentType) to be sure to pass the right MIME type, +org.apache.http.entity.ContentType#create(java.lang.String), +org.apache.http.entity.ContentType#create(java.lang.String,java.lang.String), +org.apache.http.entity.ContentType#create(java.lang.String,java.nio.charset.Charset), +org.apache.http.entity.ContentType#create(java.lang.String,org.apache.http.NameValuePair[]), +++ b/client/rest-high-level/build.gradle, +  signaturesURLs += [file('src/main/resources/forbidden/rest-high-level-signatures.txt').toURI().toURL()], +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java, +import org.elasticsearch.common.SuppressForbidden;, +import java.nio.charset.Charset;, +        final byte separator = bulkContentType.xContent().streamSeparator();, +        final ContentType requestContentType = createContentType(bulkContentType);, +        ContentType contentType = createContentType(indexRequest.getContentType());, +        return new ByteArrayEntity(source.bytes, source.offset, source.length, createContentType(xContentType));, +     * Returns a {@link ContentType} from a given {@link XContentType}., +     *, +     * @param xContentType the {@link XContentType}, +     * @return the {@link ContentType}, +     */, +    @SuppressForbidden(reason = "Only allowed place to convert a XContentType to a ContentType"), +    static ContentType createContentType(final XContentType xContentType) {, +        return ContentType.create(xContentType.mediaTypeWithoutParameters(), (Charset) null);, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/resources/forbidden/rest-high-level-signatures.txt, +# Licensed to Elasticsearch under one or more contributor, +# license agreements. See the NOTICE file distributed with, +# this work for additional information regarding copyright, +# ownership. Elasticsearch licenses this file to you under, +# the Apache License, Version 2.0 (the "License"); you may, +# not use this file except in compliance  with the License., +# You may obtain a copy of the License at, +#, +#     http://www.apache.org/licenses/LICENSE-2.0, +#, +# Unless required by applicable law or agreed to in writing,, +# software distributed under the License is distributed on, +# an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,, +# either express or implied. See the License for the specific, +# language governing permissions and limitations under the License.]