[+++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_1_6_0 = new Version(V_1_6_0_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_1_6_0 = new Version(V_1_6_0_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +++ b/core/src/main/java/org/elasticsearch/common/component/AbstractComponent.java, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_1_6_0 = new Version(V_1_6_0_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +++ b/core/src/main/java/org/elasticsearch/common/component/AbstractComponent.java, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_1_6_0 = new Version(V_1_6_0_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +++ b/core/src/main/java/org/elasticsearch/common/component/AbstractComponent.java, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +            // TODO: passing null to an object seems bogus?, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_1_6_0 = new Version(V_1_6_0_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +++ b/core/src/main/java/org/elasticsearch/common/component/AbstractComponent.java, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +            // TODO: passing null to an object seems bogus?, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_1_6_0 = new Version(V_1_6_0_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +++ b/core/src/main/java/org/elasticsearch/common/component/AbstractComponent.java, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +            // TODO: passing null to an object seems bogus?, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +import org.apache.lucene.search.ConstantScoreQuery;, +    private Object nullValue;, +    private String nullValueAsString; // for sending null value to _all field, +        this.nullValue = ref.nullValue();, +        this.nullValueAsString = ref.nullValueAsString();, +    /** Returns the value that should be added when JSON null is found, or null if no value should be added */, +    public Object nullValue() {, +        return nullValue;, +    }, +, +    /** Returns the null value stringified, so it can be used for e.g. _all field, or null if there is no null value */, +    public String nullValueAsString() {, +        return nullValueAsString;, +    }, +, +    /** Sets the null value and initializes the string version */, +    public void setNullValue(Object nullValue) {, +        checkIfFrozen();, +        this.nullValue = nullValue;, +        this.nullValueAsString = nullValue == null ? null : nullValue.toString();, +    }, +, +    public Query nullValueQuery() {, +        if (nullValue == null) {, +            return null;, +        }, +        return new ConstantScoreQuery(termQuery(nullValue, null));, +    }, +, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_1_6_0 = new Version(V_1_6_0_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +++ b/core/src/main/java/org/elasticsearch/common/component/AbstractComponent.java, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +            // TODO: passing null to an object seems bogus?, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +import org.apache.lucene.search.ConstantScoreQuery;, +    private Object nullValue;, +    private String nullValueAsString; // for sending null value to _all field, +        this.nullValue = ref.nullValue();, +        this.nullValueAsString = ref.nullValueAsString();, +    /** Returns the value that should be added when JSON null is found, or null if no value should be added */, +    public Object nullValue() {, +        return nullValue;, +    }, +, +    /** Returns the null value stringified, so it can be used for e.g. _all field, or null if there is no null value */, +    public String nullValueAsString() {, +        return nullValueAsString;, +    }, +, +    /** Sets the null value and initializes the string version */, +    public void setNullValue(Object nullValue) {, +        checkIfFrozen();, +        this.nullValue = nullValue;, +        this.nullValueAsString = nullValue == null ? null : nullValue.toString();, +    }, +, +    public Query nullValueQuery() {, +        if (nullValue == null) {, +            return null;, +        }, +        return new ConstantScoreQuery(termQuery(nullValue, null));, +    }, +, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +        public Builder nullValue(Object nullValue) {, +            this.fieldType.setNullValue(nullValue);, +            return this;]