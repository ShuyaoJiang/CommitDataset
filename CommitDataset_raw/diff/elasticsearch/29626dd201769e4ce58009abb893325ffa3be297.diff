[+++ b/src/main/java/org/elasticsearch/action/percolate/MultiPercolateRequest.java, +import java.util.HashMap;, +import java.util.Map;, +                        } else if ("count".equals(percolateAction)) {, +        String globalIndex = indices != null && indices.length > 0 ? indices[0] : null;, +, +        Map<String, Object> header = new HashMap<String, Object>();, +, +                header.put(currentFieldName, parser.text());, +                header.put(currentFieldName, parseArray(parser));, +        if (header.containsKey("id")) {, +            for (Map.Entry<String, Object> entry : header.entrySet()) {, +                Object value = entry.getValue();, +                if ("id".equals(entry.getKey())) {, +                    getRequest.id((String) value);, +                    header.put("id", entry.getValue());, +                } else if ("index".equals(entry.getKey()) || "indices".equals(entry.getKey())) {, +                    getRequest.index((String) value);, +                } else if ("type".equals(entry.getKey())) {, +                    getRequest.type((String) value);, +                } else if ("preference".equals(entry.getKey())) {, +                    getRequest.preference((String) value);, +                } else if ("routing".equals(entry.getKey())) {, +                    getRequest.routing((String) value);, +                } else if ("percolate_index".equals(entry.getKey()) || "percolate_indices".equals(entry.getKey()) || "percolateIndex".equals(entry.getKey()) || "percolateIndices".equals(entry.getKey())) {, +                    if (value instanceof String[]) {, +                        percolateRequest.indices((String[]) value);, +                        percolateRequest.indices(Strings.splitStringByCommaToArray((String) value));, +                    }, +                } else if ("percolate_type".equals(entry.getKey()) || "percolateType".equals(entry.getKey())) {, +                    percolateRequest.documentType((String) value);, +                } else if ("percolate_preference".equals(entry.getKey()) || "percolatePreference".equals(entry.getKey())) {, +                    percolateRequest.preference((String) value);, +                } else if ("percolate_routing".equals(entry.getKey()) || "percolateRouting".equals(entry.getKey())) {, +                    percolateRequest.routing((String) value);, +                } else if ("ignore_indices".equals(entry.getKey()) || "ignoreIndices".equals(entry.getKey())) {, +                    percolateRequest.ignoreIndices(IgnoreIndices.fromString((String) value));, +                }, +            }, +        } else {, +            for (Map.Entry<String, Object> entry : header.entrySet()) {, +                Object value = entry.getValue();, +                if ("index".equals(entry.getKey()) || "indices".equals(entry.getKey())) {, +                    if (value instanceof String[]) {, +                        percolateRequest.indices((String[]) value);, +                    } else {, +                        percolateRequest.indices(Strings.splitStringByCommaToArray((String) value));, +                    }, +                } else if ("type".equals(entry.getKey())) {, +                    percolateRequest.documentType((String) value);, +                } else if ("preference".equals(entry.getKey())) {, +                    percolateRequest.preference((String) value);, +                } else if ("routing".equals(entry.getKey())) {, +                    percolateRequest.routing((String) value);, +                } else if ("ignore_indices".equals(entry.getKey()) || "ignoreIndices".equals(entry.getKey())) {, +                    percolateRequest.ignoreIndices(IgnoreIndices.fromString((String) value));, +++ b/src/main/java/org/elasticsearch/action/percolate/MultiPercolateRequest.java, +import java.util.HashMap;, +import java.util.Map;, +                        } else if ("count".equals(percolateAction)) {, +        String globalIndex = indices != null && indices.length > 0 ? indices[0] : null;, +, +        Map<String, Object> header = new HashMap<String, Object>();, +, +                header.put(currentFieldName, parser.text());, +                header.put(currentFieldName, parseArray(parser));, +        if (header.containsKey("id")) {, +            for (Map.Entry<String, Object> entry : header.entrySet()) {, +                Object value = entry.getValue();, +                if ("id".equals(entry.getKey())) {, +                    getRequest.id((String) value);, +                    header.put("id", entry.getValue());, +                } else if ("index".equals(entry.getKey()) || "indices".equals(entry.getKey())) {, +                    getRequest.index((String) value);, +                } else if ("type".equals(entry.getKey())) {, +                    getRequest.type((String) value);, +                } else if ("preference".equals(entry.getKey())) {, +                    getRequest.preference((String) value);, +                } else if ("routing".equals(entry.getKey())) {, +                    getRequest.routing((String) value);, +                } else if ("percolate_index".equals(entry.getKey()) || "percolate_indices".equals(entry.getKey()) || "percolateIndex".equals(entry.getKey()) || "percolateIndices".equals(entry.getKey())) {, +                    if (value instanceof String[]) {, +                        percolateRequest.indices((String[]) value);, +                        percolateRequest.indices(Strings.splitStringByCommaToArray((String) value));, +                    }, +                } else if ("percolate_type".equals(entry.getKey()) || "percolateType".equals(entry.getKey())) {, +                    percolateRequest.documentType((String) value);, +                } else if ("percolate_preference".equals(entry.getKey()) || "percolatePreference".equals(entry.getKey())) {, +                    percolateRequest.preference((String) value);, +                } else if ("percolate_routing".equals(entry.getKey()) || "percolateRouting".equals(entry.getKey())) {, +                    percolateRequest.routing((String) value);, +                } else if ("ignore_indices".equals(entry.getKey()) || "ignoreIndices".equals(entry.getKey())) {, +                    percolateRequest.ignoreIndices(IgnoreIndices.fromString((String) value));, +                }, +            }, +        } else {, +            for (Map.Entry<String, Object> entry : header.entrySet()) {, +                Object value = entry.getValue();, +                if ("index".equals(entry.getKey()) || "indices".equals(entry.getKey())) {, +                    if (value instanceof String[]) {]