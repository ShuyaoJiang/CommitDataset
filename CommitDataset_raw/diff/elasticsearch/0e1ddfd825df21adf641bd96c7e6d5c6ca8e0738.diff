[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +                    new IndexRequest("index", "_doc", docId).source(Collections.singletonMap("foo", "bar")), RequestOptions.DEFAULT);, +            DeleteRequest deleteRequest = new DeleteRequest("index", docId);, +            assertEquals("_doc", deleteResponse.getType());, +            DeleteRequest deleteRequest = new DeleteRequest("index", docId);, +            assertEquals("_doc", deleteResponse.getType());, +                    new IndexRequest("index", "_doc", docId).source(Collections.singletonMap("foo", "bar")), RequestOptions.DEFAULT);, +            DeleteRequest deleteRequest = new DeleteRequest("index", docId).version(2);, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[_doc][" + docId + "]: " +, +                    new IndexRequest("index", "_doc", docId).source(Collections.singletonMap("foo", "bar")), +            DeleteRequest deleteRequest = new DeleteRequest("index",  docId).versionType(VersionType.EXTERNAL).version(13);, +            assertEquals("_doc", deleteResponse.getType());, +                    new IndexRequest("index", "_doc", docId).source(Collections.singletonMap("foo", "bar")), +                DeleteRequest deleteRequest = new DeleteRequest("index",  docId).versionType(VersionType.EXTERNAL).version(10);, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[_doc][" +, +            highLevelClient().index(new IndexRequest("index", "_doc", docId).source(Collections.singletonMap("foo", "bar")).routing("foo"),, +            DeleteRequest deleteRequest = new DeleteRequest("index",  docId).routing("foo");, +            assertEquals("_doc", deleteResponse.getType());, +            GetRequest getRequest = new GetRequest("index", "_doc", "id");, +        IndexRequest index = new IndexRequest("index", "_doc", "id");, +            GetRequest getRequest = new GetRequest("index", "_doc", "id");, +            GetRequest getRequest = new GetRequest("index", "_doc", "does_not_exist");, +            GetRequest getRequest = new GetRequest("index", "_doc", "does_not_exist").version(1);, +            GetRequest getRequest = new GetRequest("index", "_doc", "id");, +        IndexRequest index = new IndexRequest("index", "_doc", "id");, +            GetRequest getRequest = new GetRequest("index", "_doc", "id");, +            GetRequest getRequest = new GetRequest("index", "_doc", "does_not_exist");, +            GetRequest getRequest = new GetRequest("index", "_doc", "does_not_exist").version(1);, +            GetRequest getRequest = new GetRequest("index", "_doc", "id");, +        IndexRequest index = new IndexRequest("index", "_doc", "id");, +            GetRequest getRequest = new GetRequest("index", "_doc", "id").version(2);, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, " + "reason=[_doc][id]: " +, +            GetRequest getRequest = new GetRequest("index", "_doc", "id");, +            assertEquals("_doc", getResponse.getType());, +            GetRequest getRequest = new GetRequest("index", "_doc", "does_not_exist");, +            assertEquals("_doc", getResponse.getType());, +            GetRequest getRequest = new GetRequest("index", "_doc", "id");, +            assertEquals("_doc", getResponse.getType());, +            GetRequest getRequest = new GetRequest("index", "_doc", "id");, +            assertEquals("_doc", getResponse.getType());, +            multiGetRequest.add("index", "_doc", "id1");, +            multiGetRequest.add("index", "_doc", "id2");, +            assertEquals("_doc", response.getResponses()[0].getFailure().getType());, +            assertEquals("_doc", response.getResponses()[1].getType());, +        IndexRequest index = new IndexRequest("index", "_doc", "id1");, +        index = new IndexRequest("index", "_doc", "id2");, +            multiGetRequest.add("index", "_doc", "id1");, +            multiGetRequest.add("index", "_doc", "id2");, +            assertEquals("_doc", response.getResponses()[0].getType());, +            assertEquals("_doc", response.getResponses()[1].getType());, +            IndexRequest indexRequest = new IndexRequest("index", "_doc");, +            assertEquals("_doc", indexResponse.getType());, +            IndexRequest indexRequest = new IndexRequest("index", "_doc", "id");, +            assertEquals("_doc", indexResponse.getType());, +            indexRequest = new IndexRequest("index", "_doc", "id");, +            assertEquals("_doc", indexResponse.getType());, +                IndexRequest wrongRequest = new IndexRequest("index", "_doc", "id");, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[_doc][id]: " +, +                IndexRequest indexRequest = new IndexRequest("index", "_doc", "missing_pipeline");, +            IndexRequest indexRequest = new IndexRequest("index", "_doc", "external_version_type");, +            assertEquals("_doc", indexResponse.getType());, +            final IndexRequest indexRequest = new IndexRequest("index", "_doc", "with_create_op_type");, +            assertEquals("_doc", indexResponse.getType());, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[_doc][with_create_op_type]: " +, +            UpdateRequest updateRequest = new UpdateRequest("index", "_doc", "does_not_exist");, +            assertEquals("Elasticsearch exception [type=document_missing_exception, reason=[_doc][does_not_exist]: document missing]",, +            IndexRequest indexRequest = new IndexRequest("index", "_doc", "id");, +            UpdateRequest updateRequest = new UpdateRequest("index", "_doc", "id");, +            UpdateRequest updateRequestConflict = new UpdateRequest("index", "_doc", "id");, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[_doc][id]: version conflict, " +, +            IndexRequest indexRequest = new IndexRequest("index", "_doc", "with_script");, +            UpdateRequest updateRequest = new UpdateRequest("index", "_doc", "with_script");, +            IndexRequest indexRequest = new IndexRequest("index", "_doc", "with_doc");, +            UpdateRequest updateRequest = new UpdateRequest("index", "_doc", "with_doc");, +            IndexRequest indexRequest = new IndexRequest("index", "_doc", "noop");, +            UpdateRequest updateRequest = new UpdateRequest("index", "_doc", "noop");, +            UpdateRequest updateRequest = new UpdateRequest("index", "_doc", "with_upsert");, +            assertEquals("_doc", updateResponse.getType());, +            UpdateRequest updateRequest = new UpdateRequest("index", "_doc", "with_doc_as_upsert");, +            assertEquals("_doc", updateResponse.getType());, +            UpdateRequest updateRequest = new UpdateRequest("index", "_doc", "with_scripted_upsert");, +            assertEquals("_doc", updateResponse.getType());, +                UpdateRequest updateRequest = new UpdateRequest("index", "_doc", "id");, +                                    new IndexRequest("index", "_doc", id).source("field", -1), RequestOptions.DEFAULT).status());, +                DeleteRequest deleteRequest = new DeleteRequest("index", id);, +                    IndexRequest indexRequest = new IndexRequest("index", "_doc", id).source(source, xContentType);, +                    IndexRequest createRequest = new IndexRequest("index", "_doc", id).source(source, xContentType).create(true);, +                    UpdateRequest updateRequest = new UpdateRequest("index", "_doc", id), +                                        new IndexRequest("index", "_doc", id).source("field", -1), RequestOptions.DEFAULT).status());, +                        .add(new IndexRequest(sourceIndex, "_doc", "1"), +                        .add(new IndexRequest(sourceIndex, "_doc", "2"), +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1").types("_doc"));, +                (int) (highLevelClient().get(new GetRequest(sourceIndex, "_doc", "2"), RequestOptions.DEFAULT), +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1").types("_doc"));, +                        .add(new IndexRequest(sourceIndex, "_doc", "1"), +                        .add(new IndexRequest(sourceIndex, "_doc", "2"), +                        .add(new IndexRequest(sourceIndex, "_doc", "3"), +            deleteByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1").types("_doc"));, +            deleteByQueryRequest.setQuery(new IdsQueryBuilder().addIds("2", "3").types("_doc"));, +                                        new IndexRequest("index", "_doc", id).source("field", -1), RequestOptions.DEFAULT).status());]