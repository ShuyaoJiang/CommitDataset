[+++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        Query childrenConstantScoreQuery = new ChildrenConstantScoreQuery(query, parentType, childType, parentFilter, shortCircuitParentDocSet);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        Query childrenConstantScoreQuery = new ChildrenConstantScoreQuery(query, parentType, childType, parentFilter, shortCircuitParentDocSet);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            query = new ChildrenConstantScoreQuery(innerQuery, parentType, childType, parentFilter, shortCircuitParentDocSet);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        Query childrenConstantScoreQuery = new ChildrenConstantScoreQuery(query, parentType, childType, parentFilter, shortCircuitParentDocSet);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            query = new ChildrenConstantScoreQuery(innerQuery, parentType, childType, parentFilter, shortCircuitParentDocSet);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +        Query parentConstantScoreQuery = new ParentConstantScoreQuery(query, parentType, childrenFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        Query childrenConstantScoreQuery = new ChildrenConstantScoreQuery(query, parentType, childType, parentFilter, shortCircuitParentDocSet);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            query = new ChildrenConstantScoreQuery(innerQuery, parentType, childType, parentFilter, shortCircuitParentDocSet);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +        Query parentConstantScoreQuery = new ParentConstantScoreQuery(query, parentType, childrenFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +            query = new ParentConstantScoreQuery(innerQuery, parentType, childrenFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        Query childrenConstantScoreQuery = new ChildrenConstantScoreQuery(query, parentType, childType, parentFilter, shortCircuitParentDocSet);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            query = new ChildrenConstantScoreQuery(innerQuery, parentType, childType, parentFilter, shortCircuitParentDocSet);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +        Query parentConstantScoreQuery = new ParentConstantScoreQuery(query, parentType, childrenFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +            query = new ParentConstantScoreQuery(innerQuery, parentType, childrenFilter);, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQuery.java, +    public ChildrenConstantScoreQuery(Query childQuery, String parentType, String childType, Filter parentFilter, int shortCircuitParentDocSet) {, +                DocIdSet docIdSet = shortCircuitFilter.getDocIdSet(context, acceptDocs);, +                if (!DocIdSets.isEmpty(docIdSet)) {, +                    DocIdSetIterator iterator = docIdSet.iterator();, +                    if (iterator != null) {, +                        return ConstantScorer.create(iterator, this, queryWeight);, +                    }, +                }, +                return null;, +                DocIdSetIterator innerIterator = parentDocIdSet.iterator();, +                if (innerIterator != null) {, +                    ParentDocIdIterator parentDocIdIterator = new ParentDocIdIterator(innerIterator, collectedUids.v(), idReaderTypeCache);, +                    return ConstantScorer.create(parentDocIdIterator, this, queryWeight);, +            return null;, +        }, +        private final class ParentDocIdIterator extends FilteredDocIdSetIterator {, +            private ParentDocIdIterator(DocIdSetIterator innerIterator, ObjectOpenHashSet<HashedBytesArray> parents, IdReaderTypeCache typeCache) {, +                super(innerIterator);, +            protected boolean match(int doc) {, +                    try {, +                        advance(DocIdSetIterator.NO_MORE_DOCS);, +                    } catch (IOException e) {, +                        throw new RuntimeException(e);, +                    }, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        Query childrenConstantScoreQuery = new ChildrenConstantScoreQuery(query, parentType, childType, parentFilter, shortCircuitParentDocSet);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            query = new ChildrenConstantScoreQuery(innerQuery, parentType, childType, parentFilter, shortCircuitParentDocSet);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +        Query parentConstantScoreQuery = new ParentConstantScoreQuery(query, parentType, childrenFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +            query = new ParentConstantScoreQuery(innerQuery, parentType, childrenFilter);, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQuery.java, +    public ChildrenConstantScoreQuery(Query childQuery, String parentType, String childType, Filter parentFilter, int shortCircuitParentDocSet) {, +                DocIdSet docIdSet = shortCircuitFilter.getDocIdSet(context, acceptDocs);, +                if (!DocIdSets.isEmpty(docIdSet)) {, +                    DocIdSetIterator iterator = docIdSet.iterator();, +                    if (iterator != null) {, +                        return ConstantScorer.create(iterator, this, queryWeight);, +                    }, +                }, +                return null;, +                DocIdSetIterator innerIterator = parentDocIdSet.iterator();, +                if (innerIterator != null) {, +                    ParentDocIdIterator parentDocIdIterator = new ParentDocIdIterator(innerIterator, collectedUids.v(), idReaderTypeCache);, +                    return ConstantScorer.create(parentDocIdIterator, this, queryWeight);, +            return null;, +        }, +        private final class ParentDocIdIterator extends FilteredDocIdSetIterator {, +            private ParentDocIdIterator(DocIdSetIterator innerIterator, ObjectOpenHashSet<HashedBytesArray> parents, IdReaderTypeCache typeCache) {, +                super(innerIterator);, +            protected boolean match(int doc) {, +                    try {, +                        advance(DocIdSetIterator.NO_MORE_DOCS);, +                    } catch (IOException e) {, +                        throw new RuntimeException(e);, +                    }, +++ b/src/main/java/org/elasticsearch/index/search/child/ConstantScorer.java, +    static ConstantScorer create(DocIdSetIterator iterator, Weight weight, float constantScore) throws IOException {, +        return new ConstantScorer(iterator, weight, constantScore);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        Query childrenConstantScoreQuery = new ChildrenConstantScoreQuery(query, parentType, childType, parentFilter, shortCircuitParentDocSet);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            query = new ChildrenConstantScoreQuery(innerQuery, parentType, childType, parentFilter, shortCircuitParentDocSet);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +        Query parentConstantScoreQuery = new ParentConstantScoreQuery(query, parentType, childrenFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +            query = new ParentConstantScoreQuery(innerQuery, parentType, childrenFilter);, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQuery.java, +    public ChildrenConstantScoreQuery(Query childQuery, String parentType, String childType, Filter parentFilter, int shortCircuitParentDocSet) {, +                DocIdSet docIdSet = shortCircuitFilter.getDocIdSet(context, acceptDocs);]