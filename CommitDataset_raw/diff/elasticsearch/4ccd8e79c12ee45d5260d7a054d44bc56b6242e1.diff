[+++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_0_1_ID = 5000199;, +    public static final Version V_5_0_1 = new Version(V_5_0_1_ID, org.apache.lucene.util.Version.LUCENE_6_2_1);, +            case V_5_0_1_ID:, +                return V_5_0_1;, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_0_1_ID = 5000199;, +    public static final Version V_5_0_1 = new Version(V_5_0_1_ID, org.apache.lucene.util.Version.LUCENE_6_2_1);, +            case V_5_0_1_ID:, +                return V_5_0_1;, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_0_1_ID = 5000199;, +    public static final Version V_5_0_1 = new Version(V_5_0_1_ID, org.apache.lucene.util.Version.LUCENE_6_2_1);, +            case V_5_0_1_ID:, +                return V_5_0_1;, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version, Result result) {, +, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_0_1_ID = 5000199;, +    public static final Version V_5_0_1 = new Version(V_5_0_1_ID, org.apache.lucene.util.Version.LUCENE_6_2_1);, +            case V_5_0_1_ID:, +                return V_5_0_1;, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version, Result result) {, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_0_1_ID = 5000199;, +    public static final Version V_5_0_1 = new Version(V_5_0_1_ID, org.apache.lucene.util.Version.LUCENE_6_2_1);, +            case V_5_0_1_ID:, +                return V_5_0_1;, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version, Result result) {, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStatsResponse.java, +        final String level = params.param("level", "indices");, +        final boolean isLevelValid =, +            "cluster".equalsIgnoreCase(level) || "indices".equalsIgnoreCase(level) || "shards".equalsIgnoreCase(level);, +            throw new IllegalArgumentException("level parameter must be one of [cluster] or [indices] or [shards] but was [" + level + "]");, +, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_0_1_ID = 5000199;, +    public static final Version V_5_0_1 = new Version(V_5_0_1_ID, org.apache.lucene.util.Version.LUCENE_6_2_1);, +            case V_5_0_1_ID:, +                return V_5_0_1;, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version, Result result) {, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStatsResponse.java, +        final String level = params.param("level", "indices");, +        final boolean isLevelValid =, +            "cluster".equalsIgnoreCase(level) || "indices".equalsIgnoreCase(level) || "shards".equalsIgnoreCase(level);, +            throw new IllegalArgumentException("level parameter must be one of [cluster] or [indices] or [shards] but was [" + level + "]");, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java, +    public ShardStats(ShardRouting routing, ShardPath shardPath, CommonStats commonStats, CommitStats commitStats) {, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_0_1_ID = 5000199;, +    public static final Version V_5_0_1 = new Version(V_5_0_1_ID, org.apache.lucene.util.Version.LUCENE_6_2_1);, +            case V_5_0_1_ID:, +                return V_5_0_1;, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version, Result result) {, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStatsResponse.java, +        final String level = params.param("level", "indices");, +        final boolean isLevelValid =, +            "cluster".equalsIgnoreCase(level) || "indices".equalsIgnoreCase(level) || "shards".equalsIgnoreCase(level);, +            throw new IllegalArgumentException("level parameter must be one of [cluster] or [indices] or [shards] but was [" + level + "]");]