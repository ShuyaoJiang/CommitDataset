[+++ b/build.gradle, +    "org.elasticsearch.xpack.test:feature-aware:${version}": ':x-pack:test:feature-aware',, +    configurations.all { Configuration configuration ->, +      /*, +       * The featureAwarePlugin configuration has a dependency on x-pack:plugin:core and x-pack:plugin:core has a dependency on the, +       * featureAwarePlugin configuration. The below task ordering logic would force :x-pack:plugin:core:test, +       * :x-pack:test:feature-aware:test to depend on each other circularly. We break that cycle here., +       */, +      if (configuration.name == "featureAwarePlugin") {, +        return, +      }, +++ b/build.gradle, +    "org.elasticsearch.xpack.test:feature-aware:${version}": ':x-pack:test:feature-aware',, +    configurations.all { Configuration configuration ->, +      /*, +       * The featureAwarePlugin configuration has a dependency on x-pack:plugin:core and x-pack:plugin:core has a dependency on the, +       * featureAwarePlugin configuration. The below task ordering logic would force :x-pack:plugin:core:test, +       * :x-pack:test:feature-aware:test to depend on each other circularly. We break that cycle here., +       */, +      if (configuration.name == "featureAwarePlugin") {, +        return, +      }, +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final BreakIterator breakers[] = new BreakIterator[UScript.CODE_LIMIT];, +    private BreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/build.gradle, +    "org.elasticsearch.xpack.test:feature-aware:${version}": ':x-pack:test:feature-aware',, +    configurations.all { Configuration configuration ->, +      /*, +       * The featureAwarePlugin configuration has a dependency on x-pack:plugin:core and x-pack:plugin:core has a dependency on the, +       * featureAwarePlugin configuration. The below task ordering logic would force :x-pack:plugin:core:test, +       * :x-pack:test:feature-aware:test to depend on each other circularly. We break that cycle here., +       */, +      if (configuration.name == "featureAwarePlugin") {, +        return, +      }, +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final BreakIterator breakers[] = new BreakIterator[UScript.CODE_LIMIT];, +    private BreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/server/src/main/java/org/elasticsearch/Version.java, +    // The below version is missing from the 7.3 JAR, +    private static final org.apache.lucene.util.Version LUCENE_7_2_1 = org.apache.lucene.util.Version.fromBits(7, 2, 1);, +    public static final Version V_6_2_0 = new Version(V_6_2_0_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_1 = new Version(V_6_2_1_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_2 = new Version(V_6_2_2_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_3 = new Version(V_6_2_3_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_4 = new Version(V_6_2_4_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_5 = new Version(V_6_2_5_ID, LUCENE_7_2_1);, +++ b/build.gradle, +    "org.elasticsearch.xpack.test:feature-aware:${version}": ':x-pack:test:feature-aware',, +    configurations.all { Configuration configuration ->, +      /*, +       * The featureAwarePlugin configuration has a dependency on x-pack:plugin:core and x-pack:plugin:core has a dependency on the, +       * featureAwarePlugin configuration. The below task ordering logic would force :x-pack:plugin:core:test, +       * :x-pack:test:feature-aware:test to depend on each other circularly. We break that cycle here., +       */, +      if (configuration.name == "featureAwarePlugin") {, +        return, +      }, +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final BreakIterator breakers[] = new BreakIterator[UScript.CODE_LIMIT];, +    private BreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/server/src/main/java/org/elasticsearch/Version.java, +    // The below version is missing from the 7.3 JAR, +    private static final org.apache.lucene.util.Version LUCENE_7_2_1 = org.apache.lucene.util.Version.fromBits(7, 2, 1);, +    public static final Version V_6_2_0 = new Version(V_6_2_0_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_1 = new Version(V_6_2_1_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_2 = new Version(V_6_2_2_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_3 = new Version(V_6_2_3_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_4 = new Version(V_6_2_4_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_5 = new Version(V_6_2_5_ID, LUCENE_7_2_1);, +++ b/server/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +            numDocs += si.info.maxDoc() - si.getDelCount();, +++ b/build.gradle, +    "org.elasticsearch.xpack.test:feature-aware:${version}": ':x-pack:test:feature-aware',, +    configurations.all { Configuration configuration ->, +      /*, +       * The featureAwarePlugin configuration has a dependency on x-pack:plugin:core and x-pack:plugin:core has a dependency on the, +       * featureAwarePlugin configuration. The below task ordering logic would force :x-pack:plugin:core:test, +       * :x-pack:test:feature-aware:test to depend on each other circularly. We break that cycle here., +       */, +      if (configuration.name == "featureAwarePlugin") {, +        return, +      }, +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final BreakIterator breakers[] = new BreakIterator[UScript.CODE_LIMIT];, +    private BreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/server/src/main/java/org/elasticsearch/Version.java, +    // The below version is missing from the 7.3 JAR, +    private static final org.apache.lucene.util.Version LUCENE_7_2_1 = org.apache.lucene.util.Version.fromBits(7, 2, 1);, +    public static final Version V_6_2_0 = new Version(V_6_2_0_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_1 = new Version(V_6_2_1_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_2 = new Version(V_6_2_2_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_3 = new Version(V_6_2_3_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_4 = new Version(V_6_2_4_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_5 = new Version(V_6_2_5_ID, LUCENE_7_2_1);, +++ b/server/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +            numDocs += si.info.maxDoc() - si.getDelCount();, +++ b/server/src/main/java/org/elasticsearch/common/lucene/uid/PerThreadIDVersionAndSeqNoLookup.java, +        Terms terms = reader.terms(uidField);]