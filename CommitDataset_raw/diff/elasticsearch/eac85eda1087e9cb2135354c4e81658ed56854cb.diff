[+++ b/src/main/java/org/elasticsearch/shield/authc/esusers/tool/ESUsersTool.java, +            return FileRolesStore.parseFile(rolesFile, null);, +++ b/src/main/java/org/elasticsearch/shield/authc/esusers/tool/ESUsersTool.java, +            return FileRolesStore.parseFile(rolesFile, null);, +++ b/src/main/java/org/elasticsearch/shield/authz/store/FileRolesStore.java, +    public FileRolesStore(Settings settings, Environment env, ResourceWatcherService watcherService) {, +        this(settings, env, watcherService, Listener.NOOP);, +    public FileRolesStore(Settings settings, Environment env, ResourceWatcherService watcherService, Listener listener) {, +        permissions = parseFile(file, logger);, +        watcher.addListener(new FileListener());, +    public static ImmutableMap<String, Permission.Global.Role> parseFile(Path path, ESLogger logger) {, +                permissions = parseFile(file.toPath(), logger);, +++ b/src/main/java/org/elasticsearch/shield/authc/esusers/tool/ESUsersTool.java, +            return FileRolesStore.parseFile(rolesFile, null);, +++ b/src/main/java/org/elasticsearch/shield/authz/store/FileRolesStore.java, +    public FileRolesStore(Settings settings, Environment env, ResourceWatcherService watcherService) {, +        this(settings, env, watcherService, Listener.NOOP);, +    public FileRolesStore(Settings settings, Environment env, ResourceWatcherService watcherService, Listener listener) {, +        permissions = parseFile(file, logger);, +        watcher.addListener(new FileListener());, +    public static ImmutableMap<String, Permission.Global.Role> parseFile(Path path, ESLogger logger) {, +                permissions = parseFile(file.toPath(), logger);, +++ b/src/test/java/org/elasticsearch/shield/authz/store/FileRolesStoreTests.java, +        Map<String, Permission.Global.Role> roles = FileRolesStore.parseFile(path, logger);, +        Map<String, Permission.Global.Role> roles = FileRolesStore.parseFile(path, logger);, +        FileRolesStore.parseFile(file, null);, +            FileRolesStore store = new FileRolesStore(settings, env, watcherService, new FileRolesStore.Listener() {, +        Map<String, Permission.Global.Role> roles = FileRolesStore.parseFile(file.toPath(), logger);, +        FileRolesStore.parseFile(file.toPath(), logger);]