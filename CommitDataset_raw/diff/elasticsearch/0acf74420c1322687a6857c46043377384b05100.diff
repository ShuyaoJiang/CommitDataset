[+++ b/core/src/main/java/org/elasticsearch/search/fetch/subphase/VersionFetchSubPhase.java, +import org.apache.lucene.index.LeafReaderContext;, +import org.apache.lucene.index.ReaderUtil;, +import org.elasticsearch.search.SearchHit;, +import java.util.Arrays;, +import java.util.Comparator;, +    public void hitsExecute(SearchContext context, SearchHit[] hits) throws IOException {, +, +        hits = hits.clone(); // don't modify the incoming hits, +        Arrays.sort(hits, Comparator.comparingInt(SearchHit::docId));, +, +        int lastReaderId = -1;, +        NumericDocValues versions = null;, +        for (SearchHit hit : hits) {, +            int readerId = ReaderUtil.subIndex(hit.docId(), context.searcher().getIndexReader().leaves());, +            LeafReaderContext subReaderContext = context.searcher().getIndexReader().leaves().get(readerId);, +            if (lastReaderId != readerId) {, +                versions = subReaderContext.reader().getNumericDocValues(VersionFieldMapper.NAME);, +                lastReaderId = readerId;, +            }, +            int docId = hit.docId() - subReaderContext.docBase;, +            if (versions != null && versions.advanceExact(docId)) {, +            hit.version(version < 0 ? -1 : version);]