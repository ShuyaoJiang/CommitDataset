[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/transport/actions/ack/AckWatchResponse.java, +        status = in.readBoolean() ? new WatchStatus(in) : null;, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/transport/actions/ack/AckWatchResponse.java, +        status = in.readBoolean() ? new WatchStatus(in) : null;, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/transport/actions/activate/ActivateWatchResponse.java, +        status = in.readBoolean() ? new WatchStatus(in) : null;, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/transport/actions/ack/AckWatchResponse.java, +        status = in.readBoolean() ? new WatchStatus(in) : null;, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/transport/actions/activate/ActivateWatchResponse.java, +        status = in.readBoolean() ? new WatchStatus(in) : null;, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/transport/actions/get/GetWatchResponse.java, +            status = new WatchStatus(in);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/transport/actions/ack/AckWatchResponse.java, +        status = in.readBoolean() ? new WatchStatus(in) : null;, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/transport/actions/activate/ActivateWatchResponse.java, +        status = in.readBoolean() ? new WatchStatus(in) : null;, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/transport/actions/get/GetWatchResponse.java, +            status = new WatchStatus(in);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/watch/WatchStatus.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class WatchStatus implements ToXContentObject, Streamable, Writeable {, +    public WatchStatus(StreamInput in) throws IOException {, +        version = in.readLong();, +        lastChecked = readOptionalDate(in);, +        lastMetCondition = readOptionalDate(in);, +        int count = in.readInt();, +        Map<String, ActionStatus> actions = new HashMap<>(count);, +        for (int i = 0; i < count; i++) {, +            actions.put(in.readString(), ActionStatus.readFrom(in));, +        }, +        this.actions = unmodifiableMap(actions);, +        state = new State(in.readBoolean(), Instant.ofEpochMilli(in.readLong()).atZone(ZoneOffset.UTC));, +        boolean executionStateExists = in.readBoolean();, +        if (executionStateExists) {, +            executionState = ExecutionState.resolve(in.readString());, +        }, +        if (in.readBoolean()) {, +            headers = in.readMap(StreamInput::readString, StreamInput::readString);, +        } else {, +            headers = Collections.emptyMap();, +        }, +        throw new UnsupportedOperationException("usage of Streamable is to be replaced by Writeable");, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/transport/actions/ack/AckWatchResponse.java, +        status = in.readBoolean() ? new WatchStatus(in) : null;, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/transport/actions/activate/ActivateWatchResponse.java, +        status = in.readBoolean() ? new WatchStatus(in) : null;, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/transport/actions/get/GetWatchResponse.java, +            status = new WatchStatus(in);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/watch/WatchStatus.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class WatchStatus implements ToXContentObject, Streamable, Writeable {, +    public WatchStatus(StreamInput in) throws IOException {, +        version = in.readLong();, +        lastChecked = readOptionalDate(in);, +        lastMetCondition = readOptionalDate(in);, +        int count = in.readInt();, +        Map<String, ActionStatus> actions = new HashMap<>(count);, +        for (int i = 0; i < count; i++) {, +            actions.put(in.readString(), ActionStatus.readFrom(in));, +        }, +        this.actions = unmodifiableMap(actions);, +        state = new State(in.readBoolean(), Instant.ofEpochMilli(in.readLong()).atZone(ZoneOffset.UTC));, +        boolean executionStateExists = in.readBoolean();, +        if (executionStateExists) {, +            executionState = ExecutionState.resolve(in.readString());, +        }, +        if (in.readBoolean()) {, +            headers = in.readMap(StreamInput::readString, StreamInput::readString);, +        } else {, +            headers = Collections.emptyMap();, +        }, +        throw new UnsupportedOperationException("usage of Streamable is to be replaced by Writeable");, +++ b/x-pack/plugin/watcher/src/test/java/org/elasticsearch/xpack/watcher/watch/WatchStatusTests.java, +        WatchStatus readStatus = new WatchStatus(bytesReference.streamInput());]