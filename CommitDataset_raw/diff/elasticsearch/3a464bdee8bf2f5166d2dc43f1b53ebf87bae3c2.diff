[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RollupClient.java, +import org.elasticsearch.client.rollup.StartRollupJobRequest;, +import org.elasticsearch.client.rollup.StartRollupJobResponse;, +     * Start a rollup job, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-start-job.html">, +     * the docs</a> for more., +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public StartRollupJobResponse startRollupJob(StartRollupJobRequest request, RequestOptions options)  throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +            RollupRequestConverters::startJob,, +            options,, +            StartRollupJobResponse::fromXContent,, +            Collections.emptySet());, +    }, +, +    /**, +     * Asynchronously start a rollup job, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-start-job.html">, +     * the docs</a> for more., +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void startRollupJobAsync(StartRollupJobRequest request, RequestOptions options,, +            ActionListener<StartRollupJobResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +            RollupRequestConverters::startJob,, +            options,, +            StartRollupJobResponse::fromXContent,, +            listener, Collections.emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RollupClient.java, +import org.elasticsearch.client.rollup.StartRollupJobRequest;, +import org.elasticsearch.client.rollup.StartRollupJobResponse;, +     * Start a rollup job, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-start-job.html">, +     * the docs</a> for more., +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public StartRollupJobResponse startRollupJob(StartRollupJobRequest request, RequestOptions options)  throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +            RollupRequestConverters::startJob,, +            options,, +            StartRollupJobResponse::fromXContent,, +            Collections.emptySet());, +    }, +, +    /**, +     * Asynchronously start a rollup job, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-start-job.html">, +     * the docs</a> for more., +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void startRollupJobAsync(StartRollupJobRequest request, RequestOptions options,, +            ActionListener<StartRollupJobResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +            RollupRequestConverters::startJob,, +            options,, +            StartRollupJobResponse::fromXContent,, +            listener, Collections.emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RollupRequestConverters.java, +import org.apache.http.client.methods.HttpPost;, +import org.elasticsearch.client.rollup.GetRollupJobRequest;, +import org.elasticsearch.client.rollup.StartRollupJobRequest;, +            .addPathPartAsIs("_xpack", "rollup", "job"), +    static Request startJob(final StartRollupJobRequest startRollupJobRequest) throws IOException {, +        String endpoint = new RequestConverters.EndpointBuilder(), +            .addPathPartAsIs("_xpack", "rollup", "job"), +            .addPathPart(startRollupJobRequest.getJobId()), +            .addPathPartAsIs("_start"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        return request;, +    }, +, +            .addPathPartAsIs("_xpack", "rollup", "job"), +            .addPathPartAsIs("_xpack", "rollup", "job"), +            .addPathPartAsIs("_xpack", "rollup", "data"), +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RollupClient.java, +import org.elasticsearch.client.rollup.StartRollupJobRequest;, +import org.elasticsearch.client.rollup.StartRollupJobResponse;, +     * Start a rollup job, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-start-job.html">, +     * the docs</a> for more., +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized]