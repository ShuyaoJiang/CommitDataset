[+++ b/client/src/main/java/org/elasticsearch/client/ElasticsearchResponseException.java, + * Exception thrown when an elasticsearch node responds to a request with a status code that indicates an error., + * Note that the response body gets passed in as a string and read eagerly, which means that the ElasticsearchResponse object, + * is expected to be closed and available only to read metadata like status line, request line, response headers., +    public ElasticsearchResponseException(ElasticsearchResponse elasticsearchResponse, String responseBody) throws IOException {, +        super(buildMessage(elasticsearchResponse,responseBody));, +        this.responseBody = responseBody;, +    private static String buildMessage(ElasticsearchResponse response, String responseBody) {, +        String message = response.getRequestLine().getMethod() + " " + response.getHost() + response.getRequestLine().getUri(), +                + ": " + response.getStatusLine().toString();, +        if (responseBody != null) {, +            message += "\n" + responseBody;, +        }, +        return message;, +     * Returns the {@link ElasticsearchResponse} that caused this exception to be thrown., +     * Expected to be used only to read metadata like status line, request line, response headers. The response body should, +     * be retrieved using {@link #getResponseBody()}, +++ b/client/src/main/java/org/elasticsearch/client/ElasticsearchResponseException.java, + * Exception thrown when an elasticsearch node responds to a request with a status code that indicates an error., + * Note that the response body gets passed in as a string and read eagerly, which means that the ElasticsearchResponse object, + * is expected to be closed and available only to read metadata like status line, request line, response headers., +    public ElasticsearchResponseException(ElasticsearchResponse elasticsearchResponse, String responseBody) throws IOException {, +        super(buildMessage(elasticsearchResponse,responseBody));, +        this.responseBody = responseBody;, +    private static String buildMessage(ElasticsearchResponse response, String responseBody) {, +        String message = response.getRequestLine().getMethod() + " " + response.getHost() + response.getRequestLine().getUri(), +                + ": " + response.getStatusLine().toString();, +        if (responseBody != null) {, +            message += "\n" + responseBody;, +        }, +        return message;, +     * Returns the {@link ElasticsearchResponse} that caused this exception to be thrown., +     * Expected to be used only to read metadata like status line, request line, response headers. The response body should, +     * be retrieved using {@link #getResponseBody()}, +++ b/client/src/main/java/org/elasticsearch/client/RestClient.java, +import org.apache.http.util.EntityUtils;, +                String responseBody;, +                try {, +                    if (elasticsearchResponse.getEntity() == null) {, +                        responseBody = null;, +                    } else {, +                        responseBody = EntityUtils.toString(elasticsearchResponse.getEntity());, +                    }, +                } finally {, +                    elasticsearchResponse.close();, +                }, +                ElasticsearchResponseException elasticsearchResponseException = new ElasticsearchResponseException(, +                        elasticsearchResponse, responseBody);]