[+++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1",, +                     "min_retained_seq_no": "0", +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1",, +                     "min_retained_seq_no": "0", +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/CandidateQueryTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1",, +                     "min_retained_seq_no": "0", +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/CandidateQueryTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorFieldMapperTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        parseContext = new ParseContext.InternalParseContext(settings, mapperService.documentMapperParser(),, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        parseContext = new ParseContext.InternalParseContext(settings,, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1",, +                     "min_retained_seq_no": "0", +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/CandidateQueryTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorFieldMapperTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        parseContext = new ParseContext.InternalParseContext(settings, mapperService.documentMapperParser(),, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,]