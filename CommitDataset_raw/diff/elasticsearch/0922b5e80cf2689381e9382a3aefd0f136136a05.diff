[+++ b/src/main/java/org/apache/lucene/queryParser/MapperQueryParser.java, +                        if (fieldMappers.hasDocMapper()) {, +                            String[] previousTypes = QueryParseContext.setTypesWithPrevious(new String[]{fieldMappers.docMapper().type()});, +                            try {, +                            } finally {, +                                QueryParseContext.setTypes(previousTypes);, +                            }, +                        } else {, +                            query = currentMapper.fieldQuery(queryText, parseContext);, +                        }, +++ b/src/main/java/org/apache/lucene/queryParser/MapperQueryParser.java, +                        if (fieldMappers.hasDocMapper()) {, +                            String[] previousTypes = QueryParseContext.setTypesWithPrevious(new String[]{fieldMappers.docMapper().type()});, +                            try {, +                            } finally {, +                                QueryParseContext.setTypes(previousTypes);, +                            }, +                        } else {, +                            query = currentMapper.fieldQuery(queryText, parseContext);, +                        }, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java, +        UidFilter filter = new UidFilter(context.queryTypes(), ImmutableList.of(value), context.indexCache().bloomCache());, +        return new UidFilter(context.queryTypes(), ImmutableList.of(value), context.indexCache().bloomCache());, +++ b/src/main/java/org/apache/lucene/queryParser/MapperQueryParser.java, +                        if (fieldMappers.hasDocMapper()) {, +                            String[] previousTypes = QueryParseContext.setTypesWithPrevious(new String[]{fieldMappers.docMapper().type()});, +                            try {, +                            } finally {, +                                QueryParseContext.setTypes(previousTypes);, +                            }, +                        } else {, +                            query = currentMapper.fieldQuery(queryText, parseContext);, +                        }, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java, +        UidFilter filter = new UidFilter(context.queryTypes(), ImmutableList.of(value), context.indexCache().bloomCache());, +        return new UidFilter(context.queryTypes(), ImmutableList.of(value), context.indexCache().bloomCache());, +++ b/src/main/java/org/elasticsearch/index/query/IdsFilterParser.java, +            types = parseContext.queryTypes();, +++ b/src/main/java/org/apache/lucene/queryParser/MapperQueryParser.java, +                        if (fieldMappers.hasDocMapper()) {, +                            String[] previousTypes = QueryParseContext.setTypesWithPrevious(new String[]{fieldMappers.docMapper().type()});, +                            try {, +                            } finally {, +                                QueryParseContext.setTypes(previousTypes);, +                            }, +                        } else {, +                            query = currentMapper.fieldQuery(queryText, parseContext);, +                        }, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java, +        UidFilter filter = new UidFilter(context.queryTypes(), ImmutableList.of(value), context.indexCache().bloomCache());, +        return new UidFilter(context.queryTypes(), ImmutableList.of(value), context.indexCache().bloomCache());, +++ b/src/main/java/org/elasticsearch/index/query/IdsFilterParser.java, +            types = parseContext.queryTypes();, +++ b/src/main/java/org/elasticsearch/index/query/IdsQueryParser.java, +            types = parseContext.queryTypes();, +++ b/src/main/java/org/apache/lucene/queryParser/MapperQueryParser.java, +                        if (fieldMappers.hasDocMapper()) {, +                            String[] previousTypes = QueryParseContext.setTypesWithPrevious(new String[]{fieldMappers.docMapper().type()});, +                            try {, +                            } finally {, +                                QueryParseContext.setTypes(previousTypes);, +                            }, +                        } else {, +                            query = currentMapper.fieldQuery(queryText, parseContext);, +                        }, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java, +        UidFilter filter = new UidFilter(context.queryTypes(), ImmutableList.of(value), context.indexCache().bloomCache());, +        return new UidFilter(context.queryTypes(), ImmutableList.of(value), context.indexCache().bloomCache());, +++ b/src/main/java/org/elasticsearch/index/query/IdsFilterParser.java, +            types = parseContext.queryTypes();, +++ b/src/main/java/org/elasticsearch/index/query/IdsQueryParser.java, +            types = parseContext.queryTypes();, +++ b/src/main/java/org/elasticsearch/index/query/QueryParseContext.java, +import java.util.Arrays;, +import java.util.Collection;, +, +    /**, +     * Returns the narrowed down explicit types, or, if not set, all types., +     */, +    public Collection<String> queryTypes() {, +        String[] types = getTypes();, +        if (types == null || types.length == 0) {, +            return mapperService().types();, +        }, +        return Arrays.asList(types);, +    }, +++ b/src/main/java/org/apache/lucene/queryParser/MapperQueryParser.java, +                        if (fieldMappers.hasDocMapper()) {, +                            String[] previousTypes = QueryParseContext.setTypesWithPrevious(new String[]{fieldMappers.docMapper().type()});, +                            try {, +                            } finally {, +                                QueryParseContext.setTypes(previousTypes);, +                            }, +                        } else {, +                            query = currentMapper.fieldQuery(queryText, parseContext);, +                        }, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java, +        UidFilter filter = new UidFilter(context.queryTypes(), ImmutableList.of(value), context.indexCache().bloomCache());, +        return new UidFilter(context.queryTypes(), ImmutableList.of(value), context.indexCache().bloomCache());, +++ b/src/main/java/org/elasticsearch/index/query/IdsFilterParser.java]