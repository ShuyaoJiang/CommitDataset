[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/geocentroid/InternalGeoCentroid.java, +import org.elasticsearch.common.ParseField;, +    private final GeoPoint centroid;, +    private final long count;, +                case "count":, +                    return count;, +        static final ParseField CENTROID = new ParseField("location");, +        static final ParseField CENTROID_LAT = new ParseField("lat");, +        static final ParseField CENTROID_LON = new ParseField("lon");, +        static final ParseField COUNT = new ParseField("count");, +        return renderXContent(builder, params, centroid, count);, +, +    static XContentBuilder renderXContent(XContentBuilder builder, Params params, GeoPoint centroid, long count) throws IOException {, +        if (centroid != null) {, +            builder.startObject(Fields.CENTROID.getPreferredName());, +            {, +                builder.field(Fields.CENTROID_LAT.getPreferredName(), centroid.lat());, +                builder.field(Fields.CENTROID_LON.getPreferredName(), centroid.lon());, +            }, +            builder.endObject();, +        }, +        builder.field(Fields.COUNT.getPreferredName(), count);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/geocentroid/InternalGeoCentroid.java, +import org.elasticsearch.common.ParseField;, +    private final GeoPoint centroid;, +    private final long count;, +                case "count":, +                    return count;, +        static final ParseField CENTROID = new ParseField("location");, +        static final ParseField CENTROID_LAT = new ParseField("lat");, +        static final ParseField CENTROID_LON = new ParseField("lon");, +        static final ParseField COUNT = new ParseField("count");, +        return renderXContent(builder, params, centroid, count);, +, +    static XContentBuilder renderXContent(XContentBuilder builder, Params params, GeoPoint centroid, long count) throws IOException {, +        if (centroid != null) {, +            builder.startObject(Fields.CENTROID.getPreferredName());, +            {, +                builder.field(Fields.CENTROID_LAT.getPreferredName(), centroid.lat());, +                builder.field(Fields.CENTROID_LON.getPreferredName(), centroid.lon());, +            }, +            builder.endObject();, +        }, +        builder.field(Fields.COUNT.getPreferredName(), count);, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/metrics/GeoCentroidIT.java, +        assertEquals(0, geoCentroid.count());, +        assertEquals(0, geoCentroid.count());, +        assertEquals(numDocs, geoCentroid.count());, +        assertEquals(numDocs, geoCentroid.count());, +        assertEquals(numDocs, (long) ((InternalAggregation) global).getProperty(aggName + ".count"));, +        assertEquals(2 * numDocs, geoCentroid.count());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/geocentroid/InternalGeoCentroid.java, +import org.elasticsearch.common.ParseField;, +    private final GeoPoint centroid;, +    private final long count;, +                case "count":, +                    return count;, +        static final ParseField CENTROID = new ParseField("location");, +        static final ParseField CENTROID_LAT = new ParseField("lat");, +        static final ParseField CENTROID_LON = new ParseField("lon");, +        static final ParseField COUNT = new ParseField("count");, +        return renderXContent(builder, params, centroid, count);, +, +    static XContentBuilder renderXContent(XContentBuilder builder, Params params, GeoPoint centroid, long count) throws IOException {, +        if (centroid != null) {, +            builder.startObject(Fields.CENTROID.getPreferredName());, +            {, +                builder.field(Fields.CENTROID_LAT.getPreferredName(), centroid.lat());, +                builder.field(Fields.CENTROID_LON.getPreferredName(), centroid.lon());, +            }, +            builder.endObject();, +        }, +        builder.field(Fields.COUNT.getPreferredName(), count);, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/metrics/GeoCentroidIT.java, +        assertEquals(0, geoCentroid.count());, +        assertEquals(0, geoCentroid.count());, +        assertEquals(numDocs, geoCentroid.count());, +        assertEquals(numDocs, geoCentroid.count());, +        assertEquals(numDocs, (long) ((InternalAggregation) global).getProperty(aggName + ".count"));, +        assertEquals(2 * numDocs, geoCentroid.count());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/metrics/geocentroid/InternalGeoCentroidTests.java, +        long count = randomIntBetween(0, 1000);, +        if (count == 0) {, +            centroid = null;, +        }, +        return new InternalGeoCentroid("_name", centroid, count, Collections.emptyList(), Collections.emptyMap());, +        double lonSum = 0;, +        double latSum = 0;, +        int totalCount = 0;, +            if (input.count() > 0) {, +                lonSum += (input.count() * input.centroid().getLon());, +                latSum += (input.count() * input.centroid().getLat());, +            totalCount += input.count();, +        }, +        assertEquals(latSum/totalCount, reduced.centroid().getLat(), 1E-5D);, +        assertEquals(lonSum/totalCount, reduced.centroid().getLon(), 1E-5D);, +        assertEquals(totalCount, reduced.count());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/geocentroid/InternalGeoCentroid.java, +import org.elasticsearch.common.ParseField;, +    private final GeoPoint centroid;]