[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            bundledSignatures = ['jdk-unsafe', 'jdk-deprecated', 'jdk-system-out'], +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            bundledSignatures = ['jdk-unsafe', 'jdk-deprecated', 'jdk-system-out'], +++ b/core/src/main/java/org/elasticsearch/Version.java, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            bundledSignatures = ['jdk-unsafe', 'jdk-deprecated', 'jdk-system-out'], +++ b/core/src/main/java/org/elasticsearch/Version.java, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +                    flush(true, true);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            bundledSignatures = ['jdk-unsafe', 'jdk-deprecated', 'jdk-system-out'], +++ b/core/src/main/java/org/elasticsearch/Version.java, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +                    flush(true, true);, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +            if (indexService != null && nodeEnv.hasNodeFile()) {, +                return indexService.hasShard(shardId.id()) == false;, +            } else if (nodeEnv.hasNodeFile()) {, +                if (indexSettings.hasCustomDataPath()) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            bundledSignatures = ['jdk-unsafe', 'jdk-deprecated', 'jdk-system-out'], +++ b/core/src/main/java/org/elasticsearch/Version.java, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +                    flush(true, true);, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +            if (indexService != null && nodeEnv.hasNodeFile()) {, +                return indexService.hasShard(shardId.id()) == false;, +            } else if (nodeEnv.hasNodeFile()) {, +                if (indexSettings.hasCustomDataPath()) {, +++ b/core/src/main/java/org/elasticsearch/search/sort/FieldSortBuilder.java, +    private String sortMode;, +    private QueryBuilder nestedFilter;, +     * TODO would love to see an enum here, +    public FieldSortBuilder sortMode(String sortMode) {, +    public String sortMode() {, +        out.writeOptionalString(this.sortMode);, +            QueryBuilder query = in.readQuery();, +        result.sortMode(in.readOptionalString());, +        QueryBuilder nestedFilter = null;, +        String sortMode = null;, +                    sortMode = parser.text();, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            bundledSignatures = ['jdk-unsafe', 'jdk-deprecated', 'jdk-system-out'], +++ b/core/src/main/java/org/elasticsearch/Version.java, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +                    flush(true, true);, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +            if (indexService != null && nodeEnv.hasNodeFile()) {, +                return indexService.hasShard(shardId.id()) == false;, +            } else if (nodeEnv.hasNodeFile()) {, +                if (indexSettings.hasCustomDataPath()) {, +++ b/core/src/main/java/org/elasticsearch/search/sort/FieldSortBuilder.java, +    private String sortMode;, +    private QueryBuilder nestedFilter;, +     * TODO would love to see an enum here, +    public FieldSortBuilder sortMode(String sortMode) {, +    public String sortMode() {, +        out.writeOptionalString(this.sortMode);, +            QueryBuilder query = in.readQuery();, +        result.sortMode(in.readOptionalString());, +        QueryBuilder nestedFilter = null;, +        String sortMode = null;, +                    sortMode = parser.text();, +++ b/core/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortBuilder.java, +import org.elasticsearch.search.MultiValueMode;, +    // TODO there is an enum that covers that parameter which we should be using here, +    private String sortMode = null;, +    public GeoDistanceSortBuilder sortMode(String sortMode) {, +        MultiValueMode temp = MultiValueMode.fromString(sortMode);, +        if (temp == MultiValueMode.SUM) {, +    public String sortMode() {, +        out.writeOptionalString(sortMode);, +        String sortMode = in.readOptionalString();, +        if (sortMode != null) {, +            result.sortMode(sortMode);, +        MultiValueMode sortMode = null;, +                    sortMode = MultiValueMode.fromString(parser.text());, +            result.sortMode(sortMode.name());, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            bundledSignatures = ['jdk-unsafe', 'jdk-deprecated', 'jdk-system-out'], +++ b/core/src/main/java/org/elasticsearch/Version.java, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +                    flush(true, true);, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +            if (indexService != null && nodeEnv.hasNodeFile()) {, +                return indexService.hasShard(shardId.id()) == false;, +            } else if (nodeEnv.hasNodeFile()) {, +                if (indexSettings.hasCustomDataPath()) {, +++ b/core/src/main/java/org/elasticsearch/search/sort/FieldSortBuilder.java, +    private String sortMode;, +    private QueryBuilder nestedFilter;, +     * TODO would love to see an enum here, +    public FieldSortBuilder sortMode(String sortMode) {, +    public String sortMode() {, +        out.writeOptionalString(this.sortMode);, +            QueryBuilder query = in.readQuery();, +        result.sortMode(in.readOptionalString());, +        QueryBuilder nestedFilter = null;, +        String sortMode = null;]