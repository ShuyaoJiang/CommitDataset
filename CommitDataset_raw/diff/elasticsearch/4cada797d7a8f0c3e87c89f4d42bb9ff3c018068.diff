[+++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/execution/ExecutionService.java, +import java.util.concurrent.TimeUnit;, +                long start = System.nanoTime();, +                long executionTime = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - start);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/execution/ExecutionService.java, +import java.util.concurrent.TimeUnit;, +                long start = System.nanoTime();, +                long executionTime = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - start);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionContext.java, +import java.util.concurrent.TimeUnit;, +    private long relativeStartTime;, +        relativeStartTime = System.nanoTime();, +        long executionTime = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - relativeStartTime);, +        WatchExecutionResult result = new WatchExecutionResult(this, executionTime);, +        long executionTime = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - relativeStartTime);, +        WatchExecutionResult result = new WatchExecutionResult(this, executionTime);, +        long executionTime = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - relativeStartTime);, +        WatchExecutionResult result = new WatchExecutionResult(this, executionTime);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/execution/ExecutionService.java, +import java.util.concurrent.TimeUnit;, +                long start = System.nanoTime();, +                long executionTime = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - start);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionContext.java, +import java.util.concurrent.TimeUnit;, +    private long relativeStartTime;, +        relativeStartTime = System.nanoTime();, +        long executionTime = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - relativeStartTime);, +        WatchExecutionResult result = new WatchExecutionResult(this, executionTime);, +        long executionTime = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - relativeStartTime);, +        WatchExecutionResult result = new WatchExecutionResult(this, executionTime);, +        long executionTime = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - relativeStartTime);, +        WatchExecutionResult result = new WatchExecutionResult(this, executionTime);, +++ b/plugin/src/test/java/org/elasticsearch/xpack/watcher/execution/ExecutionServiceTests.java, +import static org.hamcrest.Matchers.greaterThanOrEqualTo;, +        // introduce a very short sleep time which we can use to check if the duration in milliseconds is correctly created, +        long randomConditionDurationMs = randomIntBetween(1, 10);, +        when(condition.execute(any(WatchExecutionContext.class))).then(invocationOnMock -> {, +            Thread.sleep(randomConditionDurationMs);, +            return conditionResult;, +        });, +        // test execution duration, +        assertThat(watchRecord.result().executionDurationMs(), is(greaterThanOrEqualTo(randomConditionDurationMs)));, +        assertThat(watchRecord.result().executionTime(), is(notNullValue()));, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/execution/ExecutionService.java, +import java.util.concurrent.TimeUnit;, +                long start = System.nanoTime();, +                long executionTime = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - start);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionContext.java, +import java.util.concurrent.TimeUnit;, +    private long relativeStartTime;, +        relativeStartTime = System.nanoTime();, +        long executionTime = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - relativeStartTime);, +        WatchExecutionResult result = new WatchExecutionResult(this, executionTime);, +        long executionTime = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - relativeStartTime);, +        WatchExecutionResult result = new WatchExecutionResult(this, executionTime);, +        long executionTime = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - relativeStartTime);, +        WatchExecutionResult result = new WatchExecutionResult(this, executionTime);, +++ b/plugin/src/test/java/org/elasticsearch/xpack/watcher/execution/ExecutionServiceTests.java, +import static org.hamcrest.Matchers.greaterThanOrEqualTo;, +        // introduce a very short sleep time which we can use to check if the duration in milliseconds is correctly created, +        long randomConditionDurationMs = randomIntBetween(1, 10);, +        when(condition.execute(any(WatchExecutionContext.class))).then(invocationOnMock -> {, +            Thread.sleep(randomConditionDurationMs);, +            return conditionResult;, +        });, +        // test execution duration, +        assertThat(watchRecord.result().executionDurationMs(), is(greaterThanOrEqualTo(randomConditionDurationMs)));, +        assertThat(watchRecord.result().executionTime(), is(notNullValue()));, +, +++ b/plugin/src/test/resources/rest-api-spec/test/watcher/execute_watch/10_basic.yml, +  - gt: { watch_record.result.execution_duration: 0 }]