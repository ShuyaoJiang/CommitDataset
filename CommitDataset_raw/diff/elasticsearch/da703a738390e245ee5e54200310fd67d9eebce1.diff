[+++ b/core/src/test/java/org/elasticsearch/plugins/PluginInfoTests.java, +import static org.hamcrest.Matchers.containsString;, +import static org.hamcrest.core.IsEqual.equalTo;, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> PluginInfo.readFromProperties(pluginDir));, +        assertThat(e.getMessage(), containsString("property [name] is missing in"));, +        e = expectThrows(IllegalArgumentException.class, () -> PluginInfo.readFromProperties(pluginDir));, +        assertThat(e.getMessage(), containsString("property [name] is missing in"));, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> PluginInfo.readFromProperties(pluginDir));, +        assertThat(e.getMessage(), containsString("[description] is missing"));, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> PluginInfo.readFromProperties(pluginDir));, +        assertThat(e.getMessage(), containsString("[version] is missing"));, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> PluginInfo.readFromProperties(pluginDir));, +        assertThat(e.getMessage(), containsString("[elasticsearch.version] is missing"));, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> PluginInfo.readFromProperties(pluginDir));, +        assertThat(e.getMessage(), containsString("[java.version] is missing"));, +        IllegalStateException e = expectThrows(IllegalStateException.class, () -> PluginInfo.readFromProperties(pluginDir));, +        assertThat(e.getMessage(), containsString(pluginName + " requires Java"));, +        IllegalStateException e = expectThrows(IllegalStateException.class, () -> PluginInfo.readFromProperties(pluginDir));, +        assertThat(e.getMessage(), equalTo("version string must be a sequence of nonnegative decimal integers separated" +, +                                           " by \".\"'s and may have leading zeros but was 1.7.0_80"));, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> PluginInfo.readFromProperties(pluginDir));, +        assertThat(e.getMessage(), containsString("version needs to contain major, minor, and revision"));, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> PluginInfo.readFromProperties(pluginDir));, +        assertThat(e.getMessage(), containsString("was designed for version [5.0.0]"));, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> PluginInfo.readFromProperties(pluginDir));, +        assertThat(e.getMessage(), containsString("property [classname] is missing"));]