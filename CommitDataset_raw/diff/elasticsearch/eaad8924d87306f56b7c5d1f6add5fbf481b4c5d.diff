[+++ b/core/src/main/java/org/elasticsearch/search/suggest/SuggestUtils.java, +        public static final ParseField ANALYZER = new ParseField("analyzer");, +        public static final ParseField FIELD = new ParseField("field");, +        public static final ParseField SIZE = new ParseField("size");, +        public static final ParseField SORT = new ParseField("sort");, +        public static final ParseField ACCURACY = new ParseField("accuracy");, +            if (parseFieldMatcher.match(fieldName, Fields.ACCURACY)) {, +            } else if (parseFieldMatcher.match(fieldName, Fields.SORT)) {, +        if (parseFieldMatcher.match(fieldName, Fields.ANALYZER)) {, +        } else if (parseFieldMatcher.match(fieldName, Fields.FIELD)) {, +        } else if (parseFieldMatcher.match(fieldName, Fields.SIZE)) {, +++ b/core/src/main/java/org/elasticsearch/search/suggest/SuggestUtils.java, +        public static final ParseField ANALYZER = new ParseField("analyzer");, +        public static final ParseField FIELD = new ParseField("field");, +        public static final ParseField SIZE = new ParseField("size");, +        public static final ParseField SORT = new ParseField("sort");, +        public static final ParseField ACCURACY = new ParseField("accuracy");, +            if (parseFieldMatcher.match(fieldName, Fields.ACCURACY)) {, +            } else if (parseFieldMatcher.match(fieldName, Fields.SORT)) {, +        if (parseFieldMatcher.match(fieldName, Fields.ANALYZER)) {, +        } else if (parseFieldMatcher.match(fieldName, Fields.FIELD)) {, +        } else if (parseFieldMatcher.match(fieldName, Fields.SIZE)) {, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestParser.java, +import org.elasticsearch.search.suggest.SuggestUtils.Fields;, +import org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder.FuzzyOptionsBuilder;, +import org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder.RegexOptionsBuilder;, +    private static ObjectParser<CompletionSuggestionContext, ContextAndSuggest> TLP_PARSER = new ObjectParser<>(CompletionSuggestionBuilder.SUGGESTION_NAME, null);, +    private static ObjectParser<CompletionSuggestionBuilder.RegexOptionsBuilder, ContextAndSuggest> REGEXP_PARSER = new ObjectParser<>(RegexOptionsBuilder.REGEX_OPTIONS.getPreferredName(), CompletionSuggestionBuilder.RegexOptionsBuilder::new);, +    private static ObjectParser<CompletionSuggestionBuilder.FuzzyOptionsBuilder, ContextAndSuggest> FUZZY_PARSER = new ObjectParser<>(FuzzyOptionsBuilder.FUZZY_OPTIONS.getPreferredName(), CompletionSuggestionBuilder.FuzzyOptionsBuilder::new);, +        FUZZY_PARSER.declareInt(CompletionSuggestionBuilder.FuzzyOptionsBuilder::setFuzzyMinLength, FuzzyOptionsBuilder.MIN_LENGTH_FIELD);, +        FUZZY_PARSER.declareInt(CompletionSuggestionBuilder.FuzzyOptionsBuilder::setMaxDeterminizedStates, FuzzyOptionsBuilder.MAX_DETERMINIZED_STATES_FIELD);, +        FUZZY_PARSER.declareBoolean(CompletionSuggestionBuilder.FuzzyOptionsBuilder::setUnicodeAware, FuzzyOptionsBuilder.UNICODE_AWARE_FIELD);, +        FUZZY_PARSER.declareInt(CompletionSuggestionBuilder.FuzzyOptionsBuilder::setFuzzyPrefixLength, FuzzyOptionsBuilder.PREFIX_LENGTH_FIELD);, +        FUZZY_PARSER.declareBoolean(CompletionSuggestionBuilder.FuzzyOptionsBuilder::setTranspositions, FuzzyOptionsBuilder.TRANSPOSITION_FIELD);, +        }, Fuzziness.FIELD);, +        REGEXP_PARSER.declareInt(CompletionSuggestionBuilder.RegexOptionsBuilder::setMaxDeterminizedStates, RegexOptionsBuilder.MAX_DETERMINIZED_STATES);, +        REGEXP_PARSER.declareStringOrNull(CompletionSuggestionBuilder.RegexOptionsBuilder::setFlags, RegexOptionsBuilder.FLAGS_VALUE);, +        TLP_PARSER.declareStringArray(CompletionSuggestionContext::setPayloadFields, CompletionSuggestionBuilder.PAYLOAD_FIELD);, +        TLP_PARSER.declareObjectOrDefault(CompletionSuggestionContext::setFuzzyOptionsBuilder, FUZZY_PARSER, CompletionSuggestionBuilder.FuzzyOptionsBuilder::new, FuzzyOptionsBuilder.FUZZY_OPTIONS);, +        TLP_PARSER.declareObject(CompletionSuggestionContext::setRegexOptionsBuilder, REGEXP_PARSER, RegexOptionsBuilder.REGEX_OPTIONS);, +        TLP_PARSER.declareString(SuggestionSearchContext.SuggestionContext::setField, Fields.FIELD);, +        }, Fields.ANALYZER, ObjectParser.ValueType.STRING);, +        TLP_PARSER.declareInt(SuggestionSearchContext.SuggestionContext::setSize, Fields.SIZE);, +        TLP_PARSER.declareInt(SuggestionSearchContext.SuggestionContext::setShardSize, Fields.SHARD_SIZE);, +        }, CompletionSuggestionBuilder.CONTEXTS_FIELD, ObjectParser.ValueType.OBJECT); // context is deprecated, +++ b/core/src/main/java/org/elasticsearch/search/suggest/SuggestUtils.java, +        public static final ParseField ANALYZER = new ParseField("analyzer");, +        public static final ParseField FIELD = new ParseField("field");, +        public static final ParseField SIZE = new ParseField("size");, +        public static final ParseField SORT = new ParseField("sort");, +        public static final ParseField ACCURACY = new ParseField("accuracy");, +            if (parseFieldMatcher.match(fieldName, Fields.ACCURACY)) {, +            } else if (parseFieldMatcher.match(fieldName, Fields.SORT)) {, +        if (parseFieldMatcher.match(fieldName, Fields.ANALYZER)) {, +        } else if (parseFieldMatcher.match(fieldName, Fields.FIELD)) {, +        } else if (parseFieldMatcher.match(fieldName, Fields.SIZE)) {, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestParser.java, +import org.elasticsearch.search.suggest.SuggestUtils.Fields;, +import org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder.FuzzyOptionsBuilder;, +import org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder.RegexOptionsBuilder;, +    private static ObjectParser<CompletionSuggestionContext, ContextAndSuggest> TLP_PARSER = new ObjectParser<>(CompletionSuggestionBuilder.SUGGESTION_NAME, null);, +    private static ObjectParser<CompletionSuggestionBuilder.RegexOptionsBuilder, ContextAndSuggest> REGEXP_PARSER = new ObjectParser<>(RegexOptionsBuilder.REGEX_OPTIONS.getPreferredName(), CompletionSuggestionBuilder.RegexOptionsBuilder::new);, +    private static ObjectParser<CompletionSuggestionBuilder.FuzzyOptionsBuilder, ContextAndSuggest> FUZZY_PARSER = new ObjectParser<>(FuzzyOptionsBuilder.FUZZY_OPTIONS.getPreferredName(), CompletionSuggestionBuilder.FuzzyOptionsBuilder::new);, +        FUZZY_PARSER.declareInt(CompletionSuggestionBuilder.FuzzyOptionsBuilder::setFuzzyMinLength, FuzzyOptionsBuilder.MIN_LENGTH_FIELD);, +        FUZZY_PARSER.declareInt(CompletionSuggestionBuilder.FuzzyOptionsBuilder::setMaxDeterminizedStates, FuzzyOptionsBuilder.MAX_DETERMINIZED_STATES_FIELD);, +        FUZZY_PARSER.declareBoolean(CompletionSuggestionBuilder.FuzzyOptionsBuilder::setUnicodeAware, FuzzyOptionsBuilder.UNICODE_AWARE_FIELD);, +        FUZZY_PARSER.declareInt(CompletionSuggestionBuilder.FuzzyOptionsBuilder::setFuzzyPrefixLength, FuzzyOptionsBuilder.PREFIX_LENGTH_FIELD);, +        FUZZY_PARSER.declareBoolean(CompletionSuggestionBuilder.FuzzyOptionsBuilder::setTranspositions, FuzzyOptionsBuilder.TRANSPOSITION_FIELD);, +        }, Fuzziness.FIELD);, +        REGEXP_PARSER.declareInt(CompletionSuggestionBuilder.RegexOptionsBuilder::setMaxDeterminizedStates, RegexOptionsBuilder.MAX_DETERMINIZED_STATES);, +        REGEXP_PARSER.declareStringOrNull(CompletionSuggestionBuilder.RegexOptionsBuilder::setFlags, RegexOptionsBuilder.FLAGS_VALUE);, +        TLP_PARSER.declareStringArray(CompletionSuggestionContext::setPayloadFields, CompletionSuggestionBuilder.PAYLOAD_FIELD);, +        TLP_PARSER.declareObjectOrDefault(CompletionSuggestionContext::setFuzzyOptionsBuilder, FUZZY_PARSER, CompletionSuggestionBuilder.FuzzyOptionsBuilder::new, FuzzyOptionsBuilder.FUZZY_OPTIONS);, +        TLP_PARSER.declareObject(CompletionSuggestionContext::setRegexOptionsBuilder, REGEXP_PARSER, RegexOptionsBuilder.REGEX_OPTIONS);, +        TLP_PARSER.declareString(SuggestionSearchContext.SuggestionContext::setField, Fields.FIELD);, +        }, Fields.ANALYZER, ObjectParser.ValueType.STRING);, +        TLP_PARSER.declareInt(SuggestionSearchContext.SuggestionContext::setSize, Fields.SIZE);, +        TLP_PARSER.declareInt(SuggestionSearchContext.SuggestionContext::setShardSize, Fields.SHARD_SIZE);, +        }, CompletionSuggestionBuilder.CONTEXTS_FIELD, ObjectParser.ValueType.OBJECT); // context is deprecated, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestionBuilder.java, +import org.elasticsearch.common.ParseField;, +, +    final static String SUGGESTION_NAME = "completion";, +    static final ParseField PAYLOAD_FIELD = new ParseField("payload");, +    static final ParseField CONTEXTS_FIELD = new ParseField("contexts", "context");, +        super(name, SUGGESTION_NAME);, +        static final ParseField FUZZY_OPTIONS = new ParseField("fuzzy");, +        static final ParseField TRANSPOSITION_FIELD = new ParseField("transpositions");, +        static final ParseField MIN_LENGTH_FIELD = new ParseField("min_length");, +        static final ParseField PREFIX_LENGTH_FIELD = new ParseField("prefix_length");, +        static final ParseField UNICODE_AWARE_FIELD = new ParseField("unicode_aware");, +        static final ParseField MAX_DETERMINIZED_STATES_FIELD = new ParseField("max_determinized_states");, +, +            builder.startObject(FUZZY_OPTIONS.getPreferredName());, +            builder.field(TRANSPOSITION_FIELD.getPreferredName(), transpositions);, +            builder.field(MIN_LENGTH_FIELD.getPreferredName(), fuzzyMinLength);, +            builder.field(PREFIX_LENGTH_FIELD.getPreferredName(), fuzzyPrefixLength);, +            builder.field(UNICODE_AWARE_FIELD.getPreferredName(), unicodeAware);, +            builder.field(MAX_DETERMINIZED_STATES_FIELD.getPreferredName(), maxDeterminizedStates);, +        static final ParseField REGEX_OPTIONS = new ParseField("regex");]