[+++ b/core/src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerServiceIT.java, +import static org.hamcrest.Matchers.endsWith;, +import static org.hamcrest.Matchers.startsWith;, +                .put(HierarchyCircuitBreakerService.TOTAL_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(),, +                    HierarchyCircuitBreakerService.TOTAL_CIRCUIT_BREAKER_LIMIT_SETTING.getDefaultRaw(null)), +        reset();, +, +                .put(HierarchyCircuitBreakerService.TOTAL_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), "500b"), +            final Throwable cause = ExceptionsHelper.unwrap(e, CircuitBreakingException.class);, +            assertNotNull("CircuitBreakingException is not the cause of " + e, cause);, +            String errMsg = "would be larger than limit of [500/500b]]";, +            assertThat("Exception: [" + cause.toString() + "] should contain a CircuitBreakingException",, +                cause.toString(), startsWith("CircuitBreakingException[[parent] Data too large"));, +            assertThat("Exception: [" + cause.toString() + "] should contain a CircuitBreakingException",, +                cause.toString(), endsWith(errMsg));, +        } finally {, +            // reset before teardown as it requires properly set up breakers, +            reset();]