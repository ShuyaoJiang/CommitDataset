[+++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollAction.java, +    protected abstract Response buildResponse(TimeValue took, List<Failure> indexingFailures, List<ShardSearchFailure> searchFailures,, +            boolean timedOut);, +        if (    // If any of the shards failed that should abort the request., +                (searchResponse.getShardFailures() != null && searchResponse.getShardFailures().length > 0), +                // Timeouts aren't shard failures but we still need to pass them back to the user., +                || searchResponse.isTimedOut(), +                ) {, +            startNormalTermination(emptyList(), unmodifiableList(Arrays.asList(searchResponse.getShardFailures())),, +                    searchResponse.isTimedOut());, +                    startNormalTermination(emptyList(), emptyList(), false);, +                startNormalTermination(unmodifiableList(failures), emptyList(), false);, +                startNormalTermination(emptyList(), emptyList(), false);, +    void startNormalTermination(List<Failure> indexingFailures, List<ShardSearchFailure> searchFailures, boolean timedOut) {, +            finishHim(null, indexingFailures, searchFailures, timedOut);, +                finishHim(null, indexingFailures, searchFailures, timedOut);, +        finishHim(failure, emptyList(), emptyList(), false);, +     * @param timedOut have any of the sub-requests timed out?, +    void finishHim(Throwable failure, List<Failure> indexingFailures, List<ShardSearchFailure> searchFailures, boolean timedOut) {, +            listener.onResponse(, +                    buildResponse(timeValueNanos(System.nanoTime() - startTime.get()), indexingFailures, searchFailures, timedOut));, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollAction.java, +    protected abstract Response buildResponse(TimeValue took, List<Failure> indexingFailures, List<ShardSearchFailure> searchFailures,, +            boolean timedOut);, +        if (    // If any of the shards failed that should abort the request., +                (searchResponse.getShardFailures() != null && searchResponse.getShardFailures().length > 0), +                // Timeouts aren't shard failures but we still need to pass them back to the user., +                || searchResponse.isTimedOut(), +                ) {, +            startNormalTermination(emptyList(), unmodifiableList(Arrays.asList(searchResponse.getShardFailures())),, +                    searchResponse.isTimedOut());, +                    startNormalTermination(emptyList(), emptyList(), false);, +                startNormalTermination(unmodifiableList(failures), emptyList(), false);, +                startNormalTermination(emptyList(), emptyList(), false);, +    void startNormalTermination(List<Failure> indexingFailures, List<ShardSearchFailure> searchFailures, boolean timedOut) {, +            finishHim(null, indexingFailures, searchFailures, timedOut);, +                finishHim(null, indexingFailures, searchFailures, timedOut);, +        finishHim(failure, emptyList(), emptyList(), false);, +     * @param timedOut have any of the sub-requests timed out?, +    void finishHim(Throwable failure, List<Failure> indexingFailures, List<ShardSearchFailure> searchFailures, boolean timedOut) {, +            listener.onResponse(, +                    buildResponse(timeValueNanos(System.nanoTime() - startTime.get()), indexingFailures, searchFailures, timedOut));, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/BulkIndexByScrollResponse.java, +    private boolean timedOut;, +            List<ShardSearchFailure> searchFailures, boolean timedOut) {, +        this.timedOut = timedOut;, +    /**, +     * Did any of the sub-requests that were part of this request timeout?, +     */, +    public boolean isTimedOut() {, +        return timedOut;, +    }, +, +        out.writeBoolean(timedOut);, +        this.timedOut = in.readBoolean();, +        builder.field("timed_out", timedOut);, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollAction.java, +    protected abstract Response buildResponse(TimeValue took, List<Failure> indexingFailures, List<ShardSearchFailure> searchFailures,, +            boolean timedOut);, +        if (    // If any of the shards failed that should abort the request., +                (searchResponse.getShardFailures() != null && searchResponse.getShardFailures().length > 0), +                // Timeouts aren't shard failures but we still need to pass them back to the user., +                || searchResponse.isTimedOut(), +                ) {, +            startNormalTermination(emptyList(), unmodifiableList(Arrays.asList(searchResponse.getShardFailures())),, +                    searchResponse.isTimedOut());, +                    startNormalTermination(emptyList(), emptyList(), false);, +                startNormalTermination(unmodifiableList(failures), emptyList(), false);, +                startNormalTermination(emptyList(), emptyList(), false);, +    void startNormalTermination(List<Failure> indexingFailures, List<ShardSearchFailure> searchFailures, boolean timedOut) {, +            finishHim(null, indexingFailures, searchFailures, timedOut);, +                finishHim(null, indexingFailures, searchFailures, timedOut);, +        finishHim(failure, emptyList(), emptyList(), false);, +     * @param timedOut have any of the sub-requests timed out?, +    void finishHim(Throwable failure, List<Failure> indexingFailures, List<ShardSearchFailure> searchFailures, boolean timedOut) {, +            listener.onResponse(, +                    buildResponse(timeValueNanos(System.nanoTime() - startTime.get()), indexingFailures, searchFailures, timedOut));, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/BulkIndexByScrollResponse.java, +    private boolean timedOut;, +            List<ShardSearchFailure> searchFailures, boolean timedOut) {, +        this.timedOut = timedOut;, +    /**, +     * Did any of the sub-requests that were part of this request timeout?, +     */, +    public boolean isTimedOut() {, +        return timedOut;, +    }, +, +        out.writeBoolean(timedOut);, +        this.timedOut = in.readBoolean();, +        builder.field("timed_out", timedOut);, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/BulkIndexByScrollResponseContentListener.java, +        if (response.isTimedOut()) {, +            status = RestStatus.REQUEST_TIMEOUT;, +        }, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollAction.java, +    protected abstract Response buildResponse(TimeValue took, List<Failure> indexingFailures, List<ShardSearchFailure> searchFailures,, +            boolean timedOut);, +        if (    // If any of the shards failed that should abort the request., +                (searchResponse.getShardFailures() != null && searchResponse.getShardFailures().length > 0)]