[+++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +    private boolean detectNoop = true;, +     * Should this update attempt to detect if it is a noop? Defaults to true., +    /**, +     * Should this update attempt to detect if it is a noop? Defaults to true., +     */, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +    private boolean detectNoop = true;, +     * Should this update attempt to detect if it is a noop? Defaults to true., +    /**, +     * Should this update attempt to detect if it is a noop? Defaults to true., +     */, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +     * Defautls to true., +, +    /**, +     * Set the new ttl of the document. Note that if detectNoop is true (the default), +     * and the source of the document isn't changed then the ttl update won't take, +     * effect., +     */, +    public UpdateRequestBuilder setTtl(Long ttl) {, +        request.doc().ttl(ttl);, +        return this;, +    }, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +    private boolean detectNoop = true;, +     * Should this update attempt to detect if it is a noop? Defaults to true., +    /**, +     * Should this update attempt to detect if it is a noop? Defaults to true., +     */, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +     * Defautls to true., +, +    /**, +     * Set the new ttl of the document. Note that if detectNoop is true (the default), +     * and the source of the document isn't changed then the ttl update won't take, +     * effect., +     */, +    public UpdateRequestBuilder setTtl(Long ttl) {, +        request.doc().ttl(ttl);, +        return this;, +    }, +++ b/core/src/test/java/org/elasticsearch/document/BulkIT.java, +                .add(client().prepareUpdate("test", "type", "e1").setDoc("field", "4").setVersion(20).setVersionType(VersionType.INTERNAL)).get();, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +    private boolean detectNoop = true;, +     * Should this update attempt to detect if it is a noop? Defaults to true., +    /**, +     * Should this update attempt to detect if it is a noop? Defaults to true., +     */, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +     * Defautls to true., +, +    /**, +     * Set the new ttl of the document. Note that if detectNoop is true (the default), +     * and the source of the document isn't changed then the ttl update won't take, +     * effect., +     */, +    public UpdateRequestBuilder setTtl(Long ttl) {, +        request.doc().ttl(ttl);, +        return this;, +    }, +++ b/core/src/test/java/org/elasticsearch/document/BulkIT.java, +                .add(client().prepareUpdate("test", "type", "e1").setDoc("field", "4").setVersion(20).setVersionType(VersionType.INTERNAL)).get();, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +    private boolean detectNoop = true;, +     * Should this update attempt to detect if it is a noop? Defaults to true., +    /**, +     * Should this update attempt to detect if it is a noop? Defaults to true., +     */, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +     * Defautls to true., +, +    /**, +     * Set the new ttl of the document. Note that if detectNoop is true (the default), +     * and the source of the document isn't changed then the ttl update won't take, +     * effect., +     */, +    public UpdateRequestBuilder setTtl(Long ttl) {, +        request.doc().ttl(ttl);, +        return this;, +    }, +++ b/core/src/test/java/org/elasticsearch/document/BulkIT.java, +                .add(client().prepareUpdate("test", "type", "e1").setDoc("field", "4").setVersion(20).setVersionType(VersionType.INTERNAL)).get();, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenIT.java, +            /*, +             * The whole point of this test is to test these things with deleted, +             * docs in the index so we turn off detect_noop to make sure that, +             * the updates cause that., +             */, +                    .setDetectNoop(false), +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +    private boolean detectNoop = true;, +     * Should this update attempt to detect if it is a noop? Defaults to true., +    /**, +     * Should this update attempt to detect if it is a noop? Defaults to true., +     */, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java]