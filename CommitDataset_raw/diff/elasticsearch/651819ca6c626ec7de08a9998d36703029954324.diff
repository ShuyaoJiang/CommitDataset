[+++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +     * Validates that all settings in the builder are registered and valid, +     */, +    public final void validate(Settings.Builder settingsBuilder) {, +        for (Map.Entry<String, String> entry : settingsBuilder.internalMap().entrySet()) {, +            validate(entry.getKey(), entry.getValue());, +        }, +    }, +, +    /**, +     * * Validates that all given settings are registered and valid, +     */, +    public final void validate(Settings settings) {, +        for (Map.Entry<String, String> entry : settings.getAsMap().entrySet()) {, +            validate(entry.getKey(), entry.getValue());, +        }, +    }, +, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +     * Validates that all settings in the builder are registered and valid, +     */, +    public final void validate(Settings.Builder settingsBuilder) {, +        for (Map.Entry<String, String> entry : settingsBuilder.internalMap().entrySet()) {, +            validate(entry.getKey(), entry.getValue());, +        }, +    }, +, +    /**, +     * * Validates that all given settings are registered and valid, +     */, +    public final void validate(Settings settings) {, +        for (Map.Entry<String, String> entry : settings.getAsMap().entrySet()) {, +            validate(entry.getKey(), entry.getValue());, +        }, +    }, +, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopeSettings.java, +import java.util.function.Predicate;, +    public static final Predicate<String> INDEX_SETTINGS_KEY_PREDICATE = (s) -> s.startsWith(IndexMetaData.INDEX_SETTING_PREFIX);, +, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +     * Validates that all settings in the builder are registered and valid, +     */, +    public final void validate(Settings.Builder settingsBuilder) {, +        for (Map.Entry<String, String> entry : settingsBuilder.internalMap().entrySet()) {, +            validate(entry.getKey(), entry.getValue());, +        }, +    }, +, +    /**, +     * * Validates that all given settings are registered and valid, +     */, +    public final void validate(Settings settings) {, +        for (Map.Entry<String, String> entry : settings.getAsMap().entrySet()) {, +            validate(entry.getKey(), entry.getValue());, +        }, +    }, +, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopeSettings.java, +import java.util.function.Predicate;, +    public static final Predicate<String> INDEX_SETTINGS_KEY_PREDICATE = (s) -> s.startsWith(IndexMetaData.INDEX_SETTING_PREFIX);, +, +++ b/core/src/main/java/org/elasticsearch/common/settings/Settings.java, +import java.util.function.Predicate;, +     * Returns a new settings object that contains all setting of the current one filtered by the given settings key predicate., +     */, +    public Settings filter(Predicate<String> predicate) {, +        Builder builder = new Builder();, +        for (Map.Entry<String, String> entry : getAsMap().entrySet()) {, +            if (predicate.test(entry.getKey())) {, +                builder.put(entry.getKey(), entry.getValue());, +            }, +        }, +        return builder.build();, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +     * Validates that all settings in the builder are registered and valid, +     */, +    public final void validate(Settings.Builder settingsBuilder) {, +        for (Map.Entry<String, String> entry : settingsBuilder.internalMap().entrySet()) {, +            validate(entry.getKey(), entry.getValue());, +        }, +    }, +, +    /**, +     * * Validates that all given settings are registered and valid, +     */, +    public final void validate(Settings settings) {, +        for (Map.Entry<String, String> entry : settings.getAsMap().entrySet()) {, +            validate(entry.getKey(), entry.getValue());, +        }, +    }]