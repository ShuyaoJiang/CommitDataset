[+++ b/all-signatures.txt, +@defaultMessage Convert to URI, +java.net.URL#getPath(), +java.net.URL#getFile(), +++ b/all-signatures.txt, +@defaultMessage Convert to URI, +java.net.URL#getPath(), +java.net.URL#getFile(), +++ b/pom.xml, +                                <signaturesFile>all-signatures.txt</signaturesFile>, +                            <signaturesFiles>, +                                <signaturesFile>test-signatures.txt</signaturesFile>, +                                <signaturesFile>all-signatures.txt</signaturesFile>, +                            </signaturesFiles>, +++ b/all-signatures.txt, +@defaultMessage Convert to URI, +java.net.URL#getPath(), +java.net.URL#getFile(), +++ b/pom.xml, +                                <signaturesFile>all-signatures.txt</signaturesFile>, +                            <signaturesFiles>, +                                <signaturesFile>test-signatures.txt</signaturesFile>, +                                <signaturesFile>all-signatures.txt</signaturesFile>, +                            </signaturesFiles>, +++ b/src/test/java/org/elasticsearch/plugin/PluginManagerTests.java, +import java.net.URI;, +        URI uri = URI.create(PluginManagerTests.class.getResource("plugin_single_folder.zip").toString());, +        downloadAndExtract(pluginName, "file://" + uri.getPath());, +        URI uri = URI.create(PluginManagerTests.class.getResource("plugin_folder_site.zip").toString());, +        downloadAndExtract(pluginName, "file://" + uri.getPath());, +        URI uri = URI.create(PluginManagerTests.class.getResource("plugin_without_folders.zip").toString());, +        downloadAndExtract(pluginName, "file://" + uri.getPath());, +        URI uri = URI.create(PluginManagerTests.class.getResource("plugin_folder_file.zip").toString());, +        downloadAndExtract(pluginName, "file://" + uri.getPath());, +        URI uri = URI.create(PluginManagerTests.class.getResource("plugin_with_sourcefiles.zip").toString());, +        downloadAndExtract(pluginName, "file://" + uri.getPath());, +        PluginManager pluginManager = pluginManager("file://".concat(, +                URI.create(PluginManagerTests.class.getResource("plugin_with_classfile.zip").toString()).getPath()));, +        PluginManager pluginManager = pluginManager("file://".concat(, +                URI.create(PluginManagerTests.class.getResource("plugin_without_folders.zip").toString()).getPath()));, +        singlePluginInstallAndRemove("plugintest", "file://".concat(, +                URI.create(PluginManagerTests.class.getResource("plugin_without_folders.zip").toString()).getPath()));, +        singlePluginInstallAndRemove("groupid/plugintest/1.0.0", "file://".concat(, +                URI.create(PluginManagerTests.class.getResource("plugin_without_folders.zip").toString()).getPath()));, +        singlePluginInstallAndRemove("groupid/plugintest", "file://".concat(, +                URI.create(PluginManagerTests.class.getResource("plugin_without_folders.zip").toString()).getPath()));, +++ b/all-signatures.txt, +@defaultMessage Convert to URI, +java.net.URL#getPath(), +java.net.URL#getFile(), +++ b/pom.xml, +                                <signaturesFile>all-signatures.txt</signaturesFile>, +                            <signaturesFiles>, +                                <signaturesFile>test-signatures.txt</signaturesFile>, +                                <signaturesFile>all-signatures.txt</signaturesFile>, +                            </signaturesFiles>, +++ b/src/test/java/org/elasticsearch/plugin/PluginManagerTests.java, +import java.net.URI;, +        URI uri = URI.create(PluginManagerTests.class.getResource("plugin_single_folder.zip").toString());, +        downloadAndExtract(pluginName, "file://" + uri.getPath());, +        URI uri = URI.create(PluginManagerTests.class.getResource("plugin_folder_site.zip").toString());, +        downloadAndExtract(pluginName, "file://" + uri.getPath());, +        URI uri = URI.create(PluginManagerTests.class.getResource("plugin_without_folders.zip").toString());, +        downloadAndExtract(pluginName, "file://" + uri.getPath());, +        URI uri = URI.create(PluginManagerTests.class.getResource("plugin_folder_file.zip").toString());, +        downloadAndExtract(pluginName, "file://" + uri.getPath());, +        URI uri = URI.create(PluginManagerTests.class.getResource("plugin_with_sourcefiles.zip").toString());, +        downloadAndExtract(pluginName, "file://" + uri.getPath());, +        PluginManager pluginManager = pluginManager("file://".concat(, +                URI.create(PluginManagerTests.class.getResource("plugin_with_classfile.zip").toString()).getPath()));, +        PluginManager pluginManager = pluginManager("file://".concat(, +                URI.create(PluginManagerTests.class.getResource("plugin_without_folders.zip").toString()).getPath()));, +        singlePluginInstallAndRemove("plugintest", "file://".concat(, +                URI.create(PluginManagerTests.class.getResource("plugin_without_folders.zip").toString()).getPath()));, +        singlePluginInstallAndRemove("groupid/plugintest/1.0.0", "file://".concat(, +                URI.create(PluginManagerTests.class.getResource("plugin_without_folders.zip").toString()).getPath()));, +        singlePluginInstallAndRemove("groupid/plugintest", "file://".concat(, +                URI.create(PluginManagerTests.class.getResource("plugin_without_folders.zip").toString()).getPath()));, +++ b/test-signatures.txt]