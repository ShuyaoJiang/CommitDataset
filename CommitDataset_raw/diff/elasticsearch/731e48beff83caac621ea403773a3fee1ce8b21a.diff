[+++ b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/tree/NodeSubclassTests.java, +import org.elasticsearch.xpack.sql.expression.function.aggregate.Percentile;, +import org.elasticsearch.xpack.sql.expression.function.aggregate.PercentileRanks;, +import org.elasticsearch.xpack.sql.expression.function.aggregate.Percentiles;, +import org.elasticsearch.xpack.sql.expression.predicate.In;, +import org.elasticsearch.xpack.sql.expression.predicate.operator.comparison.InPipe;, +import java.util.Arrays;, +, +    private static final List<Class<? extends Node<?>>> CLASSES_WITH_MIN_TWO_CHILDREN = Arrays.asList(, +        In.class, InPipe.class, Percentile.class, Percentiles.class, PercentileRanks.class);, +, +, +                return makeMap(toBuildClass, pt);, +                return makeList(toBuildClass, pt);, +    private static List<?> makeList(Class<? extends Node<?>> toBuildClass, ParameterizedType listType) throws Exception {, +        return makeList(toBuildClass, listType, randomSizeForCollection(toBuildClass));, +    }, +, +    private static Object makeMap(Class<? extends Node<?>> toBuildClass, ParameterizedType pt) throws Exception {, +        Map<Object, Object> map = new HashMap<>();, +        int size = randomSizeForCollection(toBuildClass);, +        while (map.size() < size) {, +            Object key = makeArg(toBuildClass, pt.getActualTypeArguments()[0]);, +            Object value = makeArg(toBuildClass, pt.getActualTypeArguments()[1]);, +            map.put(key, value);, +        }, +        return map;, +    }, +, +    private static int randomSizeForCollection(Class<? extends Node<?>> toBuildClass) {, +        int minCollectionLength = 0;, +        int maxCollectionLength = 10;, +, +        if (CLASSES_WITH_MIN_TWO_CHILDREN.stream().anyMatch(c -> c == toBuildClass)) {, +            minCollectionLength = 2;, +        }, +        return between(minCollectionLength, maxCollectionLength);, +    }, +]