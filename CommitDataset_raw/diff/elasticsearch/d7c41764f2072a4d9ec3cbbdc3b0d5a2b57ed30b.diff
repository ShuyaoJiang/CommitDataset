[+++ b/client/src/main/java/org/elasticsearch/client/AbstractStaticConnectionPool.java, + * Base static connection pool implementation that marks connections as dead/alive when needed., + * Provides a stream of alive connections or dead ones that should be retried for each {@link #nextConnection()} call., + * and resurrected so that a last resort request attempt can be performed., + * handled in subclasses depending on the usecase (e.g. defining the list volatile or final when needed)., +    /**, +     * Allows to retrieve the concrete list of connections. Not defined directly as a member, +     * of this class as subclasses may need to handle concurrency if the list can change, for, +     * instance defining the field as volatile. On the other hand static implementations, +     * can just make the list final instead., +     */, +    /**, +     * Helper method to be used by subclasses when needing to create a new list, +     * of connections given their corresponding hosts, +     */, +++ b/client/src/main/java/org/elasticsearch/client/AbstractStaticConnectionPool.java, + * Base static connection pool implementation that marks connections as dead/alive when needed., + * Provides a stream of alive connections or dead ones that should be retried for each {@link #nextConnection()} call., + * and resurrected so that a last resort request attempt can be performed., + * handled in subclasses depending on the usecase (e.g. defining the list volatile or final when needed)., +    /**, +     * Allows to retrieve the concrete list of connections. Not defined directly as a member, +     * of this class as subclasses may need to handle concurrency if the list can change, for, +     * instance defining the field as volatile. On the other hand static implementations, +     * can just make the list final instead., +     */, +    /**, +     * Helper method to be used by subclasses when needing to create a new list, +     * of connections given their corresponding hosts, +     */, +++ b/client/src/main/java/org/elasticsearch/client/StaticConnectionPool.java, +/**, + * Static implementation of {@link ConnectionPool}. Its underlying list of connections is immutable., + */, +++ b/client/src/main/java/org/elasticsearch/client/AbstractStaticConnectionPool.java, + * Base static connection pool implementation that marks connections as dead/alive when needed., + * Provides a stream of alive connections or dead ones that should be retried for each {@link #nextConnection()} call., + * and resurrected so that a last resort request attempt can be performed., + * handled in subclasses depending on the usecase (e.g. defining the list volatile or final when needed)., +    /**, +     * Allows to retrieve the concrete list of connections. Not defined directly as a member, +     * of this class as subclasses may need to handle concurrency if the list can change, for, +     * instance defining the field as volatile. On the other hand static implementations, +     * can just make the list final instead., +     */, +    /**, +     * Helper method to be used by subclasses when needing to create a new list, +     * of connections given their corresponding hosts, +     */, +++ b/client/src/main/java/org/elasticsearch/client/StaticConnectionPool.java, +/**, + * Static implementation of {@link ConnectionPool}. Its underlying list of connections is immutable., + */, +++ b/client/src/main/java/org/elasticsearch/client/sniff/Sniffer.java, + * Calls nodes info api and returns a list of http hosts extracted from it., +//TODO This could potentially be using _cat/nodes which wouldn't require jackson as a dependency, but we'd have bw comp problems with 2.x, +++ b/client/src/main/java/org/elasticsearch/client/AbstractStaticConnectionPool.java, + * Base static connection pool implementation that marks connections as dead/alive when needed., + * Provides a stream of alive connections or dead ones that should be retried for each {@link #nextConnection()} call., + * and resurrected so that a last resort request attempt can be performed., + * handled in subclasses depending on the usecase (e.g. defining the list volatile or final when needed)., +    /**, +     * Allows to retrieve the concrete list of connections. Not defined directly as a member, +     * of this class as subclasses may need to handle concurrency if the list can change, for, +     * instance defining the field as volatile. On the other hand static implementations, +     * can just make the list final instead., +     */, +    /**, +     * Helper method to be used by subclasses when needing to create a new list, +     * of connections given their corresponding hosts, +     */, +++ b/client/src/main/java/org/elasticsearch/client/StaticConnectionPool.java, +/**, + * Static implementation of {@link ConnectionPool}. Its underlying list of connections is immutable., + */, +++ b/client/src/main/java/org/elasticsearch/client/sniff/Sniffer.java, + * Calls nodes info api and returns a list of http hosts extracted from it., +//TODO This could potentially be using _cat/nodes which wouldn't require jackson as a dependency, but we'd have bw comp problems with 2.x, +++ b/client/src/main/java/org/elasticsearch/client/sniff/SniffingConnectionPool.java, +/**, + * Connection pool implementation that sniffs nodes from elasticsearch at regular intervals., + * Can optionally sniff nodes on each failure as well., + */]