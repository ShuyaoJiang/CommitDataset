[+++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcConfiguration.java, +    ZoneId zoneId() {, +        return zoneId;, +    }, +, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcConfiguration.java, +    ZoneId zoneId() {, +        return zoneId;, +    }, +, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcDateUtils.java, +    private JdbcDateUtils() {, +    }, +, +    private static final long DAY_IN_MILLIS = 60 * 60 * 24 * 1000L;, +    private static ZonedDateTime asDateTime(String date) {, +        return ISO_WITH_MILLIS.parse(date, ZonedDateTime::from);, +    }, +, +        return asDateTime(date).toInstant().toEpochMilli();, +        ZonedDateTime zdt = asDateTime(date);, +        return new Date(zdt.toLocalDate().atStartOfDay(zdt.getZone()).toInstant().toEpochMilli());, +    /**, +     * In contrast to {@link JdbcDateUtils#asDate(String)} here we just want to eliminate, +     * the date part and just set it to EPOCH (1970-01-1), +     */, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcConfiguration.java, +    ZoneId zoneId() {, +        return zoneId;, +    }, +, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcDateUtils.java, +    private JdbcDateUtils() {, +    }, +, +    private static final long DAY_IN_MILLIS = 60 * 60 * 24 * 1000L;, +    private static ZonedDateTime asDateTime(String date) {, +        return ISO_WITH_MILLIS.parse(date, ZonedDateTime::from);, +    }, +, +        return asDateTime(date).toInstant().toEpochMilli();, +        ZonedDateTime zdt = asDateTime(date);, +        return new Date(zdt.toLocalDate().atStartOfDay(zdt.getZone()).toInstant().toEpochMilli());, +    /**, +     * In contrast to {@link JdbcDateUtils#asDate(String)} here we just want to eliminate, +     * the date part and just set it to EPOCH (1970-01-1), +     */, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcHttpClient.java, +import org.elasticsearch.xpack.sql.proto.RequestInfo;, +                SqlQueryRequest sqlRequest = new SqlQueryRequest(sql, params, null, conCfg.zoneId(),, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcConfiguration.java, +    ZoneId zoneId() {, +        return zoneId;, +    }, +, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcDateUtils.java, +    private JdbcDateUtils() {, +    }, +, +    private static final long DAY_IN_MILLIS = 60 * 60 * 24 * 1000L;, +    private static ZonedDateTime asDateTime(String date) {, +        return ISO_WITH_MILLIS.parse(date, ZonedDateTime::from);, +    }, +, +        return asDateTime(date).toInstant().toEpochMilli();, +        ZonedDateTime zdt = asDateTime(date);, +        return new Date(zdt.toLocalDate().atStartOfDay(zdt.getZone()).toInstant().toEpochMilli());, +    /**, +     * In contrast to {@link JdbcDateUtils#asDate(String)} here we just want to eliminate, +     * the date part and just set it to EPOCH (1970-01-1), +     */, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcHttpClient.java, +import org.elasticsearch.xpack.sql.proto.RequestInfo;, +                SqlQueryRequest sqlRequest = new SqlQueryRequest(sql, params, null, conCfg.zoneId(),, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcResultSet.java, +                return asMillisSinceEpoch(val.toString());, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcConfiguration.java, +    ZoneId zoneId() {, +        return zoneId;, +    }, +, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcDateUtils.java, +    private JdbcDateUtils() {, +    }, +, +    private static final long DAY_IN_MILLIS = 60 * 60 * 24 * 1000L;, +    private static ZonedDateTime asDateTime(String date) {, +        return ISO_WITH_MILLIS.parse(date, ZonedDateTime::from);, +    }, +, +        return asDateTime(date).toInstant().toEpochMilli();, +        ZonedDateTime zdt = asDateTime(date);, +        return new Date(zdt.toLocalDate().atStartOfDay(zdt.getZone()).toInstant().toEpochMilli());, +    /**, +     * In contrast to {@link JdbcDateUtils#asDate(String)} here we just want to eliminate, +     * the date part and just set it to EPOCH (1970-01-1), +     */, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcHttpClient.java, +import org.elasticsearch.xpack.sql.proto.RequestInfo;, +                SqlQueryRequest sqlRequest = new SqlQueryRequest(sql, params, null, conCfg.zoneId(),]