[+++ b/core/src/main/java/org/elasticsearch/common/settings/Setting.java, +    private static final EnumSet<Property> EMPTY_PROPERTIES = EnumSet.noneOf(Property.class);, +, +        if (properties == null) {, +            throw new IllegalArgumentException("properties can not be null for setting [" + key + "]");, +        }, +            this.properties = EMPTY_PROPERTIES;, +++ b/core/src/main/java/org/elasticsearch/common/settings/Setting.java, +    private static final EnumSet<Property> EMPTY_PROPERTIES = EnumSet.noneOf(Property.class);, +, +        if (properties == null) {, +            throw new IllegalArgumentException("properties can not be null for setting [" + key + "]");, +        }, +            this.properties = EMPTY_PROPERTIES;, +++ b/core/src/test/java/org/elasticsearch/common/settings/SettingTests.java, +, +    /**, +     * We can't have Null properties, +     */, +    public void testRejectNullProperties() {, +        try {, +            Setting.simpleString("foo.bar", (Property[]) null);, +            fail();, +        } catch (IllegalArgumentException ex) {, +            assertThat(ex.getMessage(), containsString("properties can not be null for setting"));, +        }, +    }]