[+++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/AutoFollowIT.java, +import static org.hamcrest.Matchers.hasSize;, +import static org.hamcrest.Matchers.nullValue;, +        long numIndices = randomIntBetween(4, 8);, +                metaData[0] = getFollowerCluster().clusterService().state().metaData();, +, +                assertThat(metaData[0].indices().size(), equalTo((int) expectedVal1));, +                AutoFollowMetadata autoFollowMetadata = metaData[0].custom(AutoFollowMetadata.TYPE);, +                assertThat(autoFollowMetadata.getFollowedLeaderIndexUUIDs().get("my-pattern"), hasSize((int) expectedVal1));, +                metaData[0] = getFollowerCluster().clusterService().state().metaData();, +, +                assertThat(metaData[0].indices().size(), equalTo((int )expectedVal1));, +                AutoFollowMetadata autoFollowMetadata = metaData[0].custom(AutoFollowMetadata.TYPE);, +                assertThat(autoFollowMetadata.getFollowedLeaderIndexUUIDs().get("my-pattern"), nullValue());, +                metaData[0] = getFollowerCluster().clusterService().state().metaData();, +, +                assertThat(metaData[0].indices().size(), equalTo((int) expectedVal2));, +                AutoFollowMetadata autoFollowMetadata = metaData[0].custom(AutoFollowMetadata.TYPE);, +                // expectedVal2 + 1, because logs-does-not-count is also marked as auto followed., +                // (This is because indices created before a pattern exists are not auto followed and are just marked as such.), +                assertThat(autoFollowMetadata.getFollowedLeaderIndexUUIDs().get("my-pattern"), hasSize((int) expectedVal2 + 1));]