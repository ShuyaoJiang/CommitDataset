[+++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +        components.addAll(watcher.createComponents(getClock(), scriptService));, +, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +        components.addAll(watcher.createComponents(getClock(), scriptService));, +, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/Watcher.java, +import org.elasticsearch.script.ScriptService;, +import org.elasticsearch.script.ScriptSettings;, +import org.elasticsearch.xpack.support.clock.Clock;, +import org.elasticsearch.xpack.watcher.condition.AlwaysCondition;, +import org.elasticsearch.xpack.watcher.condition.ArrayCompareCondition;, +import org.elasticsearch.xpack.watcher.condition.CompareCondition;, +import org.elasticsearch.xpack.watcher.condition.ConditionFactory;, +import org.elasticsearch.xpack.watcher.condition.ConditionRegistry;, +import org.elasticsearch.xpack.watcher.condition.NeverCondition;, +import org.elasticsearch.xpack.watcher.condition.ScriptCondition;, +import java.util.HashMap;, +import java.util.Map;, +    public Collection<Object> createComponents(Clock clock, ScriptService scriptService) {, +        final Map<String, ConditionFactory> parsers = new HashMap<>();, +        parsers.put(AlwaysCondition.TYPE, (c, id, p, upgrade) -> AlwaysCondition.parse(id, p));, +        parsers.put(NeverCondition.TYPE, (c, id, p, upgrade) -> NeverCondition.parse(id, p));, +        parsers.put(ArrayCompareCondition.TYPE, (c, id, p, upgrade) -> ArrayCompareCondition.parse(c, id, p));, +        parsers.put(CompareCondition.TYPE, (c, id, p, upgrade) -> CompareCondition.parse(c, id, p));, +        String defaultLegacyScriptLanguage = ScriptSettings.getLegacyDefaultLang(settings);, +        parsers.put(ScriptCondition.TYPE, (c, id, p, upgrade) -> ScriptCondition.parse(scriptService, id, p, upgrade,, +                defaultLegacyScriptLanguage));, +        return Collections.singleton(new ConditionRegistry(Collections.unmodifiableMap(parsers), clock));, +    }, +, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +        components.addAll(watcher.createComponents(getClock(), scriptService));, +, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/Watcher.java, +import org.elasticsearch.script.ScriptService;, +import org.elasticsearch.script.ScriptSettings;, +import org.elasticsearch.xpack.support.clock.Clock;, +import org.elasticsearch.xpack.watcher.condition.AlwaysCondition;, +import org.elasticsearch.xpack.watcher.condition.ArrayCompareCondition;, +import org.elasticsearch.xpack.watcher.condition.CompareCondition;, +import org.elasticsearch.xpack.watcher.condition.ConditionFactory;, +import org.elasticsearch.xpack.watcher.condition.ConditionRegistry;, +import org.elasticsearch.xpack.watcher.condition.NeverCondition;, +import org.elasticsearch.xpack.watcher.condition.ScriptCondition;, +import java.util.HashMap;, +import java.util.Map;, +    public Collection<Object> createComponents(Clock clock, ScriptService scriptService) {, +        final Map<String, ConditionFactory> parsers = new HashMap<>();, +        parsers.put(AlwaysCondition.TYPE, (c, id, p, upgrade) -> AlwaysCondition.parse(id, p));, +        parsers.put(NeverCondition.TYPE, (c, id, p, upgrade) -> NeverCondition.parse(id, p));, +        parsers.put(ArrayCompareCondition.TYPE, (c, id, p, upgrade) -> ArrayCompareCondition.parse(c, id, p));, +        parsers.put(CompareCondition.TYPE, (c, id, p, upgrade) -> CompareCondition.parse(c, id, p));, +        String defaultLegacyScriptLanguage = ScriptSettings.getLegacyDefaultLang(settings);, +        parsers.put(ScriptCondition.TYPE, (c, id, p, upgrade) -> ScriptCondition.parse(scriptService, id, p, upgrade,, +                defaultLegacyScriptLanguage));, +        return Collections.singleton(new ConditionRegistry(Collections.unmodifiableMap(parsers), clock));, +    }, +, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/actions/ActionWrapper.java, +import org.elasticsearch.xpack.watcher.condition.Condition;, +    private final Condition condition;, +                         @Nullable Condition condition,, +    public Condition condition() {, +        Condition condition = null;, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +        components.addAll(watcher.createComponents(getClock(), scriptService));, +, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/Watcher.java, +import org.elasticsearch.script.ScriptService;, +import org.elasticsearch.script.ScriptSettings;, +import org.elasticsearch.xpack.support.clock.Clock;, +import org.elasticsearch.xpack.watcher.condition.AlwaysCondition;, +import org.elasticsearch.xpack.watcher.condition.ArrayCompareCondition;, +import org.elasticsearch.xpack.watcher.condition.CompareCondition;, +import org.elasticsearch.xpack.watcher.condition.ConditionFactory;, +import org.elasticsearch.xpack.watcher.condition.ConditionRegistry;, +import org.elasticsearch.xpack.watcher.condition.NeverCondition;, +import org.elasticsearch.xpack.watcher.condition.ScriptCondition;, +import java.util.HashMap;, +import java.util.Map;, +    public Collection<Object> createComponents(Clock clock, ScriptService scriptService) {, +        final Map<String, ConditionFactory> parsers = new HashMap<>();, +        parsers.put(AlwaysCondition.TYPE, (c, id, p, upgrade) -> AlwaysCondition.parse(id, p));, +        parsers.put(NeverCondition.TYPE, (c, id, p, upgrade) -> NeverCondition.parse(id, p));, +        parsers.put(ArrayCompareCondition.TYPE, (c, id, p, upgrade) -> ArrayCompareCondition.parse(c, id, p));, +        parsers.put(CompareCondition.TYPE, (c, id, p, upgrade) -> CompareCondition.parse(c, id, p));, +        String defaultLegacyScriptLanguage = ScriptSettings.getLegacyDefaultLang(settings);, +        parsers.put(ScriptCondition.TYPE, (c, id, p, upgrade) -> ScriptCondition.parse(scriptService, id, p, upgrade,, +                defaultLegacyScriptLanguage));, +        return Collections.singleton(new ConditionRegistry(Collections.unmodifiableMap(parsers), clock));, +    }, +, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/actions/ActionWrapper.java, +import org.elasticsearch.xpack.watcher.condition.Condition;, +    private final Condition condition;, +                         @Nullable Condition condition,, +    public Condition condition() {, +        Condition condition = null;, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/client/WatchSourceBuilder.java]