[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/liveness/LivenessResponse.java, +        out.writeOptionalStreamable(node);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/liveness/LivenessResponse.java, +        out.writeOptionalStreamable(node);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +        int total;, +        int masterOnly;, +        int dataOnly;, +        int masterData;, +        int client;, +            DiscoveryNode node = nodeInfo.getNode();, +            if (node.masterNode()) {, +                if (node.dataNode()) {, +                    masterData++;, +                    masterOnly++;, +            } else if (node.dataNode()) {, +                dataOnly++;, +            } else if (node.clientNode()) {, +                client++;, +        public int getMasterOnly() {, +            return masterOnly;, +        }, +, +        public int getDataOnly() {, +            return dataOnly;, +        }, +, +        public int getMasterData() {, +            return masterData;, +        }, +, +        public int getClient() {, +            return client;, +            masterOnly = in.readVInt();, +            dataOnly = in.readVInt();, +            masterData = in.readVInt();, +            client = in.readVInt();, +            out.writeVInt(masterOnly);, +            out.writeVInt(dataOnly);, +            out.writeVInt(masterData);, +            out.writeVInt(client);, +            static final XContentBuilderString MASTER_ONLY = new XContentBuilderString("master_only");, +            static final XContentBuilderString DATA_ONLY = new XContentBuilderString("data_only");, +            static final XContentBuilderString MASTER_DATA = new XContentBuilderString("master_data");, +            static final XContentBuilderString CLIENT = new XContentBuilderString("client");, +            builder.field(Fields.MASTER_ONLY, masterOnly);, +            builder.field(Fields.DATA_ONLY, dataOnly);, +            builder.field(Fields.MASTER_DATA, masterData);, +            builder.field(Fields.CLIENT, client);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/liveness/LivenessResponse.java, +        out.writeOptionalStreamable(node);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +        int total;, +        int masterOnly;, +        int dataOnly;, +        int masterData;, +        int client;, +            DiscoveryNode node = nodeInfo.getNode();, +            if (node.masterNode()) {, +                if (node.dataNode()) {, +                    masterData++;, +                    masterOnly++;, +            } else if (node.dataNode()) {, +                dataOnly++;, +            } else if (node.clientNode()) {, +                client++;, +        public int getMasterOnly() {, +            return masterOnly;, +        }, +, +        public int getDataOnly() {, +            return dataOnly;, +        }, +, +        public int getMasterData() {, +            return masterData;, +        }, +, +        public int getClient() {, +            return client;, +            masterOnly = in.readVInt();, +            dataOnly = in.readVInt();, +            masterData = in.readVInt();, +            client = in.readVInt();, +            out.writeVInt(masterOnly);, +            out.writeVInt(dataOnly);, +            out.writeVInt(masterData);, +            out.writeVInt(client);, +            static final XContentBuilderString MASTER_ONLY = new XContentBuilderString("master_only");, +            static final XContentBuilderString DATA_ONLY = new XContentBuilderString("data_only");, +            static final XContentBuilderString MASTER_DATA = new XContentBuilderString("master_data");, +            static final XContentBuilderString CLIENT = new XContentBuilderString("client");, +            builder.field(Fields.MASTER_ONLY, masterOnly);, +            builder.field(Fields.DATA_ONLY, dataOnly);, +            builder.field(Fields.MASTER_DATA, masterData);, +            builder.field(Fields.CLIENT, client);, +++ b/core/src/main/java/org/elasticsearch/action/support/ThreadedActionListener.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +             // Should the action listener be threaded or not by default. Action listeners are automatically threaded for client, +             // nodes and transport client in order to make sure client side code is not executed on IO threads.]