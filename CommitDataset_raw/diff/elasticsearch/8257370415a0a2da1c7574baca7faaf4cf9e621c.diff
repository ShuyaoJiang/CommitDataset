[+++ b/src/main/java/org/elasticsearch/index/analysis/PreBuiltCharFilterFactoryFactory.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.indices.analysis.PreBuiltCharFilters;, +, +import java.util.Locale;, +        Version indexVersion = settings.getAsVersion(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT);, +        if (!Version.CURRENT.equals(indexVersion)) {, +            return PreBuiltCharFilters.valueOf(name.toUpperCase(Locale.ROOT)).getCharFilterFactory(indexVersion);, +        }, +, +++ b/src/main/java/org/elasticsearch/index/analysis/PreBuiltCharFilterFactoryFactory.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.indices.analysis.PreBuiltCharFilters;, +, +import java.util.Locale;, +        Version indexVersion = settings.getAsVersion(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT);, +        if (!Version.CURRENT.equals(indexVersion)) {, +            return PreBuiltCharFilters.valueOf(name.toUpperCase(Locale.ROOT)).getCharFilterFactory(indexVersion);, +        }, +, +++ b/src/main/java/org/elasticsearch/index/analysis/PreBuiltTokenFilterFactoryFactory.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.indices.analysis.PreBuiltTokenFilters;, +, +import java.util.Locale;, +        Version indexVersion = settings.getAsVersion(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT);, +        if (!Version.CURRENT.equals(indexVersion)) {, +            return PreBuiltTokenFilters.valueOf(name.toUpperCase(Locale.ROOT)).getTokenFilterFactory(indexVersion);, +        }, +++ b/src/main/java/org/elasticsearch/index/analysis/PreBuiltCharFilterFactoryFactory.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.indices.analysis.PreBuiltCharFilters;, +, +import java.util.Locale;, +        Version indexVersion = settings.getAsVersion(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT);, +        if (!Version.CURRENT.equals(indexVersion)) {, +            return PreBuiltCharFilters.valueOf(name.toUpperCase(Locale.ROOT)).getCharFilterFactory(indexVersion);, +        }, +, +++ b/src/main/java/org/elasticsearch/index/analysis/PreBuiltTokenFilterFactoryFactory.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.indices.analysis.PreBuiltTokenFilters;, +, +import java.util.Locale;, +        Version indexVersion = settings.getAsVersion(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT);, +        if (!Version.CURRENT.equals(indexVersion)) {, +            return PreBuiltTokenFilters.valueOf(name.toUpperCase(Locale.ROOT)).getTokenFilterFactory(indexVersion);, +        }, +++ b/src/main/java/org/elasticsearch/index/analysis/PreBuiltTokenizerFactoryFactory.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.indices.analysis.PreBuiltTokenizers;, +, +import java.util.Locale;, +        Version indexVersion = settings.getAsVersion(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT);, +        if (!Version.CURRENT.equals(indexVersion)) {, +            TokenizerFactory versionedTokenizerFactory = PreBuiltTokenizers.valueOf(name.toUpperCase(Locale.ROOT)).getTokenizerFactory(indexVersion);, +            return versionedTokenizerFactory;, +        }, +, +++ b/src/main/java/org/elasticsearch/index/analysis/PreBuiltCharFilterFactoryFactory.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.indices.analysis.PreBuiltCharFilters;, +, +import java.util.Locale;, +        Version indexVersion = settings.getAsVersion(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT);, +        if (!Version.CURRENT.equals(indexVersion)) {, +            return PreBuiltCharFilters.valueOf(name.toUpperCase(Locale.ROOT)).getCharFilterFactory(indexVersion);, +        }, +, +++ b/src/main/java/org/elasticsearch/index/analysis/PreBuiltTokenFilterFactoryFactory.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.indices.analysis.PreBuiltTokenFilters;, +, +import java.util.Locale;, +        Version indexVersion = settings.getAsVersion(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT);, +        if (!Version.CURRENT.equals(indexVersion)) {, +            return PreBuiltTokenFilters.valueOf(name.toUpperCase(Locale.ROOT)).getTokenFilterFactory(indexVersion);, +        }, +++ b/src/main/java/org/elasticsearch/index/analysis/PreBuiltTokenizerFactoryFactory.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.indices.analysis.PreBuiltTokenizers;, +, +import java.util.Locale;, +        Version indexVersion = settings.getAsVersion(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT);, +        if (!Version.CURRENT.equals(indexVersion)) {, +            TokenizerFactory versionedTokenizerFactory = PreBuiltTokenizers.valueOf(name.toUpperCase(Locale.ROOT)).getTokenizerFactory(indexVersion);, +            return versionedTokenizerFactory;, +        }, +, +++ b/src/main/java/org/elasticsearch/indices/analysis/IndicesAnalysisService.java, +        // Analyzers]