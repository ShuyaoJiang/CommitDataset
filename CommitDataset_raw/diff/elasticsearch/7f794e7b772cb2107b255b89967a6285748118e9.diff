[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +         * Read from a stream., +         */, +        public Failure(StreamInput in) throws IOException {, +            index = in.readString();, +            type = in.readString();, +            id = in.readOptionalString();, +            cause = in.readThrowable();, +            status = ExceptionsHelper.status(cause);, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            out.writeString(getIndex());, +            out.writeString(getType());, +            out.writeOptionalString(getId());, +            out.writeThrowable(getCause());, +        }, +, +, +        /**, +            failure = new Failure(in);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +         * Read from a stream., +         */, +        public Failure(StreamInput in) throws IOException {, +            index = in.readString();, +            type = in.readString();, +            id = in.readOptionalString();, +            cause = in.readThrowable();, +            status = ExceptionsHelper.status(cause);, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            out.writeString(getIndex());, +            out.writeString(getType());, +            out.writeOptionalString(getId());, +            out.writeThrowable(getCause());, +        }, +, +, +        /**, +            failure = new Failure(in);, +++ b/core/src/main/java/org/elasticsearch/action/ingest/SimulateDocumentBaseResult.java, +    private final WriteableIngestDocument ingestDocument;, +    private final Exception failure;, +        failure = null;, +        ingestDocument = null;, +    /**, +     * Read from a stream., +     */, +    public SimulateDocumentBaseResult(StreamInput in) throws IOException {, +            ingestDocument = null;, +            failure = in.readThrowable();, +        } else {, +            ingestDocument = new WriteableIngestDocument(in);, +            failure = null;, +    public IngestDocument getIngestDocument() {, +        if (ingestDocument == null) {, +            return null;, +        }, +        return ingestDocument.getIngestDocument();, +    }, +, +    public Exception getFailure() {, +        return failure;, +    }, +, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +         * Read from a stream., +         */, +        public Failure(StreamInput in) throws IOException {, +            index = in.readString();, +            type = in.readString();, +            id = in.readOptionalString();, +            cause = in.readThrowable();, +            status = ExceptionsHelper.status(cause);, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            out.writeString(getIndex());, +            out.writeString(getType());, +            out.writeOptionalString(getId());, +            out.writeThrowable(getCause());, +        }, +, +, +        /**, +            failure = new Failure(in);, +++ b/core/src/main/java/org/elasticsearch/action/ingest/SimulateDocumentBaseResult.java, +    private final WriteableIngestDocument ingestDocument;, +    private final Exception failure;, +        failure = null;, +        ingestDocument = null;]