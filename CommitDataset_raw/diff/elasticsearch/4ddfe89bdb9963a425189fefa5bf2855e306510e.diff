[+++ b/src/test/java/org/elasticsearch/indices/template/SimpleIndexTemplateTests.java, +import static org.elasticsearch.test.hamcrest.ElasticSearchAssertions.assertHitCount;, +import static org.elasticsearch.test.hamcrest.ElasticSearchAssertions.assertThrows;, +, +        // clean all templates setup by the framework., +        client().admin().indices().prepareDeleteTemplate("*").get();, +, +        // check get all templates on an empty index., +        GetIndexTemplatesResponse response = client().admin().indices().prepareGetTemplates().get();, +        assertThat(response.getIndexTemplates(), empty());, +, +, +                .get();, +                .get();, +        assertThrows(client().admin().indices().preparePutTemplate("template_2"), +                , IndexTemplateAlreadyExistsException.class, +        );, +, +        response = client().admin().indices().prepareGetTemplates().get();, +        assertThat(response.getIndexTemplates(), hasSize(2));, +, +        assertHitCount(searchResponse, 1);, +        assertHitCount(searchResponse, 1);, +        assertThrows(client().admin().indices().prepareGetTemplates(names),, +                ActionRequestValidationException.class,, +                "get template with " + Arrays.toString(names));, +++ b/src/test/java/org/elasticsearch/indices/template/SimpleIndexTemplateTests.java, +import static org.elasticsearch.test.hamcrest.ElasticSearchAssertions.assertHitCount;, +import static org.elasticsearch.test.hamcrest.ElasticSearchAssertions.assertThrows;, +, +        // clean all templates setup by the framework., +        client().admin().indices().prepareDeleteTemplate("*").get();, +, +        // check get all templates on an empty index., +        GetIndexTemplatesResponse response = client().admin().indices().prepareGetTemplates().get();, +        assertThat(response.getIndexTemplates(), empty());, +, +, +                .get();, +                .get();, +        assertThrows(client().admin().indices().preparePutTemplate("template_2"), +                , IndexTemplateAlreadyExistsException.class, +        );, +, +        response = client().admin().indices().prepareGetTemplates().get();, +        assertThat(response.getIndexTemplates(), hasSize(2));, +, +        assertHitCount(searchResponse, 1);, +        assertHitCount(searchResponse, 1);, +        assertThrows(client().admin().indices().prepareGetTemplates(names),, +                ActionRequestValidationException.class,, +                "get template with " + Arrays.toString(names));, +++ b/src/test/java/org/elasticsearch/test/hamcrest/ElasticSearchAssertions.java, +    public static <E extends Throwable> void assertThrows(ActionRequestBuilder<?, ?, ?> builder, Class<E> exceptionClass, String extraInfo) {, +        assertThrows(builder.execute(), exceptionClass, extraInfo);, +    }, +, +        assertThrows(future, exceptionClass, null);, +    }, +, +    public static <E extends Throwable> void assertThrows(ActionFuture future, Class<E> exceptionClass, String extraInfo) {, +        extraInfo = extraInfo == null || extraInfo.isEmpty() ? "" : extraInfo + ": ";, +        extraInfo += "expected a " + exceptionClass + " exception to be thrown";, +, +            assertThat(extraInfo, esException.unwrapCause(), instanceOf(exceptionClass));, +            assertThat(extraInfo, e, instanceOf(exceptionClass));, +            throw new AssertionError(extraInfo);]