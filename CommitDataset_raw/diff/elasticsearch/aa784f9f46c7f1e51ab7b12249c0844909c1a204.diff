[+++ b/sql-clients/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/InfoRequest.java, +import org.elasticsearch.xpack.sql.jdbc.net.protocol.Proto.Action;, +, +    public InfoRequest() {, +        return new InfoRequest();, +++ b/sql-clients/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/InfoRequest.java, +import org.elasticsearch.xpack.sql.jdbc.net.protocol.Proto.Action;, +, +    public InfoRequest() {, +        return new InfoRequest();, +++ b/sql-clients/jdbc/build.gradle, +forbiddenApisTest {, +  //we are using jdk-internal instead of jdk-non-portable to allow for com.sun.net.httpserver.* usage, +  bundledSignatures -= 'jdk-non-portable', +  bundledSignatures += 'jdk-internal', +}, +, +++ b/sql-clients/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/InfoRequest.java, +import org.elasticsearch.xpack.sql.jdbc.net.protocol.Proto.Action;, +, +    public InfoRequest() {, +        return new InfoRequest();, +++ b/sql-clients/jdbc/build.gradle, +forbiddenApisTest {, +  //we are using jdk-internal instead of jdk-non-portable to allow for com.sun.net.httpserver.* usage, +  bundledSignatures -= 'jdk-non-portable', +  bundledSignatures += 'jdk-internal', +}, +, +++ b/sql-clients/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/debug/Debug.java, +import org.elasticsearch.xpack.sql.jdbc.jdbc.JdbcConfiguration;, +import org.elasticsearch.xpack.sql.jdbc.jdbc.JdbcException;, +import org.elasticsearch.xpack.sql.jdbc.util.IOUtils;, +import org.elasticsearch.xpack.sql.net.client.SuppressForbidden;, +, +import java.io.OutputStreamWriter;, +import java.nio.charset.StandardCharsets;, +import java.nio.file.Files;, +import java.util.Locale;, +            PrintStream sys = stderr();, +                ERR = new DebugLog(new PrintWriter(new OutputStreamWriter(sys, StandardCharsets.UTF_8)));, +            PrintStream sys = stdout();, +                OUT = new DebugLog(new PrintWriter(new OutputStreamWriter(sys, StandardCharsets.UTF_8)));, +                    PrintWriter print = new PrintWriter(Files.newBufferedWriter(Paths.get("").resolve(out), StandardCharsets.UTF_8));, +, +    // NOCOMMIT loggers instead, I think, +    @SuppressForbidden(reason="temporary"), +    private static PrintStream stdout() {, +        return System.out;, +    }, +    @SuppressForbidden(reason="temporary"), +    private static PrintStream stderr() {, +        return System.err;, +    }, +++ b/sql-clients/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/InfoRequest.java, +import org.elasticsearch.xpack.sql.jdbc.net.protocol.Proto.Action;, +, +    public InfoRequest() {, +        return new InfoRequest();, +++ b/sql-clients/jdbc/build.gradle, +forbiddenApisTest {, +  //we are using jdk-internal instead of jdk-non-portable to allow for com.sun.net.httpserver.* usage, +  bundledSignatures -= 'jdk-non-portable', +  bundledSignatures += 'jdk-internal', +}, +, +++ b/sql-clients/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/debug/Debug.java, +import org.elasticsearch.xpack.sql.jdbc.jdbc.JdbcConfiguration;, +import org.elasticsearch.xpack.sql.jdbc.jdbc.JdbcException;, +import org.elasticsearch.xpack.sql.jdbc.util.IOUtils;, +import org.elasticsearch.xpack.sql.net.client.SuppressForbidden;, +, +import java.io.OutputStreamWriter;, +import java.nio.charset.StandardCharsets;, +import java.nio.file.Files;, +import java.util.Locale;, +            PrintStream sys = stderr();, +                ERR = new DebugLog(new PrintWriter(new OutputStreamWriter(sys, StandardCharsets.UTF_8)));, +            PrintStream sys = stdout();, +                OUT = new DebugLog(new PrintWriter(new OutputStreamWriter(sys, StandardCharsets.UTF_8)));, +                    PrintWriter print = new PrintWriter(Files.newBufferedWriter(Paths.get("").resolve(out), StandardCharsets.UTF_8));, +, +    // NOCOMMIT loggers instead, I think, +    @SuppressForbidden(reason="temporary"), +    private static PrintStream stdout() {, +        return System.out;, +    }, +    @SuppressForbidden(reason="temporary"), +    private static PrintStream stderr() {, +        return System.err;, +    }, +++ b/sql-clients/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/debug/DebugLog.java, +import org.elasticsearch.xpack.sql.net.client.util.StringUtils;, +, +import java.util.Locale;, +    // NOCOMMIT investigate using JDK's logging. It doesn't have any dependencies and should be plenty quick when not logging., +    // NOCOMMIT there was a message about not using the Locale being faster but that violated forbidden APIs. Investigate further., +        print.printf(Locale.ROOT, HEADER + "Invoke %s#%s(%s)%n",, +        print.printf(Locale.ROOT, HEADER + "%s#%s(%s) returned %s%n",, +        print.printf(Locale.ROOT, HEADER + "%s#%s(%s) threw ",]