[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/service/InternalIndexService.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.index.AbstractIndexComponent;, +import org.elasticsearch.index.CloseableIndexComponent;, +import org.elasticsearch.index.Index;, +import org.elasticsearch.index.IndexShardAlreadyExistsException;, +import org.elasticsearch.index.IndexShardMissingException;, +import java.util.concurrent.Executor;, +    public void close(final boolean delete, final String reason, @Nullable Executor executor) {, +            executor = executor == null ? threadPool.cached() : executor;, +            executor.execute(new Runnable() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/service/InternalIndexService.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.index.AbstractIndexComponent;, +import org.elasticsearch.index.CloseableIndexComponent;, +import org.elasticsearch.index.Index;, +import org.elasticsearch.index.IndexShardAlreadyExistsException;, +import org.elasticsearch.index.IndexShardMissingException;, +import java.util.concurrent.Executor;, +    public void close(final boolean delete, final String reason, @Nullable Executor executor) {, +            executor = executor == null ? threadPool.cached() : executor;, +            executor.execute(new Runnable() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/indices/InternalIndicesService.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.common.util.concurrent.EsExecutors;, +import org.elasticsearch.index.CloseableIndexComponent;, +import org.elasticsearch.index.Index;, +import org.elasticsearch.index.IndexModule;, +import org.elasticsearch.index.IndexNameModule;, +import org.elasticsearch.index.IndexServiceManagement;, +import org.elasticsearch.index.LocalNodeIdModule;, +import java.util.concurrent.Executor;, +import java.util.concurrent.ExecutorService;, +import java.util.concurrent.Executors;, +, +        final ExecutorService indicesStopExecutor = Executors.newFixedThreadPool(5, EsExecutors.daemonThreadFactory("indices_shutdown"));, +        final ExecutorService shardsStopExecutor = Executors.newFixedThreadPool(5, EsExecutors.daemonThreadFactory("shards_shutdown"));, +, +            indicesStopExecutor.execute(new Runnable() {, +                        deleteIndex(index, false, "shutdown", shardsStopExecutor);, +        } finally {, +            shardsStopExecutor.shutdown();, +            indicesStopExecutor.shutdown();, +        deleteIndex(index, false, reason, null);, +        deleteIndex(index, true, reason, null);, +    private void deleteIndex(String index, boolean delete, String reason, @Nullable Executor executor) throws ElasticSearchException {, +        ((InternalIndexService) indexService).close(delete, reason, executor);]