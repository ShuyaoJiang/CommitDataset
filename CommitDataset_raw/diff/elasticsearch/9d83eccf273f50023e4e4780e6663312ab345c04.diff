[+++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:18.0' // needed by watcher for the html sanitizer and security tests for jimfs, +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:18.0' // needed by watcher for the html sanitizer and security tests for jimfs, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +            // NB: date/time is kept in its raw form since the JdbcDriver has to do calendar/timezone conversion anyway and thus the long value is relevant, +                result = in.readLong();, +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:18.0' // needed by watcher for the html sanitizer and security tests for jimfs, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +            // NB: date/time is kept in its raw form since the JdbcDriver has to do calendar/timezone conversion anyway and thus the long value is relevant, +                result = in.readLong();, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcConfiguration.java, +    static final String TIME_ZONE_DEFAULT = "UTC_CALENDAR";, +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:18.0' // needed by watcher for the html sanitizer and security tests for jimfs, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +            // NB: date/time is kept in its raw form since the JdbcDriver has to do calendar/timezone conversion anyway and thus the long value is relevant, +                result = in.readLong();, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcConfiguration.java, +    static final String TIME_ZONE_DEFAULT = "UTC_CALENDAR";, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcResultSet.java, +    // even though the info is already in UTC_CALENDAR format, JDBC 3.0 requires java.sql.Time to have its date, +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:18.0' // needed by watcher for the html sanitizer and security tests for jimfs, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +            // NB: date/time is kept in its raw form since the JdbcDriver has to do calendar/timezone conversion anyway and thus the long value is relevant, +                result = in.readLong();, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcConfiguration.java, +    static final String TIME_ZONE_DEFAULT = "UTC_CALENDAR";, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcResultSet.java, +    // even though the info is already in UTC_CALENDAR format, JDBC 3.0 requires java.sql.Time to have its date, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/TypeConverter.java, +    static final Calendar UTC_CALENDAR = Calendar.getInstance(TimeZone.getTimeZone("UTC_CALENDAR"), Locale.ROOT);, +            // since the date is already in UTC_CALENDAR just do calendar math, +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:18.0' // needed by watcher for the html sanitizer and security tests for jimfs, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +            // NB: date/time is kept in its raw form since the JdbcDriver has to do calendar/timezone conversion anyway and thus the long value is relevant, +                result = in.readLong();, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcConfiguration.java, +    static final String TIME_ZONE_DEFAULT = "UTC_CALENDAR";, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcResultSet.java, +    // even though the info is already in UTC_CALENDAR format, JDBC 3.0 requires java.sql.Time to have its date, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/TypeConverter.java, +    static final Calendar UTC_CALENDAR = Calendar.getInstance(TimeZone.getTimeZone("UTC_CALENDAR"), Locale.ROOT);, +            // since the date is already in UTC_CALENDAR just do calendar math, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/client/Page.java, +import java.lang.reflect.Array;, +import java.sql.Date;, +import java.sql.Time;, +import java.sql.Timestamp;, +import java.util.List;, +, +            if (types == Timestamp.class || types == Date.class || types == Time.class) {, +                types = Long.class;, +            }, +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:18.0' // needed by watcher for the html sanitizer and security tests for jimfs, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +            // NB: date/time is kept in its raw form since the JdbcDriver has to do calendar/timezone conversion anyway and thus the long value is relevant, +                result = in.readLong();, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcConfiguration.java, +    static final String TIME_ZONE_DEFAULT = "UTC_CALENDAR";, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcResultSet.java, +    // even though the info is already in UTC_CALENDAR format, JDBC 3.0 requires java.sql.Time to have its date, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/TypeConverter.java, +    static final Calendar UTC_CALENDAR = Calendar.getInstance(TimeZone.getTimeZone("UTC_CALENDAR"), Locale.ROOT);, +            // since the date is already in UTC_CALENDAR just do calendar math, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/client/Page.java, +import java.lang.reflect.Array;, +import java.sql.Date;, +import java.sql.Time;, +import java.sql.Timestamp;, +import java.util.List;, +, +            if (types == Timestamp.class || types == Date.class || types == Time.class) {, +                types = Long.class;, +            }, +++ b/sql/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/csv/CsvSpecIntegrationTest.java, +    @ParametersFactory(shuffle = false, argumentFormatting = PARAM_FORMATTNG), +            throw reworkException(th);, +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:18.0' // needed by watcher for the html sanitizer and security tests for jimfs, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +            // NB: date/time is kept in its raw form since the JdbcDriver has to do calendar/timezone conversion anyway and thus the long value is relevant, +                result = in.readLong();, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcConfiguration.java, +    static final String TIME_ZONE_DEFAULT = "UTC_CALENDAR";, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcResultSet.java, +    // even though the info is already in UTC_CALENDAR format, JDBC 3.0 requires java.sql.Time to have its date, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/TypeConverter.java, +    static final Calendar UTC_CALENDAR = Calendar.getInstance(TimeZone.getTimeZone("UTC_CALENDAR"), Locale.ROOT);, +            // since the date is already in UTC_CALENDAR just do calendar math, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/client/Page.java, +import java.lang.reflect.Array;, +import java.sql.Date;, +import java.sql.Time;, +import java.sql.Timestamp;, +import java.util.List;]