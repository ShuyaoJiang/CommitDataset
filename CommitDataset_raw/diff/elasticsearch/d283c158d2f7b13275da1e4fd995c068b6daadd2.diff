[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/field/data/support/FieldDataLoader.java, +        int[] ordinals = new int[reader.maxDoc()];, +        int[][] multiValueOrdinals = null;, +                    if (multiValueOrdinals != null) {, +                        int[] ordinalPerDoc = multiValueOrdinals[doc];, +                            multiValueOrdinals[doc] = ordinalPerDoc;, +                            multiValueOrdinals[doc] = ordinalPerDoc;, +                        }, +                    } else {, +                        int ordinal = ordinals[doc];, +                        if (ordinal == 0) { // still not multi valued..., +                            ordinals[doc] = t;, +                        } else {, +                            // move to multi valued, +                            multiValueOrdinals = new int[reader.maxDoc()][];, +                            for (int i = 0; i < ordinals.length; i++) {, +                                ordinal = ordinals[i];, +                                if (ordinal != 0) {, +                                    multiValueOrdinals[i] = new int[1];, +                                    multiValueOrdinals[i][0] = ordinal;, +                                }, +                            }, +                            // now put the current "t" value, +                            int[] ordinalPerDoc = multiValueOrdinals[doc];, +                            if (ordinalPerDoc == null) {, +                                ordinalPerDoc = new int[1];, +                                ordinalPerDoc[0] = t;, +                                multiValueOrdinals[doc] = ordinalPerDoc;, +                            } else {, +                                ordinalPerDoc = Arrays.copyOf(ordinalPerDoc, ordinalPerDoc.length + 1);, +                                ordinalPerDoc[ordinalPerDoc.length - 1] = t;, +                                multiValueOrdinals[doc] = ordinalPerDoc;, +                            }, +                        }, +        if (multiValueOrdinals != null) {, +            return loader.buildMultiValue(field, multiValueOrdinals);, +            return loader.buildSingleValue(field, ordinals);]