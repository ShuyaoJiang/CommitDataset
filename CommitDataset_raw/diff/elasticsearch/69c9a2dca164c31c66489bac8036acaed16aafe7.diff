[+++ b/src/test/java/org/elasticsearch/test/unit/discovery/zen/ping/unicast/UnicastZenPingTests.java, +        final DiscoveryNode nodeA = new DiscoveryNode("UZP_A", transportServiceA.boundAddress().publishAddress(), Version.CURRENT);, +        final DiscoveryNode nodeB = new DiscoveryNode("UZP_B", transportServiceA.boundAddress().publishAddress(), Version.CURRENT);, +                return DiscoveryNodes.newNodesBuilder().put(nodeA).localNodeId("UZP_A").build();, +                return DiscoveryNodes.newNodesBuilder().put(nodeB).localNodeId("UZP_B").build();, +            assertThat(pingResponses[0].target().id(), equalTo("UZP_B"));, +++ b/src/test/java/org/elasticsearch/test/unit/discovery/zen/ping/unicast/UnicastZenPingTests.java, +        final DiscoveryNode nodeA = new DiscoveryNode("UZP_A", transportServiceA.boundAddress().publishAddress(), Version.CURRENT);, +        final DiscoveryNode nodeB = new DiscoveryNode("UZP_B", transportServiceA.boundAddress().publishAddress(), Version.CURRENT);, +                return DiscoveryNodes.newNodesBuilder().put(nodeA).localNodeId("UZP_A").build();, +                return DiscoveryNodes.newNodesBuilder().put(nodeB).localNodeId("UZP_B").build();, +            assertThat(pingResponses[0].target().id(), equalTo("UZP_B"));, +++ b/src/test/java/org/elasticsearch/test/unit/transport/AbstractSimpleTransportTests.java, +        serviceA = build(ImmutableSettings.builder().put("name", "TS_A").build(), version0);, +        nodeA = new DiscoveryNode("TS_A", "TS_A", serviceA.boundAddress().publishAddress(), ImmutableMap.<String, String>of(), version0);, +        serviceB = build(ImmutableSettings.builder().put("name", "TS_B").build(), version1);, +        nodeB = new DiscoveryNode("TS_B", "TS_B", serviceB.boundAddress().publishAddress(), ImmutableMap.<String, String>of(), version1);, +                assert false : "node connected should not be called, all connection have been done previously, node: " + node;]