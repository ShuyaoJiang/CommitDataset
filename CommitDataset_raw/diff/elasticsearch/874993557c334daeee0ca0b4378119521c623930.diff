[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/statistical/InternalStatisticalFacet.java, +    private double sumOfSquares;, +, +    public InternalStatisticalFacet(String name, double min, double max, double total, double sumOfSquares, long count) {, +        this.sumOfSquares = sumOfSquares;, +    @Override public double sumOfSquares() {, +        return this.sumOfSquares;, +    }, +, +    @Override public double getSumOfSquares() {, +        return sumOfSquares();, +    }, +, +    public double variance() {, +        return (sumOfSquares - ((total * total) / count)) / count;, +    }, +, +    public double getVariance() {, +        return variance();, +    }, +, +    public double stdDeviation() {, +        return Math.sqrt(variance());, +    }, +, +    public double getStdDeviation() {, +        return stdDeviation();, +    }, +, +        double min = Double.NaN;, +        double max = Double.NaN;, +        double sumOfSquares = 0;, +            if (statsFacet.min() < min || Double.isNaN(min)) {, +            if (statsFacet.max() > max || Double.isNaN(max)) {, +            sumOfSquares += statsFacet.sumOfSquares();, +        return new InternalStatisticalFacet(name, min, max, total, sumOfSquares, count);, +        builder.field("count", count());, +        builder.field("total", total());, +        builder.field("min", min());, +        builder.field("max", max());, +        builder.field("mean", mean());, +        builder.field("sum_of_squares", sumOfSquares());, +        builder.field("variance", variance());, +        builder.field("std_deviation", stdDeviation());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/statistical/InternalStatisticalFacet.java, +    private double sumOfSquares;, +, +    public InternalStatisticalFacet(String name, double min, double max, double total, double sumOfSquares, long count) {, +        this.sumOfSquares = sumOfSquares;, +    @Override public double sumOfSquares() {, +        return this.sumOfSquares;, +    }, +, +    @Override public double getSumOfSquares() {, +        return sumOfSquares();, +    }, +, +    public double variance() {, +        return (sumOfSquares - ((total * total) / count)) / count;, +    }, +, +    public double getVariance() {, +        return variance();, +    }, +, +    public double stdDeviation() {, +        return Math.sqrt(variance());, +    }, +, +    public double getStdDeviation() {, +        return stdDeviation();, +    }, +, +        double min = Double.NaN;, +        double max = Double.NaN;, +        double sumOfSquares = 0;, +            if (statsFacet.min() < min || Double.isNaN(min)) {, +            if (statsFacet.max() > max || Double.isNaN(max)) {, +            sumOfSquares += statsFacet.sumOfSquares();, +        return new InternalStatisticalFacet(name, min, max, total, sumOfSquares, count);, +        builder.field("count", count());, +        builder.field("total", total());, +        builder.field("min", min());, +        builder.field("max", max());, +        builder.field("mean", mean());, +        builder.field("sum_of_squares", sumOfSquares());, +        builder.field("variance", variance());, +        builder.field("std_deviation", stdDeviation());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/statistical/StatisticalFacet.java, +     * The sum of squares of the values., +     */, +    double sumOfSquares();, +, +    /**, +     * The sum of squares of the values., +     */, +    double getSumOfSquares();, +, +    /**, +]