[+++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        SCRIPT_EXCEPTION(org.elasticsearch.script.ScriptException.class, org.elasticsearch.script.ScriptException::new, 143),, +        NOT_MASTER_EXCEPTION(org.elasticsearch.cluster.NotMasterException.class, org.elasticsearch.cluster.NotMasterException::new, 144);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        SCRIPT_EXCEPTION(org.elasticsearch.script.ScriptException.class, org.elasticsearch.script.ScriptException::new, 143),, +        NOT_MASTER_EXCEPTION(org.elasticsearch.cluster.NotMasterException.class, org.elasticsearch.cluster.NotMasterException::new, 144);, +++ b/core/src/main/java/org/elasticsearch/cluster/NotMasterException.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.common.io.stream.StreamInput;, +, +import java.io.IOException;, +public class NotMasterException extends ElasticsearchException {, +    public NotMasterException(StreamInput in) throws IOException {, +        super(in);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        SCRIPT_EXCEPTION(org.elasticsearch.script.ScriptException.class, org.elasticsearch.script.ScriptException::new, 143),, +        NOT_MASTER_EXCEPTION(org.elasticsearch.cluster.NotMasterException.class, org.elasticsearch.cluster.NotMasterException::new, 144);, +++ b/core/src/main/java/org/elasticsearch/cluster/NotMasterException.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.common.io.stream.StreamInput;, +, +import java.io.IOException;, +public class NotMasterException extends ElasticsearchException {, +    public NotMasterException(StreamInput in) throws IOException {, +        super(in);, +    }, +, +++ b/core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java, +        ids.put(144, org.elasticsearch.cluster.NotMasterException.class);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        SCRIPT_EXCEPTION(org.elasticsearch.script.ScriptException.class, org.elasticsearch.script.ScriptException::new, 143),, +        NOT_MASTER_EXCEPTION(org.elasticsearch.cluster.NotMasterException.class, org.elasticsearch.cluster.NotMasterException::new, 144);, +++ b/core/src/main/java/org/elasticsearch/cluster/NotMasterException.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.common.io.stream.StreamInput;, +, +import java.io.IOException;, +public class NotMasterException extends ElasticsearchException {, +    public NotMasterException(StreamInput in) throws IOException {, +        super(in);, +    }, +, +++ b/core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java, +        ids.put(144, org.elasticsearch.cluster.NotMasterException.class);, +++ b/core/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java, +import org.elasticsearch.ElasticsearchException;, +            ElasticsearchException t = new ElasticsearchException("test");, +            t.addHeader("header", "is here");, +                final Throwable cause = ex.getCause().getCause();, +                assertThat(cause, instanceOf(ElasticsearchException.class));, +                final ElasticsearchException es = (ElasticsearchException) cause;, +                assertThat(es.getMessage(), equalTo(t.getMessage()));, +                assertThat(es.getHeader("header"), equalTo(t.getHeader("header")));, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        SCRIPT_EXCEPTION(org.elasticsearch.script.ScriptException.class, org.elasticsearch.script.ScriptException::new, 143),, +        NOT_MASTER_EXCEPTION(org.elasticsearch.cluster.NotMasterException.class, org.elasticsearch.cluster.NotMasterException::new, 144);, +++ b/core/src/main/java/org/elasticsearch/cluster/NotMasterException.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.common.io.stream.StreamInput;, +, +import java.io.IOException;, +public class NotMasterException extends ElasticsearchException {, +    public NotMasterException(StreamInput in) throws IOException {, +        super(in);, +    }, +, +++ b/core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java, +        ids.put(144, org.elasticsearch.cluster.NotMasterException.class);, +++ b/core/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java, +import org.elasticsearch.ElasticsearchException;, +            ElasticsearchException t = new ElasticsearchException("test");, +            t.addHeader("header", "is here");, +                final Throwable cause = ex.getCause().getCause();, +                assertThat(cause, instanceOf(ElasticsearchException.class));, +                final ElasticsearchException es = (ElasticsearchException) cause;, +                assertThat(es.getMessage(), equalTo(t.getMessage()));, +                assertThat(es.getHeader("header"), equalTo(t.getHeader("header")));, +++ b/test/framework/src/main/java/org/elasticsearch/test/transport/CapturingTransport.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.common.Randomness;, +import org.elasticsearch.common.io.stream.BytesStreamOutput;, +import static org.apache.lucene.util.LuceneTestCase.rarely;, +, +        final RemoteTransportException remoteException;, +        if (rarely(Randomness.get())) {, +            remoteException = new RemoteTransportException("remote failure, coming from local node", t);, +        } else {, +            try (BytesStreamOutput output = new BytesStreamOutput()) {, +                output.writeException(t);, +                remoteException = new RemoteTransportException("remote failure", output.bytes().streamInput().readException());, +            } catch (IOException ioException) {, +                throw new ElasticsearchException("failed to serialize/deserialize supplied exception " + t, ioException);, +            }, +        }, +        this.handleError(requestId, remoteException);]