[+++ b/build.gradle, +    ant.delete(dir: explodedDistDir) // clean the exploded dir, +    ant.delete { fileset(dir: explodedDistLibDir, includes: "netty-*.jar") } // no need sigar directly under lib..., +++ b/build.gradle, +    ant.delete(dir: explodedDistDir) // clean the exploded dir, +    ant.delete { fileset(dir: explodedDistLibDir, includes: "netty-*.jar") } // no need sigar directly under lib..., +++ b/modules/elasticsearch/build.gradle, +jar {, +    manifest {, +        attributes("Implementation-Title": "ElasticSearch", "Implementation-Version": rootProject.version, "Implementation-Date": buildTimeStr), +    }, +}, +                ['jackson', 'joda', 'snakeyaml', 'netty'].any { file.name.contains(it) }, +            rule pattern: "org.jboss.netty.**", result: "org.elasticsearch.util.netty.@1", +, +        // seems like empty dirst still exists, unjar and clean them, +        unjar(src: jar.archivePath, dest: "build/tmp/extracted"), +        delete(dir: "build/tmp/extracted/org/codehaus"), +        delete(dir: "build/tmp/extracted/org/joda"), +        delete(dir: "build/tmp/extracted/org/yaml"), +        delete(dir: "build/tmp/extracted/org/jboss"), +, +        delete(file: jar.archivePath), +        jar(destfile: jar.archivePath, basedir: "build/tmp/extracted"), +        delete(dir: "build/tmp/extracted"), +            pom.dependencies = pom.dependencies.findAll {dep -> !dep.artifactId.contains('netty') }, +++ b/build.gradle, +    ant.delete(dir: explodedDistDir) // clean the exploded dir, +    ant.delete { fileset(dir: explodedDistLibDir, includes: "netty-*.jar") } // no need sigar directly under lib..., +++ b/modules/elasticsearch/build.gradle, +jar {, +    manifest {, +        attributes("Implementation-Title": "ElasticSearch", "Implementation-Version": rootProject.version, "Implementation-Date": buildTimeStr), +    }, +}, +                ['jackson', 'joda', 'snakeyaml', 'netty'].any { file.name.contains(it) }, +            rule pattern: "org.jboss.netty.**", result: "org.elasticsearch.util.netty.@1", +, +        // seems like empty dirst still exists, unjar and clean them, +        unjar(src: jar.archivePath, dest: "build/tmp/extracted"), +        delete(dir: "build/tmp/extracted/org/codehaus"), +        delete(dir: "build/tmp/extracted/org/joda"), +        delete(dir: "build/tmp/extracted/org/yaml"), +        delete(dir: "build/tmp/extracted/org/jboss"), +, +        delete(file: jar.archivePath), +        jar(destfile: jar.archivePath, basedir: "build/tmp/extracted"), +        delete(dir: "build/tmp/extracted"), +            pom.dependencies = pom.dependencies.findAll {dep -> !dep.artifactId.contains('netty') }, +++ b/plugins/client/groovy/build.gradle, +jar {, +//    from sourceSets.main.allJava, +    manifest {, +        attributes("Implementation-Title": "ElasticSearch", "Implementation-Version": rootProject.version, "Implementation-Date": buildTimeStr), +    }, +}, +, +, +++ b/build.gradle, +    ant.delete(dir: explodedDistDir) // clean the exploded dir, +    ant.delete { fileset(dir: explodedDistLibDir, includes: "netty-*.jar") } // no need sigar directly under lib..., +++ b/modules/elasticsearch/build.gradle, +jar {, +    manifest {, +        attributes("Implementation-Title": "ElasticSearch", "Implementation-Version": rootProject.version, "Implementation-Date": buildTimeStr), +    }, +}, +                ['jackson', 'joda', 'snakeyaml', 'netty'].any { file.name.contains(it) }, +            rule pattern: "org.jboss.netty.**", result: "org.elasticsearch.util.netty.@1", +, +        // seems like empty dirst still exists, unjar and clean them, +        unjar(src: jar.archivePath, dest: "build/tmp/extracted"), +        delete(dir: "build/tmp/extracted/org/codehaus"), +        delete(dir: "build/tmp/extracted/org/joda"), +        delete(dir: "build/tmp/extracted/org/yaml"), +        delete(dir: "build/tmp/extracted/org/jboss"), +, +        delete(file: jar.archivePath), +        jar(destfile: jar.archivePath, basedir: "build/tmp/extracted"), +        delete(dir: "build/tmp/extracted"), +            pom.dependencies = pom.dependencies.findAll {dep -> !dep.artifactId.contains('netty') }, +++ b/plugins/client/groovy/build.gradle, +jar {, +//    from sourceSets.main.allJava, +    manifest {, +        attributes("Implementation-Title": "ElasticSearch", "Implementation-Version": rootProject.version, "Implementation-Date": buildTimeStr), +    }, +}, +, +, +++ b/plugins/cloud/build.gradle, +jar {, +//    from sourceSets.main.allJava, +    manifest {, +        attributes("Implementation-Title": "ElasticSearch", "Implementation-Version": rootProject.version, "Implementation-Date": buildTimeStr), +    }, +}, +, +++ b/build.gradle, +    ant.delete(dir: explodedDistDir) // clean the exploded dir]