[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/tasks/TransportPendingClusterTasksAction.java, +import org.elasticsearch.cluster.service.PendingClusterTask;, +import java.util.List;, +, +        logger.trace("fetching pending tasks from cluster service");, +        final List<PendingClusterTask> pendingTasks = clusterService.pendingTasks();, +        logger.trace("done fetching pending tasks from cluster service");, +        listener.onResponse(new PendingClusterTasksResponse(pendingTasks));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/tasks/TransportPendingClusterTasksAction.java, +import org.elasticsearch.cluster.service.PendingClusterTask;, +import java.util.List;, +, +        logger.trace("fetching pending tasks from cluster service");, +        final List<PendingClusterTask> pendingTasks = clusterService.pendingTasks();, +        logger.trace("done fetching pending tasks from cluster service");, +        listener.onResponse(new PendingClusterTasksResponse(pendingTasks));, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                        list.add(new BulkItemRequest(i, deleteRequest));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/tasks/TransportPendingClusterTasksAction.java, +import org.elasticsearch.cluster.service.PendingClusterTask;, +import java.util.List;, +, +        logger.trace("fetching pending tasks from cluster service");, +        final List<PendingClusterTask> pendingTasks = clusterService.pendingTasks();, +        logger.trace("done fetching pending tasks from cluster service");, +        listener.onResponse(new PendingClusterTasksResponse(pendingTasks));, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                        list.add(new BulkItemRequest(i, deleteRequest));, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/tasks/TransportPendingClusterTasksAction.java, +import org.elasticsearch.cluster.service.PendingClusterTask;, +import java.util.List;, +, +        logger.trace("fetching pending tasks from cluster service");, +        final List<PendingClusterTask> pendingTasks = clusterService.pendingTasks();, +        logger.trace("done fetching pending tasks from cluster service");, +        listener.onResponse(new PendingClusterTasksResponse(pendingTasks));, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                        list.add(new BulkItemRequest(i, deleteRequest));, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/get/GetRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/tasks/TransportPendingClusterTasksAction.java, +import org.elasticsearch.cluster.service.PendingClusterTask;, +import java.util.List;, +, +        logger.trace("fetching pending tasks from cluster service");, +        final List<PendingClusterTask> pendingTasks = clusterService.pendingTasks();, +        logger.trace("done fetching pending tasks from cluster service");, +        listener.onResponse(new PendingClusterTasksResponse(pendingTasks));, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                        list.add(new BulkItemRequest(i, deleteRequest));, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/get/GetRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +                // if we are here, the defaultTimestamp is not, +                // TimestampFieldMapper.Defaults.DEFAULT_TIMESTAMP but, +                // this can only happen if defaultTimestamp was, +                // assigned again because mappingMd and, +                // mappingMd#timestamp() are not null, +                assert mappingMd != null;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/tasks/TransportPendingClusterTasksAction.java, +import org.elasticsearch.cluster.service.PendingClusterTask;, +import java.util.List;, +, +        logger.trace("fetching pending tasks from cluster service");, +        final List<PendingClusterTask> pendingTasks = clusterService.pendingTasks();, +        logger.trace("done fetching pending tasks from cluster service");, +        listener.onResponse(new PendingClusterTasksResponse(pendingTasks));, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                        list.add(new BulkItemRequest(i, deleteRequest));, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/get/GetRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +                // if we are here, the defaultTimestamp is not, +                // TimestampFieldMapper.Defaults.DEFAULT_TIMESTAMP but, +                // this can only happen if defaultTimestamp was, +                // assigned again because mappingMd and, +                // mappingMd#timestamp() are not null, +                assert mappingMd != null;, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestActionFilter.java, +            logger.debug("failed to execute pipeline [{}] for document [{}/{}/{}]", throwable, indexRequest.getPipeline(), indexRequest.index(), indexRequest.type(), indexRequest.id());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/tasks/TransportPendingClusterTasksAction.java, +import org.elasticsearch.cluster.service.PendingClusterTask;, +import java.util.List;, +, +        logger.trace("fetching pending tasks from cluster service");, +        final List<PendingClusterTask> pendingTasks = clusterService.pendingTasks();, +        logger.trace("done fetching pending tasks from cluster service");, +        listener.onResponse(new PendingClusterTasksResponse(pendingTasks));, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                        list.add(new BulkItemRequest(i, deleteRequest));, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/get/GetRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +                // if we are here, the defaultTimestamp is not, +                // TimestampFieldMapper.Defaults.DEFAULT_TIMESTAMP but, +                // this can only happen if defaultTimestamp was, +                // assigned again because mappingMd and, +                // mappingMd#timestamp() are not null, +                assert mappingMd != null;]