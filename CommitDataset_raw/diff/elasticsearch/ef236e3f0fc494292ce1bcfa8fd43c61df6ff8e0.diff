[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            // disable console logging, so user does not see the exception twice (jvm will show it already), +            if (foreground) {, +                Loggers.disableConsoleLogging();, +            }, +            // re-enable it if appropriate, so they can see any logging during the shutdown process, +            if (foreground) {, +                Loggers.enableConsoleLogging();, +            }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            // disable console logging, so user does not see the exception twice (jvm will show it already), +            if (foreground) {, +                Loggers.disableConsoleLogging();, +            }, +            // re-enable it if appropriate, so they can see any logging during the shutdown process, +            if (foreground) {, +                Loggers.enableConsoleLogging();, +            }, +++ b/core/src/main/java/org/elasticsearch/common/joda/Joda.java, +        DateTimeFormatterBuilder builder = new DateTimeFormatterBuilder().append(longFormatter.withZone(DateTimeZone.UTC).getPrinter(), new DateTimeParser[] {longFormatter.getParser(), shortFormatter.getParser()});, +        return new FormatDateTimeFormatter("yyyy/MM/dd HH:mm:ss||yyyy/MM/dd", builder.toFormatter().withZone(DateTimeZone.UTC), Locale.ROOT);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            // disable console logging, so user does not see the exception twice (jvm will show it already), +            if (foreground) {, +                Loggers.disableConsoleLogging();, +            }, +            // re-enable it if appropriate, so they can see any logging during the shutdown process, +            if (foreground) {, +                Loggers.enableConsoleLogging();, +            }, +++ b/core/src/main/java/org/elasticsearch/common/joda/Joda.java, +        DateTimeFormatterBuilder builder = new DateTimeFormatterBuilder().append(longFormatter.withZone(DateTimeZone.UTC).getPrinter(), new DateTimeParser[] {longFormatter.getParser(), shortFormatter.getParser()});, +        return new FormatDateTimeFormatter("yyyy/MM/dd HH:mm:ss||yyyy/MM/dd", builder.toFormatter().withZone(DateTimeZone.UTC), Locale.ROOT);, +++ b/core/src/test/java/org/elasticsearch/index/mapper/date/SimpleDateMappingTests.java]