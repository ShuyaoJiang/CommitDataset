[+++ b/docs/reference/cat/thread_pool.asciidoc, +// TESTRESPONSE[s/\.\.\./(node-0 .+ 0 0 0\n)+/], +++ b/docs/reference/cat/thread_pool.asciidoc, +// TESTRESPONSE[s/\.\.\./(node-0 .+ 0 0 0\n)+/], +++ b/libs/nio/src/main/java/org/elasticsearch/nio/ChannelFactory.java, +import java.io.UncheckedIOException;, +        } catch (UncheckedIOException e) {, +            // This can happen if getRemoteAddress throws IOException., +            IOException cause = e.getCause();, +            closeRawChannel(rawChannel, cause);, +            throw cause;, +++ b/docs/reference/cat/thread_pool.asciidoc, +// TESTRESPONSE[s/\.\.\./(node-0 .+ 0 0 0\n)+/], +++ b/libs/nio/src/main/java/org/elasticsearch/nio/ChannelFactory.java, +import java.io.UncheckedIOException;, +        } catch (UncheckedIOException e) {, +            // This can happen if getRemoteAddress throws IOException., +            IOException cause = e.getCause();, +            closeRawChannel(rawChannel, cause);, +            throw cause;, +++ b/libs/nio/src/main/java/org/elasticsearch/nio/NioChannel.java, +    public abstract InetSocketAddress getLocalAddress();, +, +++ b/docs/reference/cat/thread_pool.asciidoc, +// TESTRESPONSE[s/\.\.\./(node-0 .+ 0 0 0\n)+/], +++ b/libs/nio/src/main/java/org/elasticsearch/nio/ChannelFactory.java, +import java.io.UncheckedIOException;, +        } catch (UncheckedIOException e) {, +            // This can happen if getRemoteAddress throws IOException., +            IOException cause = e.getCause();, +            closeRawChannel(rawChannel, cause);, +            throw cause;, +++ b/libs/nio/src/main/java/org/elasticsearch/nio/NioChannel.java, +    public abstract InetSocketAddress getLocalAddress();, +, +++ b/libs/nio/src/main/java/org/elasticsearch/nio/NioServerSocketChannel.java, +import java.net.InetSocketAddress;, +    private final ServerSocketChannel serverSocketChannel;, +    private volatile InetSocketAddress localAddress;, +    public NioServerSocketChannel(ServerSocketChannel serverSocketChannel) {, +        this.serverSocketChannel = serverSocketChannel;, +        attemptToSetLocalAddress();, +    public InetSocketAddress getLocalAddress() {, +        attemptToSetLocalAddress();, +        return localAddress;, +    }, +, +    @Override, +        return serverSocketChannel;, +, +    private void attemptToSetLocalAddress() {, +        if (localAddress == null) {, +            localAddress = (InetSocketAddress) serverSocketChannel.socket().getLocalSocketAddress();, +        }, +    }, +++ b/docs/reference/cat/thread_pool.asciidoc, +// TESTRESPONSE[s/\.\.\./(node-0 .+ 0 0 0\n)+/], +++ b/libs/nio/src/main/java/org/elasticsearch/nio/ChannelFactory.java, +import java.io.UncheckedIOException;, +        } catch (UncheckedIOException e) {, +            // This can happen if getRemoteAddress throws IOException., +            IOException cause = e.getCause();, +            closeRawChannel(rawChannel, cause);, +            throw cause;, +++ b/libs/nio/src/main/java/org/elasticsearch/nio/NioChannel.java, +    public abstract InetSocketAddress getLocalAddress();, +, +++ b/libs/nio/src/main/java/org/elasticsearch/nio/NioServerSocketChannel.java, +import java.net.InetSocketAddress;, +    private final ServerSocketChannel serverSocketChannel;, +    private volatile InetSocketAddress localAddress;, +    public NioServerSocketChannel(ServerSocketChannel serverSocketChannel) {, +        this.serverSocketChannel = serverSocketChannel;, +        attemptToSetLocalAddress();, +    public InetSocketAddress getLocalAddress() {, +        attemptToSetLocalAddress();, +        return localAddress;, +    }, +, +    @Override, +        return serverSocketChannel;, +, +    private void attemptToSetLocalAddress() {, +        if (localAddress == null) {, +            localAddress = (InetSocketAddress) serverSocketChannel.socket().getLocalSocketAddress();, +        }, +    }, +++ b/libs/nio/src/main/java/org/elasticsearch/nio/NioSocketChannel.java, +import java.io.UncheckedIOException;, +    private final InetSocketAddress remoteAddress;, +    private volatile InetSocketAddress localAddress;, +    public NioSocketChannel(SocketChannel socketChannel) {, +        try {, +        } catch (IOException e) {, +            throw new UncheckedIOException(e);, +        }, +    public InetSocketAddress getLocalAddress() {, +        if (localAddress == null) {, +            localAddress = (InetSocketAddress) socketChannel.socket().getLocalSocketAddress();, +        }]