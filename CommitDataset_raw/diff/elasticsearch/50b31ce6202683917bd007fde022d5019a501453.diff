[+++ b/core/src/test/java/org/elasticsearch/index/IndexWithShadowReplicasIT.java, +++ b/core/src/test/java/org/elasticsearch/index/IndexWithShadowReplicasIT.java, +++ b/distribution/src/main/resources/bin/elasticsearch.bat, +set ES_JVM_OPTIONS=%~dp0\..\config\jvm.options, +++ b/core/src/test/java/org/elasticsearch/index/IndexWithShadowReplicasIT.java, +++ b/distribution/src/main/resources/bin/elasticsearch.bat, +set ES_JVM_OPTIONS=%~dp0\..\config\jvm.options, +++ b/distribution/src/main/resources/bin/service.bat, +set ES_JVM_OPTIONS=%ES_HOME%\config\jvm.options, +++ b/core/src/test/java/org/elasticsearch/index/IndexWithShadowReplicasIT.java, +++ b/distribution/src/main/resources/bin/elasticsearch.bat, +set ES_JVM_OPTIONS=%~dp0\..\config\jvm.options, +++ b/distribution/src/main/resources/bin/service.bat, +set ES_JVM_OPTIONS=%ES_HOME%\config\jvm.options, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkIndexByScrollAction.java, +            } else {, +                context.clear();, +            Object newValue = resultCtx.remove(IndexFieldMapper.NAME);, +            newValue = resultCtx.remove(TypeFieldMapper.NAME);, +            newValue = resultCtx.remove(IdFieldMapper.NAME);, +            newValue = resultCtx.remove(VersionFieldMapper.NAME);, +            newValue = resultCtx.remove(ParentFieldMapper.NAME);, +            newValue = resultCtx.remove(RoutingFieldMapper.NAME);, +            newValue = resultCtx.remove(TimestampFieldMapper.NAME);, +            newValue = resultCtx.remove(TTLFieldMapper.NAME);, +            if (false == resultCtx.isEmpty()) {, +                throw new IllegalArgumentException("Invalid fields added to context [" + String.join(",", resultCtx.keySet()) + ']');, +++ b/core/src/test/java/org/elasticsearch/index/IndexWithShadowReplicasIT.java, +++ b/distribution/src/main/resources/bin/elasticsearch.bat, +set ES_JVM_OPTIONS=%~dp0\..\config\jvm.options, +++ b/distribution/src/main/resources/bin/service.bat, +set ES_JVM_OPTIONS=%ES_HOME%\config\jvm.options, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkIndexByScrollAction.java, +            } else {, +                context.clear();, +            Object newValue = resultCtx.remove(IndexFieldMapper.NAME);, +            newValue = resultCtx.remove(TypeFieldMapper.NAME);, +            newValue = resultCtx.remove(IdFieldMapper.NAME);, +            newValue = resultCtx.remove(VersionFieldMapper.NAME);, +            newValue = resultCtx.remove(ParentFieldMapper.NAME);, +            newValue = resultCtx.remove(RoutingFieldMapper.NAME);, +            newValue = resultCtx.remove(TimestampFieldMapper.NAME);, +            newValue = resultCtx.remove(TTLFieldMapper.NAME);, +            if (false == resultCtx.isEmpty()) {, +                throw new IllegalArgumentException("Invalid fields added to context [" + String.join(",", resultCtx.keySet()) + ']');, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/DeleteByQueryRequest.java, +public class DeleteByQueryRequest extends AbstractBulkByScrollRequest<DeleteByQueryRequest> implements IndicesRequest {, +++ b/core/src/test/java/org/elasticsearch/index/IndexWithShadowReplicasIT.java, +++ b/distribution/src/main/resources/bin/elasticsearch.bat, +set ES_JVM_OPTIONS=%~dp0\..\config\jvm.options, +++ b/distribution/src/main/resources/bin/service.bat, +set ES_JVM_OPTIONS=%ES_HOME%\config\jvm.options, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkIndexByScrollAction.java, +            } else {, +                context.clear();, +            Object newValue = resultCtx.remove(IndexFieldMapper.NAME);, +            newValue = resultCtx.remove(TypeFieldMapper.NAME);, +            newValue = resultCtx.remove(IdFieldMapper.NAME);, +            newValue = resultCtx.remove(VersionFieldMapper.NAME);, +            newValue = resultCtx.remove(ParentFieldMapper.NAME);, +            newValue = resultCtx.remove(RoutingFieldMapper.NAME);, +            newValue = resultCtx.remove(TimestampFieldMapper.NAME);, +            newValue = resultCtx.remove(TTLFieldMapper.NAME);, +            if (false == resultCtx.isEmpty()) {, +                throw new IllegalArgumentException("Invalid fields added to context [" + String.join(",", resultCtx.keySet()) + ']');, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/DeleteByQueryRequest.java, +public class DeleteByQueryRequest extends AbstractBulkByScrollRequest<DeleteByQueryRequest> implements IndicesRequest {, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/UpdateByQueryRequest.java, +import org.elasticsearch.action.CompositeIndicesRequest;, +import org.elasticsearch.action.index.IndexRequest;, +, +import java.util.ArrayList;, +import java.util.List;, +, +import static java.util.Collections.unmodifiableList;, +public class UpdateByQueryRequest extends AbstractBulkIndexByScrollRequest<UpdateByQueryRequest> implements CompositeIndicesRequest {, +    // CompositeIndicesRequest implementation so plugins can reason about the request. This is really just a best effort thing., +    /**, +     * Accessor to get the underlying {@link IndicesRequest}s that this request wraps. Note that this method is <strong>not, +     * accurate</strong> since it returns dummy {@link IndexRequest}s and not the actual requests that will be issued as part of the, +     * execution of this request., +     *, +     * @return a list comprising of the {@link SearchRequest} and dummy {@link IndexRequest}s, +     */, +    public List<? extends IndicesRequest> subRequests() {, +        List<IndicesRequest> subRequests = new ArrayList<>();, +        // One dummy IndexRequest per destination index., +        for (String index : getSearchRequest().indices()) {, +            IndexRequest request = new IndexRequest();, +            request.index(index);, +            subRequests.add(request);, +        subRequests.add(getSearchRequest());, +        return unmodifiableList(subRequests);, +    };, +++ b/core/src/test/java/org/elasticsearch/index/IndexWithShadowReplicasIT.java, +++ b/distribution/src/main/resources/bin/elasticsearch.bat, +set ES_JVM_OPTIONS=%~dp0\..\config\jvm.options, +++ b/distribution/src/main/resources/bin/service.bat, +set ES_JVM_OPTIONS=%ES_HOME%\config\jvm.options, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkIndexByScrollAction.java]