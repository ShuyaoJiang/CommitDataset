[+++ b/src/test/java/org/elasticsearch/license/plugin/LicensesPluginIntegrationTests.java, +import org.junit.After;, +import org.junit.Before;, +    private final int trialLicenseDurationInSeconds = 2;, +    @After, +    public void beforeTest() throws Exception {, +        wipeAllLicenses();, +    }, +, +    public void testTrialLicenseAndSignedLicenseNotification() throws Exception {, +        assertConsumerPluginEnableNotification(1);, +        ESLicense license = generateSignedLicense(TestPluginService.FEATURE_NAME, TimeValue.timeValueSeconds(trialLicenseDurationInSeconds));, +        assertConsumerPluginEnableNotification(1);, +        assertConsumerPluginDisableNotification(trialLicenseDurationInSeconds * 2);, +        assertLicenseManagerDisabledFeatureFor(TestPluginService.FEATURE_NAME);, +    }, +, +    @Test, +    public void testTrialLicenseNotification() throws Exception {, +        logger.info(" --> check onEnabled for trial license");, +        // managerService should report feature to be enabled on all data nodes, +        assertLicenseManagerEnabledFeatureFor(TestPluginService.FEATURE_NAME);, +        // consumer plugin service should return enabled on all data nodes, +        assertConsumerPluginEnableNotification(1);, +, +        logger.info(" --> sleep for rest of trailLicense duration");, +        Thread.sleep(trialLicenseDurationInSeconds * 1000l);, +, +        logger.info(" --> check trial license expiry notification");, +        // consumer plugin should notify onDisabled on all data nodes (expired signed license), +        assertConsumerPluginDisableNotification(trialLicenseDurationInSeconds);, +        assertLicenseManagerDisabledFeatureFor(TestPluginService.FEATURE_NAME);, +    }, +, +    @Test, +    public void testOverlappingTrialAndSignedLicenseNotification() throws Exception {, +        logger.info(" --> check onEnabled for trial license");, +        // managerService should report feature to be enabled on all data nodes, +        assertLicenseManagerEnabledFeatureFor(TestPluginService.FEATURE_NAME);, +        // consumer plugin service should return enabled on all data nodes, +        assertConsumerPluginEnableNotification(1);, +, +        logger.info(" --> put signed license while trial license is in effect");, +        ESLicense license = generateSignedLicense(TestPluginService.FEATURE_NAME, TimeValue.timeValueSeconds(trialLicenseDurationInSeconds * 2));, +        final PutLicenseResponse putLicenseResponse = new PutLicenseRequestBuilder(client().admin().cluster()).setLicense(Lists.newArrayList(license)).get();, +        assertThat(putLicenseResponse.isAcknowledged(), equalTo(true));, +        assertThat(putLicenseResponse.status(), equalTo(LicensesStatus.VALID));, +, +        logger.info(" --> check signed license enabled notification");, +        // consumer plugin should notify onEnabled on all data nodes (signed license), +        assertConsumerPluginEnableNotification(1);, +        assertLicenseManagerEnabledFeatureFor(TestPluginService.FEATURE_NAME);, +, +        logger.info(" --> sleep for rest of trailLicense duration");, +        Thread.sleep(trialLicenseDurationInSeconds * 1000l);, +, +        logger.info(" --> check consumer is still enabled [signed license]");, +        // consumer plugin should notify onEnabled on all data nodes (signed license), +        assertConsumerPluginEnableNotification(1);, +        assertLicenseManagerEnabledFeatureFor(TestPluginService.FEATURE_NAME);, +, +        logger.info(" --> check signed license expiry notification");, +        // consumer plugin should notify onDisabled on all data nodes (expired signed license), +        assertConsumerPluginDisableNotification(trialLicenseDurationInSeconds * 2 * 2);]