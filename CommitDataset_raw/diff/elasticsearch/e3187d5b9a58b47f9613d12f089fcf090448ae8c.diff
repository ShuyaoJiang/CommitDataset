[+++ b/src/main/java/org/elasticsearch/common/util/LongHash.java, +        keys = bigArrays.newLongArray(capacity, false);, +    public long get(long id) {, +        return keys.get(id);, +            if (id == -1 || keys.get(id) == key) {, +                append(id, key);, +            } else if (keys.get(curId) == key) {, +    private void append(long id, long key) {, +        keys = bigArrays.grow(keys, id + 1);, +        keys.set(id, key);, +    }, +, +                append(id, key);, +        final long key = keys.set(id, 0);, +++ b/src/main/java/org/elasticsearch/common/util/LongHash.java, +        keys = bigArrays.newLongArray(capacity, false);, +    public long get(long id) {, +        return keys.get(id);, +            if (id == -1 || keys.get(id) == key) {, +                append(id, key);, +            } else if (keys.get(curId) == key) {, +    private void append(long id, long key) {, +        keys = bigArrays.grow(keys, id + 1);, +        keys.set(id, key);, +    }, +, +                append(id, key);, +        final long key = keys.set(id, 0);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridAggregator.java, +        for (long i = 0; i < bucketOrds.size(); i++) {, +, +            spare.geohashAsLong = bucketOrds.get(i);, +            spare.docCount = bucketDocCount(i);, +            spare.bucketOrd = i;, +++ b/src/main/java/org/elasticsearch/common/util/LongHash.java, +        keys = bigArrays.newLongArray(capacity, false);, +    public long get(long id) {, +        return keys.get(id);, +            if (id == -1 || keys.get(id) == key) {, +                append(id, key);, +            } else if (keys.get(curId) == key) {, +    private void append(long id, long key) {, +        keys = bigArrays.grow(keys, id + 1);, +        keys.set(id, key);, +    }, +, +                append(id, key);, +        final long key = keys.set(id, 0);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridAggregator.java, +        for (long i = 0; i < bucketOrds.size(); i++) {, +, +            spare.geohashAsLong = bucketOrds.get(i);, +            spare.docCount = bucketDocCount(i);, +            spare.bucketOrd = i;, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramAggregator.java, +        for (long i = 0; i < bucketOrds.size(); i++) {, +            buckets.add(histogramFactory.createBucket(rounding.valueForKey(bucketOrds.get(i)), bucketDocCount(i), bucketAggregations(i), formatter));, +++ b/src/main/java/org/elasticsearch/common/util/LongHash.java, +        keys = bigArrays.newLongArray(capacity, false);, +    public long get(long id) {, +        return keys.get(id);, +            if (id == -1 || keys.get(id) == key) {, +                append(id, key);, +            } else if (keys.get(curId) == key) {, +    private void append(long id, long key) {, +        keys = bigArrays.grow(keys, id + 1);, +        keys.set(id, key);, +    }, +, +                append(id, key);, +        final long key = keys.set(id, 0);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridAggregator.java, +        for (long i = 0; i < bucketOrds.size(); i++) {, +, +            spare.geohashAsLong = bucketOrds.get(i);, +            spare.docCount = bucketDocCount(i);, +            spare.bucketOrd = i;, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramAggregator.java, +        for (long i = 0; i < bucketOrds.size(); i++) {, +            buckets.add(histogramFactory.createBucket(rounding.valueForKey(bucketOrds.get(i)), bucketDocCount(i), bucketAggregations(i), formatter));, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTermsAggregator.java, +        for (long i = 0; i < bucketOrds.size(); i++) {, +            spare.term = bucketOrds.get(i);, +            spare.subsetDf = bucketDocCount(i);, +            spare.bucketOrd = i;, +++ b/src/main/java/org/elasticsearch/common/util/LongHash.java, +        keys = bigArrays.newLongArray(capacity, false);, +    public long get(long id) {, +        return keys.get(id);, +            if (id == -1 || keys.get(id) == key) {, +                append(id, key);, +            } else if (keys.get(curId) == key) {, +    private void append(long id, long key) {, +        keys = bigArrays.grow(keys, id + 1);, +        keys.set(id, key);, +    }, +, +                append(id, key);, +        final long key = keys.set(id, 0);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridAggregator.java]