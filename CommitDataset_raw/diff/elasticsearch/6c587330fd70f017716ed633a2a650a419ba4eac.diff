[+++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ssl/SSLClientAuth.java, +import javax.net.ssl.SSLParameters;, +        public void configure(SSLParameters sslParameters) {, +            assert !sslParameters.getWantClientAuth();, +            assert !sslParameters.getNeedClientAuth();, +        public void configure(SSLParameters sslParameters) {, +            sslParameters.setWantClientAuth(true);, +        public void configure(SSLParameters sslParameters) {, +            sslParameters.setNeedClientAuth(true);, +     * Configure client authentication of the provided {@link SSLParameters}, +    public abstract void configure(SSLParameters sslParameters);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ssl/SSLClientAuth.java, +import javax.net.ssl.SSLParameters;, +        public void configure(SSLParameters sslParameters) {, +            assert !sslParameters.getWantClientAuth();, +            assert !sslParameters.getNeedClientAuth();, +        public void configure(SSLParameters sslParameters) {, +            sslParameters.setWantClientAuth(true);, +        public void configure(SSLParameters sslParameters) {, +            sslParameters.setNeedClientAuth(true);, +     * Configure client authentication of the provided {@link SSLParameters}, +    public abstract void configure(SSLParameters sslParameters);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ssl/SSLService.java, +        SSLParameters parameters = new SSLParameters(ciphers, supportedProtocols);, +        // we use the cipher suite order so that we can prefer the ciphers we set first in the list, +        parameters.setUseCipherSuitesOrder(true);, +        configuration.sslClientAuth().configure(parameters);, +        // many SSLEngine options can be configured using either SSLParameters or direct methods on the engine itself, but there is one, +        // tricky aspect; if you set a value directly on the engine and then later set the SSLParameters the value set directly on the, +        // engine will be overwritten by the value in the SSLParameters, +        sslEngine.setSSLParameters(parameters);, +            SSLParameters parameters = new SSLParameters(ciphers, supportedProtocols);, +            // we use the cipher suite order so that we can prefer the ciphers we set first in the list, +            parameters.setUseCipherSuitesOrder(true);, +            socket.setSSLParameters(parameters);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ssl/SSLClientAuth.java, +import javax.net.ssl.SSLParameters;, +        public void configure(SSLParameters sslParameters) {, +            assert !sslParameters.getWantClientAuth();, +            assert !sslParameters.getNeedClientAuth();, +        public void configure(SSLParameters sslParameters) {, +            sslParameters.setWantClientAuth(true);, +        public void configure(SSLParameters sslParameters) {, +            sslParameters.setNeedClientAuth(true);, +     * Configure client authentication of the provided {@link SSLParameters}, +    public abstract void configure(SSLParameters sslParameters);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ssl/SSLService.java, +        SSLParameters parameters = new SSLParameters(ciphers, supportedProtocols);, +        // we use the cipher suite order so that we can prefer the ciphers we set first in the list, +        parameters.setUseCipherSuitesOrder(true);, +        configuration.sslClientAuth().configure(parameters);, +        // many SSLEngine options can be configured using either SSLParameters or direct methods on the engine itself, but there is one, +        // tricky aspect; if you set a value directly on the engine and then later set the SSLParameters the value set directly on the, +        // engine will be overwritten by the value in the SSLParameters, +        sslEngine.setSSLParameters(parameters);, +            SSLParameters parameters = new SSLParameters(ciphers, supportedProtocols);, +            // we use the cipher suite order so that we can prefer the ciphers we set first in the list, +            parameters.setUseCipherSuitesOrder(true);, +            socket.setSSLParameters(parameters);, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/ssl/SSLServiceTests.java, +    public void testThatSSLEngineHasCipherSuitesOrderSet() throws Exception {, +        Settings settings = Settings.builder(), +                .put("xpack.ssl.keystore.path", testnodeStore), +                .put("xpack.ssl.keystore.password", "testnode"), +                .build();, +        SSLService sslService = new SSLService(settings, env);, +        SSLEngine engine = sslService.createSSLEngine(Settings.EMPTY, Settings.EMPTY);, +        assertThat(engine, is(notNullValue()));, +        assertTrue(engine.getSSLParameters().getUseCipherSuitesOrder());, +    }, +, +        final String[] supportedProtocols = config.supportedProtocols().toArray(Strings.EMPTY_ARRAY);, +            assertThat(socket.getEnabledProtocols(), arrayContainingInAnyOrder(supportedProtocols));, +            assertArrayEquals(ciphers, socket.getSSLParameters().getCipherSuites());, +            assertThat(socket.getSSLParameters().getProtocols(), arrayContainingInAnyOrder(supportedProtocols));, +            assertTrue(socket.getSSLParameters().getUseCipherSuitesOrder());, +    public void testThatSSLEngineHasProperCiphersAndProtocols() throws Exception {, +        Settings settings = Settings.builder(), +                .put("xpack.ssl.keystore.path", testnodeStore), +                .put("xpack.ssl.keystore.password", "testnode"), +                .build();, +        SSLService sslService = new SSLService(settings, env);, +        SSLEngine engine = sslService.createSSLEngine(Settings.EMPTY, Settings.EMPTY);, +        SSLConfiguration config = sslService.sslConfiguration(Settings.EMPTY);, +        final String[] ciphers = sslService.supportedCiphers(engine.getSupportedCipherSuites(), config.cipherSuites(), false);, +        final String[] supportedProtocols = config.supportedProtocols().toArray(Strings.EMPTY_ARRAY);, +        assertThat(engine.getEnabledCipherSuites(), is(ciphers));, +        assertArrayEquals(ciphers, engine.getSSLParameters().getCipherSuites());, +        // the order we set the protocols in is not going to be what is returned as internally the JDK may sort the versions, +        assertThat(engine.getEnabledProtocols(), arrayContainingInAnyOrder(supportedProtocols));, +        assertThat(engine.getSSLParameters().getProtocols(), arrayContainingInAnyOrder(supportedProtocols));, +    }, +]