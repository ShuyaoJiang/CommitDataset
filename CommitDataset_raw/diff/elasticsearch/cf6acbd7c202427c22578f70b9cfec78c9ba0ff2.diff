[+++ b/core/pom.xml, +        <version>2.0.0-SNAPSHOT</version>, +++ b/core/pom.xml, +        <version>2.0.0-SNAPSHOT</version>, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_2_0_0_ID = 2000099;, +    public static final Version V_2_0_0 = new Version(V_2_0_0_ID, true, org.apache.lucene.util.Version.LUCENE_5_2_1);, +    public static final Version CURRENT = V_2_0_0;, +            case V_2_0_0_ID:, +                return V_2_0_0;, +++ b/core/pom.xml, +        <version>2.0.0-SNAPSHOT</version>, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_2_0_0_ID = 2000099;, +    public static final Version V_2_0_0 = new Version(V_2_0_0_ID, true, org.apache.lucene.util.Version.LUCENE_5_2_1);, +    public static final Version CURRENT = V_2_0_0;, +            case V_2_0_0_ID:, +                return V_2_0_0;, +++ b/core/src/test/java/org/elasticsearch/VersionTests.java, +                if (v.equals(Version.V_2_0_0_beta1)) {, +                    assertTrue("Remove this once beta1 is released", v.snapshot());, +                    continue; // this is just a temporary fix until we have a snapshot for the beta since we now have 2 unreleased version of the same major.minor group, +                }, +++ b/core/pom.xml, +        <version>2.0.0-SNAPSHOT</version>, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_2_0_0_ID = 2000099;, +    public static final Version V_2_0_0 = new Version(V_2_0_0_ID, true, org.apache.lucene.util.Version.LUCENE_5_2_1);, +    public static final Version CURRENT = V_2_0_0;, +            case V_2_0_0_ID:, +                return V_2_0_0;, +++ b/core/src/test/java/org/elasticsearch/VersionTests.java, +                if (v.equals(Version.V_2_0_0_beta1)) {, +                    assertTrue("Remove this once beta1 is released", v.snapshot());, +                    continue; // this is just a temporary fix until we have a snapshot for the beta since we now have 2 unreleased version of the same major.minor group, +                }, +++ b/dev-tools/pom.xml, +  <version>2.0.0-SNAPSHOT</version>, +++ b/core/pom.xml, +        <version>2.0.0-SNAPSHOT</version>, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_2_0_0_ID = 2000099;, +    public static final Version V_2_0_0 = new Version(V_2_0_0_ID, true, org.apache.lucene.util.Version.LUCENE_5_2_1);, +    public static final Version CURRENT = V_2_0_0;, +            case V_2_0_0_ID:, +                return V_2_0_0;, +++ b/core/src/test/java/org/elasticsearch/VersionTests.java, +                if (v.equals(Version.V_2_0_0_beta1)) {, +                    assertTrue("Remove this once beta1 is released", v.snapshot());, +                    continue; // this is just a temporary fix until we have a snapshot for the beta since we now have 2 unreleased version of the same major.minor group, +                }, +++ b/dev-tools/pom.xml, +  <version>2.0.0-SNAPSHOT</version>, +++ b/dev-tools/src/main/resources/license-check/check_license_and_sha.pl, +            print STDERR "$jar: SHA is missing\n";, +            print STDERR, +                "$jar: SHA has changed, expected $old_sha but found $new{$jar}\n";, +            print STDERR "$jar: LICENSE is missing\n";, +            print STDERR "$jar: NOTICE is missing\n";, +        print STDERR "Extra SHA files present for: " . join ", ",, +            sort keys %old;, +        print "\n";, +        print STDERR "Extra LICENCE file present: " . join ", ",, +        print "\n";, +        print STDERR "Extra NOTICE file present: " . join ", ",, +        print "\n";, +        print STDERR <<"SHAS", +    print("All SHAs and licenses OK\n") unless $error;, +            print "Updating $jar\n";, +            print "Adding $jar\n";, +        print $fh $new{$jar} . "\n" or die $!;, +        print "Deleting $jar\n";, +    print "SHAs updated\n";, +++ b/core/pom.xml, +        <version>2.0.0-SNAPSHOT</version>, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_2_0_0_ID = 2000099;, +    public static final Version V_2_0_0 = new Version(V_2_0_0_ID, true, org.apache.lucene.util.Version.LUCENE_5_2_1);, +    public static final Version CURRENT = V_2_0_0;, +            case V_2_0_0_ID:, +                return V_2_0_0;, +++ b/core/src/test/java/org/elasticsearch/VersionTests.java, +                if (v.equals(Version.V_2_0_0_beta1)) {, +                    assertTrue("Remove this once beta1 is released", v.snapshot());, +                    continue; // this is just a temporary fix until we have a snapshot for the beta since we now have 2 unreleased version of the same major.minor group, +                }, +++ b/dev-tools/pom.xml, +  <version>2.0.0-SNAPSHOT</version>, +++ b/dev-tools/src/main/resources/license-check/check_license_and_sha.pl, +            print STDERR "$jar: SHA is missing\n";, +            print STDERR, +                "$jar: SHA has changed, expected $old_sha but found $new{$jar}\n";, +            print STDERR "$jar: LICENSE is missing\n";, +            print STDERR "$jar: NOTICE is missing\n";, +        print STDERR "Extra SHA files present for: " . join ", ",, +            sort keys %old;, +        print "\n";, +        print STDERR "Extra LICENCE file present: " . join ", ",, +        print "\n";, +        print STDERR "Extra NOTICE file present: " . join ", ",]