[+++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequest.java, +import org.elasticsearch.common.Nullable;, +    private String tokenizer;, +, +    private String[] tokenFilters;, +, +     * Constructs a new analyzer request for the provided text., +     *, +     * @param text The text to analyze, +     */, +    public AnalyzeRequest(String text) {, +        this.text = text;, +    }, +, +    /**, +    public AnalyzeRequest(@Nullable String index, String text) {, +    public AnalyzeRequest tokenizer(String tokenizer) {, +        this.tokenizer = tokenizer;, +        return this;, +    }, +, +    public String tokenizer() {, +        return this.tokenizer;, +    }, +, +    public AnalyzeRequest tokenFilters(String... tokenFilters) {, +        this.tokenFilters = tokenFilters;, +        return this;, +    }, +, +    public String[] tokenFilters() {, +        return this.tokenFilters;, +    }, +, +        if (in.readBoolean()) {, +        }, +            tokenizer = in.readUTF();, +        }, +        int size = in.readVInt();, +        if (size > 0) {, +            tokenFilters = new String[size];, +            for (int i = 0; i < size; i++) {, +                tokenFilters[i] = in.readUTF();, +            }, +        }, +        if (in.readBoolean()) {, +        if (index == null) {, +            out.writeBoolean(false);, +        } else {, +            out.writeUTF(index);, +        }, +        writeOption(out, tokenizer);, +        if (tokenFilters == null) {, +            out.writeVInt(0);, +        } else {, +            out.writeVInt(tokenFilters.length);, +            for (String tokenFilter : tokenFilters) {, +                out.writeUTF(tokenFilter);, +            }, +        }, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequest.java, +import org.elasticsearch.common.Nullable;, +    private String tokenizer;, +, +    private String[] tokenFilters;, +, +     * Constructs a new analyzer request for the provided text., +     *, +     * @param text The text to analyze, +     */, +    public AnalyzeRequest(String text) {, +        this.text = text;, +    }, +, +    /**, +    public AnalyzeRequest(@Nullable String index, String text) {, +    public AnalyzeRequest tokenizer(String tokenizer) {, +        this.tokenizer = tokenizer;, +        return this;, +    }, +, +    public String tokenizer() {, +        return this.tokenizer;, +    }, +, +    public AnalyzeRequest tokenFilters(String... tokenFilters) {, +        this.tokenFilters = tokenFilters;, +        return this;, +    }, +, +    public String[] tokenFilters() {, +        return this.tokenFilters;, +    }, +, +        if (in.readBoolean()) {, +        }, +            tokenizer = in.readUTF();, +        }, +        int size = in.readVInt();, +        if (size > 0) {]