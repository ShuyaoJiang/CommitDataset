[+++ b/dev-tools/build_release.py, +  # dont sign the RPM, so older distros will be able to use the uploaded RPM package, +  gpg_args = '-Dgpg.key="%s" -Dgpg.passphrase="%s" -Ddeb.sign=true -Drpm.sign=false' % (env.get('GPG_KEY_ID'), env.get('GPG_PASSPHRASE')), +    # create additional signed RPM for the repositories, +    run_mvn('-f distribution/rpm/pom.xml package -DskipTests -Dsign.rpm=true -Drpm.outputDirectory=target/releases/signed/ %s' % (gpg_args)), +    rpm = os.path.join('target/releases/signed', 'elasticsearch-%s.rpm' % release_version), +      log('Signed RPM [%s] contains: ' % rpm), +def artifact_names(release):, +  artifacts = [], +  artifacts.append(os.path.join('distribution/zip/target/releases', 'elasticsearch-%s.zip' % (release))), +  artifacts.append(os.path.join('distribution/tar/target/releases', 'elasticsearch-%s.tar.gz' % (release))), +  artifacts.append(os.path.join('distribution/deb/target/releases', 'elasticsearch-%s.deb' % (release))), +  artifacts.append(os.path.join('distribution/rpm/target/releases', 'elasticsearch-%s.rpm' % (release))), +  common_artifacts = artifact_names(release), +# Sample URL:, +# http://download.elasticsearch.org/elasticsearch/release/org/elasticsearch/distribution/elasticsearch-rpm/2.0.0-beta1-SNAPSHOT/elasticsearch-rpm-2.0.0-beta1-SNAPSHOT.rpm, +def download_and_verify(release, files, plugins=None, base_url='https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution'):, +      if name.endswith('tar.gz'):, +        url = '%s/tar/elasticsearch/%s/%s' % (base_url, release, name), +      elif name.endswith('zip'):, +        url = '%s/zip/elasticsearch/%s/%s' % (base_url, release, name), +      elif name.endswith('rpm'):, +        url = '%s/rpm/elasticsearch/%s/%s' % (base_url, release, name), +      elif name.endswith('deb'):, +        url = '%s/deb/elasticsearch/%s/%s' % (base_url, release, name), +      url = ''.join([url, '.sha1']), +      checksum_file = os.path.join(tmp_dir, ''.join([abs_file_path, '.sha1'])), +    print('Triggering repository update for version %s - calling dev-tools/build_repositories.sh %s' % (version, src_branch)), +        print('  Running maven builds now and publish to Sonatype and S3 - run-tests [%s]' % run_tests), +++ b/dev-tools/build_release.py, +  # dont sign the RPM, so older distros will be able to use the uploaded RPM package, +  gpg_args = '-Dgpg.key="%s" -Dgpg.passphrase="%s" -Ddeb.sign=true -Drpm.sign=false' % (env.get('GPG_KEY_ID'), env.get('GPG_PASSPHRASE')), +    # create additional signed RPM for the repositories, +    run_mvn('-f distribution/rpm/pom.xml package -DskipTests -Dsign.rpm=true -Drpm.outputDirectory=target/releases/signed/ %s' % (gpg_args)), +    rpm = os.path.join('target/releases/signed', 'elasticsearch-%s.rpm' % release_version), +      log('Signed RPM [%s] contains: ' % rpm), +def artifact_names(release):, +  artifacts = [], +  artifacts.append(os.path.join('distribution/zip/target/releases', 'elasticsearch-%s.zip' % (release))), +  artifacts.append(os.path.join('distribution/tar/target/releases', 'elasticsearch-%s.tar.gz' % (release))), +  artifacts.append(os.path.join('distribution/deb/target/releases', 'elasticsearch-%s.deb' % (release))), +  artifacts.append(os.path.join('distribution/rpm/target/releases', 'elasticsearch-%s.rpm' % (release))), +  common_artifacts = artifact_names(release), +# Sample URL:, +# http://download.elasticsearch.org/elasticsearch/release/org/elasticsearch/distribution/elasticsearch-rpm/2.0.0-beta1-SNAPSHOT/elasticsearch-rpm-2.0.0-beta1-SNAPSHOT.rpm, +def download_and_verify(release, files, plugins=None, base_url='https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution'):, +      if name.endswith('tar.gz'):, +        url = '%s/tar/elasticsearch/%s/%s' % (base_url, release, name), +      elif name.endswith('zip'):, +        url = '%s/zip/elasticsearch/%s/%s' % (base_url, release, name), +      elif name.endswith('rpm'):, +        url = '%s/rpm/elasticsearch/%s/%s' % (base_url, release, name), +      elif name.endswith('deb'):, +        url = '%s/deb/elasticsearch/%s/%s' % (base_url, release, name), +      url = ''.join([url, '.sha1']), +      checksum_file = os.path.join(tmp_dir, ''.join([abs_file_path, '.sha1'])), +    print('Triggering repository update for version %s - calling dev-tools/build_repositories.sh %s' % (version, src_branch)), +        print('  Running maven builds now and publish to Sonatype and S3 - run-tests [%s]' % run_tests), +++ b/dev-tools/build_repositories.sh, +rpm=distribution/rpm/target/releases/signed/elasticsearch*.rpm, +echo "RPM: Copying signed $rpm into $centosdir", +deb=distribution/deb/target/releases/elasticsearch*.deb, +++ b/dev-tools/build_release.py, +  # dont sign the RPM, so older distros will be able to use the uploaded RPM package, +  gpg_args = '-Dgpg.key="%s" -Dgpg.passphrase="%s" -Ddeb.sign=true -Drpm.sign=false' % (env.get('GPG_KEY_ID'), env.get('GPG_PASSPHRASE')), +    # create additional signed RPM for the repositories, +    run_mvn('-f distribution/rpm/pom.xml package -DskipTests -Dsign.rpm=true -Drpm.outputDirectory=target/releases/signed/ %s' % (gpg_args)), +    rpm = os.path.join('target/releases/signed', 'elasticsearch-%s.rpm' % release_version), +      log('Signed RPM [%s] contains: ' % rpm), +def artifact_names(release):, +  artifacts = [], +  artifacts.append(os.path.join('distribution/zip/target/releases', 'elasticsearch-%s.zip' % (release))), +  artifacts.append(os.path.join('distribution/tar/target/releases', 'elasticsearch-%s.tar.gz' % (release))), +  artifacts.append(os.path.join('distribution/deb/target/releases', 'elasticsearch-%s.deb' % (release))), +  artifacts.append(os.path.join('distribution/rpm/target/releases', 'elasticsearch-%s.rpm' % (release))), +  common_artifacts = artifact_names(release), +# Sample URL:, +# http://download.elasticsearch.org/elasticsearch/release/org/elasticsearch/distribution/elasticsearch-rpm/2.0.0-beta1-SNAPSHOT/elasticsearch-rpm-2.0.0-beta1-SNAPSHOT.rpm, +def download_and_verify(release, files, plugins=None, base_url='https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution'):, +      if name.endswith('tar.gz'):, +        url = '%s/tar/elasticsearch/%s/%s' % (base_url, release, name), +      elif name.endswith('zip'):, +        url = '%s/zip/elasticsearch/%s/%s' % (base_url, release, name), +      elif name.endswith('rpm'):, +        url = '%s/rpm/elasticsearch/%s/%s' % (base_url, release, name), +      elif name.endswith('deb'):, +        url = '%s/deb/elasticsearch/%s/%s' % (base_url, release, name), +      url = ''.join([url, '.sha1']), +      checksum_file = os.path.join(tmp_dir, ''.join([abs_file_path, '.sha1'])), +    print('Triggering repository update for version %s - calling dev-tools/build_repositories.sh %s' % (version, src_branch)), +        print('  Running maven builds now and publish to Sonatype and S3 - run-tests [%s]' % run_tests), +++ b/dev-tools/build_repositories.sh, +rpm=distribution/rpm/target/releases/signed/elasticsearch*.rpm, +echo "RPM: Copying signed $rpm into $centosdir", +deb=distribution/deb/target/releases/elasticsearch*.deb, +++ b/distribution/rpm/pom.xml, +    <properties>, +        <skip.integ.tests>true</skip.integ.tests>, +        <rpm.outputDirectory>${project.build.directory}/releases/</rpm.outputDirectory>, +    </properties>]