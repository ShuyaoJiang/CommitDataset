[+++ b/core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +     * @return true if the source only has suggest, +     */, +    public boolean hasOnlySuggest() {, +        return suggestBuilder != null, +            && queryBuilder == null && aggregations == null;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +     * @return true if the source only has suggest, +     */, +    public boolean hasOnlySuggest() {, +        return suggestBuilder != null, +            && queryBuilder == null && aggregations == null;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java, +        if (hasOnlySuggest() ) {, +            return;, +        }, +++ b/core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +     * @return true if the source only has suggest, +     */, +    public boolean hasOnlySuggest() {, +        return suggestBuilder != null, +            && queryBuilder == null && aggregations == null;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java, +        if (hasOnlySuggest() ) {, +            return;, +        }, +++ b/core/src/main/java/org/elasticsearch/search/internal/SearchContext.java, +     * @return true if the request contains only suggest, +     */, +    public final boolean hasOnlySuggest() {, +        return request().source() != null, +            && request().source().hasOnlySuggest();, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +     * @return true if the source only has suggest, +     */, +    public boolean hasOnlySuggest() {, +        return suggestBuilder != null, +            && queryBuilder == null && aggregations == null;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java, +        if (hasOnlySuggest() ) {, +            return;, +        }, +++ b/core/src/main/java/org/elasticsearch/search/internal/SearchContext.java, +     * @return true if the request contains only suggest, +     */, +    public final boolean hasOnlySuggest() {, +        return request().source() != null, +            && request().source().hasOnlySuggest();, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/query/QueryPhase.java, +        if (searchContext.hasOnlySuggest()) {, +            suggestPhase.execute(searchContext);, +            // TODO: fix this once we can fetch docs for suggestions, +            searchContext.queryResult().topDocs(new TopDocs(0, Lucene.EMPTY_SCORE_DOCS, 0));, +            return;, +        }]