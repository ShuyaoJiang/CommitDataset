[+++ b/server/src/main/java/org/elasticsearch/common/settings/Setting.java, +, +    final boolean isListSetting() {, +        return this instanceof ListSetting;, +    }, +, +        return settings.get(getKey(), defaultValue.apply(settings), isListSetting());, +++ b/server/src/main/java/org/elasticsearch/common/settings/Setting.java, +, +    final boolean isListSetting() {, +        return this instanceof ListSetting;, +    }, +, +        return settings.get(getKey(), defaultValue.apply(settings), isListSetting());, +++ b/server/src/main/java/org/elasticsearch/common/settings/Settings.java, +     * Returns the setting value associated with the setting key. If it does not exists,, +     * returns the default value provided., +     */, +    String get(String setting, String defaultValue, boolean isList) {, +        Object value = settings.get(setting);, +        if (value != null) {, +            if (value instanceof List) {, +                if (isList == false) {, +                    throw new IllegalArgumentException(, +                        "Found list type value for setting [" + setting + "] but but did not expect a list for it.", +                    );, +                }, +            } else if (isList) {, +                throw new IllegalArgumentException(, +                    "Expected list type value for setting [" + setting + "] but found [" + value.getClass() + ']', +                );, +            }, +            return toString(value);, +        } else {, +            return defaultValue;, +        }, +    }, +, +    /**, +++ b/server/src/main/java/org/elasticsearch/common/settings/Setting.java, +, +    final boolean isListSetting() {, +        return this instanceof ListSetting;, +    }, +, +        return settings.get(getKey(), defaultValue.apply(settings), isListSetting());, +++ b/server/src/main/java/org/elasticsearch/common/settings/Settings.java, +     * Returns the setting value associated with the setting key. If it does not exists,, +     * returns the default value provided., +     */, +    String get(String setting, String defaultValue, boolean isList) {, +        Object value = settings.get(setting);, +        if (value != null) {, +            if (value instanceof List) {, +                if (isList == false) {, +                    throw new IllegalArgumentException(, +                        "Found list type value for setting [" + setting + "] but but did not expect a list for it.", +                    );, +                }, +            } else if (isList) {, +                throw new IllegalArgumentException(, +                    "Expected list type value for setting [" + setting + "] but found [" + value.getClass() + ']', +                );, +            }, +            return toString(value);, +        } else {, +            return defaultValue;, +        }, +    }, +, +    /**, +++ b/server/src/test/java/org/elasticsearch/common/settings/SettingTests.java, +    public void testValidateStringSetting() {, +        Settings settings = Settings.builder().putList("foo.bar", Arrays.asList("bla-a", "bla-b")).build();, +        Setting<String> stringSetting = Setting.simpleString("foo.bar", Property.NodeScope);, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> stringSetting.get(settings));, +        assertEquals("Found list type value for setting [foo.bar] but but did not expect a list for it.", e.getMessage());, +    }, +]