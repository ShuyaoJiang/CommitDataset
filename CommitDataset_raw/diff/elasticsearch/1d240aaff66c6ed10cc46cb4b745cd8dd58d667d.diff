[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/PrefixQueryParser.java, +            parser.nextToken();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/PrefixQueryParser.java, +            parser.nextToken();, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/index/query/xcontent/SimpleIndexQueryParserTests.java, +    @Test public void testDisMax2() throws Exception {, +        IndexQueryParser queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/index/query/xcontent/disMax2.json");, +        Query parsedQuery = queryParser.parse(query).query();, +        assertThat(parsedQuery, instanceOf(DisjunctionMaxQuery.class));, +        DisjunctionMaxQuery disjunctionMaxQuery = (DisjunctionMaxQuery) parsedQuery;, +, +        List<Query> disjuncts = Queries.disMaxClauses(disjunctionMaxQuery);, +        assertThat(disjuncts.size(), equalTo(1));, +, +        PrefixQuery firstQ = (PrefixQuery) disjuncts.get(0);, +        // since age is automatically registered in data, we encode it as numeric, +        assertThat(firstQ.getPrefix(), equalTo(new Term("name.first", "sh")));, +        assertThat((double) firstQ.getBoost(), closeTo(1.2, 0.00001));, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/PrefixQueryParser.java, +            parser.nextToken();, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/index/query/xcontent/SimpleIndexQueryParserTests.java, +    @Test public void testDisMax2() throws Exception {, +        IndexQueryParser queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/index/query/xcontent/disMax2.json");, +        Query parsedQuery = queryParser.parse(query).query();, +        assertThat(parsedQuery, instanceOf(DisjunctionMaxQuery.class));, +        DisjunctionMaxQuery disjunctionMaxQuery = (DisjunctionMaxQuery) parsedQuery;, +, +        List<Query> disjuncts = Queries.disMaxClauses(disjunctionMaxQuery);, +        assertThat(disjuncts.size(), equalTo(1));, +, +        PrefixQuery firstQ = (PrefixQuery) disjuncts.get(0);, +        // since age is automatically registered in data, we encode it as numeric, +        assertThat(firstQ.getPrefix(), equalTo(new Term("name.first", "sh")));, +        assertThat((double) firstQ.getBoost(), closeTo(1.2, 0.00001));, +    }, +, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/index/query/xcontent/disMax2.json, +{, +    "dis_max" : {, +        "queries" : [, +            {, +                "prefix" : {, +                    "name.first" : {, +                        "value" : "sh",, +                        "boost" : 1.2, +                    }, +                }, +            }, +        ], +    }, +}]