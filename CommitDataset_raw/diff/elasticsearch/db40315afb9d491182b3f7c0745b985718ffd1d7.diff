[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.GetDatafeedRequest;, +    static Request getDatafeed(GetDatafeedRequest getDatafeedRequest) {, +        String endpoint = new EndpointBuilder(), +                .addPathPartAsIs("_xpack"), +                .addPathPartAsIs("ml"), +                .addPathPartAsIs("datafeeds"), +                .addPathPart(Strings.collectionToCommaDelimitedString(getDatafeedRequest.getDatafeedIds())), +                .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);, +, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        if (getDatafeedRequest.isAllowNoDatafeeds() != null) {, +            params.putParam(GetDatafeedRequest.ALLOW_NO_DATAFEEDS.getPreferredName(),, +                    Boolean.toString(getDatafeedRequest.isAllowNoDatafeeds()));, +        }, +, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.GetDatafeedRequest;, +    static Request getDatafeed(GetDatafeedRequest getDatafeedRequest) {, +        String endpoint = new EndpointBuilder(), +                .addPathPartAsIs("_xpack"), +                .addPathPartAsIs("ml"), +                .addPathPartAsIs("datafeeds"), +                .addPathPart(Strings.collectionToCommaDelimitedString(getDatafeedRequest.getDatafeedIds())), +                .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);, +, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        if (getDatafeedRequest.isAllowNoDatafeeds() != null) {, +            params.putParam(GetDatafeedRequest.ALLOW_NO_DATAFEEDS.getPreferredName(),, +                    Boolean.toString(getDatafeedRequest.isAllowNoDatafeeds()));, +        }, +, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.GetDatafeedRequest;, +import org.elasticsearch.client.ml.GetDatafeedResponse;, +     * Gets one or more Machine Learning datafeed configuration info., +     *, +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html">ML GET datafeed documentation</a>, +     *, +     * @param request {@link GetDatafeedRequest} Request containing a list of datafeedId(s) and additional options, +     * @param options Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return {@link GetDatafeedResponse} response object containing, +     * the {@link org.elasticsearch.client.ml.datafeed.DatafeedConfig} objects and the number of jobs found, +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public GetDatafeedResponse getDatafeed(GetDatafeedRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +                MLRequestConverters::getDatafeed,, +                options,, +                GetDatafeedResponse::fromXContent,, +                Collections.emptySet());, +    }, +, +    /**, +     * Gets one or more Machine Learning datafeed configuration info, asynchronously., +     *, +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html">ML GET datafeed documentation</a>, +     *, +     * @param request {@link GetDatafeedRequest} Request containing a list of datafeedId(s) and additional options, +     * @param options Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified with {@link GetDatafeedResponse} upon request completion, +     */, +    public void getDatafeedAsync(GetDatafeedRequest request, RequestOptions options, ActionListener<GetDatafeedResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +                MLRequestConverters::getDatafeed,, +                options,, +                GetDatafeedResponse::fromXContent,, +                listener,, +                Collections.emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.GetDatafeedRequest;, +    static Request getDatafeed(GetDatafeedRequest getDatafeedRequest) {, +        String endpoint = new EndpointBuilder(), +                .addPathPartAsIs("_xpack"), +                .addPathPartAsIs("ml"), +                .addPathPartAsIs("datafeeds"), +                .addPathPart(Strings.collectionToCommaDelimitedString(getDatafeedRequest.getDatafeedIds())), +                .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);, +, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        if (getDatafeedRequest.isAllowNoDatafeeds() != null) {, +            params.putParam(GetDatafeedRequest.ALLOW_NO_DATAFEEDS.getPreferredName(),, +                    Boolean.toString(getDatafeedRequest.isAllowNoDatafeeds()));, +        }]