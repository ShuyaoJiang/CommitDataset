[+++ b/docs/reference/search/request/highlighting.asciidoc, +Highlighters enable you to get highlighted snippets from one or more fields, +in your search results so you can show users where the query matches are., +When you request highlights, the response contains an additional `highlight`, +element for each search hit that includes the highlighted fields and the, +highlighted fragments., +, +Highlighting requires the actual content of a field. If the field is not, +stored (the mapping does not set `store` to `true`), the actual `_source` is, +loaded and the relevant field is extracted from `_source`., +, +NOTE: The `_all` field cannot be extracted from `_source`, so it can only, +be used for highlighting if it is explicitly stored., +, +For example, to get highlights for the `content` field in each search hit, +using the default highlighter, include a `highlight` object in, +the request body that specifies the `content` field:, +{es} supports three highlighters:, +* The `unified` highlighter uses the Lucene Unified Highlighter. This, +highlighter breaks the text into sentences and uses the BM25 algorithm to score, +individual sentences as if they were documents in the corpus. It also supports, +accurate phrase and multi-term (fuzzy, prefix, regex) highlighting. This is the, +default highlighter., +[[plain-highlighter]], +* The `plain` highlighter uses the standard Lucene highlighter. It attempts to, +reflect the query matching logic in terms of understanding word importance and, +any word positioning criteria in phrase queries., ++, +[WARNING], +The `plain` highlighter works best for highlighting simple query matches in a, +single field. To accurately reflect query logic, it creates a tiny in-memory, +index and re-runs the original query criteria through Lucene's query execution, +planner to get access to low-level match information for the current document., +This is repeated for every field and every document that needs to be highlighted., +If you want to highlight a lot of fields in a lot of documents with complex, +queries, we recommend using one of the other highlighters., +[[fast-vector-highlighter]], +* The `fvh` highlighter uses the Lucene Fast Vector highlighter., +This highlighter can be used on fields with `term_vector` set to, +`with_positions_offsets` in the mapping. The fast vector highlighter:, +** Is faster especially for large fields (> `1MB`), +** Can be customized with  a <<boundary-scanners,`boundary_scanner`>>. , +** Requires setting `term_vector` to `with_positions_offsets` which, +  increases the size of the index, +** Can combine matches from multiple fields into one result.  See, +  `matched_fields`, +** Can assign different weights to matches at different positions allowing, +  for things like phrase matches being sorted above term matches when, +  highlighting a Boosting Query that boosts phrase matches over term matches, +To create meaningful search snippets from the terms being queried,, +the highlighter needs to know the start and end character offsets of each word, +in the original text. These offsets can be obtained from:, +* The postings list. If `index_options` is set to `offsets` in the mapping,, +the `unified` highlighter uses this information to highlight documents without, +re-analyzing the text. It re-runs the original query directly on the postings, +and extracts the matching offsets from the index, limiting the collection to, +the highlighted documents. This is important if you have large fields because, +it doesn't require reanalyzing the text to be highlighted. It also requires less, +disk space than using `term_vectors`., +* Term vectors. If `term_vector` information is provided by setting , +`term_vector` to `with_positions_offsets` in the mapping, the `unified`, +highlighter automatically uses the `term_vector` to highlight the field., +Term vector highlighting is faster for highlighting multi-term queries like, +`prefix` or `wildcard` because it can access the dictionary of terms for, +each document, but it can be slower than using the postings list. The `fvh`, +highlighter always uses term vectors., +, +* Plain highlighting. This mode is used when there is no other alternative., +Lucene's query execution planner to get access to low-level match information on, +the current document. This is repeated for every field and every document that, +needs highlighting. The `plain` highlighter always uses plain highlighting., +You can specify the highlighter `type` you want to use, +for each field., +[[highlighting-settings]], +==== Highlighting Settings, +, +Highlighting settings can be set on a global level and overridden at, +the field level., +, +boundary_chars:: A string that contains each boundary character., +Defaults to `.,!? \t\n`., +, +boundary_max_scan:: How far to scan for boundary characters. Defaults to `20`., +, +[[boundary-scanners]], +boundary_scanner:: Specifies how to break the highlighted fragments: `chars`,, +`sentence`, or `word`. Only valid for the `unified` and `fvh` highlighters., +Defaults to `sentence` for the `unified` highlighter. Defaults to `chars` for, +the `fvh` highlighter., ++, +* `chars` Use the characters specified by `boundary_chars` as highlighting, +boundaries.  The `boundary_max_scan` setting controls how far to scan for, +boundary characters. Only valid for the `fvh` highlighter., +* `sentence` Break highlighted fragments at the next sentence boundary, as, +determined by Java's , +https://docs.oracle.com/javase/8/docs/api/java/text/BreakIterator.html[BreakIterator]., +You can specify the locale to use with `boundary_scanner_locale`., ++, +NOTE: When used with the `unified` highlighter, the `sentence` scanner splits, +sentences bigger than `fragment_size` at the first word boundary next to]