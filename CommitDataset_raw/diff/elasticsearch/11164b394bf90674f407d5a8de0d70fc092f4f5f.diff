[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/InternalValueCount.java, +import java.util.Objects;, +, +    @Override, +    protected int doHashCode() {, +        return Objects.hash(value);, +    }, +, +    @Override, +    protected boolean doEquals(Object obj) {, +        InternalValueCount that = (InternalValueCount) obj;, +        return Objects.equals(this.value, that.value);, +    }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/InternalValueCount.java, +import java.util.Objects;, +, +    @Override, +    protected int doHashCode() {, +        return Objects.hash(value);, +    }, +, +    @Override, +    protected boolean doEquals(Object obj) {, +        InternalValueCount that = (InternalValueCount) obj;, +        return Objects.equals(this.value, that.value);, +    }, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/metrics/valuecount/InternalValueCountTests.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.search.aggregations.metrics.valuecount;, +, +import org.elasticsearch.common.io.stream.Writeable;, +import org.elasticsearch.search.aggregations.InternalAggregationTestCase;, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregator;, +, +import java.util.List;, +import java.util.Map;, +, +public class InternalValueCountTests extends InternalAggregationTestCase<InternalValueCount> {, +, +    @Override, +    protected InternalValueCount createTestInstance(String name,, +                                                    List<PipelineAggregator> pipelineAggregators,, +                                                    Map<String, Object> metaData) {, +        return new InternalValueCount(name, randomIntBetween(0, 100), pipelineAggregators, metaData);, +    }, +, +    @Override, +    protected void assertReduced(InternalValueCount reduced, List<InternalValueCount> inputs) {, +        assertEquals(inputs.stream().mapToDouble(InternalValueCount::value).sum(), reduced.getValue(), 0);, +    }, +, +    @Override, +    protected Writeable.Reader<InternalValueCount> instanceReader() {, +        return InternalValueCount::new;, +    }, +}, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/InternalValueCount.java, +import java.util.Objects;, +, +    @Override, +    protected int doHashCode() {, +        return Objects.hash(value);, +    }, +, +    @Override, +    protected boolean doEquals(Object obj) {, +        InternalValueCount that = (InternalValueCount) obj;, +        return Objects.equals(this.value, that.value);, +    }, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/metrics/valuecount/InternalValueCountTests.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,]