[+++ b/docs/reference/migration/migrate_2_0.asciidoc, +* `_index` configuration is limited to enabling the field., +++ b/docs/reference/migration/migrate_2_0.asciidoc, +* `_index` configuration is limited to enabling the field., +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java, +import org.elasticsearch.Version;, +            if (parserContext.indexVersionCreated().before(Version.V_2_0_0)) {, +            }, +        if (writePre2xSettings && (includeDefaults || fieldType().stored() != Defaults.FIELD_TYPE.stored())) {, +        if (writePre2xSettings) {, +            }, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +* `_index` configuration is limited to enabling the field., +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java, +import org.elasticsearch.Version;, +            if (parserContext.indexVersionCreated().before(Version.V_2_0_0)) {, +            }, +        if (writePre2xSettings && (includeDefaults || fieldType().stored() != Defaults.FIELD_TYPE.stored())) {, +        if (writePre2xSettings) {, +            }, +++ b/src/test/java/org/elasticsearch/index/mapper/index/IndexTypeMapperTests.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +    public void testSimpleIndexMapper() throws Exception {, +                .startObject("_index").field("enabled", true).endObject(), +    public void testExplicitDisabledIndexMapper() throws Exception {, +                .startObject("_index").field("enabled", false).endObject(), +    public void testDefaultDisabledIndexMapper() throws Exception {, +                .startObject("_index").field("enabled", true).endObject(), +                .startObject("_index").field("enabled", false).endObject(), +, +    public void testCustomSettingsBackcompat() throws Exception {, +        String mapping = XContentFactory.jsonBuilder().startObject().startObject("type"), +            .startObject("_index"), +                .field("enabled", true), +                .field("store", "yes").endObject(), +            .endObject().endObject().string();, +        Settings indexSettings = ImmutableSettings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.V_1_4_2.id).build();, +        DocumentMapper docMapper = createIndex("test", indexSettings).mapperService().documentMapperParser().parse(mapping);, +        IndexFieldMapper indexMapper = docMapper.rootMapper(IndexFieldMapper.class);, +        assertThat(indexMapper.enabled(), equalTo(true));, +        assertThat(indexMapper.fieldType().stored(), equalTo(true));, +, +        ParsedDocument doc = docMapper.parse("type", "1", XContentFactory.jsonBuilder(), +            .startObject(), +            .field("field", "value"), +            .endObject(), +            .bytes());, +, +        assertThat(doc.rootDoc().get("_index"), equalTo("test"));, +        assertThat(doc.rootDoc().get("field"), equalTo("value"));, +    }, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +* `_index` configuration is limited to enabling the field., +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java, +import org.elasticsearch.Version;, +            if (parserContext.indexVersionCreated().before(Version.V_2_0_0)) {, +            }, +        if (writePre2xSettings && (includeDefaults || fieldType().stored() != Defaults.FIELD_TYPE.stored())) {, +        if (writePre2xSettings) {, +            }, +++ b/src/test/java/org/elasticsearch/index/mapper/index/IndexTypeMapperTests.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +    public void testSimpleIndexMapper() throws Exception {, +                .startObject("_index").field("enabled", true).endObject(), +    public void testExplicitDisabledIndexMapper() throws Exception {, +                .startObject("_index").field("enabled", false).endObject(), +    public void testDefaultDisabledIndexMapper() throws Exception {, +                .startObject("_index").field("enabled", true).endObject(), +                .startObject("_index").field("enabled", false).endObject(), +, +    public void testCustomSettingsBackcompat() throws Exception {, +        String mapping = XContentFactory.jsonBuilder().startObject().startObject("type"), +            .startObject("_index"), +                .field("enabled", true), +                .field("store", "yes").endObject(), +            .endObject().endObject().string();, +        Settings indexSettings = ImmutableSettings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.V_1_4_2.id).build();, +        DocumentMapper docMapper = createIndex("test", indexSettings).mapperService().documentMapperParser().parse(mapping);, +        IndexFieldMapper indexMapper = docMapper.rootMapper(IndexFieldMapper.class);, +        assertThat(indexMapper.enabled(), equalTo(true));, +        assertThat(indexMapper.fieldType().stored(), equalTo(true));, +, +        ParsedDocument doc = docMapper.parse("type", "1", XContentFactory.jsonBuilder(), +            .startObject(), +            .field("field", "value"), +            .endObject(), +            .bytes());, +, +        assertThat(doc.rootDoc().get("_index"), equalTo("test"));, +        assertThat(doc.rootDoc().get("field"), equalTo("value"));, +    }, +++ b/src/test/java/org/elasticsearch/index/mapper/update/UpdateMappingTests.java, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +* `_index` configuration is limited to enabling the field.]