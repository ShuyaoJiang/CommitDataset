[+++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +import org.elasticsearch.common.cli.UserError;, +        public static Command parse(Terminal terminal, CommandLine cli) throws UserError {, +                        throw new UserError(ExitStatus.USAGE,, +                        throw new UserError(ExitStatus.USAGE, "Parameter [" + arg + "]does not start with --");, +                            throw new UserError(ExitStatus.USAGE, "Parameter [" + arg + "] needs value");, +                        throw new UserError(ExitStatus.USAGE, "Parameter [" + arg + "] needs value");, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +import org.elasticsearch.common.cli.UserError;, +        public static Command parse(Terminal terminal, CommandLine cli) throws UserError {, +                        throw new UserError(ExitStatus.USAGE,, +                        throw new UserError(ExitStatus.USAGE, "Parameter [" + arg + "]does not start with --");, +                            throw new UserError(ExitStatus.USAGE, "Parameter [" + arg + "] needs value");, +                        throw new UserError(ExitStatus.USAGE, "Parameter [" + arg + "] needs value");, +++ b/core/src/main/java/org/elasticsearch/common/cli/CliTool.java, +import org.apache.commons.cli.AlreadySelectedException;, +import org.apache.commons.cli.AmbiguousOptionException;, +import org.apache.commons.cli.MissingArgumentException;, +import org.apache.commons.cli.MissingOptionException;, +import org.apache.commons.cli.UnrecognizedOptionException;, +    public enum ExitStatus {, +        ExitStatus(int status) {, +    public final ExitStatus execute(String... args) throws Exception {, +            return parse(cmd, args).execute(settings, env);, +        } catch (UserError error) {, +            terminal.printError(error.getMessage());, +            return error.exitStatus;, +        try {, +        } catch (AlreadySelectedException|MissingArgumentException|MissingOptionException|UnrecognizedOptionException e) {, +            // intentionally drop the stack trace here as these are really user errors,, +            // the stack trace into cli parsing lib is not important, +            throw new UserError(ExitStatus.USAGE, e.toString());, +        }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +import org.elasticsearch.common.cli.UserError;, +        public static Command parse(Terminal terminal, CommandLine cli) throws UserError {, +                        throw new UserError(ExitStatus.USAGE,, +                        throw new UserError(ExitStatus.USAGE, "Parameter [" + arg + "]does not start with --");, +                            throw new UserError(ExitStatus.USAGE, "Parameter [" + arg + "] needs value");, +                        throw new UserError(ExitStatus.USAGE, "Parameter [" + arg + "] needs value");, +++ b/core/src/main/java/org/elasticsearch/common/cli/CliTool.java, +import org.apache.commons.cli.AlreadySelectedException;, +import org.apache.commons.cli.AmbiguousOptionException;, +import org.apache.commons.cli.MissingArgumentException;, +import org.apache.commons.cli.MissingOptionException;, +import org.apache.commons.cli.UnrecognizedOptionException;, +    public enum ExitStatus {, +        ExitStatus(int status) {, +    public final ExitStatus execute(String... args) throws Exception {, +            return parse(cmd, args).execute(settings, env);, +        } catch (UserError error) {, +            terminal.printError(error.getMessage());, +            return error.exitStatus;, +        try {, +        } catch (AlreadySelectedException|MissingArgumentException|MissingOptionException|UnrecognizedOptionException e) {, +            // intentionally drop the stack trace here as these are really user errors,, +            // the stack trace into cli parsing lib is not important, +            throw new UserError(ExitStatus.USAGE, e.toString());, +        }, +++ b/core/src/main/java/org/elasticsearch/common/cli/Terminal.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +import org.elasticsearch.common.cli.UserError;, +        public static Command parse(Terminal terminal, CommandLine cli) throws UserError {, +                        throw new UserError(ExitStatus.USAGE,, +                        throw new UserError(ExitStatus.USAGE, "Parameter [" + arg + "]does not start with --");, +                            throw new UserError(ExitStatus.USAGE, "Parameter [" + arg + "] needs value");, +                        throw new UserError(ExitStatus.USAGE, "Parameter [" + arg + "] needs value");, +++ b/core/src/main/java/org/elasticsearch/common/cli/CliTool.java, +import org.apache.commons.cli.AlreadySelectedException;, +import org.apache.commons.cli.AmbiguousOptionException;, +import org.apache.commons.cli.MissingArgumentException;, +import org.apache.commons.cli.MissingOptionException;, +import org.apache.commons.cli.UnrecognizedOptionException;, +    public enum ExitStatus {, +        ExitStatus(int status) {, +    public final ExitStatus execute(String... args) throws Exception {, +            return parse(cmd, args).execute(settings, env);, +        } catch (UserError error) {, +            terminal.printError(error.getMessage());, +            return error.exitStatus;, +        try {, +        } catch (AlreadySelectedException|MissingArgumentException|MissingOptionException|UnrecognizedOptionException e) {, +            // intentionally drop the stack trace here as these are really user errors,, +            // the stack trace into cli parsing lib is not important, +            throw new UserError(ExitStatus.USAGE, e.toString());, +        }, +++ b/core/src/main/java/org/elasticsearch/common/cli/Terminal.java, +++ b/core/src/main/java/org/elasticsearch/common/cli/UserError.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,]