[+++ b/docs/en/rest-api/ml/delete-job.asciidoc, +with it. See <<ml-delete-datafeed,Delete {dfeeds-cap}>>. Unless the `force` parameter, +is used the job must be closed before it can be deleted., +===== Query Parameters, +, +`force`::, +  (boolean) Use to forcefully delete an opened job; this method is quicker than, +  closing and deleting the job., +, +++ b/docs/en/rest-api/ml/delete-job.asciidoc, +with it. See <<ml-delete-datafeed,Delete {dfeeds-cap}>>. Unless the `force` parameter, +is used the job must be closed before it can be deleted., +===== Query Parameters, +, +`force`::, +  (boolean) Use to forcefully delete an opened job; this method is quicker than, +  closing and deleting the job., +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java, +import org.elasticsearch.xpack.ml.action.KillProcessAction;, +                new ActionHandler<>(KillProcessAction.INSTANCE, KillProcessAction.TransportAction.class),, +++ b/docs/en/rest-api/ml/delete-job.asciidoc, +with it. See <<ml-delete-datafeed,Delete {dfeeds-cap}>>. Unless the `force` parameter, +is used the job must be closed before it can be deleted., +===== Query Parameters, +, +`force`::, +  (boolean) Use to forcefully delete an opened job; this method is quicker than, +  closing and deleting the job., +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java, +import org.elasticsearch.xpack.ml.action.KillProcessAction;, +                new ActionHandler<>(KillProcessAction.INSTANCE, KillProcessAction.TransportAction.class),, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MlMetadata.java, +        public void markJobAsDeleted(String jobId, PersistentTasksCustomMetaData tasks, boolean allowDeleteOpenJob) {, +, +            checkJobHasNoDatafeed(jobId);, +, +            if (allowDeleteOpenJob == false) {, +            }, +        public void checkJobHasNoDatafeed(String jobId) {, +            Optional<DatafeedConfig> datafeed = getDatafeedByJobId(jobId);, +            if (datafeed.isPresent()) {, +                throw ExceptionsHelper.conflictStatusException("Cannot delete job [" + jobId + "] because datafeed [", +                        + datafeed.get().getId() + "] refers to it");, +            }, +        }, +, +++ b/docs/en/rest-api/ml/delete-job.asciidoc, +with it. See <<ml-delete-datafeed,Delete {dfeeds-cap}>>. Unless the `force` parameter, +is used the job must be closed before it can be deleted., +===== Query Parameters, +, +`force`::, +  (boolean) Use to forcefully delete an opened job; this method is quicker than, +  closing and deleting the job., +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java, +import org.elasticsearch.xpack.ml.action.KillProcessAction;, +                new ActionHandler<>(KillProcessAction.INSTANCE, KillProcessAction.TransportAction.class),, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MlMetadata.java, +        public void markJobAsDeleted(String jobId, PersistentTasksCustomMetaData tasks, boolean allowDeleteOpenJob) {, +, +            checkJobHasNoDatafeed(jobId);, +, +            if (allowDeleteOpenJob == false) {, +            }, +        public void checkJobHasNoDatafeed(String jobId) {, +            Optional<DatafeedConfig> datafeed = getDatafeedByJobId(jobId);, +            if (datafeed.isPresent()) {, +                throw ExceptionsHelper.conflictStatusException("Cannot delete job [" + jobId + "] because datafeed [", +                        + datafeed.get().getId() + "] refers to it");, +            }, +        }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/DeleteJobAction.java, +import org.elasticsearch.ElasticsearchStatusException;, +import org.elasticsearch.ResourceNotFoundException;, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.ClusterChangedEvent;, +import org.elasticsearch.cluster.ClusterStateUpdateTask;, +import org.elasticsearch.cluster.metadata.MetaData;, +import org.elasticsearch.xpack.ml.MlMetadata;, +import org.elasticsearch.xpack.persistent.PersistentTasksCustomMetaData;, +import org.elasticsearch.xpack.persistent.PersistentTasksService;, +import org.elasticsearch.xpack.security.InternalClient;, +        private boolean force;, +        public boolean isForce() {, +            return force;, +        }, +, +        public void setForce(boolean force) {, +            this.force = force;, +        }, +, +            if (in.getVersion().onOrAfter(Version.V_5_5_0)) {, +                force = in.readBoolean();, +            }, +            if (out.getVersion().onOrAfter(Version.V_5_5_0)) {, +                out.writeBoolean(force);]