[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +        List<GeoPoint> points = new ArrayList<>();           // <1>, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +        List<GeoPoint> points = new ArrayList<>();           // <1>, +++ b/core/src/main/java/org/elasticsearch/tasks/LoggingTaskListener.java, +    private static final LoggingTaskListener<Object> INSTANCE = new LoggingTaskListener<>();, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +        List<GeoPoint> points = new ArrayList<>();           // <1>, +++ b/core/src/main/java/org/elasticsearch/tasks/LoggingTaskListener.java, +    private static final LoggingTaskListener<Object> INSTANCE = new LoggingTaskListener<>();, +++ b/core/src/main/java/org/joda/time/format/StrictISODateTimeFormat.java, +        Set<DateTimeFieldType> workingFields = new HashSet<>(fields);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +        List<GeoPoint> points = new ArrayList<>();           // <1>, +++ b/core/src/main/java/org/elasticsearch/tasks/LoggingTaskListener.java, +    private static final LoggingTaskListener<Object> INSTANCE = new LoggingTaskListener<>();, +++ b/core/src/main/java/org/joda/time/format/StrictISODateTimeFormat.java, +        Set<DateTimeFieldType> workingFields = new HashSet<>(fields);, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/get/GetIndexIT.java, +        List<Feature> features = new ArrayList<>(numFeatures);, +        List<Feature> features = new ArrayList<>(numFeatures);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +        List<GeoPoint> points = new ArrayList<>();           // <1>, +++ b/core/src/main/java/org/elasticsearch/tasks/LoggingTaskListener.java, +    private static final LoggingTaskListener<Object> INSTANCE = new LoggingTaskListener<>();, +++ b/core/src/main/java/org/joda/time/format/StrictISODateTimeFormat.java, +        Set<DateTimeFieldType> workingFields = new HashSet<>(fields);, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/get/GetIndexIT.java, +        List<Feature> features = new ArrayList<>(numFeatures);, +        List<Feature> features = new ArrayList<>(numFeatures);, +++ b/core/src/test/java/org/elasticsearch/common/util/concurrent/KeyedLockTests.java, +        KeyedLock<String> connectionLock = new KeyedLock<>(randomBoolean());, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +        List<GeoPoint> points = new ArrayList<>();           // <1>, +++ b/core/src/main/java/org/elasticsearch/tasks/LoggingTaskListener.java, +    private static final LoggingTaskListener<Object> INSTANCE = new LoggingTaskListener<>();, +++ b/core/src/main/java/org/joda/time/format/StrictISODateTimeFormat.java, +        Set<DateTimeFieldType> workingFields = new HashSet<>(fields);, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/get/GetIndexIT.java, +        List<Feature> features = new ArrayList<>(numFeatures);, +        List<Feature> features = new ArrayList<>(numFeatures);, +++ b/core/src/test/java/org/elasticsearch/common/util/concurrent/KeyedLockTests.java, +        KeyedLock<String> connectionLock = new KeyedLock<>(randomBoolean());, +++ b/core/src/test/java/org/elasticsearch/index/store/ExceptionRetryIT.java, +        Set<String> uniqueIds = new HashSet<>();, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +        List<GeoPoint> points = new ArrayList<>();           // <1>, +++ b/core/src/main/java/org/elasticsearch/tasks/LoggingTaskListener.java, +    private static final LoggingTaskListener<Object> INSTANCE = new LoggingTaskListener<>();, +++ b/core/src/main/java/org/joda/time/format/StrictISODateTimeFormat.java, +        Set<DateTimeFieldType> workingFields = new HashSet<>(fields);, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/get/GetIndexIT.java, +        List<Feature> features = new ArrayList<>(numFeatures);, +        List<Feature> features = new ArrayList<>(numFeatures);, +++ b/core/src/test/java/org/elasticsearch/common/util/concurrent/KeyedLockTests.java, +        KeyedLock<String> connectionLock = new KeyedLock<>(randomBoolean());, +++ b/core/src/test/java/org/elasticsearch/index/store/ExceptionRetryIT.java, +        Set<String> uniqueIds = new HashSet<>();, +++ b/core/src/test/java/org/elasticsearch/indices/flush/SyncedFlushUtil.java, +        LatchedListener<ShardsSyncedFlushResult> listener = new LatchedListener<>();, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +        List<GeoPoint> points = new ArrayList<>();           // <1>, +++ b/core/src/main/java/org/elasticsearch/tasks/LoggingTaskListener.java, +    private static final LoggingTaskListener<Object> INSTANCE = new LoggingTaskListener<>();, +++ b/core/src/main/java/org/joda/time/format/StrictISODateTimeFormat.java, +        Set<DateTimeFieldType> workingFields = new HashSet<>(fields);, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/get/GetIndexIT.java, +        List<Feature> features = new ArrayList<>(numFeatures);, +        List<Feature> features = new ArrayList<>(numFeatures);, +++ b/core/src/test/java/org/elasticsearch/common/util/concurrent/KeyedLockTests.java, +        KeyedLock<String> connectionLock = new KeyedLock<>(randomBoolean());, +++ b/core/src/test/java/org/elasticsearch/index/store/ExceptionRetryIT.java, +        Set<String> uniqueIds = new HashSet<>();, +++ b/core/src/test/java/org/elasticsearch/indices/flush/SyncedFlushUtil.java, +        LatchedListener<ShardsSyncedFlushResult> listener = new LatchedListener<>();, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricTests.java, +            Map<String, Object> params = new HashMap<>();, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +        List<GeoPoint> points = new ArrayList<>();           // <1>, +++ b/core/src/main/java/org/elasticsearch/tasks/LoggingTaskListener.java, +    private static final LoggingTaskListener<Object> INSTANCE = new LoggingTaskListener<>();, +++ b/core/src/main/java/org/joda/time/format/StrictISODateTimeFormat.java, +        Set<DateTimeFieldType> workingFields = new HashSet<>(fields);, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/get/GetIndexIT.java, +        List<Feature> features = new ArrayList<>(numFeatures);, +        List<Feature> features = new ArrayList<>(numFeatures);, +++ b/core/src/test/java/org/elasticsearch/common/util/concurrent/KeyedLockTests.java, +        KeyedLock<String> connectionLock = new KeyedLock<>(randomBoolean());, +++ b/core/src/test/java/org/elasticsearch/index/store/ExceptionRetryIT.java, +        Set<String> uniqueIds = new HashSet<>();, +++ b/core/src/test/java/org/elasticsearch/indices/flush/SyncedFlushUtil.java, +        LatchedListener<ShardsSyncedFlushResult> listener = new LatchedListener<>();, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricTests.java, +            Map<String, Object> params = new HashMap<>();, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/pipeline/DerivativeIT.java, +        List<Bucket> buckets = new ArrayList<>(deriv.getBuckets());, +        List<Bucket> buckets = new ArrayList<>(deriv.getBuckets());, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +        List<GeoPoint> points = new ArrayList<>();           // <1>, +++ b/core/src/main/java/org/elasticsearch/tasks/LoggingTaskListener.java]