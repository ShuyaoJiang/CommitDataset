[+++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +                    builder.locale(parseLocale(propNode.toString()));, +    public static Locale parseLocale(String locale) {, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +                    builder.locale(parseLocale(propNode.toString()));, +    public static Locale parseLocale(String locale) {, +++ b/src/test/java/org/elasticsearch/test/unit/index/mapper/date/SimpleDateMappingTests.java, +        assertThat(Locale.GERMAN, equalTo(DateFieldMapper.parseLocale("de")));, +        assertThat(Locale.GERMANY, equalTo(DateFieldMapper.parseLocale("de_DE")));, +        assertThat(new Locale("de","DE","DE"), equalTo(DateFieldMapper.parseLocale("de_DE_DE")));, +            DateFieldMapper.parseLocale("de_DE_DE_DE");, +        assertThat(Locale.ROOT,  equalTo(DateFieldMapper.parseLocale("")));, +        assertThat(Locale.ROOT,  equalTo(DateFieldMapper.parseLocale("ROOT")));, +                  .field("date_field_default", "Wed, 06 Dec 2000 02:55:00 -0800") // check default - no exception is a successs!, +        assertNumericTokensEqual(doc, defaultMapper, "date_field_en", "date_field_de");, +        assertNumericTokensEqual(doc, defaultMapper, "date_field_en", "date_field_default");, +    }, +    private void assertNumericTokensEqual(ParsedDocument doc, DocumentMapper defaultMapper, String fieldA, String fieldB) throws IOException {, +        assertThat(doc.rootDoc().getField(fieldA).tokenStream(defaultMapper.indexAnalyzer()), notNullValue());, +        assertThat(doc.rootDoc().getField(fieldB).tokenStream(defaultMapper.indexAnalyzer()), notNullValue());, +        , +        TokenStream tokenStream = doc.rootDoc().getField(fieldA).tokenStream(defaultMapper.indexAnalyzer());, +        tokenStream = doc.rootDoc().getField(fieldB).tokenStream(defaultMapper.indexAnalyzer());]