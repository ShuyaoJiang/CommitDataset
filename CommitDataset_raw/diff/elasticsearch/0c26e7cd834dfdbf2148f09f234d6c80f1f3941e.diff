[+++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import java.util.Objects;, +            if ("*".equals(field) || Objects.equals(field, this.field)) {, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import java.util.Objects;, +            if ("*".equals(field) || Objects.equals(field, this.field)) {, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +                TransportSearchQueryAndFetchAction.class, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import java.util.Objects;, +            if ("*".equals(field) || Objects.equals(field, this.field)) {, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +                TransportSearchQueryAndFetchAction.class, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +import java.util.ArrayList;, +import java.util.stream.Collectors;, +            typeIntersection = indexService.mapperService().types(), +                    .stream(), +                    .filter(type -> Regex.simpleMatch(request.types(), type)), +                    .collect(Collectors.toCollection(ArrayList::new));, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import java.util.Objects;, +            if ("*".equals(field) || Objects.equals(field, this.field)) {, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +                TransportSearchQueryAndFetchAction.class, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +import java.util.ArrayList;, +import java.util.stream.Collectors;, +            typeIntersection = indexService.mapperService().types(), +                    .stream(), +                    .filter(type -> Regex.simpleMatch(request.types(), type)), +                    .collect(Collectors.toCollection(ArrayList::new));, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchType.java, +    QUERY_AND_FETCH((byte) 3);, +     * "query_then_fetch"/"queryThenFetch" and "query_and_fetch"/"queryAndFetch"., +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import java.util.Objects;, +            if ("*".equals(field) || Objects.equals(field, this.field)) {, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +                TransportSearchQueryAndFetchAction.class, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +import java.util.ArrayList;, +import java.util.stream.Collectors;, +            typeIntersection = indexService.mapperService().types(), +                    .stream(), +                    .filter(type -> Regex.simpleMatch(request.types(), type)), +                    .collect(Collectors.toCollection(ArrayList::new));, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchType.java, +    QUERY_AND_FETCH((byte) 3);, +     * "query_then_fetch"/"queryThenFetch" and "query_and_fetch"/"queryAndFetch"., +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +        if (optimizeSingleShard) {, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import java.util.Objects;, +            if ("*".equals(field) || Objects.equals(field, this.field)) {, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +                TransportSearchQueryAndFetchAction.class, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +import java.util.ArrayList;, +import java.util.stream.Collectors;, +            typeIntersection = indexService.mapperService().types(), +                    .stream(), +                    .filter(type -> Regex.simpleMatch(request.types(), type)), +                    .collect(Collectors.toCollection(ArrayList::new));, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchType.java, +    QUERY_AND_FETCH((byte) 3);, +     * "query_then_fetch"/"queryThenFetch" and "query_and_fetch"/"queryAndFetch"., +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +        if (optimizeSingleShard) {, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchScrollAction.java, +                                       ActionFilters actionFilters,, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import java.util.Objects;, +            if ("*".equals(field) || Objects.equals(field, this.field)) {, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +                TransportSearchQueryAndFetchAction.class, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +import java.util.ArrayList;, +import java.util.stream.Collectors;, +            typeIntersection = indexService.mapperService().types(), +                    .stream(), +                    .filter(type -> Regex.simpleMatch(request.types(), type)), +                    .collect(Collectors.toCollection(ArrayList::new));, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchType.java, +    QUERY_AND_FETCH((byte) 3);, +     * "query_then_fetch"/"queryThenFetch" and "query_and_fetch"/"queryAndFetch"., +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +        if (optimizeSingleShard) {, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchScrollAction.java, +                                       ActionFilters actionFilters,, +++ b/core/src/main/java/org/elasticsearch/action/search/type/ParsedScrollId.java, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import java.util.Objects;, +            if ("*".equals(field) || Objects.equals(field, this.field)) {, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +                TransportSearchQueryAndFetchAction.class, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +import java.util.ArrayList;, +import java.util.stream.Collectors;, +            typeIntersection = indexService.mapperService().types()]