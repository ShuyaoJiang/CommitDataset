[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/highlight/HighlightPhase.java, +    public static class Encoders {, +        public static Encoder DEFAULT = new DefaultEncoder();, +        public static Encoder HTML = new SimpleHTMLEncoder();, +    }, +                Encoder encoder;, +                if (field.encoder().equals("html")) {, +                    encoder = Encoders.HTML;, +                } else {, +                    encoder = Encoders.DEFAULT;, +                }, +                    FragListBuilder fragListBuilder;, +                    FragmentsBuilder fragmentsBuilder;, +                    if (field.numberOfFragments() == 0) {, +                        fragListBuilder = new SingleFragListBuilder();, +, +                        if (mapper.stored()) {, +                            fragmentsBuilder = new SimpleFragmentsBuilder(field.preTags(), field.postTags());, +                        } else {, +                            fragmentsBuilder = new SourceSimpleFragmentsBuilder(mapper, context, field.preTags(), field.postTags());, +                        }, +                    } else {, +                        if (field.fragmentOffset() == -1), +                            fragListBuilder = new SimpleFragListBuilder();, +                        else, +                            fragListBuilder = new MarginFragListBuilder(field.fragmentOffset());, +, +                        if (field.scoreOrdered()) {, +                            if (mapper.stored()) {, +                                fragmentsBuilder = new ScoreOrderFragmentsBuilder(field.preTags(), field.postTags());, +                            } else {, +                                fragmentsBuilder = new SourceScoreOrderFragmentsBuilder(mapper, context, field.preTags(), field.postTags());, +                            }, +                        } else {, +                            if (mapper.stored()) {, +                                fragmentsBuilder = new SimpleFragmentsBuilder(field.preTags(), field.postTags());, +                            } else {, +                                fragmentsBuilder = new SourceSimpleFragmentsBuilder(mapper, context, field.preTags(), field.postTags());, +                            }, +                        }, +                    }, +                    FastVectorHighlighter highlighter = new FastVectorHighlighter(true, false, fragListBuilder, fragmentsBuilder);, +                                fragListBuilder, fragmentsBuilder, field.preTags(), field.postTags(), encoder);]