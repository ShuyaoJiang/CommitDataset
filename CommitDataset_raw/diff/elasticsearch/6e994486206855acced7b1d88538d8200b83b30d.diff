[+++ b/src/test/java/org/elasticsearch/cluster/ClusterServiceTests.java, +import com.carrotsearch.randomizedtesting.annotations.Repeat;, +    @Repeat(iterations = 1000), +        Settings settings = settingsBuilder(), +                .put("discovery.type", "local"), +                .build();, +        String node_0 = internalCluster().startNode(settings);, +        internalCluster().startNodeClient(settings);, +        final ClusterService clusterService = internalCluster().getInstance(ClusterService.class, node_0);, +        // there might be other tasks in this node, make sure to only take the ones we add into account in this test, +, +        assertThat(pendingClusterTasks.size(), greaterThanOrEqualTo(10));, +            controlSources.remove(task.getSource().string());, +        assertThat(response.pendingTasks().size(), greaterThanOrEqualTo(10));, +            controlSources.remove(task.getSource().string());, +        // whenever we test for no tasks, we need to awaitBusy since this is a live node, +        assertTrue(awaitBusy(new Predicate<Object>() {, +            @Override, +            public boolean apply(Object input) {, +                return clusterService.pendingTasks().isEmpty();, +            }, +        }));, +        waitNoPendingTasksOnAll();, +        assertThat(pendingClusterTasks.size(), greaterThanOrEqualTo(5));, +            controlSources.remove(task.getSource().string());, +        response = internalCluster().clientNodeClient().admin().cluster().preparePendingClusterTasks().get();, +        assertThat(response.pendingTasks().size(), greaterThanOrEqualTo(5));, +            if (controlSources.remove(task.getSource().string())) {, +        }, +    public void testPrioritizedTasks() throws Exception {]