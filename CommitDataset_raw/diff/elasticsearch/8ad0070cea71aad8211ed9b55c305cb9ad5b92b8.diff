[+++ b/core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +            suggestBuilder = new SuggestBuilder(in);, +++ b/core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +            suggestBuilder = new SuggestBuilder(in);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/SuggestBuilder.java, +     * Build an empty SuggestBuilder., +     */, +    public SuggestBuilder() {, +    }, +, +    /**, +     * Read from a stream., +     */, +    public SuggestBuilder(StreamInput in) throws IOException {, +        globalText = in.readOptionalString();, +        final int size = in.readVInt();, +        for (int i = 0; i < size; i++) {, +            suggestions.put(in.readString(), in.readSuggestion());, +        }, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        out.writeOptionalString(globalText);, +        final int size = suggestions.size();, +        out.writeVInt(size);, +        for (Entry<String, SuggestionBuilder<?>> suggestion : suggestions.entrySet()) {, +            out.writeString(suggestion.getKey());, +            out.writeSuggestion(suggestion.getValue());, +        }, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +            suggestBuilder = new SuggestBuilder(in);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/SuggestBuilder.java, +     * Build an empty SuggestBuilder., +     */, +    public SuggestBuilder() {, +    }, +, +    /**, +     * Read from a stream., +     */, +    public SuggestBuilder(StreamInput in) throws IOException {, +        globalText = in.readOptionalString();, +        final int size = in.readVInt();, +        for (int i = 0; i < size; i++) {, +            suggestions.put(in.readString(), in.readSuggestion());, +        }, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        out.writeOptionalString(globalText);, +        final int size = suggestions.size();, +        out.writeVInt(size);, +        for (Entry<String, SuggestionBuilder<?>> suggestion : suggestions.entrySet()) {, +            out.writeString(suggestion.getKey());, +            out.writeSuggestion(suggestion.getValue());, +        }, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/context/CategoryQueryContext.java, +++ b/core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +            suggestBuilder = new SuggestBuilder(in);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/SuggestBuilder.java, +     * Build an empty SuggestBuilder., +     */, +    public SuggestBuilder() {, +    }, +, +    /**, +     * Read from a stream., +     */, +    public SuggestBuilder(StreamInput in) throws IOException {, +        globalText = in.readOptionalString();, +        final int size = in.readVInt();, +        for (int i = 0; i < size; i++) {, +            suggestions.put(in.readString(), in.readSuggestion());, +        }, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        out.writeOptionalString(globalText);, +        final int size = suggestions.size();, +        out.writeVInt(size);, +        for (Entry<String, SuggestionBuilder<?>> suggestion : suggestions.entrySet()) {, +            out.writeString(suggestion.getKey());, +            out.writeSuggestion(suggestion.getValue());, +        }, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/context/CategoryQueryContext.java, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/context/GeoQueryContext.java, +++ b/core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +            suggestBuilder = new SuggestBuilder(in);]