[+++ b/core/src/main/java/org/elasticsearch/index/translog/BufferingTranslogWriter.java, +++ b/core/src/main/java/org/elasticsearch/index/translog/BufferingTranslogWriter.java, +++ b/core/src/main/java/org/elasticsearch/index/translog/Translog.java, +++ b/core/src/main/java/org/elasticsearch/index/translog/BufferingTranslogWriter.java, +++ b/core/src/main/java/org/elasticsearch/index/translog/Translog.java, +++ b/core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java, +            threads[i] = new Thread(new Runnable() {, +                @Override, +                public void run() {, +                    try {, +                        downLatch.await();, +                        for (int opCount = 0; opCount < opsPerThread; opCount++) {, +                            Translog.Operation op;, +                            switch (randomFrom(Translog.Operation.Type.values())) {, +                                case CREATE:, +                                case INDEX:, +                                    op = new Translog.Index("test", threadId + "_" + opCount,, +                                            randomUnicodeOfLengthBetween(1, 20 * 1024).getBytes("UTF-8"));, +                                    break;, +                                case DELETE:, +                                    op = new Translog.Delete(new Term("_uid", threadId + "_" + opCount),, +                                            1 + randomInt(100000),, +                                            randomFrom(VersionType.values()));, +                                    break;, +                                default:, +                                    throw new ElasticsearchException("not supported op type");, +                            }, +, +                            Translog.Location loc = translog.add(op);, +                            writtenOperations.add(new LocationOperation(op, loc));, +                        }, +                    } catch (Throwable t) {, +                        threadExceptions[threadId] = t;, +                    }, +                }, +            });, +++ b/core/src/main/java/org/elasticsearch/index/translog/BufferingTranslogWriter.java, +++ b/core/src/main/java/org/elasticsearch/index/translog/Translog.java, +++ b/core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java, +            threads[i] = new Thread(new Runnable() {, +                @Override, +                public void run() {, +                    try {, +                        downLatch.await();, +                        for (int opCount = 0; opCount < opsPerThread; opCount++) {, +                            Translog.Operation op;, +                            switch (randomFrom(Translog.Operation.Type.values())) {, +                                case CREATE:, +                                case INDEX:, +                                    op = new Translog.Index("test", threadId + "_" + opCount,, +                                            randomUnicodeOfLengthBetween(1, 20 * 1024).getBytes("UTF-8"));, +                                    break;, +                                case DELETE:, +                                    op = new Translog.Delete(new Term("_uid", threadId + "_" + opCount),, +                                            1 + randomInt(100000),, +                                            randomFrom(VersionType.values()));, +                                    break;, +                                default:, +                                    throw new ElasticsearchException("not supported op type");, +                            }, +, +                            Translog.Location loc = translog.add(op);, +                            writtenOperations.add(new LocationOperation(op, loc));, +                        }, +                    } catch (Throwable t) {, +                        threadExceptions[threadId] = t;, +                    }, +                }, +            });, +++ b/docs/plugins/discovery.asciidoc, +* https://github.com/fabric8io/elasticsearch-cloud-kubernetes[Kubernetes Discovery Plugin] (by Jimmi Dyson, http://fabric8.io[fabric8]), +++ b/core/src/main/java/org/elasticsearch/index/translog/BufferingTranslogWriter.java, +++ b/core/src/main/java/org/elasticsearch/index/translog/Translog.java, +++ b/core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java, +            threads[i] = new Thread(new Runnable() {, +                @Override, +                public void run() {, +                    try {, +                        downLatch.await();, +                        for (int opCount = 0; opCount < opsPerThread; opCount++) {, +                            Translog.Operation op;, +                            switch (randomFrom(Translog.Operation.Type.values())) {, +                                case CREATE:, +                                case INDEX:, +                                    op = new Translog.Index("test", threadId + "_" + opCount,, +                                            randomUnicodeOfLengthBetween(1, 20 * 1024).getBytes("UTF-8"));, +                                    break;, +                                case DELETE:, +                                    op = new Translog.Delete(new Term("_uid", threadId + "_" + opCount),, +                                            1 + randomInt(100000),, +                                            randomFrom(VersionType.values()));, +                                    break;, +                                default:, +                                    throw new ElasticsearchException("not supported op type");, +                            }, +, +                            Translog.Location loc = translog.add(op);, +                            writtenOperations.add(new LocationOperation(op, loc));, +                        }, +                    } catch (Throwable t) {]