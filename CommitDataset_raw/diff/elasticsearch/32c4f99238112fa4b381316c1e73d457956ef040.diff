[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.PutPrivilegesRequest;, +import org.elasticsearch.client.security.PutPrivilegesResponse;, +     * Create or update application privileges., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-privileges.html">, +     * the docs</a> for more., +     *, +     * @param request the request to create or update application privileges, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the create or update application privileges call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public PutPrivilegesResponse putPrivileges(final PutPrivilegesRequest request, final RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::putPrivileges, options,, +                PutPrivilegesResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously create or update application privileges.<br>, +     * See <a href=, +     * "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-privileges.html">, +     * the docs</a> for more., +     *, +     * @param request the request to create or update application privileges, +     * @param options the request options (e.g. headers), use, +     * {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void putPrivilegesAsync(final PutPrivilegesRequest request, final RequestOptions options,, +            final ActionListener<PutPrivilegesResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::putPrivileges, options,, +                PutPrivilegesResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.PutPrivilegesRequest;, +import org.elasticsearch.client.security.PutPrivilegesResponse;, +     * Create or update application privileges., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-privileges.html">, +     * the docs</a> for more., +     *, +     * @param request the request to create or update application privileges, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the create or update application privileges call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public PutPrivilegesResponse putPrivileges(final PutPrivilegesRequest request, final RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::putPrivileges, options,, +                PutPrivilegesResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously create or update application privileges.<br>, +     * See <a href=, +     * "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-privileges.html">, +     * the docs</a> for more., +     *, +     * @param request the request to create or update application privileges, +     * @param options the request options (e.g. headers), use, +     * {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void putPrivilegesAsync(final PutPrivilegesRequest request, final RequestOptions options,, +            final ActionListener<PutPrivilegesResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::putPrivileges, options,, +                PutPrivilegesResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityRequestConverters.java, +import org.elasticsearch.client.security.GetPrivilegesRequest;, +import org.elasticsearch.client.security.GetRolesRequest;, +import org.elasticsearch.client.security.HasPrivilegesRequest;, +import org.elasticsearch.client.security.InvalidateTokenRequest;, +import org.elasticsearch.client.security.PutPrivilegesRequest;, +import org.elasticsearch.client.security.PutRoleMappingRequest;, +    static Request putPrivileges(final PutPrivilegesRequest putPrivilegesRequest) throws IOException {, +        Request request = new Request(HttpPut.METHOD_NAME, "/_xpack/security/privilege");, +        request.setEntity(createEntity(putPrivilegesRequest, REQUEST_BODY_CONTENT_TYPE));, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        params.withRefreshPolicy(putPrivilegesRequest.getRefreshPolicy());, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.PutPrivilegesRequest;, +import org.elasticsearch.client.security.PutPrivilegesResponse;, +     * Create or update application privileges., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-privileges.html">, +     * the docs</a> for more., +     *, +     * @param request the request to create or update application privileges, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the create or update application privileges call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public PutPrivilegesResponse putPrivileges(final PutPrivilegesRequest request, final RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::putPrivileges, options,, +                PutPrivilegesResponse::fromXContent, emptySet());]