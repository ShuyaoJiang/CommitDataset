[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonDocumentMapperParser.java, +import com.google.common.collect.ImmutableMap;, +import org.elasticsearch.util.MapBuilder;, +import static org.elasticsearch.index.mapper.json.JsonTypeParsers.*;, +    private final JsonObjectTypeParser rootObjectTypeParser = new JsonObjectTypeParser();, +, +    private final Object typeParsersMutex = new Object();, +, +    private volatile ImmutableMap<String, JsonTypeParser> typeParsers;, +, +        typeParsers = new MapBuilder<String, JsonTypeParser>(), +                .put(JsonShortFieldMapper.JSON_TYPE, new JsonShortTypeParser()), +                .put(JsonIntegerFieldMapper.JSON_TYPE, new JsonIntegerTypeParser()), +                .put(JsonLongFieldMapper.JSON_TYPE, new JsonLongTypeParser()), +                .put(JsonFloatFieldMapper.JSON_TYPE, new JsonFloatTypeParser()), +                .put(JsonDoubleFieldMapper.JSON_TYPE, new JsonDoubleTypeParser()), +                .put(JsonBooleanFieldMapper.JSON_TYPE, new JsonBooleanTypeParser()), +                .put(JsonBinaryFieldMapper.JSON_TYPE, new JsonBinaryTypeParser()), +                .put(JsonDateFieldMapper.JSON_TYPE, new JsonDateTypeParser()), +                .put(JsonStringFieldMapper.JSON_TYPE, new JsonStringTypeParser()), +                .put(JsonObjectMapper.JSON_TYPE, new JsonObjectTypeParser()), +                .put(JsonMultiFieldMapper.JSON_TYPE, new JsonMultiFieldTypeParser()), +                .immutableMap();, +    }, +, +    public void putTypeParser(String type, JsonTypeParser typeParser) {, +        synchronized (typeParsersMutex) {, +            typeParsers = new MapBuilder<String, JsonTypeParser>(), +                    .putAll(typeParsers), +                    .put(type, typeParser), +                    .immutableMap();, +        }, +        JsonTypeParser.ParserContext parserContext = new JsonTypeParser.ParserContext(rootObj, analysisService, typeParsers);, +, +        JsonDocumentMapper.Builder docBuilder = doc((JsonObjectMapper.Builder) rootObjectTypeParser.parse(type, rootObj, parserContext));, +                docBuilder.sourceField(parseSourceField((ObjectNode) fieldNode, parserContext));, +                docBuilder.idField(parseIdField((ObjectNode) fieldNode, parserContext));, +                docBuilder.typeField(parseTypeField((ObjectNode) fieldNode, parserContext));, +                docBuilder.uidField(parseUidField((ObjectNode) fieldNode, parserContext));, +                docBuilder.boostField(parseBoostField((ObjectNode) fieldNode, parserContext));, +                docBuilder.allField(parseAllField((ObjectNode) fieldNode, parserContext));, +    private JsonUidFieldMapper.Builder parseUidField(ObjectNode uidNode, JsonTypeParser.ParserContext parserContext) {, +    private JsonBoostFieldMapper.Builder parseBoostField(ObjectNode boostNode, JsonTypeParser.ParserContext parserContext) {, +        parseNumberField(builder, name, boostNode, parserContext);, +    private JsonTypeFieldMapper.Builder parseTypeField(ObjectNode typeNode, JsonTypeParser.ParserContext parserContext) {, +        parseJsonField(builder, builder.name, typeNode, parserContext);, +    private JsonIdFieldMapper.Builder parseIdField(ObjectNode idNode, JsonTypeParser.ParserContext parserContext) {, +        parseJsonField(builder, builder.name, idNode, parserContext);, +    private JsonAllFieldMapper.Builder parseAllField(ObjectNode allNode, JsonTypeParser.ParserContext parserContext) {, +        parseJsonField(builder, builder.name, allNode, parserContext);, +    private JsonSourceFieldMapper.Builder parseSourceField(ObjectNode sourceNode, JsonTypeParser.ParserContext parserContext) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonDocumentMapperParser.java, +import com.google.common.collect.ImmutableMap;, +import org.elasticsearch.util.MapBuilder;, +import static org.elasticsearch.index.mapper.json.JsonTypeParsers.*;, +    private final JsonObjectTypeParser rootObjectTypeParser = new JsonObjectTypeParser();, +, +    private final Object typeParsersMutex = new Object();, +, +    private volatile ImmutableMap<String, JsonTypeParser> typeParsers;, +, +        typeParsers = new MapBuilder<String, JsonTypeParser>(), +                .put(JsonShortFieldMapper.JSON_TYPE, new JsonShortTypeParser()), +                .put(JsonIntegerFieldMapper.JSON_TYPE, new JsonIntegerTypeParser()), +                .put(JsonLongFieldMapper.JSON_TYPE, new JsonLongTypeParser()), +                .put(JsonFloatFieldMapper.JSON_TYPE, new JsonFloatTypeParser()), +                .put(JsonDoubleFieldMapper.JSON_TYPE, new JsonDoubleTypeParser()), +                .put(JsonBooleanFieldMapper.JSON_TYPE, new JsonBooleanTypeParser()), +                .put(JsonBinaryFieldMapper.JSON_TYPE, new JsonBinaryTypeParser()), +                .put(JsonDateFieldMapper.JSON_TYPE, new JsonDateTypeParser()), +                .put(JsonStringFieldMapper.JSON_TYPE, new JsonStringTypeParser()), +                .put(JsonObjectMapper.JSON_TYPE, new JsonObjectTypeParser()), +                .put(JsonMultiFieldMapper.JSON_TYPE, new JsonMultiFieldTypeParser()), +                .immutableMap();, +    }, +, +    public void putTypeParser(String type, JsonTypeParser typeParser) {, +        synchronized (typeParsersMutex) {, +            typeParsers = new MapBuilder<String, JsonTypeParser>(), +                    .putAll(typeParsers), +                    .put(type, typeParser), +                    .immutableMap();, +        }, +        JsonTypeParser.ParserContext parserContext = new JsonTypeParser.ParserContext(rootObj, analysisService, typeParsers);, +, +        JsonDocumentMapper.Builder docBuilder = doc((JsonObjectMapper.Builder) rootObjectTypeParser.parse(type, rootObj, parserContext));, +                docBuilder.sourceField(parseSourceField((ObjectNode) fieldNode, parserContext));, +                docBuilder.idField(parseIdField((ObjectNode) fieldNode, parserContext));, +                docBuilder.typeField(parseTypeField((ObjectNode) fieldNode, parserContext));, +                docBuilder.uidField(parseUidField((ObjectNode) fieldNode, parserContext));, +                docBuilder.boostField(parseBoostField((ObjectNode) fieldNode, parserContext));, +                docBuilder.allField(parseAllField((ObjectNode) fieldNode, parserContext));, +    private JsonUidFieldMapper.Builder parseUidField(ObjectNode uidNode, JsonTypeParser.ParserContext parserContext) {, +    private JsonBoostFieldMapper.Builder parseBoostField(ObjectNode boostNode, JsonTypeParser.ParserContext parserContext) {, +        parseNumberField(builder, name, boostNode, parserContext);, +    private JsonTypeFieldMapper.Builder parseTypeField(ObjectNode typeNode, JsonTypeParser.ParserContext parserContext) {, +        parseJsonField(builder, builder.name, typeNode, parserContext);, +    private JsonIdFieldMapper.Builder parseIdField(ObjectNode idNode, JsonTypeParser.ParserContext parserContext) {, +        parseJsonField(builder, builder.name, idNode, parserContext);, +    private JsonAllFieldMapper.Builder parseAllField(ObjectNode allNode, JsonTypeParser.ParserContext parserContext) {]