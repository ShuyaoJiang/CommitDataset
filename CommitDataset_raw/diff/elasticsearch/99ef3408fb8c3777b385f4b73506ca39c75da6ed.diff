[+++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    /**, +     * Reads the segments infos from the given commit, failing if it fails to load, +     */, +    public static SegmentInfos readSegmentInfos(IndexCommit commit, Directory directory) throws IOException {, +        final SegmentInfos sis = new SegmentInfos();, +        sis.read(directory, commit.getSegmentsFileName());, +        return sis;, +    }, +, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    /**, +     * Reads the segments infos from the given commit, failing if it fails to load, +     */, +    public static SegmentInfos readSegmentInfos(IndexCommit commit, Directory directory) throws IOException {, +        final SegmentInfos sis = new SegmentInfos();, +        sis.read(directory, commit.getSegmentsFileName());, +        return sis;, +    }, +, +++ b/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java, +                    metadata = store.getMetadata(snapshotIndexCommit);, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    /**, +     * Reads the segments infos from the given commit, failing if it fails to load, +     */, +    public static SegmentInfos readSegmentInfos(IndexCommit commit, Directory directory) throws IOException {, +        final SegmentInfos sis = new SegmentInfos();, +        sis.read(directory, commit.getSegmentsFileName());, +        return sis;, +    }, +, +++ b/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java, +                    metadata = store.getMetadata(snapshotIndexCommit);, +++ b/src/main/java/org/elasticsearch/index/store/Store.java, +        return readSegmentsInfo(null, directory());, +     * Returns the segments info for the given commit or for the latest commit if the given commit is <code>null</code>, +    private static SegmentInfos readSegmentsInfo(IndexCommit commit, Directory directory) throws IOException {, +            return commit == null ? Lucene.readSegmentInfos(directory) : Lucene.readSegmentInfos(commit, directory);, +     * Returns a new MetadataSnapshot for the latest commit in this store., +        return getMetadata(null);, +    }, +, +    /**, +     * Returns a new MetadataSnapshot for the given commit. If the given commit is <code>null</code>, +     * the latest commit point is used., +     */, +    public MetadataSnapshot getMetadata(IndexCommit commit) throws IOException {, +            return new MetadataSnapshot(commit, distributorDirectory, logger);, +            return new MetadataSnapshot(null, dir, logger);, +        MetadataSnapshot(IndexCommit commit, Directory directory, ESLogger logger) throws IOException {, +            metadata = buildMetadata(commit, directory, logger);, +        ImmutableMap<String, StoreFileMetaData> buildMetadata(IndexCommit commit, Directory directory, ESLogger logger) throws IOException {, +                    segmentCommitInfos = Store.readSegmentsInfo(commit, directory);, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    /**, +     * Reads the segments infos from the given commit, failing if it fails to load, +     */, +    public static SegmentInfos readSegmentInfos(IndexCommit commit, Directory directory) throws IOException {, +        final SegmentInfos sis = new SegmentInfos();, +        sis.read(directory, commit.getSegmentsFileName());, +        return sis;, +    }, +, +++ b/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java, +                    metadata = store.getMetadata(snapshotIndexCommit);, +++ b/src/main/java/org/elasticsearch/index/store/Store.java, +        return readSegmentsInfo(null, directory());, +     * Returns the segments info for the given commit or for the latest commit if the given commit is <code>null</code>, +    private static SegmentInfos readSegmentsInfo(IndexCommit commit, Directory directory) throws IOException {, +            return commit == null ? Lucene.readSegmentInfos(directory) : Lucene.readSegmentInfos(commit, directory);, +     * Returns a new MetadataSnapshot for the latest commit in this store., +        return getMetadata(null);, +    }, +, +    /**, +     * Returns a new MetadataSnapshot for the given commit. If the given commit is <code>null</code>, +     * the latest commit point is used., +     */, +    public MetadataSnapshot getMetadata(IndexCommit commit) throws IOException {, +            return new MetadataSnapshot(commit, distributorDirectory, logger);, +            return new MetadataSnapshot(null, dir, logger);, +        MetadataSnapshot(IndexCommit commit, Directory directory, ESLogger logger) throws IOException {, +            metadata = buildMetadata(commit, directory, logger);, +        ImmutableMap<String, StoreFileMetaData> buildMetadata(IndexCommit commit, Directory directory, ESLogger logger) throws IOException {, +                    segmentCommitInfos = Store.readSegmentsInfo(commit, directory);, +++ b/src/main/java/org/elasticsearch/indices/recovery/RecoverySource.java, +                    metadata = store.getMetadata(snapshot);]