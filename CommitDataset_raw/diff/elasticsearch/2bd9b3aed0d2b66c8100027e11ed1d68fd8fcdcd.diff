[+++ b/src/main/java/org/elasticsearch/common/CacheRecycler.java, +import gnu.trove.set.hash.THashSet;, +        hashSet.clear();, +    // ----- THashSet -----, +, +    private static SoftWrapper<Queue<THashSet>> hashSet = new SoftWrapper<Queue<THashSet>>();, +, +    public static <T> THashSet<T> popHashSet() {, +        Queue<THashSet> ref = hashSet.get();, +        if (ref == null) {, +            return new THashSet<T>();, +        }, +        THashSet set = ref.poll();, +        if (set == null) {, +            return new THashSet<T>();, +        }, +        return set;, +    }, +, +    public static void pushHashSet(THashSet map) {, +        Queue<THashSet> ref = hashSet.get();, +        if (ref == null) {, +            ref = ConcurrentCollections.newQueue();, +            hashSet.set(ref);, +        }, +        map.clear();, +        ref.add(map);, +    }, +, +++ b/src/main/java/org/elasticsearch/common/CacheRecycler.java, +import gnu.trove.set.hash.THashSet;, +        hashSet.clear();, +    // ----- THashSet -----, +, +    private static SoftWrapper<Queue<THashSet>> hashSet = new SoftWrapper<Queue<THashSet>>();, +, +    public static <T> THashSet<T> popHashSet() {, +        Queue<THashSet> ref = hashSet.get();, +        if (ref == null) {, +            return new THashSet<T>();, +        }, +        THashSet set = ref.poll();, +        if (set == null) {, +            return new THashSet<T>();, +        }, +        return set;, +    }, +, +    public static void pushHashSet(THashSet map) {, +        Queue<THashSet> ref = hashSet.get();, +        if (ref == null) {, +            ref = ConcurrentCollections.newQueue();, +            hashSet.set(ref);, +        }, +        map.clear();, +        ref.add(map);, +    }, +, +++ b/src/main/java/org/elasticsearch/index/cache/id/IdReaderTypeCache.java, +    /**, +     * @param docId The Lucene docId of the child document to return the parent _uid for., +     * @return The parent _uid for the specified docId (which is a child document), +     */, +    /**, +     * @param uid The uid of the document to return the lucene docId for, +     * @return The lucene docId for the specified uid, +     */, +    int docById(HashedBytesArray uid);, +, +    /**, +     * @param docId The lucene docId of the document to return _uid for, +     * @return The _uid of the specified docId, +     */, +    HashedBytesArray idByDoc(int docId);, +, +++ b/src/main/java/org/elasticsearch/common/CacheRecycler.java, +import gnu.trove.set.hash.THashSet;, +        hashSet.clear();, +    // ----- THashSet -----, +, +    private static SoftWrapper<Queue<THashSet>> hashSet = new SoftWrapper<Queue<THashSet>>();, +, +    public static <T> THashSet<T> popHashSet() {, +        Queue<THashSet> ref = hashSet.get();, +        if (ref == null) {, +            return new THashSet<T>();, +        }, +        THashSet set = ref.poll();, +        if (set == null) {, +            return new THashSet<T>();, +        }, +        return set;, +    }, +, +    public static void pushHashSet(THashSet map) {, +        Queue<THashSet> ref = hashSet.get();, +        if (ref == null) {, +            ref = ConcurrentCollections.newQueue();, +            hashSet.set(ref);, +        }]