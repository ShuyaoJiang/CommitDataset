[+++ b/core/src/main/java/org/elasticsearch/rest/BaseRestHandler.java, +import java.util.HashSet;, +        if (unconsumedParams.isEmpty() == false) {, +                final Set<String> candidateParams = new HashSet<>();, +                candidateParams.addAll(request.consumedParams());, +                candidateParams.addAll(responseParams());, +                for (final String candidateParam : candidateParams) {, +                    final float distance = ld.getDistance(unconsumedParam, candidateParam);, +                        scoredParams.add(new Tuple<>(distance, candidateParam));, +++ b/core/src/main/java/org/elasticsearch/rest/BaseRestHandler.java, +import java.util.HashSet;, +        if (unconsumedParams.isEmpty() == false) {, +                final Set<String> candidateParams = new HashSet<>();, +                candidateParams.addAll(request.consumedParams());, +                candidateParams.addAll(responseParams());, +                for (final String candidateParam : candidateParams) {, +                    final float distance = ld.getDistance(unconsumedParam, candidateParam);, +                        scoredParams.add(new Tuple<>(distance, candidateParam));, +++ b/core/src/test/java/org/elasticsearch/rest/BaseRestHandlerTests.java, +, +            @Override, +            protected Set<String> responseParams() {, +                return Collections.singleton("response_param");, +            }, +        params.put("respones_param", randomAsciiOfLength(8));, +                    "[respones_param] -> did you mean [response_param]?, " +]