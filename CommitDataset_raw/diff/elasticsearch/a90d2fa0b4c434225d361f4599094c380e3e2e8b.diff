[+++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +            final String type = rootObjectMapper.name();, +            DocumentMapper existingMapper = mapperService.documentMapper(type);, +                final MetadataFieldMapper existingMetadataMapper = existingMapper == null, +                        ? null, +                        : (MetadataFieldMapper) existingMapper.mappers().getMapper(name);, +                final MetadataFieldMapper metadataMapper;, +                if (existingMetadataMapper == null) {, +                    metadataMapper = parser.getDefault(indexSettings, mapperService.fullName(name), builder.name());, +                } else {, +                    metadataMapper = existingMetadataMapper;, +                }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +            final String type = rootObjectMapper.name();, +            DocumentMapper existingMapper = mapperService.documentMapper(type);, +                final MetadataFieldMapper existingMetadataMapper = existingMapper == null, +                        ? null, +                        : (MetadataFieldMapper) existingMapper.mappers().getMapper(name);, +                final MetadataFieldMapper metadataMapper;, +                if (existingMetadataMapper == null) {, +                    metadataMapper = parser.getDefault(indexSettings, mapperService.fullName(name), builder.name());, +                } else {, +                    metadataMapper = existingMetadataMapper;, +                }, +++ b/core/src/test/java/org/elasticsearch/index/mapper/merge/TestMergeMapperTests.java, +import java.io.IOException;, +, +    public void testDoNotRepeatOriginalMapping() throws IOException {, +        CompressedXContent mapping = new CompressedXContent(XContentFactory.jsonBuilder().startObject(), +                .startObject("type"), +                    .startObject("_source"), +                        .field("enabled", false), +                    .endObject(), +                .endObject().endObject().bytes());, +        MapperService mapperService = createIndex("test").mapperService();, +        mapperService.merge("type", mapping, true, false);, +, +        CompressedXContent update = new CompressedXContent(XContentFactory.jsonBuilder().startObject(), +                .startObject("type"), +                    .startObject("properties"), +                        .startObject("foo"), +                            .field("type", "string"), +                        .endObject(), +                    .endObject(), +                .endObject().endObject().bytes());, +        DocumentMapper mapper = mapperService.merge("type", update, false, false);, +, +        assertNotNull(mapper.mappers().getMapper("foo"));, +        assertFalse(mapper.sourceMapper().enabled());, +    }]