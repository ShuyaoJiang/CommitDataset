[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, "path.home", environment.binFile(), "read,readlink");, +        addPath(policy, "path.home", environment.libFile(), "read,readlink");, +        addPath(policy, "path.home", environment.modulesFile(), "read,readlink");, +        addPath(policy, "path.plugins", environment.pluginsFile(), "read,readlink");, +        addPath(policy, "path.conf", environment.configFile(), "read,readlink");, +        addPath(policy, "path.scripts", environment.scriptsFile(), "read,readlink");, +        addPath(policy, "path.logs", environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, "path.shared_data", environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.repo", path, "read,readlink,write,delete");, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, "path.home", environment.binFile(), "read,readlink");, +        addPath(policy, "path.home", environment.libFile(), "read,readlink");, +        addPath(policy, "path.home", environment.modulesFile(), "read,readlink");, +        addPath(policy, "path.plugins", environment.pluginsFile(), "read,readlink");, +        addPath(policy, "path.conf", environment.configFile(), "read,readlink");, +        addPath(policy, "path.scripts", environment.scriptsFile(), "read,readlink");, +        addPath(policy, "path.logs", environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, "path.shared_data", environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.repo", path, "read,readlink,write,delete");, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +        IndicesStore.INDICES_STORE_DELETE_SHARD_TIMEOUT)));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, "path.home", environment.binFile(), "read,readlink");, +        addPath(policy, "path.home", environment.libFile(), "read,readlink");, +        addPath(policy, "path.home", environment.modulesFile(), "read,readlink");, +        addPath(policy, "path.plugins", environment.pluginsFile(), "read,readlink");, +        addPath(policy, "path.conf", environment.configFile(), "read,readlink");, +        addPath(policy, "path.scripts", environment.scriptsFile(), "read,readlink");, +        addPath(policy, "path.logs", environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, "path.shared_data", environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.repo", path, "read,readlink,write,delete");, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +        IndicesStore.INDICES_STORE_DELETE_SHARD_TIMEOUT)));, +++ b/core/src/main/java/org/elasticsearch/common/settings/Setting.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, "path.home", environment.binFile(), "read,readlink");, +        addPath(policy, "path.home", environment.libFile(), "read,readlink");, +        addPath(policy, "path.home", environment.modulesFile(), "read,readlink");, +        addPath(policy, "path.plugins", environment.pluginsFile(), "read,readlink");, +        addPath(policy, "path.conf", environment.configFile(), "read,readlink");, +        addPath(policy, "path.scripts", environment.scriptsFile(), "read,readlink");, +        addPath(policy, "path.logs", environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, "path.shared_data", environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.repo", path, "read,readlink,write,delete");, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +        IndicesStore.INDICES_STORE_DELETE_SHARD_TIMEOUT)));, +++ b/core/src/main/java/org/elasticsearch/common/settings/Setting.java, +++ b/core/src/main/java/org/elasticsearch/env/Environment.java, +        if (settings.get("path.home") != null) {, +            homeFile = PathUtils.get(cleanPath(settings.get("path.home")));, +            throw new IllegalStateException("path.home is not configured");, +        if (settings.get("path.conf") != null) {, +            configFile = PathUtils.get(cleanPath(settings.get("path.conf")));, +        if (settings.get("path.scripts") != null) {, +            scriptsFile = PathUtils.get(cleanPath(settings.get("path.scripts")));, +        if (settings.get("path.plugins") != null) {, +            pluginsFile = PathUtils.get(cleanPath(settings.get("path.plugins")));, +        String[] dataPaths = settings.getAsArray("path.data");, +        if (dataPaths.length > 0) {, +            dataFiles = new Path[dataPaths.length];, +            dataWithClusterFiles = new Path[dataPaths.length];, +            for (int i = 0; i < dataPaths.length; i++) {, +                dataFiles[i] = PathUtils.get(dataPaths[i]);, +        if (settings.get("path.shared_data") != null) {, +            sharedDataFile = PathUtils.get(cleanPath(settings.get("path.shared_data")));, +        String[] repoPaths = settings.getAsArray("path.repo");, +        if (repoPaths.length > 0) {, +            repoFiles = new Path[repoPaths.length];, +            for (int i = 0; i < repoPaths.length; i++) {, +                repoFiles[i] = PathUtils.get(repoPaths[i]);, +        if (settings.get("path.logs") != null) {, +            logsFile = PathUtils.get(cleanPath(settings.get("path.logs")));, +        if (settings.get("pidfile") != null) {, +            pidFile = PathUtils.get(cleanPath(settings.get("pidfile")));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, "path.home", environment.binFile(), "read,readlink");, +        addPath(policy, "path.home", environment.libFile(), "read,readlink");, +        addPath(policy, "path.home", environment.modulesFile(), "read,readlink");, +        addPath(policy, "path.plugins", environment.pluginsFile(), "read,readlink");, +        addPath(policy, "path.conf", environment.configFile(), "read,readlink");, +        addPath(policy, "path.scripts", environment.scriptsFile(), "read,readlink");, +        addPath(policy, "path.logs", environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, "path.shared_data", environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.data", path, "read,readlink,write,delete");, +            addPath(policy, "path.repo", path, "read,readlink,write,delete");, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +        IndicesStore.INDICES_STORE_DELETE_SHARD_TIMEOUT)));, +++ b/core/src/main/java/org/elasticsearch/common/settings/Setting.java, +++ b/core/src/main/java/org/elasticsearch/env/Environment.java, +        if (settings.get("path.home") != null) {]