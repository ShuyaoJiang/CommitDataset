[+++ b/src/main/java/org/elasticsearch/common/io/FileChannelInputStream.java, +    private long markPosition;, +, +        this.markPosition = position;, +, +    @Override, +    public boolean markSupported() {, +        return true;, +    }, +, +    @Override, +    public void mark(int readlimit) {, +        this.markPosition = position;, +    }, +, +    @Override, +    public void reset() throws IOException {, +        position = markPosition;, +    }, +++ b/src/main/java/org/elasticsearch/common/io/FileChannelInputStream.java, +    private long markPosition;, +, +        this.markPosition = position;, +, +    @Override, +    public boolean markSupported() {, +        return true;, +    }, +, +    @Override, +    public void mark(int readlimit) {, +        this.markPosition = position;, +    }, +, +    @Override, +    public void reset() throws IOException {, +        position = markPosition;, +    }, +++ b/src/main/java/org/elasticsearch/common/lucene/store/InputStreamIndexInput.java, +    private long markPointer;, +    private long markCounter;, +, +, +    @Override, +    public boolean markSupported() {, +        return true;, +    }, +, +    @Override, +    public synchronized void mark(int readlimit) {, +        markPointer = indexInput.getFilePointer();, +        markCounter = counter;, +    }, +, +    @Override, +    public synchronized void reset() throws IOException {, +        indexInput.seek(markPointer);, +        counter = markCounter;, +    }, +++ b/src/main/java/org/elasticsearch/common/io/FileChannelInputStream.java, +    private long markPosition;, +, +        this.markPosition = position;, +, +    @Override, +    public boolean markSupported() {, +        return true;, +    }, +, +    @Override, +    public void mark(int readlimit) {, +        this.markPosition = position;, +    }, +, +    @Override, +    public void reset() throws IOException {, +        position = markPosition;, +    }, +++ b/src/main/java/org/elasticsearch/common/lucene/store/InputStreamIndexInput.java, +    private long markPointer;, +    private long markCounter;, +, +, +    @Override, +    public boolean markSupported() {, +        return true;, +    }, +, +    @Override, +    public synchronized void mark(int readlimit) {, +        markPointer = indexInput.getFilePointer();, +        markCounter = counter;, +    }, +, +    @Override, +    public synchronized void reset() throws IOException {, +        indexInput.seek(markPointer);, +        counter = markCounter;, +    }, +++ b/src/test/java/org/elasticsearch/test/unit/common/lucene/store/InputStreamIndexInputTests.java]