[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/broadcast/TransportBroadcastPingAction.java, +        return clusterService.operationRouting().searchShards(clusterState, request.indices(), request.queryHint(), null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/broadcast/TransportBroadcastPingAction.java, +        return clusterService.operationRouting().searchShards(clusterState, request.indices(), request.queryHint(), null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +            String routing = null;, +                    } else if ("_routing".equals(currentFieldName)) {, +                        routing = parser.text();, +                add(new DeleteRequest(index, type, id).routing(routing));, +                        add(new IndexRequest(index, type, id).routing(routing), +                        add(new IndexRequest(index, type, id).routing(routing), +                    add(new IndexRequest(index, type, id).routing(routing), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/broadcast/TransportBroadcastPingAction.java, +        return clusterService.operationRouting().searchShards(clusterState, request.indices(), request.queryHint(), null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +            String routing = null;, +                    } else if ("_routing".equals(currentFieldName)) {, +                        routing = parser.text();, +                add(new DeleteRequest(index, type, id).routing(routing));, +                        add(new IndexRequest(index, type, id).routing(routing), +                        add(new IndexRequest(index, type, id).routing(routing), +                    add(new IndexRequest(index, type, id).routing(routing), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                shardId = clusterService.operationRouting().indexShards(clusterState, indexRequest.index(), indexRequest.type(), indexRequest.id(), indexRequest.routing()).shardId();, +                shardId = clusterService.operationRouting().deleteShards(clusterState, deleteRequest.index(), deleteRequest.type(), deleteRequest.id(), deleteRequest.routing()).shardId();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/broadcast/TransportBroadcastPingAction.java, +        return clusterService.operationRouting().searchShards(clusterState, request.indices(), request.queryHint(), null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +            String routing = null;, +                    } else if ("_routing".equals(currentFieldName)) {, +                        routing = parser.text();, +                add(new DeleteRequest(index, type, id).routing(routing));, +                        add(new IndexRequest(index, type, id).routing(routing), +                        add(new IndexRequest(index, type, id).routing(routing), +                    add(new IndexRequest(index, type, id).routing(routing), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                shardId = clusterService.operationRouting().indexShards(clusterState, indexRequest.index(), indexRequest.type(), indexRequest.id(), indexRequest.routing()).shardId();, +                shardId = clusterService.operationRouting().deleteShards(clusterState, deleteRequest.index(), deleteRequest.type(), deleteRequest.id(), deleteRequest.routing()).shardId();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +    @Nullable protected String routing;, +    /**, +     * A comma separated list of routing values to control the shards the search will be executed on., +     */, +    public String routing() {, +        return this.routing;, +    }, +, +    /**, +     * A comma separated list of routing values to control the shards the search will be executed on., +     */, +    public CountRequest routing(String routing) {, +        this.routing = routing;, +        return this;, +    }, +, +    /**, +     * The routing values to control the shards that the search will be executed on., +     */, +    public CountRequest routing(String... routings) {, +        this.routing = Strings.arrayToCommaDelimitedString(routings);, +        return this;, +    }, +, +        if (in.readBoolean()) {, +            routing = in.readUTF();, +        }, +        if (routing == null) {, +            out.writeBoolean(false);, +        } else {, +            out.writeBoolean(true);, +            out.writeUTF(routing);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/broadcast/TransportBroadcastPingAction.java, +        return clusterService.operationRouting().searchShards(clusterState, request.indices(), request.queryHint(), null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +            String routing = null;, +                    } else if ("_routing".equals(currentFieldName)) {, +                        routing = parser.text();, +                add(new DeleteRequest(index, type, id).routing(routing));, +                        add(new IndexRequest(index, type, id).routing(routing), +                        add(new IndexRequest(index, type, id).routing(routing), +                    add(new IndexRequest(index, type, id).routing(routing), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                shardId = clusterService.operationRouting().indexShards(clusterState, indexRequest.index(), indexRequest.type(), indexRequest.id(), indexRequest.routing()).shardId();, +                shardId = clusterService.operationRouting().deleteShards(clusterState, deleteRequest.index(), deleteRequest.type(), deleteRequest.id(), deleteRequest.routing()).shardId();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +    @Nullable protected String routing;, +    /**, +     * A comma separated list of routing values to control the shards the search will be executed on., +     */, +    public String routing() {, +        return this.routing;, +    }, +, +    /**, +     * A comma separated list of routing values to control the shards the search will be executed on., +     */, +    public CountRequest routing(String routing) {, +        this.routing = routing;, +        return this;]