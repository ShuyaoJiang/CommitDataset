[+++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        boolean matchAllAliases = aliases.length == 0;, +                if (matchAllAliases || Regex.simpleMatch(aliases, value.alias())) {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        boolean matchAllAliases = aliases.length == 0;, +                if (matchAllAliases || Regex.simpleMatch(aliases, value.alias())) {, +++ b/src/main/java/org/elasticsearch/rest/action/cat/RestAliasAction.java, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesRequest;, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesResponse;, +import java.util.List;, +        final GetAliasesRequest getAliasesRequest = request.hasParam("alias") ?, +                new GetAliasesRequest(request.param("alias")) :, +                new GetAliasesRequest();, +        client.admin().indices().getAliases(getAliasesRequest, new ActionListener<GetAliasesResponse>() {, +            public void onResponse(GetAliasesResponse response) {, +        sb.append("/_cat/aliases");, +        sb.append("/_cat/aliases/{alias}");, +    private Table buildTable(RestRequest request, GetAliasesResponse response) {, +        for (ObjectObjectCursor<String, List<AliasMetaData>> cursor : response.getAliases()) {, +            String indexName = cursor.key;, +            for (AliasMetaData aliasMetaData : cursor.value) {, +                table.addCell(aliasMetaData.alias());, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        boolean matchAllAliases = aliases.length == 0;, +                if (matchAllAliases || Regex.simpleMatch(aliases, value.alias())) {, +++ b/src/main/java/org/elasticsearch/rest/action/cat/RestAliasAction.java, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesRequest;, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesResponse;, +import java.util.List;, +        final GetAliasesRequest getAliasesRequest = request.hasParam("alias") ?, +                new GetAliasesRequest(request.param("alias")) :, +                new GetAliasesRequest();, +        client.admin().indices().getAliases(getAliasesRequest, new ActionListener<GetAliasesResponse>() {, +            public void onResponse(GetAliasesResponse response) {, +        sb.append("/_cat/aliases");, +        sb.append("/_cat/aliases/{alias}");, +    private Table buildTable(RestRequest request, GetAliasesResponse response) {, +        for (ObjectObjectCursor<String, List<AliasMetaData>> cursor : response.getAliases()) {, +            String indexName = cursor.key;, +            for (AliasMetaData aliasMetaData : cursor.value) {, +                table.addCell(aliasMetaData.alias());, +++ b/src/test/java/org/elasticsearch/aliases/IndexAliasesTests.java, +import static org.elasticsearch.test.hamcrest.CollectionAssertions.hasKey;, +    @Test, +    public void testGetAllAliasesWorks() {, +        createIndex("index1");, +        createIndex("index2");, +, +        ensureYellow();, +, +        admin().indices().prepareAliases().addAlias("index1", "alias1").addAlias("index2", "alias2").get();, +, +        GetAliasesResponse response = admin().indices().prepareGetAliases().get();, +        assertThat(response.getAliases(), hasKey("index1"));, +        assertThat(response.getAliases(), hasKey("index1"));, +    }, +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        boolean matchAllAliases = aliases.length == 0;, +                if (matchAllAliases || Regex.simpleMatch(aliases, value.alias())) {, +++ b/src/main/java/org/elasticsearch/rest/action/cat/RestAliasAction.java, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesRequest;, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesResponse;, +import java.util.List;, +        final GetAliasesRequest getAliasesRequest = request.hasParam("alias") ?, +                new GetAliasesRequest(request.param("alias")) :, +                new GetAliasesRequest();, +        client.admin().indices().getAliases(getAliasesRequest, new ActionListener<GetAliasesResponse>() {, +            public void onResponse(GetAliasesResponse response) {, +        sb.append("/_cat/aliases");, +        sb.append("/_cat/aliases/{alias}");, +    private Table buildTable(RestRequest request, GetAliasesResponse response) {, +        for (ObjectObjectCursor<String, List<AliasMetaData>> cursor : response.getAliases()) {, +            String indexName = cursor.key;, +            for (AliasMetaData aliasMetaData : cursor.value) {, +                table.addCell(aliasMetaData.alias());, +++ b/src/test/java/org/elasticsearch/aliases/IndexAliasesTests.java, +import static org.elasticsearch.test.hamcrest.CollectionAssertions.hasKey;, +    @Test, +    public void testGetAllAliasesWorks() {, +        createIndex("index1");, +        createIndex("index2");, +, +        ensureYellow();, +, +        admin().indices().prepareAliases().addAlias("index1", "alias1").addAlias("index2", "alias2").get();, +, +        GetAliasesResponse response = admin().indices().prepareGetAliases().get();, +        assertThat(response.getAliases(), hasKey("index1"));, +        assertThat(response.getAliases(), hasKey("index1"));, +    }, +, +++ b/src/test/java/org/elasticsearch/test/hamcrest/CollectionAssertions.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one]