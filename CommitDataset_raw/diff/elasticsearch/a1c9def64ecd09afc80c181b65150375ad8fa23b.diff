[+++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/cors/Netty4CorsConfig.java, +     * Determines whether a wildcard origin, '*', is supported. This also means that null origins are, +     * supported., +     * Determines if credentials are supported for CORS requests., +     * By default credentials are not included in CORS requests but if isCredentialsAllowed returns, +     * true credentials will be added to CORS requests. Setting this value to true will set the, +     * Please note that credentials support needs to be enabled on the client side as well., +     * The client needs to opt-in to send credentials by calling:, +     * The default value for 'withCredentials' is false in which case no credentials are sent., +     * Setting this to true will included credentials in cross origin requests., +     * @return {@code true} if credentials are supported., +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/cors/Netty4CorsConfig.java, +     * Determines whether a wildcard origin, '*', is supported. This also means that null origins are, +     * supported., +     * Determines if credentials are supported for CORS requests., +     * By default credentials are not included in CORS requests but if isCredentialsAllowed returns, +     * true credentials will be added to CORS requests. Setting this value to true will set the, +     * Please note that credentials support needs to be enabled on the client side as well., +     * The client needs to opt-in to send credentials by calling:, +     * The default value for 'withCredentials' is false in which case no credentials are sent., +     * Setting this to true will included credentials in cross origin requests., +     * @return {@code true} if credentials are supported., +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final BreakIterator breakers[] = new BreakIterator[UScript.CODE_LIMIT];, +    private BreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/cors/Netty4CorsConfig.java, +     * Determines whether a wildcard origin, '*', is supported. This also means that null origins are, +     * supported., +     * Determines if credentials are supported for CORS requests., +     * By default credentials are not included in CORS requests but if isCredentialsAllowed returns, +     * true credentials will be added to CORS requests. Setting this value to true will set the, +     * Please note that credentials support needs to be enabled on the client side as well., +     * The client needs to opt-in to send credentials by calling:, +     * The default value for 'withCredentials' is false in which case no credentials are sent., +     * Setting this to true will included credentials in cross origin requests., +     * @return {@code true} if credentials are supported., +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final BreakIterator breakers[] = new BreakIterator[UScript.CODE_LIMIT];, +    private BreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/http/nio/HttpReadWriteHandler.java, +import org.elasticsearch.http.nio.cors.NioCorsConfig;, +import org.elasticsearch.http.nio.cors.NioCorsHandler;, +import static org.elasticsearch.http.HttpTransportSettings.SETTING_CORS_ENABLED;, +, +    private final NioCorsConfig corsConfig;, +                         NamedXContentRegistry xContentRegistry, NioCorsConfig corsConfig, ThreadContext threadContext) {, +        this.corsConfig = corsConfig;, +        if (settings.isCorsEnabled()) {, +            handlers.add(new NioCorsHandler(corsConfig));, +        }, +                    innerChannel = new NioHttpChannel(nioChannel, bigArrays, httpRequest, sequence, settings, corsConfig, threadContext);, +                    innerChannel = new NioHttpChannel(nioChannel, bigArrays, innerRequest, sequence, settings, corsConfig, threadContext);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/cors/Netty4CorsConfig.java, +     * Determines whether a wildcard origin, '*', is supported. This also means that null origins are, +     * supported., +     * Determines if credentials are supported for CORS requests., +     * By default credentials are not included in CORS requests but if isCredentialsAllowed returns, +     * true credentials will be added to CORS requests. Setting this value to true will set the, +     * Please note that credentials support needs to be enabled on the client side as well., +     * The client needs to opt-in to send credentials by calling:, +     * The default value for 'withCredentials' is false in which case no credentials are sent., +     * Setting this to true will included credentials in cross origin requests., +     * @return {@code true} if credentials are supported., +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final BreakIterator breakers[] = new BreakIterator[UScript.CODE_LIMIT];, +    private BreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/http/nio/HttpReadWriteHandler.java, +import org.elasticsearch.http.nio.cors.NioCorsConfig;, +import org.elasticsearch.http.nio.cors.NioCorsHandler;, +import static org.elasticsearch.http.HttpTransportSettings.SETTING_CORS_ENABLED;, +, +    private final NioCorsConfig corsConfig;, +                         NamedXContentRegistry xContentRegistry, NioCorsConfig corsConfig, ThreadContext threadContext) {, +        this.corsConfig = corsConfig;, +        if (settings.isCorsEnabled()) {, +            handlers.add(new NioCorsHandler(corsConfig));, +        }, +                    innerChannel = new NioHttpChannel(nioChannel, bigArrays, httpRequest, sequence, settings, corsConfig, threadContext);, +                    innerChannel = new NioHttpChannel(nioChannel, bigArrays, innerRequest, sequence, settings, corsConfig, threadContext);, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/http/nio/NioHttpChannel.java, +import org.elasticsearch.http.nio.cors.NioCorsConfig;, +import org.elasticsearch.http.nio.cors.NioCorsHandler;, +    private final NioCorsConfig corsConfig;, +                   HttpHandlingSettings settings, NioCorsConfig corsConfig, ThreadContext threadContext) {, +        this.corsConfig = corsConfig;, +        NioCorsHandler.setCorsResponseHeaders(nettyRequest, resp, corsConfig);, +, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/cors/Netty4CorsConfig.java, +     * Determines whether a wildcard origin, '*', is supported. This also means that null origins are, +     * supported., +     * Determines if credentials are supported for CORS requests., +     * By default credentials are not included in CORS requests but if isCredentialsAllowed returns, +     * true credentials will be added to CORS requests. Setting this value to true will set the, +     * Please note that credentials support needs to be enabled on the client side as well., +     * The client needs to opt-in to send credentials by calling:, +     * The default value for 'withCredentials' is false in which case no credentials are sent., +     * Setting this to true will included credentials in cross origin requests., +     * @return {@code true} if credentials are supported., +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final BreakIterator breakers[] = new BreakIterator[UScript.CODE_LIMIT];]