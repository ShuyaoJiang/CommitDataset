[+++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +            .withWaitForActiveShards(reindexRequest.getWaitForActiveShards());, +                //we prepend "/" to the path part to make this pate absolute, otherwise there can be issues with, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +            .withWaitForActiveShards(reindexRequest.getWaitForActiveShards());, +                //we prepend "/" to the path part to make this pate absolute, otherwise there can be issues with, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +            .withWaitForActiveShards(reindexRequest.getWaitForActiveShards());, +                //we prepend "/" to the path part to make this pate absolute, otherwise there can be issues with, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +++ b/docs/reference/sql/functions/math.asciidoc, +* https://en.wikipedia.org/wiki/Rounding#Round_half_up[Round] (`ROUND`), +// TODO make the example in the tests presentable, +NOTE: This rounds "half up" meaning that `ROUND(-1.5)` results in `-1`., +, +* https://en.wikipedia.org/wiki/Exponential_function[e^x^] (`EXP`), +include-tagged::{sql-specs}/math.sql-spec[exp], +* https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#expm1-double-[e^x^ - 1] (`EXPM1`), +, +include-tagged::{sql-specs}/math.sql-spec[expm1], +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +            .withWaitForActiveShards(reindexRequest.getWaitForActiveShards());, +                //we prepend "/" to the path part to make this pate absolute, otherwise there can be issues with, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +++ b/docs/reference/sql/functions/math.asciidoc, +* https://en.wikipedia.org/wiki/Rounding#Round_half_up[Round] (`ROUND`), +// TODO make the example in the tests presentable, +NOTE: This rounds "half up" meaning that `ROUND(-1.5)` results in `-1`., +, +* https://en.wikipedia.org/wiki/Exponential_function[e^x^] (`EXP`), +include-tagged::{sql-specs}/math.sql-spec[exp], +* https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#expm1-double-[e^x^ - 1] (`EXPM1`), +, +include-tagged::{sql-specs}/math.sql-spec[expm1], +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/IngestCommonPlugin.java, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +            .withWaitForActiveShards(reindexRequest.getWaitForActiveShards());, +                //we prepend "/" to the path part to make this pate absolute, otherwise there can be issues with, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +++ b/docs/reference/sql/functions/math.asciidoc, +* https://en.wikipedia.org/wiki/Rounding#Round_half_up[Round] (`ROUND`), +// TODO make the example in the tests presentable, +NOTE: This rounds "half up" meaning that `ROUND(-1.5)` results in `-1`., +, +* https://en.wikipedia.org/wiki/Exponential_function[e^x^] (`EXP`), +include-tagged::{sql-specs}/math.sql-spec[exp], +* https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#expm1-double-[e^x^ - 1] (`EXPM1`), +, +include-tagged::{sql-specs}/math.sql-spec[expm1], +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/IngestCommonPlugin.java, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/PipelineProcessor.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.ingest.common;, +, +import java.util.Map;, +import org.elasticsearch.ingest.AbstractProcessor;, +import org.elasticsearch.ingest.ConfigurationUtils;, +import org.elasticsearch.ingest.IngestDocument;, +import org.elasticsearch.ingest.IngestService;, +import org.elasticsearch.ingest.Pipeline;, +import org.elasticsearch.ingest.Processor;, +, +public class PipelineProcessor extends AbstractProcessor {]