[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteResponse.java, +        state = ClusterState.Builder.readFrom(in, null, null);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteResponse.java, +        state = ClusterState.Builder.readFrom(in, null, null);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateResponse.java, +        clusterState = ClusterState.Builder.readFrom(in, null, clusterName);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteResponse.java, +        state = ClusterState.Builder.readFrom(in, null, null);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateResponse.java, +        clusterState = ClusterState.Builder.readFrom(in, null, clusterName);, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        /**, +         * @param data               input bytes, +         * @param localNode          used to set the local node in the cluster state., +         * @param defaultClusterName this cluster name will be used of if the deserialized cluster state does not have a name set, +         *                           (which is only introduced in version 1.1.1), +         */, +        public static ClusterState fromBytes(byte[] data, DiscoveryNode localNode, ClusterName defaultClusterName) throws IOException {, +            return readFrom(new BytesStreamInput(data, false), localNode, defaultClusterName);, +        /**, +         * @param in                 input stream, +         * @param localNode          used to set the local node in the cluster state. can be null., +         * @param defaultClusterName this cluster name will be used of receiving a cluster state from a node on version older than 1.1.1, +         *                           or if the sending node did not set a cluster name, +         */, +        public static ClusterState readFrom(StreamInput in, @Nullable DiscoveryNode localNode, @Nullable ClusterName defaultClusterName) throws IOException {, +            ClusterName clusterName = defaultClusterName;, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteResponse.java, +        state = ClusterState.Builder.readFrom(in, null, null);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateResponse.java, +        clusterState = ClusterState.Builder.readFrom(in, null, clusterName);, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        /**, +         * @param data               input bytes, +         * @param localNode          used to set the local node in the cluster state., +         * @param defaultClusterName this cluster name will be used of if the deserialized cluster state does not have a name set, +         *                           (which is only introduced in version 1.1.1), +         */, +        public static ClusterState fromBytes(byte[] data, DiscoveryNode localNode, ClusterName defaultClusterName) throws IOException {, +            return readFrom(new BytesStreamInput(data, false), localNode, defaultClusterName);, +        /**, +         * @param in                 input stream, +         * @param localNode          used to set the local node in the cluster state. can be null., +         * @param defaultClusterName this cluster name will be used of receiving a cluster state from a node on version older than 1.1.1, +         *                           or if the sending node did not set a cluster name, +         */, +        public static ClusterState readFrom(StreamInput in, @Nullable DiscoveryNode localNode, @Nullable ClusterName defaultClusterName) throws IOException {, +            ClusterName clusterName = defaultClusterName;, +++ b/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +                final ClusterState nodeSpecificClusterState = ClusterState.Builder.fromBytes(clusterStateBytes, discovery.localNode, clusterName);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteResponse.java, +        state = ClusterState.Builder.readFrom(in, null, null);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateResponse.java, +        clusterState = ClusterState.Builder.readFrom(in, null, clusterName);, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        /**, +         * @param data               input bytes, +         * @param localNode          used to set the local node in the cluster state., +         * @param defaultClusterName this cluster name will be used of if the deserialized cluster state does not have a name set, +         *                           (which is only introduced in version 1.1.1), +         */, +        public static ClusterState fromBytes(byte[] data, DiscoveryNode localNode, ClusterName defaultClusterName) throws IOException {, +            return readFrom(new BytesStreamInput(data, false), localNode, defaultClusterName);, +        /**, +         * @param in                 input stream, +         * @param localNode          used to set the local node in the cluster state. can be null., +         * @param defaultClusterName this cluster name will be used of receiving a cluster state from a node on version older than 1.1.1, +         *                           or if the sending node did not set a cluster name, +         */, +        public static ClusterState readFrom(StreamInput in, @Nullable DiscoveryNode localNode, @Nullable ClusterName defaultClusterName) throws IOException {, +            ClusterName clusterName = defaultClusterName;, +++ b/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +                final ClusterState nodeSpecificClusterState = ClusterState.Builder.fromBytes(clusterStateBytes, discovery.localNode, clusterName);, +++ b/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +        this.publishClusterState = new PublishClusterStateAction(settings, transportService, this, new NewClusterStateListener(), discoverySettings, clusterName);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteResponse.java, +        state = ClusterState.Builder.readFrom(in, null, null);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateResponse.java, +        clusterState = ClusterState.Builder.readFrom(in, null, clusterName);, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        /**, +         * @param data               input bytes, +         * @param localNode          used to set the local node in the cluster state., +         * @param defaultClusterName this cluster name will be used of if the deserialized cluster state does not have a name set, +         *                           (which is only introduced in version 1.1.1), +         */, +        public static ClusterState fromBytes(byte[] data, DiscoveryNode localNode, ClusterName defaultClusterName) throws IOException {, +            return readFrom(new BytesStreamInput(data, false), localNode, defaultClusterName);, +        /**, +         * @param in                 input stream, +         * @param localNode          used to set the local node in the cluster state. can be null., +         * @param defaultClusterName this cluster name will be used of receiving a cluster state from a node on version older than 1.1.1, +         *                           or if the sending node did not set a cluster name, +         */, +        public static ClusterState readFrom(StreamInput in, @Nullable DiscoveryNode localNode, @Nullable ClusterName defaultClusterName) throws IOException {, +            ClusterName clusterName = defaultClusterName;, +++ b/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +                final ClusterState nodeSpecificClusterState = ClusterState.Builder.fromBytes(clusterStateBytes, discovery.localNode, clusterName);, +++ b/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +        this.publishClusterState = new PublishClusterStateAction(settings, transportService, this, new NewClusterStateListener(), discoverySettings, clusterName);]