[+++ b/core/src/test/java/org/elasticsearch/search/sort/FieldSortBuilderTests.java, +    public static FieldSortBuilder randomFieldSortBuilder() {, +            builder.order(RandomSortDataGenerator.order(null));, +            builder.missing(RandomSortDataGenerator.missing(builder.missing()));, +            builder.unmappedType(RandomSortDataGenerator.randomAscii(builder.unmappedType()));, +            builder.sortMode(RandomSortDataGenerator.mode(builder.sortMode()));, +            builder.setNestedFilter(RandomSortDataGenerator.nestedFilter(builder.getNestedFilter()));, +            builder.setNestedPath(RandomSortDataGenerator.randomAscii(builder.getNestedPath()));, +            mutated.setNestedPath(RandomSortDataGenerator.randomAscii(mutated.getNestedPath()));, +            mutated.setNestedFilter(RandomSortDataGenerator.nestedFilter(mutated.getNestedFilter()));, +            mutated.sortMode(RandomSortDataGenerator.mode(mutated.sortMode()));, +            mutated.unmappedType(RandomSortDataGenerator.randomAscii(mutated.unmappedType()));, +            mutated.missing(RandomSortDataGenerator.missing(mutated.missing()));, +            mutated.order(RandomSortDataGenerator.order(mutated.order()));, +++ b/core/src/test/java/org/elasticsearch/search/sort/FieldSortBuilderTests.java, +    public static FieldSortBuilder randomFieldSortBuilder() {, +            builder.order(RandomSortDataGenerator.order(null));, +            builder.missing(RandomSortDataGenerator.missing(builder.missing()));, +            builder.unmappedType(RandomSortDataGenerator.randomAscii(builder.unmappedType()));, +            builder.sortMode(RandomSortDataGenerator.mode(builder.sortMode()));, +            builder.setNestedFilter(RandomSortDataGenerator.nestedFilter(builder.getNestedFilter()));, +            builder.setNestedPath(RandomSortDataGenerator.randomAscii(builder.getNestedPath()));, +            mutated.setNestedPath(RandomSortDataGenerator.randomAscii(mutated.getNestedPath()));, +            mutated.setNestedFilter(RandomSortDataGenerator.nestedFilter(mutated.getNestedFilter()));, +            mutated.sortMode(RandomSortDataGenerator.mode(mutated.sortMode()));, +            mutated.unmappedType(RandomSortDataGenerator.randomAscii(mutated.unmappedType()));, +            mutated.missing(RandomSortDataGenerator.missing(mutated.missing()));, +            mutated.order(RandomSortDataGenerator.order(mutated.order()));, +++ b/core/src/test/java/org/elasticsearch/search/sort/GeoDistanceSortBuilderTests.java, +            result.order(RandomSortDataGenerator.order(null));, +            result.setNestedFilter(RandomSortDataGenerator.nestedFilter(result.getNestedFilter()));, +            result.setNestedPath(RandomSortDataGenerator.randomAscii(result.getNestedPath()));, +            result.order(RandomSortDataGenerator.order(original.order()));, +            result.setNestedFilter(RandomSortDataGenerator.nestedFilter(original.getNestedFilter()));, +            result.setNestedPath(RandomSortDataGenerator.randomAscii(original.getNestedPath()));, +++ b/core/src/test/java/org/elasticsearch/search/sort/FieldSortBuilderTests.java, +    public static FieldSortBuilder randomFieldSortBuilder() {, +            builder.order(RandomSortDataGenerator.order(null));, +            builder.missing(RandomSortDataGenerator.missing(builder.missing()));, +            builder.unmappedType(RandomSortDataGenerator.randomAscii(builder.unmappedType()));, +            builder.sortMode(RandomSortDataGenerator.mode(builder.sortMode()));, +            builder.setNestedFilter(RandomSortDataGenerator.nestedFilter(builder.getNestedFilter()));, +            builder.setNestedPath(RandomSortDataGenerator.randomAscii(builder.getNestedPath()));, +            mutated.setNestedPath(RandomSortDataGenerator.randomAscii(mutated.getNestedPath()));, +            mutated.setNestedFilter(RandomSortDataGenerator.nestedFilter(mutated.getNestedFilter()));, +            mutated.sortMode(RandomSortDataGenerator.mode(mutated.sortMode()));, +            mutated.unmappedType(RandomSortDataGenerator.randomAscii(mutated.unmappedType()));, +            mutated.missing(RandomSortDataGenerator.missing(mutated.missing()));, +            mutated.order(RandomSortDataGenerator.order(mutated.order()));, +++ b/core/src/test/java/org/elasticsearch/search/sort/GeoDistanceSortBuilderTests.java, +            result.order(RandomSortDataGenerator.order(null));, +            result.setNestedFilter(RandomSortDataGenerator.nestedFilter(result.getNestedFilter()));, +            result.setNestedPath(RandomSortDataGenerator.randomAscii(result.getNestedPath()));, +            result.order(RandomSortDataGenerator.order(original.order()));, +            result.setNestedFilter(RandomSortDataGenerator.nestedFilter(original.getNestedFilter()));, +            result.setNestedPath(RandomSortDataGenerator.randomAscii(original.getNestedPath()));, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/search/sort/FieldSortBuilderTests.java, +    public static FieldSortBuilder randomFieldSortBuilder() {, +            builder.order(RandomSortDataGenerator.order(null));, +            builder.missing(RandomSortDataGenerator.missing(builder.missing()));, +            builder.unmappedType(RandomSortDataGenerator.randomAscii(builder.unmappedType()));, +            builder.sortMode(RandomSortDataGenerator.mode(builder.sortMode()));, +            builder.setNestedFilter(RandomSortDataGenerator.nestedFilter(builder.getNestedFilter()));, +            builder.setNestedPath(RandomSortDataGenerator.randomAscii(builder.getNestedPath()));, +            mutated.setNestedPath(RandomSortDataGenerator.randomAscii(mutated.getNestedPath()));, +            mutated.setNestedFilter(RandomSortDataGenerator.nestedFilter(mutated.getNestedFilter()));, +            mutated.sortMode(RandomSortDataGenerator.mode(mutated.sortMode()));, +            mutated.unmappedType(RandomSortDataGenerator.randomAscii(mutated.unmappedType()));, +            mutated.missing(RandomSortDataGenerator.missing(mutated.missing()));, +            mutated.order(RandomSortDataGenerator.order(mutated.order()));, +++ b/core/src/test/java/org/elasticsearch/search/sort/GeoDistanceSortBuilderTests.java, +            result.order(RandomSortDataGenerator.order(null));, +            result.setNestedFilter(RandomSortDataGenerator.nestedFilter(result.getNestedFilter()));, +            result.setNestedPath(RandomSortDataGenerator.randomAscii(result.getNestedPath()));, +            result.order(RandomSortDataGenerator.order(original.order()));, +            result.setNestedFilter(RandomSortDataGenerator.nestedFilter(original.getNestedFilter()));, +            result.setNestedPath(RandomSortDataGenerator.randomAscii(original.getNestedPath()));, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/search/sort/RandomSortDataGenerator.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.search.sort;]