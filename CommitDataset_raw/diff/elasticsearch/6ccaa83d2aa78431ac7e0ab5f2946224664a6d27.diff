[+++ b/plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsRepository.java, +                "Invalid scheme [%s] specified in uri [%s]; only 'hdfs' uri allowed for hdfs snapshot/restore",, +                uri.getScheme(),, +                uriSetting));, +        logger.debug("Using file-system [{}] for URI [{}], path [{}]",, +            fileContext.getDefaultFileSystem(),, +            fileContext.getDefaultFileSystem().getUri(),, +            path);, +++ b/plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsRepository.java, +                "Invalid scheme [%s] specified in uri [%s]; only 'hdfs' uri allowed for hdfs snapshot/restore",, +                uri.getScheme(),, +                uriSetting));, +        logger.debug("Using file-system [{}] for URI [{}], path [{}]",, +            fileContext.getDefaultFileSystem(),, +            fileContext.getDefaultFileSystem().getUri(),, +            path);, +++ b/plugins/repository-hdfs/src/test/java/org/elasticsearch/repositories/hdfs/HdfsTests.java, +        CreateSnapshotResponse createSnapshotResponse = client.admin(), +            .cluster(), +            .prepareCreateSnapshot("test-repo", "test-snap"), +            .setWaitForCompletion(true), +            .setIndices("test-idx-*", "-test-idx-3"), +            .get();, +        assertThat(createSnapshotResponse.getSnapshotInfo().successfulShards(),, +            equalTo(createSnapshotResponse.getSnapshotInfo().totalShards()));, +        assertThat(client.admin(), +            .cluster(), +            .prepareGetSnapshots("test-repo"), +            .setSnapshots("test-snap"), +            .get(), +            .getSnapshots(), +            .get(0), +            .state(),, +            equalTo(SnapshotState.SUCCESS));, +        RestoreSnapshotResponse restoreSnapshotResponse = client.admin(), +            .cluster(), +            .prepareRestoreSnapshot("test-repo", "test-snap"), +            .setWaitForCompletion(true), +            .execute(), +            .actionGet();, +        restoreSnapshotResponse = client.admin(), +            .cluster(), +            .prepareRestoreSnapshot("test-repo", "test-snap"), +            .setWaitForCompletion(true), +            .setIndices("test-idx-*", "-test-idx-2"), +            .execute(), +            .actionGet();]