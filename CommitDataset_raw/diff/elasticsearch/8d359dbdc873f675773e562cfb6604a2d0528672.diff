[+++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +            null, defaultPipeline, true, request.getXContentType());, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +            null, defaultPipeline, true, request.getXContentType());, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorIT.java, +                processor.add(data, globalIndex, globalType, globalPipeline, XContentType.JSON);, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +            null, defaultPipeline, true, request.getXContentType());, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorIT.java, +                processor.add(data, globalIndex, globalType, globalPipeline, XContentType.JSON);, +++ b/server/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        internalAdd(request);, +    private synchronized void internalAdd(DocWriteRequest<?> request) {, +        bulkRequest.add(request);, +        return add(data, defaultIndex, defaultType, null, xContentType);, +                                          @Nullable String defaultPipeline,, +        bulkRequest.add(data, defaultIndex, defaultType, null, null, defaultPipeline, true, xContentType);, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +            null, defaultPipeline, true, request.getXContentType());, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorIT.java, +                processor.add(data, globalIndex, globalType, globalPipeline, XContentType.JSON);, +++ b/server/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        internalAdd(request);, +    private synchronized void internalAdd(DocWriteRequest<?> request) {, +        bulkRequest.add(request);, +        return add(data, defaultIndex, defaultType, null, xContentType);, +                                          @Nullable String defaultPipeline,, +        bulkRequest.add(data, defaultIndex, defaultType, null, null, defaultPipeline, true, xContentType);, +++ b/server/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +    public BulkRequest add(DocWriteRequest<?> request) {, +            add((IndexRequest) request);, +            add((DeleteRequest) request);, +            add((UpdateRequest) request);, +        return internalAdd(request);, +    BulkRequest internalAdd(IndexRequest request) {, +        return internalAdd(request);, +    BulkRequest internalAdd(UpdateRequest request) {, +        return add(data, defaultIndex, defaultType, null, null, null, true, xContentType);, +        return add(data, defaultIndex, MapperService.SINGLE_MAPPING_NAME, null, null, null, true, xContentType);, +        return add(data, defaultIndex, defaultType, null, null, null, allowExplicitIndex, xContentType);, +        return add(data, defaultIndex, MapperService.SINGLE_MAPPING_NAME, null, null, null, allowExplicitIndex, xContentType);, +            @Nullable String defaultPipeline, boolean allowExplicitIndex,, +                defaultPipeline, allowExplicitIndex, xContentType);, +     * @deprecated use {@link #add(BytesReference, String, String, FetchSourceContext, String, boolean, XContentType)} instead, +                           @Nullable String defaultPipeline, boolean allowExplicitIndex,, +        new BulkRequestParser(true).parse(data, defaultIndex, defaultType, routing, defaultFetchSourceContext, pipeline,, +                allowExplicitIndex, xContentType, this::internalAdd, this::internalAdd, this::add);, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +            null, defaultPipeline, true, request.getXContentType());, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorIT.java, +                processor.add(data, globalIndex, globalType, globalPipeline, XContentType.JSON);, +++ b/server/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        internalAdd(request);, +    private synchronized void internalAdd(DocWriteRequest<?> request) {, +        bulkRequest.add(request);, +        return add(data, defaultIndex, defaultType, null, xContentType);, +                                          @Nullable String defaultPipeline,, +        bulkRequest.add(data, defaultIndex, defaultType, null, null, defaultPipeline, true, xContentType);, +++ b/server/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +    public BulkRequest add(DocWriteRequest<?> request) {, +            add((IndexRequest) request);, +            add((DeleteRequest) request);, +            add((UpdateRequest) request);, +        return internalAdd(request);, +    BulkRequest internalAdd(IndexRequest request) {, +        return internalAdd(request);, +    BulkRequest internalAdd(UpdateRequest request) {, +        return add(data, defaultIndex, defaultType, null, null, null, true, xContentType);, +        return add(data, defaultIndex, MapperService.SINGLE_MAPPING_NAME, null, null, null, true, xContentType);, +        return add(data, defaultIndex, defaultType, null, null, null, allowExplicitIndex, xContentType);, +        return add(data, defaultIndex, MapperService.SINGLE_MAPPING_NAME, null, null, null, allowExplicitIndex, xContentType);, +            @Nullable String defaultPipeline, boolean allowExplicitIndex,, +                defaultPipeline, allowExplicitIndex, xContentType);, +     * @deprecated use {@link #add(BytesReference, String, String, FetchSourceContext, String, boolean, XContentType)} instead, +                           @Nullable String defaultPipeline, boolean allowExplicitIndex,, +        new BulkRequestParser(true).parse(data, defaultIndex, defaultType, routing, defaultFetchSourceContext, pipeline,, +                allowExplicitIndex, xContentType, this::internalAdd, this::internalAdd, this::add);, +++ b/server/src/main/java/org/elasticsearch/action/bulk/BulkRequestParser.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.action.bulk;, +, +import org.apache.logging.log4j.LogManager;]