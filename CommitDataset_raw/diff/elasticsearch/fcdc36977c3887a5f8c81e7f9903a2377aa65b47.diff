[+++ b/src/main/java/org/elasticsearch/action/search/MultiSearchResponse.java, +                out.writeBoolean(false);, +++ b/src/main/java/org/elasticsearch/action/search/MultiSearchResponse.java, +                out.writeBoolean(false);, +++ b/src/test/java/org/elasticsearch/test/integration/search/basic/TransportTwoNodesSearchTests.java, +import org.elasticsearch.action.search.MultiSearchResponse;, +import org.elasticsearch.index.query.QueryBuilders;, +    @Test, +    public void testFailedMultiSearchWithWrongQuery() throws Exception {, +        logger.info("Start Testing failed multi search with a wrong query");, +, +        MultiSearchResponse response = client.prepareMultiSearch(), +                // Add custom score query with missing script, +                .add(client.prepareSearch("test").setQuery(QueryBuilders.customScoreQuery(QueryBuilders.termQuery("nid", 1)))), +                .add(client.prepareSearch("test").setQuery(QueryBuilders.termQuery("nid", 2))), +                .add(client.prepareSearch("test").setQuery(QueryBuilders.matchAllQuery())), +                .execute().actionGet();, +        assertThat(response.responses().length, equalTo(3));, +        assertThat(response.responses()[0].failureMessage(), notNullValue());, +, +        assertThat(response.responses()[1].failureMessage(), nullValue());, +        assertThat(response.responses()[1].getResponse().hits().hits().length, equalTo(1));, +, +        assertThat(response.responses()[2].failureMessage(), nullValue());, +        assertThat(response.responses()[2].getResponse().hits().hits().length, equalTo(10));, +, +        logger.info("Done Testing failed search");, +    }, +]