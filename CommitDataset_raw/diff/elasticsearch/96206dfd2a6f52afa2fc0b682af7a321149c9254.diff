[+++ b/core/src/main/java/org/elasticsearch/index/store/Store.java, +            } else if (writtenBytes > checksumPosition) { // we are writing parts of the checksum...., +                if (actualChecksum == null) {, +                    assert writtenBytes <= checksumPosition;, +                    final int bytesToWrite = (int) (checksumPosition - writtenBytes);, +                    out.writeBytes(b, offset, bytesToWrite);, +                    readAndCompareChecksum();, +                    offset += bytesToWrite;, +                    length -= bytesToWrite;, +                    writtenBytes += bytesToWrite;, +                }, +                for (int i = 0; i < length; i++) {, +, +++ b/core/src/main/java/org/elasticsearch/index/store/Store.java, +            } else if (writtenBytes > checksumPosition) { // we are writing parts of the checksum...., +                if (actualChecksum == null) {, +                    assert writtenBytes <= checksumPosition;, +                    final int bytesToWrite = (int) (checksumPosition - writtenBytes);, +                    out.writeBytes(b, offset, bytesToWrite);, +                    readAndCompareChecksum();, +                    offset += bytesToWrite;, +                    length -= bytesToWrite;, +                    writtenBytes += bytesToWrite;, +                }, +                for (int i = 0; i < length; i++) {, +, +++ b/core/src/test/java/org/elasticsearch/index/query/HasChildQueryBuilderTests.java, +        String query = "{\n" +, +                "  \"has_child\" : {\n" +, +                "    \"query\" : {\n" +, +                "      \"range\" : {\n" +, +                "        \"mapped_string\" : {\n" +, +                "          \"from\" : \"agJhRET\",\n" +, +                "          \"to\" : \"zvqIq\",\n" +, +                "          \"include_lower\" : true,\n" +, +                "          \"include_upper\" : true,\n" +, +                "          \"boost\" : 1.0\n" +, +                "        }\n" +, +                "      }\n" +, +                "    },\n" +, +                "    \"child_type\" : \"child\",\n" +, +                "    \"score_mode\" : \"avg\",\n" +, +                "    \"min_children\" : 883170873,\n" +, +                "    \"max_children\" : 1217235442,\n" +, +                "    \"boost\" : 2.0,\n" +, +                "    \"_name\" : \"WNzYMJKRwePuRBh\",\n" +, +                "    \"inner_hits\" : {\n" +, +                "      \"name\" : \"inner_hits_name\",\n" +, +                "      \"size\" : 100,\n" +, +                "      \"sort\" : [ {\n" +, +                "        \"mapped_string\" : {\n" +, +                "          \"order\" : \"asc\"\n" +, +                "        }\n" +, +                "      } ]\n" +, +                "    }\n" +, +                "  }\n" +, +                "}";, +++ b/core/src/main/java/org/elasticsearch/index/store/Store.java, +            } else if (writtenBytes > checksumPosition) { // we are writing parts of the checksum...., +                if (actualChecksum == null) {, +                    assert writtenBytes <= checksumPosition;, +                    final int bytesToWrite = (int) (checksumPosition - writtenBytes);, +                    out.writeBytes(b, offset, bytesToWrite);, +                    readAndCompareChecksum();, +                    offset += bytesToWrite;, +                    length -= bytesToWrite;, +                    writtenBytes += bytesToWrite;, +                }, +                for (int i = 0; i < length; i++) {, +, +++ b/core/src/test/java/org/elasticsearch/index/query/HasChildQueryBuilderTests.java, +        String query = "{\n" +, +                "  \"has_child\" : {\n" +, +                "    \"query\" : {\n" +, +                "      \"range\" : {\n" +, +                "        \"mapped_string\" : {\n" +, +                "          \"from\" : \"agJhRET\",\n" +, +                "          \"to\" : \"zvqIq\",\n" +, +                "          \"include_lower\" : true,\n" +, +                "          \"include_upper\" : true,\n" +, +                "          \"boost\" : 1.0\n" +, +                "        }\n" +, +                "      }\n" +, +                "    },\n" +, +                "    \"child_type\" : \"child\",\n" +, +                "    \"score_mode\" : \"avg\",\n" +, +                "    \"min_children\" : 883170873,\n" +, +                "    \"max_children\" : 1217235442,\n" +, +                "    \"boost\" : 2.0,\n" +, +                "    \"_name\" : \"WNzYMJKRwePuRBh\",\n" +, +                "    \"inner_hits\" : {\n" +, +                "      \"name\" : \"inner_hits_name\",\n" +, +                "      \"size\" : 100,\n" +, +                "      \"sort\" : [ {\n" +, +                "        \"mapped_string\" : {\n" +, +                "          \"order\" : \"asc\"\n" +, +                "        }\n" +, +                "      } ]\n" +, +                "    }\n" +, +                "  }\n" +]