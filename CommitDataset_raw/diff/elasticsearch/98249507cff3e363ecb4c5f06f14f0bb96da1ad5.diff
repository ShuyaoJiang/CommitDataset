[+++ b/core/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +    private final Index index;, +        this.index = indexSettings.getIndex();, +            indexLogger.warn("{}", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));, +            indexLogger.info("{}", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));, +            indexLogger.debug("{}", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));, +            indexLogger.trace("{}", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));, +        private final Index index;, +        SlowLogParsedDocumentPrinter(Index index, ParsedDocument doc, long tookInNanos, boolean reformat, int maxSourceCharsToLog) {, +            this.index = index;, +            sb.append(index).append(" ");, +++ b/core/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +    private final Index index;, +        this.index = indexSettings.getIndex();, +            indexLogger.warn("{}", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));, +            indexLogger.info("{}", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));, +            indexLogger.debug("{}", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));, +            indexLogger.trace("{}", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));, +        private final Index index;, +        SlowLogParsedDocumentPrinter(Index index, ParsedDocument doc, long tookInNanos, boolean reformat, int maxSourceCharsToLog) {, +            this.index = index;, +            sb.append(index).append(" ");, +++ b/core/src/main/java/org/elasticsearch/tribe/TribeService.java, +            Settings.Builder sb = Settings.builder().put(entry.getValue());, +            sb.put("node.name", settings.get("node.name") + "/" + entry.getKey());, +            sb.put(Environment.PATH_HOME_SETTING.getKey(), Environment.PATH_HOME_SETTING.get(settings)); // pass through ES home dir, +            if (Environment.PATH_CONF_SETTING.exists(settings)) {, +                sb.put(Environment.PATH_CONF_SETTING.getKey(), Environment.PATH_CONF_SETTING.get(settings));, +            }, +            sb.put(TRIBE_NAME_SETTING.getKey(), entry.getKey());, +            if (sb.get("http.enabled") == null) {, +                sb.put("http.enabled", false);, +            }, +            sb.put(Node.NODE_CLIENT_SETTING.getKey(), true);, +            nodes.add(new TribeClientNode(sb.build()));, +++ b/core/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +    private final Index index;, +        this.index = indexSettings.getIndex();, +            indexLogger.warn("{}", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));, +            indexLogger.info("{}", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));, +            indexLogger.debug("{}", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));, +            indexLogger.trace("{}", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));, +        private final Index index;, +        SlowLogParsedDocumentPrinter(Index index, ParsedDocument doc, long tookInNanos, boolean reformat, int maxSourceCharsToLog) {, +            this.index = index;, +            sb.append(index).append(" ");, +++ b/core/src/main/java/org/elasticsearch/tribe/TribeService.java, +            Settings.Builder sb = Settings.builder().put(entry.getValue());, +            sb.put("node.name", settings.get("node.name") + "/" + entry.getKey());, +            sb.put(Environment.PATH_HOME_SETTING.getKey(), Environment.PATH_HOME_SETTING.get(settings)); // pass through ES home dir, +            if (Environment.PATH_CONF_SETTING.exists(settings)) {, +                sb.put(Environment.PATH_CONF_SETTING.getKey(), Environment.PATH_CONF_SETTING.get(settings));, +            }, +            sb.put(TRIBE_NAME_SETTING.getKey(), entry.getKey());, +            if (sb.get("http.enabled") == null) {, +                sb.put("http.enabled", false);, +            }, +            sb.put(Node.NODE_CLIENT_SETTING.getKey(), true);, +            nodes.add(new TribeClientNode(sb.build()));, +++ b/core/src/test/java/org/elasticsearch/index/IndexingSlowLogTests.java, +import static org.hamcrest.Matchers.startsWith;, +        Index index = new Index("foo", "123");, +        SlowLogParsedDocumentPrinter p = new SlowLogParsedDocumentPrinter(index, pd, 10, true, 0);, +        p = new SlowLogParsedDocumentPrinter(index, pd, 10, true, Integer.MAX_VALUE);, +        p = new SlowLogParsedDocumentPrinter(index, pd, 10, true, 3);, +, +        // And you can truncate the source, +        p = new SlowLogParsedDocumentPrinter(index, pd, 10, true, 3);, +        assertThat(p.toString(), containsString("source[{\"f]"));, +        assertThat(p.toString(), startsWith("[foo/123] took"));, +++ b/core/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +    private final Index index;, +        this.index = indexSettings.getIndex();, +            indexLogger.warn("{}", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));, +            indexLogger.info("{}", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));, +            indexLogger.debug("{}", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));, +            indexLogger.trace("{}", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));, +        private final Index index;, +        SlowLogParsedDocumentPrinter(Index index, ParsedDocument doc, long tookInNanos, boolean reformat, int maxSourceCharsToLog) {, +            this.index = index;, +            sb.append(index).append(" ");, +++ b/core/src/main/java/org/elasticsearch/tribe/TribeService.java, +            Settings.Builder sb = Settings.builder().put(entry.getValue());, +            sb.put("node.name", settings.get("node.name") + "/" + entry.getKey());, +            sb.put(Environment.PATH_HOME_SETTING.getKey(), Environment.PATH_HOME_SETTING.get(settings)); // pass through ES home dir, +            if (Environment.PATH_CONF_SETTING.exists(settings)) {, +                sb.put(Environment.PATH_CONF_SETTING.getKey(), Environment.PATH_CONF_SETTING.get(settings));, +            }, +            sb.put(TRIBE_NAME_SETTING.getKey(), entry.getKey());, +            if (sb.get("http.enabled") == null) {, +                sb.put("http.enabled", false);, +            }, +            sb.put(Node.NODE_CLIENT_SETTING.getKey(), true);, +            nodes.add(new TribeClientNode(sb.build()));, +++ b/core/src/test/java/org/elasticsearch/index/IndexingSlowLogTests.java, +import static org.hamcrest.Matchers.startsWith;, +        Index index = new Index("foo", "123");, +        SlowLogParsedDocumentPrinter p = new SlowLogParsedDocumentPrinter(index, pd, 10, true, 0);, +        p = new SlowLogParsedDocumentPrinter(index, pd, 10, true, Integer.MAX_VALUE);, +        p = new SlowLogParsedDocumentPrinter(index, pd, 10, true, 3);]