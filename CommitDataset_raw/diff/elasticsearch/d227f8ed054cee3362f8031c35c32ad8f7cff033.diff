[+++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/38687" /* place a PR link here when committing bwc changes */, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/38687" /* place a PR link here when committing bwc changes */, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/SecurityFeatureSetUsage.java, +    private static final String TOKEN_SERVICE_XFIELD = "token_service";, +    private static final String API_KEY_SERVICE_XFIELD = "api_key_service";, +    private Map<String, Object> tokenServiceUsage;, +    private Map<String, Object> apiKeyServiceUsage;, +        if (in.getVersion().onOrAfter(Version.V_8_0_0)) { // TODO change the version to V_7_1_0 on backporting, +            tokenServiceUsage = in.readMap();, +            apiKeyServiceUsage = in.readMap();, +        }, +                                   Map<String, Object> ipFilterUsage, Map<String, Object> anonymousUsage,, +                                   Map<String, Object> tokenServiceUsage, Map<String, Object> apiKeyServiceUsage) {, +        this.tokenServiceUsage = tokenServiceUsage;, +        this.apiKeyServiceUsage = apiKeyServiceUsage;, +        out.writeMap(tokenServiceUsage);, +        out.writeMap(apiKeyServiceUsage);, +            builder.field(TOKEN_SERVICE_XFIELD, tokenServiceUsage);, +            builder.field(API_KEY_SERVICE_XFIELD, apiKeyServiceUsage);, +, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/38687" /* place a PR link here when committing bwc changes */, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/SecurityFeatureSetUsage.java, +    private static final String TOKEN_SERVICE_XFIELD = "token_service";, +    private static final String API_KEY_SERVICE_XFIELD = "api_key_service";, +    private Map<String, Object> tokenServiceUsage;, +    private Map<String, Object> apiKeyServiceUsage;, +        if (in.getVersion().onOrAfter(Version.V_8_0_0)) { // TODO change the version to V_7_1_0 on backporting, +            tokenServiceUsage = in.readMap();, +            apiKeyServiceUsage = in.readMap();, +        }, +                                   Map<String, Object> ipFilterUsage, Map<String, Object> anonymousUsage,, +                                   Map<String, Object> tokenServiceUsage, Map<String, Object> apiKeyServiceUsage) {, +        this.tokenServiceUsage = tokenServiceUsage;, +        this.apiKeyServiceUsage = apiKeyServiceUsage;, +        out.writeMap(tokenServiceUsage);, +        out.writeMap(apiKeyServiceUsage);, +            builder.field(TOKEN_SERVICE_XFIELD, tokenServiceUsage);, +            builder.field(API_KEY_SERVICE_XFIELD, apiKeyServiceUsage);, +, +++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/SecurityFeatureSet.java, +import static org.elasticsearch.xpack.core.XPackSettings.API_KEY_SERVICE_ENABLED_SETTING;, +import static org.elasticsearch.xpack.core.XPackSettings.TOKEN_SERVICE_ENABLED_SETTING;, +        Map<String, Object> tokenServiceUsage = tokenServiceUsage(settings);, +        Map<String, Object> apiKeyServiceUsage = apiKeyServiceUsage(settings);, +                listener.onResponse(new SecurityFeatureSetUsage(available(), enabled(), realmsUsageRef.get(), rolesUsageRef.get(),, +                        roleMappingUsageRef.get(), sslUsage, auditUsage, ipFilterUsage, anonymousUsage, tokenServiceUsage,, +                        apiKeyServiceUsage));, +    static Map<String, Object> tokenServiceUsage(Settings settings) {, +        return singletonMap("enabled", TOKEN_SERVICE_ENABLED_SETTING.get(settings));, +    }, +, +    static Map<String, Object> apiKeyServiceUsage(Settings settings) {, +        return singletonMap("enabled", API_KEY_SERVICE_ENABLED_SETTING.get(settings));, +    }, +, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/38687" /* place a PR link here when committing bwc changes */, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/SecurityFeatureSetUsage.java, +    private static final String TOKEN_SERVICE_XFIELD = "token_service";, +    private static final String API_KEY_SERVICE_XFIELD = "api_key_service";, +    private Map<String, Object> tokenServiceUsage;, +    private Map<String, Object> apiKeyServiceUsage;, +        if (in.getVersion().onOrAfter(Version.V_8_0_0)) { // TODO change the version to V_7_1_0 on backporting, +            tokenServiceUsage = in.readMap();, +            apiKeyServiceUsage = in.readMap();, +        }, +                                   Map<String, Object> ipFilterUsage, Map<String, Object> anonymousUsage,, +                                   Map<String, Object> tokenServiceUsage, Map<String, Object> apiKeyServiceUsage) {, +        this.tokenServiceUsage = tokenServiceUsage;, +        this.apiKeyServiceUsage = apiKeyServiceUsage;, +        out.writeMap(tokenServiceUsage);, +        out.writeMap(apiKeyServiceUsage);, +            builder.field(TOKEN_SERVICE_XFIELD, tokenServiceUsage);, +            builder.field(API_KEY_SERVICE_XFIELD, apiKeyServiceUsage);, +, +++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/SecurityFeatureSet.java, +import static org.elasticsearch.xpack.core.XPackSettings.API_KEY_SERVICE_ENABLED_SETTING;, +import static org.elasticsearch.xpack.core.XPackSettings.TOKEN_SERVICE_ENABLED_SETTING;, +        Map<String, Object> tokenServiceUsage = tokenServiceUsage(settings);, +        Map<String, Object> apiKeyServiceUsage = apiKeyServiceUsage(settings);, +                listener.onResponse(new SecurityFeatureSetUsage(available(), enabled(), realmsUsageRef.get(), rolesUsageRef.get(),, +                        roleMappingUsageRef.get(), sslUsage, auditUsage, ipFilterUsage, anonymousUsage, tokenServiceUsage,, +                        apiKeyServiceUsage));, +    static Map<String, Object> tokenServiceUsage(Settings settings) {, +        return singletonMap("enabled", TOKEN_SERVICE_ENABLED_SETTING.get(settings));, +    }, +, +    static Map<String, Object> apiKeyServiceUsage(Settings settings) {, +        return singletonMap("enabled", API_KEY_SERVICE_ENABLED_SETTING.get(settings));, +    }, +, +++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/SecurityFeatureSetTests.java, +]