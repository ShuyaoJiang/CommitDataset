[+++ b/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +            Engine.Searcher searcher = indexShard.acquireSearcher("indices_status");, +++ b/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +            Engine.Searcher searcher = indexShard.acquireSearcher("indices_status");, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +                    null, indexShard.acquireSearcher("validate_query"), indexService, indexShard,, +++ b/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +            Engine.Searcher searcher = indexShard.acquireSearcher("indices_status");, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +                    null, indexShard.acquireSearcher("validate_query"), indexService, indexShard,, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +                shardTarget, indexShard.acquireSearcher("count"), indexService, indexShard,, +++ b/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +            Engine.Searcher searcher = indexShard.acquireSearcher("indices_status");, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +                    null, indexShard.acquireSearcher("validate_query"), indexService, indexShard,, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +                shardTarget, indexShard.acquireSearcher("count"), indexService, indexShard,, +++ b/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +        final Engine.Searcher searcher = indexShard.acquireSearcher("suggest");, +++ b/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +            Engine.Searcher searcher = indexShard.acquireSearcher("indices_status");, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +                    null, indexShard.acquireSearcher("validate_query"), indexService, indexShard,, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +                shardTarget, indexShard.acquireSearcher("count"), indexService, indexShard,, +++ b/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +        final Engine.Searcher searcher = indexShard.acquireSearcher("suggest");, +++ b/src/main/java/org/elasticsearch/index/engine/Engine.java, +     * Returns a new searcher instance. The consumer of this, +     * safe manner, preferably in a try/finally block., +    Searcher acquireSearcher(String source) throws EngineException;, +        /**, +         * The source that caused this searcher to be acquired., +         */, +        String source();, +, +        private final String source;, +        public SimpleSearcher(String source, IndexSearcher searcher) {, +            this.source = source;, +        public String source() {, +            return this.source();, +        }, +, +        @Override, +++ b/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +            Engine.Searcher searcher = indexShard.acquireSearcher("indices_status");, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +                    null, indexShard.acquireSearcher("validate_query"), indexService, indexShard,, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +                shardTarget, indexShard.acquireSearcher("count"), indexService, indexShard,, +++ b/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +        final Engine.Searcher searcher = indexShard.acquireSearcher("suggest");, +++ b/src/main/java/org/elasticsearch/index/engine/Engine.java, +     * Returns a new searcher instance. The consumer of this, +     * safe manner, preferably in a try/finally block., +    Searcher acquireSearcher(String source) throws EngineException;, +        /**, +         * The source that caused this searcher to be acquired., +         */, +        String source();, +, +        private final String source;, +        public SimpleSearcher(String source, IndexSearcher searcher) {, +            this.source = source;, +        public String source() {, +            return this.source();, +        }, +, +        @Override, +++ b/src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java, +            Searcher searcher = acquireSearcher("get");, +    public final Searcher acquireSearcher(String source) throws EngineException {, +            return newSearcher(source, searcher, manager);, +            logger.error("failed to acquire searcher, source {}", ex, source);, +    protected Searcher newSearcher(String source, IndexSearcher searcher, SearcherManager manager) {, +        return new RobinSearcher(source, searcher, manager);, +            Searcher searcher = acquireSearcher("segments");, +        Searcher searcher = acquireSearcher("load_version");, +        private final String source;, +        private RobinSearcher(String source, IndexSearcher searcher, SearcherManager manager) {, +            this.source = source;, +        public String source() {, +            return this.source;, +        }, +, +        @Override, +                        currentSearcher = acquireSearcher("search_factory");, +                                new SimpleSearcher("warmer", searcher),, +                                new SimpleSearcher("warmer", newSearcher));, +++ b/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +            Engine.Searcher searcher = indexShard.acquireSearcher("indices_status");, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +                    null, indexShard.acquireSearcher("validate_query"), indexService, indexShard,, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +                shardTarget, indexShard.acquireSearcher("count"), indexService, indexShard,, +++ b/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +        final Engine.Searcher searcher = indexShard.acquireSearcher("suggest");, +++ b/src/main/java/org/elasticsearch/index/engine/Engine.java, +     * Returns a new searcher instance. The consumer of this]