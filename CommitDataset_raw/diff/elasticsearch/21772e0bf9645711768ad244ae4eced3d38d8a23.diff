[+++ b/src/main/java/org/elasticsearch/index/fieldvisitor/FieldsVisitor.java, +    void addValue(String name, Object value) {, +++ b/src/main/java/org/elasticsearch/index/fieldvisitor/FieldsVisitor.java, +    void addValue(String name, Object value) {, +++ b/src/main/java/org/elasticsearch/index/fieldvisitor/SingleFieldsVisitor.java, +import org.elasticsearch.index.mapper.internal.IdFieldMapper;, +import org.elasticsearch.index.mapper.internal.TypeFieldMapper;, +import org.elasticsearch.index.mapper.internal.UidFieldMapper;, +        if (fieldInfo.name.equals(UidFieldMapper.NAME)) {, +            if (TypeFieldMapper.NAME.equals(field) || IdFieldMapper.NAME.equals(field)) {, +                return Status.YES;, +            }, +        }, +        return Status.NO;, +        if (uid != null) {, +            switch (field) {, +                case UidFieldMapper.NAME: addValue(field, uid.toString());, +                case IdFieldMapper.NAME: addValue(field, uid.id());, +                case TypeFieldMapper.NAME: addValue(field, uid.type());, +            }, +        }, +, +++ b/src/main/java/org/elasticsearch/index/fieldvisitor/FieldsVisitor.java, +    void addValue(String name, Object value) {, +++ b/src/main/java/org/elasticsearch/index/fieldvisitor/SingleFieldsVisitor.java, +import org.elasticsearch.index.mapper.internal.IdFieldMapper;, +import org.elasticsearch.index.mapper.internal.TypeFieldMapper;, +import org.elasticsearch.index.mapper.internal.UidFieldMapper;, +        if (fieldInfo.name.equals(UidFieldMapper.NAME)) {, +            if (TypeFieldMapper.NAME.equals(field) || IdFieldMapper.NAME.equals(field)) {, +                return Status.YES;, +            }, +        }, +        return Status.NO;, +        if (uid != null) {, +            switch (field) {, +                case UidFieldMapper.NAME: addValue(field, uid.toString());, +                case IdFieldMapper.NAME: addValue(field, uid.id());, +                case TypeFieldMapper.NAME: addValue(field, uid.type());, +            }, +        }, +, +++ b/src/test/java/org/elasticsearch/search/fields/SearchFieldsTests.java, +import org.elasticsearch.action.index.IndexRequestBuilder;, +        assertThat(response.getHits().getAt(0).fields().size(), equalTo(3));, +        assertThat(response.getHits().getAt(1).fields().size(), equalTo(3));, +        assertThat(response.getHits().getAt(2).fields().size(), equalTo(3));, +        assertThat(response.getHits().getAt(0).fields().size(), equalTo(1));, +        assertThat(response.getHits().getAt(1).fields().size(), equalTo(1));, +        assertThat(response.getHits().getAt(2).fields().size(), equalTo(1));, +    public void testUidBasedScriptFields() throws Exception {, +        createIndex("test");, +        ensureYellow();, +, +        int numDocs = randomIntBetween(1, 30);, +        IndexRequestBuilder[] indexRequestBuilders = new IndexRequestBuilder[numDocs];, +        for (int i = 0; i < numDocs; i++) {, +            indexRequestBuilders[i] = client().prepareIndex("test", "type1", Integer.toString(i)), +                    .setSource(jsonBuilder().startObject().field("num1", i).endObject());, +        }, +        indexRandom(true, indexRequestBuilders);, +, +        SearchResponse response = client().prepareSearch(), +                .setQuery(matchAllQuery()).addSort("num1", SortOrder.ASC).setSize(numDocs), +                .addScriptField("uid", "_fields._uid.value").get();, +, +        assertNoFailures(response);, +, +        assertThat(response.getHits().totalHits(), equalTo((long)numDocs));, +        for (int i = 0; i < numDocs; i++) {, +            assertThat(response.getHits().getAt(i).id(), equalTo(Integer.toString(i)));, +            assertThat(response.getHits().getAt(i).fields().size(), equalTo(1));, +            assertThat((String)response.getHits().getAt(i).fields().get("uid").value(), equalTo("type1#" + Integer.toString(i)));, +        }, +, +        response = client().prepareSearch(), +                .setQuery(matchAllQuery()).addSort("num1", SortOrder.ASC).setSize(numDocs), +                .addScriptField("id", "_fields._id.value").get();, +, +        assertNoFailures(response);, +, +        assertThat(response.getHits().totalHits(), equalTo((long)numDocs));, +        for (int i = 0; i < numDocs; i++) {, +            assertThat(response.getHits().getAt(i).id(), equalTo(Integer.toString(i)));, +            assertThat(response.getHits().getAt(i).fields().size(), equalTo(1));, +            assertThat((String)response.getHits().getAt(i).fields().get("id").value(), equalTo(Integer.toString(i)));, +        }, +, +        response = client().prepareSearch(), +                .setQuery(matchAllQuery()).addSort("num1", SortOrder.ASC).setSize(numDocs), +                .addScriptField("type", "_fields._type.value").get();, +, +        assertNoFailures(response);, +, +        assertThat(response.getHits().totalHits(), equalTo((long)numDocs));, +        for (int i = 0; i < numDocs; i++) {, +            assertThat(response.getHits().getAt(i).id(), equalTo(Integer.toString(i)));, +            assertThat(response.getHits().getAt(i).fields().size(), equalTo(1));, +            assertThat((String)response.getHits().getAt(i).fields().get("type").value(), equalTo("type1"));, +        }]