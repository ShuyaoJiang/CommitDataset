[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java, +import org.elasticsearch.cluster.TimeoutClusterStateUpdateTask;, +import org.elasticsearch.cluster.metadata.ProcessClusterEventTimeoutException;, +import org.elasticsearch.common.unit.TimeValue;, +        clusterService.submitStateUpdateTask("cluster_reroute (api)", Priority.URGENT, new TimeoutClusterStateUpdateTask() {, +, +            @Override, +            public TimeValue timeout() {, +                return request.masterNodeTimeout();, +            }, +, +            @Override, +            public void onTimeout(TimeValue timeout, String source) {, +                failureRef.set(new ProcessClusterEventTimeoutException(timeout, source));, +                latch.countDown();, +            }, +, +                } catch (Throwable e) {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java, +import org.elasticsearch.cluster.TimeoutClusterStateUpdateTask;, +import org.elasticsearch.cluster.metadata.ProcessClusterEventTimeoutException;, +import org.elasticsearch.common.unit.TimeValue;, +        clusterService.submitStateUpdateTask("cluster_reroute (api)", Priority.URGENT, new TimeoutClusterStateUpdateTask() {, +, +            @Override, +            public TimeValue timeout() {, +                return request.masterNodeTimeout();, +            }, +, +            @Override, +            public void onTimeout(TimeValue timeout, String source) {, +                failureRef.set(new ProcessClusterEventTimeoutException(timeout, source));, +                latch.countDown();, +            }, +, +                } catch (Throwable e) {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.TimeoutClusterStateUpdateTask;, +import org.elasticsearch.cluster.metadata.ProcessClusterEventTimeoutException;, +import org.elasticsearch.common.unit.TimeValue;, +        clusterService.submitStateUpdateTask("cluster_update_settings", Priority.URGENT, new TimeoutClusterStateUpdateTask() {, +, +            @Override, +            public TimeValue timeout() {, +                return request.masterNodeTimeout();, +            }, +, +            @Override, +            public void onTimeout(TimeValue timeout, String source) {, +                failureRef.set(new ProcessClusterEventTimeoutException(timeout, source));, +                latch.countDown();, +            }, +, +                } catch (Throwable e) {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java, +import org.elasticsearch.cluster.TimeoutClusterStateUpdateTask;, +import org.elasticsearch.cluster.metadata.ProcessClusterEventTimeoutException;, +import org.elasticsearch.common.unit.TimeValue;, +        clusterService.submitStateUpdateTask("cluster_reroute (api)", Priority.URGENT, new TimeoutClusterStateUpdateTask() {, +, +            @Override, +            public TimeValue timeout() {, +                return request.masterNodeTimeout();, +            }, +, +            @Override, +            public void onTimeout(TimeValue timeout, String source) {, +                failureRef.set(new ProcessClusterEventTimeoutException(timeout, source));, +                latch.countDown();, +            }, +, +                } catch (Throwable e) {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.TimeoutClusterStateUpdateTask;, +import org.elasticsearch.cluster.metadata.ProcessClusterEventTimeoutException;, +import org.elasticsearch.common.unit.TimeValue;, +        clusterService.submitStateUpdateTask("cluster_update_settings", Priority.URGENT, new TimeoutClusterStateUpdateTask() {, +, +            @Override, +            public TimeValue timeout() {, +                return request.masterNodeTimeout();, +            }, +, +            @Override, +            public void onTimeout(TimeValue timeout, String source) {, +                failureRef.set(new ProcessClusterEventTimeoutException(timeout, source));, +                latch.countDown();, +            }, +, +                } catch (Throwable e) {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/TransportIndicesAliasesAction.java, +        indexAliasesService.indicesAliases(new MetaDataIndexAliasesService.Request(request.aliasActions().toArray(new AliasAction[request.aliasActions().size()]), request.timeout()).masterTimeout(request.masterNodeTimeout()), new MetaDataIndexAliasesService.Listener() {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java, +import org.elasticsearch.cluster.TimeoutClusterStateUpdateTask;, +import org.elasticsearch.cluster.metadata.ProcessClusterEventTimeoutException;, +import org.elasticsearch.common.unit.TimeValue;, +        clusterService.submitStateUpdateTask("cluster_reroute (api)", Priority.URGENT, new TimeoutClusterStateUpdateTask() {, +, +            @Override, +            public TimeValue timeout() {]