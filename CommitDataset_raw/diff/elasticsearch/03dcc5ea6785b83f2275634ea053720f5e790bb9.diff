[+++ b/elasticsearch/x-pack/shield/src/main/java/org/elasticsearch/shield/Shield.java, +        final Map<String, String> settingsMap = settings.getAsMap();, +, +            // we passed all the checks now we need to copy in all of the shield settings, +            for (Map.Entry<String, String> entry : settingsMap.entrySet()) {, +                String key = entry.getKey();, +                if (key.startsWith("shield.")) {, +                    settingsBuilder.put(tribePrefix + key, entry.getValue());, +                }, +            }, +++ b/elasticsearch/x-pack/shield/src/main/java/org/elasticsearch/shield/Shield.java, +        final Map<String, String> settingsMap = settings.getAsMap();, +, +            // we passed all the checks now we need to copy in all of the shield settings, +            for (Map.Entry<String, String> entry : settingsMap.entrySet()) {, +                String key = entry.getKey();, +                if (key.startsWith("shield.")) {, +                    settingsBuilder.put(tribePrefix + key, entry.getValue());, +                }, +            }, +++ b/elasticsearch/x-pack/shield/src/test/java/org/elasticsearch/shield/ShieldPluginSettingsTests.java, +import org.elasticsearch.common.Strings;, +import static org.hamcrest.CoreMatchers.is;, +import static org.hamcrest.CoreMatchers.nullValue;, +, +    public void testShieldSettingsCopiedForTribeNodes() {, +        Settings settings = Settings.builder(), +                .put("tribe.t1.cluster.name", "non_existing"), +                .put("tribe.t2.cluster.name", "non_existing"), +                .put("shield.foo", "bar"), +                .put("shield.bar", "foo"), +                .putArray("shield.something.else.here", new String[] { "foo", "bar" }), +                .build();, +, +        Shield shield = new Shield(settings);, +        Settings additionalSettings = shield.additionalSettings();, +, +        assertThat(additionalSettings.get("shield.foo"), nullValue());, +        assertThat(additionalSettings.get("shield.bar"), nullValue());, +        assertThat(additionalSettings.getAsArray("shield.something.else.here"), is(Strings.EMPTY_ARRAY));, +        assertThat(additionalSettings.get("tribe.t1.shield.foo"), is("bar"));, +        assertThat(additionalSettings.get("tribe.t1.shield.bar"), is("foo"));, +        assertThat(additionalSettings.getAsArray("tribe.t1.shield.something.else.here"), arrayContaining("foo", "bar"));, +        assertThat(additionalSettings.get("tribe.t2.shield.foo"), is("bar"));, +        assertThat(additionalSettings.get("tribe.t2.shield.bar"), is("foo"));, +        assertThat(additionalSettings.getAsArray("tribe.t2.shield.something.else.here"), arrayContaining("foo", "bar"));, +    }]