[+++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        // install SM after natives, JNA can require strange permissions, +        setupSecurity(settings, environment);, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        // install SM after natives, JNA can require strange permissions, +        setupSecurity(settings, environment);, +++ b/src/main/java/org/elasticsearch/bootstrap/Security.java, +            //  all policy files are UTF-8:, +            //  https://docs.oracle.com/javase/7/docs/technotes/guides/security/PolicyFiles.html, +            try (Writer writer = new OutputStreamWriter(output, StandardCharsets.UTF_8)) {, +                writer.write(System.lineSeparator());, +                writer.write("grant {");, +                writer.write(System.lineSeparator());, +, +                // TODO: improve test infra so we can reduce permissions where read/write, +                // is not really needed..., +                addPath(writer, environment.homeFile(), "read,readlink,write,delete");, +                addPath(writer, environment.configFile(), "read,readlink,write,delete");, +                addPath(writer, environment.logsFile(), "read,readlink,write,delete");, +                addPath(writer, environment.pluginsFile(), "read,readlink,write,delete");, +                    addPath(writer, path, "read,readlink,write,delete");, +                    addPath(writer, path, "read,readlink,write,delete");, +, +                writer.write("};");, +                writer.write(System.lineSeparator());, +            }, +    static void addPath(Writer writer, Path path, String permissions) throws IOException {, +        // paths may not exist yet, +        writer.write("permission java.io.FilePermission \"" + encode(path) + "\", \"" + permissions + "\";");, +        writer.write("permission java.io.FilePermission \"" + encode(path) + "${/}-\", \"" + permissions + "\";");, +        return path.toString().replace("\\", "\\\\");, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        // install SM after natives, JNA can require strange permissions, +        setupSecurity(settings, environment);, +++ b/src/main/java/org/elasticsearch/bootstrap/Security.java, +            //  all policy files are UTF-8:, +            //  https://docs.oracle.com/javase/7/docs/technotes/guides/security/PolicyFiles.html, +            try (Writer writer = new OutputStreamWriter(output, StandardCharsets.UTF_8)) {, +                writer.write(System.lineSeparator());, +                writer.write("grant {");, +                writer.write(System.lineSeparator());, +, +                // TODO: improve test infra so we can reduce permissions where read/write, +                // is not really needed..., +                addPath(writer, environment.homeFile(), "read,readlink,write,delete");, +                addPath(writer, environment.configFile(), "read,readlink,write,delete");, +                addPath(writer, environment.logsFile(), "read,readlink,write,delete");, +                addPath(writer, environment.pluginsFile(), "read,readlink,write,delete");, +                    addPath(writer, path, "read,readlink,write,delete");, +                    addPath(writer, path, "read,readlink,write,delete");, +, +                writer.write("};");, +                writer.write(System.lineSeparator());, +            }, +    static void addPath(Writer writer, Path path, String permissions) throws IOException {, +        // paths may not exist yet, +        writer.write("permission java.io.FilePermission \"" + encode(path) + "\", \"" + permissions + "\";");, +        writer.write("permission java.io.FilePermission \"" + encode(path) + "${/}-\", \"" + permissions + "\";");, +        return path.toString().replace("\\", "\\\\");, +++ b/src/main/resources/org/elasticsearch/bootstrap/security.policy, +, +  // needed for testing access rules etc, +  permission java.security.SecurityPermission "createPolicy.JavaPolicy";, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        // install SM after natives, JNA can require strange permissions, +        setupSecurity(settings, environment);, +++ b/src/main/java/org/elasticsearch/bootstrap/Security.java, +            //  all policy files are UTF-8:, +            //  https://docs.oracle.com/javase/7/docs/technotes/guides/security/PolicyFiles.html, +            try (Writer writer = new OutputStreamWriter(output, StandardCharsets.UTF_8)) {, +                writer.write(System.lineSeparator());, +                writer.write("grant {");, +                writer.write(System.lineSeparator());, +, +                // TODO: improve test infra so we can reduce permissions where read/write, +                // is not really needed..., +                addPath(writer, environment.homeFile(), "read,readlink,write,delete");, +                addPath(writer, environment.configFile(), "read,readlink,write,delete");, +                addPath(writer, environment.logsFile(), "read,readlink,write,delete");, +                addPath(writer, environment.pluginsFile(), "read,readlink,write,delete");, +                    addPath(writer, path, "read,readlink,write,delete");, +                    addPath(writer, path, "read,readlink,write,delete");, +, +                writer.write("};");, +                writer.write(System.lineSeparator());, +            }, +    static void addPath(Writer writer, Path path, String permissions) throws IOException {, +        // paths may not exist yet, +        writer.write("permission java.io.FilePermission \"" + encode(path) + "\", \"" + permissions + "\";");, +        writer.write("permission java.io.FilePermission \"" + encode(path) + "${/}-\", \"" + permissions + "\";");, +        return path.toString().replace("\\", "\\\\");, +++ b/src/main/resources/org/elasticsearch/bootstrap/security.policy, +, +  // needed for testing access rules etc, +  permission java.security.SecurityPermission "createPolicy.JavaPolicy";, +++ b/src/test/java/org/elasticsearch/bootstrap/SecurityTests.java, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.env.Environment;, +import java.io.ByteArrayInputStream;]