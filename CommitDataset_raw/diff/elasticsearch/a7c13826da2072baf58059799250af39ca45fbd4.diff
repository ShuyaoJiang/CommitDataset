[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +    public int countWithState(ShardRoutingState state) {, +        int count = 0;, +        for (ShardRouting shard : this) {, +            if (state == shard.state()) {, +                count++;, +            }, +        }, +        return count;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +    public int countWithState(ShardRoutingState state) {, +        int count = 0;, +        for (ShardRouting shard : this) {, +            if (state == shard.state()) {, +                count++;, +            }, +        }, +        return count;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/service/IndexService.java, +import org.elasticsearch.index.store.IndexStore;, +    IndexStore store();, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +    public int countWithState(ShardRoutingState state) {, +        int count = 0;, +        for (ShardRouting shard : this) {, +            if (state == shard.state()) {, +                count++;, +            }, +        }, +        return count;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/service/IndexService.java, +import org.elasticsearch.index.store.IndexStore;, +    IndexStore store();, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/service/InternalIndexService.java, +    @Override public IndexStore store() {, +        return indexStore;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +    public int countWithState(ShardRoutingState state) {, +        int count = 0;, +        for (ShardRouting shard : this) {, +            if (state == shard.state()) {, +                count++;, +            }, +        }, +        return count;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/service/IndexService.java, +import org.elasticsearch.index.store.IndexStore;, +    IndexStore store();, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/service/InternalIndexService.java, +    @Override public IndexStore store() {, +        return indexStore;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/store/IndexStore.java, +     * Lists all unallocated stores., +     */, +    StoreFilesMetaData[] listUnallocatedStores() throws IOException;, +, +    void deleteUnallocated(ShardId shardId) throws IOException;, +, +    /**, +        private ShardId shardId;, +        public StoreFilesMetaData(boolean allocated, ShardId shardId, Map<String, StoreFileMetaData> files) {, +            this.shardId = shardId;, +        public ShardId shardId() {, +            return this.shardId;, +        }, +, +        public long totalSizeInBytes() {, +            long totalSizeInBytes = 0;, +            for (StoreFileMetaData file : this) {, +                totalSizeInBytes += file.sizeInBytes();, +            }, +            return totalSizeInBytes;, +        }, +, +            shardId = ShardId.readShardId(in);, +            shardId.writeTo(out);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +    public int countWithState(ShardRoutingState state) {, +        int count = 0;, +        for (ShardRouting shard : this) {, +            if (state == shard.state()) {, +                count++;, +            }, +        }, +        return count;]