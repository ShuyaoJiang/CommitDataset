[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    public XContentBuilder field(String name, byte[] value, int offset, int length) throws IOException {, +        field(name);, +        generator.writeBinary(value, offset, length);, +        return this;, +    }, +, +    public XContentBuilder value(byte[] value, int offset, int length) throws IOException {, +        if (value == null) {, +            return nullValue();, +        }, +        generator.writeBinary(value, offset, length);, +        return this;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    public XContentBuilder field(String name, byte[] value, int offset, int length) throws IOException {, +        field(name);, +        generator.writeBinary(value, offset, length);, +        return this;, +    }, +, +    public XContentBuilder value(byte[] value, int offset, int length) throws IOException {, +        if (value == null) {, +            return nullValue();, +        }, +        generator.writeBinary(value, offset, length);, +        return this;, +    }, +, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    public XContentBuilder field(String name, byte[] value, int offset, int length) throws IOException {, +        field(name);, +        generator.writeBinary(value, offset, length);, +        return this;, +    }, +, +    public XContentBuilder value(byte[] value, int offset, int length) throws IOException {, +        if (value == null) {, +            return nullValue();, +        }, +        generator.writeBinary(value, offset, length);, +        return this;, +    }, +, +++ /dev/null, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    public XContentBuilder field(String name, byte[] value, int offset, int length) throws IOException {, +        field(name);, +        generator.writeBinary(value, offset, length);, +        return this;, +    }, +, +    public XContentBuilder value(byte[] value, int offset, int length) throws IOException {, +        if (value == null) {, +            return nullValue();, +        }, +        generator.writeBinary(value, offset, length);, +        return this;, +    }, +, +++ /dev/null, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/QueryBuilders.java, +    /**, +     * A Query builder which allows building a query thanks to a JSON string or binary data., +     */, +    public static WrapperQueryBuilder wrapperQuery(String source) {, +        return new WrapperQueryBuilder(source);, +    }, +, +    /**, +     * A Query builder which allows building a query thanks to a JSON string or binary data., +     */, +    public static WrapperQueryBuilder wrapperQuery(byte[] source, int offset, int length) {, +        return new WrapperQueryBuilder(source, offset, length);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    public XContentBuilder field(String name, byte[] value, int offset, int length) throws IOException {, +        field(name);, +        generator.writeBinary(value, offset, length);, +        return this;, +    }, +, +    public XContentBuilder value(byte[] value, int offset, int length) throws IOException {, +        if (value == null) {, +            return nullValue();, +        }, +        generator.writeBinary(value, offset, length);, +        return this;, +    }, +, +++ /dev/null, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/QueryBuilders.java, +    /**, +     * A Query builder which allows building a query thanks to a JSON string or binary data., +     */, +    public static WrapperQueryBuilder wrapperQuery(String source) {]