[+++ b/core/src/main/java/org/elasticsearch/bootstrap/JarHell.java, +                            // for jar format, the separator is defined as /, +                            entry = entry.replace('/', '.').substring(0, entry.length() - 6);, +                // case for tests: where we have class files in the classpath, +                final Path root = PathUtils.get(url.toURI());, +                final String sep = root.getFileSystem().getSeparator();, +                Files.walkFileTree(root, new SimpleFileVisitor<Path>() {, +                        String entry = root.relativize(file).toString();, +                            // normalize with the os separator, +                            entry = entry.replace(sep, ".").substring(0,  entry.length() - 6);, +        if (clazz.startsWith("org.apache.log4j")) {, +        if (clazz.equals("org.joda.time.base.BaseDateTime")) {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JarHell.java, +                            // for jar format, the separator is defined as /, +                            entry = entry.replace('/', '.').substring(0, entry.length() - 6);, +                // case for tests: where we have class files in the classpath, +                final Path root = PathUtils.get(url.toURI());, +                final String sep = root.getFileSystem().getSeparator();, +                Files.walkFileTree(root, new SimpleFileVisitor<Path>() {, +                        String entry = root.relativize(file).toString();, +                            // normalize with the os separator, +                            entry = entry.replace(sep, ".").substring(0,  entry.length() - 6);, +        if (clazz.startsWith("org.apache.log4j")) {, +        if (clazz.equals("org.joda.time.base.BaseDateTime")) {, +++ b/plugins/cloud-azure/pom.xml, +            <exclusions>, +                <exclusion>, +                    <groupId>stax</groupId>, +                    <artifactId>stax-api</artifactId>, +                </exclusion>, +            </exclusions>, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JarHell.java, +                            // for jar format, the separator is defined as /, +                            entry = entry.replace('/', '.').substring(0, entry.length() - 6);, +                // case for tests: where we have class files in the classpath, +                final Path root = PathUtils.get(url.toURI());, +                final String sep = root.getFileSystem().getSeparator();, +                Files.walkFileTree(root, new SimpleFileVisitor<Path>() {, +                        String entry = root.relativize(file).toString();, +                            // normalize with the os separator, +                            entry = entry.replace(sep, ".").substring(0,  entry.length() - 6);, +        if (clazz.startsWith("org.apache.log4j")) {, +        if (clazz.equals("org.joda.time.base.BaseDateTime")) {, +++ b/plugins/cloud-azure/pom.xml, +            <exclusions>, +                <exclusion>, +                    <groupId>stax</groupId>, +                    <artifactId>stax-api</artifactId>, +                </exclusion>, +            </exclusions>, +++ b/plugins/cloud-gce/pom.xml, +          <exclusions>, +              <exclusion>, +                 <groupId>com.google.guava</groupId>, +                 <artifactId>guava-jdk5</artifactId>, +              </exclusion>, +          </exclusions>]