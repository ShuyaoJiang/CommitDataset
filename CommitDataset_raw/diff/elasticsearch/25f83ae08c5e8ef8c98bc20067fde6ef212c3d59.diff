[+++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.GetPrivilegesRequest;, +import org.elasticsearch.client.security.GetPrivilegesResponse;, +     * Synchronously get application privilege(s)., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html">, +     * the docs</a> for more., +     *, +     * @param request {@link GetPrivilegesRequest} with the application name and the privilege name., +     *                If no application name is provided, information about all privileges for all applications is retrieved., +     *                If no privilege name is provided, information about all privileges of the specified application is retrieved., +     * @param options the request options (e.g. headers), use, +     *                {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the get privileges call, +     * @throws IOException in case there is a problem sending the request or, +     *                     parsing back the response, +     */, +    public GetPrivilegesResponse getPrivileges(final GetPrivilegesRequest request, final RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::getPrivileges,, +            options, GetPrivilegesResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously get application privilege(s)., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html">, +     * the docs</a> for more., +     *, +     * @param request  {@link GetPrivilegesRequest} with the application name and the privilege name., +     *                 If no application name is provided, information about all privileges for all applications is retrieved., +     *                 If no privilege name is provided, information about all privileges of the specified application is retrieved., +     * @param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void getPrivilegesAsync(final GetPrivilegesRequest request, final RequestOptions options,, +                                   final ActionListener<GetPrivilegesResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::getPrivileges,, +            options, GetPrivilegesResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +     *, +     *, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.GetPrivilegesRequest;, +import org.elasticsearch.client.security.GetPrivilegesResponse;, +     * Synchronously get application privilege(s)., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html">, +     * the docs</a> for more., +     *, +     * @param request {@link GetPrivilegesRequest} with the application name and the privilege name., +     *                If no application name is provided, information about all privileges for all applications is retrieved., +     *                If no privilege name is provided, information about all privileges of the specified application is retrieved., +     * @param options the request options (e.g. headers), use, +     *                {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the get privileges call, +     * @throws IOException in case there is a problem sending the request or, +     *                     parsing back the response, +     */, +    public GetPrivilegesResponse getPrivileges(final GetPrivilegesRequest request, final RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::getPrivileges,, +            options, GetPrivilegesResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously get application privilege(s)., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html">, +     * the docs</a> for more., +     *, +     * @param request  {@link GetPrivilegesRequest} with the application name and the privilege name., +     *                 If no application name is provided, information about all privileges for all applications is retrieved., +     *                 If no privilege name is provided, information about all privileges of the specified application is retrieved., +     * @param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void getPrivilegesAsync(final GetPrivilegesRequest request, final RequestOptions options,, +                                   final ActionListener<GetPrivilegesResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::getPrivileges,, +            options, GetPrivilegesResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +     *, +     *, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityRequestConverters.java, +import org.elasticsearch.client.security.GetPrivilegesRequest;, +import org.elasticsearch.client.security.InvalidateTokenRequest;, +import org.elasticsearch.client.security.PutRoleMappingRequest;, +    static Request getPrivileges(GetPrivilegesRequest getPrivilegesRequest) {, +        String endpoint = new RequestConverters.EndpointBuilder(), +            .addPathPartAsIs("_xpack/security/privilege"), +            .addPathPart(getPrivilegesRequest.getApplicationName()), +            .addCommaSeparatedPathParts(getPrivilegesRequest.getPrivilegeNames())]