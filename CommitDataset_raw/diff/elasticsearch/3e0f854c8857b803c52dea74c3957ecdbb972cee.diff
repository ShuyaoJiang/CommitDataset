[+++ b/.idea/dictionaries/kimchy.xml, +      <w>ifconfig</w>, +      <w>mcast</w>, +++ b/.idea/dictionaries/kimchy.xml, +      <w>ifconfig</w>, +      <w>mcast</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/monitor/os/JmxOsProbe.java, +, +    @Override public String ifconfig() {, +        return "NA";, +    }, +++ b/.idea/dictionaries/kimchy.xml, +      <w>ifconfig</w>, +      <w>mcast</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/monitor/os/JmxOsProbe.java, +, +    @Override public String ifconfig() {, +        return "NA";, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/monitor/os/OsProbe.java, +, +    String ifconfig();, +++ b/.idea/dictionaries/kimchy.xml, +      <w>ifconfig</w>, +      <w>mcast</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/monitor/os/JmxOsProbe.java, +, +    @Override public String ifconfig() {, +        return "NA";, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/monitor/os/OsProbe.java, +, +    String ifconfig();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/monitor/os/OsService.java, +, +    public String ifconfig() {, +        return probe.ifconfig();, +    }, +++ b/.idea/dictionaries/kimchy.xml, +      <w>ifconfig</w>, +      <w>mcast</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/monitor/os/JmxOsProbe.java, +, +    @Override public String ifconfig() {, +        return "NA";, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/monitor/os/OsProbe.java, +, +    String ifconfig();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/monitor/os/OsService.java, +, +    public String ifconfig() {, +        return probe.ifconfig();, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/monitor/os/SigarOsProbe.java, +, +    @Override public String ifconfig() {, +        Sigar sigar = sigarService.sigar();, +        StringBuilder sb = new StringBuilder();, +        try {, +            for (String ifname : sigar.getNetInterfaceList()) {, +                NetInterfaceConfig ifconfig = null;, +                try {, +                    ifconfig = sigar.getNetInterfaceConfig(ifname);, +                } catch (SigarException e) {, +                    sb.append(ifname + "\t" + "Not Avaialbe [" + e.getMessage() + "]");, +                }, +                long flags = ifconfig.getFlags();, +, +                String hwaddr = "";, +                if (!NetFlags.NULL_HWADDR.equals(ifconfig.getHwaddr())) {, +                    hwaddr = " HWaddr " + ifconfig.getHwaddr();, +                }, +, +                if (!ifconfig.getName().equals(ifconfig.getDescription())) {, +                    sb.append(ifconfig.getDescription()).append('\n');, +                }, +, +                sb.append(ifconfig.getName() + "\t" + "Link encap:" + ifconfig.getType() + hwaddr).append('\n');, +, +                String ptp = "";, +                if ((flags & NetFlags.IFF_POINTOPOINT) > 0) {, +                    ptp = "  P-t-P:" + ifconfig.getDestination();, +                }, +, +                String bcast = "";, +                if ((flags & NetFlags.IFF_BROADCAST) > 0) {, +                    bcast = "  Bcast:" + ifconfig.getBroadcast();, +                }, +, +                sb.append("\t" +, +                        "inet addr:" + ifconfig.getAddress() +, +                        ptp + //unlikely, +                        bcast +, +                        "  Mask:" + ifconfig.getNetmask()).append('\n');, +, +                sb.append("\t" +, +                        NetFlags.getIfFlagsString(flags) +, +                        " MTU:" + ifconfig.getMtu() +, +                        "  Metric:" + ifconfig.getMetric()).append('\n');]