[+++ b/marvel/src/main/java/org/elasticsearch/marvel/MarvelPlugin.java, +import org.elasticsearch.marvel.agent.exporter.Exporters;, +        Exporters.registerDynamicSettings(module);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/MarvelPlugin.java, +import org.elasticsearch.marvel.agent.exporter.Exporters;, +        Exporters.registerDynamicSettings(module);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/AgentService.java, +import org.elasticsearch.marvel.agent.exporter.Exporters;, +    private final Exporters exporters;, +                        Set<Collector> collectors, Exporters exporters) {, +        this.exporters = exporters;, +        exporters.start();, +        exporters.stop();, +++ b/marvel/src/main/java/org/elasticsearch/marvel/MarvelPlugin.java, +import org.elasticsearch.marvel.agent.exporter.Exporters;, +        Exporters.registerDynamicSettings(module);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/AgentService.java, +import org.elasticsearch.marvel.agent.exporter.Exporters;, +    private final Exporters exporters;, +                        Set<Collector> collectors, Exporters exporters) {, +        this.exporters = exporters;, +        exporters.start();, +        exporters.stop();, +++ /dev/null, +++ b/marvel/src/main/java/org/elasticsearch/marvel/MarvelPlugin.java, +import org.elasticsearch.marvel.agent.exporter.Exporters;, +        Exporters.registerDynamicSettings(module);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/AgentService.java, +import org.elasticsearch.marvel.agent.exporter.Exporters;, +    private final Exporters exporters;, +                        Set<Collector> collectors, Exporters exporters) {, +        this.exporters = exporters;, +        exporters.start();, +        exporters.stop();, +++ /dev/null, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/Exporter.java, +import org.elasticsearch.common.logging.ESLogger;, +import org.elasticsearch.common.logging.Loggers;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.marvel.shield.MarvelSettingsFilter;, +public abstract class Exporter  {, +    protected final String type;, +    protected final Config config;, +    protected final ESLogger logger;, +    public Exporter(String type, Config config) {, +        this.type = type;, +        this.config = config;, +        this.logger = config.logger(getClass());, +    }, +, +    public String type() {, +        return type;, +    }, +, +    public String name() {, +        return config.name;, +    }, +, +    public boolean masterOnly() {, +        return false;, +    }, +, +    public abstract void export(Collection<MarvelDoc> marvelDocs) throws Exception;, +, +    public abstract void close();, +, +    protected String settingFQN(String setting) {, +        return Exporters.EXPORTERS_SETTING + "." + config.name + "." + setting;, +    }, +, +    public static class Config {, +, +        private final String name;, +        private final boolean enabled;, +        private final Settings globalSettings;, +        private final Settings settings;, +, +        public Config(String name, Settings globalSettings, Settings settings) {, +            this.name = name;, +            this.globalSettings = globalSettings;, +            this.settings = settings;, +            this.enabled = settings.getAsBoolean("enabled", true);, +        }, +, +        public String name() {, +            return name;, +        }, +, +        public boolean enabled() {, +            return enabled;, +        }, +, +        public Settings settings() {, +            return settings;, +        }, +, +        public ESLogger logger(Class clazz) {, +            return Loggers.getLogger(clazz, globalSettings);, +        }, +    }]