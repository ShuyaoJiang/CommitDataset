[+++ b/server/src/main/java/org/elasticsearch/cluster/coordination/Coordinator.java, +import org.elasticsearch.cluster.LocalClusterUpdateTask;, +    private final AllocationService allocationService;, +        this.allocationService = allocationService;, +            final Mode prevMode = mode;, +            if (prevMode == Mode.LEADER) {, +                cleanMasterService();, +            }, +, +        assert mode != Mode.LEADER : "do not switch to follower from leader (should be candidate first)";, +    private void cleanMasterService() {, +        masterService.submitStateUpdateTask("clean-up after stepping down as master",, +            new LocalClusterUpdateTask() {, +                @Override, +                public void onFailure(String source, Exception e) {, +                    // ignore, +                    logger.trace("failed to clean-up after stepping down as master", e);, +                }, +, +                @Override, +                public ClusterTasksResult<LocalClusterUpdateTask> execute(ClusterState currentState) {, +                    if (currentState.nodes().isLocalNodeElectedMaster() == false) {, +                        allocationService.cleanCaches();, +                    }, +                    return unchanged();, +                }, +, +            });, +    }, +, +++ b/server/src/main/java/org/elasticsearch/cluster/coordination/Coordinator.java, +import org.elasticsearch.cluster.LocalClusterUpdateTask;, +    private final AllocationService allocationService;, +        this.allocationService = allocationService;, +            final Mode prevMode = mode;, +            if (prevMode == Mode.LEADER) {, +                cleanMasterService();, +            }, +, +        assert mode != Mode.LEADER : "do not switch to follower from leader (should be candidate first)";, +    private void cleanMasterService() {, +        masterService.submitStateUpdateTask("clean-up after stepping down as master",, +            new LocalClusterUpdateTask() {, +                @Override, +                public void onFailure(String source, Exception e) {, +                    // ignore, +                    logger.trace("failed to clean-up after stepping down as master", e);, +                }, +, +                @Override, +                public ClusterTasksResult<LocalClusterUpdateTask> execute(ClusterState currentState) {, +                    if (currentState.nodes().isLocalNodeElectedMaster() == false) {, +                        allocationService.cleanCaches();, +                    }, +                    return unchanged();, +                }, +, +            });, +    }, +, +++ b/server/src/main/java/org/elasticsearch/cluster/coordination/JoinTaskExecutor.java, +        allocationService.cleanCaches();, +++ b/server/src/main/java/org/elasticsearch/cluster/coordination/Coordinator.java, +import org.elasticsearch.cluster.LocalClusterUpdateTask;, +    private final AllocationService allocationService;, +        this.allocationService = allocationService;, +            final Mode prevMode = mode;, +            if (prevMode == Mode.LEADER) {, +                cleanMasterService();, +            }, +, +        assert mode != Mode.LEADER : "do not switch to follower from leader (should be candidate first)";, +    private void cleanMasterService() {, +        masterService.submitStateUpdateTask("clean-up after stepping down as master",, +            new LocalClusterUpdateTask() {, +                @Override, +                public void onFailure(String source, Exception e) {, +                    // ignore, +                    logger.trace("failed to clean-up after stepping down as master", e);, +                }, +, +                @Override, +                public ClusterTasksResult<LocalClusterUpdateTask> execute(ClusterState currentState) {, +                    if (currentState.nodes().isLocalNodeElectedMaster() == false) {, +                        allocationService.cleanCaches();, +                    }, +                    return unchanged();, +                }, +, +            });, +    }, +, +++ b/server/src/main/java/org/elasticsearch/cluster/coordination/JoinTaskExecutor.java, +        allocationService.cleanCaches();, +++ b/server/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +    public void cleanCaches() {, +        gatewayAllocator.cleanCaches();, +    }, +, +++ b/server/src/main/java/org/elasticsearch/cluster/coordination/Coordinator.java]