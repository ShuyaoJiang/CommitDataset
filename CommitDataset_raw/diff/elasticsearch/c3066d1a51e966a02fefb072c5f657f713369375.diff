[+++ b/plugin/build.gradle, +import org.elasticsearch.gradle.LoggedExec, +// location of generated keystores and certificates, +File keystoreDir = new File(project.buildDir, 'keystore'), +, +// Generate the node's keystore, +File nodeKeystore = new File(keystoreDir, 'test-node.jks'), +task createNodeKeyStore(type: LoggedExec) {, +  doFirst {, +    if (nodeKeystore.parentFile.exists() == false) {, +      nodeKeystore.parentFile.mkdirs(), +    }, +    if (nodeKeystore.exists()) {, +      delete nodeKeystore, +    }, +  }, +  executable = new File(project.javaHome, 'bin/keytool'), +  standardInput = new ByteArrayInputStream('FirstName LastName\nUnit\nOrganization\nCity\nState\nNL\nyes\n\n'.getBytes('UTF-8')), +  args '-genkey',, +          '-alias', 'test-node',, +          '-keystore', nodeKeystore,, +          '-keyalg', 'RSA',, +          '-keysize', '2048',, +          '-validity', '712',, +          '-dname', 'CN=smoke-test-plugins-ssl',, +          '-keypass', 'keypass',, +          '-storepass', 'keypass', +}, +, +// Add keystores to test classpath: it expects it there, +sourceSets.test.resources.srcDir(keystoreDir), +processTestResources.dependsOn(createNodeKeyStore), +, +  dependsOn createNodeKeyStore, +  setting 'xpack.security.transport.ssl.enabled', 'true', +  setting 'xpack.security.transport.ssl.keystore.path', nodeKeystore.name, +  setting 'xpack.security.transport.ssl.verification_mode', 'certificate', +  keystoreSetting 'xpack.security.transport.ssl.keystore.secure_password', 'keypass', +  extraConfigFile nodeKeystore.name, nodeKeystore, +, +++ b/plugin/build.gradle, +import org.elasticsearch.gradle.LoggedExec, +// location of generated keystores and certificates, +File keystoreDir = new File(project.buildDir, 'keystore'), +, +// Generate the node's keystore, +File nodeKeystore = new File(keystoreDir, 'test-node.jks'), +task createNodeKeyStore(type: LoggedExec) {, +  doFirst {, +    if (nodeKeystore.parentFile.exists() == false) {, +      nodeKeystore.parentFile.mkdirs(), +    }, +    if (nodeKeystore.exists()) {, +      delete nodeKeystore, +    }, +  }, +  executable = new File(project.javaHome, 'bin/keytool'), +  standardInput = new ByteArrayInputStream('FirstName LastName\nUnit\nOrganization\nCity\nState\nNL\nyes\n\n'.getBytes('UTF-8')), +  args '-genkey',, +          '-alias', 'test-node',, +          '-keystore', nodeKeystore,, +          '-keyalg', 'RSA',, +          '-keysize', '2048',, +          '-validity', '712',, +          '-dname', 'CN=smoke-test-plugins-ssl',, +          '-keypass', 'keypass',, +          '-storepass', 'keypass', +}, +, +// Add keystores to test classpath: it expects it there, +sourceSets.test.resources.srcDir(keystoreDir), +processTestResources.dependsOn(createNodeKeyStore), +, +  dependsOn createNodeKeyStore, +  setting 'xpack.security.transport.ssl.enabled', 'true', +  setting 'xpack.security.transport.ssl.keystore.path', nodeKeystore.name, +  setting 'xpack.security.transport.ssl.verification_mode', 'certificate', +  keystoreSetting 'xpack.security.transport.ssl.keystore.secure_password', 'keypass', +  extraConfigFile nodeKeystore.name, nodeKeystore, +, +++ b/plugin/src/main/java/org/elasticsearch/license/License.java, +, +    /**, +     * Returns <code>true</code> iff the license is a production licnese, +     */, +    public boolean isProductionLicense() {, +        switch (operationMode()) {, +            case MISSING:, +            case TRIAL:, +            case BASIC:, +                return false;, +            case STANDARD:, +            case GOLD:, +            case PLATINUM:, +                return true;, +            default:, +                throw new AssertionError("unknown operation mode: " + operationMode());, +, +        }, +    }]