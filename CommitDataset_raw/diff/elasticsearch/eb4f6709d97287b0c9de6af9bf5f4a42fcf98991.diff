[+++ b/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +    private final long pingTimeout;, +, +        this.pingTimeout = componentSettings.getAsTime("ping_timeout", timeValueSeconds(5)).millis();, +            try {, +            } catch (Exception e) {, +                logger.warn("failed to sample", e);, +            }, +                        logger.debug("failed to connect to node [{}], removed from nodes list", e, node);, +                    NodesInfoResponse nodeInfo = transportService.submitRequest(node, NodesInfoAction.NAME,, +                            Requests.nodesInfoRequest("_local"),, +                            TransportRequestOptions.options().withTimeout(pingTimeout),, +                            new FutureTransportResponseHandler<NodesInfoResponse>() {, +                        logger.warn("node {} not part of the cluster {}, ignoring...", node, clusterName);, +                    logger.info("failed to get node info for {}, disconnecting...", e, node);, +                    transportService.disconnectFromNode(node);, +                            if (!transportService.nodeConnected(listedNode)) {, +                                try {, +                                    transportService.connectToNode(listedNode);, +                                } catch (Exception e) {, +                                    logger.debug("failed to connect to node [{}], removed from nodes list", e, listedNode);, +                                    return;, +                                }, +                            }, +                            transportService.sendRequest(listedNode, NodesInfoAction.NAME,, +                                    Requests.nodesInfoRequest("_all"),, +                                    TransportRequestOptions.options().withTimeout(pingTimeout),, +                                    new BaseTransportResponseHandler<NodesInfoResponse>() {, +                                        public void handleException(TransportException e) {, +                                            logger.info("failed to get node info for {}, disconnecting...", e, listedNode);, +                                            transportService.disconnectFromNode(listedNode);, +                            logger.info("failed to get node info for {}, disconnecting...", e, listedNode);, +                            transportService.disconnectFromNode(listedNode);, +                        logger.warn("node {} not part of the cluster {}, ignoring...", nodeInfo.node(), clusterName);, +                    logger.debug("failed to connect to discovered node [" + node + "]", e);]