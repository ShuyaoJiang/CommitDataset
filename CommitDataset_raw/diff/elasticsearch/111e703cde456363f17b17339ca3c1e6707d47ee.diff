[+++ b/core/src/main/java/org/elasticsearch/plugins/ListPluginsCommand.java, +            terminal.println(Terminal.Verbosity.SILENT, plugin.getFileName().toString());, +            try {, +            } catch (IllegalArgumentException e) {, +                if (e.getMessage().contains("incompatible with Elasticsearch")) {, +                    terminal.println("WARNING: " + e.getMessage());, +                } else {, +                    throw e;, +                }, +            }, +++ b/core/src/main/java/org/elasticsearch/plugins/ListPluginsCommand.java, +            terminal.println(Terminal.Verbosity.SILENT, plugin.getFileName().toString());, +            try {, +            } catch (IllegalArgumentException e) {, +                if (e.getMessage().contains("incompatible with Elasticsearch")) {, +                    terminal.println("WARNING: " + e.getMessage());, +                } else {, +                    throw e;, +                }, +            }, +++ b/qa/evil-tests/src/test/java/org/elasticsearch/plugins/ListPluginsCommandTests.java, +import org.elasticsearch.Version;, +    public void testExistingIncompatiblePlugin() throws Exception {, +        PluginTestUtil.writeProperties(env.pluginsFile().resolve("fake_plugin1"),, +            "description", "fake desc 1",, +            "name", "fake_plugin1",, +            "version", "1.0",, +            "elasticsearch.version", Version.fromString("1.0.0").toString(),, +            "java.version", System.getProperty("java.specification.version"),, +            "classname", "org.fake1");, +        buildFakePlugin(env, "fake desc 2", "fake_plugin2", "org.fake2");, +, +        MockTerminal terminal = listPlugins(home);, +        assertEquals("fake_plugin1\n" +, +                     "WARNING: Plugin [fake_plugin1] is incompatible with Elasticsearch [" +, +                     Version.CURRENT.toString() + "]. Was designed for version [1.0.0]\n" +, +                     "fake_plugin2\n",, +                     terminal.getOutput());, +, +        String[] params = {"-s"};, +        terminal = listPlugins(home, params);, +        assertEquals("fake_plugin1\nfake_plugin2\n", terminal.getOutput());, +    }, +]