[+++ b/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +import org.elasticsearch.common.Nullable;, +        boolean sourceRequested = false;, +            sourceRequested = false;, +            sourceRequested = true;, +            sourceRequested = false;, +            boolean loadAllStored = false;, +            FieldMappersFieldSelector fieldSelectorMapper = null;, +                if (fieldName.equals("*")) {, +                    loadAllStored = true;, +                    continue;, +                }, +                if (fieldName.equals(SourceFieldMapper.NAME)) {, +                    sourceRequested = true;, +                    continue;, +                }, +                    if (fieldSelectorMapper == null) {, +                        fieldSelectorMapper = new FieldMappersFieldSelector();, +                    }, +, +            if (loadAllStored) {, +                if (sourceRequested || extractFieldNames != null) {, +                    fieldSelector = null; // load everything, including _source, +                } else {, +                    fieldSelector = AllButSourceFieldSelector.INSTANCE;, +                }, +            } else if (fieldSelectorMapper != null) {, +                // we are asking specific stored fields, just add the UID and be done, +                if (extractFieldNames != null) {, +                    fieldSelectorMapper.add(SourceFieldMapper.NAME);, +                }, +            } else if (extractFieldNames != null) {, +                fieldSelector = new UidAndSourceFieldSelector();, +            } else {, +                fieldSelector = UidFieldSelector.INSTANCE;, +            }, +            InternalSearchHit searchHit = new InternalSearchHit(docId, uid.id(), uid.type(), sourceRequested ? source : null, null);, +    private Document loadDocument(SearchContext context, @Nullable ResetFieldSelector fieldSelector, int docId) {, +            if (fieldSelector != null) fieldSelector.reset();, +++ b/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +import org.elasticsearch.common.Nullable;, +        boolean sourceRequested = false;, +            sourceRequested = false;, +            sourceRequested = true;, +            sourceRequested = false;, +            boolean loadAllStored = false;, +            FieldMappersFieldSelector fieldSelectorMapper = null;, +                if (fieldName.equals("*")) {, +                    loadAllStored = true;, +                    continue;, +                }, +                if (fieldName.equals(SourceFieldMapper.NAME)) {, +                    sourceRequested = true;, +                    continue;, +                }, +                    if (fieldSelectorMapper == null) {, +                        fieldSelectorMapper = new FieldMappersFieldSelector();, +                    }, +, +            if (loadAllStored) {, +                if (sourceRequested || extractFieldNames != null) {, +                    fieldSelector = null; // load everything, including _source, +                } else {, +                    fieldSelector = AllButSourceFieldSelector.INSTANCE;, +                }, +            } else if (fieldSelectorMapper != null) {, +                // we are asking specific stored fields, just add the UID and be done, +                if (extractFieldNames != null) {, +                    fieldSelectorMapper.add(SourceFieldMapper.NAME);, +                }, +            } else if (extractFieldNames != null) {, +                fieldSelector = new UidAndSourceFieldSelector();, +            } else {, +                fieldSelector = UidFieldSelector.INSTANCE;, +            }, +            InternalSearchHit searchHit = new InternalSearchHit(docId, uid.id(), uid.type(), sourceRequested ? source : null, null);, +    private Document loadDocument(SearchContext context, @Nullable ResetFieldSelector fieldSelector, int docId) {, +            if (fieldSelector != null) fieldSelector.reset();, +++ b/src/test/java/org/elasticsearch/test/integration/search/fields/SearchFieldsTests.java, +import static org.hamcrest.Matchers.*;, +        assertThat(searchResponse.hits().getAt(0).source(), nullValue());, +        assertThat(searchResponse.hits().getAt(0).fields().size(), equalTo(2));, +        assertThat(searchResponse.hits().getAt(0).fields().get("field1").value().toString(), equalTo("value1"));, +        assertThat(searchResponse.hits().getAt(0).fields().get("field3").value().toString(), equalTo("value3"));, +, +        searchResponse = client.prepareSearch().setQuery(matchAllQuery()).addField("*").addField("_source").execute().actionGet();, +        assertThat(searchResponse.hits().getTotalHits(), equalTo(1l));, +        assertThat(searchResponse.hits().hits().length, equalTo(1));, +        assertThat(searchResponse.hits().getAt(0).source(), notNullValue());]