[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +        final ObjectIntHashMap<OsInfo.Cpu> cpus;, +            cpus = new ObjectIntHashMap<>();, +            availableProcessors += nodeInfo.getOs().availableProcessors();, +            if (nodeInfo.getOs() == null) {, +                return;, +            }, +            if (nodeInfo.getOs().cpu() != null) {, +                cpus.addTo(nodeInfo.getOs().cpu(), 1);, +            }, +            if (nodeInfo.getOs().getMem() != null && nodeInfo.getOs().getMem().getTotal().bytes() != -1) {, +                availableMemory += nodeInfo.getOs().getMem().getTotal().bytes();, +            }, +        public ObjectIntHashMap<OsInfo.Cpu> getCpus() {, +            return cpus;, +        }, +, +            size = in.readVInt();, +            cpus.clear();, +            for (int i = 0; i < size; i++) {, +                cpus.addTo(OsInfo.Cpu.readCpu(in), in.readVInt());, +            }, +            out.writeVInt(cpus.size());, +            for (ObjectIntCursor<OsInfo.Cpu> c : cpus) {, +                c.key.writeTo(out);, +                out.writeVInt(c.value);, +            }, +            static final XContentBuilderString CPU = new XContentBuilderString("cpu");, +            builder.startArray(Fields.CPU);, +            for (ObjectIntCursor<OsInfo.Cpu> cpu : cpus) {, +                builder.startObject();, +                cpu.key.toXContent(builder, params);, +                builder.field(Fields.COUNT, cpu.value);, +                builder.endObject();, +            }, +            builder.endArray();, +, +            if (nodeStats.getProcess().cpu() != null) {, +                cpuPercent += nodeStats.getProcess().cpu().getPercent();, +            long fd = nodeStats.getProcess().openFileDescriptors();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +        final ObjectIntHashMap<OsInfo.Cpu> cpus;, +            cpus = new ObjectIntHashMap<>();, +            availableProcessors += nodeInfo.getOs().availableProcessors();, +            if (nodeInfo.getOs() == null) {, +                return;, +            }, +            if (nodeInfo.getOs().cpu() != null) {, +                cpus.addTo(nodeInfo.getOs().cpu(), 1);, +            }, +            if (nodeInfo.getOs().getMem() != null && nodeInfo.getOs().getMem().getTotal().bytes() != -1) {, +                availableMemory += nodeInfo.getOs().getMem().getTotal().bytes();, +            }, +        public ObjectIntHashMap<OsInfo.Cpu> getCpus() {, +            return cpus;, +        }, +, +            size = in.readVInt();, +            cpus.clear();, +            for (int i = 0; i < size; i++) {, +                cpus.addTo(OsInfo.Cpu.readCpu(in), in.readVInt());, +            }, +            out.writeVInt(cpus.size());, +            for (ObjectIntCursor<OsInfo.Cpu> c : cpus) {, +                c.key.writeTo(out);, +                out.writeVInt(c.value);, +            }, +            static final XContentBuilderString CPU = new XContentBuilderString("cpu");, +            builder.startArray(Fields.CPU);, +            for (ObjectIntCursor<OsInfo.Cpu> cpu : cpus) {, +                builder.startObject();, +                cpu.key.toXContent(builder, params);, +                builder.field(Fields.COUNT, cpu.value);, +                builder.endObject();, +            }, +            builder.endArray();, +, +            if (nodeStats.getProcess().cpu() != null) {, +                cpuPercent += nodeStats.getProcess().cpu().getPercent();, +            long fd = nodeStats.getProcess().openFileDescriptors();, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        bulkRequest.add(data, defaultIndex, defaultType, null, payload, true);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +        final ObjectIntHashMap<OsInfo.Cpu> cpus;, +            cpus = new ObjectIntHashMap<>();, +            availableProcessors += nodeInfo.getOs().availableProcessors();, +            if (nodeInfo.getOs() == null) {, +                return;, +            }, +            if (nodeInfo.getOs().cpu() != null) {, +                cpus.addTo(nodeInfo.getOs().cpu(), 1);, +            }, +            if (nodeInfo.getOs().getMem() != null && nodeInfo.getOs().getMem().getTotal().bytes() != -1) {, +                availableMemory += nodeInfo.getOs().getMem().getTotal().bytes();, +            }, +        public ObjectIntHashMap<OsInfo.Cpu> getCpus() {, +            return cpus;, +        }, +, +            size = in.readVInt();]