[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +import org.elasticsearch.monitor.fs.FsInfo;, +    private FsInfo fs;, +                     @Nullable FsInfo fs, @Nullable TransportStats transport, @Nullable HttpStats http,, +    public FsInfo getFs() {, +            fs = FsInfo.readFsInfo(in);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +import org.elasticsearch.monitor.fs.FsInfo;, +    private FsInfo fs;, +                     @Nullable FsInfo fs, @Nullable TransportStats transport, @Nullable HttpStats http,, +    public FsInfo getFs() {, +            fs = FsInfo.readFsInfo(in);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +import org.elasticsearch.monitor.fs.FsInfo;, +    private FsInfo.Path fs;, +        this.fs = new FsInfo.Path();, +    public FsInfo.Path getFs() {, +        fs = FsInfo.Path.readInfoFrom(in);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +import org.elasticsearch.monitor.fs.FsInfo;, +    private FsInfo fs;, +                     @Nullable FsInfo fs, @Nullable TransportStats transport, @Nullable HttpStats http,, +    public FsInfo getFs() {, +            fs = FsInfo.readFsInfo(in);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +import org.elasticsearch.monitor.fs.FsInfo;, +    private FsInfo.Path fs;, +        this.fs = new FsInfo.Path();, +    public FsInfo.Path getFs() {, +        fs = FsInfo.Path.readInfoFrom(in);, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +import org.elasticsearch.monitor.fs.FsInfo;, +                            for (FsInfo.Path info : nodeStats.getFs()) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +import org.elasticsearch.monitor.fs.FsInfo;, +    private FsInfo fs;, +                     @Nullable FsInfo fs, @Nullable TransportStats transport, @Nullable HttpStats http,, +    public FsInfo getFs() {, +            fs = FsInfo.readFsInfo(in);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +import org.elasticsearch.monitor.fs.FsInfo;, +    private FsInfo.Path fs;, +        this.fs = new FsInfo.Path();, +    public FsInfo.Path getFs() {, +        fs = FsInfo.Path.readInfoFrom(in);, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +import org.elasticsearch.monitor.fs.FsInfo;, +                            for (FsInfo.Path info : nodeStats.getFs()) {, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +import org.elasticsearch.monitor.fs.FsInfo;, +                FsInfo.Path fsPath = FsProbe.getFSInfo(nodePath);, +            FsInfo.Path totFSPath = new FsInfo.Path();, +                FsInfo.Path fsPath = FsProbe.getFSInfo(nodePath);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +import org.elasticsearch.monitor.fs.FsInfo;, +    private FsInfo fs;, +                     @Nullable FsInfo fs, @Nullable TransportStats transport, @Nullable HttpStats http,, +    public FsInfo getFs() {, +            fs = FsInfo.readFsInfo(in);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +import org.elasticsearch.monitor.fs.FsInfo;, +    private FsInfo.Path fs;, +        this.fs = new FsInfo.Path();, +    public FsInfo.Path getFs() {, +        fs = FsInfo.Path.readInfoFrom(in);, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +import org.elasticsearch.monitor.fs.FsInfo;, +                            for (FsInfo.Path info : nodeStats.getFs()) {, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +import org.elasticsearch.monitor.fs.FsInfo;, +                FsInfo.Path fsPath = FsProbe.getFSInfo(nodePath);, +            FsInfo.Path totFSPath = new FsInfo.Path();, +                FsInfo.Path fsPath = FsProbe.getFSInfo(nodePath);, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +    /** fail engine due to some error. the engine will also be closed. */, +    public void failEngine(String reason, Throwable failure) {, +        assert failure != null;, +                    // we first mark the store as corrupted before we notify any listeners, +                    // this must happen first otherwise we might try to reallocate so quickly, +                    // on the same node that we don't see the corrupted marker file when, +                    // the shard is initializing, +                    if (Lucene.isCorruptionException(failure)) {, +                        try {, +                            store.markStoreCorrupted(ExceptionsHelper.unwrapCorruption(failure));, +                        } catch (IOException e) {, +                            logger.warn("Couldn't marks store corrupted", e);, +                        }, +                    }, +                    failedEngine = failure;, +            failEngine("corrupt file detected source: [" + source + "]", t);, +            failEngine("out of memory", t);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +import org.elasticsearch.monitor.fs.FsInfo;, +    private FsInfo fs;, +                     @Nullable FsInfo fs, @Nullable TransportStats transport, @Nullable HttpStats http,, +    public FsInfo getFs() {, +            fs = FsInfo.readFsInfo(in);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +import org.elasticsearch.monitor.fs.FsInfo;, +    private FsInfo.Path fs;]