[+++ b/src/main/java/org/elasticsearch/index/warmer/ShardIndexWarmerService.java, +import org.elasticsearch.common.logging.ESLogger;, +    public ESLogger logger() {, +        return this.logger;, +    }, +, +++ b/src/main/java/org/elasticsearch/index/warmer/ShardIndexWarmerService.java, +import org.elasticsearch.common.logging.ESLogger;, +    public ESLogger logger() {, +        return this.logger;, +    }, +, +++ b/src/main/java/org/elasticsearch/indices/warmer/IndicesWarmer.java, +import org.elasticsearch.index.shard.service.IndexShard;, +        void warm(IndexShard indexShard, IndexMetaData indexMetaData, Engine.Searcher search);, +++ b/src/main/java/org/elasticsearch/index/warmer/ShardIndexWarmerService.java, +import org.elasticsearch.common.logging.ESLogger;, +    public ESLogger logger() {, +        return this.logger;, +    }, +, +++ b/src/main/java/org/elasticsearch/indices/warmer/IndicesWarmer.java, +import org.elasticsearch.index.shard.service.IndexShard;, +        void warm(IndexShard indexShard, IndexMetaData indexMetaData, Engine.Searcher search);, +++ b/src/main/java/org/elasticsearch/indices/warmer/InternalIndicesWarmer.java, +        final IndexShard indexShard = indexService.shard(shardId.id());, +                        listener.warm(indexShard, indexMetaData, searcher);, +                        indexShard.warmerService().logger().warn("failed to warm [{}]", e, listener);, +        if (indexShard.warmerService().logger().isTraceEnabled()) {, +            indexShard.warmerService().logger().trace("warming took [{}]", new TimeValue(took, TimeUnit.NANOSECONDS));, +++ b/src/main/java/org/elasticsearch/index/warmer/ShardIndexWarmerService.java, +import org.elasticsearch.common.logging.ESLogger;, +    public ESLogger logger() {, +        return this.logger;, +    }, +, +++ b/src/main/java/org/elasticsearch/indices/warmer/IndicesWarmer.java, +import org.elasticsearch.index.shard.service.IndexShard;, +        void warm(IndexShard indexShard, IndexMetaData indexMetaData, Engine.Searcher search);, +++ b/src/main/java/org/elasticsearch/indices/warmer/InternalIndicesWarmer.java, +        final IndexShard indexShard = indexService.shard(shardId.id());, +                        listener.warm(indexShard, indexMetaData, searcher);, +                        indexShard.warmerService().logger().warn("failed to warm [{}]", e, listener);, +        if (indexShard.warmerService().logger().isTraceEnabled()) {, +            indexShard.warmerService().logger().trace("warming took [{}]", new TimeValue(took, TimeUnit.NANOSECONDS));, +++ b/src/main/java/org/elasticsearch/search/SearchService.java, +        public void warm(IndexShard indexShard, IndexMetaData indexMetaData, Engine.Searcher search) {, +                    InternalSearchRequest request = new InternalSearchRequest(indexShard.shardId().index().name(), indexShard.shardId().id(), indexMetaData.numberOfShards(), SearchType.COUNT), +                    if (indexShard.warmerService().logger().isTraceEnabled()) {, +                        indexShard.warmerService().logger().trace("warmed [{}], took [{}]", entry.name(), TimeValue.timeValueNanos(took));, +                    indexShard.warmerService().logger().warn("warmer [{}] failed", t, entry.name());]