[+++ b/src/main/java/org/apache/lucene/search/PublicTermsFilter.java, +            // batch read, in Lucene 4.0 its no longer needed, +            int[] docs = new int[32];, +            int[] freqs = new int[32];, +                int number = td.read(docs, freqs);, +                if (number > 0) {, +                    while (number > 0) {, +                        for (int i = 0; i < number; i++) {, +                            result.set(docs[i]);, +                        }, +                        number = td.read(docs, freqs);, +++ b/src/main/java/org/apache/lucene/search/PublicTermsFilter.java, +            // batch read, in Lucene 4.0 its no longer needed, +            int[] docs = new int[32];, +            int[] freqs = new int[32];, +                int number = td.read(docs, freqs);, +                if (number > 0) {, +                    while (number > 0) {, +                        for (int i = 0; i < number; i++) {, +                            result.set(docs[i]);, +                        }, +                        number = td.read(docs, freqs);, +++ b/src/main/java/org/elasticsearch/common/lucene/search/TermFilter.java, +            // batch read, in Lucene 4.0 its no longer needed, +            int[] docs = new int[32];, +            int[] freqs = new int[32];, +            int number = td.read(docs, freqs);, +            if (number > 0) {, +                while (number > 0) {, +                    for (int i = 0; i < number; i++) {, +                        result.set(docs[i]);, +                    }, +                    number = td.read(docs, freqs);, +++ b/src/main/java/org/apache/lucene/search/PublicTermsFilter.java, +            // batch read, in Lucene 4.0 its no longer needed, +            int[] docs = new int[32];, +            int[] freqs = new int[32];, +                int number = td.read(docs, freqs);, +                if (number > 0) {, +                    while (number > 0) {, +                        for (int i = 0; i < number; i++) {, +                            result.set(docs[i]);, +                        }, +                        number = td.read(docs, freqs);, +++ b/src/main/java/org/elasticsearch/common/lucene/search/TermFilter.java, +            // batch read, in Lucene 4.0 its no longer needed, +            int[] docs = new int[32];, +            int[] freqs = new int[32];, +            int number = td.read(docs, freqs);, +            if (number > 0) {, +                while (number > 0) {, +                    for (int i = 0; i < number; i++) {, +                        result.set(docs[i]);, +                    }, +                    number = td.read(docs, freqs);, +++ b/src/test/java/org/elasticsearch/test/unit/common/lucene/search/TermsFilterTests.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.test.unit.common.lucene.search;, +, +import org.apache.lucene.analysis.KeywordAnalyzer;, +import org.apache.lucene.document.Document;, +import org.apache.lucene.document.Field;, +import org.apache.lucene.index.IndexReader;, +import org.apache.lucene.index.IndexWriter;, +import org.apache.lucene.index.IndexWriterConfig;, +import org.apache.lucene.index.Term;, +import org.apache.lucene.search.PublicTermsFilter;, +import org.apache.lucene.store.Directory;, +import org.apache.lucene.store.RAMDirectory;, +import org.apache.lucene.util.FixedBitSet;, +import org.elasticsearch.common.lucene.Lucene;, +import org.elasticsearch.common.lucene.search.TermFilter;, +import org.testng.annotations.Test;, +, +import static org.hamcrest.MatcherAssert.assertThat;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.nullValue;, +, +/**, + */, +@Test, +public class TermsFilterTests {]