[+++ b/docs/en/security/auditing.asciidoc, +[[auditing]], +== Auditing Security Events, +, +You can enable auditing to keep track of security-related events such as , +authentication failures and refused connections. Logging these events enables you, +to monitor your cluster for suspicious activity and provides evidence in the, +event of an attack., +, +[IMPORTANT], +============================================================================, +Audit logs are **disabled** by default. To enable this functionality, you , +must set `xpack.security.audit.enabled` to `true` in `elasticsearch.yml`., +============================================================================, +, +{Security} provides two ways to persist audit logs: , +, +* The <<audit-log-output, `logfile`>> output, which persists events to, +  a dedicated `<clustername>_access.log` file on the host's file system., +* The <<audit-index, `index`>> output, which persists events to an Elasticsearch index., +The audit index can reside on the same cluster, or a separate cluster., +, +By default, only the `logfile` output is used when enabling auditing., +To facilitate browsing and analyzing the events, you can also enable, +indexing by setting `xpack.security.audit.outputs` in `elasticsearch.yml`:, +, +[source,yaml], +----------------------------, +xpack.security.audit.outputs: [ index, logfile ], +----------------------------, +, +The `index` output type should be used in conjunction with the `logfile` , +output type Because it is possible for the `index` output type to lose, +messages if the target index is unavailable, the `access.log` should be , +used as the official record of events., +, +NOTE: Audit events are batched for indexing so there is a lag before , +events appear in the index. You can control how frequently batches of , +events are pushed to the index by setting , +`xpack.security.audit.index.flush_interval` in `elasticsearch.yml`., +, +[float], +[[audit-event-types]], +=== Audit Event Types, +, +Each request may generate multiple audit events., +The following is a list of the events that can be generated:, +, +|======, +| `anonymous_access_denied`         | | | Logged when a request is denied due to a missing, +                                          authentication token., +| `authentication_success`          | | | Logged when a user successfully authenticates., +| `authentication_failed`           | | | Logged when the authentication token cannot be, +                                          matched to a known user., +| `realm_authentication_failed`     | | | Logged for every realm that fails to present a valid, +                                          authentication token. `<realm>` represents the, +                                          realm type., +| `access_denied`                   | | | Logged when an authenticated user attempts to execute, +                                          an action they do not have the necessary , +                                          <<security-reference, privilege>> to perform., +| `access_granted`                  | | | Logged when an authenticated user attempts to execute, +                                          an action they have the necessary privilege to perform., +                                          When the `system_access_granted` event is included, all system, +                                          (internal) actions are also logged. The default setting does, +                                          not log system actions to avoid cluttering the logs., +| `run_as_granted`                  | | | Logged when an authenticated user attempts to <<run-as-privilege, run as>>, +                                          another user that they have the necessary privileges to do., +| `run_as_denied`                   | | | Logged when an authenticated user attempts to <<run-as-privilege, run as>>, +                                          another user action they do not have the necessary, +                                          <<security-reference, privilege>> to do so., +| `tampered_request`                | | | Logged when {security} detects that the request has , +                                          been tampered with. Typically relates to `search/scroll` , +                                          requests when the scroll ID is believed to have been, +                                          tampered with., +| `connection_granted`              | | | Logged when an incoming TCP connection passes the, +                                          <<ip-filtering, IP Filter>> for a specific, +                                          profile., +| `connection_denied`               | | | Logged when an incoming TCP connection does not pass the, +                                          <<ip-filtering, IP Filter>> for a specific, +                                          profile., +|======, +, +[float], +[[audit-event-attributes]], +=== Audit Event Attributes, +, +The following table shows the common attributes that can be associated with every event., +, +.Common Attributes, +[cols="2,7",options="header"], +|======, +| Attribute           | Description, +| `timestamp`         | When the event occurred., +| `node_name`         | The name of the node., +| `node_host_name`    | The hostname of the node., +| `node_host_address` | The IP address of the node., +| `layer`             | The layer from which this event originated: `rest`, `transport` or `ip_filter`, +| `event_type`        | The type of event that occurred: `anonymous_access_denied`,, +                        `authentication_failed`, `access_denied`, `access_granted`,, +                        `connection_granted`, `connection_denied`, `tampered_request`,]