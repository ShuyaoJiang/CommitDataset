[+++ b/x-pack/plugin/ccr/qa/multi-cluster-with-security/roles.yml, +        - create_follow_index, +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-security/roles.yml, +        - create_follow_index, +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-security/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexSecurityIT.java, +import org.elasticsearch.client.ResponseException;, +import org.elasticsearch.rest.RestStatus;, +import static org.hamcrest.Matchers.containsString;, +import static org.hamcrest.Matchers.is;, +            Exception e = expectThrows(ResponseException.class,, +                () -> createAndFollowIndex("leader_cluster:" + unallowedIndex, unallowedIndex));, +            assertThat(e.getMessage(),, +                containsString("action [indices:admin/xpack/ccr/create_and_follow_index] is unauthorized for user [test_ccr]"));, +            // Verify that the follow index has not been created and no node tasks are running, +            assertThat(indexExists(adminClient(), unallowedIndex), is(false));, +            e = expectThrows(ResponseException.class,, +                () -> followIndex("leader_cluster:" + unallowedIndex, unallowedIndex));, +            assertThat(e.getMessage(), containsString("follow index [" + unallowedIndex + "] does not exist"));, +            assertThat(indexExists(adminClient(), unallowedIndex), is(false));, +    private static boolean indexExists(RestClient client, String index) throws IOException {, +        Response response = client.performRequest(new Request("HEAD", "/" + index));, +        return RestStatus.OK.getStatus() == response.getStatusLine().getStatusCode();, +    }, +, +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-security/roles.yml, +        - create_follow_index, +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-security/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexSecurityIT.java, +import org.elasticsearch.client.ResponseException;, +import org.elasticsearch.rest.RestStatus;, +import static org.hamcrest.Matchers.containsString;, +import static org.hamcrest.Matchers.is;, +            Exception e = expectThrows(ResponseException.class,, +                () -> createAndFollowIndex("leader_cluster:" + unallowedIndex, unallowedIndex));, +            assertThat(e.getMessage(),, +                containsString("action [indices:admin/xpack/ccr/create_and_follow_index] is unauthorized for user [test_ccr]"));, +            // Verify that the follow index has not been created and no node tasks are running, +            assertThat(indexExists(adminClient(), unallowedIndex), is(false));, +            e = expectThrows(ResponseException.class,, +                () -> followIndex("leader_cluster:" + unallowedIndex, unallowedIndex));, +            assertThat(e.getMessage(), containsString("follow index [" + unallowedIndex + "] does not exist"));, +            assertThat(indexExists(adminClient(), unallowedIndex), is(false));, +    private static boolean indexExists(RestClient client, String index) throws IOException {, +        Response response = client.performRequest(new Request("HEAD", "/" + index));, +        return RestStatus.OK.getStatus() == response.getStatusLine().getStatusCode();, +    }, +, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/CreateAndFollowIndexAction.java, +import org.elasticsearch.action.IndicesRequest;, +import org.elasticsearch.action.support.IndicesOptions;, +    public static final String NAME = "indices:admin/xpack/ccr/create_and_follow_index";, +    public static class Request extends AcknowledgedRequest<Request> implements IndicesRequest {, +        public String[] indices() {, +            return new String[]{followRequest.getFollowerIndex()};, +        }, +, +        @Override, +        public IndicesOptions indicesOptions() {, +            return IndicesOptions.strictSingleIndexNoExpandForbidClosed();, +        }, +, +        @Override, +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-security/roles.yml, +        - create_follow_index, +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-security/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexSecurityIT.java, +import org.elasticsearch.client.ResponseException;, +import org.elasticsearch.rest.RestStatus;, +import static org.hamcrest.Matchers.containsString;, +import static org.hamcrest.Matchers.is;, +            Exception e = expectThrows(ResponseException.class,, +                () -> createAndFollowIndex("leader_cluster:" + unallowedIndex, unallowedIndex));, +            assertThat(e.getMessage(),, +                containsString("action [indices:admin/xpack/ccr/create_and_follow_index] is unauthorized for user [test_ccr]"));, +            // Verify that the follow index has not been created and no node tasks are running, +            assertThat(indexExists(adminClient(), unallowedIndex), is(false));, +            e = expectThrows(ResponseException.class,, +                () -> followIndex("leader_cluster:" + unallowedIndex, unallowedIndex));, +            assertThat(e.getMessage(), containsString("follow index [" + unallowedIndex + "] does not exist"));, +            assertThat(indexExists(adminClient(), unallowedIndex), is(false));, +    private static boolean indexExists(RestClient client, String index) throws IOException {, +        Response response = client.performRequest(new Request("HEAD", "/" + index));, +        return RestStatus.OK.getStatus() == response.getStatusLine().getStatusCode();, +    }, +, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/CreateAndFollowIndexAction.java, +import org.elasticsearch.action.IndicesRequest;, +import org.elasticsearch.action.support.IndicesOptions;, +    public static final String NAME = "indices:admin/xpack/ccr/create_and_follow_index";, +    public static class Request extends AcknowledgedRequest<Request> implements IndicesRequest {, +        public String[] indices() {, +            return new String[]{followRequest.getFollowerIndex()};, +        }, +, +        @Override, +        public IndicesOptions indicesOptions() {, +            return IndicesOptions.strictSingleIndexNoExpandForbidClosed();, +        }, +, +        @Override, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/IndexPrivilege.java, +    private static final Automaton CREATE_FOLLOW_INDEX_AUTOMATON = patterns("indices:admin/xpack/ccr/create_and_follow_index");]