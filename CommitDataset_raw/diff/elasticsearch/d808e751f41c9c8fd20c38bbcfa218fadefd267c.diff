[+++ b/core/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java, +            if (stats.hasMinMax()) {, +                    stats.getMinValue() / scalingFactor,, +                    stats.getMaxValue() / scalingFactor);, +            }, +            return new FieldStats.Double(stats.getMaxDoc(), stats.getDocCount(),, +                stats.getSumDocFreq(), stats.getSumTotalTermFreq(),, +                stats.isSearchable(), stats.isAggregatable());, +++ b/core/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java, +            if (stats.hasMinMax()) {, +                    stats.getMinValue() / scalingFactor,, +                    stats.getMaxValue() / scalingFactor);, +            }, +            return new FieldStats.Double(stats.getMaxDoc(), stats.getDocCount(),, +                stats.getSumDocFreq(), stats.getSumTotalTermFreq(),, +                stats.isSearchable(), stats.isAggregatable());, +++ b/core/src/test/java/org/elasticsearch/index/mapper/ScaledFloatFieldTypeTests.java, +import org.apache.lucene.document.StoredField;, +        doc.add(new StoredField("scaled_float", -1));, +        w.addDocument(doc);, +        try (DirectoryReader reader = DirectoryReader.open(w)) {, +            // field exists, but has no point values, +            FieldStats<?> stats = ft.stats(reader);, +            assertFalse(stats.hasMinMax());, +            assertNull(stats.getMinValue());, +            assertNull(stats.getMaxValue());, +        }, +            assertEquals(3, stats.getMaxDoc());]