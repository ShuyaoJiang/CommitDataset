[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +    private final IndicesRequestCache indicesRequestCache;, +                                            TransportService transportService, IndicesService indicesService,, +                                            IndicesRequestCache indicesQueryCache, ActionFilters actionFilters,, +        this.indicesRequestCache = indicesQueryCache;, +                indicesRequestCache.clear(shard);, +                    indicesRequestCache.clear(shard);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +    private final IndicesRequestCache indicesRequestCache;, +                                            TransportService transportService, IndicesService indicesService,, +                                            IndicesRequestCache indicesQueryCache, ActionFilters actionFilters,, +        this.indicesRequestCache = indicesQueryCache;, +                indicesRequestCache.clear(shard);, +                    indicesRequestCache.clear(shard);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +    public CommonStats(IndexShard indexShard, CommonStatsFlags flags) {, +                    queryCache = indexShard.queryCacheStats();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +    private final IndicesRequestCache indicesRequestCache;, +                                            TransportService transportService, IndicesService indicesService,, +                                            IndicesRequestCache indicesQueryCache, ActionFilters actionFilters,, +        this.indicesRequestCache = indicesQueryCache;, +                indicesRequestCache.clear(shard);, +                    indicesRequestCache.clear(shard);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +    public CommonStats(IndexShard indexShard, CommonStatsFlags flags) {, +                    queryCache = indexShard.queryCacheStats();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java, +        return new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, flags), indexShard.commitStats());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +    private final IndicesRequestCache indicesRequestCache;, +                                            TransportService transportService, IndicesService indicesService,, +                                            IndicesRequestCache indicesQueryCache, ActionFilters actionFilters,, +        this.indicesRequestCache = indicesQueryCache;, +                indicesRequestCache.clear(shard);, +                    indicesRequestCache.clear(shard);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +    public CommonStats(IndexShard indexShard, CommonStatsFlags flags) {, +                    queryCache = indexShard.queryCacheStats();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java, +        return new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, flags), indexShard.commitStats());, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/AllocationId.java, +     * Creates a new allocation id for initializing allocation based on an existing id., +     */, +    public static AllocationId newInitializing(String existingAllocationId) {, +        return new AllocationId(existingAllocationId, null);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +    private final IndicesRequestCache indicesRequestCache;, +                                            TransportService transportService, IndicesService indicesService,, +                                            IndicesRequestCache indicesQueryCache, ActionFilters actionFilters,, +        this.indicesRequestCache = indicesQueryCache;, +                indicesRequestCache.clear(shard);, +                    indicesRequestCache.clear(shard);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +    public CommonStats(IndexShard indexShard, CommonStatsFlags flags) {, +                    queryCache = indexShard.queryCacheStats();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java, +        return new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, flags), indexShard.commitStats());, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/AllocationId.java, +     * Creates a new allocation id for initializing allocation based on an existing id., +     */, +    public static AllocationId newInitializing(String existingAllocationId) {, +        return new AllocationId(existingAllocationId, null);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +import org.elasticsearch.common.Nullable;, +     *, +     * @param existingAllocationId allocation id to use. If null, a fresh allocation id is generated., +    public void initialize(ShardRouting shard, String nodeId, @Nullable String existingAllocationId, long expectedSize) {, +        shard.initialize(nodeId, existingAllocationId, expectedSize);, +             *, +             * @param existingAllocationId allocation id to use. If null, a fresh allocation id is generated., +            public void initialize(String nodeId, @Nullable String existingAllocationId, long expectedShardSize) {, +                nodes.initialize(new ShardRouting(current), nodeId, existingAllocationId, expectedShardSize);, +             * {@link #initialize(String, String, long)}., +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +    private final IndicesRequestCache indicesRequestCache;, +                                            TransportService transportService, IndicesService indicesService,, +                                            IndicesRequestCache indicesQueryCache, ActionFilters actionFilters,, +        this.indicesRequestCache = indicesQueryCache;, +                indicesRequestCache.clear(shard);]