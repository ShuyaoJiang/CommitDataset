[+++ b/pom.xml, +                            <!-- enforce unique suite names, or reporting stuff can be screwed up -->, +                            <uniqueSuiteNames>true</uniqueSuiteNames>, +++ b/pom.xml, +                            <!-- enforce unique suite names, or reporting stuff can be screwed up -->, +                            <uniqueSuiteNames>true</uniqueSuiteNames>, +++ b/src/test/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java, +import static org.elasticsearch.test.rest.ElasticsearchRestTestCase.*;, +++ b/pom.xml, +                            <!-- enforce unique suite names, or reporting stuff can be screwed up -->, +                            <uniqueSuiteNames>true</uniqueSuiteNames>, +++ b/src/test/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java, +import static org.elasticsearch.test.rest.ElasticsearchRestTestCase.*;, +++ b/src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTestCase.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.test.rest;, +, +import com.carrotsearch.randomizedtesting.RandomizedTest;, +import com.carrotsearch.randomizedtesting.annotations.Name;, +import com.carrotsearch.randomizedtesting.annotations.ParametersFactory;, +import com.carrotsearch.randomizedtesting.annotations.TestGroup;, +import com.carrotsearch.randomizedtesting.annotations.TimeoutSuite;, +import com.google.common.collect.Lists;, +, +import org.apache.lucene.util.TimeUnits;, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.io.PathUtils;, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.node.Node;, +import org.elasticsearch.test.ElasticsearchTestCase;, +import org.elasticsearch.test.ElasticsearchIntegrationTest;, +import org.elasticsearch.test.ElasticsearchIntegrationTest.ClusterScope;, +import org.elasticsearch.test.rest.client.RestException;, +import org.elasticsearch.test.rest.parser.RestTestParseException;, +import org.elasticsearch.test.rest.parser.RestTestSuiteParser;, +import org.elasticsearch.test.rest.section.*;, +import org.elasticsearch.test.rest.spec.RestApi;, +import org.elasticsearch.test.rest.spec.RestSpec;, +import org.elasticsearch.test.rest.support.FileUtils;, +import org.junit.AfterClass;, +import org.junit.Before;, +import org.junit.BeforeClass;, +import org.junit.Test;, +, +import java.io.IOException;, +import java.nio.file.Path;, +import java.nio.file.PathMatcher;, +import java.util.*;, +, +/**, + * Runs the clients test suite against an elasticsearch cluster., + */, +@ElasticsearchTestCase.Rest, +@ClusterScope(randomDynamicTemplates = false), +@TimeoutSuite(millis = 40 * TimeUnits.MINUTE) // timeout the suite after 40min and fail the test., +public abstract class ElasticsearchRestTestCase extends ElasticsearchIntegrationTest {, +, +    /**, +     * Property that allows to control which REST tests get run. Supports comma separated list of tests, +     * or directories that contain tests e.g. -Dtests.rest.suite=index,get,create/10_with_id, +     */, +    public static final String REST_TESTS_SUITE = "tests.rest.suite";, +    /**, +     * Property that allows to blacklist some of the REST tests based on a comma separated list of globs, +     * e.g. -Dtests.rest.blacklist=get/10_basic/*, +     */, +    public static final String REST_TESTS_BLACKLIST = "tests.rest.blacklist";, +    /**, +     * Property that allows to control whether spec validation is enabled or not (default true)., +     */, +    public static final String REST_TESTS_VALIDATE_SPEC = "tests.rest.validate_spec";, +    /**, +     * Property that allows to control where the REST spec files need to be loaded from, +     */, +    public static final String REST_TESTS_SPEC = "tests.rest.spec";, +, +    private static final String DEFAULT_TESTS_PATH = "/rest-api-spec/test";, +    private static final String DEFAULT_SPEC_PATH = "/rest-api-spec/api";, +, +    private static final String PATHS_SEPARATOR = ",";, +]