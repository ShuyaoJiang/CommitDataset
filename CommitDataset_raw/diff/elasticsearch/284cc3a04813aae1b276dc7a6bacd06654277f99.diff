[+++ b/core/src/main/java/org/elasticsearch/script/ScriptMode.java, +    ON("true"),, +    OFF("false"),, +++ b/core/src/main/java/org/elasticsearch/script/ScriptMode.java, +    ON("true"),, +    OFF("false"),, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +                    "Dynamic scripts can be enabled for all languages and all operations by replacing `script.disable_dynamic: false` with `script.inline: true` and `script.indexed: true` in elasticsearch.yml");, +++ b/core/src/main/java/org/elasticsearch/script/ScriptMode.java, +    ON("true"),, +    OFF("false"),, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +                    "Dynamic scripts can be enabled for all languages and all operations by replacing `script.disable_dynamic: false` with `script.inline: true` and `script.indexed: true` in elasticsearch.yml");, +++ b/core/src/main/java/org/elasticsearch/script/ScriptSettings.java, +                            // the next fallback is global operation-based settings (e.g., "script.aggs: false"), +                            // the next fallback is global source-based settings (e.g., "script.inline: false"), +++ b/core/src/main/java/org/elasticsearch/script/ScriptMode.java, +    ON("true"),, +    OFF("false"),, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +                    "Dynamic scripts can be enabled for all languages and all operations by replacing `script.disable_dynamic: false` with `script.inline: true` and `script.indexed: true` in elasticsearch.yml");, +++ b/core/src/main/java/org/elasticsearch/script/ScriptSettings.java, +                            // the next fallback is global operation-based settings (e.g., "script.aggs: false"), +                            // the next fallback is global source-based settings (e.g., "script.inline: false"), +++ b/core/src/test/java/org/elasticsearch/script/FileScriptTests.java, +            .put("script.engine." + MockScriptEngine.NAME + ".file.aggs", "false").build();, +            .put("script.engine." + MockScriptEngine.NAME + ".file.ingest", "false").build();, +++ b/core/src/main/java/org/elasticsearch/script/ScriptMode.java, +    ON("true"),, +    OFF("false"),, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +                    "Dynamic scripts can be enabled for all languages and all operations by replacing `script.disable_dynamic: false` with `script.inline: true` and `script.indexed: true` in elasticsearch.yml");, +++ b/core/src/main/java/org/elasticsearch/script/ScriptSettings.java, +                            // the next fallback is global operation-based settings (e.g., "script.aggs: false"), +                            // the next fallback is global source-based settings (e.g., "script.inline: false"), +++ b/core/src/test/java/org/elasticsearch/script/FileScriptTests.java, +            .put("script.engine." + MockScriptEngine.NAME + ".file.aggs", "false").build();, +            .put("script.engine." + MockScriptEngine.NAME + ".file.ingest", "false").build();, +++ b/core/src/test/java/org/elasticsearch/script/ScriptContextTests.java, +            .put("script." + PLUGIN_NAME + "_custom_globally_disabled_op", "false"), +            .put("script.engine." + MockScriptEngine.NAME + ".inline." + PLUGIN_NAME + "_custom_exp_disabled_op", "false"), +++ b/core/src/main/java/org/elasticsearch/script/ScriptMode.java, +    ON("true"),, +    OFF("false"),, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +                    "Dynamic scripts can be enabled for all languages and all operations by replacing `script.disable_dynamic: false` with `script.inline: true` and `script.indexed: true` in elasticsearch.yml");, +++ b/core/src/main/java/org/elasticsearch/script/ScriptSettings.java, +                            // the next fallback is global operation-based settings (e.g., "script.aggs: false"), +                            // the next fallback is global source-based settings (e.g., "script.inline: false"), +++ b/core/src/test/java/org/elasticsearch/script/FileScriptTests.java, +            .put("script.engine." + MockScriptEngine.NAME + ".file.aggs", "false").build();, +            .put("script.engine." + MockScriptEngine.NAME + ".file.ingest", "false").build();, +++ b/core/src/test/java/org/elasticsearch/script/ScriptContextTests.java, +            .put("script." + PLUGIN_NAME + "_custom_globally_disabled_op", "false"), +            .put("script.engine." + MockScriptEngine.NAME + ".inline." + PLUGIN_NAME + "_custom_exp_disabled_op", "false"), +++ b/core/src/test/java/org/elasticsearch/script/ScriptModesTests.java, +    static final String[] ENABLE_VALUES = new String[]{"true"};, +    static final String[] DISABLE_VALUES = new String[]{"false"};, +                .put("script.indexed", randomFrom(ENABLE_VALUES)).put("script.inline", "sandbox");, +++ b/core/src/main/java/org/elasticsearch/script/ScriptMode.java, +    ON("true"),, +    OFF("false"),, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +                    "Dynamic scripts can be enabled for all languages and all operations by replacing `script.disable_dynamic: false` with `script.inline: true` and `script.indexed: true` in elasticsearch.yml");, +++ b/core/src/main/java/org/elasticsearch/script/ScriptSettings.java, +                            // the next fallback is global operation-based settings (e.g., "script.aggs: false"), +                            // the next fallback is global source-based settings (e.g., "script.inline: false"), +++ b/core/src/test/java/org/elasticsearch/script/FileScriptTests.java, +            .put("script.engine." + MockScriptEngine.NAME + ".file.aggs", "false").build();, +            .put("script.engine." + MockScriptEngine.NAME + ".file.ingest", "false").build();, +++ b/core/src/test/java/org/elasticsearch/script/ScriptContextTests.java, +            .put("script." + PLUGIN_NAME + "_custom_globally_disabled_op", "false"), +            .put("script.engine." + MockScriptEngine.NAME + ".inline." + PLUGIN_NAME + "_custom_exp_disabled_op", "false"), +++ b/core/src/test/java/org/elasticsearch/script/ScriptModesTests.java, +    static final String[] ENABLE_VALUES = new String[]{"true"};, +    static final String[] DISABLE_VALUES = new String[]{"false"};, +                .put("script.indexed", randomFrom(ENABLE_VALUES)).put("script.inline", "sandbox");, +++ b/core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java, +            builder.put("script.indexed", "sandbox");, +            builder.put("script.inline", "sandbox");, +                    builder.put("script" + "." + entry.getKey().getScriptType(), "true");, +                    builder.put("script" + "." + entry.getKey().getScriptType(), "false");, +                    builder.put("script" + "." + entry.getKey().getKey(), "true");, +                    builder.put("script" + "." + entry.getKey().getKey(), "false");, +                    builder.put("script.engine" + "." + lang + "." + part2, "true");, +                    builder.put("script.engine" + "." + lang + "." + part2, "false");, +++ b/core/src/main/java/org/elasticsearch/script/ScriptMode.java, +    ON("true"),, +    OFF("false"),, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +                    "Dynamic scripts can be enabled for all languages and all operations by replacing `script.disable_dynamic: false` with `script.inline: true` and `script.indexed: true` in elasticsearch.yml");, +++ b/core/src/main/java/org/elasticsearch/script/ScriptSettings.java, +                            // the next fallback is global operation-based settings (e.g., "script.aggs: false"), +                            // the next fallback is global source-based settings (e.g., "script.inline: false"), +++ b/core/src/test/java/org/elasticsearch/script/FileScriptTests.java, +            .put("script.engine." + MockScriptEngine.NAME + ".file.aggs", "false").build();, +            .put("script.engine." + MockScriptEngine.NAME + ".file.ingest", "false").build();, +++ b/core/src/test/java/org/elasticsearch/script/ScriptContextTests.java, +            .put("script." + PLUGIN_NAME + "_custom_globally_disabled_op", "false"), +            .put("script.engine." + MockScriptEngine.NAME + ".inline." + PLUGIN_NAME + "_custom_exp_disabled_op", "false")]