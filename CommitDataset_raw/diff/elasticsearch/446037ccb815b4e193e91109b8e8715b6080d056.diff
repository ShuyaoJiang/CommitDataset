[+++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpRequestHandler.java, +import org.elasticsearch.transport.netty4.Netty4Utils;, +        Netty4Utils.maybeDie(cause);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpRequestHandler.java, +import org.elasticsearch.transport.netty4.Netty4Utils;, +        Netty4Utils.maybeDie(cause);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpServerTransport.java, +import org.elasticsearch.common.transport.TransportAddress;, +        @Override, +        public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {, +            Netty4Utils.maybeDie(cause);, +            super.exceptionCaught(ctx, cause);, +        }, +, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpRequestHandler.java, +import org.elasticsearch.transport.netty4.Netty4Utils;, +        Netty4Utils.maybeDie(cause);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpServerTransport.java, +import org.elasticsearch.common.transport.TransportAddress;, +        @Override, +        public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {, +            Netty4Utils.maybeDie(cause);, +            super.exceptionCaught(ctx, cause);, +        }, +, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java, +        Netty4Utils.maybeDie(cause);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpRequestHandler.java, +import org.elasticsearch.transport.netty4.Netty4Utils;, +        Netty4Utils.maybeDie(cause);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpServerTransport.java, +import org.elasticsearch.common.transport.TransportAddress;, +        @Override, +        public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {, +            Netty4Utils.maybeDie(cause);, +            super.exceptionCaught(ctx, cause);, +        }, +, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java, +        Netty4Utils.maybeDie(cause);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +        @Override, +        public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {, +            Netty4Utils.maybeDie(cause);, +            super.exceptionCaught(ctx, cause);, +        }, +, +, +        @Override, +        public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {, +            Netty4Utils.maybeDie(cause);, +            super.exceptionCaught(ctx, cause);, +        }, +, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpRequestHandler.java, +import org.elasticsearch.transport.netty4.Netty4Utils;, +        Netty4Utils.maybeDie(cause);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpServerTransport.java, +import org.elasticsearch.common.transport.TransportAddress;, +        @Override, +        public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {, +            Netty4Utils.maybeDie(cause);, +            super.exceptionCaught(ctx, cause);, +        }, +, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java, +        Netty4Utils.maybeDie(cause);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +        @Override, +        public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {, +            Netty4Utils.maybeDie(cause);, +            super.exceptionCaught(ctx, cause);, +        }, +, +, +        @Override, +        public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {, +            Netty4Utils.maybeDie(cause);, +            super.exceptionCaught(ctx, cause);, +        }, +, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Utils.java, +, +import org.elasticsearch.common.logging.ESLoggerFactory;, +import java.io.PrintWriter;, +import java.io.StringWriter;, +import java.util.Arrays;, +            // usually we have one, two, or three components from the header, the message, and a buffer, +    public static void maybeDie(final Throwable cause) throws IOException {, +        if (cause instanceof Error) {, +            /*, +             * Here be dragons. We want to rethrow this so that it bubbles up to the uncaught exception handler. Yet, Netty wraps too many, +             * invocations of user-code in try/catch blocks that swallow all throwables. This means that a rethrow here will not bubble up, +             * to where we want it to. So, we fork a thread and throw the exception from there where Netty can not get to it. We do not wrap, +             * the exception so as to not lose the original cause during exit, so we give the thread a name based on the previous stack, +             * frame so that at least we know where it came from (in case logging the current stack trace fails)., +             */, +            try (, +                final StringWriter sw = new StringWriter();, +                final PrintWriter pw = new PrintWriter(sw)) {]