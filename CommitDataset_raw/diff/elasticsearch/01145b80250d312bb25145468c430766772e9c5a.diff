[+++ b/src/main/java/org/elasticsearch/alerts/Alert.java, +        this.transform = transform;, +        if (transform != null) {, +++ b/src/main/java/org/elasticsearch/alerts/Alert.java, +        this.transform = transform;, +        if (transform != null) {, +++ b/src/main/java/org/elasticsearch/alerts/AlertExecution.java, +import org.elasticsearch.alerts.transform.Transform;, +import org.elasticsearch.alerts.transform.TransformRegistry;, +import org.elasticsearch.common.Nullable;, +    private final @Nullable Transform.Result transformResult;, +        this(context.inputResult(), context.conditionResult(), context.throttleResult(), context.transformResult(), context.actionsResults());, +    AlertExecution(Input.Result inputResult, Condition.Result conditionResult, Throttler.Result throttleResult, @Nullable Transform.Result transformResult, Map<String, Action.Result> actionsResults) {, +        this.transformResult = transformResult;, +    }, +, +    public Input.Result inputResult() {, +        return inputResult;, +    public Transform.Result transformResult() {, +        return transformResult;, +    public Map<String, Action.Result> actionsResults() {, +        return actionsResults;, +            builder.startObject(Parser.INPUT_RESULT_FIELD.getPreferredName()).field(inputResult.type(), inputResult).endObject();, +            builder.startObject(Parser.CONDITION_RESULT_FIELD.getPreferredName()).field(conditionResult.type(), conditionResult).endObject();, +        if (transformResult != null) {, +            builder.startObject(Transform.Parser.TRANSFORM_RESULT_FIELD.getPreferredName()).field(transformResult.type(), transformResult).endObject();, +        }, +        public static final ParseField INPUT_RESULT_FIELD = new ParseField("input_result");, +        public static final ParseField CONDITION_RESULT_FIELD = new ParseField("condition_result");, +                                           InputRegistry inputRegistry, TransformRegistry transformRegistry) throws IOException {, +            Transform.Result transformResult = null;, +                    if (INPUT_RESULT_FIELD.match(currentFieldName)) {, +                    } else if (CONDITION_RESULT_FIELD.match(currentFieldName)) {, +                    } else if (Transform.Parser.TRANSFORM_RESULT_FIELD.match(currentFieldName)) {, +                        transformResult = transformRegistry.parseResult(parser);, +            return new AlertExecution(inputResult, conditionResult, throttleResult, transformResult, actionResults);, +++ b/src/main/java/org/elasticsearch/alerts/Alert.java, +        this.transform = transform;, +        if (transform != null) {, +++ b/src/main/java/org/elasticsearch/alerts/AlertExecution.java, +import org.elasticsearch.alerts.transform.Transform;, +import org.elasticsearch.alerts.transform.TransformRegistry;, +import org.elasticsearch.common.Nullable;, +    private final @Nullable Transform.Result transformResult;, +        this(context.inputResult(), context.conditionResult(), context.throttleResult(), context.transformResult(), context.actionsResults());, +    AlertExecution(Input.Result inputResult, Condition.Result conditionResult, Throttler.Result throttleResult, @Nullable Transform.Result transformResult, Map<String, Action.Result> actionsResults) {, +        this.transformResult = transformResult;, +    }, +, +    public Input.Result inputResult() {, +        return inputResult;, +    public Transform.Result transformResult() {, +        return transformResult;, +    public Map<String, Action.Result> actionsResults() {, +        return actionsResults;, +            builder.startObject(Parser.INPUT_RESULT_FIELD.getPreferredName()).field(inputResult.type(), inputResult).endObject();, +            builder.startObject(Parser.CONDITION_RESULT_FIELD.getPreferredName()).field(conditionResult.type(), conditionResult).endObject();, +        if (transformResult != null) {, +            builder.startObject(Transform.Parser.TRANSFORM_RESULT_FIELD.getPreferredName()).field(transformResult.type(), transformResult).endObject();, +        }, +        public static final ParseField INPUT_RESULT_FIELD = new ParseField("input_result");, +        public static final ParseField CONDITION_RESULT_FIELD = new ParseField("condition_result");, +                                           InputRegistry inputRegistry, TransformRegistry transformRegistry) throws IOException {, +            Transform.Result transformResult = null;, +                    if (INPUT_RESULT_FIELD.match(currentFieldName)) {, +                    } else if (CONDITION_RESULT_FIELD.match(currentFieldName)) {, +                    } else if (Transform.Parser.TRANSFORM_RESULT_FIELD.match(currentFieldName)) {, +                        transformResult = transformRegistry.parseResult(parser);, +            return new AlertExecution(inputResult, conditionResult, throttleResult, transformResult, actionResults);, +++ b/src/main/java/org/elasticsearch/alerts/actions/Action.java, +    public R execute(ExecutionContext context) throws IOException {, +        Payload payload = context.payload();, +        R result = execute(context, payload);, +    protected abstract R execute(ExecutionContext context, Payload payload) throws IOException;, +                builder.startObject(Transform.Parser.TRANSFORM_RESULT_FIELD.getPreferredName()), +                        .field(transformResult.type(), transformResult), +                        .endObject();, +++ b/src/main/java/org/elasticsearch/alerts/Alert.java, +        this.transform = transform;, +        if (transform != null) {, +++ b/src/main/java/org/elasticsearch/alerts/AlertExecution.java, +import org.elasticsearch.alerts.transform.Transform;, +import org.elasticsearch.alerts.transform.TransformRegistry;, +import org.elasticsearch.common.Nullable;, +    private final @Nullable Transform.Result transformResult;, +        this(context.inputResult(), context.conditionResult(), context.throttleResult(), context.transformResult(), context.actionsResults());, +    AlertExecution(Input.Result inputResult, Condition.Result conditionResult, Throttler.Result throttleResult, @Nullable Transform.Result transformResult, Map<String, Action.Result> actionsResults) {, +        this.transformResult = transformResult;, +    }, +, +    public Input.Result inputResult() {, +        return inputResult;, +    public Transform.Result transformResult() {, +        return transformResult;, +    public Map<String, Action.Result> actionsResults() {, +        return actionsResults;, +            builder.startObject(Parser.INPUT_RESULT_FIELD.getPreferredName()).field(inputResult.type(), inputResult).endObject();, +            builder.startObject(Parser.CONDITION_RESULT_FIELD.getPreferredName()).field(conditionResult.type(), conditionResult).endObject();, +        if (transformResult != null) {, +            builder.startObject(Transform.Parser.TRANSFORM_RESULT_FIELD.getPreferredName()).field(transformResult.type(), transformResult).endObject();]