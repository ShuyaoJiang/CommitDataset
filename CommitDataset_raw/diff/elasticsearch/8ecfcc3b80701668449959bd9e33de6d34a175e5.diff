[+++ b/buildSrc/src/test/java/org/elasticsearch/gradle/precommit/NamingConventionsTaskIT.java, +++ b/buildSrc/src/test/java/org/elasticsearch/gradle/precommit/NamingConventionsTaskIT.java, +++ b/client/benchmark/build.gradle, +check.dependsOn.remove(test), +// explicitly override the test task too in case somebody invokes 'gradle test' so it won't trip, +task test(type: Test, overwrite: true), +++ b/buildSrc/src/test/java/org/elasticsearch/gradle/precommit/NamingConventionsTaskIT.java, +++ b/client/benchmark/build.gradle, +check.dependsOn.remove(test), +// explicitly override the test task too in case somebody invokes 'gradle test' so it won't trip, +task test(type: Test, overwrite: true), +++ b/docs/plugins/api.asciidoc, +++ b/buildSrc/src/test/java/org/elasticsearch/gradle/precommit/NamingConventionsTaskIT.java, +++ b/client/benchmark/build.gradle, +check.dependsOn.remove(test), +// explicitly override the test task too in case somebody invokes 'gradle test' so it won't trip, +task test(type: Test, overwrite: true), +++ b/docs/plugins/api.asciidoc, +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/buildSrc/src/test/java/org/elasticsearch/gradle/precommit/NamingConventionsTaskIT.java, +++ b/client/benchmark/build.gradle, +check.dependsOn.remove(test), +// explicitly override the test task too in case somebody invokes 'gradle test' so it won't trip, +task test(type: Test, overwrite: true), +++ b/docs/plugins/api.asciidoc, +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1",, +                     "min_retained_seq_no": "0", +++ b/buildSrc/src/test/java/org/elasticsearch/gradle/precommit/NamingConventionsTaskIT.java, +++ b/client/benchmark/build.gradle, +check.dependsOn.remove(test), +// explicitly override the test task too in case somebody invokes 'gradle test' so it won't trip, +task test(type: Test, overwrite: true), +++ b/docs/plugins/api.asciidoc, +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1",, +                     "min_retained_seq_no": "0", +++ b/docs/reference/licensing/get-trial-status.asciidoc, +If a license is not already registered for the cluster, one is generated when, +the nodes start. By default, this is a 30-day trial license that gives access, +to all {xpack} features., +already activated a trial license for the current major X-Pack version. For, +++ b/buildSrc/src/test/java/org/elasticsearch/gradle/precommit/NamingConventionsTaskIT.java, +++ b/client/benchmark/build.gradle, +check.dependsOn.remove(test), +// explicitly override the test task too in case somebody invokes 'gradle test' so it won't trip, +task test(type: Test, overwrite: true), +++ b/docs/plugins/api.asciidoc, +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1",, +                     "min_retained_seq_no": "0", +++ b/docs/reference/licensing/get-trial-status.asciidoc, +If a license is not already registered for the cluster, one is generated when, +the nodes start. By default, this is a 30-day trial license that gives access, +to all {xpack} features., +already activated a trial license for the current major X-Pack version. For, +++ b/docs/reference/licensing/start-basic.asciidoc, +gives access to all {xpack} basic features. If the basic license does not support, +++ b/buildSrc/src/test/java/org/elasticsearch/gradle/precommit/NamingConventionsTaskIT.java, +++ b/client/benchmark/build.gradle, +check.dependsOn.remove(test), +// explicitly override the test task too in case somebody invokes 'gradle test' so it won't trip, +task test(type: Test, overwrite: true), +++ b/docs/plugins/api.asciidoc, +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1",, +                     "min_retained_seq_no": "0", +++ b/docs/reference/licensing/get-trial-status.asciidoc, +If a license is not already registered for the cluster, one is generated when, +the nodes start. By default, this is a 30-day trial license that gives access, +to all {xpack} features., +already activated a trial license for the current major X-Pack version. For, +++ b/docs/reference/licensing/start-basic.asciidoc, +gives access to all {xpack} basic features. If the basic license does not support, +++ b/docs/reference/licensing/start-trial.asciidoc, +trial license, which gives access to all {xpack} features.]