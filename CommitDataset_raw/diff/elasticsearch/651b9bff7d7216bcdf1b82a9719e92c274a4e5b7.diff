[+++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    private final AsyncTranslogFSync fsyncTask;, +        if (this.indexSettings.getTranslogSyncInterval().millis() != 0) {, +            this.fsyncTask = new AsyncTranslogFSync(this);, +        } else {, +            this.fsyncTask = null;, +        }, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    private final AsyncTranslogFSync fsyncTask;, +        if (this.indexSettings.getTranslogSyncInterval().millis() != 0) {, +            this.fsyncTask = new AsyncTranslogFSync(this);, +        } else {, +            this.fsyncTask = null;, +        }, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<TimeValue> INDEX_TRANSLOG_SYNC_INTERVAL_SETTING = Setting.timeSetting("index.translog.sync_interval", TimeValue.timeValueSeconds(5), false, Setting.Scope.INDEX);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    private final AsyncTranslogFSync fsyncTask;, +        if (this.indexSettings.getTranslogSyncInterval().millis() != 0) {, +            this.fsyncTask = new AsyncTranslogFSync(this);, +        } else {, +            this.fsyncTask = null;, +        }, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<TimeValue> INDEX_TRANSLOG_SYNC_INTERVAL_SETTING = Setting.timeSetting("index.translog.sync_interval", TimeValue.timeValueSeconds(5), false, Setting.Scope.INDEX);, +++ b/core/src/main/java/org/elasticsearch/index/translog/Translog.java, +                if (config.isSyncOnEachOperation()) {, +                    current.sync();, +                }, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    private final AsyncTranslogFSync fsyncTask;, +        if (this.indexSettings.getTranslogSyncInterval().millis() != 0) {, +            this.fsyncTask = new AsyncTranslogFSync(this);, +        } else {, +            this.fsyncTask = null;, +        }, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<TimeValue> INDEX_TRANSLOG_SYNC_INTERVAL_SETTING = Setting.timeSetting("index.translog.sync_interval", TimeValue.timeValueSeconds(5), false, Setting.Scope.INDEX);, +++ b/core/src/main/java/org/elasticsearch/index/translog/Translog.java, +                if (config.isSyncOnEachOperation()) {, +                    current.sync();, +                }, +++ b/core/src/main/java/org/elasticsearch/index/translog/TranslogConfig.java, +     * Returns <code>true</code> iff each low level operation shoudl be fsynced, +     */, +    public boolean isSyncOnEachOperation() {, +        return indexSettings.getTranslogSyncInterval().millis() == 0;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    private final AsyncTranslogFSync fsyncTask;, +        if (this.indexSettings.getTranslogSyncInterval().millis() != 0) {, +            this.fsyncTask = new AsyncTranslogFSync(this);, +        } else {, +            this.fsyncTask = null;, +        }, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<TimeValue> INDEX_TRANSLOG_SYNC_INTERVAL_SETTING = Setting.timeSetting("index.translog.sync_interval", TimeValue.timeValueSeconds(5), false, Setting.Scope.INDEX);, +++ b/core/src/main/java/org/elasticsearch/index/translog/Translog.java, +                if (config.isSyncOnEachOperation()) {, +                    current.sync();, +                }, +++ b/core/src/main/java/org/elasticsearch/index/translog/TranslogConfig.java, +     * Returns <code>true</code> iff each low level operation shoudl be fsynced, +     */, +    public boolean isSyncOnEachOperation() {, +        return indexSettings.getTranslogSyncInterval().millis() == 0;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +            SettingsModule settingsModule = new SettingsModule(this.settings, settingsFilter);, +            modules.add(settingsModule);, +            modules.add(new ScriptModule(settingsModule));, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    private final AsyncTranslogFSync fsyncTask;, +        if (this.indexSettings.getTranslogSyncInterval().millis() != 0) {, +            this.fsyncTask = new AsyncTranslogFSync(this);, +        } else {, +            this.fsyncTask = null;, +        }, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<TimeValue> INDEX_TRANSLOG_SYNC_INTERVAL_SETTING = Setting.timeSetting("index.translog.sync_interval", TimeValue.timeValueSeconds(5), false, Setting.Scope.INDEX);, +++ b/core/src/main/java/org/elasticsearch/index/translog/Translog.java, +                if (config.isSyncOnEachOperation()) {, +                    current.sync();, +                }, +++ b/core/src/main/java/org/elasticsearch/index/translog/TranslogConfig.java, +     * Returns <code>true</code> iff each low level operation shoudl be fsynced, +     */, +    public boolean isSyncOnEachOperation() {, +        return indexSettings.getTranslogSyncInterval().millis() == 0;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +            SettingsModule settingsModule = new SettingsModule(this.settings, settingsFilter);, +            modules.add(settingsModule);, +            modules.add(new ScriptModule(settingsModule));]