[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "org.apache.logging.log4j:log4j-api:${project.versions.log4j}", +            provided "org.apache.logging.log4j:log4j-core:${project.versions.log4j}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "org.apache.logging.log4j:log4j-api:${project.versions.log4j}", +            provided "org.apache.logging.log4j:log4j-core:${project.versions.log4j}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "org.apache.logging.log4j:log4j-api:${project.versions.log4j}", +            provided "org.apache.logging.log4j:log4j-core:${project.versions.log4j}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/buildSrc/version.properties, +log4j             = 2.6.2, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "org.apache.logging.log4j:log4j-api:${project.versions.log4j}", +            provided "org.apache.logging.log4j:log4j-core:${project.versions.log4j}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/buildSrc/version.properties, +log4j             = 2.6.2, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/ops/bulk/BulkBenchmarkTask.java, +import org.apache.logging.log4j.Logger;, +        private static final Logger logger = ESLoggerFactory.getLogger(BulkIndexer.class.getName());, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "org.apache.logging.log4j:log4j-api:${project.versions.log4j}", +            provided "org.apache.logging.log4j:log4j-core:${project.versions.log4j}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/buildSrc/version.properties, +log4j             = 2.6.2, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/ops/bulk/BulkBenchmarkTask.java, +import org.apache.logging.log4j.Logger;, +        private static final Logger logger = ESLoggerFactory.getLogger(BulkIndexer.class.getName());, +++ b/core/build.gradle, +  compile "org.apache.logging.log4j:log4j-api:${versions.log4j}", optional, +  compile "org.apache.logging.log4j:log4j-core:${versions.log4j}", optional, +  // to bridge dependencies that are still on Log4j 1 to Log4j 2, +  compile "org.apache.logging.log4j:log4j-1.2-api:${versions.log4j}", optional, +  // from log4j, +  'com.fasterxml.jackson.annotation.JsonInclude$Include',, +  'com.fasterxml.jackson.databind.DeserializationContext',, +  'com.fasterxml.jackson.databind.JsonMappingException',, +  'com.fasterxml.jackson.databind.JsonNode',, +  'com.fasterxml.jackson.databind.Module$SetupContext',, +  'com.fasterxml.jackson.databind.ObjectReader',, +  'com.fasterxml.jackson.databind.ObjectWriter',, +  'com.fasterxml.jackson.databind.SerializerProvider',, +  'com.fasterxml.jackson.databind.deser.std.StdDeserializer',, +  'com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer',, +  'com.fasterxml.jackson.databind.module.SimpleModule',, +  'com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter',, +  'com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider',, +  'com.fasterxml.jackson.databind.ser.std.StdScalarSerializer',, +  'com.fasterxml.jackson.databind.ser.std.StdSerializer',, +  'com.fasterxml.jackson.dataformat.xml.JacksonXmlModule',, +  'com.fasterxml.jackson.dataformat.xml.XmlMapper',, +  'com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter',, +  'com.lmax.disruptor.BlockingWaitStrategy',, +  'com.lmax.disruptor.BusySpinWaitStrategy',, +  'com.lmax.disruptor.EventFactory',, +  'com.lmax.disruptor.EventTranslator',, +  'com.lmax.disruptor.EventTranslatorTwoArg',, +  'com.lmax.disruptor.EventTranslatorVararg',, +  'com.lmax.disruptor.ExceptionHandler',, +  'com.lmax.disruptor.LifecycleAware',, +  'com.lmax.disruptor.RingBuffer',, +  'com.lmax.disruptor.Sequence',, +  'com.lmax.disruptor.SequenceReportingEventHandler',, +  'com.lmax.disruptor.SleepingWaitStrategy',, +  'com.lmax.disruptor.TimeoutBlockingWaitStrategy',, +  'com.lmax.disruptor.WaitStrategy',, +  'com.lmax.disruptor.YieldingWaitStrategy',, +  'com.lmax.disruptor.dsl.Disruptor',, +  'com.lmax.disruptor.dsl.ProducerType',, +  'javax.jms.Connection',, +  'javax.jms.ConnectionFactory',, +  'javax.jms.Destination',, +  'javax.jms.MessageConsumer',, +  'javax.jms.MessageProducer',, +  'javax.jms.Session',, +  'javax.mail.util.ByteArrayDataSource',, +  'javax.persistence.AttributeConverter',, +  'javax.persistence.EntityManager',, +  'javax.persistence.EntityManagerFactory',, +  'javax.persistence.EntityTransaction',, +  'javax.persistence.Persistence',, +  'javax.persistence.PersistenceException',, +  'org.apache.commons.compress.compressors.CompressorStreamFactory',, +  'org.apache.commons.compress.utils.IOUtils',, +  'org.apache.commons.csv.CSVFormat',, +  'org.apache.commons.csv.QuoteMode',, +  'org.apache.kafka.clients.producer.KafkaProducer',, +  'org.apache.kafka.clients.producer.Producer',, +  'org.apache.kafka.clients.producer.ProducerRecord',]