[+++ b/server/src/test/java/org/elasticsearch/discovery/ZenFaultDetectionTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +                new MockNioTransport(settings, version, threadPool, new NetworkService(Collections.emptyList()),, +                    PageCacheRecycler.NON_RECYCLING_INSTANCE, namedWriteableRegistry, circuitBreakerService),, +++ b/server/src/test/java/org/elasticsearch/discovery/ZenFaultDetectionTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +                new MockNioTransport(settings, version, threadPool, new NetworkService(Collections.emptyList()),, +                    PageCacheRecycler.NON_RECYCLING_INSTANCE, namedWriteableRegistry, circuitBreakerService),, +++ b/server/src/test/java/org/elasticsearch/discovery/zen/UnicastZenPingTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +        final BiFunction<Settings, Version, Transport> supplier = (s, v) -> new MockNioTransport(, +            v,, +            PageCacheRecycler.NON_RECYCLING_INSTANCE,, +            new NamedWriteableRegistry(Collections.emptyList()),, +            new NoneCircuitBreakerService());, +        final BiFunction<Settings, Version, Transport> supplier = (s, v) -> new MockNioTransport(, +            v,, +            PageCacheRecycler.NON_RECYCLING_INSTANCE,, +            new NamedWriteableRegistry(Collections.emptyList()),, +            new NoneCircuitBreakerService()) {, +        final BiFunction<Settings, Version, Transport> supplier = (s, v) -> new MockNioTransport(, +            v,, +            PageCacheRecycler.NON_RECYCLING_INSTANCE,, +            new NamedWriteableRegistry(Collections.emptyList()),, +            new NoneCircuitBreakerService());, +        final Transport transport = new MockNioTransport(, +            Version.CURRENT,, +            new NetworkService(Collections.emptyList()),, +            PageCacheRecycler.NON_RECYCLING_INSTANCE,, +            new NoneCircuitBreakerService()) {]