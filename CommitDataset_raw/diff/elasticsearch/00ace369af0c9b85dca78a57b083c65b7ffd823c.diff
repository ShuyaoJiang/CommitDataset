[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/CcrRequestConverters.java, +        RequestConverters.Params parameters = new RequestConverters.Params(request);, +        parameters.withWaitForActiveShards(putFollowRequest.waitForActiveShards());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/CcrRequestConverters.java, +        RequestConverters.Params parameters = new RequestConverters.Params(request);, +        parameters.withWaitForActiveShards(putFollowRequest.waitForActiveShards());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ccr/PutFollowRequest.java, +import org.elasticsearch.action.support.ActiveShardCount;, +    private final ActiveShardCount waitForActiveShards;, +        this(remoteCluster, leaderIndex, followerIndex, ActiveShardCount.NONE);, +    }, +, +    public PutFollowRequest(String remoteCluster, String leaderIndex, String followerIndex, ActiveShardCount waitForActiveShards) {, +        this.waitForActiveShards = waitForActiveShards;, +    public ActiveShardCount waitForActiveShards() {, +        return waitForActiveShards;, +    }, +, +        return Objects.equals(waitForActiveShards, that.waitForActiveShards) &&, +            Objects.equals(remoteCluster, that.remoteCluster) &&, +            followerIndex,, +            waitForActiveShards);, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/CcrRequestConverters.java, +        RequestConverters.Params parameters = new RequestConverters.Params(request);, +        parameters.withWaitForActiveShards(putFollowRequest.waitForActiveShards());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ccr/PutFollowRequest.java, +import org.elasticsearch.action.support.ActiveShardCount;, +    private final ActiveShardCount waitForActiveShards;, +        this(remoteCluster, leaderIndex, followerIndex, ActiveShardCount.NONE);, +    }, +, +    public PutFollowRequest(String remoteCluster, String leaderIndex, String followerIndex, ActiveShardCount waitForActiveShards) {, +        this.waitForActiveShards = waitForActiveShards;, +    public ActiveShardCount waitForActiveShards() {, +        return waitForActiveShards;, +    }, +, +        return Objects.equals(waitForActiveShards, that.waitForActiveShards) &&, +            Objects.equals(remoteCluster, that.remoteCluster) &&, +            followerIndex,, +            waitForActiveShards);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CCRIT.java, +import org.elasticsearch.action.support.ActiveShardCount;, +        PutFollowRequest putFollowRequest = new PutFollowRequest("local_cluster", "leader", "follower", ActiveShardCount.ONE);, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/CcrRequestConverters.java, +        RequestConverters.Params parameters = new RequestConverters.Params(request);, +        parameters.withWaitForActiveShards(putFollowRequest.waitForActiveShards());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ccr/PutFollowRequest.java, +import org.elasticsearch.action.support.ActiveShardCount;, +    private final ActiveShardCount waitForActiveShards;, +        this(remoteCluster, leaderIndex, followerIndex, ActiveShardCount.NONE);, +    }, +, +    public PutFollowRequest(String remoteCluster, String leaderIndex, String followerIndex, ActiveShardCount waitForActiveShards) {, +        this.waitForActiveShards = waitForActiveShards;, +    public ActiveShardCount waitForActiveShards() {, +        return waitForActiveShards;, +    }, +, +        return Objects.equals(waitForActiveShards, that.waitForActiveShards) &&, +            Objects.equals(remoteCluster, that.remoteCluster) &&, +            followerIndex,, +            waitForActiveShards);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CCRIT.java, +import org.elasticsearch.action.support.ActiveShardCount;, +        PutFollowRequest putFollowRequest = new PutFollowRequest("local_cluster", "leader", "follower", ActiveShardCount.ONE);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CCRDocumentationIT.java, +import org.elasticsearch.action.support.ActiveShardCount;, +            "follower", // <3>, +            ActiveShardCount.ONE // <4>, +            PutFollowRequest putFollowRequest = new PutFollowRequest("local", "leader", followIndex, ActiveShardCount.ONE);, +            PutFollowRequest putFollowRequest = new PutFollowRequest("local", "leader", followIndex, ActiveShardCount.ONE);, +            PutFollowRequest putFollowRequest = new PutFollowRequest("local", "leader", followIndex, ActiveShardCount.ONE);, +            PutFollowRequest putFollowRequest = new PutFollowRequest("local", "leader", followIndex, ActiveShardCount.ONE);, +            PutFollowRequest putFollowRequest = new PutFollowRequest("local", "leader", "follower", ActiveShardCount.ONE);, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/CcrRequestConverters.java, +        RequestConverters.Params parameters = new RequestConverters.Params(request);, +        parameters.withWaitForActiveShards(putFollowRequest.waitForActiveShards());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ccr/PutFollowRequest.java, +import org.elasticsearch.action.support.ActiveShardCount;, +    private final ActiveShardCount waitForActiveShards;, +        this(remoteCluster, leaderIndex, followerIndex, ActiveShardCount.NONE);, +    }, +, +    public PutFollowRequest(String remoteCluster, String leaderIndex, String followerIndex, ActiveShardCount waitForActiveShards) {, +        this.waitForActiveShards = waitForActiveShards;, +    public ActiveShardCount waitForActiveShards() {, +        return waitForActiveShards;, +    }, +, +        return Objects.equals(waitForActiveShards, that.waitForActiveShards) &&, +            Objects.equals(remoteCluster, that.remoteCluster) &&, +            followerIndex,, +            waitForActiveShards);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CCRIT.java, +import org.elasticsearch.action.support.ActiveShardCount;, +        PutFollowRequest putFollowRequest = new PutFollowRequest("local_cluster", "leader", "follower", ActiveShardCount.ONE);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CCRDocumentationIT.java, +import org.elasticsearch.action.support.ActiveShardCount;, +            "follower", // <3>]