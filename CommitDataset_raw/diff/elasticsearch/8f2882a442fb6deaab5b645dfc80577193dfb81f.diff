[+++ b/.github/ISSUE_TEMPLATE.md, +Bug reports on an OS that we do not support or feature requests, +specific to an OS that we do not support will be closed., +++ b/.github/ISSUE_TEMPLATE.md, +Bug reports on an OS that we do not support or feature requests, +specific to an OS that we do not support will be closed., +++ b/build.gradle, +    // for transport client, +    "org.elasticsearch.plugin:transport-netty3-client:${version}": ':modules:transport-netty3',, +    "org.elasticsearch.plugin:transport-netty4-client:${version}": ':modules:transport-netty4',, +    "org.elasticsearch.plugin:reindex-client:${version}": ':modules:reindex',, +    "org.elasticsearch.plugin:lang-mustache-client:${version}": ':modules:lang-mustache',, +    "org.elasticsearch.plugin:percolator-client:${version}": ':modules:percolator',, +++ b/.github/ISSUE_TEMPLATE.md, +Bug reports on an OS that we do not support or feature requests, +specific to an OS that we do not support will be closed., +++ b/build.gradle, +    // for transport client, +    "org.elasticsearch.plugin:transport-netty3-client:${version}": ':modules:transport-netty3',, +    "org.elasticsearch.plugin:transport-netty4-client:${version}": ':modules:transport-netty4',, +    "org.elasticsearch.plugin:reindex-client:${version}": ':modules:reindex',, +    "org.elasticsearch.plugin:lang-mustache-client:${version}": ':modules:lang-mustache',, +    "org.elasticsearch.plugin:percolator-client:${version}": ':modules:percolator',, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.api.publish.maven.plugins.MavenPublishPlugin, +        repos.maven {, +            name 'netty-snapshots', +            url "http://s3.amazonaws.com/download.elasticsearch.org/nettysnapshots/20160722", +        }, +        project.plugins.withType(MavenPublishPlugin.class).whenPluginAdded {, +++ b/.github/ISSUE_TEMPLATE.md, +Bug reports on an OS that we do not support or feature requests, +specific to an OS that we do not support will be closed., +++ b/build.gradle, +    // for transport client, +    "org.elasticsearch.plugin:transport-netty3-client:${version}": ':modules:transport-netty3',, +    "org.elasticsearch.plugin:transport-netty4-client:${version}": ':modules:transport-netty4',, +    "org.elasticsearch.plugin:reindex-client:${version}": ':modules:reindex',, +    "org.elasticsearch.plugin:lang-mustache-client:${version}": ':modules:lang-mustache',, +    "org.elasticsearch.plugin:percolator-client:${version}": ':modules:percolator',, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.api.publish.maven.plugins.MavenPublishPlugin, +        repos.maven {, +            name 'netty-snapshots', +            url "http://s3.amazonaws.com/download.elasticsearch.org/nettysnapshots/20160722", +        }, +        project.plugins.withType(MavenPublishPlugin.class).whenPluginAdded {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +++ b/.github/ISSUE_TEMPLATE.md, +Bug reports on an OS that we do not support or feature requests, +specific to an OS that we do not support will be closed., +++ b/build.gradle, +    // for transport client, +    "org.elasticsearch.plugin:transport-netty3-client:${version}": ':modules:transport-netty3',, +    "org.elasticsearch.plugin:transport-netty4-client:${version}": ':modules:transport-netty4',, +    "org.elasticsearch.plugin:reindex-client:${version}": ':modules:reindex',, +    "org.elasticsearch.plugin:lang-mustache-client:${version}": ':modules:lang-mustache',, +    "org.elasticsearch.plugin:percolator-client:${version}": ':modules:percolator',, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.api.publish.maven.plugins.MavenPublishPlugin, +        repos.maven {, +            name 'netty-snapshots', +            url "http://s3.amazonaws.com/download.elasticsearch.org/nettysnapshots/20160722", +        }, +        project.plugins.withType(MavenPublishPlugin.class).whenPluginAdded {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import org.gradle.api.Task, +import org.gradle.api.XmlProvider, +import org.gradle.api.publish.maven.MavenPublication, +import org.gradle.api.publish.maven.plugins.MavenPublishPlugin, +, +import java.nio.file.Files, +import java.nio.file.Path, +import java.nio.file.StandardCopyOption, +import java.util.regex.Matcher, +import java.util.regex.Pattern, +, +            boolean isModule = project.path.startsWith(':modules:'), +            if (project.pluginProperties.extension.hasClientJar) {, +                // for plugins which work with the transport client, we copy the jar, +                // file to a new name, copy the nebula generated pom to the same name,, +                // and generate a different pom for the zip, +                project.signArchives.enabled = false, +                addJarPomGeneration(project), +                addClientJarTask(project), +                if (isModule == false) {, +                    addZipPomGeneration(project), +                }, +            } else {, +                // no client plugin, so use the pom file from nebula, without jar, for the zip, +                project.ext.set("nebulaPublish.maven.jar", false), +            }, +, +            if (isModule) {, +                project.integTest.clusterConfig.plugin(project.path), +                project.tasks.run.clusterConfig.plugin(project.path), +                addZipPomGeneration(project), +        project.configurations.getByName('default').extendsFrom(project.configurations.getByName('runtime')), +        // also make the zip available as a configuration (used when depending on this project)]