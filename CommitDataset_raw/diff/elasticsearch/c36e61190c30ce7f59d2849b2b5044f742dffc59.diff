[+++ b/dev-tools/src/main/resources/license-check/check_license_and_sha.pl, +use 5.010_000;, +use File::Temp 0.2304 ();, +++ b/dev-tools/src/main/resources/license-check/check_license_and_sha.pl, +use 5.010_000;, +use File::Temp 0.2304 ();, +++ b/dev-tools/src/main/resources/license-check/lib/File/Temp.pm, +package File::Temp;, +# ABSTRACT: return name and handle of a temporary file safely, +our $VERSION = '0.2304'; # VERSION, +, +, +# Toolchain targets v5.8.1, but we'll try to support back to v5.6 anyway., +# It might be possible to make this v5.5, but many v5.6isms are creeping, +# into the code and tests., +use 5.006;, +use strict;, +use Carp;, +use File::Spec 0.8;, +use Cwd ();, +use File::Path 2.06 qw/ rmtree /;, +use Fcntl 1.03;, +use IO::Seekable;               # For SEEK_*, +use Errno;, +use Scalar::Util 'refaddr';, +require VMS::Stdio if $^O eq 'VMS';, +, +# pre-emptively load Carp::Heavy. If we don't when we run out of file, +# handles and attempt to call croak() we get an error message telling, +# us that Carp::Heavy won't load rather than an error telling us we, +# have run out of file handles. We either preload croak() or we, +# switch the calls to croak from _gettemp() to use die., +eval { require Carp::Heavy; };, +, +# Need the Symbol package if we are running older perl, +require Symbol if $] < 5.006;, +, +### For the OO interface, +use parent 0.221 qw/ IO::Handle IO::Seekable /;, +use overload '""' => "STRINGIFY", '0+' => "NUMIFY",, +  fallback => 1;, +, +# use 'our' on v5.6.0, +use vars qw(@EXPORT_OK %EXPORT_TAGS $DEBUG $KEEP_ALL);, +, +$DEBUG = 0;, +$KEEP_ALL = 0;, +, +# We are exporting functions, +, +use Exporter 5.57 'import';   # 5.57 lets us import 'import', +, +# Export list - to allow fine tuning of export table, +, +@EXPORT_OK = qw{, +                 tempfile, +                 tempdir, +                 tmpnam, +                 tmpfile, +                 mktemp, +                 mkstemp, +                 mkstemps, +                 mkdtemp, +                 unlink0, +                 cleanup, +                 SEEK_SET, +                 SEEK_CUR, +                 SEEK_END, +             };, +, +# Groups of functions for export, +, +%EXPORT_TAGS = (, +                'POSIX' => [qw/ tmpnam tmpfile /],, +                'mktemp' => [qw/ mktemp mkstemp mkstemps mkdtemp/],, +                'seekable' => [qw/ SEEK_SET SEEK_CUR SEEK_END /],, +               );, +, +# add contents of these tags to @EXPORT, +Exporter::export_tags('POSIX','mktemp','seekable');, +, +# This is a list of characters that can be used in random filenames, +, +my @CHARS = (qw/ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z, +                 a b c d e f g h i j k l m n o p q r s t u v w x y z, +                 0 1 2 3 4 5 6 7 8 9 _, +               /);, +, +# Maximum number of tries to make a temp file before failing, +, +use constant MAX_TRIES => 1000;, +, +# Minimum number of X characters that should be in a template, +use constant MINX => 4;, +, +# Default template when no template supplied, +, +use constant TEMPXXX => 'X' x 10;, +, +# Constants for the security level]