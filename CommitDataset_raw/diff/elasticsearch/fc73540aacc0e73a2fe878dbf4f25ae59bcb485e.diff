[+++ b/docs/community/clients.asciidoc, +, +* https://github.com/ropensci/elastic[elastic]: , +  A general purpose R client for Elasticsearch, +++ b/docs/community/clients.asciidoc, +, +* https://github.com/ropensci/elastic[elastic]: , +  A general purpose R client for Elasticsearch, +++ b/docs/reference/analysis/analyzers/pattern-analyzer.asciidoc, +[horizontal], +`lowercase`::   Should terms be lowercased or not. Defaults to `true`., +`pattern`::     The regular expression pattern, defaults to `\W+`., +`flags`::       The regular expression flags., +`stopwords`::   A list of stopwords to initialize the stop filter with., +before running each example., +DELETE test, +, +PUT /test, +          "pattern": "\\s+", +}, +GET /test/_analyze?analyzer=whitespace&text=foo,bar baz, +, +// AUTOSENSE, +DELETE test, +PUT /test, +          "pattern": "[^\\w]+" <1>, +}, +GET /test/_analyze?analyzer=nonword&text=foo,bar baz, +GET /test/_analyze?analyzer=nonword&text=type_1-type_4, +// AUTOSENSE, +, +DELETE test, +PUT /test?pretty=1, +          "pattern": "([^\\p{L}\\d]+)|(?<=\\D)(?=\\d)|(?<=\\d)(?=\\D)|(?<=[\\p{L}&&[^\\p{Lu}]])(?=\\p{Lu})|(?<=\\p{Lu})(?=\\p{Lu}[\\p{L}&&[^\\p{Lu}]])", +}, +GET /test/_analyze?analyzer=camel&text=MooseX::FTPClass2_beta, +// AUTOSENSE, +  ([^\p{L}\d]+)                 # swallow non letters and numbers,, +| (?<=\D)(?=\d)                 # or non-number followed by number,, +| (?<=\d)(?=\D)                 # or number followed by non-number,, +| (?<=[ \p{L} && [^\p{Lu}]])    # or lower case, +  (?=\p{Lu})                    #   followed by upper case,, +| (?<=\p{Lu})                   # or upper case, +  (?=\p{Lu}                     #   followed by upper case, +    [\p{L}&&[^\p{Lu}]]          #   then lower case, +++ b/docs/community/clients.asciidoc, +, +* https://github.com/ropensci/elastic[elastic]: , +  A general purpose R client for Elasticsearch, +++ b/docs/reference/analysis/analyzers/pattern-analyzer.asciidoc, +[horizontal], +`lowercase`::   Should terms be lowercased or not. Defaults to `true`., +`pattern`::     The regular expression pattern, defaults to `\W+`., +`flags`::       The regular expression flags., +`stopwords`::   A list of stopwords to initialize the stop filter with., +before running each example., +DELETE test, +, +PUT /test, +          "pattern": "\\s+", +}, +GET /test/_analyze?analyzer=whitespace&text=foo,bar baz, +, +// AUTOSENSE, +DELETE test, +PUT /test, +          "pattern": "[^\\w]+" <1>, +}, +GET /test/_analyze?analyzer=nonword&text=foo,bar baz, +GET /test/_analyze?analyzer=nonword&text=type_1-type_4, +// AUTOSENSE, +, +DELETE test, +PUT /test?pretty=1, +          "pattern": "([^\\p{L}\\d]+)|(?<=\\D)(?=\\d)|(?<=\\d)(?=\\D)|(?<=[\\p{L}&&[^\\p{Lu}]])(?=\\p{Lu})|(?<=\\p{Lu})(?=\\p{Lu}[\\p{L}&&[^\\p{Lu}]])", +}, +GET /test/_analyze?analyzer=camel&text=MooseX::FTPClass2_beta, +// AUTOSENSE, +  ([^\p{L}\d]+)                 # swallow non letters and numbers,, +| (?<=\D)(?=\d)                 # or non-number followed by number,, +| (?<=\d)(?=\D)                 # or number followed by non-number,, +| (?<=[ \p{L} && [^\p{Lu}]])    # or lower case, +  (?=\p{Lu})                    #   followed by upper case,, +| (?<=\p{Lu})                   # or upper case, +  (?=\p{Lu}                     #   followed by upper case, +    [\p{L}&&[^\p{Lu}]]          #   then lower case, +++ b/docs/reference/api-conventions.asciidoc, +`0..2`:: must match exactly, +`3..5`:: one edit allowed, +++ b/docs/community/clients.asciidoc, +, +* https://github.com/ropensci/elastic[elastic]: , +  A general purpose R client for Elasticsearch, +++ b/docs/reference/analysis/analyzers/pattern-analyzer.asciidoc, +[horizontal], +`lowercase`::   Should terms be lowercased or not. Defaults to `true`., +`pattern`::     The regular expression pattern, defaults to `\W+`., +`flags`::       The regular expression flags., +`stopwords`::   A list of stopwords to initialize the stop filter with., +before running each example.]