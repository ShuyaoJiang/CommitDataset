[+++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/ClusterRebalanceAllocationDecider.java, +        logger.debug("using [{}] with [{}]", CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING, type.toString().toLowerCase(Locale.ROOT));, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/ClusterRebalanceAllocationDecider.java, +        logger.debug("using [{}] with [{}]", CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING, type.toString().toLowerCase(Locale.ROOT));, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.monitor.fs.FsService;, +import org.elasticsearch.monitor.jvm.JvmGcMonitorService;, +import org.elasticsearch.monitor.jvm.JvmService;, +import org.elasticsearch.monitor.os.OsService;, +import org.elasticsearch.monitor.process.ProcessService;, +                    NodeEnvironment.ADD_NODE_ID_TO_CUSTOM_PATH,, +                    OsService.REFRESH_INTERVAL_SETTING,, +                    ProcessService.REFRESH_INTERVAL_SETTING,, +                    JvmService.REFRESH_INTERVAL_SETTING,, +                    FsService.REFRESH_INTERVAL_SETTING,, +                    JvmGcMonitorService.ENABLED_SETTING,, +                    JvmGcMonitorService.REFRESH_INTERVAL_SETTING,, +                    JvmGcMonitorService.GC_SETTING, +                )));, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/ClusterRebalanceAllocationDecider.java, +        logger.debug("using [{}] with [{}]", CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING, type.toString().toLowerCase(Locale.ROOT));, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.monitor.fs.FsService;, +import org.elasticsearch.monitor.jvm.JvmGcMonitorService;, +import org.elasticsearch.monitor.jvm.JvmService;, +import org.elasticsearch.monitor.os.OsService;, +import org.elasticsearch.monitor.process.ProcessService;, +                    NodeEnvironment.ADD_NODE_ID_TO_CUSTOM_PATH,, +                    OsService.REFRESH_INTERVAL_SETTING,, +                    ProcessService.REFRESH_INTERVAL_SETTING,, +                    JvmService.REFRESH_INTERVAL_SETTING,, +                    FsService.REFRESH_INTERVAL_SETTING,, +                    JvmGcMonitorService.ENABLED_SETTING,, +                    JvmGcMonitorService.REFRESH_INTERVAL_SETTING,, +                    JvmGcMonitorService.GC_SETTING, +                )));, +++ b/core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java, +                cancellableThreads.execute(() -> {, +                                ArrayUtil.timSort(metadata, new Comparator<StoreFileMetaData>() {, +                                    @Override, +                                    public int compare(StoreFileMetaData o1, StoreFileMetaData o2) {, +                                    }, +                });, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/ClusterRebalanceAllocationDecider.java, +        logger.debug("using [{}] with [{}]", CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING, type.toString().toLowerCase(Locale.ROOT));, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.monitor.fs.FsService;, +import org.elasticsearch.monitor.jvm.JvmGcMonitorService;, +import org.elasticsearch.monitor.jvm.JvmService;, +import org.elasticsearch.monitor.os.OsService;, +import org.elasticsearch.monitor.process.ProcessService;, +                    NodeEnvironment.ADD_NODE_ID_TO_CUSTOM_PATH,, +                    OsService.REFRESH_INTERVAL_SETTING,, +                    ProcessService.REFRESH_INTERVAL_SETTING,, +                    JvmService.REFRESH_INTERVAL_SETTING,, +                    FsService.REFRESH_INTERVAL_SETTING,, +                    JvmGcMonitorService.ENABLED_SETTING,, +                    JvmGcMonitorService.REFRESH_INTERVAL_SETTING,, +                    JvmGcMonitorService.GC_SETTING, +                )));, +++ b/core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java, +                cancellableThreads.execute(() -> {, +                                ArrayUtil.timSort(metadata, new Comparator<StoreFileMetaData>() {, +                                    @Override, +                                    public int compare(StoreFileMetaData o1, StoreFileMetaData o2) {, +                                    }, +                });, +++ b/core/src/main/java/org/elasticsearch/monitor/MonitorService.java, +import org.elasticsearch.monitor.jvm.JvmGcMonitorService;, +    private final JvmGcMonitorService jvmGcMonitorService;, +        this.jvmGcMonitorService = new JvmGcMonitorService(settings, threadPool);, +        jvmGcMonitorService.start();, +        jvmGcMonitorService.stop();, +        jvmGcMonitorService.close();, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/ClusterRebalanceAllocationDecider.java, +        logger.debug("using [{}] with [{}]", CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING, type.toString().toLowerCase(Locale.ROOT));, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.monitor.fs.FsService;, +import org.elasticsearch.monitor.jvm.JvmGcMonitorService;, +import org.elasticsearch.monitor.jvm.JvmService;, +import org.elasticsearch.monitor.os.OsService;, +import org.elasticsearch.monitor.process.ProcessService;, +                    NodeEnvironment.ADD_NODE_ID_TO_CUSTOM_PATH,, +                    OsService.REFRESH_INTERVAL_SETTING,, +                    ProcessService.REFRESH_INTERVAL_SETTING,, +                    JvmService.REFRESH_INTERVAL_SETTING,, +                    FsService.REFRESH_INTERVAL_SETTING,, +                    JvmGcMonitorService.ENABLED_SETTING,, +                    JvmGcMonitorService.REFRESH_INTERVAL_SETTING,, +                    JvmGcMonitorService.GC_SETTING, +                )));, +++ b/core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java, +                cancellableThreads.execute(() -> {, +                                ArrayUtil.timSort(metadata, new Comparator<StoreFileMetaData>() {, +                                    @Override, +                                    public int compare(StoreFileMetaData o1, StoreFileMetaData o2) {, +                                    }, +                });, +++ b/core/src/main/java/org/elasticsearch/monitor/MonitorService.java, +import org.elasticsearch.monitor.jvm.JvmGcMonitorService;]