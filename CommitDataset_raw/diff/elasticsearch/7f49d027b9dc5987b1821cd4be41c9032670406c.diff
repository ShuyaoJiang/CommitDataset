[+++ b/src/test/java/org/elasticsearch/recovery/RecoveryWhileUnderLoadTests.java, +import static org.elasticsearch.cluster.metadata.IndexMetaData.SETTING_NUMBER_OF_SHARDS;, +, +    @Test, +    @TestLogging("action.search.type:TRACE,action.admin.indices.refresh:TRACE"), +        int numberOfShards = numberOfShards();, +        assertAcked(prepareCreate("test", 1, settingsBuilder().put(SETTING_NUMBER_OF_SHARDS, numberOfShards).put(SETTING_NUMBER_OF_REPLICAS, 1)));, +        try {, +            iterateAssertCount(numberOfShards, indexCounter.get(), 10);, +        } finally {, +            // verify the workers are shut down, +            stop.set(true);, +            stopLatch.await();, +    }, +, +    @Test, +    @TestLogging("action.search.type:TRACE,action.admin.indices.refresh:TRACE"), +        int numberOfShards = numberOfShards();, +        assertAcked(prepareCreate("test", 1, settingsBuilder().put(SETTING_NUMBER_OF_SHARDS, numberOfShards).put(SETTING_NUMBER_OF_REPLICAS, 1)));, +        try {, +            iterateAssertCount(numberOfShards, indexCounter.get(), 10);, +        } finally {, +            // make sure the workers are stopped in case of an error, +            stop.set(true);, +            stopLatch.await();, +        }, +    @Test, +    @TestLogging("action.search.type:TRACE,action.admin.indices.refresh:TRACE"), +        int numberOfShards = numberOfShards();, +        assertAcked(prepareCreate("test", 2, settingsBuilder().put(SETTING_NUMBER_OF_SHARDS, numberOfShards).put(SETTING_NUMBER_OF_REPLICAS, 1)));, +                            long count = indexCounter.incrementAndGet();, +                            if (count % 1000 == 0) {, +                                logger.debug("{} documents indexed", count);, +                            }, +        try {, +            logger.info("--> waiting for 15000 docs to be indexed ...");, +            logger.info("--> 15000 docs indexed");, +            iterateAssertCount(numberOfShards, indexCounter.get(), 10);, +        } finally {, +            // make sure the workers are stopped in case of an error, +            stop.set(true);, +            stopLatch.await();, +        }, +        assertAcked(prepareCreate("test", 3, settingsBuilder().put(SETTING_NUMBER_OF_SHARDS, numShards).put(SETTING_NUMBER_OF_REPLICAS, numReplicas)));, +, +        try {, +            assertThat(failures, emptyIterable());, +, +        } finally {, +            // make sure the workers are stopped in case of an error, +            stop.set(true);, +            stopLatch.await();, +        }, +                long count = client().prepareCount().setQuery(matchAllQuery()).execute().actionGet().getCount();, +                logger.debug("[{}] docs visible for search. waiting for [{}]", count, numDocs);, +                return count > numDocs;, +++ b/src/test/java/org/elasticsearch/recovery/RecoveryWhileUnderLoadTests.java, +import static org.elasticsearch.cluster.metadata.IndexMetaData.SETTING_NUMBER_OF_SHARDS;, +, +    @Test, +    @TestLogging("action.search.type:TRACE,action.admin.indices.refresh:TRACE"), +        int numberOfShards = numberOfShards();, +        assertAcked(prepareCreate("test", 1, settingsBuilder().put(SETTING_NUMBER_OF_SHARDS, numberOfShards).put(SETTING_NUMBER_OF_REPLICAS, 1)));, +        try {, +            iterateAssertCount(numberOfShards, indexCounter.get(), 10);, +        } finally {, +            // verify the workers are shut down, +            stop.set(true);, +            stopLatch.await();, +    }, +, +    @Test, +    @TestLogging("action.search.type:TRACE,action.admin.indices.refresh:TRACE"), +        int numberOfShards = numberOfShards();, +        assertAcked(prepareCreate("test", 1, settingsBuilder().put(SETTING_NUMBER_OF_SHARDS, numberOfShards).put(SETTING_NUMBER_OF_REPLICAS, 1)));, +        try {, +            iterateAssertCount(numberOfShards, indexCounter.get(), 10);, +        } finally {, +            // make sure the workers are stopped in case of an error, +            stop.set(true);, +            stopLatch.await();, +        }, +    @Test, +    @TestLogging("action.search.type:TRACE,action.admin.indices.refresh:TRACE"), +        int numberOfShards = numberOfShards();, +        assertAcked(prepareCreate("test", 2, settingsBuilder().put(SETTING_NUMBER_OF_SHARDS, numberOfShards).put(SETTING_NUMBER_OF_REPLICAS, 1)));, +                            long count = indexCounter.incrementAndGet();, +                            if (count % 1000 == 0) {, +                                logger.debug("{} documents indexed", count);, +                            }, +        try {, +            logger.info("--> waiting for 15000 docs to be indexed ...");, +            logger.info("--> 15000 docs indexed");, +            iterateAssertCount(numberOfShards, indexCounter.get(), 10);, +        } finally {, +            // make sure the workers are stopped in case of an error, +            stop.set(true);, +            stopLatch.await();, +        }, +        assertAcked(prepareCreate("test", 3, settingsBuilder().put(SETTING_NUMBER_OF_SHARDS, numShards).put(SETTING_NUMBER_OF_REPLICAS, numReplicas)));]