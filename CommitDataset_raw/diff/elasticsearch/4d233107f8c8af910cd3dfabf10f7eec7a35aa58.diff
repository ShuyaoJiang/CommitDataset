[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.ForecastJobRequest;, +    static Request forecastJob(ForecastJobRequest forecastJobRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("anomaly_detectors"), +            .addPathPart(forecastJobRequest.getJobId()), +            .addPathPartAsIs("_forecast"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(forecastJobRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.ForecastJobRequest;, +    static Request forecastJob(ForecastJobRequest forecastJobRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("anomaly_detectors"), +            .addPathPart(forecastJobRequest.getJobId()), +            .addPathPartAsIs("_forecast"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(forecastJobRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.ForecastJobRequest;, +import org.elasticsearch.client.ml.ForecastJobResponse;, +     * Creates a forecast of an existing, opened Machine Learning Job, +     *, +     * This predicts the future behavior of a time series by using its historical behavior., +     *, +     * <p>, +     *     For additional info, +     *     see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/ml-forecast.html">Forecast ML Job Documentation</a>, +     * </p>, +     * @param request ForecastJobRequest with forecasting options, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return response containing forecast acknowledgement and new forecast's ID, +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public ForecastJobResponse forecastJob(ForecastJobRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +            MLRequestConverters::forecastJob,, +            options,, +            ForecastJobResponse::fromXContent,, +            Collections.emptySet());, +    }, +, +    /**, +     * Creates a forecast of an existing, opened Machine Learning Job asynchronously, +     *, +     * This predicts the future behavior of a time series by using its historical behavior., +     *, +     * <p>, +     *     For additional info, +     *     see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/ml-forecast.html">Forecast ML Job Documentation</a>, +     * </p>, +     * @param request ForecastJobRequest with forecasting options, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified upon request completion, +     */, +    public void forecastJobAsync(ForecastJobRequest request, RequestOptions options, ActionListener<ForecastJobResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +            MLRequestConverters::forecastJob,, +            options,, +            ForecastJobResponse::fromXContent,, +            listener,, +            Collections.emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.ForecastJobRequest;, +    static Request forecastJob(ForecastJobRequest forecastJobRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("anomaly_detectors"), +            .addPathPart(forecastJobRequest.getJobId()), +            .addPathPartAsIs("_forecast"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(forecastJobRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.ForecastJobRequest;, +import org.elasticsearch.client.ml.ForecastJobResponse;, +     * Creates a forecast of an existing, opened Machine Learning Job, +     *, +     * This predicts the future behavior of a time series by using its historical behavior., +     *, +     * <p>]