[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SearchDocumentationIT.java, +        Map<String, FieldCapabilities> userResponse = response.getField("user");  // <1>, +        boolean isSearchable = textCapabilities.isSearchable();, +        boolean isAggregatable = textCapabilities.isAggregatable();, +        String[] indices = textCapabilities.indices(); // <2>, +        String[] nonSearchableIndices = textCapabilities.nonSearchableIndices(); // <3>, +        String[] nonAggregatableIndices = textCapabilities.nonAggregatableIndices();//<4>, +        assertThat(userResponse.keySet(), containsInAnyOrder("keyword", "text"));, +, +        assertTrue(isSearchable);, +        assertFalse(isAggregatable);, +, +        assertArrayEquals(indices, new String[]{"authors", "contributors"});, +        assertNull(nonSearchableIndices);, +        assertArrayEquals(nonAggregatableIndices, new String[]{"authors"});, +, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SearchDocumentationIT.java, +        Map<String, FieldCapabilities> userResponse = response.getField("user");  // <1>, +        boolean isSearchable = textCapabilities.isSearchable();, +        boolean isAggregatable = textCapabilities.isAggregatable();, +        String[] indices = textCapabilities.indices(); // <2>, +        String[] nonSearchableIndices = textCapabilities.nonSearchableIndices(); // <3>, +        String[] nonAggregatableIndices = textCapabilities.nonAggregatableIndices();//<4>, +        assertThat(userResponse.keySet(), containsInAnyOrder("keyword", "text"));, +, +        assertTrue(isSearchable);, +        assertFalse(isAggregatable);, +, +        assertArrayEquals(indices, new String[]{"authors", "contributors"});, +        assertNull(nonSearchableIndices);, +        assertArrayEquals(nonAggregatableIndices, new String[]{"authors"});, +, +++ b/docs/java-rest/high-level/search/field-caps.asciidoc, +<1> A map with entries for the field's possible types, in this case `keyword` and `text`., +<2> All indices where the `user` field has type `keyword`., +<3> The subset of these indices where the `user` field isn't searchable, or null if it's always searchable., +<4> Another subset of these indices where the `user` field isn't aggregatable, or null if it's always aggregatable.]