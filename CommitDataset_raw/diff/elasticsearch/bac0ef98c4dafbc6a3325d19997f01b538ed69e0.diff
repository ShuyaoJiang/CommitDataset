[+++ b/plugins/cloud/src/main/java/org/elasticsearch/cloud/blobstore/CloudBlobStoreService.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +        if (blobStoreContext == null) {, +            throw new ElasticSearchIllegalStateException("No cloud blobstore service started, have you configured the 'cloud.type' setting?");, +        }, +++ b/plugins/cloud/src/main/java/org/elasticsearch/cloud/blobstore/CloudBlobStoreService.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +        if (blobStoreContext == null) {, +            throw new ElasticSearchIllegalStateException("No cloud blobstore service started, have you configured the 'cloud.type' setting?");, +        }, +++ b/plugins/cloud/src/main/java/org/elasticsearch/cloud/compute/CloudComputeService.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +        if (computeServiceContext == null) {, +            throw new ElasticSearchIllegalStateException("No cloud compute service started, have you configured the 'cloud.type' setting?");, +        }, +++ b/plugins/cloud/src/main/java/org/elasticsearch/cloud/blobstore/CloudBlobStoreService.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +        if (blobStoreContext == null) {, +            throw new ElasticSearchIllegalStateException("No cloud blobstore service started, have you configured the 'cloud.type' setting?");, +        }, +++ b/plugins/cloud/src/main/java/org/elasticsearch/cloud/compute/CloudComputeService.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +        if (computeServiceContext == null) {, +            throw new ElasticSearchIllegalStateException("No cloud compute service started, have you configured the 'cloud.type' setting?");, +        }, +++ b/plugins/cloud/src/main/java/org/elasticsearch/discovery/cloud/CloudDiscovery.java, +import org.elasticsearch.util.guice.inject.Inject;, +    @Inject public CloudDiscovery(Settings settings, ClusterName clusterName, ThreadPool threadPool, TransportService transportService,, +++ b/plugins/cloud/src/main/java/org/elasticsearch/cloud/blobstore/CloudBlobStoreService.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +        if (blobStoreContext == null) {, +            throw new ElasticSearchIllegalStateException("No cloud blobstore service started, have you configured the 'cloud.type' setting?");, +        }, +++ b/plugins/cloud/src/main/java/org/elasticsearch/cloud/compute/CloudComputeService.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +        if (computeServiceContext == null) {, +            throw new ElasticSearchIllegalStateException("No cloud compute service started, have you configured the 'cloud.type' setting?");, +        }, +++ b/plugins/cloud/src/main/java/org/elasticsearch/discovery/cloud/CloudDiscovery.java, +import org.elasticsearch.util.guice.inject.Inject;, +    @Inject public CloudDiscovery(Settings settings, ClusterName clusterName, ThreadPool threadPool, TransportService transportService,, +++ b/plugins/cloud/src/main/java/org/elasticsearch/discovery/cloud/CloudDiscoveryModule.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.discovery.cloud;, +, +import org.elasticsearch.discovery.Discovery;, +import org.elasticsearch.discovery.zen.ping.ZenPingService;, +import org.elasticsearch.util.guice.inject.AbstractModule;, +, +/**, + * @author kimchy (shay.banon), + */, +public class CloudDiscoveryModule extends AbstractModule {, +, +    @Override protected void configure() {, +        bind(ZenPingService.class).asEagerSingleton();, +        bind(Discovery.class).to(CloudDiscovery.class).asEagerSingleton();, +    }, +}, +++ b/plugins/cloud/src/main/java/org/elasticsearch/cloud/blobstore/CloudBlobStoreService.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +        if (blobStoreContext == null) {, +            throw new ElasticSearchIllegalStateException("No cloud blobstore service started, have you configured the 'cloud.type' setting?");, +        }, +++ b/plugins/cloud/src/main/java/org/elasticsearch/cloud/compute/CloudComputeService.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +        if (computeServiceContext == null) {, +            throw new ElasticSearchIllegalStateException("No cloud compute service started, have you configured the 'cloud.type' setting?");, +        }, +++ b/plugins/cloud/src/main/java/org/elasticsearch/discovery/cloud/CloudDiscovery.java, +import org.elasticsearch.util.guice.inject.Inject;, +    @Inject public CloudDiscovery(Settings settings, ClusterName clusterName, ThreadPool threadPool, TransportService transportService,, +++ b/plugins/cloud/src/main/java/org/elasticsearch/discovery/cloud/CloudDiscoveryModule.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *]