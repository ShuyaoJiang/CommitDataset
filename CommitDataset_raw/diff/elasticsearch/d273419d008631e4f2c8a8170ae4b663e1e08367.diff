[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.apache.logging.log4j.LogManager;, +import org.apache.logging.log4j.core.LoggerContext;, +import org.apache.logging.log4j.core.config.Configurator;, +                        LoggerContext context = (LoggerContext) LogManager.getContext(false);, +                        Configurator.shutdown(context);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.apache.logging.log4j.LogManager;, +import org.apache.logging.log4j.core.LoggerContext;, +import org.apache.logging.log4j.core.config.Configurator;, +                        LoggerContext context = (LoggerContext) LogManager.getContext(false);, +                        Configurator.shutdown(context);, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.apache.logging.log4j.LogManager;, +import org.apache.logging.log4j.core.LoggerContext;, +import org.apache.logging.log4j.core.config.Configurator;, +                        LoggerContext context = (LoggerContext) LogManager.getContext(false);, +                        Configurator.shutdown(context);, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +++ b/test/framework/src/main/java/org/elasticsearch/test/ESTestCase.java, +import org.apache.logging.log4j.LogManager;, +import org.apache.logging.log4j.core.LoggerContext;, +import org.apache.logging.log4j.core.config.Configurator;, +, +        // shutdown hook so that when the test JVM exits, logging is shutdown too, +        Runtime.getRuntime().addShutdownHook(new Thread(() -> {, +            LoggerContext context = (LoggerContext) LogManager.getContext(false);, +            Configurator.shutdown(context);, +        }));, +]