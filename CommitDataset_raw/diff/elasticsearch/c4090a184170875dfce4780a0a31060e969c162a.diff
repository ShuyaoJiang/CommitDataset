[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotResponse.java, +        snapshotInfo = in.readOptionalWriteable(SnapshotInfo::new);, +        out.writeOptionalWriteable(snapshotInfo);, +            snapshotInfo.toExternalXContent(builder, params);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotResponse.java, +        snapshotInfo = in.readOptionalWriteable(SnapshotInfo::new);, +        out.writeOptionalWriteable(snapshotInfo);, +            snapshotInfo.toExternalXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsResponse.java, +            builder.add(new SnapshotInfo(in));, +            snapshotInfo.toExternalXContent(builder, params);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotResponse.java, +        snapshotInfo = in.readOptionalWriteable(SnapshotInfo::new);, +        out.writeOptionalWriteable(snapshotInfo);, +            snapshotInfo.toExternalXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsResponse.java, +            builder.add(new SnapshotInfo(in));, +            snapshotInfo.toExternalXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/TransportGetSnapshotsAction.java, +                snapshotInfoBuilder.addAll(snapshotsService.snapshots(request.repository(), request.ignoreUnavailable()));, +                snapshotInfoBuilder.addAll(snapshotsService.currentSnapshots(request.repository()));, +                List<SnapshotInfo> snapshots = null;, +                        for (SnapshotInfo snapshot : snapshots) {, +                    snapshotInfoBuilder.add(snapshotsService.snapshot(snapshotId));, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotResponse.java, +        snapshotInfo = in.readOptionalWriteable(SnapshotInfo::new);, +        out.writeOptionalWriteable(snapshotInfo);, +            snapshotInfo.toExternalXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsResponse.java, +            builder.add(new SnapshotInfo(in));, +            snapshotInfo.toExternalXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/TransportGetSnapshotsAction.java, +                snapshotInfoBuilder.addAll(snapshotsService.snapshots(request.repository(), request.ignoreUnavailable()));, +                snapshotInfoBuilder.addAll(snapshotsService.currentSnapshots(request.repository()));, +                List<SnapshotInfo> snapshots = null;, +                        for (SnapshotInfo snapshot : snapshots) {, +                    snapshotInfoBuilder.add(snapshotsService.snapshot(snapshotId));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java, +import org.elasticsearch.snapshots.SnapshotInfo;, +                    SnapshotInfo snapshot = snapshotsService.snapshot(snapshotId);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotResponse.java, +        snapshotInfo = in.readOptionalWriteable(SnapshotInfo::new);, +        out.writeOptionalWriteable(snapshotInfo);, +            snapshotInfo.toExternalXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsResponse.java, +            builder.add(new SnapshotInfo(in));, +            snapshotInfo.toExternalXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/TransportGetSnapshotsAction.java, +                snapshotInfoBuilder.addAll(snapshotsService.snapshots(request.repository(), request.ignoreUnavailable()));, +                snapshotInfoBuilder.addAll(snapshotsService.currentSnapshots(request.repository()));, +                List<SnapshotInfo> snapshots = null;, +                        for (SnapshotInfo snapshot : snapshots) {, +                    snapshotInfoBuilder.add(snapshotsService.snapshot(snapshotId));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java, +import org.elasticsearch.snapshots.SnapshotInfo;, +                    SnapshotInfo snapshot = snapshotsService.snapshot(snapshotId);, +++ b/core/src/main/java/org/elasticsearch/repositories/Repository.java, +import org.elasticsearch.snapshots.SnapshotInfo;, +    SnapshotInfo readSnapshot(SnapshotId snapshotId);, +    MetaData readSnapshotMetaData(SnapshotId snapshotId, SnapshotInfo snapshot, List<String> indices) throws IOException;, +    SnapshotInfo finalizeSnapshot(SnapshotId snapshotId, List<String> indices, long startTime, String failure, int totalShards, List<SnapshotShardFailure> shardFailures);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotResponse.java, +        snapshotInfo = in.readOptionalWriteable(SnapshotInfo::new);, +        out.writeOptionalWriteable(snapshotInfo);, +            snapshotInfo.toExternalXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsResponse.java, +            builder.add(new SnapshotInfo(in));, +            snapshotInfo.toExternalXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/TransportGetSnapshotsAction.java, +                snapshotInfoBuilder.addAll(snapshotsService.snapshots(request.repository(), request.ignoreUnavailable()));, +                snapshotInfoBuilder.addAll(snapshotsService.currentSnapshots(request.repository()));, +                List<SnapshotInfo> snapshots = null;, +                        for (SnapshotInfo snapshot : snapshots) {, +                    snapshotInfoBuilder.add(snapshotsService.snapshot(snapshotId));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java, +import org.elasticsearch.snapshots.SnapshotInfo;, +                    SnapshotInfo snapshot = snapshotsService.snapshot(snapshotId);, +++ b/core/src/main/java/org/elasticsearch/repositories/Repository.java, +import org.elasticsearch.snapshots.SnapshotInfo;, +    SnapshotInfo readSnapshot(SnapshotId snapshotId);, +    MetaData readSnapshotMetaData(SnapshotId snapshotId, SnapshotInfo snapshot, List<String> indices) throws IOException;, +    SnapshotInfo finalizeSnapshot(SnapshotId snapshotId, List<String> indices, long startTime, String failure, int totalShards, List<SnapshotShardFailure> shardFailures);, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +import org.elasticsearch.snapshots.SnapshotInfo;, +    private ChecksumBlobStoreFormat<SnapshotInfo> snapshotFormat;, +    private LegacyBlobStoreFormat<SnapshotInfo> snapshotLegacyFormat;, +        snapshotFormat = new ChecksumBlobStoreFormat<>(SNAPSHOT_CODEC, SNAPSHOT_NAME_FORMAT, SnapshotInfo.PROTO, parseFieldMatcher, isCompress());, +        snapshotLegacyFormat = new LegacyBlobStoreFormat<>(LEGACY_SNAPSHOT_NAME_FORMAT, SnapshotInfo.PROTO, parseFieldMatcher);, +        SnapshotInfo snapshot = null;, +    public SnapshotInfo finalizeSnapshot(SnapshotId snapshotId, List<String> indices, long startTime, String failure, int totalShards, List<SnapshotShardFailure> shardFailures) {, +            SnapshotInfo blobStoreSnapshot = new SnapshotInfo(snapshotId.getSnapshot(), indices, startTime, failure, System.currentTimeMillis(), totalShards, shardFailures);, +    public MetaData readSnapshotMetaData(SnapshotId snapshotId, SnapshotInfo snapshot, List<String> indices) throws IOException {, +    public SnapshotInfo readSnapshot(SnapshotId snapshotId) {]