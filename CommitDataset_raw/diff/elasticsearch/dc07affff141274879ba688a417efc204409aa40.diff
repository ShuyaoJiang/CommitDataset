[+++ b/core/src/main/java/org/elasticsearch/common/geo/GeoPoint.java, +        return lat + ", " + lon;, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoPoint.java, +        return lat + ", " + lon;, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/StringFieldMapper.java, +            return new ValueAndBoost(context.externalValue().toString(), defaultBoost);, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoPoint.java, +        return lat + ", " + lon;, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/StringFieldMapper.java, +            return new ValueAndBoost(context.externalValue().toString(), defaultBoost);, +++ b/core/src/test/java/org/elasticsearch/index/mapper/multifield/MultiFieldsIntegrationIT.java, +import org.elasticsearch.common.geo.GeoPoint;, +        GeoPoint point = new GeoPoint(51, 19);, +        client().prepareIndex("my-index", "my-type", "1").setSource("a", point.toString()).setRefresh(true).get();, +        countResponse = client().prepareSearch("my-index").setSize(0).setQuery(matchQuery("a.b", point.toString())).get();]