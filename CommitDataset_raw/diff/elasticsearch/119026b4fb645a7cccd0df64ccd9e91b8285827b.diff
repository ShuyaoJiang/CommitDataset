[+++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    case CREATE:, +                    case NOOP:, +                            case CREATE:, +            case CREATE:, +            case NOOP:, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    case CREATE:, +                    case NOOP:, +                            case CREATE:, +            case CREATE:, +            case NOOP:, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteResponse.java, +        return operation == Operation.DELETE ? super.status() : RestStatus.NOT_FOUND;, +        builder.field("found", operation == Operation.DELETE);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    case CREATE:, +                    case NOOP:, +                            case CREATE:, +            case CREATE:, +            case NOOP:, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteResponse.java, +        return operation == Operation.DELETE ? super.status() : RestStatus.NOT_FOUND;, +        builder.field("found", operation == Operation.DELETE);, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexResponse.java, +        return operation == Operation.CREATE ? RestStatus.CREATED : super.status();, +        builder.field("created", operation == Operation.CREATE);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    case CREATE:, +                    case NOOP:, +                            case CREATE:, +            case CREATE:, +            case NOOP:, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteResponse.java, +        return operation == Operation.DELETE ? super.status() : RestStatus.NOT_FOUND;, +        builder.field("found", operation == Operation.DELETE);, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexResponse.java, +        return operation == Operation.CREATE ? RestStatus.CREATED : super.status();, +        builder.field("created", operation == Operation.CREATE);, +++ b/core/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +            case CREATE:, +            case NOOP:, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    case CREATE:, +                    case NOOP:, +                            case CREATE:, +            case CREATE:, +            case NOOP:, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteResponse.java, +        return operation == Operation.DELETE ? super.status() : RestStatus.NOT_FOUND;, +        builder.field("found", operation == Operation.DELETE);, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexResponse.java, +        return operation == Operation.CREATE ? RestStatus.CREATED : super.status();, +        builder.field("created", operation == Operation.CREATE);, +++ b/core/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +            case CREATE:, +            case NOOP:, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +import org.elasticsearch.action.DocWriteResponse;, +                            getResult.getVersion(), DocWriteResponse.Operation.NOOP);, +                    return new Result(update, DocWriteResponse.Operation.NOOP, upsertDoc, XContentType.JSON);, +            return new Result(indexRequest, DocWriteResponse.Operation.CREATE, null, null);, +            return new Result(indexRequest, DocWriteResponse.Operation.INDEX, updatedSourceAsMap, updateSourceContentType);, +            return new Result(deleteRequest, DocWriteResponse.Operation.DELETE, updatedSourceAsMap, updateSourceContentType);, +            UpdateResponse update = new UpdateResponse(shardId, getResult.getType(), getResult.getId(), getResult.getVersion(), DocWriteResponse.Operation.NOOP);, +            return new Result(update, DocWriteResponse.Operation.NOOP, updatedSourceAsMap, updateSourceContentType);, +            UpdateResponse update = new UpdateResponse(shardId, getResult.getType(), getResult.getId(), getResult.getVersion(), DocWriteResponse.Operation.NOOP);, +            return new Result(update, DocWriteResponse.Operation.NOOP, updatedSourceAsMap, updateSourceContentType);, +        private final DocWriteResponse.Operation operation;, +        public Result(Streamable action, DocWriteResponse.Operation operation, Map<String, Object> updatedSourceAsMap, XContentType updateSourceContentType) {, +        public DocWriteResponse.Operation operation() {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    case CREATE:, +                    case NOOP:, +                            case CREATE:, +            case CREATE:, +            case NOOP:, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteResponse.java, +        return operation == Operation.DELETE ? super.status() : RestStatus.NOT_FOUND;, +        builder.field("found", operation == Operation.DELETE);, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexResponse.java, +        return operation == Operation.CREATE ? RestStatus.CREATED : super.status();, +        builder.field("created", operation == Operation.CREATE);, +++ b/core/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +            case CREATE:, +            case NOOP:, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +import org.elasticsearch.action.DocWriteResponse;, +                            getResult.getVersion(), DocWriteResponse.Operation.NOOP);, +                    return new Result(update, DocWriteResponse.Operation.NOOP, upsertDoc, XContentType.JSON);, +            return new Result(indexRequest, DocWriteResponse.Operation.CREATE, null, null);, +            return new Result(indexRequest, DocWriteResponse.Operation.INDEX, updatedSourceAsMap, updateSourceContentType);, +            return new Result(deleteRequest, DocWriteResponse.Operation.DELETE, updatedSourceAsMap, updateSourceContentType);, +            UpdateResponse update = new UpdateResponse(shardId, getResult.getType(), getResult.getId(), getResult.getVersion(), DocWriteResponse.Operation.NOOP);, +            return new Result(update, DocWriteResponse.Operation.NOOP, updatedSourceAsMap, updateSourceContentType);, +            UpdateResponse update = new UpdateResponse(shardId, getResult.getType(), getResult.getId(), getResult.getVersion(), DocWriteResponse.Operation.NOOP);, +            return new Result(update, DocWriteResponse.Operation.NOOP, updatedSourceAsMap, updateSourceContentType);, +        private final DocWriteResponse.Operation operation;, +        public Result(Streamable action, DocWriteResponse.Operation operation, Map<String, Object> updatedSourceAsMap, XContentType updateSourceContentType) {, +        public DocWriteResponse.Operation operation() {]