[+++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3BlobStore.java, +import com.amazonaws.AmazonServiceException;, +import com.amazonaws.services.s3.model.HeadBucketRequest;, +                try {, +                    clientReference.client().headBucket(new HeadBucketRequest(bucket));, +                } catch (final AmazonServiceException e) {, +                    if (e.getStatusCode() == 301) {, +                        throw new IllegalArgumentException("the bucket [" + bucket + "] is in a different region than you configured", e);, +                    } else if (e.getStatusCode() == 403) {, +                        throw new IllegalArgumentException("you do not have permissions to access the bucket [" + bucket + "]", e);, +                    } else if (e.getStatusCode() == 404) {, +                        throw new IllegalArgumentException(, +                                "the bucket [" + bucket + "] does not exist;", +                                        + " please create it before creating an S3 snapshot repository backed by it",, +                                e);, +                    } else {, +                        throw new IllegalArgumentException("error checking the existence of bucket [" + bucket + "]", e);, +                    }, +    public StorageClass getStorageClass() {, +        return storageClass;, +    }, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3BlobStore.java, +import com.amazonaws.AmazonServiceException;, +import com.amazonaws.services.s3.model.HeadBucketRequest;, +                try {, +                    clientReference.client().headBucket(new HeadBucketRequest(bucket));, +                } catch (final AmazonServiceException e) {, +                    if (e.getStatusCode() == 301) {, +                        throw new IllegalArgumentException("the bucket [" + bucket + "] is in a different region than you configured", e);, +                    } else if (e.getStatusCode() == 403) {, +                        throw new IllegalArgumentException("you do not have permissions to access the bucket [" + bucket + "]", e);, +                    } else if (e.getStatusCode() == 404) {, +                        throw new IllegalArgumentException(, +                                "the bucket [" + bucket + "] does not exist;", +                                        + " please create it before creating an S3 snapshot repository backed by it",, +                                e);, +                    } else {, +                        throw new IllegalArgumentException("error checking the existence of bucket [" + bucket + "]", e);, +                    }, +    public StorageClass getStorageClass() {, +        return storageClass;, +    }, +++ b/plugins/repository-s3/src/test/java/org/elasticsearch/repositories/s3/MockAmazonS3.java, +import com.amazonaws.AmazonServiceException;, +import com.amazonaws.services.s3.model.HeadBucketRequest;, +import com.amazonaws.services.s3.model.HeadBucketResult;, +    public HeadBucketResult headBucket(final HeadBucketRequest headBucketRequest) throws SdkClientException, AmazonServiceException {, +        if (this.bucket.equalsIgnoreCase(headBucketRequest.getBucketName())) {, +            return new HeadBucketResult();, +        } else {, +            final AmazonServiceException e =, +                    new AmazonServiceException("bucket [" + headBucketRequest.getBucketName() + "] does not exist");, +            e.setStatusCode(404);, +            throw e;, +        }, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3BlobStore.java, +import com.amazonaws.AmazonServiceException;, +import com.amazonaws.services.s3.model.HeadBucketRequest;, +                try {, +                    clientReference.client().headBucket(new HeadBucketRequest(bucket));, +                } catch (final AmazonServiceException e) {, +                    if (e.getStatusCode() == 301) {, +                        throw new IllegalArgumentException("the bucket [" + bucket + "] is in a different region than you configured", e);, +                    } else if (e.getStatusCode() == 403) {, +                        throw new IllegalArgumentException("you do not have permissions to access the bucket [" + bucket + "]", e);, +                    } else if (e.getStatusCode() == 404) {, +                        throw new IllegalArgumentException(, +                                "the bucket [" + bucket + "] does not exist;", +                                        + " please create it before creating an S3 snapshot repository backed by it",, +                                e);, +                    } else {, +                        throw new IllegalArgumentException("error checking the existence of bucket [" + bucket + "]", e);, +                    }, +    public StorageClass getStorageClass() {, +        return storageClass;, +    }, +++ b/plugins/repository-s3/src/test/java/org/elasticsearch/repositories/s3/MockAmazonS3.java, +import com.amazonaws.AmazonServiceException;, +import com.amazonaws.services.s3.model.HeadBucketRequest;, +import com.amazonaws.services.s3.model.HeadBucketResult;, +    public HeadBucketResult headBucket(final HeadBucketRequest headBucketRequest) throws SdkClientException, AmazonServiceException {, +        if (this.bucket.equalsIgnoreCase(headBucketRequest.getBucketName())) {, +            return new HeadBucketResult();, +        } else {, +            final AmazonServiceException e =, +                    new AmazonServiceException("bucket [" + headBucketRequest.getBucketName() + "] does not exist");, +            e.setStatusCode(404);, +            throw e;, +        }, +++ b/plugins/repository-s3/src/test/java/org/elasticsearch/repositories/s3/RepositoryCredentialsTests.java, +import com.amazonaws.AmazonClientException;, +import com.amazonaws.AmazonServiceException;, +import com.amazonaws.services.s3.model.HeadBucketRequest;, +import com.amazonaws.services.s3.model.HeadBucketResult;, +            public HeadBucketResult headBucket(HeadBucketRequest headBucketRequest) throws AmazonClientException, AmazonServiceException {, +                return new HeadBucketResult();, +, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3BlobStore.java, +import com.amazonaws.AmazonServiceException;, +import com.amazonaws.services.s3.model.HeadBucketRequest;]