[+++ b/src/main/java/org/elasticsearch/common/Table.java, +            String[] sAttrs = Strings.splitStringToArray(attributes, ';');, +++ b/src/main/java/org/elasticsearch/common/Table.java, +            String[] sAttrs = Strings.splitStringToArray(attributes, ';');, +++ b/src/main/java/org/elasticsearch/rest/action/cat/RestCountAction.java, +        table.addCell("time(ms)", "desc:time, in milliseconds since epoch UTC, that the count was executed");, +        table.addCell("timestamp", "desc:time that the count was executed");, +        table.addCell("count", "desc:the document count");, +++ b/src/main/java/org/elasticsearch/common/Table.java, +            String[] sAttrs = Strings.splitStringToArray(attributes, ';');, +++ b/src/main/java/org/elasticsearch/rest/action/cat/RestCountAction.java, +        table.addCell("time(ms)", "desc:time, in milliseconds since epoch UTC, that the count was executed");, +        table.addCell("timestamp", "desc:time that the count was executed");, +        table.addCell("count", "desc:the document count");, +++ b/src/main/java/org/elasticsearch/rest/action/support/RestTable.java, +        boolean help = request.paramAsBoolean("h", false);, +        if (help) {, +            int[] width = buildHelpWidths(table, request, verbose);, +            StringBuilder out = new StringBuilder();, +            for (Table.Cell cell : table.getHeaders()) {, +                // need to do left-align always, so create new cells, +                pad(new Table.Cell(cell.value), width[0], request, out);, +                out.append(" ");, +                pad(new Table.Cell(cell.attr.containsKey("desc") ? cell.attr.get("desc") : "not available"), width[1], request, out);, +                out.append("\n");, +            }, +            return new StringRestResponse(RestStatus.OK, out.toString());, +        }, +, +    private static int[] buildHelpWidths(Table table, RestRequest request, boolean verbose) {, +        int[] width = new int[2];, +        for (Table.Cell cell : table.getHeaders()) {, +            String v = renderValue(request, cell.value);, +            int vWidth = v == null ? 0 : v.length();, +            if (width[0] < vWidth) {, +                width[0] = vWidth;, +            }, +, +            v = renderValue(request, cell.attr.containsKey("desc") ? cell.attr.get("desc") : "not available");, +            vWidth = v == null ? 0 : v.length();, +            if (width[1] < vWidth) {, +                width[1] = vWidth;, +            }, +        }, +        return width;, +    }, +]