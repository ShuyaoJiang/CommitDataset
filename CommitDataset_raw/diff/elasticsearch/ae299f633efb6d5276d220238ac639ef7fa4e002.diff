[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/PutJobAction.java, +import java.util.List;, +            // Some fields cannot be set at create time, +            List<String> invalidJobCreationSettings = jobBuilder.invalidCreateTimeSettings();, +            if (invalidJobCreationSettings.isEmpty() == false) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_INVALID_CREATE_SETTINGS,, +                        String.join(",", invalidJobCreationSettings)));, +            }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/PutJobAction.java, +import java.util.List;, +            // Some fields cannot be set at create time, +            List<String> invalidJobCreationSettings = jobBuilder.invalidCreateTimeSettings();, +            if (invalidJobCreationSettings.isEmpty() == false) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_INVALID_CREATE_SETTINGS,, +                        String.join(",", invalidJobCreationSettings)));, +            }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/ValidateJobConfigAction.java, +import org.elasticsearch.xpack.ml.job.messages.Messages;, +import java.util.List;, +    public static class Request extends ActionRequest {, +            // Some fields cannot be set at create time, +            List<String> invalidJobCreationSettings = job.invalidCreateTimeSettings();, +            if (invalidJobCreationSettings.isEmpty() == false) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_INVALID_CREATE_SETTINGS,, +                        String.join(",", invalidJobCreationSettings)));, +            }, +, +            return new Request(job.build(new Date()));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/PutJobAction.java, +import java.util.List;, +            // Some fields cannot be set at create time, +            List<String> invalidJobCreationSettings = jobBuilder.invalidCreateTimeSettings();, +            if (invalidJobCreationSettings.isEmpty() == false) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_INVALID_CREATE_SETTINGS,, +                        String.join(",", invalidJobCreationSettings)));, +            }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/ValidateJobConfigAction.java, +import org.elasticsearch.xpack.ml.job.messages.Messages;, +import java.util.List;, +    public static class Request extends ActionRequest {, +            // Some fields cannot be set at create time, +            List<String> invalidJobCreationSettings = job.invalidCreateTimeSettings();, +            if (invalidJobCreationSettings.isEmpty() == false) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_INVALID_CREATE_SETTINGS,, +                        String.join(",", invalidJobCreationSettings)));, +            }, +, +            return new Request(job.build(new Date()));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/config/Job.java, +        /**, +         * Return the list of fields that have been set and are invalid to, +         * be set when the job is created e.g. model snapshot Id should not, +         * be set at job creation., +         * @return List of fields set fields that should not be., +         */, +        public List<String> invalidCreateTimeSettings() {, +            List<String> invalidCreateValues = new ArrayList<>();, +            if (modelSnapshotId != null) {, +                invalidCreateValues.add(MODEL_SNAPSHOT_ID.getPreferredName());, +            }, +            if (lastDataTime != null) {, +                invalidCreateValues.add(LAST_DATA_TIME.getPreferredName());, +            }, +            if (finishedTime != null) {, +                invalidCreateValues.add(FINISHED_TIME.getPreferredName());, +            }, +            if (createTime != null) {, +                invalidCreateValues.add(CREATE_TIME.getPreferredName());, +            }, +            return invalidCreateValues;, +        }, +, +            ExceptionsHelper.requireNonNull(createTime, CREATE_TIME.getPreferredName());, +                    analysisConfig, analysisLimits, dataDescription, modelPlotConfig, renormalizationWindowDays,, +                    backgroundPersistInterval, modelSnapshotRetentionDays, resultsRetentionDays, customSettings,, +                    modelSnapshotId, resultsIndexName, deleted);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/PutJobAction.java, +import java.util.List;, +            // Some fields cannot be set at create time, +            List<String> invalidJobCreationSettings = jobBuilder.invalidCreateTimeSettings();, +            if (invalidJobCreationSettings.isEmpty() == false) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_INVALID_CREATE_SETTINGS,, +                        String.join(",", invalidJobCreationSettings)));, +            }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/ValidateJobConfigAction.java, +import org.elasticsearch.xpack.ml.job.messages.Messages;, +import java.util.List;, +    public static class Request extends ActionRequest {, +            // Some fields cannot be set at create time, +            List<String> invalidJobCreationSettings = job.invalidCreateTimeSettings();, +            if (invalidJobCreationSettings.isEmpty() == false) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_INVALID_CREATE_SETTINGS,, +                        String.join(",", invalidJobCreationSettings)));, +            }, +, +            return new Request(job.build(new Date()));]