[+++ b/core/src/test/java/org/elasticsearch/index/query/AbstractQueryTestCase.java, +import org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCache;, +                .put(ScriptService.SCRIPT_AUTO_RELOAD_ENABLED_SETTING, false), +        AnalysisService analysisService = new AnalysisRegistry(null, new Environment(settings)).build(idxSettings);, +        SimilarityService similarityService = new SimilarityService(idxSettings, Collections.EMPTY_MAP);, +        MapperService mapperService = new MapperService(idxSettings, analysisService, similarityService);, +        indexFieldDataService = new IndexFieldDataService(idxSettings, injector.getInstance(IndicesFieldDataCache.class), injector.getInstance(CircuitBreakerService.class), mapperService);, +++ b/core/src/test/java/org/elasticsearch/index/query/AbstractQueryTestCase.java, +import org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCache;, +                .put(ScriptService.SCRIPT_AUTO_RELOAD_ENABLED_SETTING, false), +        AnalysisService analysisService = new AnalysisRegistry(null, new Environment(settings)).build(idxSettings);, +        SimilarityService similarityService = new SimilarityService(idxSettings, Collections.EMPTY_MAP);, +        MapperService mapperService = new MapperService(idxSettings, analysisService, similarityService);, +        indexFieldDataService = new IndexFieldDataService(idxSettings, injector.getInstance(IndicesFieldDataCache.class), injector.getInstance(CircuitBreakerService.class), mapperService);, +++ b/core/src/test/java/org/elasticsearch/index/query/TemplateQueryParserTests.java, +import org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCache;, +, +        AnalysisService analysisService = new AnalysisRegistry(null, new Environment(settings)).build(idxSettings);, +        SimilarityService similarityService = new SimilarityService(idxSettings, Collections.EMPTY_MAP);, +        MapperService mapperService = new MapperService(idxSettings, analysisService, similarityService);, +        IndexFieldDataService indexFieldDataService =new IndexFieldDataService(idxSettings, injector.getInstance(IndicesFieldDataCache.class), injector.getInstance(CircuitBreakerService.class), mapperService);]