[+++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/search/SingleInstanceEmbeddedSearchTests.java, +    @Test public void testQueryThenFetch() throws Exception {, +    @Test public void testQueryAndFetch() throws Exception {, +    @Test public void testDfsQueryThenFetch() throws Exception {, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/search/SingleInstanceEmbeddedSearchTests.java, +    @Test public void testQueryThenFetch() throws Exception {, +    @Test public void testQueryAndFetch() throws Exception {, +    @Test public void testDfsQueryThenFetch() throws Exception {, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/search/TransportTwoServersSearchTests.java, +//        searchResponse = client.searchScroll(searchScrollRequest(searchResponse.scrollId())).actionGet();, +//        assertThat(searchResponse.hits().totalHits(), equalTo(100l));, +//        assertThat(searchResponse.hits().hits().length, equalTo(40));, +//            assertThat("id[" + hit.id() + "]", hit.id(), equalTo(Integer.toString(100 - 60 - 1 - i)));, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/search/SingleInstanceEmbeddedSearchTests.java, +    @Test public void testQueryThenFetch() throws Exception {, +    @Test public void testQueryAndFetch() throws Exception {, +    @Test public void testDfsQueryThenFetch() throws Exception {, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/search/TransportTwoServersSearchTests.java, +//        searchResponse = client.searchScroll(searchScrollRequest(searchResponse.scrollId())).actionGet();, +//        assertThat(searchResponse.hits().totalHits(), equalTo(100l));, +//        assertThat(searchResponse.hits().hits().length, equalTo(40));, +//            assertThat("id[" + hit.id() + "]", hit.id(), equalTo(Integer.toString(100 - 60 - 1 - i)));, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/search/TwoInstanceEmbeddedSearchTests.java, +    @Test public void testDfsQueryThenFetch() throws Exception {, +        Map<SearchShardTarget, QuerySearchResultProvider> scrollQueryResults = newHashMap();, +            scrollQueryResults.put(queryResult.queryResult().shardTarget(), nodeToSearchService.get(queryResult.shardTarget().nodeId()).executeQueryPhase(new InternalScrollSearchRequest(queryResult.id())));, +        queryResults = scrollQueryResults;, +    @Test public void testDfsQueryThenFetchWithSort() throws Exception {, +        Map<SearchShardTarget, QuerySearchResultProvider> scrollQueryResults = newHashMap();, +            scrollQueryResults.put(queryResult.queryResult().shardTarget(), nodeToSearchService.get(queryResult.shardTarget().nodeId()).executeQueryPhase(new InternalScrollSearchRequest(queryResult.id()).scroll(new Scroll(timeValueMinutes(10)))));, +        queryResults = scrollQueryResults;, +        scrollQueryResults = newHashMap();, +            scrollQueryResults.put(queryResult.queryResult().shardTarget(), nodeToSearchService.get(queryResult.shardTarget().nodeId()).executeQueryPhase(new InternalScrollSearchRequest(queryResult.id())));, +        queryResults = scrollQueryResults;, +    @Test public void testQueryAndFetch() {]