[+++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/ESLoggingHandler.java, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        // We do not want to log read complete events because we log inbound messages in the TcpTransport., +        ctx.fireChannelReadComplete();, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/ESLoggingHandler.java, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        // We do not want to log read complete events because we log inbound messages in the TcpTransport., +        ctx.fireChannelReadComplete();, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java, +        assert msg instanceof ByteBuf : "Expected message type ByteBuf, found: " + msg.getClass();, +, +            transport.inboundMessage(channelAttribute.get(), Netty4Utils.toBytesReference(buffer));, +            buffer.release();, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/ESLoggingHandler.java, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        // We do not want to log read complete events because we log inbound messages in the TcpTransport., +        ctx.fireChannelReadComplete();, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java, +        assert msg instanceof ByteBuf : "Expected message type ByteBuf, found: " + msg.getClass();, +, +            transport.inboundMessage(channelAttribute.get(), Netty4Utils.toBytesReference(buffer));, +            buffer.release();, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4SizeHeaderFrameDecoder.java, +            boolean continueDecode = true;, +            while (continueDecode) {, +                int messageLength = TcpTransport.readMessageLength(Netty4Utils.toBytesReference(in));, +                if (messageLength == -1) {, +                    continueDecode = false;, +                } else {, +                    if (messageLengthWithHeader > in.readableBytes()) {, +                        continueDecode = false;, +                    } else {, +                        final ByteBuf message = in.retainedSlice(in.readerIndex() + HEADER_SIZE, messageLength);, +                        in.readerIndex(in.readerIndex() + messageLengthWithHeader);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/ESLoggingHandler.java, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        // We do not want to log read complete events because we log inbound messages in the TcpTransport., +        ctx.fireChannelReadComplete();, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java, +        assert msg instanceof ByteBuf : "Expected message type ByteBuf, found: " + msg.getClass();, +, +            transport.inboundMessage(channelAttribute.get(), Netty4Utils.toBytesReference(buffer));, +            buffer.release();, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4SizeHeaderFrameDecoder.java, +            boolean continueDecode = true;, +            while (continueDecode) {, +                int messageLength = TcpTransport.readMessageLength(Netty4Utils.toBytesReference(in));, +                if (messageLength == -1) {, +                    continueDecode = false;, +                } else {, +                    if (messageLengthWithHeader > in.readableBytes()) {, +                        continueDecode = false;, +                    } else {, +                        final ByteBuf message = in.retainedSlice(in.readerIndex() + HEADER_SIZE, messageLength);, +                        in.readerIndex(in.readerIndex() + messageLengthWithHeader);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Utils.java, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/ESLoggingHandler.java, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        // We do not want to log read complete events because we log inbound messages in the TcpTransport., +        ctx.fireChannelReadComplete();, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java, +        assert msg instanceof ByteBuf : "Expected message type ByteBuf, found: " + msg.getClass();, +, +            transport.inboundMessage(channelAttribute.get(), Netty4Utils.toBytesReference(buffer));, +            buffer.release();, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4SizeHeaderFrameDecoder.java, +            boolean continueDecode = true;, +            while (continueDecode) {, +                int messageLength = TcpTransport.readMessageLength(Netty4Utils.toBytesReference(in));, +                if (messageLength == -1) {, +                    continueDecode = false;, +                } else {, +                    if (messageLengthWithHeader > in.readableBytes()) {, +                        continueDecode = false;, +                    } else {, +                        final ByteBuf message = in.retainedSlice(in.readerIndex() + HEADER_SIZE, messageLength);, +                        in.readerIndex(in.readerIndex() + messageLengthWithHeader);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Utils.java, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/ESLoggingHandlerIT.java, +import org.elasticsearch.transport.TransportLogger;, +@TestLogging(value = "org.elasticsearch.transport.netty4.ESLoggingHandler:trace,org.elasticsearch.transport.TransportLogger:trace"), +        Loggers.addAppender(Loggers.getLogger(TransportLogger.class), appender);, +        Loggers.removeAppender(Loggers.getLogger(TransportLogger.class), appender);, +                        "hot threads request", TransportLogger.class.getCanonicalName(), Level.TRACE, writePattern);, +                        "hot threads request", TransportLogger.class.getCanonicalName(), Level.TRACE, readPattern);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/ESLoggingHandler.java, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        // We do not want to log read complete events because we log inbound messages in the TcpTransport., +        ctx.fireChannelReadComplete();, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java, +        assert msg instanceof ByteBuf : "Expected message type ByteBuf, found: " + msg.getClass();, +, +            transport.inboundMessage(channelAttribute.get(), Netty4Utils.toBytesReference(buffer));, +            buffer.release();, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4SizeHeaderFrameDecoder.java, +            boolean continueDecode = true;, +            while (continueDecode) {, +                int messageLength = TcpTransport.readMessageLength(Netty4Utils.toBytesReference(in));, +                if (messageLength == -1) {, +                    continueDecode = false;]