[+++ b/benchmarks/build.gradle, +// order of this section matters, see: https://github.com/johnrengelman/shadow/issues/336, +++ b/benchmarks/build.gradle, +// order of this section matters, see: https://github.com/johnrengelman/shadow/issues/336, +++ b/build.gradle, +    if (tasks.findByPath('test') != null && tasks.findByPath('integTest') != null) {, +      integTest.mustRunAfter test, +    }, +, +if (System.properties.get("build.compare") != null) {, +  apply plugin: 'compare-gradle-builds', +  compareGradleBuilds {, +    ext.referenceProject = System.properties.get("build.compare"), +    doFirst {, +      if (file(referenceProject).exists() == false) {, +        throw new GradleException(, +                "Use git worktree to check out a version to compare against to ../elasticsearch_build_reference", +        ), +      }, +    }, +    sourceBuild {, +      gradleVersion = "4.7" // does not default to gradle weapper of project dir, but current version, +      projectDir = referenceProject, +      tasks = ["clean", "assemble"], +      arguments = ["-Dbuild.compare_friendly=true"], +    }, +    targetBuild {, +      tasks = ["clean", "assemble"], +      // use -Dorg.gradle.java.home= to alter jdk versions, +      arguments = ["-Dbuild.compare_friendly=true"], +    }, +  }, +}, +++ b/benchmarks/build.gradle, +// order of this section matters, see: https://github.com/johnrengelman/shadow/issues/336, +++ b/build.gradle, +    if (tasks.findByPath('test') != null && tasks.findByPath('integTest') != null) {, +      integTest.mustRunAfter test, +    }, +, +if (System.properties.get("build.compare") != null) {, +  apply plugin: 'compare-gradle-builds', +  compareGradleBuilds {, +    ext.referenceProject = System.properties.get("build.compare"), +    doFirst {, +      if (file(referenceProject).exists() == false) {, +        throw new GradleException(, +                "Use git worktree to check out a version to compare against to ../elasticsearch_build_reference", +        ), +      }, +    }, +    sourceBuild {, +      gradleVersion = "4.7" // does not default to gradle weapper of project dir, but current version, +      projectDir = referenceProject, +      tasks = ["clean", "assemble"], +      arguments = ["-Dbuild.compare_friendly=true"], +    }, +    targetBuild {, +      tasks = ["clean", "assemble"], +      // use -Dorg.gradle.java.home= to alter jdk versions, +      arguments = ["-Dbuild.compare_friendly=true"], +    }, +  }, +}, +++ b/buildSrc/build.gradle, +++ b/benchmarks/build.gradle, +// order of this section matters, see: https://github.com/johnrengelman/shadow/issues/336, +++ b/build.gradle, +    if (tasks.findByPath('test') != null && tasks.findByPath('integTest') != null) {, +      integTest.mustRunAfter test, +    }, +, +if (System.properties.get("build.compare") != null) {, +  apply plugin: 'compare-gradle-builds', +  compareGradleBuilds {, +    ext.referenceProject = System.properties.get("build.compare"), +    doFirst {, +      if (file(referenceProject).exists() == false) {, +        throw new GradleException(, +                "Use git worktree to check out a version to compare against to ../elasticsearch_build_reference", +        ), +      }, +    }, +    sourceBuild {, +      gradleVersion = "4.7" // does not default to gradle weapper of project dir, but current version, +      projectDir = referenceProject, +      tasks = ["clean", "assemble"], +      arguments = ["-Dbuild.compare_friendly=true"], +    }, +    targetBuild {, +      tasks = ["clean", "assemble"], +      // use -Dorg.gradle.java.home= to alter jdk versions, +      arguments = ["-Dbuild.compare_friendly=true"], +    }, +  }, +}, +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingPlugin.groovy, +import org.gradle.api.GradleException, +import org.gradle.api.UnknownTaskException]