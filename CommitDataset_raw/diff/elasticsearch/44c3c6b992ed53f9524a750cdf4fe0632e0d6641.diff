[+++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/input/search/ExecutableSearchInput.java, +        SearchResponse response = client.search(searchTemplateService.toSearchRequest(request)).actionGet(timeout);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/input/search/ExecutableSearchInput.java, +        SearchResponse response = client.search(searchTemplateService.toSearchRequest(request)).actionGet(timeout);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/support/search/WatcherSearchTemplateRequest.java, +import org.elasticsearch.common.bytes.BytesArray;, +        this.searchSource = BytesArray.EMPTY;, +        this.searchSource = BytesArray.EMPTY;, +        if (searchSource != null && searchSource.length() > 0) {, +        if (searchSource == null) {, +            searchSource = BytesArray.EMPTY;, +        }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/input/search/ExecutableSearchInput.java, +        SearchResponse response = client.search(searchTemplateService.toSearchRequest(request)).actionGet(timeout);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/support/search/WatcherSearchTemplateRequest.java, +import org.elasticsearch.common.bytes.BytesArray;, +        this.searchSource = BytesArray.EMPTY;, +        this.searchSource = BytesArray.EMPTY;, +        if (searchSource != null && searchSource.length() > 0) {, +        if (searchSource == null) {, +            searchSource = BytesArray.EMPTY;, +        }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/support/search/WatcherSearchTemplateService.java, +    public String renderTemplate(Script source, WatchExecutionContext ctx, Payload payload) throws IOException {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/input/search/ExecutableSearchInput.java, +        SearchResponse response = client.search(searchTemplateService.toSearchRequest(request)).actionGet(timeout);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/support/search/WatcherSearchTemplateRequest.java, +import org.elasticsearch.common.bytes.BytesArray;, +        this.searchSource = BytesArray.EMPTY;, +        this.searchSource = BytesArray.EMPTY;, +        if (searchSource != null && searchSource.length() > 0) {, +        if (searchSource == null) {, +            searchSource = BytesArray.EMPTY;, +        }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/support/search/WatcherSearchTemplateService.java, +    public String renderTemplate(Script source, WatchExecutionContext ctx, Payload payload) throws IOException {, +++ b/plugin/src/test/java/org/elasticsearch/xpack/watcher/support/WatcherUtilsTests.java, +import org.elasticsearch.common.bytes.BytesArray;, +        BytesReference source = BytesArray.EMPTY;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/input/search/ExecutableSearchInput.java, +        SearchResponse response = client.search(searchTemplateService.toSearchRequest(request)).actionGet(timeout);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/support/search/WatcherSearchTemplateRequest.java, +import org.elasticsearch.common.bytes.BytesArray;, +        this.searchSource = BytesArray.EMPTY;, +        this.searchSource = BytesArray.EMPTY;, +        if (searchSource != null && searchSource.length() > 0) {, +        if (searchSource == null) {, +            searchSource = BytesArray.EMPTY;, +        }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/support/search/WatcherSearchTemplateService.java, +    public String renderTemplate(Script source, WatchExecutionContext ctx, Payload payload) throws IOException {, +++ b/plugin/src/test/java/org/elasticsearch/xpack/watcher/support/WatcherUtilsTests.java, +import org.elasticsearch.common.bytes.BytesArray;, +        BytesReference source = BytesArray.EMPTY;, +++ b/plugin/src/test/java/org/elasticsearch/xpack/watcher/test/integration/SearchInputTests.java, +import org.elasticsearch.action.search.SearchRequest;, +import org.elasticsearch.action.search.SearchResponse;, +import org.elasticsearch.action.search.ShardSearchFailure;, +import org.elasticsearch.action.support.PlainActionFuture;, +import org.elasticsearch.client.Client;, +import org.elasticsearch.common.bytes.BytesArray;, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentType;, +import org.elasticsearch.script.ScriptEngine;, +import org.elasticsearch.search.SearchModule;, +import org.elasticsearch.search.internal.InternalSearchResponse;, +import org.elasticsearch.test.ESTestCase;, +import org.junit.Before;, +import org.mockito.ArgumentCaptor;, +import java.util.HashMap;, +import java.util.Map;, +import static org.elasticsearch.mock.orig.Mockito.when;, +import static org.hamcrest.Matchers.arrayContainingInAnyOrder;, +import static org.hamcrest.Matchers.not;, +import static org.hamcrest.Matchers.nullValue;, +import static org.mockito.Mockito.mock;, +public class SearchInputTests extends ESTestCase {, +    private ScriptService scriptService;, +    private Client client;, +, +    @Before, +    public void setup() {, +        Map<String, ScriptEngine> engines = new HashMap<>();, +        engines.put(MockMustacheScriptEngine.NAME, new MockMustacheScriptEngine());, +        Map<String, ScriptContext<?>> contexts = new HashMap<>();, +        contexts.put(Watcher.SCRIPT_TEMPLATE_CONTEXT.name, Watcher.SCRIPT_TEMPLATE_CONTEXT);, +        contexts.put(Watcher.SCRIPT_SEARCH_CONTEXT.name, Watcher.SCRIPT_SEARCH_CONTEXT);, +        contexts.put(Watcher.SCRIPT_EXECUTABLE_CONTEXT.name, Watcher.SCRIPT_EXECUTABLE_CONTEXT);, +        scriptService = new ScriptService(Settings.EMPTY, engines, contexts);, +, +        client = mock(Client.class);, +        ArgumentCaptor<SearchRequest> requestCaptor = ArgumentCaptor.forClass(SearchRequest.class);, +        PlainActionFuture<SearchResponse> searchFuture = PlainActionFuture.newFuture();, +        SearchResponse searchResponse = new SearchResponse(InternalSearchResponse.empty(), "", 1, 1, 1234, ShardSearchFailure.EMPTY_ARRAY);, +        searchFuture.onResponse(searchResponse);]