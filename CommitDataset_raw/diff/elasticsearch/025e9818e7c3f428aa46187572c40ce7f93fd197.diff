[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java, +import org.elasticsearch.index.shard.ShardId;, +    public ShardFlushRequest(FlushRequest request, ShardId shardId) {, +        super(request, shardId);, +    @Override, +    public String toString() {, +        return "flush {" + super.toString() + "}";, +    }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java, +import org.elasticsearch.index.shard.ShardId;, +    public ShardFlushRequest(FlushRequest request, ShardId shardId) {, +        super(request, shardId);, +    @Override, +    public String toString() {, +        return "flush {" + super.toString() + "}";, +    }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java, +        return new ShardFlushRequest(request, shardId);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java, +import org.elasticsearch.index.shard.ShardId;, +    public ShardFlushRequest(FlushRequest request, ShardId shardId) {, +        super(request, shardId);, +    @Override, +    public String toString() {, +        return "flush {" + super.toString() + "}";, +    }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java, +        return new ShardFlushRequest(request, shardId);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportShardFlushAction.java, +import org.elasticsearch.cluster.metadata.MetaData;, +    protected Tuple<ActionWriteResponse, ShardFlushRequest> shardOperationOnPrimary(MetaData metaData, ShardFlushRequest shardRequest) throws Throwable {, +        IndexShard indexShard = indicesService.indexServiceSafe(shardRequest.shardId().getIndex()).getShard(shardRequest.shardId().id());, +        indexShard.flush(shardRequest.getRequest());, +        return new Tuple<>(new ActionWriteResponse(), shardRequest);, +    protected void shardOperationOnReplica(ShardFlushRequest request) {, +    protected ClusterBlockLevel globalBlockLevel() {, +        return ClusterBlockLevel.METADATA_WRITE;, +    protected ClusterBlockLevel indexBlockLevel() {, +        return ClusterBlockLevel.METADATA_WRITE;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java, +import org.elasticsearch.index.shard.ShardId;, +    public ShardFlushRequest(FlushRequest request, ShardId shardId) {, +        super(request, shardId);, +    @Override, +    public String toString() {, +        return "flush {" + super.toString() + "}";, +    }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java, +        return new ShardFlushRequest(request, shardId);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportShardFlushAction.java, +import org.elasticsearch.cluster.metadata.MetaData;, +    protected Tuple<ActionWriteResponse, ShardFlushRequest> shardOperationOnPrimary(MetaData metaData, ShardFlushRequest shardRequest) throws Throwable {, +        IndexShard indexShard = indicesService.indexServiceSafe(shardRequest.shardId().getIndex()).getShard(shardRequest.shardId().id());, +        indexShard.flush(shardRequest.getRequest());, +        return new Tuple<>(new ActionWriteResponse(), shardRequest);, +    protected void shardOperationOnReplica(ShardFlushRequest request) {, +    protected ClusterBlockLevel globalBlockLevel() {, +        return ClusterBlockLevel.METADATA_WRITE;, +    protected ClusterBlockLevel indexBlockLevel() {, +        return ClusterBlockLevel.METADATA_WRITE;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java, +        return new ReplicationRequest(request, shardId);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java, +import org.elasticsearch.index.shard.ShardId;, +    public ShardFlushRequest(FlushRequest request, ShardId shardId) {, +        super(request, shardId);, +    @Override, +    public String toString() {, +        return "flush {" + super.toString() + "}";, +    }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java, +        return new ShardFlushRequest(request, shardId);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportShardFlushAction.java, +import org.elasticsearch.cluster.metadata.MetaData;, +    protected Tuple<ActionWriteResponse, ShardFlushRequest> shardOperationOnPrimary(MetaData metaData, ShardFlushRequest shardRequest) throws Throwable {, +        IndexShard indexShard = indicesService.indexServiceSafe(shardRequest.shardId().getIndex()).getShard(shardRequest.shardId().id());, +        indexShard.flush(shardRequest.getRequest());, +        return new Tuple<>(new ActionWriteResponse(), shardRequest);, +    protected void shardOperationOnReplica(ShardFlushRequest request) {, +    protected ClusterBlockLevel globalBlockLevel() {, +        return ClusterBlockLevel.METADATA_WRITE;, +    protected ClusterBlockLevel indexBlockLevel() {, +        return ClusterBlockLevel.METADATA_WRITE;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java, +        return new ReplicationRequest(request, shardId);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportShardRefreshAction.java, +import org.elasticsearch.cluster.metadata.MetaData;, +    protected Tuple<ActionWriteResponse, ReplicationRequest> shardOperationOnPrimary(MetaData metaData, ReplicationRequest shardRequest) throws Throwable {, +        IndexShard indexShard = indicesService.indexServiceSafe(shardRequest.shardId().getIndex()).getShard(shardRequest.shardId().id());, +        return new Tuple<>(new ActionWriteResponse(), shardRequest);, +    protected void shardOperationOnReplica(ReplicationRequest request) {, +        final ShardId shardId = request.shardId();, +    protected ClusterBlockLevel globalBlockLevel() {, +        return ClusterBlockLevel.METADATA_WRITE;, +    protected ClusterBlockLevel indexBlockLevel() {, +        return ClusterBlockLevel.METADATA_WRITE;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java, +import org.elasticsearch.index.shard.ShardId;, +    public ShardFlushRequest(FlushRequest request, ShardId shardId) {, +        super(request, shardId);]