[+++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- The suffix L is preferred, because the letter l (ell) is often, +    hard to distinguish from the digit 1 (one). -->, +    <module name="UpperEll"/>, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- The suffix L is preferred, because the letter l (ell) is often, +    hard to distinguish from the digit 1 (one). -->, +    <module name="UpperEll"/>, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +        return settings.getAsLong(SETTING_CREATION_DATE, -1L);, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- The suffix L is preferred, because the letter l (ell) is often, +    hard to distinguish from the digit 1 (one). -->, +    <module name="UpperEll"/>, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +        return settings.getAsLong(SETTING_CREATION_DATE, -1L);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/UnassignedInfo.java, +    private volatile long lastComputedLeftDelayNanos = 0L; // how long to delay shard allocation, not serialized (always positive, 0 means no delay), +        return Math.max(0L, delayTimeout.nanos());, +        if (delayTimeoutNanos == 0L) {, +            newComputedLeftDelayNanos = 0L;, +        return minDelaySetting == Long.MAX_VALUE ? 0L : minDelaySetting;, +        return nextDelay == Long.MAX_VALUE ? 0L : nextDelay;, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- The suffix L is preferred, because the letter l (ell) is often, +    hard to distinguish from the digit 1 (one). -->, +    <module name="UpperEll"/>, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +        return settings.getAsLong(SETTING_CREATION_DATE, -1L);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/UnassignedInfo.java, +    private volatile long lastComputedLeftDelayNanos = 0L; // how long to delay shard allocation, not serialized (always positive, 0 means no delay), +        return Math.max(0L, delayTimeout.nanos());, +        if (delayTimeoutNanos == 0L) {, +            newComputedLeftDelayNanos = 0L;, +        return minDelaySetting == Long.MAX_VALUE ? 0L : minDelaySetting;, +        return nextDelay == Long.MAX_VALUE ? 0L : nextDelay;, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoUtils.java, +            return (part<=(1L<<level)) ?level :(level+1); // adjust level, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- The suffix L is preferred, because the letter l (ell) is often, +    hard to distinguish from the digit 1 (one). -->, +    <module name="UpperEll"/>, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +        return settings.getAsLong(SETTING_CREATION_DATE, -1L);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/UnassignedInfo.java, +    private volatile long lastComputedLeftDelayNanos = 0L; // how long to delay shard allocation, not serialized (always positive, 0 means no delay), +        return Math.max(0L, delayTimeout.nanos());, +        if (delayTimeoutNanos == 0L) {, +            newComputedLeftDelayNanos = 0L;, +        return minDelaySetting == Long.MAX_VALUE ? 0L : minDelaySetting;, +        return nextDelay == Long.MAX_VALUE ? 0L : nextDelay;, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoUtils.java, +            return (part<=(1L<<level)) ?level :(level+1); // adjust level, +++ b/core/src/main/java/org/elasticsearch/discovery/DiscoveryService.java, +    public static final Setting<Long> DISCOVERY_SEED_SETTING = Setting.longSetting("discovery.id.seed", 0L, Long.MIN_VALUE, false, Setting.Scope.CLUSTER);, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- The suffix L is preferred, because the letter l (ell) is often, +    hard to distinguish from the digit 1 (one). -->, +    <module name="UpperEll"/>, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +        return settings.getAsLong(SETTING_CREATION_DATE, -1L);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/UnassignedInfo.java, +    private volatile long lastComputedLeftDelayNanos = 0L; // how long to delay shard allocation, not serialized (always positive, 0 means no delay), +        return Math.max(0L, delayTimeout.nanos());, +        if (delayTimeoutNanos == 0L) {, +            newComputedLeftDelayNanos = 0L;, +        return minDelaySetting == Long.MAX_VALUE ? 0L : minDelaySetting;, +        return nextDelay == Long.MAX_VALUE ? 0L : nextDelay;, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoUtils.java, +            return (part<=(1L<<level)) ?level :(level+1); // adjust level, +++ b/core/src/main/java/org/elasticsearch/discovery/DiscoveryService.java, +    public static final Setting<Long> DISCOVERY_SEED_SETTING = Setting.longSetting("discovery.id.seed", 0L, Long.MIN_VALUE, false, Setting.Scope.CLUSTER);, +++ b/core/src/main/java/org/elasticsearch/gateway/PriorityComparator.java, +        return settings.getAsLong(IndexMetaData.SETTING_CREATION_DATE, -1L);, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- The suffix L is preferred, because the letter l (ell) is often, +    hard to distinguish from the digit 1 (one). -->, +    <module name="UpperEll"/>, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +        return settings.getAsLong(SETTING_CREATION_DATE, -1L);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/UnassignedInfo.java, +    private volatile long lastComputedLeftDelayNanos = 0L; // how long to delay shard allocation, not serialized (always positive, 0 means no delay), +        return Math.max(0L, delayTimeout.nanos());, +        if (delayTimeoutNanos == 0L) {, +            newComputedLeftDelayNanos = 0L;, +        return minDelaySetting == Long.MAX_VALUE ? 0L : minDelaySetting;, +        return nextDelay == Long.MAX_VALUE ? 0L : nextDelay;, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoUtils.java, +            return (part<=(1L<<level)) ?level :(level+1); // adjust level, +++ b/core/src/main/java/org/elasticsearch/discovery/DiscoveryService.java, +    public static final Setting<Long> DISCOVERY_SEED_SETTING = Setting.longSetting("discovery.id.seed", 0L, Long.MIN_VALUE, false, Setting.Scope.CLUSTER);, +++ b/core/src/main/java/org/elasticsearch/gateway/PriorityComparator.java, +        return settings.getAsLong(IndexMetaData.SETTING_CREATION_DATE, -1L);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +                    long ramBytesUsed = accountable != null ? accountable.ramBytesUsed() : 0L;, +                    long ramBytesUsed = accountable != null ? accountable.ramBytesUsed() : 0L;, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- The suffix L is preferred, because the letter l (ell) is often, +    hard to distinguish from the digit 1 (one). -->, +    <module name="UpperEll"/>]