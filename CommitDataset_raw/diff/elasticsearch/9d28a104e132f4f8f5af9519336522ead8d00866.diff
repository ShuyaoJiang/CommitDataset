[+++ b/plugins/discovery-ec2/build.gradle, +task writeTestJavaPolicy {, +  doLast {, +    final File tmp = file("${buildDir}/tmp"), +    if (tmp.exists() == false && tmp.mkdirs() == false) {, +      throw new GradleException("failed to create temporary directory [${tmp}]"), +    }, +    final File javaPolicy = file("${tmp}/java.policy"), +    javaPolicy.write(, +    [, +            "grant {",, +            "  permission java.util.PropertyPermission \"com.amazonaws.sdk.ec2MetadataServiceEndpointOverride\", \"write\";",, +            "};", +    ].join("\n")), +  }, +}, +, +  dependsOn writeTestJavaPolicy, +  , +  // this is needed to manipulate com.amazonaws.sdk.ec2MetadataServiceEndpointOverride system property, +  // it is better rather disable security manager at all with `systemProperty 'tests.security.manager', 'false'`, +  systemProperty 'java.security.policy', "file://${buildDir}/tmp/java.policy", +++ b/plugins/discovery-ec2/build.gradle, +task writeTestJavaPolicy {, +  doLast {, +    final File tmp = file("${buildDir}/tmp"), +    if (tmp.exists() == false && tmp.mkdirs() == false) {, +      throw new GradleException("failed to create temporary directory [${tmp}]"), +    }, +    final File javaPolicy = file("${tmp}/java.policy"), +    javaPolicy.write(, +    [, +            "grant {",, +            "  permission java.util.PropertyPermission \"com.amazonaws.sdk.ec2MetadataServiceEndpointOverride\", \"write\";",, +            "};", +    ].join("\n")), +  }, +}, +, +  dependsOn writeTestJavaPolicy, +  , +  // this is needed to manipulate com.amazonaws.sdk.ec2MetadataServiceEndpointOverride system property, +  // it is better rather disable security manager at all with `systemProperty 'tests.security.manager', 'false'`, +  systemProperty 'java.security.policy', "file://${buildDir}/tmp/java.policy", +++ b/plugins/discovery-ec2/qa/amazon-ec2/build.gradle, +    setting 'network.host', '_ec2_', +    systemProperty "com.amazonaws.sdk.ec2MetadataServiceEndpointOverride", "http://${-> ec2Fixture.addressAndPort}", +    , +++ b/plugins/discovery-ec2/build.gradle, +task writeTestJavaPolicy {, +  doLast {, +    final File tmp = file("${buildDir}/tmp"), +    if (tmp.exists() == false && tmp.mkdirs() == false) {, +      throw new GradleException("failed to create temporary directory [${tmp}]"), +    }, +    final File javaPolicy = file("${tmp}/java.policy"), +    javaPolicy.write(, +    [, +            "grant {",, +            "  permission java.util.PropertyPermission \"com.amazonaws.sdk.ec2MetadataServiceEndpointOverride\", \"write\";",, +            "};", +    ].join("\n")), +  }, +}, +, +  dependsOn writeTestJavaPolicy, +  , +  // this is needed to manipulate com.amazonaws.sdk.ec2MetadataServiceEndpointOverride system property, +  // it is better rather disable security manager at all with `systemProperty 'tests.security.manager', 'false'`, +  systemProperty 'java.security.policy', "file://${buildDir}/tmp/java.policy", +++ b/plugins/discovery-ec2/qa/amazon-ec2/build.gradle, +    setting 'network.host', '_ec2_', +    systemProperty "com.amazonaws.sdk.ec2MetadataServiceEndpointOverride", "http://${-> ec2Fixture.addressAndPort}", +    , +++ b/plugins/discovery-ec2/qa/amazon-ec2/src/test/java/org/elasticsearch/discovery/ec2/AmazonEC2Fixture.java, +import org.apache.http.client.methods.HttpGet;, +import org.apache.http.client.methods.HttpPost;, +        if ("/".equals(request.getPath()) && (HttpPost.METHOD_NAME.equals(request.getMethod()))) {, +        if ("/latest/meta-data/local-ipv4".equals(request.getPath()) && (HttpGet.METHOD_NAME.equals(request.getMethod()))) {, +            return new Response(RestStatus.OK.getStatus(), TEXT_PLAIN_CONTENT_TYPE, "127.0.0.1".getBytes(UTF_8));, +        }, +++ b/plugins/discovery-ec2/build.gradle, +task writeTestJavaPolicy {, +  doLast {, +    final File tmp = file("${buildDir}/tmp"), +    if (tmp.exists() == false && tmp.mkdirs() == false) {, +      throw new GradleException("failed to create temporary directory [${tmp}]"), +    }, +    final File javaPolicy = file("${tmp}/java.policy"), +    javaPolicy.write(, +    [, +            "grant {",, +            "  permission java.util.PropertyPermission \"com.amazonaws.sdk.ec2MetadataServiceEndpointOverride\", \"write\";",, +            "};", +    ].join("\n")), +  }, +}, +, +  dependsOn writeTestJavaPolicy, +  ]