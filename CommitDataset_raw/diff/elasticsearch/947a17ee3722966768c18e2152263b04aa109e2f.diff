[+++ b/core/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +        if (result.hasFailure() == false) {, +    }, +++ b/core/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +        if (result.hasFailure() == false) {, +    }, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +        if (result.hasFailure() == false) {, +    }, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +++ b/core/src/main/java/org/elasticsearch/index/shard/InternalIndexingStats.java, +        if (result.hasFailure() == false) {, +        } else {, +            postIndex(index, result.getFailure());, +        }, +        if (result.hasFailure() == false) {, +        } else {, +            postDelete(delete, result.getFailure());, +        }, +++ b/core/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +        if (result.hasFailure() == false) {, +    }, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +++ b/core/src/main/java/org/elasticsearch/index/shard/InternalIndexingStats.java, +        if (result.hasFailure() == false) {, +        } else {, +            postIndex(index, result.getFailure());, +        }, +        if (result.hasFailure() == false) {, +        } else {, +            postDelete(delete, result.getFailure());, +        }, +++ b/core/src/main/java/org/elasticsearch/indices/IndexingMemoryController.java, +        if (result.hasFailure() == false) {, +    }, +++ b/core/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +        if (result.hasFailure() == false) {, +    }, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +++ b/core/src/main/java/org/elasticsearch/index/shard/InternalIndexingStats.java, +        if (result.hasFailure() == false) {, +        } else {, +            postIndex(index, result.getFailure());, +        }, +        if (result.hasFailure() == false) {, +        } else {, +            postDelete(delete, result.getFailure());, +        }, +++ b/core/src/main/java/org/elasticsearch/indices/IndexingMemoryController.java, +        if (result.hasFailure() == false) {, +    }, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +import static org.elasticsearch.common.lucene.Lucene.readScoreDoc;, +                if (result.hasFailure() == false) {, +                } else {, +                    postIndex(index, result.getFailure());, +                }, +                if (result.hasFailure() == false) {, +                } else {, +                    postDelete(delete, result.getFailure());, +                }, +++ b/core/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +        if (result.hasFailure() == false) {, +    }, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +++ b/core/src/main/java/org/elasticsearch/index/shard/InternalIndexingStats.java, +        if (result.hasFailure() == false) {, +        } else {, +            postIndex(index, result.getFailure());, +        }, +        if (result.hasFailure() == false) {, +        } else {, +            postDelete(delete, result.getFailure());, +        }, +++ b/core/src/main/java/org/elasticsearch/indices/IndexingMemoryController.java, +        if (result.hasFailure() == false) {, +    }, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +import static org.elasticsearch.common.lucene.Lucene.readScoreDoc;, +                if (result.hasFailure() == false) {, +                } else {, +                    postIndex(index, result.getFailure());, +                }, +                if (result.hasFailure() == false) {, +                } else {, +                    postDelete(delete, result.getFailure());, +                }, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexingOperationListenerTests.java, +                if (result.hasFailure() == false) {, +                } else {, +                    postIndex(index, result.getFailure());, +                }, +                if (result.hasFailure() == false) {, +                } else {, +                    postDelete(delete, result.getFailure());, +                }]