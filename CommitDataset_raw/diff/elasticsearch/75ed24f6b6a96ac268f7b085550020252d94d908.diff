[+++ b/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +        for (ShardRoutingState s : state) {, +            if (s == ShardRoutingState.UNASSIGNED) {, +                Iterables.addAll(shards, unassigned());, +                break;, +            }, +        }, +        for (ShardRoutingState s : state) {, +            if (s == ShardRoutingState.UNASSIGNED) {, +                for (MutableShardRouting unassignedShard : unassignedShards) {, +                    if (unassignedShard.index().equals(index)) {, +                        shards.add(unassignedShard);, +                    }, +                }, +                break;, +            }, +        }, +++ b/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +        for (ShardRoutingState s : state) {, +            if (s == ShardRoutingState.UNASSIGNED) {, +                Iterables.addAll(shards, unassigned());, +                break;, +            }, +        }, +        for (ShardRoutingState s : state) {, +            if (s == ShardRoutingState.UNASSIGNED) {, +                for (MutableShardRouting unassignedShard : unassignedShards) {, +                    if (unassignedShard.index().equals(index)) {, +                        shards.add(unassignedShard);, +                    }, +                }, +                break;, +            }, +        }, +++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +        changed |= electPrimariesAndUnassignedDanglingReplicas(allocation);, +        changed |= electPrimariesAndUnassignedDanglingReplicas(allocation);, +            changed |= electPrimariesAndUnassignedDanglingReplicas(allocation);, +    private boolean electPrimariesAndUnassignedDanglingReplicas(RoutingAllocation allocation) {, +, +        // go over and remove dangling replicas that are initializing for primary shards, +        List<ShardRouting> shardsToFail = Lists.newArrayList();, +        for (MutableShardRouting shardEntry : routingNodes.unassigned()) {, +            if (shardEntry.primary()) {, +                for (MutableShardRouting routing : routingNodes.assignedShards(shardEntry)) {, +                    if (!routing.primary() && routing.initializing()) {, +                        shardsToFail.add(routing);, +                    }, +                }, +            }, +        }, +        for (ShardRouting shardToFail : shardsToFail) {, +           changed |= applyFailedShard(allocation, shardToFail, false);, +        }, +, +        // now, go over and elect a new primary if possible, not, from this code block on, if one is elected,, +        // routingNodes.hasUnassignedPrimaries() will potentially be false, +++ b/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +        for (ShardRoutingState s : state) {, +            if (s == ShardRoutingState.UNASSIGNED) {, +                Iterables.addAll(shards, unassigned());, +                break;, +            }, +        }, +        for (ShardRoutingState s : state) {, +            if (s == ShardRoutingState.UNASSIGNED) {, +                for (MutableShardRouting unassignedShard : unassignedShards) {, +                    if (unassignedShard.index().equals(index)) {, +                        shards.add(unassignedShard);, +                    }, +                }, +                break;, +            }, +        }, +++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +        changed |= electPrimariesAndUnassignedDanglingReplicas(allocation);, +        changed |= electPrimariesAndUnassignedDanglingReplicas(allocation);, +            changed |= electPrimariesAndUnassignedDanglingReplicas(allocation);, +    private boolean electPrimariesAndUnassignedDanglingReplicas(RoutingAllocation allocation) {, +, +        // go over and remove dangling replicas that are initializing for primary shards, +        List<ShardRouting> shardsToFail = Lists.newArrayList();, +        for (MutableShardRouting shardEntry : routingNodes.unassigned()) {, +            if (shardEntry.primary()) {, +                for (MutableShardRouting routing : routingNodes.assignedShards(shardEntry)) {, +                    if (!routing.primary() && routing.initializing()) {, +                        shardsToFail.add(routing);, +                    }, +                }, +            }, +        }, +        for (ShardRouting shardToFail : shardsToFail) {, +           changed |= applyFailedShard(allocation, shardToFail, false);, +        }, +, +        // now, go over and elect a new primary if possible, not, from this code block on, if one is elected,, +        // routingNodes.hasUnassignedPrimaries() will potentially be false, +++ b/src/test/java/org/elasticsearch/cluster/routing/allocation/FailedShardsRoutingTests.java, +import com.google.common.collect.ImmutableList;, +]