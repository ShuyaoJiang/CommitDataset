[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +        threadPool.cached().execute(new Runnable() {, +            @Override public void run() {, +        });, +    }, +, +                        @Override public boolean spawn() {, +                            return false; // no need to spawn, we hardly do anything, +                        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +        threadPool.cached().execute(new Runnable() {, +            @Override public void run() {, +        });, +    }, +, +                        @Override public boolean spawn() {, +                            return false; // no need to spawn, we hardly do anything, +                        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java, +    private void notifyNodeFailure(final DiscoveryNode node, final String reason) {, +        threadPool.cached().execute(new Runnable() {, +            @Override public void run() {, +        });, +    }, +, +                        @Override public boolean spawn() {, +                            return false; // no need to spawn, we hardly do anything, +                        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +        threadPool.cached().execute(new Runnable() {, +            @Override public void run() {, +        });, +    }, +, +                        @Override public boolean spawn() {, +                            return false; // no need to spawn, we hardly do anything, +                        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java, +    private void notifyNodeFailure(final DiscoveryNode node, final String reason) {, +        threadPool.cached().execute(new Runnable() {, +            @Override public void run() {, +        });, +    }, +, +                        @Override public boolean spawn() {, +                            return false; // no need to spawn, we hardly do anything, +                        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPing.java, +, +        @Override public boolean spawn() {, +            return false;, +        }, +                        threadPool.cached().execute(new Runnable() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +        threadPool.cached().execute(new Runnable() {, +            @Override public void run() {, +        });, +    }, +, +                        @Override public boolean spawn() {, +                            return false; // no need to spawn, we hardly do anything, +                        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java, +    private void notifyNodeFailure(final DiscoveryNode node, final String reason) {, +        threadPool.cached().execute(new Runnable() {, +            @Override public void run() {, +        });, +    }, +, +                        @Override public boolean spawn() {, +                            return false; // no need to spawn, we hardly do anything, +                        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPing.java, +, +        @Override public boolean spawn() {, +            return false;, +        }, +                        threadPool.cached().execute(new Runnable() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +, +                @Override public boolean spawn() {, +                    return false;, +                }, +, +        @Override public boolean spawn() {, +            return false;, +        }]