[+++ b/server/src/main/java/org/elasticsearch/rest/action/admin/indices/RestShrinkIndexAction.java, +        final ResizeRequest resizeRequest = new ResizeRequest(request.param("target"), request.param("index"));, +        resizeRequest.setResizeType(ResizeType.SHRINK);, +        request.applyContentParser(resizeRequest::fromXContent);, +        resizeRequest.timeout(request.paramAsTime("timeout", resizeRequest.timeout()));, +        resizeRequest.masterNodeTimeout(request.paramAsTime("master_timeout", resizeRequest.masterNodeTimeout()));, +        resizeRequest.setWaitForActiveShards(ActiveShardCount.parseString(request.param("wait_for_active_shards")));, +        return channel -> client.admin().indices().resizeIndex(resizeRequest, new RestToXContentListener<>(channel));, +++ b/server/src/main/java/org/elasticsearch/rest/action/admin/indices/RestShrinkIndexAction.java, +        final ResizeRequest resizeRequest = new ResizeRequest(request.param("target"), request.param("index"));, +        resizeRequest.setResizeType(ResizeType.SHRINK);, +        request.applyContentParser(resizeRequest::fromXContent);, +        resizeRequest.timeout(request.paramAsTime("timeout", resizeRequest.timeout()));, +        resizeRequest.masterNodeTimeout(request.paramAsTime("master_timeout", resizeRequest.masterNodeTimeout()));, +        resizeRequest.setWaitForActiveShards(ActiveShardCount.parseString(request.param("wait_for_active_shards")));, +        return channel -> client.admin().indices().resizeIndex(resizeRequest, new RestToXContentListener<>(channel));, +++ b/server/src/main/java/org/elasticsearch/rest/action/admin/indices/RestSplitIndexAction.java, +        final ResizeRequest resizeRequest = new ResizeRequest(request.param("target"), request.param("index"));, +        resizeRequest.setResizeType(ResizeType.SPLIT);, +        request.applyContentParser(resizeRequest::fromXContent);, +        resizeRequest.timeout(request.paramAsTime("timeout", resizeRequest.timeout()));, +        resizeRequest.masterNodeTimeout(request.paramAsTime("master_timeout", resizeRequest.masterNodeTimeout()));, +        resizeRequest.setWaitForActiveShards(ActiveShardCount.parseString(request.param("wait_for_active_shards")));, +        return channel -> client.admin().indices().resizeIndex(resizeRequest, new RestToXContentListener<>(channel));]