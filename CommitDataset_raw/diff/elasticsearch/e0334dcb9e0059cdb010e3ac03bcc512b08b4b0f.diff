[+++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +        public static final boolean PRE_2X_DOC_VALUES = false;, +    protected final boolean indexCreatedBefore2x;, +        this.indexCreatedBefore2x = Version.indexCreated(indexSettings).before(Version.V_2_0_0);, +        boolean indexedNotAnalyzed = this.fieldType.tokenized() == false && this.fieldType.indexOptions() != IndexOptions.NONE;, +        if (indexAnalyzer == null && indexedNotAnalyzed) {, +        , +            // explicitly set, +        } else if (fieldDataType != null && FieldDataType.DOC_VALUES_FORMAT_VALUE.equals(fieldDataType.getFormat(indexSettings))) {, +            // convoluted way to enable doc values, should be removed in the future, +            this.docValues = true;, +        } else if (Version.indexCreated(indexSettings).onOrAfter(Version.V_2_0_0)) {, +            // 2.0+ index, default to true when appropriate, +            this.docValues = defaultDocValues();, +            // old default, disable, +            this.docValues = false;, +    protected boolean defaultDocValues() {, +        if (indexCreatedBefore2x) {, +            return Defaults.PRE_2X_DOC_VALUES;, +        } else {, +            return fieldType.tokenized() == false && fieldType.indexOptions() != IndexOptions.NONE;, +        }, +    }, +, +    @Override, +    public final boolean hasDocValues() {, +        return docValues;, +    }, +, +        if (indexCreatedBefore2x && (includeDefaults || !names.name().equals(names.indexNameClean()))) {, +        if (includeDefaults || hasDocValues() != defaultDocValues()) {, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +        public static final boolean PRE_2X_DOC_VALUES = false;, +    protected final boolean indexCreatedBefore2x;, +        this.indexCreatedBefore2x = Version.indexCreated(indexSettings).before(Version.V_2_0_0);, +        boolean indexedNotAnalyzed = this.fieldType.tokenized() == false && this.fieldType.indexOptions() != IndexOptions.NONE;, +        if (indexAnalyzer == null && indexedNotAnalyzed) {, +        , +            // explicitly set, +        } else if (fieldDataType != null && FieldDataType.DOC_VALUES_FORMAT_VALUE.equals(fieldDataType.getFormat(indexSettings))) {, +            // convoluted way to enable doc values, should be removed in the future, +            this.docValues = true;, +        } else if (Version.indexCreated(indexSettings).onOrAfter(Version.V_2_0_0)) {, +            // 2.0+ index, default to true when appropriate, +            this.docValues = defaultDocValues();, +            // old default, disable, +            this.docValues = false;, +    protected boolean defaultDocValues() {, +        if (indexCreatedBefore2x) {, +            return Defaults.PRE_2X_DOC_VALUES;, +        } else {, +            return fieldType.tokenized() == false && fieldType.indexOptions() != IndexOptions.NONE;, +        }, +    }, +, +    @Override, +    public final boolean hasDocValues() {, +        return docValues;, +    }, +, +        if (indexCreatedBefore2x && (includeDefaults || !names.name().equals(names.indexNameClean()))) {, +        if (includeDefaults || hasDocValues() != defaultDocValues()) {, +++ b/src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java, +        super(names, boost, fieldType, false, Lucene.KEYWORD_ANALYZER, Lucene.KEYWORD_ANALYZER, similarity, normsLoading, fieldDataSettings, indexSettings, multiFields, copyTo);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +        public static final boolean PRE_2X_DOC_VALUES = false;, +    protected final boolean indexCreatedBefore2x;, +        this.indexCreatedBefore2x = Version.indexCreated(indexSettings).before(Version.V_2_0_0);, +        boolean indexedNotAnalyzed = this.fieldType.tokenized() == false && this.fieldType.indexOptions() != IndexOptions.NONE;, +        if (indexAnalyzer == null && indexedNotAnalyzed) {, +        , +            // explicitly set, +        } else if (fieldDataType != null && FieldDataType.DOC_VALUES_FORMAT_VALUE.equals(fieldDataType.getFormat(indexSettings))) {, +            // convoluted way to enable doc values, should be removed in the future, +            this.docValues = true;, +        } else if (Version.indexCreated(indexSettings).onOrAfter(Version.V_2_0_0)) {, +            // 2.0+ index, default to true when appropriate, +            this.docValues = defaultDocValues();, +            // old default, disable, +            this.docValues = false;, +    protected boolean defaultDocValues() {, +        if (indexCreatedBefore2x) {, +            return Defaults.PRE_2X_DOC_VALUES;, +        } else {, +            return fieldType.tokenized() == false && fieldType.indexOptions() != IndexOptions.NONE;, +        }, +    }, +, +    @Override, +    public final boolean hasDocValues() {, +        return docValues;, +    }, +, +        if (indexCreatedBefore2x && (includeDefaults || !names.name().equals(names.indexNameClean()))) {, +        if (includeDefaults || hasDocValues() != defaultDocValues()) {, +++ b/src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java, +        super(names, boost, fieldType, false, Lucene.KEYWORD_ANALYZER, Lucene.KEYWORD_ANALYZER, similarity, normsLoading, fieldDataSettings, indexSettings, multiFields, copyTo);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java, +        super(names, 1.0f, Defaults.FIELD_TYPE, false, indexAnalyzer, searchAnalyzer, similarity, null, null, indexSettings, multiFields, copyTo);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java]