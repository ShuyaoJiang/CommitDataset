[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/gateway/blobstore/BlobReuseExistingNodeAllocation.java, +        this.listTimeout = componentSettings.getAsTime("list_timeout", TimeValue.timeValueSeconds(30));, +            // pre-check if it can be allocated to any node that currently exists, so we won't list the store for it for nothing, +            boolean canBeAllocatedToAtLeastOneNode = false;, +            for (DiscoveryNode discoNode : nodes.dataNodes().values()) {, +                RoutingNode node = routingNodes.node(discoNode.id());, +                if (node == null) {, +                    continue;, +                }, +                // if its THROTTLING, we are not going to allocate it to this node, so ignore it as well, +                if (nodeAllocations.canAllocate(shard, node, routingNodes).allocate()) {, +                    canBeAllocatedToAtLeastOneNode = true;, +                    break;, +                }, +            }, +, +            if (!canBeAllocatedToAtLeastOneNode) {, +                continue;, +            }, +, +            // go and fetch the shard store data for it, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/gateway/blobstore/BlobReuseExistingNodeAllocation.java, +        this.listTimeout = componentSettings.getAsTime("list_timeout", TimeValue.timeValueSeconds(30));, +            // pre-check if it can be allocated to any node that currently exists, so we won't list the store for it for nothing, +            boolean canBeAllocatedToAtLeastOneNode = false;, +            for (DiscoveryNode discoNode : nodes.dataNodes().values()) {, +                RoutingNode node = routingNodes.node(discoNode.id());, +                if (node == null) {, +                    continue;, +                }, +                // if its THROTTLING, we are not going to allocate it to this node, so ignore it as well, +                if (nodeAllocations.canAllocate(shard, node, routingNodes).allocate()) {, +                    canBeAllocatedToAtLeastOneNode = true;, +                    break;, +                }, +            }, +, +            if (!canBeAllocatedToAtLeastOneNode) {, +                continue;, +            }, +, +            // go and fetch the shard store data for it, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/indices/store/TransportNodesListShardStoreMetaData.java]