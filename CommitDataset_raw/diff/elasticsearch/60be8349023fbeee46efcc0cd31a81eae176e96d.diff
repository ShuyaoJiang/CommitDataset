[+++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<Boolean> INDEX_WARMER_ENABLED_SETTING = Setting.boolSetting("index.warmer.enabled", true, true, Setting.Scope.INDEX);, +, +    private volatile boolean warmerEnabled;, +        IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING,, +        IndexSettings.INDEX_WARMER_ENABLED_SETTING, +, +        warmerEnabled = scopedSettings.get(INDEX_WARMER_ENABLED_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(INDEX_WARMER_ENABLED_SETTING, this::setEnableWarmer);, +    private void setTranslogDurability(Translog.Durability durability) {, +        this.durability = durability;, +    }, +, +    /**, +     * Returns true if index warmers are enabled, otherwise <code>false</code>, +     */, +    public boolean isWarmerEnabled() {, +        return warmerEnabled;, +    }, +, +    private void setEnableWarmer(boolean enableWarmer) {, +        this.warmerEnabled = enableWarmer;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<Boolean> INDEX_WARMER_ENABLED_SETTING = Setting.boolSetting("index.warmer.enabled", true, true, Setting.Scope.INDEX);, +, +    private volatile boolean warmerEnabled;, +        IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING,, +        IndexSettings.INDEX_WARMER_ENABLED_SETTING, +, +        warmerEnabled = scopedSettings.get(INDEX_WARMER_ENABLED_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(INDEX_WARMER_ENABLED_SETTING, this::setEnableWarmer);, +    private void setTranslogDurability(Translog.Durability durability) {, +        this.durability = durability;, +    }, +, +    /**, +     * Returns true if index warmers are enabled, otherwise <code>false</code>, +     */, +    public boolean isWarmerEnabled() {, +        return warmerEnabled;, +    }, +, +    private void setEnableWarmer(boolean enableWarmer) {, +        this.warmerEnabled = enableWarmer;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesWarmer.java, +        if (settings.isWarmerEnabled() == false) {, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<Boolean> INDEX_WARMER_ENABLED_SETTING = Setting.boolSetting("index.warmer.enabled", true, true, Setting.Scope.INDEX);, +, +    private volatile boolean warmerEnabled;, +        IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING,, +        IndexSettings.INDEX_WARMER_ENABLED_SETTING, +, +        warmerEnabled = scopedSettings.get(INDEX_WARMER_ENABLED_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(INDEX_WARMER_ENABLED_SETTING, this::setEnableWarmer);, +    private void setTranslogDurability(Translog.Durability durability) {, +        this.durability = durability;, +    }, +, +    /**, +     * Returns true if index warmers are enabled, otherwise <code>false</code>, +     */, +    public boolean isWarmerEnabled() {, +        return warmerEnabled;, +    }, +, +    private void setEnableWarmer(boolean enableWarmer) {, +        this.warmerEnabled = enableWarmer;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesWarmer.java, +        if (settings.isWarmerEnabled() == false) {, +++ b/core/src/test/java/org/elasticsearch/index/IndexSettingsTests.java, +    public void testIsWarmerEnabled() {, +        IndexMetaData metaData = newIndexMeta("index", Settings.settingsBuilder(), +            .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT), +            .put(IndexSettings.INDEX_WARMER_ENABLED_SETTING.getKey(), false), +            .build());, +        IndexSettings settings = new IndexSettings(metaData, Settings.EMPTY);, +        assertFalse(settings.isWarmerEnabled());, +        settings.updateIndexMetaData(newIndexMeta("index", Settings.builder().put(IndexSettings.INDEX_WARMER_ENABLED_SETTING.getKey(), "true").build()));, +        assertTrue(settings.isWarmerEnabled());, +, +        assertEquals(Translog.Durability.REQUEST, settings.getTranslogDurability());, +, +        metaData = newIndexMeta("index", Settings.settingsBuilder(), +            .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT), +            .build());, +        settings = new IndexSettings(metaData, Settings.EMPTY);, +        assertTrue(settings.isWarmerEnabled());, +    }, +]