[+++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +        check(, +                enforceLimits(boundTransportAddress),, +                BootstrapSettings.IGNORE_SYSTEM_BOOTSTRAP_CHECKS.get(settings),, +                checks(settings),, +                Node.NODE_NAME_SETTING.get(settings));, +     *                           otherwise warned, +     * @param ignoreSystemChecks true if system checks should be enforced, +     *                           or otherwise warned, +    static void check(final boolean enforceLimits, final boolean ignoreSystemChecks, final List<Check> checks, final String nodeName) {, +        check(enforceLimits, ignoreSystemChecks, checks, Loggers.getLogger(BootstrapCheck.class, nodeName));, +    }, +    /**, +     * executes the provided checks and fails the node if, +     * enforceLimits is true, otherwise logs warnings, +     *, +     * @param enforceLimits      true if the checks should be enforced or, +     *                           otherwise warned, +     * @param ignoreSystemChecks true if system checks should be enforced, +     *                           or otherwise warned, +     * @param checks             the checks to execute, +     * @param logger             the logger to, +     */, +    static void check(, +            final boolean enforceLimits,, +            final boolean ignoreSystemChecks,, +            final List<Check> checks,, +            final ESLogger logger) {, +        final List<String> errors = new ArrayList<>();, +        final List<String> ignoredErrors = new ArrayList<>();, +, +        for (final Check check : checks) {, +            if (check.check()) {, +                if (!enforceLimits || (check.isSystemCheck() && ignoreSystemChecks)) {, +                    ignoredErrors.add(check.errorMessage());, +                } else {, +                    errors.add(check.errorMessage());, +                }, +            }, +        }, +, +        if (!errors.isEmpty() || !ignoredErrors.isEmpty()) {, +, +            if (!ignoredErrors.isEmpty()) {, +                ignoredErrors.forEach(error -> log(logger, error));, +            }, +            }, +, +, +    static void log(final ESLogger logger, final String error) {, +        logger.warn(error);, +        /**, +         * test if the check is a system-level check, +         *, +         * @return true if the check is a system-level check as opposed, +         * to an Elasticsearch-level check, +         */, +        boolean isSystemCheck();, +, +        @Override, +        public final boolean isSystemCheck() {, +            return false;, +        }, +, +        @Override, +        public final boolean isSystemCheck() {, +            return true;, +        }, +, +        @Override, +        public final boolean isSystemCheck() {, +            return true;, +        }, +, +, +        @Override, +        public final boolean isSystemCheck() {, +            return false;, +        }, +, +        @Override, +        public final boolean isSystemCheck() {, +            return true;, +        }, +, +        @Override, +        public final boolean isSystemCheck() {, +            return true;, +        }, +, +        @Override, +        public boolean isSystemCheck() {, +            return true;, +        }, +, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +        check(, +                enforceLimits(boundTransportAddress),, +                BootstrapSettings.IGNORE_SYSTEM_BOOTSTRAP_CHECKS.get(settings),, +                checks(settings),]