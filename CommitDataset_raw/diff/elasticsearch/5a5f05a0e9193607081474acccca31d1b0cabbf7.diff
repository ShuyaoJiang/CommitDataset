[+++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreIT.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +package org.elasticsearch.search.aggregations.bucket;, +, +import org.elasticsearch.action.index.IndexRequestBuilder;, +import org.elasticsearch.action.search.SearchResponse;, +import org.elasticsearch.common.ParseFieldMatcher;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.index.query.QueryBuilders;, +import org.elasticsearch.index.query.QueryShardException;, +import org.elasticsearch.plugins.Plugin;, +import org.elasticsearch.script.Script;, +import org.elasticsearch.script.ScriptModule;, +import org.elasticsearch.script.ScriptService.ScriptType;, +import org.elasticsearch.search.SearchModule;, +import org.elasticsearch.search.aggregations.Aggregation;, +import org.elasticsearch.search.aggregations.bucket.filter.FilterAggregationBuilder;, +import org.elasticsearch.search.aggregations.bucket.filter.InternalFilter;, +import org.elasticsearch.search.aggregations.bucket.script.NativeSignificanceScoreScriptNoParams;, +import org.elasticsearch.search.aggregations.bucket.script.NativeSignificanceScoreScriptWithParams;, +import org.elasticsearch.search.aggregations.bucket.significant.SignificantStringTerms;, +import org.elasticsearch.search.aggregations.bucket.significant.SignificantTerms;, +import org.elasticsearch.search.aggregations.bucket.significant.SignificantTermsAggregatorFactory;, +import org.elasticsearch.search.aggregations.bucket.significant.SignificantTermsBuilder;, +import org.elasticsearch.search.aggregations.bucket.significant.heuristics.ChiSquare;, +import org.elasticsearch.search.aggregations.bucket.significant.heuristics.GND;, +import org.elasticsearch.search.aggregations.bucket.significant.heuristics.MutualInformation;, +import org.elasticsearch.search.aggregations.bucket.significant.heuristics.ScriptHeuristic;, +import org.elasticsearch.search.aggregations.bucket.significant.heuristics.SignificanceHeuristic;, +import org.elasticsearch.search.aggregations.bucket.significant.heuristics.SignificanceHeuristicBuilder;, +import org.elasticsearch.search.aggregations.bucket.significant.heuristics.SignificanceHeuristicParser;, +import org.elasticsearch.search.aggregations.bucket.significant.heuristics.SignificanceHeuristicStreams;, +import org.elasticsearch.search.aggregations.bucket.terms.StringTerms;, +import org.elasticsearch.search.aggregations.bucket.terms.Terms;, +import org.elasticsearch.search.aggregations.bucket.terms.TermsBuilder;, +import org.elasticsearch.search.internal.SearchContext;, +import org.elasticsearch.test.ESIntegTestCase;, +, +import java.io.IOException;, +import java.util.ArrayList;, +import java.util.Collection;, +import java.util.HashMap;, +import java.util.Iterator;, +import java.util.List;, +import java.util.Map;, +import java.util.concurrent.ExecutionException;, +, +import static org.elasticsearch.cluster.metadata.IndexMetaData.SETTING_NUMBER_OF_REPLICAS;, +import static org.elasticsearch.cluster.metadata.IndexMetaData.SETTING_NUMBER_OF_SHARDS;, +import static org.elasticsearch.common.settings.Settings.settingsBuilder;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertSearchResponse;, +import static org.hamcrest.Matchers.closeTo;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.greaterThan;, +import static org.hamcrest.Matchers.is;, +, +/**, + *, + */, +@ESIntegTestCase.ClusterScope(scope = ESIntegTestCase.Scope.SUITE), +public class SignificantTermsSignificanceScoreIT extends ESIntegTestCase {, +    static final String INDEX_NAME = "testidx";, +    static final String DOC_TYPE = "doc";, +    static final String TEXT_FIELD = "text";, +    static final String CLASS_FIELD = "class";, +, +, +    @Override, +    protected Collection<Class<? extends Plugin>> nodePlugins() {, +        return pluginList(CustomSignificanceHeuristicPlugin.class);, +    }, +, +    public String randomExecutionHint() {, +        return randomBoolean() ? null : randomFrom(SignificantTermsAggregatorFactory.ExecutionMode.values()).toString();, +    }, +, +    public void testPlugin() throws Exception {]