[+++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilities.java, +     * Whether this field can be aggregated on all indices., +     * Whether this field is indexed for search on all indices., +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilities.java, +     * Whether this field can be aggregated on all indices., +     * Whether this field is indexed for search on all indices., +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequest.java, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilities.java, +     * Whether this field can be aggregated on all indices., +     * Whether this field is indexed for search on all indices., +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequest.java, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesResponse.java, +import java.util.Objects;, +        this.responseMap = Objects.requireNonNull(responseMap);, +        this.indexResponses = Objects.requireNonNull(indexResponses);, +        this(Collections.emptyMap(), Collections.emptyList());, +, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilities.java, +     * Whether this field can be aggregated on all indices., +     * Whether this field is indexed for search on all indices., +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequest.java, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesResponse.java, +import java.util.Objects;, +        this.responseMap = Objects.requireNonNull(responseMap);, +        this.indexResponses = Objects.requireNonNull(indexResponses);, +        this(Collections.emptyMap(), Collections.emptyList());, +, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesAction.java, +            listener.onResponse(new FieldCapabilitiesResponse(Collections.emptyMap()));, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilities.java, +     * Whether this field can be aggregated on all indices., +     * Whether this field is indexed for search on all indices., +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequest.java, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesResponse.java, +import java.util.Objects;, +        this.responseMap = Objects.requireNonNull(responseMap);, +        this.indexResponses = Objects.requireNonNull(indexResponses);, +        this(Collections.emptyMap(), Collections.emptyList());, +, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesAction.java, +            listener.onResponse(new FieldCapabilitiesResponse(Collections.emptyMap()));, +++ b/server/src/main/java/org/elasticsearch/client/Client.java, +    FieldCapabilitiesRequestBuilder prepareFieldCaps(String... indices);, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilities.java, +     * Whether this field can be aggregated on all indices., +     * Whether this field is indexed for search on all indices., +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequest.java, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesResponse.java, +import java.util.Objects;, +        this.responseMap = Objects.requireNonNull(responseMap);, +        this.indexResponses = Objects.requireNonNull(indexResponses);, +        this(Collections.emptyMap(), Collections.emptyList());, +, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesAction.java, +            listener.onResponse(new FieldCapabilitiesResponse(Collections.emptyMap()));, +++ b/server/src/main/java/org/elasticsearch/client/Client.java, +    FieldCapabilitiesRequestBuilder prepareFieldCaps(String... indices);, +++ b/server/src/main/java/org/elasticsearch/client/support/AbstractClient.java, +    public FieldCapabilitiesRequestBuilder prepareFieldCaps(String... indices) {, +        return new FieldCapabilitiesRequestBuilder(this, FieldCapabilitiesAction.INSTANCE, indices);, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilities.java, +     * Whether this field can be aggregated on all indices., +     * Whether this field is indexed for search on all indices., +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequest.java, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesResponse.java, +import java.util.Objects;, +        this.responseMap = Objects.requireNonNull(responseMap);, +        this.indexResponses = Objects.requireNonNull(indexResponses);, +        this(Collections.emptyMap(), Collections.emptyList());, +, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesAction.java, +            listener.onResponse(new FieldCapabilitiesResponse(Collections.emptyMap()));, +++ b/server/src/main/java/org/elasticsearch/client/Client.java, +    FieldCapabilitiesRequestBuilder prepareFieldCaps(String... indices);, +++ b/server/src/main/java/org/elasticsearch/client/support/AbstractClient.java, +    public FieldCapabilitiesRequestBuilder prepareFieldCaps(String... indices) {, +        return new FieldCapabilitiesRequestBuilder(this, FieldCapabilitiesAction.INSTANCE, indices);, +++ b/server/src/test/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesResponseTests.java, +import java.util.ArrayList;, +import java.util.List;, +import static com.carrotsearch.randomizedtesting.RandomizedTest.randomAsciiLettersOfLength;, +, +        if (randomBoolean()) {, +            // merged responses, +        } else {, +            // non-merged responses, +            List<FieldCapabilitiesIndexResponse> responses = new ArrayList<>();, +            int numResponse = randomIntBetween(0, 10);, +            for (int i = 0; i < numResponse; i++) {, +                responses.add(createRandomIndexResponse());, +            }, +            return new FieldCapabilitiesResponse(responses);, +        }, +    }, +, +, +    private FieldCapabilitiesIndexResponse createRandomIndexResponse() {, +        Map<String, FieldCapabilities> responses = new HashMap<>();, +, +        String[] fields = generateRandomStringArray(5, 10, false, true);]