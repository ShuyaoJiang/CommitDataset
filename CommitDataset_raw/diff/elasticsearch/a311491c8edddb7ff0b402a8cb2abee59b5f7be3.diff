[+++ b/core/src/main/java/org/elasticsearch/index/CompositeIndexEventListener.java, +    public void onShardActive(IndexShard indexShard) {, +        for (IndexEventListener listener : listeners) {, +            try {, +                listener.onShardActive(indexShard);, +            } catch (Throwable t) {, +                logger.warn("[{}] failed to invoke on shard active callback", t, indexShard.shardId().getId());, +                throw t;, +            }, +        }, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/index/CompositeIndexEventListener.java, +    public void onShardActive(IndexShard indexShard) {, +        for (IndexEventListener listener : listeners) {, +            try {, +                listener.onShardActive(indexShard);, +            } catch (Throwable t) {, +                logger.warn("[{}] failed to invoke on shard active callback", t, indexShard.shardId().getId());, +                throw t;, +            }, +        }, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +public final class IndexService extends AbstractIndexComponent implements IndexComponent, Iterable<IndexShard>{, +    } // pkg private for testing, +    } // pkg private for testing, +    } // pkg private for testing, +++ b/core/src/main/java/org/elasticsearch/index/CompositeIndexEventListener.java, +    public void onShardActive(IndexShard indexShard) {, +        for (IndexEventListener listener : listeners) {, +            try {, +                listener.onShardActive(indexShard);, +            } catch (Throwable t) {, +                logger.warn("[{}] failed to invoke on shard active callback", t, indexShard.shardId().getId());, +                throw t;, +            }, +        }, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +public final class IndexService extends AbstractIndexComponent implements IndexComponent, Iterable<IndexShard>{, +    } // pkg private for testing, +    } // pkg private for testing, +    } // pkg private for testing, +++ b/core/src/main/java/org/elasticsearch/index/NodeServicesProvider.java, +    public NodeServicesProvider(ThreadPool threadPool, IndicesQueryCache indicesQueryCache, TermVectorsService termVectorsService, @Nullable IndicesWarmer warmer, BigArrays bigArrays, Client client, ScriptService scriptService, IndicesQueriesRegistry indicesQueriesRegistry, IndicesFieldDataCache indicesFieldDataCache, CircuitBreakerService circuitBreakerService) {, +++ b/core/src/main/java/org/elasticsearch/index/CompositeIndexEventListener.java, +    public void onShardActive(IndexShard indexShard) {, +        for (IndexEventListener listener : listeners) {, +            try {, +                listener.onShardActive(indexShard);, +            } catch (Throwable t) {, +                logger.warn("[{}] failed to invoke on shard active callback", t, indexShard.shardId().getId());, +                throw t;, +            }, +        }, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +public final class IndexService extends AbstractIndexComponent implements IndexComponent, Iterable<IndexShard>{, +    } // pkg private for testing, +    } // pkg private for testing, +    } // pkg private for testing, +++ b/core/src/main/java/org/elasticsearch/index/NodeServicesProvider.java, +    public NodeServicesProvider(ThreadPool threadPool, IndicesQueryCache indicesQueryCache, TermVectorsService termVectorsService, @Nullable IndicesWarmer warmer, BigArrays bigArrays, Client client, ScriptService scriptService, IndicesQueriesRegistry indicesQueriesRegistry, IndicesFieldDataCache indicesFieldDataCache, CircuitBreakerService circuitBreakerService) {, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +++ b/core/src/main/java/org/elasticsearch/index/CompositeIndexEventListener.java, +    public void onShardActive(IndexShard indexShard) {, +        for (IndexEventListener listener : listeners) {, +            try {, +                listener.onShardActive(indexShard);, +            } catch (Throwable t) {, +                logger.warn("[{}] failed to invoke on shard active callback", t, indexShard.shardId().getId());, +                throw t;, +            }, +        }, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +public final class IndexService extends AbstractIndexComponent implements IndexComponent, Iterable<IndexShard>{, +    } // pkg private for testing, +    } // pkg private for testing, +    } // pkg private for testing, +++ b/core/src/main/java/org/elasticsearch/index/NodeServicesProvider.java, +    public NodeServicesProvider(ThreadPool threadPool, IndicesQueryCache indicesQueryCache, TermVectorsService termVectorsService, @Nullable IndicesWarmer warmer, BigArrays bigArrays, Client client, ScriptService scriptService, IndicesQueriesRegistry indicesQueriesRegistry, IndicesFieldDataCache indicesFieldDataCache, CircuitBreakerService circuitBreakerService) {, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +++ b/core/src/main/java/org/elasticsearch/index/CompositeIndexEventListener.java, +    public void onShardActive(IndexShard indexShard) {, +        for (IndexEventListener listener : listeners) {, +            try {, +                listener.onShardActive(indexShard);, +            } catch (Throwable t) {]