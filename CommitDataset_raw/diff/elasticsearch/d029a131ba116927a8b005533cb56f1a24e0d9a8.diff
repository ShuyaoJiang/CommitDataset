[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/oidc/OpenIdConnectAuthenticateAction.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.xpack.core.security.action.oidc;, +, +import org.elasticsearch.action.Action;, +import org.elasticsearch.common.io.stream.Writeable;, +, +/**, + * Action for initiating an authentication process using OpenID Connect, + */, +public final class OpenIdConnectAuthenticateAction extends Action<OpenIdConnectAuthenticateResponse> {, +, +    public static final OpenIdConnectAuthenticateAction INSTANCE = new OpenIdConnectAuthenticateAction();, +    public static final String NAME = "cluster:admin/xpack/security/oidc/authenticate";, +, +    private OpenIdConnectAuthenticateAction() {, +        super(NAME);, +    }, +, +    @Override, +    public OpenIdConnectAuthenticateResponse newResponse() {, +        throw new UnsupportedOperationException("usage of Streamable is to be replaced by Writeable");, +    }, +, +    @Override, +    public Writeable.Reader<OpenIdConnectAuthenticateResponse> getResponseReader() {, +        return OpenIdConnectAuthenticateResponse::new;, +    }, +}, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/oidc/OpenIdConnectAuthenticateAction.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.xpack.core.security.action.oidc;, +, +import org.elasticsearch.action.Action;, +import org.elasticsearch.common.io.stream.Writeable;, +, +/**, + * Action for initiating an authentication process using OpenID Connect, + */, +public final class OpenIdConnectAuthenticateAction extends Action<OpenIdConnectAuthenticateResponse> {, +, +    public static final OpenIdConnectAuthenticateAction INSTANCE = new OpenIdConnectAuthenticateAction();, +    public static final String NAME = "cluster:admin/xpack/security/oidc/authenticate";, +, +    private OpenIdConnectAuthenticateAction() {, +        super(NAME);, +    }, +, +    @Override, +    public OpenIdConnectAuthenticateResponse newResponse() {, +        throw new UnsupportedOperationException("usage of Streamable is to be replaced by Writeable");, +    }, +, +    @Override, +    public Writeable.Reader<OpenIdConnectAuthenticateResponse> getResponseReader() {, +        return OpenIdConnectAuthenticateResponse::new;, +    }, +}, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/oidc/OpenIdConnectAuthenticateRequest.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.xpack.core.security.action.oidc;, +, +import org.elasticsearch.action.ActionRequest;, +import org.elasticsearch.action.ActionRequestValidationException;, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +, +import java.io.IOException;, +, +import static org.elasticsearch.action.ValidateActions.addValidationError;, +, +/**, + * Represents a request for authentication using OpenID Connect, + */, +public class OpenIdConnectAuthenticateRequest extends ActionRequest {, +, +    /**, +     * The URI where the OP redirected the browser after the authentication attempt. This is passed as is from the, +     * facilitator entity (i.e. Kibana), +     */, +    private String redirectUri;, +, +    /**, +     * The state value that we generated or the facilitator provided for this specific flow and that should be stored at the user's session, +     * with the facilitator, +     */, +    private String state;]