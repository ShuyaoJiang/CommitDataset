[+++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/geo/GeoShapeFieldMapper.java, + * {@link org.elasticsearch.index.query.GeoShapeQueryBuilder}, consequently, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/geo/GeoShapeFieldMapper.java, + * {@link org.elasticsearch.index.query.GeoShapeQueryBuilder}, consequently, +++ b/core/src/main/java/org/elasticsearch/index/query/PercolatorQueryBuilder.java, +    static final ParseField DOCUMENT_FIELD = new ParseField("document");, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/geo/GeoShapeFieldMapper.java, + * {@link org.elasticsearch.index.query.GeoShapeQueryBuilder}, consequently, +++ b/core/src/main/java/org/elasticsearch/index/query/PercolatorQueryBuilder.java, +    static final ParseField DOCUMENT_FIELD = new ParseField("document");, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestMultiSearchAction.java, +import org.elasticsearch.index.query.TemplateQueryBuilder;, +                    Template template = TemplateQueryBuilder.parse(parser, queryParseContext.parseFieldMatcher(), "params", "template");, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/geo/GeoShapeFieldMapper.java, + * {@link org.elasticsearch.index.query.GeoShapeQueryBuilder}, consequently, +++ b/core/src/main/java/org/elasticsearch/index/query/PercolatorQueryBuilder.java, +    static final ParseField DOCUMENT_FIELD = new ParseField("document");, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestMultiSearchAction.java, +import org.elasticsearch.index.query.TemplateQueryBuilder;, +                    Template template = TemplateQueryBuilder.parse(parser, queryParseContext.parseFieldMatcher(), "params", "template");, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java, +import org.elasticsearch.index.query.TemplateQueryBuilder;, +import org.elasticsearch.search.suggest.term.TermSuggestionBuilder.SuggestMode;, +                    Template template = TemplateQueryBuilder.parse(parser, context.parseFieldMatcher(), "params", "template");, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/geo/GeoShapeFieldMapper.java, + * {@link org.elasticsearch.index.query.GeoShapeQueryBuilder}, consequently, +++ b/core/src/main/java/org/elasticsearch/index/query/PercolatorQueryBuilder.java, +    static final ParseField DOCUMENT_FIELD = new ParseField("document");, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestMultiSearchAction.java, +import org.elasticsearch.index.query.TemplateQueryBuilder;, +                    Template template = TemplateQueryBuilder.parse(parser, queryParseContext.parseFieldMatcher(), "params", "template");, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java, +import org.elasticsearch.index.query.TemplateQueryBuilder;, +import org.elasticsearch.search.suggest.term.TermSuggestionBuilder.SuggestMode;, +                    Template template = TemplateQueryBuilder.parse(parser, context.parseFieldMatcher(), "params", "template");, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +import org.elasticsearch.index.query.TemplateQueryBuilder;, +            Template template = TemplateQueryBuilder.parse(scriptLang, parser, parseFieldMatcher, "params", "script", "template");, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/geo/GeoShapeFieldMapper.java, + * {@link org.elasticsearch.index.query.GeoShapeQueryBuilder}, consequently, +++ b/core/src/main/java/org/elasticsearch/index/query/PercolatorQueryBuilder.java, +    static final ParseField DOCUMENT_FIELD = new ParseField("document");, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestMultiSearchAction.java, +import org.elasticsearch.index.query.TemplateQueryBuilder;, +                    Template template = TemplateQueryBuilder.parse(parser, queryParseContext.parseFieldMatcher(), "params", "template");, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java, +import org.elasticsearch.index.query.TemplateQueryBuilder;, +import org.elasticsearch.search.suggest.term.TermSuggestionBuilder.SuggestMode;, +                    Template template = TemplateQueryBuilder.parse(parser, context.parseFieldMatcher(), "params", "template");, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +import org.elasticsearch.index.query.TemplateQueryBuilder;, +            Template template = TemplateQueryBuilder.parse(scriptLang, parser, parseFieldMatcher, "params", "script", "template");, +++ b/core/src/test/java/org/elasticsearch/index/query/PercolatorQueryBuilderTests.java, +import static java.util.Collections.singleton;, +    private static final Set<String> SHUFFLE_PROTECTED_FIELDS = singleton(PercolatorQueryBuilder.DOCUMENT_FIELD.getPreferredName());, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/geo/GeoShapeFieldMapper.java, + * {@link org.elasticsearch.index.query.GeoShapeQueryBuilder}, consequently, +++ b/core/src/main/java/org/elasticsearch/index/query/PercolatorQueryBuilder.java, +    static final ParseField DOCUMENT_FIELD = new ParseField("document");, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestMultiSearchAction.java, +import org.elasticsearch.index.query.TemplateQueryBuilder;, +                    Template template = TemplateQueryBuilder.parse(parser, queryParseContext.parseFieldMatcher(), "params", "template");, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java, +import org.elasticsearch.index.query.TemplateQueryBuilder;, +import org.elasticsearch.search.suggest.term.TermSuggestionBuilder.SuggestMode;, +                    Template template = TemplateQueryBuilder.parse(parser, context.parseFieldMatcher(), "params", "template");, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +import org.elasticsearch.index.query.TemplateQueryBuilder;, +            Template template = TemplateQueryBuilder.parse(scriptLang, parser, parseFieldMatcher, "params", "script", "template");, +++ b/core/src/test/java/org/elasticsearch/index/query/PercolatorQueryBuilderTests.java, +import static java.util.Collections.singleton;, +    private static final Set<String> SHUFFLE_PROTECTED_FIELDS = singleton(PercolatorQueryBuilder.DOCUMENT_FIELD.getPreferredName());, +++ b/modules/lang-mustache/src/test/java/org/elasticsearch/messy/tests/TemplateQueryParserTests.java, +import java.io.IOException;, +import java.lang.reflect.Proxy;, +import java.util.Collections;, +, +import org.elasticsearch.index.query.TemplateQueryBuilder;, +        Query query = QueryBuilder.rewriteQuery(TemplateQueryBuilder.fromXContent(context.parseContext()), context).toQuery(context);, +        Query query = QueryBuilder.rewriteQuery(TemplateQueryBuilder.fromXContent(context.parseContext()), context).toQuery(context);, +            TemplateQueryBuilder.fromXContent(context.parseContext()).rewrite(context);, +        Query query = QueryBuilder.rewriteQuery(TemplateQueryBuilder.fromXContent(context.parseContext()), context).toQuery(context);, +            TemplateQueryBuilder.fromXContent(context.parseContext()).toQuery(context);, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/geo/GeoShapeFieldMapper.java, + * {@link org.elasticsearch.index.query.GeoShapeQueryBuilder}, consequently, +++ b/core/src/main/java/org/elasticsearch/index/query/PercolatorQueryBuilder.java, +    static final ParseField DOCUMENT_FIELD = new ParseField("document");, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestMultiSearchAction.java, +import org.elasticsearch.index.query.TemplateQueryBuilder;, +                    Template template = TemplateQueryBuilder.parse(parser, queryParseContext.parseFieldMatcher(), "params", "template");, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java]