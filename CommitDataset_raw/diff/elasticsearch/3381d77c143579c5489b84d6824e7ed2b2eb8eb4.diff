[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStats.java, +            builder.startObject(indexStats.index(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStats.java, +            builder.startObject(indexStats.index(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    public XContentBuilder startObject(XContentBuilderString name, FieldCaseConversion conversion) throws IOException {, +        field(name, conversion);, +        startObject();, +        return this;, +    }, +, +    public XContentBuilder field(XContentBuilderString name, FieldCaseConversion conversion) throws IOException {, +        if (conversion == FieldCaseConversion.UNDERSCORE) {, +            generator.writeFieldName(name.underscore());, +        } else if (conversion == FieldCaseConversion.CAMELCASE) {, +            generator.writeFieldName(name.camelCase());, +        } else {, +            generator.writeFieldName(name.underscore());, +        }, +        return this;, +    }, +, +    public XContentBuilder field(String name, String value, FieldCaseConversion conversion) throws IOException {, +        field(name, conversion);, +        if (value == null) {, +            generator.writeNull();, +        } else {, +            generator.writeString(value);, +        }, +        return this;, +    }, +, +    public XContentBuilder field(XContentBuilderString name, String value, FieldCaseConversion conversion) throws IOException {, +        field(name, conversion);, +        if (value == null) {, +            generator.writeNull();, +        } else {, +            generator.writeString(value);, +        }, +        return this;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStats.java, +            builder.startObject(indexStats.index(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    public XContentBuilder startObject(XContentBuilderString name, FieldCaseConversion conversion) throws IOException {, +        field(name, conversion);, +        startObject();, +        return this;, +    }, +, +    public XContentBuilder field(XContentBuilderString name, FieldCaseConversion conversion) throws IOException {, +        if (conversion == FieldCaseConversion.UNDERSCORE) {, +            generator.writeFieldName(name.underscore());, +        } else if (conversion == FieldCaseConversion.CAMELCASE) {, +            generator.writeFieldName(name.camelCase());, +        } else {, +            generator.writeFieldName(name.underscore());, +        }, +        return this;, +    }, +, +    public XContentBuilder field(String name, String value, FieldCaseConversion conversion) throws IOException {, +        field(name, conversion);, +        if (value == null) {, +            generator.writeNull();, +        } else {, +            generator.writeString(value);, +        }, +        return this;, +    }, +, +    public XContentBuilder field(XContentBuilderString name, String value, FieldCaseConversion conversion) throws IOException {, +        field(name, conversion);, +        if (value == null) {, +            generator.writeNull();, +        } else {, +            generator.writeString(value);, +        }, +        return this;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/indexing/IndexingStats.java, +                builder.startObject(entry.getKey(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStats.java, +            builder.startObject(indexStats.index(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    public XContentBuilder startObject(XContentBuilderString name, FieldCaseConversion conversion) throws IOException {, +        field(name, conversion);, +        startObject();, +        return this;, +    }, +, +    public XContentBuilder field(XContentBuilderString name, FieldCaseConversion conversion) throws IOException {, +        if (conversion == FieldCaseConversion.UNDERSCORE) {, +            generator.writeFieldName(name.underscore());, +        } else if (conversion == FieldCaseConversion.CAMELCASE) {, +            generator.writeFieldName(name.camelCase());, +        } else {, +            generator.writeFieldName(name.underscore());]