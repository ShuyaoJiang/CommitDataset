[+++ b/TESTING.asciidoc, +vagrant up --provision trusty --provider virtualbox && vagrant halt trusty, +vagrant up --provision centos-7 --provider virtualbox && vagrant halt centos-7, +  vagrant up --provision $box --provider virtualbox, +vagrant up trusty --provider virtualbox && vagrant ssh trusty, +vagrant up centos-7 --provider virtualbox && vagrant ssh centos-7, +vagrant destroy -f trusty && vagrant up trusty --provider virtualbox, +vagrant up centos-7 --provider virtualbox && vagrant ssh centos-7, +vagrant up trusty --provider virtualbox && vagrant ssh trusty, +++ b/TESTING.asciidoc, +vagrant up --provision trusty --provider virtualbox && vagrant halt trusty, +vagrant up --provision centos-7 --provider virtualbox && vagrant halt centos-7, +  vagrant up --provision $box --provider virtualbox, +vagrant up trusty --provider virtualbox && vagrant ssh trusty, +vagrant up centos-7 --provider virtualbox && vagrant ssh centos-7, +vagrant destroy -f trusty && vagrant up trusty --provider virtualbox, +vagrant up centos-7 --provider virtualbox && vagrant ssh centos-7, +vagrant up trusty --provider virtualbox && vagrant ssh trusty, +++ b/core/pom.xml, +                                <include>org/elasticsearch/node/MockNode.class</include>, +++ b/TESTING.asciidoc, +vagrant up --provision trusty --provider virtualbox && vagrant halt trusty, +vagrant up --provision centos-7 --provider virtualbox && vagrant halt centos-7, +  vagrant up --provision $box --provider virtualbox, +vagrant up trusty --provider virtualbox && vagrant ssh trusty, +vagrant up centos-7 --provider virtualbox && vagrant ssh centos-7, +vagrant destroy -f trusty && vagrant up trusty --provider virtualbox, +vagrant up centos-7 --provider virtualbox && vagrant ssh centos-7, +vagrant up trusty --provider virtualbox && vagrant ssh trusty, +++ b/core/pom.xml, +                                <include>org/elasticsearch/node/MockNode.class</include>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +import java.util.Collections;, +            validationFailures = Collections.emptyList();, +++ b/TESTING.asciidoc, +vagrant up --provision trusty --provider virtualbox && vagrant halt trusty, +vagrant up --provision centos-7 --provider virtualbox && vagrant halt centos-7, +  vagrant up --provision $box --provider virtualbox, +vagrant up trusty --provider virtualbox && vagrant ssh trusty, +vagrant up centos-7 --provider virtualbox && vagrant ssh centos-7, +vagrant destroy -f trusty && vagrant up trusty --provider virtualbox, +vagrant up centos-7 --provider virtualbox && vagrant ssh centos-7, +vagrant up trusty --provider virtualbox && vagrant ssh trusty, +++ b/core/pom.xml, +                                <include>org/elasticsearch/node/MockNode.class</include>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +import java.util.Collections;, +            validationFailures = Collections.emptyList();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterIndexHealth.java, +import java.util.Arrays;, +        validationFailures = Arrays.asList(in.readStringArray());, +++ b/TESTING.asciidoc, +vagrant up --provision trusty --provider virtualbox && vagrant halt trusty, +vagrant up --provision centos-7 --provider virtualbox && vagrant halt centos-7, +  vagrant up --provision $box --provider virtualbox, +vagrant up trusty --provider virtualbox && vagrant ssh trusty, +vagrant up centos-7 --provider virtualbox && vagrant ssh centos-7, +vagrant destroy -f trusty && vagrant up trusty --provider virtualbox, +vagrant up centos-7 --provider virtualbox && vagrant ssh centos-7, +vagrant up trusty --provider virtualbox && vagrant ssh trusty, +++ b/core/pom.xml, +                                <include>org/elasticsearch/node/MockNode.class</include>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +import java.util.Collections;, +            validationFailures = Collections.emptyList();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterIndexHealth.java, +import java.util.Arrays;, +        validationFailures = Arrays.asList(in.readStringArray());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesResponse.java, +import java.util.ArrayList;, +import java.util.Collections;, +    private List<RepositoryMetaData> repositories = Collections.emptyList();, +    GetRepositoriesResponse(List<RepositoryMetaData> repositories) {, +        List<RepositoryMetaData> repositoryListBuilder = new ArrayList<>();, +        repositories = Collections.unmodifiableList(repositoryListBuilder);, +++ b/TESTING.asciidoc, +vagrant up --provision trusty --provider virtualbox && vagrant halt trusty, +vagrant up --provision centos-7 --provider virtualbox && vagrant halt centos-7, +  vagrant up --provision $box --provider virtualbox, +vagrant up trusty --provider virtualbox && vagrant ssh trusty, +vagrant up centos-7 --provider virtualbox && vagrant ssh centos-7, +vagrant destroy -f trusty && vagrant up trusty --provider virtualbox, +vagrant up centos-7 --provider virtualbox && vagrant ssh centos-7, +vagrant up trusty --provider virtualbox && vagrant ssh trusty, +++ b/core/pom.xml, +                                <include>org/elasticsearch/node/MockNode.class</include>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +import java.util.Collections;, +            validationFailures = Collections.emptyList();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterIndexHealth.java, +import java.util.Arrays;, +        validationFailures = Arrays.asList(in.readStringArray());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesResponse.java, +import java.util.ArrayList;, +import java.util.Collections;, +    private List<RepositoryMetaData> repositories = Collections.emptyList();, +    GetRepositoriesResponse(List<RepositoryMetaData> repositories) {, +        List<RepositoryMetaData> repositoryListBuilder = new ArrayList<>();, +        repositories = Collections.unmodifiableList(repositoryListBuilder);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/TransportGetRepositoriesAction.java]