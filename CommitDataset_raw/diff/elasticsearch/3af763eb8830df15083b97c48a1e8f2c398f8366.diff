[+++ b/core/pom.xml, +                                <!-- TODO: remove this and the xslt when junit4 is fixed -->, +                                <ant antfile="${elasticsearch.integ.antfile}" target="fixup-failsafe-summary"/>, +++ b/core/pom.xml, +                                <!-- TODO: remove this and the xslt when junit4 is fixed -->, +                                <ant antfile="${elasticsearch.integ.antfile}" target="fixup-failsafe-summary"/>, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +    private final UnassignedShards unassignedShards = new UnassignedShards();, +, +    private final List<ShardRouting> ignoredUnassignedShards = newArrayList();, +    public List<ShardRouting> ignoredUnassigned() {, +        return this.ignoredUnassignedShards;, +    }, +, +    public final static class UnassignedShards implements Iterable<ShardRouting>  {, +        public UnassignedShards() {, +        public void addAll(Collection<ShardRouting> mutableShardRoutings) {, +            for (ShardRouting r : mutableShardRoutings) {, +                add(r);, +            }, +        }, +, +        public Iterator<ShardRouting> iterator() {, +            final Iterator<ShardRouting> iterator = unassigned.iterator();, +            return new Iterator<ShardRouting>() {, +            };, +++ b/core/pom.xml, +                                <!-- TODO: remove this and the xslt when junit4 is fixed -->, +                                <ant antfile="${elasticsearch.integ.antfile}" target="fixup-failsafe-summary"/>, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +    private final UnassignedShards unassignedShards = new UnassignedShards();, +, +    private final List<ShardRouting> ignoredUnassignedShards = newArrayList();, +    public List<ShardRouting> ignoredUnassigned() {, +        return this.ignoredUnassignedShards;, +    }, +, +    public final static class UnassignedShards implements Iterable<ShardRouting>  {, +        public UnassignedShards() {, +        public void addAll(Collection<ShardRouting> mutableShardRoutings) {, +            for (ShardRouting r : mutableShardRoutings) {, +                add(r);, +            }, +        }, +, +        public Iterator<ShardRouting> iterator() {, +            final Iterator<ShardRouting> iterator = unassigned.iterator();, +            return new Iterator<ShardRouting>() {, +            };, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java, +            for (ShardRouting shardRoutingEntry : Iterables.concat(routingNodes.unassigned(), routingNodes.ignoredUnassigned())) {, +++ b/core/pom.xml, +                                <!-- TODO: remove this and the xslt when junit4 is fixed -->, +                                <ant antfile="${elasticsearch.integ.antfile}" target="fixup-failsafe-summary"/>, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +    private final UnassignedShards unassignedShards = new UnassignedShards();, +, +    private final List<ShardRouting> ignoredUnassignedShards = newArrayList();, +    public List<ShardRouting> ignoredUnassigned() {, +        return this.ignoredUnassignedShards;, +    }, +, +    public final static class UnassignedShards implements Iterable<ShardRouting>  {, +        public UnassignedShards() {, +        public void addAll(Collection<ShardRouting> mutableShardRoutings) {, +            for (ShardRouting r : mutableShardRoutings) {, +                add(r);, +            }, +        }, +, +        public Iterator<ShardRouting> iterator() {, +            final Iterator<ShardRouting> iterator = unassigned.iterator();, +            return new Iterator<ShardRouting>() {, +            };, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java, +            for (ShardRouting shardRoutingEntry : Iterables.concat(routingNodes.unassigned(), routingNodes.ignoredUnassigned())) {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +            // move all the shards matching the failed shard to the end of the unassigned list, +            // so we give a chance for other allocations and won't create poison failed allocations, +            // that can keep other shards from being allocated (because of limits applied on how many, +            // shards we can start per node), +            List<ShardRouting> shardsToMove = Lists.newArrayList();, +            for (Iterator<ShardRouting> unassignedIt = routingNodes.unassigned().iterator(); unassignedIt.hasNext(); ) {, +                ShardRouting unassignedShardRouting = unassignedIt.next();, +                if (unassignedShardRouting.shardId().equals(failedShard.shardId())) {, +                    unassignedIt.remove();, +                    shardsToMove.add(unassignedShardRouting);, +                }, +            }, +            if (!shardsToMove.isEmpty()) {, +                routingNodes.unassigned().addAll(shardsToMove);, +            }, +, +++ b/core/pom.xml, +                                <!-- TODO: remove this and the xslt when junit4 is fixed -->, +                                <ant antfile="${elasticsearch.integ.antfile}" target="fixup-failsafe-summary"/>, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +    private final UnassignedShards unassignedShards = new UnassignedShards();, +, +    private final List<ShardRouting> ignoredUnassignedShards = newArrayList();]