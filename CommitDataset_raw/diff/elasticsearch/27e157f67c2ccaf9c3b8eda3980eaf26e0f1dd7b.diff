[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestTests.java, +        setRandomRefreshPolicy(deleteRequest::setRefreshPolicy, expectedParams);, +        setRandomVersionType(deleteRequest::versionType, expectedParams);, +            setRandomVersionType(getRequest::versionType, expectedParams);, +                String storedFieldsParam = randomFields(storedFields);, +                expectedParams.put("stored_fields", storedFieldsParam);, +        setRandomRefreshPolicy(indexRequest::setRefreshPolicy, expectedParams);, +            setRandomVersionType(indexRequest::versionType, expectedParams);, +        setRandomVersion(updateRequest, expectedParams);, +        setRandomVersionType(updateRequest::versionType, expectedParams);, +    public void testUpdateWithDifferentContentTypes() {, +        setRandomRefreshPolicy(bulkRequest::setRefreshPolicy, expectedParams);, +            DocWriteRequest<?> docWriteRequest;, +            } else {, +                throw new UnsupportedOperationException("optype [" + opType + "] not supported");, +                String includesParam = randomFields(includes);, +                    expectedParams.put("_source_include", includesParam);, +                String excludesParam = randomFields(excludes);, +                    expectedParams.put("_source_exclude", excludesParam);, +    private static void setRandomRefreshPolicy(Consumer<WriteRequest.RefreshPolicy> setter, Map<String, String> expectedParams) {, +            setter.accept(refreshPolicy);, +    private static void setRandomVersionType(Consumer<VersionType> setter, Map<String, String> expectedParams) {, +            setter.accept(versionType);, +, +    private static String randomFields(String[] fields) {, +        StringBuilder excludesParam = new StringBuilder();, +        for (int i = 0; i < fields.length; i++) {, +            String exclude = randomAlphaOfLengthBetween(3, 10);, +            fields[i] = exclude;, +            excludesParam.append(exclude);, +            if (i < fields.length - 1) {, +                excludesParam.append(",");, +            }, +        }, +        return excludesParam.toString();, +    }]