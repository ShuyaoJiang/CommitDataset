[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    public XContentBuilder field(String name, String... value) throws IOException {, +        startArray(name);, +        for (String o : value) {, +            value(o);, +        }, +        endArray();, +        return this;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    public XContentBuilder field(String name, String... value) throws IOException {, +        startArray(name);, +        for (String o : value) {, +            value(o);, +        }, +        endArray();, +        return this;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/terms/TermsFacetBuilder.java, +    private String[] fieldsNames;, +    public TermsFacetBuilder fields(String... fields) {, +        this.fieldsNames = fields;, +        return this;, +    }, +, +        if (fieldName == null && fieldsNames == null) {, +        if (fieldsNames != null) {, +            if (fieldsNames.length == 1) {, +                builder.field("field", fieldsNames[0]);, +            } else {, +                builder.field("fields", fieldsNames);, +            }, +        } else {, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    public XContentBuilder field(String name, String... value) throws IOException {, +        startArray(name);, +        for (String o : value) {, +            value(o);, +        }, +        endArray();, +        return this;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/terms/TermsFacetBuilder.java, +    private String[] fieldsNames;, +    public TermsFacetBuilder fields(String... fields) {, +        this.fieldsNames = fields;, +        return this;, +    }, +, +        if (fieldName == null && fieldsNames == null) {, +        if (fieldsNames != null) {, +            if (fieldsNames.length == 1) {, +                builder.field("field", fieldsNames[0]);, +            } else {, +                builder.field("fields", fieldsNames);, +            }, +        } else {, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/terms/TermsFacetCollector.java, +    static ThreadLocal<ThreadLocals.CleanableValue<Deque<TObjectIntHashMap<String>>>> cache = new ThreadLocal<ThreadLocals.CleanableValue<Deque<TObjectIntHashMap<String>>>>() {, +    static TObjectIntHashMap<String> popFacets() {, +    static void pushFacets(TObjectIntHashMap<String> facets) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    public XContentBuilder field(String name, String... value) throws IOException {, +        startArray(name);, +        for (String o : value) {, +            value(o);, +        }, +        endArray();, +        return this;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/terms/TermsFacetBuilder.java, +    private String[] fieldsNames;, +    public TermsFacetBuilder fields(String... fields) {, +        this.fieldsNames = fields;, +        return this;, +    }, +, +        if (fieldName == null && fieldsNames == null) {, +        if (fieldsNames != null) {, +            if (fieldsNames.length == 1) {, +                builder.field("field", fieldsNames[0]);, +            } else {, +                builder.field("fields", fieldsNames);, +            }, +        } else {, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/terms/TermsFacetCollector.java, +    static ThreadLocal<ThreadLocals.CleanableValue<Deque<TObjectIntHashMap<String>>>> cache = new ThreadLocal<ThreadLocals.CleanableValue<Deque<TObjectIntHashMap<String>>>>() {, +    static TObjectIntHashMap<String> popFacets() {, +    static void pushFacets(TObjectIntHashMap<String> facets) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/terms/TermsFacetCollectorParser.java, +import org.elasticsearch.common.collect.Lists;, +import java.util.List;, +        String[] fieldsNames = null;]