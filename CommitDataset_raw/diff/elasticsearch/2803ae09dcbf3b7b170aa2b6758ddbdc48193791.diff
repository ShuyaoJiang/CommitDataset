[+++ b/core/src/main/java/org/elasticsearch/ingest/IngestModule.java, +    public void registerProcessor(String type, BiFunction<Environment, TemplateService, Processor.Factory<?>> processorFactoryProvider) {, +        processorsRegistry.registerProcessor(type, processorFactoryProvider);, +++ b/core/src/main/java/org/elasticsearch/ingest/IngestModule.java, +    public void registerProcessor(String type, BiFunction<Environment, TemplateService, Processor.Factory<?>> processorFactoryProvider) {, +        processorsRegistry.registerProcessor(type, processorFactoryProvider);, +++ b/core/src/main/java/org/elasticsearch/ingest/ProcessorsRegistry.java, +    public void registerProcessor(String name, BiFunction<Environment, TemplateService, Processor.Factory<?>> processorFactoryProvider) {, +++ b/core/src/main/java/org/elasticsearch/ingest/IngestModule.java, +    public void registerProcessor(String type, BiFunction<Environment, TemplateService, Processor.Factory<?>> processorFactoryProvider) {, +        processorsRegistry.registerProcessor(type, processorFactoryProvider);, +++ b/core/src/main/java/org/elasticsearch/ingest/ProcessorsRegistry.java, +    public void registerProcessor(String name, BiFunction<Environment, TemplateService, Processor.Factory<?>> processorFactoryProvider) {, +++ b/core/src/test/java/org/elasticsearch/ingest/IngestClientIT.java, +            ingestModule.registerProcessor("test", (environment, templateService) -> config ->, +++ b/core/src/main/java/org/elasticsearch/ingest/IngestModule.java, +    public void registerProcessor(String type, BiFunction<Environment, TemplateService, Processor.Factory<?>> processorFactoryProvider) {, +        processorsRegistry.registerProcessor(type, processorFactoryProvider);, +++ b/core/src/main/java/org/elasticsearch/ingest/ProcessorsRegistry.java, +    public void registerProcessor(String name, BiFunction<Environment, TemplateService, Processor.Factory<?>> processorFactoryProvider) {, +++ b/core/src/test/java/org/elasticsearch/ingest/IngestClientIT.java, +            ingestModule.registerProcessor("test", (environment, templateService) -> config ->, +++ b/core/src/test/java/org/elasticsearch/ingest/ProcessorsRegistryTests.java, +        processorsRegistry.registerProcessor("1", (environment, templateService) -> factory1);, +        processorsRegistry.registerProcessor("2", (environment, templateService) -> factory2);, +            processorsRegistry.registerProcessor("1", (environment, templateService) -> factory3);, +++ b/core/src/main/java/org/elasticsearch/ingest/IngestModule.java, +    public void registerProcessor(String type, BiFunction<Environment, TemplateService, Processor.Factory<?>> processorFactoryProvider) {, +        processorsRegistry.registerProcessor(type, processorFactoryProvider);, +++ b/core/src/main/java/org/elasticsearch/ingest/ProcessorsRegistry.java, +    public void registerProcessor(String name, BiFunction<Environment, TemplateService, Processor.Factory<?>> processorFactoryProvider) {, +++ b/core/src/test/java/org/elasticsearch/ingest/IngestClientIT.java, +            ingestModule.registerProcessor("test", (environment, templateService) -> config ->, +++ b/core/src/test/java/org/elasticsearch/ingest/ProcessorsRegistryTests.java, +        processorsRegistry.registerProcessor("1", (environment, templateService) -> factory1);, +        processorsRegistry.registerProcessor("2", (environment, templateService) -> factory2);, +            processorsRegistry.registerProcessor("1", (environment, templateService) -> factory3);, +++ b/plugins/ingest/src/main/java/org/elasticsearch/plugin/ingest/IngestPlugin.java, +        ingestModule.registerProcessor(GeoIpProcessor.TYPE, (environment, templateService) -> new GeoIpProcessor.Factory(environment.configFile()));, +        ingestModule.registerProcessor(GrokProcessor.TYPE, (environment, templateService) -> new GrokProcessor.Factory(environment.configFile()));, +        ingestModule.registerProcessor(DateProcessor.TYPE, (environment, templateService) -> new DateProcessor.Factory());, +        ingestModule.registerProcessor(SetProcessor.TYPE, (environment, templateService) -> new SetProcessor.Factory(templateService));, +        ingestModule.registerProcessor(AppendProcessor.TYPE, (environment, templateService) -> new AppendProcessor.Factory(templateService));, +        ingestModule.registerProcessor(RenameProcessor.TYPE, (environment, templateService) -> new RenameProcessor.Factory());, +        ingestModule.registerProcessor(RemoveProcessor.TYPE, (environment, templateService) -> new RemoveProcessor.Factory(templateService));, +        ingestModule.registerProcessor(SplitProcessor.TYPE, (environment, templateService) -> new SplitProcessor.Factory());, +        ingestModule.registerProcessor(JoinProcessor.TYPE, (environment, templateService) -> new JoinProcessor.Factory());, +        ingestModule.registerProcessor(UppercaseProcessor.TYPE, (environment, templateService) -> new UppercaseProcessor.Factory());, +        ingestModule.registerProcessor(LowercaseProcessor.TYPE, (environment, templateService) -> new LowercaseProcessor.Factory());, +        ingestModule.registerProcessor(TrimProcessor.TYPE, (environment, templateService) -> new TrimProcessor.Factory());, +        ingestModule.registerProcessor(ConvertProcessor.TYPE, (environment, templateService) -> new ConvertProcessor.Factory());, +        ingestModule.registerProcessor(GsubProcessor.TYPE, (environment, templateService) -> new GsubProcessor.Factory());, +        ingestModule.registerProcessor(FailProcessor.TYPE, (environment, templateService) -> new FailProcessor.Factory(templateService));]