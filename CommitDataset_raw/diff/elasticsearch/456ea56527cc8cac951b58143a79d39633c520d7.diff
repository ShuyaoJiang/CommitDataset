[+++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/support/AbstractBlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/support/AbstractBlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/support/AbstractBlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +                BytesArray bytes = new BytesArray(testBytes);, +                try (InputStream stream = bytes.streamInput()) {, +                    testContainer.writeBlob(blobName + "-temp", stream, bytes.length());, +                }, +        try (InputStream stream = bytesRef.streamInput()) {, +            snapshotsBlobContainer.writeBlob(tempBlobName, stream, bytesRef.length());, +        }, +                BytesArray bytes = new BytesArray(seed);, +                try (InputStream stream = bytes.streamInput()) {, +                    testBlobContainer.writeBlob("data-" + localNode.getId() + ".dat", stream, bytes.length());, +                }, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/support/AbstractBlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +                BytesArray bytes = new BytesArray(testBytes);, +                try (InputStream stream = bytes.streamInput()) {, +                    testContainer.writeBlob(blobName + "-temp", stream, bytes.length());, +                }, +        try (InputStream stream = bytesRef.streamInput()) {, +            snapshotsBlobContainer.writeBlob(tempBlobName, stream, bytesRef.length());, +        }, +                BytesArray bytes = new BytesArray(seed);, +                try (InputStream stream = bytes.streamInput()) {, +                    testBlobContainer.writeBlob("data-" + localNode.getId() + ".dat", stream, bytes.length());, +                }, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/ChecksumBlobStoreFormat.java, +            BytesArray bytesArray = new BytesArray(byteArrayOutputStream.toByteArray());, +            try (InputStream stream = bytesArray.streamInput()) {, +                blobContainer.writeBlob(blobName, stream, bytesArray.length());, +            }, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/support/AbstractBlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +                BytesArray bytes = new BytesArray(testBytes);, +                try (InputStream stream = bytes.streamInput()) {, +                    testContainer.writeBlob(blobName + "-temp", stream, bytes.length());, +                }, +        try (InputStream stream = bytesRef.streamInput()) {, +            snapshotsBlobContainer.writeBlob(tempBlobName, stream, bytesRef.length());, +        }, +                BytesArray bytes = new BytesArray(seed);, +                try (InputStream stream = bytes.streamInput()) {, +                    testBlobContainer.writeBlob("data-" + localNode.getId() + ".dat", stream, bytes.length());, +                }, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/ChecksumBlobStoreFormat.java, +            BytesArray bytesArray = new BytesArray(byteArrayOutputStream.toByteArray());, +            try (InputStream stream = bytesArray.streamInput()) {, +                blobContainer.writeBlob(blobName, stream, bytesArray.length());, +            }, +++ b/core/src/test/java/org/elasticsearch/repositories/blobstore/BlobStoreRepositoryTests.java, +import org.elasticsearch.common.io.stream.StreamInput;, +        try (StreamInput stream = bRef.streamInput()) {, +            repository.blobContainer().writeBlob(BlobStoreRepository.SNAPSHOTS_FILE, stream, bRef.length()); // write to index file, +        }, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/support/AbstractBlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +                BytesArray bytes = new BytesArray(testBytes);, +                try (InputStream stream = bytes.streamInput()) {, +                    testContainer.writeBlob(blobName + "-temp", stream, bytes.length());, +                }, +        try (InputStream stream = bytesRef.streamInput()) {, +            snapshotsBlobContainer.writeBlob(tempBlobName, stream, bytesRef.length());, +        }, +                BytesArray bytes = new BytesArray(seed);, +                try (InputStream stream = bytes.streamInput()) {, +                    testBlobContainer.writeBlob("data-" + localNode.getId() + ".dat", stream, bytes.length());, +                }, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/ChecksumBlobStoreFormat.java, +            BytesArray bytesArray = new BytesArray(byteArrayOutputStream.toByteArray());, +            try (InputStream stream = bytesArray.streamInput()) {, +                blobContainer.writeBlob(blobName, stream, bytesArray.length());, +            }, +++ b/core/src/test/java/org/elasticsearch/repositories/blobstore/BlobStoreRepositoryTests.java, +import org.elasticsearch.common.io.stream.StreamInput;, +        try (StreamInput stream = bRef.streamInput()) {, +            repository.blobContainer().writeBlob(BlobStoreRepository.SNAPSHOTS_FILE, stream, bRef.length()); // write to index file, +        }, +++ b/core/src/test/java/org/elasticsearch/snapshots/BlobStoreFormatIT.java, +import org.elasticsearch.common.io.stream.StreamInput;, +            try (StreamInput stream = bytes.streamInput()) {, +                blobContainer.writeBlob(blobName, stream, bytes.length());, +            }, +        BytesArray bytesArray = new BytesArray(buffer);, +        try (StreamInput stream = bytesArray.streamInput()) {, +            blobContainer.writeBlob(blobName, stream, bytesArray.length());, +        }]