[+++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/java/org/elasticsearch/smoketest/SmokeTestMonitoringWithSecurityIT.java, +    private boolean useSecurity3;, +, +    @Override, +    @Before, +    public void setUp() throws Exception {, +        super.setUp();, +        useSecurity3 = randomBoolean();, +    }, +, +        final Settings.Builder builder =, +                Settings.builder(), +                .put("xpack.security.ssl.keystore.password", KEYSTORE_PASS);, +        if (useSecurity3) {, +            builder.put(NetworkModule.TRANSPORT_TYPE_KEY, Security.NAME3);, +        } else {, +            builder.put(NetworkModule.TRANSPORT_TYPE_KEY, Security.NAME4);, +        }, +        return builder.build();, +++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/java/org/elasticsearch/smoketest/SmokeTestMonitoringWithSecurityIT.java, +    private boolean useSecurity3;, +, +    @Override, +    @Before, +    public void setUp() throws Exception {, +        super.setUp();, +        useSecurity3 = randomBoolean();, +    }, +, +        final Settings.Builder builder =, +                Settings.builder(), +                .put("xpack.security.ssl.keystore.password", KEYSTORE_PASS);, +        if (useSecurity3) {, +            builder.put(NetworkModule.TRANSPORT_TYPE_KEY, Security.NAME3);, +        } else {, +            builder.put(NetworkModule.TRANSPORT_TYPE_KEY, Security.NAME4);, +        }, +        return builder.build();, +++ b/elasticsearch/x-pack/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/test/MonitoringIntegTestCase.java, +import org.elasticsearch.common.network.NetworkModule;, +    // TODO: what is going on here?, +++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/java/org/elasticsearch/smoketest/SmokeTestMonitoringWithSecurityIT.java, +    private boolean useSecurity3;, +, +    @Override, +    @Before, +    public void setUp() throws Exception {, +        super.setUp();, +        useSecurity3 = randomBoolean();, +    }, +, +        final Settings.Builder builder =, +                Settings.builder(), +                .put("xpack.security.ssl.keystore.password", KEYSTORE_PASS);, +        if (useSecurity3) {, +            builder.put(NetworkModule.TRANSPORT_TYPE_KEY, Security.NAME3);, +        } else {, +            builder.put(NetworkModule.TRANSPORT_TYPE_KEY, Security.NAME4);, +        }, +        return builder.build();, +++ b/elasticsearch/x-pack/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/test/MonitoringIntegTestCase.java, +import org.elasticsearch.common.network.NetworkModule;, +    // TODO: what is going on here?, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/Security.java, +import java.util.Locale;, +    public static final String NAME3 = NAME + "3";, +    public static final String NAME4 = NAME + "4";, +    @SuppressWarnings("StatementWithEmptyBody"), +    // visible for tests, +        final Settings.Builder settingsBuilder = Settings.builder();, +, +        if (NetworkModule.TRANSPORT_TYPE_SETTING.exists(settings)) {, +            // for symmetry with http.type, +        } else {, +            // default to security4, +            settingsBuilder.put(NetworkModule.TRANSPORT_TYPE_KEY, NAME4);, +        }, +, +        if (NetworkModule.HTTP_TYPE_SETTING.exists(settings)) {, +            final String httpType = NetworkModule.HTTP_TYPE_SETTING.get(settings);, +            if (httpType.equals(NAME3)) {, +                SecurityNetty3HttpServerTransport.overrideSettings(settingsBuilder, settings);, +            } else if (httpType.equals(NAME4)) {, +            }, +        } else {, +            // default to security4, +            settingsBuilder.put(NetworkModule.HTTP_TYPE_KEY, NAME4);, +            SecurityNetty4HttpServerTransport.overrideSettings(settingsBuilder, settings);, +        }, +, +        settingsBuilder.put(NetworkModule.TRANSPORT_SERVICE_TYPE_KEY, Security.NAME);, +                module.registerTransport(Security.NAME3, SecurityNetty3Transport.class);, +                module.registerTransport(Security.NAME4, SecurityNetty4Transport.class);, +            module.registerTransport(Security.NAME3, SecurityNetty3Transport.class);, +            module.registerTransport(Security.NAME4, SecurityNetty4Transport.class);, +            module.registerHttpTransport(Security.NAME3, SecurityNetty3HttpServerTransport.class);, +            module.registerHttpTransport(Security.NAME4, SecurityNetty4HttpServerTransport.class);, +++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/java/org/elasticsearch/smoketest/SmokeTestMonitoringWithSecurityIT.java, +    private boolean useSecurity3;, +]