[+++ b/core/src/main/java/org/elasticsearch/action/resync/TransportResyncReplicationAction.java, +            listener.onResponse(new ReplicaResponse(SequenceNumbersService.PRE_60_NODE_LOCAL_CHECKPOINT));, +++ b/core/src/main/java/org/elasticsearch/action/resync/TransportResyncReplicationAction.java, +            listener.onResponse(new ReplicaResponse(SequenceNumbersService.PRE_60_NODE_LOCAL_CHECKPOINT));, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +            /*, +             * A replica should always know its own local checkpoint so this should always be a valid sequence number or the pre-6.0 local, +             * checkpoint value when simulating responses to replication actions that pre-6.0 nodes are not aware of (e.g., the global, +             * checkpoint background sync, and the primary/replica resync)., +             */, +            assert localCheckpoint != SequenceNumbersService.UNASSIGNED_SEQ_NO;, +++ b/core/src/main/java/org/elasticsearch/action/resync/TransportResyncReplicationAction.java, +            listener.onResponse(new ReplicaResponse(SequenceNumbersService.PRE_60_NODE_LOCAL_CHECKPOINT));, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +            /*, +             * A replica should always know its own local checkpoint so this should always be a valid sequence number or the pre-6.0 local, +             * checkpoint value when simulating responses to replication actions that pre-6.0 nodes are not aware of (e.g., the global, +             * checkpoint background sync, and the primary/replica resync)., +             */, +            assert localCheckpoint != SequenceNumbersService.UNASSIGNED_SEQ_NO;, +++ b/core/src/main/java/org/elasticsearch/index/seqno/GlobalCheckpointSyncAction.java, +            listener.onResponse(new ReplicaResponse(SequenceNumbersService.PRE_60_NODE_LOCAL_CHECKPOINT));, +++ b/core/src/main/java/org/elasticsearch/action/resync/TransportResyncReplicationAction.java, +            listener.onResponse(new ReplicaResponse(SequenceNumbersService.PRE_60_NODE_LOCAL_CHECKPOINT));, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +            /*, +             * A replica should always know its own local checkpoint so this should always be a valid sequence number or the pre-6.0 local, +             * checkpoint value when simulating responses to replication actions that pre-6.0 nodes are not aware of (e.g., the global, +             * checkpoint background sync, and the primary/replica resync)., +             */, +            assert localCheckpoint != SequenceNumbersService.UNASSIGNED_SEQ_NO;, +++ b/core/src/main/java/org/elasticsearch/index/seqno/GlobalCheckpointSyncAction.java, +            listener.onResponse(new ReplicaResponse(SequenceNumbersService.PRE_60_NODE_LOCAL_CHECKPOINT));, +++ b/core/src/main/java/org/elasticsearch/index/seqno/GlobalCheckpointTracker.java, +        // a local checkpoint for a shard copy should be a valid sequence number or the pre-6.0 sequence number indicator, +        assert localCheckpoint != SequenceNumbersService.UNASSIGNED_SEQ_NO :, +                "invalid local checkpoint for shard copy [" + allocationId + "]";, +++ b/core/src/main/java/org/elasticsearch/action/resync/TransportResyncReplicationAction.java, +            listener.onResponse(new ReplicaResponse(SequenceNumbersService.PRE_60_NODE_LOCAL_CHECKPOINT));, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +            /*, +             * A replica should always know its own local checkpoint so this should always be a valid sequence number or the pre-6.0 local, +             * checkpoint value when simulating responses to replication actions that pre-6.0 nodes are not aware of (e.g., the global, +             * checkpoint background sync, and the primary/replica resync)., +             */, +            assert localCheckpoint != SequenceNumbersService.UNASSIGNED_SEQ_NO;, +++ b/core/src/main/java/org/elasticsearch/index/seqno/GlobalCheckpointSyncAction.java, +            listener.onResponse(new ReplicaResponse(SequenceNumbersService.PRE_60_NODE_LOCAL_CHECKPOINT));, +++ b/core/src/main/java/org/elasticsearch/index/seqno/GlobalCheckpointTracker.java, +        // a local checkpoint for a shard copy should be a valid sequence number or the pre-6.0 sequence number indicator, +        assert localCheckpoint != SequenceNumbersService.UNASSIGNED_SEQ_NO :, +                "invalid local checkpoint for shard copy [" + allocationId + "]";, +++ b/core/src/test/java/org/elasticsearch/index/seqno/GlobalCheckpointTrackerTests.java, +        gcp.updateLocalCheckpoint(allocationId, Math.max(SequenceNumbersService.NO_OPS_PERFORMED, currentLocalCheckpoint + randomInt(5)));]