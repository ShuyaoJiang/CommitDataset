[+++ b/src/main/java/org/elasticsearch/index/mapper/ParseContext.java, +        private final Document parent;, +        private final String path;, +        private final String prefix;, +        private Document(String path, Document parent) {, +            this.path = path;, +            this.prefix = path.isEmpty() ? "" : path + ".";, +            this.parent = parent;, +        }, +, +        public Document() {, +            this("", null);, +        }, +, +        /**, +         * Return the path associated with this document., +         */, +        public String getPath() {, +            return path;, +        }, +, +        /**, +         * Return a prefix that all fields in this document should have., +         */, +        public String getPrefix() {, +            return prefix;, +        }, +, +        /**, +         * Return the parent document, or null if this is the root document., +         */, +        public Document getParent() {, +            return parent;, +            // either a meta fields or starts with the prefix, +            assert field.name().startsWith("_") || field.name().startsWith(prefix) : field.name() + " " + prefix;, +    /**, +     * Return a new context that will be used within a nested document., +     */, +    public final ParseContext createNestedContext(String fullPath) {, +        final Document doc = new Document(fullPath, doc());, +        addDoc(doc);, +        return switchDoc(doc);, +    }, +, +    /**, +     * Return a new context that has the provided document as the current document., +     */, +    public final ParseContext switchDoc(final Document document) {, +        return new FilterParseContext(this) {, +            @Override, +            public Document doc() {, +                return document;, +            }, +        };, +    }, +, +    /**, +     * Return a new context that will have the provided path., +     */, +    public final ParseContext overridePath(final ContentPath path) {, +        return new FilterParseContext(this) {, +            @Override, +            public ContentPath path() {, +                return path;, +            }, +        };, +    }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/ParseContext.java, +        private final Document parent;, +        private final String path;, +        private final String prefix;, +        private Document(String path, Document parent) {, +            this.path = path;, +            this.prefix = path.isEmpty() ? "" : path + ".";, +            this.parent = parent;, +        }, +, +        public Document() {, +            this("", null);, +        }, +, +        /**, +         * Return the path associated with this document., +         */, +        public String getPath() {, +            return path;, +        }, +, +        /**, +         * Return a prefix that all fields in this document should have., +         */, +        public String getPrefix() {, +            return prefix;, +        }, +, +        /**, +         * Return the parent document, or null if this is the root document., +         */, +        public Document getParent() {]