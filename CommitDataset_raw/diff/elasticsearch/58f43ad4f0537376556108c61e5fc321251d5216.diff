[+++ b/plugin/sql/build.gradle, +    compile "org.elasticsearch.plugin:aggs-matrix-stats-client:${version}", +    compile "org.antlr:antlr4-runtime:4.5.3", +++ b/plugin/sql/build.gradle, +    compile "org.elasticsearch.plugin:aggs-matrix-stats-client:${version}", +    compile "org.antlr:antlr4-runtime:4.5.3", +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/execution/search/Scroller.java, +import java.util.Map;, +                AggRef ref = (AggRef) col;, +                String path = ref.path();, +                    // unwrap nested map, +                    if (ref.innerKey() != null) {, +                        // needs changing when moving to Composite, +                        if (value instanceof Object[]) {, +                            Object[] val = (Object[]) value;, +                            arr = new Object[val.length];, +                            for (int i = 0; i < arr.length; i++) {, +                                if (val[i] instanceof Map) {, +                                    arr[i] = ((Map<?, ?>) val[i]).get(ref.innerKey());, +                                }, +                            }, +                            value = arr;, +                        } else {, +                            if (value instanceof Map) {, +                                value = new Object[] { ((Map<?, ?>) value).get(ref.innerKey()) };, +                            }, +                        }, +                    }, +++ b/plugin/sql/build.gradle, +    compile "org.elasticsearch.plugin:aggs-matrix-stats-client:${version}", +    compile "org.antlr:antlr4-runtime:4.5.3", +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/execution/search/Scroller.java, +import java.util.Map;, +                AggRef ref = (AggRef) col;, +                String path = ref.path();, +                    // unwrap nested map, +                    if (ref.innerKey() != null) {, +                        // needs changing when moving to Composite, +                        if (value instanceof Object[]) {, +                            Object[] val = (Object[]) value;, +                            arr = new Object[val.length];, +                            for (int i = 0; i < arr.length; i++) {, +                                if (val[i] instanceof Map) {, +                                    arr[i] = ((Map<?, ?>) val[i]).get(ref.innerKey());, +                                }, +                            }, +                            value = arr;, +                        } else {, +                            if (value instanceof Map) {, +                                value = new Object[] { ((Map<?, ?>) value).get(ref.innerKey()) };, +                            }, +                        }, +                    }, +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/FunctionRegistry.java, +++ b/plugin/sql/build.gradle, +    compile "org.elasticsearch.plugin:aggs-matrix-stats-client:${version}", +    compile "org.antlr:antlr4-runtime:4.5.3", +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/execution/search/Scroller.java, +import java.util.Map;, +                AggRef ref = (AggRef) col;, +                String path = ref.path();, +                    // unwrap nested map, +                    if (ref.innerKey() != null) {, +                        // needs changing when moving to Composite, +                        if (value instanceof Object[]) {, +                            Object[] val = (Object[]) value;, +                            arr = new Object[val.length];, +                            for (int i = 0; i < arr.length; i++) {, +                                if (val[i] instanceof Map) {, +                                    arr[i] = ((Map<?, ?>) val[i]).get(ref.innerKey());, +                                }, +                            }, +                            value = arr;, +                        } else {, +                            if (value instanceof Map) {, +                                value = new Object[] { ((Map<?, ?>) value).get(ref.innerKey()) };, +                            }, +                        }, +                    }, +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/FunctionRegistry.java, +++ /dev/null, +++ b/plugin/sql/build.gradle, +    compile "org.elasticsearch.plugin:aggs-matrix-stats-client:${version}", +    compile "org.antlr:antlr4-runtime:4.5.3", +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/execution/search/Scroller.java, +import java.util.Map;, +                AggRef ref = (AggRef) col;, +                String path = ref.path();, +                    // unwrap nested map, +                    if (ref.innerKey() != null) {, +                        // needs changing when moving to Composite, +                        if (value instanceof Object[]) {, +                            Object[] val = (Object[]) value;, +                            arr = new Object[val.length];, +                            for (int i = 0; i < arr.length; i++) {, +                                if (val[i] instanceof Map) {, +                                    arr[i] = ((Map<?, ?>) val[i]).get(ref.innerKey());, +                                }, +                            }, +                            value = arr;]