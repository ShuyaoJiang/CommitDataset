[+++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]master[/\\]TransportMasterNodeActionTests.java" checks="LineLength" />, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]master[/\\]TransportMasterNodeActionTests.java" checks="LineLength" />, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseClient.java, +import org.elasticsearch.client.license.DeleteLicenseRequest;, +import org.elasticsearch.client.license.GetLicenseRequest;, +import org.elasticsearch.client.license.GetLicenseResponse;, +import org.elasticsearch.client.license.PutLicenseRequest;, +import org.elasticsearch.client.license.PutLicenseResponse;, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]master[/\\]TransportMasterNodeActionTests.java" checks="LineLength" />, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseClient.java, +import org.elasticsearch.client.license.DeleteLicenseRequest;, +import org.elasticsearch.client.license.GetLicenseRequest;, +import org.elasticsearch.client.license.GetLicenseResponse;, +import org.elasticsearch.client.license.PutLicenseRequest;, +import org.elasticsearch.client.license.PutLicenseResponse;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseRequestConverters.java, +import org.elasticsearch.client.license.DeleteLicenseRequest;, +import org.elasticsearch.client.license.GetLicenseRequest;, +import org.elasticsearch.client.license.PutLicenseRequest;, +        parameters.withLocal(getLicenseRequest.isLocal());, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]master[/\\]TransportMasterNodeActionTests.java" checks="LineLength" />, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseClient.java, +import org.elasticsearch.client.license.DeleteLicenseRequest;, +import org.elasticsearch.client.license.GetLicenseRequest;, +import org.elasticsearch.client.license.GetLicenseResponse;, +import org.elasticsearch.client.license.PutLicenseRequest;, +import org.elasticsearch.client.license.PutLicenseResponse;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseRequestConverters.java, +import org.elasticsearch.client.license.DeleteLicenseRequest;, +import org.elasticsearch.client.license.GetLicenseRequest;, +import org.elasticsearch.client.license.PutLicenseRequest;, +        parameters.withLocal(getLicenseRequest.isLocal());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +        if (getJobRequest.getAllowNoJobs() != null) {, +            params.putParam("allow_no_jobs", Boolean.toString(getJobRequest.getAllowNoJobs()));, +        if (getJobStatsRequest.getAllowNoJobs() != null) {, +            params.putParam("allow_no_jobs", Boolean.toString(getJobStatsRequest.getAllowNoJobs()));, +        if (getDatafeedRequest.getAllowNoDatafeeds() != null) {, +                    Boolean.toString(getDatafeedRequest.getAllowNoDatafeeds()));, +        if (deleteDatafeedRequest.getForce() != null) {, +            params.putParam("force", Boolean.toString(deleteDatafeedRequest.getForce()));, +        }, +        if (getDatafeedStatsRequest.getAllowNoDatafeeds() != null) {, +            params.putParam("allow_no_datafeeds", Boolean.toString(getDatafeedStatsRequest.getAllowNoDatafeeds()));, +        if (deleteForecastRequest.getAllowNoForecasts() != null) {, +            params.putParam("allow_no_forecasts", Boolean.toString(deleteForecastRequest.getAllowNoForecasts()));, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]master[/\\]TransportMasterNodeActionTests.java" checks="LineLength" />, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseClient.java, +import org.elasticsearch.client.license.DeleteLicenseRequest;, +import org.elasticsearch.client.license.GetLicenseRequest;, +import org.elasticsearch.client.license.GetLicenseResponse;, +import org.elasticsearch.client.license.PutLicenseRequest;, +import org.elasticsearch.client.license.PutLicenseResponse;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseRequestConverters.java, +import org.elasticsearch.client.license.DeleteLicenseRequest;, +import org.elasticsearch.client.license.GetLicenseRequest;, +import org.elasticsearch.client.license.PutLicenseRequest;, +        parameters.withLocal(getLicenseRequest.isLocal());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +        if (getJobRequest.getAllowNoJobs() != null) {, +            params.putParam("allow_no_jobs", Boolean.toString(getJobRequest.getAllowNoJobs()));, +        if (getJobStatsRequest.getAllowNoJobs() != null) {, +            params.putParam("allow_no_jobs", Boolean.toString(getJobStatsRequest.getAllowNoJobs()));, +        if (getDatafeedRequest.getAllowNoDatafeeds() != null) {, +                    Boolean.toString(getDatafeedRequest.getAllowNoDatafeeds()));, +        if (deleteDatafeedRequest.getForce() != null) {, +            params.putParam("force", Boolean.toString(deleteDatafeedRequest.getForce()));, +        }, +        if (getDatafeedStatsRequest.getAllowNoDatafeeds() != null) {, +            params.putParam("allow_no_datafeeds", Boolean.toString(getDatafeedStatsRequest.getAllowNoDatafeeds()));, +        if (deleteForecastRequest.getAllowNoForecasts() != null) {, +            params.putParam("allow_no_forecasts", Boolean.toString(deleteForecastRequest.getAllowNoForecasts()));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/WatcherClient.java, +import org.elasticsearch.action.support.master.AcknowledgedResponse;, +import org.elasticsearch.client.watcher.StartWatchServiceRequest;, +import org.elasticsearch.client.watcher.StopWatchServiceRequest;, +     * Start the watch service]