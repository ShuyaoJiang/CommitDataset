[+++ b/core/src/main/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQuery.java, +import org.apache.lucene.index.*;, +import java.util.*;, +            position = positions.get(positions.size() - 1) + 1;, +     * @param terms the terms, +     * @param position the position of the terms provided as argument, +        positions.add(position);, +            result[i] = positions.get(i);, +        query.setBoost(getBoost());, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQuery.java, +import org.apache.lucene.index.*;, +import java.util.*;, +            position = positions.get(positions.size() - 1) + 1;, +     * @param terms the terms, +     * @param position the position of the terms provided as argument, +        positions.add(position);, +            result[i] = positions.get(i);, +        query.setBoost(getBoost());, +++ b/core/src/test/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQueryTests.java, +import org.apache.lucene.search.*;, +, +    @Test, +    public void testBoost() throws Exception {, +        IndexWriter writer = new IndexWriter(new RAMDirectory(), new IndexWriterConfig(Lucene.STANDARD_ANALYZER));, +        Document doc = new Document();, +        doc.add(new Field("field", "aaa bbb", TextField.TYPE_NOT_STORED));, +        writer.addDocument(doc);, +        doc = new Document();, +        doc.add(new Field("field", "ccc ddd", TextField.TYPE_NOT_STORED));, +        writer.addDocument(doc);, +        IndexReader reader = DirectoryReader.open(writer, true);, +        MultiPhrasePrefixQuery multiPhrasePrefixQuery = new MultiPhrasePrefixQuery();, +        multiPhrasePrefixQuery.add(new Term[]{new Term("field", "aaa"), new Term("field", "bb")});, +        multiPhrasePrefixQuery.setBoost(randomFloat());, +        Query query = multiPhrasePrefixQuery.rewrite(reader);, +        assertThat(query.getBoost(), equalTo(multiPhrasePrefixQuery.getBoost()));, +    }]