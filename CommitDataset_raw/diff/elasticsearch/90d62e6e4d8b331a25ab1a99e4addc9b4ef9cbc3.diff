[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +    static Request deleteSnapshot(DeleteSnapshotRequest deleteSnapshotRequest) {, +        String endpoint = new EndpointBuilder().addPathPartAsIs("_snapshot"), +            .addPathPart(deleteSnapshotRequest.repository()), +            .addPathPart(deleteSnapshotRequest.snapshot()), +            .build();, +        Request request = new Request(HttpDelete.METHOD_NAME, endpoint);, +, +        Params parameters = new Params(request);, +        parameters.withMasterTimeout(deleteSnapshotRequest.masterNodeTimeout());, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +    static Request deleteSnapshot(DeleteSnapshotRequest deleteSnapshotRequest) {, +        String endpoint = new EndpointBuilder().addPathPartAsIs("_snapshot"), +            .addPathPart(deleteSnapshotRequest.repository()), +            .addPathPart(deleteSnapshotRequest.snapshot()), +            .build();, +        Request request = new Request(HttpDelete.METHOD_NAME, endpoint);, +, +        Params parameters = new Params(request);, +        parameters.withMasterTimeout(deleteSnapshotRequest.masterNodeTimeout());, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SnapshotClient.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotResponse;, +, +    /**, +     * Deletes a snapshot., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore, +     * API on elastic.co</a>, +     *, +     * @param deleteSnapshotRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public DeleteSnapshotResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,, +            DeleteSnapshotResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously deletes a snapshot., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore, +     * API on elastic.co</a>, +     *, +     * @param deleteSnapshotRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,, +                            ActionListener<DeleteSnapshotResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,, +            DeleteSnapshotResponse::fromXContent, listener, emptySet());, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +    static Request deleteSnapshot(DeleteSnapshotRequest deleteSnapshotRequest) {, +        String endpoint = new EndpointBuilder().addPathPartAsIs("_snapshot"), +            .addPathPart(deleteSnapshotRequest.repository()), +            .addPathPart(deleteSnapshotRequest.snapshot()), +            .build();, +        Request request = new Request(HttpDelete.METHOD_NAME, endpoint);, +, +        Params parameters = new Params(request);, +        parameters.withMasterTimeout(deleteSnapshotRequest.masterNodeTimeout());, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SnapshotClient.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotResponse;, +, +    /**, +     * Deletes a snapshot., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore, +     * API on elastic.co</a>, +     *, +     * @param deleteSnapshotRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public DeleteSnapshotResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,, +            DeleteSnapshotResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously deletes a snapshot., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore, +     * API on elastic.co</a>, +     *, +     * @param deleteSnapshotRequest the request]