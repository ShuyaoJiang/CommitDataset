[+++ b/modules/elasticsearch/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +import org.elasticsearch.util.lucene.search.CustomBoostFactorQuery;, +        } else if (sourceQuery instanceof CustomBoostFactorQuery) {, +            flatten(((CustomBoostFactorQuery) sourceQuery).getSubQuery(), flatQueries);, +                } catch (BooleanQuery.TooManyClauses e) {, +                    // ignore, +        } else if (sourceQuery instanceof FilteredQuery) {, +            flatten(((FilteredQuery) sourceQuery).getQuery(), flatQueries);, +            flatten(((FilteredQuery) sourceQuery).getFilter(), flatQueries);, +        Boolean highlight = highlightFilters.get();, +        if (highlight == null || highlight.equals(Boolean.FALSE)) {, +            return;, +        }, +++ b/modules/elasticsearch/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +import org.elasticsearch.util.lucene.search.CustomBoostFactorQuery;, +        } else if (sourceQuery instanceof CustomBoostFactorQuery) {, +            flatten(((CustomBoostFactorQuery) sourceQuery).getSubQuery(), flatQueries);, +                } catch (BooleanQuery.TooManyClauses e) {, +                    // ignore, +        } else if (sourceQuery instanceof FilteredQuery) {, +            flatten(((FilteredQuery) sourceQuery).getQuery(), flatQueries);, +            flatten(((FilteredQuery) sourceQuery).getFilter(), flatQueries);, +        Boolean highlight = highlightFilters.get();, +        if (highlight == null || highlight.equals(Boolean.FALSE)) {, +            return;, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchContextException.java, +        sb.append("query[").append(context.originalQuery()).append("],from[").append(context.from()).append("],size[").append(context.size()).append("]");, +++ b/modules/elasticsearch/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +import org.elasticsearch.util.lucene.search.CustomBoostFactorQuery;, +        } else if (sourceQuery instanceof CustomBoostFactorQuery) {, +            flatten(((CustomBoostFactorQuery) sourceQuery).getSubQuery(), flatQueries);, +                } catch (BooleanQuery.TooManyClauses e) {, +                    // ignore, +        } else if (sourceQuery instanceof FilteredQuery) {, +            flatten(((FilteredQuery) sourceQuery).getQuery(), flatQueries);, +            flatten(((FilteredQuery) sourceQuery).getFilter(), flatQueries);, +        Boolean highlight = highlightFilters.get();, +        if (highlight == null || highlight.equals(Boolean.FALSE)) {, +            return;, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchContextException.java, +        sb.append("query[").append(context.originalQuery()).append("],from[").append(context.from()).append("],size[").append(context.size()).append("]");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/dfs/DfsPhase.java, +            if (!context.queryRewritten()) {, +                context.updateRewriteQuery(context.searcher().rewrite(context.query()));, +            }, +++ b/modules/elasticsearch/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +import org.elasticsearch.util.lucene.search.CustomBoostFactorQuery;, +        } else if (sourceQuery instanceof CustomBoostFactorQuery) {, +            flatten(((CustomBoostFactorQuery) sourceQuery).getSubQuery(), flatQueries);, +                } catch (BooleanQuery.TooManyClauses e) {, +                    // ignore, +        } else if (sourceQuery instanceof FilteredQuery) {, +            flatten(((FilteredQuery) sourceQuery).getQuery(), flatQueries);, +            flatten(((FilteredQuery) sourceQuery).getFilter(), flatQueries);, +        Boolean highlight = highlightFilters.get();, +        if (highlight == null || highlight.equals(Boolean.FALSE)) {, +            return;, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchContextException.java, +        sb.append("query[").append(context.originalQuery()).append("],from[").append(context.from()).append("],size[").append(context.size()).append("]");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/dfs/DfsPhase.java, +            if (!context.queryRewritten()) {, +                context.updateRewriteQuery(context.searcher().rewrite(context.query()));, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/highlight/HighlighterParseElement.java, +            } else if (token == JsonToken.VALUE_FALSE || token == JsonToken.VALUE_TRUE) {, +                    highlightFilter = token == JsonToken.VALUE_TRUE;, +++ b/modules/elasticsearch/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +import org.elasticsearch.util.lucene.search.CustomBoostFactorQuery;, +        } else if (sourceQuery instanceof CustomBoostFactorQuery) {, +            flatten(((CustomBoostFactorQuery) sourceQuery).getSubQuery(), flatQueries);, +                } catch (BooleanQuery.TooManyClauses e) {, +                    // ignore, +        } else if (sourceQuery instanceof FilteredQuery) {, +            flatten(((FilteredQuery) sourceQuery).getQuery(), flatQueries);, +            flatten(((FilteredQuery) sourceQuery).getFilter(), flatQueries);, +        Boolean highlight = highlightFilters.get();, +        if (highlight == null || highlight.equals(Boolean.FALSE)) {, +            return;, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchContextException.java, +        sb.append("query[").append(context.originalQuery()).append("],from[").append(context.from()).append("],size[").append(context.size()).append("]");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/dfs/DfsPhase.java, +            if (!context.queryRewritten()) {, +                context.updateRewriteQuery(context.searcher().rewrite(context.query()));, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/highlight/HighlighterParseElement.java, +            } else if (token == JsonToken.VALUE_FALSE || token == JsonToken.VALUE_TRUE) {, +                    highlightFilter = token == JsonToken.VALUE_TRUE;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/internal/ContextIndexSearcher.java, + * @author kimchy (shay.banon), +    @Override public Query rewrite(Query original) throws IOException {, +        if (original == searchContext.query() || original == searchContext.originalQuery()) {, +            // optimize in case its the top level search query and we already rewrote it..., +            if (searchContext.queryRewritten()) {, +                return searchContext.query();, +            }, +            Query rewriteQuery = super.rewrite(original);]