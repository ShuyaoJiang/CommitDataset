[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/server/src/main/java/org/elasticsearch/Version.java, +    public static final int V_EMPTY_ID = 0;, +    public static final Version V_EMPTY = new Version(V_EMPTY_ID, org.apache.lucene.util.Version.LATEST);, +            case V_EMPTY_ID:, +                return V_EMPTY;, +        final Version indexVersion = IndexMetaData.SETTING_INDEX_VERSION_CREATED.get(indexSettings);, +        if (indexVersion == V_EMPTY) {, +            final String message = String.format(, +                    Locale.ROOT,, +                    "[%s] is not present in the index settings for index with UUID [%s]",, +                    IndexMetaData.SETTING_INDEX_VERSION_CREATED.getKey(),, +                    indexSettings.get(IndexMetaData.SETTING_INDEX_UUID));, +            throw new IllegalStateException(message);, +            switch (field.getName()) {, +                case "CURRENT":, +                case "V_EMPTY":, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/server/src/main/java/org/elasticsearch/Version.java, +    public static final int V_EMPTY_ID = 0;, +    public static final Version V_EMPTY = new Version(V_EMPTY_ID, org.apache.lucene.util.Version.LATEST);, +            case V_EMPTY_ID:, +                return V_EMPTY;, +        final Version indexVersion = IndexMetaData.SETTING_INDEX_VERSION_CREATED.get(indexSettings);, +        if (indexVersion == V_EMPTY) {, +            final String message = String.format(, +                    Locale.ROOT,, +                    "[%s] is not present in the index settings for index with UUID [%s]",, +                    IndexMetaData.SETTING_INDEX_VERSION_CREATED.getKey(),, +                    indexSettings.get(IndexMetaData.SETTING_INDEX_UUID));, +            throw new IllegalStateException(message);, +            switch (field.getName()) {, +                case "CURRENT":, +                case "V_EMPTY":, +++ b/server/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.decider.RestoreInProgressAllocationDecider;, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/server/src/main/java/org/elasticsearch/Version.java, +    public static final int V_EMPTY_ID = 0;, +    public static final Version V_EMPTY = new Version(V_EMPTY_ID, org.apache.lucene.util.Version.LATEST);, +            case V_EMPTY_ID:, +                return V_EMPTY;, +        final Version indexVersion = IndexMetaData.SETTING_INDEX_VERSION_CREATED.get(indexSettings);, +        if (indexVersion == V_EMPTY) {, +            final String message = String.format(, +                    Locale.ROOT,, +                    "[%s] is not present in the index settings for index with UUID [%s]",, +                    IndexMetaData.SETTING_INDEX_VERSION_CREATED.getKey(),, +                    indexSettings.get(IndexMetaData.SETTING_INDEX_UUID));, +            throw new IllegalStateException(message);, +            switch (field.getName()) {, +                case "CURRENT":, +                case "V_EMPTY":, +++ b/server/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.decider.RestoreInProgressAllocationDecider;, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/server/src/main/java/org/elasticsearch/Version.java, +    public static final int V_EMPTY_ID = 0;, +    public static final Version V_EMPTY = new Version(V_EMPTY_ID, org.apache.lucene.util.Version.LATEST);, +            case V_EMPTY_ID:, +                return V_EMPTY;, +        final Version indexVersion = IndexMetaData.SETTING_INDEX_VERSION_CREATED.get(indexSettings);, +        if (indexVersion == V_EMPTY) {, +            final String message = String.format(, +                    Locale.ROOT,, +                    "[%s] is not present in the index settings for index with UUID [%s]",, +                    IndexMetaData.SETTING_INDEX_VERSION_CREATED.getKey(),, +                    indexSettings.get(IndexMetaData.SETTING_INDEX_UUID));, +            throw new IllegalStateException(message);, +            switch (field.getName()) {, +                case "CURRENT":, +                case "V_EMPTY":, +++ b/server/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.decider.RestoreInProgressAllocationDecider;, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +, +    public static final Setting<Version> SETTING_INDEX_VERSION_CREATED =, +            Setting.versionSetting(SETTING_VERSION_CREATED, Version.V_EMPTY, Property.IndexScope, Property.PrivateIndex);, +, +        Version version = SETTING_INDEX_VERSION_CREATED.get(settings);, +        if (version != Version.V_EMPTY) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/server/src/main/java/org/elasticsearch/Version.java, +    public static final int V_EMPTY_ID = 0;, +    public static final Version V_EMPTY = new Version(V_EMPTY_ID, org.apache.lucene.util.Version.LATEST);, +            case V_EMPTY_ID:, +                return V_EMPTY;, +        final Version indexVersion = IndexMetaData.SETTING_INDEX_VERSION_CREATED.get(indexSettings);, +        if (indexVersion == V_EMPTY) {, +            final String message = String.format(, +                    Locale.ROOT,, +                    "[%s] is not present in the index settings for index with UUID [%s]",, +                    IndexMetaData.SETTING_INDEX_VERSION_CREATED.getKey(),, +                    indexSettings.get(IndexMetaData.SETTING_INDEX_UUID));, +            throw new IllegalStateException(message);, +            switch (field.getName()) {, +                case "CURRENT":]