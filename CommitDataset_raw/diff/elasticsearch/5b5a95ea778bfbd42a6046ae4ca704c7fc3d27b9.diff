[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/netty/ChannelBufferStreamInput.java, +    // Not really maps to InputStream, but good enough for us, +    @Override public int read() throws IOException {, +        return buffer.readByte() & 0xFF;, +    }, +, +    @Override public int read(byte[] b, int off, int len) throws IOException {, +        readBytes(b, off, len);, +        return len;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/netty/ChannelBufferStreamInput.java, +    // Not really maps to InputStream, but good enough for us, +    @Override public int read() throws IOException {, +        return buffer.readByte() & 0xFF;, +    }, +, +    @Override public int read(byte[] b, int off, int len) throws IOException {, +        readBytes(b, off, len);, +        return len;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/base/FinalizableReferenceQueue.java, +      = "org.elasticsearch.util.base.internal.Finalizer";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/netty/ChannelBufferStreamInput.java, +    // Not really maps to InputStream, but good enough for us, +    @Override public int read() throws IOException {, +        return buffer.readByte() & 0xFF;, +    }, +, +    @Override public int read(byte[] b, int off, int len) throws IOException {, +        readBytes(b, off, len);, +        return len;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/base/FinalizableReferenceQueue.java, +      = "org.elasticsearch.util.base.internal.Finalizer";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/base/internal/Finalizer.java, +      = "org.elasticsearch.util.base.FinalizableReference";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/netty/ChannelBufferStreamInput.java, +    // Not really maps to InputStream, but good enough for us, +    @Override public int read() throws IOException {, +        return buffer.readByte() & 0xFF;, +    }, +, +    @Override public int read(byte[] b, int off, int len) throws IOException {, +        readBytes(b, off, len);, +        return len;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/base/FinalizableReferenceQueue.java, +      = "org.elasticsearch.util.base.internal.Finalizer";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/base/internal/Finalizer.java, +      = "org.elasticsearch.util.base.FinalizableReference";, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/netty/ChannelBufferStreamInput.java, +    // Not really maps to InputStream, but good enough for us, +    @Override public int read() throws IOException {, +        return buffer.readByte() & 0xFF;, +    }, +, +    @Override public int read(byte[] b, int off, int len) throws IOException {, +        readBytes(b, off, len);, +        return len;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/base/FinalizableReferenceQueue.java, +      = "org.elasticsearch.util.base.internal.Finalizer";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/base/internal/Finalizer.java, +      = "org.elasticsearch.util.base.FinalizableReference";, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/io/FastByteArrayInputStream.java, +    public int position() {, +        return pos;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/netty/ChannelBufferStreamInput.java, +    // Not really maps to InputStream, but good enough for us, +    @Override public int read() throws IOException {, +        return buffer.readByte() & 0xFF;, +    }, +, +    @Override public int read(byte[] b, int off, int len) throws IOException {, +        readBytes(b, off, len);, +        return len;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/base/FinalizableReferenceQueue.java, +      = "org.elasticsearch.util.base.internal.Finalizer";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/base/internal/Finalizer.java, +      = "org.elasticsearch.util.base.FinalizableReference";, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/io/FastByteArrayInputStream.java, +    public int position() {, +        return pos;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/io/stream/BytesStreamInput.java, +    @Override public int read() throws IOException {, +        return (pos < count) ? (buf[pos++] & 0xff) : -1;]