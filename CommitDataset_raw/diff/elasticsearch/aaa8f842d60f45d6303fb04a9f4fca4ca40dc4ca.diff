[+++ b/distribution/archives/build.gradle, +        with libFiles(oss), +++ b/distribution/archives/build.gradle, +        with libFiles(oss), +++ b/distribution/build.gradle, +    libFiles = { oss ->, +      copySpec {, +        if (oss == false) {, +          into('tools/security-cli') {, +            from { project(':x-pack:plugin:security:cli').jar }, +            from { project(':x-pack:plugin:security:cli').configurations.compile }, +          }, +        }, +      }, +++ b/distribution/archives/build.gradle, +        with libFiles(oss), +++ b/distribution/build.gradle, +    libFiles = { oss ->, +      copySpec {, +        if (oss == false) {, +          into('tools/security-cli') {, +            from { project(':x-pack:plugin:security:cli').jar }, +            from { project(':x-pack:plugin:security:cli').configurations.compile }, +          }, +        }, +      }, +++ b/distribution/packages/build.gradle, +          with libFiles(oss), +++ b/distribution/archives/build.gradle, +        with libFiles(oss), +++ b/distribution/build.gradle, +    libFiles = { oss ->, +      copySpec {, +        if (oss == false) {, +          into('tools/security-cli') {, +            from { project(':x-pack:plugin:security:cli').jar }, +            from { project(':x-pack:plugin:security:cli').configurations.compile }, +          }, +        }, +      }, +++ b/distribution/packages/build.gradle, +          with libFiles(oss), +++ b/qa/vagrant/src/main/java/org/elasticsearch/packaging/test/ArchiveTestCase.java, +import static org.junit.Assert.assertFalse;, +    public void test90SecurityCliPackaging() {, +        assumeThat(installation, is(notNullValue()));, +, +        final Installation.Executables bin = installation.executables();, +        final Shell sh = new Shell();, +, +        if (distribution().equals(Distribution.DEFAULT_TAR) || distribution().equals(Distribution.DEFAULT_ZIP)) {, +            assertTrue(Files.exists(installation.lib.resolve("tools").resolve("security-cli")));, +            Platforms.onLinux(() -> {, +                final Result result = sh.run(bin.elasticsearchCertutil + " help");, +                assertThat(result.stdout, containsString("Simplifies certificate creation for use with the Elastic Stack"));, +            });, +, +            Platforms.onWindows(() -> {, +                final Result result = sh.run(bin.elasticsearchCertutil + " help");, +                assertThat(result.stdout, containsString("Simplifies certificate creation for use with the Elastic Stack"));, +            });, +        } else if (distribution().equals(Distribution.OSS_TAR) || distribution().equals(Distribution.OSS_ZIP)) {, +            assertFalse(Files.exists(installation.lib.resolve("tools").resolve("security-cli")));, +        }, +    }, +++ b/distribution/archives/build.gradle, +        with libFiles(oss), +++ b/distribution/build.gradle, +    libFiles = { oss ->, +      copySpec {, +        if (oss == false) {, +          into('tools/security-cli') {, +            from { project(':x-pack:plugin:security:cli').jar }, +            from { project(':x-pack:plugin:security:cli').configurations.compile }, +          }, +        }, +      }, +++ b/distribution/packages/build.gradle, +          with libFiles(oss), +++ b/qa/vagrant/src/main/java/org/elasticsearch/packaging/test/ArchiveTestCase.java, +import static org.junit.Assert.assertFalse;, +    public void test90SecurityCliPackaging() {, +        assumeThat(installation, is(notNullValue()));, +, +        final Installation.Executables bin = installation.executables();, +        final Shell sh = new Shell();, +, +        if (distribution().equals(Distribution.DEFAULT_TAR) || distribution().equals(Distribution.DEFAULT_ZIP)) {, +            assertTrue(Files.exists(installation.lib.resolve("tools").resolve("security-cli")));, +            Platforms.onLinux(() -> {, +                final Result result = sh.run(bin.elasticsearchCertutil + " help");, +                assertThat(result.stdout, containsString("Simplifies certificate creation for use with the Elastic Stack"));, +            });, +, +            Platforms.onWindows(() -> {, +                final Result result = sh.run(bin.elasticsearchCertutil + " help");, +                assertThat(result.stdout, containsString("Simplifies certificate creation for use with the Elastic Stack"));, +            });, +        } else if (distribution().equals(Distribution.OSS_TAR) || distribution().equals(Distribution.OSS_ZIP)) {, +            assertFalse(Files.exists(installation.lib.resolve("tools").resolve("security-cli")));]