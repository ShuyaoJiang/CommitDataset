[+++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +, +# Remove once Lucene 7.7 is integrated, +@defaultMessage Use org.apache.lucene.document.XLatLonShape classes instead, +org.apache.lucene.document.LatLonShape, +org.apache.lucene.document.LatLonShapeBoundingBoxQuery, +org.apache.lucene.document.LatLonShapeLineQuery, +org.apache.lucene.document.LatLonShapePolygonQuery, +org.apache.lucene.document.LatLonShapeQuery, +, +org.apache.lucene.geo.Rectangle2D @ use @org.apache.lucene.geo.XRectangle2D instead, +, +org.apache.lucene.geo.Tessellator @ use @org.apache.lucene.geo.XTessellator instead, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +, +# Remove once Lucene 7.7 is integrated, +@defaultMessage Use org.apache.lucene.document.XLatLonShape classes instead, +org.apache.lucene.document.LatLonShape, +org.apache.lucene.document.LatLonShapeBoundingBoxQuery, +org.apache.lucene.document.LatLonShapeLineQuery, +org.apache.lucene.document.LatLonShapePolygonQuery, +org.apache.lucene.document.LatLonShapeQuery, +, +org.apache.lucene.geo.Rectangle2D @ use @org.apache.lucene.geo.XRectangle2D instead, +, +org.apache.lucene.geo.Tessellator @ use @org.apache.lucene.geo.XTessellator instead, +++ b/server/src/main/java/org/apache/lucene/document/XLatLonShape.java, +/*, + * Licensed to the Apache Software Foundation (ASF) under one or more, + * contributor license agreements.  See the NOTICE file distributed with, + * this work for additional information regarding copyright ownership., + * The ASF licenses this file to You under the Apache License, Version 2.0, + * (the "License"); you may not use this file except in compliance with, + * the License.  You may obtain a copy of the License at, + *, + *     http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.apache.lucene.document;, +, +import org.apache.lucene.geo.GeoUtils;, +import org.apache.lucene.geo.Line;, +import org.apache.lucene.geo.Polygon;, +import org.apache.lucene.geo.XTessellator;, +import org.apache.lucene.geo.XTessellator.Triangle;, +import org.apache.lucene.index.PointValues;, +import org.apache.lucene.search.Query;, +import org.apache.lucene.util.BytesRef;, +import org.apache.lucene.util.NumericUtils;, +, +import java.util.ArrayList;, +import java.util.List;, +, +import static org.apache.lucene.geo.GeoEncodingUtils.encodeLatitude;, +import static org.apache.lucene.geo.GeoEncodingUtils.encodeLongitude;, +, +/**, + * An indexed shape utility class., + * <p>, + * {@link Polygon}'s are decomposed into a triangular mesh using the {@link XTessellator} utility class, + * Each {@link Triangle} is encoded and indexed as a multi-value field., + * <p>, + * Finding all shapes that intersect a range (e.g., bounding box) at search time is efficient., + * <p>, + * This class defines static factory methods for common operations:, + * <ul>, + *   <li>{@link #createIndexableFields(String, Polygon)} for matching polygons that intersect a bounding box., + *   <li>{@link #newBoxQuery newBoxQuery()} for matching polygons that intersect a bounding box., + * </ul>, +, + * <b>WARNING</b>: Like {@link LatLonPoint}, vertex values are indexed with some loss of precision from the, + * original {@code double} values (4.190951585769653E-8 for the latitude component, + * and 8.381903171539307E-8 for longitude)., + * @see PointValues, + * @see LatLonDocValuesField, + *, + * @lucene.experimental, + */, +public class XLatLonShape {, +  public static final int BYTES = LatLonPoint.BYTES;, +, +  protected static final FieldType TYPE = new FieldType();, +  static {, +    TYPE.setDimensions(7, 4, BYTES);, +    TYPE.freeze();, +  }, +, +  // no instance:, +  private XLatLonShape() {, +  }, +, +  /** create indexable fields for polygon geometry */, +  public static Field[] createIndexableFields(String fieldName, Polygon polygon) {, +    // the lionshare of the indexing is done by the tessellator, +    List<Triangle> tessellation = XTessellator.tessellate(polygon);]