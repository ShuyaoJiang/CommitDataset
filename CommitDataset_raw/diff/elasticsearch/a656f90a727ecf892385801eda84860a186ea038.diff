[+++ b/TESTING.asciidoc, +gradle copyDepsToTestRoot, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/TESTING.asciidoc, +gradle copyDepsToTestRoot, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/Vagrantfile, +export ZIP=/elasticsearch/distribution/zip/build/releases, +export TAR=/elasticsearch/distribution/tar/build/releases, +export RPM=/elasticsearch/distribution/rpm/build/releases, +export DEB=/elasticsearch/distribution/deb/build/releases, +++ b/TESTING.asciidoc, +gradle copyDepsToTestRoot, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/Vagrantfile, +export ZIP=/elasticsearch/distribution/zip/build/releases, +export TAR=/elasticsearch/distribution/tar/build/releases, +export RPM=/elasticsearch/distribution/rpm/build/releases, +export DEB=/elasticsearch/distribution/deb/build/releases, +++ b/build.gradle, +  tasks.cleanIdea {, +    delete '.idea', +  }, +task run(dependsOn: ':distribution:run'), +++ b/TESTING.asciidoc, +gradle copyDepsToTestRoot, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/Vagrantfile, +export ZIP=/elasticsearch/distribution/zip/build/releases, +export TAR=/elasticsearch/distribution/tar/build/releases, +export RPM=/elasticsearch/distribution/rpm/build/releases, +export DEB=/elasticsearch/distribution/deb/build/releases, +++ b/build.gradle, +  tasks.cleanIdea {, +    delete '.idea', +  }, +task run(dependsOn: ':distribution:run'), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestProgressLogger.groovy, +import java.util.concurrent.atomic.AtomicInteger, +import static com.carrotsearch.ant.tasks.junit4.FormattingUtils.formatDurationInSeconds, +, +, +    int totalSuites;, +    AtomicInteger suitesCompleted = new AtomicInteger(), +    AtomicInteger testsCompleted = new AtomicInteger(), +    AtomicInteger testsFailed = new AtomicInteger(), +    AtomicInteger testsIgnored = new AtomicInteger(), +        totalSuites = e.getSuiteCount();, +        progressLogger.progress('Starting JUnit4 with ' + e.getSlaveCount() + ' jvms'), +        final int suitesCompleted = suitesCompleted.incrementAndGet();, +        final int testsCompleted = testsCompleted.addAndGet(e.getDescription().testCount()), +        final int testsFailed = testsFailed.addAndGet(e.getErrorCount() + e.getFailureCount()), +        final int testsIgnored = testsIgnored.addAndGet(e.getIgnoredCount()), +        Description description = e.getDescription(), +        String suiteName = description.getDisplayName();, +        suiteName = suiteName.substring(suiteName.lastIndexOf('.') + 1);, +        progressLogger.progress('Suites [' + suitesCompleted + '/' + totalSuites + '], Tests [' + testsCompleted + '|' + testsFailed + '|' + testsIgnored + '], ' + suiteName + ' on J' + e.getSlave().id + ' in ' + formatDurationInSeconds(e.getExecutionTime())), +++ b/TESTING.asciidoc, +gradle copyDepsToTestRoot, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/Vagrantfile, +export ZIP=/elasticsearch/distribution/zip/build/releases, +export TAR=/elasticsearch/distribution/tar/build/releases, +export RPM=/elasticsearch/distribution/rpm/build/releases, +export DEB=/elasticsearch/distribution/deb/build/releases, +++ b/build.gradle, +  tasks.cleanIdea {, +    delete '.idea', +  }, +task run(dependsOn: ':distribution:run'), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestProgressLogger.groovy, +import java.util.concurrent.atomic.AtomicInteger, +import static com.carrotsearch.ant.tasks.junit4.FormattingUtils.formatDurationInSeconds, +, +, +    int totalSuites;, +    AtomicInteger suitesCompleted = new AtomicInteger(), +    AtomicInteger testsCompleted = new AtomicInteger(), +    AtomicInteger testsFailed = new AtomicInteger(), +    AtomicInteger testsIgnored = new AtomicInteger(), +        totalSuites = e.getSuiteCount();, +        progressLogger.progress('Starting JUnit4 with ' + e.getSlaveCount() + ' jvms'), +        final int suitesCompleted = suitesCompleted.incrementAndGet();, +        final int testsCompleted = testsCompleted.addAndGet(e.getDescription().testCount()), +        final int testsFailed = testsFailed.addAndGet(e.getErrorCount() + e.getFailureCount()), +        final int testsIgnored = testsIgnored.addAndGet(e.getIgnoredCount()), +        Description description = e.getDescription(), +        String suiteName = description.getDisplayName();, +        suiteName = suiteName.substring(suiteName.lastIndexOf('.') + 1);, +        progressLogger.progress('Suites [' + suitesCompleted + '/' + totalSuites + '], Tests [' + testsCompleted + '|' + testsFailed + '|' + testsIgnored + '], ' + suiteName + ' on J' + e.getSlave().id + ' in ' + formatDurationInSeconds(e.getExecutionTime())), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/TESTING.asciidoc, +gradle copyDepsToTestRoot, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE.]