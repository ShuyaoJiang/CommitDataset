[+++ b/docs/plugins/ingest-geoip.asciidoc, +and the `database_file` option should be used to specify the filename of the custom database. Custom database files must be compressed, +with gzip. The geoip config directory is located at `$ES_HOME/config/ingest/geoip` and holds the shipped databases too., +| `database_file`        | no        | GeoLite2-City.mmdb                                                                 | The database filename in the geoip config directory. The ingest-geoip plugin ships with the GeoLite2-City.mmdb.gz and GeoLite2-Country.mmdb.gz files., +++ b/docs/plugins/ingest-geoip.asciidoc, +and the `database_file` option should be used to specify the filename of the custom database. Custom database files must be compressed, +with gzip. The geoip config directory is located at `$ES_HOME/config/ingest/geoip` and holds the shipped databases too., +| `database_file`        | no        | GeoLite2-City.mmdb                                                                 | The database filename in the geoip config directory. The ingest-geoip plugin ships with the GeoLite2-City.mmdb.gz and GeoLite2-Country.mmdb.gz files., +++ b/plugins/ingest-geoip/build.gradle, +  compile ('com.maxmind.geoip2:geoip2:2.7.0'), +  compile('com.maxmind.db:maxmind-db:1.2.1'), +  testCompile 'org.elasticsearch:geolite2-databases:20160608', +  include "*.mmdb.gz", +++ b/docs/plugins/ingest-geoip.asciidoc, +and the `database_file` option should be used to specify the filename of the custom database. Custom database files must be compressed, +with gzip. The geoip config directory is located at `$ES_HOME/config/ingest/geoip` and holds the shipped databases too., +| `database_file`        | no        | GeoLite2-City.mmdb                                                                 | The database filename in the geoip config directory. The ingest-geoip plugin ships with the GeoLite2-City.mmdb.gz and GeoLite2-Country.mmdb.gz files., +++ b/plugins/ingest-geoip/build.gradle, +  compile ('com.maxmind.geoip2:geoip2:2.7.0'), +  compile('com.maxmind.db:maxmind-db:1.2.1'), +  testCompile 'org.elasticsearch:geolite2-databases:20160608', +  include "*.mmdb.gz", +++ /dev/null, +++ b/docs/plugins/ingest-geoip.asciidoc, +and the `database_file` option should be used to specify the filename of the custom database. Custom database files must be compressed, +with gzip. The geoip config directory is located at `$ES_HOME/config/ingest/geoip` and holds the shipped databases too., +| `database_file`        | no        | GeoLite2-City.mmdb                                                                 | The database filename in the geoip config directory. The ingest-geoip plugin ships with the GeoLite2-City.mmdb.gz and GeoLite2-Country.mmdb.gz files., +++ b/plugins/ingest-geoip/build.gradle, +  compile ('com.maxmind.geoip2:geoip2:2.7.0'), +  compile('com.maxmind.db:maxmind-db:1.2.1'), +  testCompile 'org.elasticsearch:geolite2-databases:20160608', +  include "*.mmdb.gz", +++ /dev/null, +++ b/plugins/ingest-geoip/licenses/geoip2-2.7.0.jar.sha1, +2010d922191f5801939b462a5703ab79a7829626, +++ b/docs/plugins/ingest-geoip.asciidoc, +and the `database_file` option should be used to specify the filename of the custom database. Custom database files must be compressed, +with gzip. The geoip config directory is located at `$ES_HOME/config/ingest/geoip` and holds the shipped databases too., +| `database_file`        | no        | GeoLite2-City.mmdb                                                                 | The database filename in the geoip config directory. The ingest-geoip plugin ships with the GeoLite2-City.mmdb.gz and GeoLite2-Country.mmdb.gz files., +++ b/plugins/ingest-geoip/build.gradle, +  compile ('com.maxmind.geoip2:geoip2:2.7.0'), +  compile('com.maxmind.db:maxmind-db:1.2.1'), +  testCompile 'org.elasticsearch:geolite2-databases:20160608', +  include "*.mmdb.gz", +++ /dev/null, +++ b/plugins/ingest-geoip/licenses/geoip2-2.7.0.jar.sha1, +2010d922191f5801939b462a5703ab79a7829626, +++ /dev/null, +++ b/docs/plugins/ingest-geoip.asciidoc, +and the `database_file` option should be used to specify the filename of the custom database. Custom database files must be compressed, +with gzip. The geoip config directory is located at `$ES_HOME/config/ingest/geoip` and holds the shipped databases too., +| `database_file`        | no        | GeoLite2-City.mmdb                                                                 | The database filename in the geoip config directory. The ingest-geoip plugin ships with the GeoLite2-City.mmdb.gz and GeoLite2-Country.mmdb.gz files., +++ b/plugins/ingest-geoip/build.gradle, +  compile ('com.maxmind.geoip2:geoip2:2.7.0'), +  compile('com.maxmind.db:maxmind-db:1.2.1'), +  testCompile 'org.elasticsearch:geolite2-databases:20160608', +  include "*.mmdb.gz", +++ /dev/null, +++ b/plugins/ingest-geoip/licenses/geoip2-2.7.0.jar.sha1, +2010d922191f5801939b462a5703ab79a7829626, +++ /dev/null, +++ b/plugins/ingest-geoip/licenses/maxmind-db-1.2.1.jar.sha1, +64b6b6a8c162fc9b0004fcdf9641cf1b408ffa33, +++ b/docs/plugins/ingest-geoip.asciidoc, +and the `database_file` option should be used to specify the filename of the custom database. Custom database files must be compressed, +with gzip. The geoip config directory is located at `$ES_HOME/config/ingest/geoip` and holds the shipped databases too., +| `database_file`        | no        | GeoLite2-City.mmdb                                                                 | The database filename in the geoip config directory. The ingest-geoip plugin ships with the GeoLite2-City.mmdb.gz and GeoLite2-Country.mmdb.gz files., +++ b/plugins/ingest-geoip/build.gradle, +  compile ('com.maxmind.geoip2:geoip2:2.7.0'), +  compile('com.maxmind.db:maxmind-db:1.2.1'), +  testCompile 'org.elasticsearch:geolite2-databases:20160608', +  include "*.mmdb.gz", +++ /dev/null, +++ b/plugins/ingest-geoip/licenses/geoip2-2.7.0.jar.sha1, +2010d922191f5801939b462a5703ab79a7829626, +++ /dev/null, +++ b/plugins/ingest-geoip/licenses/maxmind-db-1.2.1.jar.sha1, +64b6b6a8c162fc9b0004fcdf9641cf1b408ffa33, +++ b/plugins/ingest-geoip/src/main/java/org/elasticsearch/ingest/geoip/GeoIpProcessor.java, +            String databaseFile = readStringProperty(TYPE, processorTag, config, "database_file", "GeoLite2-City.mmdb.gz");, +++ b/docs/plugins/ingest-geoip.asciidoc, +and the `database_file` option should be used to specify the filename of the custom database. Custom database files must be compressed, +with gzip. The geoip config directory is located at `$ES_HOME/config/ingest/geoip` and holds the shipped databases too., +| `database_file`        | no        | GeoLite2-City.mmdb                                                                 | The database filename in the geoip config directory. The ingest-geoip plugin ships with the GeoLite2-City.mmdb.gz and GeoLite2-Country.mmdb.gz files., +++ b/plugins/ingest-geoip/build.gradle, +  compile ('com.maxmind.geoip2:geoip2:2.7.0'), +  compile('com.maxmind.db:maxmind-db:1.2.1'), +  testCompile 'org.elasticsearch:geolite2-databases:20160608', +  include "*.mmdb.gz", +++ /dev/null, +++ b/plugins/ingest-geoip/licenses/geoip2-2.7.0.jar.sha1, +2010d922191f5801939b462a5703ab79a7829626, +++ /dev/null, +++ b/plugins/ingest-geoip/licenses/maxmind-db-1.2.1.jar.sha1, +64b6b6a8c162fc9b0004fcdf9641cf1b408ffa33, +++ b/plugins/ingest-geoip/src/main/java/org/elasticsearch/ingest/geoip/GeoIpProcessor.java, +            String databaseFile = readStringProperty(TYPE, processorTag, config, "database_file", "GeoLite2-City.mmdb.gz");, +++ b/plugins/ingest-geoip/src/main/java/org/elasticsearch/ingest/geoip/IngestGeoIpPlugin.java, +import java.util.zip.GZIPInputStream;, +            PathMatcher pathMatcher = geoIpConfigDirectory.getFileSystem().getPathMatcher("glob:**.mmdb.gz");]