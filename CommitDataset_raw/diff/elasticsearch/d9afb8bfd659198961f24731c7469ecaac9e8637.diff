[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/TasksIT.java, +        ListTasksResponse response = client().admin().cluster().prepareListTasks("data:true").setActions(ListTasksAction.NAME + "[n]"), +                .get();, +                // This shard level task runs on another node - it should have a corresponding shard level task on the node where main task, +                // is running, +                List<TaskInfo> sTasksOnRequestingNode = findEvents(RefreshAction.NAME + "[s]", event -> event.v1(), +                        && mainTask.getNode().equals(event.v2().getNode()) && description.equals(event.v2().getDescription()));, +                sTask = findEvents(RefreshAction.NAME + "[s]", event -> event.v1() && taskInfo.getNode().equals(event.v2().getNode()), +                        && taskInfo.getDescription().equals(event.v2().getDescription()));, +        ListenableActionFuture<TestTaskPlugin.NodesResponse> future = TestTaskPlugin.TestTaskAction.INSTANCE.newRequestBuilder(client()), +                .execute();, +        CancelTasksResponse cancelTasksResponse = client().admin().cluster().prepareCancelTasks(), +                .setActions(TestTaskPlugin.TestTaskAction.NAME).get();, +        assertEquals(0,, +                client().admin().cluster().prepareListTasks().setActions(TestTaskPlugin.TestTaskAction.NAME + "*").get().getTasks().size());, +        ListenableActionFuture<TestTaskPlugin.NodesResponse> future = TestTaskPlugin.TestTaskAction.INSTANCE.newRequestBuilder(client()), +                .execute();, +        assertEquals(0, client().admin().cluster().prepareListTasks().setActions(TestTaskPlugin.TestTaskAction.NAME + "[n]").get(), +                .getTasks().size());, +            assertBusy(() -> assertEquals(internalCluster().numDataAndMasterNodes(), client().admin().cluster().prepareListTasks(), +                    .setActions(TestTaskPlugin.TestTaskAction.NAME + "[n]").get().getTasks().size()));, +            assertBusy(() -> assertEquals(internalCluster().numDataAndMasterNodes(), client().admin().cluster().prepareListTasks(), +                    .setActions(TestTaskPlugin.TestTaskAction.NAME + "[n]").get().getTasks().size()));, +            ((MockTaskManager) internalCluster().getInstance(TransportService.class, entry.getKey().v1()).getTaskManager()), +                    .removeListener(entry.getValue());]