[+++ b/docs/reference/query-dsl/script-score-query.asciidoc, +NOTE: The values returned from `script_score` cannot be negative. In general,, +Lucene requires the scores produced by queries to be non-negative in order to, +support certain search optimizations., +, +        "source": "cosineSimilarity(params.query_vector, doc['my_dense_vector']) + 1.0" <1>,, +          "query_vector": [4, 3.4, -0.2]  <2>, +<1> The script adds 1.0 to the cosine similarity to prevent the score from being negative., +<2> To take advantage of the script optimizations, provide a query vector as a script parameter., +        "source": "cosineSimilaritySparse(params.query_vector, doc['my_sparse_vector']) + 1.0",, +          "query_vector": {"2": 0.5, "10" : 111.3, "50": -1.3, "113": 14.8, "4545": 156.0}, +        "source": """, +          double value = dotProduct(params.query_vector, doc['my_vector']);, +          return sigmoid(1, Math.E, -value); <1>, +        """,, +          "query_vector": [4, 3.4, -0.2], +<1> Using the standard sigmoid function prevents scores from being negative., +, +        "source": """, +          double value = dotProductSparse(params.query_vector, doc['my_sparse_vector']);, +          return sigmoid(1, Math.E, -value);, +        """,, +          "query_vector": {"2": 0.5, "10" : 111.3, "50": -1.3, "113": 14.8, "4545": 156.0}]