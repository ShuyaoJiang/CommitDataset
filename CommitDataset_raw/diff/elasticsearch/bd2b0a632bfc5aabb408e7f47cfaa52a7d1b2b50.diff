[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/JsonFilterBuilders.java, +    public static TermsJsonFilterBuilder termsFilter(String name, String... values) {, +        return new TermsJsonFilterBuilder(name, values);, +    }, +, +    public static TermsJsonFilterBuilder termsFilter(String name, int... values) {, +        return new TermsJsonFilterBuilder(name, values);, +    }, +, +    public static TermsJsonFilterBuilder termsFilter(String name, long... values) {, +        return new TermsJsonFilterBuilder(name, values);, +    }, +, +    public static TermsJsonFilterBuilder termsFilter(String name, float... values) {, +        return new TermsJsonFilterBuilder(name, values);, +    }, +, +    public static TermsJsonFilterBuilder termsFilter(String name, double... values) {, +        return new TermsJsonFilterBuilder(name, values);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/JsonFilterBuilders.java, +    public static TermsJsonFilterBuilder termsFilter(String name, String... values) {, +        return new TermsJsonFilterBuilder(name, values);, +    }, +, +    public static TermsJsonFilterBuilder termsFilter(String name, int... values) {, +        return new TermsJsonFilterBuilder(name, values);, +    }, +, +    public static TermsJsonFilterBuilder termsFilter(String name, long... values) {, +        return new TermsJsonFilterBuilder(name, values);, +    }, +, +    public static TermsJsonFilterBuilder termsFilter(String name, float... values) {, +        return new TermsJsonFilterBuilder(name, values);, +    }, +, +    public static TermsJsonFilterBuilder termsFilter(String name, double... values) {, +        return new TermsJsonFilterBuilder(name, values);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/JsonQueryParserRegistry.java, +        add(filterParsersMap, new TermsJsonFilterParser(index, indexSettings));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/JsonFilterBuilders.java, +    public static TermsJsonFilterBuilder termsFilter(String name, String... values) {, +        return new TermsJsonFilterBuilder(name, values);, +    }, +, +    public static TermsJsonFilterBuilder termsFilter(String name, int... values) {, +        return new TermsJsonFilterBuilder(name, values);, +    }, +, +    public static TermsJsonFilterBuilder termsFilter(String name, long... values) {, +        return new TermsJsonFilterBuilder(name, values);, +    }, +, +    public static TermsJsonFilterBuilder termsFilter(String name, float... values) {, +        return new TermsJsonFilterBuilder(name, values);, +    }, +, +    public static TermsJsonFilterBuilder termsFilter(String name, double... values) {, +        return new TermsJsonFilterBuilder(name, values);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/JsonQueryParserRegistry.java, +        add(filterParsersMap, new TermsJsonFilterParser(index, indexSettings));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/TermsJsonFilterBuilder.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.index.query.json;, +, +import org.elasticsearch.util.json.JsonBuilder;, +, +import java.io.IOException;, +, +/**, + * @author kimchy (Shay Banon), + */, +public class TermsJsonFilterBuilder extends BaseJsonFilterBuilder {, +, +    private final String name;, +]