[+++ b/core/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortParser.java, +                } else if ("ignore_malformed".equals(currentName)) {, +                    boolean ignoreMalformedFlag = parser.booleanValue();, +                    if (coerce == false) {, +                        ignoreMalformed = ignoreMalformedFlag;, +                    }, +++ b/core/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortParser.java, +                } else if ("ignore_malformed".equals(currentName)) {, +                    boolean ignoreMalformedFlag = parser.booleanValue();, +                    if (coerce == false) {, +                        ignoreMalformed = ignoreMalformedFlag;, +                    }, +++ b/core/src/test/java/org/elasticsearch/search/sort/GeoDistanceSortBuilderIT.java, +, +        searchResponse = client(), +                .prepareSearch(), +                .setSource(, +                        new SearchSourceBuilder().sort(SortBuilders.geoDistanceSort("location", 2.0, 2.0), +                                .unit(DistanceUnit.KILOMETERS).geoDistance(GeoDistance.PLANE), +                                .ignoreMalformed(true).coerce(true))).execute().actionGet();, +        checkCorrectSortOrderForGeoSort(searchResponse);]