[+++ b/core/src/main/java/org/elasticsearch/search/SearchService.java, +            public void afterIndexClosed(Index index, @IndexSettings Settings indexSettings) {, +++ b/core/src/main/java/org/elasticsearch/search/SearchService.java, +            public void afterIndexClosed(Index index, @IndexSettings Settings indexSettings) {, +++ b/core/src/test/java/org/elasticsearch/search/scroll/SearchScrollTests.java, +import java.io.IOException;, +    public void testCloseAndReopenOrDeleteWithActiveScroll() throws IOException {, +        createIndex("test");, +        for (int i = 0; i < 100; i++) {, +            client().prepareIndex("test", "type1", Integer.toString(i)).setSource(jsonBuilder().startObject().field("field", i).endObject()).execute().actionGet();, +        }, +        refresh();, +        SearchResponse searchResponse = client().prepareSearch(), +                .setQuery(matchAllQuery()), +                .setSize(35), +                .setScroll(TimeValue.timeValueMinutes(2)), +                .addSort("field", SortOrder.ASC), +                .execute().actionGet();, +        long counter = 0;, +        assertThat(searchResponse.getHits().getTotalHits(), equalTo(100l));, +        assertThat(searchResponse.getHits().hits().length, equalTo(35));, +        for (SearchHit hit : searchResponse.getHits()) {, +            assertThat(((Number) hit.sortValues()[0]).longValue(), equalTo(counter++));, +        }, +        if (randomBoolean()) {, +            client().admin().indices().prepareClose("test").get();, +            client().admin().indices().prepareOpen("test").get();, +            ensureGreen("test");, +        } else {, +            client().admin().indices().prepareDelete("test").get();, +        }, +    }, +]