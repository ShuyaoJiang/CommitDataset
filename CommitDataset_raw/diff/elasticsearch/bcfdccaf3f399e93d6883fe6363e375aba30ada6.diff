[+++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/integration/MlRestTestStateCleaner.java, +import org.elasticsearch.client.Request;, +import org.elasticsearch.client.Response;, +        final Request datafeedsRequest = new Request("GET", "/_xpack/ml/datafeeds");, +        datafeedsRequest.addParameter("filter_path", "datafeeds");, +        final Response datafeedsResponse = adminClient.performRequest(datafeedsRequest);, +        @SuppressWarnings("unchecked"), +        final List<Map<String, Object>> datafeeds =, +                (List<Map<String, Object>>) XContentMapValues.extractValue("datafeeds", testCase.entityAsMap(datafeedsResponse));, +        final Request jobsRequest = new Request("GET", "/_xpack/ml/anomaly_detectors");, +        jobsRequest.addParameter("filter_path", "jobs");, +        final Response response = adminClient.performRequest(jobsRequest);, +        final List<Map<String, Object>> jobConfigs =, +                (List<Map<String, Object>>) XContentMapValues.extractValue("jobs", testCase.entityAsMap(response));, +++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/integration/MlRestTestStateCleaner.java, +import org.elasticsearch.client.Request;, +import org.elasticsearch.client.Response;, +        final Request datafeedsRequest = new Request("GET", "/_xpack/ml/datafeeds");, +        datafeedsRequest.addParameter("filter_path", "datafeeds");, +        final Response datafeedsResponse = adminClient.performRequest(datafeedsRequest);, +        @SuppressWarnings("unchecked"), +        final List<Map<String, Object>> datafeeds =, +                (List<Map<String, Object>>) XContentMapValues.extractValue("datafeeds", testCase.entityAsMap(datafeedsResponse));, +        final Request jobsRequest = new Request("GET", "/_xpack/ml/anomaly_detectors");, +        jobsRequest.addParameter("filter_path", "jobs");, +        final Response response = adminClient.performRequest(jobsRequest);, +        final List<Map<String, Object>> jobConfigs =, +                (List<Map<String, Object>>) XContentMapValues.extractValue("jobs", testCase.entityAsMap(response));, +++ b/x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/support/BaseMlIntegTestCase.java, +import org.elasticsearch.xpack.core.ml.action.GetDatafeedsAction;, +import org.elasticsearch.xpack.core.ml.action.GetJobsAction;, +import org.elasticsearch.xpack.core.ml.action.util.QueryPage;, +import org.elasticsearch.xpack.core.ml.client.MachineLearningClient;, +        final MachineLearningClient mlClient = new MachineLearningClient(client);, +        final QueryPage<DatafeedConfig> datafeeds =, +                mlClient.getDatafeeds(new GetDatafeedsAction.Request(GetDatafeedsAction.ALL)).actionGet().getResponse();, +        for (final DatafeedConfig datafeed : datafeeds.results()) {, +                    GetDatafeedsStatsAction.Request request = new GetDatafeedsStatsAction.Request(datafeed.getId());, +                    client.execute(DeleteDatafeedAction.INSTANCE, new DeleteDatafeedAction.Request(datafeed.getId())).get();, +        final MachineLearningClient mlClient = new MachineLearningClient(client);, +        final QueryPage<Job> jobs = mlClient.getJobs(new GetJobsAction.Request(MetaData.ALL)).actionGet().getResponse();, +        for (final Job job : jobs.results()) {, +                        client().execute(GetJobsStatsAction.INSTANCE, new GetJobsStatsAction.Request(job.getId())).actionGet();, +                    client.execute(DeleteJobAction.INSTANCE, new DeleteJobAction.Request(job.getId())).get();, +++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/integration/MlRestTestStateCleaner.java, +import org.elasticsearch.client.Request;, +import org.elasticsearch.client.Response;, +        final Request datafeedsRequest = new Request("GET", "/_xpack/ml/datafeeds");, +        datafeedsRequest.addParameter("filter_path", "datafeeds");, +        final Response datafeedsResponse = adminClient.performRequest(datafeedsRequest);, +        @SuppressWarnings("unchecked"), +        final List<Map<String, Object>> datafeeds =, +                (List<Map<String, Object>>) XContentMapValues.extractValue("datafeeds", testCase.entityAsMap(datafeedsResponse));, +        final Request jobsRequest = new Request("GET", "/_xpack/ml/anomaly_detectors");, +        jobsRequest.addParameter("filter_path", "jobs");, +        final Response response = adminClient.performRequest(jobsRequest);, +        final List<Map<String, Object>> jobConfigs =, +                (List<Map<String, Object>>) XContentMapValues.extractValue("jobs", testCase.entityAsMap(response));, +++ b/x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/support/BaseMlIntegTestCase.java, +import org.elasticsearch.xpack.core.ml.action.GetDatafeedsAction;, +import org.elasticsearch.xpack.core.ml.action.GetJobsAction;, +import org.elasticsearch.xpack.core.ml.action.util.QueryPage;, +import org.elasticsearch.xpack.core.ml.client.MachineLearningClient;, +        final MachineLearningClient mlClient = new MachineLearningClient(client);, +        final QueryPage<DatafeedConfig> datafeeds =, +                mlClient.getDatafeeds(new GetDatafeedsAction.Request(GetDatafeedsAction.ALL)).actionGet().getResponse();, +        for (final DatafeedConfig datafeed : datafeeds.results()) {, +                    GetDatafeedsStatsAction.Request request = new GetDatafeedsStatsAction.Request(datafeed.getId());, +                    client.execute(DeleteDatafeedAction.INSTANCE, new DeleteDatafeedAction.Request(datafeed.getId())).get();, +        final MachineLearningClient mlClient = new MachineLearningClient(client);, +        final QueryPage<Job> jobs = mlClient.getJobs(new GetJobsAction.Request(MetaData.ALL)).actionGet().getResponse();, +        for (final Job job : jobs.results()) {, +                        client().execute(GetJobsStatsAction.INSTANCE, new GetJobsStatsAction.Request(job.getId())).actionGet();, +                    client.execute(DeleteJobAction.INSTANCE, new DeleteJobAction.Request(job.getId())).get();, +++ b/x-pack/plugin/src/test/resources/rest-api-spec/test/ml/jobs_crud.yml, +      xpack.ml.get_job_stats:, +        job_id: jobs-crud-close-job, +  - match: {"jobs.0.state": opened}, +      xpack.ml.get_job_stats:, +        job_id: jobs-crud-close-job, +  - match: {"jobs.0.state": closed}, +      xpack.ml.get_job_stats:, +        job_id: jobs-crud-force-close-job, +  - match: {"jobs.0.state": opened}, +      xpack.ml.get_job_stats:, +        job_id: jobs-crud-force-close-job, +  - match: {"jobs.0.state": closed}]