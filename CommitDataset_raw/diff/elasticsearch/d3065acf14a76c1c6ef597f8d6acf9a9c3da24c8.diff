[+++ b/src/test/java/org/elasticsearch/ttl/SimpleTTLTests.java, +import org.elasticsearch.action.index.IndexResponse;, +@ClusterScope(scope=Scope.SUITE, numNodes = 1), +        ensureYellow("test");, +        IndexResponse indexResponse = client().prepareIndex("test", "type1", "1").setSource("field1", "value1"), +                .setTimestamp(String.valueOf(now)).setTTL(providedTTLValue).setRefresh(true).get();, +        assertThat(indexResponse.isCreated(), is(true));, +        indexResponse = client().prepareIndex("test", "type1", "with_routing").setSource("field1", "value1"), +                .setTimestamp(String.valueOf(now)).setTTL(providedTTLValue).setRouting("routing").setRefresh(true).get();, +        assertThat(indexResponse.isCreated(), is(true));, +        indexResponse = client().prepareIndex("test", "type1", "no_ttl").setSource("field1", "value1").get();, +        assertThat(indexResponse.isCreated(), is(true));, +        indexResponse = client().prepareIndex("test", "type2", "default_ttl").setSource("field1", "value1").get();, +        assertThat(indexResponse.isCreated(), is(true));, +        GetResponse getResponse = client().prepareGet("test", "type1", "1").setFields("_ttl").get();, +            assertThat(ttl0, lessThanOrEqualTo(providedTTLValue - (currentTime - now)));, +            assertThat(providedTTLValue - (currentTime - now), lessThanOrEqualTo(0l));, +        getResponse = client().prepareGet("test", "type1", "1").setFields("_ttl").get();, +            assertThat(ttl0, lessThanOrEqualTo(providedTTLValue - (currentTime - now)));, +            assertThat(providedTTLValue - (currentTime - now), lessThanOrEqualTo(0l));, +        getResponse = client().prepareGet("test", "type1", "1").setFields("_ttl").setRealtime(false).get();, +            assertThat(ttl0, lessThanOrEqualTo(providedTTLValue - (currentTime - now)));, +            assertThat(providedTTLValue - (currentTime - now), lessThanOrEqualTo(0l));, +        getResponse = client().prepareGet("test", "type1", "1").setFields("_ttl").setRealtime(false).get();, +            assertThat(ttl0, lessThanOrEqualTo(providedTTLValue - (currentTime - now)));, +            assertThat(providedTTLValue - (currentTime - now), lessThanOrEqualTo(0l));]