[+++ b/core/src/main/java/org/elasticsearch/action/support/single/instance/TransportInstanceSingleOperationAction.java, +, +     * Resolves the request. Throws an exception if the request cannot be resolved., +    protected abstract void resolveRequest(ClusterState state, Request request);, +                resolveRequest(observer.observedState(), request);, +++ b/core/src/main/java/org/elasticsearch/action/support/single/instance/TransportInstanceSingleOperationAction.java, +, +     * Resolves the request. Throws an exception if the request cannot be resolved., +    protected abstract void resolveRequest(ClusterState state, Request request);, +                resolveRequest(observer.observedState(), request);, +++ b/core/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +    protected void resolveRequest(ClusterState state, UpdateRequest request) {, +++ b/core/src/main/java/org/elasticsearch/action/support/single/instance/TransportInstanceSingleOperationAction.java, +, +     * Resolves the request. Throws an exception if the request cannot be resolved., +    protected abstract void resolveRequest(ClusterState state, Request request);, +                resolveRequest(observer.observedState(), request);, +++ b/core/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +    protected void resolveRequest(ClusterState state, UpdateRequest request) {, +++ b/core/src/test/java/org/elasticsearch/action/support/single/instance/TransportInstanceSingleOperationActionTests.java, +        protected void resolveRequest(ClusterState state, Request request) {, +                new ActionFilters(new HashSet<>()),, +            protected void resolveRequest(ClusterState state, Request request) {, +                throw new IllegalStateException("request cannot be resolved");]