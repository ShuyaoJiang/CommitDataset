[+++ b/server/src/main/java/org/elasticsearch/cluster/service/ClusterApplier.java, +    void onNewClusterState(String source, Supplier<ClusterState> clusterStateSupplier, ClusterApplyListener listener);, +    /**, +     * Listener for results of cluster state application, +     */, +    interface ClusterApplyListener {, +        /**, +         * Called on successful cluster state application, +         * @param source information where the cluster state came from, +         */, +        default void onSuccess(String source) {, +        }, +, +        /**, +         * Called on failure during cluster state application, +         * @param source information where the cluster state came from, +         * @param e exception that occurred, +         */, +        void onFailure(String source, Exception e);, +    }, +++ b/server/src/main/java/org/elasticsearch/cluster/service/ClusterApplier.java, +    void onNewClusterState(String source, Supplier<ClusterState> clusterStateSupplier, ClusterApplyListener listener);, +    /**, +     * Listener for results of cluster state application, +     */, +    interface ClusterApplyListener {, +        /**, +         * Called on successful cluster state application, +         * @param source information where the cluster state came from, +         */, +        default void onSuccess(String source) {, +        }, +, +        /**, +         * Called on failure during cluster state application, +         * @param source information where the cluster state came from, +         * @param e exception that occurred, +         */, +        void onFailure(String source, Exception e);, +    }, +++ b/server/src/main/java/org/elasticsearch/cluster/service/ClusterApplierService.java, +        final ClusterApplyListener listener;, +        UpdateTask(Priority priority, String source, ClusterApplyListener listener,, +                                   final ClusterApplyListener listener, Priority priority) {, +                                   final ClusterApplyListener listener) {, +                                  final ClusterApplyListener listener) {, +                                       final ClusterApplyListener listener) {, +            UpdateTask updateTask = new UpdateTask(config.priority(), source, new SafeClusterApplyListener(listener, logger), executor);, +            task.listener.onSuccess(task.source);, +        task.listener.onSuccess(task.source);, +    private static class SafeClusterApplyListener implements ClusterApplyListener {, +        private final ClusterApplyListener listener;, +        SafeClusterApplyListener(ClusterApplyListener listener, Logger logger) {, +        public void onSuccess(String source) {, +                listener.onSuccess(source);, +                    "exception thrown by listener while notifying of cluster state processed from [{}]", source), e);, +++ b/server/src/main/java/org/elasticsearch/cluster/service/ClusterApplier.java, +    void onNewClusterState(String source, Supplier<ClusterState> clusterStateSupplier, ClusterApplyListener listener);, +    /**, +     * Listener for results of cluster state application, +     */, +    interface ClusterApplyListener {, +        /**, +         * Called on successful cluster state application, +         * @param source information where the cluster state came from, +         */, +        default void onSuccess(String source) {, +        }, +, +        /**, +         * Called on failure during cluster state application, +         * @param source information where the cluster state came from, +         * @param e exception that occurred, +         */, +        void onFailure(String source, Exception e);, +    }, +++ b/server/src/main/java/org/elasticsearch/cluster/service/ClusterApplierService.java, +        final ClusterApplyListener listener;, +        UpdateTask(Priority priority, String source, ClusterApplyListener listener,, +                                   final ClusterApplyListener listener, Priority priority) {, +                                   final ClusterApplyListener listener) {, +                                  final ClusterApplyListener listener) {, +                                       final ClusterApplyListener listener) {, +            UpdateTask updateTask = new UpdateTask(config.priority(), source, new SafeClusterApplyListener(listener, logger), executor);, +            task.listener.onSuccess(task.source);, +        task.listener.onSuccess(task.source);, +    private static class SafeClusterApplyListener implements ClusterApplyListener {, +        private final ClusterApplyListener listener;, +        SafeClusterApplyListener(ClusterApplyListener listener, Logger logger) {, +        public void onSuccess(String source) {, +                listener.onSuccess(source);, +                    "exception thrown by listener while notifying of cluster state processed from [{}]", source), e);, +++ b/server/src/main/java/org/elasticsearch/discovery/single/SingleNodeDiscovery.java, +import org.elasticsearch.cluster.service.ClusterApplier.ClusterApplyListener;, +        ClusterApplyListener listener = new ClusterApplyListener() {, +            public void onSuccess(String source) {, +++ b/server/src/main/java/org/elasticsearch/cluster/service/ClusterApplier.java, +    void onNewClusterState(String source, Supplier<ClusterState> clusterStateSupplier, ClusterApplyListener listener);, +    /**, +     * Listener for results of cluster state application]