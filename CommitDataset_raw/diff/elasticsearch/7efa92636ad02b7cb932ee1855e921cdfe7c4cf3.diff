[+++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/DocIdOrdinals.java, +import org.apache.lucene.util.IntsRef;, +        private final IntsRef intsScratch = new IntsRef(new int[1], 0, 1);, +        public IntsRef getOrds(int docId) {, +            intsScratch.ints[0] = docId + 1;, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/DocIdOrdinals.java, +import org.apache.lucene.util.IntsRef;, +        private final IntsRef intsScratch = new IntsRef(new int[1], 0, 1);, +        public IntsRef getOrds(int docId) {, +            intsScratch.ints[0] = docId + 1;, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/EmptyOrdinals.java, +import org.apache.lucene.util.IntsRef;, +        public static final IntsRef EMPTY_INTS_REF = new IntsRef();, +        public IntsRef getOrds(int docId) {, +            return EMPTY_INTS_REF;, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/DocIdOrdinals.java, +import org.apache.lucene.util.IntsRef;, +        private final IntsRef intsScratch = new IntsRef(new int[1], 0, 1);, +        public IntsRef getOrds(int docId) {, +            intsScratch.ints[0] = docId + 1;, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/EmptyOrdinals.java, +import org.apache.lucene.util.IntsRef;, +        public static final IntsRef EMPTY_INTS_REF = new IntsRef();, +        public IntsRef getOrds(int docId) {, +            return EMPTY_INTS_REF;, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiFlatArrayOrdinals.java, +import org.apache.lucene.util.IntsRef;, +        private final IntsRef intsScratch;, +            this.intsScratch = new IntsRef(new int[16], 0 , 16);, +        public IntsRef getOrds(int docId) {, +            intsScratch.offset = 0;, +                    if (i == 0) {, +                        intsScratch.length = 0;, +                        return intsScratch;, +                    }, +                intsScratch.grow(i+1);, +                intsScratch.ints[i] = ordinal;, +            intsScratch.length = i;, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/DocIdOrdinals.java, +import org.apache.lucene.util.IntsRef;, +        private final IntsRef intsScratch = new IntsRef(new int[1], 0, 1);, +        public IntsRef getOrds(int docId) {, +            intsScratch.ints[0] = docId + 1;, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/EmptyOrdinals.java, +import org.apache.lucene.util.IntsRef;, +        public static final IntsRef EMPTY_INTS_REF = new IntsRef();, +        public IntsRef getOrds(int docId) {, +            return EMPTY_INTS_REF;, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiFlatArrayOrdinals.java, +import org.apache.lucene.util.IntsRef;, +        private final IntsRef intsScratch;, +            this.intsScratch = new IntsRef(new int[16], 0 , 16);, +        public IntsRef getOrds(int docId) {, +            intsScratch.offset = 0;, +                    if (i == 0) {, +                        intsScratch.length = 0;, +                        return intsScratch;, +                    }, +                intsScratch.grow(i+1);, +                intsScratch.ints[i] = ordinal;, +            intsScratch.length = i;, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/Ordinals.java, +import org.apache.lucene.util.IntsRef;, +        IntsRef getOrds(int docId);, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/DocIdOrdinals.java, +import org.apache.lucene.util.IntsRef;, +        private final IntsRef intsScratch = new IntsRef(new int[1], 0, 1);, +        public IntsRef getOrds(int docId) {, +            intsScratch.ints[0] = docId + 1;, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/EmptyOrdinals.java, +import org.apache.lucene.util.IntsRef;, +        public static final IntsRef EMPTY_INTS_REF = new IntsRef();, +        public IntsRef getOrds(int docId) {, +            return EMPTY_INTS_REF;, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiFlatArrayOrdinals.java, +import org.apache.lucene.util.IntsRef;, +        private final IntsRef intsScratch;, +            this.intsScratch = new IntsRef(new int[16], 0 , 16);, +        public IntsRef getOrds(int docId) {, +            intsScratch.offset = 0;, +                    if (i == 0) {, +                        intsScratch.length = 0;, +                        return intsScratch;, +                    }, +                intsScratch.grow(i+1);, +                intsScratch.ints[i] = ordinal;, +            intsScratch.length = i;, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/Ordinals.java, +import org.apache.lucene.util.IntsRef;, +        IntsRef getOrds(int docId);, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/OrdinalsBuilder.java, +import org.apache.lucene.util.IntsRef;, +import org.apache.lucene.util.NumericUtils;, +    private final IntsRef intsRef = new IntsRef(1);, +                final IntsRef docOrds = docOrds(i);, +                while (ordinalBuffer.size() < docOrds.length) {, +                , +                for (int j = docOrds.offset; j < docOrds.offset+docOrds.length; j++) {, +                    ordinalBuffer.get(j)[i] = docOrds.ints[j];, +     * Returns a shared {@link IntsRef} instance for the given doc ID holding all ordinals associated with it.]