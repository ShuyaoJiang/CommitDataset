[+++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0))))), +++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0))))), +++ b/.gitignore, +eclipse-build, +generated-resources/, +, +++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0))))), +++ b/.gitignore, +eclipse-build, +generated-resources/, +, +++ b/.projectile, +-/plugins/discovery-multicast/target, +++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0))))), +++ b/.gitignore, +eclipse-build, +generated-resources/, +, +++ b/.projectile, +-/plugins/discovery-multicast/target, +++ b/build.gradle, +    // for eclipse hacks..., +      // same as for the IntelliJ Gradle tooling integration, +      outputDir = file('build/classes/main'), +      testOutputDir = file('build/classes/test'), +    eclipse.classpath.defaultOutputDir = new File(project.buildDir, 'eclipse'), +        folder.output = "build/eclipse/" + i, +++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0))))), +++ b/.gitignore, +eclipse-build, +generated-resources/, +, +++ b/.projectile, +-/plugins/discovery-multicast/target, +++ b/build.gradle, +    // for eclipse hacks..., +      // same as for the IntelliJ Gradle tooling integration, +      outputDir = file('build/classes/main'), +      testOutputDir = file('build/classes/test'), +    eclipse.classpath.defaultOutputDir = new File(project.buildDir, 'eclipse'), +        folder.output = "build/eclipse/" + i, +++ b/buildSrc/build.gradle, +    defaultOutputDir = new File(file('build'), 'eclipse'), +++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0))))), +++ b/.gitignore, +eclipse-build, +generated-resources/, +, +++ b/.projectile, +-/plugins/discovery-multicast/target, +++ b/build.gradle, +    // for eclipse hacks..., +      // same as for the IntelliJ Gradle tooling integration, +      outputDir = file('build/classes/main'), +      testOutputDir = file('build/classes/test'), +    eclipse.classpath.defaultOutputDir = new File(project.buildDir, 'eclipse'), +        folder.output = "build/eclipse/" + i, +++ b/buildSrc/build.gradle, +    defaultOutputDir = new File(file('build'), 'eclipse'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            String gradleJavaVersionDetails = "${System.getProperty('java.vendor')} ${System.getProperty('java.version')}" +, +            String javaVersion = System.getProperty('java.version'), +            String revision = (luceneVersion =~ /\w+-snapshot-(\d+)/)[0][1], +++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0))))), +++ b/.gitignore, +eclipse-build, +generated-resources/, +, +++ b/.projectile, +-/plugins/discovery-multicast/target, +++ b/build.gradle, +    // for eclipse hacks..., +      // same as for the IntelliJ Gradle tooling integration, +      outputDir = file('build/classes/main'), +      testOutputDir = file('build/classes/test'), +    eclipse.classpath.defaultOutputDir = new File(project.buildDir, 'eclipse'), +        folder.output = "build/eclipse/" + i, +++ b/buildSrc/build.gradle, +    defaultOutputDir = new File(file('build'), 'eclipse'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            String gradleJavaVersionDetails = "${System.getProperty('java.vendor')} ${System.getProperty('java.version')}" +, +            String javaVersion = System.getProperty('java.version'), +            String revision = (luceneVersion =~ /\w+-snapshot-(\d+)/)[0][1], +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +    File generatedResourcesDir = new File(project.projectDir, 'generated-resources'), +++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0))))), +++ b/.gitignore, +eclipse-build, +generated-resources/, +, +++ b/.projectile, +-/plugins/discovery-multicast/target]