[+++ b/server/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +        docs = in.readOptionalWriteable(DocsStats::new);, +        store = in.readOptionalWriteable(StoreStats::new);, +        indexing = in.readOptionalWriteable(IndexingStats::new);, +        get = in.readOptionalWriteable(GetStats::new);, +        merge = in.readOptionalWriteable(MergeStats::new);, +        refresh = in.readOptionalWriteable(RefreshStats::new);, +        flush = in.readOptionalWriteable(FlushStats::new);, +        warmer = in.readOptionalWriteable(WarmerStats::new);, +        queryCache = in.readOptionalWriteable(QueryCacheStats::new);, +        fieldData = in.readOptionalWriteable(FieldDataStats::new);, +        completion = in.readOptionalWriteable(CompletionStats::new);, +        segments = in.readOptionalWriteable(SegmentsStats::new);, +        translog = in.readOptionalWriteable(TranslogStats::new);, +        requestCache = in.readOptionalWriteable(RequestCacheStats::new);, +        recoveryStats = in.readOptionalWriteable(RecoveryStats::new);, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +        docs = in.readOptionalWriteable(DocsStats::new);, +        store = in.readOptionalWriteable(StoreStats::new);, +        indexing = in.readOptionalWriteable(IndexingStats::new);, +        get = in.readOptionalWriteable(GetStats::new);, +        merge = in.readOptionalWriteable(MergeStats::new);, +        refresh = in.readOptionalWriteable(RefreshStats::new);, +        flush = in.readOptionalWriteable(FlushStats::new);, +        warmer = in.readOptionalWriteable(WarmerStats::new);, +        queryCache = in.readOptionalWriteable(QueryCacheStats::new);, +        fieldData = in.readOptionalWriteable(FieldDataStats::new);, +        completion = in.readOptionalWriteable(CompletionStats::new);, +        segments = in.readOptionalWriteable(SegmentsStats::new);, +        translog = in.readOptionalWriteable(TranslogStats::new);, +        requestCache = in.readOptionalWriteable(RequestCacheStats::new);, +        recoveryStats = in.readOptionalWriteable(RecoveryStats::new);, +++ b/server/src/main/java/org/elasticsearch/index/cache/query/QueryCacheStats.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class QueryCacheStats implements Streamable, Writeable, ToXContentFragment {, +    private long ramBytesUsed;, +    private long hitCount;, +    private long missCount;, +    private long cacheCount;, +    private long cacheSize;, +    public QueryCacheStats(StreamInput in) throws IOException {, +        ramBytesUsed = in.readLong();, +        hitCount = in.readLong();, +        missCount = in.readLong();, +        cacheCount = in.readLong();, +        cacheSize = in.readLong();, +    }, +, +        throw new UnsupportedOperationException("usage of Streamable is to be replaced by Writeable");, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +        docs = in.readOptionalWriteable(DocsStats::new);, +        store = in.readOptionalWriteable(StoreStats::new);, +        indexing = in.readOptionalWriteable(IndexingStats::new);, +        get = in.readOptionalWriteable(GetStats::new);, +        merge = in.readOptionalWriteable(MergeStats::new);, +        refresh = in.readOptionalWriteable(RefreshStats::new);, +        flush = in.readOptionalWriteable(FlushStats::new);, +        warmer = in.readOptionalWriteable(WarmerStats::new);, +        queryCache = in.readOptionalWriteable(QueryCacheStats::new);, +        fieldData = in.readOptionalWriteable(FieldDataStats::new);, +        completion = in.readOptionalWriteable(CompletionStats::new);, +        segments = in.readOptionalWriteable(SegmentsStats::new);, +        translog = in.readOptionalWriteable(TranslogStats::new);, +        requestCache = in.readOptionalWriteable(RequestCacheStats::new);, +        recoveryStats = in.readOptionalWriteable(RecoveryStats::new);, +++ b/server/src/main/java/org/elasticsearch/index/cache/query/QueryCacheStats.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class QueryCacheStats implements Streamable, Writeable, ToXContentFragment {, +    private long ramBytesUsed;, +    private long hitCount;, +    private long missCount;, +    private long cacheCount;, +    private long cacheSize;, +    public QueryCacheStats(StreamInput in) throws IOException {, +        ramBytesUsed = in.readLong();, +        hitCount = in.readLong();, +        missCount = in.readLong();, +        cacheCount = in.readLong();, +        cacheSize = in.readLong();, +    }, +, +        throw new UnsupportedOperationException("usage of Streamable is to be replaced by Writeable");, +++ b/server/src/main/java/org/elasticsearch/index/cache/request/RequestCacheStats.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class RequestCacheStats implements Streamable, Writeable, ToXContentFragment {, +    private long memorySize;, +    private long evictions;, +    private long hitCount;, +    private long missCount;, +    public RequestCacheStats(StreamInput in) throws IOException {, +        memorySize = in.readVLong();, +        evictions = in.readVLong();, +        hitCount = in.readVLong();, +        missCount = in.readVLong();, +    }, +, +        throw new UnsupportedOperationException("usage of Streamable is to be replaced by Writeable");, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +        docs = in.readOptionalWriteable(DocsStats::new);, +        store = in.readOptionalWriteable(StoreStats::new);]