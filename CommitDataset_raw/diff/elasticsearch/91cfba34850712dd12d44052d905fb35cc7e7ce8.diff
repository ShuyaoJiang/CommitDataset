[+++ b/pom.xml, +            <version>0.6.0</version>, +++ b/pom.xml, +            <version>0.6.0</version>, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +            float boost = 1f;, +            if (settings.boosts().containsKey(field)) {, +                boost = settings.boosts().lget();, +            }, +++ b/pom.xml, +            <version>0.6.0</version>, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +            float boost = 1f;, +            if (settings.boosts().containsKey(field)) {, +                boost = settings.boosts().lget();, +            }, +++ b/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +import com.carrotsearch.hppc.ObjectFloatOpenHashMap;, +    ObjectFloatOpenHashMap<String> boosts = null;, +    public ObjectFloatOpenHashMap<String> boosts() {, +    public void boosts(ObjectFloatOpenHashMap<String> boosts) {, +++ b/pom.xml, +            <version>0.6.0</version>, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +            float boost = 1f;, +            if (settings.boosts().containsKey(field)) {, +                boost = settings.boosts().lget();, +            }, +++ b/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +import com.carrotsearch.hppc.ObjectFloatOpenHashMap;, +    ObjectFloatOpenHashMap<String> boosts = null;, +    public ObjectFloatOpenHashMap<String> boosts() {, +    public void boosts(ObjectFloatOpenHashMap<String> boosts) {, +++ b/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +import com.carrotsearch.hppc.ObjectIntOpenHashMap;, +        private ObjectIntOpenHashMap<BytesRef> seenSurfaceForms = HppcMaps.Object.Integer.ensureNoNullKeys(256, 0.75f);, +            if (count > 0 && seenSurfaceForms.containsKey(surface)) {, +                surfaceIndex = seenSurfaceForms.lget();, +++ b/pom.xml, +            <version>0.6.0</version>, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +            float boost = 1f;, +            if (settings.boosts().containsKey(field)) {, +                boost = settings.boosts().lget();, +            }, +++ b/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +import com.carrotsearch.hppc.ObjectFloatOpenHashMap;, +    ObjectFloatOpenHashMap<String> boosts = null;, +    public ObjectFloatOpenHashMap<String> boosts() {, +    public void boosts(ObjectFloatOpenHashMap<String> boosts) {, +++ b/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +import com.carrotsearch.hppc.ObjectIntOpenHashMap;, +        private ObjectIntOpenHashMap<BytesRef> seenSurfaceForms = HppcMaps.Object.Integer.ensureNoNullKeys(256, 0.75f);, +            if (count > 0 && seenSurfaceForms.containsKey(surface)) {, +                surfaceIndex = seenSurfaceForms.lget();, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsIndices.java, +import com.carrotsearch.hppc.ObjectObjectOpenHashMap;, +        ObjectObjectOpenHashMap<String, ShardStats> countsPerIndex = new ObjectObjectOpenHashMap<>();, +++ b/pom.xml, +            <version>0.6.0</version>, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +            float boost = 1f;, +            if (settings.boosts().containsKey(field)) {, +                boost = settings.boosts().lget();, +            }, +++ b/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +import com.carrotsearch.hppc.ObjectFloatOpenHashMap;, +    ObjectFloatOpenHashMap<String> boosts = null;, +    public ObjectFloatOpenHashMap<String> boosts() {, +    public void boosts(ObjectFloatOpenHashMap<String> boosts) {, +++ b/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +import com.carrotsearch.hppc.ObjectIntOpenHashMap;, +        private ObjectIntOpenHashMap<BytesRef> seenSurfaceForms = HppcMaps.Object.Integer.ensureNoNullKeys(256, 0.75f);, +            if (count > 0 && seenSurfaceForms.containsKey(surface)) {, +                surfaceIndex = seenSurfaceForms.lget();, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsIndices.java, +import com.carrotsearch.hppc.ObjectObjectOpenHashMap;, +        ObjectObjectOpenHashMap<String, ShardStats> countsPerIndex = new ObjectObjectOpenHashMap<>();, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +import com.carrotsearch.hppc.ObjectIntOpenHashMap;, +        ObjectIntOpenHashMap<OsInfo.Cpu> cpus;, +            cpus = new ObjectIntOpenHashMap<>();, +        public ObjectIntOpenHashMap<OsInfo.Cpu> getCpus() {, +            cpus = new ObjectIntOpenHashMap<>(size);, +        ObjectIntOpenHashMap<JvmVersion> versions;, +            versions = new ObjectIntOpenHashMap<>();, +        public ObjectIntOpenHashMap<JvmVersion> getVersions() {, +            versions = new ObjectIntOpenHashMap<>(size);, +++ b/pom.xml, +            <version>0.6.0</version>, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +            float boost = 1f;, +            if (settings.boosts().containsKey(field)) {, +                boost = settings.boosts().lget();, +            }, +++ b/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +import com.carrotsearch.hppc.ObjectFloatOpenHashMap;, +    ObjectFloatOpenHashMap<String> boosts = null;, +    public ObjectFloatOpenHashMap<String> boosts() {, +    public void boosts(ObjectFloatOpenHashMap<String> boosts) {]