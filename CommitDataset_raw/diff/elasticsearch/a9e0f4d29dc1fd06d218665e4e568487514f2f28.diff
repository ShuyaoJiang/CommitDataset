[+++ b/src/test/java/org/elasticsearch/recovery/RecoveryWhileUnderLoadTests.java, +import org.elasticsearch.action.admin.indices.stats.IndicesStatsResponse;, +import org.elasticsearch.action.admin.indices.stats.ShardStats;, +import org.elasticsearch.index.shard.DocsStats;, +    private void iterateAssertCount(final int numberOfShards, final long numberOfDocs, int iterations) throws Exception {, +            //Printing out shards and their doc count, +            IndicesStatsResponse indicesStatsResponse = client().admin().indices().prepareStats().get();, +            for (ShardStats shardStats : indicesStatsResponse.getShards()) {, +                DocsStats docsStats = shardStats.getStats().docs;, +                logger.info("Shard [{}] - count {}, primary {}", shardStats.getShardId(), docsStats.getCount(), shardStats.getShardRouting().primary());, +, +            //if there was an error we try to wait and see if at some point it'll get fixed, +            //otherwise it means we are losing documents, +            logger.info("--> trying to wait");, +            assertThat(awaitBusy(new Predicate<Object>() {, +                @Override, +                public boolean apply(Object o) {, +                    SearchResponse searchResponse = client().prepareSearch().setSearchType(SearchType.COUNT).setQuery(matchAllQuery()).get();, +                    return searchResponse.getHits().totalHits() == numberOfDocs;, +                }, +            }, 30, TimeUnit.SECONDS), equalTo(true));]