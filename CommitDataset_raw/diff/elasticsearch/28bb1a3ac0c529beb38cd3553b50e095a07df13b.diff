[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/GraphClient.java, +                options, GraphExploreResponse::fromXContent, emptySet());, +            options, GraphExploreResponse::fromXContent, listener, emptySet());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/GraphClient.java, +                options, GraphExploreResponse::fromXContent, emptySet());, +            options, GraphExploreResponse::fromXContent, listener, emptySet());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/graph/GraphExploreResponse.java, +    public Collection<ConnectionId> getConnectionIds() {, +        return connections.keySet();, +    }, +, +    public Connection getConnection(ConnectionId connectionId) {, +        return connections.get(connectionId);, +    }, +, +    public Collection<VertexId> getVertexIds() {, +        return vertices.keySet();, +    }, +, +    public boolean isReturnDetailedInfo() {, +        return returnDetailedInfo;, +    }, +, +    public static GraphExploreResponse fromXContent(XContentParser parser) throws IOException {, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/GraphClient.java, +                options, GraphExploreResponse::fromXContent, emptySet());, +            options, GraphExploreResponse::fromXContent, listener, emptySet());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/graph/GraphExploreResponse.java, +    public Collection<ConnectionId> getConnectionIds() {, +        return connections.keySet();, +    }, +, +    public Connection getConnection(ConnectionId connectionId) {, +        return connections.get(connectionId);, +    }, +, +    public Collection<VertexId> getVertexIds() {, +        return vertices.keySet();, +    }, +, +    public boolean isReturnDetailedInfo() {, +        return returnDetailedInfo;, +    }, +, +    public static GraphExploreResponse fromXContent(XContentParser parser) throws IOException {, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/graph/Vertex.java, +        public String getField() {, +            return field;, +        }, +, +        public String getTerm() {, +            return term;, +        }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/GraphClient.java, +                options, GraphExploreResponse::fromXContent, emptySet());, +            options, GraphExploreResponse::fromXContent, listener, emptySet());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/graph/GraphExploreResponse.java, +    public Collection<ConnectionId> getConnectionIds() {, +        return connections.keySet();, +    }, +, +    public Connection getConnection(ConnectionId connectionId) {, +        return connections.get(connectionId);, +    }, +, +    public Collection<VertexId> getVertexIds() {, +        return vertices.keySet();, +    }, +, +    public boolean isReturnDetailedInfo() {, +        return returnDetailedInfo;, +    }, +, +    public static GraphExploreResponse fromXContent(XContentParser parser) throws IOException {, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/graph/Vertex.java, +        public String getField() {, +            return field;, +        }, +, +        public String getTerm() {, +            return term;, +        }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/license/StartBasicResponse.java, +            }, new ParseField("acknowledge"));, +    public enum Status {, +    public Status getStatus() {, +        return status;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/GraphClient.java, +                options, GraphExploreResponse::fromXContent, emptySet());, +            options, GraphExploreResponse::fromXContent, listener, emptySet());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/graph/GraphExploreResponse.java, +    public Collection<ConnectionId> getConnectionIds() {, +        return connections.keySet();, +    }, +, +    public Connection getConnection(ConnectionId connectionId) {]