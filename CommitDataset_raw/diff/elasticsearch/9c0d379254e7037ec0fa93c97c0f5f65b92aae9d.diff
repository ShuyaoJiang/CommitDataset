[+++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ b/docs/reference/aggregations/bucket/daterange-aggregation.asciidoc, +Note that this aggregration includes the `from` value and excludes the `to` value for each range., +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ b/docs/reference/aggregations/bucket/daterange-aggregation.asciidoc, +Note that this aggregration includes the `from` value and excludes the `to` value for each range., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +                and network bandwith if there are many buckets., +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ b/docs/reference/aggregations/bucket/daterange-aggregation.asciidoc, +Note that this aggregration includes the `from` value and excludes the `to` value for each range., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +                and network bandwith if there are many buckets., +++ b/docs/reference/aggregations/bucket/global-aggregation.asciidoc, +The response for the above aggreation:, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ b/docs/reference/aggregations/bucket/daterange-aggregation.asciidoc, +Note that this aggregration includes the `from` value and excludes the `to` value for each range., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +                and network bandwith if there are many buckets., +++ b/docs/reference/aggregations/bucket/global-aggregation.asciidoc, +The response for the above aggreation:, +++ b/docs/reference/aggregations/bucket/histogram-aggregation.asciidoc, +By default the returned buckets are sorted by their `key` ascending, though the order behaviour can be controled, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ b/docs/reference/aggregations/bucket/daterange-aggregation.asciidoc, +Note that this aggregration includes the `from` value and excludes the `to` value for each range., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +                and network bandwith if there are many buckets., +++ b/docs/reference/aggregations/bucket/global-aggregation.asciidoc, +The response for the above aggreation:, +++ b/docs/reference/aggregations/bucket/histogram-aggregation.asciidoc, +By default the returned buckets are sorted by their `key` ascending, though the order behaviour can be controled, +++ b/docs/reference/aggregations/reducer/max-bucket-aggregation.asciidoc, +A sibling reducer aggregation which identifies the bucket(s) with the maximum value of a specified metric in a sibing aggregation , +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ b/docs/reference/aggregations/bucket/daterange-aggregation.asciidoc, +Note that this aggregration includes the `from` value and excludes the `to` value for each range., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +                and network bandwith if there are many buckets., +++ b/docs/reference/aggregations/bucket/global-aggregation.asciidoc, +The response for the above aggreation:, +++ b/docs/reference/aggregations/bucket/histogram-aggregation.asciidoc, +By default the returned buckets are sorted by their `key` ascending, though the order behaviour can be controled, +++ b/docs/reference/aggregations/reducer/max-bucket-aggregation.asciidoc, +A sibling reducer aggregation which identifies the bucket(s) with the maximum value of a specified metric in a sibing aggregation , +++ b/docs/reference/index-modules/allocation.asciidoc, +matching wildcards, for example, `value1*`. Additonally, special attribute, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ b/docs/reference/aggregations/bucket/daterange-aggregation.asciidoc, +Note that this aggregration includes the `from` value and excludes the `to` value for each range., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +                and network bandwith if there are many buckets., +++ b/docs/reference/aggregations/bucket/global-aggregation.asciidoc, +The response for the above aggreation:, +++ b/docs/reference/aggregations/bucket/histogram-aggregation.asciidoc, +By default the returned buckets are sorted by their `key` ascending, though the order behaviour can be controled, +++ b/docs/reference/aggregations/reducer/max-bucket-aggregation.asciidoc, +A sibling reducer aggregation which identifies the bucket(s) with the maximum value of a specified metric in a sibing aggregation , +++ b/docs/reference/index-modules/allocation.asciidoc, +matching wildcards, for example, `value1*`. Additonally, special attribute, +++ b/docs/reference/index-modules/translog.asciidoc, +`index.gateway.local.sync`::, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ b/docs/reference/aggregations/bucket/daterange-aggregation.asciidoc, +Note that this aggregration includes the `from` value and excludes the `to` value for each range., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +                and network bandwith if there are many buckets., +++ b/docs/reference/aggregations/bucket/global-aggregation.asciidoc, +The response for the above aggreation:]