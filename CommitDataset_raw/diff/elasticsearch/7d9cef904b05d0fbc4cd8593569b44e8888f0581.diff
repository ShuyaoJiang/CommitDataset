[+++ b/src/main/java/org/elasticsearch/index/fielddata/plain/ByteArrayIndexFieldData.java, +            return build(reader, builder, build, new BuilderBytes() {, +                @Override, +                public byte get(int index) {, +                    return values.get(index);, +                }, +, +                @Override, +                public byte[] toArray() {, +                    return values.toArray();, +                }, +            });, +        } finally {, +            builder.close();, +        }, +    }, +, +    static interface BuilderBytes {, +        byte get(int index);, +, +        byte[] toArray();, +    }, +, +    static ByteArrayAtomicFieldData build(AtomicReader reader, OrdinalsBuilder builder, Ordinals build, BuilderBytes values) {, +            return new ByteArrayAtomicFieldData.WithOrdinals(values.toArray(), reader.maxDoc(), build);, +++ b/src/main/java/org/elasticsearch/index/fielddata/plain/ByteArrayIndexFieldData.java, +            return build(reader, builder, build, new BuilderBytes() {, +                @Override, +                public byte get(int index) {, +                    return values.get(index);, +                }, +, +                @Override, +                public byte[] toArray() {, +                    return values.toArray();, +                }, +            });, +        } finally {, +            builder.close();, +        }, +    }, +, +    static interface BuilderBytes {, +        byte get(int index);, +, +        byte[] toArray();, +    }, +, +    static ByteArrayAtomicFieldData build(AtomicReader reader, OrdinalsBuilder builder, Ordinals build, BuilderBytes values) {, +            return new ByteArrayAtomicFieldData.WithOrdinals(values.toArray(), reader.maxDoc(), build);, +++ b/src/main/java/org/elasticsearch/index/fielddata/plain/IntArrayIndexFieldData.java, +            return build(reader, builder, build, new BuilderIntegers() {, +                @Override, +                public int get(int index) {, +                    return values.get(index);, +                }, +, +                @Override, +                public int[] toArray() {, +                    return values.toArray();, +                }, +            });, +        } finally {, +            builder.close();, +        }, +    }, +, +    static interface BuilderIntegers {, +        int get(int index);, +, +        int[] toArray();, +    }, +, +    static IntArrayAtomicFieldData build(AtomicReader reader, OrdinalsBuilder builder, Ordinals build, BuilderIntegers values) {, +                    values.toArray(),, +++ b/src/main/java/org/elasticsearch/index/fielddata/plain/ByteArrayIndexFieldData.java, +            return build(reader, builder, build, new BuilderBytes() {, +                @Override, +                public byte get(int index) {, +                    return values.get(index);, +                }, +, +                @Override, +                public byte[] toArray() {, +                    return values.toArray();, +                }, +            });, +        } finally {, +            builder.close();, +        }, +    }, +, +    static interface BuilderBytes {, +        byte get(int index);, +, +        byte[] toArray();, +    }, +, +    static ByteArrayAtomicFieldData build(AtomicReader reader, OrdinalsBuilder builder, Ordinals build, BuilderBytes values) {, +            return new ByteArrayAtomicFieldData.WithOrdinals(values.toArray(), reader.maxDoc(), build);]