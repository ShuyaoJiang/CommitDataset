[+++ b/server/src/main/java/org/elasticsearch/common/joda/Joda.java, +        } else if (Strings.hasLength(input) && input.contains("||")) {, +            String[] formats = Strings.delimitedListToStringArray(input, "||");, +            DateTimeParser[] parsers = new DateTimeParser[formats.length];, +, +            if (formats.length == 1) {, +                formatter = forPattern(input).parser;, +            } else {, +                DateTimeFormatter dateTimeFormatter = null;, +                for (int i = 0; i < formats.length; i++) {, +                    JodaDateFormatter currentFormatter = forPattern(formats[i]);, +                    DateTimeFormatter currentParser = currentFormatter.parser;, +                    if (dateTimeFormatter == null) {, +                        dateTimeFormatter = currentFormatter.printer;, +                    }, +                    parsers[i] = currentParser.getParser();, +                }, +, +                DateTimeFormatterBuilder builder = new DateTimeFormatterBuilder(), +                    .append(dateTimeFormatter.withZone(DateTimeZone.UTC).getPrinter(), parsers);, +                formatter = builder.toFormatter();, +            }, +++ b/server/src/main/java/org/elasticsearch/common/joda/Joda.java, +        } else if (Strings.hasLength(input) && input.contains("||")) {, +            String[] formats = Strings.delimitedListToStringArray(input, "||");, +            DateTimeParser[] parsers = new DateTimeParser[formats.length];, +, +            if (formats.length == 1) {, +                formatter = forPattern(input).parser;, +            } else {, +                DateTimeFormatter dateTimeFormatter = null;, +                for (int i = 0; i < formats.length; i++) {, +                    JodaDateFormatter currentFormatter = forPattern(formats[i]);, +                    DateTimeFormatter currentParser = currentFormatter.parser;, +                    if (dateTimeFormatter == null) {, +                        dateTimeFormatter = currentFormatter.printer;, +                    }, +                    parsers[i] = currentParser.getParser();, +                }, +, +                DateTimeFormatterBuilder builder = new DateTimeFormatterBuilder(), +                    .append(dateTimeFormatter.withZone(DateTimeZone.UTC).getPrinter(), parsers);, +                formatter = builder.toFormatter();, +            }, +++ b/server/src/main/java/org/elasticsearch/common/time/DateFormatter.java, +        if (input.startsWith("8") == false) {, +            return Joda.forPattern(input);, +        }, +, +        // force java 8 date format, +        for (String pattern : Strings.delimitedListToStringArray(input.substring(1), "||")) {, +            if (Strings.hasLength(pattern) == false) {, +            formatters.add(DateFormatters.forPattern(pattern));, +++ b/server/src/main/java/org/elasticsearch/common/joda/Joda.java, +        } else if (Strings.hasLength(input) && input.contains("||")) {, +            String[] formats = Strings.delimitedListToStringArray(input, "||");, +            DateTimeParser[] parsers = new DateTimeParser[formats.length];, +, +            if (formats.length == 1) {, +                formatter = forPattern(input).parser;, +            } else {, +                DateTimeFormatter dateTimeFormatter = null;, +                for (int i = 0; i < formats.length; i++) {, +                    JodaDateFormatter currentFormatter = forPattern(formats[i]);, +                    DateTimeFormatter currentParser = currentFormatter.parser;, +                    if (dateTimeFormatter == null) {, +                        dateTimeFormatter = currentFormatter.printer;, +                    }, +                    parsers[i] = currentParser.getParser();, +                }, +, +                DateTimeFormatterBuilder builder = new DateTimeFormatterBuilder(), +                    .append(dateTimeFormatter.withZone(DateTimeZone.UTC).getPrinter(), parsers);, +                formatter = builder.toFormatter();, +            }, +++ b/server/src/main/java/org/elasticsearch/common/time/DateFormatter.java, +        if (input.startsWith("8") == false) {, +            return Joda.forPattern(input);, +        }, +, +        // force java 8 date format, +        for (String pattern : Strings.delimitedListToStringArray(input.substring(1), "||")) {, +            if (Strings.hasLength(pattern) == false) {, +            formatters.add(DateFormatters.forPattern(pattern));, +++ b/server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java, +        DateFormatter javaFormatter = DateFormatter.forPattern("8year_month_day||ordinal_date");, +++ b/server/src/main/java/org/elasticsearch/common/joda/Joda.java, +        } else if (Strings.hasLength(input) && input.contains("||")) {, +            String[] formats = Strings.delimitedListToStringArray(input, "||");, +            DateTimeParser[] parsers = new DateTimeParser[formats.length];, +, +            if (formats.length == 1) {, +                formatter = forPattern(input).parser;, +            } else {, +                DateTimeFormatter dateTimeFormatter = null;, +                for (int i = 0; i < formats.length; i++) {, +                    JodaDateFormatter currentFormatter = forPattern(formats[i]);, +                    DateTimeFormatter currentParser = currentFormatter.parser;, +                    if (dateTimeFormatter == null) {, +                        dateTimeFormatter = currentFormatter.printer;]