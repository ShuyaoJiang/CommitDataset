[+++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java, +         * Removes the nested type in the xContent representation of {@link IndexTemplateMetaData}., +         *, +         * This method is useful to help bridge the gap between an the internal representation which still uses (the legacy format) a, +         * nested type in the mapping, and the external representation which does not use a nested type in the mapping., +         */, +        public static void removeType(IndexTemplateMetaData indexTemplateMetaData, XContentBuilder builder) throws IOException {, +            builder.startObject();, +            toInnerXContent(indexTemplateMetaData, builder,, +                new ToXContent.MapParams(Collections.singletonMap("reduce_mappings", "true")), false);, +            builder.endObject();, +        }, +, +        /**, +, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java, +         * Removes the nested type in the xContent representation of {@link IndexTemplateMetaData}., +         *, +         * This method is useful to help bridge the gap between an the internal representation which still uses (the legacy format) a, +         * nested type in the mapping, and the external representation which does not use a nested type in the mapping., +         */, +        public static void removeType(IndexTemplateMetaData indexTemplateMetaData, XContentBuilder builder) throws IOException {, +            builder.startObject();, +            toInnerXContent(indexTemplateMetaData, builder,, +                new ToXContent.MapParams(Collections.singletonMap("reduce_mappings", "true")), false);, +            builder.endObject();, +        }, +, +        /**, +, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/monitoring/collector/ccr/AutoFollowStatsMonitoringDocTests.java, +            (Map<?, ?>) XContentMapValues.extractValue("mappings._doc.properties.ccr_auto_follow_stats.properties", template);, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java, +         * Removes the nested type in the xContent representation of {@link IndexTemplateMetaData}., +         *, +         * This method is useful to help bridge the gap between an the internal representation which still uses (the legacy format) a, +         * nested type in the mapping, and the external representation which does not use a nested type in the mapping., +         */, +        public static void removeType(IndexTemplateMetaData indexTemplateMetaData, XContentBuilder builder) throws IOException {, +            builder.startObject();, +            toInnerXContent(indexTemplateMetaData, builder,, +                new ToXContent.MapParams(Collections.singletonMap("reduce_mappings", "true")), false);, +            builder.endObject();, +        }, +, +        /**, +, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/monitoring/collector/ccr/AutoFollowStatsMonitoringDocTests.java, +            (Map<?, ?>) XContentMapValues.extractValue("mappings._doc.properties.ccr_auto_follow_stats.properties", template);, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/monitoring/collector/ccr/FollowStatsMonitoringDocTests.java, +        Map<?, ?> followStatsMapping = (Map<?, ?>) XContentMapValues, +            .extractValue("mappings._doc.properties.ccr_stats.properties", template);, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java, +         * Removes the nested type in the xContent representation of {@link IndexTemplateMetaData}., +         *, +         * This method is useful to help bridge the gap between an the internal representation which still uses (the legacy format) a, +         * nested type in the mapping, and the external representation which does not use a nested type in the mapping., +         */, +        public static void removeType(IndexTemplateMetaData indexTemplateMetaData, XContentBuilder builder) throws IOException {, +            builder.startObject();, +            toInnerXContent(indexTemplateMetaData, builder,, +                new ToXContent.MapParams(Collections.singletonMap("reduce_mappings", "true")), false);, +            builder.endObject();, +        }, +, +        /**, +, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/monitoring/collector/ccr/AutoFollowStatsMonitoringDocTests.java, +            (Map<?, ?>) XContentMapValues.extractValue("mappings._doc.properties.ccr_auto_follow_stats.properties", template);, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/monitoring/collector/ccr/FollowStatsMonitoringDocTests.java, +        Map<?, ?> followStatsMapping = (Map<?, ?>) XContentMapValues, +            .extractValue("mappings._doc.properties.ccr_stats.properties", template);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/monitoring/action/MonitoringBulkRequest.java, +        new BulkRequestParser(false).parse(content, null, null, null, null, true, xContentType,, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java, +         * Removes the nested type in the xContent representation of {@link IndexTemplateMetaData}., +         *, +         * This method is useful to help bridge the gap between an the internal representation which still uses (the legacy format) a, +         * nested type in the mapping, and the external representation which does not use a nested type in the mapping., +         */, +        public static void removeType(IndexTemplateMetaData indexTemplateMetaData, XContentBuilder builder) throws IOException {, +            builder.startObject();, +            toInnerXContent(indexTemplateMetaData, builder,, +                new ToXContent.MapParams(Collections.singletonMap("reduce_mappings", "true")), false);, +            builder.endObject();, +        }, +, +        /**, +, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/monitoring/collector/ccr/AutoFollowStatsMonitoringDocTests.java, +            (Map<?, ?>) XContentMapValues.extractValue("mappings._doc.properties.ccr_auto_follow_stats.properties", template);, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/monitoring/collector/ccr/FollowStatsMonitoringDocTests.java, +        Map<?, ?> followStatsMapping = (Map<?, ?>) XContentMapValues, +            .extractValue("mappings._doc.properties.ccr_stats.properties", template);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/monitoring/action/MonitoringBulkRequest.java, +        new BulkRequestParser(false).parse(content, null, null, null, null, true, xContentType,, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/monitoring/action/MonitoringBulkRequestBuilder.java, +        request.add(system, content, xContentType, timestamp, intervalMillis);, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java, +         * Removes the nested type in the xContent representation of {@link IndexTemplateMetaData}.]