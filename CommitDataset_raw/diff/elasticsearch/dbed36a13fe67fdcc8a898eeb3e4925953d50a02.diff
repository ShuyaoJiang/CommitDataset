[+++ b/pom.xml, +        <tests.failfast>yes</tests.failfast>, +        <tests.maxfailures>1</tests.maxfailures>, +                                <tests.maxfailures>${tests.maxfailures}</tests.maxfailures>, +                                <tests.failfast>${tests.failfast}</tests.failfast>, +                                <tests.timeoutSuite>${tests.timeoutSuite}</tests.timeoutSuite>, +                                <tests.showSuccess>${tests.showSuccess}</tests.showSuccess>, +++ b/pom.xml, +        <tests.failfast>yes</tests.failfast>, +        <tests.maxfailures>1</tests.maxfailures>, +                                <tests.maxfailures>${tests.maxfailures}</tests.maxfailures>, +                                <tests.failfast>${tests.failfast}</tests.failfast>, +                                <tests.timeoutSuite>${tests.timeoutSuite}</tests.timeoutSuite>, +                                <tests.showSuccess>${tests.showSuccess}</tests.showSuccess>, +++ b/src/test/java/org/apache/lucene/analysis/miscellaneous/UniqueTokenFilterTests.java, +import org.elasticsearch.test.integration.ElasticsearchTestCase;, +public class UniqueTokenFilterTests extends ElasticsearchTestCase {, +++ b/pom.xml, +        <tests.failfast>yes</tests.failfast>, +        <tests.maxfailures>1</tests.maxfailures>, +                                <tests.maxfailures>${tests.maxfailures}</tests.maxfailures>, +                                <tests.failfast>${tests.failfast}</tests.failfast>, +                                <tests.timeoutSuite>${tests.timeoutSuite}</tests.timeoutSuite>, +                                <tests.showSuccess>${tests.showSuccess}</tests.showSuccess>, +++ b/src/test/java/org/apache/lucene/analysis/miscellaneous/UniqueTokenFilterTests.java, +import org.elasticsearch.test.integration.ElasticsearchTestCase;, +public class UniqueTokenFilterTests extends ElasticsearchTestCase {, +++ b/src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.apache.lucene.util;, +, +import com.carrotsearch.randomizedtesting.JUnit4MethodProvider;, +import com.carrotsearch.randomizedtesting.LifecycleScope;, +import com.carrotsearch.randomizedtesting.RandomizedContext;, +import com.carrotsearch.randomizedtesting.RandomizedTest;, +import com.carrotsearch.randomizedtesting.annotations.Listeners;, +import com.carrotsearch.randomizedtesting.annotations.TestMethodProviders;, +import com.carrotsearch.randomizedtesting.rules.NoClassHooksShadowingRule;, +import com.carrotsearch.randomizedtesting.rules.NoInstanceHooksOverridesRule;, +import com.carrotsearch.randomizedtesting.rules.StaticFieldsInvariantRule;, +import com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule;, +import org.apache.lucene.util.LuceneTestCase.SuppressCodecs;, +import org.elasticsearch.common.lucene.Lucene;, +import org.elasticsearch.junit.listerners.ReproduceInfoPrinter;, +import org.junit.After;, +import org.junit.Before;, +import org.junit.ClassRule;, +import org.junit.Rule;, +import org.junit.rules.RuleChain;, +import org.junit.rules.TestRule;, +import org.junit.runner.RunWith;, +, +import java.io.Closeable;, +import java.io.File;, +import java.lang.reflect.Method;, +import java.util.*;, +import java.util.concurrent.atomic.AtomicReference;, +import java.util.logging.Logger;, +, +@TestMethodProviders({, +    LuceneJUnit3MethodProvider.class,, +    JUnit4MethodProvider.class, +}), +@Listeners({, +    ReproduceInfoPrinter.class, +}), +@RunWith(value = com.carrotsearch.randomizedtesting.RandomizedRunner.class), +@SuppressCodecs(value="Lucene3x"), +, +// NOTE: this class is in o.a.lucene.util since it uses some classes that are related, +// to the test framework that didn't make sense to copy but are package private access, +public class AbstractRandomizedTest extends RandomizedTest {, +    // --------------------------------------------------------------------, +    // Test groups, system properties and other annotations modifying tests, +    // --------------------------------------------------------------------, +, +    /** @see #ignoreAfterMaxFailures*/, +    public static final String SYSPROP_MAXFAILURES = "tests.maxfailures";, +, +    /** @see #ignoreAfterMaxFailures*/, +    public static final String SYSPROP_FAILFAST = "tests.failfast";, +]