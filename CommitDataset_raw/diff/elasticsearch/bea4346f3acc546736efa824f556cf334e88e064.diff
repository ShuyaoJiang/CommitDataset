[+++ b/pom.xml, +            <groupId>com.spatial4j</groupId>, +            <artifactId>spatial4j</artifactId>, +            <version>0.2</version>, +            <scope>compile</scope>, +        </dependency>, +, +        <dependency>, +            <groupId>com.vividsolutions</groupId>, +            <artifactId>jts</artifactId>, +            <version>1.12</version>, +            <scope>compile</scope>, +        </dependency>, +, +        <dependency>, +++ b/pom.xml, +            <groupId>com.spatial4j</groupId>, +            <artifactId>spatial4j</artifactId>, +            <version>0.2</version>, +            <scope>compile</scope>, +        </dependency>, +, +        <dependency>, +            <groupId>com.vividsolutions</groupId>, +            <artifactId>jts</artifactId>, +            <version>1.12</version>, +            <scope>compile</scope>, +        </dependency>, +, +        <dependency>, +++ b/src/main/assemblies/common-bin.xml, +                <include>com.spatial4j:spatial4j</include>, +                <include>com.vividsolutions:jts</include>, +++ b/pom.xml, +            <groupId>com.spatial4j</groupId>, +            <artifactId>spatial4j</artifactId>, +            <version>0.2</version>, +            <scope>compile</scope>, +        </dependency>, +, +        <dependency>, +            <groupId>com.vividsolutions</groupId>, +            <artifactId>jts</artifactId>, +            <version>1.12</version>, +            <scope>compile</scope>, +        </dependency>, +, +        <dependency>, +++ b/src/main/assemblies/common-bin.xml, +                <include>com.spatial4j:spatial4j</include>, +                <include>com.vividsolutions:jts</include>, +++ b/src/main/java/org/elasticsearch/common/geo/GeoJSONShapeParser.java, +package org.elasticsearch.common.geo;, +, +import com.spatial4j.core.shape.Shape;, +import com.spatial4j.core.shape.jts.JtsGeometry;, +import com.spatial4j.core.shape.jts.JtsPoint;, +import com.spatial4j.core.shape.simple.RectangleImpl;, +import com.vividsolutions.jts.geom.*;, +import org.elasticsearch.ElasticSearchParseException;, +import org.elasticsearch.common.xcontent.XContentParser;, +, +import java.io.IOException;, +import java.util.ArrayList;, +import java.util.List;, +import java.util.Locale;, +, +/**, + * Parsers which supports reading {@link Shape}s in GeoJSON format from a given, + * {@link XContentParser}., + *, + * An example of the format used for polygons:, + *, + * {, + *   "type": "Polygon",, + *   "coordinates": [, + *      [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0],, + *      [100.0, 1.0], [100.0, 0.0] ], + *   ], + * }, + *, + * Note, currently MultiPolygon and GeometryCollections are not supported, + */, +public class GeoJSONShapeParser {, +, +    private static final GeometryFactory GEOMETRY_FACTORY = new GeometryFactory();, +, +    private GeoJSONShapeParser() {, +    }, +, +    /**, +     * Parses the current object from the given {@link XContentParser}, creating, +     * the {@link Shape} representation, +     *, +     * @param parser Parser that will be read from, +     * @return Shape representation of the geojson defined Shape, +     * @throws IOException Thrown if an error occurs while reading from the XContentParser, +     */, +    public static Shape parse(XContentParser parser) throws IOException {, +        if (parser.currentToken() != XContentParser.Token.START_OBJECT) {]