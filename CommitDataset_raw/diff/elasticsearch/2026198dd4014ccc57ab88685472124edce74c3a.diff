[+++ b/plugin/src/test/java/org/elasticsearch/xpack/sql/SqlActionIT.java, +        assertEquals(new ColumnInfo("data", "text", JDBCType.VARCHAR, 0), response.columns().get(dataIndex));, +        assertEquals(new ColumnInfo("count", "long", JDBCType.BIGINT, 20), response.columns().get(countIndex));, +++ b/plugin/src/test/java/org/elasticsearch/xpack/sql/SqlActionIT.java, +        assertEquals(new ColumnInfo("data", "text", JDBCType.VARCHAR, 0), response.columns().get(dataIndex));, +        assertEquals(new ColumnInfo("count", "long", JDBCType.BIGINT, 20), response.columns().get(countIndex));, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ColumnInfo.java, +    public int displaySize;, +    public ColumnInfo(String name, JDBCType type, String table, String catalog, String schema, String label, int displaySize) {, +        this.displaySize = displaySize;, +        displaySize = in.readInt();, +        out.writeInt(displaySize);, +        // 0 - means unknown, +        return displaySize;, +                && label.equals(other.label), +                && displaySize == other.displaySize;, +        return Objects.hash(name, type, table, catalog, schema, label, displaySize);, +++ b/plugin/src/test/java/org/elasticsearch/xpack/sql/SqlActionIT.java, +        assertEquals(new ColumnInfo("data", "text", JDBCType.VARCHAR, 0), response.columns().get(dataIndex));, +        assertEquals(new ColumnInfo("count", "long", JDBCType.BIGINT, 20), response.columns().get(countIndex));, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ColumnInfo.java, +    public int displaySize;, +    public ColumnInfo(String name, JDBCType type, String table, String catalog, String schema, String label, int displaySize) {, +        this.displaySize = displaySize;, +        displaySize = in.readInt();, +        out.writeInt(displaySize);, +        // 0 - means unknown, +        return displaySize;, +                && label.equals(other.label), +                && displaySize == other.displaySize;, +        return Objects.hash(name, type, table, catalog, schema, label, displaySize);, +++ b/sql/jdbc-proto/src/test/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ColumnInfoTests.java, +        return new ColumnInfo(name, JDBCType.VARCHAR, "", "", "", "", 0);, +        return new ColumnInfo(name, JDBCType.INTEGER, "", "", "", "", 11);, +        return new ColumnInfo(name, JDBCType.DOUBLE, "", "", "", "", 25);, +                randomAlphaOfLength(5), randomAlphaOfLength(5), randomInt(25));, +                new ColumnInfo("a", JDBCType.VARCHAR, "test.doc", "as", "ads", "lab", 0).toString());, +                new ColumnInfo("a", JDBCType.VARCHAR, "test.doc", "", "", "", 0).toString());, +++ b/plugin/src/test/java/org/elasticsearch/xpack/sql/SqlActionIT.java, +        assertEquals(new ColumnInfo("data", "text", JDBCType.VARCHAR, 0), response.columns().get(dataIndex));, +        assertEquals(new ColumnInfo("count", "long", JDBCType.BIGINT, 20), response.columns().get(countIndex));, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ColumnInfo.java, +    public int displaySize;, +    public ColumnInfo(String name, JDBCType type, String table, String catalog, String schema, String label, int displaySize) {, +        this.displaySize = displaySize;, +        displaySize = in.readInt();, +        out.writeInt(displaySize);, +        // 0 - means unknown, +        return displaySize;, +                && label.equals(other.label), +                && displaySize == other.displaySize;, +        return Objects.hash(name, type, table, catalog, schema, label, displaySize);, +++ b/sql/jdbc-proto/src/test/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ColumnInfoTests.java, +        return new ColumnInfo(name, JDBCType.VARCHAR, "", "", "", "", 0);, +        return new ColumnInfo(name, JDBCType.INTEGER, "", "", "", "", 11);, +        return new ColumnInfo(name, JDBCType.DOUBLE, "", "", "", "", 25);, +                randomAlphaOfLength(5), randomAlphaOfLength(5), randomInt(25));, +                new ColumnInfo("a", JDBCType.VARCHAR, "test.doc", "as", "ads", "lab", 0).toString());, +                new ColumnInfo("a", JDBCType.VARCHAR, "test.doc", "", "", "", 0).toString());, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcDatabaseMetaData.java, +                columns.add(new ColumnInfo(name, type, tableName, "INFORMATION_SCHEMA", EMPTY, EMPTY, 0));, +++ b/plugin/src/test/java/org/elasticsearch/xpack/sql/SqlActionIT.java, +        assertEquals(new ColumnInfo("data", "text", JDBCType.VARCHAR, 0), response.columns().get(dataIndex));, +        assertEquals(new ColumnInfo("count", "long", JDBCType.BIGINT, 20), response.columns().get(countIndex));, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ColumnInfo.java, +    public int displaySize;, +    public ColumnInfo(String name, JDBCType type, String table, String catalog, String schema, String label, int displaySize) {, +        this.displaySize = displaySize;, +        displaySize = in.readInt();, +        out.writeInt(displaySize);, +        // 0 - means unknown, +        return displaySize;, +                && label.equals(other.label), +                && displaySize == other.displaySize;, +        return Objects.hash(name, type, table, catalog, schema, label, displaySize);, +++ b/sql/jdbc-proto/src/test/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ColumnInfoTests.java, +        return new ColumnInfo(name, JDBCType.VARCHAR, "", "", "", "", 0);, +        return new ColumnInfo(name, JDBCType.INTEGER, "", "", "", "", 11);, +        return new ColumnInfo(name, JDBCType.DOUBLE, "", "", "", "", 25);, +                randomAlphaOfLength(5), randomAlphaOfLength(5), randomInt(25));, +                new ColumnInfo("a", JDBCType.VARCHAR, "test.doc", "as", "ads", "lab", 0).toString());, +                new ColumnInfo("a", JDBCType.VARCHAR, "test.doc", "", "", "", 0).toString());, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcDatabaseMetaData.java, +                columns.add(new ColumnInfo(name, type, tableName, "INFORMATION_SCHEMA", EMPTY, EMPTY, 0));, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/datetime/WeekOfWeekYear.java, +        return ChronoField.ALIGNED_WEEK_OF_YEAR;, +++ b/plugin/src/test/java/org/elasticsearch/xpack/sql/SqlActionIT.java, +        assertEquals(new ColumnInfo("data", "text", JDBCType.VARCHAR, 0), response.columns().get(dataIndex));, +        assertEquals(new ColumnInfo("count", "long", JDBCType.BIGINT, 20), response.columns().get(countIndex));, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ColumnInfo.java, +    public int displaySize;, +    public ColumnInfo(String name, JDBCType type, String table, String catalog, String schema, String label, int displaySize) {, +        this.displaySize = displaySize;, +        displaySize = in.readInt();, +        out.writeInt(displaySize);, +        // 0 - means unknown, +        return displaySize;, +                && label.equals(other.label), +                && displaySize == other.displaySize;, +        return Objects.hash(name, type, table, catalog, schema, label, displaySize);]