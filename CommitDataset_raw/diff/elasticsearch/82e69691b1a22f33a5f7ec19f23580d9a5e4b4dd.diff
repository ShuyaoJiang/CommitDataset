[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +    public SearchRequest timeout(TimeValue timeout) {, +        return this;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +    public SearchRequest timeout(TimeValue timeout) {, +        return this;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.threadpool.ThreadPool;, +import org.elasticsearch.timer.TimerModule;, +import org.elasticsearch.timer.TimerService;, +        modules.add(new TimerModule());, +, +        injector.getInstance(TimerService.class).close();, +        injector.getInstance(ThreadPool.class).shutdown();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +    public SearchRequest timeout(TimeValue timeout) {, +        return this;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.threadpool.ThreadPool;, +import org.elasticsearch.timer.TimerModule;, +import org.elasticsearch.timer.TimerService;, +        modules.add(new TimerModule());, +, +        injector.getInstance(TimerService.class).close();, +        injector.getInstance(ThreadPool.class).shutdown();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/netty/NettyHttpRequest.java, +import org.elasticsearch.util.SizeValue;, +import org.elasticsearch.util.TimeValue;, +import static org.elasticsearch.util.SizeValue.*;, +import static org.elasticsearch.util.TimeValue.*;, +, +    @Override public TimeValue paramAsTime(String key, TimeValue defaultValue) {, +        return parseTimeValue(param(key), defaultValue);, +    }, +, +    @Override public SizeValue paramAsSize(String key, SizeValue defaultValue) {, +        return parseSizeValue(param(key), defaultValue);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +    public SearchRequest timeout(TimeValue timeout) {, +        return this;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.threadpool.ThreadPool;, +import org.elasticsearch.timer.TimerModule;, +import org.elasticsearch.timer.TimerService;, +        modules.add(new TimerModule());, +, +        injector.getInstance(TimerService.class).close();, +        injector.getInstance(ThreadPool.class).shutdown();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/netty/NettyHttpRequest.java, +import org.elasticsearch.util.SizeValue;, +import org.elasticsearch.util.TimeValue;, +import static org.elasticsearch.util.SizeValue.*;, +import static org.elasticsearch.util.TimeValue.*;, +, +    @Override public TimeValue paramAsTime(String key, TimeValue defaultValue) {, +        return parseTimeValue(param(key), defaultValue);, +    }, +, +    @Override public SizeValue paramAsSize(String key, SizeValue defaultValue) {, +        return parseSizeValue(param(key), defaultValue);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/RestRequest.java, +import org.elasticsearch.util.SizeValue;, +import org.elasticsearch.util.TimeValue;, +    TimeValue paramAsTime(String key, TimeValue defaultValue);, +, +    SizeValue paramAsSize(String key, SizeValue defaultValue);, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +    public SearchRequest timeout(TimeValue timeout) {, +        return this;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.threadpool.ThreadPool;, +import org.elasticsearch.timer.TimerModule;, +import org.elasticsearch.timer.TimerService;, +        modules.add(new TimerModule());, +, +        injector.getInstance(TimerService.class).close();, +        injector.getInstance(ThreadPool.class).shutdown();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/netty/NettyHttpRequest.java, +import org.elasticsearch.util.SizeValue;, +import org.elasticsearch.util.TimeValue;, +import static org.elasticsearch.util.SizeValue.*;, +import static org.elasticsearch.util.TimeValue.*;, +, +    @Override public TimeValue paramAsTime(String key, TimeValue defaultValue) {, +        return parseTimeValue(param(key), defaultValue);, +    }, +, +    @Override public SizeValue paramAsSize(String key, SizeValue defaultValue) {, +        return parseSizeValue(param(key), defaultValue);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/RestRequest.java, +import org.elasticsearch.util.SizeValue;, +import org.elasticsearch.util.TimeValue;, +    TimeValue paramAsTime(String key, TimeValue defaultValue);]