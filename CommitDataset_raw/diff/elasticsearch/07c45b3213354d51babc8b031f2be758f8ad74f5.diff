[+++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +         * The local checkpoint for the shard. See {@link SequenceNumbersService#getLocalCheckpoint()}., +         * The global checkpoint for the shard. See {@link SequenceNumbersService#getGlobalCheckpoint()}., +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +         * The local checkpoint for the shard. See {@link SequenceNumbersService#getLocalCheckpoint()}., +         * The global checkpoint for the shard. See {@link SequenceNumbersService#getGlobalCheckpoint()}., +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +import java.util.Objects;, +    private final EngineFactory engineFactory;, +    /**, +     * Construct the index module for the index with the specified index settings. The index module contains extension points for plugins, +     * via {@link org.elasticsearch.plugins.PluginsService#onIndexModule(IndexModule)}., +     *, +     * @param indexSettings    the index settings, +     * @param analysisRegistry the analysis registry, +     * @param engineFactory    the engine factory, +     */, +    public IndexModule(final IndexSettings indexSettings, final AnalysisRegistry analysisRegistry, final EngineFactory engineFactory) {, +        this.engineFactory = Objects.requireNonNull(engineFactory);, +     * The engine factory provided during construction of this index module., +     *, +     * @return the engine factory, +     */, +    EngineFactory getEngineFactory() {, +        return engineFactory;, +    }, +, +    /**, +                shardStoreDeleter, analysisRegistry, engineFactory, circuitBreakerService, bigArrays, threadPool, scriptService,, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +         * The local checkpoint for the shard. See {@link SequenceNumbersService#getLocalCheckpoint()}., +         * The global checkpoint for the shard. See {@link SequenceNumbersService#getGlobalCheckpoint()}., +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +import java.util.Objects;, +    private final EngineFactory engineFactory;, +    /**, +     * Construct the index module for the index with the specified index settings. The index module contains extension points for plugins, +     * via {@link org.elasticsearch.plugins.PluginsService#onIndexModule(IndexModule)}., +     *, +     * @param indexSettings    the index settings, +     * @param analysisRegistry the analysis registry, +     * @param engineFactory    the engine factory, +     */, +    public IndexModule(final IndexSettings indexSettings, final AnalysisRegistry analysisRegistry, final EngineFactory engineFactory) {, +        this.engineFactory = Objects.requireNonNull(engineFactory);, +     * The engine factory provided during construction of this index module., +     *, +     * @return the engine factory, +     */, +    EngineFactory getEngineFactory() {, +        return engineFactory;, +    }, +, +    /**, +                shardStoreDeleter, analysisRegistry, engineFactory, circuitBreakerService, bigArrays, threadPool, scriptService,, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +            EngineFactory engineFactory,, +        this.engineFactory = Objects.requireNonNull(engineFactory);, +    public final EngineFactory getEngineFactory() {, +    }, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +         * The local checkpoint for the shard. See {@link SequenceNumbersService#getLocalCheckpoint()}., +         * The global checkpoint for the shard. See {@link SequenceNumbersService#getGlobalCheckpoint()}., +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +import java.util.Objects;, +    private final EngineFactory engineFactory;, +    /**, +     * Construct the index module for the index with the specified index settings. The index module contains extension points for plugins, +     * via {@link org.elasticsearch.plugins.PluginsService#onIndexModule(IndexModule)}., +     *, +     * @param indexSettings    the index settings, +     * @param analysisRegistry the analysis registry, +     * @param engineFactory    the engine factory, +     */, +    public IndexModule(final IndexSettings indexSettings, final AnalysisRegistry analysisRegistry, final EngineFactory engineFactory) {, +        this.engineFactory = Objects.requireNonNull(engineFactory);, +     * The engine factory provided during construction of this index module., +     *, +     * @return the engine factory, +     */, +    EngineFactory getEngineFactory() {, +        return engineFactory;, +    }, +, +    /**, +                shardStoreDeleter, analysisRegistry, engineFactory, circuitBreakerService, bigArrays, threadPool, scriptService,, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +            EngineFactory engineFactory,, +        this.engineFactory = Objects.requireNonNull(engineFactory);, +    public final EngineFactory getEngineFactory() {, +    }, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    public abstract SequenceNumbersService seqNoService();, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;]