[+++ b/server/src/test/java/org/elasticsearch/action/search/SearchAsyncActionTests.java, +import java.util.concurrent.atomic.AtomicBoolean;, +import static org.elasticsearch.common.util.concurrent.ConcurrentCollections.newConcurrentMap;, +import static org.elasticsearch.common.util.concurrent.ConcurrentCollections.newConcurrentSet;, +, +                        public void run() {, +        Map<DiscoveryNode, Set<Long>> nodeToContextMap = newConcurrentMap();, +        final CountDownLatch latch = new CountDownLatch(1);, +        final AtomicBoolean latchTriggered = new AtomicBoolean();, +                Set<Long> ids = nodeToContextMap.computeIfAbsent(connection.getNode(), (n) -> newConcurrentSet());, +                    public void run() {, +                        if (latchTriggered.compareAndSet(false, true) == false) {, +                            throw new AssertionError("latch triggered twice");]