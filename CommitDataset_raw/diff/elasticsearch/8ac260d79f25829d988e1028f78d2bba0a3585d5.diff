[+++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- Doesn't pass but we could make it pass pretty quick., +    <module name="UnusedImports">, +      The next property is optional. If we remove it then imports that are, +      only referenced by Javadoc cause the check to fail., +      <property name="processJavadoc" value="true" />, +    </module>, +    -->, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- Doesn't pass but we could make it pass pretty quick., +    <module name="UnusedImports">, +      The next property is optional. If we remove it then imports that are, +      only referenced by Javadoc cause the check to fail., +      <property name="processJavadoc" value="true" />, +    </module>, +    -->, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsIntegTests.java, +import java.util.Collections;, +import static java.util.Collections.singletonList;, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- Doesn't pass but we could make it pass pretty quick., +    <module name="UnusedImports">, +      The next property is optional. If we remove it then imports that are, +      only referenced by Javadoc cause the check to fail., +      <property name="processJavadoc" value="true" />, +    </module>, +    -->, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsIntegTests.java, +import java.util.Collections;, +import static java.util.Collections.singletonList;, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsTests.java, +import static java.util.Collections.singletonList;, +import static org.hamcrest.Matchers.hasItem;, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- Doesn't pass but we could make it pass pretty quick., +    <module name="UnusedImports">, +      The next property is optional. If we remove it then imports that are, +      only referenced by Javadoc cause the check to fail., +      <property name="processJavadoc" value="true" />, +    </module>, +    -->, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsIntegTests.java, +import java.util.Collections;, +import static java.util.Collections.singletonList;, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsTests.java, +import static java.util.Collections.singletonList;, +import static org.hamcrest.Matchers.hasItem;, +++ b/client/rest/src/test/java/org/elasticsearch/client/documentation/RestClientDocumentation.java, +import org.elasticsearch.client.HttpAsyncResponseConsumerFactory;, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- Doesn't pass but we could make it pass pretty quick., +    <module name="UnusedImports">, +      The next property is optional. If we remove it then imports that are, +      only referenced by Javadoc cause the check to fail., +      <property name="processJavadoc" value="true" />, +    </module>, +    -->, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsIntegTests.java, +import java.util.Collections;, +import static java.util.Collections.singletonList;, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsTests.java, +import static java.util.Collections.singletonList;, +import static org.hamcrest.Matchers.hasItem;, +++ b/client/rest/src/test/java/org/elasticsearch/client/documentation/RestClientDocumentation.java, +import org.elasticsearch.client.HttpAsyncResponseConsumerFactory;, +++ b/client/sniffer/src/main/java/org/elasticsearch/client/sniff/ElasticsearchNodesSniffer.java, +import java.util.Collections;, +import java.util.Map;, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- Doesn't pass but we could make it pass pretty quick., +    <module name="UnusedImports">, +      The next property is optional. If we remove it then imports that are, +      only referenced by Javadoc cause the check to fail., +      <property name="processJavadoc" value="true" />, +    </module>, +    -->, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsIntegTests.java, +import java.util.Collections;, +import static java.util.Collections.singletonList;, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsTests.java, +import static java.util.Collections.singletonList;, +import static org.hamcrest.Matchers.hasItem;, +++ b/client/rest/src/test/java/org/elasticsearch/client/documentation/RestClientDocumentation.java, +import org.elasticsearch.client.HttpAsyncResponseConsumerFactory;, +++ b/client/sniffer/src/main/java/org/elasticsearch/client/sniff/ElasticsearchNodesSniffer.java, +import java.util.Collections;, +import java.util.Map;, +++ b/client/sniffer/src/main/java/org/elasticsearch/client/sniff/SniffOnFailureListener.java, +import org.apache.http.HttpHost;, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- Doesn't pass but we could make it pass pretty quick., +    <module name="UnusedImports">, +      The next property is optional. If we remove it then imports that are, +      only referenced by Javadoc cause the check to fail., +      <property name="processJavadoc" value="true" />, +    </module>, +    -->, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsIntegTests.java, +import java.util.Collections;, +import static java.util.Collections.singletonList;]