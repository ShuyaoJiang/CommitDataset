[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            // TODO: remove this deprecation compatibility setting for 7.0, +            systemProperty 'es.aggregations.enable_scripted_metric_agg_param', 'false', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            // TODO: remove this deprecation compatibility setting for 7.0, +            systemProperty 'es.aggregations.enable_scripted_metric_agg_param', 'false', +++ b/docs/build.gradle, +, +  // TODO: remove this deprecation compatibility setting for 7.0, +  systemProperty 'es.aggregations.enable_scripted_metric_agg_param', 'false', +        body: { "script": { "lang": "painless", "source": "state.transactions = []" } }, +        body: { "script": { "lang": "painless", "source": "state.transactions.add(doc.type.value == 'sale' ? doc.amount.value : -1 * doc.amount.value)" } }, +        body: { "script": { "lang": "painless", "source": "double profit = 0;for (t in state.transactions) { profit += t; } return profit" } }, +        body: { "script": { "lang": "painless", "source": "double profit = 0;for (a in states) { profit += a; } return profit" } }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            // TODO: remove this deprecation compatibility setting for 7.0, +            systemProperty 'es.aggregations.enable_scripted_metric_agg_param', 'false', +++ b/docs/build.gradle, +, +  // TODO: remove this deprecation compatibility setting for 7.0, +  systemProperty 'es.aggregations.enable_scripted_metric_agg_param', 'false', +        body: { "script": { "lang": "painless", "source": "state.transactions = []" } }, +        body: { "script": { "lang": "painless", "source": "state.transactions.add(doc.type.value == 'sale' ? doc.amount.value : -1 * doc.amount.value)" } }, +        body: { "script": { "lang": "painless", "source": "double profit = 0;for (t in state.transactions) { profit += t; } return profit" } }, +        body: { "script": { "lang": "painless", "source": "double profit = 0;for (a in states) { profit += a; } return profit" } }, +++ b/server/build.gradle, +// TODO: remove these compatibility tests in 7.0, +additionalTest('testScriptedMetricAggParamsV6Compatibility') {, +  include '**/ScriptedMetricAggregatorAggStateV6CompatTests.class', +  include '**/InternalScriptedMetricAggStateV6CompatTests.class', +  systemProperty 'es.aggregations.enable_scripted_metric_agg_param', 'true', +}, +, +test {, +  // these are tested explicitly in separate test tasks, +  exclude '**/ScriptedMetricAggregatorAggStateV6CompatTests.class', +  exclude '**/InternalScriptedMetricAggStateV6CompatTests.class', +}, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            // TODO: remove this deprecation compatibility setting for 7.0, +            systemProperty 'es.aggregations.enable_scripted_metric_agg_param', 'false', +++ b/docs/build.gradle, +, +  // TODO: remove this deprecation compatibility setting for 7.0, +  systemProperty 'es.aggregations.enable_scripted_metric_agg_param', 'false', +        body: { "script": { "lang": "painless", "source": "state.transactions = []" } }, +        body: { "script": { "lang": "painless", "source": "state.transactions.add(doc.type.value == 'sale' ? doc.amount.value : -1 * doc.amount.value)" } }, +        body: { "script": { "lang": "painless", "source": "double profit = 0;for (t in state.transactions) { profit += t; } return profit" } }, +        body: { "script": { "lang": "painless", "source": "double profit = 0;for (a in states) { profit += a; } return profit" } }, +++ b/server/build.gradle, +// TODO: remove these compatibility tests in 7.0, +additionalTest('testScriptedMetricAggParamsV6Compatibility') {, +  include '**/ScriptedMetricAggregatorAggStateV6CompatTests.class', +  include '**/InternalScriptedMetricAggStateV6CompatTests.class', +  systemProperty 'es.aggregations.enable_scripted_metric_agg_param', 'true', +}, +, +test {, +  // these are tested explicitly in separate test tasks, +  exclude '**/ScriptedMetricAggregatorAggStateV6CompatTests.class', +  exclude '**/InternalScriptedMetricAggStateV6CompatTests.class', +}, +++ b/server/src/main/java/org/elasticsearch/script/ScriptedMetricAggContexts.java, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.common.logging.Loggers;, +    private static final DeprecationLogger DEPRECATION_LOGGER =, +        new DeprecationLogger(Loggers.getLogger(ScriptedMetricAggContexts.class));, +, +    // Public for access from tests, +    public static final String AGG_PARAM_DEPRECATION_WARNING =, +        "params._agg/_aggs for scripted metric aggregations are deprecated, use state/states (not in params) instead. " +, +        "Use -Des.aggregations.enable_scripted_metric_agg_param=false to disable.";, +, +    public static boolean deprecatedAggParamEnabled() {, +        boolean enabled = Boolean.parseBoolean(, +            System.getProperty("es.aggregations.enable_scripted_metric_agg_param", "true"));, +, +        if (enabled) {, +            DEPRECATION_LOGGER.deprecatedAndMaybeLog("enable_scripted_metric_agg_param", AGG_PARAM_DEPRECATION_WARNING);, +        }, +, +        return enabled;, +    }, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            // TODO: remove this deprecation compatibility setting for 7.0, +            systemProperty 'es.aggregations.enable_scripted_metric_agg_param', 'false', +++ b/docs/build.gradle, +, +  // TODO: remove this deprecation compatibility setting for 7.0, +  systemProperty 'es.aggregations.enable_scripted_metric_agg_param', 'false', +        body: { "script": { "lang": "painless", "source": "state.transactions = []" } }, +        body: { "script": { "lang": "painless", "source": "state.transactions.add(doc.type.value == 'sale' ? doc.amount.value : -1 * doc.amount.value)" } }, +        body: { "script": { "lang": "painless", "source": "double profit = 0;for (t in state.transactions) { profit += t; } return profit" } }, +        body: { "script": { "lang": "painless", "source": "double profit = 0;for (a in states) { profit += a; } return profit" } }, +++ b/server/build.gradle, +// TODO: remove these compatibility tests in 7.0, +additionalTest('testScriptedMetricAggParamsV6Compatibility') {, +  include '**/ScriptedMetricAggregatorAggStateV6CompatTests.class', +  include '**/InternalScriptedMetricAggStateV6CompatTests.class']