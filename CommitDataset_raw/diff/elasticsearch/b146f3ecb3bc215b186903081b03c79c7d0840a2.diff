[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            if (project.path.startsWith(':modules:') == false) {, +                into('elasticsearch'), +            }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            if (project.path.startsWith(':modules:') == false) {, +                into('elasticsearch'), +            }, +++ b/buildSrc/src/main/resources/plugin-descriptor.properties, +# This file must exist as 'plugin-descriptor.properties' in a folder named `elasticsearch`, +# inside all plugins., +#|____elasticsearch/, +#| |____   <arbitrary name1>.jar <-- classes, resources, dependencies, +#| |____   <arbitrary nameN>.jar <-- any number of jars, +#| |____   plugin-descriptor.properties <-- example contents below:, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            if (project.path.startsWith(':modules:') == false) {, +                into('elasticsearch'), +            }, +++ b/buildSrc/src/main/resources/plugin-descriptor.properties, +# This file must exist as 'plugin-descriptor.properties' in a folder named `elasticsearch`, +# inside all plugins., +#|____elasticsearch/, +#| |____   <arbitrary name1>.jar <-- classes, resources, dependencies, +#| |____   <arbitrary nameN>.jar <-- any number of jars, +#| |____   plugin-descriptor.properties <-- example contents below:, +++ b/core/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, +    private Path unzip(Path zip, Path pluginsDir) throws IOException, UserError {, +        boolean hasEsDir = false;, +                if (entry.getName().startsWith("elasticsearch/") == false) {, +                    // only extract the elasticsearch directory, +                    continue;, +                }, +                hasEsDir = true;, +                Path targetFile = target.resolve(entry.getName().substring("elasticsearch/".length()));, +        if (hasEsDir == false) {, +            IOUtils.rm(target);, +            throw new UserError(CliTool.ExitStatus.DATA_ERROR, "`elasticsearch` directory is missing in the plugin zip");, +        }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            if (project.path.startsWith(':modules:') == false) {, +                into('elasticsearch'), +            }, +++ b/buildSrc/src/main/resources/plugin-descriptor.properties, +# This file must exist as 'plugin-descriptor.properties' in a folder named `elasticsearch`, +# inside all plugins., +#|____elasticsearch/, +#| |____   <arbitrary name1>.jar <-- classes, resources, dependencies, +#| |____   <arbitrary nameN>.jar <-- any number of jars, +#| |____   plugin-descriptor.properties <-- example contents below:, +++ b/core/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, +    private Path unzip(Path zip, Path pluginsDir) throws IOException, UserError {, +        boolean hasEsDir = false;, +                if (entry.getName().startsWith("elasticsearch/") == false) {, +                    // only extract the elasticsearch directory, +                    continue;, +                }, +                hasEsDir = true;, +                Path targetFile = target.resolve(entry.getName().substring("elasticsearch/".length()));, +        if (hasEsDir == false) {, +            IOUtils.rm(target);, +            throw new UserError(CliTool.ExitStatus.DATA_ERROR, "`elasticsearch` directory is missing in the plugin zip");, +        }, +++ b/core/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortBuilder.java, +public class GeoDistanceSortBuilder extends SortBuilder {, +    final String fieldName;, +    private final List<String> geohashes = new ArrayList<>();, +    private GeoDistance geoDistance;, +    private DistanceUnit unit;, +    private SortOrder order;, +    private String sortMode;, +    private Boolean coerce;, +    private Boolean ignoreMalformed;, +    public GeoDistanceSortBuilder(String fieldName) {, +        this.geohashes.addAll(Arrays.asList(geohashes));, +    public SortBuilder missing(Object missing) {, +        builder.startObject("_geo_distance");, +        if (geohashes.size() == 0 && points.size() == 0) {, +            throw new ElasticsearchParseException("No points provided for _geo_distance sort.");, +        }, +        for (String geohash : geohashes) {, +            builder.value(geohash);, +        }, +        if (unit != null) {, +        }, +        if (geoDistance != null) {, +        }, +        if (coerce != null) {, +        }, +        if (ignoreMalformed != null) {, +        }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            if (project.path.startsWith(':modules:') == false) {, +                into('elasticsearch'), +            }, +++ b/buildSrc/src/main/resources/plugin-descriptor.properties, +# This file must exist as 'plugin-descriptor.properties' in a folder named `elasticsearch`, +# inside all plugins., +#|____elasticsearch/, +#| |____   <arbitrary name1>.jar <-- classes, resources, dependencies]