[+++ b/src/main/java/org/elasticsearch/shield/ShieldPlugin.java, +import org.elasticsearch.shield.signature.InternalSignatureService;, +import org.elasticsearch.shield.signature.SignatureService;, +                ImmutableList.<Class<? extends LifecycleComponent>>of(LicenseService.class, FileRolesStore.class, Realms.class, InternalSignatureService.class) :, +++ b/src/main/java/org/elasticsearch/shield/ShieldPlugin.java, +import org.elasticsearch.shield.signature.InternalSignatureService;, +import org.elasticsearch.shield.signature.SignatureService;, +                ImmutableList.<Class<? extends LifecycleComponent>>of(LicenseService.class, FileRolesStore.class, Realms.class, InternalSignatureService.class) :, +++ b/src/main/java/org/elasticsearch/shield/signature/InternalSignatureService.java, +import org.elasticsearch.common.component.AbstractLifecycleComponent;, +public class InternalSignatureService extends AbstractLifecycleComponent<InternalSignatureService> implements SignatureService {, +    private final Environment env;, +    private final ResourceWatcherService watcherService;, +    private final Listener listener;, +    private Path keyFile;, +        this.env = env;, +        this.watcherService = watcherService;, +        this.listener = listener;, +    @Override, +    protected void doStart() throws ElasticsearchException {, +        keyFile = resolveFile(settings, env);, +        key = readKey(keyFile);, +        FileWatcher watcher = new FileWatcher(keyFile.getParent().toFile());, +        watcher.addListener(new FileListener(listener));, +        watcherService.add(watcher, ResourceWatcherService.Frequency.HIGH);, +    }, +, +    @Override, +    protected void doStop() throws ElasticsearchException {}, +, +    @Override, +    protected void doClose() throws ElasticsearchException {}, +, +++ b/src/main/java/org/elasticsearch/shield/ShieldPlugin.java, +import org.elasticsearch.shield.signature.InternalSignatureService;, +import org.elasticsearch.shield.signature.SignatureService;, +                ImmutableList.<Class<? extends LifecycleComponent>>of(LicenseService.class, FileRolesStore.class, Realms.class, InternalSignatureService.class) :, +++ b/src/main/java/org/elasticsearch/shield/signature/InternalSignatureService.java, +import org.elasticsearch.common.component.AbstractLifecycleComponent;, +public class InternalSignatureService extends AbstractLifecycleComponent<InternalSignatureService> implements SignatureService {, +    private final Environment env;, +    private final ResourceWatcherService watcherService;, +    private final Listener listener;, +    private Path keyFile;, +        this.env = env;, +        this.watcherService = watcherService;, +        this.listener = listener;, +    @Override, +    protected void doStart() throws ElasticsearchException {, +        keyFile = resolveFile(settings, env);, +        key = readKey(keyFile);, +        FileWatcher watcher = new FileWatcher(keyFile.getParent().toFile());, +        watcher.addListener(new FileListener(listener));, +        watcherService.add(watcher, ResourceWatcherService.Frequency.HIGH);, +    }, +, +    @Override, +    protected void doStop() throws ElasticsearchException {}, +, +    @Override, +    protected void doClose() throws ElasticsearchException {}, +, +++ b/src/main/java/org/elasticsearch/shield/signature/SignatureModule.java, +        bind(InternalSignatureService.class).asEagerSingleton();, +++ b/src/main/java/org/elasticsearch/shield/ShieldPlugin.java, +import org.elasticsearch.shield.signature.InternalSignatureService;, +import org.elasticsearch.shield.signature.SignatureService;, +                ImmutableList.<Class<? extends LifecycleComponent>>of(LicenseService.class, FileRolesStore.class, Realms.class, InternalSignatureService.class) :, +++ b/src/main/java/org/elasticsearch/shield/signature/InternalSignatureService.java, +import org.elasticsearch.common.component.AbstractLifecycleComponent;, +public class InternalSignatureService extends AbstractLifecycleComponent<InternalSignatureService> implements SignatureService {, +    private final Environment env;, +    private final ResourceWatcherService watcherService;, +    private final Listener listener;, +    private Path keyFile;, +        this.env = env;, +        this.watcherService = watcherService;, +        this.listener = listener;, +    @Override, +    protected void doStart() throws ElasticsearchException {, +        keyFile = resolveFile(settings, env);, +        key = readKey(keyFile);, +        FileWatcher watcher = new FileWatcher(keyFile.getParent().toFile());, +        watcher.addListener(new FileListener(listener));, +        watcherService.add(watcher, ResourceWatcherService.Frequency.HIGH);, +    }, +, +    @Override, +    protected void doStop() throws ElasticsearchException {}, +, +    @Override, +    protected void doClose() throws ElasticsearchException {}, +, +++ b/src/main/java/org/elasticsearch/shield/signature/SignatureModule.java, +        bind(InternalSignatureService.class).asEagerSingleton();, +++ b/src/test/java/org/elasticsearch/integration/ScrollIdSigningTests.java, +import org.elasticsearch.shield.signature.InternalSignatureService;, +import java.util.Locale;, +, +        SignatureService signatureService = internalCluster().getDataNodeInstance(InternalSignatureService.class);]