[+++ b/src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java, +    public static String formatShardStatus(BroadcastOperationResponse response) {, +        String msg = " Total shards: " + response.getTotalShards() + " Successful shards: " + response.getSuccessfulShards() +, +                " & " + response.getFailedShards() + " shard failures:";, +        for (ShardOperationFailedException failure : response.getShardFailures()) {, +            msg += "\n " + failure.toString();, +        }, +        return msg;, +    }, +, +    public static String formatShardStatus(SearchResponse response) {, +        String msg = " Total shards: " + response.getTotalShards() + " Successful shards: " + response.getSuccessfulShards() +, +                " & " + response.getFailedShards() + " shard failures:";, +        for (ShardSearchFailure failure : response.getShardFailures()) {, +            msg += "\n " + failure.toString();, +        }, +        return msg;, +    }, +, +            fail("Hit count is " + searchResponse.getHits().totalHits() + " but " + expectedHitCount + " was expected. " + formatShardStatus(searchResponse));, +        String shardStatus = formatShardStatus(searchResponse);, +        assertThat("Expected different hit count. " + shardStatus, searchResponse.getHits().hits().length, equalTo(ids.length));, +            assertThat("Expected id: " + hit.getId() + " in the result but wasn't." + shardStatus, idsSet.remove(hit.getId()), equalTo(true));, +        assertThat("Expected ids: " + Arrays.toString(idsSet.toArray(new String[0])) + " in the result - result size differs." + shardStatus, idsSet.size(), equalTo(0));, +            fail("Count is " + countResponse.getCount() + " but " + expectedHitCount + " was expected. " +, +                    formatShardStatus(countResponse));, +++ b/src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java, +    public static String formatShardStatus(BroadcastOperationResponse response) {, +        String msg = " Total shards: " + response.getTotalShards() + " Successful shards: " + response.getSuccessfulShards() +, +                " & " + response.getFailedShards() + " shard failures:";, +        for (ShardOperationFailedException failure : response.getShardFailures()) {, +            msg += "\n " + failure.toString();, +        }, +        return msg;, +    }, +, +    public static String formatShardStatus(SearchResponse response) {, +        String msg = " Total shards: " + response.getTotalShards() + " Successful shards: " + response.getSuccessfulShards() +, +                " & " + response.getFailedShards() + " shard failures:";, +        for (ShardSearchFailure failure : response.getShardFailures()) {, +            msg += "\n " + failure.toString();, +        }, +        return msg;, +    }, +, +            fail("Hit count is " + searchResponse.getHits().totalHits() + " but " + expectedHitCount + " was expected. " + formatShardStatus(searchResponse));, +        String shardStatus = formatShardStatus(searchResponse);, +        assertThat("Expected different hit count. " + shardStatus, searchResponse.getHits().hits().length, equalTo(ids.length));, +            assertThat("Expected id: " + hit.getId() + " in the result but wasn't." + shardStatus, idsSet.remove(hit.getId()), equalTo(true));, +        assertThat("Expected ids: " + Arrays.toString(idsSet.toArray(new String[0])) + " in the result - result size differs." + shardStatus, idsSet.size(), equalTo(0));, +            fail("Count is " + countResponse.getCount() + " but " + expectedHitCount + " was expected. " +, +                    formatShardStatus(countResponse));, +++ b/src/test/java/org/elasticsearch/test/integration/search/simple/SimpleSearchTests.java, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertHitCount;, +            assertHitCount(searchResponse, 6l);, +, +        assertHitCount(search, 1l);, +        assertHitCount(searchResponse, 1l);, +        assertHitCount(searchResponse, 1l);, +        assertHitCount(searchResponse, 1l);, +        assertHitCount(searchResponse, 1l);, +        assertHitCount(searchResponse, 2l);, +        assertHitCount(searchResponse, 1l);, +        assertHitCount(searchResponse, 1l);, +        assertHitCount(searchResponse, 1l);, +        assertHitCount(searchResponse, 2l);, +        assertHitCount(searchResponse, 2l);, +            assertHitCount(searchResponse, 10l);, +, +            assertHitCount(searchResponse, 20l);, +]