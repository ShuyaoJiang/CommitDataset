[+++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +            sb.append('[').append(nodeName).append(']');, +            sb.append('[').append(nodeId).append(']');, +            sb.append('[').append(hostName).append(']');, +            sb.append('[').append(address).append(']');, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +            sb.append('[').append(nodeName).append(']');, +            sb.append('[').append(nodeId).append(']');, +            sb.append('[').append(hostName).append(']');, +            sb.append('[').append(address).append(']');, +++ b/core/src/main/java/org/elasticsearch/common/logging/Loggers.java, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +            sb.append('[').append(nodeName).append(']');, +            sb.append('[').append(nodeId).append(']');, +            sb.append('[').append(hostName).append(']');, +            sb.append('[').append(address).append(']');, +++ b/core/src/main/java/org/elasticsearch/common/logging/Loggers.java, +++ b/core/src/main/java/org/elasticsearch/common/network/IfConfig.java, +            sb.append(address.toString().substring(1));, +            sb.append(address.toString().substring(1));, +            sb.append(" netmask:" + InetAddress.getByAddress(new byte[] {, +            }).toString().substring(1));, +                sb.append(" broadcast:" + broadcast.toString().substring(1));, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +            sb.append('[').append(nodeName).append(']');, +            sb.append('[').append(nodeId).append(']');, +            sb.append('[').append(hostName).append(']');, +            sb.append('[').append(address).append(']');, +++ b/core/src/main/java/org/elasticsearch/common/logging/Loggers.java, +++ b/core/src/main/java/org/elasticsearch/common/network/IfConfig.java, +            sb.append(address.toString().substring(1));, +            sb.append(address.toString().substring(1));, +            sb.append(" netmask:" + InetAddress.getByAddress(new byte[] {, +            }).toString().substring(1));, +                sb.append(" broadcast:" + broadcast.toString().substring(1));, +++ b/core/src/main/java/org/elasticsearch/common/network/MulticastChannel.java, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +            sb.append('[').append(nodeName).append(']');, +            sb.append('[').append(nodeId).append(']');, +            sb.append('[').append(hostName).append(']');, +            sb.append('[').append(address).append(']');, +++ b/core/src/main/java/org/elasticsearch/common/logging/Loggers.java, +++ b/core/src/main/java/org/elasticsearch/common/network/IfConfig.java, +            sb.append(address.toString().substring(1));, +            sb.append(address.toString().substring(1));, +            sb.append(" netmask:" + InetAddress.getByAddress(new byte[] {, +            }).toString().substring(1));, +                sb.append(" broadcast:" + broadcast.toString().substring(1));, +++ b/core/src/main/java/org/elasticsearch/common/network/MulticastChannel.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +            sb.append('[').append(nodeName).append(']');, +            sb.append('[').append(nodeId).append(']');, +            sb.append('[').append(hostName).append(']');, +            sb.append('[').append(address).append(']');, +++ b/core/src/main/java/org/elasticsearch/common/logging/Loggers.java, +++ b/core/src/main/java/org/elasticsearch/common/network/IfConfig.java, +            sb.append(address.toString().substring(1));, +            sb.append(address.toString().substring(1));, +            sb.append(" netmask:" + InetAddress.getByAddress(new byte[] {, +            }).toString().substring(1));, +                sb.append(" broadcast:" + broadcast.toString().substring(1));, +++ b/core/src/main/java/org/elasticsearch/common/network/MulticastChannel.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/transport/InetSocketTransportAddress.java, +                int scope_id = in.readInt();, +                inetAddress = Inet6Address.getByAddress(null, a, scope_id);, +            this.address = new InetSocketAddress(in.readString(), in.readInt());, +    public InetSocketTransportAddress(String hostname, int port) {, +        this(new InetSocketAddress(hostname, port));, +    }, +, +        if (resolveAddress) {, +            return address.getHostName();, +        } else {, +            return getAddress();, +        }, +        return address.getAddress().getHostAddress();, +            if (address().getAddress() instanceof Inet6Address), +                out.writeInt(((Inet6Address) address.getAddress()).getScopeId());, +            out.writeString(address.getHostName());, +        return "inet[" + address + "]";, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +            sb.append('[').append(nodeName).append(']');, +            sb.append('[').append(nodeId).append(']');, +            sb.append('[').append(hostName).append(']');, +            sb.append('[').append(address).append(']');, +++ b/core/src/main/java/org/elasticsearch/common/logging/Loggers.java, +++ b/core/src/main/java/org/elasticsearch/common/network/IfConfig.java, +            sb.append(address.toString().substring(1));, +            sb.append(address.toString().substring(1));, +            sb.append(" netmask:" + InetAddress.getByAddress(new byte[] {, +            }).toString().substring(1));, +                sb.append(" broadcast:" + broadcast.toString().substring(1));, +++ b/core/src/main/java/org/elasticsearch/common/network/MulticastChannel.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/transport/InetSocketTransportAddress.java, +                int scope_id = in.readInt();, +                inetAddress = Inet6Address.getByAddress(null, a, scope_id);, +            this.address = new InetSocketAddress(in.readString(), in.readInt());]