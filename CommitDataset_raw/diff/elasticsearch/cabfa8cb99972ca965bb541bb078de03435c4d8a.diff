[+++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * {@link #addRescorer(org.elasticsearch.search.rescore.RescoreBuilder, int)}., +    public SearchRequestBuilder setRescorer(RescoreBuilder<?> rescorer) {, +     * {@link #addRescorer(org.elasticsearch.search.rescore.RescoreBuilder, int)}., +    public SearchRequestBuilder setRescorer(RescoreBuilder rescorer, int window) {, +        return addRescorer(rescorer.windowSize(window));, +    public SearchRequestBuilder addRescorer(RescoreBuilder<?> rescorer) {, +        sourceBuilder().addRescorer(rescorer);, +    public SearchRequestBuilder addRescorer(RescoreBuilder<?> rescorer, int window) {, +        sourceBuilder().addRescorer(rescorer.windowSize(window));, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * {@link #addRescorer(org.elasticsearch.search.rescore.RescoreBuilder, int)}., +    public SearchRequestBuilder setRescorer(RescoreBuilder<?> rescorer) {, +     * {@link #addRescorer(org.elasticsearch.search.rescore.RescoreBuilder, int)}., +    public SearchRequestBuilder setRescorer(RescoreBuilder rescorer, int window) {, +        return addRescorer(rescorer.windowSize(window));, +    public SearchRequestBuilder addRescorer(RescoreBuilder<?> rescorer) {, +        sourceBuilder().addRescorer(rescorer);, +    public SearchRequestBuilder addRescorer(RescoreBuilder<?> rescorer, int window) {, +        sourceBuilder().addRescorer(rescorer.windowSize(window));, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.rescore.RescoreBuilder;, +     * Reads a {@link RescoreBuilder} from the current stream, +    public RescoreBuilder<?> readRescorer() throws IOException {, +        return readNamedWriteable(RescoreBuilder.class);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * {@link #addRescorer(org.elasticsearch.search.rescore.RescoreBuilder, int)}., +    public SearchRequestBuilder setRescorer(RescoreBuilder<?> rescorer) {, +     * {@link #addRescorer(org.elasticsearch.search.rescore.RescoreBuilder, int)}., +    public SearchRequestBuilder setRescorer(RescoreBuilder rescorer, int window) {, +        return addRescorer(rescorer.windowSize(window));, +    public SearchRequestBuilder addRescorer(RescoreBuilder<?> rescorer) {, +        sourceBuilder().addRescorer(rescorer);, +    public SearchRequestBuilder addRescorer(RescoreBuilder<?> rescorer, int window) {, +        sourceBuilder().addRescorer(rescorer.windowSize(window));, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.rescore.RescoreBuilder;, +     * Reads a {@link RescoreBuilder} from the current stream, +    public RescoreBuilder<?> readRescorer() throws IOException {, +        return readNamedWriteable(RescoreBuilder.class);, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.search.rescore.RescoreBuilder;, +     * Writes a {@link RescoreBuilder} to the current stream, +    public void writeRescorer(RescoreBuilder<?> rescorer) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * {@link #addRescorer(org.elasticsearch.search.rescore.RescoreBuilder, int)}., +    public SearchRequestBuilder setRescorer(RescoreBuilder<?> rescorer) {, +     * {@link #addRescorer(org.elasticsearch.search.rescore.RescoreBuilder, int)}., +    public SearchRequestBuilder setRescorer(RescoreBuilder rescorer, int window) {, +        return addRescorer(rescorer.windowSize(window));, +    public SearchRequestBuilder addRescorer(RescoreBuilder<?> rescorer) {, +        sourceBuilder().addRescorer(rescorer);, +    public SearchRequestBuilder addRescorer(RescoreBuilder<?> rescorer, int window) {, +        sourceBuilder().addRescorer(rescorer.windowSize(window));, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.rescore.RescoreBuilder;, +     * Reads a {@link RescoreBuilder} from the current stream, +    public RescoreBuilder<?> readRescorer() throws IOException {, +        return readNamedWriteable(RescoreBuilder.class);, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.search.rescore.RescoreBuilder;, +     * Writes a {@link RescoreBuilder} to the current stream, +    public void writeRescorer(RescoreBuilder<?> rescorer) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.rescore.QueryRescorerBuilder;, +import org.elasticsearch.search.rescore.RescoreBuilder;, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.HashSet;, +import java.util.List;, +import java.util.Map;, +import java.util.Set;, +import java.util.function.Supplier;, +, +        configureRescorers();, +    private void configureRescorers() {, +        namedWriteableRegistry.registerPrototype(RescoreBuilder.class, QueryRescorerBuilder.PROTOTYPE);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * {@link #addRescorer(org.elasticsearch.search.rescore.RescoreBuilder, int)}., +    public SearchRequestBuilder setRescorer(RescoreBuilder<?> rescorer) {, +     * {@link #addRescorer(org.elasticsearch.search.rescore.RescoreBuilder, int)}., +    public SearchRequestBuilder setRescorer(RescoreBuilder rescorer, int window) {, +        return addRescorer(rescorer.windowSize(window));, +    public SearchRequestBuilder addRescorer(RescoreBuilder<?> rescorer) {, +        sourceBuilder().addRescorer(rescorer);, +    public SearchRequestBuilder addRescorer(RescoreBuilder<?> rescorer, int window) {, +        sourceBuilder().addRescorer(rescorer.windowSize(window));, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.rescore.RescoreBuilder;, +     * Reads a {@link RescoreBuilder} from the current stream, +    public RescoreBuilder<?> readRescorer() throws IOException {, +        return readNamedWriteable(RescoreBuilder.class);, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.search.rescore.RescoreBuilder;, +     * Writes a {@link RescoreBuilder} to the current stream, +    public void writeRescorer(RescoreBuilder<?> rescorer) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.rescore.QueryRescorerBuilder;]