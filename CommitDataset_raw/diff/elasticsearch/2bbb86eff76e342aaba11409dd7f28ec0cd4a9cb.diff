[+++ b/sql/cli/src/main/java/org/elasticsearch/xpack/sql/cli/ResponseToString.java, +import java.nio.file.Paths;, +            Path dotTempFile = Files.createTempFile(Paths.get("."), "sql-gv", ".dot");, +++ b/sql/cli/src/main/java/org/elasticsearch/xpack/sql/cli/ResponseToString.java, +import java.nio.file.Paths;, +            Path dotTempFile = Files.createTempFile(Paths.get("."), "sql-gv", ".dot");, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +        // TODO we ought to make sure we use all of these, +                // TODO why serialize NULL types at all?, +            // TODO:  we ought to make sure we use all of these, +++ b/sql/cli/src/main/java/org/elasticsearch/xpack/sql/cli/ResponseToString.java, +import java.nio.file.Paths;, +            Path dotTempFile = Files.createTempFile(Paths.get("."), "sql-gv", ".dot");, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +        // TODO we ought to make sure we use all of these, +                // TODO why serialize NULL types at all?, +            // TODO:  we ought to make sure we use all of these, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/debug/Debug.java, +/**, + * Class handling debug logging. Typically disabled (hence why it's called debug)., + * JDBC carries a lot of legacy conventions, logging being one of them - in JDBC logging was expected to, + * be to System.Err/Out since there were no logging frameworks at the time., + * This didn't work so the API was changed through {@link DriverManager#getLogStream()} however that also had issues, + * being global and not working well with encoding (hence why {@link DriverManager#getLogWriter()} was introduced) , + * and was changed again through {@link DataSource#getLogWriter()}., + * However by then the damage was done and most drivers don't use either and have their own logging implementation., + * , + * This class tries to cater to both audience - use the legacy, Writer way if needed though strive to use the , + * proper typical approach, that of specifying intention and output (file) in the URL., + * , + * For this reason the {@link System#out} and {@link System#err} are being refered in this class though are used only, + * when needed., + */, +    @SuppressForbidden(reason = "JDBC drivers allows logging to Sys.out"), +, +    @SuppressForbidden(reason = "JDBC drivers allows logging to Sys.err"), +++ b/sql/cli/src/main/java/org/elasticsearch/xpack/sql/cli/ResponseToString.java, +import java.nio.file.Paths;, +            Path dotTempFile = Files.createTempFile(Paths.get("."), "sql-gv", ".dot");, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +        // TODO we ought to make sure we use all of these, +                // TODO why serialize NULL types at all?, +            // TODO:  we ought to make sure we use all of these, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/debug/Debug.java, +/**, + * Class handling debug logging. Typically disabled (hence why it's called debug)., + * JDBC carries a lot of legacy conventions, logging being one of them - in JDBC logging was expected to, + * be to System.Err/Out since there were no logging frameworks at the time., + * This didn't work so the API was changed through {@link DriverManager#getLogStream()} however that also had issues, + * being global and not working well with encoding (hence why {@link DriverManager#getLogWriter()} was introduced) , + * and was changed again through {@link DataSource#getLogWriter()}., + * However by then the damage was done and most drivers don't use either and have their own logging implementation., + * , + * This class tries to cater to both audience - use the legacy, Writer way if needed though strive to use the , + * proper typical approach, that of specifying intention and output (file) in the URL., + * , + * For this reason the {@link System#out} and {@link System#err} are being refered in this class though are used only, + * when needed., + */, +    @SuppressForbidden(reason = "JDBC drivers allows logging to Sys.out"), +, +    @SuppressForbidden(reason = "JDBC drivers allows logging to Sys.err"), +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/NamedExpression.java, +import org.elasticsearch.xpack.sql.tree.Location;, +, +    public int hashCode() {, +        return Objects.hash(id, name, synthetic);, +++ b/sql/cli/src/main/java/org/elasticsearch/xpack/sql/cli/ResponseToString.java, +import java.nio.file.Paths;, +            Path dotTempFile = Files.createTempFile(Paths.get("."), "sql-gv", ".dot");, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +        // TODO we ought to make sure we use all of these, +                // TODO why serialize NULL types at all?, +            // TODO:  we ought to make sure we use all of these, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/debug/Debug.java, +/**, + * Class handling debug logging. Typically disabled (hence why it's called debug)., + * JDBC carries a lot of legacy conventions, logging being one of them - in JDBC logging was expected to, + * be to System.Err/Out since there were no logging frameworks at the time., + * This didn't work so the API was changed through {@link DriverManager#getLogStream()} however that also had issues, + * being global and not working well with encoding (hence why {@link DriverManager#getLogWriter()} was introduced) , + * and was changed again through {@link DataSource#getLogWriter()}., + * However by then the damage was done and most drivers don't use either and have their own logging implementation., + * , + * This class tries to cater to both audience - use the legacy, Writer way if needed though strive to use the , + * proper typical approach, that of specifying intention and output (file) in the URL., + * , + * For this reason the {@link System#out} and {@link System#err} are being refered in this class though are used only, + * when needed., + */, +    @SuppressForbidden(reason = "JDBC drivers allows logging to Sys.out"), +, +    @SuppressForbidden(reason = "JDBC drivers allows logging to Sys.err"), +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/NamedExpression.java, +import org.elasticsearch.xpack.sql.tree.Location;, +, +    public int hashCode() {, +        return Objects.hash(id, name, synthetic);, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/session/SingletonRowSet.java, +//TODO is it worth keeping this when we have ListRowSet?]