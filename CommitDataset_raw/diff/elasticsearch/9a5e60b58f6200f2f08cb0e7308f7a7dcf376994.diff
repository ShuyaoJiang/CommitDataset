[+++ b/elasticsearch/x-pack/watcher/src/main/java/org/elasticsearch/watcher/actions/email/service/Account.java, +import org.elasticsearch.common.unit.TimeValue;, +    static final Settings DEFAULT_SMTP_TIMEOUT_SETTINGS = Settings.builder(), +            .put("connection_timeout", TimeValue.timeValueMinutes(2)), +            .put("write_timeout", TimeValue.timeValueMinutes(2)), +            .put("timeout", TimeValue.timeValueMinutes(2)), +            .build();, +, +    Config getConfig() {, +        return config;, +    }, +, +                Settings.Builder builder = Settings.builder().put(DEFAULT_SMTP_TIMEOUT_SETTINGS).put(settings);, +                replaceTimeValue(builder, "connection_timeout", "connectiontimeout");, +                replaceTimeValue(builder, "write_timeout", "writetimeout");, +                replaceTimeValue(builder, "timeout", "timeout");, +, +            static void replaceTimeValue(Settings.Builder settings, String currentKey, String newKey) {, +                String value = settings.remove(currentKey);, +                if (value != null) {, +                    settings.put(newKey, TimeValue.parseTimeValue(value, currentKey).millis());, +                }, +            }, +++ b/elasticsearch/x-pack/watcher/src/main/java/org/elasticsearch/watcher/actions/email/service/Account.java, +import org.elasticsearch.common.unit.TimeValue;, +    static final Settings DEFAULT_SMTP_TIMEOUT_SETTINGS = Settings.builder(), +            .put("connection_timeout", TimeValue.timeValueMinutes(2)), +            .put("write_timeout", TimeValue.timeValueMinutes(2)), +            .put("timeout", TimeValue.timeValueMinutes(2)), +            .build();, +, +    Config getConfig() {, +        return config;, +    }, +, +                Settings.Builder builder = Settings.builder().put(DEFAULT_SMTP_TIMEOUT_SETTINGS).put(settings);, +                replaceTimeValue(builder, "connection_timeout", "connectiontimeout");, +                replaceTimeValue(builder, "write_timeout", "writetimeout");, +                replaceTimeValue(builder, "timeout", "timeout");, +, +            static void replaceTimeValue(Settings.Builder settings, String currentKey, String newKey) {, +                String value = settings.remove(currentKey);, +                if (value != null) {, +                    settings.put(newKey, TimeValue.parseTimeValue(value, currentKey).millis());, +                }, +            }, +++ b/elasticsearch/x-pack/watcher/src/test/java/org/elasticsearch/watcher/actions/email/service/AccountTests.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.common.unit.TimeValue;, +        // default properties, +        for (String name : new String[]{ "connection_timeout", "write_timeout", "timeout"}) {, +            String propertyName = name.replaceAll("_", "");, +            smtpProps.put("mail.smtp." + propertyName,, +                    String.valueOf(TimeValue.parseTimeValue(Account.DEFAULT_SMTP_TIMEOUT_SETTINGS.get(name), name).millis()));, +        }, +, +, +    public void testDefaultAccountTimeout() {, +        Account account = new Account(new Account.Config("default", Settings.builder(), +                .put("smtp.host", "localhost"), +                .put("smtp.port", server.port()), +                .build()), SecretService.Insecure.INSTANCE, logger);, +, +        Properties mailProperties = account.getConfig().smtp.properties;, +        assertThat(mailProperties.get("mail.smtp.connectiontimeout"), is(String.valueOf(TimeValue.timeValueMinutes(2).millis())));, +        assertThat(mailProperties.get("mail.smtp.writetimeout"), is(String.valueOf(TimeValue.timeValueMinutes(2).millis())));, +        assertThat(mailProperties.get("mail.smtp.timeout"), is(String.valueOf(TimeValue.timeValueMinutes(2).millis())));, +    }, +, +    public void testAccountTimeoutsCanBeConfigureAsTimeValue() {, +        Account account = new Account(new Account.Config("default", Settings.builder(), +                .put("smtp.host", "localhost"), +                .put("smtp.port", server.port()), +                .put("smtp.connection_timeout", TimeValue.timeValueMinutes(4)), +                .put("smtp.write_timeout", TimeValue.timeValueMinutes(6)), +                .put("smtp.timeout", TimeValue.timeValueMinutes(8)), +                .build()), SecretService.Insecure.INSTANCE, logger);, +, +        Properties mailProperties = account.getConfig().smtp.properties;, +, +        assertThat(mailProperties.get("mail.smtp.connectiontimeout"), is(String.valueOf(TimeValue.timeValueMinutes(4).millis())));, +        assertThat(mailProperties.get("mail.smtp.writetimeout"), is(String.valueOf(TimeValue.timeValueMinutes(6).millis())));, +        assertThat(mailProperties.get("mail.smtp.timeout"), is(String.valueOf(TimeValue.timeValueMinutes(8).millis())));, +    }, +, +    public void testAccountTimeoutsConfiguredAsNumberAreRejected() {, +        expectThrows(ElasticsearchException.class, () -> {, +            new Account(new Account.Config("default", Settings.builder(), +                    .put("smtp.host", "localhost"), +                    .put("smtp.port", server.port()), +                    .put("smtp.connection_timeout", 4000), +                    .build()), SecretService.Insecure.INSTANCE, logger);, +        });, +    }]