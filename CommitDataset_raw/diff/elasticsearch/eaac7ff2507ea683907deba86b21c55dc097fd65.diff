[+++ b/src/main/java/org/elasticsearch/shield/authc/ldap/LdapSslSocketFactory.java, +import java.util.regex.Pattern;, +, +import static java.util.Arrays.asList;, +import static org.elasticsearch.common.base.Predicates.contains;, +import static org.elasticsearch.common.collect.Iterables.all;, +    private static final Pattern STARTS_WITH_LDAPS = Pattern.compile("^ldaps:.*", Pattern.CASE_INSENSITIVE);, +    private static final Pattern STARTS_WITH_LDAP = Pattern.compile("^ldap:.*", Pattern.CASE_INSENSITIVE);, +, +    }, +    /**, +     * This clears the static factory.  There are threading issues with this.  But for, +     * testing this is useful., +     */, +    @Deprecated, +    static void clear() {, +        logger.error("clear should only be called by tests");, +        instance = null;, +, +        boolean allSecure = all(asList(ldapUrls), contains(STARTS_WITH_LDAPS));, +        boolean allClear = all(asList(ldapUrls), contains(STARTS_WITH_LDAP));, +, +        if (!allSecure && !allClear) {, +            //No mixing is allowed because LdapSSLSocketFactory produces only SSL sockets and not clear text sockets, +        return allSecure;, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/LdapSslSocketFactory.java, +import java.util.regex.Pattern;, +, +import static java.util.Arrays.asList;, +import static org.elasticsearch.common.base.Predicates.contains;, +import static org.elasticsearch.common.collect.Iterables.all;, +    private static final Pattern STARTS_WITH_LDAPS = Pattern.compile("^ldaps:.*", Pattern.CASE_INSENSITIVE);, +    private static final Pattern STARTS_WITH_LDAP = Pattern.compile("^ldap:.*", Pattern.CASE_INSENSITIVE);, +, +    }, +    /**, +     * This clears the static factory.  There are threading issues with this.  But for, +     * testing this is useful., +     */, +    @Deprecated, +    static void clear() {, +        logger.error("clear should only be called by tests");, +        instance = null;, +, +        boolean allSecure = all(asList(ldapUrls), contains(STARTS_WITH_LDAPS));, +        boolean allClear = all(asList(ldapUrls), contains(STARTS_WITH_LDAP));, +, +        if (!allSecure && !allClear) {, +            //No mixing is allowed because LdapSSLSocketFactory produces only SSL sockets and not clear text sockets, +        return allSecure;, +++ b/src/main/java/org/elasticsearch/shield/ssl/SSLService.java, +    public static final String SHIELD_TRANSPORT_SSL = "shield.transport.ssl";, +    public static final String SHIELD_HTTP_SSL = "shield.http.ssl";, +    public static final String SHIELD_AUTHC_LDAP_URL = "shield.authc.ldap.url";, +     * Http Client-to-Node (inbound):, +        return settings.getAsBoolean(SHIELD_TRANSPORT_SSL, false) ||, +                settings.getAsBoolean(SHIELD_HTTP_SSL, false) ||, +                (LdapSslSocketFactory.secureUrls(settings.getAsArray(SHIELD_AUTHC_LDAP_URL)) &&, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/LdapSslSocketFactory.java, +import java.util.regex.Pattern;, +, +import static java.util.Arrays.asList;, +import static org.elasticsearch.common.base.Predicates.contains;, +import static org.elasticsearch.common.collect.Iterables.all;, +    private static final Pattern STARTS_WITH_LDAPS = Pattern.compile("^ldaps:.*", Pattern.CASE_INSENSITIVE);, +    private static final Pattern STARTS_WITH_LDAP = Pattern.compile("^ldap:.*", Pattern.CASE_INSENSITIVE);, +, +    }, +    /**, +     * This clears the static factory.  There are threading issues with this.  But for, +     * testing this is useful., +     */, +    @Deprecated, +    static void clear() {, +        logger.error("clear should only be called by tests");, +        instance = null;, +, +        boolean allSecure = all(asList(ldapUrls), contains(STARTS_WITH_LDAPS));, +        boolean allClear = all(asList(ldapUrls), contains(STARTS_WITH_LDAP));, +, +        if (!allSecure && !allClear) {, +            //No mixing is allowed because LdapSSLSocketFactory produces only SSL sockets and not clear text sockets, +        return allSecure;, +++ b/src/main/java/org/elasticsearch/shield/ssl/SSLService.java, +    public static final String SHIELD_TRANSPORT_SSL = "shield.transport.ssl";, +    public static final String SHIELD_HTTP_SSL = "shield.http.ssl";, +    public static final String SHIELD_AUTHC_LDAP_URL = "shield.authc.ldap.url";, +     * Http Client-to-Node (inbound):, +        return settings.getAsBoolean(SHIELD_TRANSPORT_SSL, false) ||, +                settings.getAsBoolean(SHIELD_HTTP_SSL, false) ||, +                (LdapSslSocketFactory.secureUrls(settings.getAsArray(SHIELD_AUTHC_LDAP_URL)) &&, +++ b/src/test/java/org/elasticsearch/shield/authc/ldap/ActiveDirectoryFactoryTests.java, +import org.junit.AfterClass;, +    @AfterClass, +    public static void clearTrustStore() {, +        LdapSslSocketFactory.clear();, +    }, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/LdapSslSocketFactory.java, +import java.util.regex.Pattern;, +]