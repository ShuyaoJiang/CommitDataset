[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +import org.elasticsearch.gradle.VersionProperties, +        env = [, +            'JAVA_HOME' : project.javaHome, +        ], +        env.put('ES_JAVA_OPTS', config.systemProperties.collect { key, value -> "-D${key}=${value}" }.join(" ")), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +import org.elasticsearch.gradle.VersionProperties, +        env = [, +            'JAVA_HOME' : project.javaHome, +        ], +        env.put('ES_JAVA_OPTS', config.systemProperties.collect { key, value -> "-D${key}=${value}" }.join(" ")), +++ b/core/src/main/java/org/elasticsearch/index/query/support/InnerHitBuilder.java, +            scriptFields = in.readList(ScriptField::new);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +import org.elasticsearch.gradle.VersionProperties, +        env = [, +            'JAVA_HOME' : project.javaHome, +        ], +        env.put('ES_JAVA_OPTS', config.systemProperties.collect { key, value -> "-D${key}=${value}" }.join(" ")), +++ b/core/src/main/java/org/elasticsearch/index/query/support/InnerHitBuilder.java, +            scriptFields = in.readList(ScriptField::new);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregatorBuilder.java, +                scriptFields.add(new ScriptField(in));, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +import org.elasticsearch.gradle.VersionProperties, +        env = [, +            'JAVA_HOME' : project.javaHome, +        ], +        env.put('ES_JAVA_OPTS', config.systemProperties.collect { key, value -> "-D${key}=${value}" }.join(" ")), +++ b/core/src/main/java/org/elasticsearch/index/query/support/InnerHitBuilder.java, +            scriptFields = in.readList(ScriptField::new);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregatorBuilder.java, +                scriptFields.add(new ScriptField(in));, +++ b/core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +                scriptFields.add(new ScriptField(in));, +        /**, +         * Read from a stream., +         */, +        public ScriptField(StreamInput in) throws IOException {, +            fieldName = in.readString();, +            script = Script.readScript(in);, +            ignoreFailure = in.readBoolean();, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            out.writeString(fieldName);, +            script.writeTo(out);, +            out.writeBoolean(ignoreFailure);, +        }, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +import org.elasticsearch.gradle.VersionProperties, +        env = [, +            'JAVA_HOME' : project.javaHome, +        ], +        env.put('ES_JAVA_OPTS', config.systemProperties.collect { key, value -> "-D${key}=${value}" }.join(" ")), +++ b/core/src/main/java/org/elasticsearch/index/query/support/InnerHitBuilder.java, +            scriptFields = in.readList(ScriptField::new);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregatorBuilder.java, +                scriptFields.add(new ScriptField(in));, +++ b/core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +                scriptFields.add(new ScriptField(in));, +        /**, +         * Read from a stream., +         */, +        public ScriptField(StreamInput in) throws IOException {, +            fieldName = in.readString();, +            script = Script.readScript(in);, +            ignoreFailure = in.readBoolean();, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            out.writeString(fieldName);, +            script.writeTo(out);, +            out.writeBoolean(ignoreFailure);, +        }, +, +++ b/docs/reference/aggregations/bucket/terms-aggregation.asciidoc]