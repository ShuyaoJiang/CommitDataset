[+++ b/core/src/main/java/org/elasticsearch/index/similarity/Similarities.java, +import java.util.Collection;, +, +    public static Collection<PreBuiltSimilarityProvider.Factory> listFactories() {, +++ b/core/src/main/java/org/elasticsearch/index/similarity/Similarities.java, +import java.util.Collection;, +, +    public static Collection<PreBuiltSimilarityProvider.Factory> listFactories() {, +++ b/core/src/main/java/org/elasticsearch/script/ScriptContextRegistry.java, +import java.util.*;, +    Collection<ScriptContext> scriptContexts() {, +++ b/core/src/main/java/org/elasticsearch/index/similarity/Similarities.java, +import java.util.Collection;, +, +    public static Collection<PreBuiltSimilarityProvider.Factory> listFactories() {, +++ b/core/src/main/java/org/elasticsearch/script/ScriptContextRegistry.java, +import java.util.*;, +    Collection<ScriptContext> scriptContexts() {, +++ b/core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java, +import java.nio.charset.StandardCharsets;, +import com.google.common.io.Resources;, +    public void testMarvelHerosPhraseSuggest() throws IOException {, +        for (String line: Resources.readLines(SuggestSearchIT.class.getResource("/config/names.txt"), StandardCharsets.UTF_8)) {, +    public void testPhraseBoundaryCases() throws IOException {, +        for (String line: Resources.readLines(SuggestSearchIT.class.getResource("/config/names.txt"), StandardCharsets.UTF_8)) {, +++ b/core/src/main/java/org/elasticsearch/index/similarity/Similarities.java, +import java.util.Collection;, +, +    public static Collection<PreBuiltSimilarityProvider.Factory> listFactories() {, +++ b/core/src/main/java/org/elasticsearch/script/ScriptContextRegistry.java, +import java.util.*;, +    Collection<ScriptContext> scriptContexts() {, +++ b/core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java, +import java.nio.charset.StandardCharsets;, +import com.google.common.io.Resources;, +    public void testMarvelHerosPhraseSuggest() throws IOException {, +        for (String line: Resources.readLines(SuggestSearchIT.class.getResource("/config/names.txt"), StandardCharsets.UTF_8)) {, +    public void testPhraseBoundaryCases() throws IOException {, +        for (String line: Resources.readLines(SuggestSearchIT.class.getResource("/config/names.txt"), StandardCharsets.UTF_8)) {, +++ b/docs/reference/indices/aliases.asciidoc, +searching, and routing values.]