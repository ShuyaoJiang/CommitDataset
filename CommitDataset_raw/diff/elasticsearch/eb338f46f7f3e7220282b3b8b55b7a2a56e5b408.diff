[+++ b/core/src/main/java/org/elasticsearch/action/explain/ExplainRequest.java, +        fields = in.readOptionalStringArray();, +        fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +        out.writeOptionalStringArray(fields);, +        out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/explain/ExplainRequest.java, +        fields = in.readOptionalStringArray();, +        fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +        out.writeOptionalStringArray(fields);, +        out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/get/GetRequest.java, +        fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +        out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/explain/ExplainRequest.java, +        fields = in.readOptionalStringArray();, +        fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +        out.writeOptionalStringArray(fields);, +        out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/get/GetRequest.java, +        fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +        out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/get/MultiGetRequest.java, +            fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +            out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/explain/ExplainRequest.java, +        fields = in.readOptionalStringArray();, +        fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +        out.writeOptionalStringArray(fields);, +        out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/get/GetRequest.java, +        fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +        out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/get/MultiGetRequest.java, +            fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +            out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/support/ToXContentToBytes.java, +            // So we have a stack trace logged somewhere, +++ b/core/src/main/java/org/elasticsearch/action/explain/ExplainRequest.java, +        fields = in.readOptionalStringArray();, +        fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +        out.writeOptionalStringArray(fields);, +        out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/get/GetRequest.java, +        fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +        out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/get/MultiGetRequest.java, +            fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +            out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/support/ToXContentToBytes.java, +            // So we have a stack trace logged somewhere, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoDistance.java, +    public static GeoDistance readFromStream(StreamInput in) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/explain/ExplainRequest.java, +        fields = in.readOptionalStringArray();, +        fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +        out.writeOptionalStringArray(fields);, +        out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/get/GetRequest.java, +        fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +        out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/get/MultiGetRequest.java, +            fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +            out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/support/ToXContentToBytes.java, +            // So we have a stack trace logged somewhere, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoDistance.java, +    public static GeoDistance readFromStream(StreamInput in) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +    /**, +     * Read a {@linkplain DateTimeZone}., +     */, +    public DateTimeZone readTimeZone() throws IOException {, +        return DateTimeZone.forID(readString());, +    }, +, +    /**, +     * Read an optional {@linkplain DateTimeZone}., +     */, +    public DateTimeZone readOptionalTimeZone() throws IOException {, +        if (readBoolean()) {, +            return DateTimeZone.forID(readString());, +        }, +        return null;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/explain/ExplainRequest.java, +        fields = in.readOptionalStringArray();, +        fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +        out.writeOptionalStringArray(fields);, +        out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/get/GetRequest.java, +        fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +        out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/get/MultiGetRequest.java, +            fetchSourceContext = in.readOptionalStreamable(FetchSourceContext::new);, +            out.writeOptionalStreamable(fetchSourceContext);, +++ b/core/src/main/java/org/elasticsearch/action/support/ToXContentToBytes.java, +            // So we have a stack trace logged somewhere, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoDistance.java, +    public static GeoDistance readFromStream(StreamInput in) throws IOException {]