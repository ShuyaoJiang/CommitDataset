[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SnapshotClient.java, +    public CreateSnapshotResponse create(CreateSnapshotRequest createSnapshotRequest, RequestOptions options), +    public void createAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SnapshotClient.java, +    public CreateSnapshotResponse create(CreateSnapshotRequest createSnapshotRequest, RequestOptions options), +    public void createAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/SnapshotIT.java, +        return execute(createSnapshotRequest, highLevelClient().snapshot()::create,, +            highLevelClient().snapshot()::createAsync);, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SnapshotClient.java, +    public CreateSnapshotResponse create(CreateSnapshotRequest createSnapshotRequest, RequestOptions options), +    public void createAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/SnapshotIT.java, +        return execute(createSnapshotRequest, highLevelClient().snapshot()::create,, +            highLevelClient().snapshot()::createAsync);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SnapshotClientDocumentationIT.java, +        CreateSnapshotResponse response = client.snapshot().create(request, RequestOptions.DEFAULT);, +, +        // tag::create-snapshot-response-snapshot-info, +        SnapshotInfo snapshotInfo = response.getSnapshotInfo(); // <1>, +        // end::create-snapshot-response-snapshot-info, +, +        assertNotNull(snapshotInfo);, +            client.snapshot().createAsync(request, RequestOptions.DEFAULT, listener); // <1>, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SnapshotClient.java, +    public CreateSnapshotResponse create(CreateSnapshotRequest createSnapshotRequest, RequestOptions options), +    public void createAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/SnapshotIT.java, +        return execute(createSnapshotRequest, highLevelClient().snapshot()::create,, +            highLevelClient().snapshot()::createAsync);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SnapshotClientDocumentationIT.java, +        CreateSnapshotResponse response = client.snapshot().create(request, RequestOptions.DEFAULT);, +, +        // tag::create-snapshot-response-snapshot-info, +        SnapshotInfo snapshotInfo = response.getSnapshotInfo(); // <1>, +        // end::create-snapshot-response-snapshot-info, +, +        assertNotNull(snapshotInfo);, +            client.snapshot().createAsync(request, RequestOptions.DEFAULT, listener); // <1>, +++ b/docs/java-rest/high-level/snapshot/create_snapshot.asciidoc, +Execute a `CreateSnapshotRequest` synchronously to receive a `CreateSnapshotResponse`., +, +Retrieve the `SnapshotInfo` from a `CreateSnapshotResponse` when the snapshot is fully created., +(The `waitForCompletion` parameter is `true`)., +, +["source","java",subs="attributes,callouts,macros"], +--------------------------------------------------, +include-tagged::{doc-tests}/SnapshotClientDocumentationIT.java[create-snapshot-response-snapshot-info], +--------------------------------------------------, +<1> The `SnapshotInfo` object., +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SnapshotClient.java, +    public CreateSnapshotResponse create(CreateSnapshotRequest createSnapshotRequest, RequestOptions options), +    public void createAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/SnapshotIT.java, +        return execute(createSnapshotRequest, highLevelClient().snapshot()::create,, +            highLevelClient().snapshot()::createAsync);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SnapshotClientDocumentationIT.java, +        CreateSnapshotResponse response = client.snapshot().create(request, RequestOptions.DEFAULT);, +, +        // tag::create-snapshot-response-snapshot-info, +        SnapshotInfo snapshotInfo = response.getSnapshotInfo(); // <1>, +        // end::create-snapshot-response-snapshot-info, +, +        assertNotNull(snapshotInfo);, +            client.snapshot().createAsync(request, RequestOptions.DEFAULT, listener); // <1>, +++ b/docs/java-rest/high-level/snapshot/create_snapshot.asciidoc, +Execute a `CreateSnapshotRequest` synchronously to receive a `CreateSnapshotResponse`., +, +Retrieve the `SnapshotInfo` from a `CreateSnapshotResponse` when the snapshot is fully created., +(The `waitForCompletion` parameter is `true`)., +, +["source","java",subs="attributes,callouts,macros"], +--------------------------------------------------, +include-tagged::{doc-tests}/SnapshotClientDocumentationIT.java[create-snapshot-response-snapshot-info], +--------------------------------------------------, +<1> The `SnapshotInfo` object., +, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SnapshotClient.java, +    public CreateSnapshotResponse create(CreateSnapshotRequest createSnapshotRequest, RequestOptions options), +    public void createAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/SnapshotIT.java, +        return execute(createSnapshotRequest, highLevelClient().snapshot()::create,, +            highLevelClient().snapshot()::createAsync);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SnapshotClientDocumentationIT.java, +        CreateSnapshotResponse response = client.snapshot().create(request, RequestOptions.DEFAULT);, +, +        // tag::create-snapshot-response-snapshot-info, +        SnapshotInfo snapshotInfo = response.getSnapshotInfo(); // <1>, +        // end::create-snapshot-response-snapshot-info, +, +        assertNotNull(snapshotInfo);, +            client.snapshot().createAsync(request, RequestOptions.DEFAULT, listener); // <1>, +++ b/docs/java-rest/high-level/snapshot/create_snapshot.asciidoc, +Execute a `CreateSnapshotRequest` synchronously to receive a `CreateSnapshotResponse`., +, +Retrieve the `SnapshotInfo` from a `CreateSnapshotResponse` when the snapshot is fully created., +(The `waitForCompletion` parameter is `true`).]