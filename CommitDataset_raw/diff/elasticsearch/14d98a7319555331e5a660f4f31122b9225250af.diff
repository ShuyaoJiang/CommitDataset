[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/ThrottlingNodeAllocation.java, +    private final int primariesInitialRecoveries;, +        this.primariesInitialRecoveries = componentSettings.getAsInt("node_initial_primaries_recoveries", 4);, +        logger.debug("using node_concurrent_recoveries [{}], node_initial_primaries_recoveries [{}]", concurrentRecoveries, primariesInitialRecoveries);, +                if (primariesInRecovery >= primariesInitialRecoveries) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/ThrottlingNodeAllocation.java, +    private final int primariesInitialRecoveries;, +        this.primariesInitialRecoveries = componentSettings.getAsInt("node_initial_primaries_recoveries", 4);, +        logger.debug("using node_concurrent_recoveries [{}], node_initial_primaries_recoveries [{}]", concurrentRecoveries, primariesInitialRecoveries);, +                if (primariesInRecovery >= primariesInitialRecoveries) {, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/cluster/routing/allocation/FailedShardsRoutingTests.java, +        ShardsAllocation strategy = new ShardsAllocation(settingsBuilder(), +                .put("cluster.routing.allocation.node_concurrent_recoveries", 10), +                .put("cluster.routing.allocation.node_initial_primaries_recoveries", 10), +                .build());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/ThrottlingNodeAllocation.java, +    private final int primariesInitialRecoveries;, +        this.primariesInitialRecoveries = componentSettings.getAsInt("node_initial_primaries_recoveries", 4);, +        logger.debug("using node_concurrent_recoveries [{}], node_initial_primaries_recoveries [{}]", concurrentRecoveries, primariesInitialRecoveries);, +                if (primariesInRecovery >= primariesInitialRecoveries) {, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/cluster/routing/allocation/FailedShardsRoutingTests.java, +        ShardsAllocation strategy = new ShardsAllocation(settingsBuilder(), +                .put("cluster.routing.allocation.node_concurrent_recoveries", 10), +                .put("cluster.routing.allocation.node_initial_primaries_recoveries", 10), +                .build());, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/cluster/routing/allocation/PrimaryNotRelocatedWhileBeingRecoveredTests.java, +        ShardsAllocation strategy = new ShardsAllocation(settingsBuilder(), +                .put("cluster.routing.allocation.node_concurrent_recoveries", 10), +                .put("cluster.routing.allocation.node_initial_primaries_recoveries", 10), +                .build());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/ThrottlingNodeAllocation.java, +    private final int primariesInitialRecoveries;, +        this.primariesInitialRecoveries = componentSettings.getAsInt("node_initial_primaries_recoveries", 4);, +        logger.debug("using node_concurrent_recoveries [{}], node_initial_primaries_recoveries [{}]", concurrentRecoveries, primariesInitialRecoveries);, +                if (primariesInRecovery >= primariesInitialRecoveries) {, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/cluster/routing/allocation/FailedShardsRoutingTests.java, +        ShardsAllocation strategy = new ShardsAllocation(settingsBuilder(), +                .put("cluster.routing.allocation.node_concurrent_recoveries", 10), +                .put("cluster.routing.allocation.node_initial_primaries_recoveries", 10), +                .build());, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/cluster/routing/allocation/PrimaryNotRelocatedWhileBeingRecoveredTests.java, +        ShardsAllocation strategy = new ShardsAllocation(settingsBuilder(), +                .put("cluster.routing.allocation.node_concurrent_recoveries", 10), +                .put("cluster.routing.allocation.node_initial_primaries_recoveries", 10), +                .build());, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/cluster/routing/allocation/TenShardsOneReplicaRoutingTests.java, +                .put("cluster.routing.allocation.node_concurrent_recoveries", 10), +                .put("cluster.routing.allocation.node_initial_primaries_recoveries", 10), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/ThrottlingNodeAllocation.java, +    private final int primariesInitialRecoveries;, +        this.primariesInitialRecoveries = componentSettings.getAsInt("node_initial_primaries_recoveries", 4);, +        logger.debug("using node_concurrent_recoveries [{}], node_initial_primaries_recoveries [{}]", concurrentRecoveries, primariesInitialRecoveries);, +                if (primariesInRecovery >= primariesInitialRecoveries) {, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/cluster/routing/allocation/FailedShardsRoutingTests.java, +        ShardsAllocation strategy = new ShardsAllocation(settingsBuilder(), +                .put("cluster.routing.allocation.node_concurrent_recoveries", 10), +                .put("cluster.routing.allocation.node_initial_primaries_recoveries", 10), +                .build());, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/cluster/routing/allocation/PrimaryNotRelocatedWhileBeingRecoveredTests.java, +        ShardsAllocation strategy = new ShardsAllocation(settingsBuilder(), +                .put("cluster.routing.allocation.node_concurrent_recoveries", 10), +                .put("cluster.routing.allocation.node_initial_primaries_recoveries", 10), +                .build());, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/cluster/routing/allocation/TenShardsOneReplicaRoutingTests.java, +                .put("cluster.routing.allocation.node_concurrent_recoveries", 10), +                .put("cluster.routing.allocation.node_initial_primaries_recoveries", 10), +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/cluster/routing/allocation/ThrottlingAllocationTests.java, +        ShardsAllocation strategy = new ShardsAllocation(settingsBuilder(), +                .put("cluster.routing.allocation.node_concurrent_recoveries", 3), +                .put("cluster.routing.allocation.node_initial_primaries_recoveries", 3), +                .build());, +        ShardsAllocation strategy = new ShardsAllocation(settingsBuilder(), +                .put("cluster.routing.allocation.concurrent_recoveries", 3), +                .put("cluster.routing.allocation.node_initial_primaries_recoveries", 3), +                .build());]