[+++ b/bin/service.bat, +"%JAVA_HOME%\bin\java" -version 2>&1 | "%windir%\System32\find" "64-Bit" >nul:, +++ b/bin/service.bat, +"%JAVA_HOME%\bin\java" -version 2>&1 | "%windir%\System32\find" "64-Bit" >nul:, +++ b/docs/reference/search/aggregations/bucket/histogram-aggregation.asciidoc, +then the rounding will yield `30` and thus the document will "fall" into the bucket that is associated withe the key `30`., +++ b/bin/service.bat, +"%JAVA_HOME%\bin\java" -version 2>&1 | "%windir%\System32\find" "64-Bit" >nul:, +++ b/docs/reference/search/aggregations/bucket/histogram-aggregation.asciidoc, +then the rounding will yield `30` and thus the document will "fall" into the bucket that is associated withe the key `30`., +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramBuilder.java, +    private Long preOffset;, +    private Long postOffset;, +     * Set the offset to apply prior to computing buckets., +    public HistogramBuilder preOffset(long preOffset) {, +        this.preOffset = preOffset;, +        return this;, +    }, +, +    /**, +     * Set the offset to apply after having computed buckets., +     */, +    public HistogramBuilder postOffset(long postOffset) {, +        this.postOffset = postOffset;, +        if (preOffset != null) {, +            builder.field("pre_offset", preOffset);, +        if (postOffset != null) {, +            builder.field("post_offset", postOffset);, +        }, +, +, +++ b/bin/service.bat, +"%JAVA_HOME%\bin\java" -version 2>&1 | "%windir%\System32\find" "64-Bit" >nul:, +++ b/docs/reference/search/aggregations/bucket/histogram-aggregation.asciidoc, +then the rounding will yield `30` and thus the document will "fall" into the bucket that is associated withe the key `30`., +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramBuilder.java, +    private Long preOffset;, +    private Long postOffset;, +     * Set the offset to apply prior to computing buckets., +    public HistogramBuilder preOffset(long preOffset) {, +        this.preOffset = preOffset;, +        return this;, +    }, +, +    /**, +     * Set the offset to apply after having computed buckets., +     */, +    public HistogramBuilder postOffset(long postOffset) {, +        this.postOffset = postOffset;, +        if (preOffset != null) {, +            builder.field("pre_offset", preOffset);, +        if (postOffset != null) {, +            builder.field("post_offset", postOffset);, +        }, +, +, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramParser.java, +        long preOffset = 0;, +        long postOffset = 0;, +                } else if ("pre_offset".equals(currentFieldName) || "preOffset".equals(currentFieldName)) {, +                    preOffset = parser.longValue();, +                } else if ("post_offset".equals(currentFieldName) || "postOffset".equals(currentFieldName)) {, +                    postOffset = parser.longValue();, +        if (preOffset != 0 || postOffset != 0) {, +            rounding = new Rounding.PrePostRounding((Rounding.Interval) rounding, preOffset, postOffset);, +++ b/bin/service.bat, +"%JAVA_HOME%\bin\java" -version 2>&1 | "%windir%\System32\find" "64-Bit" >nul:, +++ b/docs/reference/search/aggregations/bucket/histogram-aggregation.asciidoc, +then the rounding will yield `30` and thus the document will "fall" into the bucket that is associated withe the key `30`., +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramBuilder.java, +    private Long preOffset;, +    private Long postOffset;, +     * Set the offset to apply prior to computing buckets., +    public HistogramBuilder preOffset(long preOffset) {, +        this.preOffset = preOffset;, +        return this;, +    }, +, +    /**, +     * Set the offset to apply after having computed buckets., +     */, +    public HistogramBuilder postOffset(long postOffset) {, +        this.postOffset = postOffset;, +        if (preOffset != null) {, +            builder.field("pre_offset", preOffset);, +        if (postOffset != null) {, +            builder.field("post_offset", postOffset);, +        }, +, +, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramParser.java, +        long preOffset = 0;, +        long postOffset = 0;, +                } else if ("pre_offset".equals(currentFieldName) || "preOffset".equals(currentFieldName)) {, +                    preOffset = parser.longValue();, +                } else if ("post_offset".equals(currentFieldName) || "postOffset".equals(currentFieldName)) {, +                    postOffset = parser.longValue();, +        if (preOffset != 0 || postOffset != 0) {, +            rounding = new Rounding.PrePostRounding((Rounding.Interval) rounding, preOffset, postOffset);, +++ b/src/test/java/org/elasticsearch/common/rounding/RoundingTests.java]