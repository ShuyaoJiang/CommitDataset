[+++ b/core/src/main/java/org/elasticsearch/cluster/ClusterStateTaskExecutor.java, +import java.util.IdentityHashMap;, +    BatchResult<T> execute(ClusterState currentState, List<T> tasks) throws Exception;, +    class BatchResult<T> {, +        final public Map<T, TaskResult> executionResults;, +        BatchResult(ClusterState resultingState, Map<T, TaskResult> executionResults) {, +, +        public static <T> Builder<T> builder() {, +            return new Builder<>();, +        public static class Builder<T> {, +            private final Map<T, TaskResult> executionResults = new IdentityHashMap<>();, +, +            public Builder<T> success(T task) {, +                return result(task, TaskResult.success());, +            }, +, +            public Builder<T> successes(Iterable<T> tasks) {, +                for (T task : tasks) {, +                    success(task);, +                }, +                return this;, +            }, +, +            public Builder<T> failure(T task, Throwable t) {, +                return result(task, TaskResult.failure(t));, +            }, +, +            public Builder<T> failures(Iterable<T> tasks, Throwable t) {, +                for (T task : tasks) {, +                    failure(task, t);, +                }, +                return this;, +            }, +, +            private Builder<T> result(T task, TaskResult executionResult) {, +                executionResults.put(task, executionResult);, +                return this;, +            }, +, +            public BatchResult<T> build(ClusterState resultingState) {, +                return new BatchResult<>(resultingState, executionResults);, +            }, +        }, +    }, +, +    final class TaskResult {, +        private static final TaskResult SUCCESS = new TaskResult(null);, +        public static TaskResult success() {, +        public static TaskResult failure(Throwable failure) {, +            return new TaskResult(failure);, +        private TaskResult(Throwable failure) {, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterStateTaskExecutor.java, +import java.util.IdentityHashMap;, +    BatchResult<T> execute(ClusterState currentState, List<T> tasks) throws Exception;, +    class BatchResult<T> {, +        final public Map<T, TaskResult> executionResults;, +        BatchResult(ClusterState resultingState, Map<T, TaskResult> executionResults) {, +, +        public static <T> Builder<T> builder() {, +            return new Builder<>();, +        public static class Builder<T> {, +            private final Map<T, TaskResult> executionResults = new IdentityHashMap<>();, +, +            public Builder<T> success(T task) {, +                return result(task, TaskResult.success());, +            }, +, +            public Builder<T> successes(Iterable<T> tasks) {, +                for (T task : tasks) {, +                    success(task);, +                }, +                return this;, +            }, +, +            public Builder<T> failure(T task, Throwable t) {, +                return result(task, TaskResult.failure(t));, +            }, +, +            public Builder<T> failures(Iterable<T> tasks, Throwable t) {, +                for (T task : tasks) {, +                    failure(task, t);, +                }, +                return this;, +            }, +, +            private Builder<T> result(T task, TaskResult executionResult) {, +                executionResults.put(task, executionResult);, +                return this;, +            }, +, +            public BatchResult<T> build(ClusterState resultingState) {, +                return new BatchResult<>(resultingState, executionResults);, +            }, +        }, +    }, +, +    final class TaskResult {, +        private static final TaskResult SUCCESS = new TaskResult(null);, +        public static TaskResult success() {, +        public static TaskResult failure(Throwable failure) {]