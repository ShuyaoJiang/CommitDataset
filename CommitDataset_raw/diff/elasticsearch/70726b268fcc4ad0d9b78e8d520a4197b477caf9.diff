[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +import com.google.common.collect.ImmutableList;, +import java.util.List;, +import static com.google.common.collect.Lists.*;, +    private List<String> validationFailures;, +, +    public ClusterHealthResponse(String clusterName, List<String> validationFailures) {, +        this.validationFailures = validationFailures;, +    /**, +     * The validation failures on the cluster level (without index validation failures)., +     */, +    public List<String> validationFailures() {, +        return this.validationFailures;, +    }, +, +    /**, +     * All the validation failures, including index level validation failures., +     */, +    public List<String> allValidationFailures() {, +        List<String> allFailures = newArrayList(validationFailures());, +        for (ClusterIndexHealth indexHealth : indices.values()) {, +            allFailures.addAll(indexHealth.validationFailures());, +        }, +        return allFailures;, +    }, +, +, +        size = in.readInt();, +        if (size == 0) {, +            validationFailures = ImmutableList.of();, +        } else {, +            for (int i = 0; i < size; i++) {, +                validationFailures.add(in.readUTF());, +            }, +        }, +, +        out.writeInt(validationFailures.size());, +        for (String failure : validationFailures) {, +            out.writeUTF(failure);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +import com.google.common.collect.ImmutableList;, +import java.util.List;, +import static com.google.common.collect.Lists.*;, +    private List<String> validationFailures;, +, +    public ClusterHealthResponse(String clusterName, List<String> validationFailures) {, +        this.validationFailures = validationFailures;, +    /**, +     * The validation failures on the cluster level (without index validation failures)., +     */, +    public List<String> validationFailures() {, +        return this.validationFailures;, +    }, +, +    /**, +     * All the validation failures, including index level validation failures., +     */, +    public List<String> allValidationFailures() {, +        List<String> allFailures = newArrayList(validationFailures());, +        for (ClusterIndexHealth indexHealth : indices.values()) {, +            allFailures.addAll(indexHealth.validationFailures());, +        }, +        return allFailures;, +    }, +, +, +        size = in.readInt();, +        if (size == 0) {, +            validationFailures = ImmutableList.of();, +        } else {, +            for (int i = 0; i < size; i++) {, +                validationFailures.add(in.readUTF());, +            }, +        }, +, +        out.writeInt(validationFailures.size());, +        for (String failure : validationFailures) {, +            out.writeUTF(failure);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterIndexHealth.java, +import com.google.common.collect.ImmutableList;, +import java.util.List;, +    List<String> validationFailures;, +, +    public ClusterIndexHealth(String index, int numberOfShards, int numberOfReplicas, List<String> validationFailures) {, +        this.validationFailures = validationFailures;, +    public List<String> validationFailures() {, +        return this.validationFailures;, +    }, +, +        size = in.readInt();, +        if (size == 0) {, +            validationFailures = ImmutableList.of();, +        } else {, +            for (int i = 0; i < size; i++) {, +                validationFailures.add(in.readUTF());, +            }, +        }, +]