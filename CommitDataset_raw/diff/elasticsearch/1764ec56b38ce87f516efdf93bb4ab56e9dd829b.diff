[+++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +        bulkRequest.add(request.content(), defaultIndex, defaultType, defaultRouting, defaultFields, null, defaultPipeline, null, true);, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +        bulkRequest.add(request.content(), defaultIndex, defaultType, defaultRouting, defaultFields, null, defaultPipeline, null, true);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        bulkRequest.add(data, defaultIndex, defaultType, null, null, null, defaultPipeline, payload, true);, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +        bulkRequest.add(request.content(), defaultIndex, defaultType, defaultRouting, defaultFields, null, defaultPipeline, null, true);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        bulkRequest.add(data, defaultIndex, defaultType, null, null, null, defaultPipeline, payload, true);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.common.logging.Loggers;, +import org.elasticsearch.search.fetch.subphase.FetchSourceContext;, +    private static final DeprecationLogger DEPRECATION_LOGGER =, +        new DeprecationLogger(Loggers.getLogger(BulkRequest.class));, +        return add(data, defaultIndex, defaultType, null, null, null, null, null, true);, +        return add(data, defaultIndex, defaultType, null, null, null, null, null, allowExplicitIndex);, +    public BulkRequest add(BytesReference data, @Nullable String defaultIndex, @Nullable String defaultType, @Nullable String defaultRouting, @Nullable String[] defaultFields, @Nullable FetchSourceContext defaultFetchSourceContext, @Nullable String defaultPipeline, @Nullable Object payload, boolean allowExplicitIndex) throws Exception {, +                FetchSourceContext fetchSourceContext = defaultFetchSourceContext;, +                            } else if ("_source".equals(currentFieldName)) {, +                                fetchSourceContext = FetchSourceContext.parse(parser);, +                                DEPRECATION_LOGGER.deprecated("Deprecated field [fields] used, expected [_source] instead");, +                        } else if (token == XContentParser.Token.START_OBJECT && "_source".equals(currentFieldName)) {, +                            fetchSourceContext = FetchSourceContext.parse(parser);, +                                .fromXContent(data.slice(from, nextMarker - from));, +                        if (fetchSourceContext != null) {, +                            updateRequest.fetchSource(fetchSourceContext);, +                        }, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +        bulkRequest.add(request.content(), defaultIndex, defaultType, defaultRouting, defaultFields, null, defaultPipeline, null, true);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        bulkRequest.add(data, defaultIndex, defaultType, null, null, null, defaultPipeline, payload, true);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.common.logging.Loggers;, +import org.elasticsearch.search.fetch.subphase.FetchSourceContext;, +    private static final DeprecationLogger DEPRECATION_LOGGER =, +        new DeprecationLogger(Loggers.getLogger(BulkRequest.class));, +        return add(data, defaultIndex, defaultType, null, null, null, null, null, true);, +        return add(data, defaultIndex, defaultType, null, null, null, null, null, allowExplicitIndex);, +    public BulkRequest add(BytesReference data, @Nullable String defaultIndex, @Nullable String defaultType, @Nullable String defaultRouting, @Nullable String[] defaultFields, @Nullable FetchSourceContext defaultFetchSourceContext, @Nullable String defaultPipeline, @Nullable Object payload, boolean allowExplicitIndex) throws Exception {, +                FetchSourceContext fetchSourceContext = defaultFetchSourceContext;, +                            } else if ("_source".equals(currentFieldName)) {, +                                fetchSourceContext = FetchSourceContext.parse(parser);, +                                DEPRECATION_LOGGER.deprecated("Deprecated field [fields] used, expected [_source] instead");, +                        } else if (token == XContentParser.Token.START_OBJECT && "_source".equals(currentFieldName)) {, +                            fetchSourceContext = FetchSourceContext.parse(parser);, +                                .fromXContent(data.slice(from, nextMarker - from));, +                        if (fetchSourceContext != null) {, +                            updateRequest.fetchSource(fetchSourceContext);, +                        }, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                        if ((updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) ||, +                            (updateRequest.fields() != null && updateRequest.fields().length > 0)) {, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +        bulkRequest.add(request.content(), defaultIndex, defaultType, defaultRouting, defaultFields, null, defaultPipeline, null, true);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        bulkRequest.add(data, defaultIndex, defaultType, null, null, null, defaultPipeline, payload, true);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.common.logging.Loggers;, +import org.elasticsearch.search.fetch.subphase.FetchSourceContext;, +    private static final DeprecationLogger DEPRECATION_LOGGER =, +        new DeprecationLogger(Loggers.getLogger(BulkRequest.class));, +        return add(data, defaultIndex, defaultType, null, null, null, null, null, true);, +        return add(data, defaultIndex, defaultType, null, null, null, null, null, allowExplicitIndex);, +    public BulkRequest add(BytesReference data, @Nullable String defaultIndex, @Nullable String defaultType, @Nullable String defaultRouting, @Nullable String[] defaultFields, @Nullable FetchSourceContext defaultFetchSourceContext, @Nullable String defaultPipeline, @Nullable Object payload, boolean allowExplicitIndex) throws Exception {, +                FetchSourceContext fetchSourceContext = defaultFetchSourceContext;, +                            } else if ("_source".equals(currentFieldName)) {, +                                fetchSourceContext = FetchSourceContext.parse(parser);, +                                DEPRECATION_LOGGER.deprecated("Deprecated field [fields] used, expected [_source] instead");, +                        } else if (token == XContentParser.Token.START_OBJECT && "_source".equals(currentFieldName)) {, +                            fetchSourceContext = FetchSourceContext.parse(parser);, +                                .fromXContent(data.slice(from, nextMarker - from));, +                        if (fetchSourceContext != null) {, +                            updateRequest.fetchSource(fetchSourceContext);, +                        }, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                        if ((updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) ||, +                            (updateRequest.fields() != null && updateRequest.fields().length > 0)) {, +++ b/core/src/main/java/org/elasticsearch/action/explain/ExplainRequest.java, +    private String[] storedFields;, +    public String[] storedFields() {, +        return storedFields;, +    public ExplainRequest storedFields(String[] fields) {, +        this.storedFields = fields;, +        storedFields = in.readOptionalStringArray();, +        fetchSourceContext = in.readOptionalWriteable(FetchSourceContext::new);, +        out.writeOptionalStringArray(storedFields);, +        out.writeOptionalWriteable(fetchSourceContext);, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +        bulkRequest.add(request.content(), defaultIndex, defaultType, defaultRouting, defaultFields, null, defaultPipeline, null, true);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        bulkRequest.add(data, defaultIndex, defaultType, null, null, null, defaultPipeline, payload, true);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.common.logging.Loggers;, +import org.elasticsearch.search.fetch.subphase.FetchSourceContext;, +    private static final DeprecationLogger DEPRECATION_LOGGER =]