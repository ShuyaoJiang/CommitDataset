[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +description = 'Builds the Machine Learning Java classes and UI', +import org.gradle.plugins.ide.eclipse.model.SourceFolder, +import org.elasticsearch.gradle.precommit.LicenseHeadersTask, +import org.elasticsearch.gradle.VersionProperties, +import org.apache.tools.ant.taskdefs.condition.Os, +, +String mlAwsAccessKey = System.env.PRELERT_AWS_ACCESS_KEY_ID, +if (mlAwsAccessKey == null && project.hasProperty("PRELERT_AWS_ACCESS_KEY_ID")) {, +  mlAwsAccessKey = PRELERT_AWS_ACCESS_KEY_ID, +}, +, +String mlAwsSecretKey = System.env.PRELERT_AWS_SECRET_ACCESS_KEY, +if (mlAwsSecretKey == null && project.hasProperty("PRELERT_AWS_SECRET_ACCESS_KEY")) {, +  mlAwsSecretKey = PRELERT_AWS_SECRET_ACCESS_KEY, +}, +, +String envCppLocalDists = System.env.CPP_LOCAL_DISTS, +if (envCppLocalDists != null) {, +  project.ext.cppLocalDists = envCppLocalDists, +} else if (project.hasProperty("CPP_LOCAL_DISTS")) {, +  project.ext.cppLocalDists = CPP_LOCAL_DISTS, +} else {, +  project.ext.cppLocalDists = '', +}, +, +allprojects {, +  group = 'org.elasticsearch.ml', +  version = VersionProperties.elasticsearch, +}, +, +configurations.all {, +    // check for updates every build, +    resolutionStrategy.cacheChangingModulesFor 0, 'seconds', +}, +, +buildscript {, +    repositories {, +        if (System.getProperty("repos.mavenlocal") != null) {, +            // with -Drepos.mavenlocal=true we can force checking the local .m2 repo which is useful for building against, +            // elasticsearch snapshots, +            mavenLocal(), +        }, +        mavenCentral(), +        maven {, +            name 'sonatype-snapshots', +            url "https://oss.sonatype.org/content/repositories/snapshots/", +        }, +        jcenter(), +    }, +    dependencies {, +        classpath group: 'org.elasticsearch.gradle', name: 'build-tools', version: "${elasticsearchVersion}", changing: true, +    }, +  // we must not publish to sonatype until we have set up x-plugins to only publish the parts we want to publish!, +  project.afterEvaluate {, +    if (project.plugins.hasPlugin('com.bmuschko.nexus') && project.nexus.repositoryUrl.startsWith('file://') == false) {, +      uploadArchives.enabled = false, +  baseName = 'ml', +  version = project.version, +task test(dependsOn: [':elasticsearch:test', ':kibana:test']) {, +  group = 'Build', +  description = 'Assembles and tests this project.', +}, +, +task build(dependsOn: [assemble, test]) {, +    apply plugin: 'eclipse', +    apply plugin: 'idea', +, +    buildscript {, +        repositories {, +            if (System.getProperty("repos.mavenlocal") != null) {, +                // with -Drepos.mavenlocal=true we can force checking the local .m2 repo which is useful for building against, +                // elasticsearch snapshots, +                mavenLocal(), +            }, +            mavenCentral(), +            maven {, +                name 'sonatype-snapshots', +                url "https://oss.sonatype.org/content/repositories/snapshots/", +            }, +            jcenter(), +        }, +    }, +, +    repositories {, +        if (System.getProperty("repos.mavenlocal") != null) {]