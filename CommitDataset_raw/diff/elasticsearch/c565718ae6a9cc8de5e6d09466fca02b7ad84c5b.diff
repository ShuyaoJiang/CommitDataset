[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/common/lucene/all/AllEntries.java, +public class AllEntries {, +        private final String value;, +        public Entry(String name, String value, float boost) {, +            this.value = value;, +        public String value() {, +            return this.value;, +        Entry entry = new Entry(name, text, boost);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/common/lucene/all/AllEntries.java, +public class AllEntries {, +        private final String value;, +        public Entry(String name, String value, float boost) {, +            this.value = value;, +        public String value() {, +            return this.value;, +        Entry entry = new Entry(name, text, boost);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/all/AllField.java, +    private final float boost;, +    public AllField(String name, String value, float boost, FieldType fieldType) {, +        super(name, value, fieldType);, +        this.boost = boost;, +        TokenStream ts = analyzer.tokenStream(name(), stringValue());, +        if (boost != 1.0f && fieldType().indexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0) {, +            return new AllTokenStream(ts, boost);, +        return ts;, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/common/lucene/all/AllEntries.java, +public class AllEntries {, +        private final String value;, +        public Entry(String name, String value, float boost) {, +            this.value = value;, +        public String value() {, +            return this.value;, +        Entry entry = new Entry(name, text, boost);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/all/AllField.java, +    private final float boost;, +    public AllField(String name, String value, float boost, FieldType fieldType) {, +        super(name, value, fieldType);, +        this.boost = boost;, +        TokenStream ts = analyzer.tokenStream(name(), stringValue());, +        if (boost != 1.0f && fieldType().indexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0) {, +            return new AllTokenStream(ts, boost);, +        return ts;, +++ b/core/src/main/java/org/elasticsearch/common/lucene/all/AllTermQuery.java, +                        Explanation payloadBoostExplanation =, +                            Explanation.match(scorer.payloadBoost(), "payloadBoost=" + scorer.payloadBoost());, +                        throw new IllegalStateException("Payloads are expected to have a length of 1 or 4 but got: ", +                            + payload);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/common/lucene/all/AllEntries.java, +public class AllEntries {, +        private final String value;, +        public Entry(String name, String value, float boost) {, +            this.value = value;, +        public String value() {, +            return this.value;, +        Entry entry = new Entry(name, text, boost);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/all/AllField.java, +    private final float boost;, +    public AllField(String name, String value, float boost, FieldType fieldType) {, +        super(name, value, fieldType);, +        this.boost = boost;, +        TokenStream ts = analyzer.tokenStream(name(), stringValue());, +        if (boost != 1.0f && fieldType().indexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0) {, +            return new AllTokenStream(ts, boost);, +        return ts;, +++ b/core/src/main/java/org/elasticsearch/common/lucene/all/AllTermQuery.java, +                        Explanation payloadBoostExplanation =, +                            Explanation.match(scorer.payloadBoost(), "payloadBoost=" + scorer.payloadBoost());, +                        throw new IllegalStateException("Payloads are expected to have a length of 1 or 4 but got: ", +                            + payload);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/all/AllTokenStream.java, +    public static TokenStream allTokenStream(String allFieldName, String value, float boost, Analyzer analyzer) throws IOException {, +        return new AllTokenStream(analyzer.tokenStream(allFieldName, value), boost);, +    AllTokenStream(TokenStream input, float boost) {, +        payloadSpare.bytes[0] = SmallFloat.floatToByte315(boost);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/common/lucene/all/AllEntries.java, +public class AllEntries {, +        private final String value;, +        public Entry(String name, String value, float boost) {, +            this.value = value;, +        public String value() {, +            return this.value;, +        Entry entry = new Entry(name, text, boost);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/all/AllField.java, +    private final float boost;, +    public AllField(String name, String value, float boost, FieldType fieldType) {, +        super(name, value, fieldType);, +        this.boost = boost;, +        TokenStream ts = analyzer.tokenStream(name(), stringValue());, +        if (boost != 1.0f && fieldType().indexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0) {, +            return new AllTokenStream(ts, boost);, +        return ts;, +++ b/core/src/main/java/org/elasticsearch/common/lucene/all/AllTermQuery.java, +                        Explanation payloadBoostExplanation =, +                            Explanation.match(scorer.payloadBoost(), "payloadBoost=" + scorer.payloadBoost());]