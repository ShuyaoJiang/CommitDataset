[+++ b/docs/CHANGELOG.asciidoc, +Fix NPE in 'more_like_this' when field has zero tokens ({pull}30365[#30365]), +, +Fix NPE in 'more_like_this' when field has zero tokens ({pull}30365[#30365]), +, +++ b/docs/CHANGELOG.asciidoc, +Fix NPE in 'more_like_this' when field has zero tokens ({pull}30365[#30365]), +, +Fix NPE in 'more_like_this' when field has zero tokens ({pull}30365[#30365]), +, +++ b/server/src/main/java/org/elasticsearch/action/termvectors/TermVectorsWriter.java, +            if (fieldTermVector == null) {, +                fieldTermVector = EMPTY_TERMS;, +            }, +, +++ b/docs/CHANGELOG.asciidoc, +Fix NPE in 'more_like_this' when field has zero tokens ({pull}30365[#30365]), +, +Fix NPE in 'more_like_this' when field has zero tokens ({pull}30365[#30365]), +, +++ b/server/src/main/java/org/elasticsearch/action/termvectors/TermVectorsWriter.java, +            if (fieldTermVector == null) {, +                fieldTermVector = EMPTY_TERMS;, +            }, +, +++ b/server/src/test/java/org/elasticsearch/search/morelikethis/MoreLikeThisIT.java, +    //Issue #30148, +    public void testMoreLikeThisForZeroTokensInOneOfTheAnalyzedFields() throws Exception {, +        CreateIndexRequestBuilder createIndexRequestBuilder = prepareCreate("test"), +            .addMapping("type", jsonBuilder(), +            .startObject().startObject("type"), +                .startObject("properties"), +                .startObject("myField").field("type", "text").endObject(), +                .startObject("empty").field("type", "text").endObject(), +                .endObject(), +            .endObject().endObject());, +, +        assertAcked(createIndexRequestBuilder);, +, +        ensureGreen();, +, +        client().index(indexRequest("test").type("type").id("1").source(jsonBuilder().startObject(), +            .field("myField", "and_foo").field("empty", "").endObject())).actionGet();, +        client().index(indexRequest("test").type("type").id("2").source(jsonBuilder().startObject(), +            .field("myField", "and_foo").field("empty", "").endObject())).actionGet();, +, +        client().admin().indices().refresh(refreshRequest()).actionGet();, +, +        SearchResponse searchResponse = client().prepareSearch().setQuery(, +            moreLikeThisQuery(new String[]{"myField", "empty"}, null, new Item[]{new Item("test", "type", "1")}), +                .minTermFreq(1).minDocFreq(1), +        ).get();, +, +        assertHitCount(searchResponse, 1L);, +    }, +]