[+++ b/sql/jdbc/src/test/resources/command.csv-spec, +PERCENTILE      |AGGREGATE, +PERCENTILE_RANK |AGGREGATE, +++ b/sql/jdbc/src/test/resources/command.csv-spec, +PERCENTILE      |AGGREGATE, +PERCENTILE_RANK |AGGREGATE, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/Function.java, +import java.util.List;, +import java.util.StringJoiner;, +, +    public final List<Expression> arguments() {, +++ b/sql/jdbc/src/test/resources/command.csv-spec, +PERCENTILE      |AGGREGATE, +PERCENTILE_RANK |AGGREGATE, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/Function.java, +import java.util.List;, +import java.util.StringJoiner;, +, +    public final List<Expression> arguments() {, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/aggregate/AggregateFunction.java, +    private final List<Expression> parameters;, +    AggregateFunction(Location location, Expression field, List<Expression> parameters) {, +        super(location, CollectionUtils.combine(singletonList(field), parameters));, +        this.parameters = parameters;, +    public List<Expression> parameters() {, +        return parameters;, +++ b/sql/jdbc/src/test/resources/command.csv-spec, +PERCENTILE      |AGGREGATE, +PERCENTILE_RANK |AGGREGATE, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/Function.java, +import java.util.List;, +import java.util.StringJoiner;, +, +    public final List<Expression> arguments() {, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/aggregate/AggregateFunction.java, +    private final List<Expression> parameters;, +    AggregateFunction(Location location, Expression field, List<Expression> parameters) {, +        super(location, CollectionUtils.combine(singletonList(field), parameters));, +        this.parameters = parameters;, +    public List<Expression> parameters() {, +        return parameters;, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/aggregate/NumericAggregate.java, +    NumericAggregate(Location location, Expression field, List<Expression> parameters) {, +        super(location, field, parameters);]