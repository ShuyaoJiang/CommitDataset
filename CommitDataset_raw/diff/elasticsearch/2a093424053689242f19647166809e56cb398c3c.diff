[+++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/bytes/ByteBufferBytesReference.java, +import org.apache.lucene.util.BytesRef;, +import org.elasticsearch.common.io.stream.ByteBufferStreamInput;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.jboss.netty.buffer.ChannelBuffer;, +import org.jboss.netty.buffer.ChannelBuffers;, +import org.jboss.netty.util.CharsetUtil;, +, +import com.google.common.base.Charsets;, +, +            return BytesRef.EMPTY_BYTES;, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/bytes/ByteBufferBytesReference.java, +import org.apache.lucene.util.BytesRef;, +import org.elasticsearch.common.io.stream.ByteBufferStreamInput;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.jboss.netty.buffer.ChannelBuffer;, +import org.jboss.netty.buffer.ChannelBuffers;, +import org.jboss.netty.util.CharsetUtil;, +, +import com.google.common.base.Charsets;, +, +            return BytesRef.EMPTY_BYTES;, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesArray.java, +import java.io.IOException;, +import java.io.OutputStream;, +import java.util.Arrays;, +, +import com.google.common.base.Charsets;, +    public static final BytesArray EMPTY = new BytesArray(BytesRef.EMPTY_BYTES, 0, 0);, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/bytes/ByteBufferBytesReference.java, +import org.apache.lucene.util.BytesRef;, +import org.elasticsearch.common.io.stream.ByteBufferStreamInput;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.jboss.netty.buffer.ChannelBuffer;, +import org.jboss.netty.buffer.ChannelBuffers;, +import org.jboss.netty.util.CharsetUtil;, +, +import com.google.common.base.Charsets;, +, +            return BytesRef.EMPTY_BYTES;, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesArray.java, +import java.io.IOException;, +import java.io.OutputStream;, +import java.util.Arrays;, +, +import com.google.common.base.Charsets;, +    public static final BytesArray EMPTY = new BytesArray(BytesRef.EMPTY_BYTES, 0, 0);, +++ b/src/main/java/org/elasticsearch/common/io/FastByteArrayOutputStream.java, +, +import org.apache.lucene.util.ArrayUtil;, +import org.elasticsearch.common.bytes.BytesArray;, +import org.elasticsearch.common.bytes.BytesReference;, +            buf = ArrayUtil.grow(buf, newcount);, +            buf = ArrayUtil.grow(buf, newcount);, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/bytes/ByteBufferBytesReference.java, +import org.apache.lucene.util.BytesRef;, +import org.elasticsearch.common.io.stream.ByteBufferStreamInput;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.jboss.netty.buffer.ChannelBuffer;, +import org.jboss.netty.buffer.ChannelBuffers;, +import org.jboss.netty.util.CharsetUtil;, +, +import com.google.common.base.Charsets;, +, +            return BytesRef.EMPTY_BYTES;, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesArray.java, +import java.io.IOException;, +import java.io.OutputStream;, +import java.util.Arrays;, +, +import com.google.common.base.Charsets;, +    public static final BytesArray EMPTY = new BytesArray(BytesRef.EMPTY_BYTES, 0, 0);, +++ b/src/main/java/org/elasticsearch/common/io/FastByteArrayOutputStream.java, +, +import org.apache.lucene.util.ArrayUtil;, +import org.elasticsearch.common.bytes.BytesArray;, +import org.elasticsearch.common.bytes.BytesReference;, +            buf = ArrayUtil.grow(buf, newcount);, +            buf = ArrayUtil.grow(buf, newcount);, +++ b/src/main/java/org/elasticsearch/common/io/stream/BytesStreamOutput.java, +import org.apache.lucene.util.ArrayUtil;, +            buf = ArrayUtil.grow(buf, newcount);, +            buf = ArrayUtil.grow(buf, newcount);, +            buf = ArrayUtil.grow(buf, newcount);, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/bytes/ByteBufferBytesReference.java, +import org.apache.lucene.util.BytesRef;, +import org.elasticsearch.common.io.stream.ByteBufferStreamInput;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.jboss.netty.buffer.ChannelBuffer;, +import org.jboss.netty.buffer.ChannelBuffers;, +import org.jboss.netty.util.CharsetUtil;, +, +import com.google.common.base.Charsets;, +]