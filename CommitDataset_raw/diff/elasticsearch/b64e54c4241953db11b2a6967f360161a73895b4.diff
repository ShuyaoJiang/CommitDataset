[+++ /dev/null, +++ /dev/null, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +==== Meta fields in documents, +Meta fields can no longer be specified within a document. They should be specified, +via the API.  For example, instead of adding a field `_parent` within a document,, +use the `parent` url parameter when indexing that document., +, +The `filtered` query is deprecated. Instead you should use a `bool` query with, +a `must` clause for the query and a `filter` clause for the filter. For instance, +the below query:, +, +[source,json], +---------------, +{, +  "filtered": {, +    "query": {, +      // query, +    },, +    "filter": {, +      // filter, +    }, +  }, +}, +---------------, +can be replaced with, +[source,json], +---------------, +{, +  "bool": {, +    "must": {, +      // query, +    },, +    "filter": {, +      // filter, +    }, +  }, +}, +---------------, +and will produce the same scores., +++ /dev/null, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +==== Meta fields in documents, +Meta fields can no longer be specified within a document. They should be specified, +via the API.  For example, instead of adding a field `_parent` within a document,, +use the `parent` url parameter when indexing that document., +, +The `filtered` query is deprecated. Instead you should use a `bool` query with, +a `must` clause for the query and a `filter` clause for the filter. For instance, +the below query:, +, +[source,json], +---------------, +{, +  "filtered": {, +    "query": {, +      // query, +    },, +    "filter": {, +      // filter, +    }, +  }, +}, +---------------, +can be replaced with, +[source,json], +---------------, +{, +  "bool": {, +    "must": {, +      // query, +    },, +    "filter": {, +      // filter, +    }, +  }, +}, +---------------, +and will produce the same scores., +++ b/docs/reference/modules/snapshots.asciidoc, +<<indices-open-close,closed>> and has the same number of shards as the index in the snapshot., +The restore operation automatically opens restored indices if they were closed and creates new indices if they, +==== Partial restore, +==== Changing index settings during restore, +Please note, that some settings such as `index.number_of_shards` cannot be changed during restore operation., +, +[float], +==== Restoring to a different cluster, +, +The information stored in a snapshot is not tied to a particular cluster or a cluster name. Therefore it's possible to, +restore a snapshot made from one cluster into another cluster. All that is required is registering the repository, +containing the snapshot in the new cluster and starting the restore process. The new cluster doesn't have to have the, +same size or topology.  However, the version of the new cluster should be the same or newer than the cluster that was, +used to create the snapshot., +, +If the new cluster has a smaller size additional considerations should be made. First of all it's necessary to make sure, +that new cluster have enough capacity to store all indices in the snapshot. It's possible to change indices settings, +during restore to reduce the number of replicas, which can help with restoring snapshots into smaller cluster. It's also, +possible to select only subset of the indices using the `indices` parameter.  Prior to version 1.5.0 elasticsearch, +didn't check restored persistent settings making it possible to accidentally restore an incompatible]