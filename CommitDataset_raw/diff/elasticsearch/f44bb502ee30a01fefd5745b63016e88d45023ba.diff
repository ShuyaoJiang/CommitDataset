[+++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.script.ScriptService;, +                    if (request.index().equals(ScriptService.SCRIPT_INDEX)) {, +                        indexSettingsBuilder.put(SETTING_NUMBER_OF_SHARDS, settings.getAsInt(SETTING_NUMBER_OF_SHARDS, 1));, +                    } else {, +                    }, +                    if (request.index().equals(ScriptService.SCRIPT_INDEX)) {, +                        indexSettingsBuilder.put(SETTING_NUMBER_OF_REPLICAS, settings.getAsInt(SETTING_NUMBER_OF_REPLICAS, 0));, +                        indexSettingsBuilder.put(SETTING_AUTO_EXPAND_REPLICAS, "1-all");, +                    }, +                    else {, +                    }, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.script.ScriptService;, +                    if (request.index().equals(ScriptService.SCRIPT_INDEX)) {, +                        indexSettingsBuilder.put(SETTING_NUMBER_OF_SHARDS, settings.getAsInt(SETTING_NUMBER_OF_SHARDS, 1));, +                    } else {, +                    }, +                    if (request.index().equals(ScriptService.SCRIPT_INDEX)) {, +                        indexSettingsBuilder.put(SETTING_NUMBER_OF_REPLICAS, settings.getAsInt(SETTING_NUMBER_OF_REPLICAS, 0));, +                        indexSettingsBuilder.put(SETTING_AUTO_EXPAND_REPLICAS, "1-all");, +                    }, +                    else {, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +            defaultMappingUrl = getMappingUrl(indexSettings, environment, defaultMappingLocation,"script-mapping.json","org/elasticsearch/index/mapper/script-mapping.json");, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.script.ScriptService;, +                    if (request.index().equals(ScriptService.SCRIPT_INDEX)) {, +                        indexSettingsBuilder.put(SETTING_NUMBER_OF_SHARDS, settings.getAsInt(SETTING_NUMBER_OF_SHARDS, 1));, +                    } else {, +                    }, +                    if (request.index().equals(ScriptService.SCRIPT_INDEX)) {, +                        indexSettingsBuilder.put(SETTING_NUMBER_OF_REPLICAS, settings.getAsInt(SETTING_NUMBER_OF_REPLICAS, 0));, +                        indexSettingsBuilder.put(SETTING_AUTO_EXPAND_REPLICAS, "1-all");, +                    }, +                    else {, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +            defaultMappingUrl = getMappingUrl(indexSettings, environment, defaultMappingLocation,"script-mapping.json","org/elasticsearch/index/mapper/script-mapping.json");, +++ b/src/main/java/org/elasticsearch/index/mapper/script-mapping.json, +, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.script.ScriptService;, +                    if (request.index().equals(ScriptService.SCRIPT_INDEX)) {, +                        indexSettingsBuilder.put(SETTING_NUMBER_OF_SHARDS, settings.getAsInt(SETTING_NUMBER_OF_SHARDS, 1));, +                    } else {, +                    }, +                    if (request.index().equals(ScriptService.SCRIPT_INDEX)) {, +                        indexSettingsBuilder.put(SETTING_NUMBER_OF_REPLICAS, settings.getAsInt(SETTING_NUMBER_OF_REPLICAS, 0));, +                        indexSettingsBuilder.put(SETTING_AUTO_EXPAND_REPLICAS, "1-all");, +                    }, +                    else {, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +            defaultMappingUrl = getMappingUrl(indexSettings, environment, defaultMappingLocation,"script-mapping.json","org/elasticsearch/index/mapper/script-mapping.json");, +++ b/src/main/java/org/elasticsearch/index/mapper/script-mapping.json, +, +++ b/src/test/java/org/elasticsearch/script/ScriptIndexSettingsTest.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +package org.elasticsearch.script;, +, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.action.admin.indices.delete.DeleteIndexResponse;, +import org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsRequest;, +import org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsResponse;, +import org.elasticsearch.action.admin.indices.settings.get.GetSettingsRequest;, +import org.elasticsearch.action.admin.indices.settings.get.GetSettingsResponse;, +import org.elasticsearch.action.admin.indices.template.get.GetIndexTemplatesResponse;, +import org.elasticsearch.action.delete.DeleteResponse;, +import org.elasticsearch.action.exists.ExistsRequest;, +import org.elasticsearch.action.indexedscripts.delete.DeleteIndexedScriptAction;, +import org.elasticsearch.action.indexedscripts.get.GetIndexedScriptResponse;, +import org.elasticsearch.action.indexedscripts.put.PutIndexedScriptResponse;, +import org.elasticsearch.action.support.IndicesOptions;, +import org.elasticsearch.cluster.metadata.IndexTemplateMetaData;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentHelper;, +import org.elasticsearch.indices.IndexMissingException;, +import org.elasticsearch.test.ElasticsearchIntegrationTest;]