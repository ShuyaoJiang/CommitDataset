[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/RolloverStep.java, +import org.apache.logging.log4j.LogManager;, +import org.apache.logging.log4j.Logger;, +import org.apache.logging.log4j.message.ParameterizedMessage;, +import org.elasticsearch.ResourceAlreadyExistsException;, +    private static final Logger logger = LogManager.getLogger(RolloverStep.class);, +, +            ActionListener.wrap(response -> listener.onResponse(response.isRolledOver(), new EmptyInfo()), exception -> {, +                if (exception instanceof ResourceAlreadyExistsException) {, +                    // This can happen sometimes when this step is executed multiple times, +                    if (logger.isTraceEnabled()) {, +                        logger.debug(() -> new ParameterizedMessage("{} index cannot roll over because the next index already exists, " +, +                            "skipping to next step", indexMetaData.getIndex()), exception);, +                    } else {, +                        logger.debug("{} index cannot roll over because the next index already exists, skipping to next step",, +                            indexMetaData.getIndex());, +                    }, +                    listener.onResponse(true, new EmptyInfo());, +                } else {, +                    listener.onFailure(exception);, +                }, +            }));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/RolloverStep.java, +import org.apache.logging.log4j.LogManager;, +import org.apache.logging.log4j.Logger;, +import org.apache.logging.log4j.message.ParameterizedMessage;, +import org.elasticsearch.ResourceAlreadyExistsException;, +    private static final Logger logger = LogManager.getLogger(RolloverStep.class);, +, +            ActionListener.wrap(response -> listener.onResponse(response.isRolledOver(), new EmptyInfo()), exception -> {, +                if (exception instanceof ResourceAlreadyExistsException) {, +                    // This can happen sometimes when this step is executed multiple times, +                    if (logger.isTraceEnabled()) {, +                        logger.debug(() -> new ParameterizedMessage("{} index cannot roll over because the next index already exists, " +, +                            "skipping to next step", indexMetaData.getIndex()), exception);, +                    } else {, +                        logger.debug("{} index cannot roll over because the next index already exists, skipping to next step",, +                            indexMetaData.getIndex());, +                    }, +                    listener.onResponse(true, new EmptyInfo());, +                } else {, +                    listener.onFailure(exception);, +                }, +            }));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/UpdateRolloverLifecycleDateStep.java, +            throw new IllegalStateException("no rollover info found for [" + indexMetaData.getIndex().getName() + "], either the index " +, +                "has not yet rolled over or a subsequent index was created outside of Index Lifecycle Management");, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/RolloverStep.java, +import org.apache.logging.log4j.LogManager;, +import org.apache.logging.log4j.Logger;, +import org.apache.logging.log4j.message.ParameterizedMessage;, +import org.elasticsearch.ResourceAlreadyExistsException;, +    private static final Logger logger = LogManager.getLogger(RolloverStep.class);, +, +            ActionListener.wrap(response -> listener.onResponse(response.isRolledOver(), new EmptyInfo()), exception -> {, +                if (exception instanceof ResourceAlreadyExistsException) {, +                    // This can happen sometimes when this step is executed multiple times, +                    if (logger.isTraceEnabled()) {, +                        logger.debug(() -> new ParameterizedMessage("{} index cannot roll over because the next index already exists, " +, +                            "skipping to next step", indexMetaData.getIndex()), exception);, +                    } else {, +                        logger.debug("{} index cannot roll over because the next index already exists, skipping to next step",, +                            indexMetaData.getIndex());, +                    }, +                    listener.onResponse(true, new EmptyInfo());, +                } else {, +                    listener.onFailure(exception);, +                }, +            }));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/UpdateRolloverLifecycleDateStep.java, +            throw new IllegalStateException("no rollover info found for [" + indexMetaData.getIndex().getName() + "], either the index " +, +                "has not yet rolled over or a subsequent index was created outside of Index Lifecycle Management");, +++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/indexlifecycle/UpdateRolloverLifecycleDateStepTests.java, +            equalTo("no rollover info found for [" + indexMetaData.getIndex().getName() + "], either the index " +, +                "has not yet rolled over or a subsequent index was created outside of Index Lifecycle Management"));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/RolloverStep.java, +import org.apache.logging.log4j.LogManager;, +import org.apache.logging.log4j.Logger;, +import org.apache.logging.log4j.message.ParameterizedMessage;, +import org.elasticsearch.ResourceAlreadyExistsException;, +    private static final Logger logger = LogManager.getLogger(RolloverStep.class);, +, +            ActionListener.wrap(response -> listener.onResponse(response.isRolledOver(), new EmptyInfo()), exception -> {, +                if (exception instanceof ResourceAlreadyExistsException) {, +                    // This can happen sometimes when this step is executed multiple times, +                    if (logger.isTraceEnabled()) {, +                        logger.debug(() -> new ParameterizedMessage("{} index cannot roll over because the next index already exists, " +, +                            "skipping to next step", indexMetaData.getIndex()), exception);, +                    } else {, +                        logger.debug("{} index cannot roll over because the next index already exists, skipping to next step",, +                            indexMetaData.getIndex());, +                    }, +                    listener.onResponse(true, new EmptyInfo());, +                } else {, +                    listener.onFailure(exception);, +                }, +            }));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/UpdateRolloverLifecycleDateStep.java, +            throw new IllegalStateException("no rollover info found for [" + indexMetaData.getIndex().getName() + "], either the index " +, +                "has not yet rolled over or a subsequent index was created outside of Index Lifecycle Management");]