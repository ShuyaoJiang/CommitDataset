[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/geo/MultiValueGeoPointFieldData.java, +        for (int[] ordinal : ordinals) {, +            if (ordinal[docId] != 0) {, +                return true;, +            }, +        }, +        return false;, +        for (int[] ordinal : ordinals) {, +            int loc = ordinal[docId];, +            if (loc != 0) {, +                proc.onValue(docId, GeoHashUtils.encode(lat[loc], lon[loc]));, +        for (int[] ordinal : ordinals) {, +            int loc = ordinal[docId];, +            if (loc != 0) {, +        }, +        return null;, +    }, +        int length = 0;, +        for (int[] ordinal : ordinals) {, +            if (ordinal[docId] != 0) {, +                length++;, +            }, +        }, +        if (length == 0) {, +        if (length < VALUE_CACHE_SIZE) {, +            points = valuesArrayCache.get().get()[length];, +            int i = 0;, +            for (int[] ordinal : ordinals) {, +                int loc = ordinal[docId];, +                if (loc != 0) {, +                    points[i++].latlon(lat[loc], lon[loc]);, +                }, +            points = new GeoPoint[length];, +            int i = 0;, +            for (int[] ordinal : ordinals) {, +                int loc = ordinal[docId];, +                if (loc != 0) {, +                    points[i++] = new GeoPoint(lat[loc], lon[loc]);, +                }, +        for (int[] ordinal : ordinals) {, +            int loc = ordinal[docId];, +            if (loc != 0) {, +                return lat[loc];, +        }, +        return 0;, +        for (int[] ordinal : ordinals) {, +            int loc = ordinal[docId];, +            if (loc != 0) {, +                return lon[loc];, +        }, +        return 0;, +        int length = 0;, +        for (int[] ordinal : ordinals) {, +            if (ordinal[docId] != 0) {, +                length++;, +            }, +        }, +        if (length == 0) {, +        if (length < VALUE_CACHE_SIZE) {, +            doubles = valuesLatCache.get().get()[length];, +            doubles = new double[length];, +        int i = 0;, +        for (int[] ordinal : ordinals) {, +            int loc = ordinal[docId];, +            if (loc != 0) {, +                doubles[i++] = lat[loc];, +            }, +        int length = 0;, +        for (int[] ordinal : ordinals) {, +            if (ordinal[docId] != 0) {, +                length++;, +            }, +        }, +        if (length == 0) {, +        if (length < VALUE_CACHE_SIZE) {, +            doubles = valuesLonCache.get().get()[length];, +            doubles = new double[length];, +        int i = 0;, +        for (int[] ordinal : ordinals) {, +            int loc = ordinal[docId];, +            if (loc != 0) {, +                doubles[i++] = lon[loc];, +            }]