[+++ b/core/src/main/java/org/elasticsearch/common/breaker/CircuitBreaker.java, +    String PARENT = "parent";, +    String FIELDDATA = "fielddata";, +    String REQUEST = "request";, +    String IN_FLIGHT_REQUESTS = "in_flight_requests";, +    enum Type {, +    void circuitBreak(String fieldName, long bytesNeeded);, +    double addEstimateBytesAndMaybeBreak(long bytes, String label) throws CircuitBreakingException;, +    long addWithoutBreaking(long bytes);, +    long getUsed();, +    long getLimit();, +    double getOverhead();, +    long getTrippedCount();, +    String getName();, +++ b/core/src/main/java/org/elasticsearch/common/breaker/CircuitBreaker.java, +    String PARENT = "parent";, +    String FIELDDATA = "fielddata";, +    String REQUEST = "request";, +    String IN_FLIGHT_REQUESTS = "in_flight_requests";, +    enum Type {, +    void circuitBreak(String fieldName, long bytesNeeded);, +    double addEstimateBytesAndMaybeBreak(long bytes, String label) throws CircuitBreakingException;, +    long addWithoutBreaking(long bytes);, +    long getUsed();, +    long getLimit();, +    double getOverhead();, +    long getTrippedCount();, +    String getName();, +++ b/core/src/main/java/org/elasticsearch/common/breaker/CircuitBreakingException.java, +import org.elasticsearch.rest.RestStatus;, +    public RestStatus status() {, +        return RestStatus.SERVICE_UNAVAILABLE;, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/common/breaker/CircuitBreaker.java, +    String PARENT = "parent";, +    String FIELDDATA = "fielddata";, +    String REQUEST = "request";, +    String IN_FLIGHT_REQUESTS = "in_flight_requests";, +    enum Type {, +    void circuitBreak(String fieldName, long bytesNeeded);, +    double addEstimateBytesAndMaybeBreak(long bytes, String label) throws CircuitBreakingException;, +    long addWithoutBreaking(long bytes);, +    long getUsed();, +    long getLimit();, +    double getOverhead();, +    long getTrippedCount();, +    String getName();, +++ b/core/src/main/java/org/elasticsearch/common/breaker/CircuitBreakingException.java, +import org.elasticsearch.rest.RestStatus;, +    public RestStatus status() {, +        return RestStatus.SERVICE_UNAVAILABLE;, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/common/breaker/MemoryCircuitBreaker.java, +        throw new CircuitBreakingException(message, bytesNeeded, memoryBytesLimit);, +++ b/core/src/main/java/org/elasticsearch/common/breaker/CircuitBreaker.java, +    String PARENT = "parent";, +    String FIELDDATA = "fielddata";, +    String REQUEST = "request";, +    String IN_FLIGHT_REQUESTS = "in_flight_requests";, +    enum Type {, +    void circuitBreak(String fieldName, long bytesNeeded);, +    double addEstimateBytesAndMaybeBreak(long bytes, String label) throws CircuitBreakingException;, +    long addWithoutBreaking(long bytes);, +    long getUsed();, +    long getLimit();, +    double getOverhead();, +    long getTrippedCount();, +    String getName();, +++ b/core/src/main/java/org/elasticsearch/common/breaker/CircuitBreakingException.java, +import org.elasticsearch.rest.RestStatus;, +    public RestStatus status() {, +        return RestStatus.SERVICE_UNAVAILABLE;, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/common/breaker/MemoryCircuitBreaker.java, +        throw new CircuitBreakingException(message, bytesNeeded, memoryBytesLimit);, +++ b/core/src/main/java/org/elasticsearch/common/breaker/NoopCircuitBreaker.java, +    public static final int LIMIT = -1;, +        return LIMIT;, +++ b/core/src/main/java/org/elasticsearch/common/breaker/CircuitBreaker.java, +    String PARENT = "parent";, +    String FIELDDATA = "fielddata";, +    String REQUEST = "request";, +    String IN_FLIGHT_REQUESTS = "in_flight_requests";, +    enum Type {, +    void circuitBreak(String fieldName, long bytesNeeded);, +    double addEstimateBytesAndMaybeBreak(long bytes, String label) throws CircuitBreakingException;, +    long addWithoutBreaking(long bytes);, +    long getUsed();, +    long getLimit();, +    double getOverhead();, +    long getTrippedCount();, +    String getName();, +++ b/core/src/main/java/org/elasticsearch/common/breaker/CircuitBreakingException.java, +import org.elasticsearch.rest.RestStatus;]