[+++ b/core/src/main/java/org/elasticsearch/common/logging/DeprecationLogger.java, +    public static final String WARNING_HEADER = "Warning";, +                    iterator.next().addResponseHeader(WARNING_HEADER, formattedMessage);, +++ b/core/src/main/java/org/elasticsearch/common/logging/DeprecationLogger.java, +    public static final String WARNING_HEADER = "Warning";, +                    iterator.next().addResponseHeader(WARNING_HEADER, formattedMessage);, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/template/BWCTemplateTests.java, +        assertWarnings("Deprecated field [template] used, replaced by [index_patterns]");, +        assertWarnings("Deprecated field [template] used, replaced by [index_patterns]");, +++ b/core/src/main/java/org/elasticsearch/common/logging/DeprecationLogger.java, +    public static final String WARNING_HEADER = "Warning";, +                    iterator.next().addResponseHeader(WARNING_HEADER, formattedMessage);, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/template/BWCTemplateTests.java, +        assertWarnings("Deprecated field [template] used, replaced by [index_patterns]");, +        assertWarnings("Deprecated field [template] used, replaced by [index_patterns]");, +++ b/core/src/test/java/org/elasticsearch/common/ParseFieldTests.java, +import java.io.IOException;, +, +    public void testParse() throws IOException {, +            assertWarnings("Deprecated field [" + deprecatedName + "] used, expected [foo_bar] instead");, +    public void testAllDeprecated() throws IOException {, +        ParseField field = new ParseField(name).withDeprecation(deprecated).withAllDeprecated("like");, +        assertFalse(field.match("not a field name"));, +        assertTrue(field.match("text"));, +        assertWarnings("Deprecated field [text] used, replaced by [like]");, +        assertTrue(field.match("same_as_text"));, +        assertWarnings("Deprecated field [same_as_text] used, replaced by [like]");, +        assertTrue(field.match("like_text"));, +        assertWarnings("Deprecated field [like_text] used, replaced by [like]");, +++ b/core/src/main/java/org/elasticsearch/common/logging/DeprecationLogger.java, +    public static final String WARNING_HEADER = "Warning";, +                    iterator.next().addResponseHeader(WARNING_HEADER, formattedMessage);, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/template/BWCTemplateTests.java, +        assertWarnings("Deprecated field [template] used, replaced by [index_patterns]");, +        assertWarnings("Deprecated field [template] used, replaced by [index_patterns]");, +++ b/core/src/test/java/org/elasticsearch/common/ParseFieldTests.java, +import java.io.IOException;, +, +    public void testParse() throws IOException {, +            assertWarnings("Deprecated field [" + deprecatedName + "] used, expected [foo_bar] instead");, +    public void testAllDeprecated() throws IOException {, +        ParseField field = new ParseField(name).withDeprecation(deprecated).withAllDeprecated("like");, +        assertFalse(field.match("not a field name"));, +        assertTrue(field.match("text"));, +        assertWarnings("Deprecated field [text] used, replaced by [like]");, +        assertTrue(field.match("same_as_text"));, +        assertWarnings("Deprecated field [same_as_text] used, replaced by [like]");, +        assertTrue(field.match("like_text"));, +        assertWarnings("Deprecated field [like_text] used, replaced by [like]");, +++ b/core/src/test/java/org/elasticsearch/common/logging/DeprecationLoggerTests.java, +    @Override, +    protected boolean enableWarningsCheck() {, +        //this is a low level test for the deprecation logger, setup and checks are done manually, +        return false;, +    }, +, +            assertEquals(formatted, responseHeaders.get(DeprecationLogger.WARNING_HEADER).get(0));, +            List<String> responses = responseHeaders.get(DeprecationLogger.WARNING_HEADER);, +            List<String> responses = responseHeaders.get(DeprecationLogger.WARNING_HEADER);, +            responses = responseHeaders.get(DeprecationLogger.WARNING_HEADER);, +++ b/core/src/main/java/org/elasticsearch/common/logging/DeprecationLogger.java, +    public static final String WARNING_HEADER = "Warning";, +                    iterator.next().addResponseHeader(WARNING_HEADER, formattedMessage);, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/template/BWCTemplateTests.java, +        assertWarnings("Deprecated field [template] used, replaced by [index_patterns]");, +        assertWarnings("Deprecated field [template] used, replaced by [index_patterns]");, +++ b/core/src/test/java/org/elasticsearch/common/ParseFieldTests.java, +import java.io.IOException;, +, +    public void testParse() throws IOException {, +            assertWarnings("Deprecated field [" + deprecatedName + "] used, expected [foo_bar] instead");, +    public void testAllDeprecated() throws IOException {, +        ParseField field = new ParseField(name).withDeprecation(deprecated).withAllDeprecated("like");, +        assertFalse(field.match("not a field name"));, +        assertTrue(field.match("text"));, +        assertWarnings("Deprecated field [text] used, replaced by [like]");, +        assertTrue(field.match("same_as_text"));, +        assertWarnings("Deprecated field [same_as_text] used, replaced by [like]");, +        assertTrue(field.match("like_text"));, +        assertWarnings("Deprecated field [like_text] used, replaced by [like]");, +++ b/core/src/test/java/org/elasticsearch/common/logging/DeprecationLoggerTests.java, +    @Override, +    protected boolean enableWarningsCheck() {, +        //this is a low level test for the deprecation logger, setup and checks are done manually, +        return false;, +    }, +, +            assertEquals(formatted, responseHeaders.get(DeprecationLogger.WARNING_HEADER).get(0));, +            List<String> responses = responseHeaders.get(DeprecationLogger.WARNING_HEADER);, +            List<String> responses = responseHeaders.get(DeprecationLogger.WARNING_HEADER);, +            responses = responseHeaders.get(DeprecationLogger.WARNING_HEADER);, +++ b/core/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java, +        objectParser.declareField((i, v, c) -> v.test = i.text(), new ParseField("test", "old_test"), ObjectParser.ValueType.STRING);, +        assertWarnings("Deprecated field [old_test] used, expected [test] instead");, +++ b/core/src/main/java/org/elasticsearch/common/logging/DeprecationLogger.java, +    public static final String WARNING_HEADER = "Warning";, +                    iterator.next().addResponseHeader(WARNING_HEADER, formattedMessage);, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/template/BWCTemplateTests.java, +        assertWarnings("Deprecated field [template] used, replaced by [index_patterns]");, +        assertWarnings("Deprecated field [template] used, replaced by [index_patterns]");]