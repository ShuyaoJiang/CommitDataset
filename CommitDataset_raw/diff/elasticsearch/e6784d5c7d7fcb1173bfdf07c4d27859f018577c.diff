[+++ b/elasticsearch/checkstyle_suppressions.xml, +++ b/elasticsearch/checkstyle_suppressions.xml, +++ b/elasticsearch/license/base/src/main/java/org/elasticsearch/license/core/License.java, +            throw new ElasticsearchException("Unknown license version found, please upgrade all nodes to the latest elasticsearch-license" +, +                    " plugin");, +                throw new ElasticsearchException("Unknown license version found, please upgrade all nodes to the latest " +, +                        "elasticsearch-license plugin");, +++ b/elasticsearch/checkstyle_suppressions.xml, +++ b/elasticsearch/license/base/src/main/java/org/elasticsearch/license/core/License.java, +            throw new ElasticsearchException("Unknown license version found, please upgrade all nodes to the latest elasticsearch-license" +, +                    " plugin");, +                throw new ElasticsearchException("Unknown license version found, please upgrade all nodes to the latest " +, +                        "elasticsearch-license plugin");, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/LicenseSerializationTests.java, +        TestUtils.LicenseSpec randomLicenseSpec = TestUtils.generateRandomLicenseSpec(License.VERSION_START);, +++ b/elasticsearch/checkstyle_suppressions.xml, +++ b/elasticsearch/license/base/src/main/java/org/elasticsearch/license/core/License.java, +            throw new ElasticsearchException("Unknown license version found, please upgrade all nodes to the latest elasticsearch-license" +, +                    " plugin");, +                throw new ElasticsearchException("Unknown license version found, please upgrade all nodes to the latest " +, +                        "elasticsearch-license plugin");, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/LicenseSerializationTests.java, +        TestUtils.LicenseSpec randomLicenseSpec = TestUtils.generateRandomLicenseSpec(License.VERSION_START);, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/TestUtils.java, +            return new LicenseSpec(version, uid, feature, issueDateInMillis, expiryDateInMillis, type, subscriptionType, issuedTo, issuer,, +                    maxNodes);, +            this(License.VERSION_CURRENT, UUID.randomUUID().toString(), "feature", issueDate, expiryDate, "trial", "none", "customer",, +                    "elasticsearch", 5);, +++ b/elasticsearch/checkstyle_suppressions.xml, +++ b/elasticsearch/license/base/src/main/java/org/elasticsearch/license/core/License.java, +            throw new ElasticsearchException("Unknown license version found, please upgrade all nodes to the latest elasticsearch-license" +, +                    " plugin");, +                throw new ElasticsearchException("Unknown license version found, please upgrade all nodes to the latest " +, +                        "elasticsearch-license plugin");, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/LicenseSerializationTests.java, +        TestUtils.LicenseSpec randomLicenseSpec = TestUtils.generateRandomLicenseSpec(License.VERSION_START);, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/TestUtils.java, +            return new LicenseSpec(version, uid, feature, issueDateInMillis, expiryDateInMillis, type, subscriptionType, issuedTo, issuer,, +                    maxNodes);, +            this(License.VERSION_CURRENT, UUID.randomUUID().toString(), "feature", issueDate, expiryDate, "trial", "none", "customer",, +                    "elasticsearch", 5);, +++ b/elasticsearch/license/found-plugin/src/main/java/org/elasticsearch/license/plugin/core/FoundLicensesService.java, +public class FoundLicensesService extends AbstractLifecycleComponent<FoundLicensesService> implements LicenseeRegistry,, +        LicensesManagerService {, +++ b/elasticsearch/checkstyle_suppressions.xml, +++ b/elasticsearch/license/base/src/main/java/org/elasticsearch/license/core/License.java, +            throw new ElasticsearchException("Unknown license version found, please upgrade all nodes to the latest elasticsearch-license" +, +                    " plugin");, +                throw new ElasticsearchException("Unknown license version found, please upgrade all nodes to the latest " +, +                        "elasticsearch-license plugin");, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/LicenseSerializationTests.java, +        TestUtils.LicenseSpec randomLicenseSpec = TestUtils.generateRandomLicenseSpec(License.VERSION_START);, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/TestUtils.java, +            return new LicenseSpec(version, uid, feature, issueDateInMillis, expiryDateInMillis, type, subscriptionType, issuedTo, issuer,, +                    maxNodes);, +            this(License.VERSION_CURRENT, UUID.randomUUID().toString(), "feature", issueDate, expiryDate, "trial", "none", "customer",, +                    "elasticsearch", 5);, +++ b/elasticsearch/license/found-plugin/src/main/java/org/elasticsearch/license/plugin/core/FoundLicensesService.java, +public class FoundLicensesService extends AbstractLifecycleComponent<FoundLicensesService> implements LicenseeRegistry,, +        LicensesManagerService {, +++ b/elasticsearch/license/licensor/src/main/java/org/elasticsearch/license/licensor/tools/KeyPairGeneratorTool.java, +            terminal.println(Terminal.Verbosity.VERBOSE, "generating key pair [public key: " + publicKeyPath + ", private key: ", +                    + privateKeyPath + "]");, +++ b/elasticsearch/checkstyle_suppressions.xml, +++ b/elasticsearch/license/base/src/main/java/org/elasticsearch/license/core/License.java, +            throw new ElasticsearchException("Unknown license version found, please upgrade all nodes to the latest elasticsearch-license" +, +                    " plugin");, +                throw new ElasticsearchException("Unknown license version found, please upgrade all nodes to the latest " +, +                        "elasticsearch-license plugin");, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/LicenseSerializationTests.java, +        TestUtils.LicenseSpec randomLicenseSpec = TestUtils.generateRandomLicenseSpec(License.VERSION_START);, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/TestUtils.java, +            return new LicenseSpec(version, uid, feature, issueDateInMillis, expiryDateInMillis, type, subscriptionType, issuedTo, issuer,, +                    maxNodes);, +            this(License.VERSION_CURRENT, UUID.randomUUID().toString(), "feature", issueDate, expiryDate, "trial", "none", "customer",, +                    "elasticsearch", 5);, +++ b/elasticsearch/license/found-plugin/src/main/java/org/elasticsearch/license/plugin/core/FoundLicensesService.java, +public class FoundLicensesService extends AbstractLifecycleComponent<FoundLicensesService> implements LicenseeRegistry,, +        LicensesManagerService {, +++ b/elasticsearch/license/licensor/src/main/java/org/elasticsearch/license/licensor/tools/KeyPairGeneratorTool.java, +            terminal.println(Terminal.Verbosity.VERBOSE, "generating key pair [public key: " + publicKeyPath + ", private key: ", +                    + privateKeyPath + "]");, +++ b/elasticsearch/license/licensor/src/test/java/org/elasticsearch/license/licensor/LicenseVerificationTests.java, +        assertThat(LicenseVerifier.verifyLicense(TestUtils.generateSignedLicense(TimeValue.timeValueHours(2 * 24), pubKeyPath, priKeyPath),, +                Files.readAllBytes(pubKeyPath)), equalTo(true));, +        TestUtils.LicenseSpec licenseSpec = TestUtils.generateRandomLicenseSpec(, +                randomIntBetween(License.VERSION_START, License.VERSION_CURRENT));, +++ b/elasticsearch/checkstyle_suppressions.xml, +++ b/elasticsearch/license/base/src/main/java/org/elasticsearch/license/core/License.java, +            throw new ElasticsearchException("Unknown license version found, please upgrade all nodes to the latest elasticsearch-license" +, +                    " plugin");, +                throw new ElasticsearchException("Unknown license version found, please upgrade all nodes to the latest " +, +                        "elasticsearch-license plugin");, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/LicenseSerializationTests.java, +        TestUtils.LicenseSpec randomLicenseSpec = TestUtils.generateRandomLicenseSpec(License.VERSION_START);, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/TestUtils.java, +            return new LicenseSpec(version, uid, feature, issueDateInMillis, expiryDateInMillis, type, subscriptionType, issuedTo, issuer,, +                    maxNodes);, +            this(License.VERSION_CURRENT, UUID.randomUUID().toString(), "feature", issueDate, expiryDate, "trial", "none", "customer",, +                    "elasticsearch", 5);]