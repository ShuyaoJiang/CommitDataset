[+++ b/build.gradle, +// Make sure gradle idea was run before running anything in intellij (including import)., +File ideaMarker = new File(projectDir, '.local-idea-is-configured'), +tasks.idea.doLast {, +  ideaMarker.setText('', 'UTF-8'), +}, +if (System.getProperty('idea.active') != null && ideaMarker.exists() == false) {, +  throw new GradleException('You must run gradle idea from the root of elasticsearch before importing into IntelliJ'), +}, +, +++ b/build.gradle, +// Make sure gradle idea was run before running anything in intellij (including import)., +File ideaMarker = new File(projectDir, '.local-idea-is-configured'), +tasks.idea.doLast {, +  ideaMarker.setText('', 'UTF-8'), +}, +if (System.getProperty('idea.active') != null && ideaMarker.exists() == false) {, +  throw new GradleException('You must run gradle idea from the root of elasticsearch before importing into IntelliJ'), +}, +, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +    // TODO: add leaveTemporary, +    // TODO: add ifNoTests!, +, +            shuffleOnSlave: shuffleOnSlave, +++ b/build.gradle, +// Make sure gradle idea was run before running anything in intellij (including import)., +File ideaMarker = new File(projectDir, '.local-idea-is-configured'), +tasks.idea.doLast {, +  ideaMarker.setText('', 'UTF-8'), +}, +if (System.getProperty('idea.active') != null && ideaMarker.exists() == false) {, +  throw new GradleException('You must run gradle idea from the root of elasticsearch before importing into IntelliJ'), +}, +, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +    // TODO: add leaveTemporary, +    // TODO: add ifNoTests!, +, +            shuffleOnSlave: shuffleOnSlave, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/build.gradle, +// Make sure gradle idea was run before running anything in intellij (including import)., +File ideaMarker = new File(projectDir, '.local-idea-is-configured'), +tasks.idea.doLast {, +  ideaMarker.setText('', 'UTF-8'), +}, +if (System.getProperty('idea.active') != null && ideaMarker.exists() == false) {, +  throw new GradleException('You must run gradle idea from the root of elasticsearch before importing into IntelliJ'), +}, +, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +    // TODO: add leaveTemporary, +    // TODO: add ifNoTests!, +, +            shuffleOnSlave: shuffleOnSlave, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/TransportFieldStatsTransportAction.java, +                    if (indexConstraintFieldStats != null && indexConstraintFieldStats.match(indexConstraint)) {, +                        // The index constraint didn't match or was empty, so we remove all the field stats of the index we're checking, +++ b/build.gradle, +// Make sure gradle idea was run before running anything in intellij (including import)., +File ideaMarker = new File(projectDir, '.local-idea-is-configured'), +tasks.idea.doLast {, +  ideaMarker.setText('', 'UTF-8'), +}, +if (System.getProperty('idea.active') != null && ideaMarker.exists() == false) {, +  throw new GradleException('You must run gradle idea from the root of elasticsearch before importing into IntelliJ'), +}, +, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +    // TODO: add leaveTemporary, +    // TODO: add ifNoTests!, +, +            shuffleOnSlave: shuffleOnSlave, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/TransportFieldStatsTransportAction.java, +                    if (indexConstraintFieldStats != null && indexConstraintFieldStats.match(indexConstraint)) {, +                        // The index constraint didn't match or was empty, so we remove all the field stats of the index we're checking, +++ b/core/src/test/java/org/elasticsearch/common/cache/CacheTests.java, +                return value.equals(that.value);, +                    if (first) {, +                    } else if (second) {, +                    } else {, +++ b/build.gradle, +// Make sure gradle idea was run before running anything in intellij (including import)., +File ideaMarker = new File(projectDir, '.local-idea-is-configured'), +tasks.idea.doLast {, +  ideaMarker.setText('', 'UTF-8'), +}, +if (System.getProperty('idea.active') != null && ideaMarker.exists() == false) {, +  throw new GradleException('You must run gradle idea from the root of elasticsearch before importing into IntelliJ'), +}, +, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +    // TODO: add leaveTemporary, +    // TODO: add ifNoTests!, +, +            shuffleOnSlave: shuffleOnSlave, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy]