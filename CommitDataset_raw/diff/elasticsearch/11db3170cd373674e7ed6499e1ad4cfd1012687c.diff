[+++ b/docs/reference/migration/migrate_2_0.asciidoc, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +++ b/docs/reference/modules/snapshots.asciidoc, +<<indices-open-close,closed>>. The restore operation automatically opens restored indices if they were closed and creates new indices if they, +=== Partial restore, +=== Changing index settings during restore, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +++ b/docs/reference/modules/snapshots.asciidoc, +<<indices-open-close,closed>>. The restore operation automatically opens restored indices if they were closed and creates new indices if they, +=== Partial restore, +=== Changing index settings during restore, +++ b/pom.xml, +        <lucene.snapshot.revision>1677039</lucene.snapshot.revision>, +                                <include>org/apache/lucene/util/AbstractRandomizedTest.java</include>, +                                <include>org/elasticsearch/cache/recycler/MockPageCacheRecycler.class</include>, +                                <include>org/apache/lucene/util/AbstractRandomizedTest.class</include>, +                                <include>org/apache/lucene/util/AbstractRandomizedTest$*.class</include>, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +++ b/docs/reference/modules/snapshots.asciidoc, +<<indices-open-close,closed>>. The restore operation automatically opens restored indices if they were closed and creates new indices if they, +=== Partial restore, +=== Changing index settings during restore, +++ b/pom.xml, +        <lucene.snapshot.revision>1677039</lucene.snapshot.revision>, +                                <include>org/apache/lucene/util/AbstractRandomizedTest.java</include>, +                                <include>org/elasticsearch/cache/recycler/MockPageCacheRecycler.class</include>, +                                <include>org/apache/lucene/util/AbstractRandomizedTest.class</include>, +                                <include>org/apache/lucene/util/AbstractRandomizedTest$*.class</include>, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +    private Node node;, +        NodeBuilder nodeBuilder = NodeBuilder.nodeBuilder().settings(settings).loadConfigSettings(false);, +        node = nodeBuilder.build();, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +++ b/docs/reference/modules/snapshots.asciidoc, +<<indices-open-close,closed>>. The restore operation automatically opens restored indices if they were closed and creates new indices if they, +=== Partial restore, +=== Changing index settings during restore, +++ b/pom.xml, +        <lucene.snapshot.revision>1677039</lucene.snapshot.revision>, +                                <include>org/apache/lucene/util/AbstractRandomizedTest.java</include>, +                                <include>org/elasticsearch/cache/recycler/MockPageCacheRecycler.class</include>, +                                <include>org/apache/lucene/util/AbstractRandomizedTest.class</include>, +                                <include>org/apache/lucene/util/AbstractRandomizedTest$*.class</include>, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +    private Node node;, +        NodeBuilder nodeBuilder = NodeBuilder.nodeBuilder().settings(settings).loadConfigSettings(false);, +        node = nodeBuilder.build();, +++ b/src/main/java/org/elasticsearch/bootstrap/Security.java, +public class Security {, +    public static void addPath(Permissions policy, Path path, String permissions) throws IOException {, +        Files.createDirectories(path);, +    public static void selfTest() {, +            Files.delete(Files.createTempFile(null, null));, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +++ b/docs/reference/modules/snapshots.asciidoc, +<<indices-open-close,closed>>. The restore operation automatically opens restored indices if they were closed and creates new indices if they, +=== Partial restore, +=== Changing index settings during restore, +++ b/pom.xml, +        <lucene.snapshot.revision>1677039</lucene.snapshot.revision>, +                                <include>org/apache/lucene/util/AbstractRandomizedTest.java</include>, +                                <include>org/elasticsearch/cache/recycler/MockPageCacheRecycler.class</include>, +                                <include>org/apache/lucene/util/AbstractRandomizedTest.class</include>, +                                <include>org/apache/lucene/util/AbstractRandomizedTest$*.class</include>, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +    private Node node;, +        NodeBuilder nodeBuilder = NodeBuilder.nodeBuilder().settings(settings).loadConfigSettings(false);, +        node = nodeBuilder.build();, +++ b/src/main/java/org/elasticsearch/bootstrap/Security.java, +public class Security {, +    public static void addPath(Permissions policy, Path path, String permissions) throws IOException {, +        Files.createDirectories(path);, +    public static void selfTest() {, +            Files.delete(Files.createTempFile(null, null));, +++ b/src/main/java/org/elasticsearch/common/jna/Natives.java, +        } catch (Throwable error) {, +            logger.warn("unable to determine euid", error);, +            return false; // don't know, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +++ b/docs/reference/modules/snapshots.asciidoc, +<<indices-open-close,closed>>. The restore operation automatically opens restored indices if they were closed and creates new indices if they, +=== Partial restore, +=== Changing index settings during restore, +++ b/pom.xml, +        <lucene.snapshot.revision>1677039</lucene.snapshot.revision>, +                                <include>org/apache/lucene/util/AbstractRandomizedTest.java</include>, +                                <include>org/elasticsearch/cache/recycler/MockPageCacheRecycler.class</include>, +                                <include>org/apache/lucene/util/AbstractRandomizedTest.class</include>, +                                <include>org/apache/lucene/util/AbstractRandomizedTest$*.class</include>, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +    private Node node;, +        NodeBuilder nodeBuilder = NodeBuilder.nodeBuilder().settings(settings).loadConfigSettings(false);, +        node = nodeBuilder.build();, +++ b/src/main/java/org/elasticsearch/bootstrap/Security.java, +public class Security {, +    public static void addPath(Permissions policy, Path path, String permissions) throws IOException {, +        Files.createDirectories(path);, +    public static void selfTest() {, +            Files.delete(Files.createTempFile(null, null));, +++ b/src/main/java/org/elasticsearch/common/jna/Natives.java]