[+++ b/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +                        UpdateRequest updateRequest = new UpdateRequest(index, type, id).routing(routing).parent(parent).retryOnConflict(retryOnConflict), +                                .source(data.slice(from, nextMarker - from));, +, +                        IndexRequest upsertRequest = updateRequest.upsertRequest();, +                        if (upsertRequest != null) {, +                            upsertRequest.routing(routing);, +                            upsertRequest.parent(parent); // order is important, set it after routing, so it will set the routing, +                            upsertRequest.timestamp(timestamp);, +                            upsertRequest.ttl(ttl);, +                            upsertRequest.version(version);, +                            upsertRequest.versionType(versionType);, +                        }, +                        IndexRequest doc = updateRequest.doc();, +                        if (doc != null) {, +                            doc.routing(routing);, +                            doc.parent(parent); // order is important, set it after routing, so it will set the routing, +                            doc.timestamp(timestamp);, +                            doc.ttl(ttl);, +                            doc.version(version);, +                            doc.versionType(versionType);, +                        }, +, +                        internalAdd(updateRequest, payload);, +++ b/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +                        UpdateRequest updateRequest = new UpdateRequest(index, type, id).routing(routing).parent(parent).retryOnConflict(retryOnConflict), +                                .source(data.slice(from, nextMarker - from));, +, +                        IndexRequest upsertRequest = updateRequest.upsertRequest();, +                        if (upsertRequest != null) {, +                            upsertRequest.routing(routing);, +                            upsertRequest.parent(parent); // order is important, set it after routing, so it will set the routing, +                            upsertRequest.timestamp(timestamp);, +                            upsertRequest.ttl(ttl);, +                            upsertRequest.version(version);, +                            upsertRequest.versionType(versionType);, +                        }, +                        IndexRequest doc = updateRequest.doc();, +                        if (doc != null) {, +                            doc.routing(routing);, +                            doc.parent(parent); // order is important, set it after routing, so it will set the routing, +                            doc.timestamp(timestamp);, +                            doc.ttl(ttl);, +                            doc.version(version);, +                            doc.versionType(versionType);, +                        }, +, +                        internalAdd(updateRequest, payload);, +++ b/src/test/java/org/elasticsearch/test/integration/document/BulkTests.java, +import org.elasticsearch.action.search.SearchResponse;, +import org.elasticsearch.index.query.QueryBuilders;, +import org.elasticsearch.search.SearchHit;, +    //Test for https://github.com/elasticsearch/elasticsearch/issues/3444, +    @Test, +    public void testBulkUpdateDocAsUpsertWithParent() throws Exception {, +        client().admin().indices().prepareCreate("test"), +                .setSettings(, +                        ImmutableSettings.settingsBuilder(), +                                .put("index.number_of_shards", 2), +                                .put("index.number_of_replicas", 1), +                ).addMapping("child", "{\"child\": {\"_parent\": {\"type\": \"parent\"}}}"), +                .execute().actionGet();, +        client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();, +, +        BulkRequestBuilder builder = client().prepareBulk();, +, +, +        byte[] addParent = ("{\"index\" : { \"_index\" : \"test\", \"_type\" : \"parent\", \"_id\" : \"parent1\"}}\n" +, +                "{\"field1\" : \"value1\"}\n").getBytes("utf-8");, +, +        byte[] addChild = ("{ \"update\" : { \"_index\" : \"test\", \"_type\" : \"child\", \"_id\" : \"child1\", \"parent\" : \"parent1\"}}\n" +, +                "{\"doc\" : { \"field1\" : \"value1\"}, \"doc_as_upsert\" : \"true\"}\n").getBytes("utf-8");, +, +        builder.add(addParent, 0, addParent.length, false);, +        builder.add(addChild, 0, addChild.length, false);, +, +        BulkResponse bulkResponse = builder.get();, +        assertThat(bulkResponse.getItems().length, equalTo(2));, +        assertThat(bulkResponse.getItems()[0].isFailed(), equalTo(false));, +        assertThat(bulkResponse.getItems()[1].isFailed(), equalTo(false));, +, +        client().admin().indices().prepareRefresh("test").get();, +, +        //we check that the _parent field was set on the child document by using the has parent query, +        SearchResponse searchResponse = client().prepareSearch("test"), +                .setQuery(QueryBuilders.hasParentQuery("parent", QueryBuilders.matchAllQuery())), +                .get();, +, +        assertThat(searchResponse.getFailedShards(), equalTo(0));, +        SearchHit[] hits = searchResponse.getHits().getHits();, +        assertThat(hits.length, equalTo(1));, +        assertThat(hits[0].getId(), equalTo("child1"));, +, +    }, +, +, +    @Test, +    public void testBulkUpdateUpsertWithParent() throws Exception {, +        client().admin().indices().prepareCreate("test"), +                .setSettings(]