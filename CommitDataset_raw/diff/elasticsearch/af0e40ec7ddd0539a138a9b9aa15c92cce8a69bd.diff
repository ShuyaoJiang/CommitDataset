[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.apache.lucene.util.IOUtils;, +import org.elasticsearch.ElasticsearchException;, +import java.io.IOException;, +                        try {, +                        } catch (IOException e) {, +                            throw new ElasticsearchException("failed to stop node", e);, +                        }, +                    try {, +                        IOUtils.close(node);, +                    } catch (IOException ex) {, +                        throw new ElasticsearchException("failed to stop node", ex);, +    static void stop() throws IOException {, +            IOUtils.close(INSTANCE.node);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.apache.lucene.util.IOUtils;, +import org.elasticsearch.ElasticsearchException;, +import java.io.IOException;, +                        try {, +                        } catch (IOException e) {, +                            throw new ElasticsearchException("failed to stop node", e);, +                        }, +                    try {, +                        IOUtils.close(node);, +                    } catch (IOException ex) {, +                        throw new ElasticsearchException("failed to stop node", ex);, +    static void stop() throws IOException {, +            IOUtils.close(INSTANCE.node);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +import java.io.IOException;, +, +    static void close(String[] args) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.apache.lucene.util.IOUtils;, +import org.elasticsearch.ElasticsearchException;, +import java.io.IOException;, +                        try {, +                        } catch (IOException e) {, +                            throw new ElasticsearchException("failed to stop node", e);, +                        }, +                    try {, +                        IOUtils.close(node);, +                    } catch (IOException ex) {, +                        throw new ElasticsearchException("failed to stop node", ex);, +    static void stop() throws IOException {, +            IOUtils.close(INSTANCE.node);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +import java.io.IOException;, +, +    static void close(String[] args) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/cache/recycler/PageCacheRecycler.java, +import org.elasticsearch.common.lease.Releasable;, +public class PageCacheRecycler extends AbstractComponent implements Releasable {, +    @Override, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.apache.lucene.util.IOUtils;, +import org.elasticsearch.ElasticsearchException;, +import java.io.IOException;, +                        try {, +                        } catch (IOException e) {, +                            throw new ElasticsearchException("failed to stop node", e);, +                        }, +                    try {, +                        IOUtils.close(node);, +                    } catch (IOException ex) {, +                        throw new ElasticsearchException("failed to stop node", ex);, +    static void stop() throws IOException {, +            IOUtils.close(INSTANCE.node);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +import java.io.IOException;, +, +    static void close(String[] args) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/cache/recycler/PageCacheRecycler.java, +import org.elasticsearch.common.lease.Releasable;, +public class PageCacheRecycler extends AbstractComponent implements Releasable {, +    @Override, +++ b/core/src/main/java/org/elasticsearch/common/lease/Releasable.java, +import java.io.Closeable;, +, +public interface Releasable extends Closeable {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.apache.lucene.util.IOUtils;, +import org.elasticsearch.ElasticsearchException;, +import java.io.IOException;, +                        try {, +                        } catch (IOException e) {, +                            throw new ElasticsearchException("failed to stop node", e);, +                        }, +                    try {, +                        IOUtils.close(node);, +                    } catch (IOException ex) {, +                        throw new ElasticsearchException("failed to stop node", ex);, +    static void stop() throws IOException {, +            IOUtils.close(INSTANCE.node);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +import java.io.IOException;, +, +    static void close(String[] args) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/cache/recycler/PageCacheRecycler.java, +import org.elasticsearch.common.lease.Releasable;]