[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java, +                new NamedWriteableRegistry.Entry(PersistentTaskParams.class, StartDatafeedAction.TASK_NAME,, +                        StartDatafeedAction.DatafeedParams::new),, +                new NamedWriteableRegistry.Entry(PersistentTaskParams.class, OpenJobAction.TASK_NAME,, +                        OpenJobAction.JobParams::new),, +                new NamedXContentRegistry.Entry(PersistentTaskParams.class, new ParseField(StartDatafeedAction.TASK_NAME),, +                        StartDatafeedAction.DatafeedParams::fromXContent),, +                new NamedXContentRegistry.Entry(PersistentTaskParams.class, new ParseField(OpenJobAction.TASK_NAME),, +                        OpenJobAction.JobParams::fromXContent),, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java, +                new NamedWriteableRegistry.Entry(PersistentTaskParams.class, StartDatafeedAction.TASK_NAME,, +                        StartDatafeedAction.DatafeedParams::new),, +                new NamedWriteableRegistry.Entry(PersistentTaskParams.class, OpenJobAction.TASK_NAME,, +                        OpenJobAction.JobParams::new),, +                new NamedXContentRegistry.Entry(PersistentTaskParams.class, new ParseField(StartDatafeedAction.TASK_NAME),, +                        StartDatafeedAction.DatafeedParams::fromXContent),, +                new NamedXContentRegistry.Entry(PersistentTaskParams.class, new ParseField(OpenJobAction.TASK_NAME),, +                        OpenJobAction.JobParams::fromXContent),, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MlAssignmentNotifier.java, +            if (OpenJobAction.TASK_NAME.equals(currentTask.getTaskName())) {, +                String jobId = ((OpenJobAction.JobParams) currentTask.getParams()).getJobId();, +            } else if (StartDatafeedAction.TASK_NAME.equals(currentTask.getTaskName())) {, +                String datafeedId = ((StartDatafeedAction.DatafeedParams) currentTask.getParams()).getDatafeedId();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java, +                new NamedWriteableRegistry.Entry(PersistentTaskParams.class, StartDatafeedAction.TASK_NAME,, +                        StartDatafeedAction.DatafeedParams::new),, +                new NamedWriteableRegistry.Entry(PersistentTaskParams.class, OpenJobAction.TASK_NAME,, +                        OpenJobAction.JobParams::new),, +                new NamedXContentRegistry.Entry(PersistentTaskParams.class, new ParseField(StartDatafeedAction.TASK_NAME),, +                        StartDatafeedAction.DatafeedParams::fromXContent),, +                new NamedXContentRegistry.Entry(PersistentTaskParams.class, new ParseField(OpenJobAction.TASK_NAME),, +                        OpenJobAction.JobParams::fromXContent),, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MlAssignmentNotifier.java, +            if (OpenJobAction.TASK_NAME.equals(currentTask.getTaskName())) {, +                String jobId = ((OpenJobAction.JobParams) currentTask.getParams()).getJobId();, +            } else if (StartDatafeedAction.TASK_NAME.equals(currentTask.getTaskName())) {, +                String datafeedId = ((StartDatafeedAction.DatafeedParams) currentTask.getParams()).getDatafeedId();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/OpenJobAction.java, +import org.elasticsearch.common.xcontent.ToXContent;, +    public static final String TASK_NAME = "xpack/ml/job";, +    public static class Request extends ActionRequest implements ToXContent {, +            JobParams jobParams = JobParams.PARSER.apply(parser, null);, +                jobParams.jobId = jobId;, +            return new Request(jobParams);, +        }, +, +        private JobParams jobParams;, +, +        public Request(JobParams jobParams) {, +            this.jobParams = jobParams;, +        }, +, +        public Request(String jobId) {, +            this.jobParams = new JobParams(jobId);, +        }, +, +        public Request(StreamInput in) throws IOException {, +            readFrom(in);, +        }, +, +        Request() {, +        }, +, +        public JobParams getJobParams() {, +            return jobParams;, +        }, +, +        @Override, +        public ActionRequestValidationException validate() {, +            return null;, +        }, +, +        @Override, +        public void readFrom(StreamInput in) throws IOException {, +            super.readFrom(in);, +            jobParams = new JobParams(in);, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            super.writeTo(out);, +            jobParams.writeTo(out);, +        }, +, +        @Override, +        public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +            jobParams.toXContent(builder, params);, +            return builder;, +        }, +, +        @Override, +        public int hashCode() {, +            return Objects.hash(jobParams);, +        }, +, +        @Override, +        public boolean equals(Object obj) {, +            if (this == obj) {, +                return true;, +            }]