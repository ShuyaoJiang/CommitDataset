[+++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/command/AllocateAllocationCommand.java, +import org.elasticsearch.ElasticsearchIllegalStateException;, +        if (routingNode == null) {, +            if (!discoNode.dataNode()) {, +                throw new ElasticsearchIllegalArgumentException("Allocation can only be done on data nodes, not [" + node + "]");, +            } else {, +                throw new ElasticsearchIllegalStateException("Could not find [" + node + "] among the routing nodes");, +            }, +        }, +, +++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/command/AllocateAllocationCommand.java, +import org.elasticsearch.ElasticsearchIllegalStateException;, +        if (routingNode == null) {, +            if (!discoNode.dataNode()) {, +                throw new ElasticsearchIllegalArgumentException("Allocation can only be done on data nodes, not [" + node + "]");, +            } else {, +                throw new ElasticsearchIllegalStateException("Could not find [" + node + "] among the routing nodes");, +            }, +        }, +, +++ b/src/test/java/org/elasticsearch/cluster/routing/allocation/AllocationCommandsTests.java, +import com.google.common.collect.ImmutableMap;, +                .put(newNode("node4", ImmutableMap.of("data", Boolean.FALSE.toString()))), +        logger.info("--> allocating to non-data node, should fail");, +        try {, +            rerouteResult = allocation.reroute(clusterState, new AllocationCommands(new AllocateAllocationCommand(new ShardId("test", 0), "node4", true)));, +            fail();, +        } catch (ElasticsearchIllegalArgumentException e) {, +        }, +]