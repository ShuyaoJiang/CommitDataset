[+++ b/docs/plugins/repository-s3.asciidoc, +++ b/docs/plugins/repository-s3.asciidoc, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/AwsS3Service.java, +    AmazonS3 client(String endpoint, Protocol protocol, String region, String account, String key, Integer maxRetries);, +++ b/docs/plugins/repository-s3.asciidoc, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/AwsS3Service.java, +    AmazonS3 client(String endpoint, Protocol protocol, String region, String account, String key, Integer maxRetries);, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java, +    private Map<Tuple<String, String>, AmazonS3Client> clients = new HashMap<>();, +    public synchronized AmazonS3 client(String endpoint, Protocol protocol, String region, String account, String key, Integer maxRetries) {, +        return getClient(endpoint, protocol, account, key, maxRetries);, +    private synchronized AmazonS3 getClient(String endpoint, Protocol protocol, String account, String key, Integer maxRetries) {, +        Tuple<String, String> clientDescriptor = new Tuple<>(endpoint, account);, +++ b/docs/plugins/repository-s3.asciidoc, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/AwsS3Service.java, +    AmazonS3 client(String endpoint, Protocol protocol, String region, String account, String key, Integer maxRetries);, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java, +    private Map<Tuple<String, String>, AmazonS3Client> clients = new HashMap<>();, +    public synchronized AmazonS3 client(String endpoint, Protocol protocol, String region, String account, String key, Integer maxRetries) {, +        return getClient(endpoint, protocol, account, key, maxRetries);, +    private synchronized AmazonS3 getClient(String endpoint, Protocol protocol, String account, String key, Integer maxRetries) {, +        Tuple<String, String> clientDescriptor = new Tuple<>(endpoint, account);, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/blobstore/DefaultS3OutputStream.java, +        InputStream inputStream = is;, +, +        // We try to compute a MD5 while reading it, +        MessageDigest messageDigest;, +        try {, +            messageDigest = MessageDigest.getInstance("MD5");, +            inputStream = new DigestInputStream(is, messageDigest);, +        } catch (NoSuchAlgorithmException impossible) {, +            // Every implementation of the Java platform is required to support MD5 (see MessageDigest), +            throw new RuntimeException(impossible);, +        }, +, +        PutObjectRequest putRequest = new PutObjectRequest(bucketName, blobName, inputStream, md), +        PutObjectResult putObjectResult = blobStore.client().putObject(putRequest);, +, +        String localMd5 = Base64.encodeAsString(messageDigest.digest());, +        String remoteMd5 = putObjectResult.getContentMd5();, +        if (!localMd5.equals(remoteMd5)) {, +            logger.debug("MD5 local [{}], remote [{}] are not equal...", localMd5, remoteMd5);, +            throw new AmazonS3Exception("MD5 local [" + localMd5 +, +                    "], remote [" + remoteMd5 +, +                    "] are not equal...");, +        }, +++ b/docs/plugins/repository-s3.asciidoc, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/AwsS3Service.java, +    AmazonS3 client(String endpoint, Protocol protocol, String region, String account, String key, Integer maxRetries);, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java, +    private Map<Tuple<String, String>, AmazonS3Client> clients = new HashMap<>();, +    public synchronized AmazonS3 client(String endpoint, Protocol protocol, String region, String account, String key, Integer maxRetries) {, +        return getClient(endpoint, protocol, account, key, maxRetries);, +    private synchronized AmazonS3 getClient(String endpoint, Protocol protocol, String account, String key, Integer maxRetries) {, +        Tuple<String, String> clientDescriptor = new Tuple<>(endpoint, account);, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/blobstore/DefaultS3OutputStream.java, +        InputStream inputStream = is;, +, +        // We try to compute a MD5 while reading it, +        MessageDigest messageDigest;, +        try {, +            messageDigest = MessageDigest.getInstance("MD5");, +            inputStream = new DigestInputStream(is, messageDigest);, +        } catch (NoSuchAlgorithmException impossible) {, +            // Every implementation of the Java platform is required to support MD5 (see MessageDigest), +            throw new RuntimeException(impossible);, +        }, +, +        PutObjectRequest putRequest = new PutObjectRequest(bucketName, blobName, inputStream, md), +        PutObjectResult putObjectResult = blobStore.client().putObject(putRequest);, +, +        String localMd5 = Base64.encodeAsString(messageDigest.digest());, +        String remoteMd5 = putObjectResult.getContentMd5();, +        if (!localMd5.equals(remoteMd5)) {, +            logger.debug("MD5 local [{}], remote [{}] are not equal...", localMd5, remoteMd5);, +            throw new AmazonS3Exception("MD5 local [" + localMd5 +, +                    "], remote [" + remoteMd5 +, +                    "] are not equal...");, +        }, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobStore.java, +++ b/docs/plugins/repository-s3.asciidoc, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/AwsS3Service.java, +    AmazonS3 client(String endpoint, Protocol protocol, String region, String account, String key, Integer maxRetries);, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java, +    private Map<Tuple<String, String>, AmazonS3Client> clients = new HashMap<>();, +    public synchronized AmazonS3 client(String endpoint, Protocol protocol, String region, String account, String key, Integer maxRetries) {, +        return getClient(endpoint, protocol, account, key, maxRetries);, +    private synchronized AmazonS3 getClient(String endpoint, Protocol protocol, String account, String key, Integer maxRetries) {, +        Tuple<String, String> clientDescriptor = new Tuple<>(endpoint, account);, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/blobstore/DefaultS3OutputStream.java, +        InputStream inputStream = is;, +, +        // We try to compute a MD5 while reading it, +        MessageDigest messageDigest;, +        try {, +            messageDigest = MessageDigest.getInstance("MD5");, +            inputStream = new DigestInputStream(is, messageDigest);, +        } catch (NoSuchAlgorithmException impossible) {, +            // Every implementation of the Java platform is required to support MD5 (see MessageDigest), +            throw new RuntimeException(impossible);]