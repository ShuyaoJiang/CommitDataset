[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/DataFrameClient.java, +import org.elasticsearch.client.dataframe.GetDataFrameTransformRequest;, +import org.elasticsearch.client.dataframe.GetDataFrameTransformResponse;, +, +    /**, +     * Get one or more data frame transform configurations, +     * <p>, +     * For additional info, +     * see <a href="https://www.TODO.com">Get Data Frame transform documentation</a>, +     *, +     * @param request The get data frame transform request, +     * @param options Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return An GetDataFrameTransformResponse containing the requested transforms, +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public GetDataFrameTransformResponse getDataFrameTransform(GetDataFrameTransformRequest request, RequestOptions options), +            throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +                DataFrameRequestConverters::getDataFrameTransform,, +                options,, +                GetDataFrameTransformResponse::fromXContent,, +                Collections.emptySet());, +    }, +, +    /**, +     * Get one or more data frame transform configurations asynchronously and notifies listener on completion, +     * <p>, +     * For additional info, +     * see <a href="https://www.TODO.com">Get Data Frame transform documentation</a>, +     *, +     * @param request The get data frame transform request, +     * @param options Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified upon request completion, +     */, +    public void getDataFrameTransformAsync(GetDataFrameTransformRequest request, RequestOptions options,, +                                           ActionListener<GetDataFrameTransformResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +                DataFrameRequestConverters::getDataFrameTransform,, +                options,, +                GetDataFrameTransformResponse::fromXContent,, +                listener,, +                Collections.emptySet());, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/DataFrameClient.java, +import org.elasticsearch.client.dataframe.GetDataFrameTransformRequest;, +import org.elasticsearch.client.dataframe.GetDataFrameTransformResponse;, +, +    /**, +     * Get one or more data frame transform configurations, +     * <p>, +     * For additional info, +     * see <a href="https://www.TODO.com">Get Data Frame transform documentation</a>, +     *, +     * @param request The get data frame transform request, +     * @param options Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return An GetDataFrameTransformResponse containing the requested transforms, +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public GetDataFrameTransformResponse getDataFrameTransform(GetDataFrameTransformRequest request, RequestOptions options), +            throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +                DataFrameRequestConverters::getDataFrameTransform,, +                options,, +                GetDataFrameTransformResponse::fromXContent,, +                Collections.emptySet());, +    }, +, +    /**, +     * Get one or more data frame transform configurations asynchronously and notifies listener on completion, +     * <p>, +     * For additional info, +     * see <a href="https://www.TODO.com">Get Data Frame transform documentation</a>, +     *, +     * @param request The get data frame transform request, +     * @param options Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified upon request completion, +     */, +    public void getDataFrameTransformAsync(GetDataFrameTransformRequest request, RequestOptions options,, +                                           ActionListener<GetDataFrameTransformResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +                DataFrameRequestConverters::getDataFrameTransform,, +                options,, +                GetDataFrameTransformResponse::fromXContent,, +                listener,, +                Collections.emptySet());, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/DataFrameRequestConverters.java, +import org.elasticsearch.client.dataframe.GetDataFrameTransformRequest;, +import org.elasticsearch.common.Strings;, +    static Request getDataFrameTransform(GetDataFrameTransformRequest getRequest) {, +        String endpoint = new RequestConverters.EndpointBuilder(), +                .addPathPartAsIs("_data_frame", "transforms"), +                .addPathPart(Strings.collectionToCommaDelimitedString(getRequest.getId())), +                .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);, +        if (getRequest.getFrom() != null) {, +            request.addParameter("from", getRequest.getFrom().toString());, +        }, +        if (getRequest.getSize() != null) {, +            request.addParameter("size", getRequest.getSize().toString());]