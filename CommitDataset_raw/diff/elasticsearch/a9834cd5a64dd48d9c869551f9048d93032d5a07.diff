[+++ b/docs/reference/ilm/apis/explain.asciidoc, +If {ilm-init} is waiting for a step to complete, the response includes status, +++ b/docs/reference/ilm/apis/explain.asciidoc, +If {ilm-init} is waiting for a step to complete, the response includes status, +++ b/docs/reference/ilm/apis/get-status.asciidoc, +=== Get {ilm} status API, +<titleabbrev>Get {ilm} status</titleabbrev>, +Retrieves the current {ilm} ({ilm-init}) status., +Returns the status of the {ilm-init} plugin. The `operation_mode` field in the, +or `STOPPED`. You can change the status of the {ilm-init} plugin with the, +The following example gets the {ilm-init} plugin status., +++ b/docs/reference/ilm/apis/explain.asciidoc, +If {ilm-init} is waiting for a step to complete, the response includes status, +++ b/docs/reference/ilm/apis/get-status.asciidoc, +=== Get {ilm} status API, +<titleabbrev>Get {ilm} status</titleabbrev>, +Retrieves the current {ilm} ({ilm-init}) status., +Returns the status of the {ilm-init} plugin. The `operation_mode` field in the, +or `STOPPED`. You can change the status of the {ilm-init} plugin with the, +The following example gets the {ilm-init} plugin status., +++ b/docs/reference/ilm/apis/put-lifecycle.asciidoc, +All operations executed by {ilm} for a policy are executed as the user that, +++ b/docs/reference/ilm/apis/explain.asciidoc, +If {ilm-init} is waiting for a step to complete, the response includes status, +++ b/docs/reference/ilm/apis/get-status.asciidoc, +=== Get {ilm} status API, +<titleabbrev>Get {ilm} status</titleabbrev>, +Retrieves the current {ilm} ({ilm-init}) status., +Returns the status of the {ilm-init} plugin. The `operation_mode` field in the, +or `STOPPED`. You can change the status of the {ilm-init} plugin with the, +The following example gets the {ilm-init} plugin status., +++ b/docs/reference/ilm/apis/put-lifecycle.asciidoc, +All operations executed by {ilm} for a policy are executed as the user that, +++ b/docs/reference/ilm/apis/start.asciidoc, +=== Start {ilm} API, +<titleabbrev>Start {ilm}</titleabbrev>, +Start the {ilm} ({ilm-init}) plugin., +Starts the {ilm-init} plugin if it is currently stopped. {ilm-init} is started, +automatically when the cluster is formed. Restarting {ilm-init} is only, +necessary if it has been stopped using the <<ilm-stop, Stop {ilm-init} API>>., +For more information, see {stack-ov}/security-privileges.html[Security privileges]., +++ b/docs/reference/ilm/apis/explain.asciidoc, +If {ilm-init} is waiting for a step to complete, the response includes status, +++ b/docs/reference/ilm/apis/get-status.asciidoc, +=== Get {ilm} status API, +<titleabbrev>Get {ilm} status</titleabbrev>, +Retrieves the current {ilm} ({ilm-init}) status., +Returns the status of the {ilm-init} plugin. The `operation_mode` field in the, +or `STOPPED`. You can change the status of the {ilm-init} plugin with the, +The following example gets the {ilm-init} plugin status., +++ b/docs/reference/ilm/apis/put-lifecycle.asciidoc, +All operations executed by {ilm} for a policy are executed as the user that, +++ b/docs/reference/ilm/apis/start.asciidoc, +=== Start {ilm} API, +<titleabbrev>Start {ilm}</titleabbrev>, +Start the {ilm} ({ilm-init}) plugin., +Starts the {ilm-init} plugin if it is currently stopped. {ilm-init} is started, +automatically when the cluster is formed. Restarting {ilm-init} is only, +necessary if it has been stopped using the <<ilm-stop, Stop {ilm-init} API>>., +For more information, see {stack-ov}/security-privileges.html[Security privileges]., +++ b/docs/reference/ilm/apis/stop.asciidoc, +=== Stop {ilm} API, +<titleabbrev>Stop {ilm}</titleabbrev>, +Stop the {ilm} ({ilm-init}) plugin., +Halts all lifecycle management operations and stops the {ilm-init} plugin. This, +is useful when you are performing maintenance on the cluster and need to prevent, +{ilm-init} from performing any actions on your indices., +if {ilm-init} is running., +++ b/docs/reference/ilm/apis/explain.asciidoc, +If {ilm-init} is waiting for a step to complete, the response includes status, +++ b/docs/reference/ilm/apis/get-status.asciidoc, +=== Get {ilm} status API, +<titleabbrev>Get {ilm} status</titleabbrev>, +Retrieves the current {ilm} ({ilm-init}) status., +Returns the status of the {ilm-init} plugin. The `operation_mode` field in the, +or `STOPPED`. You can change the status of the {ilm-init} plugin with the, +The following example gets the {ilm-init} plugin status., +++ b/docs/reference/ilm/apis/put-lifecycle.asciidoc, +All operations executed by {ilm} for a policy are executed as the user that, +++ b/docs/reference/ilm/apis/start.asciidoc, +=== Start {ilm} API, +<titleabbrev>Start {ilm}</titleabbrev>, +Start the {ilm} ({ilm-init}) plugin., +Starts the {ilm-init} plugin if it is currently stopped. {ilm-init} is started, +automatically when the cluster is formed. Restarting {ilm-init} is only, +necessary if it has been stopped using the <<ilm-stop, Stop {ilm-init} API>>., +For more information, see {stack-ov}/security-privileges.html[Security privileges]., +++ b/docs/reference/ilm/apis/stop.asciidoc, +=== Stop {ilm} API, +<titleabbrev>Stop {ilm}</titleabbrev>, +Stop the {ilm} ({ilm-init}) plugin., +Halts all lifecycle management operations and stops the {ilm-init} plugin. This, +is useful when you are performing maintenance on the cluster and need to prevent, +{ilm-init} from performing any actions on your indices., +if {ilm-init} is running., +++ b/docs/reference/ilm/getting-started-ilm.asciidoc, +Let's jump into {ilm} ({ilm-init}) by working through a hands-on scenario., +This section will leverage many new concepts unique to {ilm-init} that, +There are many new features introduced by {ilm-init}, but we will only focus on, +The above index template introduces a few new settings specific to {ilm-init}.]