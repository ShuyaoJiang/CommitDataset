[+++ b/core/src/main/java/org/elasticsearch/index/fielddata/AtomicFieldData.java, +    ScriptDocValues<?> getScriptValues();, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/AtomicFieldData.java, +    ScriptDocValues<?> getScriptValues();, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexNumericFieldData.java, +        DATE(false),, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/AtomicFieldData.java, +    ScriptDocValues<?> getScriptValues();, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexNumericFieldData.java, +        DATE(false),, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/ScriptDocValues.java, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.common.logging.ESLoggerFactory;, +        protected static final DeprecationLogger deprecationLogger = new DeprecationLogger(ESLoggerFactory.getLogger(Longs.class));, +        @Deprecated, +            deprecationLogger.deprecated("getDate on numeric fields is deprecated. Use a date field to get dates.");, +        @Deprecated, +            deprecationLogger.deprecated("getDates on numeric fields is deprecated. Use a date field to get dates.");, +        protected static final DeprecationLogger deprecationLogger = new DeprecationLogger(ESLoggerFactory.getLogger(Dates.class));, +, +        /**, +         * Fetch the first value. Added for backwards compatibility with 5.x when date fields were {@link Longs}., +         */, +        @Deprecated, +        public ReadableDateTime getDate() {, +            deprecationLogger.deprecated("getDate is no longer necisary on date fields as the value is now a date.");, +            return getValue();, +        }, +, +        /**, +         * Fetch all the values. Added for backwards compatibility with 5.x when date fields were {@link Longs}., +         */, +        @Deprecated, +        public List<ReadableDateTime> getDates() {, +            deprecationLogger.deprecated("getDates is no longer necisary on date fields as the values are now dates.");, +            return this;, +        }, +, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/AtomicFieldData.java, +    ScriptDocValues<?> getScriptValues();, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexNumericFieldData.java, +        DATE(false),, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/ScriptDocValues.java, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.common.logging.ESLoggerFactory;, +        protected static final DeprecationLogger deprecationLogger = new DeprecationLogger(ESLoggerFactory.getLogger(Longs.class));, +        @Deprecated, +            deprecationLogger.deprecated("getDate on numeric fields is deprecated. Use a date field to get dates.");, +        @Deprecated, +            deprecationLogger.deprecated("getDates on numeric fields is deprecated. Use a date field to get dates.");, +        protected static final DeprecationLogger deprecationLogger = new DeprecationLogger(ESLoggerFactory.getLogger(Dates.class));, +, +        /**, +         * Fetch the first value. Added for backwards compatibility with 5.x when date fields were {@link Longs}., +         */, +        @Deprecated, +        public ReadableDateTime getDate() {, +            deprecationLogger.deprecated("getDate is no longer necisary on date fields as the value is now a date.");, +            return getValue();, +        }, +, +        /**, +         * Fetch all the values. Added for backwards compatibility with 5.x when date fields were {@link Longs}., +         */, +        @Deprecated, +        public List<ReadableDateTime> getDates() {, +            deprecationLogger.deprecated("getDates is no longer necisary on date fields as the values are now dates.");, +            return this;, +        }, +, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/AtomicLongFieldData.java, +import org.elasticsearch.index.fielddata.IndexNumericFieldData.NumericType;, +    /**, +     * Type of this field. Used to expose appropriate types in {@link #getScriptValues()}., +     */, +    private final NumericType numericType;, +    AtomicLongFieldData(long ramBytesUsed, NumericType numericType) {, +        this.numericType = numericType;, +    public final ScriptDocValues<?> getScriptValues() {, +        switch (numericType) {, +        case DATE:, +            return new ScriptDocValues.Dates(getLongValues());, +        case BOOLEAN:, +        default:, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/AtomicFieldData.java, +    ScriptDocValues<?> getScriptValues();, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexNumericFieldData.java, +        DATE(false),, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/ScriptDocValues.java, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.common.logging.ESLoggerFactory;, +        protected static final DeprecationLogger deprecationLogger = new DeprecationLogger(ESLoggerFactory.getLogger(Longs.class));, +        @Deprecated, +            deprecationLogger.deprecated("getDate on numeric fields is deprecated. Use a date field to get dates.");, +        @Deprecated, +            deprecationLogger.deprecated("getDates on numeric fields is deprecated. Use a date field to get dates.");, +        protected static final DeprecationLogger deprecationLogger = new DeprecationLogger(ESLoggerFactory.getLogger(Dates.class));, +, +        /**, +         * Fetch the first value. Added for backwards compatibility with 5.x when date fields were {@link Longs}.]