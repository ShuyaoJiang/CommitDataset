[+++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/search/TransportNoopSearchAction.java, +import org.elasticsearch.search.SearchHit;, +import org.elasticsearch.search.SearchHits;, +            new SearchHits(, +                new SearchHit[0], 0L, 0.0f),, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/search/TransportNoopSearchAction.java, +import org.elasticsearch.search.SearchHit;, +import org.elasticsearch.search.SearchHits;, +            new SearchHits(, +                new SearchHit[0], 0L, 0.0f),, +++ b/core/src/main/java/org/elasticsearch/action/bulk/byscroll/ClientScrollableHitSource.java, +            return field == null ? null : field.getValue();, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/search/TransportNoopSearchAction.java, +import org.elasticsearch.search.SearchHit;, +import org.elasticsearch.search.SearchHits;, +            new SearchHits(, +                new SearchHit[0], 0L, 0.0f),, +++ b/core/src/main/java/org/elasticsearch/action/bulk/byscroll/ClientScrollableHitSource.java, +            return field == null ? null : field.getValue();, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +import org.elasticsearch.search.SearchHit;, +import org.elasticsearch.search.SearchHits;, +        SearchHits hits = getHits(reducedQueryPhase, ignoreFrom, sortedDocs, fetchResultsArr);, +                            SearchHit hit = fetchResult.hits().internalHits()[fetchResultIndex];, +    private SearchHits getHits(ReducedQueryPhase reducedQueryPhase, boolean ignoreFrom, ScoreDoc[] sortedDocs,, +        List<SearchHit> hits = new ArrayList<>();, +                    SearchHit searchHit = fetchResult.hits().internalHits()[index];, +        return new SearchHits(hits.toArray(new SearchHit[hits.size()]), reducedQueryPhase.totalHits,, +        public InternalSearchResponse buildResponse(SearchHits hits) {, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/search/TransportNoopSearchAction.java, +import org.elasticsearch.search.SearchHit;, +import org.elasticsearch.search.SearchHits;, +            new SearchHits(, +                new SearchHit[0], 0L, 0.0f),, +++ b/core/src/main/java/org/elasticsearch/action/bulk/byscroll/ClientScrollableHitSource.java, +            return field == null ? null : field.getValue();, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +import org.elasticsearch.search.SearchHit;, +import org.elasticsearch.search.SearchHits;, +        SearchHits hits = getHits(reducedQueryPhase, ignoreFrom, sortedDocs, fetchResultsArr);, +                            SearchHit hit = fetchResult.hits().internalHits()[fetchResultIndex];, +    private SearchHits getHits(ReducedQueryPhase reducedQueryPhase, boolean ignoreFrom, ScoreDoc[] sortedDocs,, +        List<SearchHit> hits = new ArrayList<>();, +                    SearchHit searchHit = fetchResult.hits().internalHits()[index];, +        return new SearchHits(hits.toArray(new SearchHit[hits.size()]), reducedQueryPhase.totalHits,, +        public InternalSearchResponse buildResponse(SearchHits hits) {, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryThenFetchAsyncAction.java, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/search/TransportNoopSearchAction.java, +import org.elasticsearch.search.SearchHit;, +import org.elasticsearch.search.SearchHits;, +            new SearchHits(, +                new SearchHit[0], 0L, 0.0f),, +++ b/core/src/main/java/org/elasticsearch/action/bulk/byscroll/ClientScrollableHitSource.java, +            return field == null ? null : field.getValue();, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +import org.elasticsearch.search.SearchHit;, +import org.elasticsearch.search.SearchHits;, +        SearchHits hits = getHits(reducedQueryPhase, ignoreFrom, sortedDocs, fetchResultsArr);, +                            SearchHit hit = fetchResult.hits().internalHits()[fetchResultIndex];, +    private SearchHits getHits(ReducedQueryPhase reducedQueryPhase, boolean ignoreFrom, ScoreDoc[] sortedDocs,, +        List<SearchHit> hits = new ArrayList<>();, +                    SearchHit searchHit = fetchResult.hits().internalHits()[index];, +        return new SearchHits(hits.toArray(new SearchHit[hits.size()]), reducedQueryPhase.totalHits,, +        public InternalSearchResponse buildResponse(SearchHits hits) {, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryThenFetchAsyncAction.java, +++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestCountAction.java, +        table.addCell(response.getHits().getTotalHits());, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/search/TransportNoopSearchAction.java, +import org.elasticsearch.search.SearchHit;, +import org.elasticsearch.search.SearchHits;, +            new SearchHits(, +                new SearchHit[0], 0L, 0.0f),, +++ b/core/src/main/java/org/elasticsearch/action/bulk/byscroll/ClientScrollableHitSource.java, +            return field == null ? null : field.getValue();, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +import org.elasticsearch.search.SearchHit;, +import org.elasticsearch.search.SearchHits;, +        SearchHits hits = getHits(reducedQueryPhase, ignoreFrom, sortedDocs, fetchResultsArr);, +                            SearchHit hit = fetchResult.hits().internalHits()[fetchResultIndex];, +    private SearchHits getHits(ReducedQueryPhase reducedQueryPhase, boolean ignoreFrom, ScoreDoc[] sortedDocs,, +        List<SearchHit> hits = new ArrayList<>();, +                    SearchHit searchHit = fetchResult.hits().internalHits()[index];, +        return new SearchHits(hits.toArray(new SearchHit[hits.size()]), reducedQueryPhase.totalHits,, +        public InternalSearchResponse buildResponse(SearchHits hits) {, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryThenFetchAsyncAction.java, +++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestCountAction.java, +        table.addCell(response.getHits().getTotalHits());, +++ b/core/src/main/java/org/elasticsearch/rest/action/document/RestCountAction.java, +                builder.field("count", response.getHits().getTotalHits());, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/search/TransportNoopSearchAction.java, +import org.elasticsearch.search.SearchHit;, +import org.elasticsearch.search.SearchHits;, +            new SearchHits(, +                new SearchHit[0], 0L, 0.0f),, +++ b/core/src/main/java/org/elasticsearch/action/bulk/byscroll/ClientScrollableHitSource.java, +            return field == null ? null : field.getValue();, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +import org.elasticsearch.search.SearchHit;, +import org.elasticsearch.search.SearchHits;, +        SearchHits hits = getHits(reducedQueryPhase, ignoreFrom, sortedDocs, fetchResultsArr);]