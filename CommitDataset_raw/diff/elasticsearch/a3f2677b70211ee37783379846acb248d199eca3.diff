[+++ b/src/main/java/org/elasticsearch/cluster/routing/GroupShardsIterator.java, +import org.apache.lucene.util.CollectionUtil;, +, +import java.util.*;, + * ShardsIterators are always returned in ascending order independently of their order at construction, + * time. The incoming iterators are sorted to ensure consistent iteration behavior across Nodes / JVMs., +    private final List<ShardIterator> iterators;, +    /**, +     * Constructs a enw GroupShardsIterator from the given list., +     */, +    public GroupShardsIterator(List<ShardIterator> iterators) {, +        CollectionUtil.timSort(iterators);, +++ b/src/main/java/org/elasticsearch/cluster/routing/GroupShardsIterator.java, +import org.apache.lucene.util.CollectionUtil;, +, +import java.util.*;, + * ShardsIterators are always returned in ascending order independently of their order at construction, + * time. The incoming iterators are sorted to ensure consistent iteration behavior across Nodes / JVMs., +    private final List<ShardIterator> iterators;, +    /**, +     * Constructs a enw GroupShardsIterator from the given list., +     */, +    public GroupShardsIterator(List<ShardIterator> iterators) {, +        CollectionUtil.timSort(iterators);, +++ b/src/main/java/org/elasticsearch/cluster/routing/PlainShardIterator.java, +, +    @Override, +    public int compareTo(ShardIterator o) {, +        return shardId.compareTo(o.shardId());, +    }, +++ b/src/main/java/org/elasticsearch/cluster/routing/GroupShardsIterator.java, +import org.apache.lucene.util.CollectionUtil;, +, +import java.util.*;, + * ShardsIterators are always returned in ascending order independently of their order at construction, + * time. The incoming iterators are sorted to ensure consistent iteration behavior across Nodes / JVMs., +    private final List<ShardIterator> iterators;, +    /**, +     * Constructs a enw GroupShardsIterator from the given list., +     */, +    public GroupShardsIterator(List<ShardIterator> iterators) {, +        CollectionUtil.timSort(iterators);, +++ b/src/main/java/org/elasticsearch/cluster/routing/PlainShardIterator.java, +, +    @Override, +    public int compareTo(ShardIterator o) {, +        return shardId.compareTo(o.shardId());, +    }, +++ b/src/main/java/org/elasticsearch/cluster/routing/ShardIterator.java, +public interface ShardIterator extends ShardsIterator, Comparable<ShardIterator>  {, +++ b/src/main/java/org/elasticsearch/cluster/routing/GroupShardsIterator.java, +import org.apache.lucene.util.CollectionUtil;, +, +import java.util.*;, + * ShardsIterators are always returned in ascending order independently of their order at construction, + * time. The incoming iterators are sorted to ensure consistent iteration behavior across Nodes / JVMs., +    private final List<ShardIterator> iterators;, +    /**, +     * Constructs a enw GroupShardsIterator from the given list., +     */, +    public GroupShardsIterator(List<ShardIterator> iterators) {, +        CollectionUtil.timSort(iterators);, +++ b/src/main/java/org/elasticsearch/cluster/routing/PlainShardIterator.java, +, +    @Override, +    public int compareTo(ShardIterator o) {, +        return shardId.compareTo(o.shardId());, +    }, +++ b/src/main/java/org/elasticsearch/cluster/routing/ShardIterator.java, +public interface ShardIterator extends ShardsIterator, Comparable<ShardIterator>  {, +++ b/src/main/java/org/elasticsearch/cluster/routing/operation/plain/PlainOperationRouting.java, +import com.google.common.collect.Lists;, +import org.apache.lucene.util.CollectionUtil;, +import java.util.*;, +        return new GroupShardsIterator(Lists.newArrayList(set));, +        return new GroupShardsIterator(Lists.newArrayList(set));, +++ b/src/main/java/org/elasticsearch/cluster/routing/GroupShardsIterator.java, +import org.apache.lucene.util.CollectionUtil;, +, +import java.util.*;, + * ShardsIterators are always returned in ascending order independently of their order at construction, + * time. The incoming iterators are sorted to ensure consistent iteration behavior across Nodes / JVMs., +    private final List<ShardIterator> iterators;, +    /**, +     * Constructs a enw GroupShardsIterator from the given list., +     */, +    public GroupShardsIterator(List<ShardIterator> iterators) {, +        CollectionUtil.timSort(iterators);, +++ b/src/main/java/org/elasticsearch/cluster/routing/PlainShardIterator.java, +, +    @Override, +    public int compareTo(ShardIterator o) {, +        return shardId.compareTo(o.shardId());, +    }, +++ b/src/main/java/org/elasticsearch/cluster/routing/ShardIterator.java, +public interface ShardIterator extends ShardsIterator, Comparable<ShardIterator>  {, +++ b/src/main/java/org/elasticsearch/cluster/routing/operation/plain/PlainOperationRouting.java, +import com.google.common.collect.Lists;, +import org.apache.lucene.util.CollectionUtil;, +import java.util.*;]