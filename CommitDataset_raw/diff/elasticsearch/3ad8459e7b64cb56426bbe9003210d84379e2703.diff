[+++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +, +        scopedSettings.addSettingsUpdateConsumer(MergeSchedulerConfig.MAX_THREAD_COUNT_SETTING, MergeSchedulerConfig.MAX_MERGE_COUNT_SETTING,, +            mergeSchedulerConfig::setMaxThreadAndMergeCount);, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +, +        scopedSettings.addSettingsUpdateConsumer(MergeSchedulerConfig.MAX_THREAD_COUNT_SETTING, MergeSchedulerConfig.MAX_MERGE_COUNT_SETTING,, +            mergeSchedulerConfig::setMaxThreadAndMergeCount);, +++ b/core/src/main/java/org/elasticsearch/index/MergeSchedulerConfig.java, +        setMaxThreadAndMergeCount(indexSettings.getValue(MAX_THREAD_COUNT_SETTING),, +            indexSettings.getValue(MAX_MERGE_COUNT_SETTING));, +     *, +    void setMaxThreadAndMergeCount(int maxThreadCount, int maxMergeCount) {, +        if (maxThreadCount < 1) {, +            throw new IllegalArgumentException("maxThreadCount should be at least 1");, +        }, +        if (maxMergeCount < 1) {, +            throw new IllegalArgumentException("maxMergeCount should be at least 1");, +        }, +        if (maxThreadCount > maxMergeCount) {, +            throw new IllegalArgumentException("maxThreadCount (= " + maxThreadCount +, +                ") should be <= maxMergeCount (= " + maxMergeCount + ")");, +        }, +        this.maxMergeCount = maxMergeCount;, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +, +        scopedSettings.addSettingsUpdateConsumer(MergeSchedulerConfig.MAX_THREAD_COUNT_SETTING, MergeSchedulerConfig.MAX_MERGE_COUNT_SETTING,, +            mergeSchedulerConfig::setMaxThreadAndMergeCount);, +++ b/core/src/main/java/org/elasticsearch/index/MergeSchedulerConfig.java, +        setMaxThreadAndMergeCount(indexSettings.getValue(MAX_THREAD_COUNT_SETTING),, +            indexSettings.getValue(MAX_MERGE_COUNT_SETTING));, +     *, +    void setMaxThreadAndMergeCount(int maxThreadCount, int maxMergeCount) {, +        if (maxThreadCount < 1) {, +            throw new IllegalArgumentException("maxThreadCount should be at least 1");, +        }, +        if (maxMergeCount < 1) {, +            throw new IllegalArgumentException("maxMergeCount should be at least 1");, +        }, +        if (maxThreadCount > maxMergeCount) {, +            throw new IllegalArgumentException("maxThreadCount (= " + maxThreadCount +, +                ") should be <= maxMergeCount (= " + maxMergeCount + ")");, +        }, +        this.maxMergeCount = maxMergeCount;, +++ b/core/src/test/java/org/elasticsearch/indices/settings/UpdateSettingsIT.java, +import org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilder;, +import org.elasticsearch.action.admin.indices.settings.put.UpdateSettingsRequestBuilder;, +    public void testInvalidMergeMaxThreadCount() throws IllegalAccessException {, +        CreateIndexRequestBuilder createBuilder = prepareCreate("test"), +            .setSettings(Settings.builder(), +                .put(IndexMetaData.SETTING_NUMBER_OF_SHARDS, "1"), +                .put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, "0"), +                .put(MergePolicyConfig.INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE_SETTING.getKey(), "2"), +                .put(MergePolicyConfig.INDEX_MERGE_POLICY_SEGMENTS_PER_TIER_SETTING.getKey(), "2"), +                .put(MergeSchedulerConfig.MAX_THREAD_COUNT_SETTING.getKey(), "100"), +                .put(MergeSchedulerConfig.MAX_MERGE_COUNT_SETTING.getKey(), "10"), +            );, +        IllegalArgumentException exc = expectThrows(IllegalArgumentException.class,, +            () -> createBuilder.get());, +        assertThat(exc.getMessage(), equalTo("maxThreadCount (= 100) should be <= maxMergeCount (= 10)"));, +, +        assertAcked(prepareCreate("test"), +            .setSettings(Settings.builder(), +                .put(IndexMetaData.SETTING_NUMBER_OF_SHARDS, "1"), +                .put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, "0"), +                .put(MergePolicyConfig.INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE_SETTING.getKey(), "2"), +                .put(MergePolicyConfig.INDEX_MERGE_POLICY_SEGMENTS_PER_TIER_SETTING.getKey(), "2"), +                .put(MergeSchedulerConfig.MAX_THREAD_COUNT_SETTING.getKey(), "100"), +                .put(MergeSchedulerConfig.MAX_MERGE_COUNT_SETTING.getKey(), "100"), +            ));, +, +        {, +            UpdateSettingsRequestBuilder updateBuilder = client().admin().indices(), +                .prepareUpdateSettings("test"), +                .setSettings(Settings.builder(), +                    .put(MergeSchedulerConfig.MAX_THREAD_COUNT_SETTING.getKey(), "1000"), +                );, +            exc = expectThrows(IllegalArgumentException.class,, +                () -> updateBuilder.get());, +            assertThat(exc.getMessage(), equalTo("maxThreadCount (= 1000) should be <= maxMergeCount (= 100)"));, +        }, +, +        {, +            UpdateSettingsRequestBuilder updateBuilder = client().admin().indices(), +                .prepareUpdateSettings("test"), +                .setSettings(Settings.builder(), +                    .put(MergeSchedulerConfig.MAX_MERGE_COUNT_SETTING.getKey(), "10"), +                );, +            exc = expectThrows(IllegalArgumentException.class,, +                () -> updateBuilder.get());, +            assertThat(exc.getMessage(), equalTo("maxThreadCount (= 100) should be <= maxMergeCount (= 10)"));, +        }, +    }, +]