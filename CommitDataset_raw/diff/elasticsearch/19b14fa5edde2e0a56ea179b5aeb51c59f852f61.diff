[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.GetJobStatsRequest;, +    static Request getJobStats(GetJobStatsRequest getJobStatsRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("anomaly_detectors"), +            .addPathPart(Strings.collectionToCommaDelimitedString(getJobStatsRequest.getJobIds())), +            .addPathPartAsIs("_stats"), +            .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);, +, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        if (getJobStatsRequest.isAllowNoJobs() != null) {, +            params.putParam("allow_no_jobs", Boolean.toString(getJobStatsRequest.isAllowNoJobs()));, +        }, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.GetJobStatsRequest;, +    static Request getJobStats(GetJobStatsRequest getJobStatsRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("anomaly_detectors"), +            .addPathPart(Strings.collectionToCommaDelimitedString(getJobStatsRequest.getJobIds())), +            .addPathPartAsIs("_stats"), +            .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);, +, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        if (getJobStatsRequest.isAllowNoJobs() != null) {, +            params.putParam("allow_no_jobs", Boolean.toString(getJobStatsRequest.isAllowNoJobs()));, +        }, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.GetJobStatsRequest;, +import org.elasticsearch.client.ml.GetJobStatsResponse;, +import org.elasticsearch.client.ml.job.stats.JobStats;, +     * Gets usage statistics for one or more Machine Learning jobs, +     *, +     * <p>, +     *     For additional info, +     *     see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html">Get Job stats docs</a>, +     * </p>, +     * @param request {@link GetJobStatsRequest} Request containing a list of jobId(s) and additional options, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return {@link GetJobStatsResponse} response object containing, +     * the {@link JobStats} objects and the number of jobs found, +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public GetJobStatsResponse getJobStats(GetJobStatsRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +            MLRequestConverters::getJobStats,, +            options,, +            GetJobStatsResponse::fromXContent,, +            Collections.emptySet());, +    }, +, +    /**, +     * Gets one or more Machine Learning job configuration info, asynchronously., +     *, +     * <p>, +     *     For additional info, +     *     see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html">Get Job stats docs</a>, +     * </p>, +     * @param request {@link GetJobStatsRequest} Request containing a list of jobId(s) and additional options, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified with {@link GetJobStatsResponse} upon request completion, +     */, +    public void getJobStatsAsync(GetJobStatsRequest request, RequestOptions options, ActionListener<GetJobStatsResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +            MLRequestConverters::getJobStats,, +            options,, +            GetJobStatsResponse::fromXContent,, +            listener,, +            Collections.emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.GetJobStatsRequest;, +    static Request getJobStats(GetJobStatsRequest getJobStatsRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("anomaly_detectors"), +            .addPathPart(Strings.collectionToCommaDelimitedString(getJobStatsRequest.getJobIds())), +            .addPathPartAsIs("_stats"), +            .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);, +, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        if (getJobStatsRequest.isAllowNoJobs() != null) {, +            params.putParam("allow_no_jobs", Boolean.toString(getJobStatsRequest.isAllowNoJobs()));, +        }, +        return request;]