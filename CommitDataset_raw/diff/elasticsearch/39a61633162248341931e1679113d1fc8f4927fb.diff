[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.DeleteRoleMappingRequest;, +import org.elasticsearch.client.security.DeleteRoleMappingResponse;, +, +    /**, +     * Delete a role mapping., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html">, +     * the docs</a> for more., +     * @param request the request with the role mapping name to be deleted., +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the delete role mapping call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public DeleteRoleMappingResponse deleteRoleMapping(DeleteRoleMappingRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::deleteRoleMapping, options,, +                DeleteRoleMappingResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously delete a role mapping., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html">, +     * the docs</a> for more., +     * @param request the request with the role mapping name to be deleted., +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void deleteRoleMappingAsync(DeleteRoleMappingRequest request, RequestOptions options,, +            ActionListener<DeleteRoleMappingResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::deleteRoleMapping, options,, +                DeleteRoleMappingResponse::fromXContent, listener, emptySet());, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.DeleteRoleMappingRequest;, +import org.elasticsearch.client.security.DeleteRoleMappingResponse;, +, +    /**, +     * Delete a role mapping., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html">, +     * the docs</a> for more., +     * @param request the request with the role mapping name to be deleted., +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the delete role mapping call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public DeleteRoleMappingResponse deleteRoleMapping(DeleteRoleMappingRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::deleteRoleMapping, options,, +                DeleteRoleMappingResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously delete a role mapping., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html">, +     * the docs</a> for more., +     * @param request the request with the role mapping name to be deleted., +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void deleteRoleMappingAsync(DeleteRoleMappingRequest request, RequestOptions options,, +            ActionListener<DeleteRoleMappingResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::deleteRoleMapping, options,, +                DeleteRoleMappingResponse::fromXContent, listener, emptySet());, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityRequestConverters.java, +import org.apache.http.client.methods.HttpDelete;, +import org.elasticsearch.client.security.DeleteRoleMappingRequest;, +, +    static Request deleteRoleMapping(DeleteRoleMappingRequest deleteRoleMappingRequest) throws IOException {, +        final String endpoint = new RequestConverters.EndpointBuilder(), +            .addPathPartAsIs("_xpack/security/role_mapping"), +            .addPathPart(deleteRoleMappingRequest.getName()), +            .build();, +        final Request request = new Request(HttpDelete.METHOD_NAME, endpoint);, +        final RequestConverters.Params params = new RequestConverters.Params(request);, +        params.withRefreshPolicy(deleteRoleMappingRequest.getRefreshPolicy());, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.DeleteRoleMappingRequest;, +import org.elasticsearch.client.security.DeleteRoleMappingResponse;, +, +    /**, +     * Delete a role mapping., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html">, +     * the docs</a> for more., +     * @param request the request with the role mapping name to be deleted., +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the delete role mapping call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public DeleteRoleMappingResponse deleteRoleMapping(DeleteRoleMappingRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::deleteRoleMapping, options,, +                DeleteRoleMappingResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously delete a role mapping., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html">]