[+++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/support/WatcherIndexTemplateRegistry.java, +    public static final String[] TEMPLATE_NAMES = new String[] {, +            HISTORY_TEMPLATE_NAME, TRIGGERED_TEMPLATE_NAME, WATCHES_TEMPLATE_NAME, +    };, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/support/WatcherIndexTemplateRegistry.java, +    public static final String[] TEMPLATE_NAMES = new String[] {, +            HISTORY_TEMPLATE_NAME, TRIGGERED_TEMPLATE_NAME, WATCHES_TEMPLATE_NAME, +    };, +, +++ b/plugin/src/test/java/org/elasticsearch/xpack/test/rest/XPackRestIT.java, +import org.elasticsearch.xpack.watcher.support.WatcherIndexTemplateRegistry;, +        templates.addAll(Arrays.asList(WatcherIndexTemplateRegistry.TEMPLATE_NAMES));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/support/WatcherIndexTemplateRegistry.java, +    public static final String[] TEMPLATE_NAMES = new String[] {, +            HISTORY_TEMPLATE_NAME, TRIGGERED_TEMPLATE_NAME, WATCHES_TEMPLATE_NAME, +    };, +, +++ b/plugin/src/test/java/org/elasticsearch/xpack/test/rest/XPackRestIT.java, +import org.elasticsearch.xpack.watcher.support.WatcherIndexTemplateRegistry;, +        templates.addAll(Arrays.asList(WatcherIndexTemplateRegistry.TEMPLATE_NAMES));, +++ b/qa/smoke-test-watcher-with-mustache/src/test/java/org/elasticsearch/smoketest/WatcherWithMustacheIT.java, +import org.elasticsearch.xpack.watcher.support.WatcherIndexTemplateRegistry;, +import static java.util.Collections.singletonMap;, +, +                for (String template : WatcherIndexTemplateRegistry.TEMPLATE_NAMES) {, +                    ClientYamlTestResponse templateExistsResponse = getAdminExecutionContext().callApi("indices.exists_template",, +                            singletonMap("name", template), emptyList(), emptyMap());, +                    assertThat(templateExistsResponse.getStatusCode(), is(200));, +                }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/support/WatcherIndexTemplateRegistry.java, +    public static final String[] TEMPLATE_NAMES = new String[] {, +            HISTORY_TEMPLATE_NAME, TRIGGERED_TEMPLATE_NAME, WATCHES_TEMPLATE_NAME, +    };, +, +++ b/plugin/src/test/java/org/elasticsearch/xpack/test/rest/XPackRestIT.java, +import org.elasticsearch.xpack.watcher.support.WatcherIndexTemplateRegistry;, +        templates.addAll(Arrays.asList(WatcherIndexTemplateRegistry.TEMPLATE_NAMES));, +++ b/qa/smoke-test-watcher-with-mustache/src/test/java/org/elasticsearch/smoketest/WatcherWithMustacheIT.java, +import org.elasticsearch.xpack.watcher.support.WatcherIndexTemplateRegistry;, +import static java.util.Collections.singletonMap;, +, +                for (String template : WatcherIndexTemplateRegistry.TEMPLATE_NAMES) {, +                    ClientYamlTestResponse templateExistsResponse = getAdminExecutionContext().callApi("indices.exists_template",, +                            singletonMap("name", template), emptyList(), emptyMap());, +                    assertThat(templateExistsResponse.getStatusCode(), is(200));, +                }, +, +++ b/qa/smoke-test-watcher-with-painless/src/test/java/org/elasticsearch/smoketest/WatcherWithPainlessIT.java, +import org.elasticsearch.xpack.watcher.support.WatcherIndexTemplateRegistry;, +import static java.util.Collections.singletonMap;, +, +                for (String template : WatcherIndexTemplateRegistry.TEMPLATE_NAMES) {, +                    ClientYamlTestResponse templateExistsResponse = getAdminExecutionContext().callApi("indices.exists_template",, +                            singletonMap("name", template), emptyList(), emptyMap());, +                    assertThat(templateExistsResponse.getStatusCode(), is(200));, +                }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/support/WatcherIndexTemplateRegistry.java, +    public static final String[] TEMPLATE_NAMES = new String[] {, +            HISTORY_TEMPLATE_NAME, TRIGGERED_TEMPLATE_NAME, WATCHES_TEMPLATE_NAME, +    };, +, +++ b/plugin/src/test/java/org/elasticsearch/xpack/test/rest/XPackRestIT.java, +import org.elasticsearch.xpack.watcher.support.WatcherIndexTemplateRegistry;, +        templates.addAll(Arrays.asList(WatcherIndexTemplateRegistry.TEMPLATE_NAMES));, +++ b/qa/smoke-test-watcher-with-mustache/src/test/java/org/elasticsearch/smoketest/WatcherWithMustacheIT.java, +import org.elasticsearch.xpack.watcher.support.WatcherIndexTemplateRegistry;, +import static java.util.Collections.singletonMap;, +, +                for (String template : WatcherIndexTemplateRegistry.TEMPLATE_NAMES) {, +                    ClientYamlTestResponse templateExistsResponse = getAdminExecutionContext().callApi("indices.exists_template",, +                            singletonMap("name", template), emptyList(), emptyMap());, +                    assertThat(templateExistsResponse.getStatusCode(), is(200));, +                }, +, +++ b/qa/smoke-test-watcher-with-painless/src/test/java/org/elasticsearch/smoketest/WatcherWithPainlessIT.java, +import org.elasticsearch.xpack.watcher.support.WatcherIndexTemplateRegistry;, +import static java.util.Collections.singletonMap;, +, +                for (String template : WatcherIndexTemplateRegistry.TEMPLATE_NAMES) {, +                    ClientYamlTestResponse templateExistsResponse = getAdminExecutionContext().callApi("indices.exists_template",, +                            singletonMap("name", template), emptyList(), emptyMap());, +                    assertThat(templateExistsResponse.getStatusCode(), is(200));, +                }, +, +++ b/qa/smoke-test-watcher-with-security/src/test/java/org/elasticsearch/smoketest/SmokeTestWatcherWithSecurityClientYamlTestSuiteIT.java, +import org.elasticsearch.xpack.watcher.support.WatcherIndexTemplateRegistry;, +import static java.util.Collections.singletonMap;, +, +                for (String template : WatcherIndexTemplateRegistry.TEMPLATE_NAMES) {, +                    ClientYamlTestResponse templateExistsResponse = getAdminExecutionContext().callApi("indices.exists_template",, +                            singletonMap("name", template), emptyList(), emptyMap());, +                    assertThat(templateExistsResponse.getStatusCode(), is(200));, +                }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/support/WatcherIndexTemplateRegistry.java, +    public static final String[] TEMPLATE_NAMES = new String[] {, +            HISTORY_TEMPLATE_NAME, TRIGGERED_TEMPLATE_NAME, WATCHES_TEMPLATE_NAME]