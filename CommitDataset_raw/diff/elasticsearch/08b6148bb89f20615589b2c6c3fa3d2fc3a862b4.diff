[+++ b/TESTING.asciidoc, +gradle run, +If you want to run elasticsearch from your IDE, you should execute gradle run, +++ b/TESTING.asciidoc, +gradle run, +If you want to run elasticsearch from your IDE, you should execute gradle run, +++ b/build.gradle, +task run(dependsOn: ':distribution:run'), +, +++ b/TESTING.asciidoc, +gradle run, +If you want to run elasticsearch from your IDE, you should execute gradle run, +++ b/build.gradle, +task run(dependsOn: ':distribution:run'), +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                    plugin project.pluginProperties.extension.name, project.bundlePlugin.outputs.files, +++ b/TESTING.asciidoc, +gradle run, +If you want to run elasticsearch from your IDE, you should execute gradle run, +++ b/build.gradle, +task run(dependsOn: ':distribution:run'), +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                    plugin project.pluginProperties.extension.name, project.bundlePlugin.outputs.files, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    boolean daemonize = true, +, +    @Input, +++ b/TESTING.asciidoc, +gradle run, +If you want to run elasticsearch from your IDE, you should execute gradle run, +++ b/build.gradle, +task run(dependsOn: ':distribution:run'), +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                    plugin project.pluginProperties.extension.name, project.bundlePlugin.outputs.files, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    boolean daemonize = true, +, +    @Input, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +import org.gradle.internal.jvm.Jvm, +, +import java.nio.file.Paths, +, +            String taskName = "${task.name}#install${camelName[0].toUpperCase(Locale.ROOT) + camelName.substring(1)}Plugin", +, +            from(config.plugins.values()), +                ant.exec(executable: 'cmd', spawn: config.daemonize, dir: cwd) {, +            List esExecutable = [esScript], +            if(config.daemonize) {, +                esExecutable.add("-d"), +            }, +, +                args esExecutable, +            File jps = Paths.get(Jvm.current().javaHome.toString(), "bin/jps").toFile(), +            if (!jps.exists()) {, +                throw new GradleException("jps executable not found; ensure that you're running Gradle with the JDK rather than the JRE"), +            }, +            commandLine jps, '-l', +++ b/TESTING.asciidoc, +gradle run, +If you want to run elasticsearch from your IDE, you should execute gradle run, +++ b/build.gradle, +task run(dependsOn: ':distribution:run'), +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                    plugin project.pluginProperties.extension.name, project.bundlePlugin.outputs.files, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    boolean daemonize = true, +, +    @Input, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +import org.gradle.internal.jvm.Jvm, +, +import java.nio.file.Paths, +, +            String taskName = "${task.name}#install${camelName[0].toUpperCase(Locale.ROOT) + camelName.substring(1)}Plugin", +, +            from(config.plugins.values()), +                ant.exec(executable: 'cmd', spawn: config.daemonize, dir: cwd) {, +            List esExecutable = [esScript], +            if(config.daemonize) {, +                esExecutable.add("-d"), +            }, +, +                args esExecutable, +            File jps = Paths.get(Jvm.current().javaHome.toString(), "bin/jps").toFile(), +            if (!jps.exists()) {, +                throw new GradleException("jps executable not found; ensure that you're running Gradle with the JDK rather than the JRE"), +            }, +            commandLine jps, '-l', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RunTask.groovy, +package org.elasticsearch.gradle.test, +, +import org.gradle.api.DefaultTask, +import org.gradle.api.tasks.TaskAction, +, +class RunTask extends DefaultTask {]