[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetBucketsAction.java, +        public static final ParseField EXCLUDE_INTERIM = new ParseField("exclude_interim");, +            PARSER.declareBoolean(Request::setExcludeInterim, EXCLUDE_INTERIM);, +        private boolean excludeInterim = false;, +        public boolean isExcludeInterim() {, +            return excludeInterim;, +        public void setExcludeInterim(boolean excludeInterim) {, +            this.excludeInterim = excludeInterim;, +            excludeInterim = in.readBoolean();, +            out.writeBoolean(excludeInterim);, +            builder.field(EXCLUDE_INTERIM.getPreferredName(), excludeInterim);, +            return Objects.hash(jobId, timestamp, expand, excludeInterim, anomalyScore, pageParams, start, end);, +                    Objects.equals(excludeInterim, other.excludeInterim) &&, +                            .includeInterim(request.excludeInterim == false), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetBucketsAction.java, +        public static final ParseField EXCLUDE_INTERIM = new ParseField("exclude_interim");, +            PARSER.declareBoolean(Request::setExcludeInterim, EXCLUDE_INTERIM);, +        private boolean excludeInterim = false;, +        public boolean isExcludeInterim() {, +            return excludeInterim;, +        public void setExcludeInterim(boolean excludeInterim) {, +            this.excludeInterim = excludeInterim;, +            excludeInterim = in.readBoolean();, +            out.writeBoolean(excludeInterim);, +            builder.field(EXCLUDE_INTERIM.getPreferredName(), excludeInterim);, +            return Objects.hash(jobId, timestamp, expand, excludeInterim, anomalyScore, pageParams, start, end);, +                    Objects.equals(excludeInterim, other.excludeInterim) &&, +                            .includeInterim(request.excludeInterim == false), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetInfluencersAction.java, +        public static final ParseField EXCLUDE_INTERIM = new ParseField("exclude_interim");, +            PARSER.declareBoolean(Request::setExcludeInterim, EXCLUDE_INTERIM);, +        private boolean excludeInterim = false;, +        public boolean isExcludeInterim() {, +            return excludeInterim;, +        public void setExcludeInterim(boolean excludeInterim) {, +            this.excludeInterim = excludeInterim;, +            excludeInterim = in.readBoolean();, +            out.writeBoolean(excludeInterim);, +            builder.field(EXCLUDE_INTERIM.getPreferredName(), excludeInterim);, +            return Objects.hash(jobId, excludeInterim, pageParams, start, end, sort, descending, anomalyScoreFilter);, +                    && Objects.equals(excludeInterim, other.excludeInterim), +            InfluencersQueryBuilder.InfluencersQuery query = new InfluencersQueryBuilder().includeInterim(request.excludeInterim == false), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetBucketsAction.java, +        public static final ParseField EXCLUDE_INTERIM = new ParseField("exclude_interim");, +            PARSER.declareBoolean(Request::setExcludeInterim, EXCLUDE_INTERIM);, +        private boolean excludeInterim = false;, +        public boolean isExcludeInterim() {, +            return excludeInterim;, +        public void setExcludeInterim(boolean excludeInterim) {, +            this.excludeInterim = excludeInterim;, +            excludeInterim = in.readBoolean();, +            out.writeBoolean(excludeInterim);, +            builder.field(EXCLUDE_INTERIM.getPreferredName(), excludeInterim);, +            return Objects.hash(jobId, timestamp, expand, excludeInterim, anomalyScore, pageParams, start, end);, +                    Objects.equals(excludeInterim, other.excludeInterim) &&, +                            .includeInterim(request.excludeInterim == false), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetInfluencersAction.java, +        public static final ParseField EXCLUDE_INTERIM = new ParseField("exclude_interim");, +            PARSER.declareBoolean(Request::setExcludeInterim, EXCLUDE_INTERIM);, +        private boolean excludeInterim = false;, +        public boolean isExcludeInterim() {, +            return excludeInterim;, +        public void setExcludeInterim(boolean excludeInterim) {, +            this.excludeInterim = excludeInterim;, +            excludeInterim = in.readBoolean();, +            out.writeBoolean(excludeInterim);, +            builder.field(EXCLUDE_INTERIM.getPreferredName(), excludeInterim);, +            return Objects.hash(jobId, excludeInterim, pageParams, start, end, sort, descending, anomalyScoreFilter);, +                    && Objects.equals(excludeInterim, other.excludeInterim), +            InfluencersQueryBuilder.InfluencersQuery query = new InfluencersQueryBuilder().includeInterim(request.excludeInterim == false), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetRecordsAction.java, +        public static final ParseField EXCLUDE_INTERIM = new ParseField("exclude_interim");, +            PARSER.declareBoolean(Request::setExcludeInterim, EXCLUDE_INTERIM);, +        private boolean excludeInterim = false;, +        public boolean isExcludeInterim() {, +            return excludeInterim;, +        public void setExcludeInterim(boolean excludeInterim) {, +            this.excludeInterim = excludeInterim;, +            excludeInterim = in.readBoolean();, +            out.writeBoolean(excludeInterim);, +            builder.field(EXCLUDE_INTERIM.getPreferredName(), excludeInterim);, +            return Objects.hash(jobId, start, end, sort, descending, recordScoreFilter, excludeInterim, pageParams);, +                    Objects.equals(excludeInterim, other.excludeInterim) &&, +                    .includeInterim(request.excludeInterim == false), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetBucketsAction.java, +        public static final ParseField EXCLUDE_INTERIM = new ParseField("exclude_interim");, +            PARSER.declareBoolean(Request::setExcludeInterim, EXCLUDE_INTERIM);, +        private boolean excludeInterim = false;, +        public boolean isExcludeInterim() {, +            return excludeInterim;, +        public void setExcludeInterim(boolean excludeInterim) {, +            this.excludeInterim = excludeInterim;, +            excludeInterim = in.readBoolean();, +            out.writeBoolean(excludeInterim);, +            builder.field(EXCLUDE_INTERIM.getPreferredName(), excludeInterim);, +            return Objects.hash(jobId, timestamp, expand, excludeInterim, anomalyScore, pageParams, start, end);, +                    Objects.equals(excludeInterim, other.excludeInterim) &&, +                            .includeInterim(request.excludeInterim == false), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetInfluencersAction.java, +        public static final ParseField EXCLUDE_INTERIM = new ParseField("exclude_interim");]