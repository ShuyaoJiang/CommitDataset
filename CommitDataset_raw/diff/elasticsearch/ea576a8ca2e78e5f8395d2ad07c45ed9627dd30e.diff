[+++ b/server/src/test/java/org/elasticsearch/discovery/AbstractDisruptionTestCase.java, +import java.nio.file.Path;, +import org.elasticsearch.test.InternalTestCluster;, +import org.elasticsearch.test.NodeConfigurationSource;, +import static org.elasticsearch.discovery.DiscoveryModule.DISCOVERY_HOSTS_PROVIDER_SETTING;, +    private NodeConfigurationSource discoveryConfig;, +    List<String> startCluster(int numberOfNodes) {, +    List<String> startCluster(int numberOfNodes, int minimumMasterNode) {, +        configureCluster(numberOfNodes, minimumMasterNode);, +        InternalTestCluster internalCluster = internalCluster();, +        List<String> nodes = internalCluster.startNodes(numberOfNodes);, +    void configureCluster(int numberOfNodes, int minimumMasterNode) {, +        configureCluster(DEFAULT_SETTINGS, numberOfNodes, minimumMasterNode);, +    void configureCluster(Settings settings, int numberOfNodes, int minimumMasterNode) {, +                .putList(DISCOVERY_HOSTS_PROVIDER_SETTING.getKey(), "file"), +            discoveryConfig = new NodeConfigurationSource() {, +                @Override, +                public Settings nodeSettings(final int nodeOrdinal) {, +                    return nodeSettings;, +, +                @Override, +                public Path nodeConfigPath(final int nodeOrdinal) {, +                    return null;, +                }, +            };, +++ b/server/src/test/java/org/elasticsearch/discovery/AbstractDisruptionTestCase.java, +import java.nio.file.Path;, +import org.elasticsearch.test.InternalTestCluster;, +import org.elasticsearch.test.NodeConfigurationSource;, +import static org.elasticsearch.discovery.DiscoveryModule.DISCOVERY_HOSTS_PROVIDER_SETTING;, +    private NodeConfigurationSource discoveryConfig;, +    List<String> startCluster(int numberOfNodes) {, +    List<String> startCluster(int numberOfNodes, int minimumMasterNode) {, +        configureCluster(numberOfNodes, minimumMasterNode);, +        InternalTestCluster internalCluster = internalCluster();, +        List<String> nodes = internalCluster.startNodes(numberOfNodes);, +    void configureCluster(int numberOfNodes, int minimumMasterNode) {, +        configureCluster(DEFAULT_SETTINGS, numberOfNodes, minimumMasterNode);, +    void configureCluster(Settings settings, int numberOfNodes, int minimumMasterNode) {, +                .putList(DISCOVERY_HOSTS_PROVIDER_SETTING.getKey(), "file"), +            discoveryConfig = new NodeConfigurationSource() {, +                @Override, +                public Settings nodeSettings(final int nodeOrdinal) {, +                    return nodeSettings;, +, +                @Override, +                public Path nodeConfigPath(final int nodeOrdinal) {, +                    return null;, +                }, +            };, +++ b/server/src/test/java/org/elasticsearch/discovery/ClusterDisruptionIT.java, +        configureCluster(Settings.EMPTY, 3, 1);, +        configureCluster(2, 1);, +        configureCluster(settings, 3, 2);, +++ b/server/src/test/java/org/elasticsearch/discovery/AbstractDisruptionTestCase.java, +import java.nio.file.Path;, +import org.elasticsearch.test.InternalTestCluster;, +import org.elasticsearch.test.NodeConfigurationSource;, +import static org.elasticsearch.discovery.DiscoveryModule.DISCOVERY_HOSTS_PROVIDER_SETTING;, +    private NodeConfigurationSource discoveryConfig;, +    List<String> startCluster(int numberOfNodes) {, +    List<String> startCluster(int numberOfNodes, int minimumMasterNode) {, +        configureCluster(numberOfNodes, minimumMasterNode);, +        InternalTestCluster internalCluster = internalCluster();, +        List<String> nodes = internalCluster.startNodes(numberOfNodes);, +    void configureCluster(int numberOfNodes, int minimumMasterNode) {, +        configureCluster(DEFAULT_SETTINGS, numberOfNodes, minimumMasterNode);, +    void configureCluster(Settings settings, int numberOfNodes, int minimumMasterNode) {, +                .putList(DISCOVERY_HOSTS_PROVIDER_SETTING.getKey(), "file"), +            discoveryConfig = new NodeConfigurationSource() {, +                @Override, +                public Settings nodeSettings(final int nodeOrdinal) {, +                    return nodeSettings;, +, +                @Override, +                public Path nodeConfigPath(final int nodeOrdinal) {, +                    return null;, +                }, +            };, +++ b/server/src/test/java/org/elasticsearch/discovery/ClusterDisruptionIT.java, +        configureCluster(Settings.EMPTY, 3, 1);, +        configureCluster(2, 1);, +        configureCluster(settings, 3, 2);, +++ b/server/src/test/java/org/elasticsearch/discovery/DiscoveryDisruptionIT.java, +        internalCluster().setHostsListContainsOnlyFirstNode(true);, +        List<String> nodes = startCluster(4, -1);, +        internalCluster().setHostsListContainsOnlyFirstNode(true);, +        List<String> nodes = startCluster(4, -1);, +        configureCluster(3, 2);, +        configureCluster(3, 2);, +++ b/server/src/test/java/org/elasticsearch/discovery/AbstractDisruptionTestCase.java, +import java.nio.file.Path;, +import org.elasticsearch.test.InternalTestCluster;, +import org.elasticsearch.test.NodeConfigurationSource;, +import static org.elasticsearch.discovery.DiscoveryModule.DISCOVERY_HOSTS_PROVIDER_SETTING;, +    private NodeConfigurationSource discoveryConfig;, +    List<String> startCluster(int numberOfNodes) {, +    List<String> startCluster(int numberOfNodes, int minimumMasterNode) {, +        configureCluster(numberOfNodes, minimumMasterNode);, +        InternalTestCluster internalCluster = internalCluster();]