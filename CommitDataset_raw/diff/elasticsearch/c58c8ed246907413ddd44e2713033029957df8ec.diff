[+++ b/server/src/main/java/org/elasticsearch/common/recycler/Recyclers.java, +        return () -> deque(c, limit);, +            public Recycler.V<T> obtain(int sizing) {, +            public Recycler.V<T> obtain() {, +++ b/server/src/main/java/org/elasticsearch/common/recycler/Recyclers.java, +        return () -> deque(c, limit);, +            public Recycler.V<T> obtain(int sizing) {, +            public Recycler.V<T> obtain() {, +++ b/server/src/main/java/org/elasticsearch/common/util/AbstractPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/recycler/Recyclers.java, +        return () -> deque(c, limit);, +            public Recycler.V<T> obtain(int sizing) {, +            public Recycler.V<T> obtain() {, +++ b/server/src/main/java/org/elasticsearch/common/util/AbstractPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/util/BitArray.java, +++ b/server/src/main/java/org/elasticsearch/common/recycler/Recyclers.java, +        return () -> deque(c, limit);, +            public Recycler.V<T> obtain(int sizing) {, +            public Recycler.V<T> obtain() {, +++ b/server/src/main/java/org/elasticsearch/common/util/AbstractPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/util/BitArray.java, +++ b/server/src/main/java/org/elasticsearch/common/util/CollectionUtils.java, +++ b/server/src/main/java/org/elasticsearch/common/recycler/Recyclers.java, +        return () -> deque(c, limit);, +            public Recycler.V<T> obtain(int sizing) {, +            public Recycler.V<T> obtain() {, +++ b/server/src/main/java/org/elasticsearch/common/util/AbstractPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/util/BitArray.java, +++ b/server/src/main/java/org/elasticsearch/common/util/CollectionUtils.java, +++ b/server/src/main/java/org/elasticsearch/common/util/LongObjectPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/recycler/Recyclers.java, +        return () -> deque(c, limit);, +            public Recycler.V<T> obtain(int sizing) {, +            public Recycler.V<T> obtain() {, +++ b/server/src/main/java/org/elasticsearch/common/util/AbstractPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/util/BitArray.java, +++ b/server/src/main/java/org/elasticsearch/common/util/CollectionUtils.java, +++ b/server/src/main/java/org/elasticsearch/common/util/LongObjectPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/ConcurrentHashMapLong.java, +++ b/server/src/main/java/org/elasticsearch/common/recycler/Recyclers.java, +        return () -> deque(c, limit);, +            public Recycler.V<T> obtain(int sizing) {, +            public Recycler.V<T> obtain() {, +++ b/server/src/main/java/org/elasticsearch/common/util/AbstractPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/util/BitArray.java, +++ b/server/src/main/java/org/elasticsearch/common/util/CollectionUtils.java, +++ b/server/src/main/java/org/elasticsearch/common/util/LongObjectPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/ConcurrentHashMapLong.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/ConcurrentMapLong.java, +++ b/server/src/main/java/org/elasticsearch/common/recycler/Recyclers.java, +        return () -> deque(c, limit);, +            public Recycler.V<T> obtain(int sizing) {, +            public Recycler.V<T> obtain() {, +++ b/server/src/main/java/org/elasticsearch/common/util/AbstractPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/util/BitArray.java, +++ b/server/src/main/java/org/elasticsearch/common/util/CollectionUtils.java, +++ b/server/src/main/java/org/elasticsearch/common/util/LongObjectPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/ConcurrentHashMapLong.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/ConcurrentMapLong.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/EsThreadPoolExecutor.java, +++ b/server/src/main/java/org/elasticsearch/common/recycler/Recyclers.java, +        return () -> deque(c, limit);, +            public Recycler.V<T> obtain(int sizing) {, +            public Recycler.V<T> obtain() {, +++ b/server/src/main/java/org/elasticsearch/common/util/AbstractPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/util/BitArray.java, +++ b/server/src/main/java/org/elasticsearch/common/util/CollectionUtils.java, +++ b/server/src/main/java/org/elasticsearch/common/util/LongObjectPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/ConcurrentHashMapLong.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/ConcurrentMapLong.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/EsThreadPoolExecutor.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/QueueResizingEsThreadPoolExecutor.java, +++ b/server/src/main/java/org/elasticsearch/common/recycler/Recyclers.java, +        return () -> deque(c, limit);, +            public Recycler.V<T> obtain(int sizing) {, +            public Recycler.V<T> obtain() {, +++ b/server/src/main/java/org/elasticsearch/common/util/AbstractPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/util/BitArray.java, +++ b/server/src/main/java/org/elasticsearch/common/util/CollectionUtils.java, +++ b/server/src/main/java/org/elasticsearch/common/util/LongObjectPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/ConcurrentHashMapLong.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/ConcurrentMapLong.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/EsThreadPoolExecutor.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/QueueResizingEsThreadPoolExecutor.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/ThreadContext.java, +++ b/server/src/main/java/org/elasticsearch/common/recycler/Recyclers.java, +        return () -> deque(c, limit);, +            public Recycler.V<T> obtain(int sizing) {, +            public Recycler.V<T> obtain() {, +++ b/server/src/main/java/org/elasticsearch/common/util/AbstractPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/util/BitArray.java, +++ b/server/src/main/java/org/elasticsearch/common/util/CollectionUtils.java, +++ b/server/src/main/java/org/elasticsearch/common/util/LongObjectPagedHashMap.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/ConcurrentHashMapLong.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/ConcurrentMapLong.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/EsThreadPoolExecutor.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/QueueResizingEsThreadPoolExecutor.java, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/ThreadContext.java, +++ b/server/src/main/java/org/elasticsearch/common/util/set/Sets.java, +        return left.stream().noneMatch(right::contains);]