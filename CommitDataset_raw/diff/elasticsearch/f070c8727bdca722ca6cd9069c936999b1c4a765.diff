[+++ b/core/src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptionsIT.java, +import org.elasticsearch.monitor.jvm.HotThreads;, +    @TestLogging("_root:DEBUG,cluster.service:TRACE,test.disruption:TRACE"), +, +        // the test is periodically tripping on the following assertion. To find out which threads are blocking the nodes from making, +        // progress we print a stack dump, +        boolean failed = true;, +        try {, +            failed = false;, +        } finally {, +            if (failed) {, +                logger.error("discovery failed to complete, probably caused by a blocked thread: {}",, +                    new HotThreads().busiestThreads(Integer.MAX_VALUE).ignoreIdleThreads(false).detect());, +            }, +        }, +++ b/core/src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptionsIT.java, +import org.elasticsearch.monitor.jvm.HotThreads;, +    @TestLogging("_root:DEBUG,cluster.service:TRACE,test.disruption:TRACE"), +, +        // the test is periodically tripping on the following assertion. To find out which threads are blocking the nodes from making, +        // progress we print a stack dump, +        boolean failed = true;, +        try {, +            failed = false;, +        } finally {, +            if (failed) {, +                logger.error("discovery failed to complete, probably caused by a blocked thread: {}",, +                    new HotThreads().busiestThreads(Integer.MAX_VALUE).ignoreIdleThreads(false).detect());, +            }, +        }, +++ b/test/framework/src/main/java/org/elasticsearch/test/disruption/LongGCDisruption.java, +                    logger.trace("stopping thread [{}]", name);, +                        logger.trace("resuming thread [{}] as it is in a critical section", name);]