[+++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.gateway.GatewayService;, +        GatewayService.EXPECTED_DATA_NODES_SETTING,, +        GatewayService.EXPECTED_MASTER_NODES_SETTING,, +        GatewayService.EXPECTED_NODES_SETTING,, +        GatewayService.RECOVER_AFTER_DATA_NODES_SETTING,, +        GatewayService.RECOVER_AFTER_MASTER_NODES_SETTING,, +        GatewayService.RECOVER_AFTER_NODES_SETTING,, +        GatewayService.RECOVER_AFTER_TIME_SETTING,, +        ScriptService.SCRIPT_CACHE_SIZE_SETTING)));, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.gateway.GatewayService;, +        GatewayService.EXPECTED_DATA_NODES_SETTING,, +        GatewayService.EXPECTED_MASTER_NODES_SETTING,, +        GatewayService.EXPECTED_NODES_SETTING,, +        GatewayService.RECOVER_AFTER_DATA_NODES_SETTING,, +        GatewayService.RECOVER_AFTER_MASTER_NODES_SETTING,, +        GatewayService.RECOVER_AFTER_NODES_SETTING,, +        GatewayService.RECOVER_AFTER_TIME_SETTING,, +        ScriptService.SCRIPT_CACHE_SIZE_SETTING)));, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayService.java, +import org.elasticsearch.common.settings.Setting;, +    public static final Setting<Integer> EXPECTED_NODES_SETTING = Setting.intSetting(, +            "gateway.expected_nodes", -1, -1, false, Setting.Scope.CLUSTER);, +    public static final Setting<Integer> EXPECTED_DATA_NODES_SETTING = Setting.intSetting(, +            "gateway.expected_data_nodes", -1, -1, false, Setting.Scope.CLUSTER);, +    public static final Setting<Integer> EXPECTED_MASTER_NODES_SETTING = Setting.intSetting(, +            "gateway.expected_master_nodes", -1, -1, false, Setting.Scope.CLUSTER);, +    public static final Setting<TimeValue> RECOVER_AFTER_TIME_SETTING = Setting.positiveTimeSetting(, +            "gateway.recover_after_time", TimeValue.timeValueMillis(0), false, Setting.Scope.CLUSTER);, +    public static final Setting<Integer> RECOVER_AFTER_NODES_SETTING = Setting.intSetting(, +            "gateway.recover_after_nodes", -1, -1, false, Setting.Scope.CLUSTER);, +    public static final Setting<Integer> RECOVER_AFTER_DATA_NODES_SETTING = Setting.intSetting(, +            "gateway.recover_after_data_nodes", -1, -1, false, Setting.Scope.CLUSTER);, +    public static final Setting<Integer> RECOVER_AFTER_MASTER_NODES_SETTING = Setting.intSetting(, +            "gateway.recover_after_master_nodes", 0, 0, false, Setting.Scope.CLUSTER);, +, +        this.expectedNodes = EXPECTED_NODES_SETTING.get(this.settings);, +        this.expectedDataNodes = EXPECTED_DATA_NODES_SETTING.get(this.settings);, +        this.expectedMasterNodes = EXPECTED_MASTER_NODES_SETTING.get(this.settings);, +        if (RECOVER_AFTER_TIME_SETTING.exists(this.settings)) {, +            recoverAfterTime = RECOVER_AFTER_TIME_SETTING.get(this.settings);, +        } else if (expectedNodes >= 0 || expectedDataNodes >= 0 || expectedMasterNodes >= 0) {, +            recoverAfterTime = DEFAULT_RECOVER_AFTER_TIME_IF_EXPECTED_NODES_IS_SET;, +        } else {, +            recoverAfterTime = null;, +        this.recoverAfterNodes = RECOVER_AFTER_NODES_SETTING.get(this.settings);, +        this.recoverAfterDataNodes = RECOVER_AFTER_DATA_NODES_SETTING.get(this.settings);, +        if (RECOVER_AFTER_MASTER_NODES_SETTING.exists(this.settings)) {, +            recoverAfterMasterNodes = RECOVER_AFTER_MASTER_NODES_SETTING.get(this.settings);, +        } else {, +            // TODO: change me once the minimum_master_nodes is changed too, +            recoverAfterMasterNodes = settings.getAsInt("discovery.zen.minimum_master_nodes", -1);, +        }, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.gateway.GatewayService;, +        GatewayService.EXPECTED_DATA_NODES_SETTING,, +        GatewayService.EXPECTED_MASTER_NODES_SETTING,, +        GatewayService.EXPECTED_NODES_SETTING,, +        GatewayService.RECOVER_AFTER_DATA_NODES_SETTING,, +        GatewayService.RECOVER_AFTER_MASTER_NODES_SETTING,, +        GatewayService.RECOVER_AFTER_NODES_SETTING,, +        GatewayService.RECOVER_AFTER_TIME_SETTING,, +        ScriptService.SCRIPT_CACHE_SIZE_SETTING)));, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayService.java, +import org.elasticsearch.common.settings.Setting;, +    public static final Setting<Integer> EXPECTED_NODES_SETTING = Setting.intSetting(, +            "gateway.expected_nodes", -1, -1, false, Setting.Scope.CLUSTER);, +    public static final Setting<Integer> EXPECTED_DATA_NODES_SETTING = Setting.intSetting(, +            "gateway.expected_data_nodes", -1, -1, false, Setting.Scope.CLUSTER);, +    public static final Setting<Integer> EXPECTED_MASTER_NODES_SETTING = Setting.intSetting(, +            "gateway.expected_master_nodes", -1, -1, false, Setting.Scope.CLUSTER);, +    public static final Setting<TimeValue> RECOVER_AFTER_TIME_SETTING = Setting.positiveTimeSetting(, +            "gateway.recover_after_time", TimeValue.timeValueMillis(0), false, Setting.Scope.CLUSTER);, +    public static final Setting<Integer> RECOVER_AFTER_NODES_SETTING = Setting.intSetting(, +            "gateway.recover_after_nodes", -1, -1, false, Setting.Scope.CLUSTER);, +    public static final Setting<Integer> RECOVER_AFTER_DATA_NODES_SETTING = Setting.intSetting(, +            "gateway.recover_after_data_nodes", -1, -1, false, Setting.Scope.CLUSTER);, +    public static final Setting<Integer> RECOVER_AFTER_MASTER_NODES_SETTING = Setting.intSetting(, +            "gateway.recover_after_master_nodes", 0, 0, false, Setting.Scope.CLUSTER);, +, +        this.expectedNodes = EXPECTED_NODES_SETTING.get(this.settings);, +        this.expectedDataNodes = EXPECTED_DATA_NODES_SETTING.get(this.settings);, +        this.expectedMasterNodes = EXPECTED_MASTER_NODES_SETTING.get(this.settings);, +        if (RECOVER_AFTER_TIME_SETTING.exists(this.settings)) {, +            recoverAfterTime = RECOVER_AFTER_TIME_SETTING.get(this.settings);, +        } else if (expectedNodes >= 0 || expectedDataNodes >= 0 || expectedMasterNodes >= 0) {, +            recoverAfterTime = DEFAULT_RECOVER_AFTER_TIME_IF_EXPECTED_NODES_IS_SET;, +        } else {, +            recoverAfterTime = null;, +        this.recoverAfterNodes = RECOVER_AFTER_NODES_SETTING.get(this.settings);, +        this.recoverAfterDataNodes = RECOVER_AFTER_DATA_NODES_SETTING.get(this.settings);, +        if (RECOVER_AFTER_MASTER_NODES_SETTING.exists(this.settings)) {, +            recoverAfterMasterNodes = RECOVER_AFTER_MASTER_NODES_SETTING.get(this.settings);, +        } else {, +            // TODO: change me once the minimum_master_nodes is changed too, +            recoverAfterMasterNodes = settings.getAsInt("discovery.zen.minimum_master_nodes", -1);, +        }, +++ b/core/src/main/java/org/elasticsearch/indices/analysis/HunspellService.java, +    public final static String HUNSPELL_LAZY_LOAD = "indices.analysis.hunspell.dictionary.lazy";]