[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +     * Should this node form a connection to the provided node., +     */, +    public boolean shouldConnectTo(DiscoveryNode otherNode) {, +        if (clientNode() && otherNode.clientNode()) {, +            return false;, +        }, +        return true;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +     * Should this node form a connection to the provided node., +     */, +    public boolean shouldConnectTo(DiscoveryNode otherNode) {, +        if (clientNode() && otherNode.clientNode()) {, +            return false;, +        }, +        return true;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +        return localNode().shouldConnectTo(node);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +     * Should this node form a connection to the provided node., +     */, +    public boolean shouldConnectTo(DiscoveryNode otherNode) {, +        if (clientNode() && otherNode.clientNode()) {, +            return false;, +        }, +        return true;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +        return localNode().shouldConnectTo(node);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPing.java, +                        if (logger.isTraceEnabled()) {, +                            logger.trace("[{}] received ping_request from [{}], but wrong cluster_name [{}], expected [{}], ignoring", id, requestingNode, clusterName, MulticastZenPing.this.clusterName);, +                        }, +                        continue;, +                    }, +                    // don't connect between two client nodes, no need for that..., +                    if (!discoveryNodes.localNode().shouldConnectTo(requestingNode)) {, +                        if (logger.isTraceEnabled()) {, +                            logger.trace("[{}] received ping_request from [{}], both are client nodes, ignoring", id, requestingNode, clusterName);, +                        }]