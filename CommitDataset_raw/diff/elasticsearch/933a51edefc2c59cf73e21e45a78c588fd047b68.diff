[+++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential', 'Generated'], +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential', 'Generated'], +++ b/dev-tools/checkstyle_suppressions.xml, +  <suppress files="plugin[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]expression[/\\].*.java" checks="EqualsHashCode" />, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential', 'Generated'], +++ b/dev-tools/checkstyle_suppressions.xml, +  <suppress files="plugin[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]expression[/\\].*.java" checks="EqualsHashCode" />, +++ b/plugin/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java, +    abstract static class AnalyzeRule<SubPlan extends LogicalPlan> extends Rule<SubPlan, LogicalPlan> {, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential', 'Generated'], +++ b/dev-tools/checkstyle_suppressions.xml, +  <suppress files="plugin[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]expression[/\\].*.java" checks="EqualsHashCode" />, +++ b/plugin/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java, +    abstract static class AnalyzeRule<SubPlan extends LogicalPlan> extends Rule<SubPlan, LogicalPlan> {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java, +import java.util.ArrayList;, +import java.util.Collection;, +import java.util.LinkedHashSet;, +import java.util.List;, +import java.util.Locale;, +import java.util.Objects;, +import java.util.Set;, +, +        Failure(Node<?> source, String message) {, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential', 'Generated'], +++ b/dev-tools/checkstyle_suppressions.xml, +  <suppress files="plugin[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]expression[/\\].*.java" checks="EqualsHashCode" />, +++ b/plugin/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java, +    abstract static class AnalyzeRule<SubPlan extends LogicalPlan> extends Rule<SubPlan, LogicalPlan> {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java, +import java.util.ArrayList;, +import java.util.Collection;, +import java.util.LinkedHashSet;, +import java.util.List;, +import java.util.Locale;, +import java.util.Objects;, +import java.util.Set;, +, +        Failure(Node<?> source, String message) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/sql/execution/search/DocValueExtractor.java, +    DocValueExtractor(String name) {, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential', 'Generated'], +++ b/dev-tools/checkstyle_suppressions.xml, +  <suppress files="plugin[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]expression[/\\].*.java" checks="EqualsHashCode" />, +++ b/plugin/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java, +    abstract static class AnalyzeRule<SubPlan extends LogicalPlan> extends Rule<SubPlan, LogicalPlan> {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java, +import java.util.ArrayList;, +import java.util.Collection;, +import java.util.LinkedHashSet;, +import java.util.List;, +import java.util.Locale;, +import java.util.Objects;, +import java.util.Set;, +, +        Failure(Node<?> source, String message) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/sql/execution/search/DocValueExtractor.java, +    DocValueExtractor(String name) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/sql/execution/search/InnerHitExtractor.java, +    InnerHitExtractor(String hitName, String name, boolean useDocValue) {, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential', 'Generated'], +++ b/dev-tools/checkstyle_suppressions.xml, +  <suppress files="plugin[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]expression[/\\].*.java" checks="EqualsHashCode" />, +++ b/plugin/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java, +    abstract static class AnalyzeRule<SubPlan extends LogicalPlan> extends Rule<SubPlan, LogicalPlan> {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java, +import java.util.ArrayList;, +import java.util.Collection;, +import java.util.LinkedHashSet;, +import java.util.List;, +import java.util.Locale;, +import java.util.Objects;, +import java.util.Set;, +, +        Failure(Node<?> source, String message) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/sql/execution/search/DocValueExtractor.java, +    DocValueExtractor(String name) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/sql/execution/search/InnerHitExtractor.java, +    InnerHitExtractor(String hitName, String name, boolean useDocValue) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/sql/execution/search/Scroller.java, +    /**, +     * Dedicated scroll used for aggs-only/group-by results., +     */, +    static class AggsScrollActionListener extends ScrollerActionListener {, +    /**, +     * Initial scroll used for parsing search hits (handles possible aggs)., +     */, +    static class HandshakeScrollActionListener extends SearchHitsActionListener {, +    /**, +     * Listener used for streaming the rest of the results after the handshake has been used., +     */, +    static class SessionScrollActionListener extends SearchHitsActionListener {, +    abstract static class SearchHitsActionListener extends ScrollerActionListener {]