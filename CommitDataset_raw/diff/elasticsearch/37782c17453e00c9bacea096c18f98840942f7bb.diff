[+++ b/docs/reference/analysis/analyzers/custom-analyzer.asciidoc, +The name of the custom analyzer must not start mit "_"., +++ b/docs/reference/analysis/analyzers/custom-analyzer.asciidoc, +The name of the custom analyzer must not start mit "_"., +++ b/src/main/java/org/elasticsearch/index/analysis/AnalysisService.java, +        for (Map.Entry<String, NamedAnalyzer> analyzer : analyzers.entrySet()) {, +            if (analyzer.getKey().startsWith("_")) {, +                throw new IllegalArgumentException("analyzer name must not start with _. got \"" + analyzer.getKey() + "\"");, +            }, +        }, +++ b/docs/reference/analysis/analyzers/custom-analyzer.asciidoc, +The name of the custom analyzer must not start mit "_"., +++ b/src/main/java/org/elasticsearch/index/analysis/AnalysisService.java, +        for (Map.Entry<String, NamedAnalyzer> analyzer : analyzers.entrySet()) {, +            if (analyzer.getKey().startsWith("_")) {, +                throw new IllegalArgumentException("analyzer name must not start with _. got \"" + analyzer.getKey() + "\"");, +            }, +        }, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +        builder.startObject(AndQueryParser.NAME);, +++ b/docs/reference/analysis/analyzers/custom-analyzer.asciidoc, +The name of the custom analyzer must not start mit "_"., +++ b/src/main/java/org/elasticsearch/index/analysis/AnalysisService.java, +        for (Map.Entry<String, NamedAnalyzer> analyzer : analyzers.entrySet()) {, +            if (analyzer.getKey().startsWith("_")) {, +                throw new IllegalArgumentException("analyzer name must not start with _. got \"" + analyzer.getKey() + "\"");, +            }, +        }, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +        builder.startObject(AndQueryParser.NAME);, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryParser.java, +public class AndQueryParser implements QueryParser {, +, +    public static final String NAME = "and";, +        return new String[]{NAME};, +++ b/docs/reference/analysis/analyzers/custom-analyzer.asciidoc, +The name of the custom analyzer must not start mit "_"., +++ b/src/main/java/org/elasticsearch/index/analysis/AnalysisService.java, +        for (Map.Entry<String, NamedAnalyzer> analyzer : analyzers.entrySet()) {, +            if (analyzer.getKey().startsWith("_")) {, +                throw new IllegalArgumentException("analyzer name must not start with _. got \"" + analyzer.getKey() + "\"");, +            }, +        }, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +        builder.startObject(AndQueryParser.NAME);, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryParser.java, +public class AndQueryParser implements QueryParser {, +, +    public static final String NAME = "and";, +        return new String[]{NAME};, +++ /dev/null, +++ b/docs/reference/analysis/analyzers/custom-analyzer.asciidoc, +The name of the custom analyzer must not start mit "_"., +++ b/src/main/java/org/elasticsearch/index/analysis/AnalysisService.java, +        for (Map.Entry<String, NamedAnalyzer> analyzer : analyzers.entrySet()) {, +            if (analyzer.getKey().startsWith("_")) {, +                throw new IllegalArgumentException("analyzer name must not start with _. got \"" + analyzer.getKey() + "\"");, +            }, +        }, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +        builder.startObject(AndQueryParser.NAME);, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryParser.java, +public class AndQueryParser implements QueryParser {, +, +    public static final String NAME = "and";, +        return new String[]{NAME};, +++ /dev/null, +++ /dev/null, +++ b/docs/reference/analysis/analyzers/custom-analyzer.asciidoc, +The name of the custom analyzer must not start mit "_"., +++ b/src/main/java/org/elasticsearch/index/analysis/AnalysisService.java, +        for (Map.Entry<String, NamedAnalyzer> analyzer : analyzers.entrySet()) {, +            if (analyzer.getKey().startsWith("_")) {, +                throw new IllegalArgumentException("analyzer name must not start with _. got \"" + analyzer.getKey() + "\"");, +            }, +        }, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +        builder.startObject(AndQueryParser.NAME);, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryParser.java, +public class AndQueryParser implements QueryParser {, +, +    public static final String NAME = "and";, +        return new String[]{NAME};, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/docs/reference/analysis/analyzers/custom-analyzer.asciidoc, +The name of the custom analyzer must not start mit "_"., +++ b/src/main/java/org/elasticsearch/index/analysis/AnalysisService.java, +        for (Map.Entry<String, NamedAnalyzer> analyzer : analyzers.entrySet()) {, +            if (analyzer.getKey().startsWith("_")) {, +                throw new IllegalArgumentException("analyzer name must not start with _. got \"" + analyzer.getKey() + "\"");, +            }, +        }, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +        builder.startObject(AndQueryParser.NAME);, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryParser.java, +public class AndQueryParser implements QueryParser {, +, +    public static final String NAME = "and";]