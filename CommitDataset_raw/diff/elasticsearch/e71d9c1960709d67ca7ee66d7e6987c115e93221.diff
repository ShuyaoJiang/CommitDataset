[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalDateHistogram.java, +import java.util.Objects;, +        public boolean equals(Object obj) {, +            if (obj == null || obj.getClass() != InternalDateHistogram.Bucket.class) {, +                return false;, +            }, +            InternalDateHistogram.Bucket that = (InternalDateHistogram.Bucket) obj;, +            // No need to take the keyed and format parameters into account,, +            // they are already stored and tested on the InternalDateHistogram object, +            return key == that.key, +                    && docCount == that.docCount, +                    && Objects.equals(aggregations, that.aggregations);, +        }, +, +        @Override, +        public int hashCode() {, +            return Objects.hash(getClass(), key, docCount, aggregations);, +        }, +, +        @Override, +        @Override, +        public boolean equals(Object obj) {, +            if (obj == null || getClass() != obj.getClass()) {, +                return false;, +            }, +            EmptyBucketInfo that = (EmptyBucketInfo) obj;, +            return Objects.equals(rounding, that.rounding), +                    && Objects.equals(bounds, that.bounds), +                    && Objects.equals(subAggregations, that.subAggregations);, +        }, +, +        @Override, +        public int hashCode() {, +            return Objects.hash(getClass(), rounding, bounds, subAggregations);, +        }, +, +    @Override, +    protected boolean doEquals(Object obj) {, +        InternalDateHistogram that = (InternalDateHistogram) obj;, +        return Objects.equals(buckets, that.buckets), +                && Objects.equals(order, that.order), +                && Objects.equals(format, that.format), +                && Objects.equals(keyed, that.keyed), +                && Objects.equals(minDocCount, that.minDocCount), +                && Objects.equals(offset, that.offset), +                && Objects.equals(emptyBucketInfo, that.emptyBucketInfo);, +    }, +, +    @Override, +    protected int doHashCode() {, +        return Objects.hash(buckets, order, format, keyed, minDocCount, offset, emptyBucketInfo);, +    }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalDateHistogram.java, +import java.util.Objects;, +        public boolean equals(Object obj) {, +            if (obj == null || obj.getClass() != InternalDateHistogram.Bucket.class) {, +                return false;, +            }, +            InternalDateHistogram.Bucket that = (InternalDateHistogram.Bucket) obj;, +            // No need to take the keyed and format parameters into account,, +            // they are already stored and tested on the InternalDateHistogram object, +            return key == that.key, +                    && docCount == that.docCount, +                    && Objects.equals(aggregations, that.aggregations);, +        }, +, +        @Override, +        public int hashCode() {, +            return Objects.hash(getClass(), key, docCount, aggregations);, +        }, +, +        @Override, +        @Override, +        public boolean equals(Object obj) {, +            if (obj == null || getClass() != obj.getClass()) {, +                return false;, +            }, +            EmptyBucketInfo that = (EmptyBucketInfo) obj;, +            return Objects.equals(rounding, that.rounding), +                    && Objects.equals(bounds, that.bounds), +                    && Objects.equals(subAggregations, that.subAggregations);, +        }, +, +        @Override, +        public int hashCode() {, +            return Objects.hash(getClass(), rounding, bounds, subAggregations);, +        }, +, +    @Override, +    protected boolean doEquals(Object obj) {, +        InternalDateHistogram that = (InternalDateHistogram) obj;, +        return Objects.equals(buckets, that.buckets), +                && Objects.equals(order, that.order), +                && Objects.equals(format, that.format), +                && Objects.equals(keyed, that.keyed), +                && Objects.equals(minDocCount, that.minDocCount), +                && Objects.equals(offset, that.offset), +                && Objects.equals(emptyBucketInfo, that.emptyBucketInfo);, +    }, +]