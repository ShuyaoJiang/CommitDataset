[+++ b/src/main/java/org/elasticsearch/common/unit/ByteSizeValue.java, +import java.util.Locale;, +            String lastTwoChars = sValue.substring(sValue.length() - Math.min(2, sValue.length())).toLowerCase(Locale.ROOT);, +            if (lastTwoChars.endsWith("k")) {, +            } else if (lastTwoChars.endsWith("kb")) {, +            } else if (lastTwoChars.endsWith("m")) {, +            } else if (lastTwoChars.endsWith("mb")) {, +            } else if (lastTwoChars.endsWith("g")) {, +            } else if (lastTwoChars.endsWith("gb")) {, +            } else if (lastTwoChars.endsWith("b")) {, +++ b/src/main/java/org/elasticsearch/common/unit/ByteSizeValue.java, +import java.util.Locale;, +            String lastTwoChars = sValue.substring(sValue.length() - Math.min(2, sValue.length())).toLowerCase(Locale.ROOT);, +            if (lastTwoChars.endsWith("k")) {, +            } else if (lastTwoChars.endsWith("kb")) {, +            } else if (lastTwoChars.endsWith("m")) {, +            } else if (lastTwoChars.endsWith("mb")) {, +            } else if (lastTwoChars.endsWith("g")) {, +            } else if (lastTwoChars.endsWith("gb")) {, +            } else if (lastTwoChars.endsWith("b")) {, +++ b/src/test/java/org/elasticsearch/common/unit/ByteSizeValueTests.java, +import org.elasticsearch.ElasticSearchParseException;, +, +    @Test, +    public void testParsing() {, +        assertThat(ByteSizeValue.parseBytesSizeValue("12gb").toString(), is("12gb"));, +        assertThat(ByteSizeValue.parseBytesSizeValue("12G").toString(), is("12gb"));, +        assertThat(ByteSizeValue.parseBytesSizeValue("12GB").toString(), is("12gb"));, +        assertThat(ByteSizeValue.parseBytesSizeValue("12M").toString(), is("12mb"));, +        assertThat(ByteSizeValue.parseBytesSizeValue("1b").toString(), is("1b"));, +        assertThat(ByteSizeValue.parseBytesSizeValue("23kb").toString(), is("23kb"));, +        assertThat(ByteSizeValue.parseBytesSizeValue("23k").toString(), is("23kb"));, +        assertThat(ByteSizeValue.parseBytesSizeValue("23").toString(), is("23b"));, +    }, +, +    @Test(expected = ElasticSearchParseException.class), +    public void testFailOnEmptyParsing() {, +        assertThat(ByteSizeValue.parseBytesSizeValue("").toString(), is("23kb"));, +    }, +, +    @Test(expected = ElasticSearchParseException.class), +    public void testFailOnEmptyNumberParsing() {, +        assertThat(ByteSizeValue.parseBytesSizeValue("g").toString(), is("23b"));, +    }]