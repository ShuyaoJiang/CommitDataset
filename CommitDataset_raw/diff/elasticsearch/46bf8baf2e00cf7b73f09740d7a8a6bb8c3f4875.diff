[+++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +                    Class<? extends SearchService> searchServiceImpl = pickSearchServiceImplementation();, +                    if (searchServiceImpl == SearchService.class) {, +                        b.bind(SearchService.class).asEagerSingleton();, +                    } else {, +                        b.bind(SearchService.class).to(searchServiceImpl).asEagerSingleton();, +                    }, +     * The {@link PluginsService} used to build this node's components., +     */, +    protected PluginsService getPluginsService() {, +        return pluginsService;, +    }, +, +    /**, +     * Select the search service implementation. Overrided by tests., +     */, +    protected Class<? extends SearchService> pickSearchServiceImplementation() {, +        return SearchService.class;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +                    Class<? extends SearchService> searchServiceImpl = pickSearchServiceImplementation();, +                    if (searchServiceImpl == SearchService.class) {, +                        b.bind(SearchService.class).asEagerSingleton();, +                    } else {, +                        b.bind(SearchService.class).to(searchServiceImpl).asEagerSingleton();, +                    }, +     * The {@link PluginsService} used to build this node's components., +     */, +    protected PluginsService getPluginsService() {, +        return pluginsService;, +    }, +, +    /**, +     * Select the search service implementation. Overrided by tests., +     */, +    protected Class<? extends SearchService> pickSearchServiceImplementation() {, +        return SearchService.class;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/plugins/Plugin.java, +import org.elasticsearch.search.SearchModule;, +import java.util.Collection;, +import java.util.Collections;, +import java.util.List;, +, +     * Old-style action extension point., +     *, +     * @deprecated implement {@link SearchPlugin} instead, +     */, +    @Deprecated, +    public final void onModule(SearchModule module) {}, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +                    Class<? extends SearchService> searchServiceImpl = pickSearchServiceImplementation();, +                    if (searchServiceImpl == SearchService.class) {, +                        b.bind(SearchService.class).asEagerSingleton();, +                    } else {, +                        b.bind(SearchService.class).to(searchServiceImpl).asEagerSingleton();, +                    }, +     * The {@link PluginsService} used to build this node's components., +     */, +    protected PluginsService getPluginsService() {, +        return pluginsService;, +    }, +, +    /**, +     * Select the search service implementation. Overrided by tests., +     */, +    protected Class<? extends SearchService> pickSearchServiceImplementation() {, +        return SearchService.class;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/plugins/Plugin.java, +import org.elasticsearch.search.SearchModule;, +import java.util.Collection;, +import java.util.Collections;, +import java.util.List;, +, +     * Old-style action extension point., +     *, +     * @deprecated implement {@link SearchPlugin} instead, +     */, +    @Deprecated, +    public final void onModule(SearchModule module) {}, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/plugins/SearchPlugin.java, +import org.elasticsearch.search.aggregations.Aggregation;, +import org.elasticsearch.search.aggregations.AggregationBuilder;, +import org.elasticsearch.search.aggregations.Aggregator;, +import org.elasticsearch.search.aggregations.InternalAggregation;]