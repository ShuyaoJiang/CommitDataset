[+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/esnative/NativeRealmIntegTests.java, +import org.elasticsearch.xpack.core.security.authc.support.Hasher;, +    private static Hasher hasher;, +        hasher = getFastStoredHashAlgoForTests();, +        Settings.Builder builder = Settings.builder().put(super.nodeSettings(nodeOrdinal)), +            .put("xpack.security.authc.password_hashing.algorithm", hasher.name());, +            builder.put(AnonymousUser.ROLES_SETTING.getKey(), "native_anonymous");, +        return builder.build();, +        c.preparePutUser("joe", "s3kirt".toCharArray(), hasher, "role1", "user").get();, +        c.preparePutUser("joe", "s3kirt".toCharArray(), hasher, "role1", "user").get();, +        c.preparePutUser("joe2", "s3kirt2".toCharArray(), hasher, "role2", "user").get();, +        c.preparePutUser("joe3", "s3kirt3".toCharArray(), hasher, "role3", "user").get();, +        c.preparePutUser("joe", "s3krit".toCharArray(), hasher, "test_role").get();, +        c.preparePutUser("joe", "s3krit".toCharArray(), hasher, SecuritySettingsSource.TEST_ROLE).get();, +        c.preparePutUser("joe", "s3krit2".toCharArray(), hasher, SecuritySettingsSource.TEST_ROLE).get();, +        c.preparePutUser("joe", "s3krit".toCharArray(), hasher,, +        c.preparePutUser("joe", "s3krit".toCharArray(), hasher, "test_role").get();, +        c.preparePutUser("joe", "s3krit".toCharArray(), hasher, "test_role").get();, +            client.preparePutUser("joe", null, hasher, "admin_role").get();, +            hasher, "admin_role").get();, +        client.preparePutUser("joe", null, hasher, "read_role").fullName("Joe Smith").get();, +        client.preparePutUser("joe", secondPassword.toCharArray(), hasher, "admin_role")., +            client.preparePutUser("joe", randomAlphaOfLengthBetween(0, 5).toCharArray(), hasher,, +            () -> client.preparePutUser("fóóbár", "my-am@zing-password".toCharArray(), hasher,, +            client.preparePutUser("joe", "s3krit".toCharArray(), hasher,, +                    : null, hasher, "admin").get());, +                hasher).get());, +                hasher).get());, +            () -> securityClient().preparePutUser(SystemUser.NAME, "foobar".toCharArray(), hasher).get());, +                hasher).get());, +        securityClient().preparePutUser("joe", "s3krit".toCharArray(), hasher,, +            .prepareChangePassword("joe", SecuritySettingsSourceField.TEST_PASSWORD.toCharArray(), hasher).get();, +            securityClient.preparePutUser("joe" + i, "s3krit".toCharArray(), hasher,, +        securityClient().preparePutUser("joe", "s3krit".toCharArray(), hasher,, +        securityClient.preparePutUser("joe", "s3krit".toCharArray(), hasher, "unknown_role").get();, +        securityClient().preparePutUser("joe", "s3krit".toCharArray(), hasher, SecuritySettingsSource, +        securityClient().preparePutUser("executor", "s3krit".toCharArray(), hasher, "superuser").get();, +++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/esnative/NativeRealmIntegTests.java, +import org.elasticsearch.xpack.core.security.authc.support.Hasher;, +    private static Hasher hasher;, +        hasher = getFastStoredHashAlgoForTests();, +        Settings.Builder builder = Settings.builder().put(super.nodeSettings(nodeOrdinal)), +            .put("xpack.security.authc.password_hashing.algorithm", hasher.name());, +            builder.put(AnonymousUser.ROLES_SETTING.getKey(), "native_anonymous");, +        return builder.build();, +        c.preparePutUser("joe", "s3kirt".toCharArray(), hasher, "role1", "user").get();, +        c.preparePutUser("joe", "s3kirt".toCharArray(), hasher, "role1", "user").get();, +        c.preparePutUser("joe2", "s3kirt2".toCharArray(), hasher, "role2", "user").get();, +        c.preparePutUser("joe3", "s3kirt3".toCharArray(), hasher, "role3", "user").get();, +        c.preparePutUser("joe", "s3krit".toCharArray(), hasher, "test_role").get();, +        c.preparePutUser("joe", "s3krit".toCharArray(), hasher, SecuritySettingsSource.TEST_ROLE).get();, +        c.preparePutUser("joe", "s3krit2".toCharArray(), hasher, SecuritySettingsSource.TEST_ROLE).get();, +        c.preparePutUser("joe", "s3krit".toCharArray(), hasher,, +        c.preparePutUser("joe", "s3krit".toCharArray(), hasher, "test_role").get();, +        c.preparePutUser("joe", "s3krit".toCharArray(), hasher, "test_role").get();, +            client.preparePutUser("joe", null, hasher, "admin_role").get();, +            hasher, "admin_role").get();, +        client.preparePutUser("joe", null, hasher, "read_role").fullName("Joe Smith").get();, +        client.preparePutUser("joe", secondPassword.toCharArray(), hasher, "admin_role")., +            client.preparePutUser("joe", randomAlphaOfLengthBetween(0, 5).toCharArray(), hasher,, +            () -> client.preparePutUser("fóóbár", "my-am@zing-password".toCharArray(), hasher,, +            client.preparePutUser("joe", "s3krit".toCharArray(), hasher,, +                    : null, hasher, "admin").get());, +                hasher).get());, +                hasher).get());, +            () -> securityClient().preparePutUser(SystemUser.NAME, "foobar".toCharArray(), hasher).get());, +                hasher).get());, +        securityClient().preparePutUser("joe", "s3krit".toCharArray(), hasher,, +            .prepareChangePassword("joe", SecuritySettingsSourceField.TEST_PASSWORD.toCharArray(), hasher).get();, +            securityClient.preparePutUser("joe" + i, "s3krit".toCharArray(), hasher,, +        securityClient().preparePutUser("joe", "s3krit".toCharArray(), hasher,, +        securityClient.preparePutUser("joe", "s3krit".toCharArray(), hasher, "unknown_role").get();, +        securityClient().preparePutUser("joe", "s3krit".toCharArray(), hasher, SecuritySettingsSource, +        securityClient().preparePutUser("executor", "s3krit".toCharArray(), hasher, "superuser").get();, +++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/esnative/ReservedRealmIntegTests.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.xpack.core.security.authc.support.Hasher;, +import org.junit.BeforeClass;, +    private static Hasher hasher;, +, +    @BeforeClass, +    public static void setHasher() {, +        hasher = getFastStoredHashAlgoForTests();, +    }, +, +    @Override, +    public Settings nodeSettings(int nodeOrdinal) {, +        Settings settings = Settings.builder(), +            .put(super.nodeSettings(nodeOrdinal)), +            .put("xpack.security.authc.password_hashing.algorithm", hasher.name()), +            .build();, +        return settings;, +    }, +, +            .prepareChangePassword(username, Arrays.copyOf(newPassword, newPassword.length), hasher)]