[+++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.fieldcaps.FieldCapabilitiesAction;, +import org.elasticsearch.action.fieldcaps.TransportFieldCapabilitiesAction;, +import org.elasticsearch.action.fieldcaps.TransportFieldCapabilitiesIndexAction;, +import org.elasticsearch.rest.action.RestFieldCapabilitiesAction;, +        actions.register(FieldCapabilitiesAction.INSTANCE, TransportFieldCapabilitiesAction.class,, +            TransportFieldCapabilitiesIndexAction.class);, +        registerHandler.accept(new RestFieldCapabilitiesAction(settings, restController));, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.fieldcaps.FieldCapabilitiesAction;, +import org.elasticsearch.action.fieldcaps.TransportFieldCapabilitiesAction;, +import org.elasticsearch.action.fieldcaps.TransportFieldCapabilitiesIndexAction;, +import org.elasticsearch.rest.action.RestFieldCapabilitiesAction;, +        actions.register(FieldCapabilitiesAction.INSTANCE, TransportFieldCapabilitiesAction.class,, +            TransportFieldCapabilitiesIndexAction.class);, +        registerHandler.accept(new RestFieldCapabilitiesAction(settings, restController));, +++ b/core/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilities.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.action.fieldcaps;, +, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.io.stream.Writeable;, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +, +import java.io.IOException;, +import java.util.Collections;, +import java.util.Arrays;, +import java.util.List;, +import java.util.ArrayList;, +import java.util.Comparator;, +, +/**, + * Describes the capabilities of a field optionally merged across multiple indices., + */, +public class FieldCapabilities implements Writeable, ToXContent {, +    private final String name;, +    private final String type;, +    private final boolean isSearchable;, +    private final boolean isAggregatable;, +, +    private final String[] indices;, +    private final String[] nonSearchableIndices;, +    private final String[] nonAggregatableIndices;, +, +    /**, +     * Constructor, +     * @param name The name of the field., +     * @param type The type associated with the field., +     * @param isSearchable Whether this field is indexed for search., +     * @param isAggregatable Whether this field can be aggregated on., +     */, +    FieldCapabilities(String name, String type, boolean isSearchable, boolean isAggregatable) {, +        this(name, type, isSearchable, isAggregatable, null, null, null);, +    }, +, +    /**, +     * Constructor, +     * @param name The name of the field, +     * @param type The type associated with the field., +     * @param isSearchable Whether this field is indexed for search., +     * @param isAggregatable Whether this field can be aggregated on., +     * @param indices The list of indices where this field name is defined as {@code type},, +     *                or null if all indices have the same {@code type} for the field., +     * @param nonSearchableIndices The list of indices where this field is not searchable,, +     *                             or null if the field is searchable in all indices., +     * @param nonAggregatableIndices The list of indices where this field is not aggregatable,, +     *                               or null if the field is aggregatable in all indices., +     */, +    FieldCapabilities(String name, String type,, +                      boolean isSearchable, boolean isAggregatable,, +                      String[] indices,, +                      String[] nonSearchableIndices,, +                      String[] nonAggregatableIndices) {, +        this.name = name;, +        this.type = type;, +        this.isSearchable = isSearchable;, +        this.isAggregatable = isAggregatable;, +        this.indices = indices;, +        this.nonSearchableIndices = nonSearchableIndices;, +        this.nonAggregatableIndices = nonAggregatableIndices;]