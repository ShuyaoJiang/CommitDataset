[+++ b/core/src/test/java/org/elasticsearch/cluster/routing/RoutingServiceTests.java, +import java.util.Collections;, +import java.util.Comparator;, +import java.util.List;, +        String nodeId = null;, +        final List<ShardRouting> allShards = clusterState.getRoutingNodes().routingTable().allShards("test");, +        // we need to find the node with the replica otherwise we will not reroute, +        for (ShardRouting shardRouting : allShards) {, +            if (shardRouting.primary() == false) {, +                nodeId = shardRouting.currentNodeId();, +                break;, +            }, +        }, +        assertNotNull(nodeId);, +, +        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove(nodeId)).build();, +        RoutingNodes.UnassignedShards unassigned = clusterState.getRoutingNodes().unassigned();, +        assertEquals(1, unassigned.size());, +        ShardRouting next = unassigned.iterator().next();, +        routingService.setUnassignedShardsAllocatedTimestamp(next.unassignedInfo().getTimestampInMillis() + randomIntBetween(0, 99));, +        ClusterState newState = clusterState;, +        assertBusy(() -> assertTrue("routing service should have run a reroute", routingService.hasReroutedAndClear()));]