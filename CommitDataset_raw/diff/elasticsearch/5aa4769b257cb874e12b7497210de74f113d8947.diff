[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/TransportGetTaskAction.java, +import org.elasticsearch.tasks.PersistedTaskInfo;, +                        taskManager.waitForTaskCompletion(runningTask, waitForCompletionTimeout(request.getTimeout()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/TransportGetTaskAction.java, +import org.elasticsearch.tasks.PersistedTaskInfo;, +                        taskManager.waitForTaskCompletion(runningTask, waitForCompletionTimeout(request.getTimeout()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TransportListTasksAction.java, +                taskManager.waitForTaskCompletion(task, timeoutNanos);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/TransportGetTaskAction.java, +import org.elasticsearch.tasks.PersistedTaskInfo;, +                        taskManager.waitForTaskCompletion(runningTask, waitForCompletionTimeout(request.getTimeout()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TransportListTasksAction.java, +                taskManager.waitForTaskCompletion(task, timeoutNanos);, +++ b/core/src/main/java/org/elasticsearch/tasks/TaskManager.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.ElasticsearchTimeoutException;, +import org.elasticsearch.common.unit.TimeValue;, +import static org.elasticsearch.common.unit.TimeValue.timeValueMillis;, +, +    private static final TimeValue WAIT_FOR_COMPLETION_POLL = timeValueMillis(100);, +    /**, +     * Blocks the calling thread, waiting for the task to vanish from the TaskManager., +     */, +    public void waitForTaskCompletion(Task task, long untilInNanos) {, +        while (System.nanoTime() - untilInNanos < 0) {, +            if (getTask(task.getId()) == null) {, +                return;, +            }, +            try {, +                Thread.sleep(WAIT_FOR_COMPLETION_POLL.millis());, +            } catch (InterruptedException e) {, +                throw new ElasticsearchException("Interrupted waiting for completion of [{}]", e, task);, +            }, +        }, +        throw new ElasticsearchTimeoutException("Timed out waiting for completion of [{}]", task);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/TransportGetTaskAction.java, +import org.elasticsearch.tasks.PersistedTaskInfo;, +                        taskManager.waitForTaskCompletion(runningTask, waitForCompletionTimeout(request.getTimeout()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TransportListTasksAction.java, +                taskManager.waitForTaskCompletion(task, timeoutNanos);, +++ b/core/src/main/java/org/elasticsearch/tasks/TaskManager.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.ElasticsearchTimeoutException;, +import org.elasticsearch.common.unit.TimeValue;, +import static org.elasticsearch.common.unit.TimeValue.timeValueMillis;, +, +    private static final TimeValue WAIT_FOR_COMPLETION_POLL = timeValueMillis(100);, +    /**, +     * Blocks the calling thread, waiting for the task to vanish from the TaskManager., +     */, +    public void waitForTaskCompletion(Task task, long untilInNanos) {, +        while (System.nanoTime() - untilInNanos < 0) {, +            if (getTask(task.getId()) == null) {, +                return;, +            }, +            try {, +                Thread.sleep(WAIT_FOR_COMPLETION_POLL.millis());, +            } catch (InterruptedException e) {, +                throw new ElasticsearchException("Interrupted waiting for completion of [{}]", e, task);, +            }, +        }, +        throw new ElasticsearchTimeoutException("Timed out waiting for completion of [{}]", task);, +    }, +, +++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/RecordingTaskManagerListener.java, +    @Override, +    public void waitForTaskCompletion(Task task) {, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/TransportGetTaskAction.java, +import org.elasticsearch.tasks.PersistedTaskInfo;, +                        taskManager.waitForTaskCompletion(runningTask, waitForCompletionTimeout(request.getTimeout()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TransportListTasksAction.java, +                taskManager.waitForTaskCompletion(task, timeoutNanos);, +++ b/core/src/main/java/org/elasticsearch/tasks/TaskManager.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.ElasticsearchTimeoutException;, +import org.elasticsearch.common.unit.TimeValue;, +import static org.elasticsearch.common.unit.TimeValue.timeValueMillis;, +, +    private static final TimeValue WAIT_FOR_COMPLETION_POLL = timeValueMillis(100);, +    /**, +     * Blocks the calling thread, waiting for the task to vanish from the TaskManager., +     */, +    public void waitForTaskCompletion(Task task, long untilInNanos) {, +        while (System.nanoTime() - untilInNanos < 0) {, +            if (getTask(task.getId()) == null) {, +                return;, +            }, +            try {, +                Thread.sleep(WAIT_FOR_COMPLETION_POLL.millis());, +            } catch (InterruptedException e) {, +                throw new ElasticsearchException("Interrupted waiting for completion of [{}]", e, task);, +            }, +        }, +        throw new ElasticsearchTimeoutException("Timed out waiting for completion of [{}]", task);, +    }, +]