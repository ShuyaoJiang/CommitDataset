[+++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                                searchLookup = new SearchLookup(mapperService, indexCache.fieldData(), new String[]{type});, +                                    searchLookup = new SearchLookup(mapperService, indexCache.fieldData(), new String[]{type});, +                                    searchLookup = new SearchLookup(mapperService, indexCache.fieldData(), new String[]{type});, +                                    searchLookup = new SearchLookup(mapperService, indexCache.fieldData(), new String[]{type});, +++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                                searchLookup = new SearchLookup(mapperService, indexCache.fieldData(), new String[]{type});, +                                    searchLookup = new SearchLookup(mapperService, indexCache.fieldData(), new String[]{type});, +                                    searchLookup = new SearchLookup(mapperService, indexCache.fieldData(), new String[]{type});, +                                    searchLookup = new SearchLookup(mapperService, indexCache.fieldData(), new String[]{type});, +++ b/src/main/java/org/elasticsearch/index/mapper/geo/GeoPointDocFieldData.java, +    public double factorDistanceWithDefault(double lat, double lon, double defaultValue) {, +        if (!fieldData.hasValue(docId)) {, +            return defaultValue;, +        }, +        return fieldData.factorDistance(docId, DistanceUnit.MILES, lat, lon);, +    }, +, +    public double arcDistanceWithDefault(double lat, double lon, double defaultValue) {, +        if (!fieldData.hasValue(docId)) {, +            return defaultValue;, +        }, +        return fieldData.arcDistance(docId, DistanceUnit.MILES, lat, lon);, +    }, +, +    public double arcDistanceInKmWithDefault(double lat, double lon, double defaultValue) {, +        if (!fieldData.hasValue(docId)) {, +            return defaultValue;, +        }, +        return fieldData.arcDistance(docId, DistanceUnit.KILOMETERS, lat, lon);, +    }, +, +    public double distanceWithDefault(double lat, double lon, double defaultValue) {, +        if (!fieldData.hasValue(docId)) {, +            return defaultValue;, +        }, +        return fieldData.distance(docId, DistanceUnit.MILES, lat, lon);, +    }, +, +    public double distanceInKmWithDefault(double lat, double lon, double defaultValue) {, +        if (!fieldData.hasValue(docId)) {, +            return defaultValue;, +        }, +        return fieldData.distance(docId, DistanceUnit.KILOMETERS, lat, lon);, +    }, +, +    public double geohashDistanceWithDefault(String geohash, double defaultValue) {, +        if (!fieldData.hasValue(docId)) {, +            return defaultValue;, +        }, +        return fieldData.distanceGeohash(docId, DistanceUnit.MILES, geohash);, +    }, +, +++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                                searchLookup = new SearchLookup(mapperService, indexCache.fieldData(), new String[]{type});, +                                    searchLookup = new SearchLookup(mapperService, indexCache.fieldData(), new String[]{type});, +                                    searchLookup = new SearchLookup(mapperService, indexCache.fieldData(), new String[]{type});, +                                    searchLookup = new SearchLookup(mapperService, indexCache.fieldData(), new String[]{type});, +++ b/src/main/java/org/elasticsearch/index/mapper/geo/GeoPointDocFieldData.java, +    public double factorDistanceWithDefault(double lat, double lon, double defaultValue) {, +        if (!fieldData.hasValue(docId)) {, +            return defaultValue;, +        }, +        return fieldData.factorDistance(docId, DistanceUnit.MILES, lat, lon);, +    }, +, +    public double arcDistanceWithDefault(double lat, double lon, double defaultValue) {, +        if (!fieldData.hasValue(docId)) {, +            return defaultValue;, +        }, +        return fieldData.arcDistance(docId, DistanceUnit.MILES, lat, lon);, +    }, +, +    public double arcDistanceInKmWithDefault(double lat, double lon, double defaultValue) {, +        if (!fieldData.hasValue(docId)) {, +            return defaultValue;, +        }, +        return fieldData.arcDistance(docId, DistanceUnit.KILOMETERS, lat, lon);, +    }, +, +    public double distanceWithDefault(double lat, double lon, double defaultValue) {, +        if (!fieldData.hasValue(docId)) {, +            return defaultValue;, +        }, +        return fieldData.distance(docId, DistanceUnit.MILES, lat, lon);, +    }, +, +    public double distanceInKmWithDefault(double lat, double lon, double defaultValue) {, +        if (!fieldData.hasValue(docId)) {, +            return defaultValue;, +        }, +        return fieldData.distance(docId, DistanceUnit.KILOMETERS, lat, lon);, +    }, +, +    public double geohashDistanceWithDefault(String geohash, double defaultValue) {, +        if (!fieldData.hasValue(docId)) {, +            return defaultValue;, +        }, +        return fieldData.distanceGeohash(docId, DistanceUnit.MILES, geohash);, +    }]