[+++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +        private final BulkItemResponse ITEM_RESPONSE = new BulkItemResponse(1, "update",, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +        private final BulkItemResponse ITEM_RESPONSE = new BulkItemResponse(1, "update",, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/TransportNoopBulkAction.java, +    private static final BulkItemResponse ITEM_RESPONSE = new BulkItemResponse(1, "update",, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +        private final BulkItemResponse ITEM_RESPONSE = new BulkItemResponse(1, "update",, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/TransportNoopBulkAction.java, +    private static final BulkItemResponse ITEM_RESPONSE = new BulkItemResponse(1, "update",, +++ b/core/src/main/java/org/elasticsearch/action/DocumentRequest.java, + * Generic interface to group ActionRequest, which work on single document level, + *, + * Forces this class return index/type/id getters, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +        private final BulkItemResponse ITEM_RESPONSE = new BulkItemResponse(1, "update",, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/TransportNoopBulkAction.java, +    private static final BulkItemResponse ITEM_RESPONSE = new BulkItemResponse(1, "update",, +++ b/core/src/main/java/org/elasticsearch/action/DocumentRequest.java, + * Generic interface to group ActionRequest, which work on single document level, + *, + * Forces this class return index/type/id getters, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java, +import org.elasticsearch.action.ActionRequest;, +import org.elasticsearch.action.IndicesRequest;, +    private ActionRequest request;, +    public BulkItemRequest(int id, ActionRequest request) {, +        assert request instanceof IndicesRequest;, +    public ActionRequest request() {, +        IndicesRequest indicesRequest = (IndicesRequest) request;, +        assert indicesRequest.indices().length == 1;, +        return indicesRequest.indices()[0];, +            request = new IndexRequest();, +            request = new DeleteRequest();, +            request = new UpdateRequest();, +        request.readFrom(in);, +        request.writeTo(out);, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +        private final BulkItemResponse ITEM_RESPONSE = new BulkItemResponse(1, "update",, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/TransportNoopBulkAction.java, +    private static final BulkItemResponse ITEM_RESPONSE = new BulkItemResponse(1, "update",, +++ b/core/src/main/java/org/elasticsearch/action/DocumentRequest.java, + * Generic interface to group ActionRequest, which work on single document level, + *, + * Forces this class return index/type/id getters, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java, +import org.elasticsearch.action.ActionRequest;, +import org.elasticsearch.action.IndicesRequest;, +    private ActionRequest request;, +    public BulkItemRequest(int id, ActionRequest request) {, +        assert request instanceof IndicesRequest;, +    public ActionRequest request() {, +        IndicesRequest indicesRequest = (IndicesRequest) request;, +        assert indicesRequest.indices().length == 1;, +        return indicesRequest.indices()[0];, +            request = new IndexRequest();, +            request = new DeleteRequest();, +            request = new UpdateRequest();, +        request.readFrom(in);, +        request.writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +        builder.startObject(opType);, +    private String opType;, +    public BulkItemResponse(int id, String opType, DocWriteResponse response) {, +        this.response = response;, +    public BulkItemResponse(int id, String opType, Failure failure) {, +    public String getOpType() {, +        opType = in.readString();, +        out.writeString(opType);, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +        private final BulkItemResponse ITEM_RESPONSE = new BulkItemResponse(1, "update",, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/TransportNoopBulkAction.java, +    private static final BulkItemResponse ITEM_RESPONSE = new BulkItemResponse(1, "update",, +++ b/core/src/main/java/org/elasticsearch/action/DocumentRequest.java, + * Generic interface to group ActionRequest, which work on single document level, + *, + * Forces this class return index/type/id getters, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java, +import org.elasticsearch.action.ActionRequest;, +import org.elasticsearch.action.IndicesRequest;, +    private ActionRequest request;, +    public BulkItemRequest(int id, ActionRequest request) {, +        assert request instanceof IndicesRequest;, +    public ActionRequest request() {, +        IndicesRequest indicesRequest = (IndicesRequest) request;, +        assert indicesRequest.indices().length == 1;, +        return indicesRequest.indices()[0];, +            request = new IndexRequest();, +            request = new DeleteRequest();, +            request = new UpdateRequest();, +        request.readFrom(in);, +        request.writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +        builder.startObject(opType);, +    private String opType;, +    public BulkItemResponse(int id, String opType, DocWriteResponse response) {, +        this.response = response;, +    public BulkItemResponse(int id, String opType, Failure failure) {, +    public String getOpType() {, +        opType = in.readString();]