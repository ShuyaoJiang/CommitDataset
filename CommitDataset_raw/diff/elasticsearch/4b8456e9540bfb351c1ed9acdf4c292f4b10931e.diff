[+++ b/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +        this.masterFD = new MasterFaultDetection(settings, threadPool, transportService, this, clusterName);, +        this.nodesFD = new NodesFaultDetection(settings, threadPool, transportService, clusterName);, +++ b/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +        this.masterFD = new MasterFaultDetection(settings, threadPool, transportService, this, clusterName);, +        this.nodesFD = new NodesFaultDetection(settings, threadPool, transportService, clusterName);, +++ b/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.ClusterName;, +    private final ClusterName clusterName;, +, +    public MasterFaultDetection(Settings settings, ThreadPool threadPool, TransportService transportService,, +                                DiscoveryNodesProvider nodesProvider, ClusterName clusterName) {, +        this.clusterName = clusterName;, +            final MasterPingRequest request = new MasterPingRequest(nodesProvider.nodes().localNode().id(), masterToPing.id(), clusterName);, +            final TransportRequestOptions options = options().withType(TransportRequestOptions.Type.PING).withTimeout(pingRetryTimeout);, +            transportService.sendRequest(masterToPing, MASTER_PING_ACTION_NAME, request, options, new BaseTransportResponseHandler<MasterPingResponseResponse>() {, +, +                                        transportService.sendRequest(masterToPing, MASTER_PING_ACTION_NAME, request, options, this);, +, +        NotMasterException(String msg) {, +            super(msg);, +        }, +, +        NotMasterException() {, +        }, +, +, +            if (request.clusterName != null && !request.clusterName.equals(clusterName)) {, +                logger.trace("master fault detection ping request is targeted for a different [{}] cluster then us [{}]", request.clusterName, clusterName);, +                throw new NotMasterException("master fault detection ping request is targeted for a different [" + request.clusterName + "] cluster then us [" + clusterName + "]");, +            }, +, +        private ClusterName clusterName;, +        private MasterPingRequest(String nodeId, String masterNodeId, ClusterName clusterName) {, +            this.clusterName = clusterName;, +            if (in.getVersion().onOrAfter(Version.V_1_4_0)) {, +                clusterName = ClusterName.readClusterName(in);, +            }, +            if (out.getVersion().onOrAfter(Version.V_1_4_0)) {, +                clusterName.writeTo(out);, +            }, +++ b/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +        this.masterFD = new MasterFaultDetection(settings, threadPool, transportService, this, clusterName);, +        this.nodesFD = new NodesFaultDetection(settings, threadPool, transportService, clusterName);, +++ b/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.ClusterName;, +    private final ClusterName clusterName;, +, +    public MasterFaultDetection(Settings settings, ThreadPool threadPool, TransportService transportService,, +                                DiscoveryNodesProvider nodesProvider, ClusterName clusterName) {, +        this.clusterName = clusterName;, +            final MasterPingRequest request = new MasterPingRequest(nodesProvider.nodes().localNode().id(), masterToPing.id(), clusterName);, +            final TransportRequestOptions options = options().withType(TransportRequestOptions.Type.PING).withTimeout(pingRetryTimeout);, +            transportService.sendRequest(masterToPing, MASTER_PING_ACTION_NAME, request, options, new BaseTransportResponseHandler<MasterPingResponseResponse>() {, +, +                                        transportService.sendRequest(masterToPing, MASTER_PING_ACTION_NAME, request, options, this);, +, +        NotMasterException(String msg) {, +            super(msg);, +        }, +, +        NotMasterException() {, +        }, +, +, +            if (request.clusterName != null && !request.clusterName.equals(clusterName)) {, +                logger.trace("master fault detection ping request is targeted for a different [{}] cluster then us [{}]", request.clusterName, clusterName);, +                throw new NotMasterException("master fault detection ping request is targeted for a different [" + request.clusterName + "] cluster then us [" + clusterName + "]");, +            }, +, +        private ClusterName clusterName;, +        private MasterPingRequest(String nodeId, String masterNodeId, ClusterName clusterName) {, +            this.clusterName = clusterName;, +            if (in.getVersion().onOrAfter(Version.V_1_4_0)) {, +                clusterName = ClusterName.readClusterName(in);, +            }, +            if (out.getVersion().onOrAfter(Version.V_1_4_0)) {, +                clusterName.writeTo(out);, +            }, +++ b/src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.ClusterName;, +    private final ClusterName clusterName;, +    public NodesFaultDetection(Settings settings, ThreadPool threadPool, TransportService transportService, ClusterName clusterName) {, +        this.clusterName = clusterName;, +            final PingRequest pingRequest = new PingRequest(node.id(), clusterName);, +            final TransportRequestOptions options = options().withType(TransportRequestOptions.Type.PING).withTimeout(pingRetryTimeout);, +            transportService.sendRequest(node, PING_ACTION_NAME, pingRequest, options, new BaseTransportResponseHandler<PingResponse>() {, +                                    transportService.sendRequest(node, PING_ACTION_NAME, pingRequest, options, this);, +            if (request.clusterName != null && !request.clusterName.equals(clusterName)) {, +                // Don't introduce new exception for bwc reasons, +                throw new ElasticsearchIllegalStateException("Got pinged with cluster name [" + request.clusterName + "], but I'm part of cluster [" + clusterName + "]");, +            }, +    public static class PingRequest extends TransportRequest {, +        private ClusterName clusterName;, +, +        PingRequest(String nodeId, ClusterName clusterName) {, +            this.clusterName = clusterName;]