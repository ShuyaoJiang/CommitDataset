[+++ b/.github/PULL_REQUEST_TEMPLATE.md, +- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/master/.github/CONTRIBUTING.md)?, +++ b/.github/PULL_REQUEST_TEMPLATE.md, +- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/master/.github/CONTRIBUTING.md)?, +++ b/build.gradle, +    "org.elasticsearch:client:${version}": ':client',, +    "org.elasticsearch:client-sniffer:${version}": ':client-sniffer',, +++ b/.github/PULL_REQUEST_TEMPLATE.md, +- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/master/.github/CONTRIBUTING.md)?, +++ b/build.gradle, +    "org.elasticsearch:client:${version}": ':client',, +    "org.elasticsearch:client-sniffer:${version}": ':client-sniffer',, +++ b/buildSrc/build.gradle, +  compile 'ru.vyarus:gradle-animalsniffer-plugin:1.0.1', +++ b/.github/PULL_REQUEST_TEMPLATE.md, +- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/master/.github/CONTRIBUTING.md)?, +++ b/build.gradle, +    "org.elasticsearch:client:${version}": ':client',, +    "org.elasticsearch:client-sniffer:${version}": ':client-sniffer',, +++ b/buildSrc/build.gradle, +  compile 'ru.vyarus:gradle-animalsniffer-plugin:1.0.1', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                File srcConfigFile = project.file(extraConfigFile.getValue()), +            copyConfig.from({ extraConfigFile.getValue() }) {, +++ b/.github/PULL_REQUEST_TEMPLATE.md, +- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/master/.github/CONTRIBUTING.md)?, +++ b/build.gradle, +    "org.elasticsearch:client:${version}": ':client',, +    "org.elasticsearch:client-sniffer:${version}": ':client-sniffer',, +++ b/buildSrc/build.gradle, +  compile 'ru.vyarus:gradle-animalsniffer-plugin:1.0.1', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                File srcConfigFile = project.file(extraConfigFile.getValue()), +            copyConfig.from({ extraConfigFile.getValue() }) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cluster[/\\]IndicesClusterStateService.java" checks="LineLength" />, +++ b/.github/PULL_REQUEST_TEMPLATE.md, +- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/master/.github/CONTRIBUTING.md)?, +++ b/build.gradle, +    "org.elasticsearch:client:${version}": ':client',, +    "org.elasticsearch:client-sniffer:${version}": ':client-sniffer',, +++ b/buildSrc/build.gradle, +  compile 'ru.vyarus:gradle-animalsniffer-plugin:1.0.1', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                File srcConfigFile = project.file(extraConfigFile.getValue()), +            copyConfig.from({ extraConfigFile.getValue() }) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cluster[/\\]IndicesClusterStateService.java" checks="LineLength" />, +++ b/buildSrc/src/main/resources/forbidden/es-all-signatures.txt, +, +org.apache.lucene.document.InetAddressPoint#newPrefixQuery(java.lang.String, java.net.InetAddress, int) @LUCENE-7232, +++ b/.github/PULL_REQUEST_TEMPLATE.md, +- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/master/.github/CONTRIBUTING.md)?, +++ b/build.gradle, +    "org.elasticsearch:client:${version}": ':client',, +    "org.elasticsearch:client-sniffer:${version}": ':client-sniffer',, +++ b/buildSrc/build.gradle, +  compile 'ru.vyarus:gradle-animalsniffer-plugin:1.0.1', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                File srcConfigFile = project.file(extraConfigFile.getValue()), +            copyConfig.from({ extraConfigFile.getValue() }) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cluster[/\\]IndicesClusterStateService.java" checks="LineLength" />, +++ b/buildSrc/src/main/resources/forbidden/es-all-signatures.txt, +, +org.apache.lucene.document.InetAddressPoint#newPrefixQuery(java.lang.String, java.net.InetAddress, int) @LUCENE-7232, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0, +lucene            = 6.0.1, +hamcrest          = 1.3, +securemock        = 1.2, +++ b/.github/PULL_REQUEST_TEMPLATE.md, +- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/master/.github/CONTRIBUTING.md)?, +++ b/build.gradle, +    "org.elasticsearch:client:${version}": ':client',, +    "org.elasticsearch:client-sniffer:${version}": ':client-sniffer',, +++ b/buildSrc/build.gradle, +  compile 'ru.vyarus:gradle-animalsniffer-plugin:1.0.1', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                File srcConfigFile = project.file(extraConfigFile.getValue()), +            copyConfig.from({ extraConfigFile.getValue() }) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]cluster[/\\]IndicesClusterStateService.java" checks="LineLength" />, +++ b/buildSrc/src/main/resources/forbidden/es-all-signatures.txt, +, +org.apache.lucene.document.InetAddressPoint#newPrefixQuery(java.lang.String, java.net.InetAddress, int) @LUCENE-7232, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0, +lucene            = 6.0.1, +hamcrest          = 1.3, +securemock        = 1.2, +++ b/client-sniffer/build.gradle, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at]