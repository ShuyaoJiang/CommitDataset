[+++ b/test/framework/src/test/java/org/elasticsearch/transport/nio/WriteOperationTests.java, +import org.elasticsearch.common.bytes.CompositeBytesReference;, +import org.mockito.ArgumentCaptor;, +import java.util.List;, +, +    public void testMultipleFlushesWithCompositeBuffer() throws IOException {, +        BytesArray bytesReference1 = new BytesArray(new byte[10]);, +        BytesArray bytesReference2 = new BytesArray(new byte[15]);, +        BytesArray bytesReference3 = new BytesArray(new byte[3]);, +        CompositeBytesReference bytesReference = new CompositeBytesReference(bytesReference1, bytesReference2, bytesReference3);, +        WriteOperation writeOp = new WriteOperation(channel, bytesReference, listener);, +, +        ArgumentCaptor<ByteBuffer[]> buffersCaptor = ArgumentCaptor.forClass(ByteBuffer[].class);, +, +        when(channel.write(buffersCaptor.capture())).thenReturn(5), +            .thenReturn(5), +            .thenReturn(2), +            .thenReturn(15), +            .thenReturn(1);, +, +        writeOp.flush();, +        assertFalse(writeOp.isFullyFlushed());, +        writeOp.flush();, +        assertFalse(writeOp.isFullyFlushed());, +        writeOp.flush();, +        assertFalse(writeOp.isFullyFlushed());, +        writeOp.flush();, +        assertFalse(writeOp.isFullyFlushed());, +        writeOp.flush();, +        assertTrue(writeOp.isFullyFlushed());, +, +        List<ByteBuffer[]> values = buffersCaptor.getAllValues();, +        ByteBuffer[] byteBuffers = values.get(0);, +        assertEquals(3, byteBuffers.length);, +        assertEquals(10, byteBuffers[0].remaining());, +, +        byteBuffers = values.get(1);, +        assertEquals(3, byteBuffers.length);, +        assertEquals(5, byteBuffers[0].remaining());, +, +        byteBuffers = values.get(2);, +        assertEquals(2, byteBuffers.length);, +        assertEquals(15, byteBuffers[0].remaining());, +, +        byteBuffers = values.get(3);, +        assertEquals(2, byteBuffers.length);, +        assertEquals(13, byteBuffers[0].remaining());, +, +        byteBuffers = values.get(4);, +        assertEquals(1, byteBuffers.length);, +        assertEquals(1, byteBuffers[0].remaining());, +    }]