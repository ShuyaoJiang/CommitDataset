[+++ b/core-signatures.txt, +, +@defaultMessage Beware of the behavior of this method on MIN_VALUE, +java.lang.Math#abs(int), +java.lang.Math#abs(long), +++ b/core-signatures.txt, +, +@defaultMessage Beware of the behavior of this method on MIN_VALUE, +java.lang.Math#abs(int), +java.lang.Math#abs(long), +++ b/pom.xml, +                                <!-- start excludes for Math.abs -->, +                                <exclude>org/elasticsearch/common/util/MathUtils.class</exclude>, +                                <exclude>org/elasticsearch/common/math/UnboxedMathUtils.class</exclude>, +                                <!-- end excludes for Math.abs -->, +++ b/core-signatures.txt, +, +@defaultMessage Beware of the behavior of this method on MIN_VALUE, +java.lang.Math#abs(int), +java.lang.Math#abs(long), +++ b/pom.xml, +                                <!-- start excludes for Math.abs -->, +                                <exclude>org/elasticsearch/common/util/MathUtils.class</exclude>, +                                <exclude>org/elasticsearch/common/math/UnboxedMathUtils.class</exclude>, +                                <!-- end excludes for Math.abs -->, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataService.java, +import org.elasticsearch.common.math.MathUtils;, +        return indexMdLocks[MathUtils.mod(DjbHashFunction.DJB_HASH(index), indexMdLocks.length)];, +++ b/core-signatures.txt, +, +@defaultMessage Beware of the behavior of this method on MIN_VALUE, +java.lang.Math#abs(int), +java.lang.Math#abs(long), +++ b/pom.xml, +                                <!-- start excludes for Math.abs -->, +                                <exclude>org/elasticsearch/common/util/MathUtils.class</exclude>, +                                <exclude>org/elasticsearch/common/math/UnboxedMathUtils.class</exclude>, +                                <!-- end excludes for Math.abs -->, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataService.java, +import org.elasticsearch.common.math.MathUtils;, +        return indexMdLocks[MathUtils.mod(DjbHashFunction.DJB_HASH(index), indexMdLocks.length)];, +++ b/src/main/java/org/elasticsearch/cluster/routing/operation/plain/PlainOperationRouting.java, +import org.elasticsearch.common.math.MathUtils;, +                return MathUtils.mod(hash(id), indexMetaData(clusterState, index).numberOfShards());, +                return MathUtils.mod(hash(type, id), indexMetaData(clusterState, index).numberOfShards());, +        return MathUtils.mod(hash(routing), indexMetaData(clusterState, index).numberOfShards());, +++ b/core-signatures.txt, +, +@defaultMessage Beware of the behavior of this method on MIN_VALUE, +java.lang.Math#abs(int), +java.lang.Math#abs(long), +++ b/pom.xml, +                                <!-- start excludes for Math.abs -->, +                                <exclude>org/elasticsearch/common/util/MathUtils.class</exclude>, +                                <exclude>org/elasticsearch/common/math/UnboxedMathUtils.class</exclude>, +                                <!-- end excludes for Math.abs -->, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataService.java, +import org.elasticsearch.common.math.MathUtils;, +        return indexMdLocks[MathUtils.mod(DjbHashFunction.DJB_HASH(index), indexMdLocks.length)];, +++ b/src/main/java/org/elasticsearch/cluster/routing/operation/plain/PlainOperationRouting.java, +import org.elasticsearch.common.math.MathUtils;, +                return MathUtils.mod(hash(id), indexMetaData(clusterState, index).numberOfShards());, +                return MathUtils.mod(hash(type, id), indexMetaData(clusterState, index).numberOfShards());, +        return MathUtils.mod(hash(routing), indexMetaData(clusterState, index).numberOfShards());, +++ b/src/main/java/org/elasticsearch/common/math/MathUtils.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.math;, +, +public enum MathUtils {, +    ;, +, +    /**, +     * Return the (positive) remainder of the division of <code>v</code> by <code>mod</code>., +     */, +    public static int mod(int v, int m) {, +        int r = v % m;, +        if (r < 0) {, +            r += m;, +        }, +        return r;, +    }, +]