[+++ b/src/main/java/org/elasticsearch/indices/store/IndicesStore.java, +import org.elasticsearch.common.unit.ByteSizeUnit;, +        // we limit with 20MB / sec by default with a default type set to merge sice 0.90.1, +        this.rateLimitingType = componentSettings.get("throttle.type", StoreRateLimiting.Type.MERGE.name());, +        this.rateLimitingThrottle = componentSettings.getAsBytesSize("throttle.max_bytes_per_sec", new ByteSizeValue(20, ByteSizeUnit.MB));, +++ b/src/main/java/org/elasticsearch/indices/store/IndicesStore.java, +import org.elasticsearch.common.unit.ByteSizeUnit;, +        // we limit with 20MB / sec by default with a default type set to merge sice 0.90.1, +        this.rateLimitingType = componentSettings.get("throttle.type", StoreRateLimiting.Type.MERGE.name());, +        this.rateLimitingThrottle = componentSettings.getAsBytesSize("throttle.max_bytes_per_sec", new ByteSizeValue(20, ByteSizeUnit.MB));, +++ b/src/test/java/org/elasticsearch/test/integration/indices/store/SimpleDistributorTests.java, +        assertThat(storeString, startsWith("store(least_used[rate_limited(niofs(" + dataPath1 ));, +        assertThat(storeString, containsString("), rate_limited(niofs(" + dataPath2));, +        assertThat(storeString, endsWith(", type=MERGE, rate=20.0)])"));, +        assertThat(storeString, startsWith("store(random[rate_limited(niofs(" + dataPath1 ));, +        assertThat(storeString, containsString("), rate_limited(niofs(" + dataPath2));, +        assertThat(storeString, endsWith(", type=MERGE, rate=20.0)])"));, +        assertThat(storeString, startsWith("store(least_used[rate_limited(mmapfs(" + dataPath1));, +        assertThat(storeString, containsString("), rate_limited(mmapfs(" + dataPath2));, +        assertThat(storeString, endsWith(", type=MERGE, rate=20.0)])"));, +        assertThat(storeString, startsWith("store(least_used[rate_limited(simplefs(" + dataPath1));, +        assertThat(storeString, containsString("), rate_limited(simplefs(" + dataPath2));, +        assertThat(storeString, endsWith(", type=MERGE, rate=20.0)])"));, +        createIndexWithoutRateLimitingStoreType("node1", "test", "niofs", "least_used");, +        assertThat(storeString, startsWith("store(least_used[niofs(" + dataPath1 ));, +        assertThat(storeString, containsString("), niofs(" + dataPath2));, +        assertThat(storeString, endsWith(")])"));, +    private void createIndexWithoutRateLimitingStoreType(String nodeId, String index, String storeType, String distributor) {, +                        .put("index.store.throttle.type", "none")]