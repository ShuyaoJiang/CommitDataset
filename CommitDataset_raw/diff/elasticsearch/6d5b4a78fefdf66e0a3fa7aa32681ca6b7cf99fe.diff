[+++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +                if (parser.currentToken() != XContentParser.Token.END_OBJECT) {, +                    throw new ParsingException(parser.getTokenLocation(),, +                            "expected [END_OBJECT] but got [{}], possibly too many query clauses", parser.currentToken());, +                }, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +                if (parser.currentToken() != XContentParser.Token.END_OBJECT) {, +                    throw new ParsingException(parser.getTokenLocation(),, +                            "expected [END_OBJECT] but got [{}], possibly too many query clauses", parser.currentToken());, +                }, +++ b/core/src/test/java/org/elasticsearch/index/query/BoolQueryBuilderTests.java, +import org.elasticsearch.common.ParsingException;, +    /**, +     * test that unknown query names in the clauses throw an error, +     */, +    public void testUnknownQueryName() throws IOException {, +        String query = "{\"bool\" : {\"must\" : { \"unknown_query\" : { } } } }";, +, +        ParsingException ex = expectThrows(ParsingException.class, () -> parseQuery(query, ParseFieldMatcher.EMPTY));, +        assertEquals("no [query] registered for [unknown_query]", ex.getMessage());, +    }, +, +    /**, +     * test that two queries in object throws error, +     */, +    public void testTooManyQueriesInObject() throws IOException {, +        String clauseType = randomFrom(new String[] {"must", "should", "must_not", "filter"});, +        // should also throw error if invalid query is preceded by a valid one, +        String query = "{\"bool\" : {\"" + clauseType, +                + "\" : { \"match\" : { \"foo\" : \"bar\" } , \"match\" : { \"baz\" : \"buzz\" } } } }";, +        ParsingException ex = expectThrows(ParsingException.class, () -> parseQuery(query, ParseFieldMatcher.EMPTY));, +        assertEquals("expected [END_OBJECT] but got [FIELD_NAME], possibly too many query clauses", ex.getMessage());, +    }, +]