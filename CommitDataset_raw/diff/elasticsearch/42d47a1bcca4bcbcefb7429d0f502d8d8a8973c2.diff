[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/README.md, +elasticsearch-license, +=====================, +, +Internal Elasticsearch Licensing Plugin, +, +## Command Line tools (Interface with Internal License Server), +, +### Setup, +```bash, +# clone elasticsearch if not already cloned; go to elasticsearch project directory, +git clone git@github.com:elasticsearch/elasticsearch.git, +cd elasticsearch, +, +# checkout 1.4 branch, +git checkout 1.4, +, +# install elasticsearch 1.4, +mvn clean install -DskipTests=true, +, +# clone elasticsearch-license; go to elasticsearch-license project directory, +git clone git@github.com:elasticsearch/elasticsearch-license.git, +cd elasticsearch-license, +, +# TEMPORARY (switch to dev branch), +git checkout dev, +, +# build, +mvn clean package, +, +```, +, +### bin/key-pair-generator, +, +Generates a 2048-bit RSA public/private key pair to be used for license generation & validation, +, +**Note:** Errors if provided file paths for public/private already exists, +, +**Output** - public/private key in the location provided, +, +**Options:**, +`--publicKeyPath` - path to store the public key, +`--privateKeyPath` - path to store the private key, +, +**Example Usage:**, +```bash, +$ bin/key-pair-generator --publicKeyPath ~/.es_temp_license/pub.key --privateKeyPath ~/.es_temp_license/pri.key, +```, +Outputs the public key to `~/.es_temp_license/pub.key`, private key to `~/.es_temp_license/pri.key` , +, +### bin/license-generator, +Generates a signed license given a licensing spec and keyPair location, +, +**Note:** a `license spec` (see format below) can be provided in two ways, using `--license` allows for passing the spec as a string using `--licenseFile` allows passing in a file that has the license spec, +, +**Output** - a signed license based on the provided `license spec`, private/public key location, +, +**Options:**, +`--license` - license spec as a string (optional when `--licenseFile` is provided), +`--licenseFile` - path to a license spec file (optional when `--license` is provided), +`--publicKeyPath` - path to retrieve the public key, +`--privateKeyPath` - path to retrieve the private key, +, +**License Spec format:**, +```, +{, +    "licenses": [, +        {, +            "uid": STRING (optional, if not provided a random UUID is generated), +            "type": STRING (“trial” | “internal” | “subscription”),, +            "subscription_type": STRING (“none” | “gold” | “silver” | “platinum”),, +            "issued_to": STRING,, +            "issuer": STRING,]