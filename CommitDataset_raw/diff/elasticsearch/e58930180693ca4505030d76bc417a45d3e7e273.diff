[+++ b/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +                searcher.close();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +                searcher.close();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +                SearchContext.current().close();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +                searcher.close();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +                SearchContext.current().close();, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +            context.close();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +                searcher.close();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +                SearchContext.current().close();, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +            context.close();, +++ b/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.close();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +                searcher.close();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +                SearchContext.current().close();, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +            context.close();, +++ b/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.close();, +++ b/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +            searcher.close();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +                searcher.close();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +                SearchContext.current().close();, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +            context.close();, +++ b/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.close();, +++ b/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +            searcher.close();, +++ b/src/main/java/org/elasticsearch/common/bytes/ReleasablePagedBytesReference.java, +    public void close() throws ElasticsearchException {, +        Releasables.close(bytearray);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +                searcher.close();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +                SearchContext.current().close();, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +            context.close();, +++ b/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.close();, +++ b/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +            searcher.close();, +++ b/src/main/java/org/elasticsearch/common/bytes/ReleasablePagedBytesReference.java, +    public void close() throws ElasticsearchException {, +        Releasables.close(bytearray);, +++ b/src/main/java/org/elasticsearch/common/lease/Releasable.java, + * Specialization of {@link AutoCloseable} that may only throw an {@link ElasticsearchException}., +public interface Releasable extends AutoCloseable {, +    void close() throws ElasticsearchException;, +++ b/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +                searcher.close();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +                SearchContext.current().close();, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +            context.close();, +++ b/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.close();, +++ b/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +            searcher.close();, +++ b/src/main/java/org/elasticsearch/common/bytes/ReleasablePagedBytesReference.java, +    public void close() throws ElasticsearchException {, +        Releasables.close(bytearray);, +++ b/src/main/java/org/elasticsearch/common/lease/Releasable.java, + * Specialization of {@link AutoCloseable} that may only throw an {@link ElasticsearchException}., +public interface Releasable extends AutoCloseable {, +    void close() throws ElasticsearchException;, +++ b/src/main/java/org/elasticsearch/common/lease/Releasables.java, +import org.elasticsearch.ElasticsearchException;, +, +    private static void close(Iterable<? extends Releasable> releasables, boolean ignoreException) {, +                    releasable.close();, +    public static void close(Iterable<? extends Releasable> releasables) {, +        close(releasables, false);, +    public static void close(Releasable... releasables) {, +        close(Arrays.asList(releasables));, +    public static void closeWhileHandlingException(Iterable<Releasable> releasables) {, +        close(releasables, true);, +    public static void closeWhileHandlingException(Releasable... releasables) {, +        closeWhileHandlingException(Arrays.asList(releasables));, +    public static void close(boolean success, Iterable<Releasable> releasables) {, +            close(releasables);, +            closeWhileHandlingException(releasables);, +    public static void close(boolean success, Releasable... releasables) {, +        close(success, Arrays.asList(releasables));, +    }, +, +    /** Wrap several releasables into a single one. This is typically useful for use with try-with-resources: for example let's assume, +     *  that you store in a list several resources that you would like to see released after execution of the try block:, +     *]