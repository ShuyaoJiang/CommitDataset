[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestTests.java, +import org.elasticsearch.action.support.replication.ReplicatedWriteRequest;, +        enrichDocWriteRequest(deleteRequest, expectedParams);, +        enrichReplicationRequest(deleteRequest, expectedParams);, +        enrichDocWriteRequest(indexRequest, expectedParams);, +        enrichReplicationRequest(indexRequest, expectedParams);, +, +    private void enrichReplicationRequest(ReplicatedWriteRequest request, Map<String, String> expectedParams) {, +        if (randomBoolean()) {, +            String timeout = randomTimeValue();, +            request.timeout(timeout);, +            expectedParams.put("timeout", timeout);, +        } else {, +            expectedParams.put("timeout", ReplicationRequest.DEFAULT_TIMEOUT.getStringRep());, +        }, +, +        if (randomBoolean()) {, +            WriteRequest.RefreshPolicy refreshPolicy = randomFrom(WriteRequest.RefreshPolicy.values());, +            request.setRefreshPolicy(refreshPolicy);, +            if (refreshPolicy != WriteRequest.RefreshPolicy.NONE) {, +                expectedParams.put("refresh", refreshPolicy.getValue());, +            }, +        }, +    }, +, +    private void enrichDocWriteRequest(DocWriteRequest request, Map<String, String> expectedParams) {, +        // There is some logic around _create endpoint and version/version type, +        if (request.opType() == DocWriteRequest.OpType.CREATE) {, +            request.version(randomFrom(Versions.MATCH_ANY, Versions.MATCH_DELETED));, +            expectedParams.put("version", Long.toString(Versions.MATCH_DELETED));, +        } else {, +            if (randomBoolean()) {, +                long version = randomFrom(Versions.MATCH_ANY, Versions.MATCH_DELETED, Versions.NOT_FOUND, randomNonNegativeLong());, +                request.version(version);, +                if (version != Versions.MATCH_ANY) {, +                    expectedParams.put("version", Long.toString(version));, +                }, +            }, +            if (randomBoolean()) {, +                VersionType versionType = randomFrom(VersionType.values());, +                request.versionType(versionType);, +                if (versionType != VersionType.INTERNAL) {, +                    expectedParams.put("version_type", versionType.name().toLowerCase(Locale.ROOT));, +                }, +            }, +        }, +    }]