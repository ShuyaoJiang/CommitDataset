[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +import org.elasticsearch.util.Unicode;, +import java.util.Arrays;, + * A request to count the number of documents matching a specific query. Best created with, + * {@link org.elasticsearch.client.Requests#countRequest(String...)}., + *, + * <p>The request requires the query source to be set either using {@link #querySource(org.elasticsearch.index.query.QueryBuilder)},, + * or {@link #querySource(byte[])}., + *, + * @author kimchy (shay.banon), + * @see CountResponse, + * @see org.elasticsearch.client.Client#count(CountRequest), + * @see org.elasticsearch.client.Requests#countRequest(String...), +    /**, +     * Constructs a new count request against the provided indices. No indices provided means it will, +     * run against all indices., +     */, +    /**, +     * Controls the operation threading model., +     */, +    /**, +     * Should the listener be called on a separate thread if needed., +     */, +    /**, +     * A query hint to optionally later be used when routing the request., +     */, +    /**, +     * The minimum score of the documents to include in the count., +     */, +    /**, +     * The minimum score of the documents to include in the count. Defaults to <tt>-1</tt> which means all, +     * documents will be included in the count., +     */, +    /**, +     * The query source to execute., +     */, +    /**, +     * The query source to execute., +     *, +     * @see org.elasticsearch.index.query.json.JsonQueryBuilders, +     */, +    /**, +     * The query source to execute. It is preferable to use either {@link #querySource(byte[])}, +     * or {@link #querySource(org.elasticsearch.index.query.QueryBuilder)}., +     */, +    @Required public CountRequest querySource(String querySource) {, +        return querySource(Unicode.fromStringAsBytes(querySource));, +    }, +, +    /**, +     * The query source to execute., +     */, +    @Required public CountRequest querySource(byte[] querySource) {, +    /**, +     * The query parse name to use. If not set, will use the default one., +     */, +    /**, +     * The query parse name to use. If not set, will use the default one., +     */, +    /**, +     * The types of documents the query will run against. Defaults to all types., +     */, +    /**, +     * The types of documents the query will run against. Defaults to all types., +     */, +, +    @Override public String toString() {, +        return "[" + Arrays.toString(indices) + "][" + Arrays.toString(types) + "], querySource[" + Unicode.fromBytes(querySource) + "]";, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +import org.elasticsearch.util.Unicode;, +import java.util.Arrays;, + * A request to count the number of documents matching a specific query. Best created with, + * {@link org.elasticsearch.client.Requests#countRequest(String...)}., + *, + * <p>The request requires the query source to be set either using {@link #querySource(org.elasticsearch.index.query.QueryBuilder)},, + * or {@link #querySource(byte[])}., + *, + * @author kimchy (shay.banon), + * @see CountResponse, + * @see org.elasticsearch.client.Client#count(CountRequest), + * @see org.elasticsearch.client.Requests#countRequest(String...), +    /**, +     * Constructs a new count request against the provided indices. No indices provided means it will, +     * run against all indices., +     */, +    /**, +     * Controls the operation threading model., +     */, +    /**, +     * Should the listener be called on a separate thread if needed., +     */, +    /**, +     * A query hint to optionally later be used when routing the request., +     */, +    /**, +     * The minimum score of the documents to include in the count., +     */, +    /**, +     * The minimum score of the documents to include in the count. Defaults to <tt>-1</tt> which means all]