[+++ b/src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java, +        if (currentNodeId != null ? !currentNodeId.equals(that.currentNodeId) : that.currentNodeId != null) {, +        }, +        if (relocatingNodeId != null ? !relocatingNodeId.equals(that.relocatingNodeId) : that.relocatingNodeId != null) {, +        }, +        if (restoreSource != null ? !restoreSource.equals(that.restoreSource) : that.restoreSource != null) {, +        }, +++ b/src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java, +        if (currentNodeId != null ? !currentNodeId.equals(that.currentNodeId) : that.currentNodeId != null) {, +        }, +        if (relocatingNodeId != null ? !relocatingNodeId.equals(that.relocatingNodeId) : that.relocatingNodeId != null) {, +        }, +        if (restoreSource != null ? !restoreSource.equals(that.restoreSource) : that.restoreSource != null) {, +        }, +++ b/src/main/java/org/elasticsearch/gateway/Gateway.java, +import org.elasticsearch.indices.IndicesService;, +    public Gateway(Settings settings, ClusterService clusterService, NodeEnvironment nodeEnv, GatewayMetaState metaState,, +++ b/src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java, +        if (currentNodeId != null ? !currentNodeId.equals(that.currentNodeId) : that.currentNodeId != null) {, +        }, +        if (relocatingNodeId != null ? !relocatingNodeId.equals(that.relocatingNodeId) : that.relocatingNodeId != null) {, +        }, +        if (restoreSource != null ? !restoreSource.equals(that.restoreSource) : that.restoreSource != null) {, +        }, +++ b/src/main/java/org/elasticsearch/gateway/Gateway.java, +import org.elasticsearch.indices.IndicesService;, +    public Gateway(Settings settings, ClusterService clusterService, NodeEnvironment nodeEnv, GatewayMetaState metaState,, +++ b/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java, +import org.elasticsearch.discovery.Discovery;, +        if (DiscoveryNode.dataNode(settings)) {, +            ensureNoPre019ShardState(nodeEnv);, +        }, +, +, +    // shard state BWC, +    private void ensureNoPre019ShardState(NodeEnvironment nodeEnv) throws Exception {, +        for (Path dataLocation : nodeEnv.nodeDataPaths()) {, +            final Path stateLocation = dataLocation.resolve(MetaDataStateFormat.STATE_DIR_NAME);, +            if (Files.exists(stateLocation)) {, +                try (DirectoryStream<Path> stream = Files.newDirectoryStream(stateLocation, "shards-*")) {, +                    for (Path stateFile : stream) {, +                        throw new ElasticsearchIllegalStateException("Detected pre 0.19 shard state file please upgrade to a version before ", +                                + Version.CURRENT.minimumCompatibilityVersion(), +                                + " first to upgrade state structures - shard state found: [" + stateFile.getParent().toAbsolutePath());, +                    }, +                }, +            }, +        }, +    }, +++ b/src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java, +        if (currentNodeId != null ? !currentNodeId.equals(that.currentNodeId) : that.currentNodeId != null) {, +        }, +        if (relocatingNodeId != null ? !relocatingNodeId.equals(that.relocatingNodeId) : that.relocatingNodeId != null) {, +        }, +        if (restoreSource != null ? !restoreSource.equals(that.restoreSource) : that.restoreSource != null) {, +        }, +++ b/src/main/java/org/elasticsearch/gateway/Gateway.java, +import org.elasticsearch.indices.IndicesService;, +    public Gateway(Settings settings, ClusterService clusterService, NodeEnvironment nodeEnv, GatewayMetaState metaState,, +++ b/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java, +import org.elasticsearch.discovery.Discovery;, +        if (DiscoveryNode.dataNode(settings)) {, +            ensureNoPre019ShardState(nodeEnv);, +        }, +, +, +    // shard state BWC, +    private void ensureNoPre019ShardState(NodeEnvironment nodeEnv) throws Exception {, +        for (Path dataLocation : nodeEnv.nodeDataPaths()) {, +            final Path stateLocation = dataLocation.resolve(MetaDataStateFormat.STATE_DIR_NAME);, +            if (Files.exists(stateLocation)) {, +                try (DirectoryStream<Path> stream = Files.newDirectoryStream(stateLocation, "shards-*")) {, +                    for (Path stateFile : stream) {, +                        throw new ElasticsearchIllegalStateException("Detected pre 0.19 shard state file please upgrade to a version before ", +                                + Version.CURRENT.minimumCompatibilityVersion(), +                                + " first to upgrade state structures - shard state found: [" + stateFile.getParent().toAbsolutePath());, +                    }, +                }, +            }, +        }, +    }, +++ b/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +++ b/src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java, +        if (currentNodeId != null ? !currentNodeId.equals(that.currentNodeId) : that.currentNodeId != null) {, +        }, +        if (relocatingNodeId != null ? !relocatingNodeId.equals(that.relocatingNodeId) : that.relocatingNodeId != null) {, +        }, +        if (restoreSource != null ? !restoreSource.equals(that.restoreSource) : that.restoreSource != null) {, +        }, +++ b/src/main/java/org/elasticsearch/gateway/Gateway.java, +import org.elasticsearch.indices.IndicesService;, +    public Gateway(Settings settings, ClusterService clusterService, NodeEnvironment nodeEnv, GatewayMetaState metaState,, +++ b/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java, +import org.elasticsearch.discovery.Discovery;, +        if (DiscoveryNode.dataNode(settings)) {, +            ensureNoPre019ShardState(nodeEnv);, +        }, +, +, +    // shard state BWC]