[+++ b/src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java, +        int offset = createEdges(0, orientation, shell, null, edges, 0);, +            int length = createEdges(i+1, orientation, shell, this.holes.get(i), edges, offset);, +    private static int createEdges(int component, Orientation orientation, BaseLineStringBuilder<?> shell,, +        // XOR will invert the orientation for outer ring cases (Truth Table:, T/T = F, T/F = T, F/T = T, F/F = F), +        boolean direction = (component != 0 ^ orientation == Orientation.RIGHT);, +        Edge.ring(component, direction, orientation == Orientation.LEFT, shell, points, 0, edges, offset, points.length-1);, +++ b/src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java, +        int offset = createEdges(0, orientation, shell, null, edges, 0);, +            int length = createEdges(i+1, orientation, shell, this.holes.get(i), edges, offset);, +    private static int createEdges(int component, Orientation orientation, BaseLineStringBuilder<?> shell,, +        // XOR will invert the orientation for outer ring cases (Truth Table:, T/T = F, T/F = T, F/T = T, F/F = F), +        boolean direction = (component != 0 ^ orientation == Orientation.RIGHT);, +        Edge.ring(component, direction, orientation == Orientation.LEFT, shell, points, 0, edges, offset, points.length-1);, +++ b/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +        LEFT,, +        RIGHT;, +        public static final Orientation CLOCKWISE = Orientation.LEFT;, +        public static final Orientation COUNTER_CLOCKWISE = Orientation.RIGHT;, +        public static final Orientation CW = Orientation.LEFT;, +        public static final Orientation CCW = Orientation.RIGHT;]