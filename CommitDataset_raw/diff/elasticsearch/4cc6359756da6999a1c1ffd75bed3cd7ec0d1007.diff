[+++ b/core/pom.xml, +            <groupId>org.apache.commons</groupId>, +            <artifactId>commons-lang3</artifactId>, +        </dependency>, +        <dependency>, +++ b/core/pom.xml, +            <groupId>org.apache.commons</groupId>, +            <artifactId>commons-lang3</artifactId>, +        </dependency>, +        <dependency>, +++ b/core/src/main/assemblies/common-bin.xml, +                <include>org.apache.commons:commons-lang3</include>, +++ b/core/pom.xml, +            <groupId>org.apache.commons</groupId>, +            <artifactId>commons-lang3</artifactId>, +        </dependency>, +        <dependency>, +++ b/core/src/main/assemblies/common-bin.xml, +                <include>org.apache.commons:commons-lang3</include>, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/core/pom.xml, +            <groupId>org.apache.commons</groupId>, +            <artifactId>commons-lang3</artifactId>, +        </dependency>, +        <dependency>, +++ b/core/src/main/assemblies/common-bin.xml, +                <include>org.apache.commons:commons-lang3</include>, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        for (Class<? extends LifecycleComponent> plugin : injector.getInstance(PluginsService.class).services()) {, +++ b/core/pom.xml, +            <groupId>org.apache.commons</groupId>, +            <artifactId>commons-lang3</artifactId>, +        </dependency>, +        <dependency>, +++ b/core/src/main/assemblies/common-bin.xml, +                <include>org.apache.commons:commons-lang3</include>, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        for (Class<? extends LifecycleComponent> plugin : injector.getInstance(PluginsService.class).services()) {, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(nodeName, nodeId, NetworkUtils.getLocalHost().getHostName(), NetworkUtils.getLocalHost().getHostAddress(), address, attributes, version);, +++ b/core/pom.xml, +            <groupId>org.apache.commons</groupId>, +            <artifactId>commons-lang3</artifactId>, +        </dependency>, +        <dependency>, +++ b/core/src/main/assemblies/common-bin.xml, +                <include>org.apache.commons:commons-lang3</include>, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        for (Class<? extends LifecycleComponent> plugin : injector.getInstance(PluginsService.class).services()) {, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(nodeName, nodeId, NetworkUtils.getLocalHost().getHostName(), NetworkUtils.getLocalHost().getHostAddress(), address, attributes, version);, +++ b/core/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +        DiscoveryNode localNode = new DiscoveryNode(settings.get("name"), nodeId, transportService.boundAddress().publishAddress(), nodeAttributes, version);, +++ b/core/pom.xml, +            <groupId>org.apache.commons</groupId>, +            <artifactId>commons-lang3</artifactId>, +        </dependency>, +        <dependency>, +++ b/core/src/main/assemblies/common-bin.xml, +                <include>org.apache.commons:commons-lang3</include>, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        for (Class<? extends LifecycleComponent> plugin : injector.getInstance(PluginsService.class).services()) {, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(nodeName, nodeId, NetworkUtils.getLocalHost().getHostName(), NetworkUtils.getLocalHost().getHostAddress(), address, attributes, version);, +++ b/core/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +        DiscoveryNode localNode = new DiscoveryNode(settings.get("name"), nodeId, transportService.boundAddress().publishAddress(), nodeAttributes, version);, +++ b/core/src/main/java/org/elasticsearch/common/cli/CheckFileCommand.java, +                    boolean supportsPosixPermissions = Files.getFileStore(path).supportsFileAttributeView(PosixFileAttributeView.class);, +++ b/core/pom.xml, +            <groupId>org.apache.commons</groupId>, +            <artifactId>commons-lang3</artifactId>, +        </dependency>, +        <dependency>, +++ b/core/src/main/assemblies/common-bin.xml, +                <include>org.apache.commons:commons-lang3</include>, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        for (Class<? extends LifecycleComponent> plugin : injector.getInstance(PluginsService.class).services()) {, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(nodeName, nodeId, NetworkUtils.getLocalHost().getHostName(), NetworkUtils.getLocalHost().getHostAddress(), address, attributes, version);, +++ b/core/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +        DiscoveryNode localNode = new DiscoveryNode(settings.get("name"), nodeId, transportService.boundAddress().publishAddress(), nodeAttributes, version);, +++ b/core/src/main/java/org/elasticsearch/common/cli/CheckFileCommand.java, +                    boolean supportsPosixPermissions = Files.getFileStore(path).supportsFileAttributeView(PosixFileAttributeView.class);, +++ b/core/src/main/java/org/elasticsearch/common/cli/CliTool.java, +import org.apache.commons.cli.GnuParser;, +++ b/core/pom.xml, +            <groupId>org.apache.commons</groupId>, +            <artifactId>commons-lang3</artifactId>, +        </dependency>, +        <dependency>, +++ b/core/src/main/assemblies/common-bin.xml, +                <include>org.apache.commons:commons-lang3</include>, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        for (Class<? extends LifecycleComponent> plugin : injector.getInstance(PluginsService.class).services()) {]