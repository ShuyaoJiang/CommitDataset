[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java, +    private IndicesOptions indicesOptions = IndicesOptions.strictExpand();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java, +    private IndicesOptions indicesOptions = IndicesOptions.strictExpand();, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +     * Index setting to control if a flush is executed before engine is closed. The default is <code>true</code>, +     */, +    public static final String INDEX_FLUSH_ON_CLOSE = "index.flush_on_close";, +, +    /**, +    private final boolean flushOnClose;, +        flushOnClose = settings.getAsBoolean(IndexSettings.INDEX_FLUSH_ON_CLOSE, true);, +     * Returns <code>true</code> iff this index should be flushed on close. Default is <code>true</code>, +     */, +    public boolean isFlushOnClose() { return flushOnClose; }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java, +    private IndicesOptions indicesOptions = IndicesOptions.strictExpand();, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +     * Index setting to control if a flush is executed before engine is closed. The default is <code>true</code>, +     */, +    public static final String INDEX_FLUSH_ON_CLOSE = "index.flush_on_close";, +, +    /**, +    private final boolean flushOnClose;, +        flushOnClose = settings.getAsBoolean(IndexSettings.INDEX_FLUSH_ON_CLOSE, true);, +     * Returns <code>true</code> iff this index should be flushed on close. Default is <code>true</code>, +     */, +    public boolean isFlushOnClose() { return flushOnClose; }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                    if (engine != null && flushEngine && indexSettings.isFlushOnClose()) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java, +    private IndicesOptions indicesOptions = IndicesOptions.strictExpand();, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +     * Index setting to control if a flush is executed before engine is closed. The default is <code>true</code>, +     */, +    public static final String INDEX_FLUSH_ON_CLOSE = "index.flush_on_close";, +, +    /**, +    private final boolean flushOnClose;, +        flushOnClose = settings.getAsBoolean(IndexSettings.INDEX_FLUSH_ON_CLOSE, true);, +     * Returns <code>true</code> iff this index should be flushed on close. Default is <code>true</code>, +     */, +    public boolean isFlushOnClose() { return flushOnClose; }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                    if (engine != null && flushEngine && indexSettings.isFlushOnClose()) {, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +    public void testFlushOnDeleteSetting() throws Exception {, +        final boolean booleanValue = randomBoolean();, +        createIndex("test", settingsBuilder().put(IndexSettings.INDEX_FLUSH_ON_CLOSE, booleanValue).build());, +        ensureGreen();, +        IndicesService indicesService = getInstanceFromNode(IndicesService.class);, +        IndexService test = indicesService.indexService("test");, +        IndexShard shard = test.getShardOrNull(0);, +        assertEquals(booleanValue, shard.getIndexSettings().isFlushOnClose());, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java, +    private IndicesOptions indicesOptions = IndicesOptions.strictExpand();, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +     * Index setting to control if a flush is executed before engine is closed. The default is <code>true</code>, +     */, +    public static final String INDEX_FLUSH_ON_CLOSE = "index.flush_on_close";, +, +    /**, +    private final boolean flushOnClose;, +        flushOnClose = settings.getAsBoolean(IndexSettings.INDEX_FLUSH_ON_CLOSE, true);, +     * Returns <code>true</code> iff this index should be flushed on close. Default is <code>true</code>, +     */, +    public boolean isFlushOnClose() { return flushOnClose; }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                    if (engine != null && flushEngine && indexSettings.isFlushOnClose()) {, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +    public void testFlushOnDeleteSetting() throws Exception {, +        final boolean booleanValue = randomBoolean();, +        createIndex("test", settingsBuilder().put(IndexSettings.INDEX_FLUSH_ON_CLOSE, booleanValue).build());, +        ensureGreen();, +        IndicesService indicesService = getInstanceFromNode(IndicesService.class);, +        IndexService test = indicesService.indexService("test");, +        IndexShard shard = test.getShardOrNull(0);, +        assertEquals(booleanValue, shard.getIndexSettings().isFlushOnClose());, +    }, +, +++ b/core/src/test/java/org/elasticsearch/index/store/CorruptedTranslogIT.java, +        // we really need local GW here since this also checks for corruption etc., +        // and we need to make sure primaries are not just trashed if we don't have replicas, +        return pluginList(MockTransportService.TestPlugin.class);, +                .put(MockEngineSupport.FLUSH_ON_CLOSE_RATIO, 0.0d) // never flush - always recover from translog, +                .put(IndexSettings.INDEX_FLUSH_ON_CLOSE, false) // never flush - always recover from translog, +            e.printStackTrace();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java, +    private IndicesOptions indicesOptions = IndicesOptions.strictExpand();, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java]