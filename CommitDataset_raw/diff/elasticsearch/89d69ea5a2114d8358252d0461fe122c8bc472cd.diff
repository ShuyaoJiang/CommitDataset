[+++ b/Vagrantfile, +  config.vm.define "fedora-24" do |config|, +    config.vm.box = "elastic/fedora-24-x86_64", +++ b/Vagrantfile, +  config.vm.define "fedora-24" do |config|, +    config.vm.box = "elastic/fedora-24-x86_64", +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/Vagrantfile, +  config.vm.define "fedora-24" do |config|, +    config.vm.box = "elastic/fedora-24-x86_64", +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/build.gradle, +  compile 'org.elasticsearch:securesm:1.1', +  compile 'net.sf.jopt-simple:jopt-simple:5.0.2', +++ b/Vagrantfile, +  config.vm.define "fedora-24" do |config|, +    config.vm.box = "elastic/fedora-24-x86_64", +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/build.gradle, +  compile 'org.elasticsearch:securesm:1.1', +  compile 'net.sf.jopt-simple:jopt-simple:5.0.2', +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        headers.putAll(in.readMapOfLists());, +        out.writeMapOfLists(headers);, +++ b/Vagrantfile, +  config.vm.define "fedora-24" do |config|, +    config.vm.box = "elastic/fedora-24-x86_64", +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/build.gradle, +  compile 'org.elasticsearch:securesm:1.1', +  compile 'net.sf.jopt-simple:jopt-simple:5.0.2', +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        headers.putAll(in.readMapOfLists());, +        out.writeMapOfLists(headers);, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_2_3_4_ID = 2030499;, +    public static final Version V_2_3_4 = new Version(V_2_3_4_ID, org.apache.lucene.util.Version.LUCENE_5_5_0);, +            case V_2_3_4_ID:, +                return V_2_3_4;, +++ b/Vagrantfile, +  config.vm.define "fedora-24" do |config|, +    config.vm.box = "elastic/fedora-24-x86_64", +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/build.gradle, +  compile 'org.elasticsearch:securesm:1.1', +  compile 'net.sf.jopt-simple:jopt-simple:5.0.2', +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        headers.putAll(in.readMapOfLists());, +        out.writeMapOfLists(headers);, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_2_3_4_ID = 2030499;, +    public static final Version V_2_3_4 = new Version(V_2_3_4_ID, org.apache.lucene.util.Version.LUCENE_5_5_0);, +            case V_2_3_4_ID:, +                return V_2_3_4;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +    private static Environment initialSettings(boolean foreground, Path pidFile, Map<String, String> esSettings) {, +        if (pidFile != null) {, +            final Path pidFile,, +            // install the default uncaught exception handler; must be done before security is, +            // initialized as we do not want to grant the runtime permission, +            // setDefaultUncaughtExceptionHandler, +            Thread.setDefaultUncaughtExceptionHandler(, +                new ElasticsearchUncaughtExceptionHandler(() -> Node.NODE_NAME_SETTING.get(settings)));, +, +++ b/Vagrantfile, +  config.vm.define "fedora-24" do |config|, +    config.vm.box = "elastic/fedora-24-x86_64", +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/build.gradle, +  compile 'org.elasticsearch:securesm:1.1', +  compile 'net.sf.jopt-simple:jopt-simple:5.0.2', +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        headers.putAll(in.readMapOfLists());, +        out.writeMapOfLists(headers);, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_2_3_4_ID = 2030499;, +    public static final Version V_2_3_4 = new Version(V_2_3_4_ID, org.apache.lucene.util.Version.LUCENE_5_5_0);, +            case V_2_3_4_ID:, +                return V_2_3_4;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +    private static Environment initialSettings(boolean foreground, Path pidFile, Map<String, String> esSettings) {, +        if (pidFile != null) {, +            final Path pidFile,, +            // install the default uncaught exception handler; must be done before security is, +            // initialized as we do not want to grant the runtime permission, +            // setDefaultUncaughtExceptionHandler, +            Thread.setDefaultUncaughtExceptionHandler(, +                new ElasticsearchUncaughtExceptionHandler(() -> Node.NODE_NAME_SETTING.get(settings)));, +, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +import joptsimple.OptionSpecBuilder;, +import joptsimple.util.PathConverter;, +import joptsimple.util.PathProperties;, +import java.nio.file.Path;, +    private final OptionSpecBuilder versionOption;, +    private final OptionSpecBuilder daemonizeOption;, +    private final OptionSpec<Path> pidfileOption;, +            "Starts Elasticsearch in the background"), +            .availableUnless(versionOption);, +            .availableUnless(versionOption)]