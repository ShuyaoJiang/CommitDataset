[+++ b/pom.xml, +                                <tests.enable_mock_modules>${tests.enable_mock_modules}</tests.enable_mock_modules>, +++ b/pom.xml, +                                <tests.enable_mock_modules>${tests.enable_mock_modules}</tests.enable_mock_modules>, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java, + *   <li>-D{@value TestCluster#TESTS_ENABLE_MOCK_MODULES} - a boolean value to enable or disable mock modules. This is, + *   useful to test the system without asserting modules that to make sure they don't hide any bugs in production.</li>, +++ b/pom.xml, +                                <tests.enable_mock_modules>${tests.enable_mock_modules}</tests.enable_mock_modules>, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java, + *   <li>-D{@value TestCluster#TESTS_ENABLE_MOCK_MODULES} - a boolean value to enable or disable mock modules. This is, + *   useful to test the system without asserting modules that to make sure they don't hide any bugs in production.</li>, +++ b/src/test/java/org/elasticsearch/test/TestCluster.java, +import static com.carrotsearch.randomizedtesting.RandomizedTest.systemPropertyAsBoolean;, +import static org.apache.lucene.util.LuceneTestCase.rarely;, +import static org.apache.lucene.util.LuceneTestCase.usually;, +    /**, +     * Key used to set the shared cluster random seed via the commandline -D{@value #TESTS_CLUSTER_SEED}, +     */, +    public static final String TESTS_ENABLE_MOCK_MODULES = "tests.enable_mock_modules";, +, +    private static final boolean ENABLE_MOCK_MODULES = systemPropertyAsBoolean(TESTS_ENABLE_MOCK_MODULES, true);, +, +        if (ENABLE_MOCK_MODULES && usually(random)) {, +            builder.put("index.store.type", MockFSIndexStoreModule.class.getName()); // no RAM dir for now!, +            builder.put(IndexEngineModule.EngineSettings.ENGINE_TYPE, MockEngineModule.class.getName());, +        }, +            builder.put(Transport.TransportSettings.TRANSPORT_TCP_COMPRESS, rarely(random));, +++ b/pom.xml, +                                <tests.enable_mock_modules>${tests.enable_mock_modules}</tests.enable_mock_modules>, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java, + *   <li>-D{@value TestCluster#TESTS_ENABLE_MOCK_MODULES} - a boolean value to enable or disable mock modules. This is, + *   useful to test the system without asserting modules that to make sure they don't hide any bugs in production.</li>, +++ b/src/test/java/org/elasticsearch/test/TestCluster.java, +import static com.carrotsearch.randomizedtesting.RandomizedTest.systemPropertyAsBoolean;, +import static org.apache.lucene.util.LuceneTestCase.rarely;, +import static org.apache.lucene.util.LuceneTestCase.usually;, +    /**, +     * Key used to set the shared cluster random seed via the commandline -D{@value #TESTS_CLUSTER_SEED}, +     */, +    public static final String TESTS_ENABLE_MOCK_MODULES = "tests.enable_mock_modules";, +, +    private static final boolean ENABLE_MOCK_MODULES = systemPropertyAsBoolean(TESTS_ENABLE_MOCK_MODULES, true);, +, +        if (ENABLE_MOCK_MODULES && usually(random)) {, +            builder.put("index.store.type", MockFSIndexStoreModule.class.getName()); // no RAM dir for now!, +            builder.put(IndexEngineModule.EngineSettings.ENGINE_TYPE, MockEngineModule.class.getName());, +        }, +            builder.put(Transport.TransportSettings.TRANSPORT_TCP_COMPRESS, rarely(random));, +++ b/src/test/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java, +import org.elasticsearch.test.TestCluster;, +            appendProperties("es.logger.level", "es.node.mode", "es.node.local", TestCluster.TESTS_ENABLE_MOCK_MODULES);]