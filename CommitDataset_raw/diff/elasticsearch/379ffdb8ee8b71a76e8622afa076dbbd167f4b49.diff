[+++ b/TESTING.asciidoc, +mvn verify -Dtests.filter="@Rest", +++ b/TESTING.asciidoc, +mvn verify -Dtests.filter="@Rest", +++ b/core/pom.xml, +++ b/TESTING.asciidoc, +mvn verify -Dtests.filter="@Rest", +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +import org.elasticsearch.search.fetch.fielddata.FieldDataFieldsContext;, +    public boolean hasFieldDataFields() {, +        throw new UnsupportedOperationException();, +    }, +, +    @Override, +    public FieldDataFieldsContext fieldDataFields() {, +        throw new UnsupportedOperationException();, +    }, +, +    @Override, +++ b/TESTING.asciidoc, +mvn verify -Dtests.filter="@Rest", +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +import org.elasticsearch.search.fetch.fielddata.FieldDataFieldsContext;, +    public boolean hasFieldDataFields() {, +        throw new UnsupportedOperationException();, +    }, +, +    @Override, +    public FieldDataFieldsContext fieldDataFields() {, +        throw new UnsupportedOperationException();, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +                new AggregationModule());, +        bind(ExplainFetchSubPhase.class).asEagerSingleton();, +        bind(FieldDataFieldsFetchSubPhase.class).asEagerSingleton();, +        bind(ScriptFieldsFetchSubPhase.class).asEagerSingleton();, +        bind(FetchSourceSubPhase.class).asEagerSingleton();, +        bind(VersionFetchSubPhase.class).asEagerSingleton();, +        bind(MatchedQueriesFetchSubPhase.class).asEagerSingleton();, +        bind(HighlightPhase.class).asEagerSingleton();, +        bind(InnerHitsFetchSubPhase.class).asEagerSingleton();, +++ b/TESTING.asciidoc, +mvn verify -Dtests.filter="@Rest", +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +import org.elasticsearch.search.fetch.fielddata.FieldDataFieldsContext;, +    public boolean hasFieldDataFields() {, +        throw new UnsupportedOperationException();, +    }, +, +    @Override, +    public FieldDataFieldsContext fieldDataFields() {, +        throw new UnsupportedOperationException();, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +                new AggregationModule());, +        bind(ExplainFetchSubPhase.class).asEagerSingleton();, +        bind(FieldDataFieldsFetchSubPhase.class).asEagerSingleton();, +        bind(ScriptFieldsFetchSubPhase.class).asEagerSingleton();, +        bind(FetchSourceSubPhase.class).asEagerSingleton();, +        bind(VersionFetchSubPhase.class).asEagerSingleton();, +        bind(MatchedQueriesFetchSubPhase.class).asEagerSingleton();, +        bind(HighlightPhase.class).asEagerSingleton();, +        bind(InnerHitsFetchSubPhase.class).asEagerSingleton();, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +    public FetchPhase(HighlightPhase highlightPhase, ScriptFieldsFetchSubPhase scriptFieldsPhase,, +                      MatchedQueriesFetchSubPhase matchedQueriesPhase, ExplainFetchSubPhase explainPhase, VersionFetchSubPhase versionPhase,, +                      FetchSourceSubPhase fetchSourceSubPhase, FieldDataFieldsFetchSubPhase fieldDataFieldsFetchSubPhase, , +                      InnerHitsFetchSubPhase innerHitsFetchSubPhase) {, +        this.fetchSubPhases = new FetchSubPhase[]{scriptFieldsPhase, matchedQueriesPhase, explainPhase, highlightPhase,, +                fetchSourceSubPhase, versionPhase, fieldDataFieldsFetchSubPhase, innerHitsFetchSubPhase};, +++ b/TESTING.asciidoc, +mvn verify -Dtests.filter="@Rest", +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +import org.elasticsearch.search.fetch.fielddata.FieldDataFieldsContext;, +    public boolean hasFieldDataFields() {, +        throw new UnsupportedOperationException();, +    }, +, +    @Override, +    public FieldDataFieldsContext fieldDataFields() {, +        throw new UnsupportedOperationException();, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +                new AggregationModule());, +        bind(ExplainFetchSubPhase.class).asEagerSingleton();, +        bind(FieldDataFieldsFetchSubPhase.class).asEagerSingleton();, +        bind(ScriptFieldsFetchSubPhase.class).asEagerSingleton();, +        bind(FetchSourceSubPhase.class).asEagerSingleton();, +        bind(VersionFetchSubPhase.class).asEagerSingleton();, +        bind(MatchedQueriesFetchSubPhase.class).asEagerSingleton();]