[+++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import java.util.ArrayList;, +        int numKeys = in.readVInt();, +        for (int i = 0; i < numKeys; i++) {, +            final String key = in.readString();, +            final int numValues = in.readVInt();, +            final ArrayList<String> values = new ArrayList<>(numValues);, +            for (int j = 0; j < numValues; j++) {, +                values.add(in.readString());, +            }, +            headers.put(key, values);, +        }, +        out.writeVInt(headers.size());, +        for (Map.Entry<String, List<String>> entry : headers.entrySet()) {, +            out.writeString(entry.getKey());, +            out.writeVInt(entry.getValue().size());, +            for (String v : entry.getValue()) {, +                out.writeString(v);, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import java.util.ArrayList;, +        int numKeys = in.readVInt();, +        for (int i = 0; i < numKeys; i++) {, +            final String key = in.readString();, +            final int numValues = in.readVInt();, +            final ArrayList<String> values = new ArrayList<>(numValues);, +            for (int j = 0; j < numValues; j++) {, +                values.add(in.readString());, +            }, +            headers.put(key, values);, +        }, +        out.writeVInt(headers.size());, +        for (Map.Entry<String, List<String>> entry : headers.entrySet()) {, +            out.writeString(entry.getKey());, +            out.writeVInt(entry.getValue().size());, +            for (String v : entry.getValue()) {, +                out.writeString(v);, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import java.util.ArrayList;, +        int numKeys = in.readVInt();, +        for (int i = 0; i < numKeys; i++) {, +            final String key = in.readString();, +            final int numValues = in.readVInt();, +            final ArrayList<String> values = new ArrayList<>(numValues);, +            for (int j = 0; j < numValues; j++) {, +                values.add(in.readString());, +            }, +            headers.put(key, values);, +        }, +        out.writeVInt(headers.size());, +        for (Map.Entry<String, List<String>> entry : headers.entrySet()) {, +            out.writeString(entry.getKey());, +            out.writeVInt(entry.getValue().size());, +            for (String v : entry.getValue()) {, +                out.writeString(v);, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import java.util.ArrayList;, +        int numKeys = in.readVInt();, +        for (int i = 0; i < numKeys; i++) {, +            final String key = in.readString();, +            final int numValues = in.readVInt();, +            final ArrayList<String> values = new ArrayList<>(numValues);, +            for (int j = 0; j < numValues; j++) {, +                values.add(in.readString());, +            }, +            headers.put(key, values);, +        }, +        out.writeVInt(headers.size());, +        for (Map.Entry<String, List<String>> entry : headers.entrySet()) {, +            out.writeString(entry.getKey());, +            out.writeVInt(entry.getValue().size());, +            for (String v : entry.getValue()) {, +                out.writeString(v);, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +++ b/core/src/main/java/org/elasticsearch/common/logging/DeprecationLogger.java, +    public void deprecated(String msg, Object... params) {, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import java.util.ArrayList;, +        int numKeys = in.readVInt();, +        for (int i = 0; i < numKeys; i++) {, +            final String key = in.readString();, +            final int numValues = in.readVInt();, +            final ArrayList<String> values = new ArrayList<>(numValues);, +            for (int j = 0; j < numValues; j++) {, +                values.add(in.readString());, +            }, +            headers.put(key, values);, +        }, +        out.writeVInt(headers.size());]