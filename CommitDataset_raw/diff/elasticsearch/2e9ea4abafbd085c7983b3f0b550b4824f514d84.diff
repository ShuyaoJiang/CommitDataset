[+++ b/docs/reference/query-dsl/queries/simple-query-string-query.asciidoc, +, +|`minimum_should_match` | The minimum number of clauses that must match for a, + document to be returned. See the, + <<query-dsl-minimum-should-match,`minimum_should_match`>> documentation for the, + full list of options., +++ b/docs/reference/query-dsl/queries/simple-query-string-query.asciidoc, +, +|`minimum_should_match` | The minimum number of clauses that must match for a, + document to be returned. See the, + <<query-dsl-minimum-should-match,`minimum_should_match`>> documentation for the, + full list of options., +++ b/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java, +    private String minimumShouldMatch;, +    public SimpleQueryStringBuilder minimumShouldMatch(String minimumShouldMatch) {, +        this.minimumShouldMatch = minimumShouldMatch;, +        return this;, +    }, +, +        if (minimumShouldMatch != null) {, +            builder.field("minimum_should_match", minimumShouldMatch);, +        }, +, +++ b/docs/reference/query-dsl/queries/simple-query-string-query.asciidoc, +, +|`minimum_should_match` | The minimum number of clauses that must match for a, + document to be returned. See the, + <<query-dsl-minimum-should-match,`minimum_should_match`>> documentation for the, + full list of options., +++ b/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java, +    private String minimumShouldMatch;, +    public SimpleQueryStringBuilder minimumShouldMatch(String minimumShouldMatch) {, +        this.minimumShouldMatch = minimumShouldMatch;, +        return this;, +    }, +, +        if (minimumShouldMatch != null) {, +            builder.field("minimum_should_match", minimumShouldMatch);, +        }, +, +++ b/src/main/java/org/elasticsearch/index/query/SimpleQueryStringParser.java, +import org.apache.lucene.search.BooleanQuery;, +import org.elasticsearch.common.lucene.search.Queries;, +        String minimumShouldMatch = null;, +                } else if ("minimum_should_match".equals(currentFieldName)) {, +                    minimumShouldMatch = parser.textOrNull();, +, +        if (minimumShouldMatch != null && query instanceof BooleanQuery) {, +            Queries.applyMinimumShouldMatch((BooleanQuery) query, minimumShouldMatch);, +        }, +++ b/docs/reference/query-dsl/queries/simple-query-string-query.asciidoc, +, +|`minimum_should_match` | The minimum number of clauses that must match for a, + document to be returned. See the, + <<query-dsl-minimum-should-match,`minimum_should_match`>> documentation for the, + full list of options., +++ b/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java, +    private String minimumShouldMatch;, +    public SimpleQueryStringBuilder minimumShouldMatch(String minimumShouldMatch) {, +        this.minimumShouldMatch = minimumShouldMatch;, +        return this;, +    }, +, +        if (minimumShouldMatch != null) {, +            builder.field("minimum_should_match", minimumShouldMatch);, +        }, +, +++ b/src/main/java/org/elasticsearch/index/query/SimpleQueryStringParser.java, +import org.apache.lucene.search.BooleanQuery;, +import org.elasticsearch.common.lucene.search.Queries;, +        String minimumShouldMatch = null;, +                } else if ("minimum_should_match".equals(currentFieldName)) {, +                    minimumShouldMatch = parser.textOrNull();, +, +        if (minimumShouldMatch != null && query instanceof BooleanQuery) {, +            Queries.applyMinimumShouldMatch((BooleanQuery) query, minimumShouldMatch);, +        }, +++ b/src/test/java/org/elasticsearch/search/query/SimpleQueryStringTests.java, +    public void testSimpleQueryStringMinimumShouldMatch() throws Exception {, +        createIndex("test");, +        ensureGreen("test");, +        indexRandom(true, false,, +                client().prepareIndex("test", "type1", "1").setSource("body", "foo"),, +                client().prepareIndex("test", "type1", "2").setSource("body", "bar"),, +                client().prepareIndex("test", "type1", "3").setSource("body", "foo bar"),, +                client().prepareIndex("test", "type1", "4").setSource("body", "foo baz bar"));, +, +, +        logger.info("--> query 1");, +        SearchResponse searchResponse = client().prepareSearch().setQuery(simpleQueryStringQuery("foo bar").minimumShouldMatch("2")).get();, +        assertHitCount(searchResponse, 2l);, +        assertSearchHits(searchResponse, "3", "4");, +, +        logger.info("--> query 2");, +        searchResponse = client().prepareSearch().setQuery(simpleQueryStringQuery("foo bar").field("body").field("body2").minimumShouldMatch("2")).get();, +        assertHitCount(searchResponse, 2l);, +        assertSearchHits(searchResponse, "3", "4");, +, +        logger.info("--> query 3");, +        searchResponse = client().prepareSearch().setQuery(simpleQueryStringQuery("foo bar baz").field("body").field("body2").minimumShouldMatch("70%")).get();]