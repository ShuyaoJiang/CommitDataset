[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +        return prepareReindexRequest(reindexRequest, true);, +    }, +, +    static Request submitReindex(ReindexRequest reindexRequest) throws IOException {, +        return prepareReindexRequest(reindexRequest, false);, +    }, +, +    private static Request prepareReindexRequest(ReindexRequest reindexRequest, boolean waitForCompletion) throws IOException {, +            .withWaitForCompletion(waitForCompletion), +        Params withWaitForCompletion(Boolean waitForCompletion) {, +            return putParam("wait_for_completion", waitForCompletion.toString());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +        return prepareReindexRequest(reindexRequest, true);, +    }, +, +    static Request submitReindex(ReindexRequest reindexRequest) throws IOException {, +        return prepareReindexRequest(reindexRequest, false);, +    }, +, +    private static Request prepareReindexRequest(ReindexRequest reindexRequest, boolean waitForCompletion) throws IOException {, +            .withWaitForCompletion(waitForCompletion), +        Params withWaitForCompletion(Boolean waitForCompletion) {, +            return putParam("wait_for_completion", waitForCompletion.toString());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.client.tasks.TaskSubmissionResponse;, +     * Submits a reindex task., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-reindex.html">Reindex API on elastic.co</a>, +     * @param reindexRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the submission response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public final TaskSubmissionResponse submitReindexTask(ReindexRequest reindexRequest, RequestOptions options) throws IOException {, +        return performRequestAndParseEntity(, +            reindexRequest, RequestConverters::submitReindex, options, TaskSubmissionResponse::fromXContent, emptySet(), +        );, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +        return prepareReindexRequest(reindexRequest, true);, +    }, +, +    static Request submitReindex(ReindexRequest reindexRequest) throws IOException {, +        return prepareReindexRequest(reindexRequest, false);, +    }, +, +    private static Request prepareReindexRequest(ReindexRequest reindexRequest, boolean waitForCompletion) throws IOException {, +            .withWaitForCompletion(waitForCompletion), +        Params withWaitForCompletion(Boolean waitForCompletion) {, +            return putParam("wait_for_completion", waitForCompletion.toString());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.client.tasks.TaskSubmissionResponse;, +     * Submits a reindex task., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-reindex.html">Reindex API on elastic.co</a>, +     * @param reindexRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the submission response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public final TaskSubmissionResponse submitReindexTask(ReindexRequest reindexRequest, RequestOptions options) throws IOException {, +        return performRequestAndParseEntity(, +            reindexRequest, RequestConverters::submitReindex, options, TaskSubmissionResponse::fromXContent, emptySet(), +        );, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/tasks/TaskSubmissionResponse.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.client.tasks;, +, +import org.elasticsearch.action.ActionResponse;, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.xcontent.ConstructingObjectParser;, +import org.elasticsearch.common.xcontent.XContentParser;, +, +import java.io.IOException;, +import java.util.Objects;, +, +public class TaskSubmissionResponse extends ActionResponse {, +]