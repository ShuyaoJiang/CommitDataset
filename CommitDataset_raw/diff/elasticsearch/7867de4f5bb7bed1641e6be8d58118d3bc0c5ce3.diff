[+++ b/src/main/java/org/elasticsearch/index/fielddata/AbstractAtomicNumericFieldData.java, +                public BytesRef getValue(int docId) {, +                        scratch.copyChars(Double.toString(values.getValue(docId)));, +                        scratch.length = 0;, +                    return scratch;, +                public int setDocument(int docId) {, +                    this.docId = docId;, +                    return values.setDocument(docId);, +                public BytesRef nextValue() {, +                    scratch.copyChars(Double.toString(values.nextValue()));, +                    return scratch;, +                public BytesRef getValue(int docId) {, +                        scratch.copyChars(Long.toString(values.getValue(docId)));, +                        scratch.length = 0;, +                    return scratch;, +                public int setDocument(int docId) {, +                    this.docId = docId;, +                    return values.setDocument(docId);, +                public BytesRef nextValue() {, +                    scratch.copyChars(Long.toString(values.nextValue()));, +                    return scratch;, +++ b/src/main/java/org/elasticsearch/index/fielddata/AbstractAtomicNumericFieldData.java, +                public BytesRef getValue(int docId) {, +                        scratch.copyChars(Double.toString(values.getValue(docId)));, +                        scratch.length = 0;, +                    return scratch;, +                public int setDocument(int docId) {, +                    this.docId = docId;, +                    return values.setDocument(docId);, +                public BytesRef nextValue() {, +                    scratch.copyChars(Double.toString(values.nextValue()));, +                    return scratch;, +                public BytesRef getValue(int docId) {, +                        scratch.copyChars(Long.toString(values.getValue(docId)));, +                        scratch.length = 0;, +                    return scratch;, +                public int setDocument(int docId) {, +                    this.docId = docId;, +                    return values.setDocument(docId);, +                public BytesRef nextValue() {, +                    scratch.copyChars(Long.toString(values.nextValue()));, +                    return scratch;, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicGeoPointFieldData.java, +            public BytesRef getValue(int docId) {, +                    scratch.copyChars(GeoHashUtils.encode(value.lat(), value.lon()));, +                    scratch.length = 0;, +                    return scratch;, +                return scratch;, +            public int setDocument(int docId) {, +                this.docId = docId;, +                return values.setDocument(docId);, +            public BytesRef nextValue() {, +                GeoPoint value = values.nextValue();, +                scratch.copyChars(GeoHashUtils.encode(value.lat(), value.lon()));, +                return scratch;, +++ b/src/main/java/org/elasticsearch/index/fielddata/AbstractAtomicNumericFieldData.java, +                public BytesRef getValue(int docId) {, +                        scratch.copyChars(Double.toString(values.getValue(docId)));, +                        scratch.length = 0;, +                    return scratch;, +                public int setDocument(int docId) {, +                    this.docId = docId;, +                    return values.setDocument(docId);, +                public BytesRef nextValue() {, +                    scratch.copyChars(Double.toString(values.nextValue()));, +                    return scratch;, +                public BytesRef getValue(int docId) {, +                        scratch.copyChars(Long.toString(values.getValue(docId)));, +                        scratch.length = 0;, +                    return scratch;, +                public int setDocument(int docId) {, +                    this.docId = docId;, +                    return values.setDocument(docId);, +                public BytesRef nextValue() {, +                    scratch.copyChars(Long.toString(values.nextValue()));, +                    return scratch;, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicGeoPointFieldData.java, +            public BytesRef getValue(int docId) {, +                    scratch.copyChars(GeoHashUtils.encode(value.lat(), value.lon()));, +                    scratch.length = 0;, +                    return scratch;, +                return scratch;, +            public int setDocument(int docId) {, +                this.docId = docId;, +                return values.setDocument(docId);, +            public BytesRef nextValue() {, +                GeoPoint value = values.nextValue();, +                scratch.copyChars(GeoHashUtils.encode(value.lat(), value.lon()));, +                return scratch;, +++ b/src/main/java/org/elasticsearch/index/fielddata/BytesValues.java, + * A state-full lightweight per document set of <code>byte[]</code> values., + *, + * To iterate over values in a document use the following pattern:, + * <pre>, + *   BytesValues values = ..;, + *   final int numValues = values.setDocId(docId);, + *   for (int i = 0; i < numValues; i++) {, + *       BytesRef value = values.nextValue();, + *       // process value, + *   }]