[+++ b/elasticsearch/qa/shield-client-tests/src/test/java/org/elasticsearch/shield/qa/ShieldTransportClientIT.java, +import java.util.List;, +        List<NodeInfo> nodes = nodeInfos.getNodes();, +        assertTrue(nodes.isEmpty() == false);, +        String clusterName = nodeInfos.getClusterName().value();, +++ b/elasticsearch/qa/shield-client-tests/src/test/java/org/elasticsearch/shield/qa/ShieldTransportClientIT.java, +import java.util.List;, +        List<NodeInfo> nodes = nodeInfos.getNodes();, +        assertTrue(nodes.isEmpty() == false);, +        String clusterName = nodeInfos.getClusterName().value();, +++ b/elasticsearch/qa/shield-example-realm/src/test/java/org/elasticsearch/example/realm/CustomRealmIT.java, +import java.util.List;, +        List<NodeInfo> nodes = nodeInfos.getNodes();, +        assertTrue(nodes.isEmpty() == false);, +        String clusterName = nodeInfos.getClusterName().value();, +        List<NodeInfo> nodes = nodeInfos.getNodes();, +        assertTrue(nodes.isEmpty() == false);, +        String clusterName = nodeInfos.getClusterName().value();, +++ b/elasticsearch/qa/shield-client-tests/src/test/java/org/elasticsearch/shield/qa/ShieldTransportClientIT.java, +import java.util.List;, +        List<NodeInfo> nodes = nodeInfos.getNodes();, +        assertTrue(nodes.isEmpty() == false);, +        String clusterName = nodeInfos.getClusterName().value();, +++ b/elasticsearch/qa/shield-example-realm/src/test/java/org/elasticsearch/example/realm/CustomRealmIT.java, +import java.util.List;, +        List<NodeInfo> nodes = nodeInfos.getNodes();, +        assertTrue(nodes.isEmpty() == false);, +        String clusterName = nodeInfos.getClusterName().value();, +        List<NodeInfo> nodes = nodeInfos.getNodes();, +        assertTrue(nodes.isEmpty() == false);, +        String clusterName = nodeInfos.getClusterName().value();, +++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/java/org/elasticsearch/smoketest/SmokeTestMonitoringWithShieldIT.java, +import java.util.List;, +        List<NodeInfo> nodes = client().admin().cluster().prepareNodesInfo().clear().setHttp(true).get().getNodes();, +        assertThat(nodes.size(), greaterThan(0));, +        InetSocketAddress[] httpAddresses = new InetSocketAddress[nodes.size()];, +        for (int i = 0; i < nodes.size(); i++) {, +            httpAddresses[i] = ((InetSocketTransportAddress) nodes.get(i).getHttp().address().publishAddress()).address();, +++ b/elasticsearch/qa/shield-client-tests/src/test/java/org/elasticsearch/shield/qa/ShieldTransportClientIT.java, +import java.util.List;, +        List<NodeInfo> nodes = nodeInfos.getNodes();, +        assertTrue(nodes.isEmpty() == false);, +        String clusterName = nodeInfos.getClusterName().value();, +++ b/elasticsearch/qa/shield-example-realm/src/test/java/org/elasticsearch/example/realm/CustomRealmIT.java, +import java.util.List;, +        List<NodeInfo> nodes = nodeInfos.getNodes();, +        assertTrue(nodes.isEmpty() == false);, +        String clusterName = nodeInfos.getClusterName().value();, +        List<NodeInfo> nodes = nodeInfos.getNodes();, +        assertTrue(nodes.isEmpty() == false);, +        String clusterName = nodeInfos.getClusterName().value();, +++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/java/org/elasticsearch/smoketest/SmokeTestMonitoringWithShieldIT.java, +import java.util.List;, +        List<NodeInfo> nodes = client().admin().cluster().prepareNodesInfo().clear().setHttp(true).get().getNodes();, +        assertThat(nodes.size(), greaterThan(0));, +        InetSocketAddress[] httpAddresses = new InetSocketAddress[nodes.size()];, +        for (int i = 0; i < nodes.size(); i++) {, +            httpAddresses[i] = ((InetSocketTransportAddress) nodes.get(i).getHttp().address().publishAddress()).address();, +++ b/elasticsearch/x-pack/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/node/NodeStatsCollector.java, +            throw response.failures().get(0);, +        NodeStats nodeStats = response.getNodes().get(0);, +++ b/elasticsearch/qa/shield-client-tests/src/test/java/org/elasticsearch/shield/qa/ShieldTransportClientIT.java, +import java.util.List;, +        List<NodeInfo> nodes = nodeInfos.getNodes();, +        assertTrue(nodes.isEmpty() == false);, +        String clusterName = nodeInfos.getClusterName().value();, +++ b/elasticsearch/qa/shield-example-realm/src/test/java/org/elasticsearch/example/realm/CustomRealmIT.java, +import java.util.List;, +        List<NodeInfo> nodes = nodeInfos.getNodes();, +        assertTrue(nodes.isEmpty() == false);, +        String clusterName = nodeInfos.getClusterName().value();, +        List<NodeInfo> nodes = nodeInfos.getNodes();, +        assertTrue(nodes.isEmpty() == false);, +        String clusterName = nodeInfos.getClusterName().value();, +++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/java/org/elasticsearch/smoketest/SmokeTestMonitoringWithShieldIT.java, +import java.util.List;, +        List<NodeInfo> nodes = client().admin().cluster().prepareNodesInfo().clear().setHttp(true).get().getNodes();, +        assertThat(nodes.size(), greaterThan(0));, +        InetSocketAddress[] httpAddresses = new InetSocketAddress[nodes.size()];, +        for (int i = 0; i < nodes.size(); i++) {, +            httpAddresses[i] = ((InetSocketTransportAddress) nodes.get(i).getHttp().address().publishAddress()).address();, +++ b/elasticsearch/x-pack/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/node/NodeStatsCollector.java, +            throw response.failures().get(0);, +        NodeStats nodeStats = response.getNodes().get(0);, +++ b/elasticsearch/x-pack/marvel/src/test/java/org/elasticsearch/marvel/MarvelPluginTests.java, +        for (NodeInfo nodeInfo : response.getNodes()) {, +            assertThat("message contains error about missing implementation: " + ce.getMessage(),, +++ b/elasticsearch/qa/shield-client-tests/src/test/java/org/elasticsearch/shield/qa/ShieldTransportClientIT.java, +import java.util.List;, +        List<NodeInfo> nodes = nodeInfos.getNodes();, +        assertTrue(nodes.isEmpty() == false);, +        String clusterName = nodeInfos.getClusterName().value();, +++ b/elasticsearch/qa/shield-example-realm/src/test/java/org/elasticsearch/example/realm/CustomRealmIT.java, +import java.util.List;, +        List<NodeInfo> nodes = nodeInfos.getNodes();, +        assertTrue(nodes.isEmpty() == false);, +        String clusterName = nodeInfos.getClusterName().value();, +        List<NodeInfo> nodes = nodeInfos.getNodes();, +        assertTrue(nodes.isEmpty() == false);, +        String clusterName = nodeInfos.getClusterName().value();]