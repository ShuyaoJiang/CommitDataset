[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequest.java, +    private String waitForNodes = "";, +, +    public String waitForNodes() {, +        return waitForNodes;, +    }, +, +    /**, +     * Waits for N number of nodes. Use "12" for exact mapping, ">12" and "<12" for range., +     */, +    public ClusterHealthRequest waitForNodes(String waitForNodes) {, +        this.waitForNodes = waitForNodes;, +        return this;, +    }, +, +        waitForNodes = in.readUTF();, +        out.writeUTF(waitForNodes);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequest.java, +    private String waitForNodes = "";, +, +    public String waitForNodes() {, +        return waitForNodes;, +    }, +, +    /**, +     * Waits for N number of nodes. Use "12" for exact mapping, ">12" and "<12" for range., +     */, +    public ClusterHealthRequest waitForNodes(String waitForNodes) {, +        this.waitForNodes = waitForNodes;, +        return this;, +    }, +, +        waitForNodes = in.readUTF();, +        out.writeUTF(waitForNodes);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +    int numberOfNodes = 0;, +, +    public int numberOfNodes() {, +        return this.numberOfNodes;, +    }, +, +    public int getNumberOfNodes() {, +        return numberOfNodes();, +    }, +, +        numberOfNodes = in.readVInt();, +        out.writeVInt(numberOfNodes);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequest.java, +    private String waitForNodes = "";, +, +    public String waitForNodes() {, +        return waitForNodes;, +    }, +, +    /**, +     * Waits for N number of nodes. Use "12" for exact mapping, ">12" and "<12" for range., +     */, +    public ClusterHealthRequest waitForNodes(String waitForNodes) {, +        this.waitForNodes = waitForNodes;, +        return this;, +    }, +, +        waitForNodes = in.readUTF();, +        out.writeUTF(waitForNodes);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +    int numberOfNodes = 0;, +, +    public int numberOfNodes() {, +        return this.numberOfNodes;, +    }, +, +    public int getNumberOfNodes() {, +        return numberOfNodes();, +    }, +, +        numberOfNodes = in.readVInt();, +        out.writeVInt(numberOfNodes);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        int waitFor = 4;, +        if (request.waitForNodes().isEmpty()) {, +            waitFor--;, +        }, +            if (!request.waitForNodes().isEmpty()) {, +                if (request.waitForNodes().startsWith(">=")) {, +                    int expected = Integer.parseInt(request.waitForNodes().substring(2));, +                    if (response.numberOfNodes() >= expected) {, +                        waitForCounter++;, +                    }, +                } else if (request.waitForNodes().startsWith("M=")) {, +                    int expected = Integer.parseInt(request.waitForNodes().substring(2));, +                    if (response.numberOfNodes() <= expected) {, +                        waitForCounter++;, +                    }, +                } else if (request.waitForNodes().startsWith(">")) {, +                    int expected = Integer.parseInt(request.waitForNodes().substring(1));, +                    if (response.numberOfNodes() > expected) {, +                        waitForCounter++;, +                    }, +                } else if (request.waitForNodes().startsWith("<")) {, +                    int expected = Integer.parseInt(request.waitForNodes().substring(1));]