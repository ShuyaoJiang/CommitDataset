[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        if (node.config.numNodes == 1) {, +        } else {, +            // TODO: fix multi node so it doesn't use hardcoded prots, +            esConfig['http.port'] = 9400 + node.nodeNum, +            esConfig['transport.tcp.port'] =  9500 + node.nodeNum, +            esConfig['discovery.zen.ping.unicast.hosts'] = (0..<node.config.numNodes).collect{"localhost:${9500 + it}"}.join(','), +, +        }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        if (node.config.numNodes == 1) {, +        } else {, +            // TODO: fix multi node so it doesn't use hardcoded prots, +            esConfig['http.port'] = 9400 + node.nodeNum, +            esConfig['transport.tcp.port'] =  9500 + node.nodeNum, +            esConfig['discovery.zen.ping.unicast.hosts'] = (0..<node.config.numNodes).collect{"localhost:${9500 + it}"}.join(','), +, +        }, +++ b/core/build.gradle, +  compile 'net.sf.jopt-simple:jopt-simple:4.9', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        if (node.config.numNodes == 1) {, +        } else {, +            // TODO: fix multi node so it doesn't use hardcoded prots, +            esConfig['http.port'] = 9400 + node.nodeNum, +            esConfig['transport.tcp.port'] =  9500 + node.nodeNum, +            esConfig['discovery.zen.ping.unicast.hosts'] = (0..<node.config.numNodes).collect{"localhost:${9500 + it}"}.join(','), +, +        }, +++ b/core/build.gradle, +  compile 'net.sf.jopt-simple:jopt-simple:4.9', +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import java.io.ByteArrayOutputStream;, +import java.io.IOException;, +import java.io.PrintStream;, +import java.nio.file.Path;, +import java.util.Locale;, +import java.util.concurrent.CountDownLatch;, +, +import org.elasticsearch.cli.ExitCodes;, +import org.elasticsearch.cli.Terminal;, +        BootstrapCliParser parser = new BootstrapCliParser();, +        int status = parser.main(args, Terminal.DEFAULT);, +        if (parser.shouldRun() == false || status != ExitCodes.OK) {, +            exit(status);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        if (node.config.numNodes == 1) {, +        } else {, +            // TODO: fix multi node so it doesn't use hardcoded prots, +            esConfig['http.port'] = 9400 + node.nodeNum, +            esConfig['transport.tcp.port'] =  9500 + node.nodeNum, +            esConfig['discovery.zen.ping.unicast.hosts'] = (0..<node.config.numNodes).collect{"localhost:${9500 + it}"}.join(','), +, +        }, +++ b/core/build.gradle, +  compile 'net.sf.jopt-simple:jopt-simple:4.9', +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import java.io.ByteArrayOutputStream;, +import java.io.IOException;, +import java.io.PrintStream;, +import java.nio.file.Path;, +import java.util.Locale;, +import java.util.concurrent.CountDownLatch;, +, +import org.elasticsearch.cli.ExitCodes;, +import org.elasticsearch.cli.Terminal;, +        BootstrapCliParser parser = new BootstrapCliParser();, +        int status = parser.main(args, Terminal.DEFAULT);, +        if (parser.shouldRun() == false || status != ExitCodes.OK) {, +            exit(status);, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        if (node.config.numNodes == 1) {, +        } else {, +            // TODO: fix multi node so it doesn't use hardcoded prots, +            esConfig['http.port'] = 9400 + node.nodeNum, +            esConfig['transport.tcp.port'] =  9500 + node.nodeNum, +            esConfig['discovery.zen.ping.unicast.hosts'] = (0..<node.config.numNodes).collect{"localhost:${9500 + it}"}.join(','), +, +        }, +++ b/core/build.gradle, +  compile 'net.sf.jopt-simple:jopt-simple:4.9', +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import java.io.ByteArrayOutputStream;, +import java.io.IOException;, +import java.io.PrintStream;, +import java.nio.file.Path;, +import java.util.Locale;, +import java.util.concurrent.CountDownLatch;, +, +import org.elasticsearch.cli.ExitCodes;, +import org.elasticsearch.cli.Terminal;, +        BootstrapCliParser parser = new BootstrapCliParser();, +        int status = parser.main(args, Terminal.DEFAULT);]