[+++ b/src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java, +        table.addCell("pri.completion.size", "alias:pcs,priCompletionSize;default:false;text-align:right;desc:size of completion");, +        table.addCell("pri.fielddata.memory_size", "alias:pfm,priFielddataMemory;default:false;text-align:right;desc:used fielddata cache");, +        table.addCell("pri.fielddata.evictions", "alias:pfe,priFielddataEvictions;default:false;text-align:right;desc:fielddata evictions");, +        table.addCell("pri.filter_cache.memory_size", "alias:pfcm,priFilterCacheMemory;default:false;text-align:right;desc:used filter cache");, +        table.addCell("pri.filter_cache.evictions", "alias:pfce,priFilterCacheEvictions;default:false;text-align:right;desc:filter cache evictions");, +        table.addCell("pri.flush.total", "alias:pft,priFlushTotal;default:false;text-align:right;desc:number of flushes");, +        table.addCell("pri.flush.total_time", "alias:pftt,priFlushTotalTime;default:false;text-align:right;desc:time spent in flush");, +        table.addCell("pri.get.current", "alias:pgc,priGetCurrent;default:false;text-align:right;desc:number of current get ops");, +        table.addCell("pri.get.time", "alias:pgti,priGetTime;default:false;text-align:right;desc:time spent in get");, +        table.addCell("pri.get.total", "alias:pgto,priGetTotal;default:false;text-align:right;desc:number of get ops");, +        table.addCell("pri.get.exists_time", "alias:pgeti,priGetExistsTime;default:false;text-align:right;desc:time spent in successful gets");, +        table.addCell("pri.get.exists_total", "alias:pgeto,priGetExistsTotal;default:false;text-align:right;desc:number of successful gets");, +        table.addCell("pri.get.missing_time", "alias:pgmti,priGetMissingTime;default:false;text-align:right;desc:time spent in failed gets");, +        table.addCell("pri.get.missing_total", "alias:pgmto,priGetMissingTotal;default:false;text-align:right;desc:number of failed gets");, +        table.addCell("pri.id_cache.memory_size", "alias:pim,priIdCacheMemory;default:false;text-align:right;desc:used id cache");, +        table.addCell("pri.indexing.delete_current", "alias:pidc,priIndexingDeleteCurrent;default:false;text-align:right;desc:number of current deletions");, +        table.addCell("pri.indexing.delete_time", "alias:pidti,priIndexingDeleteTime;default:false;text-align:right;desc:time spent in deletions");, +        table.addCell("pri.indexing.delete_total", "alias:pidto,priIndexingDeleteTotal;default:false;text-align:right;desc:number of delete ops");, +        table.addCell("pri.indexing.index_current", "alias:piic,priIndexingIndexCurrent;default:false;text-align:right;desc:number of current indexing ops");, +        table.addCell("pri.indexing.index_time", "alias:piiti,priIndexingIndexTime;default:false;text-align:right;desc:time spent in indexing");, +        table.addCell("pri.indexing.index_total", "alias:piito,priIndexingIndexTotal;default:false;text-align:right;desc:number of indexing ops");, +        table.addCell("pri.merges.current", "alias:pmc,priMergesCurrent;default:false;text-align:right;desc:number of current merges");, +        table.addCell("pri.merges.current_docs", "alias:pmcd,priMergesCurrentDocs;default:false;text-align:right;desc:number of current merging docs");, +        table.addCell("pri.merges.current_size", "alias:pmcs,priMergesCurrentSize;default:false;text-align:right;desc:size of current merges");, +        table.addCell("pri.merges.total", "alias:pmt,priMergesTotal;default:false;text-align:right;desc:number of completed merge ops");, +        table.addCell("pri.merges.total_docs", "alias:pmtd,priMergesTotalDocs;default:false;text-align:right;desc:docs merged");, +        table.addCell("pri.merges.total_size", "alias:pmts,priMergesTotalSize;default:false;text-align:right;desc:size merged");, +        table.addCell("pri.merges.total_time", "alias:pmtt,priMergesTotalTime;default:false;text-align:right;desc:time spent in merges");, +        table.addCell("pri.percolate.current", "alias:ppc,priPercolateCurrent;default:false;text-align:right;desc:number of current percolations");, +        table.addCell("pri.percolate.memory_size", "alias:ppm,priPercolateMemory;default:false;text-align:right;desc:memory used by percolations");, +        table.addCell("pri.percolate.queries", "alias:ppq,priPercolateQueries;default:false;text-align:right;desc:number of registered percolation queries");, +        table.addCell("pri.percolate.time", "alias:ppti,priPercolateTime;default:false;text-align:right;desc:time spent percolating");, +        table.addCell("pri.percolate.total", "alias:ppto,priPercolateTotal;default:false;text-align:right;desc:total percolations");, +        table.addCell("pri.refresh.total", "alias:prto,priRefreshTotal;default:false;text-align:right;desc:total refreshes");, +        table.addCell("pri.refresh.time", "alias:prti,priRefreshTime;default:false;text-align:right;desc:time spent in refreshes");, +        table.addCell("pri.search.fetch_current", "alias:psfc,priSearchFetchCurrent;default:false;text-align:right;desc:current fetch phase ops");, +        table.addCell("pri.search.fetch_time", "alias:psfti,priSearchFetchTime;default:false;text-align:right;desc:time spent in fetch phase");, +        table.addCell("pri.search.fetch_total", "alias:psfto,priSearchFetchTotal;default:false;text-align:right;desc:total fetch ops");, +        table.addCell("pri.search.open_contexts", "alias:pso,priSearchOpenContexts;default:false;text-align:right;desc:open search contexts");, +        table.addCell("pri.search.query_current", "alias:psqc,priSearchQueryCurrent;default:false;text-align:right;desc:current query phase ops");, +        table.addCell("pri.search.query_time", "alias:psqti,priSearchQueryTime;default:false;text-align:right;desc:time spent in query phase");, +        table.addCell("pri.search.query_total", "alias:psqto,priSearchQueryTotal;default:false;text-align:right;desc:total query phase ops");, +        table.addCell("pri.segments.count", "alias:psc,priSegmentsCount;default:false;text-align:right;desc:number of segments");, +        table.addCell("pri.segments.memory", "alias:psm,priSegmentsMemory;default:false;text-align:right;desc:memory used by segments");, +        table.addCell("pri.warmer.current", "alias:pwc,priWarmerCurrent;default:false;text-align:right;desc:current warmer ops");, +        table.addCell("pri.warmer.total", "alias:pwto,priWarmerTotal;default:false;text-align:right;desc:total warmer ops");, +        table.addCell("pri.warmer.total_time", "alias:pwtt,priWarmerTotalTime;default:false;text-align:right;desc:time spent in warmers");, +        table.addCell("completion.size", "alias:cs,completionSize;default:false;text-align:right;desc:size of completion");, +        table.addCell("fielddata.memory_size", "alias:fm,fielddataMemory;default:false;text-align:right;desc:used fielddata cache");, +        table.addCell("fielddata.evictions", "alias:fe,fielddataEvictions;default:false;text-align:right;desc:fielddata evictions");, +        table.addCell("filter_cache.memory_size", "alias:fcm,filterCacheMemory;default:false;text-align:right;desc:used filter cache");, +        table.addCell("filter_cache.evictions", "alias:fce,filterCacheEvictions;default:false;text-align:right;desc:filter cache evictions");, +        table.addCell("flush.total", "alias:ft,flushTotal;default:false;text-align:right;desc:number of flushes");, +        table.addCell("flush.total_time", "alias:ftt,flushTotalTime;default:false;text-align:right;desc:time spent in flush");, +        table.addCell("get.current", "alias:gc,getCurrent;default:false;text-align:right;desc:number of current get ops");, +        table.addCell("get.time", "alias:gti,getTime;default:false;text-align:right;desc:time spent in get");, +        table.addCell("get.total", "alias:gto,getTotal;default:false;text-align:right;desc:number of get ops");, +        table.addCell("get.exists_time", "alias:geti,getExistsTime;default:false;text-align:right;desc:time spent in successful gets");, +        table.addCell("get.exists_total", "alias:geto,getExistsTotal;default:false;text-align:right;desc:number of successful gets");, +        table.addCell("get.missing_time", "alias:gmti,getMissingTime;default:false;text-align:right;desc:time spent in failed gets");, +        table.addCell("get.missing_total", "alias:gmto,getMissingTotal;default:false;text-align:right;desc:number of failed gets");, +        table.addCell("id_cache.memory_size", "alias:im,idCacheMemory;default:false;text-align:right;desc:used id cache");, +        table.addCell("indexing.delete_current", "alias:idc,indexingDeleteCurrent;default:false;text-align:right;desc:number of current deletions");, +        table.addCell("indexing.delete_time", "alias:idti,indexingDeleteTime;default:false;text-align:right;desc:time spent in deletions");, +        table.addCell("indexing.delete_total", "alias:idto,indexingDeleteTotal;default:false;text-align:right;desc:number of delete ops");, +        table.addCell("indexing.index_current", "alias:iic,indexingIndexCurrent;default:false;text-align:right;desc:number of current indexing ops");, +        table.addCell("indexing.index_time", "alias:iiti,indexingIndexTime;default:false;text-align:right;desc:time spent in indexing");, +        table.addCell("indexing.index_total", "alias:iito,indexingIndexTotal;default:false;text-align:right;desc:number of indexing ops");, +        table.addCell("merges.current", "alias:mc,mergesCurrent;default:false;text-align:right;desc:number of current merges");, +        table.addCell("merges.current_docs", "alias:mcd,mergesCurrentDocs;default:false;text-align:right;desc:number of current merging docs");, +        table.addCell("merges.current_size", "alias:mcs,mergesCurrentSize;default:false;text-align:right;desc:size of current merges");, +        table.addCell("merges.total", "alias:mt,mergesTotal;default:false;text-align:right;desc:number of completed merge ops");, +        table.addCell("merges.total_docs", "alias:mtd,mergesTotalDocs;default:false;text-align:right;desc:docs merged");, +        table.addCell("merges.total_size", "alias:mts,mergesTotalSize;default:false;text-align:right;desc:size merged");, +        table.addCell("merges.total_time", "alias:mtt,mergesTotalTime;default:false;text-align:right;desc:time spent in merges");, +        table.addCell("percolate.current", "alias:pc,percolateCurrent;default:false;text-align:right;desc:number of current percolations");, +        table.addCell("percolate.memory_size", "alias:pm,percolateMemory;default:false;text-align:right;desc:memory used by percolations");, +        table.addCell("percolate.queries", "alias:pq,percolateQueries;default:false;text-align:right;desc:number of registered percolation queries");, +        table.addCell("percolate.time", "alias:pti,percolateTime;default:false;text-align:right;desc:time spent percolating");, +        table.addCell("percolate.total", "alias:pto,percolateTotal;default:false;text-align:right;desc:total percolations");, +        table.addCell("refresh.total", "alias:rto,refreshTotal;default:false;text-align:right;desc:total refreshes");, +        table.addCell("refresh.time", "alias:rti,refreshTime;default:false;text-align:right;desc:time spent in refreshes");, +        table.addCell("search.fetch_current", "alias:sfc,searchFetchCurrent;default:false;text-align:right;desc:current fetch phase ops");, +        table.addCell("search.fetch_time", "alias:sfti,searchFetchTime;default:false;text-align:right;desc:time spent in fetch phase");, +        table.addCell("search.fetch_total", "alias:sfto,searchFetchTotal;default:false;text-align:right;desc:total fetch ops");, +        table.addCell("search.open_contexts", "alias:so,searchOpenContexts;default:false;text-align:right;desc:open search contexts");, +        table.addCell("search.query_current", "alias:sqc,searchQueryCurrent;default:false;text-align:right;desc:current query phase ops");, +        table.addCell("search.query_time", "alias:sqti,searchQueryTime;default:false;text-align:right;desc:time spent in query phase");, +        table.addCell("search.query_total", "alias:sqto,searchQueryTotal;default:false;text-align:right;desc:total query phase ops");, +        table.addCell("segments.count", "alias:sc,segmentsCount;default:false;text-align:right;desc:number of segments");, +        table.addCell("segments.memory", "alias:sm,segmentsMemory;default:false;text-align:right;desc:memory used by segments");, +        table.addCell("warmer.current", "alias:wc,warmerCurrent;default:false;text-align:right;desc:current warmer ops");, +        table.addCell("warmer.total", "alias:wto,warmerTotal;default:false;text-align:right;desc:total warmer ops");, +        table.addCell("warmer.total_time", "alias:wtt,warmerTotalTime;default:false;text-align:right;desc:time spent in warmers");, +++ b/src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java, +        table.addCell("pri.completion.size", "alias:pcs,priCompletionSize;default:false;text-align:right;desc:size of completion");, +        table.addCell("pri.fielddata.memory_size", "alias:pfm,priFielddataMemory;default:false;text-align:right;desc:used fielddata cache");, +        table.addCell("pri.fielddata.evictions", "alias:pfe,priFielddataEvictions;default:false;text-align:right;desc:fielddata evictions");, +        table.addCell("pri.filter_cache.memory_size", "alias:pfcm,priFilterCacheMemory;default:false;text-align:right;desc:used filter cache");]