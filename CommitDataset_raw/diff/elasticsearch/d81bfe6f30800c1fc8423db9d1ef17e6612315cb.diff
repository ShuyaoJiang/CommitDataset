[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java, +import org.elasticsearch.search.action.SearchTransportService;, +    protected final SearchTransportService searchTransportService;, +    protected AbstractSearchAsyncAction(ESLogger logger, SearchTransportService searchTransportService, ClusterService clusterService,, +        this.searchTransportService = searchTransportService;, +            searchTransportService.sendFreeContext(node, contextId, request);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java, +import org.elasticsearch.search.action.SearchTransportService;, +    protected final SearchTransportService searchTransportService;, +    protected AbstractSearchAsyncAction(ESLogger logger, SearchTransportService searchTransportService, ClusterService clusterService,, +        this.searchTransportService = searchTransportService;, +            searchTransportService.sendFreeContext(node, contextId, request);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchDfsQueryAndFetchAsyncAction.java, +import org.elasticsearch.search.action.SearchTransportService;, +    SearchDfsQueryAndFetchAsyncAction(ESLogger logger, SearchTransportService searchTransportService,, +        super(logger, searchTransportService, clusterService, indexNameExpressionResolver, searchPhaseController, threadPool,, +                request, listener);, +        searchTransportService.sendExecuteDfs(node, request, listener);, +        searchTransportService.sendExecuteFetch(node, querySearchRequest, new ActionListener<QueryFetchSearchResult>() {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java, +import org.elasticsearch.search.action.SearchTransportService;, +    protected final SearchTransportService searchTransportService;, +    protected AbstractSearchAsyncAction(ESLogger logger, SearchTransportService searchTransportService, ClusterService clusterService,, +        this.searchTransportService = searchTransportService;, +            searchTransportService.sendFreeContext(node, contextId, request);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchDfsQueryAndFetchAsyncAction.java, +import org.elasticsearch.search.action.SearchTransportService;, +    SearchDfsQueryAndFetchAsyncAction(ESLogger logger, SearchTransportService searchTransportService,, +        super(logger, searchTransportService, clusterService, indexNameExpressionResolver, searchPhaseController, threadPool,, +                request, listener);, +        searchTransportService.sendExecuteDfs(node, request, listener);, +        searchTransportService.sendExecuteFetch(node, querySearchRequest, new ActionListener<QueryFetchSearchResult>() {, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchDfsQueryThenFetchAsyncAction.java, +import org.elasticsearch.search.action.SearchTransportService;, +    SearchDfsQueryThenFetchAsyncAction(ESLogger logger, SearchTransportService searchTransportService,, +        super(logger, searchTransportService, clusterService, indexNameExpressionResolver, searchPhaseController, threadPool,, +                request, listener);, +        searchTransportService.sendExecuteDfs(node, request, listener);, +        searchTransportService.sendExecuteQuery(node, querySearchRequest, new ActionListener<QuerySearchResult>() {, +        searchTransportService.sendExecuteFetch(node, fetchSearchRequest, new ActionListener<FetchSearchResult>() {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java, +import org.elasticsearch.search.action.SearchTransportService;, +    protected final SearchTransportService searchTransportService;, +    protected AbstractSearchAsyncAction(ESLogger logger, SearchTransportService searchTransportService, ClusterService clusterService,, +        this.searchTransportService = searchTransportService;, +            searchTransportService.sendFreeContext(node, contextId, request);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchDfsQueryAndFetchAsyncAction.java, +import org.elasticsearch.search.action.SearchTransportService;, +    SearchDfsQueryAndFetchAsyncAction(ESLogger logger, SearchTransportService searchTransportService,, +        super(logger, searchTransportService, clusterService, indexNameExpressionResolver, searchPhaseController, threadPool,, +                request, listener);, +        searchTransportService.sendExecuteDfs(node, request, listener);, +        searchTransportService.sendExecuteFetch(node, querySearchRequest, new ActionListener<QueryFetchSearchResult>() {, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchDfsQueryThenFetchAsyncAction.java, +import org.elasticsearch.search.action.SearchTransportService;, +    SearchDfsQueryThenFetchAsyncAction(ESLogger logger, SearchTransportService searchTransportService,, +        super(logger, searchTransportService, clusterService, indexNameExpressionResolver, searchPhaseController, threadPool,, +                request, listener);, +        searchTransportService.sendExecuteDfs(node, request, listener);, +        searchTransportService.sendExecuteQuery(node, querySearchRequest, new ActionListener<QuerySearchResult>() {, +        searchTransportService.sendExecuteFetch(node, fetchSearchRequest, new ActionListener<FetchSearchResult>() {, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchQueryAndFetchAsyncAction.java, +import org.elasticsearch.search.action.SearchTransportService;, +    SearchQueryAndFetchAsyncAction(ESLogger logger, SearchTransportService searchTransportService,, +        super(logger, searchTransportService, clusterService, indexNameExpressionResolver, searchPhaseController, threadPool,, +                request, listener);, +        searchTransportService.sendExecuteFetch(node, request, listener);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java, +import org.elasticsearch.search.action.SearchTransportService;, +    protected final SearchTransportService searchTransportService;, +    protected AbstractSearchAsyncAction(ESLogger logger, SearchTransportService searchTransportService, ClusterService clusterService,, +        this.searchTransportService = searchTransportService;, +            searchTransportService.sendFreeContext(node, contextId, request);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchDfsQueryAndFetchAsyncAction.java, +import org.elasticsearch.search.action.SearchTransportService;, +    SearchDfsQueryAndFetchAsyncAction(ESLogger logger, SearchTransportService searchTransportService,, +        super(logger, searchTransportService, clusterService, indexNameExpressionResolver, searchPhaseController, threadPool,, +                request, listener);, +        searchTransportService.sendExecuteDfs(node, request, listener);, +        searchTransportService.sendExecuteFetch(node, querySearchRequest, new ActionListener<QueryFetchSearchResult>() {, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchDfsQueryThenFetchAsyncAction.java, +import org.elasticsearch.search.action.SearchTransportService;, +    SearchDfsQueryThenFetchAsyncAction(ESLogger logger, SearchTransportService searchTransportService,, +        super(logger, searchTransportService, clusterService, indexNameExpressionResolver, searchPhaseController, threadPool,, +                request, listener);, +        searchTransportService.sendExecuteDfs(node, request, listener);, +        searchTransportService.sendExecuteQuery(node, querySearchRequest, new ActionListener<QuerySearchResult>() {, +        searchTransportService.sendExecuteFetch(node, fetchSearchRequest, new ActionListener<FetchSearchResult>() {, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchQueryAndFetchAsyncAction.java, +import org.elasticsearch.search.action.SearchTransportService;, +    SearchQueryAndFetchAsyncAction(ESLogger logger, SearchTransportService searchTransportService,, +        super(logger, searchTransportService, clusterService, indexNameExpressionResolver, searchPhaseController, threadPool,, +                request, listener);, +        searchTransportService.sendExecuteFetch(node, request, listener);]