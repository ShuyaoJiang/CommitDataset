[+++ b/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, + * This class holds all {@link DiscoveryNode} in the cluster and provides convinience methods to, + * access, modify merge / diff discovery nodes.  , +    /**, +     * Get the number of known nodes , +     * @return number of nodes, +     */, +    /**, +     * Get the number of known nodes , +     * @return number of nodes, +     */, +    /**, +     * Get a {@link Map} of the discovered nodes arranged by their ids , +     * @return {@link Map} of the discovered nodes arranged by their ids, +     */, +    /**, +     * Get a {@link Map} of the discovered nodes arranged by their ids , +     * @return {@link Map} of the discovered nodes arranged by their ids, +     */, +    /**, +     * Get a {@link Map} of the discovered data nodes arranged by their ids , +     * @return {@link Map} of the discovered data nodes arranged by their ids, +     */, +    /**, +     * Get a {@link Map} of the discovered data nodes arranged by their ids , +     * @return {@link Map} of the discovered data nodes arranged by their ids, +     */, +    /**, +     * Get a {@link Map} of the discovered master nodes arranged by their ids , +     * @return {@link Map} of the discovered master nodes arranged by their ids, +     */, +    /**, +     * Get a {@link Map} of the discovered master nodes arranged by their ids , +     * @return {@link Map} of the discovered master nodes arranged by their ids, +     */, +    /**, +     * Get a {@link Map} of the discovered master and data nodes arranged by their ids , +     * @return {@link Map} of the discovered master and data nodes arranged by their ids, +     */, +    /**, +     * Get a node by its id, +     * @param nodeId id of the wanted node , +     * @return wanted node if it exists. Otherwise <code>null</code>, +     */, +    /**, +     * Determine if a given node exists, +     * @param nodeId id of the node which existence should be verified, +     * @return <code>true</code> if the node exists. Otherwise <code>false</code>, +     */, +    /**, +     * Get the id of the master node , +     * @return id of the master, +     */, +    /**, +     * Get the id of the master node , +     * @return id of the master, +     */, +    /**, +     * Get the id of the local node , +     * @return id of the local node, +     */, +    /**, +     * Get the id of the local node , +     * @return id of the local node, +     */, +    /**, +     * Get the local node , +     * @return local node, +     */, +    /**, +     * Get the local node , +     * @return local node, +     */, +    /**, +     * Get the master node , +     * @return master node, +     */, +    /**, +     * Get the master node , +     * @return master node, +     */, +    /**, +     * Get a node by its address , +     * @param address {@link TransportAddress} of the wanted node, +     * @return node identified by the given address or <code>null</code> if no such node exists, +     */, +    /**, +     * Resolve a node with a given id, +     * @param node id of the node to discover, +     * @return discovered node matching the given id, +     * @throws ElasticSearchIllegalArgumentException if more than one node matches the request or no nodes have been resolved, +     */, +++ b/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, + * This class holds all {@link DiscoveryNode} in the cluster and provides convinience methods to, + * access, modify merge / diff discovery nodes.  , +    /**, +     * Get the number of known nodes , +     * @return number of nodes, +     */, +    /**]