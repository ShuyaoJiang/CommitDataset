[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +     * Constructs a new search source builder with a raw search query., +     */, +    public SearchRequestBuilder setQuery(byte[] queryBinary, int queryBinaryOffset, int queryBinaryLength) {, +        sourceBuilder().query(queryBinary, queryBinaryOffset, queryBinaryLength);, +        return this;, +    }, +, +    /**, +     * Constructs a new search source builder with a raw search query., +     */, +    public SearchRequestBuilder setQuery(XContentBuilder query) {, +        sourceBuilder().query(query);, +        return this;, +    }, +, +    /**, +     * Constructs a new search source builder with a raw search query., +     */, +    public SearchRequestBuilder setQuery(Map query) {, +        sourceBuilder().query(query);, +        return this;, +    }, +, +    /**, +     * Sets a filter on the query executed that only applies to the search query, +     * (and not facets for example)., +     */, +    public SearchRequestBuilder setFilter(byte[] filter, int filterOffset, int filterLength) {, +        sourceBuilder().filter(filter, filterOffset, filterLength);, +        return this;, +    }, +, +    /**, +     * Sets a filter on the query executed that only applies to the search query, +     * (and not facets for example)., +     */, +    public SearchRequestBuilder setFilter(XContentBuilder filter) {, +        sourceBuilder().filter(filter);, +        return this;, +    }, +, +    /**, +     * Sets a filter on the query executed that only applies to the search query, +     * (and not facets for example)., +     */, +    public SearchRequestBuilder setFilter(Map filter) {, +        sourceBuilder().filter(filter);, +        return this;, +    }, +, +    /**, +     * Sets a raw (xcontent) binary representation of facets to use., +     */, +    public SearchRequestBuilder setFacets(byte[] facets, int facetsOffset, int facetsLength) {, +        sourceBuilder().facets(facets, facetsOffset, facetsLength);, +        return this;, +    }, +, +    /**, +     * Sets a raw (xcontent) binary representation of facets to use., +     */, +    public SearchRequestBuilder setFacets(XContentBuilder facets) {, +        sourceBuilder().facets(facets);, +        return this;, +    }, +, +    /**, +     * Sets a raw (xcontent) binary representation of facets to use., +     */, +    public SearchRequestBuilder setFacets(Map facets) {, +        sourceBuilder().facets(facets);, +        return this;, +    }, +, +    /**, +     * than the search type will cause this source to be overridden, consider using, +     * than the search type will cause this source to be overridden, consider using, +     * than the search type will cause this source to be overridden, consider using, +     * Sets the source of the request as a map. Note, setting anything other than the, +     * search type will cause this source to be overridden, consider using, +     * {@link #setExtraSource(java.util.Map)}., +     */, +    public SearchRequestBuilder setSource(Map source) {, +        request.source(source);, +        return this;, +    }, +, +    public SearchRequestBuilder setExtraSource(Map source) {, +        request.extraSource(source);, +        return this;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +     * Constructs a new search source builder with a raw search query., +     */, +    public SearchRequestBuilder setQuery(byte[] queryBinary, int queryBinaryOffset, int queryBinaryLength) {, +        sourceBuilder().query(queryBinary, queryBinaryOffset, queryBinaryLength);, +        return this;]