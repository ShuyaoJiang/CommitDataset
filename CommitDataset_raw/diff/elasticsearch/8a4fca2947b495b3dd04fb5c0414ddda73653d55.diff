[+++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopeSettings.java, +        IndexSettings.INDEX_TRANSLOG_SYNC_INTERVAL_SETTING,, +        IndexSettings.DEFAULT_FIELD_SETTING,, +        IndexSettings.QUERY_STRING_LENIENT_SETTING,, +        // this sucks but we can't really validate all the analyzers/similarity in here, +        Setting.groupSetting("index.similarity.", false, Setting.Scope.INDEX), // this allows similarity settings to be passed, +        Setting.groupSetting("index.analysis.", false, Setting.Scope.INDEX) // this allows analysis settings to be passed, +, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopeSettings.java, +        IndexSettings.INDEX_TRANSLOG_SYNC_INTERVAL_SETTING,, +        IndexSettings.DEFAULT_FIELD_SETTING,, +        IndexSettings.QUERY_STRING_LENIENT_SETTING,, +        // this sucks but we can't really validate all the analyzers/similarity in here, +        Setting.groupSetting("index.similarity.", false, Setting.Scope.INDEX), // this allows similarity settings to be passed, +        Setting.groupSetting("index.analysis.", false, Setting.Scope.INDEX) // this allows analysis settings to be passed, +, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +import java.util.function.Function;, +    public static final Setting<String> DEFAULT_FIELD_SETTING = new Setting<>("index.query.default_field", AllFieldMapper.NAME, Function.identity(), false, Setting.Scope.INDEX);, +    public static final Setting<Boolean> QUERY_STRING_LENIENT_SETTING = Setting.boolSetting("index.query_string.lenient", false, false, Setting.Scope.INDEX);, +    public static final Setting<TimeValue> INDEX_TRANSLOG_SYNC_INTERVAL_SETTING = Setting.timeSetting("index.translog.sync_interval", TimeValue.timeValueSeconds(5), false, Setting.Scope.INDEX);, +        this.defaultField = DEFAULT_FIELD_SETTING.get(settings);, +        this.queryStringLenient = QUERY_STRING_LENIENT_SETTING.get(settings);, +        syncInterval = INDEX_TRANSLOG_SYNC_INTERVAL_SETTING.get(settings);, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopeSettings.java, +        IndexSettings.INDEX_TRANSLOG_SYNC_INTERVAL_SETTING,, +        IndexSettings.DEFAULT_FIELD_SETTING,, +        IndexSettings.QUERY_STRING_LENIENT_SETTING,, +        // this sucks but we can't really validate all the analyzers/similarity in here, +        Setting.groupSetting("index.similarity.", false, Setting.Scope.INDEX), // this allows similarity settings to be passed, +        Setting.groupSetting("index.analysis.", false, Setting.Scope.INDEX) // this allows analysis settings to be passed, +, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +import java.util.function.Function;, +    public static final Setting<String> DEFAULT_FIELD_SETTING = new Setting<>("index.query.default_field", AllFieldMapper.NAME, Function.identity(), false, Setting.Scope.INDEX);, +    public static final Setting<Boolean> QUERY_STRING_LENIENT_SETTING = Setting.boolSetting("index.query_string.lenient", false, false, Setting.Scope.INDEX);, +    public static final Setting<TimeValue> INDEX_TRANSLOG_SYNC_INTERVAL_SETTING = Setting.timeSetting("index.translog.sync_interval", TimeValue.timeValueSeconds(5), false, Setting.Scope.INDEX);, +        this.defaultField = DEFAULT_FIELD_SETTING.get(settings);, +        this.queryStringLenient = QUERY_STRING_LENIENT_SETTING.get(settings);, +        syncInterval = INDEX_TRANSLOG_SYNC_INTERVAL_SETTING.get(settings);, +++ b/core/src/test/java/org/elasticsearch/codecs/CodecTests.java, +import org.elasticsearch.plugins.Plugin;, +import org.elasticsearch.test.InternalSettingsPluging;, +import java.util.Collection;, +    @Override, +    protected Collection<Class<? extends Plugin>> getPlugins() {, +        return pluginList(InternalSettingsPluging.class);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopeSettings.java, +        IndexSettings.INDEX_TRANSLOG_SYNC_INTERVAL_SETTING,, +        IndexSettings.DEFAULT_FIELD_SETTING,, +        IndexSettings.QUERY_STRING_LENIENT_SETTING,, +        // this sucks but we can't really validate all the analyzers/similarity in here, +        Setting.groupSetting("index.similarity.", false, Setting.Scope.INDEX), // this allows similarity settings to be passed, +        Setting.groupSetting("index.analysis.", false, Setting.Scope.INDEX) // this allows analysis settings to be passed, +, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +import java.util.function.Function;, +    public static final Setting<String> DEFAULT_FIELD_SETTING = new Setting<>("index.query.default_field", AllFieldMapper.NAME, Function.identity(), false, Setting.Scope.INDEX);, +    public static final Setting<Boolean> QUERY_STRING_LENIENT_SETTING = Setting.boolSetting("index.query_string.lenient", false, false, Setting.Scope.INDEX);, +    public static final Setting<TimeValue> INDEX_TRANSLOG_SYNC_INTERVAL_SETTING = Setting.timeSetting("index.translog.sync_interval", TimeValue.timeValueSeconds(5), false, Setting.Scope.INDEX);, +        this.defaultField = DEFAULT_FIELD_SETTING.get(settings);, +        this.queryStringLenient = QUERY_STRING_LENIENT_SETTING.get(settings);, +        syncInterval = INDEX_TRANSLOG_SYNC_INTERVAL_SETTING.get(settings);, +++ b/core/src/test/java/org/elasticsearch/codecs/CodecTests.java, +import org.elasticsearch.plugins.Plugin;, +import org.elasticsearch.test.InternalSettingsPluging;, +import java.util.Collection;, +    @Override, +    protected Collection<Class<? extends Plugin>> getPlugins() {, +        return pluginList(InternalSettingsPluging.class);, +    }, +, +++ b/core/src/test/java/org/elasticsearch/index/IndexModuleTests.java, +        IndexModule module = new IndexModule(IndexSettingsModule.newIndexSettings(index, settings, booleanSetting), null, new AnalysisRegistry(null, environment));, +        assertSame(booleanSetting, indexService.getIndexSettings().getScopedSettings().get(booleanSetting.getKey()));, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopeSettings.java, +        IndexSettings.INDEX_TRANSLOG_SYNC_INTERVAL_SETTING,, +        IndexSettings.DEFAULT_FIELD_SETTING,, +        IndexSettings.QUERY_STRING_LENIENT_SETTING,, +        // this sucks but we can't really validate all the analyzers/similarity in here, +        Setting.groupSetting("index.similarity.", false, Setting.Scope.INDEX), // this allows similarity settings to be passed, +        Setting.groupSetting("index.analysis.", false, Setting.Scope.INDEX) // this allows analysis settings to be passed, +, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +import java.util.function.Function;, +    public static final Setting<String> DEFAULT_FIELD_SETTING = new Setting<>("index.query.default_field", AllFieldMapper.NAME, Function.identity(), false, Setting.Scope.INDEX);, +    public static final Setting<Boolean> QUERY_STRING_LENIENT_SETTING = Setting.boolSetting("index.query_string.lenient", false, false, Setting.Scope.INDEX);, +    public static final Setting<TimeValue> INDEX_TRANSLOG_SYNC_INTERVAL_SETTING = Setting.timeSetting("index.translog.sync_interval", TimeValue.timeValueSeconds(5), false, Setting.Scope.INDEX);, +        this.defaultField = DEFAULT_FIELD_SETTING.get(settings);, +        this.queryStringLenient = QUERY_STRING_LENIENT_SETTING.get(settings);, +        syncInterval = INDEX_TRANSLOG_SYNC_INTERVAL_SETTING.get(settings);, +++ b/core/src/test/java/org/elasticsearch/codecs/CodecTests.java, +import org.elasticsearch.plugins.Plugin;, +import org.elasticsearch.test.InternalSettingsPluging;, +import java.util.Collection;, +    @Override, +    protected Collection<Class<? extends Plugin>> getPlugins() {, +        return pluginList(InternalSettingsPluging.class);]