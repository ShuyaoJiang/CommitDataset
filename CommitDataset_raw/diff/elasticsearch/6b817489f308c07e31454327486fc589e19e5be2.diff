[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +    @SuppressWarnings("unchecked"), +        for (Map.Entry<String, Object> entry : source.entrySet()) {, +        indicesOptions(IndicesOptions.fromMap(source, indicesOptions));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +    @SuppressWarnings("unchecked"), +        for (Map.Entry<String, Object> entry : source.entrySet()) {, +        indicesOptions(IndicesOptions.fromMap(source, indicesOptions));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +    @SuppressWarnings("unchecked"), +        indicesOptions(IndicesOptions.fromMap(source, indicesOptions));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +    @SuppressWarnings("unchecked"), +        for (Map.Entry<String, Object> entry : source.entrySet()) {, +        indicesOptions(IndicesOptions.fromMap(source, indicesOptions));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +    @SuppressWarnings("unchecked"), +        indicesOptions(IndicesOptions.fromMap(source, indicesOptions));, +++ b/core/src/test/java/org/elasticsearch/snapshots/SnapshotRequestsTests.java, +        boolean includeIgnoreUnavailable = randomBoolean();, +        if (includeIgnoreUnavailable) {, +            builder.field("ignore_unavailable", indicesOptions.ignoreUnavailable());, +        }, +        boolean expectedIgnoreAvailable = includeIgnoreUnavailable, +            ? indicesOptions.ignoreUnavailable(), +            : IndicesOptions.strictExpandOpen().ignoreUnavailable();, +        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());, +        boolean includeIgnoreUnavailable = randomBoolean();, +        if (includeIgnoreUnavailable) {, +            builder.field("ignore_unavailable", indicesOptions.ignoreUnavailable());, +        }, +        boolean expectedIgnoreAvailable = includeIgnoreUnavailable, +            ? indicesOptions.ignoreUnavailable(), +            : IndicesOptions.strictExpandOpen().ignoreUnavailable();, +        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +    @SuppressWarnings("unchecked"), +        for (Map.Entry<String, Object> entry : source.entrySet()) {, +        indicesOptions(IndicesOptions.fromMap(source, indicesOptions));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +    @SuppressWarnings("unchecked"), +        indicesOptions(IndicesOptions.fromMap(source, indicesOptions));, +++ b/core/src/test/java/org/elasticsearch/snapshots/SnapshotRequestsTests.java, +        boolean includeIgnoreUnavailable = randomBoolean();, +        if (includeIgnoreUnavailable) {, +            builder.field("ignore_unavailable", indicesOptions.ignoreUnavailable());, +        }, +        boolean expectedIgnoreAvailable = includeIgnoreUnavailable, +            ? indicesOptions.ignoreUnavailable(), +            : IndicesOptions.strictExpandOpen().ignoreUnavailable();, +        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());, +        boolean includeIgnoreUnavailable = randomBoolean();, +        if (includeIgnoreUnavailable) {, +            builder.field("ignore_unavailable", indicesOptions.ignoreUnavailable());, +        }, +        boolean expectedIgnoreAvailable = includeIgnoreUnavailable, +            ? indicesOptions.ignoreUnavailable(), +            : IndicesOptions.strictExpandOpen().ignoreUnavailable();, +        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/snapshot.create/10_basic.yml, +, +---, +"Create a snapshot for missing index":, +  - skip:, +      version: " - 6.99.99", +      reason: ignore_unavailable default is false in 7.0.0, +, +  - do:, +      catch: missing, +      snapshot.create:, +        repository: test_repo_create_1, +        snapshot: test_snapshot_1, +        wait_for_completion: true, +        body: |, +          { "indices": "missing_1" }, +, +  - do:, +      snapshot.create:, +        repository: test_repo_create_1, +        snapshot: test_snapshot_2, +        wait_for_completion: true, +        body: |, +          { "indices": "missing_2", "ignore_unavailable": true }, +, +  - match: { snapshot.snapshot: test_snapshot_2 }, +  - match: { snapshot.state : SUCCESS }, +  - match: { snapshot.shards.successful: 0 }, +  - match: { snapshot.shards.failed : 0 }, +, +  - do:, +      snapshot.delete:, +        repository: test_repo_create_1, +        snapshot: test_snapshot_2, +, +  - match: { acknowledged: true }]