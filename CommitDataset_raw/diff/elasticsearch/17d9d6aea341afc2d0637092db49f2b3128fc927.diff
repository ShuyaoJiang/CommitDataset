[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java, +        if (AUTODETECT_PROCESS.get(settings) && MachineLearningFeatureSet.isRunningOnMlPlatform(true)) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java, +        if (AUTODETECT_PROCESS.get(settings) && MachineLearningFeatureSet.isRunningOnMlPlatform(true)) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearningFeatureSet.java, +import org.apache.lucene.util.Constants;, +import org.elasticsearch.plugins.Platforms;, +import java.util.Arrays;, +    /**, +     * List of platforms for which the native processes are available, +     */, +    private static final List<String> mlPlatforms =, +            Arrays.asList("darwin-x86_64", "linux-x86_64", "windows-x86_64");, +, +                if (isRunningOnMlPlatform(enabled)) {, +                }, +                    throw new ElasticsearchException("Cannot communicate with Machine Learning native code");, +    static boolean isRunningOnMlPlatform(boolean fatalIfNot) {, +        return isRunningOnMlPlatform(Constants.OS_NAME, Constants.OS_ARCH, fatalIfNot);, +    }, +, +    static boolean isRunningOnMlPlatform(String osName, String osArch, boolean fatalIfNot) {, +        String platformName = Platforms.platformName(osName, osArch);, +        if (mlPlatforms.contains(platformName)) {, +            return true;, +        }, +        if (fatalIfNot) {, +            throw new ElasticsearchException("X-Pack is not supported and Machine Learning is not available for [" + platformName, +                    + "]; you can use the other X-Pack features (unsupported) by setting xpack.ml.enabled: false in elasticsearch.yml");, +        }, +        return false;, +    }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java, +        if (AUTODETECT_PROCESS.get(settings) && MachineLearningFeatureSet.isRunningOnMlPlatform(true)) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearningFeatureSet.java, +import org.apache.lucene.util.Constants;, +import org.elasticsearch.plugins.Platforms;, +import java.util.Arrays;, +    /**, +     * List of platforms for which the native processes are available, +     */, +    private static final List<String> mlPlatforms =, +            Arrays.asList("darwin-x86_64", "linux-x86_64", "windows-x86_64");, +, +                if (isRunningOnMlPlatform(enabled)) {, +                }, +                    throw new ElasticsearchException("Cannot communicate with Machine Learning native code");, +    static boolean isRunningOnMlPlatform(boolean fatalIfNot) {, +        return isRunningOnMlPlatform(Constants.OS_NAME, Constants.OS_ARCH, fatalIfNot);, +    }, +, +    static boolean isRunningOnMlPlatform(String osName, String osArch, boolean fatalIfNot) {, +        String platformName = Platforms.platformName(osName, osArch);, +        if (mlPlatforms.contains(platformName)) {, +            return true;, +        }, +        if (fatalIfNot) {, +            throw new ElasticsearchException("X-Pack is not supported and Machine Learning is not available for [" + platformName, +                    + "]; you can use the other X-Pack features (unsupported) by setting xpack.ml.enabled: false in elasticsearch.yml");, +        }, +        return false;, +    }, +, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/MachineLearningFeatureSetTests.java, +import org.elasticsearch.ElasticsearchException;, +    public void testIsRunningOnMlPlatform() {, +        assertTrue(MachineLearningFeatureSet.isRunningOnMlPlatform("Linux", "amd64", true));, +        assertTrue(MachineLearningFeatureSet.isRunningOnMlPlatform("Windows 10", "amd64", true));, +        assertTrue(MachineLearningFeatureSet.isRunningOnMlPlatform("Mac OS X", "x86_64", true));, +        assertFalse(MachineLearningFeatureSet.isRunningOnMlPlatform("Linux", "i386", false));, +        assertFalse(MachineLearningFeatureSet.isRunningOnMlPlatform("Windows 10", "i386", false));, +        assertFalse(MachineLearningFeatureSet.isRunningOnMlPlatform("SunOS", "amd64", false));, +        expectThrows(ElasticsearchException.class,, +                () -> MachineLearningFeatureSet.isRunningOnMlPlatform("Linux", "i386", true));, +        expectThrows(ElasticsearchException.class,, +                () -> MachineLearningFeatureSet.isRunningOnMlPlatform("Windows 10", "i386", true));, +        expectThrows(ElasticsearchException.class,, +                () -> MachineLearningFeatureSet.isRunningOnMlPlatform("SunOS", "amd64", true));, +    }, +]