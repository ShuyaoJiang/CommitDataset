[+++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +        TokenStream source;, +        List<String> tlist = new ArrayList<>();, +, +        try {, +            source.close();, +        } catch (IOException e) {, +            // ignore, +                    try {, +                        TokenStream source = getAnalyzer().tokenStream(field, tmp.toString());, +                        source.close();, +                TokenStream source = getAnalyzer().tokenStream(field, tmp.toString());, +                source.close();, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +        TokenStream source;, +        List<String> tlist = new ArrayList<>();, +, +        try {, +            source.close();, +        } catch (IOException e) {, +            // ignore, +                    try {, +                        TokenStream source = getAnalyzer().tokenStream(field, tmp.toString());, +                        source.close();, +                TokenStream source = getAnalyzer().tokenStream(field, tmp.toString());, +                source.close();, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +      TokenStream ts = queryAnalyzer.tokenStream("", key.toString());, +      try {, +      } finally {, +          IOUtils.closeWhileHandlingException(ts);, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +        TokenStream source;, +        List<String> tlist = new ArrayList<>();, +, +        try {, +            source.close();, +        } catch (IOException e) {, +            // ignore, +                    try {, +                        TokenStream source = getAnalyzer().tokenStream(field, tmp.toString());, +                        source.close();, +                TokenStream source = getAnalyzer().tokenStream(field, tmp.toString());, +                source.close();, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +      TokenStream ts = queryAnalyzer.tokenStream("", key.toString());, +      try {, +      } finally {, +          IOUtils.closeWhileHandlingException(ts);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +        TokenStream stream = null;, +            try {, +                stream = analyzer.tokenStream(field, text);, +, +            } finally {, +                IOUtils.closeWhileHandlingException(stream);, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +        TokenStream source;, +        List<String> tlist = new ArrayList<>();, +, +        try {, +            source.close();, +        } catch (IOException e) {, +            // ignore, +                    try {, +                        TokenStream source = getAnalyzer().tokenStream(field, tmp.toString());, +                        source.close();, +                TokenStream source = getAnalyzer().tokenStream(field, tmp.toString());, +                source.close();, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +      TokenStream ts = queryAnalyzer.tokenStream("", key.toString());, +      try {, +      } finally {, +          IOUtils.closeWhileHandlingException(ts);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +        TokenStream stream = null;, +            try {, +                stream = analyzer.tokenStream(field, text);, +, +            } finally {, +                IOUtils.closeWhileHandlingException(stream);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                        operation = indexShard.prepareIndex(sourceToParse, indexRequest.version(), indexRequest.versionType(), Engine.Operation.Origin.REPLICA);, +                                Engine.Operation.Origin.REPLICA);, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +        TokenStream source;, +        List<String> tlist = new ArrayList<>();, +, +        try {, +            source.close();, +        } catch (IOException e) {, +            // ignore, +                    try {, +                        TokenStream source = getAnalyzer().tokenStream(field, tmp.toString());, +                        source.close();, +                TokenStream source = getAnalyzer().tokenStream(field, tmp.toString());, +                source.close();, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +      TokenStream ts = queryAnalyzer.tokenStream("", key.toString());, +      try {]