[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +            if (js.getThreads() != null) {, +                threads += js.getThreads().getCount();, +            maxUptime = Math.max(maxUptime, js.getUptime().millis());, +            if (js.getMem() != null) {, +                heapUsed += js.getMem().getHeapUsed().bytes();, +                heapMax += js.getMem().getHeapMax().bytes();, +            vmName = jvmInfo.getVmName();, +            vmVersion = jvmInfo.getVmVersion();, +            vmVendor = jvmInfo.getVmVendor();, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +            if (js.getThreads() != null) {, +                threads += js.getThreads().getCount();, +            maxUptime = Math.max(maxUptime, js.getUptime().millis());, +            if (js.getMem() != null) {, +                heapUsed += js.getMem().getHeapUsed().bytes();, +                heapMax += js.getMem().getHeapMax().bytes();, +            vmName = jvmInfo.getVmName();, +            vmVersion = jvmInfo.getVmVersion();, +            vmVendor = jvmInfo.getVmVendor();, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        if (JvmInfo.jvmInfo().getVmName().toLowerCase(Locale.ROOT).contains("client")) {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +            if (js.getThreads() != null) {, +                threads += js.getThreads().getCount();, +            maxUptime = Math.max(maxUptime, js.getUptime().millis());, +            if (js.getMem() != null) {, +                heapUsed += js.getMem().getHeapUsed().bytes();, +                heapMax += js.getMem().getHeapMax().bytes();, +            vmName = jvmInfo.getVmName();, +            vmVersion = jvmInfo.getVmVersion();, +            vmVendor = jvmInfo.getVmVendor();, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        if (JvmInfo.jvmInfo().getVmName().toLowerCase(Locale.ROOT).contains("client")) {, +++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransport.java, +        if (JvmInfo.jvmInfo().getMem().getDirectMemoryMax().bytes() > 0) {, +            long l = (long) ((0.3 * JvmInfo.jvmInfo().getMem().getDirectMemoryMax().bytes()) / workerCount);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +            if (js.getThreads() != null) {, +                threads += js.getThreads().getCount();, +            maxUptime = Math.max(maxUptime, js.getUptime().millis());, +            if (js.getMem() != null) {, +                heapUsed += js.getMem().getHeapUsed().bytes();, +                heapMax += js.getMem().getHeapMax().bytes();, +            vmName = jvmInfo.getVmName();, +            vmVersion = jvmInfo.getVmVersion();, +            vmVendor = jvmInfo.getVmVendor();, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        if (JvmInfo.jvmInfo().getVmName().toLowerCase(Locale.ROOT).contains("client")) {, +++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransport.java, +        if (JvmInfo.jvmInfo().getMem().getDirectMemoryMax().bytes() > 0) {, +            long l = (long) ((0.3 * JvmInfo.jvmInfo().getMem().getDirectMemoryMax().bytes()) / workerCount);, +++ b/src/main/java/org/elasticsearch/indices/memory/IndexingMemoryController.java, +            indexingBuffer = new ByteSizeValue((long) (((double) JvmInfo.jvmInfo().getMem().getHeapMax().bytes()) * (percent / 100)));, +            translogBuffer = new ByteSizeValue((long) (((double) JvmInfo.jvmInfo().getMem().getHeapMax().bytes()) * (percent / 100)));, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +            if (js.getThreads() != null) {, +                threads += js.getThreads().getCount();, +            maxUptime = Math.max(maxUptime, js.getUptime().millis());, +            if (js.getMem() != null) {, +                heapUsed += js.getMem().getHeapUsed().bytes();, +                heapMax += js.getMem().getHeapMax().bytes();, +            vmName = jvmInfo.getVmName();, +            vmVersion = jvmInfo.getVmVersion();, +            vmVendor = jvmInfo.getVmVendor();, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        if (JvmInfo.jvmInfo().getVmName().toLowerCase(Locale.ROOT).contains("client")) {, +++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransport.java, +        if (JvmInfo.jvmInfo().getMem().getDirectMemoryMax().bytes() > 0) {, +            long l = (long) ((0.3 * JvmInfo.jvmInfo().getMem().getDirectMemoryMax().bytes()) / workerCount);, +++ b/src/main/java/org/elasticsearch/indices/memory/IndexingMemoryController.java, +            indexingBuffer = new ByteSizeValue((long) (((double) JvmInfo.jvmInfo().getMem().getHeapMax().bytes()) * (percent / 100)));, +            translogBuffer = new ByteSizeValue((long) (((double) JvmInfo.jvmInfo().getMem().getHeapMax().bytes()) * (percent / 100)));, +++ b/src/main/java/org/elasticsearch/monitor/jvm/JvmInfo.java, +        return this.vmName;, +        return this.vmVersion;, +        return this.vmVendor;, +        return this.startTime;, +        return this.mem;, +        return this.inputArguments;, +        return this.bootClassPath;, +        return this.classPath;, +        return this.systemProperties;, +        public ByteSizeValue getHeapInit() {, +        public ByteSizeValue getHeapMax() {, +        public ByteSizeValue getNonHeapInit() {, +        public ByteSizeValue getNonHeapMax() {, +            return new ByteSizeValue(directMemoryMax);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +            if (js.getThreads() != null) {, +                threads += js.getThreads().getCount();, +            maxUptime = Math.max(maxUptime, js.getUptime().millis());, +            if (js.getMem() != null) {, +                heapUsed += js.getMem().getHeapUsed().bytes();, +                heapMax += js.getMem().getHeapMax().bytes();, +            vmName = jvmInfo.getVmName();, +            vmVersion = jvmInfo.getVmVersion();, +            vmVendor = jvmInfo.getVmVendor();, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        if (JvmInfo.jvmInfo().getVmName().toLowerCase(Locale.ROOT).contains("client")) {]