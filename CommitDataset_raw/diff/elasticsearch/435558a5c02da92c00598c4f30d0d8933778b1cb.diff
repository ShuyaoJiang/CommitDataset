[+++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +                        builder = new FloatFieldMapper.Builder(currentFieldName);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +                        builder = new FloatFieldMapper.Builder(currentFieldName);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregator.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +                        builder = new FloatFieldMapper.Builder(currentFieldName);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregator.java, +++ b/core/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java, +        MapperService mapperService = createIndex("test").mapperService();, +        String mapping = jsonBuilder().startObject(), +                .startObject("type"), +                    .field("numeric_detection", true), +                .endObject().endObject().string();, +        mapperService.merge("type", new CompressedXContent(mapping), MapperService.MergeReason.MAPPING_UPDATE, false);, +        DocumentMapper mapper = mapperService.documentMapper("type");, +                .field("quux", "3.2") // float detected through numeric detection, +        assertThat(update.root().getMapper("quux"), instanceOf(FloatFieldMapper.class));, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +                        builder = new FloatFieldMapper.Builder(currentFieldName);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregator.java, +++ b/core/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java, +        MapperService mapperService = createIndex("test").mapperService();, +        String mapping = jsonBuilder().startObject(), +                .startObject("type"), +                    .field("numeric_detection", true), +                .endObject().endObject().string();, +        mapperService.merge("type", new CompressedXContent(mapping), MapperService.MergeReason.MAPPING_UPDATE, false);, +        DocumentMapper mapper = mapperService.documentMapper("type");, +                .field("quux", "3.2") // float detected through numeric detection, +        assertThat(update.root().getMapper("quux"), instanceOf(FloatFieldMapper.class));, +++ b/core/src/test/java/org/elasticsearch/index/mapper/numeric/SimpleNumericTests.java, +import org.elasticsearch.index.fielddata.IndexNumericFieldData.NumericType;, +import org.elasticsearch.index.mapper.core.FloatFieldMapper;, +        assertThat(mapper, instanceOf(FloatFieldMapper.class));, +        assertThat(luceneDoc.getField("double").numericValue(), instanceOf(Float.class));, +        assertPrecisionStepEquals(NumberFieldMapper.Defaults.PRECISION_STEP_32_BIT, luceneDoc.getField("double"));, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +                        builder = new FloatFieldMapper.Builder(currentFieldName);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregator.java, +++ b/core/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java, +        MapperService mapperService = createIndex("test").mapperService();, +        String mapping = jsonBuilder().startObject(), +                .startObject("type"), +                    .field("numeric_detection", true), +                .endObject().endObject().string();, +        mapperService.merge("type", new CompressedXContent(mapping), MapperService.MergeReason.MAPPING_UPDATE, false);, +        DocumentMapper mapper = mapperService.documentMapper("type");, +                .field("quux", "3.2") // float detected through numeric detection, +        assertThat(update.root().getMapper("quux"), instanceOf(FloatFieldMapper.class));, +++ b/core/src/test/java/org/elasticsearch/index/mapper/numeric/SimpleNumericTests.java, +import org.elasticsearch.index.fielddata.IndexNumericFieldData.NumericType;, +import org.elasticsearch.index.mapper.core.FloatFieldMapper;, +        assertThat(mapper, instanceOf(FloatFieldMapper.class));, +        assertThat(luceneDoc.getField("double").numericValue(), instanceOf(Float.class));, +        assertPrecisionStepEquals(NumberFieldMapper.Defaults.PRECISION_STEP_32_BIT, luceneDoc.getField("double"));, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersIT.java]