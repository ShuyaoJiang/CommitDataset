[+++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    JvmGcMonitorService.GC_OVERHEAD_WARN_SETTING,, +                    JvmGcMonitorService.GC_OVERHEAD_INFO_SETTING,, +                    JvmGcMonitorService.GC_OVERHEAD_DEBUG_SETTING,, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    JvmGcMonitorService.GC_OVERHEAD_WARN_SETTING,, +                    JvmGcMonitorService.GC_OVERHEAD_INFO_SETTING,, +                    JvmGcMonitorService.GC_OVERHEAD_DEBUG_SETTING,, +++ b/core/src/main/java/org/elasticsearch/common/settings/Setting.java, +import java.io.IOException;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.EnumSet;, +import java.util.List;, +import java.util.Map;, +import java.util.Objects;, +import java.util.function.BiConsumer;, +import java.util.function.Consumer;, +import java.util.function.Function;, +import java.util.regex.Pattern;, +import java.util.stream.Collectors;, +, +            throw new IllegalArgumentException("Failed to parse value [" + s + "] for setting [" + key + "] must be <= " + maxValue);, +            throw new IllegalArgumentException("Failed to parse value [" + s + "] for setting [" + key + "] must be <= " + maxValue);, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    JvmGcMonitorService.GC_OVERHEAD_WARN_SETTING,, +                    JvmGcMonitorService.GC_OVERHEAD_INFO_SETTING,, +                    JvmGcMonitorService.GC_OVERHEAD_DEBUG_SETTING,, +++ b/core/src/main/java/org/elasticsearch/common/settings/Setting.java, +import java.io.IOException;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.EnumSet;, +import java.util.List;, +import java.util.Map;, +import java.util.Objects;, +import java.util.function.BiConsumer;, +import java.util.function.Consumer;, +import java.util.function.Function;, +import java.util.regex.Pattern;, +import java.util.stream.Collectors;, +, +            throw new IllegalArgumentException("Failed to parse value [" + s + "] for setting [" + key + "] must be <= " + maxValue);, +            throw new IllegalArgumentException("Failed to parse value [" + s + "] for setting [" + key + "] must be <= " + maxValue);, +++ b/core/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java, +import java.util.Locale;, +    private final GcOverheadThreshold gcOverheadThreshold;, +    public final static Setting<Integer> GC_OVERHEAD_WARN_SETTING =, +        Setting.intSetting("monitor.jvm.gc.overhead.warn", 50, 0, 100, Property.NodeScope);, +    public final static Setting<Integer> GC_OVERHEAD_INFO_SETTING =, +        Setting.intSetting("monitor.jvm.gc.overhead.info", 25, 0, 100, Property.NodeScope);, +    public final static Setting<Integer> GC_OVERHEAD_DEBUG_SETTING =, +        Setting.intSetting("monitor.jvm.gc.overhead.debug", 10, 0, 100, Property.NodeScope);, +, +    static class GcOverheadThreshold {, +        final int warnThreshold;, +        final int infoThreshold;, +        final int debugThreshold;, +, +        public GcOverheadThreshold(final int warnThreshold, final int infoThreshold, final int debugThreshold) {, +            this.warnThreshold = warnThreshold;, +            this.infoThreshold = infoThreshold;, +            this.debugThreshold = debugThreshold;, +        }, +    }, +, +, +, +        if (GC_OVERHEAD_WARN_SETTING.get(settings) <= GC_OVERHEAD_INFO_SETTING.get(settings)) {, +            final String message =, +                String.format(, +                    Locale.ROOT,, +                    "[%s] must be greater than [%s] [%d] but was [%d]",, +                    GC_OVERHEAD_WARN_SETTING.getKey(),, +                    GC_OVERHEAD_INFO_SETTING.getKey(),, +                    GC_OVERHEAD_INFO_SETTING.get(settings),, +                    GC_OVERHEAD_WARN_SETTING.get(settings));, +            throw new IllegalArgumentException(message);, +        }, +        if (GC_OVERHEAD_INFO_SETTING.get(settings) <= GC_OVERHEAD_DEBUG_SETTING.get(settings)) {, +            final String message =, +                String.format(, +                    Locale.ROOT,, +                    "[%s] must be greater than [%s] [%d] but was [%d]",, +                    GC_OVERHEAD_INFO_SETTING.getKey(),, +                    GC_OVERHEAD_DEBUG_SETTING.getKey(),, +                    GC_OVERHEAD_DEBUG_SETTING.get(settings),, +                    GC_OVERHEAD_INFO_SETTING.get(settings));, +            throw new IllegalArgumentException(message);, +        }, +, +        this.gcOverheadThreshold = new GcOverheadThreshold(, +            GC_OVERHEAD_WARN_SETTING.get(settings),, +            GC_OVERHEAD_INFO_SETTING.get(settings),, +            GC_OVERHEAD_DEBUG_SETTING.get(settings));, +, +        logger.debug(, +            "enabled [{}], interval [{}], gc_threshold [{}], overhead [{}, {}, {}]",, +            this.enabled,, +            this.interval,]