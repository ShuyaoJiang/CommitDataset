[+++ b/src/main/java/org/elasticsearch/shield/ShieldPlugin.java, +import java.util.Map;, +    public static final String ENABLED_SETTING_NAME = NAME + ".enabled";, +, +, +        ImmutableSettings.Builder settingsBuilder = ImmutableSettings.settingsBuilder();, +        addUserSettings(settingsBuilder);, +        addTribeSettings(settingsBuilder);, +        return settingsBuilder.build();, +, +    private void addUserSettings(ImmutableSettings.Builder settingsBuilder) {, +        String authHeaderSettingName = Headers.PREFIX + "." + UsernamePasswordToken.BASIC_AUTH_HEADER;, +        if (settings.get(authHeaderSettingName) != null) {, +            return;, +        String userSetting = settings.get("shield.user");, +        if (userSetting == null) {, +            return;, +        }, +        int i = userSetting.indexOf(":");, +        if (i < 0 || i == userSetting.length() - 1) {, +        String username = userSetting.substring(0, i);, +        String password = userSetting.substring(i + 1);, +        settingsBuilder.put(authHeaderSettingName, UsernamePasswordToken.basicAuthHeaderValue(username, new SecuredString(password.toCharArray())));, +    }, +, +    /*, +     We inject additional settings on each tribe client if the current node is a tribe node, to make sure that every tribe has shield installed and enabled too:, +     - if shield is loaded on the tribe node we make sure it is also loaded on every tribe, by making it mandatory there, +     (this means that the tribe node will fail at startup if shield is not loaded on any tribe due to missing mandatory plugin), +     - if shield is loaded and enabled on the tribe node, we make sure it is also enabled on every tribe, by forcibly enabling it, +       (that means it's not possible to disable shield on the tribe clients), +     */, +    private void addTribeSettings(ImmutableSettings.Builder settingsBuilder) {, +        Map<String, Settings> tribesSettings = settings.getGroups("tribe", true);, +        if (tribesSettings.isEmpty()) {, +            return;, +        }, +, +        for (Map.Entry<String, Settings> tribeSettings : tribesSettings.entrySet()) {, +            String tribePrefix = "tribe." + tribeSettings.getKey() + ".";, +, +            //we copy over existing mandatory plugins under additional settings, as they would get overridden otherwise (arrays don't get merged), +            String[] existingMandatoryPlugins = tribeSettings.getValue().getAsArray("plugin.mandatory", null);, +            if (existingMandatoryPlugins == null) {, +                //shield is mandatory on every tribe if installed and enabled on the tribe node, +                settingsBuilder.putArray(tribePrefix + "plugin.mandatory", NAME);, +            } else {, +                if (!isShieldMandatory(existingMandatoryPlugins)) {, +                    String[] updatedMandatoryPlugins = new String[existingMandatoryPlugins.length + 1];, +                    System.arraycopy(existingMandatoryPlugins, 0, updatedMandatoryPlugins, 0, existingMandatoryPlugins.length);, +                    updatedMandatoryPlugins[updatedMandatoryPlugins.length - 1] = NAME;, +                    //shield is mandatory on every tribe if installed and enabled on the tribe node, +                    settingsBuilder.putArray(tribePrefix + "plugin.mandatory", updatedMandatoryPlugins);, +                }, +            }, +            //shield must be enabled on every tribe if it's enabled on the tribe node, +            settingsBuilder.put(tribePrefix + ENABLED_SETTING_NAME, true);, +        }, +    }, +, +    private static boolean isShieldMandatory(String[] existingMandatoryPlugins) {, +        for (String existingMandatoryPlugin : existingMandatoryPlugins) {, +            if (NAME.equals(existingMandatoryPlugin)) {, +                return true;, +            }, +        }, +        return false;, +        return settings.getAsBoolean(ENABLED_SETTING_NAME, true);, +++ b/src/main/java/org/elasticsearch/shield/ShieldPlugin.java, +import java.util.Map;, +    public static final String ENABLED_SETTING_NAME = NAME + ".enabled";, +, +, +        ImmutableSettings.Builder settingsBuilder = ImmutableSettings.settingsBuilder();, +        addUserSettings(settingsBuilder);, +        addTribeSettings(settingsBuilder);, +        return settingsBuilder.build();, +, +    private void addUserSettings(ImmutableSettings.Builder settingsBuilder) {, +        String authHeaderSettingName = Headers.PREFIX + "." + UsernamePasswordToken.BASIC_AUTH_HEADER;, +        if (settings.get(authHeaderSettingName) != null) {, +            return;, +        String userSetting = settings.get("shield.user");, +        if (userSetting == null) {, +            return;, +        }, +        int i = userSetting.indexOf(":");, +        if (i < 0 || i == userSetting.length() - 1) {, +        String username = userSetting.substring(0, i);, +        String password = userSetting.substring(i + 1);, +        settingsBuilder.put(authHeaderSettingName, UsernamePasswordToken.basicAuthHeaderValue(username, new SecuredString(password.toCharArray())));, +    }, +, +    /*, +     We inject additional settings on each tribe client if the current node is a tribe node, to make sure that every tribe has shield installed and enabled too:, +     - if shield is loaded on the tribe node we make sure it is also loaded on every tribe, by making it mandatory there, +     (this means that the tribe node will fail at startup if shield is not loaded on any tribe due to missing mandatory plugin), +     - if shield is loaded and enabled on the tribe node, we make sure it is also enabled on every tribe, by forcibly enabling it, +       (that means it's not possible to disable shield on the tribe clients), +     */]