[+++ b/docs/reference/how-to/indexing-speed.asciidoc, +++ b/docs/reference/how-to/indexing-speed.asciidoc, +++ b/docs/reference/how-to/recipes.asciidoc, +* <<mixing-exact-search-with-stemming,Mixing exact search with stemming>>, +* <<consistent-scoring,Getting consistent scores>>, +* <<static-scoring-signals,Incorporating static relevance signals into the score>>, +++ b/docs/reference/how-to/indexing-speed.asciidoc, +++ b/docs/reference/how-to/recipes.asciidoc, +* <<mixing-exact-search-with-stemming,Mixing exact search with stemming>>, +* <<consistent-scoring,Getting consistent scores>>, +* <<static-scoring-signals,Incorporating static relevance signals into the score>>, +++ b/docs/reference/how-to/recipes/scoring.asciidoc, +(`index.number_of_shards: 1`), which is the default. Then index statistics, +will be the same for all documents and scores will be consistent., +[[static-scoring-signals]], +=== Incorporating static relevance signals into the score, +, +Many domains have static signals that are known to be correlated with relevance., +For instance https://en.wikipedia.org/wiki/PageRank[PageRank] and url length are, +two commonly used features for web search in order to tune the score of web, +pages independently of the query., +, +There are two main queries that allow combining static score contributions with, +textual relevance, eg. as computed with BM25:, + - <<query-dsl-script-score-query,`script_score` query>>, + - <<query-dsl-rank-feature-query,`rank_feature` query>>, +, +For instance imagine that you have a `pagerank` field that you wish to, +combine with the BM25 score so that the final score is equal to, +`score = bm25_score + pagerank / (10 + pagerank)`., +, +With the <<query-dsl-script-score-query,`script_score` query>> the query would, +look like this:, +, +//////////////////////////, +, +[source,js], +--------------------------------------------------, +PUT index, +{, +    "mappings": {, +        "properties": {, +            "body": {, +                "type": "text", +            },, +            "pagerank": {, +                "type": "long", +            }, +        }, +    }, +}, +--------------------------------------------------, +// CONSOLE, +// TEST, +, +//////////////////////////, +, +[source,js], +--------------------------------------------------, +GET index/_search, +{, +    "query" : {, +        "script_score" : {, +            "query" : {, +                "match": { "body": "elasticsearch" }, +            },, +            "script" : {, +                "source" : "_score * saturation(doc['pagerank'].value, 10)" <1>, +            }, +        }, +    }, +}, +--------------------------------------------------, +// CONSOLE, +//TEST[continued], +<1> `pagerank` must be mapped as a <<number>>, +, +while with the <<query-dsl-rank-feature-query,`rank_feature` query>> it would, +look like below:, +, +//////////////////////////, +, +[source,js], +--------------------------------------------------, +PUT index, +{, +    "mappings": {, +        "properties": {, +            "body": {, +                "type": "text", +            },, +            "pagerank": {, +                "type": "rank_feature", +            }, +        }, +    }, +}, +--------------------------------------------------, +// CONSOLE, +// TEST]