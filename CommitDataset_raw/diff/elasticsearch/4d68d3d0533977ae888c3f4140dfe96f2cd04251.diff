[+++ b/docs/reference/docs/update.asciidoc, +, +In addition to `_source`, the following variables are available through, +the `ctx` map: `_index`, `_type`, `_id`, `_version`, `_routing`,, +`_parent`, `_timestamp`, `_ttl`., +++ b/docs/reference/docs/update.asciidoc, +, +In addition to `_source`, the following variables are available through, +the `ctx` map: `_index`, `_type`, `_id`, `_version`, `_routing`,, +`_parent`, `_timestamp`, `_ttl`., +++ b/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +import org.elasticsearch.index.mapper.internal.TimestampFieldMapper;, +import org.elasticsearch.index.service.IndexService;, +                new String[]{RoutingFieldMapper.NAME, ParentFieldMapper.NAME, TTLFieldMapper.NAME, TimestampFieldMapper.NAME},, +        String timestamp = null;, +            Map<String, Object> ctx = new HashMap<>(16);, +            Long originalTtl = getResult.getFields().containsKey(TTLFieldMapper.NAME) ? (Long) getResult.field(TTLFieldMapper.NAME).getValue() : null;, +            Long originalTimestamp = getResult.getFields().containsKey(TimestampFieldMapper.NAME) ? (Long) getResult.field(TimestampFieldMapper.NAME).getValue() : null;, +            ctx.put("_index", getResult.getIndex());, +            ctx.put("_type", getResult.getType());, +            ctx.put("_id", getResult.getId());, +            ctx.put("_version", getResult.getVersion());, +            ctx.put("_routing", routing);, +            ctx.put("_parent", parent);, +            ctx.put("_timestamp", originalTimestamp);, +            ctx.put("_ttl", originalTtl);, +, +            Object fetchedTimestamp = ctx.get("_timestamp");, +            if (fetchedTimestamp != null) {, +                timestamp = fetchedTimestamp.toString();, +            } else if (originalTimestamp != null) {, +                // No timestamp has been given in the update script, so we keep the previous timestamp if there is one, +                timestamp = originalTimestamp.toString();, +            }, +++ b/docs/reference/docs/update.asciidoc, +, +In addition to `_source`, the following variables are available through, +the `ctx` map: `_index`, `_type`, `_id`, `_version`, `_routing`,, +`_parent`, `_timestamp`, `_ttl`., +++ b/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +import org.elasticsearch.index.mapper.internal.TimestampFieldMapper;, +import org.elasticsearch.index.service.IndexService;, +                new String[]{RoutingFieldMapper.NAME, ParentFieldMapper.NAME, TTLFieldMapper.NAME, TimestampFieldMapper.NAME},, +        String timestamp = null;, +            Map<String, Object> ctx = new HashMap<>(16);, +            Long originalTtl = getResult.getFields().containsKey(TTLFieldMapper.NAME) ? (Long) getResult.field(TTLFieldMapper.NAME).getValue() : null;, +            Long originalTimestamp = getResult.getFields().containsKey(TimestampFieldMapper.NAME) ? (Long) getResult.field(TimestampFieldMapper.NAME).getValue() : null;, +            ctx.put("_index", getResult.getIndex());, +            ctx.put("_type", getResult.getType());, +            ctx.put("_id", getResult.getId());, +            ctx.put("_version", getResult.getVersion());, +            ctx.put("_routing", routing);, +            ctx.put("_parent", parent);, +            ctx.put("_timestamp", originalTimestamp);, +            ctx.put("_ttl", originalTtl);, +, +            Object fetchedTimestamp = ctx.get("_timestamp");, +            if (fetchedTimestamp != null) {, +                timestamp = fetchedTimestamp.toString();, +            } else if (originalTimestamp != null) {, +                // No timestamp has been given in the update script, so we keep the previous timestamp if there is one, +                timestamp = originalTimestamp.toString();, +            }, +++ b/src/test/java/org/elasticsearch/update/UpdateTests.java, +    public void testContextVariables() throws Exception {, +        createTestIndex();, +, +        // Add child type for testing the _parent context variable, +        client().admin().indices().preparePutMapping("test"), +                .setType("subtype1"), +                .setSource(XContentFactory.jsonBuilder(), +                        .startObject(), +                        .startObject("subtype1"), +                        .startObject("_parent").field("type", "type1").endObject(), +                        .startObject("_timestamp").field("enabled", true).field("store", "yes").endObject(), +                        .startObject("_ttl").field("enabled", true).field("store", "yes").endObject(), +                        .endObject(), +                        .endObject()), +                .execute().actionGet();, +        ensureGreen();, +, +        // Index some documents, +        long timestamp = System.currentTimeMillis();, +        client().prepareIndex(), +                .setIndex("test"), +                .setType("type1"), +                .setId("parentId1"), +                .setTimestamp(String.valueOf(timestamp-1)), +                .setSource("field1", 0, "content", "bar"), +                .execute().actionGet();, +, +        client().prepareIndex(), +                .setIndex("test"), +                .setType("subtype1"), +                .setId("id1"), +                .setParent("parentId1"), +                .setRouting("routing1"), +                .setTimestamp(String.valueOf(timestamp)), +                .setTTL(111211211), +                .setSource("field1", 1, "content", "foo")]