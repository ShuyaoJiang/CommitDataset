[+++ b/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/esnative/NativeUsersStore.java, +import static org.elasticsearch.xpack.security.SecurityLifecycleService.SECURITY_INDEX_NAME;, +                    SearchRequest request = client.prepareSearch(SECURITY_INDEX_NAME), +                            client.prepareGet(SECURITY_INDEX_NAME,, +                        client.prepareUpdate(SECURITY_INDEX_NAME, INDEX_TYPE, getIdForUser(docType, username)), +                    client.prepareIndex(SECURITY_INDEX_NAME, INDEX_TYPE,, +                    client.prepareUpdate(SECURITY_INDEX_NAME, INDEX_TYPE,, +                    client.prepareIndex(SECURITY_INDEX_NAME, INDEX_TYPE,, +                    client.prepareUpdate(SECURITY_INDEX_NAME, INDEX_TYPE,, +                    client.prepareUpdate(SECURITY_INDEX_NAME, INDEX_TYPE,, +                DeleteRequest request = client.prepareDelete(SECURITY_INDEX_NAME,, +                            client.prepareGet(SECURITY_INDEX_NAME, INDEX_TYPE,, +                client.prepareSearch(SECURITY_INDEX_NAME), +++ b/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/esnative/NativeUsersStore.java, +import static org.elasticsearch.xpack.security.SecurityLifecycleService.SECURITY_INDEX_NAME;, +                    SearchRequest request = client.prepareSearch(SECURITY_INDEX_NAME), +                            client.prepareGet(SECURITY_INDEX_NAME,, +                        client.prepareUpdate(SECURITY_INDEX_NAME, INDEX_TYPE, getIdForUser(docType, username)), +                    client.prepareIndex(SECURITY_INDEX_NAME, INDEX_TYPE,, +                    client.prepareUpdate(SECURITY_INDEX_NAME, INDEX_TYPE,, +                    client.prepareIndex(SECURITY_INDEX_NAME, INDEX_TYPE,, +                    client.prepareUpdate(SECURITY_INDEX_NAME, INDEX_TYPE,, +                    client.prepareUpdate(SECURITY_INDEX_NAME, INDEX_TYPE,, +                DeleteRequest request = client.prepareDelete(SECURITY_INDEX_NAME,, +                            client.prepareGet(SECURITY_INDEX_NAME, INDEX_TYPE,, +                client.prepareSearch(SECURITY_INDEX_NAME), +++ b/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/esnative/NativeRealmIntegTests.java, +import static org.elasticsearch.xpack.security.SecurityLifecycleService.SECURITY_INDEX_NAME;, +        ensureGreen(SECURITY_INDEX_NAME);, +        ensureGreen(SECURITY_INDEX_NAME);, +        ensureGreen(SECURITY_INDEX_NAME);, +        ensureGreen(SECURITY_INDEX_NAME);, +        ensureGreen(SECURITY_INDEX_NAME);, +        ensureGreen(SECURITY_INDEX_NAME);, +        ensureGreen(SECURITY_INDEX_NAME);, +        IndicesStatsResponse response = client().admin().indices().prepareStats("foo", SECURITY_INDEX_NAME).get();, +++ b/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/esnative/NativeUsersStore.java, +import static org.elasticsearch.xpack.security.SecurityLifecycleService.SECURITY_INDEX_NAME;, +                    SearchRequest request = client.prepareSearch(SECURITY_INDEX_NAME), +                            client.prepareGet(SECURITY_INDEX_NAME,, +                        client.prepareUpdate(SECURITY_INDEX_NAME, INDEX_TYPE, getIdForUser(docType, username)), +                    client.prepareIndex(SECURITY_INDEX_NAME, INDEX_TYPE,, +                    client.prepareUpdate(SECURITY_INDEX_NAME, INDEX_TYPE,, +                    client.prepareIndex(SECURITY_INDEX_NAME, INDEX_TYPE,, +                    client.prepareUpdate(SECURITY_INDEX_NAME, INDEX_TYPE,, +                    client.prepareUpdate(SECURITY_INDEX_NAME, INDEX_TYPE,, +                DeleteRequest request = client.prepareDelete(SECURITY_INDEX_NAME,, +                            client.prepareGet(SECURITY_INDEX_NAME, INDEX_TYPE,, +                client.prepareSearch(SECURITY_INDEX_NAME), +++ b/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/esnative/NativeRealmIntegTests.java, +import static org.elasticsearch.xpack.security.SecurityLifecycleService.SECURITY_INDEX_NAME;, +        ensureGreen(SECURITY_INDEX_NAME);, +        ensureGreen(SECURITY_INDEX_NAME);, +        ensureGreen(SECURITY_INDEX_NAME);, +        ensureGreen(SECURITY_INDEX_NAME);, +        ensureGreen(SECURITY_INDEX_NAME);, +        ensureGreen(SECURITY_INDEX_NAME);, +        ensureGreen(SECURITY_INDEX_NAME);, +        IndicesStatsResponse response = client().admin().indices().prepareStats("foo", SECURITY_INDEX_NAME).get();, +++ b/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java, +import static org.elasticsearch.xpack.security.SecurityLifecycleService.SECURITY_INDEX_NAME;, +                .put(new IndexMetaData.Builder(SECURITY_INDEX_NAME), +            new DeleteRequest(SECURITY_INDEX_NAME, "type", "id")));, +            new UpdateRequest(SECURITY_INDEX_NAME, "type", "id")));, +            new IndexRequest(SECURITY_INDEX_NAME, "type", "id")));, +        requests.add(new Tuple<>(SearchAction.NAME, new SearchRequest(SECURITY_INDEX_NAME)));, +                new TermVectorsRequest(SECURITY_INDEX_NAME, "type", "id")));, +        requests.add(new Tuple<>(GetAction.NAME, new GetRequest(SECURITY_INDEX_NAME, "type", "id")));, +                new TermVectorsRequest(SECURITY_INDEX_NAME, "type", "id")));, +                .addAliasAction(AliasActions.add().alias("security_alias").index(SECURITY_INDEX_NAME))));, +                new Tuple<>(UpdateSettingsAction.NAME, new UpdateSettingsRequest().indices(SECURITY_INDEX_NAME)));, +        ClusterHealthRequest request = new ClusterHealthRequest(SECURITY_INDEX_NAME);, +        request = new ClusterHealthRequest(SECURITY_INDEX_NAME, "foo", "bar");, +                .put(new IndexMetaData.Builder(SECURITY_INDEX_NAME), +        requests.add(new Tuple<>(IndicesStatsAction.NAME, new IndicesStatsRequest().indices(SECURITY_INDEX_NAME)));, +        requests.add(new Tuple<>(RecoveryAction.NAME, new RecoveryRequest().indices(SECURITY_INDEX_NAME)));, +        requests.add(new Tuple<>(IndicesSegmentsAction.NAME, new IndicesSegmentsRequest().indices(SECURITY_INDEX_NAME)));, +        requests.add(new Tuple<>(GetSettingsAction.NAME, new GetSettingsRequest().indices(SECURITY_INDEX_NAME)));, +                new IndicesShardStoresRequest().indices(SECURITY_INDEX_NAME)));, +                new UpgradeStatusRequest().indices(SECURITY_INDEX_NAME)));, +                .put(new IndexMetaData.Builder(SECURITY_INDEX_NAME), +            new DeleteRequest(SECURITY_INDEX_NAME, "type", "id")));, +                createBulkShardRequest(SECURITY_INDEX_NAME, DeleteRequest::new)));, +            new UpdateRequest(SECURITY_INDEX_NAME, "type", "id")));, +            new IndexRequest(SECURITY_INDEX_NAME, "type", "id")));, +                createBulkShardRequest(SECURITY_INDEX_NAME, IndexRequest::new)));, +        requests.add(new Tuple<>(SearchAction.NAME, new SearchRequest(SECURITY_INDEX_NAME)));, +                new TermVectorsRequest(SECURITY_INDEX_NAME, "type", "id")));, +        requests.add(new Tuple<>(GetAction.NAME, new GetRequest(SECURITY_INDEX_NAME, "type", "id")));, +                new TermVectorsRequest(SECURITY_INDEX_NAME, "type", "id")));, +                .addAliasAction(AliasActions.add().alias("security_alias").index(SECURITY_INDEX_NAME))));, +        requests.add(new Tuple<>(ClusterHealthAction.NAME, new ClusterHealthRequest(SECURITY_INDEX_NAME)));, +                new ClusterHealthRequest(SECURITY_INDEX_NAME, "foo", "bar")));, +                .put(new IndexMetaData.Builder(SECURITY_INDEX_NAME), +++ b/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/esnative/NativeUsersStore.java, +import static org.elasticsearch.xpack.security.SecurityLifecycleService.SECURITY_INDEX_NAME;, +                    SearchRequest request = client.prepareSearch(SECURITY_INDEX_NAME), +                            client.prepareGet(SECURITY_INDEX_NAME,, +                        client.prepareUpdate(SECURITY_INDEX_NAME, INDEX_TYPE, getIdForUser(docType, username)), +                    client.prepareIndex(SECURITY_INDEX_NAME, INDEX_TYPE,]