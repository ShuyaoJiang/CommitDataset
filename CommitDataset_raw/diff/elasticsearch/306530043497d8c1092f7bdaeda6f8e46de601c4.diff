[+++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.transport.TransportSettings;, +        bootstrap.option(ChannelOption.TCP_NODELAY, TransportSettings.TCP_NO_DELAY.get(settings));, +        bootstrap.option(ChannelOption.SO_KEEPALIVE, TransportSettings.TCP_KEEP_ALIVE.get(settings));, +        final ByteSizeValue tcpSendBufferSize = TransportSettings.TCP_SEND_BUFFER_SIZE.get(settings);, +        final ByteSizeValue tcpReceiveBufferSize = TransportSettings.TCP_RECEIVE_BUFFER_SIZE.get(settings);, +        final boolean reuseAddress = TransportSettings.TCP_REUSE_ADDRESS.get(settings);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.transport.TransportSettings;, +        bootstrap.option(ChannelOption.TCP_NODELAY, TransportSettings.TCP_NO_DELAY.get(settings));, +        bootstrap.option(ChannelOption.SO_KEEPALIVE, TransportSettings.TCP_KEEP_ALIVE.get(settings));, +        final ByteSizeValue tcpSendBufferSize = TransportSettings.TCP_SEND_BUFFER_SIZE.get(settings);, +        final ByteSizeValue tcpReceiveBufferSize = TransportSettings.TCP_RECEIVE_BUFFER_SIZE.get(settings);, +        final boolean reuseAddress = TransportSettings.TCP_REUSE_ADDRESS.get(settings);, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4SizeHeaderFrameDecoderTests.java, +import org.elasticsearch.transport.TransportSettings;, +        .put(TransportSettings.BIND_HOST.getKey(), "127.0.0.1"), +        .put(TransportSettings.PORT.getKey(), "0"), +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.transport.TransportSettings;, +        bootstrap.option(ChannelOption.TCP_NODELAY, TransportSettings.TCP_NO_DELAY.get(settings));, +        bootstrap.option(ChannelOption.SO_KEEPALIVE, TransportSettings.TCP_KEEP_ALIVE.get(settings));, +        final ByteSizeValue tcpSendBufferSize = TransportSettings.TCP_SEND_BUFFER_SIZE.get(settings);, +        final ByteSizeValue tcpReceiveBufferSize = TransportSettings.TCP_RECEIVE_BUFFER_SIZE.get(settings);, +        final boolean reuseAddress = TransportSettings.TCP_REUSE_ADDRESS.get(settings);, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4SizeHeaderFrameDecoderTests.java, +import org.elasticsearch.transport.TransportSettings;, +        .put(TransportSettings.BIND_HOST.getKey(), "127.0.0.1"), +        .put(TransportSettings.PORT.getKey(), "0"), +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4TransportIT.java, +import org.elasticsearch.transport.TransportSettings;, +            assertThat(channelProfileName, is(TransportSettings.DEFAULT_PROFILE));, +            channelProfileName = TransportSettings.DEFAULT_PROFILE;, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.transport.TransportSettings;, +        bootstrap.option(ChannelOption.TCP_NODELAY, TransportSettings.TCP_NO_DELAY.get(settings));, +        bootstrap.option(ChannelOption.SO_KEEPALIVE, TransportSettings.TCP_KEEP_ALIVE.get(settings));, +        final ByteSizeValue tcpSendBufferSize = TransportSettings.TCP_SEND_BUFFER_SIZE.get(settings);, +        final ByteSizeValue tcpReceiveBufferSize = TransportSettings.TCP_RECEIVE_BUFFER_SIZE.get(settings);, +        final boolean reuseAddress = TransportSettings.TCP_REUSE_ADDRESS.get(settings);, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4SizeHeaderFrameDecoderTests.java, +import org.elasticsearch.transport.TransportSettings;, +        .put(TransportSettings.BIND_HOST.getKey(), "127.0.0.1"), +        .put(TransportSettings.PORT.getKey(), "0"), +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4TransportIT.java, +import org.elasticsearch.transport.TransportSettings;, +            assertThat(channelProfileName, is(TransportSettings.DEFAULT_PROFILE));, +            channelProfileName = TransportSettings.DEFAULT_PROFILE;, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/NettyTransportMultiPortTests.java, +import org.elasticsearch.transport.TransportSettings;, +            .put(TransportSettings.PORT.getKey(), 22) // will not actually bind to this, +            .put(TransportSettings.PORT.getKey(), 0), +            .put(TransportSettings.PORT.getKey(), 0), +            .put(TransportSettings.PORT.getKey(), 22) // will not actually bind to this, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.transport.TransportSettings;, +        bootstrap.option(ChannelOption.TCP_NODELAY, TransportSettings.TCP_NO_DELAY.get(settings));, +        bootstrap.option(ChannelOption.SO_KEEPALIVE, TransportSettings.TCP_KEEP_ALIVE.get(settings));, +        final ByteSizeValue tcpSendBufferSize = TransportSettings.TCP_SEND_BUFFER_SIZE.get(settings);, +        final ByteSizeValue tcpReceiveBufferSize = TransportSettings.TCP_RECEIVE_BUFFER_SIZE.get(settings);, +        final boolean reuseAddress = TransportSettings.TCP_REUSE_ADDRESS.get(settings);, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4SizeHeaderFrameDecoderTests.java, +import org.elasticsearch.transport.TransportSettings;, +        .put(TransportSettings.BIND_HOST.getKey(), "127.0.0.1"), +        .put(TransportSettings.PORT.getKey(), "0"), +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4TransportIT.java, +import org.elasticsearch.transport.TransportSettings;, +            assertThat(channelProfileName, is(TransportSettings.DEFAULT_PROFILE));, +            channelProfileName = TransportSettings.DEFAULT_PROFILE;, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/NettyTransportMultiPortTests.java, +import org.elasticsearch.transport.TransportSettings;, +            .put(TransportSettings.PORT.getKey(), 22) // will not actually bind to this, +            .put(TransportSettings.PORT.getKey(), 0), +            .put(TransportSettings.PORT.getKey(), 0), +            .put(TransportSettings.PORT.getKey(), 22) // will not actually bind to this, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/SimpleNetty4TransportTests.java, +import org.elasticsearch.transport.TransportSettings;, +        settings = Settings.builder().put(settings).put(TransportSettings.PORT.getKey(), "0").build();, +            .put(TransportSettings.TRACE_LOG_INCLUDE_SETTING.getKey(), ""), +            .put(TransportSettings.TRACE_LOG_EXCLUDE_SETTING.getKey(), "NOTHING"), +            .put(TransportSettings.PORT.getKey(), port), +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.transport.TransportSettings;, +        bootstrap.option(ChannelOption.TCP_NODELAY, TransportSettings.TCP_NO_DELAY.get(settings));, +        bootstrap.option(ChannelOption.SO_KEEPALIVE, TransportSettings.TCP_KEEP_ALIVE.get(settings));, +        final ByteSizeValue tcpSendBufferSize = TransportSettings.TCP_SEND_BUFFER_SIZE.get(settings);, +        final ByteSizeValue tcpReceiveBufferSize = TransportSettings.TCP_RECEIVE_BUFFER_SIZE.get(settings);, +        final boolean reuseAddress = TransportSettings.TCP_REUSE_ADDRESS.get(settings);, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4SizeHeaderFrameDecoderTests.java, +import org.elasticsearch.transport.TransportSettings;, +        .put(TransportSettings.BIND_HOST.getKey(), "127.0.0.1"), +        .put(TransportSettings.PORT.getKey(), "0"), +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4TransportIT.java, +import org.elasticsearch.transport.TransportSettings;, +            assertThat(channelProfileName, is(TransportSettings.DEFAULT_PROFILE));, +            channelProfileName = TransportSettings.DEFAULT_PROFILE;, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/NettyTransportMultiPortTests.java, +import org.elasticsearch.transport.TransportSettings;, +            .put(TransportSettings.PORT.getKey(), 22) // will not actually bind to this, +            .put(TransportSettings.PORT.getKey(), 0)]