[+++ b/.agignore, +++ b/.agignore, +++ /dev/null, +++ b/.agignore, +++ /dev/null, +++ b/marvel_index_template.json, +++ b/.agignore, +++ /dev/null, +++ b/marvel_index_template.json, +++ b/watcher/lib/inject_stats.js, +    var entry = { 'timestamp': workingDate.toISOString() };, +      _.set(entry, fields[index], val);, +        _.set(entry, key, val);, +++ b/.agignore, +++ /dev/null, +++ b/marvel_index_template.json, +++ b/watcher/lib/inject_stats.js, +    var entry = { 'timestamp': workingDate.toISOString() };, +      _.set(entry, fields[index], val);, +        _.set(entry, key, val);, +++ b/watcher/lib/test_no_execute.js, +        dateField: 'timestamp',, +++ b/.agignore, +++ /dev/null, +++ b/marvel_index_template.json, +++ b/watcher/lib/inject_stats.js, +    var entry = { 'timestamp': workingDate.toISOString() };, +      _.set(entry, fields[index], val);, +        _.set(entry, key, val);, +++ b/watcher/lib/test_no_execute.js, +        dateField: 'timestamp',, +++ b/watcher/test/cluster_status.js, +          return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'red' };, +          dateField: 'timestamp',, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'red' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'yellow' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'red' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'yellow' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'red' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'yellow' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'red' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'green' };, +++ b/.agignore, +++ /dev/null, +++ b/marvel_index_template.json, +++ b/watcher/lib/inject_stats.js, +    var entry = { 'timestamp': workingDate.toISOString() };, +      _.set(entry, fields[index], val);, +        _.set(entry, key, val);, +++ b/watcher/lib/test_no_execute.js, +        dateField: 'timestamp',, +++ b/watcher/test/cluster_status.js, +          return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'red' };, +          dateField: 'timestamp',, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'red' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'yellow' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'red' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'yellow' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'red' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'yellow' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'red' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'green' };, +++ b/watcher/watches/cluster_status.json, +                        "timestamp": {, +          "fields": ["timestamp","status"],, +              "timestamp": {, +                "field": "timestamp",, +++ b/.agignore, +++ /dev/null, +++ b/marvel_index_template.json, +++ b/watcher/lib/inject_stats.js, +    var entry = { 'timestamp': workingDate.toISOString() };, +      _.set(entry, fields[index], val);, +        _.set(entry, key, val);, +++ b/watcher/lib/test_no_execute.js, +        dateField: 'timestamp',, +++ b/watcher/test/cluster_status.js, +          return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'red' };, +          dateField: 'timestamp',, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'red' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'yellow' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'red' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'yellow' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'red' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'yellow' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'red' };, +        return { 'timestamp': workingDate.subtract(5, 's').format(), status: 'green' };, +++ b/watcher/watches/cluster_status.json, +                        "timestamp": {, +          "fields": ["timestamp","status"],, +              "timestamp": {, +                "field": "timestamp",, +++ b/watcher/watches/cpu_usage.json, +                  "timestamp": {, +                "field": "timestamp",, +++ b/.agignore, +++ /dev/null, +++ b/marvel_index_template.json, +++ b/watcher/lib/inject_stats.js, +    var entry = { 'timestamp': workingDate.toISOString() };]