[+++ b/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +                    .percolate(request.percolate()), +                    .refresh(request.refresh());, +++ b/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +                    .percolate(request.percolate()), +                    .refresh(request.refresh());, +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +    private boolean refresh = false;, +, +     * Should a refresh be executed post this update operation causing the operation to, +     * be searchable. Note, heavy indexing should not set this to <tt>true</tt>. Defaults, +     * to <tt>false</tt>., +     */, +    public UpdateRequest refresh(boolean refresh) {, +        this.refresh = refresh;, +        return this;, +    }, +, +    public boolean refresh() {, +        return this.refresh;, +    }, +, +    /**, +        refresh = in.readBoolean();, +        out.writeBoolean(refresh);, +++ b/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +                    .percolate(request.percolate()), +                    .refresh(request.refresh());, +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +    private boolean refresh = false;, +, +     * Should a refresh be executed post this update operation causing the operation to, +     * be searchable. Note, heavy indexing should not set this to <tt>true</tt>. Defaults, +     * to <tt>false</tt>., +     */, +    public UpdateRequest refresh(boolean refresh) {, +        this.refresh = refresh;, +        return this;, +    }, +, +    public boolean refresh() {, +        return this.refresh;, +    }, +, +    /**, +        refresh = in.readBoolean();, +        out.writeBoolean(refresh);, +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +     * Should a refresh be executed post this update operation causing the operation to, +     * be searchable. Note, heavy indexing should not set this to <tt>true</tt>. Defaults, +     * to <tt>false</tt>., +     */, +    public UpdateRequestBuilder setRefresh(boolean refresh) {, +        request.refresh(refresh);, +        return this;, +    }, +, +    /**, +++ b/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +                    .percolate(request.percolate()), +                    .refresh(request.refresh());, +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +    private boolean refresh = false;, +, +     * Should a refresh be executed post this update operation causing the operation to, +     * be searchable. Note, heavy indexing should not set this to <tt>true</tt>. Defaults, +     * to <tt>false</tt>., +     */, +    public UpdateRequest refresh(boolean refresh) {, +        this.refresh = refresh;, +        return this;, +    }, +, +    public boolean refresh() {, +        return this.refresh;, +    }, +, +    /**, +        refresh = in.readBoolean();, +        out.writeBoolean(refresh);, +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +     * Should a refresh be executed post this update operation causing the operation to, +     * be searchable. Note, heavy indexing should not set this to <tt>true</tt>. Defaults, +     * to <tt>false</tt>., +     */, +    public UpdateRequestBuilder setRefresh(boolean refresh) {, +        request.refresh(refresh);, +        return this;, +    }, +, +    /**, +++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +import java.util.ArrayList;, +import java.util.Iterator;, +import java.util.List;, +import java.util.Set;, +++ b/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +                    .percolate(request.percolate()), +                    .refresh(request.refresh());, +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequest.java]