[+++ b/x-pack/plugin/security/build.gradle, +, +// add all sub-projects of the qa sub-project, +gradle.projectsEvaluated {, +    project.subprojects, +            .find { it.path == project.path + ":qa" }, +            .subprojects, +            .findAll { it.path.startsWith(project.path + ":qa") }, +            .each { check.dependsOn it.check }, +}, +, +++ b/x-pack/plugin/security/build.gradle, +, +// add all sub-projects of the qa sub-project, +gradle.projectsEvaluated {, +    project.subprojects, +            .find { it.path == project.path + ":qa" }, +            .subprojects, +            .findAll { it.path.startsWith(project.path + ":qa") }, +            .each { check.dependsOn it.check }, +}, +, +++ b/x-pack/plugin/security/qa/build.gradle, +import org.elasticsearch.gradle.test.RestIntegTestTask, +, +apply plugin: 'elasticsearch.build', +unitTest.enabled = false, +, +dependencies {, +    compile project(':test:framework'), +}, +, +subprojects {, +    project.tasks.withType(RestIntegTestTask) {, +        final File xPackResources = new File(xpackProject('plugin').projectDir, 'src/test/resources'), +        project.copyRestSpec.from(xPackResources) {, +            include 'rest-api-spec/api/**', +        }, +    }, +}, +, +++ b/x-pack/plugin/security/build.gradle, +, +// add all sub-projects of the qa sub-project, +gradle.projectsEvaluated {, +    project.subprojects, +            .find { it.path == project.path + ":qa" }, +            .subprojects, +            .findAll { it.path.startsWith(project.path + ":qa") }, +            .each { check.dependsOn it.check }, +}, +, +++ b/x-pack/plugin/security/qa/build.gradle, +import org.elasticsearch.gradle.test.RestIntegTestTask, +, +apply plugin: 'elasticsearch.build', +unitTest.enabled = false, +, +dependencies {, +    compile project(':test:framework'), +}, +, +subprojects {, +    project.tasks.withType(RestIntegTestTask) {, +        final File xPackResources = new File(xpackProject('plugin').projectDir, 'src/test/resources'), +        project.copyRestSpec.from(xPackResources) {, +            include 'rest-api-spec/api/**', +        }, +    }, +}, +, +++ b/x-pack/plugin/security/qa/tls-basic/build.gradle, +import org.elasticsearch.gradle.http.WaitForHttpResource, +, +apply plugin: 'elasticsearch.standalone-rest-test', +apply plugin: 'elasticsearch.rest-test', +, +dependencies {, +  // "org.elasticsearch.plugin:x-pack-core:${version}" doesn't work with idea because the testArtifacts are also here, +  testCompile project(path: xpackModule('core'), configuration: 'default'), +  testCompile project(path: xpackModule('security'), configuration: 'testArtifacts'), +  testCompile project(path: xpackModule('core'), configuration: 'testArtifacts'), +}, +, +forbiddenPatterns {, +    exclude '**/*.key', +    exclude '**/*.p12', +}, +, +File caFile = project.file('src/test/resources/ssl/ca.crt'), +, +integTestCluster {, +  numNodes=2, +, +  extraConfigFile 'http.key', project.projectDir.toPath().resolve('src/test/resources/ssl/http.key'), +  extraConfigFile 'http.crt', project.projectDir.toPath().resolve('src/test/resources/ssl/http.crt'), +  extraConfigFile 'transport.key', project.projectDir.toPath().resolve('src/test/resources/ssl/transport.key'), +  extraConfigFile 'transport.crt', project.projectDir.toPath().resolve('src/test/resources/ssl/transport.crt'), +  extraConfigFile 'ca.crt', caFile, +]