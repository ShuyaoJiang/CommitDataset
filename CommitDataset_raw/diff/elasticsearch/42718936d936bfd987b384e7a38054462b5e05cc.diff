[+++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +                Mapper update = parseObject(context, mapping.root, true);, +    static ObjectMapper parseObject(ParseContext context, ObjectMapper mapper, boolean atRoot) throws IOException {, +        if (atRoot && MapperService.isMetadataField(currentFieldName) &&, +            Version.indexCreated(context.indexSettings()).onOrAfter(Version.V_2_0_0_beta1)) {, +            throw new MapperParsingException("Field [" + currentFieldName + "] is a metadata field and cannot be added inside a document. Use the index API request parameters.");, +        }, +            return parseObject(context, (ObjectMapper) mapper, false);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +                Mapper update = parseObject(context, mapping.root, true);, +    static ObjectMapper parseObject(ParseContext context, ObjectMapper mapper, boolean atRoot) throws IOException {, +        if (atRoot && MapperService.isMetadataField(currentFieldName) &&, +            Version.indexCreated(context.indexSettings()).onOrAfter(Version.V_2_0_0_beta1)) {, +            throw new MapperParsingException("Field [" + currentFieldName + "] is a metadata field and cannot be added inside a document. Use the index API request parameters.");, +        }, +            return parseObject(context, (ObjectMapper) mapper, false);, +++ b/core/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java, +        return DocumentParser.parseObject(ctx, mapper.root(), true);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +                Mapper update = parseObject(context, mapping.root, true);, +    static ObjectMapper parseObject(ParseContext context, ObjectMapper mapper, boolean atRoot) throws IOException {, +        if (atRoot && MapperService.isMetadataField(currentFieldName) &&, +            Version.indexCreated(context.indexSettings()).onOrAfter(Version.V_2_0_0_beta1)) {, +            throw new MapperParsingException("Field [" + currentFieldName + "] is a metadata field and cannot be added inside a document. Use the index API request parameters.");, +        }, +            return parseObject(context, (ObjectMapper) mapper, false);, +++ b/core/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java, +        return DocumentParser.parseObject(ctx, mapper.root(), true);, +++ b/core/src/test/java/org/elasticsearch/index/mapper/all/SimpleAllMapperTests.java, +import org.elasticsearch.index.mapper.SourceToParse;, +, +    public void testIncludeInObjectNotAllowed() throws Exception {, +        String mapping = XContentFactory.jsonBuilder().startObject().startObject("type").endObject().endObject().string();, +        DocumentMapper docMapper = createIndex("test").mapperService().documentMapperParser().parse(mapping);, +, +        try {, +            docMapper.parse("test", "type", "1", XContentFactory.jsonBuilder(), +                .startObject().field("_all", "foo").endObject().bytes());, +            fail("Expected failure to parse metadata field");, +        } catch (MapperParsingException e) {, +            assertTrue(e.getMessage(), e.getMessage().contains("Field [_all] is a metadata field and cannot be added inside a document"));, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +                Mapper update = parseObject(context, mapping.root, true);, +    static ObjectMapper parseObject(ParseContext context, ObjectMapper mapper, boolean atRoot) throws IOException {, +        if (atRoot && MapperService.isMetadataField(currentFieldName) &&, +            Version.indexCreated(context.indexSettings()).onOrAfter(Version.V_2_0_0_beta1)) {, +            throw new MapperParsingException("Field [" + currentFieldName + "] is a metadata field and cannot be added inside a document. Use the index API request parameters.");, +        }, +            return parseObject(context, (ObjectMapper) mapper, false);, +++ b/core/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java, +        return DocumentParser.parseObject(ctx, mapper.root(), true);, +++ b/core/src/test/java/org/elasticsearch/index/mapper/all/SimpleAllMapperTests.java, +import org.elasticsearch.index.mapper.SourceToParse;, +, +    public void testIncludeInObjectNotAllowed() throws Exception {, +        String mapping = XContentFactory.jsonBuilder().startObject().startObject("type").endObject().endObject().string();, +        DocumentMapper docMapper = createIndex("test").mapperService().documentMapperParser().parse(mapping);, +, +        try {, +            docMapper.parse("test", "type", "1", XContentFactory.jsonBuilder(), +                .startObject().field("_all", "foo").endObject().bytes());, +            fail("Expected failure to parse metadata field");, +        } catch (MapperParsingException e) {, +            assertTrue(e.getMessage(), e.getMessage().contains("Field [_all] is a metadata field and cannot be added inside a document"));, +        }, +    }, +++ b/core/src/test/java/org/elasticsearch/index/mapper/id/IdMappingTests.java, +, +    public void testIncludeInObjectNotAllowed() throws Exception {, +        String mapping = XContentFactory.jsonBuilder().startObject().startObject("type").endObject().endObject().string();, +        DocumentMapper docMapper = createIndex("test").mapperService().documentMapperParser().parse(mapping);, +, +        try {, +            docMapper.parse(SourceToParse.source(XContentFactory.jsonBuilder(), +                .startObject().field("_id", "1").endObject().bytes()).type("type"));, +            fail("Expected failure to parse metadata field");, +        } catch (MapperParsingException e) {, +            assertTrue(e.getMessage(), e.getMessage().contains("Field [_id] is a metadata field and cannot be added inside a document"));, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +                Mapper update = parseObject(context, mapping.root, true);, +    static ObjectMapper parseObject(ParseContext context, ObjectMapper mapper, boolean atRoot) throws IOException {, +        if (atRoot && MapperService.isMetadataField(currentFieldName) &&, +            Version.indexCreated(context.indexSettings()).onOrAfter(Version.V_2_0_0_beta1)) {, +            throw new MapperParsingException("Field [" + currentFieldName + "] is a metadata field and cannot be added inside a document. Use the index API request parameters.");, +        }, +            return parseObject(context, (ObjectMapper) mapper, false);, +++ b/core/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java, +        return DocumentParser.parseObject(ctx, mapper.root(), true);, +++ b/core/src/test/java/org/elasticsearch/index/mapper/all/SimpleAllMapperTests.java, +import org.elasticsearch.index.mapper.SourceToParse;, +, +    public void testIncludeInObjectNotAllowed() throws Exception {, +        String mapping = XContentFactory.jsonBuilder().startObject().startObject("type").endObject().endObject().string();, +        DocumentMapper docMapper = createIndex("test").mapperService().documentMapperParser().parse(mapping);, +, +        try {]