[+++ b/docs/reference/docs/bulk.asciidoc, +support the `version_type`/`_version_type` (see <<index-versioning, versioning>>), +++ b/docs/reference/docs/bulk.asciidoc, +support the `version_type`/`_version_type` (see <<index-versioning, versioning>>), +++ b/docs/reference/docs/index_.asciidoc, +==== Version types, +, +Next to the `internal` & `external` version types explained above, Elasticsearch, +also supports other types for specific use cases. Here is an overview of, +the different version types and their semantics., +, +`internal`:: only index the document if the given version is identical to the version, +of the stored document., +, +`external` or `external_gt`:: only index the document if the given version is strictly higher, +than the version of the stored document *or* if there is no existing document. The given, +version will be used as the new version and will be stored with the new document., +, +`external_gte`:: only index the document if the given version is *equal* or higher, +than the version of the stored document. If there is no existing document, +the operation will succeed as well. The given version will be used as the new version, +and will be stored with the new document., +, +`force`:: the document will be indexed regardless of the version of the stored document or if there, +is no existing document. The given version will be used as the new version and will be stored, +with the new document. This version type is typically used for correcting errors., +, +*NOTE*: The `external_gte` & `force` version types are meant for special use cases and should be used, +with care. If used incorrectly, they can result in loss of data., +, +[float], +++ b/docs/reference/docs/bulk.asciidoc, +support the `version_type`/`_version_type` (see <<index-versioning, versioning>>), +++ b/docs/reference/docs/index_.asciidoc, +==== Version types, +, +Next to the `internal` & `external` version types explained above, Elasticsearch, +also supports other types for specific use cases. Here is an overview of, +the different version types and their semantics., +, +`internal`:: only index the document if the given version is identical to the version, +of the stored document., +, +`external` or `external_gt`:: only index the document if the given version is strictly higher, +than the version of the stored document *or* if there is no existing document. The given, +version will be used as the new version and will be stored with the new document., +, +`external_gte`:: only index the document if the given version is *equal* or higher, +than the version of the stored document. If there is no existing document, +the operation will succeed as well. The given version will be used as the new version, +and will be stored with the new document., +, +`force`:: the document will be indexed regardless of the version of the stored document or if there, +is no existing document. The given version will be used as the new version and will be stored, +with the new document. This version type is typically used for correcting errors., +, +*NOTE*: The `external_gte` & `force` version types are meant for special use cases and should be used, +with care. If used incorrectly, they can result in loss of data., +, +[float], +++ b/docs/reference/search/percolate.asciidoc, +++ b/docs/reference/docs/bulk.asciidoc, +support the `version_type`/`_version_type` (see <<index-versioning, versioning>>), +++ b/docs/reference/docs/index_.asciidoc, +==== Version types, +, +Next to the `internal` & `external` version types explained above, Elasticsearch, +also supports other types for specific use cases. Here is an overview of, +the different version types and their semantics., +, +`internal`:: only index the document if the given version is identical to the version, +of the stored document., +, +`external` or `external_gt`:: only index the document if the given version is strictly higher, +than the version of the stored document *or* if there is no existing document. The given, +version will be used as the new version and will be stored with the new document., +, +`external_gte`:: only index the document if the given version is *equal* or higher, +than the version of the stored document. If there is no existing document, +the operation will succeed as well. The given version will be used as the new version, +and will be stored with the new document., +, +`force`:: the document will be indexed regardless of the version of the stored document or if there, +is no existing document. The given version will be used as the new version and will be stored, +with the new document. This version type is typically used for correcting errors., +, +*NOTE*: The `external_gte` & `force` version types are meant for special use cases and should be used, +with care. If used incorrectly, they can result in loss of data., +, +[float], +++ b/docs/reference/search/percolate.asciidoc, +++ b/rest-api-spec/api/count_percolate.json, +          "options": ["internal", "external", "external_gte", "force"],, +++ b/docs/reference/docs/bulk.asciidoc, +support the `version_type`/`_version_type` (see <<index-versioning, versioning>>), +++ b/docs/reference/docs/index_.asciidoc, +==== Version types, +, +Next to the `internal` & `external` version types explained above, Elasticsearch, +also supports other types for specific use cases. Here is an overview of]