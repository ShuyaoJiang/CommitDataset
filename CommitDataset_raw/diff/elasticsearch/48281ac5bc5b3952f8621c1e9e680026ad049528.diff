[+++ /dev/null, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.support.master.AcknowledgedResponse;, +    public AcknowledgedResponse delete(DeleteIndexRequest deleteIndexRequest, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +    public void deleteAsync(DeleteIndexRequest deleteIndexRequest, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    public AcknowledgedResponse putMapping(PutMappingRequest putMappingRequest, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +    public void putMappingAsync(PutMappingRequest putMappingRequest, RequestOptions options,, +                                ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    public AcknowledgedResponse updateAliases(IndicesAliasesRequest indicesAliasesRequest, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +                                   ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    public AcknowledgedResponse close(CloseIndexRequest closeIndexRequest, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +    public void closeAsync(CloseIndexRequest closeIndexRequest, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    public AcknowledgedResponse putSettings(UpdateSettingsRequest updateSettingsRequest, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +                                 ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    public AcknowledgedResponse putTemplate(PutIndexTemplateRequest putIndexTemplateRequest,, +            AcknowledgedResponse::fromXContent, emptySet());, +                                 ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.support.master.AcknowledgedResponse;, +    public AcknowledgedResponse delete(DeleteIndexRequest deleteIndexRequest, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +    public void deleteAsync(DeleteIndexRequest deleteIndexRequest, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    public AcknowledgedResponse putMapping(PutMappingRequest putMappingRequest, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +    public void putMappingAsync(PutMappingRequest putMappingRequest, RequestOptions options,, +                                ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    public AcknowledgedResponse updateAliases(IndicesAliasesRequest indicesAliasesRequest, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +                                   ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    public AcknowledgedResponse close(CloseIndexRequest closeIndexRequest, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +    public void closeAsync(CloseIndexRequest closeIndexRequest, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    public AcknowledgedResponse putSettings(UpdateSettingsRequest updateSettingsRequest, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +                                 ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    public AcknowledgedResponse putTemplate(PutIndexTemplateRequest putIndexTemplateRequest,, +            AcknowledgedResponse::fromXContent, emptySet());, +                                 ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseClient.java, +import org.elasticsearch.action.support.master.AcknowledgedResponse;, +    public AcknowledgedResponse deleteLicense(DeleteLicenseRequest request, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +    public void deleteLicenseAsync(DeleteLicenseRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.support.master.AcknowledgedResponse;, +    public AcknowledgedResponse delete(DeleteIndexRequest deleteIndexRequest, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +    public void deleteAsync(DeleteIndexRequest deleteIndexRequest, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    public AcknowledgedResponse putMapping(PutMappingRequest putMappingRequest, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +    public void putMappingAsync(PutMappingRequest putMappingRequest, RequestOptions options,, +                                ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    public AcknowledgedResponse updateAliases(IndicesAliasesRequest indicesAliasesRequest, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +                                   ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    public AcknowledgedResponse close(CloseIndexRequest closeIndexRequest, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +    public void closeAsync(CloseIndexRequest closeIndexRequest, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    public AcknowledgedResponse putSettings(UpdateSettingsRequest updateSettingsRequest, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +                                 ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    public AcknowledgedResponse putTemplate(PutIndexTemplateRequest putIndexTemplateRequest,, +            AcknowledgedResponse::fromXContent, emptySet());, +                                 ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseClient.java, +import org.elasticsearch.action.support.master.AcknowledgedResponse;, +    public AcknowledgedResponse deleteLicense(DeleteLicenseRequest request, RequestOptions options) throws IOException {, +            AcknowledgedResponse::fromXContent, emptySet());, +    public void deleteLicenseAsync(DeleteLicenseRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java]