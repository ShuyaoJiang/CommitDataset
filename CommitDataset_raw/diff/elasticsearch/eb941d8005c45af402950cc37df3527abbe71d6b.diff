[+++ b/core/src/main/java/org/elasticsearch/action/support/ThreadedActionListener.java, +             // Should the action listener be threaded or not by default. Action listeners are automatically threaded for, +            // the transport client in order to make sure client side code is not executed on IO threads., +            this.threadedListener = TransportClient.CLIENT_TYPE.equals(Client.CLIENT_TYPE_SETTING_S.get(settings));, +++ b/core/src/main/java/org/elasticsearch/action/support/ThreadedActionListener.java, +             // Should the action listener be threaded or not by default. Action listeners are automatically threaded for, +            // the transport client in order to make sure client side code is not executed on IO threads., +            this.threadedListener = TransportClient.CLIENT_TYPE.equals(Client.CLIENT_TYPE_SETTING_S.get(settings));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +                    //nocommit not too sure if these settings are needed here..., +                    .put(Node.NODE_MASTER_SETTING.getKey(), false), +                    .put(Node.NODE_DATA_SETTING.getKey(), false), +                    .put(Node.NODE_INGEST_SETTING.getKey(), false), +++ b/core/src/main/java/org/elasticsearch/action/support/ThreadedActionListener.java, +             // Should the action listener be threaded or not by default. Action listeners are automatically threaded for, +            // the transport client in order to make sure client side code is not executed on IO threads., +            this.threadedListener = TransportClient.CLIENT_TYPE.equals(Client.CLIENT_TYPE_SETTING_S.get(settings));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +                    //nocommit not too sure if these settings are needed here..., +                    .put(Node.NODE_MASTER_SETTING.getKey(), false), +                    .put(Node.NODE_DATA_SETTING.getKey(), false), +                    .put(Node.NODE_INGEST_SETTING.getKey(), false), +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        return Node.NODE_DATA_SETTING.get(settings) || Node.NODE_MASTER_SETTING.get(settings);, +        return data == null ? true : Booleans.parseBooleanExact(data);, +        return master == null ? true : Booleans.parseBooleanExact(master);, +++ b/core/src/main/java/org/elasticsearch/action/support/ThreadedActionListener.java, +             // Should the action listener be threaded or not by default. Action listeners are automatically threaded for, +            // the transport client in order to make sure client side code is not executed on IO threads., +            this.threadedListener = TransportClient.CLIENT_TYPE.equals(Client.CLIENT_TYPE_SETTING_S.get(settings));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +                    //nocommit not too sure if these settings are needed here..., +                    .put(Node.NODE_MASTER_SETTING.getKey(), false), +                    .put(Node.NODE_DATA_SETTING.getKey(), false), +                    .put(Node.NODE_INGEST_SETTING.getKey(), false), +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        return Node.NODE_DATA_SETTING.get(settings) || Node.NODE_MASTER_SETTING.get(settings);, +        return data == null ? true : Booleans.parseBooleanExact(data);, +        return master == null ? true : Booleans.parseBooleanExact(master);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeService.java, +import org.elasticsearch.node.Node;, +        Map<String, String> attributes = new HashMap<>(Node.NODE_ATTRIBUTES.get(this.settings).getAsMap());, +            throw new IllegalArgumentException("node.client setting is no longer supported, use " + Node.NODE_MASTER_SETTING.getKey(), +                + ", " + Node.NODE_DATA_SETTING.getKey() + " and " + Node.NODE_INGEST_SETTING.getKey() + " explicitly instead");, +        //nocommit why don't we remove master as well if it's true? and ingest?, +    public interface CustomAttributesProvider {, +++ b/core/src/main/java/org/elasticsearch/action/support/ThreadedActionListener.java, +             // Should the action listener be threaded or not by default. Action listeners are automatically threaded for, +            // the transport client in order to make sure client side code is not executed on IO threads., +            this.threadedListener = TransportClient.CLIENT_TYPE.equals(Client.CLIENT_TYPE_SETTING_S.get(settings));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +                    //nocommit not too sure if these settings are needed here..., +                    .put(Node.NODE_MASTER_SETTING.getKey(), false), +                    .put(Node.NODE_DATA_SETTING.getKey(), false), +                    .put(Node.NODE_INGEST_SETTING.getKey(), false), +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        return Node.NODE_DATA_SETTING.get(settings) || Node.NODE_MASTER_SETTING.get(settings);, +        return data == null ? true : Booleans.parseBooleanExact(data);, +        return master == null ? true : Booleans.parseBooleanExact(master);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeService.java, +import org.elasticsearch.node.Node;, +        Map<String, String> attributes = new HashMap<>(Node.NODE_ATTRIBUTES.get(this.settings).getAsMap());, +            throw new IllegalArgumentException("node.client setting is no longer supported, use " + Node.NODE_MASTER_SETTING.getKey(), +                + ", " + Node.NODE_DATA_SETTING.getKey() + " and " + Node.NODE_INGEST_SETTING.getKey() + " explicitly instead");, +        //nocommit why don't we remove master as well if it's true? and ingest?, +    public interface CustomAttributesProvider {, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +++ b/core/src/main/java/org/elasticsearch/action/support/ThreadedActionListener.java, +             // Should the action listener be threaded or not by default. Action listeners are automatically threaded for, +            // the transport client in order to make sure client side code is not executed on IO threads., +            this.threadedListener = TransportClient.CLIENT_TYPE.equals(Client.CLIENT_TYPE_SETTING_S.get(settings));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +                    //nocommit not too sure if these settings are needed here..., +                    .put(Node.NODE_MASTER_SETTING.getKey(), false), +                    .put(Node.NODE_DATA_SETTING.getKey(), false), +                    .put(Node.NODE_INGEST_SETTING.getKey(), false), +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        return Node.NODE_DATA_SETTING.get(settings) || Node.NODE_MASTER_SETTING.get(settings);, +        return data == null ? true : Booleans.parseBooleanExact(data);, +        return master == null ? true : Booleans.parseBooleanExact(master);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeService.java, +import org.elasticsearch.node.Node;, +        Map<String, String> attributes = new HashMap<>(Node.NODE_ATTRIBUTES.get(this.settings).getAsMap());, +            throw new IllegalArgumentException("node.client setting is no longer supported, use " + Node.NODE_MASTER_SETTING.getKey(), +                + ", " + Node.NODE_DATA_SETTING.getKey() + " and " + Node.NODE_INGEST_SETTING.getKey() + " explicitly instead");, +        //nocommit why don't we remove master as well if it's true? and ingest?, +    public interface CustomAttributesProvider {, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +            //nocommit we should rename this and its setting, also we ignore node.ingest, but maybe it's ok here, +            if (masterElectionFilterClientNodes && node.masterNode() == false && node.dataNode() == false) {, +                // filter out nodes that don't hold data and are not master eligible, +            } else if (masterElectionFilterDataNodes && node.masterNode() == false && node.dataNode()) {, +                // filter out dedicated data nodes, +++ b/core/src/main/java/org/elasticsearch/action/support/ThreadedActionListener.java, +             // Should the action listener be threaded or not by default. Action listeners are automatically threaded for, +            // the transport client in order to make sure client side code is not executed on IO threads., +            this.threadedListener = TransportClient.CLIENT_TYPE.equals(Client.CLIENT_TYPE_SETTING_S.get(settings));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +                    //nocommit not too sure if these settings are needed here...]