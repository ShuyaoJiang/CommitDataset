[+++ b/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java, +++ b/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                    } else {, +        validateIndexSettings(request.index(), request.settings());, +, +    public void validateIndexSettings(String indexName, Settings settings) throws IndexCreationException {, +        String customPath = settings.get(IndexMetaData.SETTING_DATA_PATH, null);, +        List<String> validationErrors = Lists.newArrayList();, +        if (customPath != null && nodeEnv.isCustomPathsEnabled() == false) {, +            validationErrors.add("custom data_paths for indices is disabled");, +        }, +        Integer number_of_primaries = settings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_SHARDS, null);, +        Integer number_of_replicas = settings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, null);, +        if (number_of_primaries != null && number_of_primaries <= 0) {, +            validationErrors.add("index must have 1 or more primary shards");, +        }, +        if (number_of_replicas != null && number_of_replicas < 0) {, +           validationErrors.add("index must have 0 or more replica shards");, +        }, +        if (validationErrors.isEmpty() == false) {, +            throw new IndexCreationException(new Index(indexName),, +                new ElasticsearchIllegalArgumentException(getMessage(validationErrors)));, +        }, +    }, +, +    private String getMessage(List<String> validationErrors) {, +        StringBuilder sb = new StringBuilder();, +        sb.append("Validation Failed: ");, +        int index = 0;, +        for (String error : validationErrors) {, +            sb.append(++index).append(": ").append(error).append(";");, +        }, +        return sb.toString();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                    } else {, +        validateIndexSettings(request.index(), request.settings());, +, +    public void validateIndexSettings(String indexName, Settings settings) throws IndexCreationException {, +        String customPath = settings.get(IndexMetaData.SETTING_DATA_PATH, null);, +        List<String> validationErrors = Lists.newArrayList();, +        if (customPath != null && nodeEnv.isCustomPathsEnabled() == false) {, +            validationErrors.add("custom data_paths for indices is disabled");, +        }, +        Integer number_of_primaries = settings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_SHARDS, null);, +        Integer number_of_replicas = settings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, null);, +        if (number_of_primaries != null && number_of_primaries <= 0) {, +            validationErrors.add("index must have 1 or more primary shards");, +        }, +        if (number_of_replicas != null && number_of_replicas < 0) {, +           validationErrors.add("index must have 0 or more replica shards");, +        }, +        if (validationErrors.isEmpty() == false) {, +            throw new IndexCreationException(new Index(indexName),, +                new ElasticsearchIllegalArgumentException(getMessage(validationErrors)));, +        }, +    }, +, +    private String getMessage(List<String> validationErrors) {, +        StringBuilder sb = new StringBuilder();, +        sb.append("Validation Failed: ");, +        int index = 0;, +        for (String error : validationErrors) {, +            sb.append(++index).append(": ").append(error).append(";");, +        }, +        return sb.toString();, +++ b/src/main/java/org/elasticsearch/snapshots/RestoreService.java, +                                createIndexService.validateIndexSettings(renamedIndex, snapshotIndexMetaData.settings());, +++ b/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                    } else {, +        validateIndexSettings(request.index(), request.settings());, +, +    public void validateIndexSettings(String indexName, Settings settings) throws IndexCreationException {, +        String customPath = settings.get(IndexMetaData.SETTING_DATA_PATH, null);, +        List<String> validationErrors = Lists.newArrayList();, +        if (customPath != null && nodeEnv.isCustomPathsEnabled() == false) {, +            validationErrors.add("custom data_paths for indices is disabled");, +        }, +        Integer number_of_primaries = settings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_SHARDS, null);, +        Integer number_of_replicas = settings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, null);, +        if (number_of_primaries != null && number_of_primaries <= 0) {, +            validationErrors.add("index must have 1 or more primary shards");, +        }, +        if (number_of_replicas != null && number_of_replicas < 0) {, +           validationErrors.add("index must have 0 or more replica shards");, +        }, +        if (validationErrors.isEmpty() == false) {, +            throw new IndexCreationException(new Index(indexName),, +                new ElasticsearchIllegalArgumentException(getMessage(validationErrors)));, +        }, +    }, +, +    private String getMessage(List<String> validationErrors) {, +        StringBuilder sb = new StringBuilder();, +        sb.append("Validation Failed: ");, +        int index = 0;, +        for (String error : validationErrors) {, +            sb.append(++index).append(": ").append(error).append(";");]