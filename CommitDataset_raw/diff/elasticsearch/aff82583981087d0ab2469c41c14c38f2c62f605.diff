[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetCategoriesAction.java, +import org.elasticsearch.xpack.ml.action.util.PageParams;, +import org.elasticsearch.xpack.ml.action.util.QueryPage;, +            PARSER.declareLong(Request::setCategoryId, CATEGORY_ID);, +        private Long categoryId;, +        public void setCategoryId(Long categoryId) {, +            categoryId = in.readOptionalLong();, +            out.writeOptionalLong(categoryId);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetCategoriesAction.java, +import org.elasticsearch.xpack.ml.action.util.PageParams;, +import org.elasticsearch.xpack.ml.action.util.QueryPage;, +            PARSER.declareLong(Request::setCategoryId, CATEGORY_ID);, +        private Long categoryId;, +        public void setCategoryId(Long categoryId) {, +            categoryId = in.readOptionalLong();, +            out.writeOptionalLong(categoryId);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobProvider.java, +    public void categoryDefinitions(String jobId, Long categoryId, Integer from, Integer size,, +            sourceBuilder.query(QueryBuilders.termQuery(CategoryDefinition.CATEGORY_ID.getPreferredName(), categoryId));, +                    .query(QueryBuilders.existsQuery(CategoryDefinition.CATEGORY_ID.getPreferredName())), +        QueryBuilder finalQuery = QueryBuilders.boolQuery(), +                .filter(QueryBuilders.existsQuery(ModelSnapshot.SNAPSHOT_DOC_COUNT.getPreferredName())), +                .must(qb);, +, +        sourceBuilder.query(finalQuery);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetCategoriesAction.java, +import org.elasticsearch.xpack.ml.action.util.PageParams;, +import org.elasticsearch.xpack.ml.action.util.QueryPage;, +            PARSER.declareLong(Request::setCategoryId, CATEGORY_ID);, +        private Long categoryId;, +        public void setCategoryId(Long categoryId) {, +            categoryId = in.readOptionalLong();, +            out.writeOptionalLong(categoryId);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobProvider.java, +    public void categoryDefinitions(String jobId, Long categoryId, Integer from, Integer size,, +            sourceBuilder.query(QueryBuilders.termQuery(CategoryDefinition.CATEGORY_ID.getPreferredName(), categoryId));, +                    .query(QueryBuilders.existsQuery(CategoryDefinition.CATEGORY_ID.getPreferredName())), +        QueryBuilder finalQuery = QueryBuilders.boolQuery(), +                .filter(QueryBuilders.existsQuery(ModelSnapshot.SNAPSHOT_DOC_COUNT.getPreferredName())), +                .must(qb);, +, +        sourceBuilder.query(finalQuery);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetCategoriesAction.java, +import org.elasticsearch.xpack.ml.job.config.Job;, +        Long categoryId = restRequest.hasParam(Request.CATEGORY_ID.getPreferredName()) ? Long.parseLong(, +                restRequest.param(Request.CATEGORY_ID.getPreferredName())) : null;, +            if (categoryId != null) {, +            if (categoryId != null) {, +                    || categoryId == null){, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetCategoriesAction.java, +import org.elasticsearch.xpack.ml.action.util.PageParams;, +import org.elasticsearch.xpack.ml.action.util.QueryPage;, +            PARSER.declareLong(Request::setCategoryId, CATEGORY_ID);, +        private Long categoryId;, +        public void setCategoryId(Long categoryId) {, +            categoryId = in.readOptionalLong();, +            out.writeOptionalLong(categoryId);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobProvider.java, +    public void categoryDefinitions(String jobId, Long categoryId, Integer from, Integer size,, +            sourceBuilder.query(QueryBuilders.termQuery(CategoryDefinition.CATEGORY_ID.getPreferredName(), categoryId));, +                    .query(QueryBuilders.existsQuery(CategoryDefinition.CATEGORY_ID.getPreferredName())), +        QueryBuilder finalQuery = QueryBuilders.boolQuery(), +                .filter(QueryBuilders.existsQuery(ModelSnapshot.SNAPSHOT_DOC_COUNT.getPreferredName())), +                .must(qb);, +, +        sourceBuilder.query(finalQuery);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetCategoriesAction.java, +import org.elasticsearch.xpack.ml.job.config.Job;, +        Long categoryId = restRequest.hasParam(Request.CATEGORY_ID.getPreferredName()) ? Long.parseLong(, +                restRequest.param(Request.CATEGORY_ID.getPreferredName())) : null;, +            if (categoryId != null) {, +            if (categoryId != null) {, +                    || categoryId == null){, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/action/GetCategoriesRequestTests.java, +            request.setCategoryId(randomNonNegativeLong());, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetCategoriesAction.java, +import org.elasticsearch.xpack.ml.action.util.PageParams;, +import org.elasticsearch.xpack.ml.action.util.QueryPage;, +            PARSER.declareLong(Request::setCategoryId, CATEGORY_ID);, +        private Long categoryId;, +        public void setCategoryId(Long categoryId) {, +            categoryId = in.readOptionalLong();, +            out.writeOptionalLong(categoryId);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobProvider.java, +    public void categoryDefinitions(String jobId, Long categoryId, Integer from, Integer size,, +            sourceBuilder.query(QueryBuilders.termQuery(CategoryDefinition.CATEGORY_ID.getPreferredName(), categoryId));, +                    .query(QueryBuilders.existsQuery(CategoryDefinition.CATEGORY_ID.getPreferredName())), +        QueryBuilder finalQuery = QueryBuilders.boolQuery(), +                .filter(QueryBuilders.existsQuery(ModelSnapshot.SNAPSHOT_DOC_COUNT.getPreferredName())), +                .must(qb);, +, +        sourceBuilder.query(finalQuery);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetCategoriesAction.java, +import org.elasticsearch.xpack.ml.job.config.Job;, +        Long categoryId = restRequest.hasParam(Request.CATEGORY_ID.getPreferredName()) ? Long.parseLong(, +                restRequest.param(Request.CATEGORY_ID.getPreferredName())) : null;, +            if (categoryId != null) {, +            if (categoryId != null) {, +                    || categoryId == null){, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/action/GetCategoriesRequestTests.java]