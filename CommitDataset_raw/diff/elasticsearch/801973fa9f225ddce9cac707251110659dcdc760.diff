[+++ b/docs/plugins/repository-gcs.asciidoc, +  "client_id": "...", +`project_id`::, +, +    The Google Cloud project id. This will be automatically infered from the credentials file but, +    can be specified explicitly. For example, it can be used to switch between projects when the, +    same credentials are usable for both the production and the development projects., +, +++ b/docs/plugins/repository-gcs.asciidoc, +  "client_id": "...", +`project_id`::, +, +    The Google Cloud project id. This will be automatically infered from the credentials file but, +    can be specified explicitly. For example, it can be used to switch between projects when the, +    same credentials are usable for both the production and the development projects., +, +++ b/plugins/repository-gcs/build.gradle, +  compile 'com.google.cloud:google-cloud-storage:1.28.0', +  compile 'com.google.cloud:google-cloud-core:1.28.0', +  compile 'com.google.cloud:google-cloud-core-http:1.28.0', +  compile 'com.google.auth:google-auth-library-oauth2-http:0.9.1', +  compile 'com.google.auth:google-auth-library-credentials:0.9.1', +  compile 'com.google.oauth-client:google-oauth-client:1.23.0', +  compile 'com.google.http-client:google-http-client:1.23.0', +  compile 'com.google.http-client:google-http-client-jackson:1.23.0', +  compile 'com.google.http-client:google-http-client-jackson2:1.23.0', +  compile 'com.google.http-client:google-http-client-appengine:1.23.0', +  compile 'com.google.api-client:google-api-client:1.23.0', +  compile 'com.google.api:gax:1.25.0', +  compile 'com.google.api:gax-httpjson:0.40.0', +  compile 'com.google.api:api-common:1.5.0', +  compile 'com.google.api.grpc:proto-google-common-protos:1.8.0', +  compile 'com.google.guava:guava:20.0', +  compile 'com.google.apis:google-api-services-storage:v1-rev115-1.23.0', +  compile 'org.codehaus.jackson:jackson-core-asl:1.9.13', +  compile 'io.grpc:grpc-context:1.9.0', +  compile 'io.opencensus:opencensus-api:0.11.1', +  compile 'io.opencensus:opencensus-contrib-http-util:0.11.1', +  compile 'org.threeten:threetenbp:1.3.6', +  mapping from: /google-cloud-.*/, to: 'google-cloud', +  mapping from: /google-auth-.*/, to: 'google-auth', +  mapping from: /google-http-.*/, to: 'google-http', +  mapping from: /opencensus.*/, to: 'opencensus', +        // uses internal java api: sun.misc.Unsafe, +        'com.google.common.cache.Striped64',, +        'com.google.common.cache.Striped64$1',, +        'com.google.common.cache.Striped64$Cell',, +        'com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$1',, +        'com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$2',, +        'com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$3',, +        'com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper',, +        'com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1',, +        'com.google.common.hash.LittleEndianByteArray$UnsafeByteArray',, +        'com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator',, +        'com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1',, +        'com.google.appengine.api.datastore.Blob',, +        'com.google.appengine.api.datastore.DatastoreService',, +        'com.google.appengine.api.datastore.DatastoreServiceFactory',, +        'com.google.appengine.api.datastore.Entity',, +        'com.google.appengine.api.datastore.Key',, +        'com.google.appengine.api.datastore.KeyFactory',, +        'com.google.appengine.api.datastore.PreparedQuery',, +        'com.google.appengine.api.datastore.Query',, +        'com.google.appengine.api.memcache.Expiration',, +        'com.google.appengine.api.memcache.MemcacheService',, +        'com.google.appengine.api.memcache.MemcacheServiceFactory',, +        'com.google.appengine.api.urlfetch.FetchOptions$Builder',, +        'com.google.appengine.api.urlfetch.FetchOptions',, +        'com.google.appengine.api.urlfetch.HTTPHeader',, +        'com.google.appengine.api.urlfetch.HTTPMethod',, +        'com.google.appengine.api.urlfetch.HTTPRequest',, +        'com.google.appengine.api.urlfetch.HTTPResponse',, +        'com.google.appengine.api.urlfetch.URLFetchService',, +        'com.google.appengine.api.urlfetch.URLFetchServiceFactory',, +        'com.google.gson.Gson',, +        'com.google.gson.GsonBuilder',, +        'com.google.gson.TypeAdapter',, +        'com.google.gson.stream.JsonReader',, +        'com.google.gson.stream.JsonWriter',, +        'com.google.iam.v1.Binding$Builder',, +        'com.google.iam.v1.Binding',, +        'com.google.iam.v1.Policy$Builder',, +        'com.google.iam.v1.Policy',, +        'com.google.protobuf.AbstractMessageLite$Builder',, +        'com.google.protobuf.AbstractParser',, +        'com.google.protobuf.Any$Builder',, +        'com.google.protobuf.Any',, +        'com.google.protobuf.AnyOrBuilder',, +        'com.google.protobuf.AnyProto',, +        'com.google.protobuf.Api$Builder',, +        'com.google.protobuf.Api',, +        'com.google.protobuf.ApiOrBuilder',, +        'com.google.protobuf.ApiProto',, +        'com.google.protobuf.ByteString',, +        'com.google.protobuf.CodedInputStream',, +        'com.google.protobuf.CodedOutputStream',, +        'com.google.protobuf.DescriptorProtos',, +        'com.google.protobuf.Descriptors$Descriptor',, +        'com.google.protobuf.Descriptors$EnumDescriptor',, +        'com.google.protobuf.Descriptors$EnumValueDescriptor',]