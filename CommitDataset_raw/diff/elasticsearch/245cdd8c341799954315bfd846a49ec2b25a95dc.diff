[+++ b/server/src/main/java/org/elasticsearch/common/network/NetworkModule.java, +import org.elasticsearch.index.shard.PrimaryReplicaSyncer.ResyncTask;, +        namedWriteables.add(, +            new NamedWriteableRegistry.Entry(Task.Status.class, ResyncTask.Status.NAME, ResyncTask.Status::new));, +++ b/server/src/main/java/org/elasticsearch/common/network/NetworkModule.java, +import org.elasticsearch.index.shard.PrimaryReplicaSyncer.ResyncTask;, +        namedWriteables.add(, +            new NamedWriteableRegistry.Entry(Task.Status.class, ResyncTask.Status.NAME, ResyncTask.Status::new));, +++ b/server/src/test/java/org/elasticsearch/index/shard/PrimaryReplicaSyncerTests.java, +import org.elasticsearch.common.io.stream.NamedWriteableAwareStreamInput;, +import org.elasticsearch.common.io.stream.NamedWriteableRegistry;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.network.NetworkModule;, +import org.elasticsearch.tasks.Task;, +    public void testStatusSerializationAsNamedWriteable() throws IOException {, +        PrimaryReplicaSyncer.ResyncTask.Status status = new PrimaryReplicaSyncer.ResyncTask.Status(randomAlphaOfLength(10),, +            randomIntBetween(0, 1000), randomIntBetween(0, 1000), randomIntBetween(0, 1000));, +        try (BytesStreamOutput out = new BytesStreamOutput()) {, +            out.writeNamedWriteable(status);, +            try (StreamInput in = new NamedWriteableAwareStreamInput(, +                new ByteBufferStreamInput(ByteBuffer.wrap(out.bytes().toBytesRef().bytes)),, +                new NamedWriteableRegistry(NetworkModule.getNamedWriteables()))) {, +                assertThat(in.readNamedWriteable(Task.Status.class), equalTo(status));, +            }, +        }, +    }, +]