[+++ b/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +                        // Take into account the previous known nodes, if they happen not to be available, +                        // then fault detection will remove these nodes., +                        DiscoveryNodes.Builder builder = new DiscoveryNodes.Builder(latestDiscoNodes), +++ b/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +                        // Take into account the previous known nodes, if they happen not to be available, +                        // then fault detection will remove these nodes., +                        DiscoveryNodes.Builder builder = new DiscoveryNodes.Builder(latestDiscoNodes), +++ b/src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java, +++ b/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +                        // Take into account the previous known nodes, if they happen not to be available, +                        // then fault detection will remove these nodes., +                        DiscoveryNodes.Builder builder = new DiscoveryNodes.Builder(latestDiscoNodes), +++ b/src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java, +++ b/src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java, +import static org.elasticsearch.test.ElasticsearchIntegrationTest.*;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertExists;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertHitCount;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.greaterThan;]