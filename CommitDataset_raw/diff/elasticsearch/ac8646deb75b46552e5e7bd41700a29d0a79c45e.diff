[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +     * Should each {@link org.elasticsearch.search.SearchHit} be returned with its, +     * version., +     */, +    public SearchRequestBuilder setVersion(boolean version) {, +        sourceBuilder().version(version);, +        return this;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +     * Should each {@link org.elasticsearch.search.SearchHit} be returned with its, +     * version., +     */, +    public SearchRequestBuilder setVersion(boolean version) {, +        sourceBuilder().version(version);, +        return this;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java, +        searchSourceBuilder.version(request.paramAsBoolean("version", null));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +     * Should each {@link org.elasticsearch.search.SearchHit} be returned with its, +     * version., +     */, +    public SearchRequestBuilder setVersion(boolean version) {, +        sourceBuilder().version(version);, +        return this;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java, +        searchSourceBuilder.version(request.paramAsBoolean("version", null));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +    private Boolean version;, +, +    public SearchSourceBuilder explain(boolean explain) {, +     * Should each {@link org.elasticsearch.search.SearchHit} be returned with a version, +     * associated with it., +     */, +    public SearchSourceBuilder version(boolean version) {, +        this.version = version;, +        return this;, +    }, +, +    /**, +        if (version != null) {, +            builder.field("version", version);, +        }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +     * Should each {@link org.elasticsearch.search.SearchHit} be returned with its, +     * version., +     */, +    public SearchRequestBuilder setVersion(boolean version) {, +        sourceBuilder().version(version);, +        return this;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java, +        searchSourceBuilder.version(request.paramAsBoolean("version", null));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +    private Boolean version;, +, +    public SearchSourceBuilder explain(boolean explain) {, +     * Should each {@link org.elasticsearch.search.SearchHit} be returned with a version, +     * associated with it., +     */, +    public SearchSourceBuilder version(boolean version) {, +        this.version = version;, +        return this;, +    }, +, +    /**, +        if (version != null) {, +            builder.field("version", version);, +        }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/explain/ExplainSearchHitPhase.java, +import org.elasticsearch.search.fetch.version.VersionParseElement;, +        return ImmutableMap.of("explain", new ExplainParseElement(), "version", new VersionParseElement());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +     * Should each {@link org.elasticsearch.search.SearchHit} be returned with its, +     * version., +     */, +    public SearchRequestBuilder setVersion(boolean version) {, +        sourceBuilder().version(version);, +        return this;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java, +        searchSourceBuilder.version(request.paramAsBoolean("version", null));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +    private Boolean version;, +, +    public SearchSourceBuilder explain(boolean explain) {, +     * Should each {@link org.elasticsearch.search.SearchHit} be returned with a version]