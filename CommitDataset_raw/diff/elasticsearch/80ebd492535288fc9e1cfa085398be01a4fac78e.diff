[+++ b/README.textile, +In order to ensure a smooth upgrade process from earlier versions of Elasticsearch (< 1.0.0), it is recommended to perform a full cluster restart. Please see the "Upgrading" section of the "setup reference":http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/setup.html., +++ b/README.textile, +In order to ensure a smooth upgrade process from earlier versions of Elasticsearch (< 1.0.0), it is recommended to perform a full cluster restart. Please see the "Upgrading" section of the "setup reference":http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/setup.html., +++ b/docs/reference/setup/upgrade.asciidoc, +Elasticsearch can usually be upgraded using a rolling upgrade process, resulting in no interruption of service.  This section details how to perform both rolling and restart upgrades.  To determine whether a rolling upgrade is supported for your release, please consult this table:, +, +[cols="1,2,3",options="header",], +|=======================================================================, +|Upgrade From |Upgrade To |Supported Upgrade Type, +|0.90.x |1.x |Restart Upgrade, +, +|< 0.90.7 |0.90.x |Restart Upgrade, +, +|>= 0.90.7 |0.90.x |Rolling Upgrade, +, +|1.x |1.x |Rolling Upgrade, +|=======================================================================, +, +Before upgrading from 0.90.x or any earlier version to 1.x or later, it is a good idea to consult the <<breaking-changes,breaking changes>> docs., +=== Rolling upgrade process, +A rolling upgrade allows the ES cluster to be upgraded one node at a time, with no observable downtime for end users.  Running multiple versions of Elasticsearch in the same cluster for any length of time beyond that required for an upgrade is not supported, as shard replication from the more recent version to the previous versions will not work., +, +Within minor or maintenance releases after release 1.0, rolling upgrades are supported.  To perform a rolling upgrade:, +, +* Disable shard reallocation (optional).  This is done to allow for a faster startup after cluster shutdown.  If this step is not performed, the nodes will immediately start trying to replicate shards to each other on startup and will spend a lot of time on wasted I/O.  With shard reallocation disabled, the nodes will join the cluster with their indices intact, without attempting to rebalance.  After startup is complete, reallocation will be turned back on., +, +This syntax applies to Elasticsearch 1.0 and later:, +, +[source,sh], +--------------------------------------------------, +        curl -XPUT localhost:9200/_cluster/settings -d '{, +                "transient" : {, +                    "cluster.routing.allocation.enable" : "none", +                }, +        }', +--------------------------------------------------, +** Copy the configuration files from the old Elasticsearch installation's config directory to the new Elasticsearch installation's config directory.  Move data files from the old Elasticsesarch installation's data directory if necessary.  If data files are not located within the tarball's extraction directory, they will not have to be moved., +* Start the now upgraded node.  Confirm that it joins the cluster., +* Repeat this process for all remaining nodes., +, +* When the process is complete on all nodes, you can re-enable shard reallocation:, +, +[source,sh], +--------------------------------------------------, +        curl -XPUT localhost:9200/_cluster/settings -d '{, +                "transient" : {, +                    "cluster.routing.allocation.enable" : "all", +                }, +        }', +--------------------------------------------------, +, +* Observe that all shards are properly allocated on all nodes.  Balancing may take some time., +=== Cluster restart upgrade process, +** Start data nodes and then client nodes one at a time, verifying that they successfully join the cluster., +* When the cluster is running and reaches a yellow state, shard reallocation can be enabled.]