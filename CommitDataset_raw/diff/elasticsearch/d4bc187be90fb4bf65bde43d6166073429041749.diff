[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    public NodeInfo(DiscoveryNode node, Map<String, String> attributes, Settings settings) {, +    public NodeInfo(DiscoveryNode node, ImmutableMap<String, String> attributes, Settings settings) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    public NodeInfo(DiscoveryNode node, Map<String, String> attributes, Settings settings) {, +    public NodeInfo(DiscoveryNode node, ImmutableMap<String, String> attributes, Settings settings) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/NodesShutdownResponse.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        public NodeShutdownResponse(DiscoveryNode node) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    public NodeInfo(DiscoveryNode node, Map<String, String> attributes, Settings settings) {, +    public NodeInfo(DiscoveryNode node, ImmutableMap<String, String> attributes, Settings settings) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/NodesShutdownResponse.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        public NodeShutdownResponse(DiscoveryNode node) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        @Override protected void sendExecuteFirstPhase(DiscoveryNode node, InternalSearchRequest request, SearchServiceListener<DfsSearchResult> listener) {, +                DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +                                DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +                        final DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +        private void executeSecondPhase(final AtomicInteger counter, DiscoveryNode node, QuerySearchRequest querySearchRequest) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    public NodeInfo(DiscoveryNode node, Map<String, String> attributes, Settings settings) {, +    public NodeInfo(DiscoveryNode node, ImmutableMap<String, String> attributes, Settings settings) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/NodesShutdownResponse.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        public NodeShutdownResponse(DiscoveryNode node) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        @Override protected void sendExecuteFirstPhase(DiscoveryNode node, InternalSearchRequest request, SearchServiceListener<DfsSearchResult> listener) {, +                DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +                                DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +                        final DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +        private void executeSecondPhase(final AtomicInteger counter, DiscoveryNode node, QuerySearchRequest querySearchRequest) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        @Override protected void sendExecuteFirstPhase(DiscoveryNode node, InternalSearchRequest request, SearchServiceListener<DfsSearchResult> listener) {, +                DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +                                DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +                        final DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +        private void executeQuery(final AtomicInteger counter, QuerySearchRequest querySearchRequest, DiscoveryNode node) {, +                DiscoveryNode node = nodes.get(entry.getKey().nodeId());, +                                DiscoveryNode node = nodes.get(entry.getKey().nodeId());, +                        final DiscoveryNode node = nodes.get(entry.getKey().nodeId());, +        private void executeFetch(final AtomicInteger counter, FetchSearchRequest fetchSearchRequest, DiscoveryNode node) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    public NodeInfo(DiscoveryNode node, Map<String, String> attributes, Settings settings) {, +    public NodeInfo(DiscoveryNode node, ImmutableMap<String, String> attributes, Settings settings) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/NodesShutdownResponse.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        public NodeShutdownResponse(DiscoveryNode node) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        @Override protected void sendExecuteFirstPhase(DiscoveryNode node, InternalSearchRequest request, SearchServiceListener<DfsSearchResult> listener) {, +                DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +                                DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +                        final DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +        private void executeSecondPhase(final AtomicInteger counter, DiscoveryNode node, QuerySearchRequest querySearchRequest) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        @Override protected void sendExecuteFirstPhase(DiscoveryNode node, InternalSearchRequest request, SearchServiceListener<DfsSearchResult> listener) {, +                DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +                                DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +                        final DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +        private void executeQuery(final AtomicInteger counter, QuerySearchRequest querySearchRequest, DiscoveryNode node) {, +                DiscoveryNode node = nodes.get(entry.getKey().nodeId());, +                                DiscoveryNode node = nodes.get(entry.getKey().nodeId());, +                        final DiscoveryNode node = nodes.get(entry.getKey().nodeId());, +        private void executeFetch(final AtomicInteger counter, FetchSearchRequest fetchSearchRequest, DiscoveryNode node) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryAndFetchAction.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        @Override protected void sendExecuteFirstPhase(DiscoveryNode node, InternalSearchRequest request, SearchServiceListener<QueryFetchSearchResult> listener) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    public NodeInfo(DiscoveryNode node, Map<String, String> attributes, Settings settings) {, +    public NodeInfo(DiscoveryNode node, ImmutableMap<String, String> attributes, Settings settings) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/NodesShutdownResponse.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        public NodeShutdownResponse(DiscoveryNode node) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        @Override protected void sendExecuteFirstPhase(DiscoveryNode node, InternalSearchRequest request, SearchServiceListener<DfsSearchResult> listener) {, +                DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +                                DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +                        final DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +        private void executeSecondPhase(final AtomicInteger counter, DiscoveryNode node, QuerySearchRequest querySearchRequest) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        @Override protected void sendExecuteFirstPhase(DiscoveryNode node, InternalSearchRequest request, SearchServiceListener<DfsSearchResult> listener) {, +                DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +                                DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +                        final DiscoveryNode node = nodes.get(dfsResult.shardTarget().nodeId());, +        private void executeQuery(final AtomicInteger counter, QuerySearchRequest querySearchRequest, DiscoveryNode node) {, +                DiscoveryNode node = nodes.get(entry.getKey().nodeId());]