[+++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +        logger.warn("Unable to lock JVM Memory: error=" + errno + ",reason=" + errMsg);, +        logger.warn("This can result in part of the JVM being swapped out.");, +                    String user = System.getProperty("user.name");, +                                "\t# allow user '" + user + "' mlockall\n" +, +                                "\t" + user + " soft memlock unlimited\n" +, +                                "\t" + user + " hard memlock unlimited", +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +        logger.warn("Unable to lock JVM Memory: error=" + errno + ",reason=" + errMsg);, +        logger.warn("This can result in part of the JVM being swapped out.");, +                    String user = System.getProperty("user.name");, +                                "\t# allow user '" + user + "' mlockall\n" +, +                                "\t" + user + " soft memlock unlimited\n" +, +                                "\t" + user + " hard memlock unlimited", +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.common.inject.Module;, +                // plugin modules must be added here, before others or we can get crazy injection errors..., +                for (Module pluginModule : pluginsService.nodeModules()) {, +                    modules.add(pluginModule);, +                }, +                modules.add(new PluginsModule(pluginsService));, +                pluginsService.processModules(modules);, +, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +        logger.warn("Unable to lock JVM Memory: error=" + errno + ",reason=" + errMsg);, +        logger.warn("This can result in part of the JVM being swapped out.");, +                    String user = System.getProperty("user.name");, +                                "\t# allow user '" + user + "' mlockall\n" +, +                                "\t" + user + " soft memlock unlimited\n" +, +                                "\t" + user + " hard memlock unlimited", +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.common.inject.Module;, +                // plugin modules must be added here, before others or we can get crazy injection errors..., +                for (Module pluginModule : pluginsService.nodeModules()) {, +                    modules.add(pluginModule);, +                }, +                modules.add(new PluginsModule(pluginsService));, +                pluginsService.processModules(modules);, +, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +        logger.warn("Unable to lock JVM Memory: error=" + errno + ",reason=" + errMsg);, +        logger.warn("This can result in part of the JVM being swapped out.");, +                    String user = System.getProperty("user.name");, +                                "\t# allow user '" + user + "' mlockall\n" +, +                                "\t" + user + " soft memlock unlimited\n" +, +                                "\t" + user + " hard memlock unlimited", +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.common.inject.Module;, +                // plugin modules must be added here, before others or we can get crazy injection errors..., +                for (Module pluginModule : pluginsService.nodeModules()) {, +                    modules.add(pluginModule);, +                }, +                modules.add(new PluginsModule(pluginsService));, +                pluginsService.processModules(modules);, +, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/inject/ModulesBuilder.java, +    public ModulesBuilder add(Module... newModules) {, +        for (Module module : newModules) {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +        logger.warn("Unable to lock JVM Memory: error=" + errno + ",reason=" + errMsg);, +        logger.warn("This can result in part of the JVM being swapped out.");, +                    String user = System.getProperty("user.name");, +                                "\t# allow user '" + user + "' mlockall\n" +, +                                "\t" + user + " soft memlock unlimited\n" +, +                                "\t" + user + " hard memlock unlimited", +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.common.inject.Module;, +                // plugin modules must be added here, before others or we can get crazy injection errors..., +                for (Module pluginModule : pluginsService.nodeModules()) {, +                    modules.add(pluginModule);, +                }, +                modules.add(new PluginsModule(pluginsService));, +                pluginsService.processModules(modules);, +, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/inject/ModulesBuilder.java, +    public ModulesBuilder add(Module... newModules) {, +        for (Module module : newModules) {, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +        logger.warn("Unable to lock JVM Memory: error=" + errno + ",reason=" + errMsg);, +        logger.warn("This can result in part of the JVM being swapped out.");, +                    String user = System.getProperty("user.name");, +                                "\t# allow user '" + user + "' mlockall\n" +, +                                "\t" + user + " soft memlock unlimited\n" +, +                                "\t" + user + " hard memlock unlimited", +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.common.inject.Module;, +                // plugin modules must be added here, before others or we can get crazy injection errors..., +                for (Module pluginModule : pluginsService.nodeModules()) {, +                    modules.add(pluginModule);, +                }, +                modules.add(new PluginsModule(pluginsService));, +                pluginsService.processModules(modules);, +, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/inject/ModulesBuilder.java, +    public ModulesBuilder add(Module... newModules) {]