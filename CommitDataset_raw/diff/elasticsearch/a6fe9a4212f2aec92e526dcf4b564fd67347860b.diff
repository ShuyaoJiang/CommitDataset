[+++ b/core/src/test/java/org/elasticsearch/index/query/AbstractQueryTestCase.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.index.query;, +, +import com.carrotsearch.randomizedtesting.generators.CodepointSetGenerator;, +import com.fasterxml.jackson.core.JsonParseException;, +import com.fasterxml.jackson.core.io.JsonStringEncoder;, +, +import org.apache.lucene.search.BoostQuery;, +import org.apache.lucene.search.Query;, +import org.apache.lucene.search.TermQuery;, +import org.apache.lucene.search.spans.SpanBoostQuery;, +import org.apache.lucene.util.Accountable;, +import org.elasticsearch.ElasticsearchParseException;, +import org.elasticsearch.Version;, +import org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest;, +import org.elasticsearch.action.get.GetRequest;, +import org.elasticsearch.action.get.GetResponse;, +import org.elasticsearch.action.support.PlainActionFuture;, +import org.elasticsearch.action.termvectors.MultiTermVectorsRequest;, +import org.elasticsearch.action.termvectors.MultiTermVectorsResponse;, +import org.elasticsearch.client.Client;, +import org.elasticsearch.cluster.ClusterService;, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.cluster.metadata.MetaData;, +import org.elasticsearch.common.ParseFieldMatcher;, +import org.elasticsearch.common.ParsingException;, +import org.elasticsearch.common.bytes.BytesArray;, +import org.elasticsearch.common.bytes.BytesReference;, +import org.elasticsearch.common.collect.Tuple;, +import org.elasticsearch.common.compress.CompressedXContent;, +import org.elasticsearch.common.inject.AbstractModule;, +import org.elasticsearch.common.inject.Injector;, +import org.elasticsearch.common.inject.ModulesBuilder;, +import org.elasticsearch.common.inject.multibindings.Multibinder;, +import org.elasticsearch.common.inject.util.Providers;, +import org.elasticsearch.common.io.stream.BytesStreamOutput;, +import org.elasticsearch.common.io.stream.NamedWriteableAwareStreamInput;, +import org.elasticsearch.common.io.stream.NamedWriteableRegistry;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.settings.SettingsFilter;, +import org.elasticsearch.common.settings.SettingsModule;, +import org.elasticsearch.common.unit.Fuzziness;, +import org.elasticsearch.common.xcontent.*;, +import org.elasticsearch.env.Environment;, +import org.elasticsearch.env.EnvironmentModule;, +import org.elasticsearch.index.Index;, +import org.elasticsearch.index.IndexSettings;, +import org.elasticsearch.index.analysis.AnalysisRegistry;, +import org.elasticsearch.index.analysis.AnalysisService;, +import org.elasticsearch.index.cache.bitset.BitsetFilterCache;, +import org.elasticsearch.index.fielddata.IndexFieldDataService;, +import org.elasticsearch.index.mapper.MapperService;, +import org.elasticsearch.index.query.functionscore.ScoreFunctionParser;, +import org.elasticsearch.index.query.functionscore.ScoreFunctionParserMapper;, +import org.elasticsearch.index.query.support.QueryParsers;, +import org.elasticsearch.index.shard.ShardId;, +import org.elasticsearch.index.similarity.SimilarityService;, +import org.elasticsearch.indices.IndicesModule;, +import org.elasticsearch.indices.IndicesWarmer;, +import org.elasticsearch.indices.breaker.CircuitBreakerService;, +import org.elasticsearch.indices.breaker.NoneCircuitBreakerService;, +import org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCache;, +import org.elasticsearch.indices.mapper.MapperRegistry;, +import org.elasticsearch.indices.query.IndicesQueriesRegistry;, +import org.elasticsearch.script.*;, +import org.elasticsearch.script.Script.ScriptParseException;, +import org.elasticsearch.search.internal.SearchContext;, +import org.elasticsearch.test.ESTestCase;, +import org.elasticsearch.test.IndexSettingsModule;, +import org.elasticsearch.test.TestSearchContext;, +import org.elasticsearch.test.VersionUtils;, +import org.elasticsearch.test.cluster.TestClusterService;, +import org.elasticsearch.threadpool.ThreadPool;, +import org.elasticsearch.threadpool.ThreadPoolModule;, +import org.joda.time.DateTime;, +import org.joda.time.DateTimeZone;, +import org.junit.After;, +import org.junit.AfterClass;, +import org.junit.Before;]