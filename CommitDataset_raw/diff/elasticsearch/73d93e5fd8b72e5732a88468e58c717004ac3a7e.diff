[+++ b/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +++ b/src/main/java/org/elasticsearch/script/ScriptService.java, +    public static enum ScriptType {, +, +        INLINE,, +        INDEXED,, +        FILE;, +                default:, +    }, +, +                    default:, +                        throw new ElasticsearchIllegalStateException("Unknown ScriptType " + scriptType);, +    public final static class CacheKey {, +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +++ b/src/main/java/org/elasticsearch/script/ScriptService.java, +    public static enum ScriptType {, +, +        INLINE,, +        INDEXED,, +        FILE;, +                default:, +    }, +, +                    default:, +                        throw new ElasticsearchIllegalStateException("Unknown ScriptType " + scriptType);, +    public final static class CacheKey {, +++ b/src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java, +import org.elasticsearch.script.ScriptService;, +            client().prepareUpdate("test", "type1", "1").setScript("test script", ScriptService.ScriptType.INLINE).setTimeout(timeout).execute().actionGet();, +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +++ b/src/main/java/org/elasticsearch/script/ScriptService.java, +    public static enum ScriptType {, +, +        INLINE,, +        INDEXED,, +        FILE;, +                default:, +    }, +, +                    default:, +                        throw new ElasticsearchIllegalStateException("Unknown ScriptType " + scriptType);, +    public final static class CacheKey {, +++ b/src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java, +import org.elasticsearch.script.ScriptService;, +            client().prepareUpdate("test", "type1", "1").setScript("test script", ScriptService.ScriptType.INLINE).setTimeout(timeout).execute().actionGet();, +++ b/src/test/java/org/elasticsearch/document/BulkTests.java, +import org.elasticsearch.script.ScriptService;, +                .add(client().prepareUpdate().setIndex("test").setType("type1").setId("1"), +                        .setScript("ctx._source.field += 1", ScriptService.ScriptType.INLINE)), +                .add(client().prepareUpdate().setIndex("test").setType("type1").setId("2"), +                        .setScript("ctx._source.field += 1", ScriptService.ScriptType.INLINE).setRetryOnConflict(3)), +                .add(client().prepareUpdate().setIndex("test").setType("type1").setId("6"), +                        .setScript("ctx._source.field += 1", ScriptService.ScriptType.INLINE), +                .add(client().prepareUpdate().setIndex("test").setType("type1").setId("7"), +                        .setScript("ctx._source.field += 1", ScriptService.ScriptType.INLINE)), +                .add(client().prepareUpdate().setIndex("test").setType("type1").setId("2"), +                        .setScript("ctx._source.field += 1", ScriptService.ScriptType.INLINE)), +                .add(client().prepareUpdate().setIndex("test").setType("type1").setId("1"), +                        .setScript("ctx._source.field += a", ScriptService.ScriptType.INLINE).setFields("field")), +                .add(client().prepareUpdate().setIndex("test").setType("type1").setId("2"), +                        .setScript("ctx._source.field += 1", ScriptService.ScriptType.INLINE).setFields("field")), +                .add(client().prepareUpdate().setIndex("test").setType("type1").setId("3"), +                        .setScript("ctx._source.field += a", ScriptService.ScriptType.INLINE).setFields("field")), +                            .setScript("ctx._source.counter += 1", ScriptService.ScriptType.INLINE).setFields("counter"), +                updateBuilder.setScript("ctx._source.counter += 1", ScriptService.ScriptType.INLINE);, +                            .setIndex("test").setType("type1").setId(Integer.toString(i)).setScript("ctx._source.counter += 1", ScriptService.ScriptType.INLINE), +                            .setIndex("test").setType("type1").setId(Integer.toString(i)), +                            .setScript("ctx.op = \"none\"", ScriptService.ScriptType.INLINE), +                            .setIndex("test").setType("type1").setId(Integer.toString(i)), +                            .setScript("ctx.op = \"delete\"", ScriptService.ScriptType.INLINE), +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +++ b/src/main/java/org/elasticsearch/script/ScriptService.java, +    public static enum ScriptType {, +, +        INLINE,, +        INDEXED,, +        FILE;, +                default:, +    }, +, +                    default:, +                        throw new ElasticsearchIllegalStateException("Unknown ScriptType " + scriptType);, +    public final static class CacheKey {, +++ b/src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java, +import org.elasticsearch.script.ScriptService;, +            client().prepareUpdate("test", "type1", "1").setScript("test script", ScriptService.ScriptType.INLINE).setTimeout(timeout).execute().actionGet();, +++ b/src/test/java/org/elasticsearch/document/BulkTests.java, +import org.elasticsearch.script.ScriptService;, +                .add(client().prepareUpdate().setIndex("test").setType("type1").setId("1"), +                        .setScript("ctx._source.field += 1", ScriptService.ScriptType.INLINE)), +                .add(client().prepareUpdate().setIndex("test").setType("type1").setId("2"), +                        .setScript("ctx._source.field += 1", ScriptService.ScriptType.INLINE).setRetryOnConflict(3)), +                .add(client().prepareUpdate().setIndex("test").setType("type1").setId("6"), +                        .setScript("ctx._source.field += 1", ScriptService.ScriptType.INLINE), +                .add(client().prepareUpdate().setIndex("test").setType("type1").setId("7"), +                        .setScript("ctx._source.field += 1", ScriptService.ScriptType.INLINE)), +                .add(client().prepareUpdate().setIndex("test").setType("type1").setId("2"), +                        .setScript("ctx._source.field += 1", ScriptService.ScriptType.INLINE)), +                .add(client().prepareUpdate().setIndex("test").setType("type1").setId("1")]