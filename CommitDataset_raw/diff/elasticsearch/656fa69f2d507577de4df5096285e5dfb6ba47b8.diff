[+++ b/core/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +++ b/core/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisModule.java, +++ b/core/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisModule.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisModule.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/analysis/StemmerTokenFilterFactory.java, +++ b/core/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisModule.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/analysis/StemmerTokenFilterFactory.java, +++ b/core/src/main/java/org/elasticsearch/indices/analysis/PreBuiltAnalyzers.java, +++ b/core/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisModule.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/analysis/StemmerTokenFilterFactory.java, +++ b/core/src/main/java/org/elasticsearch/indices/analysis/PreBuiltAnalyzers.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/HyperLogLogPlusPlus.java, +    private static final int BIAS_K = 6;, +, +        final double[] weights = new double[BIAS_K];, +        int index = biasData.length - BIAS_K;, +        for (int i = 0; i < rawEstimateData.length; ++i) {, +            final double w = 1.0 / Math.abs(rawEstimateData[i] - e);, +            final int j = i % weights.length;, +            if (Double.isInfinite(w)) {, +                return biasData[i];, +            } else if (weights[j] >= w) {, +                index = i - BIAS_K;, +                break;, +            weights[j] = w;, +, +        double weightSum = 0.0;, +        double biasSum = 0.0;, +        for (int i = 0, j = index; i < BIAS_K; ++i, ++j) {, +            final double w = weights[i];, +            final double b = biasData[j];, +            biasSum += w * b;, +            weightSum += w;, +        }, +        return biasSum / weightSum;, +++ b/core/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisModule.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/analysis/StemmerTokenFilterFactory.java, +++ b/core/src/main/java/org/elasticsearch/indices/analysis/PreBuiltAnalyzers.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/HyperLogLogPlusPlus.java, +    private static final int BIAS_K = 6;, +, +        final double[] weights = new double[BIAS_K];, +        int index = biasData.length - BIAS_K;, +        for (int i = 0; i < rawEstimateData.length; ++i) {, +            final double w = 1.0 / Math.abs(rawEstimateData[i] - e);, +            final int j = i % weights.length;, +            if (Double.isInfinite(w)) {, +                return biasData[i];, +            } else if (weights[j] >= w) {, +                index = i - BIAS_K;, +                break;, +            weights[j] = w;, +, +        double weightSum = 0.0;, +        double biasSum = 0.0;, +        for (int i = 0, j = index; i < BIAS_K; ++i, ++j) {, +            final double w = weights[i];, +            final double b = biasData[j];, +            biasSum += w * b;, +            weightSum += w;, +        }, +        return biasSum / weightSum;, +++ b/core/src/test/java/org/elasticsearch/bwcompat/BasicAnalysisBackwardCompatibilityIT.java, +++ b/core/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisModule.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/analysis/StemmerTokenFilterFactory.java, +++ b/core/src/main/java/org/elasticsearch/indices/analysis/PreBuiltAnalyzers.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/HyperLogLogPlusPlus.java, +    private static final int BIAS_K = 6;, +, +        final double[] weights = new double[BIAS_K];, +        int index = biasData.length - BIAS_K;, +        for (int i = 0; i < rawEstimateData.length; ++i) {, +            final double w = 1.0 / Math.abs(rawEstimateData[i] - e);, +            final int j = i % weights.length;, +            if (Double.isInfinite(w)) {, +                return biasData[i];, +            } else if (weights[j] >= w) {, +                index = i - BIAS_K;, +                break;, +            weights[j] = w;, +, +        double weightSum = 0.0;, +        double biasSum = 0.0;, +        for (int i = 0, j = index; i < BIAS_K; ++i, ++j) {, +            final double w = weights[i];, +            final double b = biasData[j];, +            biasSum += w * b;]