[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.client.node.NodeClient;, +import org.elasticsearch.indices.breaker.CircuitBreakerService;, +                        ClusterSettings clusterSettings, ThreadPool threadPool, List<ActionPlugin> actionPlugins,, +                        NodeClient nodeClient, CircuitBreakerService circuitBreakerService) {, +        if (transportClient) {, +            restController = null;, +        } else {, +            restController = new RestController(settings, headers, restWrapper, nodeClient, circuitBreakerService);, +    }, +, +            if (restController != null) {, +            }, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.client.node.NodeClient;, +import org.elasticsearch.indices.breaker.CircuitBreakerService;, +                        ClusterSettings clusterSettings, ThreadPool threadPool, List<ActionPlugin> actionPlugins,, +                        NodeClient nodeClient, CircuitBreakerService circuitBreakerService) {, +        if (transportClient) {, +            restController = null;, +        } else {, +            restController = new RestController(settings, headers, restWrapper, nodeClient, circuitBreakerService);, +    }, +, +            if (restController != null) {, +            }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/TransportNodesInfoAction.java, +import org.elasticsearch.node.NodeService;, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.client.node.NodeClient;, +import org.elasticsearch.indices.breaker.CircuitBreakerService;, +                        ClusterSettings clusterSettings, ThreadPool threadPool, List<ActionPlugin> actionPlugins,, +                        NodeClient nodeClient, CircuitBreakerService circuitBreakerService) {, +        if (transportClient) {, +            restController = null;, +        } else {, +            restController = new RestController(settings, headers, restWrapper, nodeClient, circuitBreakerService);, +    }, +, +            if (restController != null) {, +            }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/TransportNodesInfoAction.java, +import org.elasticsearch.node.NodeService;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/TransportNodesStatsAction.java, +import org.elasticsearch.node.NodeService;, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.client.node.NodeClient;, +import org.elasticsearch.indices.breaker.CircuitBreakerService;, +                        ClusterSettings clusterSettings, ThreadPool threadPool, List<ActionPlugin> actionPlugins,, +                        NodeClient nodeClient, CircuitBreakerService circuitBreakerService) {, +        if (transportClient) {, +            restController = null;, +        } else {, +            restController = new RestController(settings, headers, restWrapper, nodeClient, circuitBreakerService);, +    }, +, +            if (restController != null) {, +            }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/TransportNodesInfoAction.java, +import org.elasticsearch.node.NodeService;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/TransportNodesStatsAction.java, +import org.elasticsearch.node.NodeService;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +import org.elasticsearch.node.NodeService;, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.client.node.NodeClient;, +import org.elasticsearch.indices.breaker.CircuitBreakerService;, +                        ClusterSettings clusterSettings, ThreadPool threadPool, List<ActionPlugin> actionPlugins,, +                        NodeClient nodeClient, CircuitBreakerService circuitBreakerService) {, +        if (transportClient) {, +            restController = null;, +        } else {, +            restController = new RestController(settings, headers, restWrapper, nodeClient, circuitBreakerService);, +    }, +, +            if (restController != null) {, +            }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/TransportNodesInfoAction.java, +import org.elasticsearch.node.NodeService;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/TransportNodesStatsAction.java, +import org.elasticsearch.node.NodeService;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +import org.elasticsearch.node.NodeService;, +++ b/core/src/main/java/org/elasticsearch/action/ingest/DeletePipelineTransportAction.java, +import org.elasticsearch.node.NodeService;, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.client.node.NodeClient;, +import org.elasticsearch.indices.breaker.CircuitBreakerService;, +                        ClusterSettings clusterSettings, ThreadPool threadPool, List<ActionPlugin> actionPlugins,, +                        NodeClient nodeClient, CircuitBreakerService circuitBreakerService) {, +        if (transportClient) {, +            restController = null;, +        } else {]