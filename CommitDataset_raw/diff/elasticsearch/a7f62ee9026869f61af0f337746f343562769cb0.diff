[+++ b/docs/plugins/discovery-gce.asciidoc, +     Your Google project id., +     By default the project id will be derived from the instance metadata., +, +     Note: Deriving the project id from system properties or environment variables, +     (`GOOGLE_CLOUD_PROJECT` or `GCLOUD_PROJECT`) is not supported., +     helps to retrieve instances running in a given zone., +     It should be one of the https://developers.google.com/compute/docs/zones#available[GCE supported zones]., +     By default the zone will be derived from the instance metadata., +++ b/docs/plugins/discovery-gce.asciidoc, +     Your Google project id., +     By default the project id will be derived from the instance metadata., +, +     Note: Deriving the project id from system properties or environment variables, +     (`GOOGLE_CLOUD_PROJECT` or `GCLOUD_PROJECT`) is not supported., +     helps to retrieve instances running in a given zone., +     It should be one of the https://developers.google.com/compute/docs/zones#available[GCE supported zones]., +     By default the zone will be derived from the instance metadata., +++ b/plugins/discovery-gce/build.gradle, +check {, +  // also execute the QA tests when testing the plugin, +  dependsOn 'qa:gce:check', +}, +, +++ b/docs/plugins/discovery-gce.asciidoc, +     Your Google project id., +     By default the project id will be derived from the instance metadata., +, +     Note: Deriving the project id from system properties or environment variables, +     (`GOOGLE_CLOUD_PROJECT` or `GCLOUD_PROJECT`) is not supported., +     helps to retrieve instances running in a given zone., +     It should be one of the https://developers.google.com/compute/docs/zones#available[GCE supported zones]., +     By default the zone will be derived from the instance metadata., +++ b/plugins/discovery-gce/build.gradle, +check {, +  // also execute the QA tests when testing the plugin, +  dependsOn 'qa:gce:check', +}, +, +++ b/plugins/discovery-gce/qa/build.gradle, +group = "${group}.plugins.discovery-gce.qa", +++ b/docs/plugins/discovery-gce.asciidoc, +     Your Google project id., +     By default the project id will be derived from the instance metadata., +, +     Note: Deriving the project id from system properties or environment variables, +     (`GOOGLE_CLOUD_PROJECT` or `GCLOUD_PROJECT`) is not supported., +     helps to retrieve instances running in a given zone., +     It should be one of the https://developers.google.com/compute/docs/zones#available[GCE supported zones]., +     By default the zone will be derived from the instance metadata., +++ b/plugins/discovery-gce/build.gradle, +check {, +  // also execute the QA tests when testing the plugin, +  dependsOn 'qa:gce:check', +}, +, +++ b/plugins/discovery-gce/qa/build.gradle, +group = "${group}.plugins.discovery-gce.qa", +++ b/plugins/discovery-gce/qa/gce/build.gradle, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +import org.elasticsearch.gradle.MavenFilteringHack, +import org.elasticsearch.gradle.test.AntFixture, +, +apply plugin: 'elasticsearch.standalone-rest-test', +apply plugin: 'elasticsearch.rest-test', +, +final int gceNumberOfNodes = 3, +File gceDiscoveryFile =  new File(project.buildDir, 'generated-resources/nodes.uri'), +, +dependencies {, +    testCompile project(path: ':plugins:discovery-gce', configuration: 'runtime'), +}, +, +/** A task to start the GCEFixture which emulates a GCE service **/, +task gceFixture(type: AntFixture) {, +    dependsOn compileTestJava, +    env 'CLASSPATH', "${ -> project.sourceSets.test.runtimeClasspath.asPath }", +    executable = new File(project.runtimeJavaHome, 'bin/java'), +    args 'org.elasticsearch.cloud.gce.GCEFixture', baseDir, gceDiscoveryFile.getAbsolutePath(), +}, +, +Map<String, Object> expansions = []