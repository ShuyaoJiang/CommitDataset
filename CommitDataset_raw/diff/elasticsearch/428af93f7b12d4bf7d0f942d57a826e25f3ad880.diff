[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/CloseJobAction.java, +            Map<String, String> jobIdToPersistentTaskId = new HashMap<>();, +        void waitForJobClosed(Request request, Map<String, String> jobIdToPersistentTaskId, Response response,, +                for (Map.Entry<String, String> entry : jobIdToPersistentTaskId.entrySet()) {, +                    String persistentTaskId = entry.getValue();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/CloseJobAction.java, +            Map<String, String> jobIdToPersistentTaskId = new HashMap<>();, +        void waitForJobClosed(Request request, Map<String, String> jobIdToPersistentTaskId, Response response,, +                for (Map.Entry<String, String> entry : jobIdToPersistentTaskId.entrySet()) {, +                    String persistentTaskId = entry.getValue();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/OpenJobAction.java, +import org.elasticsearch.common.UUIDs;, +                persistentTasksService.startPersistentTask(UUIDs.base64UUID(), NAME, request, finalListener);, +        void waitForJobStarted(String taskId, Request request, ActionListener<Response> listener) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/CloseJobAction.java, +            Map<String, String> jobIdToPersistentTaskId = new HashMap<>();, +        void waitForJobClosed(Request request, Map<String, String> jobIdToPersistentTaskId, Response response,, +                for (Map.Entry<String, String> entry : jobIdToPersistentTaskId.entrySet()) {, +                    String persistentTaskId = entry.getValue();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/OpenJobAction.java, +import org.elasticsearch.common.UUIDs;, +                persistentTasksService.startPersistentTask(UUIDs.base64UUID(), NAME, request, finalListener);, +        void waitForJobStarted(String taskId, Request request, ActionListener<Response> listener) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/StartDatafeedAction.java, +import org.elasticsearch.common.UUIDs;, +                persistentTasksService.startPersistentTask(UUIDs.base64UUID(), NAME, request, finalListener);, +        void waitForDatafeedStarted(String taskId, Request request, ActionListener<Response> listener) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/CloseJobAction.java, +            Map<String, String> jobIdToPersistentTaskId = new HashMap<>();, +        void waitForJobClosed(Request request, Map<String, String> jobIdToPersistentTaskId, Response response,, +                for (Map.Entry<String, String> entry : jobIdToPersistentTaskId.entrySet()) {, +                    String persistentTaskId = entry.getValue();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/OpenJobAction.java, +import org.elasticsearch.common.UUIDs;, +                persistentTasksService.startPersistentTask(UUIDs.base64UUID(), NAME, request, finalListener);, +        void waitForJobStarted(String taskId, Request request, ActionListener<Response> listener) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/StartDatafeedAction.java, +import org.elasticsearch.common.UUIDs;, +                persistentTasksService.startPersistentTask(UUIDs.base64UUID(), NAME, request, finalListener);, +        void waitForDatafeedStarted(String taskId, Request request, ActionListener<Response> listener) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/StopDatafeedAction.java, +                Map<String, String> datafeedIdToPersistentTaskId = new HashMap<>();, +        void waitForDatafeedStopped(Map<String, String> datafeedIdToPersistentTaskId, Request request, Response response,, +                                    ActionListener<Response> listener) {, +                for (Map.Entry<String, String> entry : datafeedIdToPersistentTaskId.entrySet()) {, +                    String persistentTaskId = entry.getValue();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/CloseJobAction.java, +            Map<String, String> jobIdToPersistentTaskId = new HashMap<>();, +        void waitForJobClosed(Request request, Map<String, String> jobIdToPersistentTaskId, Response response,, +                for (Map.Entry<String, String> entry : jobIdToPersistentTaskId.entrySet()) {, +                    String persistentTaskId = entry.getValue();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/OpenJobAction.java, +import org.elasticsearch.common.UUIDs;, +                persistentTasksService.startPersistentTask(UUIDs.base64UUID(), NAME, request, finalListener);, +        void waitForJobStarted(String taskId, Request request, ActionListener<Response> listener) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/StartDatafeedAction.java, +import org.elasticsearch.common.UUIDs;, +                persistentTasksService.startPersistentTask(UUIDs.base64UUID(), NAME, request, finalListener);, +        void waitForDatafeedStarted(String taskId, Request request, ActionListener<Response> listener) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/StopDatafeedAction.java, +                Map<String, String> datafeedIdToPersistentTaskId = new HashMap<>();, +        void waitForDatafeedStopped(Map<String, String> datafeedIdToPersistentTaskId, Request request, Response response,, +                                    ActionListener<Response> listener) {, +                for (Map.Entry<String, String> entry : datafeedIdToPersistentTaskId.entrySet()) {, +                    String persistentTaskId = entry.getValue();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedManager.java, +        private final String taskId;, +        Holder(String taskId, DatafeedConfig datafeed, DatafeedJob datafeedJob, boolean autoCloseJob, ProblemTracker problemTracker,, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/CloseJobAction.java, +            Map<String, String> jobIdToPersistentTaskId = new HashMap<>();, +        void waitForJobClosed(Request request, Map<String, String> jobIdToPersistentTaskId, Response response,, +                for (Map.Entry<String, String> entry : jobIdToPersistentTaskId.entrySet()) {, +                    String persistentTaskId = entry.getValue();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/OpenJobAction.java, +import org.elasticsearch.common.UUIDs;, +                persistentTasksService.startPersistentTask(UUIDs.base64UUID(), NAME, request, finalListener);, +        void waitForJobStarted(String taskId, Request request, ActionListener<Response> listener) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/StartDatafeedAction.java, +import org.elasticsearch.common.UUIDs;, +                persistentTasksService.startPersistentTask(UUIDs.base64UUID(), NAME, request, finalListener);, +        void waitForDatafeedStarted(String taskId, Request request, ActionListener<Response> listener) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/StopDatafeedAction.java, +                Map<String, String> datafeedIdToPersistentTaskId = new HashMap<>();, +        void waitForDatafeedStopped(Map<String, String> datafeedIdToPersistentTaskId, Request request, Response response,, +                                    ActionListener<Response> listener) {, +                for (Map.Entry<String, String> entry : datafeedIdToPersistentTaskId.entrySet()) {, +                    String persistentTaskId = entry.getValue();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedManager.java, +        private final String taskId;, +        Holder(String taskId, DatafeedConfig datafeed, DatafeedJob datafeedJob, boolean autoCloseJob, ProblemTracker problemTracker,, +++ b/plugin/src/main/java/org/elasticsearch/xpack/persistent/AllocatedPersistentTask.java, +    private String persistentTaskId;, +    public String getPersistentTaskId() {, +    void init(PersistentTasksService persistentTasksService, TaskManager taskManager, Logger logger, String persistentTaskId, long, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/CloseJobAction.java, +            Map<String, String> jobIdToPersistentTaskId = new HashMap<>();, +        void waitForJobClosed(Request request, Map<String, String> jobIdToPersistentTaskId, Response response,, +                for (Map.Entry<String, String> entry : jobIdToPersistentTaskId.entrySet()) {, +                    String persistentTaskId = entry.getValue();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/OpenJobAction.java]