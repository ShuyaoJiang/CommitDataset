[+++ b/core/src/main/java/org/elasticsearch/transport/Transports.java, +    public static final String NIO_TRANSPORT_WORKER_THREAD_NAME_PREFIX = "es_nio_transport_worker";, +    public static final String NIO_TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX = "es_nio_transport_acceptor";, +, +                TEST_MOCK_TRANSPORT_THREAD_PREFIX,, +                NIO_TRANSPORT_WORKER_THREAD_NAME_PREFIX,, +                NIO_TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX)) {, +++ b/core/src/main/java/org/elasticsearch/transport/Transports.java, +    public static final String NIO_TRANSPORT_WORKER_THREAD_NAME_PREFIX = "es_nio_transport_worker";, +    public static final String NIO_TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX = "es_nio_transport_acceptor";, +, +                TEST_MOCK_TRANSPORT_THREAD_PREFIX,, +                NIO_TRANSPORT_WORKER_THREAD_NAME_PREFIX,, +                NIO_TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX)) {, +++ b/test/framework/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +import org.elasticsearch.transport.Transports;, +    public static final String TRANSPORT_WORKER_THREAD_NAME_PREFIX = Transports.NIO_TRANSPORT_WORKER_THREAD_NAME_PREFIX;, +    public static final String TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX = Transports.NIO_TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX;, +                    // If we are currently on the selector thread that handles this channel, we should prefer, +                    // the closeFromSelector method. This method always closes the channel immediately., +                    ESSelector selector = channel.getSelector();, +                    if (selector != null && selector.isOnCurrentThread()) {, +                        channel.closeFromSelector();, +                    } else {, +                    }, +++ b/core/src/main/java/org/elasticsearch/transport/Transports.java, +    public static final String NIO_TRANSPORT_WORKER_THREAD_NAME_PREFIX = "es_nio_transport_worker";, +    public static final String NIO_TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX = "es_nio_transport_acceptor";, +, +                TEST_MOCK_TRANSPORT_THREAD_PREFIX,, +                NIO_TRANSPORT_WORKER_THREAD_NAME_PREFIX,, +                NIO_TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX)) {, +++ b/test/framework/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +import org.elasticsearch.transport.Transports;, +    public static final String TRANSPORT_WORKER_THREAD_NAME_PREFIX = Transports.NIO_TRANSPORT_WORKER_THREAD_NAME_PREFIX;, +    public static final String TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX = Transports.NIO_TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX;, +                    // If we are currently on the selector thread that handles this channel, we should prefer, +                    // the closeFromSelector method. This method always closes the channel immediately., +                    ESSelector selector = channel.getSelector();, +                    if (selector != null && selector.isOnCurrentThread()) {, +                        channel.closeFromSelector();, +                    } else {, +                    }, +++ b/test/framework/src/main/java/org/elasticsearch/transport/nio/channel/AbstractNioChannel.java, +++ b/core/src/main/java/org/elasticsearch/transport/Transports.java, +    public static final String NIO_TRANSPORT_WORKER_THREAD_NAME_PREFIX = "es_nio_transport_worker";, +    public static final String NIO_TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX = "es_nio_transport_acceptor";, +, +                TEST_MOCK_TRANSPORT_THREAD_PREFIX,, +                NIO_TRANSPORT_WORKER_THREAD_NAME_PREFIX,, +                NIO_TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX)) {, +++ b/test/framework/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +import org.elasticsearch.transport.Transports;, +    public static final String TRANSPORT_WORKER_THREAD_NAME_PREFIX = Transports.NIO_TRANSPORT_WORKER_THREAD_NAME_PREFIX;, +    public static final String TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX = Transports.NIO_TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX;, +                    // If we are currently on the selector thread that handles this channel, we should prefer, +                    // the closeFromSelector method. This method always closes the channel immediately., +                    ESSelector selector = channel.getSelector();, +                    if (selector != null && selector.isOnCurrentThread()) {, +                        channel.closeFromSelector();, +                    } else {, +                    }, +++ b/test/framework/src/main/java/org/elasticsearch/transport/nio/channel/AbstractNioChannel.java, +++ b/test/framework/src/main/java/org/elasticsearch/transport/nio/channel/ConnectFuture.java, +                return super.get(0, TimeUnit.NANOSECONDS);, +            } catch (TimeoutException e) {, +                throw new AssertionError("This should never happen as we only call get() after isDone() is true.");]