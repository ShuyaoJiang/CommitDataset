[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +import org.elasticsearch.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +import org.elasticsearch.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +import org.elasticsearch.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +import org.elasticsearch.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +import org.elasticsearch.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/cli/Command.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +import org.elasticsearch.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +import org.elasticsearch.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/cli/Command.java, +++ b/core/src/main/java/org/elasticsearch/cli/MultiCommand.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +import org.elasticsearch.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +import org.elasticsearch.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/cli/Command.java, +++ b/core/src/main/java/org/elasticsearch/cli/MultiCommand.java, +++ b/core/src/main/java/org/elasticsearch/cli/Terminal.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.cli;, +, +import java.io.BufferedReader;, +import java.io.Console;, +import java.io.IOException;, +import java.io.InputStreamReader;, +import java.io.PrintWriter;, +import java.nio.charset.Charset;, +, +import org.elasticsearch.common.SuppressForbidden;, +, +/**, + * A Terminal wraps access to reading input and writing output for a cli., + *, + * The available methods are similar to those of {@link Console}, with the ability, + * to read either normal text or a password, and the ability to print a line, + * of text. Printing is also gated by the {@link Verbosity} of the terminal,, + * which allows {@link #println(Verbosity,String)} calls which act like a logger,, + * only actually printing if the verbosity level of the terminal is above, + * the verbosity of the message., +*/, +public abstract class Terminal {, +, +    /** The default terminal implementation, which will be a console if available, or stdout/stderr if not. */, +    public static final Terminal DEFAULT = ConsoleTerminal.isSupported() ? new ConsoleTerminal() : new SystemTerminal();, +, +    /** Defines the available verbosity levels of messages to be printed. */, +    public enum Verbosity {, +        SILENT, /* always printed */, +        NORMAL, /* printed when no options are given to cli */, +        VERBOSE /* printed only when cli is passed verbose option */, +    }, +, +    /** The current verbosity for the terminal, defaulting to {@link Verbosity#NORMAL}. */, +    private Verbosity verbosity = Verbosity.NORMAL;, +, +    /** The newline used when calling println. */, +    private final String lineSeparator;, +, +    protected Terminal(String lineSeparator) {, +        this.lineSeparator = lineSeparator;, +    }, +, +    /** Sets the verbosity of the terminal. */, +    public void setVerbosity(Verbosity verbosity) {]