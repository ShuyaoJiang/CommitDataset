[+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/Expression.java, +    // whether the expression becomes null if at least one param/input is null, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/Expression.java, +    // whether the expression becomes null if at least one param/input is null, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/Literal.java, +, +    public static Literal of(Expression source, Object value) {, +        String name = source instanceof NamedExpression ? ((NamedExpression) source).name() : String.valueOf(value);, +        return new Literal(source.location(), name, value, source.dataType());, +    }, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/Expression.java, +    // whether the expression becomes null if at least one param/input is null, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/Literal.java, +, +    public static Literal of(Expression source, Object value) {, +        String name = source instanceof NamedExpression ? ((NamedExpression) source).name() : String.valueOf(value);, +        return new Literal(source.location(), name, value, source.dataType());, +    }, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/Function.java, +        return Expressions.nullable(children());, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/Expression.java, +    // whether the expression becomes null if at least one param/input is null, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/Literal.java, +, +    public static Literal of(Expression source, Object value) {, +        String name = source instanceof NamedExpression ? ((NamedExpression) source).name() : String.valueOf(value);, +        return new Literal(source.location(), name, value, source.dataType());, +    }, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/Function.java, +        return Expressions.nullable(children());, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/string/Concat.java, +    public boolean nullable() {, +        return left().nullable() && right().nullable();, +    }, +, +    @Override, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/Expression.java, +    // whether the expression becomes null if at least one param/input is null, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/Literal.java, +, +    public static Literal of(Expression source, Object value) {, +        String name = source instanceof NamedExpression ? ((NamedExpression) source).name() : String.valueOf(value);, +        return new Literal(source.location(), name, value, source.dataType());, +    }, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/Function.java, +        return Expressions.nullable(children());, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/string/Concat.java, +    public boolean nullable() {, +        return left().nullable() && right().nullable();, +    }, +, +    @Override, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/predicate/logical/BinaryLogic.java, +, +    @Override, +    public boolean nullable() {, +        return left().nullable() && right().nullable();, +    }, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/Expression.java, +    // whether the expression becomes null if at least one param/input is null, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/Literal.java, +, +    public static Literal of(Expression source, Object value) {, +        String name = source instanceof NamedExpression ? ((NamedExpression) source).name() : String.valueOf(value);, +        return new Literal(source.location(), name, value, source.dataType());, +    }, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/Function.java, +        return Expressions.nullable(children());, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/string/Concat.java, +    public boolean nullable() {, +        return left().nullable() && right().nullable();, +    }, +, +    @Override, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/predicate/logical/BinaryLogic.java, +, +    @Override, +    public boolean nullable() {, +        return left().nullable() && right().nullable();, +    }, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/optimizer/Optimizer.java, +import org.elasticsearch.xpack.sql.expression.predicate.In;, +import org.elasticsearch.xpack.sql.expression.predicate.IsNotNull;, +import org.elasticsearch.xpack.sql.type.DataType;, +                new FoldNull(),, +                if (FALSE.equals(filter.condition()) || FoldNull.isNull(filter.condition())) {, +    static class FoldNull extends OptimizerExpressionRule {, +, +        FoldNull() {, +            super(TransformDirection.UP);, +        }, +, +        private static boolean isNull(Expression ex) {, +            return DataType.NULL == ex.dataType() || (ex.foldable() && ex.fold() == null);, +        }, +, +        @Override, +        protected Expression rule(Expression e) {, +            if (e instanceof IsNotNull) {, +                if (((IsNotNull) e).field().nullable() == false) {]