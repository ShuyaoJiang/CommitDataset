[+++ b/core/build.gradle, +  compile 'joda-time:joda-time:2.9.5', +++ b/core/build.gradle, +  compile 'joda-time:joda-time:2.9.5', +++ /dev/null, +++ b/core/build.gradle, +  compile 'joda-time:joda-time:2.9.5', +++ /dev/null, +++ /dev/null, +++ b/core/build.gradle, +  compile 'joda-time:joda-time:2.9.5', +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/build.gradle, +  compile 'joda-time:joda-time:2.9.5', +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/build.gradle, +  compile 'joda-time:joda-time:2.9.5', +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/licenses/joda-time-2.9.5.jar.sha1, +5f01da7306363fad2028b916f3eab926262de928, +++ b/core/build.gradle, +  compile 'joda-time:joda-time:2.9.5', +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/licenses/joda-time-2.9.5.jar.sha1, +5f01da7306363fad2028b916f3eab926262de928, +++ b/core/src/test/java/org/elasticsearch/common/rounding/TimeZoneRoundingTests.java, +import org.joda.time.format.DateTimeFormat;, +import org.joda.time.format.DateTimeFormatter;, +import static org.hamcrest.Matchers.startsWith;, +    /**, +     * Test that time zones are correctly parsed. There is a bug with, +     * Joda 2.9.4 (see https://github.com/JodaOrg/joda-time/issues/373), +     */, +    public void testsTimeZoneParsing() {, +        final DateTime expected = new DateTime(2016, 11, 10, 5, 37, 59, randomDateTimeZone());, +, +        // Formatter used to print and parse the sample date., +        // Printing the date works but parsing it back fails, +        // with Joda 2.9.4, +        DateTimeFormatter formatter = DateTimeFormat.forPattern("YYYY-MM-dd'T'HH:mm:ss " + randomFrom("ZZZ", "[ZZZ]", "'['ZZZ']'"));, +, +        String dateTimeAsString = formatter.print(expected);, +        assertThat(dateTimeAsString, startsWith("2016-11-10T05:37:59 "));, +, +        DateTime parsedDateTime = formatter.parseDateTime(dateTimeAsString);, +        assertThat(parsedDateTime.getZone(), equalTo(expected.getZone()));, +    }, +, +++ b/core/build.gradle, +  compile 'joda-time:joda-time:2.9.5', +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/licenses/joda-time-2.9.5.jar.sha1, +5f01da7306363fad2028b916f3eab926262de928, +++ b/core/src/test/java/org/elasticsearch/common/rounding/TimeZoneRoundingTests.java, +import org.joda.time.format.DateTimeFormat;, +import org.joda.time.format.DateTimeFormatter;, +import static org.hamcrest.Matchers.startsWith;, +    /**, +     * Test that time zones are correctly parsed. There is a bug with, +     * Joda 2.9.4 (see https://github.com/JodaOrg/joda-time/issues/373), +     */, +    public void testsTimeZoneParsing() {, +        final DateTime expected = new DateTime(2016, 11, 10, 5, 37, 59, randomDateTimeZone());, +, +        // Formatter used to print and parse the sample date., +        // Printing the date works but parsing it back fails, +        // with Joda 2.9.4, +        DateTimeFormatter formatter = DateTimeFormat.forPattern("YYYY-MM-dd'T'HH:mm:ss " + randomFrom("ZZZ", "[ZZZ]", "'['ZZZ']'"));, +, +        String dateTimeAsString = formatter.print(expected);, +        assertThat(dateTimeAsString, startsWith("2016-11-10T05:37:59 "));, +, +        DateTime parsedDateTime = formatter.parseDateTime(dateTimeAsString);, +        assertThat(parsedDateTime.getZone(), equalTo(expected.getZone()));, +    }, +, +++ b/core/src/test/java/org/elasticsearch/index/mapper/DateFieldMapperTests.java, +import org.joda.time.DateTime;, +import org.joda.time.DateTimeZone;, +import org.joda.time.format.DateTimeFormat;, +, +    /**, +     * Test that time zones are correctly parsed by the {@link DateFieldMapper}., +     * There is a known bug with Joda 2.9.4 reported in https://github.com/JodaOrg/joda-time/issues/373., +     */, +    public void testTimeZoneParsing() throws Exception {]