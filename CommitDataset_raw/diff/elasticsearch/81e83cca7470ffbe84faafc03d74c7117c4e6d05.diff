[+++ b/docs/reference/modules/scripting.asciidoc, +added[1.2.0, Dynamic scripting is disabled by default since version 1.2.0], +, +To increase security, Elasticsearch does not allow you to specify scripts with a, +request. Instead, scripts must be placed in the `scripts` directory inside the, +configuration directory (the directory where elasticsearch.yml is). Scripts, +placed into this directory will automatically be picked up and be available to, +be used. Once a script has been placed in this directory, it can be referenced, +by name. For example, a script called `calculate-score.mvel` can be referenced, +in a request like this:, +, +[source], +--------------------------------------------------, +$ tree config, +config, +├── elasticsearch.yml, +├── logging.yml, +└── scripts, +    └── calculate-score.mvel, +$ cat config/scripts/calculate-score.mvel, +Math.log(_score * 2) + my_modifier, +--------------------------------------------------, +, +[source,js], +--------------------------------------------------, +curl -XPOST localhost:9200/_search -d '{, +  "query": {, +    "function_score": {, +      "query": {, +        "match": {, +          "body": "foo", +        }, +      },, +      "functions": [, +        {, +          "script_score": {, +            "script": "calculate-score",, +            "params": {, +              "my_modifier": 8, +            }, +          }, +        }, +      ], +    }, +  }, +}', +--------------------------------------------------, +, +The name of the script is derived from the hierarchy of directories it, +exists under, and the file name without the lang extension. For example,, +a script placed under `config/scripts/group1/group2/test.py` will be, +named `group1_group2_test`., +, +=== Enabling dynamic scripting, +running as. For this reason dynamic scripting is disabled by default., +First, you should not run Elasticsearch as the `root` user, as this would allow, +a script to access or do *anything* on your server, without limitations. Second,, +you should not expose Elasticsearch directly to users, but instead have a proxy, +application inbetween. If you *do* intend to expose Elasticsearch directly to, +your users, then you have to decide whether you trust them enough to run scripts, +on your box or not. If you do, you can enable dynamic scripting by adding the, +following setting to the `config/elasticsearch.yml` file on every node:, +script.disable_dynamic: false, +While this still allows execution of named scripts provided in the config, or, +_native_ Java scripts registered through plugins, it also allows users to run, +arbitrary scripts via the API. Instead of sending the name of the file as the, +script, the body of the script can be sent instead., +++ b/docs/reference/modules/scripting.asciidoc, +added[1.2.0, Dynamic scripting is disabled by default since version 1.2.0], +, +To increase security, Elasticsearch does not allow you to specify scripts with a, +request. Instead, scripts must be placed in the `scripts` directory inside the, +configuration directory (the directory where elasticsearch.yml is). Scripts, +placed into this directory will automatically be picked up and be available to, +be used. Once a script has been placed in this directory, it can be referenced, +by name. For example, a script called `calculate-score.mvel` can be referenced, +in a request like this:, +, +[source], +--------------------------------------------------, +$ tree config, +config, +├── elasticsearch.yml, +├── logging.yml, +└── scripts, +    └── calculate-score.mvel, +$ cat config/scripts/calculate-score.mvel, +Math.log(_score * 2) + my_modifier, +--------------------------------------------------, +, +[source,js], +--------------------------------------------------, +curl -XPOST localhost:9200/_search -d '{, +  "query": {, +    "function_score": {, +      "query": {, +        "match": {, +          "body": "foo", +        }, +      },]