[+++ b/.gitignore, +++ b/.gitignore, +++ b/bin/elasticsearch.in.bat, +REM reduce the per-thread stack size, +set JAVA_OPTS=%JAVA_OPTS% -Xss256k, +, +++ b/.gitignore, +++ b/bin/elasticsearch.in.bat, +REM reduce the per-thread stack size, +set JAVA_OPTS=%JAVA_OPTS% -Xss256k, +, +++ b/bin/elasticsearch.in.sh, +# reduce the per-thread stack size, +JAVA_OPTS="$JAVA_OPTS -Xss256k", +, +++ b/.gitignore, +++ b/bin/elasticsearch.in.bat, +REM reduce the per-thread stack size, +set JAVA_OPTS=%JAVA_OPTS% -Xss256k, +, +++ b/bin/elasticsearch.in.sh, +# reduce the per-thread stack size, +JAVA_OPTS="$JAVA_OPTS -Xss256k", +, +++ b/dev-tools/ElasticSearch.launch, +<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-Xms256m -Xmx1g -Xss256k -Djava.awt.headless=true -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=logs/heapdump.hprof -Delasticsearch -Des.foreground=yes -Djava.library.path=lib/sigar -ea"/>, +++ b/.gitignore, +++ b/bin/elasticsearch.in.bat, +REM reduce the per-thread stack size, +set JAVA_OPTS=%JAVA_OPTS% -Xss256k, +, +++ b/bin/elasticsearch.in.sh, +# reduce the per-thread stack size, +JAVA_OPTS="$JAVA_OPTS -Xss256k", +, +++ b/dev-tools/ElasticSearch.launch, +<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-Xms256m -Xmx1g -Xss256k -Djava.awt.headless=true -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=logs/heapdump.hprof -Delasticsearch -Des.foreground=yes -Djava.library.path=lib/sigar -ea"/>, +++ b/docs/java-api/index_.asciidoc, +Map is a key:values pair collection. It represents very well a JSON, +structure:, +String json = mapper.writeValueAsString(yourbeaninstance);, +++ b/.gitignore, +++ b/bin/elasticsearch.in.bat, +REM reduce the per-thread stack size, +set JAVA_OPTS=%JAVA_OPTS% -Xss256k, +, +++ b/bin/elasticsearch.in.sh, +# reduce the per-thread stack size, +JAVA_OPTS="$JAVA_OPTS -Xss256k", +, +++ b/dev-tools/ElasticSearch.launch, +<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-Xms256m -Xmx1g -Xss256k -Djava.awt.headless=true -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=logs/heapdump.hprof -Delasticsearch -Des.foreground=yes -Djava.library.path=lib/sigar -ea"/>, +++ b/docs/java-api/index_.asciidoc, +Map is a key:values pair collection. It represents very well a JSON, +structure:, +String json = mapper.writeValueAsString(yourbeaninstance);, +++ b/docs/reference/api-conventions.asciidoc, +setting is also applicable when `_all`, `*` or no index has been specified., +++ b/.gitignore, +++ b/bin/elasticsearch.in.bat, +REM reduce the per-thread stack size, +set JAVA_OPTS=%JAVA_OPTS% -Xss256k, +, +++ b/bin/elasticsearch.in.sh, +# reduce the per-thread stack size, +JAVA_OPTS="$JAVA_OPTS -Xss256k", +, +++ b/dev-tools/ElasticSearch.launch, +<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-Xms256m -Xmx1g -Xss256k -Djava.awt.headless=true -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=logs/heapdump.hprof -Delasticsearch -Des.foreground=yes -Djava.library.path=lib/sigar -ea"/>, +++ b/docs/java-api/index_.asciidoc, +Map is a key:values pair collection. It represents very well a JSON, +structure:, +String json = mapper.writeValueAsString(yourbeaninstance);, +++ b/docs/reference/api-conventions.asciidoc, +setting is also applicable when `_all`, `*` or no index has been specified., +++ b/docs/reference/cat.asciidoc, +++ b/.gitignore, +++ b/bin/elasticsearch.in.bat, +REM reduce the per-thread stack size, +set JAVA_OPTS=%JAVA_OPTS% -Xss256k, +, +++ b/bin/elasticsearch.in.sh, +# reduce the per-thread stack size, +JAVA_OPTS="$JAVA_OPTS -Xss256k", +, +++ b/dev-tools/ElasticSearch.launch, +<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-Xms256m -Xmx1g -Xss256k -Djava.awt.headless=true -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=logs/heapdump.hprof -Delasticsearch -Des.foreground=yes -Djava.library.path=lib/sigar -ea"/>, +++ b/docs/java-api/index_.asciidoc, +Map is a key:values pair collection. It represents very well a JSON, +structure:, +String json = mapper.writeValueAsString(yourbeaninstance);, +++ b/docs/reference/api-conventions.asciidoc, +setting is also applicable when `_all`, `*` or no index has been specified., +++ b/docs/reference/cat.asciidoc, +++ /dev/null, +++ b/.gitignore, +++ b/bin/elasticsearch.in.bat, +REM reduce the per-thread stack size, +set JAVA_OPTS=%JAVA_OPTS% -Xss256k, +]