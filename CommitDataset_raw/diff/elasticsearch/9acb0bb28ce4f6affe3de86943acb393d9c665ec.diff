[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<Boolean> CLUSTER_INDICES_CLOSE_ENABLE_SETTING =, +        Setting.boolSetting("cluster.indices.close.enable", true, Property.Dynamic, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<Boolean> CLUSTER_INDICES_CLOSE_ENABLE_SETTING =, +        Setting.boolSetting("cluster.indices.close.enable", true, Property.Dynamic, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/support/AutoCreateIndex.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<AutoCreate> AUTO_CREATE_INDEX_SETTING =, +        new Setting<>("action.auto_create_index", "true", AutoCreate::new, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<Boolean> CLUSTER_INDICES_CLOSE_ENABLE_SETTING =, +        Setting.boolSetting("cluster.indices.close.enable", true, Property.Dynamic, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/support/AutoCreateIndex.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<AutoCreate> AUTO_CREATE_INDEX_SETTING =, +        new Setting<>("action.auto_create_index", "true", AutoCreate::new, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/support/DestructiveOperations.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<Boolean> REQUIRES_NAME_SETTING =, +        Setting.boolSetting("action.destructive_requires_name", false, Property.Dynamic, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<Boolean> CLUSTER_INDICES_CLOSE_ENABLE_SETTING =, +        Setting.boolSetting("cluster.indices.close.enable", true, Property.Dynamic, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/support/AutoCreateIndex.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<AutoCreate> AUTO_CREATE_INDEX_SETTING =, +        new Setting<>("action.auto_create_index", "true", AutoCreate::new, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/support/DestructiveOperations.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<Boolean> REQUIRES_NAME_SETTING =, +        Setting.boolSetting("action.destructive_requires_name", false, Property.Dynamic, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeReadAction.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<Boolean> FORCE_LOCAL_SETTING =, +        Setting.boolSetting("action.master.force_local", false, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<Boolean> CLUSTER_INDICES_CLOSE_ENABLE_SETTING =, +        Setting.boolSetting("cluster.indices.close.enable", true, Property.Dynamic, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/support/AutoCreateIndex.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<AutoCreate> AUTO_CREATE_INDEX_SETTING =, +        new Setting<>("action.auto_create_index", "true", AutoCreate::new, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/support/DestructiveOperations.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<Boolean> REQUIRES_NAME_SETTING =, +        Setting.boolSetting("action.destructive_requires_name", false, Property.Dynamic, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeReadAction.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<Boolean> FORCE_LOCAL_SETTING =, +        Setting.boolSetting("action.master.force_local", false, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapSettings.java, +import org.elasticsearch.common.settings.Setting.Property;, +            Setting.boolSetting("security.manager.filter_bad_defaults", true, Property.NodeScope);, +    public static final Setting<Boolean> MLOCKALL_SETTING =, +        Setting.boolSetting("bootstrap.mlockall", false, Property.NodeScope);, +    public static final Setting<Boolean> SECCOMP_SETTING =, +        Setting.boolSetting("bootstrap.seccomp", true, Property.NodeScope);, +    public static final Setting<Boolean> CTRLHANDLER_SETTING =, +        Setting.boolSetting("bootstrap.ctrlhandler", true, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<Boolean> CLUSTER_INDICES_CLOSE_ENABLE_SETTING =, +        Setting.boolSetting("cluster.indices.close.enable", true, Property.Dynamic, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/support/AutoCreateIndex.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<AutoCreate> AUTO_CREATE_INDEX_SETTING =, +        new Setting<>("action.auto_create_index", "true", AutoCreate::new, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/support/DestructiveOperations.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<Boolean> REQUIRES_NAME_SETTING =, +        Setting.boolSetting("action.destructive_requires_name", false, Property.Dynamic, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeReadAction.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<Boolean> FORCE_LOCAL_SETTING =, +        Setting.boolSetting("action.master.force_local", false, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapSettings.java, +import org.elasticsearch.common.settings.Setting.Property;, +            Setting.boolSetting("security.manager.filter_bad_defaults", true, Property.NodeScope);, +    public static final Setting<Boolean> MLOCKALL_SETTING =, +        Setting.boolSetting("bootstrap.mlockall", false, Property.NodeScope);, +    public static final Setting<Boolean> SECCOMP_SETTING =, +        Setting.boolSetting("bootstrap.seccomp", true, Property.NodeScope);, +    public static final Setting<Boolean> CTRLHANDLER_SETTING =, +        Setting.boolSetting("bootstrap.ctrlhandler", true, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/cache/recycler/PageCacheRecycler.java, +import org.elasticsearch.common.settings.Setting.Property;, +    public static final Setting<Type> TYPE_SETTING =, +        new Setting<>("cache.recycler.page.type", Type.CONCURRENT.name(), Type::parse, Property.NodeScope);, +    public static final Setting<ByteSizeValue> LIMIT_HEAP_SETTING  =, +        Setting.byteSizeSetting("cache.recycler.page.limit.heap", "10%", Property.NodeScope);, +    public static final Setting<Double> WEIGHT_BYTES_SETTING  =, +        Setting.doubleSetting("cache.recycler.page.weight.bytes", 1d, 0d, Property.NodeScope);, +    public static final Setting<Double> WEIGHT_LONG_SETTING  =, +        Setting.doubleSetting("cache.recycler.page.weight.longs", 1d, 0d, Property.NodeScope);]