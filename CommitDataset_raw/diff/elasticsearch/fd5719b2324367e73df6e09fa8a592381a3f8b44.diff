[+++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +     * Returns the indexed value used to construct search "values"., +    BytesRef indexedValueForSearch(Object value);, +     * Should the field query {@link #termQuery(Object, org.elasticsearch.index.query.QueryParseContext)}  be used when detecting this, +    Query termQuery(Object value, @Nullable QueryParseContext context);, +    Filter termFilter(Object value, @Nullable QueryParseContext context);, +    Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context);, +    Filter rangeFilter(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context);, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +     * Returns the indexed value used to construct search "values"., +    BytesRef indexedValueForSearch(Object value);, +     * Should the field query {@link #termQuery(Object, org.elasticsearch.index.query.QueryParseContext)}  be used when detecting this, +    Query termQuery(Object value, @Nullable QueryParseContext context);, +    Filter termFilter(Object value, @Nullable QueryParseContext context);, +    Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context);, +    Filter rangeFilter(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context);, +++ b/src/main/java/org/elasticsearch/index/mapper/Uid.java, +    public static BytesRef typePrefixAsBytes(BytesRef type) {, +        BytesRef bytesRef = new BytesRef(type.length + 1);, +        bytesRef.append(type);, +        bytesRef.append(DELIMITER_BYTES);, +        return bytesRef;, +    }, +, +    public static BytesRef createUidAsBytes(String type, BytesRef id) {, +        BytesRef ref = new BytesRef(type.length() + 1 + id.length);, +        ref.copyChars(type);, +        ref.append(DELIMITER_BYTES);, +        ref.append(id);, +        return ref;, +    }, +, +    public static BytesRef createUidAsBytes(BytesRef type, BytesRef id) {, +        BytesRef ref = new BytesRef(type.length + 1 + id.length);, +        ref.append(type);, +        ref.append(DELIMITER_BYTES);, +        ref.append(id);, +        return ref;, +    }, +, +    public static boolean hasDelimiter(BytesRef uid) {, +        for (int i = uid.offset; i < uid.length; i++) {, +            if (uid.bytes[i] == DELIMITER_BYTE) { // 0x23 is equal to '#', +                return true;, +            }, +        }, +        return false;, +    }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +     * Returns the indexed value used to construct search "values"., +    BytesRef indexedValueForSearch(Object value);, +     * Should the field query {@link #termQuery(Object, org.elasticsearch.index.query.QueryParseContext)}  be used when detecting this, +    Query termQuery(Object value, @Nullable QueryParseContext context);, +    Filter termFilter(Object value, @Nullable QueryParseContext context);, +    Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context);, +    Filter rangeFilter(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable QueryParseContext context);, +++ b/src/main/java/org/elasticsearch/index/mapper/Uid.java, +    public static BytesRef typePrefixAsBytes(BytesRef type) {, +        BytesRef bytesRef = new BytesRef(type.length + 1);, +        bytesRef.append(type);, +        bytesRef.append(DELIMITER_BYTES);, +        return bytesRef;, +    }, +, +    public static BytesRef createUidAsBytes(String type, BytesRef id) {, +        BytesRef ref = new BytesRef(type.length() + 1 + id.length);, +        ref.copyChars(type);, +        ref.append(DELIMITER_BYTES);, +        ref.append(id);, +        return ref;, +    }, +, +    public static BytesRef createUidAsBytes(BytesRef type, BytesRef id) {, +        BytesRef ref = new BytesRef(type.length + 1 + id.length);, +        ref.append(type);, +        ref.append(DELIMITER_BYTES);, +        ref.append(id);, +        return ref;, +    }, +, +    public static boolean hasDelimiter(BytesRef uid) {, +        for (int i = uid.offset; i < uid.length; i++) {, +            if (uid.bytes[i] == DELIMITER_BYTE) { // 0x23 is equal to '#', +                return true;, +            }, +        }, +        return false;, +    }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    public BytesRef indexedValueForSearch(Object value) {, +        if (value instanceof BytesRef) {, +            return (BytesRef) value;, +        }, +        return new BytesRef(value.toString());, +    public Query termQuery(Object value, @Nullable QueryParseContext context) {, +        return new TermQuery(names().createIndexNameTerm(indexedValueForSearch(value)));, +    public Filter termFilter(Object value, @Nullable QueryParseContext context) {, +        return new TermFilter(names().createIndexNameTerm(indexedValueForSearch(value)));]