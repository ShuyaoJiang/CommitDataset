[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +import org.apache.lucene.analysis.CharArraySet;, +import org.apache.lucene.util.Version;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, +import java.util.Set;, +    public static Set<?> parseArticles(Environment env, Settings settings, Version version) {, +                return CharArraySet.EMPTY_SET;, +                return new CharArraySet(version, Strings.commaDelimitedListToSet(value), settings.getAsBoolean("articles_case", false));, +            return new CharArraySet(version, Arrays.asList(articles), settings.getAsBoolean("articles_case", false));, +        CharArraySet pathLoadedArticles = getWordSet(env, settings, "articles", version);, +            return pathLoadedArticles;, +    public static Set<?> parseStopWords(Environment env, Settings settings, Set<?> defaultStopWords, Version version) {, +                return CharArraySet.EMPTY_SET;, +                return new CharArraySet(version, Strings.commaDelimitedListToSet(value), settings.getAsBoolean("stopwords_case", false));, +            CharArraySet setStopWords = new CharArraySet(version, stopWords.length, settings.getAsBoolean("stopwords_case", false));, +        List<String> pathLoadedStopWords = getWordList(env, settings, "stopwords");, +            CharArraySet setStopWords = new CharArraySet(version, pathLoadedStopWords.size(), settings.getAsBoolean("stopwords_case", false));, +    public static CharArraySet getWordSet(Environment env, Settings settings, String settingsPrefix, Version version) {, +        return new CharArraySet(version, wordList, settings.getAsBoolean(settingsPrefix + "_case", false));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +import org.apache.lucene.analysis.CharArraySet;, +import org.apache.lucene.util.Version;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, +import java.util.Set;, +    public static Set<?> parseArticles(Environment env, Settings settings, Version version) {, +                return CharArraySet.EMPTY_SET;, +                return new CharArraySet(version, Strings.commaDelimitedListToSet(value), settings.getAsBoolean("articles_case", false));, +            return new CharArraySet(version, Arrays.asList(articles), settings.getAsBoolean("articles_case", false));, +        CharArraySet pathLoadedArticles = getWordSet(env, settings, "articles", version);, +            return pathLoadedArticles;, +    public static Set<?> parseStopWords(Environment env, Settings settings, Set<?> defaultStopWords, Version version) {, +                return CharArraySet.EMPTY_SET;, +                return new CharArraySet(version, Strings.commaDelimitedListToSet(value), settings.getAsBoolean("stopwords_case", false));, +            CharArraySet setStopWords = new CharArraySet(version, stopWords.length, settings.getAsBoolean("stopwords_case", false));, +        List<String> pathLoadedStopWords = getWordList(env, settings, "stopwords");, +            CharArraySet setStopWords = new CharArraySet(version, pathLoadedStopWords.size(), settings.getAsBoolean("stopwords_case", false));, +    public static CharArraySet getWordSet(Environment env, Settings settings, String settingsPrefix, Version version) {, +        return new CharArraySet(version, wordList, settings.getAsBoolean(settingsPrefix + "_case", false));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/ArabicAnalyzerProvider.java, +                Analysis.parseStopWords(env, settings, ArabicAnalyzer.getDefaultStopSet(), version),, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +import org.apache.lucene.analysis.CharArraySet;, +import org.apache.lucene.util.Version;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, +import java.util.Set;, +    public static Set<?> parseArticles(Environment env, Settings settings, Version version) {, +                return CharArraySet.EMPTY_SET;, +                return new CharArraySet(version, Strings.commaDelimitedListToSet(value), settings.getAsBoolean("articles_case", false));, +            return new CharArraySet(version, Arrays.asList(articles), settings.getAsBoolean("articles_case", false));, +        CharArraySet pathLoadedArticles = getWordSet(env, settings, "articles", version);, +            return pathLoadedArticles;, +    public static Set<?> parseStopWords(Environment env, Settings settings, Set<?> defaultStopWords, Version version) {, +                return CharArraySet.EMPTY_SET;, +                return new CharArraySet(version, Strings.commaDelimitedListToSet(value), settings.getAsBoolean("stopwords_case", false));, +            CharArraySet setStopWords = new CharArraySet(version, stopWords.length, settings.getAsBoolean("stopwords_case", false));, +        List<String> pathLoadedStopWords = getWordList(env, settings, "stopwords");, +            CharArraySet setStopWords = new CharArraySet(version, pathLoadedStopWords.size(), settings.getAsBoolean("stopwords_case", false));, +    public static CharArraySet getWordSet(Environment env, Settings settings, String settingsPrefix, Version version) {, +        return new CharArraySet(version, wordList, settings.getAsBoolean(settingsPrefix + "_case", false));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/ArabicAnalyzerProvider.java, +                Analysis.parseStopWords(env, settings, ArabicAnalyzer.getDefaultStopSet(), version),, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/ArmenianAnalyzerProvider.java, +                Analysis.parseStopWords(env, settings, ArmenianAnalyzer.getDefaultStopSet(), version),, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +import org.apache.lucene.analysis.CharArraySet;, +import org.apache.lucene.util.Version;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, +import java.util.Set;, +    public static Set<?> parseArticles(Environment env, Settings settings, Version version) {, +                return CharArraySet.EMPTY_SET;, +                return new CharArraySet(version, Strings.commaDelimitedListToSet(value), settings.getAsBoolean("articles_case", false));, +            return new CharArraySet(version, Arrays.asList(articles), settings.getAsBoolean("articles_case", false));, +        CharArraySet pathLoadedArticles = getWordSet(env, settings, "articles", version);, +            return pathLoadedArticles;, +    public static Set<?> parseStopWords(Environment env, Settings settings, Set<?> defaultStopWords, Version version) {, +                return CharArraySet.EMPTY_SET;, +                return new CharArraySet(version, Strings.commaDelimitedListToSet(value), settings.getAsBoolean("stopwords_case", false));, +            CharArraySet setStopWords = new CharArraySet(version, stopWords.length, settings.getAsBoolean("stopwords_case", false));, +        List<String> pathLoadedStopWords = getWordList(env, settings, "stopwords");, +            CharArraySet setStopWords = new CharArraySet(version, pathLoadedStopWords.size(), settings.getAsBoolean("stopwords_case", false));, +    public static CharArraySet getWordSet(Environment env, Settings settings, String settingsPrefix, Version version) {, +        return new CharArraySet(version, wordList, settings.getAsBoolean(settingsPrefix + "_case", false));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/ArabicAnalyzerProvider.java, +                Analysis.parseStopWords(env, settings, ArabicAnalyzer.getDefaultStopSet(), version),, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/ArmenianAnalyzerProvider.java, +                Analysis.parseStopWords(env, settings, ArmenianAnalyzer.getDefaultStopSet(), version),, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/BasqueAnalyzerProvider.java, +                Analysis.parseStopWords(env, settings, BasqueAnalyzer.getDefaultStopSet(), version),, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +import org.apache.lucene.analysis.CharArraySet;, +import org.apache.lucene.util.Version;, +import java.util.ArrayList;]