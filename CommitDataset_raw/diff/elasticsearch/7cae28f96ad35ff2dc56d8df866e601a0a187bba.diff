[+++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +    public SuggestRequestBuilder addSuggestion(SuggestionBuilder<?> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +    public SuggestRequestBuilder addSuggestion(SuggestionBuilder<?> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +    public Float readOptionalFloat() throws IOException {, +        if (readBoolean()) {, +            return readFloat();, +        }, +        return null;, +    }, +, +    @Nullable, +     * Reads a {@link SuggestionBuilder} from the current stream, +     */, +    public SuggestionBuilder<?> readSuggestion() throws IOException {, +        return readNamedWriteable(SuggestionBuilder.class);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +    public SuggestRequestBuilder addSuggestion(SuggestionBuilder<?> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +    public Float readOptionalFloat() throws IOException {, +        if (readBoolean()) {, +            return readFloat();, +        }, +        return null;, +    }, +, +    @Nullable, +     * Reads a {@link SuggestionBuilder} from the current stream, +     */, +    public SuggestionBuilder<?> readSuggestion() throws IOException {, +        return readNamedWriteable(SuggestionBuilder.class);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +    public void writeOptionalFloat(@Nullable Float floatValue) throws IOException {, +        if (floatValue == null) {, +            writeBoolean(false);, +        } else {, +            writeBoolean(true);, +            writeFloat(floatValue);, +        }, +    }, +, +, +    /**, +     * Writes a {@link SuggestionBuilder} to the current stream, +     */, +    public void writeSuggestion(SuggestionBuilder suggestion) throws IOException {, +        writeNamedWriteable(suggestion);, +    }, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +    public SuggestRequestBuilder addSuggestion(SuggestionBuilder<?> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +    public Float readOptionalFloat() throws IOException {, +        if (readBoolean()) {, +            return readFloat();, +        }, +        return null;, +    }, +, +    @Nullable, +     * Reads a {@link SuggestionBuilder} from the current stream, +     */, +    public SuggestionBuilder<?> readSuggestion() throws IOException {, +        return readNamedWriteable(SuggestionBuilder.class);, +    }, +]