[+++ b/docs/reference/modules/plugins.asciidoc, +==== Silent/Verbose mode, +, +When running the `plugin` script, you can get more information (debug mode) using `--verbose`., +On the opposite, if you want `plugin` script to be silent, use `--silent` option., +, +Note that exit codes could be:, +, +* `0`: everything was OK, +* `64`: unknown command or incorrect option parameter, +* `74`: IO error, +* `70`: other errors, +, +[source,shell], +-----------------------------------, +bin/plugin --install mobz/elasticsearch-head --verbose, +plugin --remove head --silent, +-----------------------------------, +, +, +[float], +++ b/docs/reference/modules/plugins.asciidoc, +==== Silent/Verbose mode, +, +When running the `plugin` script, you can get more information (debug mode) using `--verbose`., +On the opposite, if you want `plugin` script to be silent, use `--silent` option., +, +Note that exit codes could be:, +, +* `0`: everything was OK, +* `64`: unknown command or incorrect option parameter, +* `74`: IO error, +* `70`: other errors, +, +[source,shell], +-----------------------------------, +bin/plugin --install mobz/elasticsearch-head --verbose, +plugin --remove head --silent, +-----------------------------------, +, +, +[float], +++ b/src/main/java/org/elasticsearch/plugins/PluginManager.java, +    public enum OutputMode {, +        DEFAULT, SILENT, VERBOSE, +    }, +, +    private OutputMode outputMode;, +    public PluginManager(Environment environment, String url, OutputMode outputMode) {, +        this.outputMode = outputMode;, +    public void downloadAndExtract(String name) throws IOException {, +        boolean downloaded = false;, +        HttpDownloadHelper.DownloadProgress progress;, +        if (outputMode == OutputMode.SILENT) {, +            progress = new HttpDownloadHelper.NullProgress();, +        } else {, +            progress = new HttpDownloadHelper.VerboseProgress(System.out);, +        }, +            System.err.println();, +            log("Trying " + pluginUrl.toExternalForm() + "...");, +                downloadHelper.download(pluginUrl, pluginFile, progress);, +                log("Failed: " + ExceptionsHelper.detailedMessage(e));, +                log("Trying " + url.toExternalForm() + "...");, +                    downloadHelper.download(url, pluginFile, progress);, +                    debug("Failed: " + ExceptionsHelper.detailedMessage(e));, +            log("Installed " + name + " into " + extractLocation.getAbsolutePath());, +            log("failed to extract plugin [" + pluginFile + "]: " + ExceptionsHelper.detailedMessage(e));, +            debug("Plugin installation assumed to be site plugin, but contains source code, aborting installation...");, +            debug("Found bin, moving to " + toLocation.getAbsolutePath());, +            debug("Installed " + name + " into " + toLocation.getAbsolutePath());, +                log("Identified as a _site plugin, moving to _site structure ...");, +                debug("Installed " + name + " into " + site.getAbsolutePath());, +            debug("Removing: " + pluginToDelete.getPath());, +            debug("Removing: " + pluginToDelete.getPath());, +            debug("Removing: " + binLocation.getPath());, +            log("Removed " + name);, +            log("Plugin " + name + " not found. Run plugin --list to get list of installed plugins.");, +        log("Installed plugins:");, +            log("    - No plugin detected in " + environment.pluginsFile().getAbsolutePath());, +                log("    - " + plugins[i].getName());, +        OutputMode outputMode = OutputMode.DEFAULT;, +                } else if ("-v".equals(command) || "--verbose".equals(command), +                    outputMode = OutputMode.VERBOSE;, +                } else if ("-s".equals(command) || "--silent".equals(command), +                        || "silent".equals(command) || "-silent".equals(command)) {, +                    outputMode = OutputMode.SILENT;, +            PluginManager pluginManager = new PluginManager(initialSettings.v2(), url, outputMode);, +                        pluginManager.log("-> Installing " + pluginName + "...");, +                        pluginManager.downloadAndExtract(pluginName);, +                        pluginManager.log("Failed to install " + pluginName + ", reason: " + e.getMessage());, +                        pluginManager.log("-> Removing " + pluginName + " ");, +                        pluginManager.log("Failed to remove " + pluginName + ", reason: " + e.getMessage());, +                    pluginManager.log("Unknown Action [" + action + "]");, +        System.out.println("    -s, --silent                      : Run in silent mode");, +    private void debug(String line) {, +        if (outputMode == OutputMode.VERBOSE) System.out.println(line);, +    }, +, +    private void log(String line) {, +        if (outputMode != OutputMode.SILENT) System.out.println(line);]