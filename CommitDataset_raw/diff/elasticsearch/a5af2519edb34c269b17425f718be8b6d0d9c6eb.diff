[+++ b/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Adds a highlighted field., +     */, +    public SearchRequestBuilder addHighlightedField(HighlightBuilder.Field field) {, +        highlightBuilder().field(field);, +        return this;, +    }, +, +    /**, +    public SearchRequestBuilder setHighlighterRequireFieldMatch(boolean requireFieldMatch) {, +        highlightBuilder().requireFieldMatch(requireFieldMatch);, +        return this;, +    }, +, +++ b/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Adds a highlighted field., +     */, +    public SearchRequestBuilder addHighlightedField(HighlightBuilder.Field field) {, +        highlightBuilder().field(field);, +        return this;, +    }, +, +    /**, +    public SearchRequestBuilder setHighlighterRequireFieldMatch(boolean requireFieldMatch) {, +        highlightBuilder().requireFieldMatch(requireFieldMatch);, +        return this;, +    }, +, +++ b/src/main/java/org/elasticsearch/search/highlight/HighlightBuilder.java, +    private Boolean requireFieldMatch;, +, +    public HighlightBuilder field(Field field) {, +        if (fields == null) {, +            fields = newArrayList();, +        }, +        fields.add(field);, +        return this;, +    }, +    public HighlightBuilder requireFieldMatch(boolean requireFieldMatch) {, +        this.requireFieldMatch = requireFieldMatch;, +        return this;, +    }, +, +        if (requireFieldMatch != null) {, +            builder.field("require_field_match", requireFieldMatch);, +        }, +                if (field.fragmentSize != -1) {, +                    builder.field("fragment_size", field.fragmentSize);, +                if (field.numOfFragments != -1) {, +                    builder.field("number_of_fragments", field.numOfFragments);, +                if (field.fragmentOffset != -1) {, +                    builder.field("fragment_offset", field.fragmentOffset);, +                }, +                if (field.requireFieldMatch != null) {, +                    builder.field("require_field_match", field.requireFieldMatch);, +    public static class Field {, +        final String name;, +        int fragmentSize = -1;, +        int fragmentOffset = -1;, +        int numOfFragments = -1;, +        Boolean requireFieldMatch;, +        public Field requireFieldMatch(boolean requireFieldMatch) {, +            this.requireFieldMatch = requireFieldMatch;, +            return this;, +        }]