[+++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        DocumentMapper parentDocMapper = parseContext.mapperService().documentMapper(parentType);, +        Filter parentFilter = parseContext.cacheFilter(parentDocMapper.typeFilter(), null);, +        HasChildFilter childFilter = new HasChildFilter(query, parentType, childType, parentFilter, searchContext);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        DocumentMapper parentDocMapper = parseContext.mapperService().documentMapper(parentType);, +        Filter parentFilter = parseContext.cacheFilter(parentDocMapper.typeFilter(), null);, +        HasChildFilter childFilter = new HasChildFilter(query, parentType, childType, parentFilter, searchContext);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +import org.elasticsearch.common.lucene.search.XConstantScoreQuery;, +, +        if (scoreType != null) {, +            HasChildFilter hasChildFilter = new HasChildFilter(innerQuery, parentType, childType, parentFilter, searchContext);, +            query = new XConstantScoreQuery(hasChildFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        DocumentMapper parentDocMapper = parseContext.mapperService().documentMapper(parentType);, +        Filter parentFilter = parseContext.cacheFilter(parentDocMapper.typeFilter(), null);, +        HasChildFilter childFilter = new HasChildFilter(query, parentType, childType, parentFilter, searchContext);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +import org.elasticsearch.common.lucene.search.XConstantScoreQuery;, +, +        if (scoreType != null) {, +            HasChildFilter hasChildFilter = new HasChildFilter(innerQuery, parentType, childType, parentFilter, searchContext);, +            query = new XConstantScoreQuery(hasChildFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +import org.apache.lucene.search.BooleanClause;, +import org.elasticsearch.common.lucene.search.NotFilter;, +import org.elasticsearch.common.lucene.search.XBooleanFilter;, +import org.elasticsearch.index.mapper.internal.ParentFieldMapper;, +import java.util.ArrayList;, +import java.util.List;, +        List<String> parentTypes = new ArrayList<String>(2);, +        for (DocumentMapper documentMapper : parseContext.mapperService()) {, +            ParentFieldMapper parentFieldMapper = documentMapper.parentFieldMapper();, +            if (parentFieldMapper != null) {, +                parentTypes.add(parentFieldMapper.type());, +            }, +        }, +, +        Filter parentFilter;, +        if (parentTypes.size() == 1) {, +            DocumentMapper documentMapper = parseContext.mapperService().documentMapper(parentTypes.get(0));, +            parentFilter = parseContext.cacheFilter(documentMapper.typeFilter(), null);, +        } else {, +            XBooleanFilter parentsFilter = new XBooleanFilter();, +            for (String parentTypeStr : parentTypes) {, +                DocumentMapper documentMapper = parseContext.mapperService().documentMapper(parentTypeStr);, +                Filter filter = parseContext.cacheFilter(documentMapper.typeFilter(), null);, +                parentsFilter.add(filter, BooleanClause.Occur.SHOULD);, +            }, +            parentFilter = parentsFilter;, +        }, +        Filter childrenFilter = parseContext.cacheFilter(new NotFilter(parentFilter), null);, +        HasParentFilter hasParentFilter = new HasParentFilter(query, parentType, searchContext, childrenFilter);, +        searchContext.addRewrite(hasParentFilter);, +        Filter filter = hasParentFilter;, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        DocumentMapper parentDocMapper = parseContext.mapperService().documentMapper(parentType);, +        Filter parentFilter = parseContext.cacheFilter(parentDocMapper.typeFilter(), null);, +        HasChildFilter childFilter = new HasChildFilter(query, parentType, childType, parentFilter, searchContext);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +import org.elasticsearch.common.lucene.search.XConstantScoreQuery;, +, +        if (scoreType != null) {, +            HasChildFilter hasChildFilter = new HasChildFilter(innerQuery, parentType, childType, parentFilter, searchContext);, +            query = new XConstantScoreQuery(hasChildFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +import org.apache.lucene.search.BooleanClause;, +import org.elasticsearch.common.lucene.search.NotFilter;, +import org.elasticsearch.common.lucene.search.XBooleanFilter;, +import org.elasticsearch.index.mapper.internal.ParentFieldMapper;, +import java.util.ArrayList;, +import java.util.List;, +        List<String> parentTypes = new ArrayList<String>(2);, +        for (DocumentMapper documentMapper : parseContext.mapperService()) {, +            ParentFieldMapper parentFieldMapper = documentMapper.parentFieldMapper();, +            if (parentFieldMapper != null) {, +                parentTypes.add(parentFieldMapper.type());, +            }, +        }, +, +        Filter parentFilter;, +        if (parentTypes.size() == 1) {, +            DocumentMapper documentMapper = parseContext.mapperService().documentMapper(parentTypes.get(0));, +            parentFilter = parseContext.cacheFilter(documentMapper.typeFilter(), null);, +        } else {, +            XBooleanFilter parentsFilter = new XBooleanFilter();, +            for (String parentTypeStr : parentTypes) {, +                DocumentMapper documentMapper = parseContext.mapperService().documentMapper(parentTypeStr);, +                Filter filter = parseContext.cacheFilter(documentMapper.typeFilter(), null);, +                parentsFilter.add(filter, BooleanClause.Occur.SHOULD);, +            }, +            parentFilter = parentsFilter;, +        }, +        Filter childrenFilter = parseContext.cacheFilter(new NotFilter(parentFilter), null);, +        HasParentFilter hasParentFilter = new HasParentFilter(query, parentType, searchContext, childrenFilter);, +        searchContext.addRewrite(hasParentFilter);, +        Filter filter = hasParentFilter;, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +import org.elasticsearch.common.lucene.search.NotFilter;]