[+++ b/qa/sql/src/main/java/org/elasticsearch/xpack/qa/sql/jdbc/SqlSpecTestCase.java, +    // TODO: add tests for nested docs when interplug communication is enabled, +++ b/qa/sql/src/main/java/org/elasticsearch/xpack/qa/sql/jdbc/SqlSpecTestCase.java, +    // TODO: add tests for nested docs when interplug communication is enabled, +++ b/sql/cli/src/main/java/org/elasticsearch/xpack/sql/cli/ResponseToString.java, +import org.elasticsearch.xpack.sql.cli.net.protocol.QueryResponse;, +                    sb.append(handleGraphviz(data), DEFAULT.foreground(WHITE));, +    // NOCOMMIT - is using the default temp folder a problem?, +    @SuppressForbidden(reason = "need to use temporary file"), +    private static String handleGraphviz(String str) {, +            Path dotTempFile = Files.createTempFile("sql-gv", ".dot");, +            //Desktop desktop = Desktop.getDesktop();, +            //File f = dotTempFile.toFile();, +            //desktop.open(f);, +            //f.deleteOnExit();, +            return "Saved graph file at " + dotTempFile;, +            return "Cannot save graph file; " + ex.getMessage();, +++ b/qa/sql/src/main/java/org/elasticsearch/xpack/qa/sql/jdbc/SqlSpecTestCase.java, +    // TODO: add tests for nested docs when interplug communication is enabled, +++ b/sql/cli/src/main/java/org/elasticsearch/xpack/sql/cli/ResponseToString.java, +import org.elasticsearch.xpack.sql.cli.net.protocol.QueryResponse;, +                    sb.append(handleGraphviz(data), DEFAULT.foreground(WHITE));, +    // NOCOMMIT - is using the default temp folder a problem?, +    @SuppressForbidden(reason = "need to use temporary file"), +    private static String handleGraphviz(String str) {, +            Path dotTempFile = Files.createTempFile("sql-gv", ".dot");, +            //Desktop desktop = Desktop.getDesktop();, +            //File f = dotTempFile.toFile();, +            //desktop.open(f);, +            //f.deleteOnExit();, +            return "Saved graph file at " + dotTempFile;, +            return "Cannot save graph file; " + ex.getMessage();, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/Page.java, +            // NB: exception is caught higher up in the JDBC driver , +            // NB: exception is caught higher up in the JDBC driver, +++ b/qa/sql/src/main/java/org/elasticsearch/xpack/qa/sql/jdbc/SqlSpecTestCase.java, +    // TODO: add tests for nested docs when interplug communication is enabled, +++ b/sql/cli/src/main/java/org/elasticsearch/xpack/sql/cli/ResponseToString.java, +import org.elasticsearch.xpack.sql.cli.net.protocol.QueryResponse;, +                    sb.append(handleGraphviz(data), DEFAULT.foreground(WHITE));, +    // NOCOMMIT - is using the default temp folder a problem?, +    @SuppressForbidden(reason = "need to use temporary file"), +    private static String handleGraphviz(String str) {, +            Path dotTempFile = Files.createTempFile("sql-gv", ".dot");, +            //Desktop desktop = Desktop.getDesktop();, +            //File f = dotTempFile.toFile();, +            //desktop.open(f);, +            //f.deleteOnExit();, +            return "Saved graph file at " + dotTempFile;, +            return "Cannot save graph file; " + ex.getMessage();, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/Page.java, +            // NB: exception is caught higher up in the JDBC driver , +            // NB: exception is caught higher up in the JDBC driver, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +    // NB: JDBC requires the use of Objects not primitive , +    // (in fact primitives are never used through-out the API), +++ b/qa/sql/src/main/java/org/elasticsearch/xpack/qa/sql/jdbc/SqlSpecTestCase.java, +    // TODO: add tests for nested docs when interplug communication is enabled, +++ b/sql/cli/src/main/java/org/elasticsearch/xpack/sql/cli/ResponseToString.java, +import org.elasticsearch.xpack.sql.cli.net.protocol.QueryResponse;, +                    sb.append(handleGraphviz(data), DEFAULT.foreground(WHITE));, +    // NOCOMMIT - is using the default temp folder a problem?, +    @SuppressForbidden(reason = "need to use temporary file"), +    private static String handleGraphviz(String str) {, +            Path dotTempFile = Files.createTempFile("sql-gv", ".dot");, +            //Desktop desktop = Desktop.getDesktop();, +            //File f = dotTempFile.toFile();, +            //desktop.open(f);, +            //f.deleteOnExit();, +            return "Saved graph file at " + dotTempFile;, +            return "Cannot save graph file; " + ex.getMessage();, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/Page.java, +            // NB: exception is caught higher up in the JDBC driver , +            // NB: exception is caught higher up in the JDBC driver, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +    // NB: JDBC requires the use of Objects not primitive , +    // (in fact primitives are never used through-out the API), +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/QueryInitResponse.java, +    public int hashCode() {, +        return Objects.hash(super.hashCode(), columns, data);, +    }, +    , +, +    @Override, +        return Objects.equals(columns, other.columns), +                && Objects.equals(data, other.data);, +++ b/qa/sql/src/main/java/org/elasticsearch/xpack/qa/sql/jdbc/SqlSpecTestCase.java, +    // TODO: add tests for nested docs when interplug communication is enabled, +++ b/sql/cli/src/main/java/org/elasticsearch/xpack/sql/cli/ResponseToString.java, +import org.elasticsearch.xpack.sql.cli.net.protocol.QueryResponse;, +                    sb.append(handleGraphviz(data), DEFAULT.foreground(WHITE));, +    // NOCOMMIT - is using the default temp folder a problem?, +    @SuppressForbidden(reason = "need to use temporary file"), +    private static String handleGraphviz(String str) {, +            Path dotTempFile = Files.createTempFile("sql-gv", ".dot");, +            //Desktop desktop = Desktop.getDesktop();, +            //File f = dotTempFile.toFile();, +            //desktop.open(f);, +            //f.deleteOnExit();, +            return "Saved graph file at " + dotTempFile;]