[+++ b/docs/en/security/authentication.asciidoc, +| `elastic`          | A built-in _superuser_. See <<built-in-roles>>., +++ b/docs/en/security/authentication.asciidoc, +| `elastic`          | A built-in _superuser_. See <<built-in-roles>>., +++ b/docs/en/security/authorization.asciidoc, +{security} applies a default role to all users, including, +<<anonymous-access, anonymous users>>. The default role enables users to access, +the authenticate endpoint, change their own passwords, and get information about, +themselves., +Grants access necessary for the Kibana system user to read from and write to the, +Kibana indices and check the availability of the Elasticsearch cluster., +[[built-in-roles-kibana-user]], +`kibana_user`::, +Grants the minimum privileges required for any user of Kibana. This role grants, +access to the Kibana indices and grants  monitoring privileges for the cluster., +, +[[built-in-roles-monitoring-user]], +`monitoring_user`::, +Grants the minimum privileges required for any user of Monitoring other than those, +required to use Kibana. This role grants access to the monitoring indices., +Monitoring users should also be assigned the `kibana_user` role., +, +[[built-in-roles-remote-monitoring-agent]], +`remote_monitoring_agent`::, +Grants the minimum privileges required for a remote monitoring agent to write data, +into this cluster., +, +[[built-in-roles-reporting-user]], +`reporting_user`::, +Grants the specific privileges required for users of Reporting other than those, +required to use Kibana. This role grants access to the reporting indices. Reporting, +users should also be assigned the `kibana_user` role and a role that grants them, +access to the data that will be used to generate reports with., +, +[[built-in-roles-superuser]], +`superuser`::, +Grants full access to the cluster, including all indices and data. A user with, +the `superuser` role can also manage users and roles and, +<<run-as-privilege, impersonate>> any other user in the system. Due to the, +permissive nature of this role, take extra care when assigning it to a user., +, +[[built-in-roles-transport-client]], +`transport_client`::, +Grants the privileges required to access the cluster through the Java Transport, +Client. The Java Transport Client fetches information about the nodes in the, +cluster using the _Node Liveness API_ and the _Cluster State API_ (when, +sniffing is enabled). Assign your users this role if they use the, +Transport Client., ++, +NOTE: Using the Transport Client effectively means the users are granted access, +to the cluster state. This means users can view the metadata over all indices,, +index templates, mappings, node and basically everything about the cluster., +However, this role does not grant permission to view the data in all indices., +, +[[built-in-roles-watcher-admin]], +`watcher_admin`::, ++, +Grants write access to the `.watches` index, read access to the watch history and, +the triggered watches index and allows to execute all watcher actions., +, +[[built-in-roles-watcher-user]], +`watcher_user`::, ++, +Grants read access to the `.watches` index, the get watch action and the watcher, +stats., +, +]