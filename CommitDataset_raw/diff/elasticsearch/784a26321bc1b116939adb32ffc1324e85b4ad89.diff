[+++ b/src/main/java/org/elasticsearch/index/query/TermQueryParser.java, +            } else if (token == XContentParser.Token.START_ARRAY) {, +                throw new QueryParsingException(parseContext, "[term] query does not support array of values");, +++ b/src/main/java/org/elasticsearch/index/query/TermQueryParser.java, +            } else if (token == XContentParser.Token.START_ARRAY) {, +                throw new QueryParsingException(parseContext, "[term] query does not support array of values");, +++ b/src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java, +    @Test(expected = QueryParsingException.class), +    public void testTermQueryArrayInvalid() throws IOException {, +        IndexQueryParserService queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/index/query/term-array-invalid.json");, +        unwrapTermQuery(queryParser.parse(query).query());, +    }, +, +++ b/src/main/java/org/elasticsearch/index/query/TermQueryParser.java, +            } else if (token == XContentParser.Token.START_ARRAY) {, +                throw new QueryParsingException(parseContext, "[term] query does not support array of values");, +++ b/src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java, +    @Test(expected = QueryParsingException.class), +    public void testTermQueryArrayInvalid() throws IOException {, +        IndexQueryParserService queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/index/query/term-array-invalid.json");, +        unwrapTermQuery(queryParser.parse(query).query());, +    }, +, +++ b/src/test/java/org/elasticsearch/index/query/term-array-invalid.json, +{, +    "term": {, +        "age": [34, 35], +    }, +}]