[+++ b/CONTRIBUTING.md, + * IntelliJ: `Preferences/Settings->Editor->Code Style->Java->Imports`. There are two configuration options: `Class count to use import with '*'` and `Names count to use static import with '*'`. Set their values to 99999 or some other absurdly high value., +++ b/CONTRIBUTING.md, + * IntelliJ: `Preferences/Settings->Editor->Code Style->Java->Imports`. There are two configuration options: `Class count to use import with '*'` and `Names count to use static import with '*'`. Set their values to 99999 or some other absurdly high value., +++ b/buildSrc/version.properties, +lucene            = 7.2.0-snapshot-8c94404, +++ b/CONTRIBUTING.md, + * IntelliJ: `Preferences/Settings->Editor->Code Style->Java->Imports`. There are two configuration options: `Class count to use import with '*'` and `Names count to use static import with '*'`. Set their values to 99999 or some other absurdly high value., +++ b/buildSrc/version.properties, +lucene            = 7.2.0-snapshot-8c94404, +++ b/core/cli/src/main/java/org/elasticsearch/cli/Command.java, +    private final Runnable beforeMain;, +, +    /**, +     * Construct the command with the specified command description and runnable to execute before main is invoked., +     *, +     * @param description the command description, +     * @param beforeMain the before-main runnable, +     */, +    public Command(final String description, final Runnable beforeMain) {, +        this.beforeMain = beforeMain;, +        beforeMain.run();, +++ b/CONTRIBUTING.md, + * IntelliJ: `Preferences/Settings->Editor->Code Style->Java->Imports`. There are two configuration options: `Class count to use import with '*'` and `Names count to use static import with '*'`. Set their values to 99999 or some other absurdly high value., +++ b/buildSrc/version.properties, +lucene            = 7.2.0-snapshot-8c94404, +++ b/core/cli/src/main/java/org/elasticsearch/cli/Command.java, +    private final Runnable beforeMain;, +, +    /**, +     * Construct the command with the specified command description and runnable to execute before main is invoked., +     *, +     * @param description the command description, +     * @param beforeMain the before-main runnable, +     */, +    public Command(final String description, final Runnable beforeMain) {, +        this.beforeMain = beforeMain;, +        beforeMain.run();, +++ b/core/cli/src/main/java/org/elasticsearch/cli/MultiCommand.java, +    /**, +     * Construct the multi-command with the specified command description and runnable to execute before main is invoked., +     *, +     * @param description the multi-command description, +     * @param beforeMain the before-main runnable, +     */, +    public MultiCommand(final String description, final Runnable beforeMain) {, +        super(description, beforeMain);, +++ b/CONTRIBUTING.md, + * IntelliJ: `Preferences/Settings->Editor->Code Style->Java->Imports`. There are two configuration options: `Class count to use import with '*'` and `Names count to use static import with '*'`. Set their values to 99999 or some other absurdly high value., +++ b/buildSrc/version.properties, +lucene            = 7.2.0-snapshot-8c94404, +++ b/core/cli/src/main/java/org/elasticsearch/cli/Command.java, +    private final Runnable beforeMain;, +, +    /**, +     * Construct the command with the specified command description and runnable to execute before main is invoked., +     *, +     * @param description the command description, +     * @param beforeMain the before-main runnable, +     */, +    public Command(final String description, final Runnable beforeMain) {, +        this.beforeMain = beforeMain;, +        beforeMain.run();, +++ b/core/cli/src/main/java/org/elasticsearch/cli/MultiCommand.java, +    /**, +     * Construct the multi-command with the specified command description and runnable to execute before main is invoked., +     *, +     * @param description the multi-command description, +     * @param beforeMain the before-main runnable, +     */, +    public MultiCommand(final String description, final Runnable beforeMain) {, +        super(description, beforeMain);, +++ /dev/null, +++ b/CONTRIBUTING.md, + * IntelliJ: `Preferences/Settings->Editor->Code Style->Java->Imports`. There are two configuration options: `Class count to use import with '*'` and `Names count to use static import with '*'`. Set their values to 99999 or some other absurdly high value., +++ b/buildSrc/version.properties, +lucene            = 7.2.0-snapshot-8c94404, +++ b/core/cli/src/main/java/org/elasticsearch/cli/Command.java, +    private final Runnable beforeMain;, +, +    /**, +     * Construct the command with the specified command description and runnable to execute before main is invoked., +     *, +     * @param description the command description, +     * @param beforeMain the before-main runnable, +     */, +    public Command(final String description, final Runnable beforeMain) {, +        this.beforeMain = beforeMain;, +        beforeMain.run();, +++ b/core/cli/src/main/java/org/elasticsearch/cli/MultiCommand.java, +    /**, +     * Construct the multi-command with the specified command description and runnable to execute before main is invoked., +     *, +     * @param description the multi-command description, +     * @param beforeMain the before-main runnable, +     */, +    public MultiCommand(final String description, final Runnable beforeMain) {, +        super(description, beforeMain);, +++ /dev/null, +++ b/core/licenses/lucene-analyzers-common-7.2.0-snapshot-8c94404.jar.sha1]