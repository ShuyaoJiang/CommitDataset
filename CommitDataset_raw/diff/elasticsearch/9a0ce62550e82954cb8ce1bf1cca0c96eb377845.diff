[+++ b/modules/percolator/src/main/java/org/elasticsearch/percolator/ExtractQueryTermsService.java, +import org.apache.lucene.search.SynonymQuery;, +        map.put(SynonymQuery.class, synonymQuery());, +    static Function<Query, Result> synonymQuery() {, +        return query -> {, +            Set<Term> terms = new HashSet<>(((SynonymQuery) query).getTerms());, +            return new Result(true, terms);, +        };, +    }, +, +++ b/modules/percolator/src/main/java/org/elasticsearch/percolator/ExtractQueryTermsService.java, +import org.apache.lucene.search.SynonymQuery;, +        map.put(SynonymQuery.class, synonymQuery());, +    static Function<Query, Result> synonymQuery() {, +        return query -> {, +            Set<Term> terms = new HashSet<>(((SynonymQuery) query).getTerms());, +            return new Result(true, terms);, +        };, +    }, +, +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/ExtractQueryTermsServiceTests.java, +import org.apache.lucene.search.SynonymQuery;, +    public void testSynonymQuery() {, +        SynonymQuery query = new SynonymQuery();, +        Result result = extractQueryTerms(query);, +        assertThat(result.verified, is(true));, +        assertThat(result.terms.isEmpty(), is(true));, +, +        query = new SynonymQuery(new Term("_field", "_value1"), new Term("_field", "_value2"));, +        result = extractQueryTerms(query);, +        assertThat(result.verified, is(true));, +        assertTermsEqual(result.terms, new Term("_field", "_value1"), new Term("_field", "_value2"));, +    }, +]