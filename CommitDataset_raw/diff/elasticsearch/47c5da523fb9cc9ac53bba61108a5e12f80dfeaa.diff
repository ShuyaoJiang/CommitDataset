[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/DependencyLicensesTask.groovy, +    private static final String SHA_EXTENSION = '.sha1', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/DependencyLicensesTask.groovy, +    private static final String SHA_EXTENSION = '.sha1', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/UpdateShasTask.groovy, +            if (name.endsWith(SHA_EXTENSION)) {, +            File shaFile = new File(parentTask.licensesDir, jarName + SHA_EXTENSION), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/DependencyLicensesTask.groovy, +    private static final String SHA_EXTENSION = '.sha1', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/UpdateShasTask.groovy, +            if (name.endsWith(SHA_EXTENSION)) {, +            File shaFile = new File(parentTask.licensesDir, jarName + SHA_EXTENSION), +++ b/core/src/main/java/org/elasticsearch/action/support/broadcast/node/TransportBroadcastByNodeAction.java, +            if (logger.isTraceEnabled()) {, +            }, +            if (logger.isTraceEnabled()) {, +            }, +            if (logger.isTraceEnabled()) {, +            }, +                if (logger.isTraceEnabled()) {, +                }, +                if (logger.isTraceEnabled()) {, +                }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/DependencyLicensesTask.groovy, +    private static final String SHA_EXTENSION = '.sha1', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/UpdateShasTask.groovy, +            if (name.endsWith(SHA_EXTENSION)) {, +            File shaFile = new File(parentTask.licensesDir, jarName + SHA_EXTENSION), +++ b/core/src/main/java/org/elasticsearch/action/support/broadcast/node/TransportBroadcastByNodeAction.java, +            if (logger.isTraceEnabled()) {, +            }, +            if (logger.isTraceEnabled()) {, +            }, +            if (logger.isTraceEnabled()) {, +            }, +                if (logger.isTraceEnabled()) {, +                }, +                if (logger.isTraceEnabled()) {, +                }, +++ b/docs/reference/modules/scripting.asciidoc, +            "script": {, +        }]