[+++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkRequest.java, +                validationException = addValidationError("monitored system API version is missing for monitoring document [" + i + "]",, +    public MonitoringBulkRequest add(BytesReference content, String defaultMonitoringId, String defaultMonitoringApiVersion,, +                                              defaultMonitoringApiVersion,, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkRequest.java, +                validationException = addValidationError("monitored system API version is missing for monitoring document [" + i + "]",, +    public MonitoringBulkRequest add(BytesReference content, String defaultMonitoringId, String defaultMonitoringApiVersion,, +                                              defaultMonitoringApiVersion,, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkRequestBuilder.java, +    public MonitoringBulkRequestBuilder add(BytesReference content, String defaultId, String defaultApiVersion, String defaultType), +        request.add(content, defaultId, defaultApiVersion, defaultType);, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkRequest.java, +                validationException = addValidationError("monitored system API version is missing for monitoring document [" + i + "]",, +    public MonitoringBulkRequest add(BytesReference content, String defaultMonitoringId, String defaultMonitoringApiVersion,, +                                              defaultMonitoringApiVersion,, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkRequestBuilder.java, +    public MonitoringBulkRequestBuilder add(BytesReference content, String defaultId, String defaultApiVersion, String defaultType), +        request.add(content, defaultId, defaultApiVersion, defaultType);, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkResponse.java, +            out.writeException(getCause());, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkRequest.java, +                validationException = addValidationError("monitored system API version is missing for monitoring document [" + i + "]",, +    public MonitoringBulkRequest add(BytesReference content, String defaultMonitoringId, String defaultMonitoringApiVersion,, +                                              defaultMonitoringApiVersion,, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkRequestBuilder.java, +    public MonitoringBulkRequestBuilder add(BytesReference content, String defaultId, String defaultApiVersion, String defaultType), +        request.add(content, defaultId, defaultApiVersion, defaultType);, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkResponse.java, +            out.writeException(getCause());, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/agent/exporter/MonitoringTemplateUtils.java, +    public static final String TEMPLATE_VERSION = "2";, +        return TemplateUtils.loadTemplate(resource, TEMPLATE_VERSION, TEMPLATE_VERSION_PROPERTY);, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkRequest.java, +                validationException = addValidationError("monitored system API version is missing for monitoring document [" + i + "]",, +    public MonitoringBulkRequest add(BytesReference content, String defaultMonitoringId, String defaultMonitoringApiVersion,, +                                              defaultMonitoringApiVersion,, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkRequestBuilder.java, +    public MonitoringBulkRequestBuilder add(BytesReference content, String defaultId, String defaultApiVersion, String defaultType), +        request.add(content, defaultId, defaultApiVersion, defaultType);, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkResponse.java, +            out.writeException(getCause());, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/agent/exporter/MonitoringTemplateUtils.java, +    public static final String TEMPLATE_VERSION = "2";, +        return TemplateUtils.loadTemplate(resource, TEMPLATE_VERSION, TEMPLATE_VERSION_PROPERTY);, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/agent/resolver/MonitoringIndexNameResolver.java, +        protected Data(String version) {, +            this.index = String.join(DELIMITER, PREFIX, DATA, version);, +            return String.format(Locale.ROOT, "%s-%s-%s", PREFIX, DATA, MonitoringTemplateUtils.TEMPLATE_VERSION);, +        protected Timestamped(MonitoredSystem system, Settings settings, String version) {, +            this.index = String.join(DELIMITER, PREFIX, system.getSystem(), version);, +            return String.format(Locale.ROOT, "%s-%s-%s", PREFIX, getId(), MonitoringTemplateUtils.TEMPLATE_VERSION);, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkRequest.java, +                validationException = addValidationError("monitored system API version is missing for monitoring document [" + i + "]",, +    public MonitoringBulkRequest add(BytesReference content, String defaultMonitoringId, String defaultMonitoringApiVersion,, +                                              defaultMonitoringApiVersion,, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkRequestBuilder.java, +    public MonitoringBulkRequestBuilder add(BytesReference content, String defaultId, String defaultApiVersion, String defaultType), +        request.add(content, defaultId, defaultApiVersion, defaultType);, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkResponse.java, +            out.writeException(getCause());, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/agent/exporter/MonitoringTemplateUtils.java, +    public static final String TEMPLATE_VERSION = "2";, +        return TemplateUtils.loadTemplate(resource, TEMPLATE_VERSION, TEMPLATE_VERSION_PROPERTY);, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/agent/resolver/MonitoringIndexNameResolver.java, +        protected Data(String version) {, +            this.index = String.join(DELIMITER, PREFIX, DATA, version);, +            return String.format(Locale.ROOT, "%s-%s-%s", PREFIX, DATA, MonitoringTemplateUtils.TEMPLATE_VERSION);, +        protected Timestamped(MonitoredSystem system, Settings settings, String version) {, +            this.index = String.join(DELIMITER, PREFIX, system.getSystem(), version);, +            return String.format(Locale.ROOT, "%s-%s-%s", PREFIX, getId(), MonitoringTemplateUtils.TEMPLATE_VERSION);, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/agent/resolver/ResolversRegistry.java, +import org.elasticsearch.xpack.monitoring.agent.exporter.MonitoringTemplateUtils;, +, +        final String currentApiVersion = MonitoringTemplateUtils.TEMPLATE_VERSION;, +, +        // Note: We resolve requests by the API version that is supplied; this allows us to translate and up-convert any older, +        // requests that come through the _xpack/monitoring/_bulk endpoint, +        registrations.add(resolveByClassSystemVersion(id, dataResolver, MonitoringIndex.DATA, currentApiVersion));, +        registrations.add(resolveByClassSystemVersion(id, timestampedResolver, MonitoringIndex.TIMESTAMPED, currentApiVersion));, +                                                    String apiVersion) {, +                return apiVersion.equals(doc.getMonitoringVersion());, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkRequest.java, +                validationException = addValidationError("monitored system API version is missing for monitoring document [" + i + "]",, +    public MonitoringBulkRequest add(BytesReference content, String defaultMonitoringId, String defaultMonitoringApiVersion,, +                                              defaultMonitoringApiVersion,, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkRequestBuilder.java, +    public MonitoringBulkRequestBuilder add(BytesReference content, String defaultId, String defaultApiVersion, String defaultType), +        request.add(content, defaultId, defaultApiVersion, defaultType);, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/action/MonitoringBulkResponse.java, +            out.writeException(getCause());, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/agent/exporter/MonitoringTemplateUtils.java, +    public static final String TEMPLATE_VERSION = "2";, +        return TemplateUtils.loadTemplate(resource, TEMPLATE_VERSION, TEMPLATE_VERSION_PROPERTY);, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/agent/resolver/MonitoringIndexNameResolver.java, +        protected Data(String version) {, +            this.index = String.join(DELIMITER, PREFIX, DATA, version);, +            return String.format(Locale.ROOT, "%s-%s-%s", PREFIX, DATA, MonitoringTemplateUtils.TEMPLATE_VERSION);, +        protected Timestamped(MonitoredSystem system, Settings settings, String version) {, +            this.index = String.join(DELIMITER, PREFIX, system.getSystem(), version);, +            return String.format(Locale.ROOT, "%s-%s-%s", PREFIX, getId(), MonitoringTemplateUtils.TEMPLATE_VERSION);]