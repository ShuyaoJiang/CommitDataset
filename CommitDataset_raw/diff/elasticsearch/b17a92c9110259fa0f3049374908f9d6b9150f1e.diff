[+++ b/core/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +import org.apache.lucene.search.similarities.Similarity;, +        return new LateParsingQuery(parentDocMapper.typeFilter(), innerQuery, minChildren(), maxChildren,, +                                    parentType, scoreMode, parentChildIndexFieldData, context.getSearchSimilarity());, +        private final Similarity similarity;, +        LateParsingQuery(Query toQuery, Query innerQuery, int minChildren, int maxChildren,, +                         String parentType, ScoreMode scoreMode, ParentChildIndexFieldData parentChildIndexFieldData,, +                         Similarity similarity) {, +            this.similarity = similarity;, +                indexSearcher.setSimilarity(similarity);, +++ b/core/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +import org.apache.lucene.search.similarities.Similarity;, +        return new LateParsingQuery(parentDocMapper.typeFilter(), innerQuery, minChildren(), maxChildren,, +                                    parentType, scoreMode, parentChildIndexFieldData, context.getSearchSimilarity());, +        private final Similarity similarity;, +        LateParsingQuery(Query toQuery, Query innerQuery, int minChildren, int maxChildren,, +                         String parentType, ScoreMode scoreMode, ParentChildIndexFieldData parentChildIndexFieldData,, +                         Similarity similarity) {, +            this.similarity = similarity;, +                indexSearcher.setSimilarity(similarity);, +++ b/core/src/main/java/org/elasticsearch/index/query/HasParentQueryBuilder.java, +        return new HasChildQueryBuilder.LateParsingQuery(childrenFilter,, +                                                         innerQuery,, +                                                         HasChildQueryBuilder.DEFAULT_MIN_CHILDREN,, +                                                         HasChildQueryBuilder.DEFAULT_MAX_CHILDREN,, +                                                         type,, +                                                         score ? ScoreMode.Max : ScoreMode.None,, +                                                         parentChildIndexFieldData,, +                                                         context.getSearchSimilarity());, +++ b/core/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +import org.apache.lucene.search.similarities.Similarity;, +        return new LateParsingQuery(parentDocMapper.typeFilter(), innerQuery, minChildren(), maxChildren,, +                                    parentType, scoreMode, parentChildIndexFieldData, context.getSearchSimilarity());, +        private final Similarity similarity;, +        LateParsingQuery(Query toQuery, Query innerQuery, int minChildren, int maxChildren,, +                         String parentType, ScoreMode scoreMode, ParentChildIndexFieldData parentChildIndexFieldData,, +                         Similarity similarity) {, +            this.similarity = similarity;, +                indexSearcher.setSimilarity(similarity);, +++ b/core/src/main/java/org/elasticsearch/index/query/HasParentQueryBuilder.java, +        return new HasChildQueryBuilder.LateParsingQuery(childrenFilter,, +                                                         innerQuery,, +                                                         HasChildQueryBuilder.DEFAULT_MIN_CHILDREN,, +                                                         HasChildQueryBuilder.DEFAULT_MAX_CHILDREN,, +                                                         type,, +                                                         score ? ScoreMode.Max : ScoreMode.None,, +                                                         parentChildIndexFieldData,, +                                                         context.getSearchSimilarity());, +++ b/core/src/test/java/org/elasticsearch/search/child/ChildQuerySearchIT.java, +import java.util.Arrays;, +, +    // Tests #16550, +    public void testHasChildWithNonDefaultGlobalSimilarity() {, +      assertAcked(prepareCreate("test").setSettings(settingsBuilder().put(indexSettings()), +          .put("index.similarity.default.type", "BM25")), +          .addMapping("parent"), +          .addMapping("child", "_parent", "type=parent", "c_field", "type=string"));, +      ensureGreen();, +, +      verifyNonDefaultSimilarity();, +    }, +, +    // Tests #16550, +    public void testHasChildWithNonDefaultFieldSimilarity() {, +      assertAcked(prepareCreate("test"), +          .addMapping("parent"), +          .addMapping("child", "_parent", "type=parent", "c_field", "type=string,similarity=BM25"));, +      ensureGreen();, +, +      verifyNonDefaultSimilarity();, +    }, +, +    // Tests #16550, +    private void verifyNonDefaultSimilarity() {, +      client().prepareIndex("test", "parent", "p1").setSource("p_field", "p_value1").get();, +      client().prepareIndex("test", "child", "c1").setSource("c_field", "c_value").setParent("p1").get();, +      client().prepareIndex("test", "child", "c2").setSource("c_field", "c_value").setParent("p1").get();, +      refresh();, +, +      // baseline: sum of scores of matching child docs outside of has_child query, +      SearchResponse searchResponse = client().prepareSearch("test"), +          .setTypes("child"), +          .setQuery(matchQuery("c_field", "c_value")), +          .get();, +      assertSearchHits(searchResponse, "c1", "c2");, +      Float childSum = (float) Arrays.asList(searchResponse.getHits().getHits()), +          .stream(), +          .mapToDouble(hit -> hit.getScore()), +          .sum();, +, +      // compare baseline to has_child with 'total' score_mode, +      searchResponse = client().prepareSearch("test"), +          .setQuery(hasChildQuery("child", matchQuery("c_field", "c_value")).scoreMode(ScoreMode.Total)), +          .get();, +      assertSearchHits(searchResponse, "p1");, +      assertThat(searchResponse.getHits().hits()[0].score(), equalTo(childSum));, +    }]