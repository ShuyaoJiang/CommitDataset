[+++ b/marvel/src/main/resources/marvel_index_template.json, +              "enabled": false, +            },, +            "shards": {, +++ b/marvel/src/main/resources/marvel_index_template.json, +              "enabled": false, +            },, +            "shards": {, +++ b/marvel/src/test/java/org/elasticsearch/marvel/agent/renderer/cluster/ClusterStateIT.java, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +import org.elasticsearch.index.query.QueryBuilders;, +import org.elasticsearch.marvel.agent.exporter.HttpESExporterUtils;, +import org.elasticsearch.marvel.agent.settings.MarvelSettings;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertHitCount;, +, +    /**, +     * This test should fail if the mapping for the 'nodes' attribute, +     * in the 'marvel_cluster_state' document is NOT set to 'enable: false', +     *, +     * See, +     */, +    @Test, +    public void testNoNodesIndexing() throws Exception {, +        logger.debug("--> forcing marvel's index template update");, +        assertAcked(client().admin().indices().preparePutTemplate("marvel").setSource(HttpESExporterUtils.loadDefaultTemplate()).execute().actionGet());, +, +        logger.debug("--> deleting all marvel indices");, +        cluster().wipeIndices(MarvelSettings.MARVEL_INDICES_PREFIX + "*");, +, +        logger.debug("--> checking for template existence");, +        assertMarvelTemplateExists();, +        waitForMarvelDocs(ClusterStateCollector.TYPE);, +, +        logger.debug("--> searching for marvel documents of type [{}]", ClusterStateCollector.TYPE);, +        SearchResponse response = client().prepareSearch().setTypes(ClusterStateCollector.TYPE).get();, +        assertThat(response.getHits().getTotalHits(), greaterThan(0L));, +, +        DiscoveryNodes nodes = client().admin().cluster().prepareState().clear().setNodes(true).get().getState().nodes();, +, +        logger.debug("--> ensure that the 'nodes' attributes of the cluster state document is not indexed");, +        assertHitCount(client().prepareCount(), +                .setTypes(ClusterStateCollector.TYPE), +                .setQuery(QueryBuilders.matchQuery("cluster_state.nodes." + nodes.masterNodeId() + ".name", nodes.masterNode().name())).get(), 0L);, +    }]