[+++ b/.idea/dictionaries/kimchy.xml, +      <w>aggregators</w>, +      <w>recycler</w>, +      <w>sentinal</w>, +++ b/.idea/dictionaries/kimchy.xml, +      <w>aggregators</w>, +      <w>recycler</w>, +      <w>sentinal</w>, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/search/facet/TermsFacetSearchBenchmark.java, +        long COUNT = SizeValue.parseSizeValue("2m").singles();, +        int NUMBER_OF_MULTI_VALUE_TERMS = 10;, +            lValues[i] = ThreadLocalRandom.current().nextLong();, +                    builder.startArray("lm_value");, +                    for (int k = 0; k < NUMBER_OF_MULTI_VALUE_TERMS; k++) {, +                        builder.value(lValues[ThreadLocalRandom.current().nextInt(sValues.length)]);, +                    }, +                    builder.endArray();, +, +        COUNT = client.prepareCount().setQuery(matchAllQuery()).execute().actionGet().count();, +        System.out.println("--> Number of docs in index: " + COUNT);, +        client.admin().indices().prepareClearCache().setFieldDataCache(true).execute().actionGet();, +, +        // S_VALUE (Map), +        client.admin().indices().prepareClearCache().setFieldDataCache(true).execute().actionGet();, +, +        System.out.println("--> Warmup (s_value) ...");, +        // run just the child query, warm up first, +        for (int j = 0; j < QUERY_WARMUP; j++) {, +            SearchResponse searchResponse = client.prepareSearch(), +                    .setQuery(matchAllQuery()), +                    .addFacet(termsFacet("s_value").field("s_value").executionHint("map")), +                    .execute().actionGet();, +            if (j == 0) {, +                System.out.println("--> Loading (s_value) took: " + searchResponse.took());, +            }, +            if (searchResponse.hits().totalHits() != COUNT) {, +                System.err.println("--> mismatch on hits");, +            }, +        }, +        System.out.println("--> Warmup (s_value) DONE");, +, +        totalQueryTime = 0;, +        for (int j = 0; j < QUERY_COUNT; j++) {, +            SearchResponse searchResponse = client.prepareSearch(), +                    .setQuery(matchAllQuery()), +                    .addFacet(termsFacet("s_value").field("s_value").executionHint("map")), +                    .execute().actionGet();, +            if (searchResponse.hits().totalHits() != COUNT) {, +                System.err.println("--> mismatch on hits");, +            }, +            totalQueryTime += searchResponse.tookInMillis();, +        }, +        System.out.println("--> Terms Facet (map) (s_value) " + (totalQueryTime / QUERY_COUNT) + "ms");, +, +        // L VALUE, +        // SM VALUE, +, +        // SM VALUE (map), +, +        client.admin().indices().prepareClearCache().setFieldDataCache(true).execute().actionGet();, +, +        System.out.println("--> Warmup (sm_value) ...");, +        // run just the child query, warm up first, +        for (int j = 0; j < QUERY_WARMUP; j++) {, +            SearchResponse searchResponse = client.prepareSearch(), +                    .setQuery(matchAllQuery()), +                    .addFacet(termsFacet("sm_value").field("sm_value").executionHint("map")), +                    .execute().actionGet();, +            if (j == 0) {, +                System.out.println("--> Loading (sm_value) took: " + searchResponse.took());, +            }, +            if (searchResponse.hits().totalHits() != COUNT) {, +                System.err.println("--> mismatch on hits");, +            }, +        }, +        System.out.println("--> Warmup (sm_value) DONE");, +, +, +        totalQueryTime = 0;, +        for (int j = 0; j < QUERY_COUNT; j++) {, +            SearchResponse searchResponse = client.prepareSearch(), +                    .setQuery(matchAllQuery()), +                    .addFacet(termsFacet("sm_value").field("sm_value").executionHint("map")), +                    .execute().actionGet();, +            if (searchResponse.hits().totalHits() != COUNT) {, +                System.err.println("--> mismatch on hits");, +            }, +            totalQueryTime += searchResponse.tookInMillis();, +        }, +        System.out.println("--> Terms Facet (map) (sm_value) " + (totalQueryTime / QUERY_COUNT) + "ms");, +, +, +        // LM VALUE, +, +        client.admin().indices().prepareClearCache().setFieldDataCache(true).execute().actionGet();, +, +        System.out.println("--> Warmup (lm_value) ...");, +        // run just the child query, warm up first, +        for (int j = 0; j < QUERY_WARMUP; j++) {, +            SearchResponse searchResponse = client.prepareSearch()]