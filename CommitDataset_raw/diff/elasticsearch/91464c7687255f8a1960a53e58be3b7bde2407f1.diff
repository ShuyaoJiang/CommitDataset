[+++ b/core/src/main/java/org/elasticsearch/Version.java, +import org.elasticsearch.common.lucene.Lucene;, +        assert CURRENT.luceneVersion.equals(Lucene.VERSION) : "Version must be upgraded to [" + Lucene.VERSION + "] is still set to [" + CURRENT.luceneVersion + "]";, +, +, +, +, +                return new Version(id, false, Lucene.VERSION);, +++ b/core/src/main/java/org/elasticsearch/Version.java, +import org.elasticsearch.common.lucene.Lucene;, +        assert CURRENT.luceneVersion.equals(Lucene.VERSION) : "Version must be upgraded to [" + Lucene.VERSION + "] is still set to [" + CURRENT.luceneVersion + "]";, +, +, +, +, +                return new Version(id, false, Lucene.VERSION);, +++ b/core/src/main/java/org/elasticsearch/action/ActionRequest.java, +public abstract class ActionRequest<Self extends ActionRequest<Self>> extends TransportRequest {, +    protected ActionRequest(ActionRequest<?> request) {, +++ b/core/src/main/java/org/elasticsearch/Version.java, +import org.elasticsearch.common.lucene.Lucene;, +        assert CURRENT.luceneVersion.equals(Lucene.VERSION) : "Version must be upgraded to [" + Lucene.VERSION + "] is still set to [" + CURRENT.luceneVersion + "]";, +, +, +, +, +                return new Version(id, false, Lucene.VERSION);, +++ b/core/src/main/java/org/elasticsearch/action/ActionRequest.java, +public abstract class ActionRequest<Self extends ActionRequest<Self>> extends TransportRequest {, +    protected ActionRequest(ActionRequest<?> request) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportNodesSnapshotsStatus.java, +        public Request(ActionRequest<?> request, String[] nodesIds) {, +        @Override, +++ b/core/src/main/java/org/elasticsearch/Version.java, +import org.elasticsearch.common.lucene.Lucene;, +        assert CURRENT.luceneVersion.equals(Lucene.VERSION) : "Version must be upgraded to [" + Lucene.VERSION + "] is still set to [" + CURRENT.luceneVersion + "]";, +, +, +, +, +                return new Version(id, false, Lucene.VERSION);, +++ b/core/src/main/java/org/elasticsearch/action/ActionRequest.java, +public abstract class ActionRequest<Self extends ActionRequest<Self>> extends TransportRequest {, +    protected ActionRequest(ActionRequest<?> request) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportNodesSnapshotsStatus.java, +        public Request(ActionRequest<?> request, String[] nodesIds) {, +        @Override, +++ b/core/src/main/java/org/elasticsearch/action/support/broadcast/BroadcastRequest.java, +public class BroadcastRequest<Self extends BroadcastRequest<Self>> extends ActionRequest<Self> implements IndicesRequest.Replaceable {, +    protected BroadcastRequest(ActionRequest<?> originalRequest) {, +    public final Self indices(String... indices) {, +        return (Self) this;, +    public final Self indicesOptions(IndicesOptions indicesOptions) {, +        return (Self) this;, +++ b/core/src/main/java/org/elasticsearch/Version.java, +import org.elasticsearch.common.lucene.Lucene;, +        assert CURRENT.luceneVersion.equals(Lucene.VERSION) : "Version must be upgraded to [" + Lucene.VERSION + "] is still set to [" + CURRENT.luceneVersion + "]";, +, +, +, +, +                return new Version(id, false, Lucene.VERSION);, +++ b/core/src/main/java/org/elasticsearch/action/ActionRequest.java, +public abstract class ActionRequest<Self extends ActionRequest<Self>> extends TransportRequest {, +    protected ActionRequest(ActionRequest<?> request) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportNodesSnapshotsStatus.java, +        public Request(ActionRequest<?> request, String[] nodesIds) {, +        @Override, +++ b/core/src/main/java/org/elasticsearch/action/support/broadcast/BroadcastRequest.java, +public class BroadcastRequest<Self extends BroadcastRequest<Self>> extends ActionRequest<Self> implements IndicesRequest.Replaceable {, +    protected BroadcastRequest(ActionRequest<?> originalRequest) {, +    public final Self indices(String... indices) {, +        return (Self) this;, +    public final Self indicesOptions(IndicesOptions indicesOptions) {, +        return (Self) this;, +++ b/core/src/main/java/org/elasticsearch/action/support/master/AcknowledgedRequest.java, +public abstract class AcknowledgedRequest<Self extends MasterNodeRequest<Self>> extends MasterNodeRequest<Self> implements AckedRequest {, +    protected AcknowledgedRequest(ActionRequest<?> request) {, +    public final Self timeout(String timeout) {, +        return (Self)this;, +    public final Self timeout(TimeValue timeout) {, +        return (Self) this;, +++ b/core/src/main/java/org/elasticsearch/Version.java, +import org.elasticsearch.common.lucene.Lucene;, +        assert CURRENT.luceneVersion.equals(Lucene.VERSION) : "Version must be upgraded to [" + Lucene.VERSION + "] is still set to [" + CURRENT.luceneVersion + "]";, +, +, +, +, +                return new Version(id, false, Lucene.VERSION);, +++ b/core/src/main/java/org/elasticsearch/action/ActionRequest.java, +public abstract class ActionRequest<Self extends ActionRequest<Self>> extends TransportRequest {, +    protected ActionRequest(ActionRequest<?> request) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportNodesSnapshotsStatus.java, +        public Request(ActionRequest<?> request, String[] nodesIds) {, +        @Override, +++ b/core/src/main/java/org/elasticsearch/action/support/broadcast/BroadcastRequest.java, +public class BroadcastRequest<Self extends BroadcastRequest<Self>> extends ActionRequest<Self> implements IndicesRequest.Replaceable {, +    protected BroadcastRequest(ActionRequest<?> originalRequest) {, +    public final Self indices(String... indices) {]