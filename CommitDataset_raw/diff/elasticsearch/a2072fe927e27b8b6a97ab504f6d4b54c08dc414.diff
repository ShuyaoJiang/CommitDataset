[+++ b/core/src/main/java/org/elasticsearch/monitor/jvm/HotThreads.java, +import org.apache.lucene.util.Constants;, +        if (Constants.FREE_BSD) {, +            sb.append("hot_threads is not supported on FreeBSD");, +            return sb.toString();, +        }, +, +++ b/core/src/main/java/org/elasticsearch/monitor/jvm/HotThreads.java, +import org.apache.lucene.util.Constants;, +        if (Constants.FREE_BSD) {, +            sb.append("hot_threads is not supported on FreeBSD");, +            return sb.toString();, +        }, +, +++ b/core/src/test/java/org/elasticsearch/action/admin/HotThreadsIT.java, +import org.apache.lucene.util.Constants;, +, +        assumeTrue("no support for hot_threads on FreeBSD", Constants.FREE_BSD == false);, +        if (Constants.FREE_BSD) {, +            for (NodeHotThreads node : response.getNodesMap().values()) {, +                String result = node.getHotThreads();, +                assertTrue(result.indexOf("hot_threads is not supported") != -1);, +            }, +        } else {, +}, +++ b/core/src/main/java/org/elasticsearch/monitor/jvm/HotThreads.java, +import org.apache.lucene.util.Constants;, +        if (Constants.FREE_BSD) {, +            sb.append("hot_threads is not supported on FreeBSD");, +            return sb.toString();, +        }, +, +++ b/core/src/test/java/org/elasticsearch/action/admin/HotThreadsIT.java, +import org.apache.lucene.util.Constants;, +, +        assumeTrue("no support for hot_threads on FreeBSD", Constants.FREE_BSD == false);, +        if (Constants.FREE_BSD) {, +            for (NodeHotThreads node : response.getNodesMap().values()) {, +                String result = node.getHotThreads();, +                assertTrue(result.indexOf("hot_threads is not supported") != -1);, +            }, +        } else {, +}, +++ b/core/src/test/java/org/elasticsearch/common/cache/CacheTests.java, +        int numberOfThreads = randomIntBetween(2, 32);, +        int numberOfThreads = randomIntBetween(2, 32);, +        int numberOfThreads = randomIntBetween(2, 32);, +        int numberOfThreads = randomIntBetween(2, 32);, +++ b/core/src/main/java/org/elasticsearch/monitor/jvm/HotThreads.java, +import org.apache.lucene.util.Constants;, +        if (Constants.FREE_BSD) {, +            sb.append("hot_threads is not supported on FreeBSD");, +            return sb.toString();, +        }, +, +++ b/core/src/test/java/org/elasticsearch/action/admin/HotThreadsIT.java, +import org.apache.lucene.util.Constants;, +, +        assumeTrue("no support for hot_threads on FreeBSD", Constants.FREE_BSD == false);, +        if (Constants.FREE_BSD) {, +            for (NodeHotThreads node : response.getNodesMap().values()) {, +                String result = node.getHotThreads();, +                assertTrue(result.indexOf("hot_threads is not supported") != -1);, +            }, +        } else {, +}, +++ b/core/src/test/java/org/elasticsearch/common/cache/CacheTests.java, +        int numberOfThreads = randomIntBetween(2, 32);, +        int numberOfThreads = randomIntBetween(2, 32);, +        int numberOfThreads = randomIntBetween(2, 32);, +        int numberOfThreads = randomIntBetween(2, 32);, +++ b/plugins/discovery-multicast/src/test/java/org/elasticsearch/plugin/discovery/multicast/MulticastZenPingTests.java, +import org.apache.lucene.util.Constants;, +, +        assumeTrue("https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=193246", Constants.FREE_BSD == false);, +    // This test is here because when running on FreeBSD, if no tests are, +    // executed for the 'multicast' project it will assume everything, +    // failed, so we need to have at least one test that runs., +    public void testAlwaysRun() throws Exception {, +        assertTrue(true);, +    }, +, +        assumeTrue("https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=193246", Constants.FREE_BSD == false);, +++ b/core/src/main/java/org/elasticsearch/monitor/jvm/HotThreads.java, +import org.apache.lucene.util.Constants;, +        if (Constants.FREE_BSD) {, +            sb.append("hot_threads is not supported on FreeBSD");, +            return sb.toString();, +        }, +, +++ b/core/src/test/java/org/elasticsearch/action/admin/HotThreadsIT.java, +import org.apache.lucene.util.Constants;, +, +        assumeTrue("no support for hot_threads on FreeBSD", Constants.FREE_BSD == false);, +        if (Constants.FREE_BSD) {, +            for (NodeHotThreads node : response.getNodesMap().values()) {, +                String result = node.getHotThreads();, +                assertTrue(result.indexOf("hot_threads is not supported") != -1);, +            }, +        } else {]