[+++ b/.gitignore, +++ b/.gitignore, +++ b/README.textile, +h3. Upgrading to Elasticsearch 1.x?, +In order to ensure a smooth upgrade process from earlier versions of Elasticsearch (< 1.0.0), it is recommended to perform a full cluster restart. Please see the "setup reference":https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-upgrade.html for more details on the upgrade process., +++ b/.gitignore, +++ b/README.textile, +h3. Upgrading to Elasticsearch 1.x?, +In order to ensure a smooth upgrade process from earlier versions of Elasticsearch (< 1.0.0), it is recommended to perform a full cluster restart. Please see the "setup reference":https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-upgrade.html for more details on the upgrade process., +++ b/TESTING.asciidoc, +gradle :qa:vagrant:validate, +. Download the VMs. Since Maven or ant or something eats the progress reports, +from Vagrant when you run it inside mvn its probably best if you run this one, +time to setup all the VMs one at a time. Run this to download and setup the VMs, +we use for testing by default:, +--------------------------------------------------------, +vagrant up --provision trusty --provider virtualbox && vagrant halt trusty, +vagrant up --provision centos-7 --provider virtualbox && vagrant halt centos-7, +--------------------------------------------------------, +or run this to download and setup all the VMs:, +-------------------------------------------------------------------------------, +vagrant halt, +for box in $(vagrant status | grep 'poweroff\|not created' | cut -f1 -d' '); do, +  vagrant up --provision $box --provider virtualbox, +  vagrant halt $box, +done, +-------------------------------------------------------------------------------, +, +. Smoke test the maven/ant dance that we use to get vagrant involved in, +integration testing is working:, +, +---------------------------------------------, +mvn -Dtests.vagrant -Psmoke-vms -pl qa/vagrant verify, +---------------------------------------------, +, +or this to validate all the VMs:, +, +-------------------------------------------------, +mvn -Dtests.vagrant=all -Psmoke-vms -pl qa/vagrant verify, +-------------------------------------------------, +, +That will start up the VMs and then immediate quit., +, +. Finally run the tests. The fastest way to get this started is to run:, +, +-----------------------------------, +mvn clean install -DskipTests, +mvn -Dtests.vagrant -pl qa/vagrant verify, +-----------------------------------, +, +You could just run:, +, +--------------------, +mvn -Dtests.vagrant verify, +--------------------, +, +but that will run all the tests. Which is probably a good thing, but not always, +what you want., +, +Whichever snippet you run mvn will build the tar, zip and deb packages. If you, +have rpmbuild installed it'll build the rpm package as well. Then mvn will, +spin up trusty and verify the tar, zip, and deb package. If you have rpmbuild, +installed it'll spin up centos-7 and verify the tar, zip and rpm packages. We, +chose those two distributions as the default because they cover deb and rpm, +packaging and SyvVinit and systemd., +, +You can control the boxes that are used for testing like so. Run just, +fedora-22 with:, +, +--------------------------------------------, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest=fedora-22, +--------------------------------------------, +, +or run jessie and trusty:, +, +------------------------------------------------------------------, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='jessie, trusty', +------------------------------------------------------------------, +, +or run all the boxes:, +, +---------------------------------------, +mvn -Dtests.vagrant=all -pl qa/vagrant verify, +---------------------------------------, +, +If you want to run a specific test on several boxes you can do:, +, +---------------------------------------, +mvn -Dtests.vagrant=all -pl qa/vagrant verify -DtestScripts=*tar*.bats, +---------------------------------------, +, +Its important to know that if you ctrl-c any of these `mvn` runs that you'll, +probably leave a VM up. You can terminate it by running:, +, +------------, +vagrant halt, +------------, +, +This is just regular vagrant so you can run normal multi box vagrant commands, +to test things manually. Just run:]