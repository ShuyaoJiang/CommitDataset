[+++ b/src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java, +import org.elasticsearch.action.ActionRequestBuilder;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertThrows;, +        assertThrows(client().prepareGet("test", "type1", "1"),, +                ClusterBlockException.class, RestStatus.SERVICE_UNAVAILABLE, +        );, +        assertThrows(client().prepareGet("no_index", "type1", "1"),, +                ClusterBlockException.class, RestStatus.SERVICE_UNAVAILABLE, +        );, +        assertThrows(client().prepareMultiGet().add("test", "type1", "1"),, +                ClusterBlockException.class, RestStatus.SERVICE_UNAVAILABLE, +        );, +        assertThrows(client().prepareMultiGet().add("no_index", "type1", "1"),, +                ClusterBlockException.class, RestStatus.SERVICE_UNAVAILABLE, +        );, +        assertThrows(client().preparePercolate(), +                        .setSource(percolateSource),, +                ClusterBlockException.class, RestStatus.SERVICE_UNAVAILABLE, +        );, +        percolateSource = new PercolateSourceBuilder();, +        assertThrows(client().preparePercolate(), +                        .setSource(percolateSource),, +                ClusterBlockException.class, RestStatus.SERVICE_UNAVAILABLE, +        );, +        assertThrows(client().admin().indices().prepareAnalyze("test", "this is a test"),, +                ClusterBlockException.class, RestStatus.SERVICE_UNAVAILABLE, +        );, +        assertThrows(client().admin().indices().prepareAnalyze("no_index", "this is a test"),, +                ClusterBlockException.class, RestStatus.SERVICE_UNAVAILABLE, +        );, +        assertThrows(client().prepareCount("test"),, +                ClusterBlockException.class, RestStatus.SERVICE_UNAVAILABLE, +        );, +        assertThrows(client().prepareCount("no_index"),, +                ClusterBlockException.class, RestStatus.SERVICE_UNAVAILABLE, +        );, +        checkWriteAction(autoCreateIndex, timeout,, +                client().prepareUpdate("test", "type1", "1").setScript("test script", ScriptService.ScriptType.INLINE).setTimeout(timeout));, +        checkWriteAction(autoCreateIndex, timeout,, +                client().prepareUpdate("no_index", "type1", "1").setScript("test script", ScriptService.ScriptType.INLINE).setTimeout(timeout));, +, +        checkWriteAction(autoCreateIndex, timeout,, +                client().prepareIndex("test", "type1", "1").setSource(XContentFactory.jsonBuilder().startObject().endObject()).setTimeout(timeout));, +, +        checkWriteAction(autoCreateIndex, timeout,, +                client().prepareIndex("no_index", "type1", "1").setSource(XContentFactory.jsonBuilder().startObject().endObject()).setTimeout(timeout));, +, +        checkBulkAction(autoCreateIndex, timeout, bulkRequestBuilder);, +        bulkRequestBuilder = client().prepareBulk();, +        checkBulkAction(autoCreateIndex, timeout, bulkRequestBuilder);, +, +        internalCluster().startNode(settings);, +        client().admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForNodes("2").execute().actionGet();, +    }, +, +    void checkWriteAction(boolean autoCreateIndex, TimeValue timeout, ActionRequestBuilder<?, ?, ?, ?> builder) {, +        // we clean the metadata when loosing a master, therefore all operations on indices will auto create it, if allowed, +        long now = System.currentTimeMillis();, +        try {, +            builder.get();, +            fail("expected ClusterBlockException or MasterNotDiscoveredException");, +        } catch (ClusterBlockException | MasterNotDiscoveredException e) {, +            if (e instanceof MasterNotDiscoveredException) {, +                assertTrue(autoCreateIndex);, +            } else {, +                assertFalse(autoCreateIndex);, +            }, +            // verify we waited before giving up..., +            assertThat(e.status(), equalTo(RestStatus.SERVICE_UNAVAILABLE));, +            assertThat(System.currentTimeMillis() - now, greaterThan(timeout.millis() - 50));, +        }, +    }, +, +    void checkBulkAction(boolean autoCreateIndex, TimeValue timeout, BulkRequestBuilder builder) {, +        // bulk operation do not throw MasterNotDiscoveredException exceptions. The only test that auto create kicked in and failed is, +        // via the timeout, as they do not wait on block :(, +, +        long now = System.currentTimeMillis();, +        try {, +            builder.get();, +++ b/src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java, +import org.elasticsearch.action.ActionRequestBuilder;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertThrows;, +        assertThrows(client().prepareGet("test", "type1", "1"),, +                ClusterBlockException.class, RestStatus.SERVICE_UNAVAILABLE, +        );, +        assertThrows(client().prepareGet("no_index", "type1", "1"),, +                ClusterBlockException.class, RestStatus.SERVICE_UNAVAILABLE, +        );, +        assertThrows(client().prepareMultiGet().add("test", "type1", "1"),, +                ClusterBlockException.class, RestStatus.SERVICE_UNAVAILABLE, +        );, +        assertThrows(client().prepareMultiGet().add("no_index", "type1", "1"),, +                ClusterBlockException.class, RestStatus.SERVICE_UNAVAILABLE, +        );, +        assertThrows(client().preparePercolate(), +                        .setSource(percolateSource),, +                ClusterBlockException.class, RestStatus.SERVICE_UNAVAILABLE, +        );, +        percolateSource = new PercolateSourceBuilder();]