[+++ b/src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java, +import java.nio.file.Path;, +                            final Index idx = new Index(current.index());, +                            MetaDataStateFormat.deleteMetaState(nodeEnv.indexPaths(idx));, +                            nodeEnv.deleteIndexDirectorySafe(idx);, +                            if (indexMetaData != null) {, +                                        nodeEnv.deleteIndexDirectorySafe(index);, +                                    danglingIndices.put(indexName, new DanglingIndex(indexName, threadPool.schedule(danglingTimeout, ThreadPool.Names.SAME, new RemoveDanglingIndex(index))));, +        private final Index index;, +        RemoveDanglingIndex(Index index) {, +                DanglingIndex remove = danglingIndices.remove(index.name());, +, +                    MetaDataStateFormat.deleteMetaState(nodeEnv.indexPaths(index));, +                    nodeEnv.deleteIndexDirectorySafe(index);, +++ b/src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java, +import java.nio.file.Path;, +                            final Index idx = new Index(current.index());, +                            MetaDataStateFormat.deleteMetaState(nodeEnv.indexPaths(idx));, +                            nodeEnv.deleteIndexDirectorySafe(idx);, +                            if (indexMetaData != null) {, +                                        nodeEnv.deleteIndexDirectorySafe(index);, +                                    danglingIndices.put(indexName, new DanglingIndex(indexName, threadPool.schedule(danglingTimeout, ThreadPool.Names.SAME, new RemoveDanglingIndex(index))));, +        private final Index index;, +        RemoveDanglingIndex(Index index) {, +                DanglingIndex remove = danglingIndices.remove(index.name());, +, +                    MetaDataStateFormat.deleteMetaState(nodeEnv.indexPaths(index));, +                    nodeEnv.deleteIndexDirectorySafe(index);, +++ b/src/main/java/org/elasticsearch/gateway/local/state/meta/MetaDataStateFormat.java, +    /**, +     * Deletes all meta state directories recursively for the given data locations, +     * @param dataLocations the data location to delete, +     */, +    public static void deleteMetaState(Path... dataLocations) throws IOException {, +        Path[] stateDirectories = new Path[dataLocations.length];, +        for (int i = 0; i < dataLocations.length; i++) {, +            stateDirectories[i] = dataLocations[i].resolve(STATE_DIR_NAME);, +        }, +        IOUtils.rm(stateDirectories);, +    }, +]