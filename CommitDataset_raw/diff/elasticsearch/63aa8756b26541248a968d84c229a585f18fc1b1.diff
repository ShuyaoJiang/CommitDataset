[+++ b/x-pack/docs/en/security/auditing/event-types.asciidoc, +`x_forwarded_for` ::    The verbatim value of the `X-Forwarded-For` HTTP request, +                        header (if present) of the request associated with the, +                        audit event. This header is commonly added by proxies, +                        when they forward requests and the value is the address, +                        of the proxied client. When a request crosses multiple, +                        proxies the header is a comma delimited list with the, +                        last value being the address of the second to last, +                        proxy server (the address of the last proxy server is, +                        designated by the `origin.address` field)., +, +++ b/x-pack/docs/en/security/auditing/event-types.asciidoc, +`x_forwarded_for` ::    The verbatim value of the `X-Forwarded-For` HTTP request, +                        header (if present) of the request associated with the, +                        audit event. This header is commonly added by proxies, +                        when they forward requests and the value is the address, +                        of the proxied client. When a request crosses multiple, +                        proxies the header is a comma delimited list with the, +                        last value being the address of the second to last, +                        proxy server (the address of the last proxy server is, +                        designated by the `origin.address` field)., +, +++ b/x-pack/plugin/core/src/main/config/log4j2.properties, +                %varsNotEmpty{, "x_forwarded_for":"%enc{%map{x_forwarded_for}}{JSON}"}\, +# "x_forwarded_for" the addresses from the "X-Forwarded-For" request header, as a verbatim string value (not an array), +++ b/x-pack/docs/en/security/auditing/event-types.asciidoc, +`x_forwarded_for` ::    The verbatim value of the `X-Forwarded-For` HTTP request, +                        header (if present) of the request associated with the, +                        audit event. This header is commonly added by proxies, +                        when they forward requests and the value is the address, +                        of the proxied client. When a request crosses multiple, +                        proxies the header is a comma delimited list with the, +                        last value being the address of the second to last, +                        proxy server (the address of the last proxy server is, +                        designated by the `origin.address` field)., +, +++ b/x-pack/plugin/core/src/main/config/log4j2.properties, +                %varsNotEmpty{, "x_forwarded_for":"%enc{%map{x_forwarded_for}}{JSON}"}\, +# "x_forwarded_for" the addresses from the "X-Forwarded-For" request header, as a verbatim string value (not an array), +++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/Security.java, +        if (XPackSettings.AUDIT_ENABLED.get(settings)) {, +            headers.add(AuditTrail.X_FORWARDED_FOR_HEADER);, +        }, +++ b/x-pack/docs/en/security/auditing/event-types.asciidoc, +`x_forwarded_for` ::    The verbatim value of the `X-Forwarded-For` HTTP request, +                        header (if present) of the request associated with the, +                        audit event. This header is commonly added by proxies, +                        when they forward requests and the value is the address, +                        of the proxied client. When a request crosses multiple, +                        proxies the header is a comma delimited list with the, +                        last value being the address of the second to last, +                        proxy server (the address of the last proxy server is, +                        designated by the `origin.address` field)., +, +++ b/x-pack/plugin/core/src/main/config/log4j2.properties, +                %varsNotEmpty{, "x_forwarded_for":"%enc{%map{x_forwarded_for}}{JSON}"}\, +# "x_forwarded_for" the addresses from the "X-Forwarded-For" request header, as a verbatim string value (not an array), +++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/Security.java, +        if (XPackSettings.AUDIT_ENABLED.get(settings)) {, +            headers.add(AuditTrail.X_FORWARDED_FOR_HEADER);, +        }, +++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/AuditTrail.java, +    String X_FORWARDED_FOR_HEADER = "X-Forwarded-For";, +, +++ b/x-pack/docs/en/security/auditing/event-types.asciidoc, +`x_forwarded_for` ::    The verbatim value of the `X-Forwarded-For` HTTP request, +                        header (if present) of the request associated with the, +                        audit event. This header is commonly added by proxies, +                        when they forward requests and the value is the address, +                        of the proxied client. When a request crosses multiple, +                        proxies the header is a comma delimited list with the, +                        last value being the address of the second to last, +                        proxy server (the address of the last proxy server is, +                        designated by the `origin.address` field)., +, +++ b/x-pack/plugin/core/src/main/config/log4j2.properties, +                %varsNotEmpty{, "x_forwarded_for":"%enc{%map{x_forwarded_for}}{JSON}"}\, +# "x_forwarded_for" the addresses from the "X-Forwarded-For" request header, as a verbatim string value (not an array), +++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/Security.java, +        if (XPackSettings.AUDIT_ENABLED.get(settings)) {, +            headers.add(AuditTrail.X_FORWARDED_FOR_HEADER);, +        }, +++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/AuditTrail.java, +    String X_FORWARDED_FOR_HEADER = "X-Forwarded-For";, +, +++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java, +    public static final String X_FORWARDED_FOR_FIELD_NAME = "x_forwarded_for";, +                    .withXForwardedFor(threadContext), +                        .withXForwardedFor(threadContext), +                        .withXForwardedFor(threadContext), +                    .withXForwardedFor(threadContext), +                        .withXForwardedFor(threadContext), +                    .withXForwardedFor(threadContext), +                        .withXForwardedFor(threadContext), +                    .withXForwardedFor(threadContext), +                        .withXForwardedFor(threadContext), +                    .withXForwardedFor(threadContext), +                        .withXForwardedFor(threadContext), +                        .withXForwardedFor(threadContext), +                    .withXForwardedFor(threadContext)]