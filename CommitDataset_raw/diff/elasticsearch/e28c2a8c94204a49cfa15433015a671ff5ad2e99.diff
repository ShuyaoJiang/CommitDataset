[+++ b/elasticsearch/qa/smoke-test-watcher-with-mustache/src/test/java/org/elasticsearch/smoketest/WatcherTemplateIT.java, +import org.elasticsearch.script.ScriptContext;, +import org.elasticsearch.xpack.XPackPlugin;, +        ScriptContextRegistry registry = new ScriptContextRegistry(Collections.singletonList(new ScriptContext.Plugin("xpack", "watch")));, +++ b/elasticsearch/qa/smoke-test-watcher-with-mustache/src/test/java/org/elasticsearch/smoketest/WatcherTemplateIT.java, +import org.elasticsearch.script.ScriptContext;, +import org.elasticsearch.xpack.XPackPlugin;, +        ScriptContextRegistry registry = new ScriptContextRegistry(Collections.singletonList(new ScriptContext.Plugin("xpack", "watch")));, +++ b/elasticsearch/x-pack/build.gradle, +++ b/elasticsearch/qa/smoke-test-watcher-with-mustache/src/test/java/org/elasticsearch/smoketest/WatcherTemplateIT.java, +import org.elasticsearch.script.ScriptContext;, +import org.elasticsearch.xpack.XPackPlugin;, +        ScriptContextRegistry registry = new ScriptContextRegistry(Collections.singletonList(new ScriptContext.Plugin("xpack", "watch")));, +++ b/elasticsearch/x-pack/build.gradle, +++ b/elasticsearch/x-pack/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ScriptSettings;, +        return watcher.getCustomScriptContexts();, +++ b/elasticsearch/qa/smoke-test-watcher-with-mustache/src/test/java/org/elasticsearch/smoketest/WatcherTemplateIT.java, +import org.elasticsearch.script.ScriptContext;, +import org.elasticsearch.xpack.XPackPlugin;, +        ScriptContextRegistry registry = new ScriptContextRegistry(Collections.singletonList(new ScriptContext.Plugin("xpack", "watch")));, +++ b/elasticsearch/x-pack/build.gradle, +++ b/elasticsearch/x-pack/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ScriptSettings;, +        return watcher.getCustomScriptContexts();, +++ b/elasticsearch/x-pack/src/main/java/org/elasticsearch/xpack/common/text/TextTemplateEngine.java, +import org.elasticsearch.xpack.watcher.Watcher;, +    // TODO: move over to use o.e.script.Script instead, +        CompiledScript compiledScript = service.compile(convert(template, model), Watcher.SCRIPT_CONTEXT,, +                compileParams);, +++ b/elasticsearch/qa/smoke-test-watcher-with-mustache/src/test/java/org/elasticsearch/smoketest/WatcherTemplateIT.java, +import org.elasticsearch.script.ScriptContext;, +import org.elasticsearch.xpack.XPackPlugin;, +        ScriptContextRegistry registry = new ScriptContextRegistry(Collections.singletonList(new ScriptContext.Plugin("xpack", "watch")));, +++ b/elasticsearch/x-pack/build.gradle, +++ b/elasticsearch/x-pack/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ScriptSettings;, +        return watcher.getCustomScriptContexts();, +++ b/elasticsearch/x-pack/src/main/java/org/elasticsearch/xpack/common/text/TextTemplateEngine.java, +import org.elasticsearch.xpack.watcher.Watcher;, +    // TODO: move over to use o.e.script.Script instead, +        CompiledScript compiledScript = service.compile(convert(template, model), Watcher.SCRIPT_CONTEXT,, +                compileParams);, +++ b/elasticsearch/x-pack/src/test/java/org/elasticsearch/xpack/common/text/TextTemplateTests.java, +import org.elasticsearch.xpack.watcher.Watcher;, +        when(service.compile(new Script(templateText, type, lang, merged), Watcher.SCRIPT_CONTEXT,, +        when(service.compile(new Script(templateText, scriptType, lang, model), Watcher.SCRIPT_CONTEXT,, +        when(service.compile(new Script(templateText, ScriptType.INLINE, lang, model), Watcher.SCRIPT_CONTEXT,, +++ b/elasticsearch/qa/smoke-test-watcher-with-mustache/src/test/java/org/elasticsearch/smoketest/WatcherTemplateIT.java, +import org.elasticsearch.script.ScriptContext;, +import org.elasticsearch.xpack.XPackPlugin;, +        ScriptContextRegistry registry = new ScriptContextRegistry(Collections.singletonList(new ScriptContext.Plugin("xpack", "watch")));, +++ b/elasticsearch/x-pack/build.gradle, +++ b/elasticsearch/x-pack/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ScriptSettings;, +        return watcher.getCustomScriptContexts();, +++ b/elasticsearch/x-pack/src/main/java/org/elasticsearch/xpack/common/text/TextTemplateEngine.java, +import org.elasticsearch.xpack.watcher.Watcher;, +    // TODO: move over to use o.e.script.Script instead, +        CompiledScript compiledScript = service.compile(convert(template, model), Watcher.SCRIPT_CONTEXT,, +                compileParams);, +++ b/elasticsearch/x-pack/src/test/java/org/elasticsearch/xpack/common/text/TextTemplateTests.java, +import org.elasticsearch.xpack.watcher.Watcher;, +        when(service.compile(new Script(templateText, type, lang, merged), Watcher.SCRIPT_CONTEXT,, +        when(service.compile(new Script(templateText, scriptType, lang, model), Watcher.SCRIPT_CONTEXT,, +        when(service.compile(new Script(templateText, ScriptType.INLINE, lang, model), Watcher.SCRIPT_CONTEXT,, +++ b/elasticsearch/x-pack/watcher/src/main/java/org/elasticsearch/xpack/watcher/Watcher.java, +import org.elasticsearch.plugins.ScriptPlugin;, +import org.elasticsearch.script.ScriptContext;, +public class Watcher implements ActionPlugin, ScriptPlugin {, +    private static final ScriptContext.Plugin SCRIPT_PLUGIN = new ScriptContext.Plugin("xpack", "watch");, +    public static final ScriptContext SCRIPT_CONTEXT = SCRIPT_PLUGIN::getKey;, +, +    @Override, +    public ScriptContext.Plugin getCustomScriptContexts() {, +        return SCRIPT_PLUGIN;, +    }, +, +++ b/elasticsearch/qa/smoke-test-watcher-with-mustache/src/test/java/org/elasticsearch/smoketest/WatcherTemplateIT.java, +import org.elasticsearch.script.ScriptContext;, +import org.elasticsearch.xpack.XPackPlugin;, +        ScriptContextRegistry registry = new ScriptContextRegistry(Collections.singletonList(new ScriptContext.Plugin("xpack", "watch")));, +++ b/elasticsearch/x-pack/build.gradle, +++ b/elasticsearch/x-pack/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ScriptSettings;, +        return watcher.getCustomScriptContexts();, +++ b/elasticsearch/x-pack/src/main/java/org/elasticsearch/xpack/common/text/TextTemplateEngine.java, +import org.elasticsearch.xpack.watcher.Watcher;, +    // TODO: move over to use o.e.script.Script instead, +        CompiledScript compiledScript = service.compile(convert(template, model), Watcher.SCRIPT_CONTEXT,, +                compileParams);, +++ b/elasticsearch/x-pack/src/test/java/org/elasticsearch/xpack/common/text/TextTemplateTests.java, +import org.elasticsearch.xpack.watcher.Watcher;, +        when(service.compile(new Script(templateText, type, lang, merged), Watcher.SCRIPT_CONTEXT,, +        when(service.compile(new Script(templateText, scriptType, lang, model), Watcher.SCRIPT_CONTEXT,, +        when(service.compile(new Script(templateText, ScriptType.INLINE, lang, model), Watcher.SCRIPT_CONTEXT,, +++ b/elasticsearch/x-pack/watcher/src/main/java/org/elasticsearch/xpack/watcher/Watcher.java, +import org.elasticsearch.plugins.ScriptPlugin;, +import org.elasticsearch.script.ScriptContext;, +public class Watcher implements ActionPlugin, ScriptPlugin {]