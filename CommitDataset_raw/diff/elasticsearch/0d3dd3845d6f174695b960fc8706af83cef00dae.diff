[+++ b/src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java, +        ShardRouting currentRouting = this.shardRouting;, +        if (currentRouting != null) {, +            if (!shardRouting.primary() && currentRouting.primary()) {, +            // if its the same routing, return, +            if (currentRouting.equals(shardRouting)) {, +                return this;, +            }, +        indicesLifecycle.shardRoutingChanged(this, currentRouting, shardRouting);, +++ b/src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java, +        ShardRouting currentRouting = this.shardRouting;, +        if (currentRouting != null) {, +            if (!shardRouting.primary() && currentRouting.primary()) {, +            // if its the same routing, return, +            if (currentRouting.equals(shardRouting)) {, +                return this;, +            }, +        indicesLifecycle.shardRoutingChanged(this, currentRouting, shardRouting);, +++ b/src/main/java/org/elasticsearch/indices/IndicesLifecycle.java, +import org.elasticsearch.cluster.routing.ShardRouting;, +         * Called when the shard routing has changed state., +         *, +         * @param indexShard The index shard, +         * @param oldRouting The old routing state (can be null), +         * @param newRouting The new routing state, +         */, +        public void shardRoutingChanged(IndexShard indexShard, @Nullable ShardRouting oldRouting, ShardRouting newRouting) {, +, +        }, +, +        /**, +++ b/src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java, +        ShardRouting currentRouting = this.shardRouting;, +        if (currentRouting != null) {, +            if (!shardRouting.primary() && currentRouting.primary()) {, +            // if its the same routing, return, +            if (currentRouting.equals(shardRouting)) {, +                return this;, +            }, +        indicesLifecycle.shardRoutingChanged(this, currentRouting, shardRouting);, +++ b/src/main/java/org/elasticsearch/indices/IndicesLifecycle.java, +import org.elasticsearch.cluster.routing.ShardRouting;, +         * Called when the shard routing has changed state., +         *, +         * @param indexShard The index shard, +         * @param oldRouting The old routing state (can be null), +         * @param newRouting The new routing state, +         */, +        public void shardRoutingChanged(IndexShard indexShard, @Nullable ShardRouting oldRouting, ShardRouting newRouting) {, +, +        }, +, +        /**, +++ b/src/main/java/org/elasticsearch/indices/InternalIndicesLifecycle.java, +import org.elasticsearch.cluster.routing.ShardRouting;, +    public void shardRoutingChanged(IndexShard indexShard, @Nullable ShardRouting oldRouting, ShardRouting newRouting) {, +        for (Listener listener : listeners) {, +            listener.shardRoutingChanged(indexShard, oldRouting, newRouting);, +        }, +    }, +]