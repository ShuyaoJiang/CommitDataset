[+++ b/docs/reference/search/aggregations/bucket/terms-aggregation.asciidoc, +coming[1.4.0], +, +Multiple criteria can be used to order the buckets by providing an array of order criteria such as the following:, +, +[source,js], +--------------------------------------------------, +{, +    "aggs" : {, +        "countries" : {, +            "terms" : {, +                "field" : "address.country",, +                "order" : [ { "females>height_stats.avg" : "desc" }, { "_count" : "desc" } ], +            },, +            "aggs" : {, +                "females" : {, +                    "filter" : { "term" : { "gender" : { "female" }}},, +                    "aggs" : {, +                        "height_stats" : { "stats" : { "field" : "height" }}, +                    }, +                }, +            }, +        }, +    }, +}, +--------------------------------------------------, +, +The above will sort the countries buckets based on the average height among the female population and then by , +their `doc_count` in descending order., +, +NOTE: In the event that two buckets share the same values for all order criteria the bucket's term value is used as a , +tie-breaker in ascending alphabetical order to prevent non-deterministic ordering of buckets., +, +++ b/docs/reference/search/aggregations/bucket/terms-aggregation.asciidoc, +coming[1.4.0], +, +Multiple criteria can be used to order the buckets by providing an array of order criteria such as the following:, +, +[source,js], +--------------------------------------------------, +{, +    "aggs" : {, +        "countries" : {, +            "terms" : {, +                "field" : "address.country",, +                "order" : [ { "females>height_stats.avg" : "desc" }, { "_count" : "desc" } ], +            },, +            "aggs" : {, +                "females" : {, +                    "filter" : { "term" : { "gender" : { "female" }}},, +                    "aggs" : {, +                        "height_stats" : { "stats" : { "field" : "height" }}, +                    }, +                }, +            }, +        }, +    }, +}, +--------------------------------------------------, +, +The above will sort the countries buckets based on the average height among the female population and then by , +their `doc_count` in descending order., +, +NOTE: In the event that two buckets share the same values for all order criteria the bucket's term value is used as a , +tie-breaker in ascending alphabetical order to prevent non-deterministic ordering of buckets., +, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/AbstractStringTermsAggregator.java, +            Terms.Order order, BucketCountThresholds bucketCountThresholds, SubAggCollectionMode subAggCollectMode, boolean showTermDocCountError) {, +++ b/docs/reference/search/aggregations/bucket/terms-aggregation.asciidoc, +coming[1.4.0], +, +Multiple criteria can be used to order the buckets by providing an array of order criteria such as the following:, +, +[source,js], +--------------------------------------------------, +{, +    "aggs" : {, +        "countries" : {, +            "terms" : {, +                "field" : "address.country",, +                "order" : [ { "females>height_stats.avg" : "desc" }, { "_count" : "desc" } ], +            },, +            "aggs" : {, +                "females" : {, +                    "filter" : { "term" : { "gender" : { "female" }}},, +                    "aggs" : {, +                        "height_stats" : { "stats" : { "field" : "height" }}, +                    }, +                }, +            }, +        }, +    }, +}, +--------------------------------------------------, +, +The above will sort the countries buckets based on the average height among the female population and then by , +their `doc_count` in descending order., +, +NOTE: In the event that two buckets share the same values for all order criteria the bucket's term value is used as a , +tie-breaker in ascending alphabetical order to prevent non-deterministic ordering of buckets.]