[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearningTemplateRegistry.java, +                .put(IndexSettings.DEFAULT_FIELD_SETTING.getKey(), ElasticsearchMappings.ALL_FIELD_VALUES), +                // TODO: fix the template to use a single type, +                .put("index.mapping.single_type", false);, +                .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), ASYNC), +                // TODO: do not create multiple types, +                .put("index.mapping.single_type", false);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearningTemplateRegistry.java, +                .put(IndexSettings.DEFAULT_FIELD_SETTING.getKey(), ElasticsearchMappings.ALL_FIELD_VALUES), +                // TODO: fix the template to use a single type, +                .put("index.mapping.single_type", false);, +                .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), ASYNC), +                // TODO: do not create multiple types, +                .put("index.mapping.single_type", false);, +++ b/plugin/src/main/resources/monitoring-alerts.json, +      "codec": "best_compression",, +      "mapping.single_type": false, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearningTemplateRegistry.java, +                .put(IndexSettings.DEFAULT_FIELD_SETTING.getKey(), ElasticsearchMappings.ALL_FIELD_VALUES), +                // TODO: fix the template to use a single type, +                .put("index.mapping.single_type", false);, +                .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), ASYNC), +                // TODO: do not create multiple types, +                .put("index.mapping.single_type", false);, +++ b/plugin/src/main/resources/monitoring-alerts.json, +      "codec": "best_compression",, +      "mapping.single_type": false, +++ b/plugin/src/main/resources/monitoring-beats.json, +    "index.codec": "best_compression",, +    "index.mapping.single_type": false, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearningTemplateRegistry.java, +                .put(IndexSettings.DEFAULT_FIELD_SETTING.getKey(), ElasticsearchMappings.ALL_FIELD_VALUES), +                // TODO: fix the template to use a single type, +                .put("index.mapping.single_type", false);, +                .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), ASYNC), +                // TODO: do not create multiple types, +                .put("index.mapping.single_type", false);, +++ b/plugin/src/main/resources/monitoring-alerts.json, +      "codec": "best_compression",, +      "mapping.single_type": false, +++ b/plugin/src/main/resources/monitoring-beats.json, +    "index.codec": "best_compression",, +    "index.mapping.single_type": false, +++ b/plugin/src/main/resources/monitoring-data.json, +    "index.codec": "best_compression",, +    "index.mapping.single_type": false, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearningTemplateRegistry.java, +                .put(IndexSettings.DEFAULT_FIELD_SETTING.getKey(), ElasticsearchMappings.ALL_FIELD_VALUES), +                // TODO: fix the template to use a single type, +                .put("index.mapping.single_type", false);, +                .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), ASYNC), +                // TODO: do not create multiple types, +                .put("index.mapping.single_type", false);, +++ b/plugin/src/main/resources/monitoring-alerts.json, +      "codec": "best_compression",, +      "mapping.single_type": false, +++ b/plugin/src/main/resources/monitoring-beats.json, +    "index.codec": "best_compression",, +    "index.mapping.single_type": false, +++ b/plugin/src/main/resources/monitoring-data.json, +    "index.codec": "best_compression",, +    "index.mapping.single_type": false, +++ b/plugin/src/main/resources/monitoring-es.json, +    "index.mapper.dynamic": false,, +    "index.mapping.single_type": false, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearningTemplateRegistry.java, +                .put(IndexSettings.DEFAULT_FIELD_SETTING.getKey(), ElasticsearchMappings.ALL_FIELD_VALUES), +                // TODO: fix the template to use a single type, +                .put("index.mapping.single_type", false);, +                .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), ASYNC), +                // TODO: do not create multiple types, +                .put("index.mapping.single_type", false);, +++ b/plugin/src/main/resources/monitoring-alerts.json, +      "codec": "best_compression",, +      "mapping.single_type": false, +++ b/plugin/src/main/resources/monitoring-beats.json, +    "index.codec": "best_compression",, +    "index.mapping.single_type": false, +++ b/plugin/src/main/resources/monitoring-data.json, +    "index.codec": "best_compression",, +    "index.mapping.single_type": false, +++ b/plugin/src/main/resources/monitoring-es.json, +    "index.mapper.dynamic": false,, +    "index.mapping.single_type": false, +++ b/plugin/src/main/resources/monitoring-kibana.json, +    "index.codec": "best_compression",, +    "index.mapping.single_type": false, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearningTemplateRegistry.java, +                .put(IndexSettings.DEFAULT_FIELD_SETTING.getKey(), ElasticsearchMappings.ALL_FIELD_VALUES), +                // TODO: fix the template to use a single type, +                .put("index.mapping.single_type", false);, +                .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), ASYNC), +                // TODO: do not create multiple types, +                .put("index.mapping.single_type", false);, +++ b/plugin/src/main/resources/monitoring-alerts.json, +      "codec": "best_compression",, +      "mapping.single_type": false, +++ b/plugin/src/main/resources/monitoring-beats.json, +    "index.codec": "best_compression",, +    "index.mapping.single_type": false]