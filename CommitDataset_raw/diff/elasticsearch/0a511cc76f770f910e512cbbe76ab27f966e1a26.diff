[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                throw new GradleException(, +                        "JAVA_HOME must be set to build Elasticsearch. " +, +                                "Note that if the variable was just set you might have to run `./gradlew --stop` for " +, +                                "it to be picked up. See https://github.com/elastic/elasticsearch/issues/31399 details.", +                ), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                throw new GradleException(, +                        "JAVA_HOME must be set to build Elasticsearch. " +, +                                "Note that if the variable was just set you might have to run `./gradlew --stop` for " +, +                                "it to be picked up. See https://github.com/elastic/elasticsearch/issues/31399 details.", +                ), +++ b/buildSrc/version.properties, +lucene            = 7.4.0, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                throw new GradleException(, +                        "JAVA_HOME must be set to build Elasticsearch. " +, +                                "Note that if the variable was just set you might have to run `./gradlew --stop` for " +, +                                "it to be picked up. See https://github.com/elastic/elasticsearch/issues/31399 details.", +                ), +++ b/buildSrc/version.properties, +lucene            = 7.4.0, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +                assertThat(method.getParameterTypes()[1], equalTo(RequestOptions.class));, +                assertThat(method.getParameterTypes()[2], equalTo(ActionListener.class));, +                    assertThat(method.getParameterTypes()[0], equalTo(RequestOptions.class));, +                    assertThat(method.getParameterTypes()[1], equalTo(RequestOptions.class));, +                if (remove == false) {, +                    if (deprecatedMethods.contains(apiName)) {, +                        assertTrue("method [" + method.getName() + "], api [" + apiName + "] should be deprecated",, +                            method.isAnnotationPresent(Deprecated.class));, +                    } else {, +        }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                throw new GradleException(, +                        "JAVA_HOME must be set to build Elasticsearch. " +, +                                "Note that if the variable was just set you might have to run `./gradlew --stop` for " +, +                                "it to be picked up. See https://github.com/elastic/elasticsearch/issues/31399 details.", +                ), +++ b/buildSrc/version.properties, +lucene            = 7.4.0, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +                assertThat(method.getParameterTypes()[1], equalTo(RequestOptions.class));, +                assertThat(method.getParameterTypes()[2], equalTo(ActionListener.class));, +                    assertThat(method.getParameterTypes()[0], equalTo(RequestOptions.class));, +                    assertThat(method.getParameterTypes()[1], equalTo(RequestOptions.class));, +                if (remove == false) {, +                    if (deprecatedMethods.contains(apiName)) {, +                        assertTrue("method [" + method.getName() + "], api [" + apiName + "] should be deprecated",, +                            method.isAnnotationPresent(Deprecated.class));, +                    } else {, +        }, +++ b/docs/Versions.asciidoc, +:lucene_version:        7.4.0, +:lucene_version_path:   7_4_0, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                throw new GradleException(, +                        "JAVA_HOME must be set to build Elasticsearch. " +, +                                "Note that if the variable was just set you might have to run `./gradlew --stop` for " +, +                                "it to be picked up. See https://github.com/elastic/elasticsearch/issues/31399 details.", +                ), +++ b/buildSrc/version.properties, +lucene            = 7.4.0, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +                assertThat(method.getParameterTypes()[1], equalTo(RequestOptions.class));, +                assertThat(method.getParameterTypes()[2], equalTo(ActionListener.class));, +                    assertThat(method.getParameterTypes()[0], equalTo(RequestOptions.class));, +                    assertThat(method.getParameterTypes()[1], equalTo(RequestOptions.class));, +                if (remove == false) {, +                    if (deprecatedMethods.contains(apiName)) {, +                        assertTrue("method [" + method.getName() + "], api [" + apiName + "] should be deprecated",, +                            method.isAnnotationPresent(Deprecated.class));, +                    } else {, +        }, +++ b/docs/Versions.asciidoc, +:lucene_version:        7.4.0, +:lucene_version_path:   7_4_0, +++ b/docs/reference/cat/thread_pool.asciidoc, +// TESTRESPONSE[s/\.\.\./(node-0 .+ 0 0 0\n)+/], +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                throw new GradleException(, +                        "JAVA_HOME must be set to build Elasticsearch. " +, +                                "Note that if the variable was just set you might have to run `./gradlew --stop` for " +, +                                "it to be picked up. See https://github.com/elastic/elasticsearch/issues/31399 details.", +                ), +++ b/buildSrc/version.properties, +lucene            = 7.4.0, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +                assertThat(method.getParameterTypes()[1], equalTo(RequestOptions.class));, +                assertThat(method.getParameterTypes()[2], equalTo(ActionListener.class));, +                    assertThat(method.getParameterTypes()[0], equalTo(RequestOptions.class));, +                    assertThat(method.getParameterTypes()[1], equalTo(RequestOptions.class));, +                if (remove == false) {, +                    if (deprecatedMethods.contains(apiName)) {, +                        assertTrue("method [" + method.getName() + "], api [" + apiName + "] should be deprecated",, +                            method.isAnnotationPresent(Deprecated.class));, +                    } else {, +        }, +++ b/docs/Versions.asciidoc, +:lucene_version:        7.4.0]