[+++ b/src/main/java/org/elasticsearch/common/Table.java, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +    private List<Cell> headers = new ArrayList<Cell>();, +    private List<List<Cell>> rows = new ArrayList<List<Cell>>();, +    private Map<String, List<Cell>> map = Maps.newHashMap();, +    private List<Cell> currentCells;, +    private boolean inHeaders = false;, +            map.put(header.value.toString(), new ArrayList<Cell>());, +        int cellIndex = currentCells.size();, +            String hdr = (String) headers.get(cellIndex).value;, +    public Map<String, List<Cell>> getAsMap() {, +        return this.map;, +    public Cell findHeaderByName(String header) {, +        for (Cell cell : headers) {, +            if (cell.value.toString().equals(header)) {, +                return cell;, +        return null;, +++ b/src/main/java/org/elasticsearch/common/Table.java, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +    private List<Cell> headers = new ArrayList<Cell>();, +    private List<List<Cell>> rows = new ArrayList<List<Cell>>();, +    private Map<String, List<Cell>> map = Maps.newHashMap();, +    private List<Cell> currentCells;, +    private boolean inHeaders = false;, +            map.put(header.value.toString(), new ArrayList<Cell>());, +        int cellIndex = currentCells.size();, +            String hdr = (String) headers.get(cellIndex).value;, +    public Map<String, List<Cell>> getAsMap() {, +        return this.map;, +    public Cell findHeaderByName(String header) {, +        for (Cell cell : headers) {, +            if (cell.value.toString().equals(header)) {, +                return cell;, +        return null;, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/Table.java, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +    private List<Cell> headers = new ArrayList<Cell>();, +    private List<List<Cell>> rows = new ArrayList<List<Cell>>();, +    private Map<String, List<Cell>> map = Maps.newHashMap();, +    private List<Cell> currentCells;, +    private boolean inHeaders = false;, +            map.put(header.value.toString(), new ArrayList<Cell>());, +        int cellIndex = currentCells.size();, +            String hdr = (String) headers.get(cellIndex).value;, +    public Map<String, List<Cell>> getAsMap() {, +        return this.map;, +    public Cell findHeaderByName(String header) {, +        for (Cell cell : headers) {, +            if (cell.value.toString().equals(header)) {, +                return cell;, +        return null;, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/rest/action/cat/RestCountAction.java, +import org.elasticsearch.rest.RestChannel;, +import org.elasticsearch.rest.RestController;, +import org.elasticsearch.rest.RestRequest;, +import org.elasticsearch.rest.XContentThrowableRestResponse;, +import org.joda.time.format.DateTimeFormat;, +import org.joda.time.format.DateTimeFormatter;, +        Table table = new Table();, +        table.addCell("time(ms)", "desc:time, in milliseconds since epoch UTC, that the count was executed");, +        table.addCell("timestamp", "desc:time that the count was executed");, +    private DateTimeFormatter dateFormat = DateTimeFormat.forPattern("HH:mm:ss");, +, +        long time = System.currentTimeMillis();, +        table.addCell(time);, +        table.addCell(dateFormat.print(time));, +++ b/src/main/java/org/elasticsearch/common/Table.java, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +    private List<Cell> headers = new ArrayList<Cell>();, +    private List<List<Cell>> rows = new ArrayList<List<Cell>>();, +    private Map<String, List<Cell>> map = Maps.newHashMap();, +    private List<Cell> currentCells;, +    private boolean inHeaders = false;, +            map.put(header.value.toString(), new ArrayList<Cell>());, +        int cellIndex = currentCells.size();, +            String hdr = (String) headers.get(cellIndex).value;, +    public Map<String, List<Cell>> getAsMap() {, +        return this.map;, +    public Cell findHeaderByName(String header) {, +        for (Cell cell : headers) {, +            if (cell.value.toString().equals(header)) {, +                return cell;, +        return null;, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/rest/action/cat/RestCountAction.java, +import org.elasticsearch.rest.RestChannel;]