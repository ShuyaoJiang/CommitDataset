[+++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +import org.elasticsearch.action.DocWriteRequest;, +        private final BulkItemResponse ITEM_RESPONSE = new BulkItemResponse(1, DocWriteRequest.OpType.UPDATE,, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +import org.elasticsearch.action.DocWriteRequest;, +        private final BulkItemResponse ITEM_RESPONSE = new BulkItemResponse(1, DocWriteRequest.OpType.UPDATE,, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/TransportNoopBulkAction.java, +import org.elasticsearch.action.DocWriteRequest;, +    private static final BulkItemResponse ITEM_RESPONSE = new BulkItemResponse(1, DocWriteRequest.OpType.UPDATE,, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +import org.elasticsearch.action.DocWriteRequest;, +        private final BulkItemResponse ITEM_RESPONSE = new BulkItemResponse(1, DocWriteRequest.OpType.UPDATE,, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/TransportNoopBulkAction.java, +import org.elasticsearch.action.DocWriteRequest;, +    private static final BulkItemResponse ITEM_RESPONSE = new BulkItemResponse(1, DocWriteRequest.OpType.UPDATE,, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteRequest.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +package org.elasticsearch.action;, +, +import org.elasticsearch.action.delete.DeleteRequest;, +import org.elasticsearch.action.index.IndexRequest;, +import org.elasticsearch.action.support.IndicesOptions;, +import org.elasticsearch.action.update.UpdateRequest;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.index.VersionType;, +, +import java.io.IOException;, +import java.util.Locale;, +, +/**, + * Generic interface to group ActionRequest, which perform writes to a single document, + * Action requests implementing this can be part of {@link org.elasticsearch.action.bulk.BulkRequest}, + */, +public interface DocWriteRequest<T> extends IndicesRequest {, +, +    /**, +     * Get the index that this request operates on, +     * @return the index, +     */, +    String index();, +, +    /**, +     * Get the type that this request operates on, +     * @return the type, +     */, +    String type();, +, +    /**, +     * Get the id of the document for this request, +     * @return the id, +     */, +    String id();, +, +    /**, +     * Get the options for this request, +     * @return the indices options, +     */, +    IndicesOptions indicesOptions();, +, +    /**, +     * Set the routing for this request, +     * @return the Request, +     */, +    T routing(String routing);, +, +    /**, +     * Get the routing for this request, +     * @return the Routing, +     */, +    String routing();, +, +, +    /**, +     * Get the parent for this request, +     * @return the Parent, +     */, +    String parent();, +, +    /**, +     * Get the document version for this request, +     * @return the document version, +     */]