[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/support/AutoCreateIndex.java, +import org.elasticsearch.index.IndexNotFoundException;, +     * @throws IndexNotFoundException if the the index doesn't exist and shouldn't be auto created, +        if (resolver.hasIndexOrAlias(index, state)) {, +            return false;, +        }, +            throw new IndexNotFoundException("no such index and [" + AUTO_CREATE_INDEX_SETTING.getKey() + "] is [false]", index);, +            throw new IndexNotFoundException("no such index and [" + MapperService.INDEX_MAPPER_DYNAMIC_SETTING.getKey() + "] is [false]",, +                    index);, +                if (include) {, +                    return true;, +                }, +                throw new IndexNotFoundException("no such index and [" + AUTO_CREATE_INDEX_SETTING.getKey() + "] contains [-", +                        + indexExpression + "] which forbids automatic creation of the index", index);, +        throw new IndexNotFoundException("no such index and [" + AUTO_CREATE_INDEX_SETTING.getKey() + "] ([" + autoCreate, +                + "]) doesn't match", index);, +        private final String string;, +                            throw new IllegalArgumentException("Can't parse [" + value + "] for setting [action.auto_create_index] must ", +                                    + "be either [true, false, or a comma separated list of index patterns]");, +                                throw new IllegalArgumentException("Can't parse [" + value + "] for setting [action.auto_create_index] ", +                                        + "must contain an index name after [-]");, +                                throw new IllegalArgumentException("Can't parse [" + value + "] for setting [action.auto_create_index] ", +                                        + "must contain an index name after [+]");, +            this.string = value;, +, +        @Override, +        public String toString() {, +            return string;, +        }, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/support/AutoCreateIndex.java, +import org.elasticsearch.index.IndexNotFoundException;, +     * @throws IndexNotFoundException if the the index doesn't exist and shouldn't be auto created, +        if (resolver.hasIndexOrAlias(index, state)) {, +            return false;, +        }, +            throw new IndexNotFoundException("no such index and [" + AUTO_CREATE_INDEX_SETTING.getKey() + "] is [false]", index);, +            throw new IndexNotFoundException("no such index and [" + MapperService.INDEX_MAPPER_DYNAMIC_SETTING.getKey() + "] is [false]",, +                    index);, +                if (include) {, +                    return true;, +                }, +                throw new IndexNotFoundException("no such index and [" + AUTO_CREATE_INDEX_SETTING.getKey() + "] contains [-", +                        + indexExpression + "] which forbids automatic creation of the index", index);, +        throw new IndexNotFoundException("no such index and [" + AUTO_CREATE_INDEX_SETTING.getKey() + "] ([" + autoCreate, +                + "]) doesn't match", index);, +        private final String string;, +                            throw new IllegalArgumentException("Can't parse [" + value + "] for setting [action.auto_create_index] must ", +                                    + "be either [true, false, or a comma separated list of index patterns]");, +                                throw new IllegalArgumentException("Can't parse [" + value + "] for setting [action.auto_create_index] ", +                                        + "must contain an index name after [-]");, +                                throw new IllegalArgumentException("Can't parse [" + value + "] for setting [action.auto_create_index] ", +                                        + "must contain an index name after [+]");, +            this.string = value;, +, +        @Override, +        public String toString() {, +            return string;, +        }, +++ b/core/src/main/java/org/elasticsearch/index/IndexNotFoundException.java, +    /**, +     * Construct with a custom message., +     */, +    public IndexNotFoundException(String message, String index) {, +        super(message);, +        setIndex(index);, +    }, +        this(index, (Throwable) null);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/support/AutoCreateIndex.java, +import org.elasticsearch.index.IndexNotFoundException;, +     * @throws IndexNotFoundException if the the index doesn't exist and shouldn't be auto created, +        if (resolver.hasIndexOrAlias(index, state)) {, +            return false;, +        }, +            throw new IndexNotFoundException("no such index and [" + AUTO_CREATE_INDEX_SETTING.getKey() + "] is [false]", index);, +            throw new IndexNotFoundException("no such index and [" + MapperService.INDEX_MAPPER_DYNAMIC_SETTING.getKey() + "] is [false]",, +                    index);, +                if (include) {, +                    return true;, +                }, +                throw new IndexNotFoundException("no such index and [" + AUTO_CREATE_INDEX_SETTING.getKey() + "] contains [-", +                        + indexExpression + "] which forbids automatic creation of the index", index);, +        throw new IndexNotFoundException("no such index and [" + AUTO_CREATE_INDEX_SETTING.getKey() + "] ([" + autoCreate, +                + "]) doesn't match", index);, +        private final String string;, +                            throw new IllegalArgumentException("Can't parse [" + value + "] for setting [action.auto_create_index] must ", +                                    + "be either [true, false, or a comma separated list of index patterns]");, +                                throw new IllegalArgumentException("Can't parse [" + value + "] for setting [action.auto_create_index] ", +                                        + "must contain an index name after [-]");, +                                throw new IllegalArgumentException("Can't parse [" + value + "] for setting [action.auto_create_index] ", +                                        + "must contain an index name after [+]");, +            this.string = value;, +, +        @Override, +        public String toString() {, +            return string;, +        }]