[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +     *, +     *, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +     *, +     *, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.ChangePasswordRequest;, +     *, +     *, +     *, +     *, +     *, +     *, +, +    /**, +     * Change the password of a user of a native realm or built-in user synchronously., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html">, +     * the docs</a> for more., +     *, +     * @param request the request with the user's new password, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the change user password call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public EmptyResponse changePassword(ChangePasswordRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::changePassword, options,, +            EmptyResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Change the password of a user of a native realm or built-in user asynchronously., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html">, +     * the docs</a> for more., +     *, +     * @param request  the request with the user's new password, +     * @param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void changePasswordAsync(ChangePasswordRequest request, RequestOptions options,, +                                    ActionListener<EmptyResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::changePassword, options,, +            EmptyResponse::fromXContent, listener, emptySet());, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +     *, +     *, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.ChangePasswordRequest;, +     *, +     *, +     *, +     *, +     *, +     *, +, +    /**, +     * Change the password of a user of a native realm or built-in user synchronously., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html">, +     * the docs</a> for more., +     *, +     * @param request the request with the user's new password, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the change user password call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public EmptyResponse changePassword(ChangePasswordRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::changePassword, options,, +            EmptyResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Change the password of a user of a native realm or built-in user asynchronously., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html">, +     * the docs</a> for more., +     *, +     * @param request  the request with the user's new password, +     * @param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void changePasswordAsync(ChangePasswordRequest request, RequestOptions options,, +                                    ActionListener<EmptyResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::changePassword, options,, +            EmptyResponse::fromXContent, listener, emptySet());, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityRequestConverters.java, +import org.apache.http.client.methods.HttpPost;, +import org.elasticsearch.client.security.ChangePasswordRequest;, +    static Request changePassword(ChangePasswordRequest changePasswordRequest) throws IOException {, +        String endpoint = new RequestConverters.EndpointBuilder(), +            .addPathPartAsIs("_xpack/security/user"), +            .addPathPart(changePasswordRequest.getUsername()), +            .addPathPartAsIs("_password"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(changePasswordRequest, REQUEST_BODY_CONTENT_TYPE));, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        params.withRefreshPolicy(changePasswordRequest.getRefreshPolicy());, +        return request;, +    }]