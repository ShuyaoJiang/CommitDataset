[+++ b/buildSrc/src/main/resources/checkstyle.xml, +      <property name="ignorePattern" value="^ *\* *https?://[^ ]+$"/>, +++ b/buildSrc/src/main/resources/checkstyle.xml, +      <property name="ignorePattern" value="^ *\* *https?://[^ ]+$"/>, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="plugin[/\\]sql[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]parser[/\\]SqlBase(Base(Listener|Visitor)|Lexer|Listener|Parser|Visitor).java" checks="." />, +++ b/buildSrc/src/main/resources/checkstyle.xml, +      <property name="ignorePattern" value="^ *\* *https?://[^ ]+$"/>, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="plugin[/\\]sql[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]parser[/\\]SqlBase(Base(Listener|Visitor)|Lexer|Listener|Parser|Visitor).java" checks="." />, +++ b/client/rest-high-level/build.gradle, +integTestRunner {, +  systemProperty 'tests.rest.cluster.username', System.getProperty('tests.rest.cluster.username', 'test_user'), +  systemProperty 'tests.rest.cluster.password', System.getProperty('tests.rest.cluster.password', 'test-password'), +}, +, +  setting 'xpack.security.enabled', 'true', +  setupCommand 'setupDummyUser',, +          'bin/elasticsearch-users',, +          'useradd', System.getProperty('tests.rest.cluster.username', 'test_user'),, +          '-p', System.getProperty('tests.rest.cluster.password', 'test-password'),, +          '-r', 'superuser', +  waitCondition = { node, ant ->, +    File tmpFile = new File(node.cwd, 'wait.success'), +    ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow",, +            dest: tmpFile.toString(),, +            username: System.getProperty('tests.rest.cluster.username', 'test_user'),, +            password: System.getProperty('tests.rest.cluster.password', 'test-password'),, +            ignoreerrors: true,, +            retries: 10), +    return tmpFile.exists(), +  }, +++ b/buildSrc/src/main/resources/checkstyle.xml, +      <property name="ignorePattern" value="^ *\* *https?://[^ ]+$"/>, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="plugin[/\\]sql[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]parser[/\\]SqlBase(Base(Listener|Visitor)|Lexer|Listener|Parser|Visitor).java" checks="." />, +++ b/client/rest-high-level/build.gradle, +integTestRunner {, +  systemProperty 'tests.rest.cluster.username', System.getProperty('tests.rest.cluster.username', 'test_user'), +  systemProperty 'tests.rest.cluster.password', System.getProperty('tests.rest.cluster.password', 'test-password'), +}, +, +  setting 'xpack.security.enabled', 'true', +  setupCommand 'setupDummyUser',, +          'bin/elasticsearch-users',, +          'useradd', System.getProperty('tests.rest.cluster.username', 'test_user'),, +          '-p', System.getProperty('tests.rest.cluster.password', 'test-password'),, +          '-r', 'superuser', +  waitCondition = { node, ant ->, +    File tmpFile = new File(node.cwd, 'wait.success'), +    ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow",, +            dest: tmpFile.toString(),, +            username: System.getProperty('tests.rest.cluster.username', 'test_user'),, +            password: System.getProperty('tests.rest.cluster.password', 'test-password'),, +            ignoreerrors: true,, +            retries: 10), +    return tmpFile.exists(), +  }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +        return restHighLevelClient.performRequestAndParseEntity(clusterUpdateSettingsRequest, ClusterRequestConverters::clusterPutSettings,, +        restHighLevelClient.performRequestAsyncAndParseEntity(clusterUpdateSettingsRequest, ClusterRequestConverters::clusterPutSettings,, +        return restHighLevelClient.performRequestAndParseEntity(clusterGetSettingsRequest, ClusterRequestConverters::clusterGetSettings,, +        restHighLevelClient.performRequestAsyncAndParseEntity(clusterGetSettingsRequest, ClusterRequestConverters::clusterGetSettings,, +        return restHighLevelClient.performRequestAndParseEntity(healthRequest, ClusterRequestConverters::clusterHealth, options,, +        restHighLevelClient.performRequestAsyncAndParseEntity(healthRequest, ClusterRequestConverters::clusterHealth, options,, +++ b/buildSrc/src/main/resources/checkstyle.xml, +      <property name="ignorePattern" value="^ *\* *https?://[^ ]+$"/>, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="plugin[/\\]sql[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]parser[/\\]SqlBase(Base(Listener|Visitor)|Lexer|Listener|Parser|Visitor).java" checks="." />, +++ b/client/rest-high-level/build.gradle, +integTestRunner {, +  systemProperty 'tests.rest.cluster.username', System.getProperty('tests.rest.cluster.username', 'test_user'), +  systemProperty 'tests.rest.cluster.password', System.getProperty('tests.rest.cluster.password', 'test-password'), +}, +, +  setting 'xpack.security.enabled', 'true', +  setupCommand 'setupDummyUser',, +          'bin/elasticsearch-users',, +          'useradd', System.getProperty('tests.rest.cluster.username', 'test_user'),, +          '-p', System.getProperty('tests.rest.cluster.password', 'test-password'),, +          '-r', 'superuser', +  waitCondition = { node, ant ->, +    File tmpFile = new File(node.cwd, 'wait.success'), +    ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow",, +            dest: tmpFile.toString(),, +            username: System.getProperty('tests.rest.cluster.username', 'test_user'),, +            password: System.getProperty('tests.rest.cluster.password', 'test-password'),, +            ignoreerrors: true,, +            retries: 10), +    return tmpFile.exists(), +  }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +        return restHighLevelClient.performRequestAndParseEntity(clusterUpdateSettingsRequest, ClusterRequestConverters::clusterPutSettings,, +        restHighLevelClient.performRequestAsyncAndParseEntity(clusterUpdateSettingsRequest, ClusterRequestConverters::clusterPutSettings,, +        return restHighLevelClient.performRequestAndParseEntity(clusterGetSettingsRequest, ClusterRequestConverters::clusterGetSettings,, +        restHighLevelClient.performRequestAsyncAndParseEntity(clusterGetSettingsRequest, ClusterRequestConverters::clusterGetSettings,, +        return restHighLevelClient.performRequestAndParseEntity(healthRequest, ClusterRequestConverters::clusterHealth, options,, +        restHighLevelClient.performRequestAsyncAndParseEntity(healthRequest, ClusterRequestConverters::clusterHealth, options,, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterRequestConverters.java, +/*]