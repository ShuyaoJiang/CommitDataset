[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/GeoBoundsAggregator.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.search.aggregations.support.ValueType;, +import org.elasticsearch.search.aggregations.support.ValuesSourceType;, +import java.util.Objects;, +    static final ParseField WRAP_LONGITUDE_FIELD = new ParseField("wrap_longitude");, +, +        private boolean wrapLongitude = true;, +        public Factory(String name) {, +            super(name, InternalGeoBounds.TYPE, ValuesSourceType.GEOPOINT, ValueType.GEOPOINT);, +        }, +, +        /**, +         * Set whether to wrap longitudes. Defaults to true., +         */, +        public void wrapLongitude(boolean wrapLongitude) {, +        /**, +         * Get whether to wrap longitudes., +         */, +        public boolean wrapLongitude() {, +            return wrapLongitude;, +        }, +, +        @Override, +        protected ValuesSourceAggregatorFactory<ValuesSource.GeoPoint> innerReadFrom(String name, ValuesSourceType valuesSourceType,, +                ValueType targetValueType, StreamInput in) throws IOException {, +            Factory factory = new Factory(name);, +            factory.wrapLongitude = in.readBoolean();, +            return factory;, +        }, +, +        @Override, +        protected void innerWriteTo(StreamOutput out) throws IOException {, +            out.writeBoolean(wrapLongitude);, +        }, +, +        @Override, +        public XContentBuilder doXContentBody(XContentBuilder builder, Params params) throws IOException {, +            builder.field(WRAP_LONGITUDE_FIELD.getPreferredName(), wrapLongitude);, +            return builder;, +        }, +, +        @Override, +        protected int innerHashCode() {, +            return Objects.hash(wrapLongitude);, +        }, +, +        @Override, +        protected boolean innerEquals(Object obj) {, +            Factory other = (Factory) obj;, +            return Objects.equals(wrapLongitude, other.wrapLongitude);, +        }, +, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/GeoBoundsAggregator.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.search.aggregations.support.ValueType;, +import org.elasticsearch.search.aggregations.support.ValuesSourceType;, +import java.util.Objects;, +    static final ParseField WRAP_LONGITUDE_FIELD = new ParseField("wrap_longitude");, +, +        private boolean wrapLongitude = true;, +        public Factory(String name) {, +            super(name, InternalGeoBounds.TYPE, ValuesSourceType.GEOPOINT, ValueType.GEOPOINT);, +        }, +, +        /**, +         * Set whether to wrap longitudes. Defaults to true., +         */, +        public void wrapLongitude(boolean wrapLongitude) {, +        /**, +         * Get whether to wrap longitudes., +         */, +        public boolean wrapLongitude() {, +            return wrapLongitude;, +        }, +, +        @Override, +        protected ValuesSourceAggregatorFactory<ValuesSource.GeoPoint> innerReadFrom(String name, ValuesSourceType valuesSourceType,, +                ValueType targetValueType, StreamInput in) throws IOException {, +            Factory factory = new Factory(name);, +            factory.wrapLongitude = in.readBoolean();, +            return factory;, +        }, +, +        @Override, +        protected void innerWriteTo(StreamOutput out) throws IOException {, +            out.writeBoolean(wrapLongitude);, +        }, +, +        @Override, +        public XContentBuilder doXContentBody(XContentBuilder builder, Params params) throws IOException {, +            builder.field(WRAP_LONGITUDE_FIELD.getPreferredName(), wrapLongitude);, +            return builder;, +        }]