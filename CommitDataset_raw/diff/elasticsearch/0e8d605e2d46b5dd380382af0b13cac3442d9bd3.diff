[+++ b/TESTING.asciidoc, +If you want to run elasticsearch from your IDE, the `gradle run` task, +supports a remote debugging option:, +, +---------------------------------------------------------------------------, +gradle run --debug-jvm, +---------------------------------------------------------------------------, +++ b/TESTING.asciidoc, +If you want to run elasticsearch from your IDE, the `gradle run` task, +supports a remote debugging option:, +, +---------------------------------------------------------------------------, +gradle run --debug-jvm, +---------------------------------------------------------------------------, +++ b/build.gradle, +// we need to add the same --debug-jvm option as, +// the real RunTask has, so we can pass it through, +class Run extends DefaultTask {, +  boolean debug = false, +, +  @org.gradle.api.internal.tasks.options.Option(, +        option = "debug-jvm",, +        description = "Enable debugging configuration, to allow attaching a debugger to elasticsearch.", +  ), +  public void setDebug(boolean enabled) {, +    project.project(':distribution').run.clusterConfig.debug = enabled, +  } , +}, +task run(type: Run) {, +++ b/TESTING.asciidoc, +If you want to run elasticsearch from your IDE, the `gradle run` task, +supports a remote debugging option:, +, +---------------------------------------------------------------------------, +gradle run --debug-jvm, +---------------------------------------------------------------------------, +++ b/build.gradle, +// we need to add the same --debug-jvm option as, +// the real RunTask has, so we can pass it through, +class Run extends DefaultTask {, +  boolean debug = false, +, +  @org.gradle.api.internal.tasks.options.Option(, +        option = "debug-jvm",, +        description = "Enable debugging configuration, to allow attaching a debugger to elasticsearch.", +  ), +  public void setDebug(boolean enabled) {, +    project.project(':distribution').run.clusterConfig.debug = enabled, +  } , +}, +task run(type: Run) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    boolean debug = false, +, +    @Input, +++ b/TESTING.asciidoc, +If you want to run elasticsearch from your IDE, the `gradle run` task, +supports a remote debugging option:, +, +---------------------------------------------------------------------------, +gradle run --debug-jvm, +---------------------------------------------------------------------------, +++ b/build.gradle, +// we need to add the same --debug-jvm option as, +// the real RunTask has, so we can pass it through, +class Run extends DefaultTask {, +  boolean debug = false, +, +  @org.gradle.api.internal.tasks.options.Option(, +        option = "debug-jvm",, +        description = "Enable debugging configuration, to allow attaching a debugger to elasticsearch.", +  ), +  public void setDebug(boolean enabled) {, +    project.project(':distribution').run.clusterConfig.debug = enabled, +  } , +}, +task run(type: Run) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    boolean debug = false, +, +    @Input, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            'JAVA_OPTS': config.jvmArgs, +            // we must add debug options inside the closure so the config is read at execution time, as, +            // gradle task options are not processed until the end of the configuration phase, +            if (config.debug) {, +                println 'Running elasticsearch in debug mode, connect on port 8000', +                esEnv['JAVA_OPTS'] += ' -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8000', +            }, +, +++ b/TESTING.asciidoc, +If you want to run elasticsearch from your IDE, the `gradle run` task, +supports a remote debugging option:, +, +---------------------------------------------------------------------------, +gradle run --debug-jvm, +---------------------------------------------------------------------------, +++ b/build.gradle, +// we need to add the same --debug-jvm option as, +// the real RunTask has, so we can pass it through]