[+++ b/server/src/main/java/org/elasticsearch/action/resync/ResyncReplicationRequest.java, +import org.elasticsearch.index.seqno.SequenceNumbers;, +    private long trimAboveSeqNo;, +    public ResyncReplicationRequest(final ShardId shardId, final long trimAboveSeqNo,, +                                    final Translog.Operation[] operations) {, +        this.trimAboveSeqNo = trimAboveSeqNo;, +    public long getTrimAboveSeqNo() {, +        return trimAboveSeqNo;, +    }, +, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            trimAboveSeqNo = in.readZLong();, +        } else {, +            trimAboveSeqNo = SequenceNumbers.UNASSIGNED_SEQ_NO;, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            out.writeZLong(trimAboveSeqNo);, +        }, +        return trimAboveSeqNo == that.trimAboveSeqNo, +            && Arrays.equals(operations, that.operations);, +        return Long.hashCode(trimAboveSeqNo) + 31 * Arrays.hashCode(operations);, +            ", trimAboveSeqNo=" + trimAboveSeqNo +, +++ b/server/src/main/java/org/elasticsearch/action/resync/ResyncReplicationRequest.java, +import org.elasticsearch.index.seqno.SequenceNumbers;, +    private long trimAboveSeqNo;, +    public ResyncReplicationRequest(final ShardId shardId, final long trimAboveSeqNo,, +                                    final Translog.Operation[] operations) {, +        this.trimAboveSeqNo = trimAboveSeqNo;, +    public long getTrimAboveSeqNo() {, +        return trimAboveSeqNo;, +    }, +, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            trimAboveSeqNo = in.readZLong();, +        } else {, +            trimAboveSeqNo = SequenceNumbers.UNASSIGNED_SEQ_NO;, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            out.writeZLong(trimAboveSeqNo);, +        }, +        return trimAboveSeqNo == that.trimAboveSeqNo, +            && Arrays.equals(operations, that.operations);, +        return Long.hashCode(trimAboveSeqNo) + 31 * Arrays.hashCode(operations);, +            ", trimAboveSeqNo=" + trimAboveSeqNo +, +++ b/server/src/main/java/org/elasticsearch/action/resync/TransportResyncReplicationAction.java, +        if (request.getTrimAboveSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO) {, +            replica.trimOperationOfPreviousPrimaryTerms(request.getTrimAboveSeqNo());, +        }, +++ b/server/src/main/java/org/elasticsearch/action/resync/ResyncReplicationRequest.java, +import org.elasticsearch.index.seqno.SequenceNumbers;, +    private long trimAboveSeqNo;, +    public ResyncReplicationRequest(final ShardId shardId, final long trimAboveSeqNo,, +                                    final Translog.Operation[] operations) {, +        this.trimAboveSeqNo = trimAboveSeqNo;, +    public long getTrimAboveSeqNo() {, +        return trimAboveSeqNo;, +    }, +, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            trimAboveSeqNo = in.readZLong();, +        } else {, +            trimAboveSeqNo = SequenceNumbers.UNASSIGNED_SEQ_NO;, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            out.writeZLong(trimAboveSeqNo);, +        }, +        return trimAboveSeqNo == that.trimAboveSeqNo, +            && Arrays.equals(operations, that.operations);, +        return Long.hashCode(trimAboveSeqNo) + 31 * Arrays.hashCode(operations);, +            ", trimAboveSeqNo=" + trimAboveSeqNo +, +++ b/server/src/main/java/org/elasticsearch/action/resync/TransportResyncReplicationAction.java, +        if (request.getTrimAboveSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO) {, +            replica.trimOperationOfPreviousPrimaryTerms(request.getTrimAboveSeqNo());, +        }, +++ b/server/src/main/java/org/elasticsearch/index/engine/Engine.java, +    /**, +     * Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>, +     * @see Translog#trimOperations(long, long), +     */, +    public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException;, +, +    public abstract void trimUnreferencedTranslogFiles() throws EngineException;, +++ b/server/src/main/java/org/elasticsearch/action/resync/ResyncReplicationRequest.java, +import org.elasticsearch.index.seqno.SequenceNumbers;, +    private long trimAboveSeqNo;, +    public ResyncReplicationRequest(final ShardId shardId, final long trimAboveSeqNo,, +                                    final Translog.Operation[] operations) {, +        this.trimAboveSeqNo = trimAboveSeqNo;, +    public long getTrimAboveSeqNo() {, +        return trimAboveSeqNo;, +    }, +, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            trimAboveSeqNo = in.readZLong();, +        } else {, +            trimAboveSeqNo = SequenceNumbers.UNASSIGNED_SEQ_NO;, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            out.writeZLong(trimAboveSeqNo);, +        }]