[+++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcResultSet.java, +    private EsType columnType(int columnIndex) {, +        return cursor.columns().get(columnIndex - 1).type;, +    }, +, +        EsType type = columnType(columnIndex);, +        EsType type = columnType(columnIndex);, +        if (type == EsType.DATE) {, +            return new Time(0L);, +        }, +        EsType columnType = columnType(columnIndex);, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcResultSet.java, +    private EsType columnType(int columnIndex) {, +        return cursor.columns().get(columnIndex - 1).type;, +    }, +, +        EsType type = columnType(columnIndex);, +        EsType type = columnType(columnIndex);, +        if (type == EsType.DATE) {, +            return new Time(0L);, +        }, +        EsType columnType = columnType(columnIndex);, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/TypeConverter.java, +        if (columnType == EsType.DATETIME || columnType == EsType.DATE) {, +        if (columnType == EsType.DATE) {, +            return new Time(0L);, +        }, +        if (columnType == EsType.DATETIME || columnType == EsType.DATE) {, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcResultSet.java, +    private EsType columnType(int columnIndex) {, +        return cursor.columns().get(columnIndex - 1).type;, +    }, +, +        EsType type = columnType(columnIndex);, +        EsType type = columnType(columnIndex);, +        if (type == EsType.DATE) {, +            return new Time(0L);, +        }, +        EsType columnType = columnType(columnIndex);, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/TypeConverter.java, +        if (columnType == EsType.DATETIME || columnType == EsType.DATE) {, +        if (columnType == EsType.DATE) {, +            return new Time(0L);, +        }, +        if (columnType == EsType.DATETIME || columnType == EsType.DATE) {, +++ b/x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/ResultSetTestCase.java, +    public void testGetDateType() throws Exception {, +        createIndex("test");, +        updateMapping("test", builder -> builder.startObject("test_date").field("type", "date").endObject());, +, +        // 2018-03-12 17:00:00 UTC, +        Long timeInMillis = 1520874000123L;, +        index("test", "1", builder -> builder.field("test_date", timeInMillis));, +, +        // UTC +10 hours, +        String timeZoneId1 = "Etc/GMT-10";, +        Calendar c = Calendar.getInstance(TimeZone.getTimeZone(timeZoneId1), Locale.ROOT);, +, +        doWithQueryAndTimezone("SELECT CAST(test_date AS DATE) as date FROM test", timeZoneId1, results -> {, +            results.next();, +            c.setTimeInMillis(timeInMillis);, +            c.set(HOUR_OF_DAY, 0);, +            c.set(MINUTE, 0);, +            c.set(SECOND, 0);, +            c.set(MILLISECOND, 0);, +, +            java.sql.Date expectedDate = new java.sql.Date(c.getTimeInMillis());, +            assertEquals(expectedDate, results.getDate("date"));, +            assertEquals(expectedDate, results.getObject("date", java.sql.Date.class));, +, +            java.sql.Time expectedTime = new java.sql.Time(0L);, +            assertEquals(expectedTime, results.getTime("date"));, +            assertEquals(expectedTime, results.getObject("date", java.sql.Time.class));, +, +            java.sql.Timestamp expectedTimestamp = new java.sql.Timestamp(c.getTimeInMillis());, +            assertEquals(expectedTimestamp, results.getTimestamp("date"));, +            assertEquals(expectedTimestamp, results.getObject("date", java.sql.Timestamp.class));, +        });, +    }]