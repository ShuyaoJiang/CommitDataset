[+++ b/plugins/lang/javascript/src/main/java/org/elasticsearch/script/javascript/JavaScriptScriptEngineService.java, +import org.elasticsearch.script.javascript.support.NativeList;, +import java.util.List;, +            if (javaObject instanceof List) {, +                return new NativeList(scope, (List) javaObject);, +            }, +++ b/plugins/lang/javascript/src/main/java/org/elasticsearch/script/javascript/JavaScriptScriptEngineService.java, +import org.elasticsearch.script.javascript.support.NativeList;, +import java.util.List;, +            if (javaObject instanceof List) {, +                return new NativeList(scope, (List) javaObject);, +            }, +++ b/plugins/lang/javascript/src/main/java/org/elasticsearch/script/javascript/support/NativeList.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.script.javascript.support;, +, +import org.mozilla.javascript.Scriptable;, +import org.mozilla.javascript.Undefined;, +import org.mozilla.javascript.Wrapper;, +, +import java.util.List;, +, +/**, + * @author kimchy (shay.banon), + */, +public class NativeList implements Scriptable, Wrapper {, +    private static final long serialVersionUID = 3664761893203964569L;, +, +    private List<Object> list;, +    private Scriptable parentScope;, +    private Scriptable prototype;, +, +, +    public static NativeList wrap(Scriptable scope, List<Object> list) {, +        return new NativeList(scope, list);, +    }, +, +    public NativeList(Scriptable scope, List<Object> list) {, +        this.parentScope = scope;, +        this.list = list;, +    }, +, +    /* (non-Javadoc), +     * @see org.mozilla.javascript.Wrapper#unwrap(), +     */, +, +    public Object unwrap() {, +        return list;, +    }, +, +    /* (non-Javadoc), +     * @see org.mozilla.javascript.Scriptable#getClassName(), +     */, +, +    public String getClassName() {, +        return "NativeList";, +    }, +, +    /* (non-Javadoc), +     * @see org.mozilla.javascript.Scriptable#get(java.lang.String, org.mozilla.javascript.Scriptable), +     */, +, +    public Object get(String name, Scriptable start) {, +        if ("length".equals(name)) {, +            return list.size();, +        } else {, +            return Undefined.instance;, +        }, +    }, +, +    /* (non-Javadoc), +     * @see org.mozilla.javascript.Scriptable#get(int, org.mozilla.javascript.Scriptable), +     */, +, +    public Object get(int index, Scriptable start) {, +        if (index < 0 || index >= list.size()) {, +            return Undefined.instance;, +        }, +        return list.get(index);, +    }, +, +    /* (non-Javadoc)]