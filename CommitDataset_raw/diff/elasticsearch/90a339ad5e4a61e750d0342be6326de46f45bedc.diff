[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/datehistogram/DateHistogramFacet.java, +                // push nulls to the end, +                if (o1 == null) {, +                    return 1;, +                }, +                if (o2 == null) {, +                    return -1;, +                }, +                // push nulls to the end, +                if (o1 == null) {, +                    return 1;, +                }, +                if (o2 == null) {, +                    return -1;, +                }, +                // push nulls to the end, +                if (o1 == null) {, +                    return 1;, +                }, +                if (o2 == null) {, +                    return -1;, +                }, +         * The total count of values aggregated to compute the total., +         */, +        long totalCount();, +, +        /**, +         * The total count of values aggregated to compute the total., +         */, +        long getTotalCount();, +, +        /**, +, +        /**, +         * The minimum value., +         */, +        double min();, +, +        /**, +         * The minimum value., +         */, +        double getMin();, +, +        /**, +         * The maximum value., +         */, +        double max();, +, +        /**, +         * The maximum value., +         */, +        double getMax();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/datehistogram/DateHistogramFacet.java, +                // push nulls to the end, +                if (o1 == null) {, +                    return 1;, +                }, +                if (o2 == null) {, +                    return -1;, +                }, +                // push nulls to the end, +                if (o1 == null) {, +                    return 1;, +                }, +                if (o2 == null) {, +                    return -1;, +                }, +                // push nulls to the end, +                if (o1 == null) {, +                    return 1;, +                }, +                if (o2 == null) {, +                    return -1;, +                }, +         * The total count of values aggregated to compute the total., +         */, +        long totalCount();, +, +        /**, +         * The total count of values aggregated to compute the total., +         */, +        long getTotalCount();, +, +        /**, +, +        /**, +         * The minimum value., +         */, +        double min();, +, +        /**, +         * The minimum value., +         */, +        double getMin();, +, +        /**, +         * The maximum value., +         */, +        double max();, +]