[+++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/UnresolvedFunction.java, +    /**, +     * Flag to indicate analysis has been applied and there's no point in, +     * doing it again this is an optimization to prevent searching for a, +     * better unresolved message over and over again., +     */, +     * Constructor used for specifying a more descriptive message (typically, +     * 'did you mean') instead of the default one., +    public UnresolvedFunction(Location location, String name, boolean distinct, List<Expression> children,, +            boolean analyzed, String unresolvedMessage) {, +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/UnresolvedFunction.java, +    /**, +     * Flag to indicate analysis has been applied and there's no point in, +     * doing it again this is an optimization to prevent searching for a, +     * better unresolved message over and over again., +     */, +     * Constructor used for specifying a more descriptive message (typically, +     * 'did you mean') instead of the default one., +    public UnresolvedFunction(Location location, String name, boolean distinct, List<Expression> children,, +            boolean analyzed, String unresolvedMessage) {, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/aggregate/AggregateFunctionAttribute.java, +    AggregateFunctionAttribute(Location location, String name, DataType dataType, ExpressionId id,, +            String functionId, String propertyPath) {, +    AggregateFunctionAttribute(Location location, String name, DataType dataType, String qualifier,, +            boolean nullable, ExpressionId id, boolean synthetic, String functionId, String propertyPath) {, +    protected Attribute clone(Location location, String name, DataType dataType, String qualifier,, +            boolean nullable, ExpressionId id, boolean synthetic) {, +        return new AggregateFunctionAttribute(location(), name(), dataType(), qualifier(), nullable(),, +                id(), synthetic(), functionId, propertyPath);, +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/UnresolvedFunction.java, +    /**, +     * Flag to indicate analysis has been applied and there's no point in, +     * doing it again this is an optimization to prevent searching for a, +     * better unresolved message over and over again., +     */, +     * Constructor used for specifying a more descriptive message (typically, +     * 'did you mean') instead of the default one., +    public UnresolvedFunction(Location location, String name, boolean distinct, List<Expression> children,, +            boolean analyzed, String unresolvedMessage) {, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/aggregate/AggregateFunctionAttribute.java, +    AggregateFunctionAttribute(Location location, String name, DataType dataType, ExpressionId id,, +            String functionId, String propertyPath) {, +    AggregateFunctionAttribute(Location location, String name, DataType dataType, String qualifier,, +            boolean nullable, ExpressionId id, boolean synthetic, String functionId, String propertyPath) {, +    protected Attribute clone(Location location, String name, DataType dataType, String qualifier,, +            boolean nullable, ExpressionId id, boolean synthetic) {, +        return new AggregateFunctionAttribute(location(), name(), dataType(), qualifier(), nullable(),, +                id(), synthetic(), functionId, propertyPath);, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/aggregate/InnerAggregate.java, +        return new AggregateFunctionAttribute(location(), name(), dataType(), outer.id(), functionId(),, +                AggPath.metricValue(functionId(), innerId));, +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/UnresolvedFunction.java, +    /**, +     * Flag to indicate analysis has been applied and there's no point in, +     * doing it again this is an optimization to prevent searching for a, +     * better unresolved message over and over again., +     */, +     * Constructor used for specifying a more descriptive message (typically, +     * 'did you mean') instead of the default one., +    public UnresolvedFunction(Location location, String name, boolean distinct, List<Expression> children,, +            boolean analyzed, String unresolvedMessage) {, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/aggregate/AggregateFunctionAttribute.java, +    AggregateFunctionAttribute(Location location, String name, DataType dataType, ExpressionId id,, +            String functionId, String propertyPath) {, +    AggregateFunctionAttribute(Location location, String name, DataType dataType, String qualifier,, +            boolean nullable, ExpressionId id, boolean synthetic, String functionId, String propertyPath) {, +    protected Attribute clone(Location location, String name, DataType dataType, String qualifier,, +            boolean nullable, ExpressionId id, boolean synthetic) {, +        return new AggregateFunctionAttribute(location(), name(), dataType(), qualifier(), nullable(),, +                id(), synthetic(), functionId, propertyPath);, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/aggregate/InnerAggregate.java, +        return new AggregateFunctionAttribute(location(), name(), dataType(), outer.id(), functionId(),, +                AggPath.metricValue(functionId(), innerId));, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/Cast.java, +        return new UnaryProcessorDefinition(this, ProcessorDefinitions.toProcessorDefinition(field()),, +                new CastProcessor(DataTypeConversion.conversionFor(from(), to())));, +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/UnresolvedFunction.java, +    /**, +     * Flag to indicate analysis has been applied and there's no point in, +     * doing it again this is an optimization to prevent searching for a, +     * better unresolved message over and over again., +     */, +     * Constructor used for specifying a more descriptive message (typically, +     * 'did you mean') instead of the default one., +    public UnresolvedFunction(Location location, String name, boolean distinct, List<Expression> children,, +            boolean analyzed, String unresolvedMessage) {, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/expression/function/aggregate/AggregateFunctionAttribute.java, +    AggregateFunctionAttribute(Location location, String name, DataType dataType, ExpressionId id,, +            String functionId, String propertyPath) {, +    AggregateFunctionAttribute(Location location, String name, DataType dataType, String qualifier,, +            boolean nullable, ExpressionId id, boolean synthetic, String functionId, String propertyPath) {, +    protected Attribute clone(Location location, String name, DataType dataType, String qualifier,, +            boolean nullable, ExpressionId id, boolean synthetic) {, +        return new AggregateFunctionAttribute(location(), name(), dataType(), qualifier(), nullable(),]