[+++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +            this.type = Objects.requireNonNull(type);, +            this.id = Objects.requireNonNull(id);, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +            this.type = Objects.requireNonNull(type);, +            this.id = Objects.requireNonNull(id);, +++ b/core/src/main/java/org/elasticsearch/index/translog/Translog.java, +import org.elasticsearch.index.mapper.Uid;, +import java.util.Objects;, +        private final long seqNo;, +        private final long primaryTerm;, +            } else {, +                seqNo = SequenceNumbersService.UNASSIGNED_SEQ_NO;, +                primaryTerm = 0;, +            this.primaryTerm = 0;, +        public static final int FORMAT_5_0 = 2; // 5.0 - 5.5, +        private static final int FORMAT_SINGLE_TYPE = FORMAT_5_0 + 1; // 5.5 - 6.0, +        private static final int FORMAT_SEQ_NO = FORMAT_SINGLE_TYPE + 1; // 6.0 - *, +        private final String type, id;, +        private final Term uid;, +        private final long seqNo;, +        private final long primaryTerm;, +        private final long version;, +        private final VersionType versionType;, +            assert format >= FORMAT_5_0 : "format was: " + format;, +            if (format >= FORMAT_SINGLE_TYPE) {, +                type = in.readString();, +                id = in.readString();, +            } else {, +                uid = new Term(in.readString(), in.readString());, +                // the uid was constructed from the type and id so we can, +                // extract them back, +                Uid uidObject = Uid.createUid(uid.text());, +                type = uidObject.type();, +                id = uidObject.id();, +            }, +            } else {, +                seqNo = SequenceNumbersService.UNASSIGNED_SEQ_NO;, +                primaryTerm = 0;, +            this.type = Objects.requireNonNull(type);, +            this.id = Objects.requireNonNull(id);, +            out.writeString(type);, +            out.writeString(id);, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +            this.type = Objects.requireNonNull(type);, +            this.id = Objects.requireNonNull(id);, +++ b/core/src/main/java/org/elasticsearch/index/translog/Translog.java, +import org.elasticsearch.index.mapper.Uid;, +import java.util.Objects;, +        private final long seqNo;, +        private final long primaryTerm;, +            } else {, +                seqNo = SequenceNumbersService.UNASSIGNED_SEQ_NO;, +                primaryTerm = 0;, +            this.primaryTerm = 0;, +        public static final int FORMAT_5_0 = 2; // 5.0 - 5.5, +        private static final int FORMAT_SINGLE_TYPE = FORMAT_5_0 + 1; // 5.5 - 6.0, +        private static final int FORMAT_SEQ_NO = FORMAT_SINGLE_TYPE + 1; // 6.0 - *, +        private final String type, id;, +        private final Term uid;, +        private final long seqNo;, +        private final long primaryTerm;, +        private final long version;, +        private final VersionType versionType;, +            assert format >= FORMAT_5_0 : "format was: " + format;, +            if (format >= FORMAT_SINGLE_TYPE) {, +                type = in.readString();, +                id = in.readString();, +            } else {, +                uid = new Term(in.readString(), in.readString());, +                // the uid was constructed from the type and id so we can, +                // extract them back, +                Uid uidObject = Uid.createUid(uid.text());, +                type = uidObject.type();, +                id = uidObject.id();, +            }, +            } else {, +                seqNo = SequenceNumbersService.UNASSIGNED_SEQ_NO;, +                primaryTerm = 0;, +            this.type = Objects.requireNonNull(type);, +            this.id = Objects.requireNonNull(id);, +            out.writeString(type);, +            out.writeString(id);, +++ b/core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +        engine.delete(new Engine.Delete("doc", "1", newUid(doc)));, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +            this.type = Objects.requireNonNull(type);, +            this.id = Objects.requireNonNull(id);, +++ b/core/src/main/java/org/elasticsearch/index/translog/Translog.java, +import org.elasticsearch.index.mapper.Uid;, +import java.util.Objects;, +        private final long seqNo;, +        private final long primaryTerm;, +            } else {, +                seqNo = SequenceNumbersService.UNASSIGNED_SEQ_NO;, +                primaryTerm = 0;, +            this.primaryTerm = 0;, +        public static final int FORMAT_5_0 = 2; // 5.0 - 5.5, +        private static final int FORMAT_SINGLE_TYPE = FORMAT_5_0 + 1; // 5.5 - 6.0, +        private static final int FORMAT_SEQ_NO = FORMAT_SINGLE_TYPE + 1; // 6.0 - *]