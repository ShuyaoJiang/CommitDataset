[+++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java, +        private ImmutableOpenMap.Builder<String, IndexRoutingTable> indicesRouting = ImmutableOpenMap.builder();, +            if (indicesRouting == null) {, +                throw new IllegalStateException("once build is called the builder cannot be reused");, +            }, +            if (indicesRouting == null) {, +                throw new IllegalStateException("once build is called the builder cannot be reused");, +            }, +            if (indicesRouting == null) {, +                throw new IllegalStateException("once build is called the builder cannot be reused");, +            }, +            if (indicesRouting == null) {, +                throw new IllegalStateException("once build is called the builder cannot be reused");, +            }, +         * Builds the routing table. Note that once this is called the builder, +         * must be thrown away. If you need to build a new RoutingTable as a, +         * copy of this one you'll need to build a new RoutingTable.Builder., +            if (indicesRouting == null) {, +                throw new IllegalStateException("once build is called the builder cannot be reused");, +            }, +            RoutingTable table = new RoutingTable(version, indicesRouting.build());, +            indicesRouting = null;, +            return table;, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java, +        private ImmutableOpenMap.Builder<String, IndexRoutingTable> indicesRouting = ImmutableOpenMap.builder();, +            if (indicesRouting == null) {, +                throw new IllegalStateException("once build is called the builder cannot be reused");, +            }, +            if (indicesRouting == null) {, +                throw new IllegalStateException("once build is called the builder cannot be reused");, +            }, +            if (indicesRouting == null) {, +                throw new IllegalStateException("once build is called the builder cannot be reused");, +            }, +            if (indicesRouting == null) {, +                throw new IllegalStateException("once build is called the builder cannot be reused");, +            }, +         * Builds the routing table. Note that once this is called the builder, +         * must be thrown away. If you need to build a new RoutingTable as a, +         * copy of this one you'll need to build a new RoutingTable.Builder., +            if (indicesRouting == null) {, +                throw new IllegalStateException("once build is called the builder cannot be reused");, +            }, +            RoutingTable table = new RoutingTable(version, indicesRouting.build());, +            indicesRouting = null;, +            return table;, +++ b/core/src/test/java/org/elasticsearch/cluster/routing/RoutingTableTests.java, +import static org.hamcrest.Matchers.containsString;, +    @Override, +, +    public void testRoutingTableBuiltMoreThanOnce() {, +        RoutingTable.Builder b = RoutingTable.builder();, +        b.build(); // Ok the first time, +        try {, +            b.build();, +            fail("expected exception");, +        } catch (IllegalStateException e) {, +            assertThat(e.getMessage(), containsString("cannot be reused"));, +        }, +        try {, +            b.add((IndexRoutingTable) null);, +            fail("expected exception");, +        } catch (IllegalStateException e) {, +            assertThat(e.getMessage(), containsString("cannot be reused"));, +        }, +        try {, +            b.updateNumberOfReplicas(1, "foo");, +            fail("expected exception");, +        } catch (IllegalStateException e) {, +            assertThat(e.getMessage(), containsString("cannot be reused"));, +        }, +        try {, +            b.remove("foo");, +            fail("expected exception");, +        } catch (IllegalStateException e) {, +            assertThat(e.getMessage(), containsString("cannot be reused"));, +        }, +, +    }]