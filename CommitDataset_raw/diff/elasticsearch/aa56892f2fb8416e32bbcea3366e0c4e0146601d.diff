[+++ b/x-pack/plugin/ccr/build.gradle, +    exclude '**/CcrRestIT.class', +integTestCluster {, +    distribution 'zip', +    setting 'xpack.ml.enabled', 'false', +    setting 'xpack.monitoring.enabled', 'false', +    setting 'xpack.security.enabled', 'true', +    setting 'xpack.license.self_generated.type', 'trial', +    // TODO: reduce the need for superuser here, +    setupCommand 'setup-ccr-user',, +            'bin/elasticsearch-users', 'useradd', 'ccr-user', '-p', 'ccr-user-password', '-r', 'superuser', +    waitCondition = { node, ant ->, +        File tmpFile = new File(node.cwd, 'wait.success'), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow",, +                dest: tmpFile.toString(),, +                username: 'ccr-user',, +                password: 'ccr-user-password',, +                ignoreerrors: true,, +                retries: 10), +        return tmpFile.exists(), +    }, +}, +, +++ b/x-pack/plugin/ccr/build.gradle, +    exclude '**/CcrRestIT.class', +integTestCluster {, +    distribution 'zip', +    setting 'xpack.ml.enabled', 'false', +    setting 'xpack.monitoring.enabled', 'false', +    setting 'xpack.security.enabled', 'true', +    setting 'xpack.license.self_generated.type', 'trial', +    // TODO: reduce the need for superuser here, +    setupCommand 'setup-ccr-user',, +            'bin/elasticsearch-users', 'useradd', 'ccr-user', '-p', 'ccr-user-password', '-r', 'superuser', +    waitCondition = { node, ant ->, +        File tmpFile = new File(node.cwd, 'wait.success'), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow",, +                dest: tmpFile.toString(),, +                username: 'ccr-user',, +                password: 'ccr-user-password',, +                ignoreerrors: true,, +                retries: 10), +        return tmpFile.exists(), +    }, +}, +, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/CcrRestIT.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +, +package org.elasticsearch.xpack.ccr;, +, +import com.carrotsearch.randomizedtesting.annotations.ParametersFactory;, +import org.elasticsearch.common.settings.SecureString;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.util.concurrent.ThreadContext;, +import org.elasticsearch.test.rest.yaml.ClientYamlTestCandidate;, +import org.elasticsearch.test.rest.yaml.ESClientYamlSuiteTestCase;, +import org.elasticsearch.xpack.test.rest.XPackRestTestHelper;, +import org.junit.After;, +, +import static org.elasticsearch.xpack.core.security.authc.support.UsernamePasswordToken.basicAuthHeaderValue;, +, +public class CcrRestIT extends ESClientYamlSuiteTestCase {, +, +    public CcrRestIT(final ClientYamlTestCandidate testCandidate) {, +        super(testCandidate);, +    }, +, +    @ParametersFactory, +    public static Iterable<Object[]> parameters() throws Exception {, +        return ESClientYamlSuiteTestCase.createParameters();, +    }, +, +    @Override, +    protected Settings restClientSettings() {, +        final String ccrUserAuthHeaderValue = basicAuthHeaderValue("ccr-user", new SecureString("ccr-user-password".toCharArray()));, +        return Settings.builder().put(ThreadContext.PREFIX + ".Authorization", ccrUserAuthHeaderValue).build();, +    }, +, +    @After, +    public void cleanup() throws Exception {, +        XPackRestTestHelper.waitForPendingTasks(adminClient());, +    }, +, +}, +++ b/x-pack/plugin/ccr/build.gradle, +    exclude '**/CcrRestIT.class', +integTestCluster {, +    distribution 'zip', +    setting 'xpack.ml.enabled', 'false', +    setting 'xpack.monitoring.enabled', 'false', +    setting 'xpack.security.enabled', 'true', +    setting 'xpack.license.self_generated.type', 'trial', +    // TODO: reduce the need for superuser here, +    setupCommand 'setup-ccr-user',, +            'bin/elasticsearch-users', 'useradd', 'ccr-user', '-p', 'ccr-user-password', '-r', 'superuser']