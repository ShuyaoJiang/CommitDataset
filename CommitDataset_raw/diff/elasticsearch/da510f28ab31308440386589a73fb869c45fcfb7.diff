[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.admin.cluster.health.TransportClusterHealthAction;, +        bind(TransportClusterHealthAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.admin.cluster.health.TransportClusterHealthAction;, +        bind(TransportClusterHealthAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActions.java, +            public static final String HEALTH = "/cluster/health";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.admin.cluster.health.TransportClusterHealthAction;, +        bind(TransportClusterHealthAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActions.java, +            public static final String HEALTH = "/cluster/health";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequest.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.action.admin.cluster.health;, +, +import org.elasticsearch.action.ActionRequestValidationException;, +import org.elasticsearch.action.support.master.MasterNodeOperationRequest;, +import org.elasticsearch.util.Strings;, +import org.elasticsearch.util.TimeValue;, +, +import java.io.DataInput;, +import java.io.DataOutput;, +import java.io.IOException;, +import java.util.concurrent.TimeUnit;, +, +import static org.elasticsearch.util.TimeValue.*;, +, +/**, + * @author kimchy (shay.banon), + */, +public class ClusterHealthRequest extends MasterNodeOperationRequest {, +, +    private String[] indices;, +, +    private TimeValue timeout = new TimeValue(30, TimeUnit.SECONDS);, +, +    private ClusterHealthStatus waitForStatus;, +, +    private int waitForRelocatingShards = -1;, +, +    ClusterHealthRequest() {, +    }, +, +    public ClusterHealthRequest(String... indices) {, +        this.indices = indices;, +    }, +, +    public String[] indices() {, +        return indices;, +    }, +, +    public TimeValue timeout() {, +        return timeout;, +    }, +, +    public ClusterHealthRequest timeout(TimeValue timeout) {, +        this.timeout = timeout;, +        return this;, +    }, +, +    public ClusterHealthStatus waitForStatus() {, +        return waitForStatus;, +    }, +, +    public ClusterHealthRequest waitForStatus(ClusterHealthStatus waitForStatus) {, +        this.waitForStatus = waitForStatus;, +        return this;, +    }, +, +    public ClusterHealthRequest waitForGreenStatus() {, +        return waitForStatus(ClusterHealthStatus.GREEN);, +    }, +, +    public ClusterHealthRequest waitForYellowStatus() {, +        return waitForStatus(ClusterHealthStatus.YELLOW);, +    }, +, +    public int waitForRelocatingShards() {, +        return waitForRelocatingShards;, +    }]