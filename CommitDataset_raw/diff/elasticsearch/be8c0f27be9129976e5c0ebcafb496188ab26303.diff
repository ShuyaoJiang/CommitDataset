[+++ b/qa/rolling-upgrade/build.gradle, +  /*, +   * The goal here is to:, +   * <ul>, +   *  <li>start three nodes on the old version, +   *  <li>run tests with systemProperty 'tests.rest.suite', 'old_cluster', +   *  <li>shut down one node, +   *  <li>start a node with the new version, +   *  <li>run tests with systemProperty 'tests.rest.suite', 'mixed_cluster', +   *  <li>shut down one node on the old version, +   *  <li>start a node with the new version, +   *  <li>run tests with systemProperty 'tests.rest.suite', 'mixed_cluster' again, +   *  <li>shut down the last node with the old version, +   *  <li>start a node with the new version, +   *  <li>run tests with systemProperty 'tests.rest.suite', 'upgraded_cluster', +   *  <li>shut down the entire cluster, +   * </ul>, +   *, +   * Be careful: gradle dry run spits out tasks in the wrong order but,, +   * strangely, running the tasks works properly., +   */, +    numBwcNodes = 3, +    numNodes = 3, +  Closure configureUpgradeCluster = {String name, Task lastRunner, int stopNode, Closure unicastSeed ->, +    configure(extensions.findByName("${baseName}#${name}")) {, +      dependsOn lastRunner, "${baseName}#oldClusterTestCluster#node${stopNode}.stop", +      unicastTransportUri = { seedNode, node, ant -> unicastSeed() }, +      minimumMasterNodes = { 3 }, +      dataDir = { nodeNumber -> oldClusterTest.nodes[stopNode].dataDir }, +  }, +  Task oneThirdUpgradedTest = tasks.create(name: "${baseName}#oneThirdUpgradedTest", type: RestIntegTestTask), +, +  configureUpgradeCluster("oneThirdUpgradedTestCluster", oldClusterTestRunner,, +      0, { oldClusterTest.nodes.get(1).transportUri() }), +, +  Task oneThirdUpgradedTestRunner = tasks.getByName("${baseName}#oneThirdUpgradedTestRunner"), +  oneThirdUpgradedTestRunner.configure {, +    systemProperty 'tests.first_round', 'true', +    finalizedBy "${baseName}#oldClusterTestCluster#node1.stop", +  }, +, +  Task twoThirdsUpgradedTest = tasks.create(name: "${baseName}#twoThirdsUpgradedTest", type: RestIntegTestTask), +, +  configureUpgradeCluster("twoThirdsUpgradedTestCluster", oneThirdUpgradedTestRunner,, +      1, { oneThirdUpgradedTest.nodes.get(0).transportUri() }), +, +  Task twoThirdsUpgradedTestRunner = tasks.getByName("${baseName}#twoThirdsUpgradedTestRunner"), +  twoThirdsUpgradedTestRunner.configure {, +    systemProperty 'tests.rest.suite', 'mixed_cluster', +    systemProperty 'tests.first_round', 'false', +    finalizedBy "${baseName}#oldClusterTestCluster#node2.stop", +  configureUpgradeCluster("upgradedClusterTestCluster", twoThirdsUpgradedTestRunner,, +      2, { twoThirdsUpgradedTest.nodes.get(0).transportUri() }), +    /*, +     * Force stopping all the upgraded nodes after the test runner, +     * so they are alive during the test., +     */, +    finalizedBy "${baseName}#oneThirdUpgradedTestCluster#stop", +    finalizedBy "${baseName}#twoThirdsUpgradedTestCluster#stop", +++ b/qa/rolling-upgrade/build.gradle, +  /*, +   * The goal here is to:, +   * <ul>, +   *  <li>start three nodes on the old version, +   *  <li>run tests with systemProperty 'tests.rest.suite', 'old_cluster', +   *  <li>shut down one node, +   *  <li>start a node with the new version, +   *  <li>run tests with systemProperty 'tests.rest.suite', 'mixed_cluster', +   *  <li>shut down one node on the old version, +   *  <li>start a node with the new version, +   *  <li>run tests with systemProperty 'tests.rest.suite', 'mixed_cluster' again, +   *  <li>shut down the last node with the old version, +   *  <li>start a node with the new version, +   *  <li>run tests with systemProperty 'tests.rest.suite', 'upgraded_cluster', +   *  <li>shut down the entire cluster, +   * </ul>, +   *, +   * Be careful: gradle dry run spits out tasks in the wrong order but,, +   * strangely, running the tasks works properly., +   */, +    numBwcNodes = 3, +    numNodes = 3, +  Closure configureUpgradeCluster = {String name, Task lastRunner, int stopNode, Closure unicastSeed ->, +    configure(extensions.findByName("${baseName}#${name}")) {, +      dependsOn lastRunner, "${baseName}#oldClusterTestCluster#node${stopNode}.stop", +      unicastTransportUri = { seedNode, node, ant -> unicastSeed() }, +      minimumMasterNodes = { 3 }, +      dataDir = { nodeNumber -> oldClusterTest.nodes[stopNode].dataDir }, +  }, +  Task oneThirdUpgradedTest = tasks.create(name: "${baseName}#oneThirdUpgradedTest", type: RestIntegTestTask), +, +  configureUpgradeCluster("oneThirdUpgradedTestCluster", oldClusterTestRunner,, +      0, { oldClusterTest.nodes.get(1).transportUri() }), +, +  Task oneThirdUpgradedTestRunner = tasks.getByName("${baseName}#oneThirdUpgradedTestRunner"), +  oneThirdUpgradedTestRunner.configure {, +    systemProperty 'tests.first_round', 'true', +    finalizedBy "${baseName}#oldClusterTestCluster#node1.stop", +  }, +]