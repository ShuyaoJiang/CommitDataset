[+++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                assert currentRouting.isRelocationTarget()  == false || currentRouting.primary() == false ||, +                        replicationTracker.isPrimaryMode() :, +                    "a primary relocation is completed by the master, but primary mode is not active " + currentRouting;, +                if (newPrimaryTerm == primaryTerm) {, +                    if (currentRouting.initializing() && currentRouting.isRelocationTarget() == false && newRouting.active()) {, +                        // the master started a recovering primary, activate primary mode., +                        replicationTracker.activatePrimaryMode(getLocalCheckpoint());, +                    }, +                } else {, +, +            assert this.shardRouting.primary() == false ||, +                this.shardRouting.started() == false || // note that we use started and not active to avoid relocating shards, +                this.replicationTracker.isPrimaryMode(), +                : "an started primary must be in primary mode " + this.shardRouting;, +++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                assert currentRouting.isRelocationTarget()  == false || currentRouting.primary() == false ||, +                        replicationTracker.isPrimaryMode() :, +                    "a primary relocation is completed by the master, but primary mode is not active " + currentRouting;, +                if (newPrimaryTerm == primaryTerm) {, +                    if (currentRouting.initializing() && currentRouting.isRelocationTarget() == false && newRouting.active()) {, +                        // the master started a recovering primary, activate primary mode., +                        replicationTracker.activatePrimaryMode(getLocalCheckpoint());, +                    }, +                } else {, +, +            assert this.shardRouting.primary() == false ||, +                this.shardRouting.started() == false || // note that we use started and not active to avoid relocating shards, +                this.replicationTracker.isPrimaryMode(), +                : "an started primary must be in primary mode " + this.shardRouting;, +++ b/server/src/test/java/org/elasticsearch/index/replication/IndexLevelReplicationTests.java, +            recoverReplica(replica3, replica2, true);, +++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                assert currentRouting.isRelocationTarget()  == false || currentRouting.primary() == false ||, +                        replicationTracker.isPrimaryMode() :, +                    "a primary relocation is completed by the master, but primary mode is not active " + currentRouting;, +                if (newPrimaryTerm == primaryTerm) {, +                    if (currentRouting.initializing() && currentRouting.isRelocationTarget() == false && newRouting.active()) {, +                        // the master started a recovering primary, activate primary mode., +                        replicationTracker.activatePrimaryMode(getLocalCheckpoint());, +                    }, +                } else {, +, +            assert this.shardRouting.primary() == false ||, +                this.shardRouting.started() == false || // note that we use started and not active to avoid relocating shards, +                this.replicationTracker.isPrimaryMode(), +                : "an started primary must be in primary mode " + this.shardRouting;, +++ b/server/src/test/java/org/elasticsearch/index/replication/IndexLevelReplicationTests.java, +            recoverReplica(replica3, replica2, true);, +++ b/server/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +        allowShardFailures();, +        final IndexShard indexShard = newShard(false);, +        recoveryEmptyReplica(indexShard, randomBoolean());, +        promoteReplica(indexShard, Collections.singleton(replicaRouting.allocationId().getId()),, +            new IndexShardRoutingTable.Builder(replicaRouting.shardId()).addShard(replicaRouting).build());, +, +    public void testPublishingOrderOnPromotion() throws IOException, InterruptedException, BrokenBarrierException {, +        final IndexShard indexShard = newShard(false);, +        recoveryEmptyReplica(indexShard, randomBoolean());, +        final ShardRouting replicaRouting = indexShard.routingEntry();, +        promoteReplica(indexShard, Collections.singleton(replicaRouting.allocationId().getId()),, +            new IndexShardRoutingTable.Builder(replicaRouting.shardId()).addShard(replicaRouting).build());, +        final IndexShard indexShard = newShard(false);, +        recoveryEmptyReplica(indexShard, randomBoolean());, +        promoteReplica(indexShard, Collections.singleton(replicaRouting.allocationId().getId()),, +            new IndexShardRoutingTable.Builder(replicaRouting.shardId()).addShard(replicaRouting).build());, +                        throw new AssertionError(e);, +        recoverReplica(replicaShard, primaryShard, true);, +        recoverReplica(primaryTarget, primarySource, true);, +            }, true, true);, +            }, false, true);, +            }, false, true);, +++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                assert currentRouting.isRelocationTarget()  == false || currentRouting.primary() == false ||, +                        replicationTracker.isPrimaryMode() :, +                    "a primary relocation is completed by the master, but primary mode is not active " + currentRouting;, +                if (newPrimaryTerm == primaryTerm) {, +                    if (currentRouting.initializing() && currentRouting.isRelocationTarget() == false && newRouting.active()) {, +                        // the master started a recovering primary, activate primary mode., +                        replicationTracker.activatePrimaryMode(getLocalCheckpoint());, +                    }, +                } else {, +, +            assert this.shardRouting.primary() == false ||, +                this.shardRouting.started() == false || // note that we use started and not active to avoid relocating shards, +                this.replicationTracker.isPrimaryMode(), +                : "an started primary must be in primary mode " + this.shardRouting;, +++ b/server/src/test/java/org/elasticsearch/index/replication/IndexLevelReplicationTests.java, +            recoverReplica(replica3, replica2, true);, +++ b/server/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +        allowShardFailures();, +        final IndexShard indexShard = newShard(false);, +        recoveryEmptyReplica(indexShard, randomBoolean());, +        promoteReplica(indexShard, Collections.singleton(replicaRouting.allocationId().getId()),, +            new IndexShardRoutingTable.Builder(replicaRouting.shardId()).addShard(replicaRouting).build());, +, +    public void testPublishingOrderOnPromotion() throws IOException, InterruptedException, BrokenBarrierException {, +        final IndexShard indexShard = newShard(false);, +        recoveryEmptyReplica(indexShard, randomBoolean());, +        final ShardRouting replicaRouting = indexShard.routingEntry();]