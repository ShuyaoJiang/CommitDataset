[+++ b/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +            final IndexRequest indexRequest = request.upsertRequest();, +                    if (request.fields() != null && request.fields().length > 0) {, +                        Tuple<XContentType, Map<String, Object>> sourceAndContent = XContentHelper.convertToMap(updateSourceBytes, true);, +                        update.getResult(extractGetResult(request, response.version(), sourceAndContent.v2(), sourceAndContent.v1(), updateSourceBytes));, +                    } else {, +                    }, +++ b/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +            final IndexRequest indexRequest = request.upsertRequest();, +                    if (request.fields() != null && request.fields().length > 0) {, +                        Tuple<XContentType, Map<String, Object>> sourceAndContent = XContentHelper.convertToMap(updateSourceBytes, true);, +                        update.getResult(extractGetResult(request, response.version(), sourceAndContent.v2(), sourceAndContent.v1(), updateSourceBytes));, +                    } else {, +                    }, +++ b/src/test/java/org/elasticsearch/test/integration/update/UpdateTests.java, +    public void testUpsertFields() throws Exception {, +        createIndex();, +        ClusterHealthResponse clusterHealth = client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();, +        assertThat(clusterHealth.timedOut(), equalTo(false));, +        assertThat(clusterHealth.status(), equalTo(ClusterHealthStatus.GREEN));, +, +        UpdateResponse updateResponse = client.prepareUpdate("test", "type1", "1"), +                .setUpsert(XContentFactory.jsonBuilder().startObject().field("bar", "baz").endObject()), +                .setScript("ctx._source.extra = \"foo\""), +                .setFields("_source"), +                .execute().actionGet();, +, +        assertThat(updateResponse.getGetResult(), notNullValue());, +        assertThat(updateResponse.getGetResult().sourceAsMap().get("bar").toString(), equalTo("baz"));, +        assertThat(updateResponse.getGetResult().sourceAsMap().get("extra"), nullValue());, +, +        updateResponse = client.prepareUpdate("test", "type1", "1"), +                .setUpsert(XContentFactory.jsonBuilder().startObject().field("bar", "baz").endObject()), +                .setScript("ctx._source.extra = \"foo\""), +                .setFields("_source"), +                .execute().actionGet();, +, +        assertThat(updateResponse.getGetResult(), notNullValue());, +        assertThat(updateResponse.getGetResult().sourceAsMap().get("bar").toString(), equalTo("baz"));, +        assertThat(updateResponse.getGetResult().sourceAsMap().get("extra").toString(), equalTo("foo"));, +    }, +, +    @Test]