[+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            mapperService.merge(MapperService.DEFAULT_MAPPING, new CompressedXContent(XContentFactory.jsonBuilder().map(mappings.get(MapperService.DEFAULT_MAPPING)).string()), false, request.updateAllTypes());, +                            mapperService.merge(entry.getKey(), new CompressedXContent(XContentFactory.jsonBuilder().map(entry.getValue()).string()), true, request.updateAllTypes());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            mapperService.merge(MapperService.DEFAULT_MAPPING, new CompressedXContent(XContentFactory.jsonBuilder().map(mappings.get(MapperService.DEFAULT_MAPPING)).string()), false, request.updateAllTypes());, +                            mapperService.merge(entry.getKey(), new CompressedXContent(XContentFactory.jsonBuilder().map(entry.getValue()).string()), true, request.updateAllTypes());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                                            if (indexMetaData.getMappings().containsKey(MapperService.DEFAULT_MAPPING)) {, +                                                indexService.mapperService().merge(MapperService.DEFAULT_MAPPING, indexMetaData.getMappings().get(MapperService.DEFAULT_MAPPING).source(), false, false);, +                                            }, +                                                indexService.mapperService().merge(mappingMetaData.type(), mappingMetaData.source(), false, false);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            mapperService.merge(MapperService.DEFAULT_MAPPING, new CompressedXContent(XContentFactory.jsonBuilder().map(mappings.get(MapperService.DEFAULT_MAPPING)).string()), false, request.updateAllTypes());, +                            mapperService.merge(entry.getKey(), new CompressedXContent(XContentFactory.jsonBuilder().map(entry.getValue()).string()), true, request.updateAllTypes());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                                            if (indexMetaData.getMappings().containsKey(MapperService.DEFAULT_MAPPING)) {, +                                                indexService.mapperService().merge(MapperService.DEFAULT_MAPPING, indexMetaData.getMappings().get(MapperService.DEFAULT_MAPPING).source(), false, false);, +                                            }, +                                                indexService.mapperService().merge(mappingMetaData.type(), mappingMetaData.source(), false, false);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +                        mapperService.merge(mappingMetaData.type(), mappingMetaData.source(), false, false);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            mapperService.merge(MapperService.DEFAULT_MAPPING, new CompressedXContent(XContentFactory.jsonBuilder().map(mappings.get(MapperService.DEFAULT_MAPPING)).string()), false, request.updateAllTypes());, +                            mapperService.merge(entry.getKey(), new CompressedXContent(XContentFactory.jsonBuilder().map(entry.getValue()).string()), true, request.updateAllTypes());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                                            if (indexMetaData.getMappings().containsKey(MapperService.DEFAULT_MAPPING)) {, +                                                indexService.mapperService().merge(MapperService.DEFAULT_MAPPING, indexMetaData.getMappings().get(MapperService.DEFAULT_MAPPING).source(), false, false);, +                                            }, +                                                indexService.mapperService().merge(mappingMetaData.type(), mappingMetaData.source(), false, false);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +                        mapperService.merge(mappingMetaData.type(), mappingMetaData.source(), false, false);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                    indexService.mapperService().merge(metaData.value.type(), metaData.value.source(), false, true);, +                                indexService.mapperService().merge(mapping.value.type(), mapping.value.source(), false, request.updateAllTypes());, +                DocumentMapper mergedMapper = indexService.mapperService().merge(mappingType, mappingUpdateSource, true, request.updateAllTypes());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            mapperService.merge(MapperService.DEFAULT_MAPPING, new CompressedXContent(XContentFactory.jsonBuilder().map(mappings.get(MapperService.DEFAULT_MAPPING)).string()), false, request.updateAllTypes());, +                            mapperService.merge(entry.getKey(), new CompressedXContent(XContentFactory.jsonBuilder().map(entry.getValue()).string()), true, request.updateAllTypes());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                                            if (indexMetaData.getMappings().containsKey(MapperService.DEFAULT_MAPPING)) {, +                                                indexService.mapperService().merge(MapperService.DEFAULT_MAPPING, indexMetaData.getMappings().get(MapperService.DEFAULT_MAPPING).source(), false, false);, +                                            }, +                                                indexService.mapperService().merge(mappingMetaData.type(), mappingMetaData.source(), false, false);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +                        mapperService.merge(mappingMetaData.type(), mappingMetaData.source(), false, false);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                    indexService.mapperService().merge(metaData.value.type(), metaData.value.source(), false, true);, +                                indexService.mapperService().merge(mapping.value.type(), mapping.value.source(), false, request.updateAllTypes());, +                DocumentMapper mergedMapper = indexService.mapperService().merge(mappingType, mappingUpdateSource, true, request.updateAllTypes());, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import org.elasticsearch.Version;, +import java.util.IdentityHashMap;, +    public DocumentMapper merge(String type, CompressedXContent mappingSource, boolean applyDefault, boolean updateAllTypes) {, +                applyDefault &= mappers.containsKey(type) == false;, +                return merge(parse(type, mappingSource, applyDefault), updateAllTypes);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            mapperService.merge(MapperService.DEFAULT_MAPPING, new CompressedXContent(XContentFactory.jsonBuilder().map(mappings.get(MapperService.DEFAULT_MAPPING)).string()), false, request.updateAllTypes());, +                            mapperService.merge(entry.getKey(), new CompressedXContent(XContentFactory.jsonBuilder().map(entry.getValue()).string()), true, request.updateAllTypes());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                                            if (indexMetaData.getMappings().containsKey(MapperService.DEFAULT_MAPPING)) {, +                                                indexService.mapperService().merge(MapperService.DEFAULT_MAPPING, indexMetaData.getMappings().get(MapperService.DEFAULT_MAPPING).source(), false, false);, +                                            }, +                                                indexService.mapperService().merge(mappingMetaData.type(), mappingMetaData.source(), false, false);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +                        mapperService.merge(mappingMetaData.type(), mappingMetaData.source(), false, false);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                    indexService.mapperService().merge(metaData.value.type(), metaData.value.source(), false, true);, +                                indexService.mapperService().merge(mapping.value.type(), mapping.value.source(), false, request.updateAllTypes());, +                DocumentMapper mergedMapper = indexService.mapperService().merge(mappingType, mappingUpdateSource, true, request.updateAllTypes());, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import org.elasticsearch.Version;, +import java.util.IdentityHashMap;, +    public DocumentMapper merge(String type, CompressedXContent mappingSource, boolean applyDefault, boolean updateAllTypes) {, +                applyDefault &= mappers.containsKey(type) == false;, +                return merge(parse(type, mappingSource, applyDefault), updateAllTypes);, +++ b/core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java, +                // we don't apply default, since it has been applied when the mappings were parsed initially, +                mapperService.merge(mappingType, mappingSource, false, true);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            mapperService.merge(MapperService.DEFAULT_MAPPING, new CompressedXContent(XContentFactory.jsonBuilder().map(mappings.get(MapperService.DEFAULT_MAPPING)).string()), false, request.updateAllTypes());, +                            mapperService.merge(entry.getKey(), new CompressedXContent(XContentFactory.jsonBuilder().map(entry.getValue()).string()), true, request.updateAllTypes());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                                            if (indexMetaData.getMappings().containsKey(MapperService.DEFAULT_MAPPING)) {, +                                                indexService.mapperService().merge(MapperService.DEFAULT_MAPPING, indexMetaData.getMappings().get(MapperService.DEFAULT_MAPPING).source(), false, false);, +                                            }, +                                                indexService.mapperService().merge(mappingMetaData.type(), mappingMetaData.source(), false, false);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +                        mapperService.merge(mappingMetaData.type(), mappingMetaData.source(), false, false);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                    indexService.mapperService().merge(metaData.value.type(), metaData.value.source(), false, true);, +                                indexService.mapperService().merge(mapping.value.type(), mapping.value.source(), false, request.updateAllTypes());, +                DocumentMapper mergedMapper = indexService.mapperService().merge(mappingType, mappingUpdateSource, true, request.updateAllTypes());, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import org.elasticsearch.Version;, +import java.util.IdentityHashMap;, +    public DocumentMapper merge(String type, CompressedXContent mappingSource, boolean applyDefault, boolean updateAllTypes) {, +                applyDefault &= mappers.containsKey(type) == false;, +                return merge(parse(type, mappingSource, applyDefault), updateAllTypes);, +++ b/core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java, +                // we don't apply default, since it has been applied when the mappings were parsed initially]