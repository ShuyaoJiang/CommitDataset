[+++ b/core/src/main/java/org/elasticsearch/search/highlight/HighlightBuilder.java, +     * Set this to true when using the highlighterType <tt>fvh</tt>, +     * When using the highlighterType <tt>fvh</tt> this setting, +     * When using the highlighterType <tt>fvh</tt> this setting, +     * Set type of highlighter to use. Out of the box supported types, +     * are <tt>plain</tt>, <tt>fvh</tt> and <tt>postings</tt>., +         * Set type of highlighter to use. Out of the box supported types, +         * are <tt>plain</tt>, <tt>fvh</tt> and <tt>postings</tt>., +++ b/core/src/main/java/org/elasticsearch/search/highlight/HighlightBuilder.java, +     * Set this to true when using the highlighterType <tt>fvh</tt>, +     * When using the highlighterType <tt>fvh</tt> this setting, +     * When using the highlighterType <tt>fvh</tt> this setting, +     * Set type of highlighter to use. Out of the box supported types, +     * are <tt>plain</tt>, <tt>fvh</tt> and <tt>postings</tt>., +         * Set type of highlighter to use. Out of the box supported types, +         * are <tt>plain</tt>, <tt>fvh</tt> and <tt>postings</tt>., +++ b/core/src/main/java/org/elasticsearch/search/highlight/Highlighters.java, +        this(Collections.emptyMap());, +        super("highlighter", Highlighter.class, new HashSet<>(Arrays.asList(FVH, PLAIN, POSTINGS)),, +++ b/core/src/main/java/org/elasticsearch/search/highlight/HighlightBuilder.java, +     * Set this to true when using the highlighterType <tt>fvh</tt>, +     * When using the highlighterType <tt>fvh</tt> this setting, +     * When using the highlighterType <tt>fvh</tt> this setting, +     * Set type of highlighter to use. Out of the box supported types, +     * are <tt>plain</tt>, <tt>fvh</tt> and <tt>postings</tt>., +         * Set type of highlighter to use. Out of the box supported types, +         * are <tt>plain</tt>, <tt>fvh</tt> and <tt>postings</tt>., +++ b/core/src/main/java/org/elasticsearch/search/highlight/Highlighters.java, +        this(Collections.emptyMap());, +        super("highlighter", Highlighter.class, new HashSet<>(Arrays.asList(FVH, PLAIN, POSTINGS)),, +++ b/core/src/test/java/org/elasticsearch/search/highlight/HighlighterSearchIT.java, +        String highlighter = randomFrom("plain", "postings", "fvh");, +        String highlighter = randomFrom("plain", "postings", "fvh");, +        String highlighter = randomFrom("plain", "postings", "fvh");, +                        .highlighter(new HighlightBuilder().field("title", 50, 1, 10).highlighterType("fvh")),, +                .highlighter(new HighlightBuilder().field("tit*", 50, 1, 10).highlighterType("fvh")).get());, +                .highlighter(new HighlightBuilder().field("title", 50, 1, 10).highlighterType("plain")), +                        new HighlightBuilder().field(new HighlightBuilder.Field("title").highlighterType("plain")).highlighterType(, +                                "plain")), +                .highlighter(highlight().field("field2").preTags("<xxx>").postTags("</xxx>").highlighterType("plain").requireFieldMatch(false));, +                        .highlighter(new HighlightBuilder().field("title").highlighterType("postings")),, +++ b/core/src/main/java/org/elasticsearch/search/highlight/HighlightBuilder.java, +     * Set this to true when using the highlighterType <tt>fvh</tt>, +     * When using the highlighterType <tt>fvh</tt> this setting, +     * When using the highlighterType <tt>fvh</tt> this setting, +     * Set type of highlighter to use. Out of the box supported types, +     * are <tt>plain</tt>, <tt>fvh</tt> and <tt>postings</tt>., +         * Set type of highlighter to use. Out of the box supported types, +         * are <tt>plain</tt>, <tt>fvh</tt> and <tt>postings</tt>., +++ b/core/src/main/java/org/elasticsearch/search/highlight/Highlighters.java, +        this(Collections.emptyMap());, +        super("highlighter", Highlighter.class, new HashSet<>(Arrays.asList(FVH, PLAIN, POSTINGS)),, +++ b/core/src/test/java/org/elasticsearch/search/highlight/HighlighterSearchIT.java, +        String highlighter = randomFrom("plain", "postings", "fvh");, +        String highlighter = randomFrom("plain", "postings", "fvh");, +        String highlighter = randomFrom("plain", "postings", "fvh");, +                        .highlighter(new HighlightBuilder().field("title", 50, 1, 10).highlighterType("fvh")),, +                .highlighter(new HighlightBuilder().field("tit*", 50, 1, 10).highlighterType("fvh")).get());, +                .highlighter(new HighlightBuilder().field("title", 50, 1, 10).highlighterType("plain")), +                        new HighlightBuilder().field(new HighlightBuilder.Field("title").highlighterType("plain")).highlighterType(, +                                "plain")), +                .highlighter(highlight().field("field2").preTags("<xxx>").postTags("</xxx>").highlighterType("plain").requireFieldMatch(false));, +                        .highlighter(new HighlightBuilder().field("title").highlighterType("postings")),, +++ b/docs/reference/search/request/highlighting.asciidoc, +implementation uses either the lucene `plain` highlighter, the, +fast vector highlighter (`fvh`) or `postings` highlighter., +The following is an example of the search request body:, +When using `fvh` one can use `fragment_offset`, +The fast vector highlighter has a `phrase_limit` parameter that prevents]