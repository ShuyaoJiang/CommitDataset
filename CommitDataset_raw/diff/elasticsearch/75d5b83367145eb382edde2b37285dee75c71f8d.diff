[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +import java.nio.charset.CharacterCodingException;, +import java.nio.file.Paths;, +    public static CharArraySet parseWords(Environment env, Settings settings, String name, CharArraySet defaultWords,, +                                          Map<String, Set<?>> namedWords, boolean ignoreCase) {, +        final Path path = env.configFile().resolve(wordListPath);, +        try (BufferedReader reader = FileSystemUtils.newBufferedReader(path.toUri().toURL(), StandardCharsets.UTF_8)) {, +        } catch (CharacterCodingException ex) {, +            String message = String.format(Locale.ROOT,, +                "Unsupported character encoding detected while reading %s_path: %s - files must be UTF-8 encoded",, +                settingPrefix, path.toString());, +            throw new IllegalArgumentException(message, ex);, +            String message = String.format(Locale.ROOT, "IOException while reading %s_path: %s", settingPrefix, path.toString());, +            String word;, +        } catch (CharacterCodingException ex) {, +            String message = String.format(Locale.ROOT,, +                "Unsupported character encoding detected while reading %s_path: %s files must be UTF-8 encoded",, +                settingPrefix, path.toString());, +            throw new IllegalArgumentException(message, ex);, +            String message = String.format(Locale.ROOT, "IOException while reading %s_path: %s", settingPrefix, path.toString());, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +import java.nio.charset.CharacterCodingException;, +import java.nio.file.Paths;, +    public static CharArraySet parseWords(Environment env, Settings settings, String name, CharArraySet defaultWords,, +                                          Map<String, Set<?>> namedWords, boolean ignoreCase) {, +        final Path path = env.configFile().resolve(wordListPath);, +        try (BufferedReader reader = FileSystemUtils.newBufferedReader(path.toUri().toURL(), StandardCharsets.UTF_8)) {, +        } catch (CharacterCodingException ex) {, +            String message = String.format(Locale.ROOT,, +                "Unsupported character encoding detected while reading %s_path: %s - files must be UTF-8 encoded",, +                settingPrefix, path.toString());, +            throw new IllegalArgumentException(message, ex);, +            String message = String.format(Locale.ROOT, "IOException while reading %s_path: %s", settingPrefix, path.toString());, +            String word;, +        } catch (CharacterCodingException ex) {, +            String message = String.format(Locale.ROOT,, +                "Unsupported character encoding detected while reading %s_path: %s files must be UTF-8 encoded",, +                settingPrefix, path.toString());, +            throw new IllegalArgumentException(message, ex);, +            String message = String.format(Locale.ROOT, "IOException while reading %s_path: %s", settingPrefix, path.toString());, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +import java.nio.charset.CharacterCodingException;, +import java.nio.file.Paths;, +    public static CharArraySet parseWords(Environment env, Settings settings, String name, CharArraySet defaultWords,, +                                          Map<String, Set<?>> namedWords, boolean ignoreCase) {, +        final Path path = env.configFile().resolve(wordListPath);, +        try (BufferedReader reader = FileSystemUtils.newBufferedReader(path.toUri().toURL(), StandardCharsets.UTF_8)) {, +        } catch (CharacterCodingException ex) {, +            String message = String.format(Locale.ROOT,, +                "Unsupported character encoding detected while reading %s_path: %s - files must be UTF-8 encoded",, +                settingPrefix, path.toString());, +            throw new IllegalArgumentException(message, ex);, +            String message = String.format(Locale.ROOT, "IOException while reading %s_path: %s", settingPrefix, path.toString());, +            String word;, +        } catch (CharacterCodingException ex) {, +            String message = String.format(Locale.ROOT,, +                "Unsupported character encoding detected while reading %s_path: %s files must be UTF-8 encoded",, +                settingPrefix, path.toString());, +            throw new IllegalArgumentException(message, ex);, +            String message = String.format(Locale.ROOT, "IOException while reading %s_path: %s", settingPrefix, path.toString());, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java, +++ b/core/src/main/java/org/elasticsearch/search/sort/FieldSortBuilder.java, +    public FieldSortBuilder setNestedFilter(QueryBuilder nestedFilter) {, +    public QueryBuilder getNestedFilter() {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +import java.nio.charset.CharacterCodingException;, +import java.nio.file.Paths;, +    public static CharArraySet parseWords(Environment env, Settings settings, String name, CharArraySet defaultWords,, +                                          Map<String, Set<?>> namedWords, boolean ignoreCase) {, +        final Path path = env.configFile().resolve(wordListPath);, +        try (BufferedReader reader = FileSystemUtils.newBufferedReader(path.toUri().toURL(), StandardCharsets.UTF_8)) {, +        } catch (CharacterCodingException ex) {, +            String message = String.format(Locale.ROOT,, +                "Unsupported character encoding detected while reading %s_path: %s - files must be UTF-8 encoded",, +                settingPrefix, path.toString());, +            throw new IllegalArgumentException(message, ex);, +            String message = String.format(Locale.ROOT, "IOException while reading %s_path: %s", settingPrefix, path.toString());, +            String word;, +        } catch (CharacterCodingException ex) {, +            String message = String.format(Locale.ROOT,, +                "Unsupported character encoding detected while reading %s_path: %s files must be UTF-8 encoded",, +                settingPrefix, path.toString());, +            throw new IllegalArgumentException(message, ex);, +            String message = String.format(Locale.ROOT, "IOException while reading %s_path: %s", settingPrefix, path.toString());, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java, +++ b/core/src/main/java/org/elasticsearch/search/sort/FieldSortBuilder.java, +    public FieldSortBuilder setNestedFilter(QueryBuilder nestedFilter) {, +    public QueryBuilder getNestedFilter() {, +++ b/core/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortBuilder.java, +        builder.field("unit", unit);, +        builder.field("distance_type", geoDistance.name().toLowerCase(Locale.ROOT));, +            builder.field("mode", sortMode);, +            builder.field("nested_path", nestedPath);, +            builder.field("nested_filter", nestedFilter, params);]