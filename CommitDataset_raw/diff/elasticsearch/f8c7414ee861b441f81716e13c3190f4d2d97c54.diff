[+++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/node/reload/NodesReloadSecureSettingsRequest.java, + * Request for a reload secure settings action., +     * Reload secure settings only on certain nodes, based on the nodes IDs specified. If none are passed, secure settings will be reloaded, +     * on all the nodes., +    public NodesReloadSecureSettingsRequest(final String... nodesIds) {, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/node/reload/NodesReloadSecureSettingsRequest.java, + * Request for a reload secure settings action., +     * Reload secure settings only on certain nodes, based on the nodes IDs specified. If none are passed, secure settings will be reloaded, +     * on all the nodes., +    public NodesReloadSecureSettingsRequest(final String... nodesIds) {, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/node/reload/NodesReloadSecureSettingsRequestBuilder.java, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/node/reload/NodesReloadSecureSettingsRequest.java, + * Request for a reload secure settings action., +     * Reload secure settings only on certain nodes, based on the nodes IDs specified. If none are passed, secure settings will be reloaded, +     * on all the nodes., +    public NodesReloadSecureSettingsRequest(final String... nodesIds) {, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/node/reload/NodesReloadSecureSettingsRequestBuilder.java, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/node/reload/TransportNodesReloadSecureSettingsAction.java, +            keystore.decrypt(new char[0]);, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/node/reload/NodesReloadSecureSettingsRequest.java, + * Request for a reload secure settings action., +     * Reload secure settings only on certain nodes, based on the nodes IDs specified. If none are passed, secure settings will be reloaded, +     * on all the nodes., +    public NodesReloadSecureSettingsRequest(final String... nodesIds) {, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/node/reload/NodesReloadSecureSettingsRequestBuilder.java, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/node/reload/TransportNodesReloadSecureSettingsAction.java, +            keystore.decrypt(new char[0]);, +++ b/server/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestReloadSecureSettingsAction.java, +                        {, +                        }, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/node/reload/NodesReloadSecureSettingsRequest.java, + * Request for a reload secure settings action., +     * Reload secure settings only on certain nodes, based on the nodes IDs specified. If none are passed, secure settings will be reloaded, +     * on all the nodes., +    public NodesReloadSecureSettingsRequest(final String... nodesIds) {, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/node/reload/NodesReloadSecureSettingsRequestBuilder.java, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/node/reload/TransportNodesReloadSecureSettingsAction.java, +            keystore.decrypt(new char[0]);, +++ b/server/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestReloadSecureSettingsAction.java, +                        {, +                        }, +++ b/server/src/test/java/org/elasticsearch/action/admin/ReloadSecureSettingsIT.java, +import static org.hamcrest.Matchers.containsString;, +import static org.hamcrest.Matchers.instanceOf;, +        client().admin().cluster().prepareReloadSecureSettings().execute(, +        client().admin().cluster().prepareReloadSecureSettings().execute(, +        client().admin().cluster().prepareReloadSecureSettings().execute(, +        client().admin().cluster().prepareReloadSecureSettings().execute(]