[+++ b/docs/reference/query-dsl/queries/query-string-query.asciidoc, +, +|`locale` | coming[1.1.0] Locale that should be used for string conversions., +Defaults to `ROOT`., +++ b/docs/reference/query-dsl/queries/query-string-query.asciidoc, +, +|`locale` | coming[1.1.0] Locale that should be used for string conversions., +Defaults to `ROOT`., +++ b/docs/reference/query-dsl/queries/simple-query-string-query.asciidoc, +, +|`locale` | coming[1.1.0] Locale that should be used for string conversions., +Defaults to `ROOT`., +++ b/docs/reference/query-dsl/queries/query-string-query.asciidoc, +, +|`locale` | coming[1.1.0] Locale that should be used for string conversions., +Defaults to `ROOT`., +++ b/docs/reference/query-dsl/queries/simple-query-string-query.asciidoc, +, +|`locale` | coming[1.1.0] Locale that should be used for string conversions., +Defaults to `ROOT`., +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +        setLocale(settings.locale());, +++ b/docs/reference/query-dsl/queries/query-string-query.asciidoc, +, +|`locale` | coming[1.1.0] Locale that should be used for string conversions., +Defaults to `ROOT`., +++ b/docs/reference/query-dsl/queries/simple-query-string-query.asciidoc, +, +|`locale` | coming[1.1.0] Locale that should be used for string conversions., +Defaults to `ROOT`., +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +        setLocale(settings.locale());, +++ b/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +import java.util.Locale;, +    private Locale locale;, +    public void locale(Locale locale) {, +        this.locale = locale;, +    }, +, +    public Locale locale() {, +        return this.locale;, +    }, +, +        if (locale != null ? !locale.equals(that.locale) : that.locale != null) {, +            return false;, +        }, +        result = 31 * result + (locale != null ? locale.hashCode() : 0);, +++ b/docs/reference/query-dsl/queries/query-string-query.asciidoc, +, +|`locale` | coming[1.1.0] Locale that should be used for string conversions., +Defaults to `ROOT`., +++ b/docs/reference/query-dsl/queries/simple-query-string-query.asciidoc, +, +|`locale` | coming[1.1.0] Locale that should be used for string conversions., +Defaults to `ROOT`., +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +        setLocale(settings.locale());, +++ b/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +import java.util.Locale;, +    private Locale locale;, +    public void locale(Locale locale) {, +        this.locale = locale;, +    }, +, +    public Locale locale() {, +        return this.locale;, +    }, +, +        if (locale != null ? !locale.equals(that.locale) : that.locale != null) {, +            return false;, +        }, +        result = 31 * result + (locale != null ? locale.hashCode() : 0);, +++ b/src/main/java/org/elasticsearch/common/util/LocaleUtils.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.util;, +, +import org.elasticsearch.ElasticsearchIllegalArgumentException;, +, +import java.util.Locale;, +, +/**, + * Utilities for for dealing with {@link Locale} objects]