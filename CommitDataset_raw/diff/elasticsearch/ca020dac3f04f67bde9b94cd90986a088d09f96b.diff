[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/admin/indices/stats/RestIndicesStatsAction.java, +        controller.registerHandler(GET, "/_stats/get", new RestGetStatsHandler());, +        controller.registerHandler(GET, "/{index}/_stats/get", new RestGetStatsHandler());, +            indicesStatsRequest.clear().store(true);, +            indicesStatsRequest.clear().indexing(true);, +, +            client.admin().indices().stats(indicesStatsRequest, new ActionListener<IndicesStats>() {, +                @Override public void onResponse(IndicesStats response) {, +                    try {, +                        XContentBuilder builder = RestXContentBuilder.restContentBuilder(request);, +                        builder.startObject();, +                        builder.field("ok", true);, +                        buildBroadcastShardsHeader(builder, response);, +                        response.toXContent(builder, request);, +                        builder.endObject();, +                        channel.sendResponse(new XContentRestResponse(request, OK, builder));, +                    } catch (Exception e) {, +                        onFailure(e);, +                    }, +                }, +, +                @Override public void onFailure(Throwable e) {, +                    try {, +                        channel.sendResponse(new XContentThrowableRestResponse(request, e));, +                    } catch (IOException e1) {, +                        logger.error("Failed to send failure response", e1);, +                    }, +                }, +            });, +        }, +    }, +, +    class RestGetStatsHandler implements RestHandler {, +, +        @Override public void handleRequest(final RestRequest request, final RestChannel channel) {, +            IndicesStatsRequest indicesStatsRequest = new IndicesStatsRequest();, +            indicesStatsRequest.indices(splitIndices(request.param("index")));, +            indicesStatsRequest.clear().get(true);]