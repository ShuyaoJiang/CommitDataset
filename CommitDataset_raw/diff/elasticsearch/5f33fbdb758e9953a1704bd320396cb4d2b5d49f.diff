[+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.indices.mapper.MapperRegistry;, +, +    private final MapperRegistry mapperRegistry;, +, +    public MetaDataIndexUpgradeService(Settings settings, MapperRegistry mapperRegistry) {, +        this.mapperRegistry = mapperRegistry;, +                try (MapperService mapperService = new MapperService(indexSettings, analysisService, similarityService, mapperRegistry)) {, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.indices.mapper.MapperRegistry;, +, +    private final MapperRegistry mapperRegistry;, +, +    public MetaDataIndexUpgradeService(Settings settings, MapperRegistry mapperRegistry) {, +        this.mapperRegistry = mapperRegistry;, +                try (MapperService mapperService = new MapperService(indexSettings, analysisService, similarityService, mapperRegistry)) {, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +import org.elasticsearch.indices.mapper.MapperRegistry;, +    public IndexService newIndexService(NodeEnvironment environment, IndexService.ShardStoreDeleter shardStoreDeleter, NodeServicesProvider servicesProvider, MapperRegistry mapperRegistry) throws IOException {, +                servicesProvider, queryCache, store, eventListener, searcherWrapperFactory, mapperRegistry);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.indices.mapper.MapperRegistry;, +, +    private final MapperRegistry mapperRegistry;, +, +    public MetaDataIndexUpgradeService(Settings settings, MapperRegistry mapperRegistry) {, +        this.mapperRegistry = mapperRegistry;, +                try (MapperService mapperService = new MapperService(indexSettings, analysisService, similarityService, mapperRegistry)) {, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +import org.elasticsearch.indices.mapper.MapperRegistry;, +    public IndexService newIndexService(NodeEnvironment environment, IndexService.ShardStoreDeleter shardStoreDeleter, NodeServicesProvider servicesProvider, MapperRegistry mapperRegistry) throws IOException {, +                servicesProvider, queryCache, store, eventListener, searcherWrapperFactory, mapperRegistry);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +import org.elasticsearch.indices.mapper.MapperRegistry;, +                        IndexModule.IndexSearcherWrapperFactory wrapperFactory,, +                        MapperRegistry mapperRegistry) throws IOException {, +        this.mapperService = new MapperService(indexSettings, analysisService, similarityService, mapperRegistry);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.indices.mapper.MapperRegistry;, +, +    private final MapperRegistry mapperRegistry;, +, +    public MetaDataIndexUpgradeService(Settings settings, MapperRegistry mapperRegistry) {, +        this.mapperRegistry = mapperRegistry;, +                try (MapperService mapperService = new MapperService(indexSettings, analysisService, similarityService, mapperRegistry)) {, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +import org.elasticsearch.indices.mapper.MapperRegistry;, +    public IndexService newIndexService(NodeEnvironment environment, IndexService.ShardStoreDeleter shardStoreDeleter, NodeServicesProvider servicesProvider, MapperRegistry mapperRegistry) throws IOException {, +                servicesProvider, queryCache, store, eventListener, searcherWrapperFactory, mapperRegistry);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +import org.elasticsearch.indices.mapper.MapperRegistry;, +                        IndexModule.IndexSearcherWrapperFactory wrapperFactory,, +                        MapperRegistry mapperRegistry) throws IOException {, +        this.mapperService = new MapperService(indexSettings, analysisService, similarityService, mapperRegistry);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +import org.elasticsearch.index.mapper.MetadataFieldMapper.TypeParser;, +        private Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> metadataMappers = new LinkedHashMap<>();, +            for (Map.Entry<String, MetadataFieldMapper.TypeParser> entry : mapperService.mapperRegistry.getMetadataMapperParsers().entrySet()) {, +                final String name = entry.getKey();, +                final TypeParser parser = entry.getValue();, +                final MetadataFieldMapper metadataMapper = parser.getDefault(indexSettings, mapperService.fullName(name), builder.name());, +                metadataMappers.put(metadataMapper.getClass(), metadataMapper);, +            }, +            metadataMappers.put(metadataMapper.getClass(), metadataMapper);, +            return new DocumentMapper(mapperService, indexSettings, docMapperParser, rootObjectMapper, meta, metadataMappers, mapperService.mappingLock);, +                          Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> metadataMappers,, +                metadataMappers.values().toArray(new MetadataFieldMapper[metadataMappers.values().size()]),, +        if (metadataMapper(ParentFieldMapper.class).active()) {, +            metadataMapper(RoutingFieldMapper.class).markAsRequired();, +        return metadataMapper(UidFieldMapper.class);, +    public <T extends MetadataFieldMapper> T metadataMapper(Class<T> type) {, +        return mapping.metadataMapper(type);, +        return metadataMapper(IndexFieldMapper.class);, +        return metadataMapper(TypeFieldMapper.class);, +        return metadataMapper(SourceFieldMapper.class);, +        return metadataMapper(AllFieldMapper.class);, +        return metadataMapper(IdFieldMapper.class);, +        return metadataMapper(RoutingFieldMapper.class);, +        return metadataMapper(ParentFieldMapper.class);, +        return metadataMapper(TimestampFieldMapper.class);, +        return metadataMapper(TTLFieldMapper.class);, +        return metadataMapper(IndexFieldMapper.class);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.indices.mapper.MapperRegistry;, +, +    private final MapperRegistry mapperRegistry;, +, +    public MetaDataIndexUpgradeService(Settings settings, MapperRegistry mapperRegistry) {, +        this.mapperRegistry = mapperRegistry;, +                try (MapperService mapperService = new MapperService(indexSettings, analysisService, similarityService, mapperRegistry)) {, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +import org.elasticsearch.indices.mapper.MapperRegistry;, +    public IndexService newIndexService(NodeEnvironment environment, IndexService.ShardStoreDeleter shardStoreDeleter, NodeServicesProvider servicesProvider, MapperRegistry mapperRegistry) throws IOException {, +                servicesProvider, queryCache, store, eventListener, searcherWrapperFactory, mapperRegistry);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +import org.elasticsearch.indices.mapper.MapperRegistry;, +                        IndexModule.IndexSearcherWrapperFactory wrapperFactory,, +                        MapperRegistry mapperRegistry) throws IOException {, +        this.mapperService = new MapperService(indexSettings, analysisService, similarityService, mapperRegistry);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java]