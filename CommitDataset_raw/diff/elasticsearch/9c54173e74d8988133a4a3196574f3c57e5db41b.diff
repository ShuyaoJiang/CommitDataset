[+++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/actions/ActionRegistry.java, +    public List<ActionWrapper> parseActions(String watchId, XContentParser parser, boolean upgradeActionSource) throws IOException {, +        return actions;, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/actions/ActionRegistry.java, +    public List<ActionWrapper> parseActions(String watchId, XContentParser parser, boolean upgradeActionSource) throws IOException {, +        return actions;, +++ /dev/null, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/actions/ActionRegistry.java, +    public List<ActionWrapper> parseActions(String watchId, XContentParser parser, boolean upgradeActionSource) throws IOException {, +        return actions;, +++ /dev/null, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/ExecutionService.java, +            if (watch.actions().size() > 0 && watch.transform() != null) {, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/actions/ActionRegistry.java, +    public List<ActionWrapper> parseActions(String watchId, XContentParser parser, boolean upgradeActionSource) throws IOException {, +        return actions;, +++ /dev/null, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/ExecutionService.java, +            if (watch.actions().size() > 0 && watch.transform() != null) {, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionContext.java, +import java.util.Collections;, +    public Map<String, ActionWrapper.Result> actionsResults() {, +        return Collections.unmodifiableMap(actionsResults);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/actions/ActionRegistry.java, +    public List<ActionWrapper> parseActions(String watchId, XContentParser parser, boolean upgradeActionSource) throws IOException {, +        return actions;, +++ /dev/null, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/ExecutionService.java, +            if (watch.actions().size() > 0 && watch.transform() != null) {, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionContext.java, +import java.util.Collections;, +    public Map<String, ActionWrapper.Result> actionsResults() {, +        return Collections.unmodifiableMap(actionsResults);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionResult.java, +import org.elasticsearch.xpack.watcher.actions.ActionWrapper;, +import java.util.Map;, +    private final Map<String, ActionWrapper.Result> actionsResults;, +                         @Nullable Transform.Result transformResult, Map<String, ActionWrapper.Result> actionsResults) {, +    public Map<String, ActionWrapper.Result> actionsResults() {, +        builder.startArray(Field.ACTIONS.getPreferredName());, +        for (ActionWrapper.Result result : actionsResults.values()) {, +            result.toXContent(builder, params);, +        }, +        builder.endArray();, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/actions/ActionRegistry.java, +    public List<ActionWrapper> parseActions(String watchId, XContentParser parser, boolean upgradeActionSource) throws IOException {, +        return actions;, +++ /dev/null, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/ExecutionService.java, +            if (watch.actions().size() > 0 && watch.transform() != null) {, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionContext.java, +import java.util.Collections;, +    public Map<String, ActionWrapper.Result> actionsResults() {, +        return Collections.unmodifiableMap(actionsResults);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionResult.java, +import org.elasticsearch.xpack.watcher.actions.ActionWrapper;, +import java.util.Map;, +    private final Map<String, ActionWrapper.Result> actionsResults;, +                         @Nullable Transform.Result transformResult, Map<String, ActionWrapper.Result> actionsResults) {, +    public Map<String, ActionWrapper.Result> actionsResults() {, +        builder.startArray(Field.ACTIONS.getPreferredName());, +        for (ActionWrapper.Result result : actionsResults.values()) {, +            result.toXContent(builder, params);, +        }, +        builder.endArray();, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionSnapshot.java, +import java.util.Map;, +            Map<String, ActionWrapper.Result> actionResults = context.actionsResults();, +            executedActions = new String[actionResults.size()];, +            for (ActionWrapper.Result actionResult : actionResults.values()) {, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/actions/ActionRegistry.java, +    public List<ActionWrapper> parseActions(String watchId, XContentParser parser, boolean upgradeActionSource) throws IOException {, +        return actions;, +++ /dev/null, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/ExecutionService.java, +            if (watch.actions().size() > 0 && watch.transform() != null) {, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionContext.java, +import java.util.Collections;, +    public Map<String, ActionWrapper.Result> actionsResults() {, +        return Collections.unmodifiableMap(actionsResults);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionResult.java, +import org.elasticsearch.xpack.watcher.actions.ActionWrapper;, +import java.util.Map;, +    private final Map<String, ActionWrapper.Result> actionsResults;, +                         @Nullable Transform.Result transformResult, Map<String, ActionWrapper.Result> actionsResults) {, +    public Map<String, ActionWrapper.Result> actionsResults() {, +        builder.startArray(Field.ACTIONS.getPreferredName());, +        for (ActionWrapper.Result result : actionsResults.values()) {, +            result.toXContent(builder, params);, +        }, +        builder.endArray();, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionSnapshot.java, +import java.util.Map;, +            Map<String, ActionWrapper.Result> actionResults = context.actionsResults();, +            executedActions = new String[actionResults.size()];, +            for (ActionWrapper.Result actionResult : actionResults.values()) {, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/history/WatchRecord.java, +import org.elasticsearch.xpack.watcher.actions.Action;, +import org.elasticsearch.xpack.watcher.actions.ActionWrapper;, +import java.util.Collection;]