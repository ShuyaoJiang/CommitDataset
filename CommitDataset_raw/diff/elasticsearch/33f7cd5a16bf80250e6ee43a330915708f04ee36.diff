[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]settings[/\\]UpdateSettingsIT.java" checks="LineLength" />, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]settings[/\\]UpdateSettingsIT.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<? super Response> listener;, +    public ActionListenerResponseHandler(ActionListener<? super Response> listener, Supplier<Response> responseSupplier) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]settings[/\\]UpdateSettingsIT.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<? super Response> listener;, +    public ActionListenerResponseHandler(ActionListener<? super Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteResponse;, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    private long seqNo;, +    public DocWriteResponse(ShardId shardId, String type, String id, long seqNo, long version, Result result) {, +        this.seqNo = seqNo;, +     * Returns the sequence number assigned for this change. Returns {@link SequenceNumbersService#UNASSIGNED_SEQ_NO} if the operation, +     * wasn't performed (i.e., an update operation that resulted in a NOOP)., +     */, +    public long getSeqNo() {, +        return seqNo;, +    }, +, +    /**, +        seqNo = in.readZLong();, +        out.writeZLong(seqNo);, +        if (getSeqNo() >= 0) {, +            builder.field("_seq_no", getSeqNo());, +        }, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]settings[/\\]UpdateSettingsIT.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<? super Response> listener;, +    public ActionListenerResponseHandler(ActionListener<? super Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteResponse;, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    private long seqNo;, +    public DocWriteResponse(ShardId shardId, String type, String id, long seqNo, long version, Result result) {, +        this.seqNo = seqNo;, +     * Returns the sequence number assigned for this change. Returns {@link SequenceNumbersService#UNASSIGNED_SEQ_NO} if the operation, +     * wasn't performed (i.e., an update operation that resulted in a NOOP)., +     */, +    public long getSeqNo() {, +        return seqNo;, +    }, +, +    /**, +        seqNo = in.readZLong();, +        out.writeZLong(seqNo);, +        if (getSeqNo() >= 0) {, +            builder.field("_seq_no", getSeqNo());, +        }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +                setBanOnNodes(request.getReason(), cancellableTask, childNodes, banLock);, +                listener.onResponse(cancellableTask.taskInfo(clusterService.localNode().getId(), false));, +    private void setBanOnNodes(String reason, CancellableTask task, Set<String> nodes, BanLock banLock) {, +            banLock);, +    private void sendSetBanRequest(Set<String> nodes, BanParentTaskRequest request, BanLock banLock) {, +                logger.debug("Sending ban for tasks with the parent [{}] to the node [{}], ban [{}]", request.parentTaskId, node,, +                            banLock.onBanSet();, +                            banLock.onBanSet();, +                banLock.onBanSet();, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]indices[/\\]settings[/\\]UpdateSettingsIT.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<? super Response> listener;, +    public ActionListenerResponseHandler(ActionListener<? super Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteResponse;, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    private long seqNo;, +    public DocWriteResponse(ShardId shardId, String type, String id, long seqNo, long version, Result result) {, +        this.seqNo = seqNo;, +     * Returns the sequence number assigned for this change. Returns {@link SequenceNumbersService#UNASSIGNED_SEQ_NO} if the operation, +     * wasn't performed (i.e., an update operation that resulted in a NOOP)., +     */, +    public long getSeqNo() {, +        return seqNo;, +    }, +, +    /**, +        seqNo = in.readZLong();, +        out.writeZLong(seqNo);, +        if (getSeqNo() >= 0) {, +            builder.field("_seq_no", getSeqNo());, +        }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +                setBanOnNodes(request.getReason(), cancellableTask, childNodes, banLock);, +                listener.onResponse(cancellableTask.taskInfo(clusterService.localNode().getId(), false));, +    private void setBanOnNodes(String reason, CancellableTask task, Set<String> nodes, BanLock banLock) {, +            banLock);, +    private void sendSetBanRequest(Set<String> nodes, BanParentTaskRequest request, BanLock banLock) {, +                logger.debug("Sending ban for tasks with the parent [{}] to the node [{}], ban [{}]", request.parentTaskId, node,, +                            banLock.onBanSet();, +                            banLock.onBanSet();, +                banLock.onBanSet();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java]