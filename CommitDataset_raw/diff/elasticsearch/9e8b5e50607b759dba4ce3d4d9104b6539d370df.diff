[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/BoolJsonFilterParser.java, +            } else if (token == JsonToken.START_ARRAY) {, +                if ("must".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new FilterClause(parseContext.parseInnerFilter(), BooleanClause.Occur.MUST));, +                    }, +                } else if ("mustNot".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new FilterClause(parseContext.parseInnerFilter(), BooleanClause.Occur.MUST_NOT));, +                    }, +                } else if ("should".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new FilterClause(parseContext.parseInnerFilter(), BooleanClause.Occur.SHOULD));, +                    }, +                }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/BoolJsonFilterParser.java, +            } else if (token == JsonToken.START_ARRAY) {, +                if ("must".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new FilterClause(parseContext.parseInnerFilter(), BooleanClause.Occur.MUST));, +                    }, +                } else if ("mustNot".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new FilterClause(parseContext.parseInnerFilter(), BooleanClause.Occur.MUST_NOT));, +                    }, +                } else if ("should".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new FilterClause(parseContext.parseInnerFilter(), BooleanClause.Occur.SHOULD));, +                    }, +                }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/BoolJsonQueryParser.java, +            } else if (token == JsonToken.START_ARRAY) {, +                if ("must".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new BooleanClause(parseContext.parseInnerQuery(), BooleanClause.Occur.MUST));, +                    }, +                } else if ("mustNot".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new BooleanClause(parseContext.parseInnerQuery(), BooleanClause.Occur.MUST_NOT));, +                    }, +                } else if ("should".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new BooleanClause(parseContext.parseInnerQuery(), BooleanClause.Occur.SHOULD));, +                    }, +                }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/BoolJsonFilterParser.java, +            } else if (token == JsonToken.START_ARRAY) {, +                if ("must".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new FilterClause(parseContext.parseInnerFilter(), BooleanClause.Occur.MUST));, +                    }, +                } else if ("mustNot".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new FilterClause(parseContext.parseInnerFilter(), BooleanClause.Occur.MUST_NOT));, +                    }, +                } else if ("should".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new FilterClause(parseContext.parseInnerFilter(), BooleanClause.Occur.SHOULD));, +                    }, +                }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/BoolJsonQueryParser.java, +            } else if (token == JsonToken.START_ARRAY) {, +                if ("must".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new BooleanClause(parseContext.parseInnerQuery(), BooleanClause.Occur.MUST));, +                    }, +                } else if ("mustNot".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new BooleanClause(parseContext.parseInnerQuery(), BooleanClause.Occur.MUST_NOT));, +                    }, +                } else if ("should".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new BooleanClause(parseContext.parseInnerQuery(), BooleanClause.Occur.SHOULD));, +                    }, +                }, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/index/query/json/SimpleJsonIndexQueryParserTests.java, +        Query parsedQuery = queryParser.parse(boolQuery().must(termQuery("content", "test1")).must(termQuery("content", "test4")).mustNot(termQuery("content", "test2")).should(termQuery("content", "test3")).build());, +        assertThat(((TermQuery) clauses[1].getQuery()).getTerm(), equalTo(new Term("content", "test4")));, +        assertThat(clauses[1].getOccur(), equalTo(BooleanClause.Occur.MUST));, +        assertThat(((TermQuery) clauses[2].getQuery()).getTerm(), equalTo(new Term("content", "test2")));, +        assertThat(clauses[2].getOccur(), equalTo(BooleanClause.Occur.MUST_NOT));, +        assertThat(((TermQuery) clauses[3].getQuery()).getTerm(), equalTo(new Term("content", "test3")));, +        assertThat(clauses[3].getOccur(), equalTo(BooleanClause.Occur.SHOULD));, +        assertThat(((TermQuery) clauses[1].getQuery()).getTerm(), equalTo(new Term("content", "test4")));, +        assertThat(clauses[1].getOccur(), equalTo(BooleanClause.Occur.MUST));, +        assertThat(((TermQuery) clauses[2].getQuery()).getTerm(), equalTo(new Term("content", "test2")));, +        assertThat(clauses[2].getOccur(), equalTo(BooleanClause.Occur.MUST_NOT));, +        assertThat(((TermQuery) clauses[3].getQuery()).getTerm(), equalTo(new Term("content", "test3")));, +        assertThat(clauses[3].getOccur(), equalTo(BooleanClause.Occur.SHOULD));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/BoolJsonFilterParser.java, +            } else if (token == JsonToken.START_ARRAY) {, +                if ("must".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new FilterClause(parseContext.parseInnerFilter(), BooleanClause.Occur.MUST));, +                    }, +                } else if ("mustNot".equals(currentFieldName)) {, +                    while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                        clauses.add(new FilterClause(parseContext.parseInnerFilter(), BooleanClause.Occur.MUST_NOT));, +                    }, +                } else if ("should".equals(currentFieldName)) {]