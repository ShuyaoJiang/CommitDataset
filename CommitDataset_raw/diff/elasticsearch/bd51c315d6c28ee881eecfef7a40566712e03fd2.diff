[+++ b/TESTING.asciidoc, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT \, +++ b/TESTING.asciidoc, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT \, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0-alpha5, +++ b/TESTING.asciidoc, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT \, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0-alpha5, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version CURRENT = V_5_0_0_alpha5;, +++ b/TESTING.asciidoc, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT \, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0-alpha5, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version CURRENT = V_5_0_0_alpha5;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/CancelTasksResponse.java, +        nodeFailures) {, +        super(tasks, taskFailures, nodeFailures);, +++ b/TESTING.asciidoc, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT \, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0-alpha5, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version CURRENT = V_5_0_0_alpha5;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/CancelTasksResponse.java, +        nodeFailures) {, +        super(tasks, taskFailures, nodeFailures);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +            indexNameExpressionResolver, CancelTasksRequest::new, CancelTasksResponse::new, ThreadPool.Names.MANAGEMENT);, +        return new CancelTasksResponse(tasks, taskOperationFailures, failedNodeExceptions);, +++ b/TESTING.asciidoc, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT \, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0-alpha5, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version CURRENT = V_5_0_0_alpha5;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/CancelTasksResponse.java, +        nodeFailures) {, +        super(tasks, taskFailures, nodeFailures);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +            indexNameExpressionResolver, CancelTasksRequest::new, CancelTasksResponse::new, ThreadPool.Names.MANAGEMENT);, +        return new CancelTasksResponse(tasks, taskOperationFailures, failedNodeExceptions);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/ListTasksResponse.java, +    private DiscoveryNodes discoveryNodes;, +            List<? extends FailedNodeException> nodeFailures) {, +    /**, +     * Set a reference to the {@linkplain DiscoveryNodes}. Used for calling {@link #toXContent(XContentBuilder, ToXContent.Params)} with, +     * {@code group_by=nodes}., +     */, +    public void setDiscoveryNodes(DiscoveryNodes discoveryNodes) {, +        //WTF is this? Why isn't this set by default;, +        this.discoveryNodes = discoveryNodes;, +    }, +, +            if (discoveryNodes == null) {, +                throw new IllegalStateException("discoveryNodes must be set before calling toXContent with group_by=nodes");, +            }, +        return Strings.toString(this);, +++ b/TESTING.asciidoc, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT, +  -Dtests.class=org.elasticsearch.test.rest.*Yaml*IT \, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0-alpha5, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version CURRENT = V_5_0_0_alpha5;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/CancelTasksResponse.java, +        nodeFailures) {, +        super(tasks, taskFailures, nodeFailures);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +            indexNameExpressionResolver, CancelTasksRequest::new, CancelTasksResponse::new, ThreadPool.Names.MANAGEMENT);, +        return new CancelTasksResponse(tasks, taskOperationFailures, failedNodeExceptions);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/ListTasksResponse.java, +    private DiscoveryNodes discoveryNodes;, +            List<? extends FailedNodeException> nodeFailures) {, +    /**, +     * Set a reference to the {@linkplain DiscoveryNodes}. Used for calling {@link #toXContent(XContentBuilder, ToXContent.Params)} with, +     * {@code group_by=nodes}., +     */, +    public void setDiscoveryNodes(DiscoveryNodes discoveryNodes) {, +        //WTF is this? Why isn't this set by default;, +        this.discoveryNodes = discoveryNodes;, +    }, +, +            if (discoveryNodes == null) {, +                throw new IllegalStateException("discoveryNodes must be set before calling toXContent with group_by=nodes");, +            }, +        return Strings.toString(this);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TransportListTasksAction.java, +                indexNameExpressionResolver, ListTasksRequest::new, ListTasksResponse::new, ThreadPool.Names.MANAGEMENT);, +        return new ListTasksResponse(tasks, taskOperationFailures, failedNodeExceptions);, +++ b/TESTING.asciidoc]