[+++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedAggregator.java, +import org.apache.lucene.util.BitDocIdSet;, +import org.apache.lucene.util.BitSet;, +    private BitSet parentDocs;, +            parentFilter = context.searchContext().bitsetFilterCache().getBitDocIdSetFilter(NonNestedDocsFilter.INSTANCE);, +            parentFilter = context.searchContext().bitsetFilterCache().getBitDocIdSetFilter(objectMapper.nestedTypeFilter());, +            BitDocIdSet docIdSet = parentFilter.getDocIdSet(reader);, +                parentDocs = docIdSet.bits();, +        final int parentDoc = parentDocs.nextSetBit(childDoc);, +                MapperService.SmartNameObjectMapper mapper = context.searchContext().smartNameObjectMapper(path);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedAggregator.java, +import org.apache.lucene.util.BitDocIdSet;, +import org.apache.lucene.util.BitSet;, +    private BitSet parentDocs;, +            parentFilter = context.searchContext().bitsetFilterCache().getBitDocIdSetFilter(NonNestedDocsFilter.INSTANCE);, +            parentFilter = context.searchContext().bitsetFilterCache().getBitDocIdSetFilter(objectMapper.nestedTypeFilter());, +            BitDocIdSet docIdSet = parentFilter.getDocIdSet(reader);, +                parentDocs = docIdSet.bits();, +        final int parentDoc = parentDocs.nextSetBit(childDoc);, +                MapperService.SmartNameObjectMapper mapper = context.searchContext().smartNameObjectMapper(path);, +++ b/src/test/java/org/elasticsearch/search/aggregations/bucket/ReverseNestedTests.java, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.search.aggregations.bucket.filter.Filter;, +import org.elasticsearch.search.aggregations.metrics.valuecount.ValueCount;, +import static org.elasticsearch.cluster.metadata.IndexMetaData.SETTING_NUMBER_OF_REPLICAS;, +import static org.elasticsearch.cluster.metadata.IndexMetaData.SETTING_NUMBER_OF_SHARDS;, +import static org.elasticsearch.index.query.FilterBuilders.termFilter;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.*;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertHitCount;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertNoFailures;, +, +    @Test, +    public void testSameParentDocHavingMultipleBuckets() throws Exception {, +        XContentBuilder mapping = jsonBuilder().startObject().startObject("product").field("dynamic", "strict").startObject("properties"), +                .startObject("id").field("type", "long").endObject(), +                .startObject("category"), +                    .field("type", "nested"), +                    .startObject("properties"), +                        .startObject("name").field("type", "string").endObject(), +                    .endObject(), +                .endObject(), +                .startObject("sku"), +                    .field("type", "nested"), +                    .startObject("properties"), +                        .startObject("sku_type").field("type", "string").endObject(), +                            .startObject("colors"), +                                .field("type", "nested"), +                                .startObject("properties"), +                                    .startObject("name").field("type", "string").endObject(), +                                .endObject(), +                            .endObject(), +                    .endObject(), +                .endObject(), +                .endObject().endObject().endObject();, +        assertAcked(, +                prepareCreate("idx3"), +                        .setSettings(ImmutableSettings.builder().put(SETTING_NUMBER_OF_SHARDS, 1).put(SETTING_NUMBER_OF_REPLICAS, 0)), +                        .addMapping("product", mapping), +        );, +, +        client().prepareIndex("idx3", "product", "1").setRefresh(true).setSource(, +                jsonBuilder().startObject(), +                        .startArray("sku"), +                            .startObject(), +                                .field("sku_type", "bar1"), +                                .startArray("colors"), +                                    .startObject().field("name", "red").endObject(), +                                    .startObject().field("name", "green").endObject(), +                                    .startObject().field("name", "yellow").endObject(), +                                .endArray(), +                            .endObject(), +                            .startObject(), +                                .field("sku_type", "bar1"), +                                .startArray("colors"), +                                .startObject().field("name", "red").endObject(), +                                .startObject().field("name", "blue").endObject(), +                                .startObject().field("name", "white").endObject(), +                                .endArray(), +                            .endObject(), +                            .startObject(), +                                .field("sku_type", "bar1"), +                                .startArray("colors"), +                                .startObject().field("name", "black").endObject(), +                                .startObject().field("name", "blue").endObject(), +                                .endArray(), +                            .endObject(), +                            .startObject(), +                                .field("sku_type", "bar2"), +                                .startArray("colors"), +                                .startObject().field("name", "orange").endObject(), +                                .endArray(), +                            .endObject(), +                            .startObject(), +                                .field("sku_type", "bar2"), +                                .startArray("colors"), +                                .startObject().field("name", "pink").endObject(), +                                .endArray(), +                            .endObject(), +                        .endArray(), +                        .startArray("category")]