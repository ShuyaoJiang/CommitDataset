[+++ b/docs/reference/query-dsl/script-score-query.asciidoc, +[[random-score-function]], +===== Random score function, +`random_score` function generates scores that are uniformly distributed, +from 0 up to but not including 1., +`randomScore` function has the following syntax:, +`randomScore(<seed>, <fieldName>)`., +It has a required parameter - `seed` as an integer value,, +and an optional parameter - `fieldName` as a string value., +    "source" : "randomScore(100, '_seq_no')", +}, +--------------------------------------------------, +// NOTCONSOLE, +, +If the `fieldName` parameter is omitted, the internal Lucene, +document ids will be used as a source of randomness. This is very efficient,, +but unfortunately not reproducible since documents might be renumbered, +by merges., +, +[source,js], +--------------------------------------------------, +"script" : {, +    "source" : "randomScore(100)", +Note that documents that are within the same shard and have the, +same value for field will get the same score, so it is usually desirable, +to use a field that has unique values for all documents across a shard., +A good default choice might be to use the `_seq_no`, +field, whose only drawback is that scores will change if the document is, +updated since update operations also update the value of the `_seq_no` field., +Use `randomScore` function, +as described in <<random-score-function, random score function>>., +++ b/docs/reference/query-dsl/script-score-query.asciidoc, +[[random-score-function]], +===== Random score function, +`random_score` function generates scores that are uniformly distributed, +from 0 up to but not including 1., +`randomScore` function has the following syntax:, +`randomScore(<seed>, <fieldName>)`., +It has a required parameter - `seed` as an integer value,, +and an optional parameter - `fieldName` as a string value., +    "source" : "randomScore(100, '_seq_no')", +}, +--------------------------------------------------, +// NOTCONSOLE, +, +If the `fieldName` parameter is omitted, the internal Lucene, +document ids will be used as a source of randomness. This is very efficient,, +but unfortunately not reproducible since documents might be renumbered, +by merges., +, +[source,js], +--------------------------------------------------, +"script" : {, +    "source" : "randomScore(100)", +Note that documents that are within the same shard and have the, +same value for field will get the same score, so it is usually desirable, +to use a field that has unique values for all documents across a shard., +A good default choice might be to use the `_seq_no`, +field, whose only drawback is that scores will change if the document is, +updated since update operations also update the value of the `_seq_no` field., +Use `randomScore` function, +as described in <<random-score-function, random score function>>., +++ b/modules/lang-painless/src/main/resources/org/elasticsearch/painless/spi/org.elasticsearch.score.txt, +class org.elasticsearch.script.ScoreScript no_import {, +}, +, +    double randomScore(org.elasticsearch.script.ScoreScript, int, String) bound_to org.elasticsearch.script.ScoreScriptUtils$RandomScoreField, +    double randomScore(org.elasticsearch.script.ScoreScript, int) bound_to org.elasticsearch.script.ScoreScriptUtils$RandomScoreDoc, +++ b/docs/reference/query-dsl/script-score-query.asciidoc, +[[random-score-function]], +===== Random score function, +`random_score` function generates scores that are uniformly distributed, +from 0 up to but not including 1., +`randomScore` function has the following syntax:, +`randomScore(<seed>, <fieldName>)`., +It has a required parameter - `seed` as an integer value,, +and an optional parameter - `fieldName` as a string value., +    "source" : "randomScore(100, '_seq_no')", +}, +--------------------------------------------------, +// NOTCONSOLE, +, +If the `fieldName` parameter is omitted, the internal Lucene, +document ids will be used as a source of randomness. This is very efficient,, +but unfortunately not reproducible since documents might be renumbered, +by merges., +, +[source,js], +--------------------------------------------------, +"script" : {, +    "source" : "randomScore(100)", +Note that documents that are within the same shard and have the, +same value for field will get the same score, so it is usually desirable, +to use a field that has unique values for all documents across a shard., +A good default choice might be to use the `_seq_no`, +field, whose only drawback is that scores will change if the document is, +updated since update operations also update the value of the `_seq_no` field., +Use `randomScore` function, +as described in <<random-score-function, random score function>>., +++ b/modules/lang-painless/src/main/resources/org/elasticsearch/painless/spi/org.elasticsearch.score.txt]