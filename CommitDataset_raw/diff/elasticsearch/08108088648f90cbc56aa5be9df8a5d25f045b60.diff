[+++ b/src/main/java/org/elasticsearch/index/mapper/internal/TTLFieldMapper.java, +                context.sourceToParse().ttl(ttl);, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/TTLFieldMapper.java, +                context.sourceToParse().ttl(ttl);, +++ b/src/test/java/org/elasticsearch/test/integration/ttl/SimpleTTLTests.java, +                .addMapping("type2", XContentFactory.jsonBuilder(), +                        .startObject(), +                        .startObject("type2"), +                        .startObject("_timestamp").field("enabled", true).field("store", "yes").endObject(), +                        .startObject("_ttl").field("enabled", true).field("store", "yes").field("default", "1d").endObject(), +                        .endObject(), +                        .endObject()), +        // Index one doc without routing, one doc with routing, one doc with not TTL and no default and one doc with default TTL, +        client.prepareIndex("test", "type1", "no_ttl").setSource("field1", "value1").execute().actionGet();, +        client.prepareIndex("test", "type2", "default_ttl").setSource("field1", "value1").execute().actionGet();, +        // no TTL provided so no TTL fetched, +        getResponse = client.prepareGet("test", "type1", "no_ttl").setFields("_ttl").setRealtime(true).execute().actionGet();, +        assertThat(getResponse.field("_ttl"), nullValue());, +        // no TTL provided make sure it has default TTL, +        getResponse = client.prepareGet("test", "type2", "default_ttl").setFields("_ttl").setRealtime(true).execute().actionGet();, +        ttl0 = ((Number) getResponse.field("_ttl").value()).longValue();, +        assertThat(ttl0, greaterThan(0L));, +]