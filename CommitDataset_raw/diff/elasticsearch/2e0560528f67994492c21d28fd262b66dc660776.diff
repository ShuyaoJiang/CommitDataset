[+++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:16.0.1' // needed by watcher for the html sanitizer and security tests for jimfs, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:16.0.1' // needed by watcher for the html sanitizer and security tests for jimfs, +++ /dev/null, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:16.0.1' // needed by watcher for the html sanitizer and security tests for jimfs, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:16.0.1' // needed by watcher for the html sanitizer and security tests for jimfs, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:16.0.1' // needed by watcher for the html sanitizer and security tests for jimfs, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import javax.security.auth.DestroyFailedException;, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:16.0.1' // needed by watcher for the html sanitizer and security tests for jimfs, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import javax.security.auth.DestroyFailedException;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/authz/AuthorizationService.java, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.HashSet;, +import java.util.List;, +import java.util.Set;, +import java.util.function.Predicate;, +, +                action.equals("indices:data/write/reindex");, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:16.0.1' // needed by watcher for the html sanitizer and security tests for jimfs, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import javax.security.auth.DestroyFailedException;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/authz/AuthorizationService.java, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.HashSet;, +import java.util.List;, +import java.util.Set;, +import java.util.function.Predicate;, +, +                action.equals("indices:data/write/reindex");, +++ /dev/null, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:16.0.1' // needed by watcher for the html sanitizer and security tests for jimfs, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import javax.security.auth.DestroyFailedException;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/authz/AuthorizationService.java, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.HashSet;, +import java.util.List;, +import java.util.Set;, +import java.util.function.Predicate;, +, +                action.equals("indices:data/write/reindex");, +++ /dev/null]