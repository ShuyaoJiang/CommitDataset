[+++ b/core/src/main/java/org/elasticsearch/plugins/PluginManager.java, +            "lang-painless",, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginManager.java, +            "lang-painless",, +++ b/core/src/main/resources/org/elasticsearch/plugins/plugin-install.help, +    - lang-painless, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginManager.java, +            "lang-painless",, +++ b/core/src/main/resources/org/elasticsearch/plugins/plugin-install.help, +    - lang-painless, +++ b/dev-tools/smoke_test_rc.py, +                   "lang-painless",, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginManager.java, +            "lang-painless",, +++ b/core/src/main/resources/org/elasticsearch/plugins/plugin-install.help, +    - lang-painless, +++ b/dev-tools/smoke_test_rc.py, +                   "lang-painless",, +++ b/plugins/lang-painless/ant.xml, +<?xml version="1.0"?>, +<project name="ant-stuff">, +, +<!-- , + grammar regeneration logic, + we do this with ant for several reasons:, + * remove generated tabs for forbidden-apis, + * remove generated timestamps/filenames for reproducible build, + * fix CRLF line endings for windows consistency, + * ability to make classes package-private, + * keeping in source code control is easier on IDEs, + * regeneration should be rare, no reason to be religious about generated files , + * all logic already written and battle tested in lucene build, +-->, +  <target name="regenerate" description="Regenerate antlr lexer and parser" depends="run-antlr"/>, +, +  <target name="run-antlr">, +    <regen-delete grammar="Painless"/>, +    <regen-lexer grammar="Painless"/>, +    <regen-parser grammar="Painless"/>, +    <regen-fix grammar="Painless"/>, +  </target>, +, +  <macrodef name="replace-value">, +    <attribute name="value" />, +    <attribute name="property" />, +    <attribute name="from" />, +    <attribute name="to" />, +    <sequential>, +      <loadresource property="@{property}">, +        <string value="@{value}"/>, +        <filterchain>, +          <tokenfilter>, +            <filetokenizer/>, +            <replacestring from="@{from}" to="@{to}"/>, +          </tokenfilter>, +        </filterchain>, +      </loadresource>, +    </sequential>, +  </macrodef>, +, +  <macrodef name="regen-delete">, +    <attribute name="grammar" />, +    <sequential>, +      <local name="output.path"/>, +      <patternset id="grammar.@{grammar}.patternset">, +        <include name="@{grammar}Lexer.java" />, +        <include name="@{grammar}Parser.java" />, +        <include name="@{grammar}ParserVisitor.java" />, +        <include name="@{grammar}ParserBaseVisitor.java" />, +      </patternset>, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless"/>, +      <!-- delete parser and lexer so files will be generated -->, +      <delete dir="${output.path}">, +        <patternset refid="grammar.@{grammar}.patternset"/>, +      </delete>, +    </sequential>, +  </macrodef>, +, +  <macrodef name="regen-lexer">, +    <attribute name="grammar" />, +    <sequential>, +      <local name="grammar.path"/>, +      <local name="output.path"/>, +      <property name="grammar.path" location="src/main/antlr"/>, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless"/>, +      <!-- invoke ANTLR4 -->, +      <java classname="org.antlr.v4.Tool" fork="true" failonerror="true" classpathref="regenerate.classpath" taskname="antlr">, +        <sysproperty key="file.encoding" value="UTF-8"/>, +        <sysproperty key="user.language" value="en"/>, +        <sysproperty key="user.country" value="US"/>, +        <sysproperty key="user.variant" value=""/>, +        <arg value="-package"/>, +        <arg value="org.elasticsearch.painless"/>, +        <arg value="-o"/>, +        <arg path="${output.path}"/>, +        <arg path="${grammar.path}/@{grammar}Lexer.g4"/>, +      </java>, +    </sequential>, +  </macrodef>, +]