[+++ b/src/main/java/org/elasticsearch/transport/netty/NettyTransport.java, +    public static final String WORKER_COUNT = "transport.netty.worker_count";, +    public static final String CONNECTIONS_PER_NODE_RECOVERY = "transport.connections_per_node.recovery";, +    public static final String CONNECTIONS_PER_NODE_BULK = "transport.connections_per_node.bulk";, +    public static final String CONNECTIONS_PER_NODE_REG = "transport.connections_per_node.reg";, +    public static final String CONNECTIONS_PER_NODE_STATE = "transport.connections_per_node.state";, +    public static final String CONNECTIONS_PER_NODE_PING = "transport.connections_per_node.ping";, +, +        this.workerCount = settings.getAsInt(WORKER_COUNT, EsExecutors.boundedNumberOfProcessors(settings) * 2);, +        this.connectionsPerNodeRecovery = componentSettings.getAsInt("connections_per_node.recovery", settings.getAsInt(CONNECTIONS_PER_NODE_RECOVERY, 2));, +        this.connectionsPerNodeBulk = componentSettings.getAsInt("connections_per_node.bulk", settings.getAsInt(CONNECTIONS_PER_NODE_BULK, 3));, +        this.connectionsPerNodeReg = componentSettings.getAsInt("connections_per_node.reg", settings.getAsInt(CONNECTIONS_PER_NODE_REG, 6));, +        this.connectionsPerNodeState = componentSettings.getAsInt("connections_per_node.high", settings.getAsInt(CONNECTIONS_PER_NODE_STATE, 1));, +        this.connectionsPerNodePing = componentSettings.getAsInt("connections_per_node.ping", settings.getAsInt(CONNECTIONS_PER_NODE_PING, 1));, +++ b/src/main/java/org/elasticsearch/transport/netty/NettyTransport.java, +    public static final String WORKER_COUNT = "transport.netty.worker_count";, +    public static final String CONNECTIONS_PER_NODE_RECOVERY = "transport.connections_per_node.recovery";, +    public static final String CONNECTIONS_PER_NODE_BULK = "transport.connections_per_node.bulk";, +    public static final String CONNECTIONS_PER_NODE_REG = "transport.connections_per_node.reg";, +    public static final String CONNECTIONS_PER_NODE_STATE = "transport.connections_per_node.state";, +    public static final String CONNECTIONS_PER_NODE_PING = "transport.connections_per_node.ping";, +, +        this.workerCount = settings.getAsInt(WORKER_COUNT, EsExecutors.boundedNumberOfProcessors(settings) * 2);, +        this.connectionsPerNodeRecovery = componentSettings.getAsInt("connections_per_node.recovery", settings.getAsInt(CONNECTIONS_PER_NODE_RECOVERY, 2));, +        this.connectionsPerNodeBulk = componentSettings.getAsInt("connections_per_node.bulk", settings.getAsInt(CONNECTIONS_PER_NODE_BULK, 3));, +        this.connectionsPerNodeReg = componentSettings.getAsInt("connections_per_node.reg", settings.getAsInt(CONNECTIONS_PER_NODE_REG, 6));, +        this.connectionsPerNodeState = componentSettings.getAsInt("connections_per_node.high", settings.getAsInt(CONNECTIONS_PER_NODE_STATE, 1));, +        this.connectionsPerNodePing = componentSettings.getAsInt("connections_per_node.ping", settings.getAsInt(CONNECTIONS_PER_NODE_PING, 1));, +++ b/src/test/java/org/elasticsearch/test/InternalTestCluster.java, +import org.elasticsearch.transport.netty.NettyTransport;, +, +        // randomize netty settings, +        if (random.nextBoolean()) {, +            builder.put(NettyTransport.WORKER_COUNT, random.nextInt(3) + 1);, +            builder.put(NettyTransport.CONNECTIONS_PER_NODE_RECOVERY, random.nextInt(2) + 1);, +            builder.put(NettyTransport.CONNECTIONS_PER_NODE_BULK, random.nextInt(3) + 1);, +            builder.put(NettyTransport.CONNECTIONS_PER_NODE_REG, random.nextInt(6) + 1);, +        }, +]