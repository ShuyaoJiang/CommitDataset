[+++ b/docs/java-api/docs/update-by-query.asciidoc, +[[docs-update-by-query]], +== Update By Query API, +, +experimental[The update-by-query API is new and should still be considered experimental.  The API may change in ways that are not backwards compatible], +, +The simplest usage of `updateByQuery` updates each, +document in an index without changing the source. This usage enables , +<<picking-up-a-new-property,picking up a new property>> or another online, +mapping change., +, +[source,java], +--------------------------------------------------, +UpdateByQueryRequestBuilder updateByQuery = UpdateByQueryAction.INSTANCE.newRequestBuilder(client);, +, +updateByQuery.source("cool_things"), +        .filter(termQuery("level", "awesome")), +        .script(new Script("ctx._source.awesome = \"absolutely\""));, +, +BulkIndexByScrollResponse response = updateByQuery.get();, +--------------------------------------------------, +, +The `updatebyQuery` API returns a JSON object similar to the following example:, +, +[source,java], +--------------------------------------------------, +{, +  "took" : 147,, +  "timed_out": false,, +  "updated": 120,, +  "deleted": 0,, +  "batches": 1,, +  "version_conflicts": 0,, +  "noops": 0,, +  "retries": {, +    "bulk": 0,, +    "search": 0, +  },, +  "throttled_millis": 0,, +  "requests_per_second": "unlimited",, +  "throttled_until_millis": 0,, +  "total": 120,, +  "failures" : [ ], +}, +--------------------------------------------------, +// TESTRESPONSE[s/"took" : 147/"took" : "$body.took"/], +, +Calls to the `updateByQuery` API start by getting a snapshot of the index, indexing, +any documents found using the `internal` versioning., +, +NOTE: Version conflicts happen when a document changes between the time of the, +snapshot and the time the index request processes. , +, +When the versions match, `updateByQuery` updates the document, +and increments the version number., +, +All update and query failures cause `updateByQuery` to abort. These failures are, +listed in the `failures` section of the JSON response object. Any successful updates , +remain and are not rolled back. While the first failure causes the abort, the JSON, +response object contains all of the failures generated by the failed bulk request., +, +To prevent version conflicts from causing `updateByQuery` to abort, , +set `conflicts=proceed` on the URL or `"conflicts": "proceed"`, +in the request body. The first example does this because it is trying to, +pick up an online mapping change and a version conflict means that the, +conflicting document was updated between the start of the `updateByQuery`, +and the time when it attempted to update the document. This is fine because, +that update will have picked up the online mapping update., +, +Back to the API format, you can limit `updateByQuery` to a single type. This, +will only update `tweet` documents from the `twitter` index:, +, +// provide API Example, +, +[source,java], +--------------------------------------------------, +, +--------------------------------------------------, +// CONSOLE, +// TEST[setup:twitter], +, +You can also limit `updateByQuery` using the, +<<query-dsl,Query DSL>>. This example updates all documents from the, +`twitter` index for the user `kimchy`:, +, +, +// provide API Example, +, +[source,java], +--------------------------------------------------, +, +{, +  "query": { <1>, +    "term": {, +      "user": "kimchy", +    }, +  }, +}, +--------------------------------------------------, +// CONSOLE]