[+++ b/src/main/java/org/apache/lucene/search/suggest/analyzing/XFuzzySuggester.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +package org.apache.lucene.search.suggest.analyzing;, +, +import org.apache.lucene.analysis.Analyzer;, +import org.apache.lucene.util.BytesRef;, +import org.apache.lucene.util.IntsRef;, +import org.apache.lucene.util.automaton.*;, +import org.apache.lucene.util.fst.FST;, +import org.apache.lucene.util.fst.PairOutputs;, +, +import java.io.IOException;, +import java.util.Arrays;, +import java.util.List;, +import java.util.Set;, +, +/**, + * Implements a fuzzy {@link AnalyzingSuggester}. The similarity measurement is, + * based on the Damerau-Levenshtein (optimal string alignment) algorithm, though, + * you can explicitly choose classic Levenshtein by passing <code>false</code>, + * for the <code>transpositions</code> parameter., + * <p>, + * At most, this query will match terms up to, + * {@value org.apache.lucene.util.automaton.LevenshteinAutomata#MAXIMUM_SUPPORTED_DISTANCE}, + * edits. Higher distances are not supported.  Note that the, + * fuzzy distance is measured in "byte space" on the bytes, + * returned by the {@link org.apache.lucene.analysis.TokenStream}'s {@link, + * org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute}, usually UTF8.  By default, + * the analyzed bytes must be at least 3 {@link, + * #DEFAULT_MIN_FUZZY_LENGTH} bytes before any edits are, + * considered.  Furthermore, the first 1 {@link, + * #DEFAULT_NON_FUZZY_PREFIX} byte is not allowed to be, + * edited.  We allow up to 1 (@link, + * #DEFAULT_MAX_EDITS} edit., + *, + * <p>, + * NOTE: This suggester does not boost suggestions that, + * required no edits over suggestions that did require, + * edits.  This is a known limitation., + *, + * <p>, + * Note: complex query analyzers can have a significant impact on the lookup, + * performance. It's recommended to not use analyzers that drop or inject terms, + * like synonyms to keep the complexity of the prefix intersection low for good, + * lookup performance. At index time, complex analyzers can safely be used., + * </p>, + */, +public final class XFuzzySuggester extends XAnalyzingSuggester {, +    private final int maxEdits;, +    private final boolean transpositions;, +    private final int nonFuzzyPrefix;, +    private final int minFuzzyLength;, +, +    /**, +     * The default minimum length of the key passed to {@link, +     * #lookup} before any edits are allowed., +     */, +    public static final int DEFAULT_MIN_FUZZY_LENGTH = 3;, +, +    /**, +     * The default prefix length where edits are not allowed., +     */, +    public static final int DEFAULT_NON_FUZZY_PREFIX = 1;, +, +    /**, +     * The default maximum number of edits for fuzzy, +     * suggestions., +     */, +    public static final int DEFAULT_MAX_EDITS = 1;, +, +    /**, +     * The default transposition value passed to {@link org.apache.lucene.util.automaton.LevenshteinAutomata}, +     */, +    public static final boolean DEFAULT_TRANSPOSITIONS = true;, +, +    /**, +     * Creates a {@link FuzzySuggester} instance initialized with default values., +     *, +     * @param analyzer the analyzer used for this suggester, +     */, +    public XFuzzySuggester(Analyzer analyzer) {, +        this(analyzer, analyzer);, +    }]