[+++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MultiSearchTemplateResponse.java, +    public MultiSearchTemplateResponse(Item[] items) {, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MultiSearchTemplateResponse.java, +    public MultiSearchTemplateResponse(Item[] items) {, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/TransportMultiSearchTemplateAction.java, +            listener.onResponse(new MultiSearchTemplateResponse(items));, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MultiSearchTemplateResponse.java, +    public MultiSearchTemplateResponse(Item[] items) {, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/TransportMultiSearchTemplateAction.java, +            listener.onResponse(new MultiSearchTemplateResponse(items));, +++ b/modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MultiSearchTemplateIT.java, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MultiSearchTemplateResponse.java, +    public MultiSearchTemplateResponse(Item[] items) {, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/TransportMultiSearchTemplateAction.java, +            listener.onResponse(new MultiSearchTemplateResponse(items));, +++ b/modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MultiSearchTemplateIT.java, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/MeanReciprocalRankTests.java, +import java.util.Vector;, +        Vector<EvalQueryQuality> partialResults = new Vector<>(3);, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MultiSearchTemplateResponse.java, +    public MultiSearchTemplateResponse(Item[] items) {, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/TransportMultiSearchTemplateAction.java, +            listener.onResponse(new MultiSearchTemplateResponse(items));, +++ b/modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MultiSearchTemplateIT.java, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/MeanReciprocalRankTests.java, +import java.util.Vector;, +        Vector<EvalQueryQuality> partialResults = new Vector<>(3);, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/PrecisionAtKTests.java, +import java.util.Vector;, +        Vector<EvalQueryQuality> partialResults = new Vector<>(3);, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MultiSearchTemplateResponse.java, +    public MultiSearchTemplateResponse(Item[] items) {, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/TransportMultiSearchTemplateAction.java, +            listener.onResponse(new MultiSearchTemplateResponse(items));, +++ b/modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MultiSearchTemplateIT.java, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/MeanReciprocalRankTests.java, +import java.util.Vector;, +        Vector<EvalQueryQuality> partialResults = new Vector<>(3);, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/PrecisionAtKTests.java, +import java.util.Vector;, +        Vector<EvalQueryQuality> partialResults = new Vector<>(3);, +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final RuleBasedBreakIterator breakers[] = new RuleBasedBreakIterator[UScript.CODE_LIMIT];, +    private RuleBasedBreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MultiSearchTemplateResponse.java, +    public MultiSearchTemplateResponse(Item[] items) {, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/TransportMultiSearchTemplateAction.java, +            listener.onResponse(new MultiSearchTemplateResponse(items));, +++ b/modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MultiSearchTemplateIT.java, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/MeanReciprocalRankTests.java, +import java.util.Vector;, +        Vector<EvalQueryQuality> partialResults = new Vector<>(3);, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/PrecisionAtKTests.java, +import java.util.Vector;, +        Vector<EvalQueryQuality> partialResults = new Vector<>(3);, +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final RuleBasedBreakIterator breakers[] = new RuleBasedBreakIterator[UScript.CODE_LIMIT];, +    private RuleBasedBreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/server/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_6_2_0 = new Version(V_6_2_0_ID, org.apache.lucene.util.Version.LUCENE_7_2_1);, +    public static final Version V_6_2_1 = new Version(V_6_2_1_ID, org.apache.lucene.util.Version.LUCENE_7_2_1);, +    public static final Version V_6_2_2 = new Version(V_6_2_2_ID, org.apache.lucene.util.Version.LUCENE_7_2_1);, +    public static final Version V_6_2_3 = new Version(V_6_2_3_ID, org.apache.lucene.util.Version.LUCENE_7_2_1);, +    public static final Version V_6_2_4 = new Version(V_6_2_4_ID, org.apache.lucene.util.Version.LUCENE_7_2_1);, +    public static final Version V_6_2_5 = new Version(V_6_2_5_ID, org.apache.lucene.util.Version.LUCENE_7_2_1);, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MultiSearchTemplateResponse.java, +    public MultiSearchTemplateResponse(Item[] items) {, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/TransportMultiSearchTemplateAction.java, +            listener.onResponse(new MultiSearchTemplateResponse(items));, +++ b/modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MultiSearchTemplateIT.java, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/MeanReciprocalRankTests.java, +import java.util.Vector;, +        Vector<EvalQueryQuality> partialResults = new Vector<>(3);, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/PrecisionAtKTests.java, +import java.util.Vector;, +        Vector<EvalQueryQuality> partialResults = new Vector<>(3);, +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final RuleBasedBreakIterator breakers[] = new RuleBasedBreakIterator[UScript.CODE_LIMIT];, +    private RuleBasedBreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/server/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_6_2_0 = new Version(V_6_2_0_ID, org.apache.lucene.util.Version.LUCENE_7_2_1);, +    public static final Version V_6_2_1 = new Version(V_6_2_1_ID, org.apache.lucene.util.Version.LUCENE_7_2_1);, +    public static final Version V_6_2_2 = new Version(V_6_2_2_ID, org.apache.lucene.util.Version.LUCENE_7_2_1);, +    public static final Version V_6_2_3 = new Version(V_6_2_3_ID, org.apache.lucene.util.Version.LUCENE_7_2_1);, +    public static final Version V_6_2_4 = new Version(V_6_2_4_ID, org.apache.lucene.util.Version.LUCENE_7_2_1);, +    public static final Version V_6_2_5 = new Version(V_6_2_5_ID, org.apache.lucene.util.Version.LUCENE_7_2_1);, +++ b/server/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.apache.lucene.document.NumericDocValuesField;, +import org.apache.lucene.index.FilterDirectoryReader;, +import org.apache.lucene.index.SoftDeletesDirectoryReaderWrapper;, +    public static final String SOFT_DELETE_FIELD = "__soft_delete";, +, +     * Unlike {@link #getNumDocs(SegmentInfos)} this method returns a numDocs that always excludes soft-deleted docs., +     * This method is expensive thus prefer using {@link #getNumDocs(SegmentInfos)} unless an exact numDocs is required., +     */, +    public static int getExactNumDocs(IndexCommit commit) throws IOException {, +        try (DirectoryReader reader = DirectoryReader.open(commit)) {, +            return new SoftDeletesDirectoryReaderWrapper(reader, Lucene.SOFT_DELETE_FIELD).numDocs();, +        }, +    }]