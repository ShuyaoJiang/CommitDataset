[+++ b/src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java, +    private final ImmutableMap<String, String> forcedUnderscoreSettings;, +        Map<String, String> forcedUnderscoreSettings = null;, +        for (Map.Entry<String, String> entry : settings.entrySet()) {, +            String toUnderscoreCase = Strings.toUnderscoreCase(entry.getKey());, +            if (!toUnderscoreCase.equals(entry.getKey())) {, +                if (forcedUnderscoreSettings == null) {, +                    forcedUnderscoreSettings = new HashMap<>();, +                }, +                forcedUnderscoreSettings.put(toUnderscoreCase, entry.getValue());, +            }, +        }, +        this.forcedUnderscoreSettings = forcedUnderscoreSettings == null ? ImmutableMap.<String, String>of() : ImmutableMap.copyOf(forcedUnderscoreSettings);, +        return forcedUnderscoreSettings.get(setting);, +            String retVal = get(setting);, +++ b/src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java, +    private final ImmutableMap<String, String> forcedUnderscoreSettings;, +        Map<String, String> forcedUnderscoreSettings = null;, +        for (Map.Entry<String, String> entry : settings.entrySet()) {, +            String toUnderscoreCase = Strings.toUnderscoreCase(entry.getKey());, +            if (!toUnderscoreCase.equals(entry.getKey())) {, +                if (forcedUnderscoreSettings == null) {, +                    forcedUnderscoreSettings = new HashMap<>();, +                }, +                forcedUnderscoreSettings.put(toUnderscoreCase, entry.getValue());, +            }, +        }, +        this.forcedUnderscoreSettings = forcedUnderscoreSettings == null ? ImmutableMap.<String, String>of() : ImmutableMap.copyOf(forcedUnderscoreSettings);, +        return forcedUnderscoreSettings.get(setting);, +            String retVal = get(setting);, +++ b/src/test/java/org/elasticsearch/common/settings/ImmutableSettingsTests.java, +    public void testCamelCaseSupport() {, +        Settings settings = settingsBuilder(), +                .put("test.camelCase", "bar"), +                .build();, +        assertThat(settings.get("test.camelCase"), equalTo("bar"));, +        assertThat(settings.get("test.camel_case"), equalTo("bar"));, +    }, +, +    @Test]