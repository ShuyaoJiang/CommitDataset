[+++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +            try (XContentParser parser = XContentHelper.createParser(querySource)) {, +                QueryParseContext queryParseContext = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +            }, +            QueryParseContext context = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +            try (XContentParser parser = XContentHelper.createParser(querySource)) {, +                QueryParseContext queryParseContext = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +            }, +            QueryParseContext context = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.reset();, +            QueryParseContext queryParseContext = queryShardContext.newParseContext(parser);, +            queryShardContext.reset();, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +            try (XContentParser parser = XContentHelper.createParser(querySource)) {, +                QueryParseContext queryParseContext = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +            }, +            QueryParseContext context = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.reset();, +            QueryParseContext queryParseContext = queryShardContext.newParseContext(parser);, +            queryShardContext.reset();, +++ b/core/src/main/java/org/elasticsearch/index/percolator/PercolatorFieldMapper.java, +import org.elasticsearch.common.xcontent.XContentLocation;, +        XContentParser parser = context.parser();, +        QueryBuilder<?> queryBuilder = parseQueryBuilder(queryShardContext.newParseContext(parser), parser.getTokenLocation());, +        return toQuery(context, mapUnmappedFieldsAsString, parseQueryBuilder(context.newParseContext(parser), parser.getTokenLocation()));, +    static QueryBuilder<?> parseQueryBuilder(QueryParseContext context, XContentLocation location) {, +            throw new ParsingException(location, "Failed to parse", e);, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +            try (XContentParser parser = XContentHelper.createParser(querySource)) {, +                QueryParseContext queryParseContext = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +            }, +            QueryParseContext context = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.reset();, +            QueryParseContext queryParseContext = queryShardContext.newParseContext(parser);, +            queryShardContext.reset();, +++ b/core/src/main/java/org/elasticsearch/index/percolator/PercolatorFieldMapper.java, +import org.elasticsearch.common.xcontent.XContentLocation;, +        XContentParser parser = context.parser();, +        QueryBuilder<?> queryBuilder = parseQueryBuilder(queryShardContext.newParseContext(parser), parser.getTokenLocation());, +        return toQuery(context, mapUnmappedFieldsAsString, parseQueryBuilder(context.newParseContext(parser), parser.getTokenLocation()));, +    static QueryBuilder<?> parseQueryBuilder(QueryParseContext context, XContentLocation location) {, +            throw new ParsingException(location, "Failed to parse", e);, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryParseContext.java, +import java.io.IOException;, +import java.util.Objects;, +, +    private final XContentParser parser;, +    private final IndicesQueriesRegistry indicesQueriesRegistry;, +    private final ParseFieldMatcher parseFieldMatcher;, +    public QueryParseContext(IndicesQueriesRegistry registry, XContentParser parser, ParseFieldMatcher parseFieldMatcher) {, +        this.indicesQueriesRegistry = Objects.requireNonNull(registry, "indices queries registry cannot be null");, +        this.parser = Objects.requireNonNull(parser, "parser cannot be null");, +        this.parseFieldMatcher = Objects.requireNonNull(parseFieldMatcher, "parse field matcher cannot be null");, +        return this.parseFieldMatcher.match(setting, CACHE) || this.parseFieldMatcher.match(setting, CACHE_KEY);, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +            try (XContentParser parser = XContentHelper.createParser(querySource)) {, +                QueryParseContext queryParseContext = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +            }, +            QueryParseContext context = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.reset();, +            QueryParseContext queryParseContext = queryShardContext.newParseContext(parser);, +            queryShardContext.reset();, +++ b/core/src/main/java/org/elasticsearch/index/percolator/PercolatorFieldMapper.java, +import org.elasticsearch.common.xcontent.XContentLocation;, +        XContentParser parser = context.parser();, +        QueryBuilder<?> queryBuilder = parseQueryBuilder(queryShardContext.newParseContext(parser), parser.getTokenLocation());, +        return toQuery(context, mapUnmappedFieldsAsString, parseQueryBuilder(context.newParseContext(parser), parser.getTokenLocation()));, +    static QueryBuilder<?> parseQueryBuilder(QueryParseContext context, XContentLocation location) {, +            throw new ParsingException(location, "Failed to parse", e);, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryParseContext.java, +import java.io.IOException;, +import java.util.Objects;, +, +    private final XContentParser parser;, +    private final IndicesQueriesRegistry indicesQueriesRegistry;, +    private final ParseFieldMatcher parseFieldMatcher;, +    public QueryParseContext(IndicesQueriesRegistry registry, XContentParser parser, ParseFieldMatcher parseFieldMatcher) {, +        this.indicesQueriesRegistry = Objects.requireNonNull(registry, "indices queries registry cannot be null");, +        this.parser = Objects.requireNonNull(parser, "parser cannot be null");, +        this.parseFieldMatcher = Objects.requireNonNull(parseFieldMatcher, "parse field matcher cannot be null");, +        return this.parseFieldMatcher.match(setting, CACHE) || this.parseFieldMatcher.match(setting, CACHE_KEY);, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryRewriteContext.java, +import org.elasticsearch.common.xcontent.XContentParser;, +        return this.indexSettings.getParseFieldMatcher();, +     * Returns a new {@link QueryParseContext} that wraps the provided parser, using the ParseFieldMatcher settings that, +     * are configured in the index settings, +    public QueryParseContext newParseContext(XContentParser parser) {, +        return new QueryParseContext(indicesQueriesRegistry, parser, indexSettings.getParseFieldMatcher());, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +            try (XContentParser parser = XContentHelper.createParser(querySource)) {, +                QueryParseContext queryParseContext = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +            }, +            QueryParseContext context = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.reset();]