[+++ b/x-pack/docs/en/security/authentication/configuring-ldap-realm.asciidoc, +[role="xpack"], +[[configuring-ldap-realm]], +=== Configuring an LDAP realm, +, +You can configure {security} to communicate with a Lightweight Directory Access, +Protocol (LDAP) server to authenticate users. To integrate with LDAP, you, +configure an `ldap` realm and map LDAP groups to user roles., +, +For more information about LDAP realms, see , +{xpack-ref}/ldap-realm.html[LDAP User Authentication]., +, +. Determine which mode you want to use. The `ldap` realm supports two modes of , +operation, a user search mode and a mode with specific templates for user DNs. , ++, +--, +LDAP user search is the most common mode of operation. In this mode, a specific, +user with permission to search the LDAP directory is used to search for the DN , +of the authenticating user based on the provided username and an LDAP attribute. , +Once found, the user is authenticated by attempting to bind to the LDAP server , +using the found DN and the provided password., +, +If your LDAP environment uses a few specific standard naming conditions for, +users, you can use user DN templates to configure the realm. The advantage of, +this method is that a search does not have to be performed to find the user DN., +However, multiple bind operations might be needed to find the correct user DN., +--, +, +. To configure an `ldap` realm with user search:, +, +.. Add a realm configuration of type `ldap` to `elasticsearch.yml` under the, +`xpack.security.authc.realms` namespace. At a minimum, you must set the realm , +`type` to `ldap`, specify the `url` of the LDAP server, and set , +`user_search.base_dn` to the container DN where the users are searched for. If , +you are configuring multiple realms, you should also explicitly set the `order` , +attribute to control the order in which the realms are consulted during , +authentication. See <<ref-ldap-settings>> for all of the options you can set for , +an `ldap` realm., ++, +--, +For example, the following snippet shows an LDAP realm configured with a user search:, +, +[source, yaml], +------------------------------------------------------------, +xpack:, +  security:, +    authc:, +      realms:, +        ldap1:, +          type: ldap, +          order: 0, +          url: "ldaps://ldap.example.com:636", +          bind_dn: "cn=ldapuser, ou=users, o=services, dc=example, dc=com", +          user_search:, +            base_dn: "dc=example,dc=com", +            attribute: cn, +          group_search:, +            base_dn: "dc=example,dc=com", +          files:, +            role_mapping: "CONFIG_DIR/x-pack/role_mapping.yml", +          unmapped_groups_as_roles: false, +------------------------------------------------------------, +, +The password for the `bind_dn` user should be configured by adding the appropriate, +`secure_bind_password` setting to the {es} keystore., +For example, the following command adds the password for the example realm above:, +, +[source, shell], +------------------------------------------------------------, +bin/elasticsearch-keystore add \, +xpack.security.authc.realms.ldap1.secure_bind_password, +------------------------------------------------------------, +, +IMPORTANT: When you configure realms in `elasticsearch.yml`, only the, +realms you specify are used for authentication. If you also want to use the, +`native` or `file` realms, you must include them in the realm chain., +, +--, +, +. To configure an `ldap` realm with user DN templates:, +, +.. Add a realm configuration of type `ldap` to `elasticsearch.yml` in the, +`xpack.security.authc.realms` namespace. At a minimum, you must set the realm , +`type` to `ldap`, specify the `url` of the LDAP server, and specify at least one , +template with the `user_dn_templates` option. If you are configuring multiple , +realms, you should also explicitly set the `order` attribute to control the , +order in which the realms are consulted during authentication. See , +<<ref-ldap-settings>> for all of the options you can set for an `ldap` realm., ++, +--, +For example, the following snippet shows an LDAP realm configured with user DN , +templates:, +, +[source, yaml], +------------------------------------------------------------, +xpack:, +  security:, +    authc:, +      realms:, +        ldap1:]