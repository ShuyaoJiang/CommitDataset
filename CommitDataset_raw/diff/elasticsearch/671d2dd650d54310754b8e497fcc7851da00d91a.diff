[+++ b/src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java, +import org.elasticsearch.ExceptionsHelper;, +            } catch (Throwable e) {, +                } catch (Throwable e1) {, +                    files += " (failure=" + ExceptionsHelper.detailedMessage(e1) + ")";, +        } catch (Throwable e) {, +            throw new IndexShardGatewayRecoveryException(shardId(), "failed to fetch index version after copying it over", e);, +++ b/src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java, +import org.elasticsearch.ExceptionsHelper;, +            } catch (Throwable e) {, +                } catch (Throwable e1) {, +                    files += " (failure=" + ExceptionsHelper.detailedMessage(e1) + ")";, +        } catch (Throwable e) {, +            throw new IndexShardGatewayRecoveryException(shardId(), "failed to fetch index version after copying it over", e);, +++ b/src/main/java/org/elasticsearch/index/store/Store.java, +            ensureOpen();, +            ensureOpen();, +            ensureOpen();, +            ensureOpen();, +            ensureOpen();, +            ensureOpen();, +            ensureOpen();, +            ensureOpen();, +            ensureOpen();, +        public synchronized void close() throws IOException {, +            isOpen = false;, +            ensureOpen();]