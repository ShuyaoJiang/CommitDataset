[+++ b/plugin/src/main/java/org/elasticsearch/xpack/security/authc/esnative/tool/CommandLineHttpClient.java, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/authc/esnative/tool/CommandLineHttpClient.java, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/authc/esnative/tool/SetupPasswordTool.java, +import java.io.InputStream;, +import org.elasticsearch.ExceptionsHelper;, +                terminal.println("Initiating the setup of passwords for reserved users " + String.join(",", USERS) + ".");, +                    (user, password) -> changedPasswordCallback(terminal, user, password), terminal);, +                terminal.println("Initiating the setup of passwords for reserved users " + String.join(",", USERS) + ".");, +                    (user, password) -> changedPasswordCallback(terminal, user, password), terminal);, +        private URL url;, +                url = new URL(providedUrl == null ? client.getDefaultURL() : providedUrl);, +            urlOption = parser.acceptsAll(Arrays.asList("u", "url"), "The url for the change password request.").withRequiredArg();, +            URL route = new URL(url, (url.getPath() + "/_xpack/security/_authenticate").replaceAll("/+", "/") + "?pretty");, +            try {, +                final int httpCode = client.postURL("GET", route, elasticUser, elasticUserPassword, () -> null,, +                        is -> verboseLogResponse(is, terminal));, +                } else if (httpCode != HttpURLConnection.HTTP_OK) {, +                    terminal.println("");, +                    terminal.println("Unexpected response code [" + httpCode + "] from calling GET " + route.toString());, +                    terminal.println("Possible causes include:");, +                    terminal.println(" * The relative path of the URL is incorrect. Is there a proxy in-between?");, +                    terminal.println(" * The protocol (http/https) does not match the port.");, +                    terminal.println(" * Is this really an Elasticsearch server?");, +                    terminal.println("");, +                    throw new UserException(ExitCodes.CONFIG, "Uknown error");, +                terminal.println(Verbosity.VERBOSE, "");, +                terminal.println(Verbosity.VERBOSE, ExceptionsHelper.stackTrace(e));, +            } catch (IOException e) {, +                terminal.println("");, +                terminal.println("Connection failure to: " + route.toString() + " failed: " + e.getMessage());, +                terminal.println(Verbosity.VERBOSE, "");, +                terminal.println(Verbosity.VERBOSE, ExceptionsHelper.stackTrace(e));, +                terminal.println("");, +                throw new UserException(ExitCodes.CONFIG, "Failed to connect to elasticsearch at " +, +                        route.toString() + ". Is the URL correct and elasticsearch running?", e);, +        private void changeUserPassword(String user, SecureString password, Terminal terminal) throws Exception {, +            URL route = new URL(url, (url.getPath() + "/_xpack/security/user/" + user + "/_password").replaceAll("/+", "/") + "?pretty");, +            terminal.println(Verbosity.VERBOSE, "");, +            terminal.println(Verbosity.VERBOSE, "Trying user password change call " + route.toString());, +                final int httpCode = client.postURL("PUT", route, elasticUser, elasticUserPassword, () -> {, +                }, is -> verboseLogResponse(is, terminal));, +                if (httpCode != HttpURLConnection.HTTP_OK) {, +                    terminal.println("");, +                    terminal.println("Unexpected response code [" + httpCode + "] from calling PUT " + route.toString());, +                    terminal.println("Possible next steps:");, +                    terminal.println("* Try running this tool again.");, +                    terminal.println("* Check the elasticsearch logs for additional error details.");, +                    terminal.println("* Use the change password API manually. ");, +                    terminal.println("");, +                    throw new UserException(ExitCodes.TEMP_FAILURE,, +                            "Failed to set password for user [" + user + "].");, +                }, +                terminal.println("");, +                terminal.println("Connection failure to: " + route.toString() + " failed: " + e.getMessage());, +                terminal.println(Verbosity.VERBOSE, "");, +                terminal.println(Verbosity.VERBOSE, ExceptionsHelper.stackTrace(e));, +                terminal.println("");, +                CheckedBiConsumer<String, SecureString, Exception> successCallback, Terminal terminal) throws Exception {, +                    changeUserPassword(entry.getKey(), entry.getValue(), terminal);, +                    changeUserPassword(superUserEntry.getKey(), superUserEntry.getValue(), terminal);, +, +        private void verboseLogResponse(InputStream is, Terminal terminal) throws IOException {, +            if (is != null) {, +                byte[] bytes = Streams.readAll(is);, +                terminal.println(Verbosity.VERBOSE, new String(bytes, StandardCharsets.UTF_8));, +            } else {, +                terminal.println(Verbosity.VERBOSE, "<Empty response>");, +    }, +, +}, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/authc/esnative/tool/CommandLineHttpClient.java, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/authc/esnative/tool/SetupPasswordTool.java, +import java.io.InputStream;, +import org.elasticsearch.ExceptionsHelper;, +                terminal.println("Initiating the setup of passwords for reserved users " + String.join(",", USERS) + ".");, +                    (user, password) -> changedPasswordCallback(terminal, user, password), terminal);, +                terminal.println("Initiating the setup of passwords for reserved users " + String.join(",", USERS) + ".");, +                    (user, password) -> changedPasswordCallback(terminal, user, password), terminal);, +        private URL url;, +                url = new URL(providedUrl == null ? client.getDefaultURL() : providedUrl);, +            urlOption = parser.acceptsAll(Arrays.asList("u", "url"), "The url for the change password request.").withRequiredArg();, +            URL route = new URL(url, (url.getPath() + "/_xpack/security/_authenticate").replaceAll("/+", "/") + "?pretty");, +            try {, +                final int httpCode = client.postURL("GET", route, elasticUser, elasticUserPassword, () -> null,, +                        is -> verboseLogResponse(is, terminal));, +                } else if (httpCode != HttpURLConnection.HTTP_OK) {, +                    terminal.println("");, +                    terminal.println("Unexpected response code [" + httpCode + "] from calling GET " + route.toString());, +                    terminal.println("Possible causes include:");, +                    terminal.println(" * The relative path of the URL is incorrect. Is there a proxy in-between?");, +                    terminal.println(" * The protocol (http/https) does not match the port.");, +                    terminal.println(" * Is this really an Elasticsearch server?");, +                    terminal.println("");, +                    throw new UserException(ExitCodes.CONFIG, "Uknown error");, +                terminal.println(Verbosity.VERBOSE, "");, +                terminal.println(Verbosity.VERBOSE, ExceptionsHelper.stackTrace(e));, +            } catch (IOException e) {, +                terminal.println("");, +                terminal.println("Connection failure to: " + route.toString() + " failed: " + e.getMessage());, +                terminal.println(Verbosity.VERBOSE, "");]