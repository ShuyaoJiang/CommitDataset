[+++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/client.asciidoc, +Client client = new TransportClient(), +Client client =    new TransportClient(settings);, +TransportClient client = new TransportClient(settings);, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/client.asciidoc, +Client client = new TransportClient(), +Client client =    new TransportClient(settings);, +TransportClient client = new TransportClient(settings);, +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/client.asciidoc, +Client client = new TransportClient(), +Client client =    new TransportClient(settings);, +TransportClient client = new TransportClient(settings);, +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ /dev/null, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/client.asciidoc, +Client client = new TransportClient(), +Client client =    new TransportClient(settings);, +TransportClient client = new TransportClient(settings);, +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ /dev/null, +++ /dev/null, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/client.asciidoc, +Client client = new TransportClient(), +Client client =    new TransportClient(settings);, +TransportClient client = new TransportClient(settings);, +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/client.asciidoc, +Client client = new TransportClient(), +Client client =    new TransportClient(settings);, +TransportClient client = new TransportClient(settings);, +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/client.asciidoc, +Client client = new TransportClient(), +Client client =    new TransportClient(settings);, +TransportClient client = new TransportClient(settings);, +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/client.asciidoc, +Client client = new TransportClient(), +Client client =    new TransportClient(settings);, +TransportClient client = new TransportClient(settings);, +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of offical client., +++ b/docs/java-api/client.asciidoc, +Client client = new TransportClient(), +Client client =    new TransportClient(settings);, +TransportClient client = new TransportClient(settings);, +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slighly more precise but, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null]