[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.AllocationModule;, +        return ImmutableList.of(new AllocationModule(settings), new OperationRoutingModule(settings));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.AllocationModule;, +        return ImmutableList.of(new AllocationModule(settings), new OperationRoutingModule(settings));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private final AllocationService allocationService;, +                                    AllocationService allocationService, ThreadPool threadPool) {, +        this.allocationService = allocationService;, +                RoutingAllocation.Result routingResult = allocationService.applyFailedShard(currentState, shardRouting);, +                RoutingAllocation.Result routingResult = allocationService.applyStartedShards(currentState, shards);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.AllocationModule;, +        return ImmutableList.of(new AllocationModule(settings), new OperationRoutingModule(settings));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private final AllocationService allocationService;, +                                    AllocationService allocationService, ThreadPool threadPool) {, +        this.allocationService = allocationService;, +                RoutingAllocation.Result routingResult = allocationService.applyFailedShard(currentState, shardRouting);, +                RoutingAllocation.Result routingResult = allocationService.applyStartedShards(currentState, shards);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private final AllocationService allocationService;, +                                              AllocationService allocationService, NodeIndexCreatedAction nodeIndexCreatedAction, MetaDataService metaDataService, @RiverIndexName String riverIndexName) {, +        this.allocationService = allocationService;, +                        RoutingAllocation.Result routingResult = allocationService.reroute(newClusterStateBuilder().state(updatedState).routingTable(routingTableBuilder).build());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.AllocationModule;, +        return ImmutableList.of(new AllocationModule(settings), new OperationRoutingModule(settings));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private final AllocationService allocationService;, +                                    AllocationService allocationService, ThreadPool threadPool) {, +        this.allocationService = allocationService;, +                RoutingAllocation.Result routingResult = allocationService.applyFailedShard(currentState, shardRouting);, +                RoutingAllocation.Result routingResult = allocationService.applyStartedShards(currentState, shards);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private final AllocationService allocationService;, +                                              AllocationService allocationService, NodeIndexCreatedAction nodeIndexCreatedAction, MetaDataService metaDataService, @RiverIndexName String riverIndexName) {, +        this.allocationService = allocationService;, +                        RoutingAllocation.Result routingResult = allocationService.reroute(newClusterStateBuilder().state(updatedState).routingTable(routingTableBuilder).build());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private final AllocationService allocationService;, +    @Inject public MetaDataDeleteIndexService(Settings settings, ThreadPool threadPool, ClusterService clusterService, AllocationService allocationService,, +        this.allocationService = allocationService;, +                    RoutingAllocation.Result routingResult = allocationService.reroute(, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.AllocationModule;, +        return ImmutableList.of(new AllocationModule(settings), new OperationRoutingModule(settings));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private final AllocationService allocationService;, +                                    AllocationService allocationService, ThreadPool threadPool) {, +        this.allocationService = allocationService;, +                RoutingAllocation.Result routingResult = allocationService.applyFailedShard(currentState, shardRouting);, +                RoutingAllocation.Result routingResult = allocationService.applyStartedShards(currentState, shards);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private final AllocationService allocationService;, +                                              AllocationService allocationService, NodeIndexCreatedAction nodeIndexCreatedAction, MetaDataService metaDataService, @RiverIndexName String riverIndexName) {, +        this.allocationService = allocationService;, +                        RoutingAllocation.Result routingResult = allocationService.reroute(newClusterStateBuilder().state(updatedState).routingTable(routingTableBuilder).build());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private final AllocationService allocationService;, +    @Inject public MetaDataDeleteIndexService(Settings settings, ThreadPool threadPool, ClusterService clusterService, AllocationService allocationService,, +        this.allocationService = allocationService;, +                    RoutingAllocation.Result routingResult = allocationService.reroute(, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataStateIndexService.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private final AllocationService allocationService;, +    @Inject public MetaDataStateIndexService(Settings settings, ClusterService clusterService, AllocationService allocationService) {, +        this.allocationService = allocationService;, +                RoutingAllocation.Result routingResult = allocationService.reroute(newClusterStateBuilder().state(updatedState).routingTable(rtBuilder).build());, +                RoutingAllocation.Result routingResult = allocationService.reroute(newClusterStateBuilder().state(updatedState).routingTable(rtBuilder).build());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.AllocationModule;, +        return ImmutableList.of(new AllocationModule(settings), new OperationRoutingModule(settings));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private final AllocationService allocationService;, +                                    AllocationService allocationService, ThreadPool threadPool) {, +        this.allocationService = allocationService;, +                RoutingAllocation.Result routingResult = allocationService.applyFailedShard(currentState, shardRouting);, +                RoutingAllocation.Result routingResult = allocationService.applyStartedShards(currentState, shards);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private final AllocationService allocationService;, +                                              AllocationService allocationService, NodeIndexCreatedAction nodeIndexCreatedAction, MetaDataService metaDataService, @RiverIndexName String riverIndexName) {, +        this.allocationService = allocationService;, +                        RoutingAllocation.Result routingResult = allocationService.reroute(newClusterStateBuilder().state(updatedState).routingTable(routingTableBuilder).build());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private final AllocationService allocationService;, +    @Inject public MetaDataDeleteIndexService(Settings settings, ThreadPool threadPool, ClusterService clusterService, AllocationService allocationService,]