[+++ b/core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/FastVectorHighlighter.java, +                if (field.fieldOptions().requireFieldMatch()) {, +                    /**, +                     * we use top level reader to rewrite the query against all readers,, +                     * with use caching it across hits (and across readers...), +                     */, +                    entry.fieldMatchFieldQuery = new CustomFieldQuery(highlighterContext.query,, +                        hitContext.topLevelReader(), true, field.fieldOptions().requireFieldMatch());, +                } else {, +                    /**, +                     * we use top level reader to rewrite the query against all readers,, +                     * with use caching it across hits (and across readers...), +                     */, +                    entry.noFieldMatchFieldQuery = new CustomFieldQuery(highlighterContext.query,, +                        hitContext.topLevelReader(), true, field.fieldOptions().requireFieldMatch());, +                }, +            final FieldQuery fieldQuery;, +            if (field.fieldOptions().requireFieldMatch()) {, +                fieldQuery = entry.fieldMatchFieldQuery;, +            } else {, +                fieldQuery = entry.noFieldMatchFieldQuery;, +            }, +        public FieldQuery noFieldMatchFieldQuery;, +        public FieldQuery fieldMatchFieldQuery;, +++ b/core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/FastVectorHighlighter.java, +                if (field.fieldOptions().requireFieldMatch()) {, +                    /**, +                     * we use top level reader to rewrite the query against all readers,, +                     * with use caching it across hits (and across readers...), +                     */, +                    entry.fieldMatchFieldQuery = new CustomFieldQuery(highlighterContext.query,, +                        hitContext.topLevelReader(), true, field.fieldOptions().requireFieldMatch());, +                } else {, +                    /**, +                     * we use top level reader to rewrite the query against all readers,, +                     * with use caching it across hits (and across readers...), +                     */, +                    entry.noFieldMatchFieldQuery = new CustomFieldQuery(highlighterContext.query,, +                        hitContext.topLevelReader(), true, field.fieldOptions().requireFieldMatch());, +                }, +            final FieldQuery fieldQuery;, +            if (field.fieldOptions().requireFieldMatch()) {, +                fieldQuery = entry.fieldMatchFieldQuery;, +            } else {, +                fieldQuery = entry.noFieldMatchFieldQuery;, +            }, +        public FieldQuery noFieldMatchFieldQuery;, +        public FieldQuery fieldMatchFieldQuery;, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/search.highlight/20_fvh.yml, +setup:, +  - do:, +      indices.create:, +          index: test, +          body:, +            mappings:, +              doc:, +                "properties":, +                  "title":, +                     "type": "text", +                     "term_vector": "with_positions_offsets", +                  "description":, +                     "type": "text", +                     "term_vector": "with_positions_offsets", +  - do:, +      index:, +        index: test, +        type:  doc, +        id:    1, +        body:, +            "title" : "The quick brown fox is brown", +            "description" : "The quick pink panther is pink", +  - do:, +      indices.refresh: {}, +, +---, +"Highlight query":, +  - skip:, +      version: " - 5.5.99", +      reason:  bug fixed in 5.6, +  - do:, +      search:, +        body:, +         highlight:, +          type: fvh, +          fields:, +            description:, +              type: fvh, +              highlight_query:, +                prefix:, +                  description: br, +            title:, +              type: fvh, +              highlight_query:, +                prefix:, +                  title: br, +, +  - match: {hits.hits.0.highlight.title.0: "The quick <em>brown</em> fox is <em>brown</em>"}, +  - is_false: hits.hits.0.highlight.description]