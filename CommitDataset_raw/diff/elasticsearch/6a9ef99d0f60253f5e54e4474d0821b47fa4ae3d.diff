[+++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/AwarenessAllocationDecider.java, +                if (assignedShard.started() || assignedShard.initializing()) {, +                    // Note: this also counts relocation targets as that will be the new location of the shard., +                    // Relocation sources should not be counted as the shard is moving away, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/AwarenessAllocationDecider.java, +                if (assignedShard.started() || assignedShard.initializing()) {, +                    // Note: this also counts relocation targets as that will be the new location of the shard., +                    // Relocation sources should not be counted as the shard is moving away, +++ b/core/src/test/java/org/elasticsearch/cluster/routing/allocation/AwarenessAllocationTests.java, +import org.elasticsearch.cluster.routing.allocation.command.AllocationCommands;, +import org.elasticsearch.cluster.routing.allocation.command.CancelAllocationCommand;, +import org.elasticsearch.cluster.routing.allocation.command.MoveAllocationCommand;, +import org.elasticsearch.index.shard.ShardId;, +                        .put(newNode("A-4", ImmutableMap.of("zone", "a"))), +, +        // Cancel all initializing shards and move started primary to another node., +        AllocationCommands commands = new AllocationCommands();, +        String primaryNode = null;, +        for (ShardRouting routing : routingTable.allShards()) {, +            if (routing.primary()) {, +                primaryNode = routing.currentNodeId();, +            } else if (routing.initializing()) {, +                commands.add(new CancelAllocationCommand(routing.shardId(), routing.currentNodeId(), false));, +            }, +        }, +        commands.add(new MoveAllocationCommand(new ShardId("test", 0), primaryNode, "A-4"));, +, +        routingTable = strategy.reroute(clusterState, commands).routingTable();, +        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();, +, +        assertThat(clusterState.getRoutingNodes().shardsWithState(STARTED).size(), equalTo(0));, +        assertThat(clusterState.getRoutingNodes().shardsWithState(RELOCATING).size(), equalTo(1));, +        assertThat(clusterState.getRoutingNodes().shardsWithState(INITIALIZING).size(), equalTo(4)); // +1 for relocating shard., +        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1)); // Still 1 unassigned.]