[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalMappedSignificantTerms.java, +        builder.field(BG_COUNT, supersetSize);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalMappedSignificantTerms.java, +        builder.field(BG_COUNT, supersetSize);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantLongTerms.java, +        return parseSignificantTermsXContent(() -> PARSER.parse(parser, null), name);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalMappedSignificantTerms.java, +        builder.field(BG_COUNT, supersetSize);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantLongTerms.java, +        return parseSignificantTermsXContent(() -> PARSER.parse(parser, null), name);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantStringTerms.java, +        return parseSignificantTermsXContent(() -> PARSER.parse(parser, null), name);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalMappedSignificantTerms.java, +        builder.field(BG_COUNT, supersetSize);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantLongTerms.java, +        return parseSignificantTermsXContent(() -> PARSER.parse(parser, null), name);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantStringTerms.java, +        return parseSignificantTermsXContent(() -> PARSER.parse(parser, null), name);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantTerms.java, +import org.elasticsearch.common.CheckedSupplier;, +import org.elasticsearch.common.ParseField;, +    protected long supersetSize;, +    protected long getSupersetSize() {, +        return supersetSize;, +    }, +, +        builder.field(InternalMappedSignificantTerms.BG_COUNT, supersetSize);, +    static <T extends ParsedSignificantTerms> T parseSignificantTermsXContent(final CheckedSupplier<T, IOException> aggregationSupplier,, +                                                                              final String name) throws IOException {, +        T aggregation = aggregationSupplier.get();, +        aggregation.setName(name);, +        for (ParsedBucket bucket : aggregation.buckets) {, +            bucket.subsetSize = aggregation.subsetSize;, +            bucket.supersetSize = aggregation.supersetSize;, +        }, +        return aggregation;, +    }, +, +        objectParser.declareLong((parsedTerms, value) -> parsedTerms.supersetSize = value ,, +                new ParseField(InternalMappedSignificantTerms.BG_COUNT));, +        protected long subsetSize;, +        protected long supersetSize;, +            return supersetSize;, +            return subsetSize;, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalMappedSignificantTerms.java, +        builder.field(BG_COUNT, supersetSize);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantLongTerms.java, +        return parseSignificantTermsXContent(() -> PARSER.parse(parser, null), name);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantStringTerms.java, +        return parseSignificantTermsXContent(() -> PARSER.parse(parser, null), name);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantTerms.java, +import org.elasticsearch.common.CheckedSupplier;, +import org.elasticsearch.common.ParseField;, +    protected long supersetSize;, +    protected long getSupersetSize() {, +        return supersetSize;, +    }, +, +        builder.field(InternalMappedSignificantTerms.BG_COUNT, supersetSize);, +    static <T extends ParsedSignificantTerms> T parseSignificantTermsXContent(final CheckedSupplier<T, IOException> aggregationSupplier,, +                                                                              final String name) throws IOException {, +        T aggregation = aggregationSupplier.get();, +        aggregation.setName(name);, +        for (ParsedBucket bucket : aggregation.buckets) {, +            bucket.subsetSize = aggregation.subsetSize;, +            bucket.supersetSize = aggregation.supersetSize;, +        }, +        return aggregation;, +    }, +, +        objectParser.declareLong((parsedTerms, value) -> parsedTerms.supersetSize = value ,, +                new ParseField(InternalMappedSignificantTerms.BG_COUNT));, +        protected long subsetSize;, +        protected long supersetSize;, +            return supersetSize;, +            return subsetSize;, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTerms.java, +        /**, +         * @return The significant score for the subset, +         */, +        /**, +         * @return The number of docs in the subset containing a particular term., +         * This number is equal to the document count of the bucket., +         */, +        /**, +         * @return The numbers of docs in the subset (also known as "foreground set")., +         * This number is equal to the document count of the containing aggregation., +         */, +        long getSubsetSize();, +, +        /**, +         * @return The number of docs in the superset containing a particular term (also, +         * known as the "background count" of the bucket), +         */, +        /**, +         * @return The numbers of docs in the superset (ordinarily the background count, +         * of the containing aggregation)., +         */, +        /**, +         * @return The key, expressed as a number]