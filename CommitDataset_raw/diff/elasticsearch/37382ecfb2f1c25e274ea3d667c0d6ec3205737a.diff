[+++ b/plugins/discovery-azure/build.gradle, +import org.elasticsearch.gradle.LoggedExec, +, +// needed to be consistent with ssl host checking, +String host = InetAddress.getLoopbackAddress().getHostAddress();, +, +// location of keystore and files to generate it, +File keystore = new File(project.buildDir, 'keystore/test-node.jks'), +, +// generate the keystore, +task createKey(type: LoggedExec) {, +  doFirst {, +    project.delete(keystore.parentFile), +    keystore.parentFile.mkdirs(), +  }, +  executable = 'keytool', +  standardInput = new ByteArrayInputStream('FirstName LastName\nUnit\nOrganization\nCity\nState\nNL\nyes\n\n'.getBytes('UTF-8')), +  args '-genkey',, +          '-alias', 'test-node',, +          '-keystore', keystore,, +          '-keyalg', 'RSA',, +          '-keysize', '2048',, +          '-validity', '712',, +          '-dname', 'CN=' + host,, +          '-keypass', 'keypass',, +          '-storepass', 'keypass', +}, +, +// add keystore to test classpath: it expects it there, +sourceSets.test.resources.srcDir(keystore.parentFile), +processTestResources.dependsOn(createKey), +, +++ b/plugins/discovery-azure/build.gradle, +import org.elasticsearch.gradle.LoggedExec, +, +// needed to be consistent with ssl host checking, +String host = InetAddress.getLoopbackAddress().getHostAddress();, +, +// location of keystore and files to generate it, +File keystore = new File(project.buildDir, 'keystore/test-node.jks'), +, +// generate the keystore, +task createKey(type: LoggedExec) {, +  doFirst {, +    project.delete(keystore.parentFile), +    keystore.parentFile.mkdirs(), +  }, +  executable = 'keytool', +  standardInput = new ByteArrayInputStream('FirstName LastName\nUnit\nOrganization\nCity\nState\nNL\nyes\n\n'.getBytes('UTF-8')), +  args '-genkey',, +          '-alias', 'test-node',, +          '-keystore', keystore,, +          '-keyalg', 'RSA',, +          '-keysize', '2048',, +          '-validity', '712',, +          '-dname', 'CN=' + host,, +          '-keypass', 'keypass',, +          '-storepass', 'keypass', +}, +, +// add keystore to test classpath: it expects it there, +sourceSets.test.resources.srcDir(keystore.parentFile), +processTestResources.dependsOn(createKey), +, +++ b/plugins/discovery-azure/src/main/java/org/elasticsearch/cloud/azure/management/AzureComputeService.java, +import org.elasticsearch.discovery.azure.AzureUnicastHostsProvider.Deployment;, +, +import java.net.URI;, +import java.net.URISyntaxException;, +import java.util.function.Function;, +, +        // so that it can overridden for tests, +        public static final Setting<URI> ENDPOINT_SETTING = new Setting<URI>("cloud.azure.management.endpoint",, +            "https://management.core.windows.net/", s -> {, +                try {, +                    return new URI(s);, +                } catch (URISyntaxException e) {, +                    throw new IllegalArgumentException(e);, +                }, +            }, Property.NodeScope);, +        public static final Setting<String> ENDPOINT_NAME_SETTING = new Setting<>("discovery.azure.endpoint.name", "elasticsearch",, +            Function.identity(), Property.NodeScope);, +        public static final Setting<String> DEPLOYMENT_NAME_SETTING = Setting.simpleString("discovery.azure.deployment.name",, +            Property.NodeScope);, +        public static final Setting<Deployment> DEPLOYMENT_SLOT_SETTING = new Setting<>("discovery.azure.deployment.slot",, +            Deployment.PRODUCTION.name(), Deployment::fromString, Property.NodeScope);, +++ b/plugins/discovery-azure/build.gradle, +import org.elasticsearch.gradle.LoggedExec, +, +// needed to be consistent with ssl host checking, +String host = InetAddress.getLoopbackAddress().getHostAddress();, +, +// location of keystore and files to generate it, +File keystore = new File(project.buildDir, 'keystore/test-node.jks'), +, +// generate the keystore, +task createKey(type: LoggedExec) {, +  doFirst {, +    project.delete(keystore.parentFile), +    keystore.parentFile.mkdirs()]