[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/Numbers.java, +        return (short) (((arr[0] & 0xff) << 8) | (arr[1] & 0xff));, +        arr[0] = (byte) (val >>> 8);, +        arr[1] = (byte) (val);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/Numbers.java, +        return (short) (((arr[0] & 0xff) << 8) | (arr[1] & 0xff));, +        arr[0] = (byte) (val >>> 8);, +        arr[1] = (byte) (val);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/support/XContentMapValues.java, +    public static byte nodeByteValue(Object node) {, +        if (node instanceof Number) {, +            return ((Number) node).byteValue();, +        }, +        return Byte.parseByte(node.toString());, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/Numbers.java, +        return (short) (((arr[0] & 0xff) << 8) | (arr[1] & 0xff));, +        arr[0] = (byte) (val >>> 8);, +        arr[1] = (byte) (val);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/support/XContentMapValues.java, +    public static byte nodeByteValue(Object node) {, +        if (node instanceof Number) {, +            return ((Number) node).byteValue();, +        }, +        return Byte.parseByte(node.toString());, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/field/data/FieldDataType.java, +import org.elasticsearch.index.field.data.bytes.ByteFieldDataType;, +        public static final ByteFieldDataType BYTE = new ByteFieldDataType();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/Numbers.java, +        return (short) (((arr[0] & 0xff) << 8) | (arr[1] & 0xff));, +        arr[0] = (byte) (val >>> 8);, +        arr[1] = (byte) (val);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/support/XContentMapValues.java, +    public static byte nodeByteValue(Object node) {, +        if (node instanceof Number) {, +            return ((Number) node).byteValue();, +        }, +        return Byte.parseByte(node.toString());, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/field/data/FieldDataType.java, +import org.elasticsearch.index.field.data.bytes.ByteFieldDataType;, +        public static final ByteFieldDataType BYTE = new ByteFieldDataType();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/field/data/bytes/ByteDocFieldData.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.index.field.data.bytes;, +, +import org.elasticsearch.index.field.data.NumericDocFieldData;, +, +/**, + * @author kimchy (shay.banon), + */, +public class ByteDocFieldData extends NumericDocFieldData<ByteFieldData> {, +, +    public ByteDocFieldData(ByteFieldData fieldData) {, +        super(fieldData);, +    }, +, +    public byte getValue() {, +        return fieldData.value(docId);, +    }, +, +    public byte[] getValues() {, +        return fieldData.values(docId);, +    }, +}, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/Numbers.java, +        return (short) (((arr[0] & 0xff) << 8) | (arr[1] & 0xff));, +        arr[0] = (byte) (val >>> 8);, +        arr[1] = (byte) (val);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/support/XContentMapValues.java, +    public static byte nodeByteValue(Object node) {, +        if (node instanceof Number) {, +            return ((Number) node).byteValue();, +        }, +        return Byte.parseByte(node.toString());, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/field/data/FieldDataType.java]