[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +import java.util.concurrent.ScheduledFuture;, +    private final TimeValue reconnectInterval;, +, +    private volatile ScheduledFuture reconnectToNodes;, +, +, +        this.reconnectInterval = componentSettings.getAsTime("reconnect_interval", TimeValue.timeValueSeconds(30));, +        this.reconnectToNodes = threadPool.scheduleWithFixedDelay(new ReconnectToNodes(), reconnectInterval);, +        this.reconnectToNodes.cancel(true);, +, +    private class ReconnectToNodes implements Runnable {, +        @Override public void run() {, +            // master node will check against all nodes if its alive with certain discoveries implementations,, +            // but we can't rely on that, so we check on it as well, +            for (DiscoveryNode node : clusterState.nodes()) {, +                if (lifecycle.stoppedOrClosed()) {, +                    return;, +                }, +                if (clusterState.nodes().nodeExists(node.id())) { // we double check existence of node since connectToNode might take time..., +                    if (!transportService.nodeConnected(node)) {, +                        try {, +                            transportService.connectToNode(node);, +                        } catch (Exception e) {, +                            if (lifecycle.stoppedOrClosed()) {, +                                return;, +                            }, +                            if (clusterState.nodes().nodeExists(node.id())) { // double check here as well, maybe its gone?, +                                logger.warn("failed to reconnect to node {}", e, node);, +                            }, +                        }, +                    }, +                }, +            }, +        }, +    }]