[+++ b/core/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +            return new IndexShardRoutingTable(shardId, Collections.unmodifiableList(new ArrayList<>(shards)));, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +            return new IndexShardRoutingTable(shardId, Collections.unmodifiableList(new ArrayList<>(shards)));, +++ b/core/src/main/java/org/elasticsearch/gateway/DanglingIndicesState.java, +            allocateDangledIndices.allocateDangled(Collections.unmodifiableCollection(new ArrayList<>(danglingIndices.values())), new LocalAllocateDangledIndices.Listener() {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +            return new IndexShardRoutingTable(shardId, Collections.unmodifiableList(new ArrayList<>(shards)));, +++ b/core/src/main/java/org/elasticsearch/gateway/DanglingIndicesState.java, +            allocateDangledIndices.allocateDangled(Collections.unmodifiableCollection(new ArrayList<>(danglingIndices.values())), new LocalAllocateDangledIndices.Listener() {, +++ b/core/src/main/java/org/elasticsearch/index/shard/CommitPoint.java, +import java.util.ArrayList;, +        this.indexFiles = Collections.unmodifiableList(new ArrayList<>(indexFiles));, +        this.translogFiles = Collections.unmodifiableList(new ArrayList<>(translogFiles));, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +            return new IndexShardRoutingTable(shardId, Collections.unmodifiableList(new ArrayList<>(shards)));, +++ b/core/src/main/java/org/elasticsearch/gateway/DanglingIndicesState.java, +            allocateDangledIndices.allocateDangled(Collections.unmodifiableCollection(new ArrayList<>(danglingIndices.values())), new LocalAllocateDangledIndices.Listener() {, +++ b/core/src/main/java/org/elasticsearch/index/shard/CommitPoint.java, +import java.util.ArrayList;, +        this.indexFiles = Collections.unmodifiableList(new ArrayList<>(indexFiles));, +        this.translogFiles = Collections.unmodifiableList(new ArrayList<>(translogFiles));, +++ b/core/src/main/java/org/elasticsearch/index/shard/CommitPoints.java, +import java.util.ArrayList;, +        this.commitPoints = Collections.unmodifiableList(new ArrayList<>(commitPoints));, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +            return new IndexShardRoutingTable(shardId, Collections.unmodifiableList(new ArrayList<>(shards)));, +++ b/core/src/main/java/org/elasticsearch/gateway/DanglingIndicesState.java, +            allocateDangledIndices.allocateDangled(Collections.unmodifiableCollection(new ArrayList<>(danglingIndices.values())), new LocalAllocateDangledIndices.Listener() {, +++ b/core/src/main/java/org/elasticsearch/index/shard/CommitPoint.java, +import java.util.ArrayList;, +        this.indexFiles = Collections.unmodifiableList(new ArrayList<>(indexFiles));, +        this.translogFiles = Collections.unmodifiableList(new ArrayList<>(translogFiles));, +++ b/core/src/main/java/org/elasticsearch/index/shard/CommitPoints.java, +import java.util.ArrayList;, +        this.commitPoints = Collections.unmodifiableList(new ArrayList<>(commitPoints));, +++ b/core/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java, +import java.util.ArrayList;, +        this.indexFiles = Collections.unmodifiableList(new ArrayList<>(indexFiles));, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +            return new IndexShardRoutingTable(shardId, Collections.unmodifiableList(new ArrayList<>(shards)));, +++ b/core/src/main/java/org/elasticsearch/gateway/DanglingIndicesState.java, +            allocateDangledIndices.allocateDangled(Collections.unmodifiableCollection(new ArrayList<>(danglingIndices.values())), new LocalAllocateDangledIndices.Listener() {, +++ b/core/src/main/java/org/elasticsearch/index/shard/CommitPoint.java, +import java.util.ArrayList;, +        this.indexFiles = Collections.unmodifiableList(new ArrayList<>(indexFiles));, +        this.translogFiles = Collections.unmodifiableList(new ArrayList<>(translogFiles));, +++ b/core/src/main/java/org/elasticsearch/index/shard/CommitPoints.java, +import java.util.ArrayList;, +        this.commitPoints = Collections.unmodifiableList(new ArrayList<>(commitPoints));, +++ b/core/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java, +import java.util.ArrayList;, +        this.indexFiles = Collections.unmodifiableList(new ArrayList<>(indexFiles));, +++ b/core/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshots.java, +        this.shardSnapshots = Collections.unmodifiableList(new ArrayList<>(shardSnapshots));, +            mapBuilder.put(entry.getKey(), Collections.unmodifiableList(new ArrayList<>(entry.getValue())));, +            mapBuilder.put(entry.getKey(), Collections.unmodifiableList(new ArrayList<>(entry.getValue())));, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +            return new IndexShardRoutingTable(shardId, Collections.unmodifiableList(new ArrayList<>(shards)));, +++ b/core/src/main/java/org/elasticsearch/gateway/DanglingIndicesState.java, +            allocateDangledIndices.allocateDangled(Collections.unmodifiableCollection(new ArrayList<>(danglingIndices.values())), new LocalAllocateDangledIndices.Listener() {, +++ b/core/src/main/java/org/elasticsearch/index/shard/CommitPoint.java, +import java.util.ArrayList;, +        this.indexFiles = Collections.unmodifiableList(new ArrayList<>(indexFiles));, +        this.translogFiles = Collections.unmodifiableList(new ArrayList<>(translogFiles));, +++ b/core/src/main/java/org/elasticsearch/index/shard/CommitPoints.java, +import java.util.ArrayList;, +        this.commitPoints = Collections.unmodifiableList(new ArrayList<>(commitPoints));, +++ b/core/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java, +import java.util.ArrayList;, +        this.indexFiles = Collections.unmodifiableList(new ArrayList<>(indexFiles));, +++ b/core/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshots.java, +        this.shardSnapshots = Collections.unmodifiableList(new ArrayList<>(shardSnapshots));, +            mapBuilder.put(entry.getKey(), Collections.unmodifiableList(new ArrayList<>(entry.getValue())));, +            mapBuilder.put(entry.getKey(), Collections.unmodifiableList(new ArrayList<>(entry.getValue())));, +++ b/core/src/main/java/org/elasticsearch/snapshots/SnapshotUtils.java, +            return Collections.unmodifiableList(new ArrayList<>(Arrays.asList(selectedIndices)));]