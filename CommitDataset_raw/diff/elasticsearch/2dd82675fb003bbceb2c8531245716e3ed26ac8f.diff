[+++ b/src/main/java/org/elasticsearch/action/admin/indices/delete/TransportDeleteIndexAction.java, +import org.elasticsearch.common.regex.Regex;, +        ClusterState state = clusterService.state();, +        String[] indicesOrAliases = request.indices();, +        request.indices(state.metaData().concreteIndices(request.indices()));, +        if (disableDeleteAllIndices) {, +            // simple check on the original indices with "all" default parameter, +            if (indicesOrAliases == null || indicesOrAliases.length == 0 || (indicesOrAliases.length == 1 && indicesOrAliases[0].equals("_all"))) {, +            // if we end up matching on all indices, check, if its a wildcard parameter, or a "-something" structure, +            if (request.indices().length == state.metaData().concreteAllIndices().length && indicesOrAliases.length > 0) {, +                boolean hasRegex = false;, +                for (String indexOrAlias : indicesOrAliases) {, +                    if (Regex.isSimpleMatchPattern(indexOrAlias)) {, +                        hasRegex = true;, +                    }, +                }, +                if (indicesOrAliases.length > 0 && (hasRegex || indicesOrAliases[0].charAt(0) == '-')) {, +                    throw new ElasticSearchIllegalArgumentException("deleting all indices is disabled");, +                }, +            }, +        }, +++ b/src/main/java/org/elasticsearch/action/admin/indices/delete/TransportDeleteIndexAction.java, +import org.elasticsearch.common.regex.Regex;, +        ClusterState state = clusterService.state();, +        String[] indicesOrAliases = request.indices();, +        request.indices(state.metaData().concreteIndices(request.indices()));, +        if (disableDeleteAllIndices) {, +            // simple check on the original indices with "all" default parameter, +            if (indicesOrAliases == null || indicesOrAliases.length == 0 || (indicesOrAliases.length == 1 && indicesOrAliases[0].equals("_all"))) {, +            // if we end up matching on all indices, check, if its a wildcard parameter, or a "-something" structure, +            if (request.indices().length == state.metaData().concreteAllIndices().length && indicesOrAliases.length > 0) {, +                boolean hasRegex = false;, +                for (String indexOrAlias : indicesOrAliases) {, +                    if (Regex.isSimpleMatchPattern(indexOrAlias)) {, +                        hasRegex = true;, +                    }, +                }, +                if (indicesOrAliases.length > 0 && (hasRegex || indicesOrAliases[0].charAt(0) == '-')) {, +                    throw new ElasticSearchIllegalArgumentException("deleting all indices is disabled");, +                }, +            }, +        }, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +    private final ImmutableSet<String> allIndicesSet;, +        allIndicesSet = ImmutableSet.copyOf(allIndices);, +    public ImmutableSet<String> concreteAllIndicesAsSet() {, +        return allIndicesSet;, +    }, +, +        aliasesOrIndices = convertFromWildcards(aliasesOrIndices, allOnlyOpen, ignoreMissing);, +                if (!ignoreMissing && !aliasAndIndexToIndexMap.containsKey(aliasOrIndex)) {, +                    throw new IndexMissingException(new Index(aliasOrIndex));, +                }]