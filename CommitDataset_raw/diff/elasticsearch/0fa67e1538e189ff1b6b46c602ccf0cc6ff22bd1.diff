[+++ b/core/src/main/java/org/elasticsearch/ingest/core/CompoundProcessor.java, +import org.elasticsearch.ElasticsearchException;, +                ElasticsearchException compoundProcessorException = newCompoundProcessorException(e, processor.getType(), processor.getTag());, +                    throw compoundProcessorException;, +                    executeOnFailure(ingestDocument, compoundProcessorException);, +    void executeOnFailure(IngestDocument ingestDocument, ElasticsearchException exception) throws Exception {, +            putFailureMetadata(ingestDocument, exception);, +                try {, +                } catch (Exception e) {, +                    throw newCompoundProcessorException(e, processor.getType(), processor.getTag());, +                }, +    private void putFailureMetadata(IngestDocument ingestDocument, ElasticsearchException cause) {, +        List<String> processorTypeHeader = cause.getHeader("processor_type");, +        List<String> processorTagHeader = cause.getHeader("processor_tag");, +        String failedProcessorType = (processorTypeHeader != null) ? processorTypeHeader.get(0) : null;, +        String failedProcessorTag = (processorTagHeader != null) ? processorTagHeader.get(0) : null;, +        ingestMetadata.put(ON_FAILURE_MESSAGE_FIELD, cause.getRootCause().getMessage());, +, +    private ElasticsearchException newCompoundProcessorException(Exception e, String processorType, String processorTag) {, +        if (e instanceof ElasticsearchException && ((ElasticsearchException)e).getHeader("processor_type") != null) {, +            return (ElasticsearchException) e;, +        }, +, +        ElasticsearchException exception = new ElasticsearchException(new IllegalArgumentException(e));, +, +        if (processorType != null) {, +            exception.addHeader("processor_type", processorType);, +        }, +        if (processorTag != null) {, +            exception.addHeader("processor_tag", processorTag);, +        }, +, +        return exception;, +    }, +++ b/core/src/main/java/org/elasticsearch/ingest/core/CompoundProcessor.java, +import org.elasticsearch.ElasticsearchException;, +                ElasticsearchException compoundProcessorException = newCompoundProcessorException(e, processor.getType(), processor.getTag());, +                    throw compoundProcessorException;, +                    executeOnFailure(ingestDocument, compoundProcessorException);, +    void executeOnFailure(IngestDocument ingestDocument, ElasticsearchException exception) throws Exception {, +            putFailureMetadata(ingestDocument, exception);, +                try {, +                } catch (Exception e) {, +                    throw newCompoundProcessorException(e, processor.getType(), processor.getTag());, +                }, +    private void putFailureMetadata(IngestDocument ingestDocument, ElasticsearchException cause) {, +        List<String> processorTypeHeader = cause.getHeader("processor_type");, +        List<String> processorTagHeader = cause.getHeader("processor_tag");, +        String failedProcessorType = (processorTypeHeader != null) ? processorTypeHeader.get(0) : null;, +        String failedProcessorTag = (processorTagHeader != null) ? processorTagHeader.get(0) : null;, +        ingestMetadata.put(ON_FAILURE_MESSAGE_FIELD, cause.getRootCause().getMessage());, +, +    private ElasticsearchException newCompoundProcessorException(Exception e, String processorType, String processorTag) {, +        if (e instanceof ElasticsearchException && ((ElasticsearchException)e).getHeader("processor_type") != null) {, +            return (ElasticsearchException) e;, +        }, +, +        ElasticsearchException exception = new ElasticsearchException(new IllegalArgumentException(e));, +, +        if (processorType != null) {, +            exception.addHeader("processor_type", processorType);, +        }, +        if (processorTag != null) {, +            exception.addHeader("processor_tag", processorTag);, +        }, +, +        return exception;, +    }, +++ b/core/src/test/java/org/elasticsearch/action/ingest/SimulateExecutionServiceTests.java, +import org.elasticsearch.ElasticsearchException;, +        Exception exception = simulateDocumentBaseResult.getFailure();, +        assertThat(exception, instanceOf(ElasticsearchException.class));, +        assertThat(exception.getMessage(), equalTo("java.lang.IllegalArgumentException: java.lang.RuntimeException: processor failed"));, +++ b/core/src/main/java/org/elasticsearch/ingest/core/CompoundProcessor.java, +import org.elasticsearch.ElasticsearchException;, +                ElasticsearchException compoundProcessorException = newCompoundProcessorException(e, processor.getType(), processor.getTag());, +                    throw compoundProcessorException;, +                    executeOnFailure(ingestDocument, compoundProcessorException);, +    void executeOnFailure(IngestDocument ingestDocument, ElasticsearchException exception) throws Exception {, +            putFailureMetadata(ingestDocument, exception);, +                try {, +                } catch (Exception e) {, +                    throw newCompoundProcessorException(e, processor.getType(), processor.getTag());, +                }, +    private void putFailureMetadata(IngestDocument ingestDocument, ElasticsearchException cause) {, +        List<String> processorTypeHeader = cause.getHeader("processor_type");, +        List<String> processorTagHeader = cause.getHeader("processor_tag");, +        String failedProcessorType = (processorTypeHeader != null) ? processorTypeHeader.get(0) : null;, +        String failedProcessorTag = (processorTagHeader != null) ? processorTagHeader.get(0) : null;, +        ingestMetadata.put(ON_FAILURE_MESSAGE_FIELD, cause.getRootCause().getMessage());, +, +    private ElasticsearchException newCompoundProcessorException(Exception e, String processorType, String processorTag) {, +        if (e instanceof ElasticsearchException && ((ElasticsearchException)e).getHeader("processor_type") != null) {, +            return (ElasticsearchException) e;, +        }, +, +        ElasticsearchException exception = new ElasticsearchException(new IllegalArgumentException(e));, +, +        if (processorType != null) {, +            exception.addHeader("processor_type", processorType);]