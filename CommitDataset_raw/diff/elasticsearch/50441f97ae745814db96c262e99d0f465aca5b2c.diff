[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.protocol.xpack.ml.GetBucketsRequest;, +    static Request openJob(OpenJobRequest openJobRequest) {, +, +    static Request getBuckets(GetBucketsRequest getBucketsRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +                .addPathPartAsIs("_xpack"), +                .addPathPartAsIs("ml"), +                .addPathPartAsIs("anomaly_detectors"), +                .addPathPart(getBucketsRequest.getJobId()), +                .addPathPartAsIs("results"), +                .addPathPartAsIs("buckets"), +                .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(getBucketsRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.protocol.xpack.ml.GetBucketsRequest;, +    static Request openJob(OpenJobRequest openJobRequest) {, +, +    static Request getBuckets(GetBucketsRequest getBucketsRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +                .addPathPartAsIs("_xpack"), +                .addPathPartAsIs("ml"), +                .addPathPartAsIs("anomaly_detectors"), +                .addPathPart(getBucketsRequest.getJobId()), +                .addPathPartAsIs("results"), +                .addPathPartAsIs("buckets"), +                .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(getBucketsRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.protocol.xpack.ml.GetBucketsRequest;, +import org.elasticsearch.protocol.xpack.ml.GetBucketsResponse;, +     * @param request The PutJobRequest containing the {@link org.elasticsearch.protocol.xpack.ml.job.config.Job} settings, +     * @param request  The request containing the {@link org.elasticsearch.protocol.xpack.ml.job.config.Job} settings, +     * @param request {@link GetJobRequest} Request containing a list of jobId(s) and additional options, +     * @param request {@link GetJobRequest} Request containing a list of jobId(s) and additional options, +     * @param request The request to delete the job, +     * @param request The request to delete the job, +     * @param request Request containing job_id and additional optional options, +     * @param request Request containing job_id and additional optional options, +     * @param request Request containing job_ids and additional options. See {@link CloseJobRequest}, +     * @param request Request containing job_ids and additional options. See {@link CloseJobRequest}, +, +    /**, +     * Gets the buckets for a Machine Learning Job., +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html">ML GET buckets documentation</a>, +     *, +     * @param request  The request, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     */, +    public GetBucketsResponse getBuckets(GetBucketsRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +                MLRequestConverters::getBuckets,, +                options,, +                GetBucketsResponse::fromXContent,, +                Collections.emptySet());, +    }, +, +    /**, +     * Gets the buckets for a Machine Learning Job, notifies listener once the requested buckets are retrieved., +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html">ML GET buckets documentation</a>, +     *, +     * @param request  The request, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified upon request completion, +     */, +    public void getBucketsAsync(GetBucketsRequest request, RequestOptions options, ActionListener<GetBucketsResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +                MLRequestConverters::getBuckets,, +                options,, +                GetBucketsResponse::fromXContent,, +                listener,, +                Collections.emptySet());, +     }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.protocol.xpack.ml.GetBucketsRequest;, +    static Request openJob(OpenJobRequest openJobRequest) {, +, +    static Request getBuckets(GetBucketsRequest getBucketsRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +                .addPathPartAsIs("_xpack"), +                .addPathPartAsIs("ml"), +                .addPathPartAsIs("anomaly_detectors"), +                .addPathPart(getBucketsRequest.getJobId()), +                .addPathPartAsIs("results"), +                .addPathPartAsIs("buckets"), +                .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(getBucketsRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }]