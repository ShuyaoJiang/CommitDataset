[+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerCaster.java, +        Cast transform = Definition.getTransform(cast);, +            transform = Definition.getTransform(new Cast(actual, expected, false));, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerCaster.java, +        Cast transform = Definition.getTransform(cast);, +            transform = Definition.getTransform(new Cast(actual, expected, false));, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Def.java, +             RuntimeClass struct = Definition.getRuntimeClass(clazz);, +                 struct = Definition.getRuntimeClass(iface);, +            RuntimeClass struct = Definition.getRuntimeClass(clazz);, +                struct = Definition.getRuntimeClass(iface);, +            RuntimeClass struct = Definition.getRuntimeClass(clazz);, +                struct = Definition.getRuntimeClass(iface);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerCaster.java, +        Cast transform = Definition.getTransform(cast);, +            transform = Definition.getTransform(new Cast(actual, expected, false));, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Def.java, +             RuntimeClass struct = Definition.getRuntimeClass(clazz);, +                 struct = Definition.getRuntimeClass(iface);, +            RuntimeClass struct = Definition.getRuntimeClass(clazz);, +                struct = Definition.getRuntimeClass(iface);, +            RuntimeClass struct = Definition.getRuntimeClass(clazz);, +                struct = Definition.getRuntimeClass(iface);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Definition.java, +    public static final Type voidType = getType("void");, +    public static final Type booleanType = getType("boolean");, +    public static final Type booleanobjType = getType("Boolean");, +    public static final Type byteType = getType("byte");, +    public static final Type byteobjType = getType("Byte");, +    public static final Type shortType = getType("short");, +    public static final Type shortobjType = getType("Short");, +    public static final Type intType = getType("int");, +    public static final Type intobjType = getType("Integer");, +    public static final Type longType = getType("long");, +    public static final Type longobjType = getType("Long");, +    public static final Type floatType = getType("float");, +    public static final Type floatobjType = getType("Float");, +    public static final Type doubleType = getType("double");, +    public static final Type doubleobjType = getType("Double");, +    public static final Type charType = getType("char");, +    public static final Type charobjType = getType("Character");, +    public static final Type objectType = getType("Object");, +    public static final Type defType = getType("def");, +    public static final Type defobjType = getType("Def");, +    public static final Type stringType = getType("String");, +    public static final Type exceptionType = getType("Exception");, +    public static final Type utilityType = getType("Utility");, +    , +    /** Gets the type given by its name */, +    public static Type getType(final String name) {, +        return INSTANCE.getTypeInternal(name);, +    }, +, +    /** Creates an array type from the given Struct. */, +    public static Type getType(final Struct struct, final int dimensions) {, +        return INSTANCE.getTypeInternal(struct, dimensions);, +    }, +    , +    public static RuntimeClass getRuntimeClass(Class<?> clazz) {, +        return INSTANCE.runtimeMap.get(clazz);, +    }, +    , +    public static Cast getTransform(Cast cast) {, +        return INSTANCE.transformsMap.get(cast);, +    }, +    , +    // INTERNAL IMPLEMENTATION:, +    , +    private final Map<Cast, Cast> transformsMap;, +    private final Map<Class<?>, RuntimeClass> runtimeMap;, +        Type booleanType = getTypeInternal("boolean");, +        Type objectType = getTypeInternal("Object");, +        Type defType = getTypeInternal("def");, +        Type booleanobjType = getTypeInternal("Boolean");, +        Type byteType = getTypeInternal("byte");, +        Type shortType = getTypeInternal("short");, +        Type intType = getTypeInternal("int");, +        Type charType = getTypeInternal("char");, +        Type longType = getTypeInternal("long");, +        Type floatType = getTypeInternal("float");, +        Type doubleType = getTypeInternal("double");, +        Type numberType = getTypeInternal("Number");, +        Type byteobjType = getTypeInternal("Byte");, +        Type shortobjType = getTypeInternal("Short");, +        Type charobjType = getTypeInternal("Character");, +        Type intobjType = getTypeInternal("Integer");, +        Type longobjType = getTypeInternal("Long");, +        Type floatobjType = getTypeInternal("Float");, +        Type doubleobjType = getTypeInternal("Double");, +        Type stringType = getTypeInternal("String");, +        simpleTypesMap.put(name, getTypeInternal(name));, +        Type rtn = getTypeInternal(elements[0]);, +                    args[i] = getTypeInternal(arguments[i]);, +                    upcast = getTypeInternal(owner.name);, +    private Type getTypeInternal(final String name) {, +        return getTypeInternal(struct, dimensions);, +    private Type getTypeInternal(final Struct struct, final int dimensions) {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerCaster.java, +        Cast transform = Definition.getTransform(cast);, +            transform = Definition.getTransform(new Cast(actual, expected, false));]