[+++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicGeoPointFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicGeoPointFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicNumericFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicGeoPointFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicNumericFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicOrdinalFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicGeoPointFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicNumericFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicOrdinalFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/ByteValues.java, +    static ByteValues EMPTY = new Empty();, +, +    static class Empty implements ByteValues {, +        @Override, +        public boolean isMultiValued() {, +            return false;, +        }, +, +        @Override, +        public boolean hasValue(int docId) {, +            return false;, +        }, +, +        @Override, +        public byte getValue(int docId) {, +            throw new ElasticSearchIllegalStateException("Can't retrieve a value from an empty ByteValues");, +        }, +, +        @Override, +        public byte getValueMissing(int docId, byte missingValue) {, +            return missingValue;, +        }, +, +        @Override, +        public ByteArrayRef getValues(int docId) {, +            return ByteArrayRef.EMPTY;, +        }, +, +        @Override, +        public Iter getIter(int docId) {, +            return Iter.Empty.INSTANCE;, +        }, +, +        @Override, +        public void forEachValueInDoc(int docId, ValueInDocProc proc) {, +            proc.onMissing(docId);, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicGeoPointFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicNumericFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicOrdinalFieldData.java, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/ByteValues.java, +    static ByteValues EMPTY = new Empty();, +, +    static class Empty implements ByteValues {, +        @Override, +        public boolean isMultiValued() {, +            return false;, +        }, +, +        @Override, +        public boolean hasValue(int docId) {, +            return false;, +        }, +, +        @Override, +        public byte getValue(int docId) {, +            throw new ElasticSearchIllegalStateException("Can't retrieve a value from an empty ByteValues");, +        }, +, +        @Override, +        public byte getValueMissing(int docId, byte missingValue) {, +            return missingValue;, +        }, +]