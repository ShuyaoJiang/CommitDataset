[+++ b/build.gradle, +    // for transport client, +    "org.elasticsearch.plugin:transport-netty3-client:${version}": ':modules:transport-netty3',, +    "org.elasticsearch.plugin:reindex-client:${version}": ':modules:reindex',, +    "org.elasticsearch.plugin:lang-mustache-client:${version}": ':modules:lang-mustache',, +    "org.elasticsearch.plugin:percolator-client:${version}": ':modules:percolator',, +++ b/build.gradle, +    // for transport client, +    "org.elasticsearch.plugin:transport-netty3-client:${version}": ':modules:transport-netty3',, +    "org.elasticsearch.plugin:reindex-client:${version}": ':modules:reindex',, +    "org.elasticsearch.plugin:lang-mustache-client:${version}": ':modules:lang-mustache',, +    "org.elasticsearch.plugin:percolator-client:${version}": ':modules:percolator',, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            // always wait for yellow before anything is executed, +            current.println(, +                    "  - do:\n" +, +                    "      raw:\n" +, +                    "        method: GET\n" +, +                    "        path: \"_cluster/health\"\n" +, +                    "        wait_for_status: \"yellow\""), +++ b/build.gradle, +    // for transport client, +    "org.elasticsearch.plugin:transport-netty3-client:${version}": ':modules:transport-netty3',, +    "org.elasticsearch.plugin:reindex-client:${version}": ':modules:reindex',, +    "org.elasticsearch.plugin:lang-mustache-client:${version}": ':modules:lang-mustache',, +    "org.elasticsearch.plugin:percolator-client:${version}": ':modules:percolator',, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            // always wait for yellow before anything is executed, +            current.println(, +                    "  - do:\n" +, +                    "      raw:\n" +, +                    "        method: GET\n" +, +                    "        path: \"_cluster/health\"\n" +, +                    "        wait_for_status: \"yellow\""), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                project.integTest.clusterConfig.plugin(project.path), +                project.tasks.run.clusterConfig.plugin(project.path), +        project.configurations.getByName('default').extendsFrom(project.configurations.getByName('runtime')), +        // also make the zip available as a configuration (used when depending on this project), +        project.configurations.create('zip'), +        project.artifacts.add('zip', bundle), +++ b/build.gradle, +    // for transport client, +    "org.elasticsearch.plugin:transport-netty3-client:${version}": ':modules:transport-netty3',, +    "org.elasticsearch.plugin:reindex-client:${version}": ':modules:reindex',, +    "org.elasticsearch.plugin:lang-mustache-client:${version}": ':modules:lang-mustache',, +    "org.elasticsearch.plugin:percolator-client:${version}": ':modules:percolator',, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            // always wait for yellow before anything is executed, +            current.println(, +                    "  - do:\n" +, +                    "      raw:\n" +, +                    "        method: GET\n" +, +                    "        path: \"_cluster/health\"\n" +, +                    "        wait_for_status: \"yellow\""), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                project.integTest.clusterConfig.plugin(project.path), +                project.tasks.run.clusterConfig.plugin(project.path), +        project.configurations.getByName('default').extendsFrom(project.configurations.getByName('runtime')), +        // also make the zip available as a configuration (used when depending on this project), +        project.configurations.create('zip'), +        project.artifacts.add('zip', bundle), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +import org.gradle.api.artifacts.Configuration, +    private final Project project, +, +    public ClusterConfiguration(Project project) {, +        this.project = project, +    }, +, +    LinkedHashMap<String, Project> plugins = new LinkedHashMap<>(), +    void plugin(String path) {, +        Project pluginProject = project.project(path), +        plugins.put(pluginProject.name, pluginProject), +++ b/build.gradle, +    // for transport client, +    "org.elasticsearch.plugin:transport-netty3-client:${version}": ':modules:transport-netty3',, +    "org.elasticsearch.plugin:reindex-client:${version}": ':modules:reindex',, +    "org.elasticsearch.plugin:lang-mustache-client:${version}": ':modules:lang-mustache',, +    "org.elasticsearch.plugin:percolator-client:${version}": ':modules:percolator',, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            // always wait for yellow before anything is executed, +            current.println(, +                    "  - do:\n" +, +                    "      raw:\n" +, +                    "        method: GET\n" +, +                    "        path: \"_cluster/health\"\n" +, +                    "        wait_for_status: \"yellow\""), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                project.integTest.clusterConfig.plugin(project.path), +                project.tasks.run.clusterConfig.plugin(project.path), +        project.configurations.getByName('default').extendsFrom(project.configurations.getByName('runtime')), +        // also make the zip available as a configuration (used when depending on this project), +        project.configurations.create('zip'), +        project.artifacts.add('zip', bundle), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +import org.gradle.api.artifacts.Configuration, +    private final Project project, +, +    public ClusterConfiguration(Project project) {]