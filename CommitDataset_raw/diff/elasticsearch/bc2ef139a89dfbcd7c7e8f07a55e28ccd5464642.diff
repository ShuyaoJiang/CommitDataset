[+++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/FunctionRegistry.java, +import org.elasticsearch.xpack.sql.expression.function.scalar.arithmetic.Mod;, +import org.elasticsearch.xpack.sql.expression.function.scalar.math.ATan2;, +import org.elasticsearch.xpack.sql.expression.function.scalar.math.Power;, +            def(ATan2.class, ATan2::new),, +            // SQL and ODBC require MOD as a _function_, +            def(Mod.class, Mod::new),, +            def(Power.class, Power::new),, +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/FunctionRegistry.java, +import org.elasticsearch.xpack.sql.expression.function.scalar.arithmetic.Mod;, +import org.elasticsearch.xpack.sql.expression.function.scalar.math.ATan2;, +import org.elasticsearch.xpack.sql.expression.function.scalar.math.Power;, +            def(ATan2.class, ATan2::new),, +            // SQL and ODBC require MOD as a _function_, +            def(Mod.class, Mod::new),, +            def(Power.class, Power::new),, +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/arithmetic/ArithmeticFunction.java, +import org.elasticsearch.xpack.sql.expression.function.scalar.math.BinaryNumericFunction;, +import org.elasticsearch.xpack.sql.expression.function.scalar.processor.definition.ProcessorDefinition;, +public abstract class ArithmeticFunction extends BinaryNumericFunction {, +    private final BinaryArithmeticOperation operation;, +    @Override, +    protected ProcessorDefinition makeProcessorDefinition() {, +                ProcessorDefinitions.toProcessorDefinition(right()),, +                operation);, +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/FunctionRegistry.java, +import org.elasticsearch.xpack.sql.expression.function.scalar.arithmetic.Mod;, +import org.elasticsearch.xpack.sql.expression.function.scalar.math.ATan2;, +import org.elasticsearch.xpack.sql.expression.function.scalar.math.Power;, +            def(ATan2.class, ATan2::new),, +            // SQL and ODBC require MOD as a _function_, +            def(Mod.class, Mod::new),, +            def(Power.class, Power::new),, +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/arithmetic/ArithmeticFunction.java, +import org.elasticsearch.xpack.sql.expression.function.scalar.math.BinaryNumericFunction;, +import org.elasticsearch.xpack.sql.expression.function.scalar.processor.definition.ProcessorDefinition;, +public abstract class ArithmeticFunction extends BinaryNumericFunction {, +    private final BinaryArithmeticOperation operation;, +    @Override, +    protected ProcessorDefinition makeProcessorDefinition() {, +                ProcessorDefinitions.toProcessorDefinition(right()),, +                operation);, +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/arithmetic/BinaryArithmeticProcessor.java, +import org.elasticsearch.xpack.sql.expression.function.scalar.arithmetic.BinaryArithmeticProcessor.BinaryArithmeticOperation;, +import org.elasticsearch.xpack.sql.expression.function.scalar.math.BinaryNumericProcessor;, +public class BinaryArithmeticProcessor extends BinaryNumericProcessor<BinaryArithmeticOperation> {, +    public enum BinaryArithmeticOperation implements BiFunction<Number, Number, Number> {, +        @Override, +        super(left, right, operation);, +        super(in, i -> i.readEnum(BinaryArithmeticOperation.class));, +    }, +, +    @Override, +    protected void doWrite(StreamOutput out) throws IOException {, +        out.writeEnum(operation());, +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/FunctionRegistry.java, +import org.elasticsearch.xpack.sql.expression.function.scalar.arithmetic.Mod;, +import org.elasticsearch.xpack.sql.expression.function.scalar.math.ATan2;, +import org.elasticsearch.xpack.sql.expression.function.scalar.math.Power;, +            def(ATan2.class, ATan2::new),, +            // SQL and ODBC require MOD as a _function_, +            def(Mod.class, Mod::new),, +            def(Power.class, Power::new),, +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/arithmetic/ArithmeticFunction.java, +import org.elasticsearch.xpack.sql.expression.function.scalar.math.BinaryNumericFunction;, +import org.elasticsearch.xpack.sql.expression.function.scalar.processor.definition.ProcessorDefinition;, +public abstract class ArithmeticFunction extends BinaryNumericFunction {, +    private final BinaryArithmeticOperation operation;, +    @Override, +    protected ProcessorDefinition makeProcessorDefinition() {, +                ProcessorDefinitions.toProcessorDefinition(right()),, +                operation);, +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/arithmetic/BinaryArithmeticProcessor.java, +import org.elasticsearch.xpack.sql.expression.function.scalar.arithmetic.BinaryArithmeticProcessor.BinaryArithmeticOperation;, +import org.elasticsearch.xpack.sql.expression.function.scalar.math.BinaryNumericProcessor;, +public class BinaryArithmeticProcessor extends BinaryNumericProcessor<BinaryArithmeticOperation> {, +    public enum BinaryArithmeticOperation implements BiFunction<Number, Number, Number> {, +        @Override, +        super(left, right, operation);, +        super(in, i -> i.readEnum(BinaryArithmeticOperation.class));, +    }, +, +    @Override, +    protected void doWrite(StreamOutput out) throws IOException {, +        out.writeEnum(operation());, +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/ACos.java, + * function., +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/FunctionRegistry.java, +import org.elasticsearch.xpack.sql.expression.function.scalar.arithmetic.Mod;, +import org.elasticsearch.xpack.sql.expression.function.scalar.math.ATan2;, +import org.elasticsearch.xpack.sql.expression.function.scalar.math.Power;, +            def(ATan2.class, ATan2::new),, +            // SQL and ODBC require MOD as a _function_, +            def(Mod.class, Mod::new),, +            def(Power.class, Power::new),, +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/arithmetic/ArithmeticFunction.java, +import org.elasticsearch.xpack.sql.expression.function.scalar.math.BinaryNumericFunction;, +import org.elasticsearch.xpack.sql.expression.function.scalar.processor.definition.ProcessorDefinition;, +public abstract class ArithmeticFunction extends BinaryNumericFunction {, +    private final BinaryArithmeticOperation operation;]