[+++ b/src/main/java/org/elasticsearch/index/cache/id/simple/SimpleIdCache.java, +import org.elasticsearch.common.text.UTF8SortedAsUnicodeComparator;, +                TreeSet<HashedBytesArray> parentTypes = new TreeSet<HashedBytesArray>(UTF8SortedAsUnicodeComparator.utf8SortedAsUnicodeSortOrder);, +                        uid: for (BytesRef term = termsEnum.next(); term != null; term = termsEnum.next()) {, +                                do {, +                                    HashedBytesArray nextParent = parentTypes.ceiling(typeAndId[0]);, +                                    if (nextParent == null) {, +                                        break uid;, +                                    }, +, +                                    TermsEnum.SeekStatus status = termsEnum.seekCeil(nextParent.toBytesRef(), false);, +                                    if (status == TermsEnum.SeekStatus.END) {, +                                        break uid;, +                                    } else if (status == TermsEnum.SeekStatus.NOT_FOUND) {, +                                        term = termsEnum.term();, +                                        typeAndId = Uid.splitUidIntoTypeAndId(term);, +                                    } else if (status == TermsEnum.SeekStatus.FOUND) {, +                                        assert false : "Seek status should never be FOUND, because we seek only the type part";, +                                        term = termsEnum.term();, +                                        typeAndId = Uid.splitUidIntoTypeAndId(term);, +                                    }, +                                } while (!parentTypes.contains(typeAndId[0]));]