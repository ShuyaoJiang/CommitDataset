[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilders.java, +import org.elasticsearch.search.aggregations.metrics.tophits.TopHitsAggregator;, +    public static TopHitsAggregator.Factory topHits(String name) {, +        return new TopHitsAggregator.Factory(name);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilders.java, +import org.elasticsearch.search.aggregations.metrics.tophits.TopHitsAggregator;, +    public static TopHitsAggregator.Factory topHits(String name) {, +        return new TopHitsAggregator.Factory(name);, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilders.java, +import org.elasticsearch.search.aggregations.metrics.tophits.TopHitsAggregator;, +    public static TopHitsAggregator.Factory topHits(String name) {, +        return new TopHitsAggregator.Factory(name);, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenIT.java, +                                children("to_comment").childType("comment").subAggregation(topHits("top_comments").sort("_uid", SortOrder.ASC)), +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilders.java, +import org.elasticsearch.search.aggregations.metrics.tophits.TopHitsAggregator;, +    public static TopHitsAggregator.Factory topHits(String name) {, +        return new TopHitsAggregator.Factory(name);, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenIT.java, +                                children("to_comment").childType("comment").subAggregation(topHits("top_comments").sort("_uid", SortOrder.ASC)), +++ b/core/src/test/java/org/elasticsearch/search/aggregations/metrics/TopHitsIT.java, +                                topHits("hits").sort(SortBuilders.fieldSort(SORT_FIELD).order(SortOrder.DESC)), +                        .subAggregation(topHits("hits").size(3)), +                                        topHits("hits").sort(SortBuilders.fieldSort(SORT_FIELD).order(SortOrder.DESC)), +                                                .from(from), +                                                .size(size), +                                        topHits("hits").sort(SortBuilders.fieldSort(SORT_FIELD).order(SortOrder.DESC)).trackScores(true), +                                .order(Terms.Order.aggregation("max_score", false)).subAggregation(topHits("hits").size(1)), +                                        topHits("hits").size(1), +                                            .explain(true), +                                            .field("text"), +                                            .fieldDataField("field1"), +                                            .scriptField("script", new Script("5", ScriptService.ScriptType.INLINE, MockScriptEngine.NAME, Collections.emptyMap())), +                                            .fetchSource("text", null), +                                            .version(true), +                                            topHits("hits").sort(SortBuilders.fieldSort("xyz").order(SortOrder.DESC)), +                                                    .trackScores(trackScore), +                                                    .size(1), +                                                    .sort("_id", SortOrder.DESC), +                                                        topHits("top-comments").sort("comments.date", SortOrder.ASC), +                                            topHits("top-reviewers").sort("comments.reviewers.name", SortOrder.ASC).sort("_doc", SortOrder.DESC).size(7), +                                .subAggregation(topHits("top-comments").sort("comments.date", SortOrder.DESC).size(4)), +                                topHits("top-comments").size(1).highlighter(new HighlightBuilder().field(hlField)).explain(true), +                                                .fieldDataField("comments.user"), +                                        .scriptField("script", new Script("5", ScriptService.ScriptType.INLINE, MockScriptEngine.NAME, Collections.emptyMap())).fetchSource("message", null), +                                        .version(true).sort("comments.date", SortOrder.ASC))).get();, +                                                        .sort("comments.id", SortOrder.ASC)), +                                        topHits("hits").size(ArrayUtil.MAX_ARRAY_LENGTH - 1).sort(SortBuilders.fieldSort(SORT_FIELD).order(SortOrder.DESC))]