[+++ b/docs/reference/migration/migrate_2_0.asciidoc, +=== Networking, +, +Elasticsearch now binds to the loopback interface by default (usually 127.0.0.1, +or ::1), the setting `network.host` can be specified to change this behavior., +, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +=== Networking, +, +Elasticsearch now binds to the loopback interface by default (usually 127.0.0.1, +or ::1), the setting `network.host` can be specified to change this behavior., +, +++ b/docs/reference/modules/network.asciidoc, +The `network.bind_host` setting allows to control the host different network, +components will bind on. By default, the bind host will be `anyLoopbackAddress`, +(typically `127.0.0.1` or `::1`)., +The `network.publish_host` setting allows to control the host the node will, +publish itself within the cluster so other nodes will be able to connect to it., +Of course, this can't be the `anyLocalAddress`, and by default, it will be the, +first loopback address (if possible), or the local address., +++ b/docs/reference/migration/migrate_2_0.asciidoc, +=== Networking, +, +Elasticsearch now binds to the loopback interface by default (usually 127.0.0.1, +or ::1), the setting `network.host` can be specified to change this behavior., +, +++ b/docs/reference/modules/network.asciidoc, +The `network.bind_host` setting allows to control the host different network, +components will bind on. By default, the bind host will be `anyLoopbackAddress`, +(typically `127.0.0.1` or `::1`)., +The `network.publish_host` setting allows to control the host the node will, +publish itself within the cluster so other nodes will be able to connect to it., +Of course, this can't be the `anyLocalAddress`, and by default, it will be the, +first loopback address (if possible), or the local address., +++ b/src/main/java/org/elasticsearch/common/network/MulticastChannel.java, +        public final boolean deferToInterface;, +        public Config(int port, String group, int bufferSize, int ttl,, +                      InetAddress multicastInterface, boolean deferToInterface) {, +            this.deferToInterface = deferToInterface;, +            SocketAddress addr = new InetSocketAddress(InetAddress.getByName(config.group), config.port);, +                // OSX is not smart enough to tell that a socket bound to the, +                // 'lo0' interface needs to make sure to send the UDP packet, +                // out of the lo0 interface, so we need to do some special, +                // workarounds to fix it., +                if (config.deferToInterface) {, +                    // 'null' here tells the socket to deter to the interface set, +                    // with .setInterface, +                    multicastSocket.joinGroup(addr, null);, +                    multicastSocket.setInterface(config.multicastInterface);, +                } else {, +                }, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +=== Networking, +, +Elasticsearch now binds to the loopback interface by default (usually 127.0.0.1, +or ::1), the setting `network.host` can be specified to change this behavior., +, +++ b/docs/reference/modules/network.asciidoc, +The `network.bind_host` setting allows to control the host different network, +components will bind on. By default, the bind host will be `anyLoopbackAddress`, +(typically `127.0.0.1` or `::1`)., +The `network.publish_host` setting allows to control the host the node will, +publish itself within the cluster so other nodes will be able to connect to it., +Of course, this can't be the `anyLocalAddress`, and by default, it will be the, +first loopback address (if possible), or the local address., +++ b/src/main/java/org/elasticsearch/common/network/MulticastChannel.java, +        public final boolean deferToInterface;, +        public Config(int port, String group, int bufferSize, int ttl,, +                      InetAddress multicastInterface, boolean deferToInterface) {, +            this.deferToInterface = deferToInterface;, +            SocketAddress addr = new InetSocketAddress(InetAddress.getByName(config.group), config.port);, +                // OSX is not smart enough to tell that a socket bound to the, +                // 'lo0' interface needs to make sure to send the UDP packet, +                // out of the lo0 interface, so we need to do some special, +                // workarounds to fix it., +                if (config.deferToInterface) {, +                    // 'null' here tells the socket to deter to the interface set, +                    // with .setInterface, +                    multicastSocket.joinGroup(addr, null);, +                    multicastSocket.setInterface(config.multicastInterface);, +                } else {, +                }, +++ b/src/main/java/org/elasticsearch/common/network/NetworkService.java, +        return resolveBindHostAddress(bindHost, InetAddress.getLoopbackAddress().getHostAddress());, +        InetAddress address = resolvePublishHostAddress(publishHost,, +                InetAddress.getLoopbackAddress().getHostAddress());, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +=== Networking, +, +Elasticsearch now binds to the loopback interface by default (usually 127.0.0.1, +or ::1), the setting `network.host` can be specified to change this behavior., +, +++ b/docs/reference/modules/network.asciidoc, +The `network.bind_host` setting allows to control the host different network, +components will bind on. By default, the bind host will be `anyLoopbackAddress`, +(typically `127.0.0.1` or `::1`)., +The `network.publish_host` setting allows to control the host the node will, +publish itself within the cluster so other nodes will be able to connect to it., +Of course, this can't be the `anyLocalAddress`, and by default, it will be the, +first loopback address (if possible), or the local address.]