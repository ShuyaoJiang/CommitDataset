[+++ b/docs/reference/mapping/types.asciidoc, +<<parent-join>>::   Defines parent/child relation for documents within the same index, +, +include::types/parent-join.asciidoc[], +++ b/docs/reference/mapping/types.asciidoc, +<<parent-join>>::   Defines parent/child relation for documents within the same index, +, +include::types/parent-join.asciidoc[], +++ b/docs/reference/mapping/types/parent-join.asciidoc, +[[mapping-parent-join-field]], +=== `join` datatype, +, +The `join` datatype is a special field that creates, +parent/child relation within documents of the same index., +This `relations` section defines a set of possible relations within the documents,, +each relation being a parent name and a child name., +A parent/child relation can be defined as follows:, +, +[source,js], +--------------------------------------------------, +PUT my_index, +{, +  "mappings": {, +    "doc": {, +      "properties": {, +        "my_join_field": { <1>, +          "type": "join",, +          "relations": {, +            "my_parent": "my_child" <2>, +          }, +        }, +      }, +    }, +  }, +}, +--------------------------------------------------, +// CONSOLE, +, +<1> The name for the field, +<2> Defines a single relation where `my_parent` is parent of `my_child`., +, +To index a document with a join, the name of the relation and the optional parent, +of the document must be provided in the `source`., +For instance the following creates a parent document in the `my_parent` context:, +, +[source,js], +--------------------------------------------------, +PUT my_index/doc/1?refresh, +{, +  "text": "This is a parent document",, +  "my_join_field": "my_parent" <1>, +}, +, +PUT my_index/doc/2?refresh, +{, +  "text": "This is a another parent document",, +  "my_join_field": "my_parent", +}, +--------------------------------------------------, +// CONSOLE, +// TEST[continued], +, +<1> This document is a `my_parent` document., +, +When indexing a child, the name of the relation as well as the parent id of the document, +must be added in the `_source`., +It is required to index the lineage of a parent in the same shard so you must, +always route child documents using their greater parent id., +For instance the following index two children documents pointing to the same parent, +with a `routing` value equals to the `id` of the parent:, +, +[source,js], +--------------------------------------------------, +PUT my_index/doc/3?routing=1&refresh <1>, +{, +  "text": "This is a child document",, +  "my_join_field": {, +    "name": "my_child", <2>, +    "parent": "1" <3>, +  }, +}, +, +PUT my_index/doc/4?routing=1&refresh <1>, +{, +  "text": "This is a another child document",, +  "my_join_field": {, +    "name": "my_child",, +    "parent": "1", +  }, +}, +--------------------------------------------------, +// CONSOLE, +// TEST[continued], +, +<1> This child document must be on the same shard than its parent, +<2> `my_child` is the name of the join for this document, +<3> The parent id of this child document, +, +==== Parent-join restrictions, +]