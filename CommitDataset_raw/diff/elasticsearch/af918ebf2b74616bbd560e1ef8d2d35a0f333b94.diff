[+++ b/core/src/main/resources/org/elasticsearch/bootstrap/untrusted.policy, +  // groovy requires this to enable workaround for certain JVMs (https://github.com/apache/groovy/pull/137), +  permission java.util.PropertyPermission "java.vm.name", "read";, +  permission java.util.PropertyPermission "groovy.use.classvalue", "read";, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/untrusted.policy, +  // groovy requires this to enable workaround for certain JVMs (https://github.com/apache/groovy/pull/137), +  permission java.util.PropertyPermission "java.vm.name", "read";, +  permission java.util.PropertyPermission "groovy.use.classvalue", "read";, +++ b/modules/lang-groovy/build.gradle, +  compile 'org.codehaus.groovy:groovy:2.4.6:indy', +++ b/core/src/main/resources/org/elasticsearch/bootstrap/untrusted.policy, +  // groovy requires this to enable workaround for certain JVMs (https://github.com/apache/groovy/pull/137), +  permission java.util.PropertyPermission "java.vm.name", "read";, +  permission java.util.PropertyPermission "groovy.use.classvalue", "read";, +++ b/modules/lang-groovy/build.gradle, +  compile 'org.codehaus.groovy:groovy:2.4.6:indy', +++ /dev/null, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/untrusted.policy, +  // groovy requires this to enable workaround for certain JVMs (https://github.com/apache/groovy/pull/137), +  permission java.util.PropertyPermission "java.vm.name", "read";, +  permission java.util.PropertyPermission "groovy.use.classvalue", "read";, +++ b/modules/lang-groovy/build.gradle, +  compile 'org.codehaus.groovy:groovy:2.4.6:indy', +++ /dev/null, +++ b/modules/lang-groovy/licenses/groovy-2.4.6-indy.jar.sha1, +af78e80fab591a6dcf2d6ccb8bf34d1e888291be, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/untrusted.policy, +  // groovy requires this to enable workaround for certain JVMs (https://github.com/apache/groovy/pull/137), +  permission java.util.PropertyPermission "java.vm.name", "read";, +  permission java.util.PropertyPermission "groovy.use.classvalue", "read";, +++ b/modules/lang-groovy/build.gradle, +  compile 'org.codehaus.groovy:groovy:2.4.6:indy', +++ /dev/null, +++ b/modules/lang-groovy/licenses/groovy-2.4.6-indy.jar.sha1, +af78e80fab591a6dcf2d6ccb8bf34d1e888291be, +++ b/modules/lang-groovy/licenses/groovy-NOTICE.txt, +Apache Groovy, +Copyright 2003-2016 The Apache Software Foundation, +This product includes software developed at, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/untrusted.policy, +  // groovy requires this to enable workaround for certain JVMs (https://github.com/apache/groovy/pull/137), +  permission java.util.PropertyPermission "java.vm.name", "read";, +  permission java.util.PropertyPermission "groovy.use.classvalue", "read";, +++ b/modules/lang-groovy/build.gradle, +  compile 'org.codehaus.groovy:groovy:2.4.6:indy', +++ /dev/null, +++ b/modules/lang-groovy/licenses/groovy-2.4.6-indy.jar.sha1, +af78e80fab591a6dcf2d6ccb8bf34d1e888291be, +++ b/modules/lang-groovy/licenses/groovy-NOTICE.txt, +Apache Groovy, +Copyright 2003-2016 The Apache Software Foundation, +This product includes software developed at, +++ b/plugins/ingest-geoip/build.gradle, +  compile ('com.maxmind.geoip2:geoip2:2.4.0'), +  compile('com.fasterxml.jackson.core:jackson-annotations:2.5.0'), +  compile('com.fasterxml.jackson.core:jackson-databind:2.5.3'), +  compile('com.maxmind.db:maxmind-db:1.0.1')]