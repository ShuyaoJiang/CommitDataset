[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                String catchPart, List warnings, boolean inSetup, boolean skipShardFailures) {, +            if (false == inSetup && skipShardFailures == false && shouldAddShardFailureCheck(path)) {, +                    inSetup, snippet.skipShardsFailures), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                String catchPart, List warnings, boolean inSetup, boolean skipShardFailures) {, +            if (false == inSetup && skipShardFailures == false && shouldAddShardFailureCheck(path)) {, +                    inSetup, snippet.skipShardsFailures), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/SnippetsTask.groovy, +        /(?:$CATCH|$SUBSTITUTION|$SKIP|(continued)|$SETUP|$WARNING|(skip_shard_failures)) ?/, +                            if (it.group(8) != null) {, +                                snippet.skipShardsFailures = true, +                                return, +                            }, +        boolean skipShardsFailures = false, +                if (skipShardsFailures) {, +                    result += '[skip_shard_failures]', +                }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                String catchPart, List warnings, boolean inSetup, boolean skipShardFailures) {, +            if (false == inSetup && skipShardFailures == false && shouldAddShardFailureCheck(path)) {, +                    inSetup, snippet.skipShardsFailures), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/SnippetsTask.groovy, +        /(?:$CATCH|$SUBSTITUTION|$SKIP|(continued)|$SETUP|$WARNING|(skip_shard_failures)) ?/, +                            if (it.group(8) != null) {, +                                snippet.skipShardsFailures = true, +                                return, +                            }, +        boolean skipShardsFailures = false, +                if (skipShardsFailures) {, +                    result += '[skip_shard_failures]', +                }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/CcrClient.java, +import org.elasticsearch.client.ccr.ForgetFollowerRequest;, +import org.elasticsearch.client.core.BroadcastResponse;, +     * Instructs an index acting as a leader index to forget the specified follower index., +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-forget-follower.html">the docs</a> for more details, +     * on the intended usage of this API., +     *, +     * @param request the request, +     * @param options the request options (e.g., headers), use {@link RequestOptions#DEFAULT} if the defaults are acceptable., +     * @return the response, +     * @throws IOException if an I/O exception occurs while executing this request, +     */, +    public BroadcastResponse forgetFollower(final ForgetFollowerRequest request, final RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(, +                request,, +                CcrRequestConverters::forgetFollower,, +                options,, +                BroadcastResponse::fromXContent,, +                Collections.emptySet());, +    }, +, +    /**, +     * Asynchronously instructs an index acting as a leader index to forget the specified follower index., +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-forget-follower.html">the docs</a> for more details, +     * on the intended usage of this API., +     *, +     * @param request the request, +     * @param options the request options (e.g., headers), use {@link RequestOptions#DEFAULT} if the defaults are acceptable., +     */, +    public void forgetFollowerAsync(, +            final ForgetFollowerRequest request,, +            final RequestOptions options,, +            final ActionListener<BroadcastResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(, +                request,, +                CcrRequestConverters::forgetFollower,, +                options,, +                BroadcastResponse::fromXContent,, +                listener,, +                Collections.emptySet());, +    }, +, +    /**, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                String catchPart, List warnings, boolean inSetup, boolean skipShardFailures) {, +            if (false == inSetup && skipShardFailures == false && shouldAddShardFailureCheck(path)) {, +                    inSetup, snippet.skipShardsFailures), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/SnippetsTask.groovy, +        /(?:$CATCH|$SUBSTITUTION|$SKIP|(continued)|$SETUP|$WARNING|(skip_shard_failures)) ?/, +                            if (it.group(8) != null) {, +                                snippet.skipShardsFailures = true, +                                return, +                            }, +        boolean skipShardsFailures = false, +                if (skipShardsFailures) {, +                    result += '[skip_shard_failures]', +                }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/CcrClient.java, +import org.elasticsearch.client.ccr.ForgetFollowerRequest;, +import org.elasticsearch.client.core.BroadcastResponse;, +     * Instructs an index acting as a leader index to forget the specified follower index., +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-forget-follower.html">the docs</a> for more details, +     * on the intended usage of this API., +     *, +     * @param request the request]