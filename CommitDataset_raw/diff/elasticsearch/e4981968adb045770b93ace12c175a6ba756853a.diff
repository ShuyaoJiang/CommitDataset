[+++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.search.internal.DefaultSearchContext;, +        registerIndexDynamicSetting(DefaultSearchContext.MAX_RESULT_WINDOW, Validator.POSITIVE_INTEGER);, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.search.internal.DefaultSearchContext;, +        registerIndexDynamicSetting(DefaultSearchContext.MAX_RESULT_WINDOW, Validator.POSITIVE_INTEGER);, +++ b/core/src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java, +    /**, +     * Index setting describing the maximum value of from + size on a query., +     */, +    public static final String MAX_RESULT_WINDOW = "index.max_result_window";, +    public static class Defaults {, +        /**, +         * Default maximum value of from + size on a query. 10,000 was chosen as, +         * a conservative default as it is sure to not cause trouble. Users can, +         * certainly profile their cluster and decide to set it to 100,000, +         * safely. 1,000,000 is probably way to high for any cluster to set, +         * safely., +         */, +        public static final int MAX_RESULT_WINDOW = 10000;, +    }, +        if (scrollContext == null) {, +            long from = from() == -1 ? 0 : from();, +            long size = size() == -1 ? 10 : size();, +            long resultWindow = from + size;, +            // We need settingsService's view of the settings because its dynamic., +            // indexService's isn't., +            int maxResultWindow = indexService.settingsService().getSettings().getAsInt(MAX_RESULT_WINDOW, Defaults.MAX_RESULT_WINDOW);, +, +            if (resultWindow > maxResultWindow) {, +                throw new QueryPhaseExecutionException(this,, +                        "Result window is too large, from + size must be less than or equal to: [" + maxResultWindow + "] but was [", +                                + resultWindow + "]. See the scroll api for a more efficient way to request large data sets. ", +                                + "This limit can be set by changing the [" + DefaultSearchContext.MAX_RESULT_WINDOW, +                                + "] index level parameter.");, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.search.internal.DefaultSearchContext;, +        registerIndexDynamicSetting(DefaultSearchContext.MAX_RESULT_WINDOW, Validator.POSITIVE_INTEGER);, +++ b/core/src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java, +    /**, +     * Index setting describing the maximum value of from + size on a query., +     */, +    public static final String MAX_RESULT_WINDOW = "index.max_result_window";, +    public static class Defaults {, +        /**, +         * Default maximum value of from + size on a query. 10,000 was chosen as, +         * a conservative default as it is sure to not cause trouble. Users can, +         * certainly profile their cluster and decide to set it to 100,000, +         * safely. 1,000,000 is probably way to high for any cluster to set, +         * safely., +         */, +        public static final int MAX_RESULT_WINDOW = 10000;, +    }, +        if (scrollContext == null) {, +            long from = from() == -1 ? 0 : from();, +            long size = size() == -1 ? 10 : size();, +            long resultWindow = from + size;, +            // We need settingsService's view of the settings because its dynamic., +            // indexService's isn't., +            int maxResultWindow = indexService.settingsService().getSettings().getAsInt(MAX_RESULT_WINDOW, Defaults.MAX_RESULT_WINDOW);, +, +            if (resultWindow > maxResultWindow) {, +                throw new QueryPhaseExecutionException(this,, +                        "Result window is too large, from + size must be less than or equal to: [" + maxResultWindow + "] but was [", +                                + resultWindow + "]. See the scroll api for a more efficient way to request large data sets. ", +                                + "This limit can be set by changing the [" + DefaultSearchContext.MAX_RESULT_WINDOW, +                                + "] index level parameter.");, +++ b/core/src/test/java/org/elasticsearch/search/scroll/SearchScrollIT.java, +    public void testDeepScrollingDoesNotBlowUp() throws Exception {, +                    .setSize(Integer.MAX_VALUE), +                    .setScroll("1m");, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.search.internal.DefaultSearchContext;, +        registerIndexDynamicSetting(DefaultSearchContext.MAX_RESULT_WINDOW, Validator.POSITIVE_INTEGER);, +++ b/core/src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java, +    /**, +     * Index setting describing the maximum value of from + size on a query., +     */, +    public static final String MAX_RESULT_WINDOW = "index.max_result_window";, +    public static class Defaults {, +        /**, +         * Default maximum value of from + size on a query. 10,000 was chosen as, +         * a conservative default as it is sure to not cause trouble. Users can, +         * certainly profile their cluster and decide to set it to 100,000, +         * safely. 1,000,000 is probably way to high for any cluster to set, +         * safely., +         */, +        public static final int MAX_RESULT_WINDOW = 10000;, +    }, +        if (scrollContext == null) {, +            long from = from() == -1 ? 0 : from();, +            long size = size() == -1 ? 10 : size();, +            long resultWindow = from + size;, +            // We need settingsService's view of the settings because its dynamic., +            // indexService's isn't., +            int maxResultWindow = indexService.settingsService().getSettings().getAsInt(MAX_RESULT_WINDOW, Defaults.MAX_RESULT_WINDOW);, +, +            if (resultWindow > maxResultWindow) {, +                throw new QueryPhaseExecutionException(this,, +                        "Result window is too large, from + size must be less than or equal to: [" + maxResultWindow + "] but was ["]