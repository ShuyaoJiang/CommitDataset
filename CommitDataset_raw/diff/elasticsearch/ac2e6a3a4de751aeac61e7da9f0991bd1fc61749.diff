[+++ b/src/main/java/org/elasticsearch/search/facet/FacetPhase.java, +import org.elasticsearch.search.facet.nested.NestedFacetExecutor;, +                    // TODO: We can pass the filter as param to collector method, then this filter wrapper logic can, +                    // be moved to NestedFacetExecutor impl, the other implementations would just wrap it into, +                    // FilteredCollector., +, +                        if (collector instanceof NestedFacetExecutor.Collector) {, +                            // We get rootDoc ids as hits in the collect method, so we need to first translate from, +                            // rootDoc hit to nested doc hit and then apply filter., +                            collector = new NestedFacetExecutor.Collector((NestedFacetExecutor.Collector) collector, entry.getFilter());, +                            // If we would first apply the filter on the rootDoc level and then translate it back to the, +                            // nested docs we ignore the facet filter and all nested docs are passed to facet collector, +                        } else {, +                    }, +                        if (post instanceof NestedFacetExecutor.Post) {, +                            post = new NestedFacetExecutor.Post((NestedFacetExecutor.Post) post, entry.getFilter());, +                        } else {, +                    }, +                            if (post instanceof NestedFacetExecutor.Post) {, +                                post = new NestedFacetExecutor.Post((NestedFacetExecutor.Post) post, entry.getFilter());, +                            } else {, +                        }, +                    Collector collector = entry.getFacetExecutor().collector();, +                        if (collector instanceof NestedFacetExecutor.Collector) {, +                            collector = new NestedFacetExecutor.Collector((NestedFacetExecutor.Collector) collector, entry.getFilter());, +                        } else {, +                            collector = new FilteredCollector(collector, entry.getFilter());, +                        }, +                    list.add(collector);, +++ b/src/main/java/org/elasticsearch/search/facet/FacetPhase.java, +import org.elasticsearch.search.facet.nested.NestedFacetExecutor;, +                    // TODO: We can pass the filter as param to collector method, then this filter wrapper logic can, +                    // be moved to NestedFacetExecutor impl, the other implementations would just wrap it into, +                    // FilteredCollector., +, +                        if (collector instanceof NestedFacetExecutor.Collector) {, +                            // We get rootDoc ids as hits in the collect method, so we need to first translate from, +                            // rootDoc hit to nested doc hit and then apply filter., +                            collector = new NestedFacetExecutor.Collector((NestedFacetExecutor.Collector) collector, entry.getFilter());, +                            // If we would first apply the filter on the rootDoc level and then translate it back to the, +                            // nested docs we ignore the facet filter and all nested docs are passed to facet collector, +                        } else {, +                    }, +                        if (post instanceof NestedFacetExecutor.Post) {, +                            post = new NestedFacetExecutor.Post((NestedFacetExecutor.Post) post, entry.getFilter());, +                        } else {, +                    }, +                            if (post instanceof NestedFacetExecutor.Post) {, +                                post = new NestedFacetExecutor.Post((NestedFacetExecutor.Post) post, entry.getFilter());, +                            } else {, +                        }, +                    Collector collector = entry.getFacetExecutor().collector();, +                        if (collector instanceof NestedFacetExecutor.Collector) {, +                            collector = new NestedFacetExecutor.Collector((NestedFacetExecutor.Collector) collector, entry.getFilter());, +                        } else {, +                            collector = new FilteredCollector(collector, entry.getFilter());, +                        }, +                    list.add(collector);, +++ b/src/main/java/org/elasticsearch/search/facet/nested/NestedFacetExecutor.java, +import org.elasticsearch.common.lucene.search.FilteredCollector;, +        public Post(Post post, Filter filter) {, +            this.post = new FacetExecutor.Post.Filtered(post.post, filter);, +            this.parentFilter = post.parentFilter;, +            this.childFilter = post.childFilter;, +        }, +, +        // We can move, +        public Collector(Collector collector, Filter filter) {, +            this.collector = new FilteredCollector(collector.collector, filter);, +            this.parentFilter = collector.parentFilter;, +            this.childFilter = collector.childFilter;, +        }, +, +++ b/src/main/java/org/elasticsearch/search/facet/FacetPhase.java, +import org.elasticsearch.search.facet.nested.NestedFacetExecutor;, +                    // TODO: We can pass the filter as param to collector method, then this filter wrapper logic can, +                    // be moved to NestedFacetExecutor impl, the other implementations would just wrap it into, +                    // FilteredCollector., +, +                        if (collector instanceof NestedFacetExecutor.Collector) {, +                            // We get rootDoc ids as hits in the collect method, so we need to first translate from, +                            // rootDoc hit to nested doc hit and then apply filter., +                            collector = new NestedFacetExecutor.Collector((NestedFacetExecutor.Collector) collector, entry.getFilter());, +                            // If we would first apply the filter on the rootDoc level and then translate it back to the, +                            // nested docs we ignore the facet filter and all nested docs are passed to facet collector, +                        } else {, +                    }, +                        if (post instanceof NestedFacetExecutor.Post) {, +                            post = new NestedFacetExecutor.Post((NestedFacetExecutor.Post) post, entry.getFilter());, +                        } else {, +                    }, +                            if (post instanceof NestedFacetExecutor.Post) {, +                                post = new NestedFacetExecutor.Post((NestedFacetExecutor.Post) post, entry.getFilter());, +                            } else {, +                        }, +                    Collector collector = entry.getFacetExecutor().collector();, +                        if (collector instanceof NestedFacetExecutor.Collector) {, +                            collector = new NestedFacetExecutor.Collector((NestedFacetExecutor.Collector) collector, entry.getFilter());, +                        } else {, +                            collector = new FilteredCollector(collector, entry.getFilter());]