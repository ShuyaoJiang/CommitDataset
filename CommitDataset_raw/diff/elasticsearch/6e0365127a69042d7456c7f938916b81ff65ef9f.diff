[+++ b/marvel/src/test/java/org/elasticsearch/marvel/agent/settings/MarvelSettingsTests.java, +import static org.hamcrest.Matchers.instanceOf;, +@ESIntegTestCase.ClusterScope(scope = ESIntegTestCase.Scope.TEST, numDataNodes = 1, numClientNodes = 0), +    private final TimeValue indicesStatsTimeout = newRandomTimeValue();, +                .put(Node.HTTP_ENABLED, false), +                .put(MarvelSettings.INDICES_STATS_TIMEOUT, indicesStatsTimeout), +            assertThat(marvelSettings.indicesStatsTimeout().millis(), equalTo(indicesStatsTimeout.millis()));, +        Settings.Builder transientSettings = Settings.builder();, +, +        }, +        logger.error("--> updating settings");, +        final Settings updatedSettings = transientSettings.build();, +        assertAcked(prepareRandomUpdateSettings(updatedSettings).get());, +        logger.error("--> checking that the value has been correctly updated on all marvel settings services");, +                for (String setting : MarvelSettings.dynamicSettings().keySet()) {, +                        MarvelSetting current = null;, +                        Object value = null;, +                        switch (setting) {, +                            case MarvelSettings.INTERVAL:, +                            case MarvelSettings.INDEX_STATS_TIMEOUT:, +                            case MarvelSettings.INDICES_STATS_TIMEOUT:, +                            case MarvelSettings.CLUSTER_STATE_TIMEOUT:, +                            case MarvelSettings.CLUSTER_STATS_TIMEOUT:, +                            case MarvelSettings.INDEX_RECOVERY_TIMEOUT:, +                                current = marvelSettings.getSetting(setting);, +                                value = current.getValue();, +                                assertThat(value, instanceOf(TimeValue.class));, +                                assertThat(((TimeValue) value).millis(), equalTo(updatedSettings.getAsTime(setting, null).millis()));, +                                break;, +                            case MarvelSettings.INDEX_RECOVERY_ACTIVE_ONLY:, +                                current = marvelSettings.getSetting(setting);, +                                value = current.getValue();, +                                assertThat(value, instanceOf(Boolean.class));, +                                assertThat(((Boolean) value), equalTo(updatedSettings.getAsBoolean(setting, null)));, +                                break;, +                            default:, +                                if (setting.startsWith(MarvelSettings.INDICES)) {, +                                    current = marvelSettings.getSetting(MarvelSettings.INDICES);, +                                    value = current.getValue();, +                                    assertArrayEquals((String[]) value, updatedSettings.getAsArray(MarvelSettings.INDICES));, +                                    fail("unable to check value for unknown dynamic setting [" + setting + "]");, +                                }, +                        }]