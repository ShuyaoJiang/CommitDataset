[+++ b/TESTING.asciidoc, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/TESTING.asciidoc, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/build.gradle, +task run() {, +++ b/TESTING.asciidoc, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/build.gradle, +task run() {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/TESTING.asciidoc, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/build.gradle, +task run() {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            'ES_GC_OPTS': config.jvmArgs, +++ b/TESTING.asciidoc, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/build.gradle, +task run() {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            'ES_GC_OPTS': config.jvmArgs, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +++ b/TESTING.asciidoc, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/build.gradle, +task run() {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            'ES_GC_OPTS': config.jvmArgs, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RunTask.groovy, +++ b/TESTING.asciidoc, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/build.gradle, +task run() {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            'ES_GC_OPTS': config.jvmArgs, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RunTask.groovy, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +import org.elasticsearch.cluster.action.shard.NoOpShardStateActionListener;, +, +                replicationPhase = new ReplicationPhase(shardsIt, primaryResponse.v2(), primaryResponse.v1(), observer, primary, internalRequest, listener, indexShardReference);, +    final class ReplicationPhase extends AbstractRunnable implements ShardStateAction.Listener {, +                                InternalRequest internalRequest, ActionListener<Response> listener, Releasable indexShardReference) {, +        @Override, +        public void onShardFailedNoMaster() {, +, +        }, +, +        @Override, +        public void onShardFailedFailure(DiscoveryNode master, TransportException e) {, +, +        }, +, +                                logger.trace("[{}] transport failure during replica request [{}] ", exp, node, replicaRequest);, +                                if (ignoreReplicaException(exp) == false) {, +                                    shardStateAction.shardFailed(shard, indexMetaData.getIndexUUID(), "failed to perform " + actionName + " on replica on node " + node, exp, ReplicationPhase.this);, +, +++ b/TESTING.asciidoc, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/build.gradle, +task run() {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            'ES_GC_OPTS': config.jvmArgs, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RunTask.groovy, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +import org.elasticsearch.cluster.action.shard.NoOpShardStateActionListener;, +, +                replicationPhase = new ReplicationPhase(shardsIt, primaryResponse.v2(), primaryResponse.v1(), observer, primary, internalRequest, listener, indexShardReference);, +    final class ReplicationPhase extends AbstractRunnable implements ShardStateAction.Listener {, +                                InternalRequest internalRequest, ActionListener<Response> listener, Releasable indexShardReference) {, +        @Override, +        public void onShardFailedNoMaster() {, +, +        }, +, +        @Override, +        public void onShardFailedFailure(DiscoveryNode master, TransportException e) {, +, +        }, +, +                                logger.trace("[{}] transport failure during replica request [{}] ", exp, node, replicaRequest);, +                                if (ignoreReplicaException(exp) == false) {, +                                    shardStateAction.shardFailed(shard, indexMetaData.getIndexUUID(), "failed to perform " + actionName + " on replica on node " + node, exp, ReplicationPhase.this);]