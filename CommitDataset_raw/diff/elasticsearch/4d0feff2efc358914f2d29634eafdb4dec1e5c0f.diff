[+++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    private long seqNo;, +    public DocWriteResponse(ShardId shardId, String type, String id, long seqNo, long version) {, +        this.seqNo = seqNo;, +    /**, +     * Returns the sequence number assigned for this change. Returns {@link SequenceNumbersService#UNASSIGNED_SEQ_NO} if the operation wasn't, +     * performed (i.e., an update operation that resulted in a NOOP)., +     */, +    public long getSeqNo() {, +        return seqNo;, +    }, +, +        seqNo = in.readZLong();, +        out.writeZLong(seqNo);, +        static final XContentBuilderString _SHARD_ID = new XContentBuilderString("_shard_id");, +        static final XContentBuilderString _SEQ_NO = new XContentBuilderString("_seq_no");, +        //nocommit: i'm not sure we want to expose it in the api but it will be handy for debugging while we work..., +        builder.field(Fields._SHARD_ID, shardId.id());, +        if (getSeqNo() >= 0) {, +            builder.field(Fields._SEQ_NO, getSeqNo());, +        }, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    private long seqNo;, +    public DocWriteResponse(ShardId shardId, String type, String id, long seqNo, long version) {, +        this.seqNo = seqNo;, +    /**, +     * Returns the sequence number assigned for this change. Returns {@link SequenceNumbersService#UNASSIGNED_SEQ_NO} if the operation wasn't, +     * performed (i.e., an update operation that resulted in a NOOP)., +     */, +    public long getSeqNo() {, +        return seqNo;, +    }, +, +        seqNo = in.readZLong();, +        out.writeZLong(seqNo);, +        static final XContentBuilderString _SHARD_ID = new XContentBuilderString("_shard_id");, +        static final XContentBuilderString _SEQ_NO = new XContentBuilderString("_seq_no");, +        //nocommit: i'm not sure we want to expose it in the api but it will be handy for debugging while we work..., +        builder.field(Fields._SHARD_ID, shardId.id());, +        if (getSeqNo() >= 0) {, +            builder.field(Fields._SEQ_NO, getSeqNo());, +        }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(),, +                            new CommonStats(indexShard, SHARD_STATS_FLAGS), indexShard.commitStats(), indexShard.seqNoStats()));, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    private long seqNo;, +    public DocWriteResponse(ShardId shardId, String type, String id, long seqNo, long version) {, +        this.seqNo = seqNo;, +    /**, +     * Returns the sequence number assigned for this change. Returns {@link SequenceNumbersService#UNASSIGNED_SEQ_NO} if the operation wasn't, +     * performed (i.e., an update operation that resulted in a NOOP)., +     */, +    public long getSeqNo() {, +        return seqNo;, +    }, +, +        seqNo = in.readZLong();, +        out.writeZLong(seqNo);, +        static final XContentBuilderString _SHARD_ID = new XContentBuilderString("_shard_id");, +        static final XContentBuilderString _SEQ_NO = new XContentBuilderString("_seq_no");, +        //nocommit: i'm not sure we want to expose it in the api but it will be handy for debugging while we work..., +        builder.field(Fields._SHARD_ID, shardId.id());, +        if (getSeqNo() >= 0) {, +            builder.field(Fields._SEQ_NO, getSeqNo());, +        }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(),, +                            new CommonStats(indexShard, SHARD_STATS_FLAGS), indexShard.commitStats(), indexShard.seqNoStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStatsFlags.java, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    private long seqNo;, +    public DocWriteResponse(ShardId shardId, String type, String id, long seqNo, long version) {, +        this.seqNo = seqNo;, +    /**, +     * Returns the sequence number assigned for this change. Returns {@link SequenceNumbersService#UNASSIGNED_SEQ_NO} if the operation wasn't, +     * performed (i.e., an update operation that resulted in a NOOP)., +     */, +    public long getSeqNo() {, +        return seqNo;, +    }, +, +        seqNo = in.readZLong();, +        out.writeZLong(seqNo);, +        static final XContentBuilderString _SHARD_ID = new XContentBuilderString("_shard_id");, +        static final XContentBuilderString _SEQ_NO = new XContentBuilderString("_seq_no");, +        //nocommit: i'm not sure we want to expose it in the api but it will be handy for debugging while we work..., +        builder.field(Fields._SHARD_ID, shardId.id());, +        if (getSeqNo() >= 0) {, +            builder.field(Fields._SEQ_NO, getSeqNo());, +        }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(),, +                            new CommonStats(indexShard, SHARD_STATS_FLAGS), indexShard.commitStats(), indexShard.seqNoStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStatsFlags.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java]