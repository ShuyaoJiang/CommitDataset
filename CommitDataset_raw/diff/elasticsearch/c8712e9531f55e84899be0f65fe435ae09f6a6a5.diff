[+++ b/benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java, +            super(Settings.EMPTY);, +++ b/benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java, +            super(Settings.EMPTY);, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +    private final AllocationDeciders allocationDeciders;, +    private final AllocationService allocationService;, +    final Collection<AllocationDecider> deciderList;, +    public ClusterModule(Settings settings, ClusterService clusterService, List<ClusterPlugin> clusterPlugins,, +                         ClusterInfoService clusterInfoService) {, +        this.deciderList = createAllocationDeciders(settings, clusterService.getClusterSettings(), clusterPlugins);, +        this.allocationDeciders = new AllocationDeciders(settings, deciderList);, +        this.indexNameExpressionResolver = new IndexNameExpressionResolver(settings);, +        this.allocationService = new AllocationService(settings, allocationDeciders, shardsAllocator, clusterInfoService);, +    public AllocationService getAllocationService() {, +        return allocationService;, +    }, +, +        bind(AllocationService.class).toInstance(allocationService);, +        bind(AllocationDeciders.class).toInstance(allocationDeciders);, +++ b/benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java, +            super(Settings.EMPTY);, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +    private final AllocationDeciders allocationDeciders;, +    private final AllocationService allocationService;, +    final Collection<AllocationDecider> deciderList;, +    public ClusterModule(Settings settings, ClusterService clusterService, List<ClusterPlugin> clusterPlugins,, +                         ClusterInfoService clusterInfoService) {, +        this.deciderList = createAllocationDeciders(settings, clusterService.getClusterSettings(), clusterPlugins);, +        this.allocationDeciders = new AllocationDeciders(settings, deciderList);, +        this.indexNameExpressionResolver = new IndexNameExpressionResolver(settings);, +        this.allocationService = new AllocationService(settings, allocationDeciders, shardsAllocator, clusterInfoService);, +    public AllocationService getAllocationService() {, +        return allocationService;, +    }, +, +        bind(AllocationService.class).toInstance(allocationService);, +        bind(AllocationDeciders.class).toInstance(allocationDeciders);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +    private GatewayAllocator gatewayAllocator;, +    public AllocationService(Settings settings, AllocationDeciders allocationDeciders,, +                             GatewayAllocator gatewayAllocator,, +                             ShardsAllocator shardsAllocator, ClusterInfoService clusterInfoService) {, +        this(settings, allocationDeciders, shardsAllocator, clusterInfoService);, +        setGatewayAllocator(gatewayAllocator);, +    }, +, +    public AllocationService(Settings settings, AllocationDeciders allocationDeciders,, +    public void setGatewayAllocator(GatewayAllocator gatewayAllocator) {, +        this.gatewayAllocator = gatewayAllocator;, +    }, +, +++ b/benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java, +            super(Settings.EMPTY);, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +    private final AllocationDeciders allocationDeciders;, +    private final AllocationService allocationService;, +    final Collection<AllocationDecider> deciderList;, +    public ClusterModule(Settings settings, ClusterService clusterService, List<ClusterPlugin> clusterPlugins,, +                         ClusterInfoService clusterInfoService) {, +        this.deciderList = createAllocationDeciders(settings, clusterService.getClusterSettings(), clusterPlugins);, +        this.allocationDeciders = new AllocationDeciders(settings, deciderList);, +        this.indexNameExpressionResolver = new IndexNameExpressionResolver(settings);, +        this.allocationService = new AllocationService(settings, allocationDeciders, shardsAllocator, clusterInfoService);, +    public AllocationService getAllocationService() {, +        return allocationService;, +    }, +, +        bind(AllocationService.class).toInstance(allocationService);, +        bind(AllocationDeciders.class).toInstance(allocationDeciders);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +    private GatewayAllocator gatewayAllocator;, +    public AllocationService(Settings settings, AllocationDeciders allocationDeciders,, +                             GatewayAllocator gatewayAllocator,, +                             ShardsAllocator shardsAllocator, ClusterInfoService clusterInfoService) {, +        this(settings, allocationDeciders, shardsAllocator, clusterInfoService);, +        setGatewayAllocator(gatewayAllocator);, +    }, +, +    public AllocationService(Settings settings, AllocationDeciders allocationDeciders,, +    public void setGatewayAllocator(GatewayAllocator gatewayAllocator) {, +        this.gatewayAllocator = gatewayAllocator;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/discovery/Discovery.java, +++ b/benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java, +            super(Settings.EMPTY);, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +    private final AllocationDeciders allocationDeciders;, +    private final AllocationService allocationService;, +    final Collection<AllocationDecider> deciderList;, +    public ClusterModule(Settings settings, ClusterService clusterService, List<ClusterPlugin> clusterPlugins,, +                         ClusterInfoService clusterInfoService) {, +        this.deciderList = createAllocationDeciders(settings, clusterService.getClusterSettings(), clusterPlugins);, +        this.allocationDeciders = new AllocationDeciders(settings, deciderList);, +        this.indexNameExpressionResolver = new IndexNameExpressionResolver(settings);, +        this.allocationService = new AllocationService(settings, allocationDeciders, shardsAllocator, clusterInfoService);, +    public AllocationService getAllocationService() {, +        return allocationService;, +    }]