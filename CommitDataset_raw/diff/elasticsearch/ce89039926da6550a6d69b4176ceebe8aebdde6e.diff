[+++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java, +        InnerHitsContext innerHitsContext = sc.innerHits();, +    MappedFieldType failIfFieldMappingNotFound(String name, MappedFieldType fieldMapping) {, +        if (fieldMapping != null || allowUnmappedFields) {, +            throw new QueryShardException(this, "No field mapping can be found for the field with name [{}]", name);, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java, +        InnerHitsContext innerHitsContext = sc.innerHits();, +    MappedFieldType failIfFieldMappingNotFound(String name, MappedFieldType fieldMapping) {, +        if (fieldMapping != null || allowUnmappedFields) {, +            throw new QueryShardException(this, "No field mapping can be found for the field with name [{}]", name);, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java, +        InnerHitsContext innerHitsContext = sc.innerHits();, +    MappedFieldType failIfFieldMappingNotFound(String name, MappedFieldType fieldMapping) {, +        if (fieldMapping != null || allowUnmappedFields) {, +            throw new QueryShardException(this, "No field mapping can be found for the field with name [{}]", name);, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +++ b/core/src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsContext.java, +import java.util.HashMap;, +    public InnerHitsContext() {, +        this.innerHits = new HashMap<>();, +    }, +, +        if (innerHits.containsKey(name)) {, +            throw new IllegalArgumentException("inner_hit definition with the name [" + name + "] already exists. Use a different inner_hit name");, +        }, +, +    public void addInnerHitDefinitions(Map<String, BaseInnerHits> innerHits) {, +        for (Map.Entry<String, BaseInnerHits> entry : innerHits.entrySet()) {, +            addInnerHitDefinition(entry.getKey(), entry.getValue());, +        }, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java, +        InnerHitsContext innerHitsContext = sc.innerHits();, +    MappedFieldType failIfFieldMappingNotFound(String name, MappedFieldType fieldMapping) {, +        if (fieldMapping != null || allowUnmappedFields) {, +            throw new QueryShardException(this, "No field mapping can be found for the field with name [{}]", name);, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +++ b/core/src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsContext.java, +import java.util.HashMap;, +    public InnerHitsContext() {, +        this.innerHits = new HashMap<>();, +    }]