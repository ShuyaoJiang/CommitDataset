[+++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +    /**, +     * Get Java home for the project for the specified version. If the specified version is not configured, an exception with the specified, +     * message is thrown., +     *, +     * @param project the project, +     * @param version the version of Java home to obtain, +     * @param message the exception message if Java home for the specified version is not configured, +     * @return Java home for the specified version, +     * @throws GradleException if Java home for the specified version is not configured, +     */, +    static String getJavaHome(final Project project, final int version, final String message) {, +        if (project.javaVersions.get(version) == null) {, +            throw new GradleException(message), +        return project.javaVersions.get(version), +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +    /**, +     * Get Java home for the project for the specified version. If the specified version is not configured, an exception with the specified, +     * message is thrown., +     *, +     * @param project the project, +     * @param version the version of Java home to obtain, +     * @param message the exception message if Java home for the specified version is not configured, +     * @return Java home for the specified version, +     * @throws GradleException if Java home for the specified version is not configured, +     */, +    static String getJavaHome(final Project project, final int version, final String message) {, +        if (project.javaVersions.get(version) == null) {, +            throw new GradleException(message), +        return project.javaVersions.get(version), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +    /**, +     * Get Java home for the project for the specified version. If the specified version is not configured, an exception with the specified, +     * message is thrown., +     *, +     * @param project the project, +     * @param version the version of Java home to obtain, +     * @param message the exception message if Java home for the specified version is not configured, +     * @return Java home for the specified version, +     * @throws GradleException if Java home for the specified version is not configured, +     */, +    static String getJavaHome(final Project project, final int version, final String message) {, +        if (project.javaVersions.get(version) == null) {, +            throw new GradleException(message), +        return project.javaVersions.get(version), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +            env = ['JAVA_HOME': "${-> getJavaHome(project, 8, "JAVA8_HOME must be set to run BWC tests against [" + nodeVersion + "]")}"], +            env = ['JAVA_HOME': "${-> getJavaHome(project, 9, "JAVA9_HOME must be set to run BWC tests against [" + nodeVersion + "]")}"], +        } else {, +            env = ['JAVA_HOME': (String) project.runtimeJavaHome], +        env.put('ES_JAVA_OPTS', esJavaOpts), +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +    /**, +     * Get Java home for the project for the specified version. If the specified version is not configured, an exception with the specified, +     * message is thrown., +     *, +     * @param project the project, +     * @param version the version of Java home to obtain, +     * @param message the exception message if Java home for the specified version is not configured, +     * @return Java home for the specified version, +     * @throws GradleException if Java home for the specified version is not configured, +     */, +    static String getJavaHome(final Project project, final int version, final String message) {, +        if (project.javaVersions.get(version) == null) {, +            throw new GradleException(message), +        return project.javaVersions.get(version), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +            env = ['JAVA_HOME': "${-> getJavaHome(project, 8, "JAVA8_HOME must be set to run BWC tests against [" + nodeVersion + "]")}"], +            env = ['JAVA_HOME': "${-> getJavaHome(project, 9, "JAVA9_HOME must be set to run BWC tests against [" + nodeVersion + "]")}"], +        } else {, +            env = ['JAVA_HOME': (String) project.runtimeJavaHome], +        env.put('ES_JAVA_OPTS', esJavaOpts), +++ b/buildSrc/version.properties, +lucene            = 7.4.0-snapshot-330fd18f20, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +    /**, +     * Get Java home for the project for the specified version. If the specified version is not configured, an exception with the specified, +     * message is thrown., +     *, +     * @param project the project, +     * @param version the version of Java home to obtain, +     * @param message the exception message if Java home for the specified version is not configured, +     * @return Java home for the specified version, +     * @throws GradleException if Java home for the specified version is not configured, +     */, +    static String getJavaHome(final Project project, final int version, final String message) {, +        if (project.javaVersions.get(version) == null) {, +            throw new GradleException(message), +        return project.javaVersions.get(version), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy]