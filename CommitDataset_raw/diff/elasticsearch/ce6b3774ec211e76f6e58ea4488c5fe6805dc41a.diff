[+++ b/src/test/java/org/elasticsearch/VersionTests.java, +import org.elasticsearch.test.VersionTestUtil;, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +        for (Version version : VersionTestUtil.allVersions()) {, +++ b/src/test/java/org/elasticsearch/VersionTests.java, +import org.elasticsearch.test.VersionTestUtil;, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +        for (Version version : VersionTestUtil.allVersions()) {, +++ b/src/test/java/org/elasticsearch/action/OriginalIndicesTests.java, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +            out.setVersion(randomVersion(random()));, +++ b/src/test/java/org/elasticsearch/VersionTests.java, +import org.elasticsearch.test.VersionTestUtil;, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +        for (Version version : VersionTestUtil.allVersions()) {, +++ b/src/test/java/org/elasticsearch/action/OriginalIndicesTests.java, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +            out.setVersion(randomVersion(random()));, +++ b/src/test/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequestTest.java, +import org.elasticsearch.test.VersionTestUtil;, +            Version testVersion = VersionTestUtil.randomVersionBetween(random(), Version.CURRENT.minimumCompatibilityVersion(), Version.CURRENT);, +++ b/src/test/java/org/elasticsearch/VersionTests.java, +import org.elasticsearch.test.VersionTestUtil;, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +        for (Version version : VersionTestUtil.allVersions()) {, +++ b/src/test/java/org/elasticsearch/action/OriginalIndicesTests.java, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +            out.setVersion(randomVersion(random()));, +++ b/src/test/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequestTest.java, +import org.elasticsearch.test.VersionTestUtil;, +            Version testVersion = VersionTestUtil.randomVersionBetween(random(), Version.CURRENT.minimumCompatibilityVersion(), Version.CURRENT);, +++ b/src/test/java/org/elasticsearch/action/get/MultiGetShardRequestTests.java, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +        out.setVersion(randomVersion(random()));, +++ b/src/test/java/org/elasticsearch/VersionTests.java, +import org.elasticsearch.test.VersionTestUtil;, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +        for (Version version : VersionTestUtil.allVersions()) {, +++ b/src/test/java/org/elasticsearch/action/OriginalIndicesTests.java, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +            out.setVersion(randomVersion(random()));, +++ b/src/test/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequestTest.java, +import org.elasticsearch.test.VersionTestUtil;, +            Version testVersion = VersionTestUtil.randomVersionBetween(random(), Version.CURRENT.minimumCompatibilityVersion(), Version.CURRENT);, +++ b/src/test/java/org/elasticsearch/action/get/MultiGetShardRequestTests.java, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +        out.setVersion(randomVersion(random()));, +++ b/src/test/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequestTests.java, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +        out.setVersion(randomVersion(random()));, +++ b/src/test/java/org/elasticsearch/VersionTests.java, +import org.elasticsearch.test.VersionTestUtil;, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +        for (Version version : VersionTestUtil.allVersions()) {, +++ b/src/test/java/org/elasticsearch/action/OriginalIndicesTests.java, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +            out.setVersion(randomVersion(random()));, +++ b/src/test/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequestTest.java, +import org.elasticsearch.test.VersionTestUtil;, +            Version testVersion = VersionTestUtil.randomVersionBetween(random(), Version.CURRENT.minimumCompatibilityVersion(), Version.CURRENT);, +++ b/src/test/java/org/elasticsearch/action/get/MultiGetShardRequestTests.java, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +        out.setVersion(randomVersion(random()));, +++ b/src/test/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequestTests.java, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +        out.setVersion(randomVersion(random()));, +++ b/src/test/java/org/elasticsearch/action/mlt/MoreLikeThisRequestTests.java, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +        out.setVersion(randomVersion(random()));, +++ b/src/test/java/org/elasticsearch/VersionTests.java, +import org.elasticsearch.test.VersionTestUtil;, +import static org.elasticsearch.test.VersionTestUtil.randomVersion;, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());, +            Version version = randomVersion(random());]