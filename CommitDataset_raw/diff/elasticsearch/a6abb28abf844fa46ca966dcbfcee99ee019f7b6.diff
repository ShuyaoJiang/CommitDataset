[+++ b/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +        try {, +        } finally {, +    }, +        PrimaryTermSupplier currentTerm = (PrimaryTermSupplier) engine.engineConfig.getPrimaryTermSupplier();, +        Function<Engine.Index, Engine.Index> indexWithCurrentTerm = index -> new Engine.Index(index.uid(),, +            index.parsedDoc(), UNASSIGNED_SEQ_NO, currentTerm.get(), index.version(), index.versionType(), index.origin(),, +            index.startTime(), index.getAutoGeneratedIdTimestamp(), index.isRetry(), index.getIfSeqNo(), index.getIfPrimaryTerm());, +        Function<Engine.Delete, Engine.Delete> deleteWithCurrentTerm = delete -> new Engine.Delete(delete.type(),, +            delete.id(), delete.uid(), UNASSIGNED_SEQ_NO, currentTerm.get(), delete.version(), delete.versionType(), delete.origin(),, +            delete.startTime(), delete.getIfSeqNo(), delete.getIfPrimaryTerm());, +                currentTerm.set(currentTerm.get() + 1L);, +                engine.rollTranslogGeneration();, +                        result = engine.index(indexWithCurrentTerm.apply(index));, +                        result = engine.delete(deleteWithCurrentTerm.apply(delete));, +                    lastOpSeqNo = result.getSeqNo();, +                    lastOpTerm = result.getTerm();, +                    lastOpSeqNo = UNASSIGNED_SEQ_NO;, +                    lastOpTerm = UNASSIGNED_PRIMARY_TERM;, +++ b/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +        try {, +        } finally {, +    }, +        PrimaryTermSupplier currentTerm = (PrimaryTermSupplier) engine.engineConfig.getPrimaryTermSupplier();, +        Function<Engine.Index, Engine.Index> indexWithCurrentTerm = index -> new Engine.Index(index.uid(),, +            index.parsedDoc(), UNASSIGNED_SEQ_NO, currentTerm.get(), index.version(), index.versionType(), index.origin(),, +            index.startTime(), index.getAutoGeneratedIdTimestamp(), index.isRetry(), index.getIfSeqNo(), index.getIfPrimaryTerm());, +        Function<Engine.Delete, Engine.Delete> deleteWithCurrentTerm = delete -> new Engine.Delete(delete.type(),, +            delete.id(), delete.uid(), UNASSIGNED_SEQ_NO, currentTerm.get(), delete.version(), delete.versionType(), delete.origin(),, +            delete.startTime(), delete.getIfSeqNo(), delete.getIfPrimaryTerm());, +                currentTerm.set(currentTerm.get() + 1L);, +                engine.rollTranslogGeneration();, +                        result = engine.index(indexWithCurrentTerm.apply(index));, +                        result = engine.delete(deleteWithCurrentTerm.apply(delete));, +                    lastOpSeqNo = result.getSeqNo();, +                    lastOpTerm = result.getTerm();, +                    lastOpSeqNo = UNASSIGNED_SEQ_NO;, +                    lastOpTerm = UNASSIGNED_PRIMARY_TERM;, +++ b/test/framework/src/main/java/org/elasticsearch/index/engine/EngineTestCase.java, +    protected final PrimaryTermSupplier primaryTerm = new PrimaryTermSupplier(0L);, +                primaryTerm,, +, +    public static final class PrimaryTermSupplier implements LongSupplier {, +        private final AtomicLong term;, +, +        PrimaryTermSupplier(long initialTerm) {, +            this.term = new AtomicLong(initialTerm);, +        }, +, +        public long get() {, +            return term.get();, +        }, +, +        public void set(long newTerm) {, +            this.term.set(newTerm);, +        }, +, +        @Override, +        public long getAsLong() {, +            return get();, +        }, +    }]