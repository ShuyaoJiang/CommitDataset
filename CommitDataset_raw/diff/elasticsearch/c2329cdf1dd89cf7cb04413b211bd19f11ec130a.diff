[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/indexlifecycle/IndexLifecycleExplainResponse.java, +            long numNull = Stream.of(phase, action, step).filter(Objects::isNull).count();, +            if (numNull > 0 && numNull < 3) {, +                    STEP_FIELD.getPreferredName() + "=" + step + "]");, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/indexlifecycle/IndexLifecycleExplainResponse.java, +            long numNull = Stream.of(phase, action, step).filter(Objects::isNull).count();, +            if (numNull > 0 && numNull < 3) {, +                    STEP_FIELD.getPreferredName() + "=" + step + "]");, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/indexlifecycle/IndexLifecycleExplainResponseTests.java, +        final int numNull = randomIntBetween(1, 3);, +                randomBoolean() ? null : randomNonNegativeLong(),, +                randomBoolean() ? null : randomNonNegativeLong(),, +                randomBoolean() ? null : randomNonNegativeLong(),, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/indexlifecycle/IndexLifecycleExplainResponse.java, +            long numNull = Stream.of(phase, action, step).filter(Objects::isNull).count();, +            if (numNull > 0 && numNull < 3) {, +                    STEP_FIELD.getPreferredName() + "=" + step + "]");, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/indexlifecycle/IndexLifecycleExplainResponseTests.java, +        final int numNull = randomIntBetween(1, 3);, +                randomBoolean() ? null : randomNonNegativeLong(),, +                randomBoolean() ? null : randomNonNegativeLong(),, +                randomBoolean() ? null : randomNonNegativeLong(),, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/IndexLifecycleExplainResponse.java, +            long numNull = Stream.of(phase, action, step).filter(Objects::isNull).count();, +            if (numNull > 0 && numNull < 3) {, +                    STEP_FIELD.getPreferredName() + "=" + step + "]");, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/indexlifecycle/IndexLifecycleExplainResponse.java, +            long numNull = Stream.of(phase, action, step).filter(Objects::isNull).count();, +            if (numNull > 0 && numNull < 3) {, +                    STEP_FIELD.getPreferredName() + "=" + step + "]");, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/indexlifecycle/IndexLifecycleExplainResponseTests.java, +        final int numNull = randomIntBetween(1, 3);, +                randomBoolean() ? null : randomNonNegativeLong(),, +                randomBoolean() ? null : randomNonNegativeLong(),, +                randomBoolean() ? null : randomNonNegativeLong(),, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/IndexLifecycleExplainResponse.java, +            long numNull = Stream.of(phase, action, step).filter(Objects::isNull).count();, +            if (numNull > 0 && numNull < 3) {, +                    STEP_FIELD.getPreferredName() + "=" + step + "]");, +++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/indexlifecycle/IndexLifecycleExplainResponseTests.java, +        final int numNull = randomIntBetween(1, 3);, +                randomBoolean() ? null : randomNonNegativeLong(),, +                randomBoolean() ? null : randomNonNegativeLong(),, +                randomBoolean() ? null : randomNonNegativeLong(),, +            switch (between(0, 10)) {, +                phaseTime = randomValueOtherThan(phaseTime, () -> randomLongBetween(0, 100000));, +                break;, +            case 4:, +                actionTime = randomValueOtherThan(actionTime, () -> randomLongBetween(0, 100000));, +                break;, +            case 5:, +                stepTime = randomValueOtherThan(stepTime, () -> randomLongBetween(0, 100000));, +                break;, +            case 6:, +            case 7:, +            case 8:, +            case 9:, +            case 10:]