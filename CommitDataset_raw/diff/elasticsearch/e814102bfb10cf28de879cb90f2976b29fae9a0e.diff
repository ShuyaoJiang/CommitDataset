[+++ b/core/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContentGenerator.java, +import com.fasterxml.jackson.core.util.DefaultIndenter;, +import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;, +    private static final SerializedString LF = new SerializedString("\n");, +    private  static final DefaultPrettyPrinter.Indenter INDENTER = new DefaultIndenter("  ", LF.getValue());, +    public final void usePrettyPrint() {, +        generator.setPrettyPrinter(new DefaultPrettyPrinter().withObjectIndenter(INDENTER));, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContentGenerator.java, +import com.fasterxml.jackson.core.util.DefaultIndenter;, +import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;, +    private static final SerializedString LF = new SerializedString("\n");, +    private  static final DefaultPrettyPrinter.Indenter INDENTER = new DefaultIndenter("  ", LF.getValue());, +    public final void usePrettyPrint() {, +        generator.setPrettyPrinter(new DefaultPrettyPrinter().withObjectIndenter(INDENTER));, +++ b/core/src/test/java/org/elasticsearch/common/xcontent/builder/XContentBuilderTests.java, +    public void testIndentIsPlatformIndependent() throws IOException {, +        XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON).prettyPrint();, +        builder.startObject().field("test","foo").startObject("foo").field("foobar", "boom").endObject().endObject();, +        String string = builder.string();, +        assertEquals("{\n" +, +                "  \"test\" : \"foo\",\n" +, +                "  \"foo\" : {\n" +, +                "    \"foobar\" : \"boom\"\n" +, +                "  }\n" +, +                "}", string);, +, +        builder = XContentFactory.contentBuilder(XContentType.YAML).prettyPrint();, +        builder.startObject().field("test","foo").startObject("foo").field("foobar", "boom").endObject().endObject();, +        string = builder.string();, +        assertEquals("---\n" +, +                "test: \"foo\"\n" +, +                "foo:\n" +, +                "  foobar: \"boom\"\n", string);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContentGenerator.java, +import com.fasterxml.jackson.core.util.DefaultIndenter;, +import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;, +    private static final SerializedString LF = new SerializedString("\n");, +    private  static final DefaultPrettyPrinter.Indenter INDENTER = new DefaultIndenter("  ", LF.getValue());, +    public final void usePrettyPrint() {, +        generator.setPrettyPrinter(new DefaultPrettyPrinter().withObjectIndenter(INDENTER));, +++ b/core/src/test/java/org/elasticsearch/common/xcontent/builder/XContentBuilderTests.java, +    public void testIndentIsPlatformIndependent() throws IOException {, +        XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON).prettyPrint();, +        builder.startObject().field("test","foo").startObject("foo").field("foobar", "boom").endObject().endObject();, +        String string = builder.string();, +        assertEquals("{\n" +, +                "  \"test\" : \"foo\",\n" +, +                "  \"foo\" : {\n" +, +                "    \"foobar\" : \"boom\"\n" +, +                "  }\n" +, +                "}", string);, +, +        builder = XContentFactory.contentBuilder(XContentType.YAML).prettyPrint();, +        builder.startObject().field("test","foo").startObject("foo").field("foobar", "boom").endObject().endObject();, +        string = builder.string();, +        assertEquals("---\n" +, +                "test: \"foo\"\n" +, +                "foo:\n" +, +                "  foobar: \"boom\"\n", string);, +    }, +, +++ b/core/src/test/java/org/elasticsearch/index/query/HasChildQueryBuilderTests.java, +        assertEquals(query, builder.string());]