[+++ b/core/src/main/java/org/elasticsearch/common/geo/XShapeCollection.java, +  private boolean pointsOnly = false;, +, +  public boolean pointsOnly() {, +    return this.pointsOnly;, +  }, +, +  public void setPointsOnly(boolean pointsOnly) {, +    this.pointsOnly = pointsOnly;, +  }, +, +++ b/core/src/main/java/org/elasticsearch/common/geo/XShapeCollection.java, +  private boolean pointsOnly = false;, +, +  public boolean pointsOnly() {, +    return this.pointsOnly;, +  }, +, +  public void setPointsOnly(boolean pointsOnly) {, +    this.pointsOnly = pointsOnly;, +  }, +, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/MultiPointBuilder.java, +        XShapeCollection multiPoints = new XShapeCollection<>(shapes, SPATIAL_CONTEXT);, +        multiPoints.setPointsOnly(true);, +        return multiPoints;, +++ b/core/src/main/java/org/elasticsearch/common/geo/XShapeCollection.java, +  private boolean pointsOnly = false;, +, +  public boolean pointsOnly() {, +    return this.pointsOnly;, +  }, +, +  public void setPointsOnly(boolean pointsOnly) {, +    this.pointsOnly = pointsOnly;, +  }, +, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/MultiPointBuilder.java, +        XShapeCollection multiPoints = new XShapeCollection<>(shapes, SPATIAL_CONTEXT);, +        multiPoints.setPointsOnly(true);, +        return multiPoints;, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +++ b/core/src/main/java/org/elasticsearch/common/geo/XShapeCollection.java, +  private boolean pointsOnly = false;, +, +  public boolean pointsOnly() {, +    return this.pointsOnly;, +  }, +, +  public void setPointsOnly(boolean pointsOnly) {, +    this.pointsOnly = pointsOnly;, +  }, +, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/MultiPointBuilder.java, +        XShapeCollection multiPoints = new XShapeCollection<>(shapes, SPATIAL_CONTEXT);, +        multiPoints.setPointsOnly(true);, +        return multiPoints;, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/geo/GeoShapeFieldMapper.java, +import com.spatial4j.core.shape.Point;, +import com.spatial4j.core.shape.jts.JtsGeometry;, +import org.elasticsearch.common.xcontent.support.XContentMapValues;, +        public static final String STRATEGY_POINTS_ONLY = "points_only";, +        public static final boolean POINTS_ONLY = false;, +            if (geoShapeFieldType.tree.equals(Names.TREE_QUADTREE) && context.indexCreatedVersion().before(Version.V_2_0_0_beta1)) {, +                } else if (Names.STRATEGY_POINTS_ONLY.equals(fieldName)) {, +                    builder.fieldType().setPointsOnly(XContentMapValues.nodeBooleanValue(fieldNode));, +                    iterator.remove();, +        private boolean pointsOnly = Defaults.POINTS_ONLY;, +            this.pointsOnly = ref.pointsOnly;, +                pointsOnly == that.pointsOnly &&, +            return Objects.hash(super.hashCode(), tree, strategyName, pointsOnly, treeLevels, precisionInMeters, distanceErrorPct,, +                    defaultDistanceErrorPct, orientation);, +            if ((pointsOnly() != other.pointsOnly())) {, +                conflicts.add("mapper [" + names().fullName() + "] has different points_only");, +            }, +, +        public boolean pointsOnly() {, +            return pointsOnly;, +        }, +, +        public void setPointsOnly(boolean pointsOnly) {, +            checkIfFrozen();, +            this.pointsOnly = pointsOnly;, +        }, +                recursiveStrategy.setPointsOnly(pointsOnly());, +            if (fieldType().defaultStrategy() instanceof RecursivePrefixTreeStrategy && fieldType().pointsOnly() && !(shape instanceof Point)) {, +                throw new MapperParsingException("[{" + fieldType().names().fullName() + "}] is configured for points only but a " +, +                        ((shape instanceof JtsGeometry) ? ((JtsGeometry)shape).getGeom().getGeometryType() : shape.getClass()) + " was found");, +            }, +        if (includeDefaults || fieldType().pointsOnly() != GeoShapeFieldMapper.Defaults.POINTS_ONLY) {, +            builder.field(Names.STRATEGY_POINTS_ONLY, fieldType().pointsOnly());, +        }, +++ b/core/src/main/java/org/elasticsearch/common/geo/XShapeCollection.java, +  private boolean pointsOnly = false;, +, +  public boolean pointsOnly() {, +    return this.pointsOnly;, +  }, +]