[+++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +                indexMapBuilder.put(index, ImmutableMap.copyOf(indexMetaData.getMappings())); // No types specified means get it all, +, +        }, +        if (!metaData1.persistentSettings.equals(metaData2.persistentSettings)) {, +            return false;, +        }, +        if (!metaData1.templates.equals(metaData2.templates())) {, +            return false;, +        }, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +                indexMapBuilder.put(index, ImmutableMap.copyOf(indexMetaData.getMappings())); // No types specified means get it all, +, +        }, +        if (!metaData1.persistentSettings.equals(metaData2.persistentSettings)) {, +            return false;, +        }, +        if (!metaData1.templates.equals(metaData2.templates())) {, +            return false;, +        }, +++ b/src/test/java/org/elasticsearch/test/integration/indices/mapping/SimpleGetMappingsTests.java, +import static org.hamcrest.Matchers.*;, +    public void getMappingsWhereThereAreNone() {, +        createIndex("index");, +        GetMappingsResponse response = client().admin().indices().prepareGetMappings().execute().actionGet();, +        assertThat(response.mappings(), hasKey("index"));, +        assertThat(response.mappings().get("index").size(), equalTo(0));, +    }, +, +    @Test]