[+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java, +            validationErrors.add("template must not contain the following characters " + Strings.INVALID_FILENAME_CHARS);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java, +            validationErrors.add("template must not contain the following characters " + Strings.INVALID_FILENAME_CHARS);, +++ b/modules/lang-painless/src/main/antlr/PainlessLexer.g4, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java, +            validationErrors.add("template must not contain the following characters " + Strings.INVALID_FILENAME_CHARS);, +++ b/modules/lang-painless/src/main/antlr/PainlessLexer.g4, +++ b/modules/lang-painless/src/main/antlr/PainlessParser.g4, +    : TYPE REF ID, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java, +            validationErrors.add("template must not contain the following characters " + Strings.INVALID_FILENAME_CHARS);, +++ b/modules/lang-painless/src/main/antlr/PainlessLexer.g4, +++ b/modules/lang-painless/src/main/antlr/PainlessParser.g4, +    : TYPE REF ID, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Compiler.java, +        byte[] bytes = Writer.write(settings, name, source, variables, root, expressions);, +            throw new IllegalStateException(, +                    "An internal error occurred attempting to define the script [" + name + "].", exception);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java, +            validationErrors.add("template must not contain the following characters " + Strings.INVALID_FILENAME_CHARS);, +++ b/modules/lang-painless/src/main/antlr/PainlessLexer.g4, +++ b/modules/lang-painless/src/main/antlr/PainlessParser.g4, +    : TYPE REF ID, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Compiler.java, +        byte[] bytes = Writer.write(settings, name, source, variables, root, expressions);, +            throw new IllegalStateException(, +                    "An internal error occurred attempting to define the script [" + name + "].", exception);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/ScriptImpl.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java, +            validationErrors.add("template must not contain the following characters " + Strings.INVALID_FILENAME_CHARS);, +++ b/modules/lang-painless/src/main/antlr/PainlessLexer.g4, +++ b/modules/lang-painless/src/main/antlr/PainlessParser.g4, +    : TYPE REF ID, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Compiler.java, +        byte[] bytes = Writer.write(settings, name, source, variables, root, expressions);, +            throw new IllegalStateException(, +                    "An internal error occurred attempting to define the script [" + name + "].", exception);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/ScriptImpl.java, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Variables.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java, +            validationErrors.add("template must not contain the following characters " + Strings.INVALID_FILENAME_CHARS);, +++ b/modules/lang-painless/src/main/antlr/PainlessLexer.g4, +++ b/modules/lang-painless/src/main/antlr/PainlessParser.g4, +    : TYPE REF ID, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Compiler.java, +        byte[] bytes = Writer.write(settings, name, source, variables, root, expressions);, +            throw new IllegalStateException(, +                    "An internal error occurred attempting to define the script [" + name + "].", exception);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/ScriptImpl.java, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Variables.java, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/antlr/PainlessParser.java, +      setState(121);, +        _localctx = new DeclContext(_localctx);, +        declaration();, +        delimiter();, +        _localctx = new ContinueContext(_localctx);, +        setState(99);, +        match(CONTINUE);, +        setState(100);, +        _localctx = new BreakContext(_localctx);, +        setState(101);, +        match(BREAK);, +        setState(102);, +        _localctx = new ReturnContext(_localctx);, +        setState(103);, +        match(RETURN);, +        setState(104);, +        expression(0);, +        setState(105);, +        _localctx = new TryContext(_localctx);, +        setState(107);, +        setState(108);, +        setState(110); , +            setState(109);, +          setState(112); , +      case 10:, +        enterOuterAlt(_localctx, 10);, +        setState(114);, +        setState(115);, +        setState(116);, +      case 11:, +        enterOuterAlt(_localctx, 11);, +        setState(118);, +        setState(119);, +      setState(125);, +        setState(123);, +        setState(124);, +      setState(127);, +      setState(131);, +          setState(128);, +        setState(133);, +      setState(134);, +      setState(136);, +      setState(140);, +        setState(138);, +        setState(139);, +      setState(142);, +      setState(144);, +      setState(145);]