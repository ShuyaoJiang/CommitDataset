[+++ b/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesAction;, +import org.elasticsearch.action.admin.indices.alias.get.TransportGetAliasesAction;, +        registerAction(GetAliasesAction.INSTANCE, TransportGetAliasesAction.class);, +++ b/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesAction;, +import org.elasticsearch.action.admin.indices.alias.get.TransportGetAliasesAction;, +        registerAction(GetAliasesAction.INSTANCE, TransportGetAliasesAction.class);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/exists/AliasesExistAction.java, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesRequest;, +public class AliasesExistAction extends IndicesAction<GetAliasesRequest, AliasesExistResponse, AliasesExistRequestBuilder> {, +++ b/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesAction;, +import org.elasticsearch.action.admin.indices.alias.get.TransportGetAliasesAction;, +        registerAction(GetAliasesAction.INSTANCE, TransportGetAliasesAction.class);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/exists/AliasesExistAction.java, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesRequest;, +public class AliasesExistAction extends IndicesAction<GetAliasesRequest, AliasesExistResponse, AliasesExistRequestBuilder> {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/exists/AliasesExistRequestBuilder.java, +import org.elasticsearch.action.admin.indices.alias.get.BaseAliasesRequestBuilder;, +public class AliasesExistRequestBuilder extends BaseAliasesRequestBuilder<AliasesExistResponse, AliasesExistRequestBuilder> {, +++ b/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesAction;, +import org.elasticsearch.action.admin.indices.alias.get.TransportGetAliasesAction;, +        registerAction(GetAliasesAction.INSTANCE, TransportGetAliasesAction.class);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/exists/AliasesExistAction.java, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesRequest;, +public class AliasesExistAction extends IndicesAction<GetAliasesRequest, AliasesExistResponse, AliasesExistRequestBuilder> {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/exists/AliasesExistRequestBuilder.java, +import org.elasticsearch.action.admin.indices.alias.get.BaseAliasesRequestBuilder;, +public class AliasesExistRequestBuilder extends BaseAliasesRequestBuilder<AliasesExistResponse, AliasesExistRequestBuilder> {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/exists/TransportAliasesExistAction.java, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesRequest;, +public class TransportAliasesExistAction extends TransportMasterNodeOperationAction<GetAliasesRequest, AliasesExistResponse> {, +    protected GetAliasesRequest newRequest() {, +        return new GetAliasesRequest();, +    protected AliasesExistResponse masterOperation(GetAliasesRequest request, ClusterState state) throws ElasticSearchException {, +++ b/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesAction;, +import org.elasticsearch.action.admin.indices.alias.get.TransportGetAliasesAction;, +        registerAction(GetAliasesAction.INSTANCE, TransportGetAliasesAction.class);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/exists/AliasesExistAction.java, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesRequest;, +public class AliasesExistAction extends IndicesAction<GetAliasesRequest, AliasesExistResponse, AliasesExistRequestBuilder> {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/exists/AliasesExistRequestBuilder.java, +import org.elasticsearch.action.admin.indices.alias.get.BaseAliasesRequestBuilder;, +public class AliasesExistRequestBuilder extends BaseAliasesRequestBuilder<AliasesExistResponse, AliasesExistRequestBuilder> {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/exists/TransportAliasesExistAction.java, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesRequest;, +public class TransportAliasesExistAction extends TransportMasterNodeOperationAction<GetAliasesRequest, AliasesExistResponse> {, +    protected GetAliasesRequest newRequest() {, +        return new GetAliasesRequest();, +    protected AliasesExistResponse masterOperation(GetAliasesRequest request, ClusterState state) throws ElasticSearchException {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/get/BaseAliasesRequestBuilder.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.action.admin.indices.alias.get;, +, +import com.google.common.collect.ObjectArrays;, +import org.elasticsearch.action.ActionResponse;, +import org.elasticsearch.action.support.master.MasterNodeOperationRequestBuilder;, +import org.elasticsearch.client.IndicesAdminClient;, +import org.elasticsearch.client.internal.InternalIndicesAdminClient;, +, +/**, + */, +public abstract class BaseAliasesRequestBuilder<Response extends ActionResponse, Builder extends BaseAliasesRequestBuilder<Response, Builder>> extends MasterNodeOperationRequestBuilder<GetAliasesRequest, Response, Builder> {, +, +    public BaseAliasesRequestBuilder(IndicesAdminClient client, String... aliases) {, +        super((InternalIndicesAdminClient) client, new GetAliasesRequest(aliases));, +    }, +, +    @SuppressWarnings("unchecked"), +    public Builder setAliases(String... aliases) {, +        request.aliases(aliases);, +        return (Builder) this;, +    }, +, +    @SuppressWarnings("unchecked"), +    public Builder addAliases(String... aliases) {, +        request.aliases(ObjectArrays.concat(request.aliases(), aliases, String.class));, +        return (Builder) this;, +    }]