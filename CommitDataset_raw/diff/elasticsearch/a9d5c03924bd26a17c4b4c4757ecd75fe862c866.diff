[+++ b/src/main/java/org/elasticsearch/common/rounding/TimeZoneRounding.java, +import org.joda.time.DateTimeField;, +import org.joda.time.DurationField;, +        private DateTimeField field;, +        private DurationField durationField;, +            field = unit.field();, +            durationField = field.getDurationField();, +            return field.roundFloor(time);, +            return durationField.add(value, 1);, +            field = unit.field();, +            durationField = field.getDurationField();, +        private DateTimeField field;, +        private DurationField durationField;, +            field = unit.field();, +            durationField = field.getDurationField();, +            return field.roundFloor(utcMillis);, +            return durationField.add(value, 1);, +            field = unit.field();, +            durationField = field.getDurationField();, +        private DateTimeField field;, +        private DurationField durationField;, +            field = unit.field();, +            durationField = field.getDurationField();, +            return field.roundFloor(time);, +            return durationField.add(value, 1);, +            field = unit.field();, +            durationField = field.getDurationField();, +++ b/src/main/java/org/elasticsearch/common/rounding/TimeZoneRounding.java, +import org.joda.time.DateTimeField;, +import org.joda.time.DurationField;, +        private DateTimeField field;, +        private DurationField durationField;, +            field = unit.field();, +            durationField = field.getDurationField();, +            return field.roundFloor(time);, +            return durationField.add(value, 1);, +            field = unit.field();, +            durationField = field.getDurationField();, +        private DateTimeField field;, +        private DurationField durationField;, +            field = unit.field();, +            durationField = field.getDurationField();, +            return field.roundFloor(utcMillis);, +            return durationField.add(value, 1);, +            field = unit.field();, +            durationField = field.getDurationField();, +        private DateTimeField field;, +        private DurationField durationField;, +            field = unit.field();, +            durationField = field.getDurationField();, +            return field.roundFloor(time);, +            return durationField.add(value, 1);, +            field = unit.field();, +            durationField = field.getDurationField();, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalHistogram.java, +                    while (key < nextBucket.key) {, +                    assert key == nextBucket.key;, +++ b/src/main/java/org/elasticsearch/common/rounding/TimeZoneRounding.java, +import org.joda.time.DateTimeField;, +import org.joda.time.DurationField;, +        private DateTimeField field;, +        private DurationField durationField;, +            field = unit.field();, +            durationField = field.getDurationField();, +            return field.roundFloor(time);, +            return durationField.add(value, 1);, +            field = unit.field();, +            durationField = field.getDurationField();, +        private DateTimeField field;, +        private DurationField durationField;, +            field = unit.field();, +            durationField = field.getDurationField();, +            return field.roundFloor(utcMillis);, +            return durationField.add(value, 1);, +            field = unit.field();, +            durationField = field.getDurationField();, +        private DateTimeField field;, +        private DurationField durationField;, +            field = unit.field();, +            durationField = field.getDurationField();, +            return field.roundFloor(time);, +            return durationField.add(value, 1);, +            field = unit.field();, +            durationField = field.getDurationField();, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalHistogram.java, +                    while (key < nextBucket.key) {, +                    assert key == nextBucket.key;, +++ b/src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramTests.java, +, +    public void testIssue6965() {, +        SearchResponse response = client().prepareSearch("idx"), +                .addAggregation(dateHistogram("histo").field("date").preZone("+01:00").interval(DateHistogram.Interval.MONTH).minDocCount(0)), +                .execute().actionGet();, +, +        assertSearchResponse(response);, +, +, +        DateHistogram histo = response.getAggregations().get("histo");, +        assertThat(histo, notNullValue());, +        assertThat(histo.getName(), equalTo("histo"));]