[+++ b/core/src/main/java/org/elasticsearch/common/geo/builders/BaseLineStringBuilder.java, +import com.spatial4j.core.shape.ShapeCollection;, +    protected BaseLineStringBuilder() {, +        this(new ArrayList<Coordinate>());, +    }, +, +    protected BaseLineStringBuilder(ArrayList<Coordinate> points) {, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/BaseLineStringBuilder.java, +import com.spatial4j.core.shape.ShapeCollection;, +    protected BaseLineStringBuilder() {, +        this(new ArrayList<Coordinate>());, +    }, +, +    protected BaseLineStringBuilder(ArrayList<Coordinate> points) {, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java, +    // Linear ring defining the shell of the polygon, +    protected Ring<E> shell; , +    // List of linear rings defining the holes of the polygon , +    protected final ArrayList<BaseLineStringBuilder<?>> holes = new ArrayList<>();, +    public E hole(BaseLineStringBuilder<?> hole) {, +     * build new hole to the polygon, +     * @return this, +    public Ring<E> hole() {, +        Ring<E> hole = new Ring<>(thisRef());, +        this.holes.add(hole);, +        return hole;, +    }, +, +    /**, +     * Close the shell of the polygon, +     * @return parent, +     */, +    public ShapeBuilder close() {, +        return shell.close();, +        for(BaseLineStringBuilder<?> hole : holes) {, +        Iterator<BaseLineStringBuilder<?>> iterator = this.holes.iterator();, +    private static int createEdges(int component, Orientation orientation, BaseLineStringBuilder<?> shell,, +                                   BaseLineStringBuilder<?> hole,, +, +    public static class Ring<P extends ShapeBuilder> extends BaseLineStringBuilder<Ring<P>> {, +, +        private final P parent;, +, +        protected Ring(P parent) {, +            this(parent, new ArrayList<Coordinate>());, +        }, +, +        protected Ring(P parent, ArrayList<Coordinate> points) {, +            super(points);, +            this.parent = parent;, +        }, +, +        public P close() {, +            Coordinate start = points.get(0);, +            Coordinate end = points.get(points.size()-1);, +            if(start.x != end.x || start.y != end.y) {, +                points.add(start);, +            }, +            return parent;, +        }, +, +        @Override, +        public GeoShapeType type() {, +            return null;, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/BaseLineStringBuilder.java, +import com.spatial4j.core.shape.ShapeCollection;, +    protected BaseLineStringBuilder() {, +        this(new ArrayList<Coordinate>());, +    }, +, +    protected BaseLineStringBuilder(ArrayList<Coordinate> points) {, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java, +    // Linear ring defining the shell of the polygon, +    protected Ring<E> shell; , +    // List of linear rings defining the holes of the polygon , +    protected final ArrayList<BaseLineStringBuilder<?>> holes = new ArrayList<>();, +    public E hole(BaseLineStringBuilder<?> hole) {, +     * build new hole to the polygon, +     * @return this, +    public Ring<E> hole() {, +        Ring<E> hole = new Ring<>(thisRef());, +        this.holes.add(hole);, +        return hole;, +    }, +, +    /**, +     * Close the shell of the polygon, +     * @return parent, +     */, +    public ShapeBuilder close() {, +        return shell.close();, +        for(BaseLineStringBuilder<?> hole : holes) {, +        Iterator<BaseLineStringBuilder<?>> iterator = this.holes.iterator();, +    private static int createEdges(int component, Orientation orientation, BaseLineStringBuilder<?> shell,, +                                   BaseLineStringBuilder<?> hole,, +, +    public static class Ring<P extends ShapeBuilder> extends BaseLineStringBuilder<Ring<P>> {, +]