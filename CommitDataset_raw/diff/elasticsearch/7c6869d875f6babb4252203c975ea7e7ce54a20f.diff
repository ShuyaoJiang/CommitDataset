[+++ b/pom.xml, +    <name>Elasticsearch core</name>, +            <systemPath>${project.basedir}/lib/sigar/sigar-1.6.4.jar</systemPath>, +            <filter>${project.basedir}/src/packaging/common/packaging.properties</filter>, +                <directory>${project.basedir}/src/main/java</directory>, +                <directory>${project.basedir}/src/main/resources</directory>, +                <directory>${project.basedir}/src/test/java</directory>, +                <directory>${project.basedir}/src/test/java</directory>, +                <directory>${project.basedir}/src/test/resources</directory>, +                <directory>${project.basedir}/rest-api-spec</directory>, +                                    <directory>${project.basedir}/bin</directory>, +                                    <directory>${project.basedir}/bin</directory>, +                                <filter>${project.basedir}/src/packaging/common/packaging.properties</filter>, +                                <filter>${project.basedir}/src/packaging/deb/packaging.properties</filter>, +                                    <directory>${project.basedir}/src/packaging/common/</directory>, +                                    <directory>${project.basedir}/src/packaging/deb/</directory>, +                                <filter>${project.basedir}/src/packaging/common/packaging.properties</filter>, +                                <filter>${project.basedir}/src/packaging/rpm/packaging.properties</filter>, +                        <descriptor>${project.basedir}/src/main/assemblies/targz-bin.xml</descriptor>, +                        <descriptor>${project.basedir}/src/main/assemblies/zip-bin.xml</descriptor>, +++ b/pom.xml, +    <name>Elasticsearch core</name>, +            <systemPath>${project.basedir}/lib/sigar/sigar-1.6.4.jar</systemPath>, +            <filter>${project.basedir}/src/packaging/common/packaging.properties</filter>, +                <directory>${project.basedir}/src/main/java</directory>, +                <directory>${project.basedir}/src/main/resources</directory>, +                <directory>${project.basedir}/src/test/java</directory>, +                <directory>${project.basedir}/src/test/java</directory>, +                <directory>${project.basedir}/src/test/resources</directory>, +                <directory>${project.basedir}/rest-api-spec</directory>, +                                    <directory>${project.basedir}/bin</directory>, +                                    <directory>${project.basedir}/bin</directory>, +                                <filter>${project.basedir}/src/packaging/common/packaging.properties</filter>, +                                <filter>${project.basedir}/src/packaging/deb/packaging.properties</filter>, +                                    <directory>${project.basedir}/src/packaging/common/</directory>, +                                    <directory>${project.basedir}/src/packaging/deb/</directory>, +                                <filter>${project.basedir}/src/packaging/common/packaging.properties</filter>, +                                <filter>${project.basedir}/src/packaging/rpm/packaging.properties</filter>, +                        <descriptor>${project.basedir}/src/main/assemblies/targz-bin.xml</descriptor>, +                        <descriptor>${project.basedir}/src/main/assemblies/zip-bin.xml</descriptor>, +++ b/src/main/java/org/elasticsearch/search/rescore/RescorePhase.java, +++ b/pom.xml, +    <name>Elasticsearch core</name>, +            <systemPath>${project.basedir}/lib/sigar/sigar-1.6.4.jar</systemPath>, +            <filter>${project.basedir}/src/packaging/common/packaging.properties</filter>, +                <directory>${project.basedir}/src/main/java</directory>, +                <directory>${project.basedir}/src/main/resources</directory>, +                <directory>${project.basedir}/src/test/java</directory>, +                <directory>${project.basedir}/src/test/java</directory>, +                <directory>${project.basedir}/src/test/resources</directory>, +                <directory>${project.basedir}/rest-api-spec</directory>, +                                    <directory>${project.basedir}/bin</directory>, +                                    <directory>${project.basedir}/bin</directory>, +                                <filter>${project.basedir}/src/packaging/common/packaging.properties</filter>, +                                <filter>${project.basedir}/src/packaging/deb/packaging.properties</filter>, +                                    <directory>${project.basedir}/src/packaging/common/</directory>, +                                    <directory>${project.basedir}/src/packaging/deb/</directory>, +                                <filter>${project.basedir}/src/packaging/common/packaging.properties</filter>, +                                <filter>${project.basedir}/src/packaging/rpm/packaging.properties</filter>, +                        <descriptor>${project.basedir}/src/main/assemblies/targz-bin.xml</descriptor>, +                        <descriptor>${project.basedir}/src/main/assemblies/zip-bin.xml</descriptor>, +++ b/src/main/java/org/elasticsearch/search/rescore/RescorePhase.java, +++ b/src/test/java/org/elasticsearch/search/rescore/QueryRescorerTests.java, +import static org.elasticsearch.cluster.metadata.IndexMetaData.SETTING_NUMBER_OF_REPLICAS;, +        assertThat(searchResponse.getHits().hits().length, equalTo(5));, +, +    // #11277, +    public void testFromSize() throws Exception {, +        Builder settings = Settings.builder();, +        settings.put(SETTING_NUMBER_OF_SHARDS, 1);, +        settings.put(SETTING_NUMBER_OF_REPLICAS, 0);, +        assertAcked(prepareCreate("test").setSettings(settings));, +        for(int i=0;i<5;i++) {, +            client().prepareIndex("test", "type", ""+i).setSource("text", "hello world").get();, +        }, +        refresh();, +, +        SearchRequestBuilder request = client().prepareSearch();, +        request.setQuery(QueryBuilders.termQuery("text", "hello"));, +        request.setFrom(1);, +        request.setSize(4);, +        request.addRescorer(RescoreBuilder.queryRescorer(QueryBuilders.matchAllQuery()));, +        request.setRescoreWindow(50);, +, +        assertEquals(4, request.get().getHits().hits().length);, +    }]