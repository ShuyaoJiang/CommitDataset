[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/config/Detector.java, +    public static final String BY = "by";, +    public static final String OVER = "over";, +            // by/over field names cannot be "count", "over', "by" - this requirement dates back to the early, +            if (BY.equals(byFieldName)) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_DETECTOR_BY_DISALLOWED,, +                        BY_FIELD_NAME_FIELD.getPreferredName()));, +            }, +            if (BY.equals(overFieldName)) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_DETECTOR_BY_DISALLOWED,, +                        OVER_FIELD_NAME_FIELD.getPreferredName()));, +            }, +, +            if (OVER.equals(byFieldName)) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_DETECTOR_OVER_DISALLOWED,, +                        BY_FIELD_NAME_FIELD.getPreferredName()));, +            }, +            if (OVER.equals(overFieldName)) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_DETECTOR_OVER_DISALLOWED,, +                        OVER_FIELD_NAME_FIELD.getPreferredName()));, +            }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/config/Detector.java, +    public static final String BY = "by";, +    public static final String OVER = "over";, +            // by/over field names cannot be "count", "over', "by" - this requirement dates back to the early, +            if (BY.equals(byFieldName)) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_DETECTOR_BY_DISALLOWED,, +                        BY_FIELD_NAME_FIELD.getPreferredName()));, +            }, +            if (BY.equals(overFieldName)) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_DETECTOR_BY_DISALLOWED,, +                        OVER_FIELD_NAME_FIELD.getPreferredName()));, +            }, +, +            if (OVER.equals(byFieldName)) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_DETECTOR_OVER_DISALLOWED,, +                        BY_FIELD_NAME_FIELD.getPreferredName()));, +            }, +            if (OVER.equals(overFieldName)) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_DETECTOR_OVER_DISALLOWED,, +                        OVER_FIELD_NAME_FIELD.getPreferredName()));, +            }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/messages/Messages.java, +    public static final String JOB_CONFIG_DETECTOR_BY_DISALLOWED =, +            "''by'' is not a permitted value for {0}";, +    public static final String JOB_CONFIG_DETECTOR_OVER_DISALLOWED =, +            "''over'' is not a permitted value for {0}";, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/config/Detector.java, +    public static final String BY = "by";, +    public static final String OVER = "over";, +            // by/over field names cannot be "count", "over', "by" - this requirement dates back to the early, +            if (BY.equals(byFieldName)) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_DETECTOR_BY_DISALLOWED,, +                        BY_FIELD_NAME_FIELD.getPreferredName()));, +            }, +            if (BY.equals(overFieldName)) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_DETECTOR_BY_DISALLOWED,, +                        OVER_FIELD_NAME_FIELD.getPreferredName()));, +            }, +, +            if (OVER.equals(byFieldName)) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_DETECTOR_OVER_DISALLOWED,, +                        BY_FIELD_NAME_FIELD.getPreferredName()));, +            }, +            if (OVER.equals(overFieldName)) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_DETECTOR_OVER_DISALLOWED,, +                        OVER_FIELD_NAME_FIELD.getPreferredName()));, +            }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/messages/Messages.java, +    public static final String JOB_CONFIG_DETECTOR_BY_DISALLOWED =, +            "''by'' is not a permitted value for {0}";, +    public static final String JOB_CONFIG_DETECTOR_OVER_DISALLOWED =, +            "''over'' is not a permitted value for {0}";, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/job/config/AnalysisConfigTests.java, +        builder.setOverFieldName("over_field");, +        builder.setOverFieldName("over_field");, +        builder.setByFieldName("by_field");, +            builder.setOverFieldName("over_field");, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/config/Detector.java, +    public static final String BY = "by";, +    public static final String OVER = "over";, +            // by/over field names cannot be "count", "over', "by" - this requirement dates back to the early, +            if (BY.equals(byFieldName)) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_DETECTOR_BY_DISALLOWED,, +                        BY_FIELD_NAME_FIELD.getPreferredName()));, +            }, +            if (BY.equals(overFieldName)) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_DETECTOR_BY_DISALLOWED,, +                        OVER_FIELD_NAME_FIELD.getPreferredName()));, +            }, +, +            if (OVER.equals(byFieldName)) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_DETECTOR_OVER_DISALLOWED,, +                        BY_FIELD_NAME_FIELD.getPreferredName()));, +            }, +            if (OVER.equals(overFieldName)) {, +                throw new IllegalArgumentException(Messages.getMessage(Messages.JOB_CONFIG_DETECTOR_OVER_DISALLOWED,]