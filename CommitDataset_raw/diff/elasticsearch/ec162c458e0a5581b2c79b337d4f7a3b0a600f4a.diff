[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            copyConfig.from(srcConfigFile), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            copyConfig.from(srcConfigFile), +++ b/docs/plugins/discovery.asciidoc, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            copyConfig.from(srcConfigFile), +++ b/docs/plugins/discovery.asciidoc, +++ b/docs/plugins/ingest.asciidoc, +[[ingest]], +== Ingest Plugin, +, +=== Processors, +, +==== Add processor, +Adds one or more fields and associates them with the specified values. If a field already exists,, +its value will be replaced with the provided one., +, +[source,js], +--------------------------------------------------, +{, +  "add": {, +    "fields": {, +      "field": 582.1, +    }, +  }, +}, +--------------------------------------------------, +, +==== Remove processor, +Removes one or more existing fields. If a field doesn't exist, nothing will happen., +, +[source,js], +--------------------------------------------------, +{, +  "remove": {, +    "fields": [, +      "field1","field2", +    ], +  }, +}, +--------------------------------------------------, +, +==== Rename processor, +Renames one or more existing fields. If a field doesn't exist, an exception will be thrown., +, +[source,js], +--------------------------------------------------, +{, +  "rename": {, +    "fields": {, +      "field1": "field2", +    }, +  }, +}, +--------------------------------------------------, +, +, +==== Convert processor, +Converts one or more field value to a different type, like turning a string to an integer., +If the field value is an array, all members will be converted., +, +The supported types include: `integer`, `float`, `string`, and `boolean`., +, +`boolean` will set a field to true if its string value is equal to `true` (ignore case), to, +false if its string value is equal to `false` (ignore case) and it will throw exception otherwise., +, +[source,js], +--------------------------------------------------, +{, +  "convert": {, +    "fields": {, +      "field1": "integer",, +      "field2": "float", +    }, +  }, +}, +--------------------------------------------------, +, +==== Gsub processor, +Converts a string field by applying a regular expression and a replacement., +If the field is not a string, the processor will throw an exception., +, +This configuration takes an `expression` array consisting of objects. Each object, +holds three elements: `field` for the field name, `pattern` for the, +pattern to be replaced, and `replacement` for the string to replace the matching patterns with., +, +, +[source,js], +--------------------------------------------------, +{, +  "gsub": {, +    "expressions": [, +      {, +        "field": "field1",, +        "pattern": "\.",, +        "replacement": "-", +      }, +    ], +  }]