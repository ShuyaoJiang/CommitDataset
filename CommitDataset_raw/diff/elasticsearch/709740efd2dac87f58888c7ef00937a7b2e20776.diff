[+++ b/TESTING.asciidoc, +The REST tests are run automatically when executing the "gradle check" command. To run only the, +gradle :distribution:tar:integTest   \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT, +---------------------------------------------------------------------------, +, +A specific test case can be run with, +, +---------------------------------------------------------------------------, +gradle :distribution:tar:integTest \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT \, +  -Dtests.method="test {p0=cat.shards/10_basic/Help}", +++ b/TESTING.asciidoc, +The REST tests are run automatically when executing the "gradle check" command. To run only the, +gradle :distribution:tar:integTest   \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT, +---------------------------------------------------------------------------, +, +A specific test case can be run with, +, +---------------------------------------------------------------------------, +gradle :distribution:tar:integTest \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT \, +  -Dtests.method="test {p0=cat.shards/10_basic/Help}", +++ b/build.gradle, +      javadoc.options.encoding='UTF8', +    "org.elasticsearch.distribution.integ-test-zip:elasticsearch:${version}": ':distribution:integ-test-zip',, +// add buildSrc itself as a groovy project, +task buildSrcIdea(type: GradleBuild) {, +  buildFile = 'buildSrc/build.gradle', +  tasks = ['cleanIdea', 'ideaModule'], +}, +tasks.idea.dependsOn(buildSrcIdea), +++ b/TESTING.asciidoc, +The REST tests are run automatically when executing the "gradle check" command. To run only the, +gradle :distribution:tar:integTest   \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT, +---------------------------------------------------------------------------, +, +A specific test case can be run with, +, +---------------------------------------------------------------------------, +gradle :distribution:tar:integTest \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT \, +  -Dtests.method="test {p0=cat.shards/10_basic/Help}", +++ b/build.gradle, +      javadoc.options.encoding='UTF8', +    "org.elasticsearch.distribution.integ-test-zip:elasticsearch:${version}": ':distribution:integ-test-zip',, +// add buildSrc itself as a groovy project, +task buildSrcIdea(type: GradleBuild) {, +  buildFile = 'buildSrc/build.gradle', +  tasks = ['cleanIdea', 'ideaModule'], +}, +tasks.idea.dependsOn(buildSrcIdea), +++ b/buildSrc/build.gradle, +, +task copyEclipseSettings(type: Copy) {, +  from project.file('src/main/resources/eclipse.settings'), +  into '.settings', +}, +// otherwise .settings is not nuked entirely, +tasks.cleanEclipse {, +  delete '.settings', +}, +tasks.eclipse.dependsOn(cleanEclipse, copyEclipseSettings), +++ b/TESTING.asciidoc, +The REST tests are run automatically when executing the "gradle check" command. To run only the, +gradle :distribution:tar:integTest   \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT, +---------------------------------------------------------------------------, +, +A specific test case can be run with, +, +---------------------------------------------------------------------------, +gradle :distribution:tar:integTest \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT \, +  -Dtests.method="test {p0=cat.shards/10_basic/Help}", +++ b/build.gradle, +      javadoc.options.encoding='UTF8', +    "org.elasticsearch.distribution.integ-test-zip:elasticsearch:${version}": ':distribution:integ-test-zip',, +// add buildSrc itself as a groovy project, +task buildSrcIdea(type: GradleBuild) {, +  buildFile = 'buildSrc/build.gradle', +  tasks = ['cleanIdea', 'ideaModule'], +}, +tasks.idea.dependsOn(buildSrcIdea), +++ b/buildSrc/build.gradle, +, +task copyEclipseSettings(type: Copy) {, +  from project.file('src/main/resources/eclipse.settings'), +  into '.settings', +}, +// otherwise .settings is not nuked entirely, +tasks.cleanEclipse {, +  delete '.settings', +}, +tasks.eclipse.dependsOn(cleanEclipse, copyEclipseSettings), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +    Map<String, Object> systemProperties = new HashMap<>(), +    void systemProperty(String property, Object value) {]