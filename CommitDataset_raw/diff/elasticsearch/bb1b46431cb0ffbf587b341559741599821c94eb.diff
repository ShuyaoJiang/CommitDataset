[+++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ShardValidateQueryRequest.java, +import org.elasticsearch.common.BytesHolder;, +    private BytesHolder querySource;, +    public BytesHolder querySource() {, +        querySource = in.readBytesReference();, +, +        out.writeBytesHolder(querySource);, +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ShardValidateQueryRequest.java, +import org.elasticsearch.common.BytesHolder;, +    private BytesHolder querySource;, +    public BytesHolder querySource() {, +        querySource = in.readBytesReference();, +, +        out.writeBytesHolder(querySource);, +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        if (request.querySource().length() == 0) {, +                queryParserService.parse(request.querySource().bytes(), request.querySource().offset(), request.querySource().length());, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ShardValidateQueryRequest.java, +import org.elasticsearch.common.BytesHolder;, +    private BytesHolder querySource;, +    public BytesHolder querySource() {, +        querySource = in.readBytesReference();, +, +        out.writeBytesHolder(querySource);, +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        if (request.querySource().length() == 0) {, +                queryParserService.parse(request.querySource().bytes(), request.querySource().offset(), request.querySource().length());, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ValidateQueryRequest.java, +import org.elasticsearch.common.BytesHolder;, +    BytesHolder querySource() {, +        return new BytesHolder(querySource, querySourceOffset, querySourceLength);, +        BytesHolder bytes = in.readBytesReference();, +        querySource = bytes.bytes();, +        querySourceOffset = bytes.offset();, +        querySourceLength = bytes.length();, +        out.writeBytesHolder(querySource, querySourceOffset, querySourceLength);, +        return "[" + Arrays.toString(indices) + "]" + Arrays.toString(types) + ", querySource[" + Unicode.fromBytes(querySource, querySourceOffset, querySourceLength) + "]";]