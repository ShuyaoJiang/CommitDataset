[+++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/mutate/MutateProcessor.java, +            if (oldVal == null) {, +                throw new IllegalArgumentException("Cannot split field. [" + entry.getKey() + "] is null.");, +            } else if (oldVal instanceof String) {, +            if (val == null) {, +                throw new IllegalArgumentException("Cannot trim field. [" + field + "] is null.");, +            } else if (val instanceof String) {, +            if (val == null) {, +                throw new IllegalArgumentException("Cannot uppercase field. [" + field + "] is null.");, +            } else if (val instanceof String) {, +            if (val == null) {, +                throw new IllegalArgumentException("Cannot lowercase field. [" + field + "] is null.");, +            } else if (val instanceof String) {, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/mutate/MutateProcessor.java, +            if (oldVal == null) {, +                throw new IllegalArgumentException("Cannot split field. [" + entry.getKey() + "] is null.");, +            } else if (oldVal instanceof String) {, +            if (val == null) {, +                throw new IllegalArgumentException("Cannot trim field. [" + field + "] is null.");, +            } else if (val instanceof String) {, +            if (val == null) {, +                throw new IllegalArgumentException("Cannot uppercase field. [" + field + "] is null.");, +            } else if (val instanceof String) {, +            if (val == null) {, +                throw new IllegalArgumentException("Cannot lowercase field. [" + field + "] is null.");, +            } else if (val instanceof String) {, +++ b/plugins/ingest/src/test/java/org/elasticsearch/ingest/DataTests.java, +import static org.hamcrest.Matchers.nullValue;, +    public void testGetPropertyNotFound() {, +        data.getProperty("not.here");, +        assertThat(data.getProperty("not.here"), nullValue());, +    }, +, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/mutate/MutateProcessor.java, +            if (oldVal == null) {, +                throw new IllegalArgumentException("Cannot split field. [" + entry.getKey() + "] is null.");, +            } else if (oldVal instanceof String) {, +            if (val == null) {, +                throw new IllegalArgumentException("Cannot trim field. [" + field + "] is null.");, +            } else if (val instanceof String) {, +            if (val == null) {, +                throw new IllegalArgumentException("Cannot uppercase field. [" + field + "] is null.");, +            } else if (val instanceof String) {, +            if (val == null) {, +                throw new IllegalArgumentException("Cannot lowercase field. [" + field + "] is null.");, +            } else if (val instanceof String) {, +++ b/plugins/ingest/src/test/java/org/elasticsearch/ingest/DataTests.java, +import static org.hamcrest.Matchers.nullValue;, +    public void testGetPropertyNotFound() {, +        data.getProperty("not.here");, +        assertThat(data.getProperty("not.here"), nullValue());, +    }, +, +++ b/plugins/ingest/src/test/java/org/elasticsearch/ingest/processor/mutate/MutateProcessorTests.java, +    public void testSplitNullValue() throws IOException {, +        Map<String, String> split = new HashMap<>();, +        split.put("not.found", "\\.");, +        Processor processor = new MutateProcessor(null, null, null, split, null, null, null, null, null, null);, +        try {, +            processor.execute(data);, +            fail();, +        } catch (IllegalArgumentException e) {, +            assertThat(e.getMessage(), equalTo("Cannot split field. [not.found] is null."));, +        }, +    }, +, +    public void testTrimNullValue() throws IOException {, +        List<String> trim = Collections.singletonList("not.found");, +        Processor processor = new MutateProcessor(null, null, null, null, null, null, null, trim, null, null);, +        try {, +            processor.execute(data);, +            fail();, +        } catch (IllegalArgumentException e) {, +            assertThat(e.getMessage(), equalTo("Cannot trim field. [not.found] is null."));, +        }, +    }, +, +    public void testUppercaseNullValue() throws IOException {, +        List<String> uppercase = Collections.singletonList("not.found");, +        Processor processor = new MutateProcessor(null, null, null, null, null, null, null, null, uppercase, null);, +        try {, +            processor.execute(data);, +            fail();, +        } catch (IllegalArgumentException e) {, +            assertThat(e.getMessage(), equalTo("Cannot uppercase field. [not.found] is null."));, +        }, +    }, +, +, +    public void testLowercaseNullValue() throws IOException {, +        List<String> lowercase = Collections.singletonList("not.found");, +        Processor processor = new MutateProcessor(null, null, null, null, null, null, null, null, null, lowercase);, +        try {, +            processor.execute(data);, +            fail();, +        } catch (IllegalArgumentException e) {, +            assertThat(e.getMessage(), equalTo("Cannot lowercase field. [not.found] is null."));, +        }, +    }, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/mutate/MutateProcessor.java]