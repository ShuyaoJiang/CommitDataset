[+++ b/distribution/docker/build.gradle, +++ b/distribution/docker/build.gradle, +++ b/distribution/docker/src/docker/Dockerfile, +COPY ${elasticsearch} ${ingest-user-agent} /opt/, +++ b/distribution/docker/build.gradle, +++ b/distribution/docker/src/docker/Dockerfile, +COPY ${elasticsearch} ${ingest-user-agent} /opt/, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, +        if ("ingest-geoip".equals(pluginId)) {, +            handleInstallIngestGeoIp();, +        }, +, +    private static void handleInstallIngestGeoIp() throws UserException {, +        throw new UserException(, +                ExitCodes.OK,, +                "ingest-geoip is no longer a plugin but instead a module packaged with this distribution of Elasticsearch");, +    }, +, +++ b/distribution/docker/build.gradle, +++ b/distribution/docker/src/docker/Dockerfile, +COPY ${elasticsearch} ${ingest-user-agent} /opt/, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, +        if ("ingest-geoip".equals(pluginId)) {, +            handleInstallIngestGeoIp();, +        }, +, +    private static void handleInstallIngestGeoIp() throws UserException {, +        throw new UserException(, +                ExitCodes.OK,, +                "ingest-geoip is no longer a plugin but instead a module packaged with this distribution of Elasticsearch");, +    }, +, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/RemovePluginCommand.java, +, +            // special case for ingest-geoip since it is a module now but could have been installed from a previous when it was a plugin, +            if ("ingest-geoip".equals(pluginName)) {, +                throw new UserException(, +                        ExitCodes.OK,, +                        "ingest-geoip is no longer a plugin but instead a module packaged with this distribution of Elasticsearch");, +            }, +, +++ b/distribution/docker/build.gradle, +++ b/distribution/docker/src/docker/Dockerfile, +COPY ${elasticsearch} ${ingest-user-agent} /opt/, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, +        if ("ingest-geoip".equals(pluginId)) {, +            handleInstallIngestGeoIp();, +        }, +, +    private static void handleInstallIngestGeoIp() throws UserException {, +        throw new UserException(, +                ExitCodes.OK,, +                "ingest-geoip is no longer a plugin but instead a module packaged with this distribution of Elasticsearch");, +    }, +, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/RemovePluginCommand.java, +, +            // special case for ingest-geoip since it is a module now but could have been installed from a previous when it was a plugin, +            if ("ingest-geoip".equals(pluginName)) {, +                throw new UserException(, +                        ExitCodes.OK,, +                        "ingest-geoip is no longer a plugin but instead a module packaged with this distribution of Elasticsearch");, +            }, +, +++ b/distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java, +    public void testInstallGeoIp() throws IOException {, +        final Environment environment = createEnv(fs, temp).v2();, +        final UserException exception =, +                expectThrows(UserException.class, () -> new InstallPluginCommand().execute(terminal, "ingest-geoip", false, environment));, +        assertThat(exception.exitCode, equalTo(ExitCodes.OK));, +        assertThat(, +                exception,, +                hasToString(containsString(, +                        "ingest-geoip is no longer a plugin but instead a module packaged with this distribution of Elasticsearch")));, +    }, +, +++ b/distribution/docker/build.gradle, +++ b/distribution/docker/src/docker/Dockerfile, +COPY ${elasticsearch} ${ingest-user-agent} /opt/, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, +        if ("ingest-geoip".equals(pluginId)) {, +            handleInstallIngestGeoIp();, +        }, +, +    private static void handleInstallIngestGeoIp() throws UserException {, +        throw new UserException(, +                ExitCodes.OK,, +                "ingest-geoip is no longer a plugin but instead a module packaged with this distribution of Elasticsearch");, +    }, +, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/RemovePluginCommand.java, +, +            // special case for ingest-geoip since it is a module now but could have been installed from a previous when it was a plugin, +            if ("ingest-geoip".equals(pluginName)) {, +                throw new UserException(, +                        ExitCodes.OK,, +                        "ingest-geoip is no longer a plugin but instead a module packaged with this distribution of Elasticsearch");, +            }, +, +++ b/distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java]