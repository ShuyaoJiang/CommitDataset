[+++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestService;, +        ShardSuggestService shardSuggestService = indexShard.shardSuggestService();, +        shardSuggestService.preSuggest();, +            shardSuggestService.postSuggest(System.nanoTime() - startTime);, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestService;, +        ShardSuggestService shardSuggestService = indexShard.shardSuggestService();, +        shardSuggestService.preSuggest();, +            shardSuggestService.postSuggest(System.nanoTime() - startTime);, +++ b/core/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +public final class ShardGetService extends AbstractIndexShardComponent {, +    private final IndexShard indexShard;, +    public ShardGetService(IndexShard indexShard,, +                           MapperService mapperService) {, +        super(indexShard.shardId(), indexShard.indexSettings());, +        this.indexShard = indexShard;, +    public GetResult get(String type, String id, String[] gFields, boolean realtime, long version, VersionType versionType, FetchSourceContext fetchSourceContext, boolean ignoreErrorsOnGeneratedFields) {, +    private FetchSourceContext normalizeFetchSourceContent(@Nullable FetchSourceContext context, @Nullable String[] gFields) {, +    private GetResult innerGet(String type, String id, String[] gFields, boolean realtime, long version, VersionType versionType, FetchSourceContext fetchSourceContext, boolean ignoreErrorsOnGeneratedFields) {, +                                searchLookup = new SearchLookup(mapperService, null, new String[]{type});, +                        searchLookup = new SearchLookup(mapperService, null, new String[]{type});, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestService;, +        ShardSuggestService shardSuggestService = indexShard.shardSuggestService();, +        shardSuggestService.preSuggest();, +            shardSuggestService.postSuggest(System.nanoTime() - startTime);, +++ b/core/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +public final class ShardGetService extends AbstractIndexShardComponent {, +    private final IndexShard indexShard;, +    public ShardGetService(IndexShard indexShard,, +                           MapperService mapperService) {, +        super(indexShard.shardId(), indexShard.indexSettings());, +        this.indexShard = indexShard;, +    public GetResult get(String type, String id, String[] gFields, boolean realtime, long version, VersionType versionType, FetchSourceContext fetchSourceContext, boolean ignoreErrorsOnGeneratedFields) {, +    private FetchSourceContext normalizeFetchSourceContent(@Nullable FetchSourceContext context, @Nullable String[] gFields) {, +    private GetResult innerGet(String type, String id, String[] gFields, boolean realtime, long version, VersionType versionType, FetchSourceContext fetchSourceContext, boolean ignoreErrorsOnGeneratedFields) {, +                                searchLookup = new SearchLookup(mapperService, null, new String[]{type});, +                        searchLookup = new SearchLookup(mapperService, null, new String[]{type});, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestService;, +    private final ShardSuggestService shardSuggestService;, +                      ThreadPool threadPool, MapperService mapperService, IndexQueryParserService queryParserService, IndexCache indexCache, IndexAliasesService indexAliasesService, ShardIndexingService indexingService, ShardSearchService searchService, ShardIndexWarmerService shardWarmerService,, +                      ShardTermVectorsService termVectorsService, IndexFieldDataService indexFieldDataService, IndexService indexService, ShardSuggestService shardSuggestService,, +        this.getService = new ShardGetService(this, mapperService);, +        this.shardSuggestService = shardSuggestService;, +    public ShardSuggestService shardSuggestService() {, +        return shardSuggestService;, +        return shardSuggestService.stats();, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestService;, +        ShardSuggestService shardSuggestService = indexShard.shardSuggestService();, +        shardSuggestService.preSuggest();, +            shardSuggestService.postSuggest(System.nanoTime() - startTime);, +++ b/core/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +public final class ShardGetService extends AbstractIndexShardComponent {, +    private final IndexShard indexShard;, +    public ShardGetService(IndexShard indexShard,, +                           MapperService mapperService) {, +        super(indexShard.shardId(), indexShard.indexSettings());, +        this.indexShard = indexShard;, +    public GetResult get(String type, String id, String[] gFields, boolean realtime, long version, VersionType versionType, FetchSourceContext fetchSourceContext, boolean ignoreErrorsOnGeneratedFields) {, +    private FetchSourceContext normalizeFetchSourceContent(@Nullable FetchSourceContext context, @Nullable String[] gFields) {, +    private GetResult innerGet(String type, String id, String[] gFields, boolean realtime, long version, VersionType versionType, FetchSourceContext fetchSourceContext, boolean ignoreErrorsOnGeneratedFields) {, +                                searchLookup = new SearchLookup(mapperService, null, new String[]{type});, +                        searchLookup = new SearchLookup(mapperService, null, new String[]{type});, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestService;, +    private final ShardSuggestService shardSuggestService;, +                      ThreadPool threadPool, MapperService mapperService, IndexQueryParserService queryParserService, IndexCache indexCache, IndexAliasesService indexAliasesService, ShardIndexingService indexingService, ShardSearchService searchService, ShardIndexWarmerService shardWarmerService,, +                      ShardTermVectorsService termVectorsService, IndexFieldDataService indexFieldDataService, IndexService indexService, ShardSuggestService shardSuggestService,, +        this.getService = new ShardGetService(this, mapperService);, +        this.shardSuggestService = shardSuggestService;, +    public ShardSuggestService shardSuggestService() {, +        return shardSuggestService;, +        return shardSuggestService.stats();, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShardModule.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestService;, +        bind(ShardSuggestService.class).asEagerSingleton();, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestService;, +        ShardSuggestService shardSuggestService = indexShard.shardSuggestService();, +        shardSuggestService.preSuggest();, +            shardSuggestService.postSuggest(System.nanoTime() - startTime);, +++ b/core/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +public final class ShardGetService extends AbstractIndexShardComponent {, +    private final IndexShard indexShard;, +    public ShardGetService(IndexShard indexShard,, +                           MapperService mapperService) {, +        super(indexShard.shardId(), indexShard.indexSettings());, +        this.indexShard = indexShard;, +    public GetResult get(String type, String id, String[] gFields, boolean realtime, long version, VersionType versionType, FetchSourceContext fetchSourceContext, boolean ignoreErrorsOnGeneratedFields) {, +    private FetchSourceContext normalizeFetchSourceContent(@Nullable FetchSourceContext context, @Nullable String[] gFields) {, +    private GetResult innerGet(String type, String id, String[] gFields, boolean realtime, long version, VersionType versionType, FetchSourceContext fetchSourceContext, boolean ignoreErrorsOnGeneratedFields) {, +                                searchLookup = new SearchLookup(mapperService, null, new String[]{type});, +                        searchLookup = new SearchLookup(mapperService, null, new String[]{type});, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestService;, +    private final ShardSuggestService shardSuggestService;, +                      ThreadPool threadPool, MapperService mapperService, IndexQueryParserService queryParserService, IndexCache indexCache, IndexAliasesService indexAliasesService, ShardIndexingService indexingService, ShardSearchService searchService, ShardIndexWarmerService shardWarmerService,]