[+++ b/core/src/main/java/org/elasticsearch/percolator/MultiDocumentPercolatorIndex.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +import org.elasticsearch.index.mapper.MapperService;, +            memoryIndices[i] = indexDoc(d, memoryIndex, context, parsedDocument).createSearcher().getIndexReader();, +    MemoryIndex indexDoc(ParseContext.Document d, MemoryIndex memoryIndex, PercolateContext context, ParsedDocument parsedDocument) {, +            Analyzer analyzer = context.analysisService().defaultIndexAnalyzer();, +            DocumentMapper documentMapper = context.mapperService().documentMapper(parsedDocument.type());, +            if (documentMapper != null && documentMapper.mappers().getMapper(field.name()) != null) {, +                analyzer =  documentMapper.mappers().indexAnalyzer();, +            }, +++ b/core/src/main/java/org/elasticsearch/percolator/MultiDocumentPercolatorIndex.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +import org.elasticsearch.index.mapper.MapperService;, +            memoryIndices[i] = indexDoc(d, memoryIndex, context, parsedDocument).createSearcher().getIndexReader();, +    MemoryIndex indexDoc(ParseContext.Document d, MemoryIndex memoryIndex, PercolateContext context, ParsedDocument parsedDocument) {, +            Analyzer analyzer = context.analysisService().defaultIndexAnalyzer();, +            DocumentMapper documentMapper = context.mapperService().documentMapper(parsedDocument.type());, +            if (documentMapper != null && documentMapper.mappers().getMapper(field.name()) != null) {, +                analyzer =  documentMapper.mappers().indexAnalyzer();, +            }, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateDocumentParser.java, +    public PercolateDocumentParser(HighlightPhase highlightPhase, SortParseElement sortParseElement,, +                                   AggregationPhase aggregationPhase) {, +++ b/core/src/main/java/org/elasticsearch/percolator/MultiDocumentPercolatorIndex.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +import org.elasticsearch.index.mapper.MapperService;, +            memoryIndices[i] = indexDoc(d, memoryIndex, context, parsedDocument).createSearcher().getIndexReader();, +    MemoryIndex indexDoc(ParseContext.Document d, MemoryIndex memoryIndex, PercolateContext context, ParsedDocument parsedDocument) {, +            Analyzer analyzer = context.analysisService().defaultIndexAnalyzer();, +            DocumentMapper documentMapper = context.mapperService().documentMapper(parsedDocument.type());, +            if (documentMapper != null && documentMapper.mappers().getMapper(field.name()) != null) {, +                analyzer =  documentMapper.mappers().indexAnalyzer();, +            }, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateDocumentParser.java, +    public PercolateDocumentParser(HighlightPhase highlightPhase, SortParseElement sortParseElement,, +                                   AggregationPhase aggregationPhase) {, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolatorService.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +            DocumentMapper documentMapper = indexShard.mapperService().documentMapper(request.documentType());, +            boolean isNested = documentMapper != null && documentMapper.hasNestedObjects();, +++ b/core/src/main/java/org/elasticsearch/percolator/MultiDocumentPercolatorIndex.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +import org.elasticsearch.index.mapper.MapperService;, +            memoryIndices[i] = indexDoc(d, memoryIndex, context, parsedDocument).createSearcher().getIndexReader();, +    MemoryIndex indexDoc(ParseContext.Document d, MemoryIndex memoryIndex, PercolateContext context, ParsedDocument parsedDocument) {, +            Analyzer analyzer = context.analysisService().defaultIndexAnalyzer();, +            DocumentMapper documentMapper = context.mapperService().documentMapper(parsedDocument.type());, +            if (documentMapper != null && documentMapper.mappers().getMapper(field.name()) != null) {, +                analyzer =  documentMapper.mappers().indexAnalyzer();, +            }, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateDocumentParser.java, +    public PercolateDocumentParser(HighlightPhase highlightPhase, SortParseElement sortParseElement,, +                                   AggregationPhase aggregationPhase) {, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolatorService.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +            DocumentMapper documentMapper = indexShard.mapperService().documentMapper(request.documentType());, +            boolean isNested = documentMapper != null && documentMapper.hasNestedObjects();, +++ b/core/src/main/java/org/elasticsearch/percolator/SingleDocumentPercolatorIndex.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +            Analyzer analyzer = context.analysisService().defaultIndexAnalyzer();, +            DocumentMapper documentMapper = context.mapperService().documentMapper(parsedDocument.type());, +            if (documentMapper != null && documentMapper.mappers().getMapper(field.name()) != null) {, +                analyzer =  documentMapper.mappers().indexAnalyzer();, +            }, +++ b/core/src/main/java/org/elasticsearch/percolator/MultiDocumentPercolatorIndex.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +import org.elasticsearch.index.mapper.MapperService;, +            memoryIndices[i] = indexDoc(d, memoryIndex, context, parsedDocument).createSearcher().getIndexReader();, +    MemoryIndex indexDoc(ParseContext.Document d, MemoryIndex memoryIndex, PercolateContext context, ParsedDocument parsedDocument) {, +            Analyzer analyzer = context.analysisService().defaultIndexAnalyzer();, +            DocumentMapper documentMapper = context.mapperService().documentMapper(parsedDocument.type());, +            if (documentMapper != null && documentMapper.mappers().getMapper(field.name()) != null) {, +                analyzer =  documentMapper.mappers().indexAnalyzer();, +            }, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateDocumentParser.java, +    public PercolateDocumentParser(HighlightPhase highlightPhase, SortParseElement sortParseElement,, +                                   AggregationPhase aggregationPhase) {, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolatorService.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +            DocumentMapper documentMapper = indexShard.mapperService().documentMapper(request.documentType());, +            boolean isNested = documentMapper != null && documentMapper.hasNestedObjects();, +++ b/core/src/main/java/org/elasticsearch/percolator/SingleDocumentPercolatorIndex.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +            Analyzer analyzer = context.analysisService().defaultIndexAnalyzer();, +            DocumentMapper documentMapper = context.mapperService().documentMapper(parsedDocument.type());, +            if (documentMapper != null && documentMapper.mappers().getMapper(field.name()) != null) {, +                analyzer =  documentMapper.mappers().indexAnalyzer();, +            }, +++ b/core/src/test/java/org/elasticsearch/percolator/PercolateDocumentParserTests.java, +        parser = new PercolateDocumentParser(highlightPhase, new SortParseElement(), aggregationPhase);, +++ b/core/src/main/java/org/elasticsearch/percolator/MultiDocumentPercolatorIndex.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +import org.elasticsearch.index.mapper.MapperService;, +            memoryIndices[i] = indexDoc(d, memoryIndex, context, parsedDocument).createSearcher().getIndexReader();, +    MemoryIndex indexDoc(ParseContext.Document d, MemoryIndex memoryIndex, PercolateContext context, ParsedDocument parsedDocument) {, +            Analyzer analyzer = context.analysisService().defaultIndexAnalyzer();, +            DocumentMapper documentMapper = context.mapperService().documentMapper(parsedDocument.type());, +            if (documentMapper != null && documentMapper.mappers().getMapper(field.name()) != null) {, +                analyzer =  documentMapper.mappers().indexAnalyzer();, +            }]