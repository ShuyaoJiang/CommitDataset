[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                'node.attr.testattr'           : 'test',, +                // Don't wait for state, just start up quickly. This will also allow new and old nodes in the BWC case to become the master, +                'discovery.initial_state_timeout' : '0s', +        if (node.nodeVersion.before("7.0.0") && minimumMasterNodes > 0) {, +        if (node.nodeVersion.before("7.0.0") && esConfig.containsKey('discovery.zen.master_election.wait_for_joins_timeout') == false) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                'node.attr.testattr'           : 'test',, +                // Don't wait for state, just start up quickly. This will also allow new and old nodes in the BWC case to become the master, +                'discovery.initial_state_timeout' : '0s', +        if (node.nodeVersion.before("7.0.0") && minimumMasterNodes > 0) {, +        if (node.nodeVersion.before("7.0.0") && esConfig.containsKey('discovery.zen.master_election.wait_for_joins_timeout') == false) {, +++ b/docs/reference/migration/migrate_7_0/discovery.asciidoc, +The `discovery.zen.minimum_master_nodes` setting is permitted, but ignored, on, +7.x nodes., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                'node.attr.testattr'           : 'test',, +                // Don't wait for state, just start up quickly. This will also allow new and old nodes in the BWC case to become the master, +                'discovery.initial_state_timeout' : '0s', +        if (node.nodeVersion.before("7.0.0") && minimumMasterNodes > 0) {, +        if (node.nodeVersion.before("7.0.0") && esConfig.containsKey('discovery.zen.master_election.wait_for_joins_timeout') == false) {, +++ b/docs/reference/migration/migrate_7_0/discovery.asciidoc, +The `discovery.zen.minimum_master_nodes` setting is permitted, but ignored, on, +7.x nodes., +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/rest/discovery/Zen2RestApiIT.java, +        return Settings.builder().put(super.nodeSettings(nodeOrdinal)).put(TestZenDiscovery.USE_ZEN2.getKey(), true).build();, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                'node.attr.testattr'           : 'test',, +                // Don't wait for state, just start up quickly. This will also allow new and old nodes in the BWC case to become the master, +                'discovery.initial_state_timeout' : '0s', +        if (node.nodeVersion.before("7.0.0") && minimumMasterNodes > 0) {, +        if (node.nodeVersion.before("7.0.0") && esConfig.containsKey('discovery.zen.master_election.wait_for_joins_timeout') == false) {, +++ b/docs/reference/migration/migrate_7_0/discovery.asciidoc, +The `discovery.zen.minimum_master_nodes` setting is permitted, but ignored, on, +7.x nodes., +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/rest/discovery/Zen2RestApiIT.java, +        return Settings.builder().put(super.nodeSettings(nodeOrdinal)).put(TestZenDiscovery.USE_ZEN2.getKey(), true).build();, +++ b/plugins/discovery-ec2/src/test/java/org/elasticsearch/discovery/ec2/Ec2DiscoveryUpdateSettingsTests.java, +import org.elasticsearch.common.UUIDs;, +        // We try to update a setting now, +        final String expectedValue = UUIDs.randomBase64UUID(random());, +        final String settingName = "cluster.routing.allocation.exclude.any_attribute";, +        final ClusterUpdateSettingsResponse response = client().admin().cluster().prepareUpdateSettings(), +                .setPersistentSettings(Settings.builder().put(settingName, expectedValue)), +        final String value = response.getPersistentSettings().get(settingName);, +        assertThat(value, is(expectedValue));, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                'node.attr.testattr'           : 'test',, +                // Don't wait for state, just start up quickly. This will also allow new and old nodes in the BWC case to become the master, +                'discovery.initial_state_timeout' : '0s', +        if (node.nodeVersion.before("7.0.0") && minimumMasterNodes > 0) {, +        if (node.nodeVersion.before("7.0.0") && esConfig.containsKey('discovery.zen.master_election.wait_for_joins_timeout') == false) {, +++ b/docs/reference/migration/migrate_7_0/discovery.asciidoc, +The `discovery.zen.minimum_master_nodes` setting is permitted, but ignored, on, +7.x nodes., +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/rest/discovery/Zen2RestApiIT.java, +        return Settings.builder().put(super.nodeSettings(nodeOrdinal)).put(TestZenDiscovery.USE_ZEN2.getKey(), true).build();, +++ b/plugins/discovery-ec2/src/test/java/org/elasticsearch/discovery/ec2/Ec2DiscoveryUpdateSettingsTests.java, +import org.elasticsearch.common.UUIDs;, +        // We try to update a setting now, +        final String expectedValue = UUIDs.randomBase64UUID(random());, +        final String settingName = "cluster.routing.allocation.exclude.any_attribute";, +        final ClusterUpdateSettingsResponse response = client().admin().cluster().prepareUpdateSettings(), +                .setPersistentSettings(Settings.builder().put(settingName, expectedValue)), +        final String value = response.getPersistentSettings().get(settingName);, +        assertThat(value, is(expectedValue));, +++ b/qa/logging-config/src/test/java/org/elasticsearch/qa/custom_logging/CustomLoggingConfigIT.java, +    private static final String NODE_STARTED = ".*node-0.*cluster.uuid.*node.id.*recovered.*cluster_state.*";, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                'node.attr.testattr'           : 'test',, +                // Don't wait for state, just start up quickly. This will also allow new and old nodes in the BWC case to become the master, +                'discovery.initial_state_timeout' : '0s', +        if (node.nodeVersion.before("7.0.0") && minimumMasterNodes > 0) {, +        if (node.nodeVersion.before("7.0.0") && esConfig.containsKey('discovery.zen.master_election.wait_for_joins_timeout') == false) {, +++ b/docs/reference/migration/migrate_7_0/discovery.asciidoc, +The `discovery.zen.minimum_master_nodes` setting is permitted, but ignored, on, +7.x nodes., +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/rest/discovery/Zen2RestApiIT.java, +        return Settings.builder().put(super.nodeSettings(nodeOrdinal)).put(TestZenDiscovery.USE_ZEN2.getKey(), true).build();, +++ b/plugins/discovery-ec2/src/test/java/org/elasticsearch/discovery/ec2/Ec2DiscoveryUpdateSettingsTests.java, +import org.elasticsearch.common.UUIDs;, +        // We try to update a setting now, +        final String expectedValue = UUIDs.randomBase64UUID(random());, +        final String settingName = "cluster.routing.allocation.exclude.any_attribute";, +        final ClusterUpdateSettingsResponse response = client().admin().cluster().prepareUpdateSettings(), +                .setPersistentSettings(Settings.builder().put(settingName, expectedValue)), +        final String value = response.getPersistentSettings().get(settingName);, +        assertThat(value, is(expectedValue));, +++ b/qa/logging-config/src/test/java/org/elasticsearch/qa/custom_logging/CustomLoggingConfigIT.java, +    private static final String NODE_STARTED = ".*node-0.*cluster.uuid.*node.id.*recovered.*cluster_state.*";, +++ b/qa/rolling-upgrade/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +                'node.attr.testattr'           : 'test',, +                // Don't wait for state, just start up quickly. This will also allow new and old nodes in the BWC case to become the master, +                'discovery.initial_state_timeout' : '0s', +        if (node.nodeVersion.before("7.0.0") && minimumMasterNodes > 0) {, +        if (node.nodeVersion.before("7.0.0") && esConfig.containsKey('discovery.zen.master_election.wait_for_joins_timeout') == false) {, +++ b/docs/reference/migration/migrate_7_0/discovery.asciidoc, +The `discovery.zen.minimum_master_nodes` setting is permitted, but ignored, on, +7.x nodes.]