[+++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefFieldComparatorSource.java, +                    if (sortMissingFirst(missingValue) || sortMissingLast(missingValue)) {, +                    } else {, +                        return new ReplaceMissing(selectedValues, missingBytes);, +                    }, +    /** , +     * A view of a SortedDocValues where missing values , +     * are replaced with the specified term  , +     */, +    // TODO: move this out if we need it for other reasons, +    static class ReplaceMissing extends SortedDocValues {, +        final SortedDocValues in;, +        final int substituteOrd;, +        final BytesRef substituteTerm;, +        final boolean exists;, +        , +        ReplaceMissing(SortedDocValues in, BytesRef term) {, +            this.in = in;, +            this.substituteTerm = term;, +            int sub = in.lookupTerm(term);, +            if (sub < 0) {, +                substituteOrd = -sub-1;, +                exists = false;, +            } else {, +                substituteOrd = sub;, +                exists = true;, +            }, +        }, +, +        @Override, +        public int getOrd(int docID) {, +            int ord = in.getOrd(docID);, +            if (ord < 0) {, +                return substituteOrd;, +            } else if (exists == false && ord >= substituteOrd) {, +                return ord + 1;, +            } else {, +                return ord;, +            }, +        }, +, +        @Override, +        public int getValueCount() {, +            if (exists) {, +                return in.getValueCount();, +            } else {, +                return in.getValueCount() + 1;, +            }, +        }, +, +        @Override, +        public BytesRef lookupOrd(int ord) {, +            if (ord == substituteOrd) {, +                return substituteTerm;, +            } else if (exists == false && ord > substituteOrd) {, +                return in.lookupOrd(ord-1);, +            } else {, +                return in.lookupOrd(ord);, +            }, +        }, +        , +        // we let termsenum etc fall back to the default implementation, +    }, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefFieldComparatorSource.java, +                    if (sortMissingFirst(missingValue) || sortMissingLast(missingValue)) {, +                    } else {, +                        return new ReplaceMissing(selectedValues, missingBytes);, +                    }, +    /** , +     * A view of a SortedDocValues where missing values , +     * are replaced with the specified term  , +     */, +    // TODO: move this out if we need it for other reasons, +    static class ReplaceMissing extends SortedDocValues {, +        final SortedDocValues in;, +        final int substituteOrd;, +        final BytesRef substituteTerm;, +        final boolean exists;, +        , +        ReplaceMissing(SortedDocValues in, BytesRef term) {, +            this.in = in;, +            this.substituteTerm = term;, +            int sub = in.lookupTerm(term);, +            if (sub < 0) {, +                substituteOrd = -sub-1;, +                exists = false;, +            } else {, +                substituteOrd = sub;, +                exists = true;, +            }, +        }, +, +        @Override, +        public int getOrd(int docID) {, +            int ord = in.getOrd(docID);, +            if (ord < 0) {, +                return substituteOrd;, +            } else if (exists == false && ord >= substituteOrd) {, +                return ord + 1;]