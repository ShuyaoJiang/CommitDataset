[+++ b/docs/reference/migration/migrate_6_0/plugins.asciidoc, +* All `cloud.aws` and `repositories.s3` settings have been removed. Use `s3.client.*` settings instead., +, +* All repository level client settings have been removed. Use `s3.client.*` settings instead., +, +++ b/docs/reference/migration/migrate_6_0/plugins.asciidoc, +* All `cloud.aws` and `repositories.s3` settings have been removed. Use `s3.client.*` settings instead., +, +* All repository level client settings have been removed. Use `s3.client.*` settings instead., +, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/AwsS3Service.java, +++ b/docs/reference/migration/migrate_6_0/plugins.asciidoc, +* All `cloud.aws` and `repositories.s3` settings have been removed. Use `s3.client.*` settings instead., +, +* All repository level client settings have been removed. Use `s3.client.*` settings instead., +, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/AwsS3Service.java, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/InternalAwsS3Service.java, +            clientName, clientSettings.endpoint, maxRetries, useThrottleRetries, pathStyleAccess);, +        AWSCredentialsProvider credentials = buildCredentials(logger, clientSettings);, +        ClientConfiguration configuration = buildConfiguration(clientSettings, maxRetries, useThrottleRetries);, +        if (Strings.hasText(clientSettings.endpoint)) {, +            client.setEndpoint(clientSettings.endpoint);, +    static ClientConfiguration buildConfiguration(S3ClientSettings clientSettings, Integer maxRetries, boolean useThrottleRetries) {, +        clientConfiguration.setProtocol(clientSettings.protocol);, +    static AWSCredentialsProvider buildCredentials(Logger logger, S3ClientSettings clientSettings) {, +        if (clientSettings.credentials == null) {, +            return new StaticCredentialsProvider(clientSettings.credentials);, +++ b/docs/reference/migration/migrate_6_0/plugins.asciidoc, +* All `cloud.aws` and `repositories.s3` settings have been removed. Use `s3.client.*` settings instead., +, +* All repository level client settings have been removed. Use `s3.client.*` settings instead., +, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/AwsS3Service.java, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/InternalAwsS3Service.java, +            clientName, clientSettings.endpoint, maxRetries, useThrottleRetries, pathStyleAccess);, +        AWSCredentialsProvider credentials = buildCredentials(logger, clientSettings);, +        ClientConfiguration configuration = buildConfiguration(clientSettings, maxRetries, useThrottleRetries);, +        if (Strings.hasText(clientSettings.endpoint)) {, +            client.setEndpoint(clientSettings.endpoint);, +    static ClientConfiguration buildConfiguration(S3ClientSettings clientSettings, Integer maxRetries, boolean useThrottleRetries) {, +        clientConfiguration.setProtocol(clientSettings.protocol);, +    static AWSCredentialsProvider buildCredentials(Logger logger, S3ClientSettings clientSettings) {, +        if (clientSettings.credentials == null) {, +            return new StaticCredentialsProvider(clientSettings.credentials);, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3ClientSettings.java, +        key -> SecureSetting.secureString(key, null));, +        key -> SecureSetting.secureString(key, null));, +        key -> new Setting<>(key, "", s -> s.toLowerCase(Locale.ROOT),, +        key -> SecureSetting.secureString(key, null));, +        key -> SecureSetting.secureString(key, null));, +        try (SecureString accessKey = getConfigValue(settings, clientName, ACCESS_KEY_SETTING);, +             SecureString secretKey = getConfigValue(settings, clientName, SECRET_KEY_SETTING);, +             SecureString proxyUsername = getConfigValue(settings, clientName, PROXY_USERNAME_SETTING);, +             SecureString proxyPassword = getConfigValue(settings, clientName, PROXY_PASSWORD_SETTING)) {, +                getConfigValue(settings, clientName, ENDPOINT_SETTING),, +                getConfigValue(settings, clientName, PROTOCOL_SETTING),, +                getConfigValue(settings, clientName, PROXY_HOST_SETTING),, +                getConfigValue(settings, clientName, PROXY_PORT_SETTING),, +                (int)getConfigValue(settings, clientName, READ_TIMEOUT_SETTING).millis(), +                                        Setting.AffixSetting<T> clientSetting) {, +++ b/docs/reference/migration/migrate_6_0/plugins.asciidoc, +* All `cloud.aws` and `repositories.s3` settings have been removed. Use `s3.client.*` settings instead., +, +* All repository level client settings have been removed. Use `s3.client.*` settings instead., +, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/AwsS3Service.java, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/InternalAwsS3Service.java, +            clientName, clientSettings.endpoint, maxRetries, useThrottleRetries, pathStyleAccess);, +        AWSCredentialsProvider credentials = buildCredentials(logger, clientSettings);, +        ClientConfiguration configuration = buildConfiguration(clientSettings, maxRetries, useThrottleRetries);, +        if (Strings.hasText(clientSettings.endpoint)) {, +            client.setEndpoint(clientSettings.endpoint);, +    static ClientConfiguration buildConfiguration(S3ClientSettings clientSettings, Integer maxRetries, boolean useThrottleRetries) {, +        clientConfiguration.setProtocol(clientSettings.protocol);, +    static AWSCredentialsProvider buildCredentials(Logger logger, S3ClientSettings clientSettings) {, +        if (clientSettings.credentials == null) {, +            return new StaticCredentialsProvider(clientSettings.credentials);, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3ClientSettings.java, +        key -> SecureSetting.secureString(key, null));, +        key -> SecureSetting.secureString(key, null));, +        key -> new Setting<>(key, "", s -> s.toLowerCase(Locale.ROOT),, +        key -> SecureSetting.secureString(key, null));, +        key -> SecureSetting.secureString(key, null));, +        try (SecureString accessKey = getConfigValue(settings, clientName, ACCESS_KEY_SETTING);, +             SecureString secretKey = getConfigValue(settings, clientName, SECRET_KEY_SETTING);, +             SecureString proxyUsername = getConfigValue(settings, clientName, PROXY_USERNAME_SETTING);, +             SecureString proxyPassword = getConfigValue(settings, clientName, PROXY_PASSWORD_SETTING)) {, +                getConfigValue(settings, clientName, ENDPOINT_SETTING),, +                getConfigValue(settings, clientName, PROTOCOL_SETTING),, +                getConfigValue(settings, clientName, PROXY_HOST_SETTING),, +                getConfigValue(settings, clientName, PROXY_PORT_SETTING),, +                (int)getConfigValue(settings, clientName, READ_TIMEOUT_SETTING).millis(), +                                        Setting.AffixSetting<T> clientSetting) {, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3Repository.java, +import java.io.IOException;, +, +, +++ b/docs/reference/migration/migrate_6_0/plugins.asciidoc, +* All `cloud.aws` and `repositories.s3` settings have been removed. Use `s3.client.*` settings instead.]