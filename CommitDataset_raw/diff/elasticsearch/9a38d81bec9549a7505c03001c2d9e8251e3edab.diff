[+++ b/client/src/main/java/org/elasticsearch/client/ElasticsearchResponseException.java, +import org.apache.http.util.EntityUtils;, +    private ElasticsearchResponse elasticsearchResponse;, +    public ElasticsearchResponseException(ElasticsearchResponse elasticsearchResponse) throws IOException {, +        super(buildMessage(elasticsearchResponse.getRequestLine(), elasticsearchResponse.getHost(), elasticsearchResponse.getStatusLine()));, +        this.elasticsearchResponse = elasticsearchResponse;, +        try {, +            if (elasticsearchResponse.getEntity() == null) {, +                this.responseBody = null;, +            } else {, +                this.responseBody = EntityUtils.toString(elasticsearchResponse.getEntity());, +            }, +        } finally {, +            elasticsearchResponse.close();, +        }, +     * Returns the {@link ElasticsearchResponse} that caused this exception to be thrown, +    public ElasticsearchResponse getElasticsearchResponse() {, +        return elasticsearchResponse;, +     * Returns the response body as a string or null if there wasn't any., +     * The body is eagerly consumed when an ElasticsearchResponseException gets created, and its corresponding ElasticsearchResponse, +     * gets closed straightaway so this method is the only way to get back the response body that was returned., +++ b/client/src/main/java/org/elasticsearch/client/ElasticsearchResponseException.java, +import org.apache.http.util.EntityUtils;, +    private ElasticsearchResponse elasticsearchResponse;, +    public ElasticsearchResponseException(ElasticsearchResponse elasticsearchResponse) throws IOException {, +        super(buildMessage(elasticsearchResponse.getRequestLine(), elasticsearchResponse.getHost(), elasticsearchResponse.getStatusLine()));, +        this.elasticsearchResponse = elasticsearchResponse;, +        try {, +            if (elasticsearchResponse.getEntity() == null) {, +                this.responseBody = null;, +            } else {, +                this.responseBody = EntityUtils.toString(elasticsearchResponse.getEntity());, +            }, +        } finally {, +            elasticsearchResponse.close();, +        }, +     * Returns the {@link ElasticsearchResponse} that caused this exception to be thrown, +    public ElasticsearchResponse getElasticsearchResponse() {, +        return elasticsearchResponse;, +     * Returns the response body as a string or null if there wasn't any., +     * The body is eagerly consumed when an ElasticsearchResponseException gets created, and its corresponding ElasticsearchResponse, +     * gets closed straightaway so this method is the only way to get back the response body that was returned., +++ b/client/src/main/java/org/elasticsearch/client/RestClient.java, +            ElasticsearchResponse elasticsearchResponse = new ElasticsearchResponse(request.getRequestLine(),, +                    connection.getHost(), response);, +                return elasticsearchResponse;, +                ElasticsearchResponseException elasticsearchResponseException = new ElasticsearchResponseException(elasticsearchResponse);, +++ b/client/src/main/java/org/elasticsearch/client/ElasticsearchResponseException.java, +import org.apache.http.util.EntityUtils;, +    private ElasticsearchResponse elasticsearchResponse;, +    public ElasticsearchResponseException(ElasticsearchResponse elasticsearchResponse) throws IOException {, +        super(buildMessage(elasticsearchResponse.getRequestLine(), elasticsearchResponse.getHost(), elasticsearchResponse.getStatusLine()));, +        this.elasticsearchResponse = elasticsearchResponse;, +        try {, +            if (elasticsearchResponse.getEntity() == null) {, +                this.responseBody = null;, +            } else {, +                this.responseBody = EntityUtils.toString(elasticsearchResponse.getEntity());, +            }, +        } finally {, +            elasticsearchResponse.close();, +        }, +     * Returns the {@link ElasticsearchResponse} that caused this exception to be thrown, +    public ElasticsearchResponse getElasticsearchResponse() {, +        return elasticsearchResponse;, +     * Returns the response body as a string or null if there wasn't any., +     * The body is eagerly consumed when an ElasticsearchResponseException gets created, and its corresponding ElasticsearchResponse, +     * gets closed straightaway so this method is the only way to get back the response body that was returned., +++ b/client/src/main/java/org/elasticsearch/client/RestClient.java, +            ElasticsearchResponse elasticsearchResponse = new ElasticsearchResponse(request.getRequestLine(),, +                    connection.getHost(), response);, +                return elasticsearchResponse;, +                ElasticsearchResponseException elasticsearchResponseException = new ElasticsearchResponseException(elasticsearchResponse);, +++ b/client/src/test/java/org/elasticsearch/client/sniff/HostsSnifferTests.java, +import org.elasticsearch.client.ElasticsearchResponse;, +                ElasticsearchResponse response = e.getElasticsearchResponse();, +                    assertThat(response.getHost(), equalTo(httpHost));, +                    assertThat(response.getStatusLine().getStatusCode(), equalTo(sniffResponse.nodesInfoResponseCode));, +                    assertThat(response.getRequestLine().toString(),, +                            equalTo("GET /_nodes/http?timeout=" + sniffRequestTimeout + "ms HTTP/1.1"));, +                    fail("sniffNodes should have succeeded: " + response.getStatusLine());]