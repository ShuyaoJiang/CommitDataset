[+++ b/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Delegates to {@link org.elasticsearch.search.suggest.SuggestBuilder#addSuggestion(org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder)}., +    public SearchRequestBuilder addSuggestion(SuggestBuilder.SuggestionBuilder<?> suggestion) {, +++ b/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Delegates to {@link org.elasticsearch.search.suggest.SuggestBuilder#addSuggestion(org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder)}., +    public SearchRequestBuilder addSuggestion(SuggestBuilder.SuggestionBuilder<?> suggestion) {, +++ b/src/main/java/org/elasticsearch/index/analysis/ShingleTokenFilterFactory.java, +    private final boolean outputUnigramsIfNoShingles;, +    , +    public int getMaxShingleSize() {, +        return maxShingleSize;, +    }, +    , +    public int getMinShingleSize() {, +        return minShingleSize;, +    }, +    , +    public boolean getOutputUnigrams() {, +        return outputUnigrams;, +    }, +    , +    public boolean getOutputUnigramsIfNoShingles() {, +        return outputUnigramsIfNoShingles;, +    }, +++ b/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Delegates to {@link org.elasticsearch.search.suggest.SuggestBuilder#addSuggestion(org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder)}., +    public SearchRequestBuilder addSuggestion(SuggestBuilder.SuggestionBuilder<?> suggestion) {, +++ b/src/main/java/org/elasticsearch/index/analysis/ShingleTokenFilterFactory.java, +    private final boolean outputUnigramsIfNoShingles;, +    , +    public int getMaxShingleSize() {, +        return maxShingleSize;, +    }, +    , +    public int getMinShingleSize() {, +        return minShingleSize;, +    }, +    , +    public boolean getOutputUnigrams() {, +        return outputUnigrams;, +    }, +    , +    public boolean getOutputUnigramsIfNoShingles() {, +        return outputUnigramsIfNoShingles;, +    }, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    , +    public Analyzer fieldSearchAnalyzer(String field) {, +        return this.searchAnalyzer.getWrappedAnalyzer(field);, +    }, +    , +    public Analyzer fieldSearchQuoteAnalyzer(String field) {, +        return this.searchQuoteAnalyzer.getWrappedAnalyzer(field);, +    }, +, +++ b/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Delegates to {@link org.elasticsearch.search.suggest.SuggestBuilder#addSuggestion(org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder)}., +    public SearchRequestBuilder addSuggestion(SuggestBuilder.SuggestionBuilder<?> suggestion) {, +++ b/src/main/java/org/elasticsearch/index/analysis/ShingleTokenFilterFactory.java, +    private final boolean outputUnigramsIfNoShingles;, +    , +    public int getMaxShingleSize() {, +        return maxShingleSize;, +    }, +    , +    public int getMinShingleSize() {, +        return minShingleSize;, +    }, +    , +    public boolean getOutputUnigrams() {, +        return outputUnigrams;, +    }, +    , +    public boolean getOutputUnigramsIfNoShingles() {, +        return outputUnigramsIfNoShingles;, +    }, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    , +    public Analyzer fieldSearchAnalyzer(String field) {, +        return this.searchAnalyzer.getWrappedAnalyzer(field);, +    }, +    , +    public Analyzer fieldSearchQuoteAnalyzer(String field) {, +        return this.searchQuoteAnalyzer.getWrappedAnalyzer(field);, +    }, +, +++ b/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java, +import static org.elasticsearch.search.suggest.SuggestBuilder.termSuggestion;, +                    termSuggestion(suggestField).field(suggestField).text(suggestText).size(suggestSize), +                            .suggestMode(suggestMode), +++ b/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Delegates to {@link org.elasticsearch.search.suggest.SuggestBuilder#addSuggestion(org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder)}., +    public SearchRequestBuilder addSuggestion(SuggestBuilder.SuggestionBuilder<?> suggestion) {, +++ b/src/main/java/org/elasticsearch/index/analysis/ShingleTokenFilterFactory.java, +    private final boolean outputUnigramsIfNoShingles;, +    , +    public int getMaxShingleSize() {, +        return maxShingleSize;, +    }, +    ]