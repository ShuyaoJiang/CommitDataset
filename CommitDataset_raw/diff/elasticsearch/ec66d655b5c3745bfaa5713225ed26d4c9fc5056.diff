[+++ b/build.gradle, +    "org.elasticsearch.client:elasticsearch-rest-client:${version}": ':client:rest',, +    "org.elasticsearch.client:elasticsearch-rest-client-sniffer:${version}": ':client:sniffer',, +    "org.elasticsearch.client:elasticsearch-rest-high-level-client:${version}": ':client:rest-high-level',, +++ b/build.gradle, +    "org.elasticsearch.client:elasticsearch-rest-client:${version}": ':client:rest',, +    "org.elasticsearch.client:elasticsearch-rest-client-sniffer:${version}": ':client:sniffer',, +    "org.elasticsearch.client:elasticsearch-rest-high-level-client:${version}": ':client:rest-high-level',, +++ b/client/benchmark/build.gradle, +  compile("org.elasticsearch.client:elasticsearch-rest-client:${version}"), +++ b/build.gradle, +    "org.elasticsearch.client:elasticsearch-rest-client:${version}": ':client:rest',, +    "org.elasticsearch.client:elasticsearch-rest-client-sniffer:${version}": ':client:sniffer',, +    "org.elasticsearch.client:elasticsearch-rest-high-level-client:${version}": ':client:rest-high-level',, +++ b/client/benchmark/build.gradle, +  compile("org.elasticsearch.client:elasticsearch-rest-client:${version}"), +++ b/client/rest-high-level/build.gradle, +apply plugin: 'nebula.maven-base-publish', +apply plugin: 'nebula.maven-scm', +archivesBaseName = 'elasticsearch-rest-high-level-client', +, +publishing {, +    publications {, +        nebula {, +            artifactId = archivesBaseName, +        }, +    }, +}, +  compile "org.elasticsearch.client:elasticsearch-rest-client:${version}", +++ b/build.gradle, +    "org.elasticsearch.client:elasticsearch-rest-client:${version}": ':client:rest',, +    "org.elasticsearch.client:elasticsearch-rest-client-sniffer:${version}": ':client:sniffer',, +    "org.elasticsearch.client:elasticsearch-rest-high-level-client:${version}": ':client:rest-high-level',, +++ b/client/benchmark/build.gradle, +  compile("org.elasticsearch.client:elasticsearch-rest-client:${version}"), +++ b/client/rest-high-level/build.gradle, +apply plugin: 'nebula.maven-base-publish', +apply plugin: 'nebula.maven-scm', +archivesBaseName = 'elasticsearch-rest-high-level-client', +, +publishing {, +    publications {, +        nebula {, +            artifactId = archivesBaseName, +        }, +    }, +}, +  compile "org.elasticsearch.client:elasticsearch-rest-client:${version}", +++ b/client/rest/build.gradle, +archivesBaseName = 'elasticsearch-rest-client', +, +publishing {, +  publications {, +    nebula {, +      artifactId = archivesBaseName, +    }, +  }, +}, +++ b/build.gradle, +    "org.elasticsearch.client:elasticsearch-rest-client:${version}": ':client:rest',, +    "org.elasticsearch.client:elasticsearch-rest-client-sniffer:${version}": ':client:sniffer',, +    "org.elasticsearch.client:elasticsearch-rest-high-level-client:${version}": ':client:rest-high-level',, +++ b/client/benchmark/build.gradle, +  compile("org.elasticsearch.client:elasticsearch-rest-client:${version}"), +++ b/client/rest-high-level/build.gradle, +apply plugin: 'nebula.maven-base-publish', +apply plugin: 'nebula.maven-scm', +archivesBaseName = 'elasticsearch-rest-high-level-client', +, +publishing {, +    publications {, +        nebula {, +            artifactId = archivesBaseName, +        }, +    }, +}, +  compile "org.elasticsearch.client:elasticsearch-rest-client:${version}", +++ b/client/rest/build.gradle, +archivesBaseName = 'elasticsearch-rest-client', +, +publishing {, +  publications {, +    nebula {, +      artifactId = archivesBaseName, +    }, +  }, +}, +++ b/client/sniffer/build.gradle, +archivesBaseName = 'elasticsearch-rest-client-sniffer', +, +publishing {, +  publications {, +    nebula {, +      artifactId = archivesBaseName, +    }, +  }, +}, +  compile "org.elasticsearch.client:elasticsearch-rest-client:${version}", +++ b/build.gradle, +    "org.elasticsearch.client:elasticsearch-rest-client:${version}": ':client:rest',]