[+++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cache/recycler/PageCacheRecyclerModule.java, +import org.elasticsearch.common.Classes;, +public class PageCacheRecyclerModule extends AbstractModule {, +        String impl = settings.get(CACHE_IMPL);, +        if (impl == null) {, +            bind(PageCacheRecycler.class).asEagerSingleton();, +        } else {, +            Class<? extends PageCacheRecycler> implClass = Classes.loadClass(getClass().getClassLoader(), impl);, +            bind(PageCacheRecycler.class).to(implClass).asEagerSingleton();, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cache/recycler/PageCacheRecyclerModule.java, +import org.elasticsearch.common.Classes;, +public class PageCacheRecyclerModule extends AbstractModule {, +        String impl = settings.get(CACHE_IMPL);, +        if (impl == null) {, +            bind(PageCacheRecycler.class).asEagerSingleton();, +        } else {, +            Class<? extends PageCacheRecycler> implClass = Classes.loadClass(getClass().getClassLoader(), impl);, +            bind(PageCacheRecycler.class).to(implClass).asEagerSingleton();, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.common.Classes;, +        String impl = settings.get(CLUSTER_SERVICE_IMPL);, +        Class<? extends ClusterInfoService> implClass = InternalClusterInfoService.class;, +        if (impl != null) {, +            implClass = Classes.loadClass(getClass().getClassLoader(), impl);, +        }, +        bind(ClusterInfoService.class).to(implClass).asEagerSingleton();, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cache/recycler/PageCacheRecyclerModule.java, +import org.elasticsearch.common.Classes;, +public class PageCacheRecyclerModule extends AbstractModule {, +        String impl = settings.get(CACHE_IMPL);, +        if (impl == null) {, +            bind(PageCacheRecycler.class).asEagerSingleton();, +        } else {, +            Class<? extends PageCacheRecycler> implClass = Classes.loadClass(getClass().getClassLoader(), impl);, +            bind(PageCacheRecycler.class).to(implClass).asEagerSingleton();, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.common.Classes;, +        String impl = settings.get(CLUSTER_SERVICE_IMPL);, +        Class<? extends ClusterInfoService> implClass = InternalClusterInfoService.class;, +        if (impl != null) {, +            implClass = Classes.loadClass(getClass().getClassLoader(), impl);, +        }, +        bind(ClusterInfoService.class).to(implClass).asEagerSingleton();, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.common.Classes;, +        final String hashFunction = settings.get(SETTING_LEGACY_ROUTING_HASH_FUNCTION);, +        if (hashFunction == null) {, +            final Class<? extends HashFunction> hashFunctionClass = Classes.loadClass(getClass().getClassLoader(), hashFunction);, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cache/recycler/PageCacheRecyclerModule.java, +import org.elasticsearch.common.Classes;, +public class PageCacheRecyclerModule extends AbstractModule {, +        String impl = settings.get(CACHE_IMPL);, +        if (impl == null) {, +            bind(PageCacheRecycler.class).asEagerSingleton();, +        } else {, +            Class<? extends PageCacheRecycler> implClass = Classes.loadClass(getClass().getClassLoader(), impl);, +            bind(PageCacheRecycler.class).to(implClass).asEagerSingleton();, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.common.Classes;, +        String impl = settings.get(CLUSTER_SERVICE_IMPL);, +        Class<? extends ClusterInfoService> implClass = InternalClusterInfoService.class;, +        if (impl != null) {, +            implClass = Classes.loadClass(getClass().getClassLoader(), impl);, +        }, +        bind(ClusterInfoService.class).to(implClass).asEagerSingleton();, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.common.Classes;, +        final String hashFunction = settings.get(SETTING_LEGACY_ROUTING_HASH_FUNCTION);, +        if (hashFunction == null) {, +            final Class<? extends HashFunction> hashFunctionClass = Classes.loadClass(getClass().getClassLoader(), hashFunction);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.common.Classes;, +                case "Simple":, +                case "simple":, +                case "Djb":, +                case "djb":, +                    pre20HashFunction = Classes.loadClass(getClass().getClassLoader(), pre20HashFunctionName);, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cache/recycler/PageCacheRecyclerModule.java, +import org.elasticsearch.common.Classes;, +public class PageCacheRecyclerModule extends AbstractModule {, +        String impl = settings.get(CACHE_IMPL);, +        if (impl == null) {, +            bind(PageCacheRecycler.class).asEagerSingleton();, +        } else {, +            Class<? extends PageCacheRecycler> implClass = Classes.loadClass(getClass().getClassLoader(), impl);, +            bind(PageCacheRecycler.class).to(implClass).asEagerSingleton();, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.common.Classes;, +        String impl = settings.get(CLUSTER_SERVICE_IMPL);, +        Class<? extends ClusterInfoService> implClass = InternalClusterInfoService.class;, +        if (impl != null) {, +            implClass = Classes.loadClass(getClass().getClassLoader(), impl);, +        }, +        bind(ClusterInfoService.class).to(implClass).asEagerSingleton();]