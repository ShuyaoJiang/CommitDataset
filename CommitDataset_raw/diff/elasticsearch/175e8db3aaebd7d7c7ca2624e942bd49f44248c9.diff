[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/DataStreamDiagnostics.java, +            flush(movingBucketHistogram.lastKey());, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/DataStreamDiagnostics.java, +            flush(movingBucketHistogram.lastKey());, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/integration/DatafeedJobsRestIT.java, +        assertThat(jobStatsResponseAsString, containsString("\"bucket_count\":3"));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/DataStreamDiagnostics.java, +            flush(movingBucketHistogram.lastKey());, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/integration/DatafeedJobsRestIT.java, +        assertThat(jobStatsResponseAsString, containsString("\"bucket_count\":3"));, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/job/process/DataCountsReporterTests.java, +        assertEquals(2, dataCountsReporter.runningTotalStats().getBucketCount());, +        assertEquals(2, dataCountsReporter.incrementalStats().getBucketCount());, +        DataCounts dc = new DataCounts(job.getId(), 2L, 5L, 0L, 10L, 0L, 1L, 0L, 0L, 0L, 0L, new Date(2000), new Date(3000),, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/DataStreamDiagnostics.java, +            flush(movingBucketHistogram.lastKey());, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/integration/DatafeedJobsRestIT.java, +        assertThat(jobStatsResponseAsString, containsString("\"bucket_count\":3"));, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/job/process/DataCountsReporterTests.java, +        assertEquals(2, dataCountsReporter.runningTotalStats().getBucketCount());, +        assertEquals(2, dataCountsReporter.incrementalStats().getBucketCount());, +        DataCounts dc = new DataCounts(job.getId(), 2L, 5L, 0L, 10L, 0L, 1L, 0L, 0L, 0L, 0L, new Date(2000), new Date(3000),, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/job/process/DataStreamDiagnosticsTests.java, +    private static final long BUCKET_SPAN = 60000;, +        acBuilder.setBucketSpan(TimeValue.timeValueMillis(BUCKET_SPAN));, +    public void testIncompleteBuckets() {, +        DataStreamDiagnostics d = new DataStreamDiagnostics(job);, +, +        d.checkRecord(1000);, +        d.checkRecord(2000);, +        d.checkRecord(3000);, +        d.flush();, +, +        assertEquals(0, d.getBucketCount());, +        assertEquals(0, d.getEmptyBucketCount());, +        assertEquals(0, d.getSparseBucketCount());, +        assertEquals(null, d.getLatestSparseBucketTime());, +        assertEquals(null, d.getLatestEmptyBucketTime());, +, +        d.checkRecord(4000);, +        d.checkRecord(5000);, +        d.checkRecord(6000);, +        d.flush();, +, +        assertEquals(0, d.getBucketCount());, +        assertEquals(0, d.getEmptyBucketCount());, +        assertEquals(0, d.getSparseBucketCount());, +        assertEquals(null, d.getLatestSparseBucketTime());, +        assertEquals(null, d.getLatestEmptyBucketTime());, +, +        d.checkRecord(BUCKET_SPAN + 1000);, +        d.checkRecord(BUCKET_SPAN + 2000);, +        d.flush();, +, +        assertEquals(1, d.getBucketCount());, +        assertEquals(0, d.getEmptyBucketCount());, +        assertEquals(0, d.getSparseBucketCount());, +        assertEquals(null, d.getLatestSparseBucketTime());, +        assertEquals(null, d.getLatestEmptyBucketTime());, +, +        d.checkRecord(BUCKET_SPAN * 3 + 1000);, +        d.checkRecord(BUCKET_SPAN * 3 + 1001);, +        d.flush();, +, +        assertEquals(3, d.getBucketCount());, +        assertEquals(1, d.getEmptyBucketCount());, +        assertEquals(0, d.getSparseBucketCount());, +        assertEquals(null, d.getLatestSparseBucketTime());, +        assertEquals(new Date(BUCKET_SPAN * 2), d.getLatestEmptyBucketTime());, +    }, +        assertEquals(9, d.getBucketCount());, +        assertEquals(9, d.getBucketCount());, +        assertEquals(9, d.getBucketCount());, +        assertEquals(9, d.getBucketCount());, +        assertEquals(9, d.getBucketCount());, +        assertEquals(9, d.getBucketCount());, +        assertEquals(9, d.getBucketCount());, +        assertEquals(108, d.getBucketCount());, +        assertEquals(9, d.getBucketCount());]