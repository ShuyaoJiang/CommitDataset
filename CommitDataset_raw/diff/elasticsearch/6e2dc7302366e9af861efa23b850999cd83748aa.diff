[+++ b/core/pom.xml, +                                <include>org/elasticsearch/node/MockNode.class</include>, +++ b/core/pom.xml, +                                <include>org/elasticsearch/node/MockNode.class</include>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +import org.elasticsearch.action.admin.indices.stats.CommonStats;, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/pom.xml, +                                <include>org/elasticsearch/node/MockNode.class</include>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +import org.elasticsearch.action.admin.indices.stats.CommonStats;, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java, +import org.elasticsearch.index.shard.ShardPath;, +    public ShardStats(ShardRouting routing, ShardPath shardPath, CommonStats commonStats, CommitStats commitStats) {, +        this.shardRouting = routing;, +        this.dataPath = shardPath.getRootDataPath().toString();, +        this.statePath = shardPath.getRootStatePath().toString();, +        this.isCustomDataPath = shardPath.isCustomDataPath();, +        this.commitStats = commitStats;, +        this.commonStats = commonStats;, +++ b/core/pom.xml, +                                <include>org/elasticsearch/node/MockNode.class</include>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +import org.elasticsearch.action.admin.indices.stats.CommonStats;, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java, +import org.elasticsearch.index.shard.ShardPath;, +    public ShardStats(ShardRouting routing, ShardPath shardPath, CommonStats commonStats, CommitStats commitStats) {, +        this.shardRouting = routing;, +        this.dataPath = shardPath.getRootDataPath().toString();, +        this.statePath = shardPath.getRootStatePath().toString();, +        this.isCustomDataPath = shardPath.isCustomDataPath();, +        this.commitStats = commitStats;, +        this.commonStats = commonStats;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java, +        return new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, flags), indexShard.commitStats());, +++ b/core/pom.xml, +                                <include>org/elasticsearch/node/MockNode.class</include>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +import org.elasticsearch.action.admin.indices.stats.CommonStats;, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java, +import org.elasticsearch.index.shard.ShardPath;, +    public ShardStats(ShardRouting routing, ShardPath shardPath, CommonStats commonStats, CommitStats commitStats) {, +        this.shardRouting = routing;, +        this.dataPath = shardPath.getRootDataPath().toString();, +        this.statePath = shardPath.getRootStatePath().toString();, +        this.isCustomDataPath = shardPath.isCustomDataPath();, +        this.commitStats = commitStats;, +        this.commonStats = commonStats;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java, +        return new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, flags), indexShard.commitStats());, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.plugins.Plugin;, +import java.util.ArrayList;, +        private List<Class<? extends Plugin>> pluginClasses = new ArrayList<>();, +         * Add the given plugin to the client when it is created., +         */, +        public Builder addPlugin(Class<? extends Plugin> pluginClass) {, +            pluginClasses.add(pluginClass);, +            return this;, +        }, +, +        /**, +            PluginsService pluginsService = new PluginsService(settings, tuple.v2(), pluginClasses);, +++ b/core/pom.xml, +                                <include>org/elasticsearch/node/MockNode.class</include>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +import org.elasticsearch.action.admin.indices.stats.CommonStats;, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java, +import org.elasticsearch.index.shard.ShardPath;, +    public ShardStats(ShardRouting routing, ShardPath shardPath, CommonStats commonStats, CommitStats commitStats) {, +        this.shardRouting = routing;, +        this.dataPath = shardPath.getRootDataPath().toString();, +        this.statePath = shardPath.getRootStatePath().toString();, +        this.isCustomDataPath = shardPath.isCustomDataPath();, +        this.commitStats = commitStats;, +        this.commonStats = commonStats;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java, +        return new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indexShard, flags), indexShard.commitStats());, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.plugins.Plugin;, +import java.util.ArrayList;, +        private List<Class<? extends Plugin>> pluginClasses = new ArrayList<>();, +         * Add the given plugin to the client when it is created., +         */, +        public Builder addPlugin(Class<? extends Plugin> pluginClass) {, +            pluginClasses.add(pluginClass);, +            return this;, +        }, +, +        /**, +            PluginsService pluginsService = new PluginsService(settings, tuple.v2(), pluginClasses);, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterInfo.java, +    private final Map<String, DiskUsage> mostAvailableSpaceUsage;, +    private final Map<ShardRouting, String> routingToDataPath;, +       this(Collections.EMPTY_MAP, Collections.EMPTY_MAP, Collections.EMPTY_MAP, Collections.EMPTY_MAP);, +     * @param routingToDataPath the shard routing to datapath mapping]