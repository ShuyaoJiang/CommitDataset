[+++ b/plugins/cloud/src/main/java/org/elasticsearch/cloud/blobstore/CloudBlobStoreService.java, +, +    public BlobStoreContext context() {, +        return blobStoreContext;, +    }, +++ b/plugins/cloud/src/main/java/org/elasticsearch/cloud/blobstore/CloudBlobStoreService.java, +, +    public BlobStoreContext context() {, +        return blobStoreContext;, +    }, +++ b/plugins/cloud/src/main/java/org/elasticsearch/gateway/cloud/CloudGateway.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.gateway.cloud;, +, +import org.elasticsearch.ElasticSearchException;, +import org.elasticsearch.ElasticSearchIllegalArgumentException;, +import org.elasticsearch.ElasticSearchIllegalStateException;, +import org.elasticsearch.cloud.blobstore.CloudBlobStoreService;, +import org.elasticsearch.cluster.ClusterName;, +import org.elasticsearch.cluster.metadata.MetaData;, +import org.elasticsearch.gateway.Gateway;, +import org.elasticsearch.gateway.GatewayException;, +import org.elasticsearch.util.component.AbstractLifecycleComponent;, +import org.elasticsearch.util.guice.inject.Module;, +import org.elasticsearch.util.io.FastByteArrayInputStream;, +import org.elasticsearch.util.settings.Settings;, +import org.elasticsearch.util.xcontent.ToXContent;, +import org.elasticsearch.util.xcontent.XContentFactory;, +import org.elasticsearch.util.xcontent.XContentParser;, +import org.elasticsearch.util.xcontent.XContentType;, +import org.elasticsearch.util.xcontent.builder.BinaryXContentBuilder;, +import org.jclouds.blobstore.domain.Blob;, +import org.jclouds.blobstore.domain.PageSet;, +import org.jclouds.blobstore.domain.StorageMetadata;, +, +import java.io.IOException;, +, +/**, + * @author kimchy (shay.banon), + */, +public class CloudGateway extends AbstractLifecycleComponent<Gateway> implements Gateway {, +, +    private final ClusterName clusterName;, +, +    private final CloudBlobStoreService blobStoreService;, +, +, +    private final String container;, +, +    private final String location;, +, +, +    private volatile int currentIndex;, +, +    public CloudGateway(Settings settings, ClusterName clusterName, CloudBlobStoreService blobStoreService) {, +        super(settings);, +        this.clusterName = clusterName;, +        this.blobStoreService = blobStoreService;, +, +        String container = componentSettings.get("container");, +        if (container == null) {, +            throw new ElasticSearchIllegalArgumentException("Cloud gateway requires 'container' setting");, +        }, +        this.location = componentSettings.get("location");, +        this.container = container + "." + clusterName.value();, +        blobStoreService.context().getBlobStore().createContainerInLocation(location, container);, +, +        if (blobStoreService.context() == null) {, +            throw new ElasticSearchIllegalStateException("No cloud setting is configure");, +        }, +, +        this.currentIndex = findLatestIndex();, +        logger.debug("Latest metadata found at index [" + currentIndex + "]");, +    }, +, +    @Override protected void doStart() throws ElasticSearchException {, +    }, +, +    @Override protected void doStop() throws ElasticSearchException {, +    }, +, +    @Override protected void doClose() throws ElasticSearchException {]