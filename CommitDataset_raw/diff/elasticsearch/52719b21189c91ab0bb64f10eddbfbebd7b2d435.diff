[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java, +import java.util.Collections;, +    public Map<String, Object> getMetaData() {, +        return Collections.unmodifiableMap(metaData);, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java, +import java.util.Collections;, +    public Map<String, Object> getMetaData() {, +        return Collections.unmodifiableMap(metaData);, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java, +    /** Return any associated metadata with this {@link AggregationBuilder}. */, +    public abstract Map<String, Object> getMetaData();, +, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java, +import java.util.Collections;, +    public Map<String, Object> getMetaData() {, +        return Collections.unmodifiableMap(metaData);, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java, +    /** Return any associated metadata with this {@link AggregationBuilder}. */, +    public abstract Map<String, Object> getMetaData();, +, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregationBuilder.java, +     * Returns the number of term buckets currently configured, +     */, +    public int size() {, +        return bucketCountThresholds.getRequiredSize();, +    }, +, +    /**, +     * Returns the number of term buckets per shard that are currently configured, +     */, +    public int shardSize() {, +        return bucketCountThresholds.getShardSize();, +    }, +, +    /**, +     * Returns the minimum document count required per term, +     */, +    public long minDocCount() {, +        return bucketCountThresholds.getMinDocCount();, +    }, +, +    /**, +    /**, +     * Returns the minimum document count required per term, per shard, +     */, +    public long shardMinDocCount() {, +        return bucketCountThresholds.getShardMinDocCount();, +    }, +, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java, +import java.util.Collections;, +    public Map<String, Object> getMetaData() {, +        return Collections.unmodifiableMap(metaData);, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java, +    /** Return any associated metadata with this {@link AggregationBuilder}. */, +    public abstract Map<String, Object> getMetaData();, +, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregationBuilder.java, +     * Returns the number of term buckets currently configured, +     */, +    public int size() {, +        return bucketCountThresholds.getRequiredSize();, +    }, +, +    /**, +     * Returns the number of term buckets per shard that are currently configured, +     */, +    public int shardSize() {, +        return bucketCountThresholds.getShardSize();, +    }, +, +    /**, +     * Returns the minimum document count required per term, +     */, +    public long minDocCount() {, +        return bucketCountThresholds.getMinDocCount();, +    }, +, +    /**, +    /**, +     * Returns the minimum document count required per term, per shard, +     */, +    public long shardMinDocCount() {, +        return bucketCountThresholds.getShardMinDocCount();, +    }, +, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/sum/InternalSum.java, +    public InternalSum(String name, double sum, DocValueFormat formatter, List<PipelineAggregator> pipelineAggregators,]