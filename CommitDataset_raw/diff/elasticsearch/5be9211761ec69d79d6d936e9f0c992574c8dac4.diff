[+++ b/modules/lang-painless/src/main/antlr/PainlessParser.g4, +    : classFuncref, +    | constructorFuncref, +    | capturingFuncref, +    | localFuncref, +    ;, +, +// reference to a static or instance method, e.g. ArrayList::size or Integer::compare, +classFuncref, +    : TYPE REF ID, +	;, +, +// reference to a constructor, e.g. ArrayList::new, +// currently limited to simple non-array types, +constructorFuncref, +    : TYPE REF NEW, +    ;, +, +// reference to an instance method, e.g. object::toString, +// currently limited to capture of a simple variable (id)., +capturingFuncref, +    : ID REF ID, +    ;, +, +// reference to a local function, e.g. this::myfunc, +localFuncref, +    : THIS REF ID, +++ b/modules/lang-painless/src/main/antlr/PainlessParser.g4, +    : classFuncref, +    | constructorFuncref, +    | capturingFuncref, +    | localFuncref, +    ;, +, +// reference to a static or instance method, e.g. ArrayList::size or Integer::compare, +classFuncref, +    : TYPE REF ID, +	;, +, +// reference to a constructor, e.g. ArrayList::new, +// currently limited to simple non-array types, +constructorFuncref, +    : TYPE REF NEW, +    ;, +, +// reference to an instance method, e.g. object::toString, +// currently limited to capture of a simple variable (id)., +capturingFuncref, +    : ID REF ID, +    ;, +, +// reference to a local function, e.g. this::myfunc, +localFuncref, +    : THIS REF ID, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/antlr/PainlessParser.java, +    RULE_lamtype = 24, RULE_funcref = 25, RULE_classFuncref = 26, RULE_constructorFuncref = 27, , +    RULE_capturingFuncref = 28, RULE_localFuncref = 29;, +    "brace", "arguments", "argument", "lambda", "lamtype", "funcref", "classFuncref", , +    "constructorFuncref", "capturingFuncref", "localFuncref", +      setState(63);, +          setState(60);, +        setState(65);, +      setState(69);, +          setState(66);, +        setState(71);, +      setState(72);, +      setState(74);, +      setState(75);, +      setState(76);, +      setState(77);, +      setState(79);, +      setState(91);, +        decltype();, +        setState(81);, +        match(ID);, +        setState(88);, +          setState(82);, +          setState(83);, +          setState(84);, +          setState(90);, +      setState(93);, +      setState(173);, +        match(IF);, +        setState(96);, +        match(LP);, +        setState(97);, +        expression(0);, +        setState(98);, +        match(RP);, +        setState(99);, +        trailer();, +        setState(103);, +          setState(100);, +          setState(101);, +          setState(102);, +        setState(105);, +        setState(106);, +        setState(107);, +        setState(108);, +        setState(111);]