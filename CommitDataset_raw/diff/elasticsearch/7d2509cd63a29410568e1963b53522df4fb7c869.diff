[+++ b/core/src/main/java/org/elasticsearch/common/geo/builders/EnvelopeBuilder.java, +    private Coordinate topLeft;, +    private Coordinate bottomRight;, +    public Coordinate topLeft() {, +        return this.topLeft;, +    }, +, +    public Coordinate bottomRight() {, +        return this.bottomRight;, +    }, +, +        return Objects.hash(topLeft, bottomRight);, +        return Objects.equals(topLeft, other.topLeft) &&, +        return new EnvelopeBuilder(), +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/EnvelopeBuilder.java, +    private Coordinate topLeft;, +    private Coordinate bottomRight;, +    public Coordinate topLeft() {, +        return this.topLeft;, +    }, +, +    public Coordinate bottomRight() {, +        return this.bottomRight;, +    }, +, +        return Objects.hash(topLeft, bottomRight);, +        return Objects.equals(topLeft, other.topLeft) &&, +        return new EnvelopeBuilder(), +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/GeometryCollectionBuilder.java, +        return Objects.hash(shapes);, +        return Objects.equals(shapes, other.shapes);, +        GeometryCollectionBuilder geometryCollectionBuilder = new GeometryCollectionBuilder();, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/EnvelopeBuilder.java, +    private Coordinate topLeft;, +    private Coordinate bottomRight;, +    public Coordinate topLeft() {, +        return this.topLeft;, +    }, +, +    public Coordinate bottomRight() {, +        return this.bottomRight;, +    }, +, +        return Objects.hash(topLeft, bottomRight);, +        return Objects.equals(topLeft, other.topLeft) &&, +        return new EnvelopeBuilder(), +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/GeometryCollectionBuilder.java, +        return Objects.hash(shapes);, +        return Objects.equals(shapes, other.shapes);, +        GeometryCollectionBuilder geometryCollectionBuilder = new GeometryCollectionBuilder();, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/MultiPolygonBuilder.java, +    private Orientation orientation = Orientation.RIGHT;, +, +        this.orientation = orientation;, +    public Orientation orientation() {, +        return this.orientation;, +    }, +, +    /**, +     * Add a shallow copy of the polygon to the multipolygon. This will apply the orientation of the, +     * {@link MultiPolygonBuilder} to the polygon if polygon has different orientation., +     */, +        PolygonBuilder pb = new PolygonBuilder(this.orientation);, +        pb.points(polygon.shell().coordinates(false));, +        for (LineStringBuilder hole : polygon.holes()) {, +            pb.hole(hole);, +        }, +        this.polygons.add(pb);, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/EnvelopeBuilder.java, +    private Coordinate topLeft;, +    private Coordinate bottomRight;, +    public Coordinate topLeft() {, +        return this.topLeft;, +    }, +, +    public Coordinate bottomRight() {, +        return this.bottomRight;, +    }, +, +        return Objects.hash(topLeft, bottomRight);, +        return Objects.equals(topLeft, other.topLeft) &&, +        return new EnvelopeBuilder(), +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/GeometryCollectionBuilder.java, +        return Objects.hash(shapes);, +        return Objects.equals(shapes, other.shapes);, +        GeometryCollectionBuilder geometryCollectionBuilder = new GeometryCollectionBuilder();, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/MultiPolygonBuilder.java, +    private Orientation orientation = Orientation.RIGHT;, +, +        this.orientation = orientation;, +    public Orientation orientation() {, +        return this.orientation;, +    }, +, +    /**, +     * Add a shallow copy of the polygon to the multipolygon. This will apply the orientation of the, +     * {@link MultiPolygonBuilder} to the polygon if polygon has different orientation., +     */, +        PolygonBuilder pb = new PolygonBuilder(this.orientation);, +        pb.points(polygon.shell().coordinates(false));]