[+++ b/docs/reference/analysis/tokenfilters/synonym-graph-tokenfilter.asciidoc, +, +=== Parsing synonym files, +, +Elasticsearch will use the token filters preceding the synonym filter, +in a tokenizer chain to parse the entries in a synonym file.  So, for example, if a, +synonym filter is placed after a stemmer, then the stemmer will also be applied, +to the synonym entries.  Because entries in the synonym map cannot have stacked, +positions, some token filters may cause issues here.  Token filters that produce, +multiple versions of a token may choose which version of the token to emit when, +parsing synonyms, e.g. `asciifolding` will only produce the folded version of the, +token.  Others, e.g. `multiplexer`, `word_delimiter_graph` or `ngram` will throw an, +error., +++ b/docs/reference/analysis/tokenfilters/synonym-graph-tokenfilter.asciidoc, +, +=== Parsing synonym files, +, +Elasticsearch will use the token filters preceding the synonym filter, +in a tokenizer chain to parse the entries in a synonym file.  So, for example, if a, +synonym filter is placed after a stemmer, then the stemmer will also be applied, +to the synonym entries.  Because entries in the synonym map cannot have stacked, +positions, some token filters may cause issues here.  Token filters that produce, +multiple versions of a token may choose which version of the token to emit when, +parsing synonyms, e.g. `asciifolding` will only produce the folded version of the, +token.  Others, e.g. `multiplexer`, `word_delimiter_graph` or `ngram` will throw an, +error., +++ b/docs/reference/analysis/tokenfilters/synonym-tokenfilter.asciidoc, +, +, +=== Parsing synonym files, +, +Elasticsearch will use the token filters preceding the synonym filter, +in a tokenizer chain to parse the entries in a synonym file.  So, for example, if a, +synonym filter is placed after a stemmer, then the stemmer will also be applied, +to the synonym entries.  Because entries in the synonym map cannot have stacked, +positions, some token filters may cause issues here.  Token filters that produce, +multiple versions of a token may choose which version of the token to emit when, +parsing synonyms, e.g. `asciifolding` will only produce the folded version of the, +token.  Others, e.g. `multiplexer`, `word_delimiter_graph` or `ngram` will throw an, +error., +++ b/docs/reference/analysis/tokenfilters/synonym-graph-tokenfilter.asciidoc, +, +=== Parsing synonym files, +, +Elasticsearch will use the token filters preceding the synonym filter, +in a tokenizer chain to parse the entries in a synonym file.  So, for example, if a, +synonym filter is placed after a stemmer, then the stemmer will also be applied, +to the synonym entries.  Because entries in the synonym map cannot have stacked, +positions, some token filters may cause issues here.  Token filters that produce, +multiple versions of a token may choose which version of the token to emit when, +parsing synonyms, e.g. `asciifolding` will only produce the folded version of the, +token.  Others, e.g. `multiplexer`, `word_delimiter_graph` or `ngram` will throw an, +error., +++ b/docs/reference/analysis/tokenfilters/synonym-tokenfilter.asciidoc, +, +, +=== Parsing synonym files, +, +Elasticsearch will use the token filters preceding the synonym filter, +in a tokenizer chain to parse the entries in a synonym file.  So, for example, if a, +synonym filter is placed after a stemmer, then the stemmer will also be applied, +to the synonym entries.  Because entries in the synonym map cannot have stacked, +positions, some token filters may cause issues here.  Token filters that produce, +multiple versions of a token may choose which version of the token to emit when, +parsing synonyms, e.g. `asciifolding` will only produce the folded version of the, +token.  Others, e.g. `multiplexer`, `word_delimiter_graph` or `ngram` will throw an, +error., +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/ASCIIFoldingTokenFilterFactory.java, +import org.elasticsearch.index.analysis.TokenFilterFactory;, +    public TokenFilterFactory getSynonymFilter() {, +        if (preserveOriginal == false) {, +            return this;, +        } else {, +            // See https://issues.apache.org/jira/browse/LUCENE-7536 for the reasoning, +            return new TokenFilterFactory() {, +                @Override, +                public String name() {, +                    return ASCIIFoldingTokenFilterFactory.this.name();, +                }, +, +                @Override, +                public TokenStream create(TokenStream tokenStream) {, +                    return new ASCIIFoldingFilter(tokenStream, false);, +                }, +            };, +        }, +    }, +, +, +++ b/docs/reference/analysis/tokenfilters/synonym-graph-tokenfilter.asciidoc, +, +=== Parsing synonym files, +, +Elasticsearch will use the token filters preceding the synonym filter, +in a tokenizer chain to parse the entries in a synonym file.  So, for example, if a, +synonym filter is placed after a stemmer, then the stemmer will also be applied, +to the synonym entries.  Because entries in the synonym map cannot have stacked, +positions, some token filters may cause issues here.  Token filters that produce, +multiple versions of a token may choose which version of the token to emit when, +parsing synonyms, e.g. `asciifolding` will only produce the folded version of the]