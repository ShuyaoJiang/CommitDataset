[+++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +import org.elasticsearch.common.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +import org.elasticsearch.common.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/common/cli/Terminal.java, +import java.io.PrintWriter;, +    /** The newline used when calling println. */, +    private final String lineSeparator;, +, +    protected Terminal(String lineSeparator) {, +        this.lineSeparator = lineSeparator;, +    }, +, +    /** Returns a Writer which can be used to write to the terminal directly. */, +    public abstract PrintWriter getWriter();, +            getWriter().print(msg + lineSeparator);, +            getWriter().flush();, +        ConsoleTerminal() {, +            super(System.lineSeparator());, +        }, +, +        public PrintWriter getWriter() {, +            return console.writer();, +        private final PrintWriter writer = newWriter();, +, +        SystemTerminal() {, +            super(System.lineSeparator());, +        }, +, +        @SuppressForbidden(reason = "Writer for System.out"), +        private static PrintWriter newWriter() {, +            return new PrintWriter(System.out);, +        }, +, +        public PrintWriter getWriter() {, +            return writer;, +            getWriter().print(text);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +import org.elasticsearch.common.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/common/cli/Terminal.java, +import java.io.PrintWriter;, +    /** The newline used when calling println. */, +    private final String lineSeparator;, +, +    protected Terminal(String lineSeparator) {, +        this.lineSeparator = lineSeparator;, +    }, +, +    /** Returns a Writer which can be used to write to the terminal directly. */, +    public abstract PrintWriter getWriter();, +            getWriter().print(msg + lineSeparator);, +            getWriter().flush();, +        ConsoleTerminal() {, +            super(System.lineSeparator());, +        }, +, +        public PrintWriter getWriter() {, +            return console.writer();, +        private final PrintWriter writer = newWriter();, +, +        SystemTerminal() {, +            super(System.lineSeparator());, +        }, +, +        @SuppressForbidden(reason = "Writer for System.out"), +        private static PrintWriter newWriter() {, +            return new PrintWriter(System.out);, +        }, +, +        public PrintWriter getWriter() {, +            return writer;, +            getWriter().print(text);, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayService.java, +                threadPool.generic().execute(() -> gateway.performStateRecovery(recoveryListener));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +import org.elasticsearch.common.cli.Terminal;, +++ b/core/src/main/java/org/elasticsearch/common/cli/Terminal.java, +import java.io.PrintWriter;, +    /** The newline used when calling println. */, +    private final String lineSeparator;, +, +    protected Terminal(String lineSeparator) {, +        this.lineSeparator = lineSeparator;, +    }, +, +    /** Returns a Writer which can be used to write to the terminal directly. */, +    public abstract PrintWriter getWriter();, +            getWriter().print(msg + lineSeparator);, +            getWriter().flush();, +        ConsoleTerminal() {, +            super(System.lineSeparator());, +        }, +, +        public PrintWriter getWriter() {, +            return console.writer();, +        private final PrintWriter writer = newWriter();, +, +        SystemTerminal() {, +            super(System.lineSeparator());, +        }]