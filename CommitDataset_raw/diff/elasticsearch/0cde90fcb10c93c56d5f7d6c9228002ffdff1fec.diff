[+++ b/modules/elasticsearch/src/main/java/org/apache/lucene/queryParser/QueryParserSettings.java, +    private String minimumShouldMatch;, +    public String minimumShouldMatch() {, +        return this.minimumShouldMatch;, +    }, +, +    public void minimumShouldMatch(String minimumShouldMatch) {, +        this.minimumShouldMatch = minimumShouldMatch;, +    }, +, +        if (minimumShouldMatch != null ? !minimumShouldMatch.equals(that.minimumShouldMatch) : that.minimumShouldMatch != null), +            return false;, +++ b/modules/elasticsearch/src/main/java/org/apache/lucene/queryParser/QueryParserSettings.java, +    private String minimumShouldMatch;, +    public String minimumShouldMatch() {, +        return this.minimumShouldMatch;, +    }, +, +    public void minimumShouldMatch(String minimumShouldMatch) {, +        this.minimumShouldMatch = minimumShouldMatch;, +    }, +, +        if (minimumShouldMatch != null ? !minimumShouldMatch.equals(that.minimumShouldMatch) : that.minimumShouldMatch != null), +            return false;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/search/Queries.java, +import org.elasticsearch.common.Nullable;, +import java.util.regex.Pattern;, +, +    public static void applyMinimumShouldMatch(BooleanQuery query, @Nullable String minimumShouldMatch) {, +        if (minimumShouldMatch == null) {, +            return;, +        }, +        int optionalClauses = 0;, +        for (BooleanClause c : query.clauses()) {, +            if (c.getOccur() == BooleanClause.Occur.SHOULD) {, +                optionalClauses++;, +            }, +        }, +, +        int msm = calculateMinShouldMatch(optionalClauses, minimumShouldMatch);, +        if (0 < msm) {, +            query.setMinimumNumberShouldMatch(msm);, +        }, +    }, +, +    private static Pattern spaceAroundLessThanPattern = Pattern.compile("(\\s+<\\s*)|(\\s*<\\s+)");, +    private static Pattern spacePattern = Pattern.compile(" ");, +    private static Pattern lessThanPattern = Pattern.compile("<");, +, +    static int calculateMinShouldMatch(int optionalClauseCount, String spec) {, +        int result = optionalClauseCount;, +        spec = spec.trim();, +, +        if (-1 < spec.indexOf("<")) {, +            /* we have conditional spec(s) */, +            spec = spaceAroundLessThanPattern.matcher(spec).replaceAll("<");, +            for (String s : spacePattern.split(spec)) {, +                String[] parts = lessThanPattern.split(s, 0);, +                int upperBound = Integer.parseInt(parts[0]);, +                if (optionalClauseCount <= upperBound) {, +                    return result;, +                } else {, +                    result = calculateMinShouldMatch, +                            (optionalClauseCount, parts[1]);, +                }, +            }, +            return result;, +        }, +, +        /* otherwise, simple expresion */, +, +        if (-1 < spec.indexOf('%')) {, +            /* percentage - assume the % was the last char.  If not, let Integer.parseInt fail. */, +            spec = spec.substring(0, spec.length() - 1);, +            int percent = Integer.parseInt(spec);, +            float calc = (result * percent) * (1 / 100f);, +            result = calc < 0 ? result + (int) calc : (int) calc;, +        } else {, +            int calc = Integer.parseInt(spec);, +            result = calc < 0 ? result + calc : calc;, +        }, +, +        return (optionalClauseCount < result ?, +                optionalClauseCount : (result < 0 ? 0 : result));, +, +    }, +++ b/modules/elasticsearch/src/main/java/org/apache/lucene/queryParser/QueryParserSettings.java, +    private String minimumShouldMatch;, +    public String minimumShouldMatch() {, +        return this.minimumShouldMatch;, +    }, +, +    public void minimumShouldMatch(String minimumShouldMatch) {, +        this.minimumShouldMatch = minimumShouldMatch;, +    }, +, +        if (minimumShouldMatch != null ? !minimumShouldMatch.equals(that.minimumShouldMatch) : that.minimumShouldMatch != null), +            return false;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/search/Queries.java, +import org.elasticsearch.common.Nullable;]