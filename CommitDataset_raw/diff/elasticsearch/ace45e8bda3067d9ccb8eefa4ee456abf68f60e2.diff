[+++ b/build.gradle, +import com.bmuschko.gradle.nexus.NexusPlugin, +  plugins.withType(NexusPlugin).whenPluginAdded {, +    modifyPom {, +      project {, +        url 'https://github.com/elastic/elasticsearch', +        inceptionYear '2009', +, +        scm {, +          url 'https://github.com/elastic/elasticsearch', +          connection 'scm:https://elastic@github.com/elastic/elasticsearch', +          developerConnection 'scm:git://github.com/elastic/elasticsearch.git', +        licenses {, +          license {, +            name 'The Apache Software License, Version 2.0', +            url 'http://www.apache.org/licenses/LICENSE-2.0.txt', +            distribution 'repo', +    extraArchive {, +      javadoc = true, +      tests = false, +    }, +    // we have our own username/password prompts so that they only happen once, +    // TODO: add gpg signing prompts, +    project.gradle.taskGraph.whenReady { taskGraph ->, +      if (taskGraph.allTasks.any { it.name == 'uploadArchives' }) {, +        if (project.hasProperty('nexusUsername') == false) {, +          String nexusUsername = console.readLine('\nNexus username: '), +          project.rootProject.allprojects.each {, +            it.ext.nexusUsername = nexusUsername, +        if (project.hasProperty('nexusPassword') == false) {, +          String nexusPassword = new String(console.readPassword('\nNexus password: ')), +          project.rootProject.allprojects.each {, +            it.ext.nexusPassword = nexusPassword, +++ b/build.gradle, +import com.bmuschko.gradle.nexus.NexusPlugin, +  plugins.withType(NexusPlugin).whenPluginAdded {, +    modifyPom {, +      project {, +        url 'https://github.com/elastic/elasticsearch', +        inceptionYear '2009', +, +        scm {, +          url 'https://github.com/elastic/elasticsearch', +          connection 'scm:https://elastic@github.com/elastic/elasticsearch', +          developerConnection 'scm:git://github.com/elastic/elasticsearch.git', +        licenses {, +          license {, +            name 'The Apache Software License, Version 2.0', +            url 'http://www.apache.org/licenses/LICENSE-2.0.txt', +            distribution 'repo', +    extraArchive {, +      javadoc = true, +      tests = false, +    }, +    // we have our own username/password prompts so that they only happen once, +    // TODO: add gpg signing prompts, +    project.gradle.taskGraph.whenReady { taskGraph ->, +      if (taskGraph.allTasks.any { it.name == 'uploadArchives' }) {, +        if (project.hasProperty('nexusUsername') == false) {, +          String nexusUsername = console.readLine('\nNexus username: '), +          project.rootProject.allprojects.each {, +            it.ext.nexusUsername = nexusUsername, +        if (project.hasProperty('nexusPassword') == false) {, +          String nexusPassword = new String(console.readPassword('\nNexus password: ')), +          project.rootProject.allprojects.each {, +            it.ext.nexusPassword = nexusPassword, +++ /dev/null, +++ b/build.gradle, +import com.bmuschko.gradle.nexus.NexusPlugin, +  plugins.withType(NexusPlugin).whenPluginAdded {, +    modifyPom {, +      project {, +        url 'https://github.com/elastic/elasticsearch', +        inceptionYear '2009', +, +        scm {, +          url 'https://github.com/elastic/elasticsearch', +          connection 'scm:https://elastic@github.com/elastic/elasticsearch', +          developerConnection 'scm:git://github.com/elastic/elasticsearch.git', +        licenses {, +          license {, +            name 'The Apache Software License, Version 2.0', +            url 'http://www.apache.org/licenses/LICENSE-2.0.txt', +            distribution 'repo', +    extraArchive {, +      javadoc = true, +      tests = false, +    }, +    // we have our own username/password prompts so that they only happen once, +    // TODO: add gpg signing prompts, +    project.gradle.taskGraph.whenReady { taskGraph ->, +      if (taskGraph.allTasks.any { it.name == 'uploadArchives' }) {, +        if (project.hasProperty('nexusUsername') == false) {, +          String nexusUsername = console.readLine('\nNexus username: '), +          project.rootProject.allprojects.each {, +            it.ext.nexusUsername = nexusUsername, +        if (project.hasProperty('nexusPassword') == false) {, +          String nexusPassword = new String(console.readPassword('\nNexus password: ')), +          project.rootProject.allprojects.each {, +            it.ext.nexusPassword = nexusPassword]