[+++ b/docs/reference/index-modules/store.asciidoc, +to `50mb` with type `merge`., +++ b/docs/reference/index-modules/store.asciidoc, +to `50mb` with type `merge`., +++ b/docs/reference/modules/indices.asciidoc, +    defaults to `50mb`., +++ b/docs/reference/index-modules/store.asciidoc, +to `50mb` with type `merge`., +++ b/docs/reference/modules/indices.asciidoc, +    defaults to `50mb`., +++ b/src/main/java/org/elasticsearch/indices/store/IndicesStore.java, +        this.rateLimitingThrottle = componentSettings.getAsBytesSize("throttle.max_bytes_per_sec", new ByteSizeValue(50, ByteSizeUnit.MB));, +++ b/docs/reference/index-modules/store.asciidoc, +to `50mb` with type `merge`., +++ b/docs/reference/modules/indices.asciidoc, +    defaults to `50mb`., +++ b/src/main/java/org/elasticsearch/indices/store/IndicesStore.java, +        this.rateLimitingThrottle = componentSettings.getAsBytesSize("throttle.max_bytes_per_sec", new ByteSizeValue(50, ByteSizeUnit.MB));, +++ b/src/test/java/org/elasticsearch/indices/store/SimpleDistributorTests.java, +        cluster().wipeTemplates(); // no random settings please, +        assertThat(storeString, endsWith(", type=MERGE, rate=50.0)])"));, +        assertThat(storeString, endsWith(", type=MERGE, rate=50.0)])"));, +        assertThat(storeString, endsWith(", type=MERGE, rate=50.0)])"));, +        assertThat(storeString, endsWith(", type=MERGE, rate=50.0)])"));, +++ b/docs/reference/index-modules/store.asciidoc, +to `50mb` with type `merge`., +++ b/docs/reference/modules/indices.asciidoc, +    defaults to `50mb`., +++ b/src/main/java/org/elasticsearch/indices/store/IndicesStore.java, +        this.rateLimitingThrottle = componentSettings.getAsBytesSize("throttle.max_bytes_per_sec", new ByteSizeValue(50, ByteSizeUnit.MB));, +++ b/src/test/java/org/elasticsearch/indices/store/SimpleDistributorTests.java, +        cluster().wipeTemplates(); // no random settings please, +        assertThat(storeString, endsWith(", type=MERGE, rate=50.0)])"));, +        assertThat(storeString, endsWith(", type=MERGE, rate=50.0)])"));, +        assertThat(storeString, endsWith(", type=MERGE, rate=50.0)])"));, +        assertThat(storeString, endsWith(", type=MERGE, rate=50.0)])"));, +++ b/src/test/java/org/elasticsearch/test/ImmutableTestCluster.java, +import org.apache.lucene.store.StoreRateLimiting;, +import org.elasticsearch.indices.store.IndicesStore;, +                    setRandomSettings(random, ImmutableSettings.builder()), +                    .put(SETTING_INDEX_SEED, random.nextLong()), +, +    private static ImmutableSettings.Builder setRandomNormsLoading(Random random, ImmutableSettings.Builder builder) {, +    private static ImmutableSettings.Builder setRandomSettings(Random random, ImmutableSettings.Builder builder) {, +        setRandomMerge(random, builder);, +        setRandomTranslogSettings(random, builder);, +        setRandomNormsLoading(random, builder);, +        if (random.nextBoolean()) {, +            if (random.nextInt(10) == 0) { // do something crazy slow here, +                builder.put(IndicesStore.INDICES_STORE_THROTTLE_MAX_BYTES_PER_SEC, new ByteSizeValue(RandomInts.randomIntBetween(random, 1, 10), ByteSizeUnit.MB));, +            } else {, +                builder.put(IndicesStore.INDICES_STORE_THROTTLE_MAX_BYTES_PER_SEC, new ByteSizeValue(RandomInts.randomIntBetween(random, 10, 200), ByteSizeUnit.MB));, +            }, +        }, +        if (random.nextBoolean()) {, +            builder.put(IndicesStore.INDICES_STORE_THROTTLE_TYPE, RandomPicks.randomFrom(random, StoreRateLimiting.Type.values()));, +        }, +, +        return builder;, +    }, +]