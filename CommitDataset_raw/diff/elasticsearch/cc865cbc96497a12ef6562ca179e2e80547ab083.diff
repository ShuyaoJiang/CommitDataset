[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/stats/InternalStats.java, +import java.util.Objects;, +, +    @Override, +    protected int doHashCode() {, +        return Objects.hash(count, min, max, sum);, +    }, +, +    @Override, +    protected boolean doEquals(Object obj) {, +        InternalStats other = (InternalStats) obj;, +        return count == other.count &&, +            min == other.min &&, +            max == other.max &&, +            Double.compare(count, other.count) == 0;, +    }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/stats/InternalStats.java, +import java.util.Objects;, +, +    @Override, +    protected int doHashCode() {, +        return Objects.hash(count, min, max, sum);, +    }, +, +    @Override, +    protected boolean doEquals(Object obj) {, +        InternalStats other = (InternalStats) obj;, +        return count == other.count &&, +            min == other.min &&, +            max == other.max &&, +            Double.compare(count, other.count) == 0;, +    }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ExtendedStatsAggregator.java, +        return new InternalExtendedStats(name, 0, 0d, Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY, 0d,, +            sigma, format, pipelineAggregators(), metaData());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/stats/InternalStats.java, +import java.util.Objects;, +, +    @Override, +    protected int doHashCode() {, +        return Objects.hash(count, min, max, sum);, +    }, +, +    @Override, +    protected boolean doEquals(Object obj) {, +        InternalStats other = (InternalStats) obj;, +        return count == other.count &&, +            min == other.min &&, +            max == other.max &&, +            Double.compare(count, other.count) == 0;, +    }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ExtendedStatsAggregator.java, +        return new InternalExtendedStats(name, 0, 0d, Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY, 0d,, +            sigma, format, pipelineAggregators(), metaData());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/InternalExtendedStats.java, +import java.util.Objects;, +    public double getSigma() {, +        return this.sigma;, +    }, +, +, +    @Override, +    protected int doHashCode() {, +        return Objects.hash(super.doHashCode(), sumOfSqrs, sigma);, +    }, +, +    @Override, +    protected boolean doEquals(Object obj) {, +        InternalExtendedStats other = (InternalExtendedStats) obj;, +        return super.doEquals(obj) &&, +            Double.compare(sumOfSqrs, other.sumOfSqrs) == 0 &&, +            Double.compare(sigma, other.sigma) == 0;, +    }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/stats/InternalStats.java, +import java.util.Objects;, +, +    @Override, +    protected int doHashCode() {, +        return Objects.hash(count, min, max, sum);, +    }, +, +    @Override, +    protected boolean doEquals(Object obj) {, +        InternalStats other = (InternalStats) obj;, +        return count == other.count &&, +            min == other.min &&, +            max == other.max &&, +            Double.compare(count, other.count) == 0;, +    }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ExtendedStatsAggregator.java, +        return new InternalExtendedStats(name, 0, 0d, Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY, 0d,, +            sigma, format, pipelineAggregators(), metaData());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/InternalExtendedStats.java, +import java.util.Objects;, +    public double getSigma() {, +        return this.sigma;, +    }, +, +, +    @Override]