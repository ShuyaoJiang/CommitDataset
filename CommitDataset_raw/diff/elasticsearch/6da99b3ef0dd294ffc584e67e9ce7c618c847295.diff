[+++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +, +            // fail if using broken version, +            JVMCheck.check();, +, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +, +            // fail if using broken version, +            JVMCheck.check();, +, +++ b/src/main/java/org/elasticsearch/bootstrap/JVMCheck.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.bootstrap;, +, +import org.apache.lucene.util.Constants;, +import org.elasticsearch.common.logging.Loggers;, +, +import java.lang.management.ManagementFactory;, +import java.util.Collections;, +import java.util.HashMap;, +import java.util.Map;, +, +/** Checks that the JVM is ok and won't cause index corruption */, +public class JVMCheck {, +    , +    /**, +     * URL with latest JVM recommendations, +     */, +    static final String JVM_RECOMMENDATIONS = "http://www.elastic.co/guide/en/elasticsearch/reference/current/_installation.html";, +, +    /**, +     * System property which if set causes us to bypass the check completely (but issues a warning in doing so), +     */, +    static final String JVM_BYPASS = "es.bypass.vm.check";, +, +    /**, +     * Metadata and messaging for hotspot bugs., +     */, +    static class HotspotBug {, +        , +        /** OpenJDK bug URL */, +        final String bugUrl;, +        , +        /** Compiler workaround flag (null if there is no workaround) */, +        final String workAround;, +        , +        HotspotBug(String bugUrl, String workAround) {, +            this.bugUrl = bugUrl;, +            this.workAround = workAround;, +        }, +        , +        /** Returns an error message to the user for a broken version */, +        String getErrorMessage() {, +            StringBuilder sb = new StringBuilder();, +            sb.append("Java version: ").append(Constants.JAVA_VERSION);, +            sb.append(" suffers from critical bug ").append(bugUrl);, +            sb.append(" which can cause data corruption.");, +            sb.append(System.lineSeparator());, +            sb.append("Please upgrade the JVM, see ").append(JVM_RECOMMENDATIONS);, +            sb.append(" for current recommendations.");, +            if (workAround != null) {, +                sb.append(System.lineSeparator());, +                sb.append("If you absolutely cannot upgrade, please add ").append(workAround);, +                sb.append(" to the JVM_OPTS environment variable.");, +                sb.append(System.lineSeparator());, +                sb.append("Upgrading is preferred, this workaround will result in degraded performance.");, +            }, +            return sb.toString();, +        }, +        , +        /** Warns the user when a workaround is being used to dodge the bug */, +        String getWarningMessage() {, +            StringBuilder sb = new StringBuilder();, +            sb.append("Workaround flag ").append(workAround);, +            sb.append(" for bug ").append(bugUrl);, +            sb.append(" found. ");, +            sb.append(System.lineSeparator());, +            sb.append("This will result in degraded performance!");, +            sb.append(System.lineSeparator());, +            sb.append("Upgrading is preferred, see ").append(JVM_RECOMMENDATIONS);, +            sb.append(" for current recommendations.");, +            return sb.toString();]