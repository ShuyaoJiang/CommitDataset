[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                                aliasValidator.validateAliasFilter(aliasAction.alias(), filter, indexService.newQueryShardContext());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                                aliasValidator.validateAliasFilter(aliasAction.alias(), filter, indexService.newQueryShardContext());, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java, +     * Moves the shard from started to initializing and bumps the version, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                                aliasValidator.validateAliasFilter(aliasAction.alias(), filter, indexService.newQueryShardContext());, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java, +     * Moves the shard from started to initializing and bumps the version, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        this.mapperService = new MapperService(indexSettings, analysisService, similarityService, mapperRegistry, IndexService.this::newQueryShardContext);, +    /**, +     * Creates a new QueryShardContext. The context has not types set yet, if types are required set them via {@link QueryShardContext#setTypes(String...)}, +     */, +    public QueryShardContext newQueryShardContext() {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                                aliasValidator.validateAliasFilter(aliasAction.alias(), filter, indexService.newQueryShardContext());, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java, +     * Moves the shard from started to initializing and bumps the version, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        this.mapperService = new MapperService(indexSettings, analysisService, similarityService, mapperRegistry, IndexService.this::newQueryShardContext);, +    /**, +     * Creates a new QueryShardContext. The context has not types set yet, if types are required set them via {@link QueryShardContext#setTypes(String...)}, +     */, +    public QueryShardContext newQueryShardContext() {, +++ b/core/src/main/java/org/elasticsearch/index/SearchSlowLog.java, +            if (context.getQueryShardContext().getTypes() == null) {, +                Strings.arrayToDelimitedString(context.getQueryShardContext().getTypes(), ",", sb);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                                aliasValidator.validateAliasFilter(aliasAction.alias(), filter, indexService.newQueryShardContext());, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java, +     * Moves the shard from started to initializing and bumps the version, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        this.mapperService = new MapperService(indexSettings, analysisService, similarityService, mapperRegistry, IndexService.this::newQueryShardContext);, +    /**, +     * Creates a new QueryShardContext. The context has not types set yet, if types are required set them via {@link QueryShardContext#setTypes(String...)}, +     */, +    public QueryShardContext newQueryShardContext() {, +++ b/core/src/main/java/org/elasticsearch/index/SearchSlowLog.java, +            if (context.getQueryShardContext().getTypes() == null) {, +                Strings.arrayToDelimitedString(context.getQueryShardContext().getTypes(), ",", sb);, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.rest.RestStatus;, +            Translog.Operation operation;, +            while ((operation = snapshot.next()) != null) {, +                try {, +                    handler.performRecoveryOperation(this, operation, true);, +                    opsRecovered++;]