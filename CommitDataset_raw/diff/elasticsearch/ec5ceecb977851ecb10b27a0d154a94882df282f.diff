[+++ b/src/main/java/org/elasticsearch/client/support/Headers.java, +    public Settings headers() {, +        return headers;, +    }, +, +++ b/src/main/java/org/elasticsearch/client/support/Headers.java, +    public Settings headers() {, +        return headers;, +    }, +, +++ b/src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +    /**, +     * Used to obtain settings for the REST client that is used to send REST requests., +     */, +    protected Settings restClientSettings() {, +        return ImmutableSettings.EMPTY;, +    }, +, +        restTestExecutionContext.resetClient(cluster().httpAddresses(), restClientSettings());, +++ b/src/main/java/org/elasticsearch/client/support/Headers.java, +    public Settings headers() {, +        return headers;, +    }, +, +++ b/src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +    /**, +     * Used to obtain settings for the REST client that is used to send REST requests., +     */, +    protected Settings restClientSettings() {, +        return ImmutableSettings.EMPTY;, +    }, +, +        restTestExecutionContext.resetClient(cluster().httpAddresses(), restClientSettings());, +++ b/src/test/java/org/elasticsearch/test/rest/RestTestExecutionContext.java, +import org.elasticsearch.common.settings.Settings;, +     * Resets (or creates) the embedded REST client which will point to the given addresses, +    public void resetClient(InetSocketAddress[] addresses, Settings settings) throws IOException, RestException {, +            restClient = new RestClient(restSpec, settings, addresses);, +++ b/src/main/java/org/elasticsearch/client/support/Headers.java, +    public Settings headers() {, +        return headers;, +    }, +, +++ b/src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +    /**, +     * Used to obtain settings for the REST client that is used to send REST requests., +     */, +    protected Settings restClientSettings() {, +        return ImmutableSettings.EMPTY;, +    }, +, +        restTestExecutionContext.resetClient(cluster().httpAddresses(), restClientSettings());, +++ b/src/test/java/org/elasticsearch/test/rest/RestTestExecutionContext.java, +import org.elasticsearch.common.settings.Settings;, +     * Resets (or creates) the embedded REST client which will point to the given addresses, +    public void resetClient(InetSocketAddress[] addresses, Settings settings) throws IOException, RestException {, +            restClient = new RestClient(restSpec, settings, addresses);, +++ b/src/test/java/org/elasticsearch/test/rest/client/RestClient.java, +import org.elasticsearch.client.support.Headers;, +import org.elasticsearch.common.settings.Settings;, +    private final Headers headers;, +    public RestClient(RestSpec restSpec, Settings settings, InetSocketAddress[] addresses) throws IOException, RestException {, +        this.headers = new Headers(settings);, +            RestResponse restResponse = new RestResponse(new HttpRequestBuilder(httpClient).addHeaders(headers), +        return new HttpRequestBuilder(httpClient).addHeaders(headers).host(address.getHostName()).port(address.getPort());, +++ b/src/main/java/org/elasticsearch/client/support/Headers.java, +    public Settings headers() {, +        return headers;, +    }, +, +++ b/src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +    /**, +     * Used to obtain settings for the REST client that is used to send REST requests., +     */, +    protected Settings restClientSettings() {, +        return ImmutableSettings.EMPTY;, +    }, +, +        restTestExecutionContext.resetClient(cluster().httpAddresses(), restClientSettings());, +++ b/src/test/java/org/elasticsearch/test/rest/RestTestExecutionContext.java, +import org.elasticsearch.common.settings.Settings;, +     * Resets (or creates) the embedded REST client which will point to the given addresses, +    public void resetClient(InetSocketAddress[] addresses, Settings settings) throws IOException, RestException {, +            restClient = new RestClient(restSpec, settings, addresses);, +++ b/src/test/java/org/elasticsearch/test/rest/client/RestClient.java, +import org.elasticsearch.client.support.Headers;, +import org.elasticsearch.common.settings.Settings;, +    private final Headers headers;, +    public RestClient(RestSpec restSpec, Settings settings, InetSocketAddress[] addresses) throws IOException, RestException {, +        this.headers = new Headers(settings);, +            RestResponse restResponse = new RestResponse(new HttpRequestBuilder(httpClient).addHeaders(headers), +        return new HttpRequestBuilder(httpClient).addHeaders(headers).host(address.getHostName()).port(address.getPort());]