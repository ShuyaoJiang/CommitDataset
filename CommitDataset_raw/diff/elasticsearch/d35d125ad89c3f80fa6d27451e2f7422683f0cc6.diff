[+++ b/src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java, +        if (path == null || path.isEmpty()) {, +            throw new IllegalArgumentException("Invalid Backwards tests location path:" + path);, +        }, +        if (version == null || version.isEmpty()) {, +            throw new IllegalArgumentException("Invalid Backwards tests version:" + version);, +        }, +        if (Version.fromString(version).before(Version.CURRENT.minimumCompatibilityVersion())) {, +            throw new IllegalArgumentException("Backcompat elasticsearch version must be same major version as current. " +, +                "backcompat: " + version + ", current: " + Version.CURRENT.toString());, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java, +        if (path == null || path.isEmpty()) {, +            throw new IllegalArgumentException("Invalid Backwards tests location path:" + path);, +        }, +        if (version == null || version.isEmpty()) {, +            throw new IllegalArgumentException("Invalid Backwards tests version:" + version);, +        }, +        if (Version.fromString(version).before(Version.CURRENT.minimumCompatibilityVersion())) {, +            throw new IllegalArgumentException("Backcompat elasticsearch version must be same major version as current. " +, +                "backcompat: " + version + ", current: " + Version.CURRENT.toString());, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java, +                if (cluster() != null) {, +                }]