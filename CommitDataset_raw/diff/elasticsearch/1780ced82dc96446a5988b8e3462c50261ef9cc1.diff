[+++ b/x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/MlNativeAutodetectIntegTestCase.java, +        SearchResponse searchResponse = client().prepareSearch(AnomalyDetectorsIndex.jobResultsAliasedName(jobId)), +            .setQuery(QueryBuilders.idsQuery().addIds(ForecastRequestStats.documentId(jobId, forecastId))), +            .get();, +        if (searchResponse.getHits().getHits().length == 0) {, +, +        assertThat(searchResponse.getHits().getHits().length, equalTo(1));, +, +                    searchResponse.getHits().getHits()[0].getSourceRef().streamInput())) {, +++ b/x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/MlNativeAutodetectIntegTestCase.java, +        SearchResponse searchResponse = client().prepareSearch(AnomalyDetectorsIndex.jobResultsAliasedName(jobId)), +            .setQuery(QueryBuilders.idsQuery().addIds(ForecastRequestStats.documentId(jobId, forecastId))), +            .get();, +        if (searchResponse.getHits().getHits().length == 0) {, +, +        assertThat(searchResponse.getHits().getHits().length, equalTo(1));, +, +                    searchResponse.getHits().getHits()[0].getSourceRef().streamInput())) {, +++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobResultsProvider.java, +        SearchRequestBuilder forecastSearch = client.prepareSearch(indexName), +            .setQuery(QueryBuilders.idsQuery().addIds(ForecastRequestStats.documentId(jobId, forecastId)));, +        searchSingleResult(jobId,, +            ForecastRequestStats.RESULTS_FIELD.getPreferredName(),, +            forecastSearch,, +            ForecastRequestStats.LENIENT_PARSER,result -> handler.accept(result.result),, +            errorHandler, () -> null);, +++ b/x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/MlNativeAutodetectIntegTestCase.java, +        SearchResponse searchResponse = client().prepareSearch(AnomalyDetectorsIndex.jobResultsAliasedName(jobId)), +            .setQuery(QueryBuilders.idsQuery().addIds(ForecastRequestStats.documentId(jobId, forecastId))), +            .get();, +        if (searchResponse.getHits().getHits().length == 0) {, +, +        assertThat(searchResponse.getHits().getHits().length, equalTo(1));, +, +                    searchResponse.getHits().getHits()[0].getSourceRef().streamInput())) {, +++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobResultsProvider.java, +        SearchRequestBuilder forecastSearch = client.prepareSearch(indexName), +            .setQuery(QueryBuilders.idsQuery().addIds(ForecastRequestStats.documentId(jobId, forecastId)));, +        searchSingleResult(jobId,, +            ForecastRequestStats.RESULTS_FIELD.getPreferredName(),, +            forecastSearch,, +            ForecastRequestStats.LENIENT_PARSER,result -> handler.accept(result.result),, +            errorHandler, () -> null);, +++ b/x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/job/persistence/JobResultsProviderTests.java]