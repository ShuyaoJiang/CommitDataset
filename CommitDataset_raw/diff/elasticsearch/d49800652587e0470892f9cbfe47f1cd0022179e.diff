[+++ b/core/src/main/java/org/apache/lucene/queries/BlendedTermQuery.java, +                return Integer.compare(contexts[tieBreak[j]].docFreq(), contexts[tieBreak[i]].docFreq());, +++ b/core/src/main/java/org/apache/lucene/queries/BlendedTermQuery.java, +                return Integer.compare(contexts[tieBreak[j]].docFreq(), contexts[tieBreak[i]].docFreq());, +++ b/core/src/main/java/org/apache/lucene/util/XGeoUtils.java, +    public static final double TOLERANCE = 1E-5;, +++ b/core/src/main/java/org/apache/lucene/queries/BlendedTermQuery.java, +                return Integer.compare(contexts[tieBreak[j]].docFreq(), contexts[tieBreak[i]].docFreq());, +++ b/core/src/main/java/org/apache/lucene/util/XGeoUtils.java, +    public static final double TOLERANCE = 1E-5;, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    protected void causeToXContent(XContentBuilder builder, Params params) throws IOException {, +++ b/core/src/main/java/org/apache/lucene/queries/BlendedTermQuery.java, +                return Integer.compare(contexts[tieBreak[j]].docFreq(), contexts[tieBreak[i]].docFreq());, +++ b/core/src/main/java/org/apache/lucene/util/XGeoUtils.java, +    public static final double TOLERANCE = 1E-5;, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    protected void causeToXContent(XContentBuilder builder, Params params) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesRequestBuilder.java, +import org.elasticsearch.common.util.ArrayUtils;, +        request.repositories(ArrayUtils.concat(request.repositories(), repositories));, +++ b/core/src/main/java/org/apache/lucene/queries/BlendedTermQuery.java, +                return Integer.compare(contexts[tieBreak[j]].docFreq(), contexts[tieBreak[i]].docFreq());, +++ b/core/src/main/java/org/apache/lucene/util/XGeoUtils.java, +    public static final double TOLERANCE = 1E-5;, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    protected void causeToXContent(XContentBuilder builder, Params params) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesRequestBuilder.java, +import org.elasticsearch.common.util.ArrayUtils;, +        request.repositories(ArrayUtils.concat(request.repositories(), repositories));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsRequestBuilder.java, +import org.elasticsearch.common.util.ArrayUtils;, +        request.snapshots(ArrayUtils.concat(request.snapshots(), snapshots));, +++ b/core/src/main/java/org/apache/lucene/queries/BlendedTermQuery.java, +                return Integer.compare(contexts[tieBreak[j]].docFreq(), contexts[tieBreak[i]].docFreq());, +++ b/core/src/main/java/org/apache/lucene/util/XGeoUtils.java, +    public static final double TOLERANCE = 1E-5;, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    protected void causeToXContent(XContentBuilder builder, Params params) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesRequestBuilder.java, +import org.elasticsearch.common.util.ArrayUtils;, +        request.repositories(ArrayUtils.concat(request.repositories(), repositories));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsRequestBuilder.java, +import org.elasticsearch.common.util.ArrayUtils;, +        request.snapshots(ArrayUtils.concat(request.snapshots(), snapshots));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequestBuilder.java, +import org.elasticsearch.common.util.ArrayUtils;, +        request.snapshots(ArrayUtils.concat(request.snapshots(), snapshots));, +++ b/core/src/main/java/org/apache/lucene/queries/BlendedTermQuery.java, +                return Integer.compare(contexts[tieBreak[j]].docFreq(), contexts[tieBreak[i]].docFreq());, +++ b/core/src/main/java/org/apache/lucene/util/XGeoUtils.java, +    public static final double TOLERANCE = 1E-5;, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    protected void causeToXContent(XContentBuilder builder, Params params) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesRequestBuilder.java, +import org.elasticsearch.common.util.ArrayUtils;, +        request.repositories(ArrayUtils.concat(request.repositories(), repositories));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsRequestBuilder.java, +import org.elasticsearch.common.util.ArrayUtils;, +        request.snapshots(ArrayUtils.concat(request.snapshots(), snapshots));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequestBuilder.java, +import org.elasticsearch.common.util.ArrayUtils;, +        request.snapshots(ArrayUtils.concat(request.snapshots(), snapshots));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/get/BaseAliasesRequestBuilder.java, +import org.elasticsearch.common.util.ArrayUtils;, +        request.aliases(ArrayUtils.concat(request.aliases(), aliases));, +        request.indices(ArrayUtils.concat(request.indices(), indices));, +++ b/core/src/main/java/org/apache/lucene/queries/BlendedTermQuery.java, +                return Integer.compare(contexts[tieBreak[j]].docFreq(), contexts[tieBreak[i]].docFreq());, +++ b/core/src/main/java/org/apache/lucene/util/XGeoUtils.java, +    public static final double TOLERANCE = 1E-5;, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    protected void causeToXContent(XContentBuilder builder, Params params) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesRequestBuilder.java, +import org.elasticsearch.common.util.ArrayUtils;, +        request.repositories(ArrayUtils.concat(request.repositories(), repositories));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsRequestBuilder.java, +import org.elasticsearch.common.util.ArrayUtils;, +        request.snapshots(ArrayUtils.concat(request.snapshots(), snapshots));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequestBuilder.java, +import org.elasticsearch.common.util.ArrayUtils;, +        request.snapshots(ArrayUtils.concat(request.snapshots(), snapshots));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/get/BaseAliasesRequestBuilder.java, +import org.elasticsearch.common.util.ArrayUtils;, +        request.aliases(ArrayUtils.concat(request.aliases(), aliases));, +        request.indices(ArrayUtils.concat(request.indices(), indices));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequest.java, +import org.elasticsearch.common.util.ArrayUtils;, +            return features(ArrayUtils.concat(features(), features, Feature.class));, +++ b/core/src/main/java/org/apache/lucene/queries/BlendedTermQuery.java, +                return Integer.compare(contexts[tieBreak[j]].docFreq(), contexts[tieBreak[i]].docFreq());, +++ b/core/src/main/java/org/apache/lucene/util/XGeoUtils.java, +    public static final double TOLERANCE = 1E-5;, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    protected void causeToXContent(XContentBuilder builder, Params params) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesRequestBuilder.java, +import org.elasticsearch.common.util.ArrayUtils;, +        request.repositories(ArrayUtils.concat(request.repositories(), repositories));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsRequestBuilder.java, +import org.elasticsearch.common.util.ArrayUtils;]