[+++ b/src/main/java/org/elasticsearch/common/CacheRecycler.java, +public final class CacheRecycler  {, +    , +    private static final Recycler INSTANCE;, +    static {, +        String property = System.getProperty("ES.RECYCLE");, +        if (property != null && !Boolean.parseBoolean(property)) {, +            INSTANCE = new NoCacheCacheRecycler();, +        } else {, +            INSTANCE = new DefaultCacheRecycler();, +        }, +    }, +    , +    private CacheRecycler() {, +        // no instance, +    }, +        INSTANCE.clear();, +        return INSTANCE.popHashMap();, +        INSTANCE.pushHashMap(map);, +        return INSTANCE.popHashSet();, +        INSTANCE.pushHashSet(map);, +        return INSTANCE.popDoubleObjectMap();, +        INSTANCE.pushDoubleObjectMap(map);, +        return INSTANCE.popLongObjectMap();, +        INSTANCE.pushLongObjectMap(map);, +        return INSTANCE.popLongLongMap();, +        INSTANCE.pushLongLongMap(map);, +        return INSTANCE.popIntIntMap();, +        INSTANCE.pushIntIntMap(map);, +        return INSTANCE.popFloatIntMap();, +        INSTANCE.pushFloatIntMap(map);, +        return INSTANCE.popDoubleIntMap();, +        INSTANCE.pushDoubleIntMap(map);, +        return INSTANCE.popByteIntMap();, +        INSTANCE.pushByteIntMap(map);, +        return INSTANCE.popShortIntMap();, +        INSTANCE.pushShortIntMap(map);, +        return INSTANCE.popLongIntMap();, +        INSTANCE.pushLongIntMap(map);, +        return INSTANCE.popObjectIntMap();, +        INSTANCE.pushObjectIntMap(map);, +        return INSTANCE.popIntObjectMap();, +        INSTANCE.pushIntObjectMap(map);, +        return INSTANCE.popObjectFloatMap();, +        INSTANCE.pushObjectFloatMap(map);, +        return INSTANCE.popObjectArray(size);, +        INSTANCE.pushObjectArray(objects);, +        return INSTANCE.popIntArray(size);, +        return INSTANCE.popIntArray(size, sentinal);, +        INSTANCE.pushIntArray(ints);, +        INSTANCE.pushIntArray(ints, sentinal);, +   , +++ b/src/main/java/org/elasticsearch/common/CacheRecycler.java, +public final class CacheRecycler  {, +    , +    private static final Recycler INSTANCE;, +    static {, +        String property = System.getProperty("ES.RECYCLE");, +        if (property != null && !Boolean.parseBoolean(property)) {, +            INSTANCE = new NoCacheCacheRecycler();, +        } else {, +            INSTANCE = new DefaultCacheRecycler();, +        }, +    }, +    , +    private CacheRecycler() {, +        // no instance, +    }, +        INSTANCE.clear();, +        return INSTANCE.popHashMap();, +        INSTANCE.pushHashMap(map);, +        return INSTANCE.popHashSet();, +        INSTANCE.pushHashSet(map);, +        return INSTANCE.popDoubleObjectMap();, +        INSTANCE.pushDoubleObjectMap(map);, +        return INSTANCE.popLongObjectMap();, +        INSTANCE.pushLongObjectMap(map);, +        return INSTANCE.popLongLongMap();, +        INSTANCE.pushLongLongMap(map);, +        return INSTANCE.popIntIntMap();, +        INSTANCE.pushIntIntMap(map);, +        return INSTANCE.popFloatIntMap();, +        INSTANCE.pushFloatIntMap(map);, +        return INSTANCE.popDoubleIntMap();, +        INSTANCE.pushDoubleIntMap(map);, +        return INSTANCE.popByteIntMap();, +        INSTANCE.pushByteIntMap(map);, +        return INSTANCE.popShortIntMap();, +        INSTANCE.pushShortIntMap(map);, +        return INSTANCE.popLongIntMap();, +        INSTANCE.pushLongIntMap(map);, +        return INSTANCE.popObjectIntMap();, +        INSTANCE.pushObjectIntMap(map);, +        return INSTANCE.popIntObjectMap();, +        INSTANCE.pushIntObjectMap(map);, +        return INSTANCE.popObjectFloatMap();, +        INSTANCE.pushObjectFloatMap(map);, +        return INSTANCE.popObjectArray(size);, +        INSTANCE.pushObjectArray(objects);, +        return INSTANCE.popIntArray(size);]