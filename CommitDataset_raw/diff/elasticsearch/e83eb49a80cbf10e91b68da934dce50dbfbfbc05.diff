[+++ b/src/test/java/org/elasticsearch/test/integration/search/functionscore/RandomScoreFunctionTests.java, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.search.SearchHits;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.nullValue;, +        final int replicas = between(0,2); // needed for green status!, +        cluster().ensureAtLeastNumNodes(replicas+1);, +        assertAcked(client().admin().indices().prepareCreate("test"), +                .setSettings(, +                        ImmutableSettings.builder().put("index.number_of_shards", between(2, 5)), +                        .put("index.number_of_replicas", replicas), +                                .build()));, +        ensureGreen(); // make sure we are done otherwise preference could change?, +        int outerIters = atLeast(10);, +        for (int o = 0; o < outerIters; o++) {, +            final long seed = randomLong();, +            final String preference = randomRealisticUnicodeOfLengthBetween(1, 10); // at least one char!!, +            int innerIters = atLeast(2);, +            SearchHits hits = null;, +            for (int i = 0; i < innerIters; i++) {, +                if (i == 0) {, +                    assertThat(hits, nullValue());, +                    hits = searchResponse.getHits();, +                    assertThat(hits.getHits().length, equalTo(searchResponse.getHits().getHits().length));, +                        assertThat(searchResponse.getHits().getAt(j).score(), equalTo(hits.getAt(j).score()));, +                        assertThat(searchResponse.getHits().getAt(j).id(), equalTo(hits.getAt(j).id()));, +                    }]