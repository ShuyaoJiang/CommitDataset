[+++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, + * <p/>, + * <p>Also breaks fields with [type].[name] into a boolean query that must include the type, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, + * <p/>, + * <p>Also breaks fields with [type].[name] into a boolean query that must include the type, +++ b/core/src/main/java/org/apache/lucene/search/XFilteredDocIdSetIterator.java, +   * @see #FilteredDocIdSetIterator(DocIdSetIterator), +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, + * <p/>, + * <p>Also breaks fields with [type].[name] into a boolean query that must include the type, +++ b/core/src/main/java/org/apache/lucene/search/XFilteredDocIdSetIterator.java, +   * @see #FilteredDocIdSetIterator(DocIdSetIterator), +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +   * FST<Weight,Surface>: , +  /** Include this flag in the options parameter to {@link, +  /** Include this flag in the options parameter to {@link, +   * Calls {@link #XAnalyzingSuggester(Analyzer,Analyzer,int,int,int,boolean,FST,boolean,int,int,int,int,int), +   * Calls {@link #XAnalyzingSuggester(Analyzer,Analyzer,int,int,int,boolean,FST,boolean,int,int,int,int,int), +  /** cost -> weight */, +  /** weight -> cost */, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, + * <p/>, + * <p>Also breaks fields with [type].[name] into a boolean query that must include the type, +++ b/core/src/main/java/org/apache/lucene/search/XFilteredDocIdSetIterator.java, +   * @see #FilteredDocIdSetIterator(DocIdSetIterator), +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +   * FST<Weight,Surface>: , +  /** Include this flag in the options parameter to {@link, +  /** Include this flag in the options parameter to {@link, +   * Calls {@link #XAnalyzingSuggester(Analyzer,Analyzer,int,int,int,boolean,FST,boolean,int,int,int,int,int), +   * Calls {@link #XAnalyzingSuggester(Analyzer,Analyzer,int,int,int,boolean,FST,boolean,int,int,int,int,int), +  /** cost -> weight */, +  /** weight -> cost */, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XFuzzySuggester.java, +     * Creates a {@link FuzzySuggester} instance with an index & a query analyzer initialized with default values., +     * @param maxEdits must be >= 0 and <= {@link org.apache.lucene.util.automaton.LevenshteinAutomata#MAXIMUM_SUPPORTED_DISTANCE} ., +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, + * <p/>, + * <p>Also breaks fields with [type].[name] into a boolean query that must include the type, +++ b/core/src/main/java/org/apache/lucene/search/XFilteredDocIdSetIterator.java, +   * @see #FilteredDocIdSetIterator(DocIdSetIterator), +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +   * FST<Weight,Surface>: , +  /** Include this flag in the options parameter to {@link, +  /** Include this flag in the options parameter to {@link, +   * Calls {@link #XAnalyzingSuggester(Analyzer,Analyzer,int,int,int,boolean,FST,boolean,int,int,int,int,int), +   * Calls {@link #XAnalyzingSuggester(Analyzer,Analyzer,int,int,int,boolean,FST,boolean,int,int,int,int,int), +  /** cost -> weight */, +  /** weight -> cost */, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XFuzzySuggester.java, +     * Creates a {@link FuzzySuggester} instance with an index & a query analyzer initialized with default values., +     * @param maxEdits must be >= 0 and <= {@link org.apache.lucene.util.automaton.LevenshteinAutomata#MAXIMUM_SUPPORTED_DISTANCE} ., +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +     * The message can be parameterized using {@code {}} as placeholders for the given, +     * The message can be parameterized using {@code {}} as placeholders for the given, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, + * <p/>, + * <p>Also breaks fields with [type].[name] into a boolean query that must include the type, +++ b/core/src/main/java/org/apache/lucene/search/XFilteredDocIdSetIterator.java, +   * @see #FilteredDocIdSetIterator(DocIdSetIterator), +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +   * FST<Weight,Surface>: , +  /** Include this flag in the options parameter to {@link, +  /** Include this flag in the options parameter to {@link, +   * Calls {@link #XAnalyzingSuggester(Analyzer,Analyzer,int,int,int,boolean,FST,boolean,int,int,int,int,int), +   * Calls {@link #XAnalyzingSuggester(Analyzer,Analyzer,int,int,int,boolean,FST,boolean,int,int,int,int,int), +  /** cost -> weight */, +  /** weight -> cost */, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XFuzzySuggester.java, +     * Creates a {@link FuzzySuggester} instance with an index & a query analyzer initialized with default values., +     * @param maxEdits must be >= 0 and <= {@link org.apache.lucene.util.automaton.LevenshteinAutomata#MAXIMUM_SUPPORTED_DISTANCE} ., +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +     * The message can be parameterized using {@code {}} as placeholders for the given, +     * The message can be parameterized using {@code {}} as placeholders for the given, +++ b/core/src/main/java/org/elasticsearch/action/ActionFuture.java, +     * <p/>, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * <p/>, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * <p/>, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * <p/>, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * <p/>, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, + * <p/>, + * <p>Also breaks fields with [type].[name] into a boolean query that must include the type, +++ b/core/src/main/java/org/apache/lucene/search/XFilteredDocIdSetIterator.java, +   * @see #FilteredDocIdSetIterator(DocIdSetIterator), +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +   * FST<Weight,Surface>: , +  /** Include this flag in the options parameter to {@link, +  /** Include this flag in the options parameter to {@link, +   * Calls {@link #XAnalyzingSuggester(Analyzer,Analyzer,int,int,int,boolean,FST,boolean,int,int,int,int,int), +   * Calls {@link #XAnalyzingSuggester(Analyzer,Analyzer,int,int,int,boolean,FST,boolean,int,int,int,int,int), +  /** cost -> weight */, +  /** weight -> cost */, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XFuzzySuggester.java]