[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertEquals(versionMap.get("build_flavor"), info.getBuild().flavor().displayName());, +        assertEquals(versionMap.get("build_type"), info.getBuild().type().displayName());, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertEquals(versionMap.get("build_flavor"), info.getBuild().flavor().displayName());, +        assertEquals(versionMap.get("build_type"), info.getBuild().type().displayName());, +++ b/distribution/archives/build.gradle, +CopySpec archiveFiles(CopySpec modulesFiles, String distributionType, boolean oss) {, +        with configFiles(distributionType, oss), +        with binFiles(distributionType, oss), +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss)), +  with archiveFiles(transportModulesFiles, 'zip', false), +  with archiveFiles(modulesFiles(false), 'zip', false), +  with archiveFiles(modulesFiles(true), 'zip', true), +  with archiveFiles(modulesFiles(false), 'tar', false), +  with archiveFiles(modulesFiles(true), 'tar', true), +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertEquals(versionMap.get("build_flavor"), info.getBuild().flavor().displayName());, +        assertEquals(versionMap.get("build_type"), info.getBuild().type().displayName());, +++ b/distribution/archives/build.gradle, +CopySpec archiveFiles(CopySpec modulesFiles, String distributionType, boolean oss) {, +        with configFiles(distributionType, oss), +        with binFiles(distributionType, oss), +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss)), +  with archiveFiles(transportModulesFiles, 'zip', false), +  with archiveFiles(modulesFiles(false), 'zip', false), +  with archiveFiles(modulesFiles(true), 'zip', true), +  with archiveFiles(modulesFiles(false), 'tar', false), +  with archiveFiles(modulesFiles(true), 'tar', true), +++ b/distribution/build.gradle, +, +      'es.distribution.type': [, +        'deb': 'deb',, +        'rpm': 'rpm',, +        'tar': 'tar',, +        'zip': 'zip', +      ],, +, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertEquals(versionMap.get("build_flavor"), info.getBuild().flavor().displayName());, +        assertEquals(versionMap.get("build_type"), info.getBuild().type().displayName());, +++ b/distribution/archives/build.gradle, +CopySpec archiveFiles(CopySpec modulesFiles, String distributionType, boolean oss) {, +        with configFiles(distributionType, oss), +        with binFiles(distributionType, oss), +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss)), +  with archiveFiles(transportModulesFiles, 'zip', false), +  with archiveFiles(modulesFiles(false), 'zip', false), +  with archiveFiles(modulesFiles(true), 'zip', true), +  with archiveFiles(modulesFiles(false), 'tar', false), +  with archiveFiles(modulesFiles(true), 'tar', true), +++ b/distribution/build.gradle, +, +      'es.distribution.type': [, +        'deb': 'deb',, +        'rpm': 'rpm',, +        'tar': 'tar',, +        'zip': 'zip', +      ],, +, +++ b/distribution/src/bin/elasticsearch, +    -Des.distribution.type="$ES_DISTRIBUTION_TYPE" \, +    -Des.distribution.type="$ES_DISTRIBUTION_TYPE" \, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertEquals(versionMap.get("build_flavor"), info.getBuild().flavor().displayName());, +        assertEquals(versionMap.get("build_type"), info.getBuild().type().displayName());, +++ b/distribution/archives/build.gradle, +CopySpec archiveFiles(CopySpec modulesFiles, String distributionType, boolean oss) {, +        with configFiles(distributionType, oss), +        with binFiles(distributionType, oss), +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss)), +  with archiveFiles(transportModulesFiles, 'zip', false), +  with archiveFiles(modulesFiles(false), 'zip', false), +  with archiveFiles(modulesFiles(true), 'zip', true), +  with archiveFiles(modulesFiles(false), 'tar', false), +  with archiveFiles(modulesFiles(true), 'tar', true), +++ b/distribution/build.gradle, +, +      'es.distribution.type': [, +        'deb': 'deb',, +        'rpm': 'rpm',, +        'tar': 'tar',, +        'zip': 'zip', +      ],, +, +++ b/distribution/src/bin/elasticsearch, +    -Des.distribution.type="$ES_DISTRIBUTION_TYPE" \, +    -Des.distribution.type="$ES_DISTRIBUTION_TYPE" \, +++ b/distribution/src/bin/elasticsearch-env, +ES_DISTRIBUTION_TYPE=${es.distribution.type}, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertEquals(versionMap.get("build_flavor"), info.getBuild().flavor().displayName());, +        assertEquals(versionMap.get("build_type"), info.getBuild().type().displayName());, +++ b/distribution/archives/build.gradle, +CopySpec archiveFiles(CopySpec modulesFiles, String distributionType, boolean oss) {, +        with configFiles(distributionType, oss), +        with binFiles(distributionType, oss), +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss)), +  with archiveFiles(transportModulesFiles, 'zip', false), +  with archiveFiles(modulesFiles(false), 'zip', false)]