[+++ b/src/test/java/org/elasticsearch/aliases/IndexAliasesTests.java, +import org.elasticsearch.action.admin.indices.alias.IndicesAliasesRequestBuilder;, +import org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilder;, +        //invalid filter, invalid json, +        IndicesAliasesRequestBuilder indicesAliasesRequestBuilder = admin().indices().prepareAliases().addAlias("test", "alias1", "abcde");, +            indicesAliasesRequestBuilder.get();, +            fail("put alias should have been failed due to invalid filter");, +        } catch (ElasticsearchIllegalArgumentException e) {, +            assertThat(e.getMessage(), equalTo("failed to parse filter for alias [alias1]"));, +        }, +, +        //valid json , invalid filter, +        indicesAliasesRequestBuilder = admin().indices().prepareAliases().addAlias("test", "alias1", "{ \"test\": {} }");, +        try {, +            indicesAliasesRequestBuilder.get();, +            fail("put alias should have been failed due to invalid filter");, +        } catch (ElasticsearchIllegalArgumentException e) {, +            assertThat(e.getMessage(), equalTo("failed to parse filter for alias [alias1]"));, +    @Test, +        //non valid filter, invalid json, +        CreateIndexRequestBuilder createIndexRequestBuilder = prepareCreate("test").addAlias(new Alias("alias2").filter("f"));, +, +        try {, +            createIndexRequestBuilder.get();, +            fail("create index should have failed due to invalid alias filter");, +        } catch (ElasticsearchIllegalArgumentException e) {, +            assertThat(e.getMessage(), equalTo("failed to parse filter for alias [alias2]"));, +        }, +, +        //valid json but non valid filter, +        createIndexRequestBuilder = prepareCreate("test").addAlias(new Alias("alias2").filter("{ \"test\": {} }"));, +, +        try {, +            createIndexRequestBuilder.get();, +            fail("create index should have failed due to invalid alias filter");, +        } catch (ElasticsearchIllegalArgumentException e) {, +            assertThat(e.getMessage(), equalTo("failed to parse filter for alias [alias2]"));, +        }]