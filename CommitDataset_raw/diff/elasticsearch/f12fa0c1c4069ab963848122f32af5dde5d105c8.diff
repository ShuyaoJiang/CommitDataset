[+++ b/src/main/java/org/elasticsearch/index/query/QueryBuilders.java, +    , +    /**, +     * A query that allows to define a custom scoring function., +     * , +     */, +    public static FunctionScoreQueryBuilder functionScoreQuery() {, +        return new FunctionScoreQueryBuilder();, +    }, +    , +    /**, +     * A query that allows to define a custom scoring function., +     *, +     * @param filterBuilder The filterBuilder to custom score, +     */, +    public static FunctionScoreQueryBuilder functionScoreQuery(ScoreFunctionBuilder function) {, +        return new FunctionScoreQueryBuilder(function);, +    }, +    , +++ b/src/main/java/org/elasticsearch/index/query/QueryBuilders.java, +    , +    /**, +     * A query that allows to define a custom scoring function., +     * , +     */, +    public static FunctionScoreQueryBuilder functionScoreQuery() {, +        return new FunctionScoreQueryBuilder();, +    }, +    , +    /**, +     * A query that allows to define a custom scoring function., +     *, +     * @param filterBuilder The filterBuilder to custom score, +     */, +    public static FunctionScoreQueryBuilder functionScoreQuery(ScoreFunctionBuilder function) {, +        return new FunctionScoreQueryBuilder(function);, +    }, +    , +++ b/src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryBuilder.java, +    public FunctionScoreQueryBuilder() {, +        this.filterBuilder = null;, +        this.queryBuilder = null;, +    }, +, +    public FunctionScoreQueryBuilder(ScoreFunctionBuilder scoreFunctionBuilder) {, +        queryBuilder = null;, +        filterBuilder = null;, +        this.filters.add(null);, +        this.scoreFunctions.add(scoreFunctionBuilder);, +    }, +, +++ b/src/main/java/org/elasticsearch/index/query/QueryBuilders.java, +    , +    /**, +     * A query that allows to define a custom scoring function., +     * , +     */, +    public static FunctionScoreQueryBuilder functionScoreQuery() {, +        return new FunctionScoreQueryBuilder();, +    }, +    , +    /**, +     * A query that allows to define a custom scoring function., +     *, +     * @param filterBuilder The filterBuilder to custom score, +     */, +    public static FunctionScoreQueryBuilder functionScoreQuery(ScoreFunctionBuilder function) {, +        return new FunctionScoreQueryBuilder(function);, +    }, +    , +++ b/src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryBuilder.java, +    public FunctionScoreQueryBuilder() {, +        this.filterBuilder = null;, +        this.queryBuilder = null;, +    }, +, +    public FunctionScoreQueryBuilder(ScoreFunctionBuilder scoreFunctionBuilder) {, +        queryBuilder = null;, +        filterBuilder = null;, +        this.filters.add(null);, +        this.scoreFunctions.add(scoreFunctionBuilder);, +    }, +, +++ b/src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryParser.java, +import org.elasticsearch.common.lucene.search.Queries;, +            query = Queries.newMatchAllQuery();, +                filter = Queries.MATCH_ALL_FILTER;, +++ b/src/main/java/org/elasticsearch/index/query/QueryBuilders.java, +    , +    /**, +     * A query that allows to define a custom scoring function., +     * , +     */, +    public static FunctionScoreQueryBuilder functionScoreQuery() {, +        return new FunctionScoreQueryBuilder();, +    }, +    , +    /**, +     * A query that allows to define a custom scoring function., +     *]