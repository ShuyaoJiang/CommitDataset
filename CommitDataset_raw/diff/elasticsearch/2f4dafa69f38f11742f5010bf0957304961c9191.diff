[+++ b/build.gradle, +  throw new GradleException('You must run `gradle idea` from the root of elasticsearch before importing into IntelliJ'), +++ b/build.gradle, +  throw new GradleException('You must run `gradle idea` from the root of elasticsearch before importing into IntelliJ'), +++ b/buildSrc/build.gradle, +++ b/build.gradle, +  throw new GradleException('You must run `gradle idea` from the root of elasticsearch before importing into IntelliJ'), +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/TestClustersPlugin.java, +        // When the daemon is used, but does not work correctly and eventually dies off (e.x. due to non interruptible, +++ b/build.gradle, +  throw new GradleException('You must run `gradle idea` from the root of elasticsearch before importing into IntelliJ'), +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/TestClustersPlugin.java, +        // When the daemon is used, but does not work correctly and eventually dies off (e.x. due to non interruptible, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/build.gradle, +  throw new GradleException('You must run `gradle idea` from the root of elasticsearch before importing into IntelliJ'), +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/TestClustersPlugin.java, +        // When the daemon is used, but does not work correctly and eventually dies off (e.x. due to non interruptible, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ b/build.gradle, +  throw new GradleException('You must run `gradle idea` from the root of elasticsearch before importing into IntelliJ'), +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/TestClustersPlugin.java, +        // When the daemon is used, but does not work correctly and eventually dies off (e.x. due to non interruptible, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ b/buildSrc/version.properties, +lucene            = 8.0.0-snapshot-a1c6e642aa, +++ b/build.gradle, +  throw new GradleException('You must run `gradle idea` from the root of elasticsearch before importing into IntelliJ'), +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/TestClustersPlugin.java, +        // When the daemon is used, but does not work correctly and eventually dies off (e.x. due to non interruptible, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ b/buildSrc/version.properties, +lucene            = 8.0.0-snapshot-a1c6e642aa, +++ b/client/rest-high-level/build.gradle, +  setting 'reindex.remote.whitelist', '"[::1]:*"', +++ b/build.gradle, +  throw new GradleException('You must run `gradle idea` from the root of elasticsearch before importing into IntelliJ'), +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/TestClustersPlugin.java, +        // When the daemon is used, but does not work correctly and eventually dies off (e.x. due to non interruptible, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ b/buildSrc/version.properties, +lucene            = 8.0.0-snapshot-a1c6e642aa, +++ b/client/rest-high-level/build.gradle, +  setting 'reindex.remote.whitelist', '"[::1]:*"', +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.search.aggregations.metrics.ParsedWeightedAvg;, +import org.elasticsearch.search.aggregations.metrics.WeightedAvgAggregationBuilder;, +        map.put(WeightedAvgAggregationBuilder.NAME, (p, c) -> ParsedWeightedAvg.fromXContent(p, (String) c));, +++ b/build.gradle, +  throw new GradleException('You must run `gradle idea` from the root of elasticsearch before importing into IntelliJ'), +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/TestClustersPlugin.java, +        // When the daemon is used, but does not work correctly and eventually dies off (e.x. due to non interruptible, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ b/buildSrc/version.properties, +lucene            = 8.0.0-snapshot-a1c6e642aa, +++ b/client/rest-high-level/build.gradle, +  setting 'reindex.remote.whitelist', '"[::1]:*"', +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.search.aggregations.metrics.ParsedWeightedAvg;, +import org.elasticsearch.search.aggregations.metrics.WeightedAvgAggregationBuilder;, +        map.put(WeightedAvgAggregationBuilder.NAME, (p, c) -> ParsedWeightedAvg.fromXContent(p, (String) c));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ccr/AutoFollowStats.java, +import org.elasticsearch.common.collect.Tuple;, +    static final ParseField TIMESTAMP = new ParseField("timestamp");, +                ((List<Map.Entry<String, Tuple<Long, ElasticsearchException>>>) args[3]), +    static final ConstructingObjectParser<Map.Entry<String, Tuple<Long, ElasticsearchException>>, Void> AUTO_FOLLOW_EXCEPTIONS_PARSER =, +            args -> new AbstractMap.SimpleEntry<>((String) args[0], Tuple.tuple((Long) args[1], (ElasticsearchException) args[2])));, +        AUTO_FOLLOW_EXCEPTIONS_PARSER.declareLong(ConstructingObjectParser.constructorArg(), TIMESTAMP);, +    private final NavigableMap<String, Tuple<Long, ElasticsearchException>> recentAutoFollowErrors;, +                    NavigableMap<String, Tuple<Long, ElasticsearchException>> recentAutoFollowErrors,, +    public NavigableMap<String, Tuple<Long, ElasticsearchException>> getRecentAutoFollowErrors() {, +++ b/build.gradle, +  throw new GradleException('You must run `gradle idea` from the root of elasticsearch before importing into IntelliJ'), +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/TestClustersPlugin.java, +        // When the daemon is used, but does not work correctly and eventually dies off (e.x. due to non interruptible, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/forbidden/es-server-signatures.txt, +++ b/buildSrc/version.properties, +lucene            = 8.0.0-snapshot-a1c6e642aa, +++ b/client/rest-high-level/build.gradle, +  setting 'reindex.remote.whitelist', '"[::1]:*"', +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.search.aggregations.metrics.ParsedWeightedAvg;, +import org.elasticsearch.search.aggregations.metrics.WeightedAvgAggregationBuilder;, +        map.put(WeightedAvgAggregationBuilder.NAME, (p, c) -> ParsedWeightedAvg.fromXContent(p, (String) c));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ccr/AutoFollowStats.java, +import org.elasticsearch.common.collect.Tuple;]