[+++ b/src/test/java/org/elasticsearch/search/functionscore/FunctionScorePluginTests.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.test.AbstractIntegrationTest;, +import static org.elasticsearch.test.AbstractIntegrationTest.ClusterScope;, +import static org.elasticsearch.test.AbstractIntegrationTest.Scope;, +@ClusterScope(scope = Scope.SUITE, numNodes = 1), +public class FunctionScorePluginTests extends AbstractIntegrationTest {, +    @Override, +    protected Settings nodeSettings(int nodeOrdinal) {, +        return settingsBuilder(), +                .put("plugin.types", CustomDistanceScorePlugin.class.getName()), +                .put(super.nodeSettings(nodeOrdinal)), +                .build();, +        client().admin(), +        client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForYellowStatus().execute().actionGet();, +        client().index(, +        client().index(, +        client().admin().indices().prepareRefresh().execute().actionGet();, +        ActionFuture<SearchResponse> response = client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(, +++ b/src/test/java/org/elasticsearch/search/functionscore/FunctionScorePluginTests.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.test.AbstractIntegrationTest;, +import static org.elasticsearch.test.AbstractIntegrationTest.ClusterScope;, +import static org.elasticsearch.test.AbstractIntegrationTest.Scope;, +@ClusterScope(scope = Scope.SUITE, numNodes = 1), +public class FunctionScorePluginTests extends AbstractIntegrationTest {, +    @Override, +    protected Settings nodeSettings(int nodeOrdinal) {, +        return settingsBuilder(), +                .put("plugin.types", CustomDistanceScorePlugin.class.getName()), +                .put(super.nodeSettings(nodeOrdinal)), +                .build();, +        client().admin(), +        client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForYellowStatus().execute().actionGet();, +        client().index(, +        client().index(, +        client().admin().indices().prepareRefresh().execute().actionGet();, +        ActionFuture<SearchResponse> response = client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(, +++ b/src/test/java/org/elasticsearch/ttl/SimpleTTLTests.java, +import org.elasticsearch.test.AbstractIntegrationTest;, +import org.junit.Before;, +public class SimpleTTLTests extends AbstractIntegrationTest {, +    private final Settings settings = settingsBuilder(), +, +    @Before, +    public void setup() {, +        updateClusterSettings(settings);]