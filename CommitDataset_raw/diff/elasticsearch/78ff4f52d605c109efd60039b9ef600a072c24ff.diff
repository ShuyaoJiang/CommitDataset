[+++ b/core/src/main/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilder.java, +    private static final ParseField COERCE_FIELD =new ParseField("coerce", "normalize"), +            .withAllDeprecated("use field validation_method instead");, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed"), +            .withAllDeprecated("use field validation_method instead");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilder.java, +    private static final ParseField COERCE_FIELD =new ParseField("coerce", "normalize"), +            .withAllDeprecated("use field validation_method instead");, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed"), +            .withAllDeprecated("use field validation_method instead");, +++ b/core/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortBuilder.java, +import org.elasticsearch.index.query.GeoValidationMethod;, +    public static final GeoValidationMethod DEFAULT_VALIDATION = GeoValidationMethod.DEFAULT;, +, +    private static final ParseField UNIT_FIELD = new ParseField("unit");, +    private static final ParseField DISTANCE_TYPE_FIELD = new ParseField("distance_type");, +    private static final ParseField VALIDATION_METHOD_FIELD = new ParseField("validation_method");, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed"), +            .withAllDeprecated("use validation_method instead");, +    private static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize"), +            .withAllDeprecated("use validation_method instead");, +    private static final ParseField SORTMODE_FIELD = new ParseField("mode", "sort_mode");, +    private static final ParseField NESTED_PATH_FIELD = new ParseField("nested_path");, +    private static final ParseField NESTED_FILTER_FIELD = new ParseField("nested_filter");, +    private GeoValidationMethod validation = DEFAULT_VALIDATION;, +        this.validation = original.validation;, +        validation = GeoValidationMethod.readFromStream(in);, +        validation.writeTo(out);, +     * Sets validation method for this sort builder. , +     */, +    public GeoDistanceSortBuilder validation(GeoValidationMethod method) {, +        this.validation = method;, +        return this;, +    }, +, +    /**, +     * Returns the validation method to use for this sort builder. , +     */, +    public GeoValidationMethod validation() {, +        return validation;, +    }, +, +    /**, +        builder.field(VALIDATION_METHOD_FIELD.getPreferredName(), validation);, +                Objects.equals(validation, other.validation);, +                this.unit, this.sortMode, this.order, this.nestedFilter,, +                this.nestedPath, this.validation);, +        boolean coerce = GeoValidationMethod.DEFAULT_LENIENT_PARSING;, +        boolean ignoreMalformed = GeoValidationMethod.DEFAULT_LENIENT_PARSING;, +        GeoValidationMethod validation = null;, +                } else if (parseFieldMatcher.match(currentName, VALIDATION_METHOD_FIELD)) {, +                    validation = GeoValidationMethod.fromString(parser.text());, +        if (validation == null) {, +            // looks like either validation was left unset or we are parsing old validation json, +            result.validation(GeoValidationMethod.infer(coerce, ignoreMalformed));, +        } else {, +            // ignore deprecated coerce/ignore_malformed, +            result.validation(validation);, +        }, +        if (!indexCreatedBeforeV2_0 && !GeoValidationMethod.isIgnoreMalformed(validation)) {, +        if (GeoValidationMethod.isCoerce(validation)) {, +                GeoUtils.normalizePoint(point, true, true);, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilder.java, +    private static final ParseField COERCE_FIELD =new ParseField("coerce", "normalize"), +            .withAllDeprecated("use field validation_method instead");, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed"), +            .withAllDeprecated("use field validation_method instead");, +++ b/core/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortBuilder.java, +import org.elasticsearch.index.query.GeoValidationMethod;, +    public static final GeoValidationMethod DEFAULT_VALIDATION = GeoValidationMethod.DEFAULT;, +, +    private static final ParseField UNIT_FIELD = new ParseField("unit");, +    private static final ParseField DISTANCE_TYPE_FIELD = new ParseField("distance_type");, +    private static final ParseField VALIDATION_METHOD_FIELD = new ParseField("validation_method");, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed"), +            .withAllDeprecated("use validation_method instead");, +    private static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize"), +            .withAllDeprecated("use validation_method instead");, +    private static final ParseField SORTMODE_FIELD = new ParseField("mode", "sort_mode");, +    private static final ParseField NESTED_PATH_FIELD = new ParseField("nested_path");, +    private static final ParseField NESTED_FILTER_FIELD = new ParseField("nested_filter");, +    private GeoValidationMethod validation = DEFAULT_VALIDATION;, +        this.validation = original.validation;, +        validation = GeoValidationMethod.readFromStream(in);, +        validation.writeTo(out);, +     * Sets validation method for this sort builder. , +     */, +    public GeoDistanceSortBuilder validation(GeoValidationMethod method) {, +        this.validation = method;, +        return this;, +    }, +, +    /**, +     * Returns the validation method to use for this sort builder. , +     */, +    public GeoValidationMethod validation() {, +        return validation;, +    }, +, +    /**]