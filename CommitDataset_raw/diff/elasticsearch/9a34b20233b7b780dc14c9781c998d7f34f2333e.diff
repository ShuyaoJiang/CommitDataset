[+++ b/TESTING.asciidoc, +./gradlew run -Drun.distribution=oss, +++ b/TESTING.asciidoc, +./gradlew run -Drun.distribution=oss, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'default'), +++ b/TESTING.asciidoc, +./gradlew run -Drun.distribution=oss, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'default'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    String distribution = 'default', +++ b/TESTING.asciidoc, +./gradlew run -Drun.distribution=oss, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'default'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    String distribution = 'default', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        if (System.getProperty('tests.distribution', 'oss') == 'integ-test-zip') {, +        // TEMP HACK, +        // The oss docs CI build overrides the distro on the command line. This hack handles backcompat until CI is updated., +        if (distro.equals('oss-zip')) {, +            distro = 'oss', +        }, +        if (distro.equals('zip')) {, +            distro = 'default', +        }, +        // END TEMP HACK, +        if (['integ-test-zip', 'oss', 'default'].contains(distro) == false) {, +            throw new GradleException("Unknown distribution: ${distro} in project ${project.path}"), +        }, +        String group = "downloads.zip", +        if (distro.equals('oss') && Version.fromString(elasticsearchVersion).onOrAfter('6.3.0')) {, +        project.dependencies.add(configuration.name, "${group}:${artifactName}:${elasticsearchVersion}@zip"), +        Task extract = project.tasks.create(name: name, type: Copy, dependsOn: extractDependsOn) {, +, +++ b/TESTING.asciidoc, +./gradlew run -Drun.distribution=oss, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'default'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    String distribution = 'default', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        if (System.getProperty('tests.distribution', 'oss') == 'integ-test-zip') {, +        // TEMP HACK, +        // The oss docs CI build overrides the distro on the command line. This hack handles backcompat until CI is updated., +        if (distro.equals('oss-zip')) {, +            distro = 'oss', +        }, +        if (distro.equals('zip')) {, +            distro = 'default', +        }, +        // END TEMP HACK, +        if (['integ-test-zip', 'oss', 'default'].contains(distro) == false) {, +            throw new GradleException("Unknown distribution: ${distro} in project ${project.path}"), +        }, +        String group = "downloads.zip", +        if (distro.equals('oss') && Version.fromString(elasticsearchVersion).onOrAfter('6.3.0')) {, +        project.dependencies.add(configuration.name, "${group}:${artifactName}:${elasticsearchVersion}@zip"), +        Task extract = project.tasks.create(name: name, type: Copy, dependsOn: extractDependsOn) {, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +        homeDir = new File(baseDir, "elasticsearch-${nodeVersion}"), +        pathConf = new File(homeDir, 'config'), +++ b/TESTING.asciidoc, +./gradlew run -Drun.distribution=oss, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'default'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    String distribution = 'default', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        if (System.getProperty('tests.distribution', 'oss') == 'integ-test-zip') {, +        // TEMP HACK, +        // The oss docs CI build overrides the distro on the command line. This hack handles backcompat until CI is updated., +        if (distro.equals('oss-zip')) {, +            distro = 'oss', +        }, +        if (distro.equals('zip')) {, +            distro = 'default', +        }, +        // END TEMP HACK, +        if (['integ-test-zip', 'oss', 'default'].contains(distro) == false) {, +            throw new GradleException("Unknown distribution: ${distro} in project ${project.path}"), +        }, +        String group = "downloads.zip", +        if (distro.equals('oss') && Version.fromString(elasticsearchVersion).onOrAfter('6.3.0')) {, +        project.dependencies.add(configuration.name, "${group}:${artifactName}:${elasticsearchVersion}@zip"), +        Task extract = project.tasks.create(name: name, type: Copy, dependsOn: extractDependsOn) {, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +        homeDir = new File(baseDir, "elasticsearch-${nodeVersion}"), +        pathConf = new File(homeDir, 'config'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RunTask.groovy, +        clusterConfig.distribution = 'default', +++ b/TESTING.asciidoc, +./gradlew run -Drun.distribution=oss, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'default'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy]