[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/config/RuleScope.java, +            if (validKeys.isEmpty()) {, +                throw ExceptionsHelper.badRequestException(Messages.getMessage(Messages.JOB_CONFIG_DETECTION_RULE_SCOPE_NO_AVAILABLE_FIELDS,, +                        invalidKey.get()));, +            }, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/config/RuleScope.java, +            if (validKeys.isEmpty()) {, +                throw ExceptionsHelper.badRequestException(Messages.getMessage(Messages.JOB_CONFIG_DETECTION_RULE_SCOPE_NO_AVAILABLE_FIELDS,, +                        invalidKey.get()));, +            }, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/messages/Messages.java, +    public static final String JOB_CONFIG_DETECTION_RULE_SCOPE_NO_AVAILABLE_FIELDS =, +            "Invalid detector rule: scope field ''{0}'' is invalid; detector has no available fields for scoping";, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/config/RuleScope.java, +            if (validKeys.isEmpty()) {, +                throw ExceptionsHelper.badRequestException(Messages.getMessage(Messages.JOB_CONFIG_DETECTION_RULE_SCOPE_NO_AVAILABLE_FIELDS,, +                        invalidKey.get()));, +            }, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/messages/Messages.java, +    public static final String JOB_CONFIG_DETECTION_RULE_SCOPE_NO_AVAILABLE_FIELDS =, +            "Invalid detector rule: scope field ''{0}'' is invalid; detector has no available fields for scoping";, +++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/job/config/RuleScopeTests.java, +import java.util.Collections;, +, +    public void testValidate_GivenNoAvailableFieldsForScope() {, +        RuleScope scope = RuleScope.builder(), +                .include("foo", "filter1"), +                .build();, +        assertThat(scope.isEmpty(), is(false));, +, +        ElasticsearchStatusException e = expectThrows(ElasticsearchStatusException.class, () -> scope.validate(Collections.emptySet()));, +        assertThat(e.getMessage(), equalTo("Invalid detector rule: scope field 'foo' is invalid; " +, +                "detector has no available fields for scoping"));, +    }, +]