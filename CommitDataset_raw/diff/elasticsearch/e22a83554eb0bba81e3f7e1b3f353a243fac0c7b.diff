[+++ b/x-pack/plugin/sql/src/main/antlr/SqlBase.g4, +++ b/x-pack/plugin/sql/src/main/antlr/SqlBase.g4, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java, +            value = of(interval.valueNumeric, leading);, +            value = of(interval.valuePattern, negative, intervalType);, +    private TemporalAmount of(NumberContext valueNumeric, TimeUnit unit) {, +        // as the number parsing handles the -, there's no need to look at that, +    private TemporalAmount of(StringContext valuePattern, boolean negative, DataType intervalType) {, +++ b/x-pack/plugin/sql/src/main/antlr/SqlBase.g4, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java, +            value = of(interval.valueNumeric, leading);, +            value = of(interval.valuePattern, negative, intervalType);, +    private TemporalAmount of(NumberContext valueNumeric, TimeUnit unit) {, +        // as the number parsing handles the -, there's no need to look at that, +    private TemporalAmount of(StringContext valuePattern, boolean negative, DataType intervalType) {, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseBaseListener.java, +++ b/x-pack/plugin/sql/src/main/antlr/SqlBase.g4, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java, +            value = of(interval.valueNumeric, leading);, +            value = of(interval.valuePattern, negative, intervalType);, +    private TemporalAmount of(NumberContext valueNumeric, TimeUnit unit) {, +        // as the number parsing handles the -, there's no need to look at that, +    private TemporalAmount of(StringContext valuePattern, boolean negative, DataType intervalType) {, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseBaseListener.java, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseBaseVisitor.java, +++ b/x-pack/plugin/sql/src/main/antlr/SqlBase.g4, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java, +            value = of(interval.valueNumeric, leading);, +            value = of(interval.valuePattern, negative, intervalType);, +    private TemporalAmount of(NumberContext valueNumeric, TimeUnit unit) {, +        // as the number parsing handles the -, there's no need to look at that, +    private TemporalAmount of(StringContext valuePattern, boolean negative, DataType intervalType) {, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseBaseListener.java, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseBaseVisitor.java, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseListener.java, +++ b/x-pack/plugin/sql/src/main/antlr/SqlBase.g4, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java, +            value = of(interval.valueNumeric, leading);, +            value = of(interval.valuePattern, negative, intervalType);, +    private TemporalAmount of(NumberContext valueNumeric, TimeUnit unit) {, +        // as the number parsing handles the -, there's no need to look at that, +    private TemporalAmount of(StringContext valuePattern, boolean negative, DataType intervalType) {, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseBaseListener.java, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseBaseVisitor.java, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseListener.java, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseParser.java, +    RULE_intervalField = 43, RULE_dataType = 44, RULE_qualifiedName = 45, , +    RULE_identifier = 46, RULE_tableIdentifier = 47, RULE_quoteIdentifier = 48, , +    RULE_unquoteIdentifier = 49, RULE_number = 50, RULE_string = 51, RULE_nonReserved = 52;, +    "booleanValue", "interval", "intervalField", "dataType", "qualifiedName", , +    "identifier", "tableIdentifier", "quoteIdentifier", "unquoteIdentifier", , +      setState(106);, +      setState(107);, +      setState(109);, +      setState(110);, +      setState(212);, +        setState(112);, +        setState(113);, +        setState(127);, +          setState(114);, +          setState(123);, +            setState(121);, +              setState(115);, +              setState(116);, +              setState(117);, +              setState(118);, +              setState(119);, +              setState(120);, +            setState(125);, +          setState(126);, +        setState(129);, +        setState(130);, +        setState(142);, +          setState(131);, +          setState(138);, +            setState(136);, +              setState(132);, +              setState(133);, +              setState(134);, +              setState(135);, +            setState(140);, +          setState(141);, +        setState(144);, +        setState(145);, +        setState(146);, +        setState(149);, +          setState(147);, +          setState(148);, +        setState(151);, +        setState(152);, +        setState(153);, +        setState(156);, +          setState(154);, +          setState(155);, +        setState(158);, +        setState(161);, +          setState(159);, +          setState(160);, +        setState(163);, +        setState(164);]