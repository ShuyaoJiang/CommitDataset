[+++ b/docs/reference/modules/cross-cluster-search.asciidoc, +++ b/docs/reference/modules/cross-cluster-search.asciidoc, +++ b/qa/multi-cluster-search/src/test/resources/rest-api-spec/test/multi_cluster/10_basic.yml, +  - match: { num_reduce_phases: 3 }, +  - match: { num_reduce_phases: 3 }, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +  - match: { num_reduce_phases: 3 }, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +++ b/docs/reference/modules/cross-cluster-search.asciidoc, +++ b/qa/multi-cluster-search/src/test/resources/rest-api-spec/test/multi_cluster/10_basic.yml, +  - match: { num_reduce_phases: 3 }, +  - match: { num_reduce_phases: 3 }, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +  - match: { num_reduce_phases: 3 }, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +++ b/qa/multi-cluster-search/src/test/resources/rest-api-spec/test/multi_cluster/40_scroll.yml, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +++ b/docs/reference/modules/cross-cluster-search.asciidoc, +++ b/qa/multi-cluster-search/src/test/resources/rest-api-spec/test/multi_cluster/10_basic.yml, +  - match: { num_reduce_phases: 3 }, +  - match: { num_reduce_phases: 3 }, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +  - match: { num_reduce_phases: 3 }, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +++ b/qa/multi-cluster-search/src/test/resources/rest-api-spec/test/multi_cluster/40_scroll.yml, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +++ b/server/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +                    trackTotalHitsUpTo, request.isFinalReduce());, +                return reducedQueryPhase(results.asList(), isScrollRequest, trackTotalHitsUpTo, request.isFinalReduce());, +++ b/docs/reference/modules/cross-cluster-search.asciidoc, +++ b/qa/multi-cluster-search/src/test/resources/rest-api-spec/test/multi_cluster/10_basic.yml, +  - match: { num_reduce_phases: 3 }, +  - match: { num_reduce_phases: 3 }, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +  - match: { num_reduce_phases: 3 }, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +++ b/qa/multi-cluster-search/src/test/resources/rest-api-spec/test/multi_cluster/40_scroll.yml, +  - is_false: num_reduce_phases, +  - is_false: num_reduce_phases, +++ b/server/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +                    trackTotalHitsUpTo, request.isFinalReduce());, +                return reducedQueryPhase(results.asList(), isScrollRequest, trackTotalHitsUpTo, request.isFinalReduce());, +++ b/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +    private final boolean finalReduce;, +        this.finalReduce = true;, +        this(searchRequest, searchRequest.indices, searchRequest.localClusterAlias,, +            searchRequest.absoluteStartMillis, searchRequest.finalReduce);, +     * Creates a new search request by providing the search request to copy all fields from, the indices to search against, the alias of, +     * the cluster where it will be executed, as well as the start time in milliseconds from the epoch time and whether the reduction, +     * should be final or not. Used when a {@link SearchRequest} is created and executed as part of a cross-cluster search request, +     * performing reduction on each cluster in order to minimize network round-trips between the coordinating node and the remote clusters., +     *, +     * @param originalSearchRequest the original search request, +     * @param indices the indices to search against, +     * @param localClusterAlias the alias to prefix index names with in the returned search results, +     * @param absoluteStartMillis the absolute start time to be used on the remote clusters to ensure that the same value is used, +     * @param finalReduce whether the reduction should be final or not, +                                            String localClusterAlias, long absoluteStartMillis, boolean finalReduce) {, +        return new SearchRequest(originalSearchRequest, indices, localClusterAlias, absoluteStartMillis, finalReduce);, +    private SearchRequest(SearchRequest searchRequest, String[] indices, String localClusterAlias, long absoluteStartMillis,, +                          boolean finalReduce) {, +        this.finalReduce = finalReduce;, +        //TODO move to the 6_7_0 branch once backported to 6.x, +        if (in.getVersion().onOrAfter(Version.V_7_0_0)) {, +            finalReduce = in.readBoolean();, +        } else {, +            finalReduce = true;, +        }, +        //TODO move to the 6_7_0 branch once backported to 6.x, +        if (out.getVersion().onOrAfter(Version.V_7_0_0)) {, +            out.writeBoolean(finalReduce);, +        }, +     * Returns whether the reduction phase that will be performed needs to be final or not., +     */, +    boolean isFinalReduce() {, +        return finalReduce;, +    }, +, +    /**, +     * request. When created through {@link #withLocalReduction(SearchRequest, String[], String, long, boolean)}, this method returns, +     * the provided current time, otherwise it will return {@link System#currentTimeMillis()}., +++ b/docs/reference/modules/cross-cluster-search.asciidoc]