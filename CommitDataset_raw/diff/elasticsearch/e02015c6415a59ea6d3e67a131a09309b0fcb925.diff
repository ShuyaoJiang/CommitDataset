[+++ b/src/main/java/org/elasticsearch/index/mapper/internal/UidFieldMapper.java, +        public static final FieldType NESTED_FIELD_TYPE = new FieldType(AbstractFieldMapper.Defaults.FIELD_TYPE);, +, +            NESTED_FIELD_TYPE.setIndexed(true);, +            NESTED_FIELD_TYPE.setTokenized(false);, +            NESTED_FIELD_TYPE.setStored(false);, +            NESTED_FIELD_TYPE.setOmitNorms(true);, +            // we can set this to another index option when we move away from storing payload.., +            //NESTED_FIELD_TYPE.setIndexOptions(FieldInfo.IndexOptions.DOCS_ONLY);, +            NESTED_FIELD_TYPE.freeze();, +                    context.docs().get(i).add(new Field(UidFieldMapper.NAME, uidField.uid(), Defaults.NESTED_FIELD_TYPE));, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/UidFieldMapper.java, +        public static final FieldType NESTED_FIELD_TYPE = new FieldType(AbstractFieldMapper.Defaults.FIELD_TYPE);, +, +            NESTED_FIELD_TYPE.setIndexed(true);, +            NESTED_FIELD_TYPE.setTokenized(false);, +            NESTED_FIELD_TYPE.setStored(false);, +            NESTED_FIELD_TYPE.setOmitNorms(true);, +            // we can set this to another index option when we move away from storing payload.., +            //NESTED_FIELD_TYPE.setIndexOptions(FieldInfo.IndexOptions.DOCS_ONLY);, +            NESTED_FIELD_TYPE.freeze();, +                    context.docs().get(i).add(new Field(UidFieldMapper.NAME, uidField.uid(), Defaults.NESTED_FIELD_TYPE));, +++ b/src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java, +            IndexableField uidField = context.doc().getField(UidFieldMapper.NAME);, +                    nestedDoc.add(new Field(UidFieldMapper.NAME, uidField.stringValue(), UidFieldMapper.Defaults.NESTED_FIELD_TYPE));, +                    nestedDoc.add(new Field(UidFieldMapper.NAME, ((UidField) uidField).uid(), UidFieldMapper.Defaults.NESTED_FIELD_TYPE));, +            nestedDoc.add(new Field(TypeFieldMapper.NAME, nestedTypePathAsString, TypeFieldMapper.Defaults.FIELD_TYPE));, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/UidFieldMapper.java, +        public static final FieldType NESTED_FIELD_TYPE = new FieldType(AbstractFieldMapper.Defaults.FIELD_TYPE);, +, +            NESTED_FIELD_TYPE.setIndexed(true);, +            NESTED_FIELD_TYPE.setTokenized(false);, +            NESTED_FIELD_TYPE.setStored(false);, +            NESTED_FIELD_TYPE.setOmitNorms(true);, +            // we can set this to another index option when we move away from storing payload.., +            //NESTED_FIELD_TYPE.setIndexOptions(FieldInfo.IndexOptions.DOCS_ONLY);, +            NESTED_FIELD_TYPE.freeze();, +                    context.docs().get(i).add(new Field(UidFieldMapper.NAME, uidField.uid(), Defaults.NESTED_FIELD_TYPE));, +++ b/src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java, +            IndexableField uidField = context.doc().getField(UidFieldMapper.NAME);, +                    nestedDoc.add(new Field(UidFieldMapper.NAME, uidField.stringValue(), UidFieldMapper.Defaults.NESTED_FIELD_TYPE));, +                    nestedDoc.add(new Field(UidFieldMapper.NAME, ((UidField) uidField).uid(), UidFieldMapper.Defaults.NESTED_FIELD_TYPE));, +            nestedDoc.add(new Field(TypeFieldMapper.NAME, nestedTypePathAsString, TypeFieldMapper.Defaults.FIELD_TYPE));, +++ b/src/main/java/org/elasticsearch/search/highlight/vectorhighlight/SourceScoreOrderFragmentsBuilder.java, +import org.apache.lucene.document.TextField;, +            fields[i] = new Field(mapper.names().indexName(), values.get(i).toString(), TextField.TYPE_NOT_STORED);, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/UidFieldMapper.java, +        public static final FieldType NESTED_FIELD_TYPE = new FieldType(AbstractFieldMapper.Defaults.FIELD_TYPE);, +, +            NESTED_FIELD_TYPE.setIndexed(true);, +            NESTED_FIELD_TYPE.setTokenized(false);, +            NESTED_FIELD_TYPE.setStored(false);, +            NESTED_FIELD_TYPE.setOmitNorms(true);, +            // we can set this to another index option when we move away from storing payload.., +            //NESTED_FIELD_TYPE.setIndexOptions(FieldInfo.IndexOptions.DOCS_ONLY);, +            NESTED_FIELD_TYPE.freeze();, +                    context.docs().get(i).add(new Field(UidFieldMapper.NAME, uidField.uid(), Defaults.NESTED_FIELD_TYPE));, +++ b/src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java, +            IndexableField uidField = context.doc().getField(UidFieldMapper.NAME);, +                    nestedDoc.add(new Field(UidFieldMapper.NAME, uidField.stringValue(), UidFieldMapper.Defaults.NESTED_FIELD_TYPE));, +                    nestedDoc.add(new Field(UidFieldMapper.NAME, ((UidField) uidField).uid(), UidFieldMapper.Defaults.NESTED_FIELD_TYPE));, +            nestedDoc.add(new Field(TypeFieldMapper.NAME, nestedTypePathAsString, TypeFieldMapper.Defaults.FIELD_TYPE));, +++ b/src/main/java/org/elasticsearch/search/highlight/vectorhighlight/SourceScoreOrderFragmentsBuilder.java, +import org.apache.lucene.document.TextField;, +            fields[i] = new Field(mapper.names().indexName(), values.get(i).toString(), TextField.TYPE_NOT_STORED);, +++ b/src/main/java/org/elasticsearch/search/highlight/vectorhighlight/SourceSimpleFragmentsBuilder.java, +import org.apache.lucene.document.TextField;, +            fields[i] = new Field(mapper.names().indexName(), values.get(i).toString(), TextField.TYPE_NOT_STORED);, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/UidFieldMapper.java, +        public static final FieldType NESTED_FIELD_TYPE = new FieldType(AbstractFieldMapper.Defaults.FIELD_TYPE);, +, +            NESTED_FIELD_TYPE.setIndexed(true);, +            NESTED_FIELD_TYPE.setTokenized(false);, +            NESTED_FIELD_TYPE.setStored(false);, +            NESTED_FIELD_TYPE.setOmitNorms(true);, +            // we can set this to another index option when we move away from storing payload.., +            //NESTED_FIELD_TYPE.setIndexOptions(FieldInfo.IndexOptions.DOCS_ONLY);, +            NESTED_FIELD_TYPE.freeze();, +                    context.docs().get(i).add(new Field(UidFieldMapper.NAME, uidField.uid(), Defaults.NESTED_FIELD_TYPE));, +++ b/src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java, +            IndexableField uidField = context.doc().getField(UidFieldMapper.NAME);, +                    nestedDoc.add(new Field(UidFieldMapper.NAME, uidField.stringValue(), UidFieldMapper.Defaults.NESTED_FIELD_TYPE));, +                    nestedDoc.add(new Field(UidFieldMapper.NAME, ((UidField) uidField).uid(), UidFieldMapper.Defaults.NESTED_FIELD_TYPE));, +            nestedDoc.add(new Field(TypeFieldMapper.NAME, nestedTypePathAsString, TypeFieldMapper.Defaults.FIELD_TYPE));, +++ b/src/main/java/org/elasticsearch/search/highlight/vectorhighlight/SourceScoreOrderFragmentsBuilder.java, +import org.apache.lucene.document.TextField;, +            fields[i] = new Field(mapper.names().indexName(), values.get(i).toString(), TextField.TYPE_NOT_STORED);, +++ b/src/main/java/org/elasticsearch/search/highlight/vectorhighlight/SourceSimpleFragmentsBuilder.java, +import org.apache.lucene.document.TextField;, +            fields[i] = new Field(mapper.names().indexName(), values.get(i).toString(), TextField.TYPE_NOT_STORED);, +++ b/src/test/java/org/elasticsearch/test/unit/common/compress/CompressIndexInputOutputTests.java, +import org.apache.lucene.document.*;, +        doc.add(new Field("id", Integer.toString(id), StringField.TYPE_STORED));, +        doc.add(new Field("size", Integer.toString(size), StringField.TYPE_STORED));, +        doc.add(new Field("skip", RandomStringGenerator.random(50), StoredField.TYPE));, +        doc.add(new Field("count", Integer.toString(count), StringField.TYPE_STORED));, +        doc.add(new Field("field", sb.toString(), StringField.TYPE_STORED));, +        doc.add(new Field("skip", RandomStringGenerator.random(50), StoredField.TYPE));, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/UidFieldMapper.java, +        public static final FieldType NESTED_FIELD_TYPE = new FieldType(AbstractFieldMapper.Defaults.FIELD_TYPE);]