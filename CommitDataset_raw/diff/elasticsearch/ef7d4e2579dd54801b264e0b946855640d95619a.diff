[+++ b/marvel/src/main/java/org/elasticsearch/marvel/license/LicenseService.java, +import java.util.*;, +    private final LicensesClientService.AcknowledgementCallback acknowledgementCallback;, +        this.acknowledgementCallback = new LicensesClientService.AcknowledgementCallback() {, +            @Override, +            public List<String> acknowledge(License currentLicense, License newLicense) {, +                // TODO: add messages to be acknowledged when installing newLicense from currentLicense, +                // NOTE: currentLicense can be null, as a license registration can happen before, +                // a trial license could be generated, +                return Collections.emptyList();, +            }, +        };, +        clientService.register(FEATURE_NAME, TRIAL_LICENSE_OPTIONS, expirationLoggers, acknowledgementCallback, new InternalListener(this));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/license/LicenseService.java, +import java.util.*;, +    private final LicensesClientService.AcknowledgementCallback acknowledgementCallback;, +        this.acknowledgementCallback = new LicensesClientService.AcknowledgementCallback() {, +            @Override, +            public List<String> acknowledge(License currentLicense, License newLicense) {, +                // TODO: add messages to be acknowledged when installing newLicense from currentLicense, +                // NOTE: currentLicense can be null, as a license registration can happen before, +                // a trial license could be generated, +                return Collections.emptyList();, +            }, +        };, +        clientService.register(FEATURE_NAME, TRIAL_LICENSE_OPTIONS, expirationLoggers, acknowledgementCallback, new InternalListener(this));, +++ b/shield/src/main/java/org/elasticsearch/shield/license/LicenseService.java, +import java.util.Collections;, +import java.util.List;, +    private final LicensesClientService.AcknowledgementCallback acknowledgementCallback;, +        this.acknowledgementCallback = new LicensesClientService.AcknowledgementCallback() {, +            @Override, +            public List<String> acknowledge(License currentLicense, License newLicense) {, +                // TODO: add messages to be acknowledged when installing newLicense from currentLicense, +                // NOTE: currentLicense can be null, as a license registration can happen before, +                // a trial license could be generated, +                return Collections.emptyList();, +            }, +        };, +            licensesClientService.register(FEATURE_NAME, TRIAL_LICENSE_OPTIONS, expirationLoggers, acknowledgementCallback, new InternalListener());, +++ b/marvel/src/main/java/org/elasticsearch/marvel/license/LicenseService.java, +import java.util.*;, +    private final LicensesClientService.AcknowledgementCallback acknowledgementCallback;, +        this.acknowledgementCallback = new LicensesClientService.AcknowledgementCallback() {, +            @Override, +            public List<String> acknowledge(License currentLicense, License newLicense) {, +                // TODO: add messages to be acknowledged when installing newLicense from currentLicense, +                // NOTE: currentLicense can be null, as a license registration can happen before, +                // a trial license could be generated, +                return Collections.emptyList();, +            }, +        };, +        clientService.register(FEATURE_NAME, TRIAL_LICENSE_OPTIONS, expirationLoggers, acknowledgementCallback, new InternalListener(this));, +++ b/shield/src/main/java/org/elasticsearch/shield/license/LicenseService.java, +import java.util.Collections;, +import java.util.List;, +    private final LicensesClientService.AcknowledgementCallback acknowledgementCallback;, +        this.acknowledgementCallback = new LicensesClientService.AcknowledgementCallback() {, +            @Override, +            public List<String> acknowledge(License currentLicense, License newLicense) {, +                // TODO: add messages to be acknowledged when installing newLicense from currentLicense, +                // NOTE: currentLicense can be null, as a license registration can happen before, +                // a trial license could be generated, +                return Collections.emptyList();, +            }, +        };, +            licensesClientService.register(FEATURE_NAME, TRIAL_LICENSE_OPTIONS, expirationLoggers, acknowledgementCallback, new InternalListener());, +++ b/watcher/src/main/java/org/elasticsearch/watcher/license/LicenseService.java, +import java.util.*;, +    private final LicensesClientService.AcknowledgementCallback acknowledgementCallback;, +        this.acknowledgementCallback = new LicensesClientService.AcknowledgementCallback() {, +            @Override, +            public List<String> acknowledge(License currentLicense, License newLicense) {, +                // TODO: add messages to be acknowledged when installing newLicense from currentLicense, +                // NOTE: currentLicense can be null, as a license registration can happen before, +                // a trial license could be generated, +                return Collections.emptyList();, +            }, +        };, +        clientService.register(FEATURE_NAME, TRIAL_LICENSE_OPTIONS, expirationLoggers, acknowledgementCallback, new InternalListener(this));]