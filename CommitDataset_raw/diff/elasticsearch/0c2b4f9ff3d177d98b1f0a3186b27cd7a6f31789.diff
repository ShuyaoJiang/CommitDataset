[+++ b/GRADLE.CHEATSHEET.asciidoc, +As a quick helper, below are the equivalent commands from `maven` to `gradle`. You can also run `gradle tasks` to see all tasks that are available to run., +[cols="3*", options="header"], +|====, +| Maven                       | Gradle      | Description, +| `clean`                     | `clean`     | Delete anything that exists already., +| `test`                      | `test`      | Run all unit tests., +| `verify`                    | `check`     | Run all unit tests, plus extra checks (e.g., line length), +| `verify -Dskip.unit.tests`  | `integTest` | , +| `package -DskipTests`       | `assemble`  | Output is in `${project.projectDir}/build/distributions`, +| `install -DskipTests`       | `install`   | , +, +With Gradle, you can easily target specific `projects` to run commands against, and it will build all necessary dependencies to make it happen. For example, if you make a change to a specific test in the `x-pack` subproject, then you can specifically invoke its `test` task., +, +[source,bash], +----, +$ gradle :x-plugins:elasticsearch:x-pack:test -Dtests.class=*YourTests, +----, +, +This applies to any command that follows the Directed Acyclic Graph (DAG) for its dependencies. The above example would trigger Elasticsearch `core` to be built, as well as the test framework and any other dependencies that it may have.]