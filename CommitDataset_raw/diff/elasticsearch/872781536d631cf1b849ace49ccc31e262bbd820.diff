[+++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +import org.elasticsearch.index.store.memory.ByteBufferStore;, +        Store store = new ByteBufferStore(shardId, settings);, +//        Store store = new HeapStore(shardId, settings);, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +import org.elasticsearch.index.store.memory.ByteBufferStore;, +        Store store = new ByteBufferStore(shardId, settings);, +//        Store store = new HeapStore(shardId, settings);, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +import org.elasticsearch.index.store.memory.ByteBufferStore;, +import org.elasticsearch.index.store.memory.HeapStore;, +        } else if (type.equalsIgnoreCase("memory-direct")) {, +        } else if (type.equalsIgnoreCase("memory-heap")) {, +            store = new HeapStore(shardId, memorySettings);, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +import org.elasticsearch.index.store.memory.ByteBufferStore;, +        Store store = new ByteBufferStore(shardId, settings);, +//        Store store = new HeapStore(shardId, settings);, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +import org.elasticsearch.index.store.memory.ByteBufferStore;, +import org.elasticsearch.index.store.memory.HeapStore;, +        } else if (type.equalsIgnoreCase("memory-direct")) {, +        } else if (type.equalsIgnoreCase("memory-heap")) {, +            store = new HeapStore(shardId, memorySettings);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/store/StoreModule.java, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +import org.elasticsearch.index.store.memory.ByteBufferStore;, +        Store store = new ByteBufferStore(shardId, settings);, +//        Store store = new HeapStore(shardId, settings);, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +import org.elasticsearch.index.store.memory.ByteBufferStore;, +import org.elasticsearch.index.store.memory.HeapStore;, +        } else if (type.equalsIgnoreCase("memory-direct")) {, +        } else if (type.equalsIgnoreCase("memory-heap")) {, +            store = new HeapStore(shardId, memorySettings);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/store/StoreModule.java, +++ /dev/null, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +import org.elasticsearch.index.store.memory.ByteBufferStore;, +        Store store = new ByteBufferStore(shardId, settings);, +//        Store store = new HeapStore(shardId, settings);, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +import org.elasticsearch.index.store.memory.ByteBufferStore;, +import org.elasticsearch.index.store.memory.HeapStore;, +        } else if (type.equalsIgnoreCase("memory-direct")) {, +        } else if (type.equalsIgnoreCase("memory-heap")) {, +            store = new HeapStore(shardId, memorySettings);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/store/StoreModule.java, +++ /dev/null, +++ /dev/null, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +import org.elasticsearch.index.store.memory.ByteBufferStore;, +        Store store = new ByteBufferStore(shardId, settings);, +//        Store store = new HeapStore(shardId, settings);, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +import org.elasticsearch.index.store.memory.ByteBufferStore;, +import org.elasticsearch.index.store.memory.HeapStore;, +        } else if (type.equalsIgnoreCase("memory-direct")) {, +        } else if (type.equalsIgnoreCase("memory-heap")) {, +            store = new HeapStore(shardId, memorySettings);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/store/StoreModule.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +import org.elasticsearch.index.store.memory.ByteBufferStore;, +        Store store = new ByteBufferStore(shardId, settings);, +//        Store store = new HeapStore(shardId, settings);, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +import org.elasticsearch.index.store.memory.ByteBufferStore;, +import org.elasticsearch.index.store.memory.HeapStore;, +        } else if (type.equalsIgnoreCase("memory-direct")) {, +        } else if (type.equalsIgnoreCase("memory-heap")) {, +            store = new HeapStore(shardId, memorySettings);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/store/StoreModule.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +import org.elasticsearch.index.store.memory.ByteBufferStore;, +        Store store = new ByteBufferStore(shardId, settings);, +//        Store store = new HeapStore(shardId, settings);, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +import org.elasticsearch.index.store.memory.ByteBufferStore;, +import org.elasticsearch.index.store.memory.HeapStore;, +        } else if (type.equalsIgnoreCase("memory-direct")) {, +        } else if (type.equalsIgnoreCase("memory-heap")) {, +            store = new HeapStore(shardId, memorySettings);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/store/StoreModule.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +import org.elasticsearch.index.store.memory.ByteBufferStore;, +        Store store = new ByteBufferStore(shardId, settings);, +//        Store store = new HeapStore(shardId, settings);, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java]