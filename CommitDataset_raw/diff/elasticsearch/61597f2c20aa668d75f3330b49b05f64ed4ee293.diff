[+++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestUpdateSettingsAction.java, +            "error_trace",, +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestUpdateSettingsAction.java, +            "error_trace",, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestExplainAction.java, +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestUpdateSettingsAction.java, +            "error_trace",, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestExplainAction.java, +++ b/docs/reference/api-conventions.asciidoc, +// TEST[s/surprise_me/surprise_me&error_trace=false/ catch:request], +// Since the test system sends error_trace=true by default we have to override, +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestUpdateSettingsAction.java, +            "error_trace",, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestExplainAction.java, +++ b/docs/reference/api-conventions.asciidoc, +// TEST[s/surprise_me/surprise_me&error_trace=false/ catch:request], +// Since the test system sends error_trace=true by default we have to override, +++ b/docs/reference/modules/scripting/painless-debugging.asciidoc, +// TEST[s/_explain/_explain?error_trace=false/ catch:/painless_explain_error/], +// The test system sends error_trace=true by default for easier debugging so, +// we have to override it to get a normal shaped response, +// TEST[continued s/_update/_update?error_trace=false/ catch:/painless_explain_error/], +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestUpdateSettingsAction.java, +            "error_trace",, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestExplainAction.java, +++ b/docs/reference/api-conventions.asciidoc, +// TEST[s/surprise_me/surprise_me&error_trace=false/ catch:request], +// Since the test system sends error_trace=true by default we have to override, +++ b/docs/reference/modules/scripting/painless-debugging.asciidoc, +// TEST[s/_explain/_explain?error_trace=false/ catch:/painless_explain_error/], +// The test system sends error_trace=true by default for easier debugging so, +// we have to override it to get a normal shaped response, +// TEST[continued s/_update/_update?error_trace=false/ catch:/painless_explain_error/], +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ClientYamlTestClient.java, +    /**, +     * Query params that don't need to be declared in the spec, they are supported by default., +     */, +    private static final Set<String> ALWAYS_ACCEPTED_QUERY_STRING_PARAMS = Sets.newHashSet(, +            "error_trace", "filter_path", "pretty", "source");, +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestUpdateSettingsAction.java, +            "error_trace",, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestExplainAction.java, +++ b/docs/reference/api-conventions.asciidoc, +// TEST[s/surprise_me/surprise_me&error_trace=false/ catch:request], +// Since the test system sends error_trace=true by default we have to override, +++ b/docs/reference/modules/scripting/painless-debugging.asciidoc, +// TEST[s/_explain/_explain?error_trace=false/ catch:/painless_explain_error/], +// The test system sends error_trace=true by default for easier debugging so, +// we have to override it to get a normal shaped response, +// TEST[continued s/_update/_update?error_trace=false/ catch:/painless_explain_error/], +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ClientYamlTestClient.java, +    /**, +     * Query params that don't need to be declared in the spec, they are supported by default., +     */, +    private static final Set<String> ALWAYS_ACCEPTED_QUERY_STRING_PARAMS = Sets.newHashSet(, +            "error_trace", "filter_path", "pretty", "source");, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ClientYamlTestExecutionContext.java, +        requestParams.putIfAbsent("error_trace", "true"); // By default ask for error traces, this my be overridden by params, +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestUpdateSettingsAction.java, +            "error_trace",, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestExplainAction.java, +++ b/docs/reference/api-conventions.asciidoc, +// TEST[s/surprise_me/surprise_me&error_trace=false/ catch:request], +// Since the test system sends error_trace=true by default we have to override, +++ b/docs/reference/modules/scripting/painless-debugging.asciidoc, +// TEST[s/_explain/_explain?error_trace=false/ catch:/painless_explain_error/], +// The test system sends error_trace=true by default for easier debugging so, +// we have to override it to get a normal shaped response, +// TEST[continued s/_update/_update?error_trace=false/ catch:/painless_explain_error/], +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ClientYamlTestClient.java, +    /**, +     * Query params that don't need to be declared in the spec, they are supported by default., +     */, +    private static final Set<String> ALWAYS_ACCEPTED_QUERY_STRING_PARAMS = Sets.newHashSet(, +            "error_trace", "filter_path", "pretty", "source");, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ClientYamlTestExecutionContext.java, +        requestParams.putIfAbsent("error_trace", "true"); // By default ask for error traces, this my be overridden by params, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ESClientYamlSuiteTestCase.java, +        // Dump the stash on failure. Instead of dumping it in true json we escape `\n`s so stack traces are easier to read, +        logger.info("Stash dump on failure [{}]",, +                XContentHelper.toString(restTestExecutionContext.stash()).replace("\\n", "\n").replace("\\t", "\t"));]