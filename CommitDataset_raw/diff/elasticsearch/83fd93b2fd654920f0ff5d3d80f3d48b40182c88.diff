[+++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +import org.elasticsearch.common.time.DateFormatter;, +import org.elasticsearch.common.time.DateFormatters;, +import org.elasticsearch.common.time.JavaDateMathParser;, +import java.time.Instant;, +import java.time.ZoneId;, +import java.time.ZoneOffset;, +                dateMathExpressionResolver = new DateMathExpressionResolver(),, +        private static final DateFormatter DEFAULT_DATE_FORMATTER = DateFormatters.forPattern("uuuu.MM.dd");, +                                DateFormatter dateFormatter;, +                                final ZoneId timeZone;, +                                    dateFormatter = DEFAULT_DATE_FORMATTER;, +                                    timeZone = ZoneOffset.UTC;, +                                        timeZone = ZoneId.of(dateFormatterPatternAndTimeZoneId.substring(formatPatternTimeZoneSeparatorIndex + 1));, +                                        timeZone = ZoneOffset.UTC;, +                                    dateFormatter = DateFormatters.forPattern(dateFormatterPattern);, +                                DateFormatter formatter = dateFormatter.withZone(timeZone);, +                                DateMathParser dateMathParser = new JavaDateMathParser(formatter);, +                                long millis = dateMathParser.parse(mathExpression, context::getStartTime, false, timeZone);, +                                String time = formatter.format(Instant.ofEpochMilli(millis));, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +import org.elasticsearch.common.time.DateFormatter;, +import org.elasticsearch.common.time.DateFormatters;, +import org.elasticsearch.common.time.JavaDateMathParser;, +import java.time.Instant;, +import java.time.ZoneId;, +import java.time.ZoneOffset;, +                dateMathExpressionResolver = new DateMathExpressionResolver(),, +        private static final DateFormatter DEFAULT_DATE_FORMATTER = DateFormatters.forPattern("uuuu.MM.dd");, +                                DateFormatter dateFormatter;, +                                final ZoneId timeZone;, +                                    dateFormatter = DEFAULT_DATE_FORMATTER;, +                                    timeZone = ZoneOffset.UTC;, +                                        timeZone = ZoneId.of(dateFormatterPatternAndTimeZoneId.substring(formatPatternTimeZoneSeparatorIndex + 1));, +                                        timeZone = ZoneOffset.UTC;, +                                    dateFormatter = DateFormatters.forPattern(dateFormatterPattern);, +                                DateFormatter formatter = dateFormatter.withZone(timeZone);, +                                DateMathParser dateMathParser = new JavaDateMathParser(formatter);, +                                long millis = dateMathParser.parse(mathExpression, context::getStartTime, false, timeZone);, +                                String time = formatter.format(Instant.ofEpochMilli(millis));, +++ b/server/src/test/java/org/elasticsearch/cluster/metadata/DateMathExpressionResolverTests.java, +    private final DateMathExpressionResolver expressionResolver = new DateMathExpressionResolver();]