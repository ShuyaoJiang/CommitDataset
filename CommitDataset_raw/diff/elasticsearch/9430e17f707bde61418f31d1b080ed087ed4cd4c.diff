[+++ b/core/src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java, +import org.elasticsearch.common.collect.ImmutableOpenMap;, +            ImmutableOpenMap.Builder<String, Set<ClusterBlock>> indicesBuilder = ImmutableOpenMap.builder();, +    public ImmutableOpenMap<String, Set<ClusterBlock>> indices(ClusterBlockLevel level) {, +        static final ImmutableLevelHolder EMPTY = new ImmutableLevelHolder(emptySet(), ImmutableOpenMap.of());, +        private final ImmutableOpenMap<String, Set<ClusterBlock>> indices;, +        ImmutableLevelHolder(Set<ClusterBlock> global, ImmutableOpenMap<String, Set<ClusterBlock>> indices) {, +        public ImmutableOpenMap<String, Set<ClusterBlock>> indices() {, +++ b/core/src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java, +import org.elasticsearch.common.collect.ImmutableOpenMap;, +            ImmutableOpenMap.Builder<String, Set<ClusterBlock>> indicesBuilder = ImmutableOpenMap.builder();, +    public ImmutableOpenMap<String, Set<ClusterBlock>> indices(ClusterBlockLevel level) {, +        static final ImmutableLevelHolder EMPTY = new ImmutableLevelHolder(emptySet(), ImmutableOpenMap.of());, +        private final ImmutableOpenMap<String, Set<ClusterBlock>> indices;, +        ImmutableLevelHolder(Set<ClusterBlock> global, ImmutableOpenMap<String, Set<ClusterBlock>> indices) {, +        public ImmutableOpenMap<String, Set<ClusterBlock>> indices() {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingTableValidation.java, +import static java.util.Collections.emptyMap;, +, +            return emptyMap();, +            indicesFailures = emptyMap();, +++ b/core/src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java, +import org.elasticsearch.common.collect.ImmutableOpenMap;, +            ImmutableOpenMap.Builder<String, Set<ClusterBlock>> indicesBuilder = ImmutableOpenMap.builder();, +    public ImmutableOpenMap<String, Set<ClusterBlock>> indices(ClusterBlockLevel level) {, +        static final ImmutableLevelHolder EMPTY = new ImmutableLevelHolder(emptySet(), ImmutableOpenMap.of());, +        private final ImmutableOpenMap<String, Set<ClusterBlock>> indices;, +        ImmutableLevelHolder(Set<ClusterBlock> global, ImmutableOpenMap<String, Set<ClusterBlock>> indices) {, +        public ImmutableOpenMap<String, Set<ClusterBlock>> indices() {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingTableValidation.java, +import static java.util.Collections.emptyMap;, +, +            return emptyMap();, +            indicesFailures = emptyMap();, +++ b/core/src/main/java/org/elasticsearch/common/Table.java, +import static java.util.Collections.emptyMap;, +, +                mAttr = emptyMap();, +++ b/core/src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java, +import org.elasticsearch.common.collect.ImmutableOpenMap;, +            ImmutableOpenMap.Builder<String, Set<ClusterBlock>> indicesBuilder = ImmutableOpenMap.builder();, +    public ImmutableOpenMap<String, Set<ClusterBlock>> indices(ClusterBlockLevel level) {, +        static final ImmutableLevelHolder EMPTY = new ImmutableLevelHolder(emptySet(), ImmutableOpenMap.of());, +        private final ImmutableOpenMap<String, Set<ClusterBlock>> indices;, +        ImmutableLevelHolder(Set<ClusterBlock> global, ImmutableOpenMap<String, Set<ClusterBlock>> indices) {, +        public ImmutableOpenMap<String, Set<ClusterBlock>> indices() {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingTableValidation.java, +import static java.util.Collections.emptyMap;, +, +            return emptyMap();, +            indicesFailures = emptyMap();, +++ b/core/src/main/java/org/elasticsearch/common/Table.java, +import static java.util.Collections.emptyMap;, +, +                mAttr = emptyMap();, +++ b/core/src/main/java/org/elasticsearch/common/path/PathTrie.java, +import java.util.HashMap;, +import static java.util.Collections.emptyMap;, +import static java.util.Collections.unmodifiableMap;, +    private final TrieNode root;, +        root = new TrieNode(new String(new char[]{separator}), null, wildcard);, +    public class TrieNode {, +        private Map<String, TrieNode> children;, +        public TrieNode(String key, T value, String wildcard) {, +            this.children = emptyMap();, +        public synchronized void addChild(TrieNode child) {, +            addInnerChild(child.key, child);, +        }, +, +        private void addInnerChild(String key, TrieNode child) {, +            Map<String, TrieNode> newChildren = new HashMap<>(children);, +            newChildren.put(key, child);, +            children = unmodifiableMap(newChildren);, +            TrieNode node = children.get(key);, +                T nodeValue = index == path.length - 1 ? value : null;, +                node = new TrieNode(token, nodeValue, wildcard);, +                addInnerChild(key, node);, +            TrieNode node = children.get(token);, +        private void put(Map<String, String> params, TrieNode node, String value) {, +, +        @Override, +        public String toString() {, +            return key;, +        }, +++ b/core/src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java, +import org.elasticsearch.common.collect.ImmutableOpenMap;, +            ImmutableOpenMap.Builder<String, Set<ClusterBlock>> indicesBuilder = ImmutableOpenMap.builder();, +    public ImmutableOpenMap<String, Set<ClusterBlock>> indices(ClusterBlockLevel level) {, +        static final ImmutableLevelHolder EMPTY = new ImmutableLevelHolder(emptySet(), ImmutableOpenMap.of());, +        private final ImmutableOpenMap<String, Set<ClusterBlock>> indices;, +        ImmutableLevelHolder(Set<ClusterBlock> global, ImmutableOpenMap<String, Set<ClusterBlock>> indices) {, +        public ImmutableOpenMap<String, Set<ClusterBlock>> indices() {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingTableValidation.java, +import static java.util.Collections.emptyMap;, +, +            return emptyMap();, +            indicesFailures = emptyMap();, +++ b/core/src/main/java/org/elasticsearch/common/Table.java, +import static java.util.Collections.emptyMap;, +]