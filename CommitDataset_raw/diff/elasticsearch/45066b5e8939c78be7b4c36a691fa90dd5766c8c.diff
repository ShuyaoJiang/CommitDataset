[+++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                assert assertPrimaryMode();, +                assert assertReplicationTarget();, +    private boolean assertPrimaryMode() {, +        assert shardRouting.primary() && replicationTracker.isPrimaryMode() : "shard " + shardRouting + " is not a primary shard in primary mode";, +        return true;, +    private boolean assertReplicationTarget() {, +        assert replicationTracker.isPrimaryMode() == false : "shard " + shardRouting + " in primary mode cannot be a replication target";, +        return true;, +        assert assertPrimaryMode();, +        assert assertPrimaryMode();, +        assert assertPrimaryMode();, +        assert assertPrimaryMode();, +        assert assertPrimaryMode();, +        assert shardRouting.primary() : "only call maybeSyncGlobalCheckpoint on primary shard";, +        assert assertPrimaryMode();, +        assert assertPrimaryMode();, +        assert assertReplicationTarget();, +        assert shardRouting.primary() && shardRouting.isRelocationTarget() : "only primary relocation target can update allocation IDs from primary context: " + shardRouting;, +        assert assertPrimaryMode();, +        assert shardRouting.primary() : "acquirePrimaryOperationPermit should only be called on primary shard: " + shardRouting;, +                            assert assertReplicationTarget();, +++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                assert assertPrimaryMode();, +                assert assertReplicationTarget();, +    private boolean assertPrimaryMode() {, +        assert shardRouting.primary() && replicationTracker.isPrimaryMode() : "shard " + shardRouting + " is not a primary shard in primary mode";, +        return true;, +    private boolean assertReplicationTarget() {, +        assert replicationTracker.isPrimaryMode() == false : "shard " + shardRouting + " in primary mode cannot be a replication target";, +        return true;, +        assert assertPrimaryMode();, +        assert assertPrimaryMode();, +        assert assertPrimaryMode();, +        assert assertPrimaryMode();, +        assert assertPrimaryMode();, +        assert shardRouting.primary() : "only call maybeSyncGlobalCheckpoint on primary shard";, +        assert assertPrimaryMode();, +        assert assertPrimaryMode();, +        assert assertReplicationTarget();, +        assert shardRouting.primary() && shardRouting.isRelocationTarget() : "only primary relocation target can update allocation IDs from primary context: " + shardRouting;, +        assert assertPrimaryMode();, +        assert shardRouting.primary() : "acquirePrimaryOperationPermit should only be called on primary shard: " + shardRouting;, +                            assert assertReplicationTarget();, +++ b/server/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +import org.elasticsearch.Assertions;, +            CountDownLatch latch = new CountDownLatch(1);, +                    latch.countDown();, +            latch.await();, +        if (Assertions.ENABLED && indexShard.routingEntry().isRelocationTarget() == false) {, +            assertThat(expectThrows(AssertionError.class, () -> indexShard.acquireReplicaOperationPermit(primaryTerm,, +                indexShard.getGlobalCheckpoint(), new ActionListener<Releasable>() {, +                    @Override, +                    public void onResponse(Releasable releasable) {, +                        fail();, +                    }, +, +                    @Override, +                    public void onFailure(Exception e) {, +                        fail();, +                    }, +                },, +                ThreadPool.Names.WRITE, "")).getMessage(), containsString("in primary mode cannot be a replication target"));, +        }, +, +        if (shardRouting.primary() == false && Assertions.ENABLED) {, +            final AssertionError e =, +                    expectThrows(AssertionError.class,, +            assertThat(e, hasToString(containsString("acquirePrimaryOperationPermit should only be called on primary shard")));]