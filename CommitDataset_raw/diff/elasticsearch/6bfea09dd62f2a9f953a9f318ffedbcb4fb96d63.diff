[+++ b/server/src/main/java/org/elasticsearch/persistent/AllocatedPersistentTask.java, +    private String persistentTaskId;, +    public String getPersistentTaskId() {, +    void init(PersistentTasksService persistentTasksService, TaskManager taskManager, Logger logger, String persistentTaskId, long, +++ b/server/src/main/java/org/elasticsearch/persistent/AllocatedPersistentTask.java, +    private String persistentTaskId;, +    public String getPersistentTaskId() {, +    void init(PersistentTasksService persistentTasksService, TaskManager taskManager, Logger logger, String persistentTaskId, long, +++ b/server/src/main/java/org/elasticsearch/persistent/CompletionPersistentTaskAction.java, +import static org.elasticsearch.action.ValidateActions.addValidationError;, +, +        private String taskId;, +        public Request(String taskId, Exception exception) {, +            taskId = in.readString();, +            out.writeString(taskId);, +            ActionRequestValidationException validationException = null;, +            if (taskId == null) {, +                validationException = addValidationError("task id is missing", validationException);, +            }, +            return validationException;, +            return Objects.equals(taskId, request.taskId) &&, +++ b/server/src/main/java/org/elasticsearch/persistent/AllocatedPersistentTask.java, +    private String persistentTaskId;, +    public String getPersistentTaskId() {, +    void init(PersistentTasksService persistentTasksService, TaskManager taskManager, Logger logger, String persistentTaskId, long, +++ b/server/src/main/java/org/elasticsearch/persistent/CompletionPersistentTaskAction.java, +import static org.elasticsearch.action.ValidateActions.addValidationError;, +, +        private String taskId;, +        public Request(String taskId, Exception exception) {, +            taskId = in.readString();, +            out.writeString(taskId);, +            ActionRequestValidationException validationException = null;, +            if (taskId == null) {, +                validationException = addValidationError("task id is missing", validationException);, +            }, +            return validationException;, +            return Objects.equals(taskId, request.taskId) &&, +++ b/server/src/main/java/org/elasticsearch/persistent/CreatePersistentTaskAction.java, +        private String taskId;, +, +        public Request(String taskId, String action, PersistentTaskRequest request) {, +            this.taskId = taskId;, +            taskId = in.readString();, +            out.writeString(taskId);, +            if (this.taskId == null) {, +                validationException = addValidationError("task id must be specified", validationException);, +            }, +            return Objects.equals(taskId, request1.taskId) && Objects.equals(action, request1.action) &&, +            return Objects.hash(taskId, action, request);, +        public String getTaskId() {, +            return taskId;, +        }, +, +        public void setTaskId(String taskId) {, +            this.taskId = taskId;, +        }, +, +        public RequestBuilder setTaskId(String taskId) {, +            request.setTaskId(taskId);, +            return this;, +        }, +, +            persistentTasksClusterService.createPersistentTask(request.taskId, request.action, request.request,, +++ b/server/src/main/java/org/elasticsearch/persistent/AllocatedPersistentTask.java, +    private String persistentTaskId;, +    public String getPersistentTaskId() {, +    void init(PersistentTasksService persistentTasksService, TaskManager taskManager, Logger logger, String persistentTaskId, long, +++ b/server/src/main/java/org/elasticsearch/persistent/CompletionPersistentTaskAction.java, +import static org.elasticsearch.action.ValidateActions.addValidationError;, +, +        private String taskId;, +        public Request(String taskId, Exception exception) {, +            taskId = in.readString();, +            out.writeString(taskId);, +            ActionRequestValidationException validationException = null;, +            if (taskId == null) {, +                validationException = addValidationError("task id is missing", validationException);, +            }, +            return validationException;, +            return Objects.equals(taskId, request.taskId) &&, +++ b/server/src/main/java/org/elasticsearch/persistent/CreatePersistentTaskAction.java, +        private String taskId;, +, +        public Request(String taskId, String action, PersistentTaskRequest request) {, +            this.taskId = taskId;, +            taskId = in.readString();, +            out.writeString(taskId);, +            if (this.taskId == null) {, +                validationException = addValidationError("task id must be specified", validationException);, +            }, +            return Objects.equals(taskId, request1.taskId) && Objects.equals(action, request1.action) &&, +            return Objects.hash(taskId, action, request);, +        public String getTaskId() {, +            return taskId;, +        }, +, +        public void setTaskId(String taskId) {, +            this.taskId = taskId;, +        }]