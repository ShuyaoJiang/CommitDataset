[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/ParsedQuery.java, +    public static ParsedQuery MATCH_ALL_PARSED_QUERY = new ParsedQuery(Queries.MATCH_ALL_QUERY, ImmutableMap.<String, Filter>of());, +    public ParsedQuery(Query query, ImmutableMap<String, Filter> namedFilters) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/ParsedQuery.java, +    public static ParsedQuery MATCH_ALL_PARSED_QUERY = new ParsedQuery(Queries.MATCH_ALL_QUERY, ImmutableMap.<String, Filter>of());, +    public ParsedQuery(Query query, ImmutableMap<String, Filter> namedFilters) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/HasChildFilterParser.java, +        SearchContext searchContext = SearchContext.current();, +, +        HasChildFilter childFilter = new HasChildFilter(query, scope, childType, parentType, searchContext);, +        searchContext.addScopePhase(childFilter);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/ParsedQuery.java, +    public static ParsedQuery MATCH_ALL_PARSED_QUERY = new ParsedQuery(Queries.MATCH_ALL_QUERY, ImmutableMap.<String, Filter>of());, +    public ParsedQuery(Query query, ImmutableMap<String, Filter> namedFilters) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/HasChildFilterParser.java, +        SearchContext searchContext = SearchContext.current();, +, +        HasChildFilter childFilter = new HasChildFilter(query, scope, childType, parentType, searchContext);, +        searchContext.addScopePhase(childFilter);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/HasChildQueryParser.java, +        SearchContext searchContext = SearchContext.current();, +        HasChildFilter childFilter = new HasChildFilter(query, scope, childType, parentType, searchContext);, +        searchContext.addScopePhase(childFilter);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/ParsedQuery.java, +    public static ParsedQuery MATCH_ALL_PARSED_QUERY = new ParsedQuery(Queries.MATCH_ALL_QUERY, ImmutableMap.<String, Filter>of());, +    public ParsedQuery(Query query, ImmutableMap<String, Filter> namedFilters) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/HasChildFilterParser.java, +        SearchContext searchContext = SearchContext.current();, +, +        HasChildFilter childFilter = new HasChildFilter(query, scope, childType, parentType, searchContext);, +        searchContext.addScopePhase(childFilter);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/HasChildQueryParser.java, +        SearchContext searchContext = SearchContext.current();, +        HasChildFilter childFilter = new HasChildFilter(query, scope, childType, parentType, searchContext);, +        searchContext.addScopePhase(childFilter);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/QueryParseContext.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/ParsedQuery.java, +    public static ParsedQuery MATCH_ALL_PARSED_QUERY = new ParsedQuery(Queries.MATCH_ALL_QUERY, ImmutableMap.<String, Filter>of());, +    public ParsedQuery(Query query, ImmutableMap<String, Filter> namedFilters) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/HasChildFilterParser.java, +        SearchContext searchContext = SearchContext.current();, +, +        HasChildFilter childFilter = new HasChildFilter(query, scope, childType, parentType, searchContext);, +        searchContext.addScopePhase(childFilter);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/HasChildQueryParser.java, +        SearchContext searchContext = SearchContext.current();, +        HasChildFilter childFilter = new HasChildFilter(query, scope, childType, parentType, searchContext);, +        searchContext.addScopePhase(childFilter);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/QueryParseContext.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/TopChildrenQueryParser.java, +import org.elasticsearch.search.internal.SearchContext;, +        SearchContext searchContext = SearchContext.current();, +        searchContext.addScopePhase(childQuery);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/ParsedQuery.java, +    public static ParsedQuery MATCH_ALL_PARSED_QUERY = new ParsedQuery(Queries.MATCH_ALL_QUERY, ImmutableMap.<String, Filter>of());, +    public ParsedQuery(Query query, ImmutableMap<String, Filter> namedFilters) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/HasChildFilterParser.java, +        SearchContext searchContext = SearchContext.current();, +, +        HasChildFilter childFilter = new HasChildFilter(query, scope, childType, parentType, searchContext);, +        searchContext.addScopePhase(childFilter);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/HasChildQueryParser.java, +        SearchContext searchContext = SearchContext.current();, +        HasChildFilter childFilter = new HasChildFilter(query, scope, childType, parentType, searchContext);, +        searchContext.addScopePhase(childFilter);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/QueryParseContext.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/TopChildrenQueryParser.java, +import org.elasticsearch.search.internal.SearchContext;, +        SearchContext searchContext = SearchContext.current();, +        searchContext.addScopePhase(childQuery);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/XContentIndexQueryParser.java, +        return new ParsedQuery(query, parseContext.copyNamedFilters());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/ParsedQuery.java, +    public static ParsedQuery MATCH_ALL_PARSED_QUERY = new ParsedQuery(Queries.MATCH_ALL_QUERY, ImmutableMap.<String, Filter>of());, +    public ParsedQuery(Query query, ImmutableMap<String, Filter> namedFilters) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/HasChildFilterParser.java, +        SearchContext searchContext = SearchContext.current();, +, +        HasChildFilter childFilter = new HasChildFilter(query, scope, childType, parentType, searchContext);, +        searchContext.addScopePhase(childFilter);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/HasChildQueryParser.java, +        SearchContext searchContext = SearchContext.current();, +        HasChildFilter childFilter = new HasChildFilter(query, scope, childType, parentType, searchContext);, +        searchContext.addScopePhase(childFilter);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/QueryParseContext.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/TopChildrenQueryParser.java, +import org.elasticsearch.search.internal.SearchContext;, +        SearchContext searchContext = SearchContext.current();, +        searchContext.addScopePhase(childQuery);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/XContentIndexQueryParser.java, +        return new ParsedQuery(query, parseContext.copyNamedFilters());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/internal/SearchContext.java, +import java.util.ArrayList;, +    private List<ScopePhase> scopePhases = null;, +, +        if (scopePhases != null) {, +            for (ScopePhase scopePhase : scopePhases) {, +, +    public List<ScopePhase> scopePhases() {, +        return this.scopePhases;]