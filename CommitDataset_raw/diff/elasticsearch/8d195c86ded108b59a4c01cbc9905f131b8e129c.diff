[+++ b/server/src/main/java/org/elasticsearch/index/seqno/CountedBitSet.java, +public final class CountedBitSet {, +    // Below methods are pkg-private for testing, +    int cardinality() {, +    int length() {, +++ b/server/src/main/java/org/elasticsearch/index/seqno/CountedBitSet.java, +public final class CountedBitSet {, +    // Below methods are pkg-private for testing, +    int cardinality() {, +    int length() {, +++ b/server/src/main/java/org/elasticsearch/index/seqno/LocalCheckpointTracker.java, +    final LongObjectHashMap<CountedBitSet> processedSeqNo = new LongObjectHashMap<>();, +        final CountedBitSet bitSet = getBitSetForSeqNo(seqNo);, +            CountedBitSet current = processedSeqNo.get(bitSetKey);, +                    final CountedBitSet removed = processedSeqNo.remove(bitSetKey);, +    private CountedBitSet getBitSetForSeqNo(final long seqNo) {, +        final CountedBitSet bitSet;, +++ b/server/src/main/java/org/elasticsearch/index/seqno/CountedBitSet.java, +public final class CountedBitSet {, +    // Below methods are pkg-private for testing, +    int cardinality() {, +    int length() {, +++ b/server/src/main/java/org/elasticsearch/index/seqno/LocalCheckpointTracker.java, +    final LongObjectHashMap<CountedBitSet> processedSeqNo = new LongObjectHashMap<>();, +        final CountedBitSet bitSet = getBitSetForSeqNo(seqNo);, +            CountedBitSet current = processedSeqNo.get(bitSetKey);, +                    final CountedBitSet removed = processedSeqNo.remove(bitSetKey);, +    private CountedBitSet getBitSetForSeqNo(final long seqNo) {, +        final CountedBitSet bitSet;, +++ b/server/src/main/java/org/elasticsearch/index/translog/MultiSnapshot.java, +        private final LongObjectHashMap<CountedBitSet> bitSets = new LongObjectHashMap<>();, +            CountedBitSet bitset = bitSets.get(key);, +++ b/server/src/main/java/org/elasticsearch/index/seqno/CountedBitSet.java, +public final class CountedBitSet {, +    // Below methods are pkg-private for testing, +    int cardinality() {, +    int length() {, +++ b/server/src/main/java/org/elasticsearch/index/seqno/LocalCheckpointTracker.java, +    final LongObjectHashMap<CountedBitSet> processedSeqNo = new LongObjectHashMap<>();, +        final CountedBitSet bitSet = getBitSetForSeqNo(seqNo);, +            CountedBitSet current = processedSeqNo.get(bitSetKey);, +                    final CountedBitSet removed = processedSeqNo.remove(bitSetKey);, +    private CountedBitSet getBitSetForSeqNo(final long seqNo) {, +        final CountedBitSet bitSet;, +++ b/server/src/main/java/org/elasticsearch/index/translog/MultiSnapshot.java, +        private final LongObjectHashMap<CountedBitSet> bitSets = new LongObjectHashMap<>();, +            CountedBitSet bitset = bitSets.get(key);, +++ b/server/src/test/java/org/elasticsearch/index/seqno/CountedBitSetTests.java, +++ b/server/src/main/java/org/elasticsearch/index/seqno/CountedBitSet.java, +public final class CountedBitSet {, +    // Below methods are pkg-private for testing, +    int cardinality() {, +    int length() {, +++ b/server/src/main/java/org/elasticsearch/index/seqno/LocalCheckpointTracker.java, +    final LongObjectHashMap<CountedBitSet> processedSeqNo = new LongObjectHashMap<>();, +        final CountedBitSet bitSet = getBitSetForSeqNo(seqNo);, +            CountedBitSet current = processedSeqNo.get(bitSetKey);, +                    final CountedBitSet removed = processedSeqNo.remove(bitSetKey);, +    private CountedBitSet getBitSetForSeqNo(final long seqNo) {, +        final CountedBitSet bitSet;, +++ b/server/src/main/java/org/elasticsearch/index/translog/MultiSnapshot.java, +        private final LongObjectHashMap<CountedBitSet> bitSets = new LongObjectHashMap<>();, +            CountedBitSet bitset = bitSets.get(key);, +++ b/server/src/test/java/org/elasticsearch/index/seqno/CountedBitSetTests.java, +++ b/server/src/test/java/org/elasticsearch/index/seqno/LocalCheckpointTrackerTests.java, +        assertThat(tracker.processedSeqNo, new BaseMatcher<LongObjectHashMap<CountedBitSet>>() {]