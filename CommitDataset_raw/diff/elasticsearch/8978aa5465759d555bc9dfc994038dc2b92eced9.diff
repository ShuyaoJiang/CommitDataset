[+++ b/docs/reference/query-dsl/queries/template-query.asciidoc, +template parameters. Templating is based on Mustache. For simple token substitution all you provide, +is a query containing some variable that you want to substitute and the actual, +values:, +            "query": { "match": { "text": "{query_string}" }}},, +                "query_string" : "all about search", +The above request is translated into:, +, +[source,js], +------------------------------------------, +GET /_search, +{, +    "query": {, +        "match": {, +            "text": "all about search", +        }, +    }, +}, +, +------------------------------------------, +            "query": "{ \"match\": { \"text\": \"{query_string}\" }}}", <1>, +                "query_string" : "all about search", +==== Stored templates, +, +In order to execute the stored template, reference it by name in the `file`, +            "file": "my_template", <1>, +                "query_string" : "all about search", +------------------------------------------, +<1> Name of the the query template in `config/scripts/`, i.e., `my_template.mustache`., +Alternatively, you can register a query template in the special `.scripts` index with:, +, +[source,js], +------------------------------------------, +PUT /_search/template/my_template, +{, +    "template": { "match": { "text": "{query_string}" }}},, +}, +------------------------------------------, +, +and refer to it in the `template` query with the `id` parameter:, +, +, +[source,js], +------------------------------------------, +GET /_search, +{, +    "query": {, +        "template": {, +            "id": "my_template", <1>, +            "params" : {, +                "query_string" : "all about search", +            }, +        }, +    }, +}]