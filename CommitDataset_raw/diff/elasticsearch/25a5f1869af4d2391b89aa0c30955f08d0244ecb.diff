[+++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/remote/RemoteScrollableHitSource.java, +import org.elasticsearch.common.ParsingException;, +                            } catch (ParsingException e) {, +                                /* Because we're streaming the response we can't get a copy of it here. The best we can do is hint that it, +                                 * is totally wrong and we're probably not talking to Elasticsearch. */, +                                throw new ElasticsearchException(, +                                        "Error parsing the response, remote is likely not an Elasticsearch instance", e);, +                            throw new ElasticsearchException("Error deserializing response, remote is likely not an Elasticsearch instance",, +                                    e);, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/remote/RemoteScrollableHitSource.java, +import org.elasticsearch.common.ParsingException;, +                            } catch (ParsingException e) {, +                                /* Because we're streaming the response we can't get a copy of it here. The best we can do is hint that it, +                                 * is totally wrong and we're probably not talking to Elasticsearch. */, +                                throw new ElasticsearchException(, +                                        "Error parsing the response, remote is likely not an Elasticsearch instance", e);, +                            throw new ElasticsearchException("Error deserializing response, remote is likely not an Elasticsearch instance",, +                                    e);, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/remote/RemoteScrollableHitSourceTests.java, +    public void testInvalidJsonThinksRemoveIsNotES() throws IOException {, +        Exception e = expectThrows(RuntimeException.class, () -> sourceWithMockedRemoteCall("some_text.txt").doStart(null));, +        assertEquals("Error parsing the response, remote is likely not an Elasticsearch instance", e.getCause().getCause().getMessage());, +    }, +, +    public void testUnexpectedJsonThinksRemoveIsNotES() throws IOException {, +        // Use the response from a main action instead of a proper start response to generate a parse error, +        Exception e = expectThrows(RuntimeException.class, () -> sourceWithMockedRemoteCall("main/2_3_3.json").doStart(null));, +        assertEquals("Error parsing the response, remote is likely not an Elasticsearch instance", e.getCause().getCause().getMessage());, +    }, +, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/remote/RemoteScrollableHitSource.java, +import org.elasticsearch.common.ParsingException;, +                            } catch (ParsingException e) {, +                                /* Because we're streaming the response we can't get a copy of it here. The best we can do is hint that it, +                                 * is totally wrong and we're probably not talking to Elasticsearch. */, +                                throw new ElasticsearchException(, +                                        "Error parsing the response, remote is likely not an Elasticsearch instance", e);, +                            throw new ElasticsearchException("Error deserializing response, remote is likely not an Elasticsearch instance",, +                                    e);, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/remote/RemoteScrollableHitSourceTests.java, +    public void testInvalidJsonThinksRemoveIsNotES() throws IOException {, +        Exception e = expectThrows(RuntimeException.class, () -> sourceWithMockedRemoteCall("some_text.txt").doStart(null));, +        assertEquals("Error parsing the response, remote is likely not an Elasticsearch instance", e.getCause().getCause().getMessage());, +    }, +, +    public void testUnexpectedJsonThinksRemoveIsNotES() throws IOException {, +        // Use the response from a main action instead of a proper start response to generate a parse error, +        Exception e = expectThrows(RuntimeException.class, () -> sourceWithMockedRemoteCall("main/2_3_3.json").doStart(null));, +        assertEquals("Error parsing the response, remote is likely not an Elasticsearch instance", e.getCause().getCause().getMessage());, +    }, +, +++ b/modules/reindex/src/test/resources/responses/some_text.txt, +I'm just text!]