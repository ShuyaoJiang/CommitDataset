[+++ b/server/src/main/java/org/elasticsearch/cluster/coordination/Coordinator.java, +        logger.debug("{}: coordinator becoming CANDIDATE in term {} (was {}, lastKnownLeader was [{}])",, +            method, getCurrentTerm(), mode, lastKnownLeader);, +        logger.debug("{}: coordinator becoming LEADER in term {} (was {}, lastKnownLeader was [{}])",, +            method, getCurrentTerm(), mode, lastKnownLeader);, +        logger.debug("{}: coordinator becoming FOLLOWER of [{}] in term {} (was {}, lastKnownLeader was [{}])",, +            method, leaderNode, getCurrentTerm(), mode, lastKnownLeader);, +++ b/server/src/main/java/org/elasticsearch/cluster/coordination/Coordinator.java, +        logger.debug("{}: coordinator becoming CANDIDATE in term {} (was {}, lastKnownLeader was [{}])",, +            method, getCurrentTerm(), mode, lastKnownLeader);, +        logger.debug("{}: coordinator becoming LEADER in term {} (was {}, lastKnownLeader was [{}])",, +            method, getCurrentTerm(), mode, lastKnownLeader);, +        logger.debug("{}: coordinator becoming FOLLOWER of [{}] in term {} (was {}, lastKnownLeader was [{}])",, +            method, leaderNode, getCurrentTerm(), mode, lastKnownLeader);, +++ b/server/src/main/java/org/elasticsearch/cluster/coordination/LeaderChecker.java, +                logger.trace("already closed, doing nothing");, +                logger.trace("closed check scheduler woken up, doing nothing");, +                logger.trace("already closed, not failing leader");, +++ b/server/src/main/java/org/elasticsearch/cluster/coordination/Coordinator.java, +        logger.debug("{}: coordinator becoming CANDIDATE in term {} (was {}, lastKnownLeader was [{}])",, +            method, getCurrentTerm(), mode, lastKnownLeader);, +        logger.debug("{}: coordinator becoming LEADER in term {} (was {}, lastKnownLeader was [{}])",, +            method, getCurrentTerm(), mode, lastKnownLeader);, +        logger.debug("{}: coordinator becoming FOLLOWER of [{}] in term {} (was {}, lastKnownLeader was [{}])",, +            method, leaderNode, getCurrentTerm(), mode, lastKnownLeader);, +++ b/server/src/main/java/org/elasticsearch/cluster/coordination/LeaderChecker.java, +                logger.trace("already closed, doing nothing");, +                logger.trace("closed check scheduler woken up, doing nothing");, +                logger.trace("already closed, not failing leader");, +++ b/server/src/main/java/org/elasticsearch/cluster/service/ClusterApplierService.java, +                logger.info("{}, term: {}, version: {}, reason: {}",, +                    summary, newClusterState.term(), newClusterState.version(), task.source);, +++ b/server/src/main/java/org/elasticsearch/cluster/coordination/Coordinator.java, +        logger.debug("{}: coordinator becoming CANDIDATE in term {} (was {}, lastKnownLeader was [{}])",, +            method, getCurrentTerm(), mode, lastKnownLeader);, +        logger.debug("{}: coordinator becoming LEADER in term {} (was {}, lastKnownLeader was [{}])",, +            method, getCurrentTerm(), mode, lastKnownLeader);, +        logger.debug("{}: coordinator becoming FOLLOWER of [{}] in term {} (was {}, lastKnownLeader was [{}])",, +            method, leaderNode, getCurrentTerm(), mode, lastKnownLeader);, +++ b/server/src/main/java/org/elasticsearch/cluster/coordination/LeaderChecker.java, +                logger.trace("already closed, doing nothing");, +                logger.trace("closed check scheduler woken up, doing nothing");, +                logger.trace("already closed, not failing leader");, +++ b/server/src/main/java/org/elasticsearch/cluster/service/ClusterApplierService.java, +                logger.info("{}, term: {}, version: {}, reason: {}",, +                    summary, newClusterState.term(), newClusterState.version(), task.source);, +++ b/server/src/main/java/org/elasticsearch/cluster/service/MasterService.java, +                        logger.info("{}, term: {}, version: {}, reason: {}",, +                            summary, newClusterState.term(), newClusterState.version(), nodeSummary);]