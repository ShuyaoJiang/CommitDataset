[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                /* The Elasticsearch test runner doesn't support the warnings, +                 * construct unless you output this skip. Since we don't know, +                 * if this snippet will use the warnings construct we emit this, +                 * warning every time. */, +                current.println("  - skip:"), +                current.println("      features: "), +                current.println("        - warnings"), +                if (test.continued) {, +                    throw new InvalidUserDataException("Continued snippets ", +                        + "can't be skipped"), +                }, +                current.println("        - always_skip"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                /* The Elasticsearch test runner doesn't support the warnings, +                 * construct unless you output this skip. Since we don't know, +                 * if this snippet will use the warnings construct we emit this, +                 * warning every time. */, +                current.println("  - skip:"), +                current.println("      features: "), +                current.println("        - warnings"), +                if (test.continued) {, +                    throw new InvalidUserDataException("Continued snippets ", +                        + "can't be skipped"), +                }, +                current.println("        - always_skip"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('nocommit', /nocommit|NOCOMMIT/), +        patterns.put('nocommit should be all lowercase or all uppercase',, +            /((?i)nocommit)(?<!(nocommit|NOCOMMIT))/), +            patterns.put('norelease', /norelease|NORELEASE/), +        patterns.put('norelease should be all lowercase or all uppercase',, +            /((?i)norelease)(?<!(norelease|NORELEASE))/), +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                /* The Elasticsearch test runner doesn't support the warnings, +                 * construct unless you output this skip. Since we don't know, +                 * if this snippet will use the warnings construct we emit this, +                 * warning every time. */, +                current.println("  - skip:"), +                current.println("      features: "), +                current.println("        - warnings"), +                if (test.continued) {, +                    throw new InvalidUserDataException("Continued snippets ", +                        + "can't be skipped"), +                }, +                current.println("        - always_skip"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('nocommit', /nocommit|NOCOMMIT/), +        patterns.put('nocommit should be all lowercase or all uppercase',, +            /((?i)nocommit)(?<!(nocommit|NOCOMMIT))/), +            patterns.put('norelease', /norelease|NORELEASE/), +        patterns.put('norelease should be all lowercase or all uppercase',, +            /((?i)norelease)(?<!(norelease|NORELEASE))/), +, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_1_2_ID_UNRELEASED = 5010299;, +    public static final Version V_5_1_2_UNRELEASED = new Version(V_5_1_2_ID_UNRELEASED, org.apache.lucene.util.Version.LUCENE_6_3_0);, +            case V_5_1_2_ID_UNRELEASED:, +                return V_5_1_2_UNRELEASED;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                /* The Elasticsearch test runner doesn't support the warnings, +                 * construct unless you output this skip. Since we don't know, +                 * if this snippet will use the warnings construct we emit this, +                 * warning every time. */, +                current.println("  - skip:"), +                current.println("      features: "), +                current.println("        - warnings"), +                if (test.continued) {, +                    throw new InvalidUserDataException("Continued snippets ", +                        + "can't be skipped"), +                }, +                current.println("        - always_skip"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('nocommit', /nocommit|NOCOMMIT/), +        patterns.put('nocommit should be all lowercase or all uppercase',, +            /((?i)nocommit)(?<!(nocommit|NOCOMMIT))/), +            patterns.put('norelease', /norelease|NORELEASE/), +        patterns.put('norelease should be all lowercase or all uppercase',, +            /((?i)norelease)(?<!(norelease|NORELEASE))/), +, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_1_2_ID_UNRELEASED = 5010299;, +    public static final Version V_5_1_2_UNRELEASED = new Version(V_5_1_2_ID_UNRELEASED, org.apache.lucene.util.Version.LUCENE_6_3_0);, +            case V_5_1_2_ID_UNRELEASED:, +                return V_5_1_2_UNRELEASED;, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +    public ActionModule(boolean transportClient, Settings settings, IndexNameExpressionResolver resolver,, +        actionFilters = setupActionFilters(actionPlugins);, +    private List<Class<? extends ActionFilter>> setupActionFilters(List<ActionPlugin> actionPlugins) {, +        return unmodifiableList(actionPlugins.stream().flatMap(p -> p.getActionFilters().stream()).collect(Collectors.toList()));, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                /* The Elasticsearch test runner doesn't support the warnings, +                 * construct unless you output this skip. Since we don't know, +                 * if this snippet will use the warnings construct we emit this, +                 * warning every time. */, +                current.println("  - skip:"), +                current.println("      features: "), +                current.println("        - warnings"), +                if (test.continued) {]