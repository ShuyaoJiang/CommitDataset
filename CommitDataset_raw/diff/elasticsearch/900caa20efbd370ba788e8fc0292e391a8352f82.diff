[+++ b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/composite/LongValuesSource.java, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.apache.lucene.search.DocValuesFieldExistsQuery;, +    private static Query extractQuery(Query query) {, +        } else if (query instanceof ConstantScoreQuery){, +            return extractQuery(((ConstantScoreQuery) query).getQuery());, +    /**, +     * Returns true if we can use <code>query</code> with a {@link SortedDocsProducer} on <code>fieldName</code>., +     */, +    private static boolean checkMatchAllOrRangeQuery(Query query, String fieldName) {, +        if (query == null) {, +            return true;, +        } else if (query.getClass() == MatchAllDocsQuery.class) {, +            return true;, +        } else if (query instanceof PointRangeQuery) {, +            PointRangeQuery pointQuery = (PointRangeQuery) query;, +            return fieldName.equals(pointQuery.getField());, +        } else if (query instanceof DocValuesFieldExistsQuery) {, +            DocValuesFieldExistsQuery existsQuery = (DocValuesFieldExistsQuery) query;, +            return fieldName.equals(existsQuery.getField());, +        } else {, +            return false;, +        }, +    }, +, +                checkMatchAllOrRangeQuery(query, fieldType.name()) == false) {, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/composite/LongValuesSource.java, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.apache.lucene.search.DocValuesFieldExistsQuery;, +    private static Query extractQuery(Query query) {, +        } else if (query instanceof ConstantScoreQuery){, +            return extractQuery(((ConstantScoreQuery) query).getQuery());, +    /**, +     * Returns true if we can use <code>query</code> with a {@link SortedDocsProducer} on <code>fieldName</code>., +     */, +    private static boolean checkMatchAllOrRangeQuery(Query query, String fieldName) {, +        if (query == null) {, +            return true;, +        } else if (query.getClass() == MatchAllDocsQuery.class) {, +            return true;, +        } else if (query instanceof PointRangeQuery) {, +            PointRangeQuery pointQuery = (PointRangeQuery) query;, +            return fieldName.equals(pointQuery.getField());, +        } else if (query instanceof DocValuesFieldExistsQuery) {, +            DocValuesFieldExistsQuery existsQuery = (DocValuesFieldExistsQuery) query;, +            return fieldName.equals(existsQuery.getField());, +        } else {, +            return false;, +        }, +    }, +, +                checkMatchAllOrRangeQuery(query, fieldType.name()) == false) {, +++ b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/composite/SingleDimensionValuesSourceTests.java, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.apache.lucene.search.DocValuesFieldExistsQuery;, +        assertNull(source.createSortedDocsProducerOrNull(reader, new TermQuery(new Term("foo", "bar"))));, +        assertNull(source.createSortedDocsProducerOrNull(reader, new TermQuery(new Term("foo", "bar"))));, +        assertNull(source.createSortedDocsProducerOrNull(reader, new TermQuery(new Term("foo", "bar"))));, +        assertNull(source.createSortedDocsProducerOrNull(reader, new TermQuery(new Term("foo", "bar"))));, +        assertNull(source.createSortedDocsProducerOrNull(reader, new TermQuery(new Term("foo", "bar"))));, +                assertNotNull(source.createSortedDocsProducerOrNull(reader, new DocValuesFieldExistsQuery("number")));, +                assertNotNull(source.createSortedDocsProducerOrNull(reader,, +                    new ConstantScoreQuery(new DocValuesFieldExistsQuery("number"))));, +                assertNull(sourceWithMissing.createSortedDocsProducerOrNull(reader, new DocValuesFieldExistsQuery("number")));, +                assertNull(sourceWithMissing.createSortedDocsProducerOrNull(reader,, +                    new ConstantScoreQuery(new DocValuesFieldExistsQuery("number"))));, +                assertNull(sourceRev.createSortedDocsProducerOrNull(reader, new DocValuesFieldExistsQuery("number")));, +                assertNull(sourceRev.createSortedDocsProducerOrNull(reader,, +                    new ConstantScoreQuery(new DocValuesFieldExistsQuery("number"))));, +                assertNull(sourceWithMissing.createSortedDocsProducerOrNull(reader, new TermQuery(new Term("keyword", "toto)"))));, +                assertNull(source.createSortedDocsProducerOrNull(reader, new DocValuesFieldExistsQuery("number")));, +                assertNull(source.createSortedDocsProducerOrNull(reader, new TermQuery(new Term("keyword", "toto)"))));, +                assertNull(source.createSortedDocsProducerOrNull(reader,, +                    new ConstantScoreQuery(new DocValuesFieldExistsQuery("number"))));]