[+++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +import org.elasticsearch.common.Strings;, +        String[] elements = Strings.splitStringToArray(spare.get(), ';');, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +import org.elasticsearch.common.Strings;, +        String[] elements = Strings.splitStringToArray(spare.get(), ';');, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +    private static void validateAliasFilter(XContentParser parser, QueryShardContext queryShardContext) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +import org.elasticsearch.common.Strings;, +        String[] elements = Strings.splitStringToArray(spare.get(), ';');, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +    private static void validateAliasFilter(XContentParser parser, QueryShardContext queryShardContext) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/common/Strings.java, +import java.util.Random;, +        return splitStringToArray(s, ',');, +    public static String[] splitStringToArray(final CharSequence s, final char c) {, +        if (s == null || s.length() == 0) {, +            return Strings.EMPTY_ARRAY;, +        }, +        int count = 1;, +        for (int i = 0; i < s.length(); i++) {, +            if (s.charAt(i) == c) {, +                count++;, +            }, +        }, +        final String[] result = new String[count];, +        final StringBuilder builder = new StringBuilder();, +        int res = 0;, +        for (int i = 0; i < s.length(); i++) {, +            if (s.charAt(i) == c) {, +                if (builder.length() > 0) {, +                    result[res++] = builder.toString();, +                    builder.setLength(0);, +                }, +, +            } else {, +                builder.append(s.charAt(i));, +            }, +        }, +        if (builder.length() > 0) {, +            result[res++] = builder.toString();, +        }, +        if (res != count) {, +            // we have empty strings, copy over to a new array, +            String[] result1 = new String[res];, +            System.arraycopy(result, 0, result1, 0, res);, +            return result1;, +        }, +        return result;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +import org.elasticsearch.common.Strings;, +        String[] elements = Strings.splitStringToArray(spare.get(), ';');, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +    private static void validateAliasFilter(XContentParser parser, QueryShardContext queryShardContext) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/common/Strings.java, +import java.util.Random;, +        return splitStringToArray(s, ',');, +    public static String[] splitStringToArray(final CharSequence s, final char c) {, +        if (s == null || s.length() == 0) {, +            return Strings.EMPTY_ARRAY;, +        }, +        int count = 1;, +        for (int i = 0; i < s.length(); i++) {, +            if (s.charAt(i) == c) {, +                count++;, +            }, +        }, +        final String[] result = new String[count];, +        final StringBuilder builder = new StringBuilder();, +        int res = 0;, +        for (int i = 0; i < s.length(); i++) {, +            if (s.charAt(i) == c) {, +                if (builder.length() > 0) {, +                    result[res++] = builder.toString();, +                    builder.setLength(0);, +                }, +, +            } else {, +                builder.append(s.charAt(i));, +            }, +        }, +        if (builder.length() > 0) {, +            result[res++] = builder.toString();, +        }, +        if (res != count) {, +            // we have empty strings, copy over to a new array, +            String[] result1 = new String[res];, +            System.arraycopy(result, 0, result1, 0, res);, +            return result1;, +        }, +        return result;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/Table.java, +            String[] sAttrs = Strings.splitStringToArray(attributes, ';');, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +import org.elasticsearch.common.Strings;]