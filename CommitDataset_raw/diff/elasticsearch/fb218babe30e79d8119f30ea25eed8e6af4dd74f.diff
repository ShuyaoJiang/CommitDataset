[+++ b/src/main/java/org/elasticsearch/common/io/stream/AdapterStreamInput.java, +package org.elasticsearch.common.io.stream;, +, +import java.io.IOException;, +, +/**, + */, +public abstract class AdapterStreamInput extends StreamInput {, +, +    protected StreamInput in;, +, +    protected AdapterStreamInput() {, +    }, +, +    public AdapterStreamInput(StreamInput in) {, +        this.in = in;, +    }, +, +    public void reset(StreamInput in) {, +        this.in = in;, +    }, +, +    @Override, +    public byte readByte() throws IOException {, +        return in.readByte();, +    }, +, +    @Override, +    public void readBytes(byte[] b, int offset, int len) throws IOException {, +        in.readBytes(b, offset, len);, +    }, +, +    @Override, +    public void reset() throws IOException {, +        in.reset();, +    }, +, +    @Override, +    public void close() throws IOException {, +        in.close();, +    }, +, +    @Override, +    public int read() throws IOException {, +        return in.read();, +    }, +, +    // override ones to direct them, +, +, +    @Override, +    public void readFully(byte[] b) throws IOException {, +        in.readFully(b);, +    }, +, +    @Override, +    public short readShort() throws IOException {, +        return in.readShort();, +    }, +, +    @Override, +    public int readInt() throws IOException {, +        return in.readInt();, +    }, +, +    @Override, +    public int readVInt() throws IOException {, +        return in.readVInt();, +    }, +, +    @Override, +    public long readLong() throws IOException {, +        return in.readLong();, +    }, +, +    @Override, +    public long readVLong() throws IOException {, +        return in.readVLong();, +    }, +, +    @Override, +    public String readUTF() throws IOException {, +        return in.readUTF();, +    }, +, +    @Override, +    public int read(byte[] b) throws IOException {, +        return in.read(b);, +    }, +, +    @Override, +    public int read(byte[] b, int off, int len) throws IOException {, +        return in.read(b, off, len);, +    }, +, +    @Override, +    public long skip(long n) throws IOException {, +        return in.skip(n);, +    }, +]