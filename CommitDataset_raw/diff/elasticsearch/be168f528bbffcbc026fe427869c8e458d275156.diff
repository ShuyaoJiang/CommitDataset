[+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/MethodWriter.java, +import org.objectweb.asm.ClassWriter;, +    private final ClassWriter parent;, +    MethodWriter(int access, Method method, ClassWriter cw, BitSet statements) {, +        super(Opcodes.ASM5, cw.visitMethod(access, method.getName(), method.getDescriptor(), null, null),, +, +        this.parent = cw;, +    /**, +     * @return A new {@link MethodWriter} with the specified access and signature., +     */, +    MethodWriter newMethodWriter(int access, Method method) {, +        return new MethodWriter(access, method, parent, statements);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/MethodWriter.java, +import org.objectweb.asm.ClassWriter;, +    private final ClassWriter parent;, +    MethodWriter(int access, Method method, ClassWriter cw, BitSet statements) {, +        super(Opcodes.ASM5, cw.visitMethod(access, method.getName(), method.getDescriptor(), null, null),, +, +        this.parent = cw;, +    /**, +     * @return A new {@link MethodWriter} with the specified access and signature., +     */, +    MethodWriter newMethodWriter(int access, Method method) {, +        return new MethodWriter(access, method, parent, statements);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Writer.java, +        return new Writer(settings, name, source, variables, root, expressions).getBytes();, +        adapter = new MethodWriter(Opcodes.ACC_PUBLIC, EXECUTE, writer, expressions);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/MethodWriter.java, +import org.objectweb.asm.ClassWriter;, +    private final ClassWriter parent;, +    MethodWriter(int access, Method method, ClassWriter cw, BitSet statements) {, +        super(Opcodes.ASM5, cw.visitMethod(access, method.getName(), method.getDescriptor(), null, null),, +, +        this.parent = cw;, +    /**, +     * @return A new {@link MethodWriter} with the specified access and signature., +     */, +    MethodWriter newMethodWriter(int access, Method method) {, +        return new MethodWriter(access, method, parent, statements);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Writer.java, +        return new Writer(settings, name, source, variables, root, expressions).getBytes();, +        adapter = new MethodWriter(Opcodes.ACC_PUBLIC, EXECUTE, writer, expressions);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/WriterConstants.java, +    public static Method getAsmMethod(final Class<?> rtype, final String name, final Class<?>... ptypes) {]