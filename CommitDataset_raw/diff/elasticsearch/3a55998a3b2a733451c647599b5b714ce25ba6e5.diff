[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonDocumentMapper.java, +        rootObjectMapper.toJson(builder, params, allFieldMapper, sourceFieldMapper);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonDocumentMapper.java, +        rootObjectMapper.toJson(builder, params, allFieldMapper, sourceFieldMapper);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonDocumentMapperParser.java, + * @author kimchy (shay.banon), +            if (fieldName.equals("enabled")) {, +                builder.enabled(nodeBooleanValue(fieldNode));, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonDocumentMapper.java, +        rootObjectMapper.toJson(builder, params, allFieldMapper, sourceFieldMapper);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonDocumentMapperParser.java, + * @author kimchy (shay.banon), +            if (fieldName.equals("enabled")) {, +                builder.enabled(nodeBooleanValue(fieldNode));, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonSourceFieldMapper.java, + * @author kimchy (shay.banon), +        public Builder enabled(boolean enabled) {, +            this.enabled = enabled;, +            return this;, +        }, +        builder.startObject(jsonType());, +        builder.field("name", name());, +        builder.field("enabled", enabled);, +        builder.endObject();]