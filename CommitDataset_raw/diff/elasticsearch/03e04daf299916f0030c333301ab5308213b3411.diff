[+++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +++ b/core/src/main/java/org/elasticsearch/search/suggest/SuggestBuilder.java, +     * to be set either via this setter or via the {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder#setText(String)} method., +, +    public static abstract class SuggestionBuilder<T> extends ToXContentToBytes {, +, +        private String name;, +        private String suggester;, +        private String text;, +        private String prefix;, +        private String regex;, +        private String field;, +        private String analyzer;, +        private Integer size;, +        private Integer shardSize;, +, +        public SuggestionBuilder(String name, String suggester) {, +            this.name = name;, +            this.suggester = suggester;, +        }, +, +        /**, +         * Same as in {@link SuggestBuilder#setText(String)}, but in the suggestion scope., +         */, +        @SuppressWarnings("unchecked"), +        public T text(String text) {, +            this.text = text;, +            return (T) this;, +        }, +, +        protected void setPrefix(String prefix) {, +            this.prefix = prefix;, +        }, +, +        protected void setRegex(String regex) {, +            this.regex = regex;, +        }, +, +        @Override, +        public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +            builder.startObject(name);, +            if (text != null) {, +                builder.field("text", text);, +            }, +            if (prefix != null) {, +                builder.field("prefix", prefix);, +            }, +            if (regex != null) {, +                builder.field("regex", regex);, +            }, +            builder.startObject(suggester);, +            if (analyzer != null) {, +                builder.field("analyzer", analyzer);, +            }, +            if (field != null) {, +                builder.field("field", field);, +            }, +            if (size != null) {, +                builder.field("size", size);, +            }, +            if (shardSize != null) {, +                builder.field("shard_size", shardSize);, +            }, +, +            builder = innerToXContent(builder, params);, +            builder.endObject();, +            builder.endObject();, +            return builder;, +        }]