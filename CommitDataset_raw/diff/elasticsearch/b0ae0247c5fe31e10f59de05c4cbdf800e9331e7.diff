[+++ b/distribution/src/bin/elasticsearch-env.bat, +set HOSTNAME=%COMPUTERNAME%, +, +if not defined ES_PATH_CONF (, +  set ES_PATH_CONF=!ES_HOME!\config, +), +, +rem now make ES_PATH_CONF absolute, +for %%I in ("%ES_PATH_CONF%..") do set ES_PATH_CONF=%%~dpfI, +, +set ES_DISTRIBUTION_FLAVOR=${es.distribution.flavor}, +set ES_DISTRIBUTION_TYPE=${es.distribution.type}, +, +cd /d "%ES_HOME%", +, +rem now set the path to java, pass "nojava" arg to skip setting JAVA_HOME and JAVA, +if "%1" == "nojava" (, +   exit /b, +), +, +++ b/distribution/src/bin/elasticsearch-env.bat, +set HOSTNAME=%COMPUTERNAME%, +, +if not defined ES_PATH_CONF (, +  set ES_PATH_CONF=!ES_HOME!\config, +), +, +rem now make ES_PATH_CONF absolute, +for %%I in ("%ES_PATH_CONF%..") do set ES_PATH_CONF=%%~dpfI, +, +set ES_DISTRIBUTION_FLAVOR=${es.distribution.flavor}, +set ES_DISTRIBUTION_TYPE=${es.distribution.type}, +, +cd /d "%ES_HOME%", +, +rem now set the path to java, pass "nojava" arg to skip setting JAVA_HOME and JAVA, +if "%1" == "nojava" (, +   exit /b, +), +, +++ b/distribution/src/bin/elasticsearch-service.bat, +set NOJAVA=nojava, +if /i "%1" == "install" set NOJAVA=, +, +call "%~dp0elasticsearch-env.bat" %NOJAVA% || exit /b 1, +"%EXECUTABLE%" //IS//%SERVICE_ID% --Startup %ES_START_TYPE% --StopTimeout %ES_STOP_TIMEOUT% --StartClass org.elasticsearch.bootstrap.Elasticsearch --StartMethod main ++StartParams --quiet --StopClass org.elasticsearch.bootstrap.Elasticsearch --StopMethod close --Classpath "%ES_CLASSPATH%" --JvmMs %JVM_MS% --JvmMx %JVM_MX% --JvmSs %JVM_SS% --JvmOptions %ES_JAVA_OPTS% ++JvmOptions %ES_PARAMS% %LOG_OPTS% --PidFile "%SERVICE_ID%.pid" --DisplayName "%SERVICE_DISPLAY_NAME%" --Description "%SERVICE_DESCRIPTION%" --Jvm "%JAVA_HOME%%JVM_DLL%" --StartMode jvm --StopMode jvm --StartPath "%ES_HOME%" %SERVICE_PARAMS% ++Environment HOSTNAME="%%COMPUTERNAME%%", +++ b/distribution/src/bin/elasticsearch-env.bat, +set HOSTNAME=%COMPUTERNAME%, +, +if not defined ES_PATH_CONF (, +  set ES_PATH_CONF=!ES_HOME!\config, +), +, +rem now make ES_PATH_CONF absolute, +for %%I in ("%ES_PATH_CONF%..") do set ES_PATH_CONF=%%~dpfI, +, +set ES_DISTRIBUTION_FLAVOR=${es.distribution.flavor}, +set ES_DISTRIBUTION_TYPE=${es.distribution.type}, +, +cd /d "%ES_HOME%", +, +rem now set the path to java, pass "nojava" arg to skip setting JAVA_HOME and JAVA, +if "%1" == "nojava" (, +   exit /b, +), +, +++ b/distribution/src/bin/elasticsearch-service.bat, +set NOJAVA=nojava, +if /i "%1" == "install" set NOJAVA=, +, +call "%~dp0elasticsearch-env.bat" %NOJAVA% || exit /b 1, +"%EXECUTABLE%" //IS//%SERVICE_ID% --Startup %ES_START_TYPE% --StopTimeout %ES_STOP_TIMEOUT% --StartClass org.elasticsearch.bootstrap.Elasticsearch --StartMethod main ++StartParams --quiet --StopClass org.elasticsearch.bootstrap.Elasticsearch --StopMethod close --Classpath "%ES_CLASSPATH%" --JvmMs %JVM_MS% --JvmMx %JVM_MX% --JvmSs %JVM_SS% --JvmOptions %ES_JAVA_OPTS% ++JvmOptions %ES_PARAMS% %LOG_OPTS% --PidFile "%SERVICE_ID%.pid" --DisplayName "%SERVICE_DISPLAY_NAME%" --Description "%SERVICE_DESCRIPTION%" --Jvm "%JAVA_HOME%%JVM_DLL%" --StartMode jvm --StopMode jvm --StartPath "%ES_HOME%" %SERVICE_PARAMS% ++Environment HOSTNAME="%%COMPUTERNAME%%", +++ b/qa/vagrant/src/main/java/org/elasticsearch/packaging/test/WindowsServiceTestCase.java, +import static org.hamcrest.CoreMatchers.equalTo;, +    private Result assertCommand(String script) {, +        assertExit(result, script, 0);, +        return result;, +    }, +, +    private Result assertFailure(String script, int exitCode) {, +        Result result = sh.runIgnoreExitCode(script);, +        assertExit(result, script, exitCode);, +        return result;, +    }, +, +    private void assertExit(Result result, String script, int exitCode) {, +        if (result.exitCode != exitCode) {, +            logger.error("---- Unexpected exit code (expected " + exitCode + ", got " + result.exitCode + ") for script: " + script);, +        final Path relocatedJdk = installation.bundledJdk.getParent().resolve("jdk.relocated");, +, +        try {, +            mv(installation.bundledJdk, relocatedJdk);, +            Result result = sh.runIgnoreExitCode(serviceScript + " install");, +        } finally {, +            mv(relocatedJdk, installation.bundledJdk);, +        }, +        Result result = assertFailure(serviceScript + " remove", 1);, +    public void assertStartedAndStop() throws IOException {, +    public void test30StartStop() throws IOException {, +        sh.run(serviceScript + " install");]