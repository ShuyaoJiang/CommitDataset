[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/network/NetworkService.java, +        InetAddress resolveDefault();, +        InetAddress resolveIfPossible(String value);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/network/NetworkService.java, +        InetAddress resolveDefault();, +        InetAddress resolveIfPossible(String value);, +++ b/plugins/cloud/aws/src/main/java/org/elasticsearch/cloud/aws/network/Ec2NameResolver.java, +import org.elasticsearch.common.logging.ESLogger;, +import org.elasticsearch.common.logging.Loggers;, + *     <li>_ec2_ - maps to privateIpv4</li>, +	private final ESLogger logger;, +	 * Construct a {@link CustomNameResolver}., +		logger = Loggers.getLogger(getClass());, +	 * @param type the ec2 hostname type to discover., +	public InetAddress resolve(Ec2HostnameType type) {, +		try {, +			logger.info("obtaining ec2 hostname from ec2 meta-data url {}", url);, +				logger.error("no ec2 metadata returned from {}", url);, +				return null;, +		} catch (IOException e) {, +			logger.error("exception obtaining metadata", e);, +			return null;, +		}, +	public InetAddress resolveDefault() {, +	public InetAddress resolveIfPossible(String value) {]