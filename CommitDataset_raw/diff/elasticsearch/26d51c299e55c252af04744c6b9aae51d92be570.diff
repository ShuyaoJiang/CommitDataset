[+++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +import org.elasticsearch.client.Client;, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +    private final Map<String, FetchSubPhaseContext> subPhaseContexts = new HashMap<>();, +    @Override, +    public <SubPhaseContext extends FetchSubPhaseContext> SubPhaseContext getFetchSubPhaseContext(FetchSubPhase.ContextFactory<SubPhaseContext> contextFactory) {, +        String subPhaseName = contextFactory.getName();, +        if (subPhaseContexts.get(subPhaseName) == null) {, +            subPhaseContexts.put(subPhaseName, contextFactory.newContextInstance());, +        }, +        return (SubPhaseContext) subPhaseContexts.get(subPhaseName);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +import org.elasticsearch.client.Client;, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +    private final Map<String, FetchSubPhaseContext> subPhaseContexts = new HashMap<>();, +    @Override, +    public <SubPhaseContext extends FetchSubPhaseContext> SubPhaseContext getFetchSubPhaseContext(FetchSubPhase.ContextFactory<SubPhaseContext> contextFactory) {, +        String subPhaseName = contextFactory.getName();, +        if (subPhaseContexts.get(subPhaseName) == null) {, +            subPhaseContexts.put(subPhaseName, contextFactory.newContextInstance());, +        }, +        return (SubPhaseContext) subPhaseContexts.get(subPhaseName);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.fetch.FetchSubPhaseModule;, +                new AggregationModule(),, +                new FetchSubPhaseModule());, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +import org.elasticsearch.client.Client;, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +    private final Map<String, FetchSubPhaseContext> subPhaseContexts = new HashMap<>();, +    @Override, +    public <SubPhaseContext extends FetchSubPhaseContext> SubPhaseContext getFetchSubPhaseContext(FetchSubPhase.ContextFactory<SubPhaseContext> contextFactory) {, +        String subPhaseName = contextFactory.getName();, +        if (subPhaseContexts.get(subPhaseName) == null) {, +            subPhaseContexts.put(subPhaseName, contextFactory.newContextInstance());, +        }, +        return (SubPhaseContext) subPhaseContexts.get(subPhaseName);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.fetch.FetchSubPhaseModule;, +                new AggregationModule(),, +                new FetchSubPhaseModule());, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +import org.elasticsearch.index.query.functionscore.ScoreFunctionParser;, +    public FetchPhase(Set<FetchSubPhase> fetchSubPhases, InnerHitsFetchSubPhase innerHitsFetchSubPhase) {, +        this.fetchSubPhases = fetchSubPhases.toArray(new FetchSubPhase[fetchSubPhases.size() + 1]);, +        this.fetchSubPhases[fetchSubPhases.size()] = innerHitsFetchSubPhase;, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +import org.elasticsearch.client.Client;, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +    private final Map<String, FetchSubPhaseContext> subPhaseContexts = new HashMap<>();, +    @Override, +    public <SubPhaseContext extends FetchSubPhaseContext> SubPhaseContext getFetchSubPhaseContext(FetchSubPhase.ContextFactory<SubPhaseContext> contextFactory) {, +        String subPhaseName = contextFactory.getName();, +        if (subPhaseContexts.get(subPhaseName) == null) {, +            subPhaseContexts.put(subPhaseName, contextFactory.newContextInstance());, +        }, +        return (SubPhaseContext) subPhaseContexts.get(subPhaseName);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.fetch.FetchSubPhaseModule;, +                new AggregationModule(),, +                new FetchSubPhaseModule());, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +import org.elasticsearch.index.query.functionscore.ScoreFunctionParser;, +    public FetchPhase(Set<FetchSubPhase> fetchSubPhases, InnerHitsFetchSubPhase innerHitsFetchSubPhase) {, +        this.fetchSubPhases = fetchSubPhases.toArray(new FetchSubPhase[fetchSubPhases.size() + 1]);, +        this.fetchSubPhases[fetchSubPhases.size()] = innerHitsFetchSubPhase;, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchSubPhase.java, +, +    /**, +     * This interface is in the fetch phase plugin mechanism., +     * Whenever a new search is executed we create a new {@link SearchContext} that holds individual contexts for each {@link org.elasticsearch.search.fetch.FetchSubPhase}., +     * Fetch phases that use the plugin mechanism must provide a ContextFactory to the SearchContext that creates the fetch phase context and also associates them with a name., +     * See {@link SearchContext#getFetchSubPhaseContext(FetchSubPhase.ContextFactory)}, +     */, +    public interface ContextFactory<SubPhaseContext extends FetchSubPhaseContext> {, +, +        /**, +         * The name of the context., +         */, +        public String getName();, +, +        /**, +         * Creates a new instance of a FetchSubPhaseContext that holds all information a FetchSubPhase needs to execute on hits., +         */, +        public SubPhaseContext newContextInstance();, +    }, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +import org.elasticsearch.client.Client;, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +    private final Map<String, FetchSubPhaseContext> subPhaseContexts = new HashMap<>();, +    @Override, +    public <SubPhaseContext extends FetchSubPhaseContext> SubPhaseContext getFetchSubPhaseContext(FetchSubPhase.ContextFactory<SubPhaseContext> contextFactory) {]