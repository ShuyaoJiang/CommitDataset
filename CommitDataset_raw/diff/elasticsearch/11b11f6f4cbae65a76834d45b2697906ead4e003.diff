[+++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/delete/DeleteRepositoryResponse.java, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/delete/DeleteRepositoryResponse.java, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/PutRepositoryResponse.java, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/delete/DeleteRepositoryResponse.java, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/PutRepositoryResponse.java, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteResponse.java, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +        } else {, +            state = ClusterState.readFrom(in, null);, +            acknowledged = in.readBoolean();, +            explanations = RoutingExplanations.readFrom(in);, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            state.writeTo(out);, +            RoutingExplanations.writeTo(explanations, out);, +        } else {, +            out.writeBoolean(acknowledged);, +    }, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/delete/DeleteRepositoryResponse.java, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/PutRepositoryResponse.java, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteResponse.java, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +        } else {, +            state = ClusterState.readFrom(in, null);, +            acknowledged = in.readBoolean();, +            explanations = RoutingExplanations.readFrom(in);, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            state.writeTo(out);, +            RoutingExplanations.writeTo(explanations, out);, +        } else {, +            out.writeBoolean(acknowledged);, +    }, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/settings/ClusterUpdateSettingsResponse.java, +import org.elasticsearch.Version;, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +        } else {, +            transientSettings = Settings.readSettingsFromStream(in);, +            persistentSettings = Settings.readSettingsFromStream(in);, +            acknowledged = in.readBoolean();, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +        } else {, +            Settings.writeSettingsToStream(transientSettings, out);, +            Settings.writeSettingsToStream(persistentSettings, out);, +            out.writeBoolean(acknowledged);, +        }, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/delete/DeleteRepositoryResponse.java, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/PutRepositoryResponse.java, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteResponse.java, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +        } else {, +            state = ClusterState.readFrom(in, null);, +            acknowledged = in.readBoolean();, +            explanations = RoutingExplanations.readFrom(in);, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            state.writeTo(out);, +            RoutingExplanations.writeTo(explanations, out);, +        } else {, +            out.writeBoolean(acknowledged);, +    }, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/settings/ClusterUpdateSettingsResponse.java, +import org.elasticsearch.Version;, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +        } else {, +            transientSettings = Settings.readSettingsFromStream(in);, +            persistentSettings = Settings.readSettingsFromStream(in);, +            acknowledged = in.readBoolean();, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +        } else {, +            Settings.writeSettingsToStream(transientSettings, out);, +            Settings.writeSettingsToStream(persistentSettings, out);, +            out.writeBoolean(acknowledged);, +        }, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/delete/DeleteSnapshotResponse.java, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/delete/DeleteRepositoryResponse.java, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/PutRepositoryResponse.java, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteResponse.java, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +        } else {, +            state = ClusterState.readFrom(in, null);, +            acknowledged = in.readBoolean();, +            explanations = RoutingExplanations.readFrom(in);, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            state.writeTo(out);, +            RoutingExplanations.writeTo(explanations, out);, +        } else {, +            out.writeBoolean(acknowledged);, +    }, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/settings/ClusterUpdateSettingsResponse.java, +import org.elasticsearch.Version;, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +        } else {, +            transientSettings = Settings.readSettingsFromStream(in);, +            persistentSettings = Settings.readSettingsFromStream(in);, +            acknowledged = in.readBoolean();, +        }]