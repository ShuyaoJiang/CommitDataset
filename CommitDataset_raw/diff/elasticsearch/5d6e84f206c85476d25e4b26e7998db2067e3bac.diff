[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.common.logging.ESLogger;, +    public static Version parseVersion(@Nullable String version, Version defaultVersion, ESLogger logger) {, +        if (version == null) {, +            return defaultVersion;, +        }, +        if ("3.1".equals(version)) {, +            return Version.LUCENE_31;, +        }, +        if ("3.0".equals(version)) {, +            return Version.LUCENE_30;, +        }, +        logger.warn("no version match {}, default to {}", version, defaultVersion);, +        return defaultVersion;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.common.logging.ESLogger;, +    public static Version parseVersion(@Nullable String version, Version defaultVersion, ESLogger logger) {, +        if (version == null) {, +            return defaultVersion;, +        }, +        if ("3.1".equals(version)) {, +            return Version.LUCENE_31;, +        }, +        if ("3.0".equals(version)) {, +            return Version.LUCENE_30;, +        }, +        logger.warn("no version match {}, default to {}", version, defaultVersion);, +        return defaultVersion;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/ASCIIFoldingTokenFilterFactory.java, +        super(index, indexSettings, name, settings);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.common.logging.ESLogger;, +    public static Version parseVersion(@Nullable String version, Version defaultVersion, ESLogger logger) {, +        if (version == null) {, +            return defaultVersion;, +        }, +        if ("3.1".equals(version)) {, +            return Version.LUCENE_31;, +        }, +        if ("3.0".equals(version)) {, +            return Version.LUCENE_30;, +        }, +        logger.warn("no version match {}, default to {}", version, defaultVersion);, +        return defaultVersion;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/ASCIIFoldingTokenFilterFactory.java, +        super(index, indexSettings, name, settings);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/AbstractIndexAnalyzerProvider.java, +import org.apache.lucene.util.Version;, +import org.elasticsearch.common.lucene.Lucene;, +    protected final Version version;, +, +    public AbstractIndexAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, String name, Settings settings) {, +        this.version = Lucene.parseVersion(settings.get("version"), Lucene.ANALYZER_VERSION, logger);, +    public AbstractIndexAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, String prefixSettings, String name, Settings settings) {, +        this.version = Lucene.parseVersion(settings.get("version"), Lucene.ANALYZER_VERSION, logger);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.common.logging.ESLogger;, +    public static Version parseVersion(@Nullable String version, Version defaultVersion, ESLogger logger) {, +        if (version == null) {, +            return defaultVersion;, +        }, +        if ("3.1".equals(version)) {, +            return Version.LUCENE_31;, +        }, +        if ("3.0".equals(version)) {, +            return Version.LUCENE_30;, +        }, +        logger.warn("no version match {}, default to {}", version, defaultVersion);, +        return defaultVersion;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/ASCIIFoldingTokenFilterFactory.java, +        super(index, indexSettings, name, settings);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/AbstractIndexAnalyzerProvider.java, +import org.apache.lucene.util.Version;, +import org.elasticsearch.common.lucene.Lucene;, +    protected final Version version;, +, +    public AbstractIndexAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, String name, Settings settings) {, +        this.version = Lucene.parseVersion(settings.get("version"), Lucene.ANALYZER_VERSION, logger);, +    public AbstractIndexAnalyzerProvider(Index index, @IndexSettings Settings indexSettings, String prefixSettings, String name, Settings settings) {, +        this.version = Lucene.parseVersion(settings.get("version"), Lucene.ANALYZER_VERSION, logger);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/AbstractTokenFilterFactory.java, +import org.apache.lucene.util.Version;, +import org.elasticsearch.common.lucene.Lucene;, +    protected final Version version;, +, +    public AbstractTokenFilterFactory(Index index, @IndexSettings Settings indexSettings, String name, Settings settings) {, +        this.version = Lucene.parseVersion(settings.get("version"), Lucene.ANALYZER_VERSION, logger);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/Lucene.java]