[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequest.java, +    /**, +     * @param type the mapping type, +     * @param source consisting of field/properties pairs (e.g. "field1",, +     *            "type=string,store=true"). If the number of arguments is not, +     *            divisible by two an {@link IllegalArgumentException} is thrown, +     * @return the mappings definition, +     */, +        if (source.length % 2 != 0) {, +            throw new IllegalArgumentException("mapping source must be pairs of fieldnames and properties definition.");, +        }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequest.java, +    /**, +     * @param type the mapping type, +     * @param source consisting of field/properties pairs (e.g. "field1",, +     *            "type=string,store=true"). If the number of arguments is not, +     *            divisible by two an {@link IllegalArgumentException} is thrown, +     * @return the mappings definition, +     */, +        if (source.length % 2 != 0) {, +            throw new IllegalArgumentException("mapping source must be pairs of fieldnames and properties definition.");, +        }, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequestTests.java, +, +    public void testBuildFromSimplifiedDef() {, +        // test that method rejects input where input varargs fieldname/properites are not paired correctly, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,, +                () -> PutMappingRequest.buildFromSimplifiedDef("type", "only_field"));, +        assertEquals("mapping source must be pairs of fieldnames and properties definition.", e.getMessage());, +    }]