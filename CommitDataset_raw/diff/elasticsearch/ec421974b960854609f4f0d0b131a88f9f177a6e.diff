[+++ b/core/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java, +                                } else {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java, +                                } else {, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/context/CategoryContextMapping.java, +    public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser), +            throws IOException, ElasticsearchParseException {, +        if (token == Token.VALUE_STRING || token == Token.VALUE_NUMBER || token == Token.VALUE_BOOLEAN) {, +                if (token == Token.VALUE_STRING || token == Token.VALUE_NUMBER || token == Token.VALUE_BOOLEAN) {, +                    throw new ElasticsearchParseException(, +                            "context array must have string, number or boolean values, but was [" + token + "]");, +            throw new ElasticsearchParseException(, +                    "contexts must be a string, number or boolean or a list of string, number or boolean, but was [" + token + "]");, +++ b/core/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java, +                                } else {, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/context/CategoryContextMapping.java, +    public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser), +            throws IOException, ElasticsearchParseException {, +        if (token == Token.VALUE_STRING || token == Token.VALUE_NUMBER || token == Token.VALUE_BOOLEAN) {, +                if (token == Token.VALUE_STRING || token == Token.VALUE_NUMBER || token == Token.VALUE_BOOLEAN) {, +                    throw new ElasticsearchParseException(, +                            "context array must have string, number or boolean values, but was [" + token + "]");, +            throw new ElasticsearchParseException(, +                    "contexts must be a string, number or boolean or a list of string, number or boolean, but was [" + token + "]");, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/context/CategoryQueryContext.java, +import org.elasticsearch.common.ParsingException;, +        CATEGORY_PARSER.declareField(Builder::setCategory, XContentParser::text, new ParseField(CONTEXT_VALUE),, +                ObjectParser.ValueType.VALUE);, +            try {, +            } catch(ParsingException e) {, +                throw new ElasticsearchParseException("category context must be a string, number or boolean");, +            } , +        } else if (token == XContentParser.Token.VALUE_STRING || token == XContentParser.Token.VALUE_BOOLEAN, +                || token == XContentParser.Token.VALUE_NUMBER) {, +            throw new ElasticsearchParseException("category context must be an object, string, number or boolean");, +++ b/core/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java, +                                } else {, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/context/CategoryContextMapping.java, +    public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser), +            throws IOException, ElasticsearchParseException {, +        if (token == Token.VALUE_STRING || token == Token.VALUE_NUMBER || token == Token.VALUE_BOOLEAN) {, +                if (token == Token.VALUE_STRING || token == Token.VALUE_NUMBER || token == Token.VALUE_BOOLEAN) {, +                    throw new ElasticsearchParseException(, +                            "context array must have string, number or boolean values, but was [" + token + "]");, +            throw new ElasticsearchParseException(, +                    "contexts must be a string, number or boolean or a list of string, number or boolean, but was [" + token + "]");, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/context/CategoryQueryContext.java, +import org.elasticsearch.common.ParsingException;, +        CATEGORY_PARSER.declareField(Builder::setCategory, XContentParser::text, new ParseField(CONTEXT_VALUE),, +                ObjectParser.ValueType.VALUE);, +            try {, +            } catch(ParsingException e) {, +                throw new ElasticsearchParseException("category context must be a string, number or boolean");, +            } , +        } else if (token == XContentParser.Token.VALUE_STRING || token == XContentParser.Token.VALUE_BOOLEAN, +                || token == XContentParser.Token.VALUE_NUMBER) {, +            throw new ElasticsearchParseException("category context must be an object, string, number or boolean");, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/context/ContextMapping.java, +        if (token == Token.START_ARRAY) {, +        } else {, +            queryContexts.add(fromXContent(context));, +        , +++ b/core/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java, +                                } else {, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/context/CategoryContextMapping.java, +    public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser), +            throws IOException, ElasticsearchParseException {, +        if (token == Token.VALUE_STRING || token == Token.VALUE_NUMBER || token == Token.VALUE_BOOLEAN) {, +                if (token == Token.VALUE_STRING || token == Token.VALUE_NUMBER || token == Token.VALUE_BOOLEAN) {, +                    throw new ElasticsearchParseException(, +                            "context array must have string, number or boolean values, but was [" + token + "]");, +            throw new ElasticsearchParseException(, +                    "contexts must be a string, number or boolean or a list of string, number or boolean, but was [" + token + "]");, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/context/CategoryQueryContext.java, +import org.elasticsearch.common.ParsingException;, +        CATEGORY_PARSER.declareField(Builder::setCategory, XContentParser::text, new ParseField(CONTEXT_VALUE),, +                ObjectParser.ValueType.VALUE);, +            try {, +            } catch(ParsingException e) {, +                throw new ElasticsearchParseException("category context must be a string, number or boolean");, +            } , +        } else if (token == XContentParser.Token.VALUE_STRING || token == XContentParser.Token.VALUE_BOOLEAN, +                || token == XContentParser.Token.VALUE_NUMBER) {, +            throw new ElasticsearchParseException("category context must be an object, string, number or boolean");, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/context/ContextMapping.java, +        if (token == Token.START_ARRAY) {, +        } else {, +            queryContexts.add(fromXContent(context));, +        , +++ b/core/src/test/java/org/elasticsearch/search/suggest/completion/CategoryContextMappingTests.java, +import org.elasticsearch.ElasticsearchParseException;, +import org.elasticsearch.index.mapper.MapperParsingException;, +    public void testIndexingWithSimpleNumberContexts() throws Exception {, +        String mapping = jsonBuilder().startObject().startObject("type1"), +                .startObject("properties").startObject("completion"), +                .field("type", "completion"), +                .startArray("contexts"), +                .startObject(), +                .field("name", "ctx"), +                .field("type", "category")]