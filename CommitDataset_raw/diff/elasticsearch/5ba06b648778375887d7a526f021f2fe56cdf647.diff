[+++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisService.java, +import org.elasticsearch.common.util.set.Sets;, +        // TODO: remove alias support completely when we no longer support pre 5.0 indices, +        final String analyzerAliasKey = "index.analysis.analyzer." + analyzerFactory.name() + ".alias";, +        if (indexSettings.getSettings().get(analyzerAliasKey) != null) {, +            if (indexSettings.getIndexVersionCreated().onOrAfter(Version.V_5_0_0_alpha6)) {, +                // do not allow alias creation if the index was created on or after v5.0 alpha6, +                throw new IllegalArgumentException("setting [" + analyzerAliasKey + "] is not supported");, +, +            // the setting is now removed but we only support it for loading indices created before v5.0, +            deprecationLogger.deprecated("setting [{}] is only allowed on index [{}] because it was created before 5.x; " +, +                                         "analyzer aliases can no longer be created on new indices.", analyzerAliasKey, index().getName());, +            Set<String> aliases = Sets.newHashSet(indexSettings.getSettings().getAsArray(analyzerAliasKey));, +    }, +                    // TODO: Analyzer's can no longer have aliases in indices created in 5.x and beyond,, +                    // so we only allow the aliases for analyzers on indices created pre 5.x for backwards, +                    // compatibility.  Once pre 5.0 indices are no longer supported, this check should be removed., +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisService.java, +import org.elasticsearch.common.util.set.Sets;, +        // TODO: remove alias support completely when we no longer support pre 5.0 indices, +        final String analyzerAliasKey = "index.analysis.analyzer." + analyzerFactory.name() + ".alias";, +        if (indexSettings.getSettings().get(analyzerAliasKey) != null) {, +            if (indexSettings.getIndexVersionCreated().onOrAfter(Version.V_5_0_0_alpha6)) {, +                // do not allow alias creation if the index was created on or after v5.0 alpha6, +                throw new IllegalArgumentException("setting [" + analyzerAliasKey + "] is not supported");, +, +            // the setting is now removed but we only support it for loading indices created before v5.0, +            deprecationLogger.deprecated("setting [{}] is only allowed on index [{}] because it was created before 5.x; " +, +                                         "analyzer aliases can no longer be created on new indices.", analyzerAliasKey, index().getName());, +            Set<String> aliases = Sets.newHashSet(indexSettings.getSettings().getAsArray(analyzerAliasKey));, +    }, +                    // TODO: Analyzer's can no longer have aliases in indices created in 5.x and beyond,, +                    // so we only allow the aliases for analyzers on indices created pre 5.x for backwards, +                    // compatibility.  Once pre 5.0 indices are no longer supported, this check should be removed., +++ b/core/src/test/java/org/elasticsearch/indices/analysis/AnalysisModuleTests.java, +            // analyzer aliases are only allowed in 2.x indices, +            .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_2_0_0, Version.V_2_3_5)), +            // analyzer aliases are only allowed in 2.x indices, +            .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_2_0_0, Version.V_2_3_5)), +            // analyzer aliases are only allowed in 2.x indices, +            .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_2_0_0, Version.V_2_3_5)), +            // analyzer aliases are only allowed in 2.x indices, +            .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_2_0_0, Version.V_2_3_5)), +, +    public void testAnalyzerAliasNotAllowedPost5x() throws IOException {, +        Settings settings = Settings.builder(), +            .put("index.analysis.analyzer.foobar.type", "standard"), +            .put("index.analysis.analyzer.foobar.alias","foobaz"), +            // analyzer aliases were removed in v5.0.0 alpha6, +            .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_5_0_0_alpha6, null)), +            .put(Environment.PATH_HOME_SETTING.getKey(), createTempDir().toString()), +            .build();, +        AnalysisRegistry registry = getNewRegistry(settings);, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> getAnalysisService(registry, settings));, +        assertEquals("setting [index.analysis.analyzer.foobar.alias] is not supported", e.getMessage());, +    }, +, +                // analyzer aliases are only allowed for 2.x indices, +                .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_2_0_0, Version.V_2_3_5)), +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisService.java, +import org.elasticsearch.common.util.set.Sets;, +        // TODO: remove alias support completely when we no longer support pre 5.0 indices, +        final String analyzerAliasKey = "index.analysis.analyzer." + analyzerFactory.name() + ".alias";, +        if (indexSettings.getSettings().get(analyzerAliasKey) != null) {, +            if (indexSettings.getIndexVersionCreated().onOrAfter(Version.V_5_0_0_alpha6)) {, +                // do not allow alias creation if the index was created on or after v5.0 alpha6, +                throw new IllegalArgumentException("setting [" + analyzerAliasKey + "] is not supported");, +, +            // the setting is now removed but we only support it for loading indices created before v5.0, +            deprecationLogger.deprecated("setting [{}] is only allowed on index [{}] because it was created before 5.x; " +, +                                         "analyzer aliases can no longer be created on new indices.", analyzerAliasKey, index().getName());, +            Set<String> aliases = Sets.newHashSet(indexSettings.getSettings().getAsArray(analyzerAliasKey));, +    }, +                    // TODO: Analyzer's can no longer have aliases in indices created in 5.x and beyond,, +                    // so we only allow the aliases for analyzers on indices created pre 5.x for backwards, +                    // compatibility.  Once pre 5.0 indices are no longer supported, this check should be removed., +++ b/core/src/test/java/org/elasticsearch/indices/analysis/AnalysisModuleTests.java, +            // analyzer aliases are only allowed in 2.x indices, +            .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_2_0_0, Version.V_2_3_5)), +            // analyzer aliases are only allowed in 2.x indices, +            .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_2_0_0, Version.V_2_3_5)), +            // analyzer aliases are only allowed in 2.x indices, +            .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_2_0_0, Version.V_2_3_5)), +            // analyzer aliases are only allowed in 2.x indices, +            .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_2_0_0, Version.V_2_3_5)), +, +    public void testAnalyzerAliasNotAllowedPost5x() throws IOException {, +        Settings settings = Settings.builder(), +            .put("index.analysis.analyzer.foobar.type", "standard"), +            .put("index.analysis.analyzer.foobar.alias","foobaz"), +            // analyzer aliases were removed in v5.0.0 alpha6, +            .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_5_0_0_alpha6, null)), +            .put(Environment.PATH_HOME_SETTING.getKey(), createTempDir().toString()), +            .build();, +        AnalysisRegistry registry = getNewRegistry(settings);, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> getAnalysisService(registry, settings));, +        assertEquals("setting [index.analysis.analyzer.foobar.alias] is not supported", e.getMessage());, +    }, +, +                // analyzer aliases are only allowed for 2.x indices]