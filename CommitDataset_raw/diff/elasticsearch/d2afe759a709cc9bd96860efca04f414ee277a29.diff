[+++ b/test/framework/src/main/java/org/elasticsearch/test/rest/parser/RestTestSuiteParser.java, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.common.xcontent.yaml.YamlXContent;, +import org.elasticsearch.test.rest.section.RestTestSuite;, +import org.elasticsearch.test.rest.section.TestSection;, +, +        try (XContentParser parser = YamlXContent.yamlXContent.createParser(Files.newInputStream(file))) {, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/parser/RestTestSuiteParser.java, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.common.xcontent.yaml.YamlXContent;, +import org.elasticsearch.test.rest.section.RestTestSuite;, +import org.elasticsearch.test.rest.section.TestSection;, +, +        try (XContentParser parser = YamlXContent.yamlXContent.createParser(Files.newInputStream(file))) {, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/spec/RestApi.java, +    private final String location;, +    RestApi(String location, String name) {, +        this.location = location;, +    public String getLocation() {, +        return location;, +    }, +, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/parser/RestTestSuiteParser.java, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.common.xcontent.yaml.YamlXContent;, +import org.elasticsearch.test.rest.section.RestTestSuite;, +import org.elasticsearch.test.rest.section.TestSection;, +, +        try (XContentParser parser = YamlXContent.yamlXContent.createParser(Files.newInputStream(file))) {, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/spec/RestApi.java, +    private final String location;, +    RestApi(String location, String name) {, +        this.location = location;, +    public String getLocation() {, +        return location;, +    }, +, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/spec/RestApiParser.java, +    public RestApi parse(String location, XContentParser parser) throws IOException {, +        RestApi restApi = new RestApi(location, parser.currentName());, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/parser/RestTestSuiteParser.java, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.common.xcontent.yaml.YamlXContent;, +import org.elasticsearch.test.rest.section.RestTestSuite;, +import org.elasticsearch.test.rest.section.TestSection;, +, +        try (XContentParser parser = YamlXContent.yamlXContent.createParser(Files.newInputStream(file))) {, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/spec/RestApi.java, +    private final String location;, +    RestApi(String location, String name) {, +        this.location = location;, +    public String getLocation() {, +        return location;, +    }, +, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/spec/RestApiParser.java, +    public RestApi parse(String location, XContentParser parser) throws IOException {, +        RestApi restApi = new RestApi(location, parser.currentName());, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/spec/RestSpec.java, +        RestApi previous = restApiMap.putIfAbsent(restApi.getName(), restApi);, +        if (previous != null) {, +            throw new IllegalArgumentException("cannot register api [" + restApi.getName() + "] found in [" + restApi.getLocation() + "]. ", +                    + "api with same name was already found in [" + previous.getLocation() + "]");, +        }, +        RestApiParser restApiParser = new RestApiParser();, +                    try (XContentParser parser = JsonXContent.jsonXContent.createParser(stream)) {, +                        RestApi restApi = restApiParser.parse(jsonFile.toString(), parser);, +                        String filename = jsonFile.getFileName().toString();, +                        String expectedApiName = filename.substring(0, filename.lastIndexOf('.'));, +                        if (restApi.getName().equals(expectedApiName) == false) {, +                            throw new IllegalArgumentException("found api [" + restApi.getName() + "] in [" + jsonFile.toString() + "]. " +, +                                    "Each api is expected to have the same name as the file that defines it.");, +                        }, +                    }, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/parser/RestTestSuiteParser.java, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.common.xcontent.yaml.YamlXContent;, +import org.elasticsearch.test.rest.section.RestTestSuite;, +import org.elasticsearch.test.rest.section.TestSection;, +, +        try (XContentParser parser = YamlXContent.yamlXContent.createParser(Files.newInputStream(file))) {, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/spec/RestApi.java, +    private final String location;, +    RestApi(String location, String name) {, +        this.location = location;, +    public String getLocation() {, +        return location;, +    }, +, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/spec/RestApiParser.java, +    public RestApi parse(String location, XContentParser parser) throws IOException {, +        RestApi restApi = new RestApi(location, parser.currentName());, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/spec/RestSpec.java, +        RestApi previous = restApiMap.putIfAbsent(restApi.getName(), restApi);, +        if (previous != null) {, +            throw new IllegalArgumentException("cannot register api [" + restApi.getName() + "] found in [" + restApi.getLocation() + "]. ", +                    + "api with same name was already found in [" + previous.getLocation() + "]");, +        }, +        RestApiParser restApiParser = new RestApiParser();, +                    try (XContentParser parser = JsonXContent.jsonXContent.createParser(stream)) {]