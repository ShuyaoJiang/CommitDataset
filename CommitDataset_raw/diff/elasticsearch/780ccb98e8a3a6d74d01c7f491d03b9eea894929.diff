[+++ b/core/pom.xml, +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesAction.java, +import org.elasticsearch.common.collect.ImmutableOpenMap;, +        private final DiscoveryNode[] nodes;, +            ClusterState clusterState = clusterService.state();, +            ImmutableOpenMap<String, DiscoveryNode> nodes = clusterState.nodes().nodes();, +            this.nodes = new DiscoveryNode[nodesIds.length];, +            for (int i = 0; i < nodesIds.length; i++) {, +                this.nodes[i] = nodes.get(nodesIds[i]);, +            }, +                final DiscoveryNode node = nodes[i];, +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesAction.java, +import org.elasticsearch.common.collect.ImmutableOpenMap;, +        private final DiscoveryNode[] nodes;, +            ClusterState clusterState = clusterService.state();, +            ImmutableOpenMap<String, DiscoveryNode> nodes = clusterState.nodes().nodes();, +            this.nodes = new DiscoveryNode[nodesIds.length];, +            for (int i = 0; i < nodesIds.length; i++) {, +                this.nodes[i] = nodes.get(nodesIds[i]);, +            }, +                final DiscoveryNode node = nodes[i];, +++ /dev/null, +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesAction.java, +import org.elasticsearch.common.collect.ImmutableOpenMap;, +        private final DiscoveryNode[] nodes;, +            ClusterState clusterState = clusterService.state();, +            ImmutableOpenMap<String, DiscoveryNode> nodes = clusterState.nodes().nodes();, +            this.nodes = new DiscoveryNode[nodesIds.length];, +            for (int i = 0; i < nodesIds.length; i++) {, +                this.nodes[i] = nodes.get(nodesIds[i]);, +            }, +                final DiscoveryNode node = nodes[i];, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/movavg/MovAvgPipelineAggregator.java, +import com.google.common.collect.EvictingQueue;, +        EvictingQueue<Double> values = EvictingQueue.create(this.window);, +        EvictingQueue<Double> values = EvictingQueue.create(window);, +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesAction.java, +import org.elasticsearch.common.collect.ImmutableOpenMap;, +        private final DiscoveryNode[] nodes;, +            ClusterState clusterState = clusterService.state();, +            ImmutableOpenMap<String, DiscoveryNode> nodes = clusterState.nodes().nodes();, +            this.nodes = new DiscoveryNode[nodesIds.length];, +            for (int i = 0; i < nodesIds.length; i++) {, +                this.nodes[i] = nodes.get(nodesIds[i]);, +            }, +                final DiscoveryNode node = nodes[i];, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/movavg/MovAvgPipelineAggregator.java, +import com.google.common.collect.EvictingQueue;, +        EvictingQueue<Double> values = EvictingQueue.create(this.window);, +        EvictingQueue<Double> values = EvictingQueue.create(window);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/movavg/SimulatedAnealingMinimizer.java, +import com.google.common.collect.EvictingQueue;, +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesAction.java, +import org.elasticsearch.common.collect.ImmutableOpenMap;, +        private final DiscoveryNode[] nodes;, +            ClusterState clusterState = clusterService.state();, +            ImmutableOpenMap<String, DiscoveryNode> nodes = clusterState.nodes().nodes();, +            this.nodes = new DiscoveryNode[nodesIds.length];, +            for (int i = 0; i < nodesIds.length; i++) {, +                this.nodes[i] = nodes.get(nodesIds[i]);, +            }, +                final DiscoveryNode node = nodes[i];, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/movavg/MovAvgPipelineAggregator.java, +import com.google.common.collect.EvictingQueue;, +        EvictingQueue<Double> values = EvictingQueue.create(this.window);, +        EvictingQueue<Double> values = EvictingQueue.create(window);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/movavg/SimulatedAnealingMinimizer.java, +import com.google.common.collect.EvictingQueue;, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/serialdiff/SerialDiffPipelineAggregator.java, +import com.google.common.collect.EvictingQueue;, +        EvictingQueue<Double> lagWindow = EvictingQueue.create(lag);, +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesAction.java, +import org.elasticsearch.common.collect.ImmutableOpenMap;, +        private final DiscoveryNode[] nodes;, +            ClusterState clusterState = clusterService.state();, +            ImmutableOpenMap<String, DiscoveryNode> nodes = clusterState.nodes().nodes();, +            this.nodes = new DiscoveryNode[nodesIds.length];, +            for (int i = 0; i < nodesIds.length; i++) {, +                this.nodes[i] = nodes.get(nodesIds[i]);, +            }, +                final DiscoveryNode node = nodes[i];, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/movavg/MovAvgPipelineAggregator.java, +import com.google.common.collect.EvictingQueue;, +        EvictingQueue<Double> values = EvictingQueue.create(this.window);, +        EvictingQueue<Double> values = EvictingQueue.create(window);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/movavg/SimulatedAnealingMinimizer.java, +import com.google.common.collect.EvictingQueue;, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/serialdiff/SerialDiffPipelineAggregator.java, +import com.google.common.collect.EvictingQueue;, +        EvictingQueue<Double> lagWindow = EvictingQueue.create(lag);]