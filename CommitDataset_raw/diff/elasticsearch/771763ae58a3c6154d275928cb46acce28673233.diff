[+++ b/src/main/java/org/elasticsearch/action/admin/indices/seal/TransportSealIndicesAction.java, +import org.elasticsearch.indices.IndicesLifecycle;, +import java.util.HashSet;, +        GroupShardsIterator primaries = state.routingTable().activePrimaryShardsGrouped(concreteIndices, true);, +, +, +            if (shard.size() == 0) {, +                results.add(new SyncedFlushService.SyncedFlushResult(shard.shardId(), "no active primary available"));, +                if (countDown.countDown()) {, +                    listener.onResponse(new SealIndicesResponse(results));, +                }, +            } else {, +, +    }, +++ b/src/main/java/org/elasticsearch/action/admin/indices/seal/TransportSealIndicesAction.java, +import org.elasticsearch.indices.IndicesLifecycle;, +import java.util.HashSet;, +        GroupShardsIterator primaries = state.routingTable().activePrimaryShardsGrouped(concreteIndices, true);, +, +, +            if (shard.size() == 0) {, +                results.add(new SyncedFlushService.SyncedFlushResult(shard.shardId(), "no active primary available"));, +                if (countDown.countDown()) {, +                    listener.onResponse(new SealIndicesResponse(results));, +                }, +            } else {, +, +    }, +++ b/src/test/java/org/elasticsearch/indices/SealTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +        int numShards = client().admin().indices().prepareGetSettings("test").get().getIndexToSettings().get("test").getAsInt(IndexMetaData.SETTING_NUMBER_OF_SHARDS, -1);, +        assertThat(sealIndicesResponse.results().size(), equalTo(numShards));, +        assertThat(sealIndicesResponse.results().iterator().next().failureReason(), equalTo("no active primary available"));]