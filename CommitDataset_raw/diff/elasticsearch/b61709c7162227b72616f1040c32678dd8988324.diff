[+++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        bulkRequest.add(data, defaultIndex, defaultType, null, null, payload, true);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        bulkRequest.add(data, defaultIndex, defaultType, null, null, payload, true);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +import org.elasticsearch.common.Strings;, +        return add(data, defaultIndex, defaultType, null, null, null, true);, +        return add(data, defaultIndex, defaultType, null, null, null, allowExplicitIndex);, +    public BulkRequest add(BytesReference data, @Nullable String defaultIndex, @Nullable String defaultType, @Nullable String defaultRouting, @Nullable String[] defaultFields, @Nullable Object payload, boolean allowExplicitIndex) throws Exception {, +                String[] fields = defaultFields;, +                            } else if ("fields".equals(currentFieldName)) {, +                                List<Object> values = parser.list();, +                                fields = values.toArray(new String[values.size()]);, +                        if (fields != null) {, +                            updateRequest.fields(fields);, +                        }, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        bulkRequest.add(data, defaultIndex, defaultType, null, null, payload, true);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +import org.elasticsearch.common.Strings;, +        return add(data, defaultIndex, defaultType, null, null, null, true);, +        return add(data, defaultIndex, defaultType, null, null, null, allowExplicitIndex);, +    public BulkRequest add(BytesReference data, @Nullable String defaultIndex, @Nullable String defaultType, @Nullable String defaultRouting, @Nullable String[] defaultFields, @Nullable Object payload, boolean allowExplicitIndex) throws Exception {, +                String[] fields = defaultFields;, +                            } else if ("fields".equals(currentFieldName)) {, +                                List<Object> values = parser.list();, +                                fields = values.toArray(new String[values.size()]);, +                        if (fields != null) {, +                            updateRequest.fields(fields);, +                        }, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +import java.util.List;, +                } else if ("fields".equals(currentFieldName)) {, +                    List<Object> values = parser.list();, +                    String[] fields = values.toArray(new String[values.size()]);, +                    fields(fields);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        bulkRequest.add(data, defaultIndex, defaultType, null, null, payload, true);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +import org.elasticsearch.common.Strings;, +        return add(data, defaultIndex, defaultType, null, null, null, true);, +        return add(data, defaultIndex, defaultType, null, null, null, allowExplicitIndex);, +    public BulkRequest add(BytesReference data, @Nullable String defaultIndex, @Nullable String defaultType, @Nullable String defaultRouting, @Nullable String[] defaultFields, @Nullable Object payload, boolean allowExplicitIndex) throws Exception {, +                String[] fields = defaultFields;, +                            } else if ("fields".equals(currentFieldName)) {, +                                List<Object> values = parser.list();, +                                fields = values.toArray(new String[values.size()]);, +                        if (fields != null) {, +                            updateRequest.fields(fields);, +                        }, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +import java.util.List;, +                } else if ("fields".equals(currentFieldName)) {, +                    List<Object> values = parser.list();, +                    String[] fields = values.toArray(new String[values.size()]);, +                    fields(fields);, +++ b/core/src/main/java/org/elasticsearch/rest/action/bulk/RestBulkAction.java, +import org.elasticsearch.common.Strings;, +        String fieldsParam = request.param("fields");, +        String[] defaultFields = fieldsParam != null ? Strings.commaDelimitedListToStringArray(fieldsParam) : null;, +        bulkRequest.add(request.content(), defaultIndex, defaultType, defaultRouting, defaultFields, null, allowExplicitIndex);, +                            if (updateResponse.getGetResult() != null) {, +                                builder.startObject(Fields.GET);, +                                updateResponse.getGetResult().toXContentEmbedded(builder, request);, +                                builder.endObject();, +                            }, +        static final XContentBuilderString GET = new XContentBuilderString("get");, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        bulkRequest.add(data, defaultIndex, defaultType, null, null, payload, true);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +import org.elasticsearch.common.Strings;, +        return add(data, defaultIndex, defaultType, null, null, null, true);, +        return add(data, defaultIndex, defaultType, null, null, null, allowExplicitIndex);, +    public BulkRequest add(BytesReference data, @Nullable String defaultIndex, @Nullable String defaultType, @Nullable String defaultRouting, @Nullable String[] defaultFields, @Nullable Object payload, boolean allowExplicitIndex) throws Exception {, +                String[] fields = defaultFields;, +                            } else if ("fields".equals(currentFieldName)) {, +                                List<Object> values = parser.list();, +                                fields = values.toArray(new String[values.size()]);, +                        if (fields != null) {, +                            updateRequest.fields(fields);, +                        }, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +import java.util.List;, +                } else if ("fields".equals(currentFieldName)) {, +                    List<Object> values = parser.list();, +                    String[] fields = values.toArray(new String[values.size()]);, +                    fields(fields);, +++ b/core/src/main/java/org/elasticsearch/rest/action/bulk/RestBulkAction.java, +import org.elasticsearch.common.Strings;, +        String fieldsParam = request.param("fields");, +        String[] defaultFields = fieldsParam != null ? Strings.commaDelimitedListToStringArray(fieldsParam) : null;, +        bulkRequest.add(request.content(), defaultIndex, defaultType, defaultRouting, defaultFields, null, allowExplicitIndex);, +                            if (updateResponse.getGetResult() != null) {, +                                builder.startObject(Fields.GET);, +                                updateResponse.getGetResult().toXContentEmbedded(builder, request);, +                                builder.endObject();, +                            }, +        static final XContentBuilderString GET = new XContentBuilderString("get");, +++ b/docs/reference/docs/bulk.asciidoc, +script), `lang` (for script) and `fields`. See update documentation for details on]