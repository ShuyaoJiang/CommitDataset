[+++ b/TESTING.asciidoc, +gradle run, +If you want to run elasticsearch from your IDE, you should execute gradle run, +++ b/TESTING.asciidoc, +gradle run, +If you want to run elasticsearch from your IDE, you should execute gradle run, +++ b/build.gradle, +, +    // for eclipse hacks..., +    isEclipse = System.getProperty("eclipse.launcher") != null || gradle.startParameter.taskNames.contains('eclipse') || gradle.startParameter.taskNames.contains('cleanEclipse'), +// add buildSrc itself as a groovy project, +task buildSrcEclipse(type: GradleBuild) {, +  buildFile = 'buildSrc/build.gradle', +  tasks = ['cleanEclipse', 'eclipse'], +}, +tasks.eclipse.dependsOn(buildSrcEclipse), +, +task run(dependsOn: ':distribution:run'), +++ b/TESTING.asciidoc, +gradle run, +If you want to run elasticsearch from your IDE, you should execute gradle run, +++ b/build.gradle, +, +    // for eclipse hacks..., +    isEclipse = System.getProperty("eclipse.launcher") != null || gradle.startParameter.taskNames.contains('eclipse') || gradle.startParameter.taskNames.contains('cleanEclipse'), +// add buildSrc itself as a groovy project, +task buildSrcEclipse(type: GradleBuild) {, +  buildFile = 'buildSrc/build.gradle', +  tasks = ['cleanEclipse', 'eclipse'], +}, +tasks.eclipse.dependsOn(buildSrcEclipse), +, +task run(dependsOn: ':distribution:run'), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    static EnumMap<? extends TestStatus, String> statusNames;, +++ b/TESTING.asciidoc, +gradle run, +If you want to run elasticsearch from your IDE, you should execute gradle run, +++ b/build.gradle, +, +    // for eclipse hacks..., +    isEclipse = System.getProperty("eclipse.launcher") != null || gradle.startParameter.taskNames.contains('eclipse') || gradle.startParameter.taskNames.contains('cleanEclipse'), +// add buildSrc itself as a groovy project, +task buildSrcEclipse(type: GradleBuild) {, +  buildFile = 'buildSrc/build.gradle', +  tasks = ['cleanEclipse', 'eclipse'], +}, +tasks.eclipse.dependsOn(buildSrcEclipse), +, +task run(dependsOn: ':distribution:run'), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    static EnumMap<? extends TestStatus, String> statusNames;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                    plugin project.pluginProperties.extension.name, project.bundlePlugin.outputs.files, +++ b/TESTING.asciidoc, +gradle run, +If you want to run elasticsearch from your IDE, you should execute gradle run, +++ b/build.gradle, +, +    // for eclipse hacks..., +    isEclipse = System.getProperty("eclipse.launcher") != null || gradle.startParameter.taskNames.contains('eclipse') || gradle.startParameter.taskNames.contains('cleanEclipse'), +// add buildSrc itself as a groovy project, +task buildSrcEclipse(type: GradleBuild) {, +  buildFile = 'buildSrc/build.gradle', +  tasks = ['cleanEclipse', 'eclipse'], +}, +tasks.eclipse.dependsOn(buildSrcEclipse), +, +task run(dependsOn: ':distribution:run'), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    static EnumMap<? extends TestStatus, String> statusNames;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                    plugin project.pluginProperties.extension.name, project.bundlePlugin.outputs.files, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +        project.clean.delete(generatedResourcesDir), +            if (extension.name == null) {, +                throw new InvalidUserDataException('name is a required setting for esplugin'), +            }, +                    String warning = "WARNING: Disabling plugin isolation in ${project.path} is deprecated and will be removed in the future", +            from(templateFile), +            into(generatedResourcesDir), +++ b/TESTING.asciidoc, +gradle run, +If you want to run elasticsearch from your IDE, you should execute gradle run, +++ b/build.gradle, +, +    // for eclipse hacks..., +    isEclipse = System.getProperty("eclipse.launcher") != null || gradle.startParameter.taskNames.contains('eclipse') || gradle.startParameter.taskNames.contains('cleanEclipse'), +// add buildSrc itself as a groovy project, +task buildSrcEclipse(type: GradleBuild) {, +  buildFile = 'buildSrc/build.gradle', +  tasks = ['cleanEclipse', 'eclipse'], +}, +tasks.eclipse.dependsOn(buildSrcEclipse), +, +task run(dependsOn: ':distribution:run'), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    static EnumMap<? extends TestStatus, String> statusNames;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                    plugin project.pluginProperties.extension.name, project.bundlePlugin.outputs.files]