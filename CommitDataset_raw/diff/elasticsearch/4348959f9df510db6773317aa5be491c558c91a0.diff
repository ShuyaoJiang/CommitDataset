[+++ b/docs/reference/migration/migrate_2_0.asciidoc, +=== Delete api with missing routing when required, +, +Delete api requires a routing value when deleting a document belonging to a type that has routing set to required in its, +mapping, whereas previous elasticsearch versions would trigger a broadcast delete on all shards belonging to the index., +A `RoutingMissingException` is now thrown instead., +, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +=== Delete api with missing routing when required, +, +Delete api requires a routing value when deleting a document belonging to a type that has routing set to required in its, +mapping, whereas previous elasticsearch versions would trigger a broadcast delete on all shards belonging to the index., +A `RoutingMissingException` is now thrown instead., +, +++ b/src/main/java/org/elasticsearch/action/ActionModule.java, +        registerAction(DeleteAction.INSTANCE, TransportDeleteAction.class);, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +=== Delete api with missing routing when required, +, +Delete api requires a routing value when deleting a document belonging to a type that has routing set to required in its, +mapping, whereas previous elasticsearch versions would trigger a broadcast delete on all shards belonging to the index., +A `RoutingMissingException` is now thrown instead., +, +++ b/src/main/java/org/elasticsearch/action/ActionModule.java, +        registerAction(DeleteAction.INSTANCE, TransportDeleteAction.class);, +++ /dev/null, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +=== Delete api with missing routing when required, +, +Delete api requires a routing value when deleting a document belonging to a type that has routing set to required in its, +mapping, whereas previous elasticsearch versions would trigger a broadcast delete on all shards belonging to the index., +A `RoutingMissingException` is now thrown instead., +, +++ b/src/main/java/org/elasticsearch/action/ActionModule.java, +        registerAction(DeleteAction.INSTANCE, TransportDeleteAction.class);, +++ /dev/null, +++ /dev/null, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +=== Delete api with missing routing when required, +, +Delete api requires a routing value when deleting a document belonging to a type that has routing set to required in its, +mapping, whereas previous elasticsearch versions would trigger a broadcast delete on all shards belonging to the index., +A `RoutingMissingException` is now thrown instead., +, +++ b/src/main/java/org/elasticsearch/action/ActionModule.java, +        registerAction(DeleteAction.INSTANCE, TransportDeleteAction.class);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +=== Delete api with missing routing when required, +, +Delete api requires a routing value when deleting a document belonging to a type that has routing set to required in its, +mapping, whereas previous elasticsearch versions would trigger a broadcast delete on all shards belonging to the index., +A `RoutingMissingException` is now thrown instead., +, +++ b/src/main/java/org/elasticsearch/action/ActionModule.java, +        registerAction(DeleteAction.INSTANCE, TransportDeleteAction.class);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +=== Delete api with missing routing when required, +, +Delete api requires a routing value when deleting a document belonging to a type that has routing set to required in its, +mapping, whereas previous elasticsearch versions would trigger a broadcast delete on all shards belonging to the index., +A `RoutingMissingException` is now thrown instead., +, +++ b/src/main/java/org/elasticsearch/action/ActionModule.java, +        registerAction(DeleteAction.INSTANCE, TransportDeleteAction.class);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +import org.elasticsearch.action.RoutingMissingException;, +                                 TransportCreateIndexAction createIndexAction, ActionFilters actionFilters) {, +    protected void resolveRequest(final ClusterState state, final InternalRequest request, final ActionListener<DeleteResponse> listener) {, +                    throw new RoutingMissingException(request.concreteIndex(), request.request().type(), request.request().id());, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +=== Delete api with missing routing when required, +, +Delete api requires a routing value when deleting a document belonging to a type that has routing set to required in its, +mapping, whereas previous elasticsearch versions would trigger a broadcast delete on all shards belonging to the index., +A `RoutingMissingException` is now thrown instead., +, +++ b/src/main/java/org/elasticsearch/action/ActionModule.java, +        registerAction(DeleteAction.INSTANCE, TransportDeleteAction.class);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +import org.elasticsearch.action.RoutingMissingException;, +                                 TransportCreateIndexAction createIndexAction, ActionFilters actionFilters) {, +    protected void resolveRequest(final ClusterState state, final InternalRequest request, final ActionListener<DeleteResponse> listener) {, +                    throw new RoutingMissingException(request.concreteIndex(), request.request().type(), request.request().id());, +++ /dev/null, +++ b/docs/reference/migration/migrate_2_0.asciidoc]