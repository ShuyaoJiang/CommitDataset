[+++ b/libs/grok/src/main/java/org/elasticsearch/grok/Grok.java, +            "(?::(?<subname>[[:alnum:]@\\[\\]_:.-]+))?" +, +++ b/libs/grok/src/main/java/org/elasticsearch/grok/Grok.java, +            "(?::(?<subname>[[:alnum:]@\\[\\]_:.-]+))?" +, +++ b/libs/grok/src/test/java/org/elasticsearch/grok/GrokTests.java, +    }, +, +    public void testAtInFieldName() {, +        assertGrokedField("@metadata");, +    }, +, +    public void assertNonAsciiLetterInFieldName() {, +        assertGrokedField("met√§data");, +    }, +, +    public void assertSquareBracketInFieldName() {, +        assertGrokedField("metadat[a]");, +        assertGrokedField("metad[a]ta");, +        assertGrokedField("[m]etadata");, +    }, +, +    public void testUnderscoreInFieldName() {, +        assertGrokedField("meta_data");, +    }, +, +    public void testDotInFieldName() {, +        assertGrokedField("meta.data");, +    }, +, +    public void testMinusInFieldName() {, +        assertGrokedField("meta-data");, +    }, +, +    public void testAlphanumericFieldName() {, +        assertGrokedField(randomAlphaOfLengthBetween(1, 5));, +        assertGrokedField(randomAlphaOfLengthBetween(1, 5) + randomIntBetween(0, 100));, +        assertGrokedField(randomIntBetween(0, 100) + randomAlphaOfLengthBetween(1, 5));, +        assertGrokedField(String.valueOf(randomIntBetween(0, 100)));, +    }, +, +    public void testUnsupportedBracketsInFieldName() {, +        Grok grok = new Grok(basePatterns, "%{WORD:unsuppo(r)ted}");, +        Map<String, Object> matches = grok.captures("line");, +        assertNull(matches);, +    }, +, +    private void assertGrokedField(String fieldName) {, +        String line = "foo";, +        Grok grok = new Grok(basePatterns, "%{WORD:" + fieldName + "}");, +        Map<String, Object> matches = grok.captures(line);, +        assertEquals(line, matches.get(fieldName));]