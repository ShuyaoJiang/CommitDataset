[+++ b/docs/reference/search/request/scroll.asciidoc, +NOTE: To prevent against issues caused by having too many scrolls open, the, +user is not allowed to open scrolls past a certain limit. By default, the, +maximum number of open scrolls is 500. This limit can be updated with the, +`search.max_open_scroll_context` cluster setting., +, +++ b/docs/reference/search/request/scroll.asciidoc, +NOTE: To prevent against issues caused by having too many scrolls open, the, +user is not allowed to open scrolls past a certain limit. By default, the, +maximum number of open scrolls is 500. This limit can be updated with the, +`search.max_open_scroll_context` cluster setting., +, +++ b/server/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    SearchService.MAX_OPEN_SCROLL_CONTEXT,, +++ b/docs/reference/search/request/scroll.asciidoc, +NOTE: To prevent against issues caused by having too many scrolls open, the, +user is not allowed to open scrolls past a certain limit. By default, the, +maximum number of open scrolls is 500. This limit can be updated with the, +`search.max_open_scroll_context` cluster setting., +, +++ b/server/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    SearchService.MAX_OPEN_SCROLL_CONTEXT,, +++ b/server/src/main/java/org/elasticsearch/search/SearchService.java, +import java.util.concurrent.atomic.AtomicInteger;, +    public static final Setting<Integer> MAX_OPEN_SCROLL_CONTEXT =, +        Setting.intSetting("search.max_open_scroll_context", 500, 0, Property.Dynamic, Property.NodeScope);, +, +    private volatile int maxOpenScrollContext;, +, +    private final AtomicInteger openScrollContexts = new AtomicInteger();, +, +        maxOpenScrollContext = MAX_OPEN_SCROLL_CONTEXT.get(settings);, +        clusterService.getClusterSettings().addSettingsUpdateConsumer(MAX_OPEN_SCROLL_CONTEXT, this::setMaxOpenScrollContext);, +    private void setMaxOpenScrollContext(int maxOpenScrollContext) {, +        this.maxOpenScrollContext = maxOpenScrollContext;, +    }, +, +        if (request.scroll() != null && openScrollContexts.get() >= maxOpenScrollContext) {, +            throw new ElasticsearchException(, +                "Trying to create too many scroll contexts. Must be less than or equal to: [" +, +                    maxOpenScrollContext + "]. " + "This limit can be set by changing the [", +                    + MAX_OPEN_SCROLL_CONTEXT.getKey() + "] setting.");, +        }, +, +                openScrollContexts.incrementAndGet();, +                    openScrollContexts.decrementAndGet();, +++ b/docs/reference/search/request/scroll.asciidoc, +NOTE: To prevent against issues caused by having too many scrolls open, the, +user is not allowed to open scrolls past a certain limit. By default, the, +maximum number of open scrolls is 500. This limit can be updated with the, +`search.max_open_scroll_context` cluster setting., +, +++ b/server/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    SearchService.MAX_OPEN_SCROLL_CONTEXT,, +++ b/server/src/main/java/org/elasticsearch/search/SearchService.java, +import java.util.concurrent.atomic.AtomicInteger;, +    public static final Setting<Integer> MAX_OPEN_SCROLL_CONTEXT =, +        Setting.intSetting("search.max_open_scroll_context", 500, 0, Property.Dynamic, Property.NodeScope);, +, +    private volatile int maxOpenScrollContext;, +, +    private final AtomicInteger openScrollContexts = new AtomicInteger();, +, +        maxOpenScrollContext = MAX_OPEN_SCROLL_CONTEXT.get(settings);, +        clusterService.getClusterSettings().addSettingsUpdateConsumer(MAX_OPEN_SCROLL_CONTEXT, this::setMaxOpenScrollContext);, +    private void setMaxOpenScrollContext(int maxOpenScrollContext) {, +        this.maxOpenScrollContext = maxOpenScrollContext;, +    }, +, +        if (request.scroll() != null && openScrollContexts.get() >= maxOpenScrollContext) {, +            throw new ElasticsearchException(, +                "Trying to create too many scroll contexts. Must be less than or equal to: [" +, +                    maxOpenScrollContext + "]. " + "This limit can be set by changing the [", +                    + MAX_OPEN_SCROLL_CONTEXT.getKey() + "] setting.");, +        }, +, +                openScrollContexts.incrementAndGet();, +                    openScrollContexts.decrementAndGet();, +++ b/server/src/test/java/org/elasticsearch/search/SearchServiceTests.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.action.search.ClearScrollRequest;, +import java.util.LinkedList;, +    /**, +     * test that creating more than the allowed number of scroll contexts throws an exception, +     */, +    public void testMaxOpenScrollContexts() throws RuntimeException {, +        createIndex("index");, +        client().prepareIndex("index", "type", "1").setSource("field", "value").setRefreshPolicy(IMMEDIATE).get();, +, +        final SearchService service = getInstanceFromNode(SearchService.class);, +        final IndicesService indicesService = getInstanceFromNode(IndicesService.class);, +        final IndexService indexService = indicesService.indexServiceSafe(resolveIndex("index"));, +        final IndexShard indexShard = indexService.getShard(0);, +, +        // Open all possible scrolls, clear some of them, then open more until the limit is reached, +        LinkedList<String> clearScrollIds = new LinkedList<>();, +, +        for (int i = 0; i < SearchService.MAX_OPEN_SCROLL_CONTEXT.get(Settings.EMPTY); i++) {, +            SearchResponse searchResponse = client().prepareSearch("index").setSize(1).setScroll("1m").get();, +]