[+++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/graph/GraphFeatureSet.java, +import org.elasticsearch.common.io.stream.NamedWriteableRegistry;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import java.io.IOException;, +, +    public GraphFeatureSet(Settings settings, @Nullable GraphLicensee licensee, NamedWriteableRegistry namedWriteableRegistry) {, +        namedWriteableRegistry.register(Usage.class, Usage.WRITEABLE_NAME, Usage::new);, +, +    @Override, +    public Usage usage() {, +        return new Usage(available(), enabled());, +    }, +, +    static class Usage extends XPackFeatureSet.Usage {, +, +        static final String WRITEABLE_NAME = writeableName(Graph.NAME);, +, +        public Usage(StreamInput input) throws IOException {, +            super(input);, +        }, +, +        public Usage(boolean available, boolean enabled) {, +            super(Graph.NAME, available, enabled);, +        }, +, +        @Override, +        public String getWriteableName() {, +            return WRITEABLE_NAME;, +        }, +, +        @Override, +        public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +            return builder.startObject(), +                    .field(Field.AVAILABLE, available), +                    .field(Field.ENABLED, enabled), +                    .endObject();, +, +        }, +    }, +++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/graph/GraphFeatureSet.java, +import org.elasticsearch.common.io.stream.NamedWriteableRegistry;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import java.io.IOException;, +, +    public GraphFeatureSet(Settings settings, @Nullable GraphLicensee licensee, NamedWriteableRegistry namedWriteableRegistry) {, +        namedWriteableRegistry.register(Usage.class, Usage.WRITEABLE_NAME, Usage::new);, +, +    @Override, +    public Usage usage() {, +        return new Usage(available(), enabled());, +    }, +, +    static class Usage extends XPackFeatureSet.Usage {, +, +        static final String WRITEABLE_NAME = writeableName(Graph.NAME);, +, +        public Usage(StreamInput input) throws IOException {, +            super(input);, +        }, +, +        public Usage(boolean available, boolean enabled) {, +            super(Graph.NAME, available, enabled);, +        }, +, +        @Override, +        public String getWriteableName() {, +            return WRITEABLE_NAME;, +        }, +, +        @Override, +        public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +            return builder.startObject(), +                    .field(Field.AVAILABLE, available), +                    .field(Field.ENABLED, enabled), +                    .endObject();, +, +        }, +    }, +++ b/elasticsearch/x-pack/marvel/src/main/java/org/elasticsearch/marvel/MonitoringFeatureSet.java, +import org.elasticsearch.common.io.stream.NamedWriteableRegistry;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.marvel.agent.exporter.Exporter;, +import org.elasticsearch.marvel.agent.exporter.Exporters;, +import org.elasticsearch.marvel.agent.exporter.http.HttpExporter;, +import org.elasticsearch.marvel.agent.exporter.local.LocalExporter;, +import java.io.IOException;, +, +    private final Exporters exporters;, +    public MonitoringFeatureSet(Settings settings, @Nullable MonitoringLicensee licensee, Exporters exporters,, +                                NamedWriteableRegistry namedWriteableRegistry) {, +        this.exporters = exporters;, +        namedWriteableRegistry.register(Usage.class, Usage.WRITEABLE_NAME, Usage::new);, +, +    @Override, +    public Usage usage() {, +]