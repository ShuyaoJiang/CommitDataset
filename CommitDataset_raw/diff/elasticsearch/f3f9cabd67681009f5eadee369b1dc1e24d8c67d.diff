[+++ b/test/framework/src/main/java/org/elasticsearch/test/transport/MockTransportService.java, +     * Adds a send behavior that is the default send behavior., +     *, +     * @return {@code true} if no default send behavior was registered, +     */, +    public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {, +        return transport().setDefaultSendBehavior(behavior);, +    }, +, +, +    /**, +++ b/test/framework/src/main/java/org/elasticsearch/test/transport/MockTransportService.java, +     * Adds a send behavior that is the default send behavior., +     *, +     * @return {@code true} if no default send behavior was registered, +     */, +    public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {, +        return transport().setDefaultSendBehavior(behavior);, +    }, +, +, +    /**, +++ b/test/framework/src/main/java/org/elasticsearch/test/transport/StubbableConnectionManager.java, +        defaultGetConnectionBehavior = ConnectionManager::getConnection;, +        defaultNodeConnectedBehavior = ConnectionManager::nodeConnected;, +++ b/test/framework/src/main/java/org/elasticsearch/test/transport/MockTransportService.java, +     * Adds a send behavior that is the default send behavior., +     *, +     * @return {@code true} if no default send behavior was registered, +     */, +    public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {, +        return transport().setDefaultSendBehavior(behavior);, +    }, +, +, +    /**, +++ b/test/framework/src/main/java/org/elasticsearch/test/transport/StubbableConnectionManager.java, +        defaultGetConnectionBehavior = ConnectionManager::getConnection;, +        defaultNodeConnectedBehavior = ConnectionManager::nodeConnected;, +++ b/test/framework/src/main/java/org/elasticsearch/test/transport/StubbableTransport.java, +    boolean setDefaultSendBehavior(SendRequestBehavior sendBehavior) {, +        SendRequestBehavior prior = defaultSendRequest;, +        defaultSendRequest = sendBehavior;, +        return prior == null;, +    }, +, +        this.defaultSendRequest = null;, +        this.defaultConnectBehavior = null;, +++ b/test/framework/src/main/java/org/elasticsearch/test/transport/MockTransportService.java, +     * Adds a send behavior that is the default send behavior., +     *, +     * @return {@code true} if no default send behavior was registered, +     */, +    public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {, +        return transport().setDefaultSendBehavior(behavior);, +    }, +, +, +    /**, +++ b/test/framework/src/main/java/org/elasticsearch/test/transport/StubbableConnectionManager.java, +        defaultGetConnectionBehavior = ConnectionManager::getConnection;, +        defaultNodeConnectedBehavior = ConnectionManager::nodeConnected;, +++ b/test/framework/src/main/java/org/elasticsearch/test/transport/StubbableTransport.java, +    boolean setDefaultSendBehavior(SendRequestBehavior sendBehavior) {, +        SendRequestBehavior prior = defaultSendRequest;, +        defaultSendRequest = sendBehavior;, +        return prior == null;, +    }, +, +        this.defaultSendRequest = null;, +        this.defaultConnectBehavior = null;, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/CcrSettings.java, +     * The timeout value to use for requests made as part of ccr recovery process., +     * */, +    public static final Setting<TimeValue> INDICES_RECOVERY_ACTION_TIMEOUT_SETTING =, +        Setting.positiveTimeSetting("ccr.indices.recovery.internal_action_timeout", TimeValue.timeValueSeconds(60),, +            Property.Dynamic, Property.NodeScope);, +, +    /**, +                INDICES_RECOVERY_ACTION_TIMEOUT_SETTING,, +    private volatile TimeValue recoveryActionTimeout;, +        this.recoveryActionTimeout = INDICES_RECOVERY_ACTION_TIMEOUT_SETTING.get(settings);, +        clusterSettings.addSettingsUpdateConsumer(INDICES_RECOVERY_ACTION_TIMEOUT_SETTING, this::setRecoveryActionTimeout);, +    private void setRecoveryActionTimeout(TimeValue recoveryActionTimeout) {, +        this.recoveryActionTimeout = recoveryActionTimeout;, +    }, +, +, +    public TimeValue getRecoveryActionTimeout() {, +        return recoveryActionTimeout;, +    }, +++ b/test/framework/src/main/java/org/elasticsearch/test/transport/MockTransportService.java, +     * Adds a send behavior that is the default send behavior., +     *, +     * @return {@code true} if no default send behavior was registered, +     */, +    public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {, +        return transport().setDefaultSendBehavior(behavior);, +    }, +]