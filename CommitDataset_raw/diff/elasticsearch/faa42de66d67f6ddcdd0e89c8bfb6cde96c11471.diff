[+++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    protected Netty4TcpChannel initiateChannel(DiscoveryNode node, ActionListener<Void> listener) throws IOException {, +        InetSocketAddress address = node.getAddress().address();, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    protected Netty4TcpChannel initiateChannel(DiscoveryNode node, ActionListener<Void> listener) throws IOException {, +        InetSocketAddress address = node.getAddress().address();, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    protected NioTcpChannel initiateChannel(DiscoveryNode node, ActionListener<Void> connectListener) throws IOException {, +        InetSocketAddress address = node.getAddress().address();, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    protected Netty4TcpChannel initiateChannel(DiscoveryNode node, ActionListener<Void> listener) throws IOException {, +        InetSocketAddress address = node.getAddress().address();, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    protected NioTcpChannel initiateChannel(DiscoveryNode node, ActionListener<Void> connectListener) throws IOException {, +        InetSocketAddress address = node.getAddress().address();, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransport.java, +                        TcpChannel channel = initiateChannel(node, connectFuture);, +     * @param node for the initiated connection, +    protected abstract TcpChannel initiateChannel(DiscoveryNode node, ActionListener<Void> connectListener) throws IOException;, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    protected Netty4TcpChannel initiateChannel(DiscoveryNode node, ActionListener<Void> listener) throws IOException {, +        InetSocketAddress address = node.getAddress().address();, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    protected NioTcpChannel initiateChannel(DiscoveryNode node, ActionListener<Void> connectListener) throws IOException {, +        InetSocketAddress address = node.getAddress().address();, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransport.java, +                        TcpChannel channel = initiateChannel(node, connectFuture);, +     * @param node for the initiated connection, +    protected abstract TcpChannel initiateChannel(DiscoveryNode node, ActionListener<Void> connectListener) throws IOException;, +++ b/server/src/test/java/org/elasticsearch/transport/TcpTransportTests.java, +                protected FakeChannel initiateChannel(DiscoveryNode node, ActionListener<Void> connectListener) throws IOException {, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    protected Netty4TcpChannel initiateChannel(DiscoveryNode node, ActionListener<Void> listener) throws IOException {, +        InetSocketAddress address = node.getAddress().address();, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    protected NioTcpChannel initiateChannel(DiscoveryNode node, ActionListener<Void> connectListener) throws IOException {, +        InetSocketAddress address = node.getAddress().address();, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransport.java, +                        TcpChannel channel = initiateChannel(node, connectFuture);, +     * @param node for the initiated connection, +    protected abstract TcpChannel initiateChannel(DiscoveryNode node, ActionListener<Void> connectListener) throws IOException;, +++ b/server/src/test/java/org/elasticsearch/transport/TcpTransportTests.java, +                protected FakeChannel initiateChannel(DiscoveryNode node, ActionListener<Void> connectListener) throws IOException {, +++ b/test/framework/src/main/java/org/elasticsearch/transport/MockTcpTransport.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    protected MockChannel initiateChannel(DiscoveryNode node, ActionListener<Void> connectListener) throws IOException {, +        InetSocketAddress address = node.getAddress().address();, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    protected Netty4TcpChannel initiateChannel(DiscoveryNode node, ActionListener<Void> listener) throws IOException {, +        InetSocketAddress address = node.getAddress().address();, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    protected NioTcpChannel initiateChannel(DiscoveryNode node, ActionListener<Void> connectListener) throws IOException {, +        InetSocketAddress address = node.getAddress().address();, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransport.java, +                        TcpChannel channel = initiateChannel(node, connectFuture);, +     * @param node for the initiated connection, +    protected abstract TcpChannel initiateChannel(DiscoveryNode node, ActionListener<Void> connectListener) throws IOException;, +++ b/server/src/test/java/org/elasticsearch/transport/TcpTransportTests.java, +                protected FakeChannel initiateChannel(DiscoveryNode node, ActionListener<Void> connectListener) throws IOException {, +++ b/test/framework/src/main/java/org/elasticsearch/transport/MockTcpTransport.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    protected MockChannel initiateChannel(DiscoveryNode node, ActionListener<Void> connectListener) throws IOException {, +        InetSocketAddress address = node.getAddress().address();, +++ b/test/framework/src/main/java/org/elasticsearch/transport/nio/MockNioTransport.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +    protected MockSocketChannel initiateChannel(DiscoveryNode node, ActionListener<Void> connectListener) throws IOException {, +        InetSocketAddress address = node.getAddress().address();]