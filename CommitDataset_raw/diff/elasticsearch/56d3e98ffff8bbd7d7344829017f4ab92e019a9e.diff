[+++ b/TESTING.asciidoc, +* `tests.rest.section`: regex that allows to filter the test sections that, +are going to be run. If provided, only the section names that match (case, +insensitive) against it will be executed, +++ b/TESTING.asciidoc, +* `tests.rest.section`: regex that allows to filter the test sections that, +are going to be run. If provided, only the section names that match (case, +insensitive) against it will be executed, +++ b/src/test/java/org/elasticsearch/test/rest/junit/RestTestSuiteRunner.java, +import java.util.regex.Pattern;, + * - tests.rest.section: regex that allows to filter the test sections that are going to be run. If provided, only the, + *                       section names that match (case insensitive) against it will be executed, +    public static final String REST_TESTS_SECTION = "tests.rest.section";, +        String sectionFilter = System.getProperty(REST_TESTS_SECTION);, +        Pattern sectionFilterPattern = null;, +        if (Strings.hasLength(sectionFilter)) {, +            sectionFilterPattern = Pattern.compile(sectionFilter, Pattern.CASE_INSENSITIVE);, +        }, +, +                    if (sectionFilterPattern != null) {, +                        if (!sectionFilterPattern.matcher(testSection.getName()).find()) {, +                            continue;, +                        }, +                    }, +, +, +                //we add the suite only if it has at least a section left, +                if (testSuiteDescription.getChildren().size() > 0) {, +                    apiDescription.addChild(testSuiteDescription);, +                }, +            }, +, +            //we add the api only if it has at least a suite left, +            if (apiDescription.getChildren().size() > 0) {, +                rootDescription.addChild(apiDescription);]