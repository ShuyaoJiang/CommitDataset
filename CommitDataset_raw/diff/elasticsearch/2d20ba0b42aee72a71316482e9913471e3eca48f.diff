[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.util.network.NetworkModule;, +        modules.add(new NetworkModule());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.util.network.NetworkModule;, +        modules.add(new NetworkModule());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/ZenPingService.java, +import org.elasticsearch.util.gcommon.collect.ImmutableList;, +import org.elasticsearch.util.guice.inject.Inject;, +import org.elasticsearch.util.network.NetworkService;, +    @Inject public ZenPingService(Settings settings, ThreadPool threadPool, TransportService transportService, ClusterName clusterName, NetworkService networkService) {, +            zenPingsBuilder.add(new MulticastZenPing(settings, threadPool, transportService, clusterName, networkService));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.util.network.NetworkModule;, +        modules.add(new NetworkModule());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/ZenPingService.java, +import org.elasticsearch.util.gcommon.collect.ImmutableList;, +import org.elasticsearch.util.guice.inject.Inject;, +import org.elasticsearch.util.network.NetworkService;, +    @Inject public ZenPingService(Settings settings, ThreadPool threadPool, TransportService transportService, ClusterName clusterName, NetworkService networkService) {, +            zenPingsBuilder.add(new MulticastZenPing(settings, threadPool, transportService, clusterName, networkService));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPing.java, +import org.elasticsearch.util.network.NetworkService;, +import static org.elasticsearch.util.settings.ImmutableSettings.Builder.*;, +    private final NetworkService networkService;, +, +        this(EMPTY_SETTINGS, threadPool, transportService, clusterName, new NetworkService(EMPTY_SETTINGS));, +    public MulticastZenPing(Settings settings, ThreadPool threadPool, TransportService transportService, ClusterName clusterName, NetworkService networkService) {, +        this.networkService = networkService;, +            InetAddress multicastInterface = networkService.resolvePublishHostAddress(address);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.util.network.NetworkModule;, +        modules.add(new NetworkModule());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/ZenPingService.java, +import org.elasticsearch.util.gcommon.collect.ImmutableList;, +import org.elasticsearch.util.guice.inject.Inject;, +import org.elasticsearch.util.network.NetworkService;, +    @Inject public ZenPingService(Settings settings, ThreadPool threadPool, TransportService transportService, ClusterName clusterName, NetworkService networkService) {, +            zenPingsBuilder.add(new MulticastZenPing(settings, threadPool, transportService, clusterName, networkService));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPing.java, +import org.elasticsearch.util.network.NetworkService;, +import static org.elasticsearch.util.settings.ImmutableSettings.Builder.*;, +    private final NetworkService networkService;, +, +        this(EMPTY_SETTINGS, threadPool, transportService, clusterName, new NetworkService(EMPTY_SETTINGS));, +    public MulticastZenPing(Settings settings, ThreadPool threadPool, TransportService transportService, ClusterName clusterName, NetworkService networkService) {, +        this.networkService = networkService;, +            InetAddress multicastInterface = networkService.resolvePublishHostAddress(address);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransport.java, +import org.elasticsearch.util.guice.inject.Inject;, +import org.elasticsearch.util.network.NetworkService;, +import org.elasticsearch.util.network.NetworkUtils;, +    private final NetworkService networkService;, +, +    @Inject public NettyHttpServerTransport(Settings settings, NetworkService networkService) {, +        this.networkService = networkService;, +            hostAddressX = networkService.resolveBindHostAddress(bindHost);, +            publishAddress = new InetSocketAddress(networkService.resolvePublishHostAddress(publishHost), boundAddress.getPort());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.util.network.NetworkModule;, +        modules.add(new NetworkModule());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/ZenPingService.java, +import org.elasticsearch.util.gcommon.collect.ImmutableList;, +import org.elasticsearch.util.guice.inject.Inject;, +import org.elasticsearch.util.network.NetworkService;, +    @Inject public ZenPingService(Settings settings, ThreadPool threadPool, TransportService transportService, ClusterName clusterName, NetworkService networkService) {, +            zenPingsBuilder.add(new MulticastZenPing(settings, threadPool, transportService, clusterName, networkService));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPing.java, +import org.elasticsearch.util.network.NetworkService;, +import static org.elasticsearch.util.settings.ImmutableSettings.Builder.*;, +    private final NetworkService networkService;, +, +        this(EMPTY_SETTINGS, threadPool, transportService, clusterName, new NetworkService(EMPTY_SETTINGS));, +    public MulticastZenPing(Settings settings, ThreadPool threadPool, TransportService transportService, ClusterName clusterName, NetworkService networkService) {, +        this.networkService = networkService;, +            InetAddress multicastInterface = networkService.resolvePublishHostAddress(address);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransport.java, +import org.elasticsearch.util.guice.inject.Inject;, +import org.elasticsearch.util.network.NetworkService;, +import org.elasticsearch.util.network.NetworkUtils;, +    private final NetworkService networkService;, +, +    @Inject public NettyHttpServerTransport(Settings settings, NetworkService networkService) {, +        this.networkService = networkService;, +            hostAddressX = networkService.resolveBindHostAddress(bindHost);, +            publishAddress = new InetSocketAddress(networkService.resolvePublishHostAddress(publishHost), boundAddress.getPort());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/jmx/JmxService.java, +import org.elasticsearch.util.network.NetworkService;, +    public void connectAndRegister(String nodeDescription, final NetworkService networkService) {, +                        String publishHost = networkService.resolvePublishHostAddress(settings.get("jmx.publishHost")).getHostAddress();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.util.network.NetworkModule;, +        modules.add(new NetworkModule());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/ZenPingService.java, +import org.elasticsearch.util.gcommon.collect.ImmutableList;, +import org.elasticsearch.util.guice.inject.Inject;, +import org.elasticsearch.util.network.NetworkService;, +    @Inject public ZenPingService(Settings settings, ThreadPool threadPool, TransportService transportService, ClusterName clusterName, NetworkService networkService) {, +            zenPingsBuilder.add(new MulticastZenPing(settings, threadPool, transportService, clusterName, networkService));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPing.java]