[+++ b/plugin/core/src/main/java/org/elasticsearch/xpack/ml/calendars/Calendar.java, +/**, + * A simple calendar object for scheduled (special) events., + * The calendar consists of a name an a list of job Ids or job groups., + */, +    /**, +     * {@code jobIds} can be a mix of job groups and job Ids, +     * @param id The calendar Id, +     * @param jobIds List of job Ids or job groups., +     */, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/ml/calendars/Calendar.java, +/**, + * A simple calendar object for scheduled (special) events., + * The calendar consists of a name an a list of job Ids or job groups., + */, +    /**, +     * {@code jobIds} can be a mix of job groups and job Ids, +     * @param id The calendar Id, +     * @param jobIds List of job Ids or job groups., +     */, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/ml/job/persistence/CalendarQueryBuilder.java, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.List;, +, +    private List<String> jobGroups = Collections.emptyList();, +    public CalendarQueryBuilder jobGroups(List<String> jobGroups) {, +        this.jobGroups = jobGroups;, +        return this;, +    }, +, +        List<String> jobIdAndGroups = new ArrayList<>(jobGroups);, +            jobIdAndGroups.add(jobId);, +        }, +, +        if (jobIdAndGroups.isEmpty() == false) {, +                    .filter(new TermsQueryBuilder(Calendar.JOB_IDS.getPreferredName(), jobIdAndGroups));, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/ml/calendars/Calendar.java, +/**, + * A simple calendar object for scheduled (special) events., + * The calendar consists of a name an a list of job Ids or job groups., + */, +    /**, +     * {@code jobIds} can be a mix of job groups and job Ids, +     * @param id The calendar Id, +     * @param jobIds List of job Ids or job groups., +     */, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/ml/job/persistence/CalendarQueryBuilder.java, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.List;, +, +    private List<String> jobGroups = Collections.emptyList();, +    public CalendarQueryBuilder jobGroups(List<String> jobGroups) {, +        this.jobGroups = jobGroups;, +        return this;, +    }, +, +        List<String> jobIdAndGroups = new ArrayList<>(jobGroups);, +            jobIdAndGroups.add(jobId);, +        }, +, +        if (jobIdAndGroups.isEmpty() == false) {, +                    .filter(new TermsQueryBuilder(Calendar.JOB_IDS.getPreferredName(), jobIdAndGroups));, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobProvider.java, +                    scheduledEventsForJob(jobId, job.getGroups(), scheduledEventsQueryBuilder, ActionListener.wrap(, +    public void scheduledEventsForJob(String jobId, List<String> jobGroups, ScheduledEventsQueryBuilder queryBuilder,, +        CalendarQueryBuilder query = new CalendarQueryBuilder().jobId(jobId).jobGroups(jobGroups);, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/ml/calendars/Calendar.java, +/**, + * A simple calendar object for scheduled (special) events., + * The calendar consists of a name an a list of job Ids or job groups., + */, +    /**, +     * {@code jobIds} can be a mix of job groups and job Ids, +     * @param id The calendar Id, +     * @param jobIds List of job Ids or job groups., +     */, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/ml/job/persistence/CalendarQueryBuilder.java, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.List;, +, +    private List<String> jobGroups = Collections.emptyList();, +    public CalendarQueryBuilder jobGroups(List<String> jobGroups) {, +        this.jobGroups = jobGroups;, +        return this;, +    }, +, +        List<String> jobIdAndGroups = new ArrayList<>(jobGroups);, +            jobIdAndGroups.add(jobId);, +        }, +, +        if (jobIdAndGroups.isEmpty() == false) {, +                    .filter(new TermsQueryBuilder(Calendar.JOB_IDS.getPreferredName(), jobIdAndGroups));, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobProvider.java, +                    scheduledEventsForJob(jobId, job.getGroups(), scheduledEventsQueryBuilder, ActionListener.wrap(, +    public void scheduledEventsForJob(String jobId, List<String> jobGroups, ScheduledEventsQueryBuilder queryBuilder,, +        CalendarQueryBuilder query = new CalendarQueryBuilder().jobId(jobId).jobGroups(jobGroups);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetCalendarEventsAction.java]