[+++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +        logger.warn("Unable to lock JVM Memory: error=" + errno + ",reason=" + errMsg);, +        logger.warn("This can result in part of the JVM being swapped out.");, +                    String user = System.getProperty("user.name");, +                                "\t# allow user '" + user + "' mlockall\n" +, +                                "\t" + user + " soft memlock unlimited\n" +, +                                "\t" + user + " hard memlock unlimited", +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +        logger.warn("Unable to lock JVM Memory: error=" + errno + ",reason=" + errMsg);, +        logger.warn("This can result in part of the JVM being swapped out.");, +                    String user = System.getProperty("user.name");, +                                "\t# allow user '" + user + "' mlockall\n" +, +                                "\t" + user + " soft memlock unlimited\n" +, +                                "\t" + user + " hard memlock unlimited", +++ b/core/src/main/java/org/elasticsearch/gateway/MetaDataStateFormat.java, +import java.io.FileNotFoundException;, +import java.nio.file.*;, +                // we don't check if the stateDir is present since it could be deleted, +                // after the check. Also if there is a _state file and it's not a dir something is really wrong, +                } catch (NoSuchFileException | FileNotFoundException ex) {, +                    // no _state directory -- move on, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +        logger.warn("Unable to lock JVM Memory: error=" + errno + ",reason=" + errMsg);, +        logger.warn("This can result in part of the JVM being swapped out.");, +                    String user = System.getProperty("user.name");, +                                "\t# allow user '" + user + "' mlockall\n" +, +                                "\t" + user + " soft memlock unlimited\n" +, +                                "\t" + user + " hard memlock unlimited", +++ b/core/src/main/java/org/elasticsearch/gateway/MetaDataStateFormat.java, +import java.io.FileNotFoundException;, +import java.nio.file.*;, +                // we don't check if the stateDir is present since it could be deleted, +                // after the check. Also if there is a _state file and it's not a dir something is really wrong, +                } catch (NoSuchFileException | FileNotFoundException ex) {, +                    // no _state directory -- move on, +++ b/core/src/main/java/org/elasticsearch/http/HttpServer.java, +import com.google.common.io.ByteStreams;, +import java.io.InputStream;, +        String rawPath = request.rawPath();, +        if (rawPath.startsWith("/_plugin/")) {, +        } else if (rawPath.equals("/favicon.ico")) {, +            handleFavicon(request, channel);, +            return;, +    void handleFavicon(HttpRequest request, HttpChannel channel) {, +        if (request.method() == RestRequest.Method.GET) {, +            try {, +                try (InputStream stream = getClass().getResourceAsStream("/config/favicon.ico")) {, +                    byte[] content = ByteStreams.toByteArray(stream);, +                    BytesRestResponse restResponse = new BytesRestResponse(RestStatus.OK, "image/x-icon", content);, +                    channel.sendResponse(restResponse);, +                }, +            } catch (IOException e) {, +                channel.sendResponse(new BytesRestResponse(INTERNAL_SERVER_ERROR));, +            }, +        } else {, +            channel.sendResponse(new BytesRestResponse(FORBIDDEN));, +        }, +    }, +, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +        logger.warn("Unable to lock JVM Memory: error=" + errno + ",reason=" + errMsg);, +        logger.warn("This can result in part of the JVM being swapped out.");, +                    String user = System.getProperty("user.name");, +                                "\t# allow user '" + user + "' mlockall\n" +, +                                "\t" + user + " soft memlock unlimited\n" +, +                                "\t" + user + " hard memlock unlimited", +++ b/core/src/main/java/org/elasticsearch/gateway/MetaDataStateFormat.java, +import java.io.FileNotFoundException;, +import java.nio.file.*;, +                // we don't check if the stateDir is present since it could be deleted, +                // after the check. Also if there is a _state file and it's not a dir something is really wrong, +                } catch (NoSuchFileException | FileNotFoundException ex) {, +                    // no _state directory -- move on, +++ b/core/src/main/java/org/elasticsearch/http/HttpServer.java, +import com.google.common.io.ByteStreams;, +import java.io.InputStream;, +        String rawPath = request.rawPath();, +        if (rawPath.startsWith("/_plugin/")) {, +        } else if (rawPath.equals("/favicon.ico")) {, +            handleFavicon(request, channel);, +            return;, +    void handleFavicon(HttpRequest request, HttpChannel channel) {, +        if (request.method() == RestRequest.Method.GET) {, +            try {, +                try (InputStream stream = getClass().getResourceAsStream("/config/favicon.ico")) {, +                    byte[] content = ByteStreams.toByteArray(stream);, +                    BytesRestResponse restResponse = new BytesRestResponse(RestStatus.OK, "image/x-icon", content);, +                    channel.sendResponse(restResponse);, +                }, +            } catch (IOException e) {, +                channel.sendResponse(new BytesRestResponse(INTERNAL_SERVER_ERROR));, +            }, +        } else {, +            channel.sendResponse(new BytesRestResponse(FORBIDDEN));, +        }, +    }, +, +++ b/core/src/main/java/org/elasticsearch/index/query/MatchQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +        logger.warn("Unable to lock JVM Memory: error=" + errno + ",reason=" + errMsg);]