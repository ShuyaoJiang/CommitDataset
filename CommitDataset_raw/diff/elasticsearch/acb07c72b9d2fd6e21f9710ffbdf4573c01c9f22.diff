[+++ b/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +        int line = 0;, +            line++;, +            // now parse the action, +                token = parser.nextToken();, +                if (token == XContentParser.Token.START_OBJECT) {, +                            } else {, +                                throw new IllegalArgumentException("Action/metadata line [" + line + "] contains an unknown parameter [" + currentFieldName + "]");, +                            }, +                        } else {, +                            throw new IllegalArgumentException("Malformed action/metadata line [" + line + "], expected a simple value for field [" + currentFieldName + "] but found [" + token + "]");, +                } else if (token != XContentParser.Token.END_OBJECT) {, +                    throw new IllegalArgumentException("Malformed action/metadata line [" + line + "], expected " + XContentParser.Token.START_OBJECT, +                            + " or " + XContentParser.Token.END_OBJECT + " but found [" + token + "]");, +                    line++;, +, +++ b/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +        int line = 0;, +            line++;, +            // now parse the action, +                token = parser.nextToken();, +                if (token == XContentParser.Token.START_OBJECT) {, +                            } else {, +                                throw new IllegalArgumentException("Action/metadata line [" + line + "] contains an unknown parameter [" + currentFieldName + "]");, +                            }, +                        } else {, +                            throw new IllegalArgumentException("Malformed action/metadata line [" + line + "], expected a simple value for field [" + currentFieldName + "] but found [" + token + "]");, +                } else if (token != XContentParser.Token.END_OBJECT) {, +                    throw new IllegalArgumentException("Malformed action/metadata line [" + line + "], expected " + XContentParser.Token.START_OBJECT, +                            + " or " + XContentParser.Token.END_OBJECT + " but found [" + token + "]");, +                    line++;, +, +++ b/src/test/java/org/elasticsearch/action/bulk/BulkRequestTests.java, +, +    @Test, +    public void testSimpleBulk6() throws Exception {, +        String bulkAction = copyToStringFromClasspath("/org/elasticsearch/action/bulk/simple-bulk6.json");, +        BulkRequest bulkRequest = new BulkRequest();, +        try {, +            bulkRequest.add(bulkAction.getBytes(Charsets.UTF_8), 0, bulkAction.length(), null, null);, +            fail("should have thrown an exception about the wrong format of line 1");, +        } catch (IllegalArgumentException e) {, +            assertThat("message contains error about the wrong format of line 1: " + e.getMessage(),, +                    e.getMessage().contains("Malformed action/metadata line [1], expected a simple value for field [_source] but found [START_OBJECT]"), equalTo(true));, +        }, +    }, +, +    @Test, +    public void testSimpleBulk7() throws Exception {, +        String bulkAction = copyToStringFromClasspath("/org/elasticsearch/action/bulk/simple-bulk7.json");, +        BulkRequest bulkRequest = new BulkRequest();, +        try {, +            bulkRequest.add(bulkAction.getBytes(Charsets.UTF_8), 0, bulkAction.length(), null, null);, +            fail("should have thrown an exception about the wrong format of line 5");, +        } catch (IllegalArgumentException e) {, +            assertThat("message contains error about the wrong format of line 5: " + e.getMessage(),, +                    e.getMessage().contains("Malformed action/metadata line [5], expected a simple value for field [_unkown] but found [START_ARRAY]"), equalTo(true));, +        }, +    }, +, +    @Test, +    public void testSimpleBulk8() throws Exception {, +        String bulkAction = copyToStringFromClasspath("/org/elasticsearch/action/bulk/simple-bulk8.json");, +        BulkRequest bulkRequest = new BulkRequest();, +        try {, +            bulkRequest.add(bulkAction.getBytes(Charsets.UTF_8), 0, bulkAction.length(), null, null);, +            fail("should have thrown an exception about the unknown paramater _foo");, +        } catch (IllegalArgumentException e) {, +            assertThat("message contains error about the unknown paramater _foo: " + e.getMessage(),, +                    e.getMessage().contains("Action/metadata line [3] contains an unknown parameter [_foo]"), equalTo(true));, +        }, +    }, +, +    @Test, +    public void testSimpleBulk9() throws Exception {, +        String bulkAction = copyToStringFromClasspath("/org/elasticsearch/action/bulk/simple-bulk9.json");, +        BulkRequest bulkRequest = new BulkRequest();, +        try {, +            bulkRequest.add(bulkAction.getBytes(Charsets.UTF_8), 0, bulkAction.length(), null, null);, +            fail("should have thrown an exception about the wrong format of line 3");, +        } catch (IllegalArgumentException e) {, +            assertThat("message contains error about the wrong format of line 3: " + e.getMessage(),, +                    e.getMessage().contains("Malformed action/metadata line [3], expected START_OBJECT or END_OBJECT but found [START_ARRAY]"), equalTo(true));, +        }, +    }, +++ b/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +        int line = 0;, +            line++;, +            // now parse the action, +                token = parser.nextToken();, +                if (token == XContentParser.Token.START_OBJECT) {, +                            } else {, +                                throw new IllegalArgumentException("Action/metadata line [" + line + "] contains an unknown parameter [" + currentFieldName + "]");, +                            }, +                        } else {, +                            throw new IllegalArgumentException("Malformed action/metadata line [" + line + "], expected a simple value for field [" + currentFieldName + "] but found [" + token + "]");, +                } else if (token != XContentParser.Token.END_OBJECT) {, +                    throw new IllegalArgumentException("Malformed action/metadata line [" + line + "], expected " + XContentParser.Token.START_OBJECT, +                            + " or " + XContentParser.Token.END_OBJECT + " but found [" + token + "]");, +                    line++;]