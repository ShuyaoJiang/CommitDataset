[+++ b/src/test/java/org/elasticsearch/recovery/RecoveryWhileUnderLoadTests.java, +import org.elasticsearch.AbstractSharedClusterTest;, +import org.elasticsearch.action.search.SearchResponse;, +import org.elasticsearch.action.search.SearchType;, +        SearchResponse[] iterationResults = new SearchResponse[iterations];, +            SearchResponse searchResponse = client().prepareSearch().setSearchType(SearchType.COUNT).setQuery(matchAllQuery()).get();, +            logSearchResponse(numberOfShards, numberOfDocs, i, searchResponse);, +            iterationResults[i] = searchResponse;, +            if (searchResponse.getHits().totalHits() != numberOfDocs) {, +                SearchResponse searchResponse = client().prepareSearch().setSearchType(SearchType.COUNT).setQuery(matchAllQuery()).execute().actionGet();, +                logSearchResponse(numberOfShards, numberOfDocs, i, searchResponse);, +    private void logSearchResponse(int numberOfShards, long numberOfDocs, int iteration, SearchResponse searchResponse) {, +        logger.info("iteration [{}] - successful shards: {} (expected {})", iteration, searchResponse.getSuccessfulShards(), numberOfShards);, +        logger.info("iteration [{}] - failed shards: {} (expected 0)", iteration, searchResponse.getFailedShards());, +        if (searchResponse.getShardFailures() != null && searchResponse.getShardFailures().length > 0) {, +            logger.info("iteration [{}] - shard failures: {}", iteration, Arrays.toString(searchResponse.getShardFailures()));, +        logger.info("iteration [{}] - returned documents: {} (expected {})", iteration, searchResponse.getHits().totalHits(), numberOfDocs);]