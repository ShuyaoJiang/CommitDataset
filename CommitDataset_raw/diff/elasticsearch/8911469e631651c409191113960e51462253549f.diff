[+++ b/core/src/main/java/org/elasticsearch/search/suggest/Suggest.java, +                suggestion = new Suggestion();, +++ b/core/src/main/java/org/elasticsearch/search/suggest/Suggest.java, +                suggestion = new Suggestion();, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionFieldStats.java, +                        // nocommit - this is pretty trappy do we have any way to detect this?, +                //nocommit - why do we ignore this exception?, +++ b/core/src/main/java/org/elasticsearch/search/suggest/Suggest.java, +                suggestion = new Suggestion();, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionFieldStats.java, +                        // nocommit - this is pretty trappy do we have any way to detect this?, +                //nocommit - why do we ignore this exception?, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestParser.java, +    private final CompletionSuggester completionSuggester;, +        final CompletionSuggestionContext suggestion = new CompletionSuggestionContext(completionSuggester, mapperService, fieldDataService);, +        final Set<String> payloadFields = new HashSet<>(1);, +            throw new IllegalArgumentException("Field [" + suggestion.getField() + "] is not a completion suggest field");, +++ b/core/src/main/java/org/elasticsearch/search/suggest/Suggest.java, +                suggestion = new Suggestion();, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionFieldStats.java, +                        // nocommit - this is pretty trappy do we have any way to detect this?, +                //nocommit - why do we ignore this exception?, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestParser.java, +    private final CompletionSuggester completionSuggester;, +        final CompletionSuggestionContext suggestion = new CompletionSuggestionContext(completionSuggester, mapperService, fieldDataService);, +        final Set<String> payloadFields = new HashSet<>(1);, +            throw new IllegalArgumentException("Field [" + suggestion.getField() + "] is not a completion suggest field");, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggester.java, +        List<LeafReaderContext> leaves = searcher.getIndexReader().leaves();, +            if (fieldType.hasContextMappings() && suggestDoc.getContexts().isEmpty() == false) {, +            if (payloadFields.isEmpty() == false) {, +                final int readerIndex = ReaderUtil.subIndex(suggestDoc.doc, leaves);, +                final LeafReaderContext subReaderContext = leaves.get(readerIndex);, +                final int subDocId = suggestDoc.doc - subReaderContext.docBase;, +                        final AtomicFieldData data = suggestionContext.getIndexFieldDataService().getForField(payloadFieldType).load(subReaderContext);, +                        final ScriptDocValues scriptValues = data.getScriptValues();, +                        throw new IllegalArgumentException("payload field [" + field + "] does not exist");, +    private final static class TopDocumentsCollector extends TopSuggestDocsCollector {, +        private final static class SuggestDoc extends TopSuggestDocs.SuggestScoreDoc {, +        private final static class SuggestDocPriorityQueue extends PriorityQueue<SuggestDoc> {, +++ b/core/src/main/java/org/elasticsearch/search/suggest/Suggest.java, +                suggestion = new Suggestion();, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionFieldStats.java, +                        // nocommit - this is pretty trappy do we have any way to detect this?, +                //nocommit - why do we ignore this exception?, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestParser.java, +    private final CompletionSuggester completionSuggester;, +        final CompletionSuggestionContext suggestion = new CompletionSuggestionContext(completionSuggester, mapperService, fieldDataService);, +        final Set<String> payloadFields = new HashSet<>(1);, +            throw new IllegalArgumentException("Field [" + suggestion.getField() + "] is not a completion suggest field");, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggester.java, +        List<LeafReaderContext> leaves = searcher.getIndexReader().leaves();, +            if (fieldType.hasContextMappings() && suggestDoc.getContexts().isEmpty() == false) {, +            if (payloadFields.isEmpty() == false) {, +                final int readerIndex = ReaderUtil.subIndex(suggestDoc.doc, leaves);, +                final LeafReaderContext subReaderContext = leaves.get(readerIndex);, +                final int subDocId = suggestDoc.doc - subReaderContext.docBase;, +                        final AtomicFieldData data = suggestionContext.getIndexFieldDataService().getForField(payloadFieldType).load(subReaderContext);, +                        final ScriptDocValues scriptValues = data.getScriptValues();, +                        throw new IllegalArgumentException("payload field [" + field + "] does not exist");, +    private final static class TopDocumentsCollector extends TopSuggestDocsCollector {, +        private final static class SuggestDoc extends TopSuggestDocs.SuggestScoreDoc {, +        private final static class SuggestDocPriorityQueue extends PriorityQueue<SuggestDoc> {, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestion.java, +public final class CompletionSuggestion extends Suggest.Suggestion<CompletionSuggestion.Entry> {, +    private static final class OptionPriorityQueue extends org.apache.lucene.util.PriorityQueue<Entry.Option> {, +        private final Comparator<Suggest.Suggestion.Entry.Option> comparator;, +, +        OptionPriorityQueue(int maxSize, Comparator<Suggest.Suggestion.Entry.Option> comparator) {, +            this.comparator = comparator;, +            int cmp = comparator.compare(a, b);, +        Entry.Option[] get() {, +            Comparator<Suggest.Suggestion.Entry.Option> optionComparator = sortComparator();, +            OptionPriorityQueue priorityQueue = new OptionPriorityQueue(size, sortComparator());, +    public final static class Entry extends Suggest.Suggestion.Entry<CompletionSuggestion.Entry.Option> {, +++ b/core/src/main/java/org/elasticsearch/search/suggest/Suggest.java, +                suggestion = new Suggestion();, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionFieldStats.java, +                        // nocommit - this is pretty trappy do we have any way to detect this?, +                //nocommit - why do we ignore this exception?, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestParser.java, +    private final CompletionSuggester completionSuggester;, +        final CompletionSuggestionContext suggestion = new CompletionSuggestionContext(completionSuggester, mapperService, fieldDataService);, +        final Set<String> payloadFields = new HashSet<>(1);, +            throw new IllegalArgumentException("Field [" + suggestion.getField() + "] is not a completion suggest field");, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggester.java, +        List<LeafReaderContext> leaves = searcher.getIndexReader().leaves();, +            if (fieldType.hasContextMappings() && suggestDoc.getContexts().isEmpty() == false) {, +            if (payloadFields.isEmpty() == false) {, +                final int readerIndex = ReaderUtil.subIndex(suggestDoc.doc, leaves);, +                final LeafReaderContext subReaderContext = leaves.get(readerIndex);, +                final int subDocId = suggestDoc.doc - subReaderContext.docBase;, +                        final AtomicFieldData data = suggestionContext.getIndexFieldDataService().getForField(payloadFieldType).load(subReaderContext);, +                        final ScriptDocValues scriptValues = data.getScriptValues();, +                        throw new IllegalArgumentException("payload field [" + field + "] does not exist");, +    private final static class TopDocumentsCollector extends TopSuggestDocsCollector {, +        private final static class SuggestDoc extends TopSuggestDocs.SuggestScoreDoc {, +        private final static class SuggestDocPriorityQueue extends PriorityQueue<SuggestDoc> {, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestion.java, +public final class CompletionSuggestion extends Suggest.Suggestion<CompletionSuggestion.Entry> {]