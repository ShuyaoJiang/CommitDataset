[+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +    public static final String INDEX_ROUTING_REQUIRE_GROUP_PREFIX = "index.routing.allocation.require";, +    public static final String INDEX_ROUTING_INCLUDE_GROUP_PREFIX = "index.routing.allocation.include";, +    public static final String INDEX_ROUTING_EXCLUDE_GROUP_PREFIX = "index.routing.allocation.exclude";, +        Setting.groupSetting(INDEX_ROUTING_REQUIRE_GROUP_PREFIX + ".", Property.Dynamic, Property.IndexScope);, +        Setting.groupSetting(INDEX_ROUTING_INCLUDE_GROUP_PREFIX + ".", Property.Dynamic, Property.IndexScope);, +        Setting.groupSetting(INDEX_ROUTING_EXCLUDE_GROUP_PREFIX + ".", Property.Dynamic, Property.IndexScope);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +    public static final String INDEX_ROUTING_REQUIRE_GROUP_PREFIX = "index.routing.allocation.require";, +    public static final String INDEX_ROUTING_INCLUDE_GROUP_PREFIX = "index.routing.allocation.include";, +    public static final String INDEX_ROUTING_EXCLUDE_GROUP_PREFIX = "index.routing.allocation.exclude";, +        Setting.groupSetting(INDEX_ROUTING_REQUIRE_GROUP_PREFIX + ".", Property.Dynamic, Property.IndexScope);, +        Setting.groupSetting(INDEX_ROUTING_INCLUDE_GROUP_PREFIX + ".", Property.Dynamic, Property.IndexScope);, +        Setting.groupSetting(INDEX_ROUTING_EXCLUDE_GROUP_PREFIX + ".", Property.Dynamic, Property.IndexScope);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdSettings.java, +    private volatile String lowWatermarkRaw;, +    private volatile String highWatermarkRaw;, +        this.lowWatermarkRaw = lowWatermark;, +        this.highWatermarkRaw = highWatermark;, +    /**, +     * Gets the raw (uninterpreted) low watermark value as found in the settings., +     */, +    public String getLowWatermarkRaw() {, +        return lowWatermarkRaw;, +    }, +, +    /**, +     * Gets the raw (uninterpreted) high watermark value as found in the settings., +     */, +    public String getHighWatermarkRaw() {, +        return highWatermarkRaw;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +    public static final String INDEX_ROUTING_REQUIRE_GROUP_PREFIX = "index.routing.allocation.require";, +    public static final String INDEX_ROUTING_INCLUDE_GROUP_PREFIX = "index.routing.allocation.include";, +    public static final String INDEX_ROUTING_EXCLUDE_GROUP_PREFIX = "index.routing.allocation.exclude";, +        Setting.groupSetting(INDEX_ROUTING_REQUIRE_GROUP_PREFIX + ".", Property.Dynamic, Property.IndexScope);, +        Setting.groupSetting(INDEX_ROUTING_INCLUDE_GROUP_PREFIX + ".", Property.Dynamic, Property.IndexScope);, +        Setting.groupSetting(INDEX_ROUTING_EXCLUDE_GROUP_PREFIX + ".", Property.Dynamic, Property.IndexScope);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdSettings.java, +    private volatile String lowWatermarkRaw;, +    private volatile String highWatermarkRaw;, +        this.lowWatermarkRaw = lowWatermark;, +        this.highWatermarkRaw = highWatermark;, +    /**, +     * Gets the raw (uninterpreted) low watermark value as found in the settings., +     */, +    public String getLowWatermarkRaw() {, +        return lowWatermarkRaw;, +    }, +, +    /**, +     * Gets the raw (uninterpreted) high watermark value as found in the settings., +     */, +    public String getHighWatermarkRaw() {, +        return highWatermarkRaw;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/AwarenessAllocationDecider.java, +            return allocation.decision(Decision.YES, NAME,, +                "allocation awareness is not enabled, set [%s] to enable it",, +                CLUSTER_ROUTING_ALLOCATION_AWARENESS_ATTRIBUTE_SETTING.getKey());, +                return allocation.decision(Decision.NO, NAME,, +                    "node does not contain the awareness attribute [%s]; required attributes [%s=%s]",, +                    awarenessAttribute, CLUSTER_ROUTING_ALLOCATION_AWARENESS_ATTRIBUTE_SETTING.getKey(),, +                    allocation.debugDecision() ? Strings.arrayToCommaDelimitedString(awarenessAttributes) : null);, +                        "there are too many copies of the shard allocated to nodes with attribute [%s], there are [%d] total configured " +, +                        "shard copies for this shard id and [%d] total attribute values, expected the allocated shard count per " +, +                        "attribute [%d] to be less than or equal to the upper bound of the required number of shards per attribute [%d]",, +                        requiredCountPerAttribute + leftoverPerAttribute);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +    public static final String INDEX_ROUTING_REQUIRE_GROUP_PREFIX = "index.routing.allocation.require";, +    public static final String INDEX_ROUTING_INCLUDE_GROUP_PREFIX = "index.routing.allocation.include";, +    public static final String INDEX_ROUTING_EXCLUDE_GROUP_PREFIX = "index.routing.allocation.exclude";, +        Setting.groupSetting(INDEX_ROUTING_REQUIRE_GROUP_PREFIX + ".", Property.Dynamic, Property.IndexScope);, +        Setting.groupSetting(INDEX_ROUTING_INCLUDE_GROUP_PREFIX + ".", Property.Dynamic, Property.IndexScope);, +        Setting.groupSetting(INDEX_ROUTING_EXCLUDE_GROUP_PREFIX + ".", Property.Dynamic, Property.IndexScope);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdSettings.java, +    private volatile String lowWatermarkRaw;, +    private volatile String highWatermarkRaw;, +        this.lowWatermarkRaw = lowWatermark;, +        this.highWatermarkRaw = highWatermark;, +    /**, +     * Gets the raw (uninterpreted) low watermark value as found in the settings., +     */, +    public String getLowWatermarkRaw() {, +        return lowWatermarkRaw;, +    }, +, +    /**, +     * Gets the raw (uninterpreted) high watermark value as found in the settings., +     */, +    public String getHighWatermarkRaw() {, +        return highWatermarkRaw;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/AwarenessAllocationDecider.java, +            return allocation.decision(Decision.YES, NAME,, +                "allocation awareness is not enabled, set [%s] to enable it",]