[+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerCaster.java, +    public static Cast getLegalCast(final Definition definition, final String location, final Type actual,, +                                    final Type expected, final boolean explicit, final boolean internal) {, +        switch (actual.sort) {, +            case BOOL:, +                switch (expected.sort) {, +                    case DEF:, +                        return new Cast(actual, definition.getType("def"), explicit, false, false, true, false);, +                    case OBJECT:, +                    case BOOL_OBJ:, +                        if (internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +                break;, +            case BYTE:, +                switch (expected.sort) {, +                    case SHORT:, +                    case INT:, +                    case LONG:, +                    case FLOAT:, +                    case DOUBLE:, +                        return new Cast(actual, expected, explicit);, +                    case CHAR:, +                        if (explicit), +                            return new Cast(actual, expected, true);, +, +                        break;, +                    case DEF:, +                        return new Cast(actual, definition.getType("def"), explicit, false, false, true, false);, +                    case OBJECT:, +                    case NUMBER:, +                    case BYTE_OBJ:, +                        if (internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +, +                        break;, +                    case SHORT_OBJ:, +                        if (internal), +                            return new Cast(actual, definition.getType("short"), explicit, false, false, false, true);, +, +                        break;, +                    case INT_OBJ:, +                        if (internal), +                            return new Cast(actual, definition.getType("int"), explicit, false, false, false, true);, +, +                        break;, +                    case LONG_OBJ:, +                        if (internal), +                            return new Cast(actual, definition.getType("long"), explicit, false, false, false, true);, +, +                        break;, +                    case FLOAT_OBJ:, +                        if (internal), +                            return new Cast(actual, definition.getType("float"), explicit, false, false, false, true);, +, +                        break;, +                    case DOUBLE_OBJ:, +                        if (internal), +                            return new Cast(actual, definition.getType("double"), explicit, false, false, false, true);, +, +                        break;, +                    case CHAR_OBJ:, +                        if (explicit && internal), +                            return new Cast(actual, definition.getType("char"), explicit, false, false, false, true);, +, +                        break;, +                }, +, +                break;, +            case SHORT:, +                switch (expected.sort) {, +                    case INT:, +                    case LONG:, +                    case FLOAT:, +                    case DOUBLE:, +                        return new Cast(actual, expected, explicit);, +                    case BYTE:, +                    case CHAR:, +                        if (explicit), +                            return new Cast(actual, expected, true);, +, +                        break;, +                    case DEF:, +                        return new Cast(actual, definition.getType("def"), explicit, false, false, true, false);, +                    case OBJECT:, +                    case NUMBER:, +                    case SHORT_OBJ:, +                        if (internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +, +                        break;, +                    case INT_OBJ:, +                        if (internal), +                            return new Cast(actual, definition.getType("int"), explicit, false, false, false, true);, +, +                        break;, +                    case LONG_OBJ:, +                        if (internal), +                            return new Cast(actual, definition.getType("long"), explicit, false, false, false, true);, +, +                        break;]