[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +    private static Environment initialSettings(boolean foreground, String pidFile) {, +        Environment environment = initialSettings(foreground, pidFile);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +    private static Environment initialSettings(boolean foreground, String pidFile) {, +        Environment environment = initialSettings(foreground, pidFile);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +            if (options.has(daemonizeOption) || options.has(pidfileOption)) {, +        init(daemonize, pidFile, esSettings);, +    void init(final boolean daemonize, final String pidFile, final Map<String, String> esSettings) {, +            Bootstrap.init(!daemonize, pidFile, esSettings);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +    private static Environment initialSettings(boolean foreground, String pidFile) {, +        Environment environment = initialSettings(foreground, pidFile);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +            if (options.has(daemonizeOption) || options.has(pidfileOption)) {, +        init(daemonize, pidFile, esSettings);, +    void init(final boolean daemonize, final String pidFile, final Map<String, String> esSettings) {, +            Bootstrap.init(!daemonize, pidFile, esSettings);, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +    private static Environment initialSettings(boolean foreground, String pidFile) {, +        Environment environment = initialSettings(foreground, pidFile);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +            if (options.has(daemonizeOption) || options.has(pidfileOption)) {, +        init(daemonize, pidFile, esSettings);, +    void init(final boolean daemonize, final String pidFile, final Map<String, String> esSettings) {, +            Bootstrap.init(!daemonize, pidFile, esSettings);, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +++ b/core/src/test/java/org/elasticsearch/bootstrap/ElasticsearchCliTests.java, +        runTest(expectedStatus, false, outputConsumer, (foreground, pidFile, esSettings) -> {}, args);, +                (foreground, pidFile, esSettings) -> assertThat(pidFile, equalTo("/tmp/pid")),, +                (foreground, pidFile, esSettings) -> assertThat(foreground, equalTo(!expectedDaemonize)),, +                (foreground, pidFile, esSettings) -> {, +                (foreground, pidFile, esSettings) -> {},, +                (foreground, pidFile, esSettings) -> {},, +                (foreground, pidFile, esSettings) -> {},, +        void accept(final boolean foreground, final String pidFile, final Map<String, String> esSettings);, +                void init(final boolean daemonize, final String pidFile, final Map<String, String> esSettings) {, +                    initConsumer.accept(!daemonize, pidFile, esSettings);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +    private static Environment initialSettings(boolean foreground, String pidFile) {, +        Environment environment = initialSettings(foreground, pidFile);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +            if (options.has(daemonizeOption) || options.has(pidfileOption)) {, +        init(daemonize, pidFile, esSettings);, +    void init(final boolean daemonize, final String pidFile, final Map<String, String> esSettings) {, +            Bootstrap.init(!daemonize, pidFile, esSettings);, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +++ b/core/src/test/java/org/elasticsearch/bootstrap/ElasticsearchCliTests.java, +        runTest(expectedStatus, false, outputConsumer, (foreground, pidFile, esSettings) -> {}, args);, +                (foreground, pidFile, esSettings) -> assertThat(pidFile, equalTo("/tmp/pid")),, +                (foreground, pidFile, esSettings) -> assertThat(foreground, equalTo(!expectedDaemonize)),, +                (foreground, pidFile, esSettings) -> {, +                (foreground, pidFile, esSettings) -> {},, +                (foreground, pidFile, esSettings) -> {},, +                (foreground, pidFile, esSettings) -> {},, +        void accept(final boolean foreground, final String pidFile, final Map<String, String> esSettings);, +                void init(final boolean daemonize, final String pidFile, final Map<String, String> esSettings) {, +                    initConsumer.accept(!daemonize, pidFile, esSettings);, +++ b/distribution/deb/src/main/packaging/init.d/elasticsearch, +DAEMON_OPTS="-d -p $PID_FILE -Ees.default.path.logs=$LOG_DIR -Ees.default.path.data=$DATA_DIR -Ees.default.path.conf=$CONF_DIR", +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +    private static Environment initialSettings(boolean foreground, String pidFile) {, +        Environment environment = initialSettings(foreground, pidFile);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +            if (options.has(daemonizeOption) || options.has(pidfileOption)) {, +        init(daemonize, pidFile, esSettings);, +    void init(final boolean daemonize, final String pidFile, final Map<String, String> esSettings) {, +            Bootstrap.init(!daemonize, pidFile, esSettings);, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +++ b/core/src/test/java/org/elasticsearch/bootstrap/ElasticsearchCliTests.java, +        runTest(expectedStatus, false, outputConsumer, (foreground, pidFile, esSettings) -> {}, args);, +                (foreground, pidFile, esSettings) -> assertThat(pidFile, equalTo("/tmp/pid")),, +                (foreground, pidFile, esSettings) -> assertThat(foreground, equalTo(!expectedDaemonize)),, +                (foreground, pidFile, esSettings) -> {, +                (foreground, pidFile, esSettings) -> {},, +                (foreground, pidFile, esSettings) -> {},, +                (foreground, pidFile, esSettings) -> {},, +        void accept(final boolean foreground, final String pidFile, final Map<String, String> esSettings);, +                void init(final boolean daemonize, final String pidFile, final Map<String, String> esSettings) {, +                    initConsumer.accept(!daemonize, pidFile, esSettings);, +++ b/distribution/deb/src/main/packaging/init.d/elasticsearch, +DAEMON_OPTS="-d -p $PID_FILE -Ees.default.path.logs=$LOG_DIR -Ees.default.path.data=$DATA_DIR -Ees.default.path.conf=$CONF_DIR", +++ b/distribution/src/main/packaging/systemd/elasticsearch.service, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +    private static Environment initialSettings(boolean foreground, String pidFile) {, +        Environment environment = initialSettings(foreground, pidFile);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +            if (options.has(daemonizeOption) || options.has(pidfileOption)) {, +        init(daemonize, pidFile, esSettings);, +    void init(final boolean daemonize, final String pidFile, final Map<String, String> esSettings) {, +            Bootstrap.init(!daemonize, pidFile, esSettings);, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +++ b/core/src/test/java/org/elasticsearch/bootstrap/ElasticsearchCliTests.java, +        runTest(expectedStatus, false, outputConsumer, (foreground, pidFile, esSettings) -> {}, args);, +                (foreground, pidFile, esSettings) -> assertThat(pidFile, equalTo("/tmp/pid")),, +                (foreground, pidFile, esSettings) -> assertThat(foreground, equalTo(!expectedDaemonize)),, +                (foreground, pidFile, esSettings) -> {, +                (foreground, pidFile, esSettings) -> {},]