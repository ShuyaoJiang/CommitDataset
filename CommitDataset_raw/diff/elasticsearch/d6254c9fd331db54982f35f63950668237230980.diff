[+++ b/docs/en/watcher/actions/email.asciidoc, +| `request.auth`  | Additional auth configuration for the request, +| `request.proxy` | Additional proxy configuration for the request, +++ b/docs/en/watcher/actions/email.asciidoc, +| `request.auth`  | Additional auth configuration for the request, +| `request.proxy` | Additional proxy configuration for the request, +++ b/plugin/src/main/java/org/elasticsearch/xpack/notification/email/attachment/ReportingAttachment.java, +import org.elasticsearch.xpack.common.http.HttpProxy;, +    static final ParseField INLINE = new ParseField("inline");, +    static final ParseField AUTH = new ParseField("auth");, +    static final ParseField PROXY = new ParseField("proxy");, +    static final ParseField INTERVAL = new ParseField("interval");, +    static final ParseField RETRIES = new ParseField("retries");, +    static final ParseField URL = new ParseField("url");, +    private final HttpProxy proxy;, +    ReportingAttachment(String id, String url, boolean inline, @Nullable TimeValue interval, @Nullable Integer retries,, +                        @Nullable HttpAuth auth, @Nullable HttpProxy proxy) {, +        this.proxy = proxy;, +    public HttpProxy proxy() {, +        return proxy;, +    }, +, +        if (proxy != null) {, +            proxy.toXContent(builder, params);, +        }, +, +               Objects.equals(retries, otherAttachment.retries) && Objects.equals(auth, otherAttachment.auth) &&, +               Objects.equals(proxy, otherAttachment.proxy);, +        return Objects.hash(id, url, interval, inline, retries, auth, proxy);, +++ b/docs/en/watcher/actions/email.asciidoc, +| `request.auth`  | Additional auth configuration for the request, +| `request.proxy` | Additional proxy configuration for the request, +++ b/plugin/src/main/java/org/elasticsearch/xpack/notification/email/attachment/ReportingAttachment.java, +import org.elasticsearch.xpack.common.http.HttpProxy;, +    static final ParseField INLINE = new ParseField("inline");, +    static final ParseField AUTH = new ParseField("auth");, +    static final ParseField PROXY = new ParseField("proxy");, +    static final ParseField INTERVAL = new ParseField("interval");, +    static final ParseField RETRIES = new ParseField("retries");, +    static final ParseField URL = new ParseField("url");, +    private final HttpProxy proxy;, +    ReportingAttachment(String id, String url, boolean inline, @Nullable TimeValue interval, @Nullable Integer retries,, +                        @Nullable HttpAuth auth, @Nullable HttpProxy proxy) {, +        this.proxy = proxy;, +    public HttpProxy proxy() {, +        return proxy;, +    }, +, +        if (proxy != null) {, +            proxy.toXContent(builder, params);, +        }, +, +               Objects.equals(retries, otherAttachment.retries) && Objects.equals(auth, otherAttachment.auth) &&, +               Objects.equals(proxy, otherAttachment.proxy);, +        return Objects.hash(id, url, interval, inline, retries, auth, proxy);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/notification/email/attachment/ReportingAttachmentParser.java, +import org.elasticsearch.xpack.common.http.HttpProxy;, +        PARSER.declareInt(Builder::retries, ReportingAttachment.RETRIES);, +        PARSER.declareBoolean(Builder::inline, ReportingAttachment.INLINE);, +        PARSER.declareString(Builder::interval, ReportingAttachment.INTERVAL);, +        PARSER.declareString(Builder::url, ReportingAttachment.URL);, +        PARSER.declareObjectOrDefault(Builder::auth, (p, s) -> s.parseAuth(p), () -> null, ReportingAttachment.AUTH);, +        PARSER.declareObjectOrDefault(Builder::proxy, (p, s) -> s.parseProxy(p), () -> null, ReportingAttachment.PROXY);, +                .proxy(attachment.proxy()), +                .proxy(attachment.proxy()), +     * A helper class to parse HTTP auth and proxy structures, which is read by an old school pull parser, that is handed over in the ctor., +, +        HttpProxy parseProxy(XContentParser parser) {, +            try {, +                return HttpProxy.parse(parser);, +            } catch (IOException e) {, +                throw new UncheckedIOException(e);, +            }, +        }, +        private HttpProxy proxy;, +        Builder proxy(HttpProxy proxy) {, +            this.proxy = proxy;, +            return this;, +        }, +, +            return new ReportingAttachment(id, url, inline, interval, retries, auth, proxy);, +++ b/docs/en/watcher/actions/email.asciidoc, +| `request.auth`  | Additional auth configuration for the request, +| `request.proxy` | Additional proxy configuration for the request, +++ b/plugin/src/main/java/org/elasticsearch/xpack/notification/email/attachment/ReportingAttachment.java, +import org.elasticsearch.xpack.common.http.HttpProxy;, +    static final ParseField INLINE = new ParseField("inline");, +    static final ParseField AUTH = new ParseField("auth");, +    static final ParseField PROXY = new ParseField("proxy");, +    static final ParseField INTERVAL = new ParseField("interval");, +    static final ParseField RETRIES = new ParseField("retries");, +    static final ParseField URL = new ParseField("url");, +    private final HttpProxy proxy;, +    ReportingAttachment(String id, String url, boolean inline, @Nullable TimeValue interval, @Nullable Integer retries,, +                        @Nullable HttpAuth auth, @Nullable HttpProxy proxy) {, +        this.proxy = proxy;, +    public HttpProxy proxy() {, +        return proxy;, +    }, +]