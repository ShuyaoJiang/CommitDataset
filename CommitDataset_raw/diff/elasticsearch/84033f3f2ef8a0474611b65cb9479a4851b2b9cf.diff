[+++ b/TESTING.asciidoc, +./run.sh, +If you want to run elasticsearch from your IDE, you should execute ./run.sh, +++ b/TESTING.asciidoc, +./run.sh, +If you want to run elasticsearch from your IDE, you should execute ./run.sh, +++ b/build.gradle, +    // Uncomment the following line to first resolve against the maven local repo. This is useful for eclipse users who want to work on test-framework., +    // mavenLocal(), +          // so that eclipse doesn't have circular references, +          // the downside is, if you hack on test-framework, you have to gradle install, +          // the first prop detects eclipse itself, the second detects eclipse from commandline, +          if (System.getProperty("eclipse.launcher") == null && gradle.startParameter.taskNames.contains('eclipse') == false) {, +          }, +++ b/TESTING.asciidoc, +./run.sh, +If you want to run elasticsearch from your IDE, you should execute ./run.sh, +++ b/build.gradle, +    // Uncomment the following line to first resolve against the maven local repo. This is useful for eclipse users who want to work on test-framework., +    // mavenLocal(), +          // so that eclipse doesn't have circular references, +          // the downside is, if you hack on test-framework, you have to gradle install, +          // the first prop detects eclipse itself, the second detects eclipse from commandline, +          if (System.getProperty("eclipse.launcher") == null && gradle.startParameter.taskNames.contains('eclipse') == false) {, +          }, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    static EnumMap<TestStatus, String> statusNames;, +++ b/TESTING.asciidoc, +./run.sh, +If you want to run elasticsearch from your IDE, you should execute ./run.sh, +++ b/build.gradle, +    // Uncomment the following line to first resolve against the maven local repo. This is useful for eclipse users who want to work on test-framework., +    // mavenLocal(), +          // so that eclipse doesn't have circular references, +          // the downside is, if you hack on test-framework, you have to gradle install, +          // the first prop detects eclipse itself, the second detects eclipse from commandline, +          if (System.getProperty("eclipse.launcher") == null && gradle.startParameter.taskNames.contains('eclipse') == false) {, +          }, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    static EnumMap<TestStatus, String> statusNames;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                    plugin 'installPlugin', project.bundlePlugin.outputs.files, +++ b/TESTING.asciidoc, +./run.sh, +If you want to run elasticsearch from your IDE, you should execute ./run.sh, +++ b/build.gradle, +    // Uncomment the following line to first resolve against the maven local repo. This is useful for eclipse users who want to work on test-framework., +    // mavenLocal(), +          // so that eclipse doesn't have circular references, +          // the downside is, if you hack on test-framework, you have to gradle install, +          // the first prop detects eclipse itself, the second detects eclipse from commandline, +          if (System.getProperty("eclipse.launcher") == null && gradle.startParameter.taskNames.contains('eclipse') == false) {, +          }, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    static EnumMap<TestStatus, String> statusNames;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                    plugin 'installPlugin', project.bundlePlugin.outputs.files, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +        project.clean {, +            delete generatedResourcesDir, +        }, +            configure {, +                        String warning = "WARNING: Disabling plugin isolation in ${project.name} is deprecated and will be removed in the future", +                from templateFile, +                into generatedResourcesDir, +    }, +++ b/TESTING.asciidoc, +./run.sh, +If you want to run elasticsearch from your IDE, you should execute ./run.sh, +++ b/build.gradle, +    // Uncomment the following line to first resolve against the maven local repo. This is useful for eclipse users who want to work on test-framework., +    // mavenLocal(), +          // so that eclipse doesn't have circular references, +          // the downside is, if you hack on test-framework, you have to gradle install, +          // the first prop detects eclipse itself, the second detects eclipse from commandline, +          if (System.getProperty("eclipse.launcher") == null && gradle.startParameter.taskNames.contains('eclipse') == false) {, +          }, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    static EnumMap<TestStatus, String> statusNames;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                    plugin 'installPlugin', project.bundlePlugin.outputs.files, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +        project.clean {, +            delete generatedResourcesDir, +        }, +            configure {, +                        String warning = "WARNING: Disabling plugin isolation in ${project.name} is deprecated and will be removed in the future", +                from templateFile, +                into generatedResourcesDir, +    }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    @Input, +    void systemProperty(String property, String value) {, +        systemProperties.put(property, value), +    }, +        setupCommands.put(name, ['bin/plugin', 'install', new LazyFileUri(file: file)]), +    static class LazyFileUri {, +        FileCollection file, +        @Override, +        String toString() {]