[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        } else if (clusterState.blocks().hasGlobalBlock(GatewayService.STATE_NOT_RECOVERED_BLOCK)) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        } else if (clusterState.blocks().hasGlobalBlock(GatewayService.STATE_NOT_RECOVERED_BLOCK)) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterService.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +import org.elasticsearch.cluster.block.ClusterBlock;, +    /**, +     * Adds an initial block to be set on the first cluster state created., +     */, +    void addInitialStateBlock(ClusterBlock block) throws ElasticSearchIllegalStateException;, +    /**, +     * The operation routing., +     */, +    OperationRouting operationRouting();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        } else if (clusterState.blocks().hasGlobalBlock(GatewayService.STATE_NOT_RECOVERED_BLOCK)) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterService.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +import org.elasticsearch.cluster.block.ClusterBlock;, +    /**, +     * Adds an initial block to be set on the first cluster state created., +     */, +    void addInitialStateBlock(ClusterBlock block) throws ElasticSearchIllegalStateException;, +    /**, +     * The operation routing., +     */, +    OperationRouting operationRouting();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +import org.elasticsearch.cluster.block.ClusterBlock;, +import org.elasticsearch.cluster.block.ClusterBlocks;, +    private final ClusterBlocks.Builder initialBlocks = ClusterBlocks.builder();, +, +    public void addInitialStateBlock(ClusterBlock block) throws ElasticSearchIllegalStateException {, +        if (lifecycle.started()) {, +            throw new ElasticSearchIllegalStateException("can't set initial block when started");, +        }, +        initialBlocks.addGlobalBlock(block);, +    }, +, +        this.clusterState = newClusterStateBuilder().blocks(initialBlocks).build();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        } else if (clusterState.blocks().hasGlobalBlock(GatewayService.STATE_NOT_RECOVERED_BLOCK)) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterService.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +import org.elasticsearch.cluster.block.ClusterBlock;, +    /**, +     * Adds an initial block to be set on the first cluster state created., +     */, +    void addInitialStateBlock(ClusterBlock block) throws ElasticSearchIllegalStateException;, +    /**, +     * The operation routing., +     */, +    OperationRouting operationRouting();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +import org.elasticsearch.cluster.block.ClusterBlock;, +import org.elasticsearch.cluster.block.ClusterBlocks;, +    private final ClusterBlocks.Builder initialBlocks = ClusterBlocks.builder();, +, +    public void addInitialStateBlock(ClusterBlock block) throws ElasticSearchIllegalStateException {, +        if (lifecycle.started()) {, +            throw new ElasticSearchIllegalStateException("can't set initial block when started");, +        }, +        initialBlocks.addGlobalBlock(block);, +    }, +, +        this.clusterState = newClusterStateBuilder().blocks(initialBlocks).build();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/gateway/GatewayService.java, +    public static final ClusterBlock STATE_NOT_RECOVERED_BLOCK = new ClusterBlock(1, "state not recovered / initialized", true, ClusterBlockLevel.ALL);, +, +        // Add the not recovered as initial state block, we don't allow anything until, +        this.clusterService.addInitialStateBlock(STATE_NOT_RECOVERED_BLOCK);, +                ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks()).removeGlobalBlock(STATE_NOT_RECOVERED_BLOCK);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        } else if (clusterState.blocks().hasGlobalBlock(GatewayService.STATE_NOT_RECOVERED_BLOCK)) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterService.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +import org.elasticsearch.cluster.block.ClusterBlock;, +    /**, +     * Adds an initial block to be set on the first cluster state created., +     */, +    void addInitialStateBlock(ClusterBlock block) throws ElasticSearchIllegalStateException;, +    /**, +     * The operation routing., +     */, +    OperationRouting operationRouting();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +import org.elasticsearch.cluster.block.ClusterBlock;, +import org.elasticsearch.cluster.block.ClusterBlocks;, +    private final ClusterBlocks.Builder initialBlocks = ClusterBlocks.builder();, +, +    public void addInitialStateBlock(ClusterBlock block) throws ElasticSearchIllegalStateException {, +        if (lifecycle.started()) {, +            throw new ElasticSearchIllegalStateException("can't set initial block when started");, +        }, +        initialBlocks.addGlobalBlock(block);, +    }]