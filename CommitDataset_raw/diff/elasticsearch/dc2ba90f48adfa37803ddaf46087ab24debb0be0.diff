[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/search/SearchService.java, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +import org.elasticsearch.search.fetch.FetchSubPhaseParser;, +    private final Map<String, FetchSubPhaseParser> fetchPhaseParsers;, +        this.fetchPhaseParsers = unmodifiableMap(fetchPhase.parsers());, +                        FetchSubPhaseParser fetchSubPhaseParser = this.fetchPhaseParsers.get(currentFieldName);, +                        if (fetchSubPhaseParser == null) {, +                            FetchSubPhaseContext fetchSubPhaseContext = fetchSubPhaseParser.parse(extParser);, +                            context.putFetchSubPhaseContext(currentFieldName, fetchSubPhaseContext);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/search/SearchService.java, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +import org.elasticsearch.search.fetch.FetchSubPhaseParser;, +    private final Map<String, FetchSubPhaseParser> fetchPhaseParsers;, +        this.fetchPhaseParsers = unmodifiableMap(fetchPhase.parsers());, +                        FetchSubPhaseParser fetchSubPhaseParser = this.fetchPhaseParsers.get(currentFieldName);, +                        if (fetchSubPhaseParser == null) {, +                            FetchSubPhaseContext fetchSubPhaseContext = fetchSubPhaseParser.parse(extParser);, +                            context.putFetchSubPhaseContext(currentFieldName, fetchSubPhaseContext);, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +    public Map<String, ? extends FetchSubPhaseParser> parsers() {, +        Map<String, FetchSubPhaseParser> parsers = new HashMap<>();, +            parsers.putAll(fetchSubPhase.parsers());, +        return unmodifiableMap(parsers);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/search/SearchService.java, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +import org.elasticsearch.search.fetch.FetchSubPhaseParser;, +    private final Map<String, FetchSubPhaseParser> fetchPhaseParsers;, +        this.fetchPhaseParsers = unmodifiableMap(fetchPhase.parsers());, +                        FetchSubPhaseParser fetchSubPhaseParser = this.fetchPhaseParsers.get(currentFieldName);, +                        if (fetchSubPhaseParser == null) {, +                            FetchSubPhaseContext fetchSubPhaseContext = fetchSubPhaseParser.parse(extParser);, +                            context.putFetchSubPhaseContext(currentFieldName, fetchSubPhaseContext);, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +    public Map<String, ? extends FetchSubPhaseParser> parsers() {, +        Map<String, FetchSubPhaseParser> parsers = new HashMap<>();, +            parsers.putAll(fetchSubPhase.parsers());, +        return unmodifiableMap(parsers);, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchSubPhase.java, +    default Map<String, ? extends FetchSubPhaseParser> parsers() {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/search/SearchService.java, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +import org.elasticsearch.search.fetch.FetchSubPhaseParser;, +    private final Map<String, FetchSubPhaseParser> fetchPhaseParsers;, +        this.fetchPhaseParsers = unmodifiableMap(fetchPhase.parsers());, +                        FetchSubPhaseParser fetchSubPhaseParser = this.fetchPhaseParsers.get(currentFieldName);, +                        if (fetchSubPhaseParser == null) {, +                            FetchSubPhaseContext fetchSubPhaseContext = fetchSubPhaseParser.parse(extParser);, +                            context.putFetchSubPhaseContext(currentFieldName, fetchSubPhaseContext);, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +    public Map<String, ? extends FetchSubPhaseParser> parsers() {, +        Map<String, FetchSubPhaseParser> parsers = new HashMap<>();, +            parsers.putAll(fetchSubPhase.parsers());, +        return unmodifiableMap(parsers);, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchSubPhase.java, +    default Map<String, ? extends FetchSubPhaseParser> parsers() {, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchSubPhaseContext.java, +public abstract class FetchSubPhaseContext {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/search/SearchService.java, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +import org.elasticsearch.search.fetch.FetchSubPhaseParser;, +    private final Map<String, FetchSubPhaseParser> fetchPhaseParsers;, +        this.fetchPhaseParsers = unmodifiableMap(fetchPhase.parsers());, +                        FetchSubPhaseParser fetchSubPhaseParser = this.fetchPhaseParsers.get(currentFieldName);, +                        if (fetchSubPhaseParser == null) {, +                            FetchSubPhaseContext fetchSubPhaseContext = fetchSubPhaseParser.parse(extParser);, +                            context.putFetchSubPhaseContext(currentFieldName, fetchSubPhaseContext);, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +    public Map<String, ? extends FetchSubPhaseParser> parsers() {, +        Map<String, FetchSubPhaseParser> parsers = new HashMap<>();, +            parsers.putAll(fetchSubPhase.parsers());, +        return unmodifiableMap(parsers);, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchSubPhase.java, +    default Map<String, ? extends FetchSubPhaseParser> parsers() {, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchSubPhaseContext.java, +public abstract class FetchSubPhaseContext {, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchSubPhaseParser.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */]