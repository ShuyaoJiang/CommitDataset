[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                project.tasks.run.clusterConfig.distribution = System.getProperty(, +                        'run.distribution', 'integ-test-zip', +                ), +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'integ-test-zip'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                project.tasks.run.clusterConfig.distribution = System.getProperty(, +                        'run.distribution', 'integ-test-zip', +                ), +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'integ-test-zip'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        if (System.getProperty('tests.distribution', 'oss-zip') == 'integ-test-zip') {, +            throw new Exception("tests.distribution=integ-test-zip is not supported"), +        }, +            project.logger.lifecycle("Not installing modules for $name, ${node.config.distribution} already has them"), +            return setup, +        start.doFirst {, +            project.logger.info("Starting node in ${node.clusterName} distribution: ${node.config.distribution}"), +        }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                project.tasks.run.clusterConfig.distribution = System.getProperty(, +                        'run.distribution', 'integ-test-zip', +                ), +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'integ-test-zip'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        if (System.getProperty('tests.distribution', 'oss-zip') == 'integ-test-zip') {, +            throw new Exception("tests.distribution=integ-test-zip is not supported"), +        }, +            project.logger.lifecycle("Not installing modules for $name, ${node.config.distribution} already has them"), +            return setup, +        start.doFirst {, +            project.logger.info("Starting node in ${node.clusterName} distribution: ${node.config.distribution}"), +        }, +++ b/modules/aggs-matrix-stats/src/test/resources/rest-api-spec/test/stats/10_basic.yml, +    - contains:  { nodes.$master.modules: { name: aggs-matrix-stats } }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                project.tasks.run.clusterConfig.distribution = System.getProperty(, +                        'run.distribution', 'integ-test-zip', +                ), +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'integ-test-zip'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        if (System.getProperty('tests.distribution', 'oss-zip') == 'integ-test-zip') {, +            throw new Exception("tests.distribution=integ-test-zip is not supported"), +        }, +            project.logger.lifecycle("Not installing modules for $name, ${node.config.distribution} already has them"), +            return setup, +        start.doFirst {, +            project.logger.info("Starting node in ${node.clusterName} distribution: ${node.config.distribution}"), +        }, +++ b/modules/aggs-matrix-stats/src/test/resources/rest-api-spec/test/stats/10_basic.yml, +    - contains:  { nodes.$master.modules: { name: aggs-matrix-stats } }, +++ b/modules/analysis-common/src/test/resources/rest-api-spec/test/analysis-common/10_basic.yml, +    - contains:  { nodes.$master.modules: { name: analysis-common } }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                project.tasks.run.clusterConfig.distribution = System.getProperty(, +                        'run.distribution', 'integ-test-zip', +                ), +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'integ-test-zip'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        if (System.getProperty('tests.distribution', 'oss-zip') == 'integ-test-zip') {, +            throw new Exception("tests.distribution=integ-test-zip is not supported"), +        }, +            project.logger.lifecycle("Not installing modules for $name, ${node.config.distribution} already has them"), +            return setup, +        start.doFirst {, +            project.logger.info("Starting node in ${node.clusterName} distribution: ${node.config.distribution}"), +        }, +++ b/modules/aggs-matrix-stats/src/test/resources/rest-api-spec/test/stats/10_basic.yml, +    - contains:  { nodes.$master.modules: { name: aggs-matrix-stats } }, +++ b/modules/analysis-common/src/test/resources/rest-api-spec/test/analysis-common/10_basic.yml, +    - contains:  { nodes.$master.modules: { name: analysis-common } }, +++ b/modules/ingest-common/src/test/resources/rest-api-spec/test/ingest/10_basic.yml, +    - contains:  { nodes.$master.modules: { name: ingest-common } }, +    - contains:  { nodes.$master.ingest.processors: { type: append } }, +    - contains:  { nodes.$master.ingest.processors: { type: convert } }, +    - contains:  { nodes.$master.ingest.processors: { type: date } }, +    - contains:  { nodes.$master.ingest.processors: { type: date_index_name } }, +    - contains:  { nodes.$master.ingest.processors: { type: dot_expander } }, +    - contains:  { nodes.$master.ingest.processors: { type: fail } }, +    - contains:  { nodes.$master.ingest.processors: { type: foreach } }, +    - contains:  { nodes.$master.ingest.processors: { type: grok } }, +    - contains:  { nodes.$master.ingest.processors: { type: gsub } }, +    - contains:  { nodes.$master.ingest.processors: { type: join } }, +    - contains:  { nodes.$master.ingest.processors: { type: json } }, +    - contains:  { nodes.$master.ingest.processors: { type: kv } }, +    - contains:  { nodes.$master.ingest.processors: { type: lowercase } }, +    - contains:  { nodes.$master.ingest.processors: { type: remove } }, +    - contains:  { nodes.$master.ingest.processors: { type: rename } }, +    - contains:  { nodes.$master.ingest.processors: { type: script } }, +    - contains:  { nodes.$master.ingest.processors: { type: set } }, +    - contains:  { nodes.$master.ingest.processors: { type: sort } }, +    - contains:  { nodes.$master.ingest.processors: { type: split } }, +    - contains:  { nodes.$master.ingest.processors: { type: trim } }, +    - contains:  { nodes.$master.ingest.processors: { type: uppercase } }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                project.tasks.run.clusterConfig.distribution = System.getProperty(, +                        'run.distribution', 'integ-test-zip', +                ), +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'integ-test-zip'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy]