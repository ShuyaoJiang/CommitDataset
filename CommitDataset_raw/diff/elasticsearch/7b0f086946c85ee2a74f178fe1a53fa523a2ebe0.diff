[+++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/FutureUtils.java, +, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/FutureUtils.java, +, +++ b/core/src/main/java/org/elasticsearch/threadpool/ThreadPool.java, +    static final Executor DIRECT_EXECUTOR = command -> command.run();, +, +        executors.put(Names.SAME, new ExecutorHolder(DIRECT_EXECUTOR, new Info(Names.SAME, "same")));, +            return new ExecutorHolder(DIRECT_EXECUTOR, new Info(name, type));, +            assert executor instanceof EsThreadPoolExecutor || executor == DIRECT_EXECUTOR;, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/FutureUtils.java, +, +++ b/core/src/main/java/org/elasticsearch/threadpool/ThreadPool.java, +    static final Executor DIRECT_EXECUTOR = command -> command.run();, +, +        executors.put(Names.SAME, new ExecutorHolder(DIRECT_EXECUTOR, new Info(Names.SAME, "same")));, +            return new ExecutorHolder(DIRECT_EXECUTOR, new Info(name, type));, +            assert executor instanceof EsThreadPoolExecutor || executor == DIRECT_EXECUTOR;, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +import org.elasticsearch.test.InternalTestCluster;, +import java.util.concurrent.Future;, +        InternalTestCluster.Async<List<String>> replicas = internalCluster().startNodesAsync(1); // for replicas, +        InternalTestCluster.Async<String> singleDataPathNode = internalCluster().startNodeAsync(nodeSettings.build());, +        InternalTestCluster.Async<String> multiDataPathNode = internalCluster().startNodeAsync(nodeSettings.build());, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/FutureUtils.java, +, +++ b/core/src/main/java/org/elasticsearch/threadpool/ThreadPool.java, +    static final Executor DIRECT_EXECUTOR = command -> command.run();, +, +        executors.put(Names.SAME, new ExecutorHolder(DIRECT_EXECUTOR, new Info(Names.SAME, "same")));, +            return new ExecutorHolder(DIRECT_EXECUTOR, new Info(name, type));, +            assert executor instanceof EsThreadPoolExecutor || executor == DIRECT_EXECUTOR;, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +import org.elasticsearch.test.InternalTestCluster;, +import java.util.concurrent.Future;, +        InternalTestCluster.Async<List<String>> replicas = internalCluster().startNodesAsync(1); // for replicas, +        InternalTestCluster.Async<String> singleDataPathNode = internalCluster().startNodeAsync(nodeSettings.build());, +        InternalTestCluster.Async<String> multiDataPathNode = internalCluster().startNodeAsync(nodeSettings.build());, +++ b/core/src/test/java/org/elasticsearch/cluster/ClusterServiceIT.java, +import org.elasticsearch.test.InternalTestCluster;, +        InternalTestCluster.Async<String> master = internalCluster().startNodeAsync(settings);, +        InternalTestCluster.Async<String> nonMaster = internalCluster().startNodeAsync(settingsBuilder().put(settings).put("node.master", false).build());, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/FutureUtils.java, +, +++ b/core/src/main/java/org/elasticsearch/threadpool/ThreadPool.java, +    static final Executor DIRECT_EXECUTOR = command -> command.run();, +, +        executors.put(Names.SAME, new ExecutorHolder(DIRECT_EXECUTOR, new Info(Names.SAME, "same")));, +            return new ExecutorHolder(DIRECT_EXECUTOR, new Info(name, type));, +            assert executor instanceof EsThreadPoolExecutor || executor == DIRECT_EXECUTOR;, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +import org.elasticsearch.test.InternalTestCluster;, +import java.util.concurrent.Future;, +        InternalTestCluster.Async<List<String>> replicas = internalCluster().startNodesAsync(1); // for replicas, +        InternalTestCluster.Async<String> singleDataPathNode = internalCluster().startNodeAsync(nodeSettings.build());, +        InternalTestCluster.Async<String> multiDataPathNode = internalCluster().startNodeAsync(nodeSettings.build());, +++ b/core/src/test/java/org/elasticsearch/cluster/ClusterServiceIT.java, +import org.elasticsearch.test.InternalTestCluster;, +        InternalTestCluster.Async<String> master = internalCluster().startNodeAsync(settings);, +        InternalTestCluster.Async<String> nonMaster = internalCluster().startNodeAsync(settingsBuilder().put(settings).put("node.master", false).build());, +++ b/core/src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptionsIT.java, +            InternalTestCluster.Async<String> masterNodeFuture = internalCluster().startMasterOnlyNodeAsync();, +            InternalTestCluster.Async<String> node1Future = internalCluster().startDataOnlyNodeAsync();, +        InternalTestCluster.Async<String> masterNodeFuture = internalCluster().startMasterOnlyNodeAsync();, +        InternalTestCluster.Async<String> node_1Future = internalCluster().startDataOnlyNodeAsync();, +        InternalTestCluster.Async<String> node_2Future = internalCluster().startDataOnlyNodeAsync();, +        InternalTestCluster.Async<List<String>> masterNodes= internalCluster().startMasterOnlyNodesAsync(2);, +        InternalTestCluster.Async<String> dataNode = internalCluster().startDataOnlyNodeAsync();, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/FutureUtils.java, +, +++ b/core/src/main/java/org/elasticsearch/threadpool/ThreadPool.java, +    static final Executor DIRECT_EXECUTOR = command -> command.run();, +, +        executors.put(Names.SAME, new ExecutorHolder(DIRECT_EXECUTOR, new Info(Names.SAME, "same")));, +            return new ExecutorHolder(DIRECT_EXECUTOR, new Info(name, type));, +            assert executor instanceof EsThreadPoolExecutor || executor == DIRECT_EXECUTOR;, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +import org.elasticsearch.test.InternalTestCluster;, +import java.util.concurrent.Future;, +        InternalTestCluster.Async<List<String>> replicas = internalCluster().startNodesAsync(1); // for replicas, +        InternalTestCluster.Async<String> singleDataPathNode = internalCluster().startNodeAsync(nodeSettings.build());, +        InternalTestCluster.Async<String> multiDataPathNode = internalCluster().startNodeAsync(nodeSettings.build());, +++ b/core/src/test/java/org/elasticsearch/cluster/ClusterServiceIT.java, +import org.elasticsearch.test.InternalTestCluster;, +        InternalTestCluster.Async<String> master = internalCluster().startNodeAsync(settings);, +        InternalTestCluster.Async<String> nonMaster = internalCluster().startNodeAsync(settingsBuilder().put(settings).put("node.master", false).build());, +++ b/core/src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptionsIT.java, +            InternalTestCluster.Async<String> masterNodeFuture = internalCluster().startMasterOnlyNodeAsync();, +            InternalTestCluster.Async<String> node1Future = internalCluster().startDataOnlyNodeAsync();, +        InternalTestCluster.Async<String> masterNodeFuture = internalCluster().startMasterOnlyNodeAsync();, +        InternalTestCluster.Async<String> node_1Future = internalCluster().startDataOnlyNodeAsync();, +        InternalTestCluster.Async<String> node_2Future = internalCluster().startDataOnlyNodeAsync();, +        InternalTestCluster.Async<List<String>> masterNodes= internalCluster().startMasterOnlyNodesAsync(2);, +        InternalTestCluster.Async<String> dataNode = internalCluster().startDataOnlyNodeAsync();, +++ b/core/src/test/java/org/elasticsearch/gateway/MetaDataWriteDataNodesIT.java, +        InternalTestCluster.Async<String> nodeName1 = internalCluster().startDataOnlyNodeAsync();, +        InternalTestCluster.Async<String> nodeName2 = internalCluster().startDataOnlyNodeAsync();, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/FutureUtils.java, +, +++ b/core/src/main/java/org/elasticsearch/threadpool/ThreadPool.java]