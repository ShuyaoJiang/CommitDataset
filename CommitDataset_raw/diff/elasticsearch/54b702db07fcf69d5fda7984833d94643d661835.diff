[+++ b/src/test/java/org/elasticsearch/test/store/MockDirectoryHelper.java, +import org.apache.lucene.store.FilterDirectory;, +import org.apache.lucene.store.MockDirectoryWrapper;, +import org.apache.lucene.store.NRTCachingDirectory;, +import org.apache.lucene.util.LuceneTestCase;, +import com.carrotsearch.randomizedtesting.SeedUtils;, +import java.lang.reflect.Field;, +import java.util.Collection;, +        private final Set<String> superUnSyncedFiles;, +        private final Random superRandomState;, +, +            // TODO: remove all this and cutover to MockFS (DisableFsyncFS) instead, +            try {, +                Field field = MockDirectoryWrapper.class.getDeclaredField("unSyncedFiles");, +                field.setAccessible(true);, +                superUnSyncedFiles = (Set<String>) field.get(this);, +, +                field = MockDirectoryWrapper.class.getDeclaredField("randomState");, +                field.setAccessible(true);, +                superRandomState = (Random) field.get(this);, +            } catch (ReflectiveOperationException roe) {, +                throw new RuntimeException(roe);, +            }, +        /**, +         * Returns true if {@link #in} must sync its files., +         * Currently, only {@link NRTCachingDirectory} requires sync'ing its files, +         * because otherwise they are cached in an internal {@link RAMDirectory}. If, +         * other directories require that too, they should be added to this method., +         */, +        private boolean mustSync() {, +            Directory delegate = in;, +            while (delegate instanceof FilterDirectory) {, +                if (delegate instanceof NRTCachingDirectory) {, +                    return true;, +                }, +                delegate = ((FilterDirectory) delegate).getDelegate();, +            }, +            return delegate instanceof NRTCachingDirectory;, +        }, +        @Override, +        public synchronized void sync(Collection<String> names) throws IOException {, +            // don't wear out our hardware so much in tests., +            if (LuceneTestCase.rarely(superRandomState) || mustSync()) {, +                super.sync(names);, +            } else {, +                superUnSyncedFiles.removeAll(names);, +            }, +        }]