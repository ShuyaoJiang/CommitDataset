[+++ b/Vagrantfile, +++ b/Vagrantfile, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/Vagrantfile, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantPropertiesExtension.groovy, +++ b/Vagrantfile, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +        vagrantSetUpTask.dependsOn copyPackagingArchives, createVersionFile, createUpgradeFromFile, createUpgradeIsOssFile, +            // This task doesn't do anything yet. In the future it will execute a jar containing tests on the vm, +            Task groovyPackagingTest = project.tasks.create("vagrant${boxTask}#groovyPackagingTest"), +            groovyPackagingTest.dependsOn(up), +            groovyPackagingTest.finalizedBy(halt), +            TaskExecutionAdapter groovyPackagingReproListener = createReproListener(project, groovyPackagingTest.path), +            groovyPackagingTest.doFirst {, +                project.gradle.addListener(groovyPackagingReproListener), +            groovyPackagingTest.doLast {, +                project.gradle.removeListener(groovyPackagingReproListener), +                packagingTest.dependsOn(groovyPackagingTest), +++ b/Vagrantfile, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +        vagrantSetUpTask.dependsOn copyPackagingArchives, createVersionFile, createUpgradeFromFile, createUpgradeIsOssFile, +            // This task doesn't do anything yet. In the future it will execute a jar containing tests on the vm, +            Task groovyPackagingTest = project.tasks.create("vagrant${boxTask}#groovyPackagingTest"), +            groovyPackagingTest.dependsOn(up), +            groovyPackagingTest.finalizedBy(halt), +            TaskExecutionAdapter groovyPackagingReproListener = createReproListener(project, groovyPackagingTest.path), +            groovyPackagingTest.doFirst {, +                project.gradle.addListener(groovyPackagingReproListener), +            groovyPackagingTest.doLast {, +                project.gradle.removeListener(groovyPackagingReproListener), +                packagingTest.dependsOn(groovyPackagingTest), +++ b/buildSrc/version.properties, +lucene            = 7.4.0-snapshot-330fd18f20, +++ b/Vagrantfile, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +        vagrantSetUpTask.dependsOn copyPackagingArchives, createVersionFile, createUpgradeFromFile, createUpgradeIsOssFile, +            // This task doesn't do anything yet. In the future it will execute a jar containing tests on the vm, +            Task groovyPackagingTest = project.tasks.create("vagrant${boxTask}#groovyPackagingTest"), +            groovyPackagingTest.dependsOn(up), +            groovyPackagingTest.finalizedBy(halt), +            TaskExecutionAdapter groovyPackagingReproListener = createReproListener(project, groovyPackagingTest.path), +            groovyPackagingTest.doFirst {, +                project.gradle.addListener(groovyPackagingReproListener), +            groovyPackagingTest.doLast {, +                project.gradle.removeListener(groovyPackagingReproListener), +                packagingTest.dependsOn(groovyPackagingTest), +++ b/buildSrc/version.properties, +lucene            = 7.4.0-snapshot-330fd18f20, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/NoopBulkRequestBuilder.java, +     * A timeout to wait if the index operation can't be performed immediately. Defaults to <tt>1m</tt>., +     * A timeout to wait if the index operation can't be performed immediately. Defaults to <tt>1m</tt>., +, +++ b/Vagrantfile, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +        vagrantSetUpTask.dependsOn copyPackagingArchives, createVersionFile, createUpgradeFromFile, createUpgradeIsOssFile, +            // This task doesn't do anything yet. In the future it will execute a jar containing tests on the vm, +            Task groovyPackagingTest = project.tasks.create("vagrant${boxTask}#groovyPackagingTest"), +            groovyPackagingTest.dependsOn(up), +            groovyPackagingTest.finalizedBy(halt), +            TaskExecutionAdapter groovyPackagingReproListener = createReproListener(project, groovyPackagingTest.path), +            groovyPackagingTest.doFirst {, +                project.gradle.addListener(groovyPackagingReproListener), +            groovyPackagingTest.doLast {, +                project.gradle.removeListener(groovyPackagingReproListener), +                packagingTest.dependsOn(groovyPackagingTest), +++ b/buildSrc/version.properties, +lucene            = 7.4.0-snapshot-330fd18f20, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/NoopBulkRequestBuilder.java, +     * A timeout to wait if the index operation can't be performed immediately. Defaults to <tt>1m</tt>., +     * A timeout to wait if the index operation can't be performed immediately. Defaults to <tt>1m</tt>., +, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/search/NoopSearchRequestBuilder.java, +     * <tt>_local</tt> to prefer local shards or a custom value, which guarantees that the same order, +     * From index to start the search from. Defaults to <tt>0</tt>., +     * The number of search hits to return. Defaults to <tt>10</tt>., +     * <tt>false</tt>., +++ b/Vagrantfile, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +        vagrantSetUpTask.dependsOn copyPackagingArchives, createVersionFile, createUpgradeFromFile, createUpgradeIsOssFile, +            // This task doesn't do anything yet. In the future it will execute a jar containing tests on the vm, +            Task groovyPackagingTest = project.tasks.create("vagrant${boxTask}#groovyPackagingTest"), +            groovyPackagingTest.dependsOn(up), +            groovyPackagingTest.finalizedBy(halt), +            TaskExecutionAdapter groovyPackagingReproListener = createReproListener(project, groovyPackagingTest.path), +            groovyPackagingTest.doFirst {, +                project.gradle.addListener(groovyPackagingReproListener), +            groovyPackagingTest.doLast {, +                project.gradle.removeListener(groovyPackagingReproListener), +                packagingTest.dependsOn(groovyPackagingTest)]