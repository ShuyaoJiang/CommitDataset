[+++ b/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +import org.elasticsearch.common.xcontent.XContentHelper;, +    public Map<String, Object> underlyingSourceAsMap() {, +        return XContentHelper.convertToMap(underlyingSource(), underlyingSourceOffset(), underlyingSourceLength(), false).v2();, +    }, +    , +++ b/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +import org.elasticsearch.common.xcontent.XContentHelper;, +    public Map<String, Object> underlyingSourceAsMap() {, +        return XContentHelper.convertToMap(underlyingSource(), underlyingSourceOffset(), underlyingSourceLength(), false).v2();, +    }, +    , +++ b/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +        String operation = null;, +        String timestamp = null;, +        Long ttl = null;, +        Object fetchedTTL = null;, +        final Map<String, Object> updatedSourceAsMap;, +        final XContentType updateSourceContentType = sourceAndContent.v1();, +        String routing = getResult.fields().containsKey(RoutingFieldMapper.NAME) ? getResult.field(RoutingFieldMapper.NAME).value().toString() : null;, +        String parent = getResult.fields().containsKey(ParentFieldMapper.NAME) ? getResult.field(ParentFieldMapper.NAME).value().toString() : null;, +        , +        if (request.script() == null && request.doc() != null) {, +            IndexRequest indexRequest = request.doc();, +            updatedSourceAsMap = sourceAndContent.v2();, +            if (indexRequest.ttl() > 0) {, +                ttl = indexRequest.ttl();, +            }, +            timestamp = indexRequest.timestamp();, +            if (indexRequest.routing() != null) {, +                routing = indexRequest.routing();, +            }, +            if (indexRequest.parent() != null) {, +                parent = indexRequest.parent();, +            }, +            updateSource(updatedSourceAsMap, indexRequest.underlyingSourceAsMap());, +        } else {, +            operation = (String) ctx.get("op");, +            timestamp = (String) ctx.get("_timestamp");, +            fetchedTTL = ctx.get("_ttl");, +        , +            updatedSourceAsMap = (Map<String, Object>) ctx.get("_source");, +        }, +    , +    /**, +     * Updates the source with the specified changes.  Maps are updated recursively., +     */, +    private void updateSource(Map<String, Object> source, Map<String, Object> changes) {, +        for (Map.Entry<String, Object> changesEntry : changes.entrySet()) {, +            if (!source.containsKey(changesEntry.getKey())) {, +                // safe to copy, change does not exist in source, +                source.put(changesEntry.getKey(), changesEntry.getValue());, +            } else {, +                if (source.get(changesEntry.getKey()) instanceof Map && changesEntry.getValue() instanceof Map) {, +                    // recursive merge maps, +                    updateSource((Map<String, Object>) source.get(changesEntry.getKey()), (Map<String, Object>) changesEntry.getValue());, +                } else {, +                    // update the field, +                    source.put(changesEntry.getKey(), changesEntry.getValue());, +                }, +            }, +        }  , +    }, +++ b/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +import org.elasticsearch.common.xcontent.XContentHelper;, +    public Map<String, Object> underlyingSourceAsMap() {, +        return XContentHelper.convertToMap(underlyingSource(), underlyingSourceOffset(), underlyingSourceLength(), false).v2();, +    }, +    , +++ b/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +        String operation = null;, +        String timestamp = null;, +        Long ttl = null;, +        Object fetchedTTL = null;, +        final Map<String, Object> updatedSourceAsMap;, +        final XContentType updateSourceContentType = sourceAndContent.v1();, +        String routing = getResult.fields().containsKey(RoutingFieldMapper.NAME) ? getResult.field(RoutingFieldMapper.NAME).value().toString() : null;, +        String parent = getResult.fields().containsKey(ParentFieldMapper.NAME) ? getResult.field(ParentFieldMapper.NAME).value().toString() : null;, +        , +        if (request.script() == null && request.doc() != null) {, +            IndexRequest indexRequest = request.doc();, +            updatedSourceAsMap = sourceAndContent.v2();, +            if (indexRequest.ttl() > 0) {, +                ttl = indexRequest.ttl();, +            }, +            timestamp = indexRequest.timestamp();, +            if (indexRequest.routing() != null) {, +                routing = indexRequest.routing();, +            }, +            if (indexRequest.parent() != null) {, +                parent = indexRequest.parent();, +            }, +            updateSource(updatedSourceAsMap, indexRequest.underlyingSourceAsMap());, +        } else {, +            operation = (String) ctx.get("op");, +            timestamp = (String) ctx.get("_timestamp");, +            fetchedTTL = ctx.get("_ttl");, +        , +            updatedSourceAsMap = (Map<String, Object>) ctx.get("_source");, +        }]