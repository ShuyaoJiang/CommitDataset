[+++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/optimize/TransportOptimizeAction.java, +    protected EmptyResult shardOperation(OptimizeRequest request, ShardRouting shardRouting) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/optimize/TransportOptimizeAction.java, +    protected EmptyResult shardOperation(OptimizeRequest request, ShardRouting shardRouting) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/TransportUpgradeAction.java, +    protected ShardUpgradeResult shardOperation(UpgradeRequest request, ShardRouting shardRouting) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/optimize/TransportOptimizeAction.java, +    protected EmptyResult shardOperation(OptimizeRequest request, ShardRouting shardRouting) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/TransportUpgradeAction.java, +    protected ShardUpgradeResult shardOperation(UpgradeRequest request, ShardRouting shardRouting) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/support/TransportActions.java, +import org.apache.lucene.store.AlreadyClosedException;, +                actual instanceof UnavailableShardsException ||, +                actual instanceof AlreadyClosedException) {, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/optimize/TransportOptimizeAction.java, +    protected EmptyResult shardOperation(OptimizeRequest request, ShardRouting shardRouting) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/TransportUpgradeAction.java, +    protected ShardUpgradeResult shardOperation(UpgradeRequest request, ShardRouting shardRouting) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/support/TransportActions.java, +import org.apache.lucene.store.AlreadyClosedException;, +                actual instanceof UnavailableShardsException ||, +                actual instanceof AlreadyClosedException) {, +++ b/core/src/main/java/org/elasticsearch/action/support/broadcast/node/TransportBroadcastByNodeAction.java, +    protected abstract ShardOperationResult shardOperation(Request request, ShardRouting shardRouting) throws IOException;, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/optimize/TransportOptimizeAction.java, +    protected EmptyResult shardOperation(OptimizeRequest request, ShardRouting shardRouting) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/TransportUpgradeAction.java, +    protected ShardUpgradeResult shardOperation(UpgradeRequest request, ShardRouting shardRouting) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/support/TransportActions.java, +import org.apache.lucene.store.AlreadyClosedException;, +                actual instanceof UnavailableShardsException ||, +                actual instanceof AlreadyClosedException) {, +++ b/core/src/main/java/org/elasticsearch/action/support/broadcast/node/TransportBroadcastByNodeAction.java, +    protected abstract ShardOperationResult shardOperation(Request request, ShardRouting shardRouting) throws IOException;, +++ b/core/src/main/java/org/elasticsearch/action/support/single/shard/TransportSingleShardAction.java, +                if (logger.isTraceEnabled()) {, +                    logger.trace(, +                            "sending request [{}] to shard [{}] on node [{}]",, +                            internalRequest.request(),, +                            internalRequest.request().internalShardId,, +                            node, +                    );, +                }, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/optimize/TransportOptimizeAction.java, +    protected EmptyResult shardOperation(OptimizeRequest request, ShardRouting shardRouting) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/TransportUpgradeAction.java, +    protected ShardUpgradeResult shardOperation(UpgradeRequest request, ShardRouting shardRouting) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/support/TransportActions.java, +import org.apache.lucene.store.AlreadyClosedException;, +                actual instanceof UnavailableShardsException ||, +                actual instanceof AlreadyClosedException) {, +++ b/core/src/main/java/org/elasticsearch/action/support/broadcast/node/TransportBroadcastByNodeAction.java, +    protected abstract ShardOperationResult shardOperation(Request request, ShardRouting shardRouting) throws IOException;, +++ b/core/src/main/java/org/elasticsearch/action/support/single/shard/TransportSingleShardAction.java, +                if (logger.isTraceEnabled()) {, +                    logger.trace(, +                            "sending request [{}] to shard [{}] on node [{}]",, +                            internalRequest.request(),, +                            internalRequest.request().internalShardId,, +                            node, +                    );, +                }, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/BalancedShardsAllocator.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.gateway.PriorityComparator;, +            final PriorityComparator secondaryComparator = PriorityComparator.getAllocationComparator(allocation);, +                    // this comparator is more expensive than all the others up there, +                    // that's why it's added last even though it could be easier to read, +                    // if we'd apply it earlier. this comparator will only differentiate across, +                    // indices all shards of the same index is treated equally., +                    final int secondary = secondaryComparator.compare(o1, o2);, +                    return secondary == 0 ? indexCmp : secondary;, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/optimize/TransportOptimizeAction.java, +    protected EmptyResult shardOperation(OptimizeRequest request, ShardRouting shardRouting) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/TransportUpgradeAction.java, +    protected ShardUpgradeResult shardOperation(UpgradeRequest request, ShardRouting shardRouting) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/support/TransportActions.java, +import org.apache.lucene.store.AlreadyClosedException;, +                actual instanceof UnavailableShardsException ||, +                actual instanceof AlreadyClosedException) {, +++ b/core/src/main/java/org/elasticsearch/action/support/broadcast/node/TransportBroadcastByNodeAction.java, +    protected abstract ShardOperationResult shardOperation(Request request, ShardRouting shardRouting) throws IOException;, +++ b/core/src/main/java/org/elasticsearch/action/support/single/shard/TransportSingleShardAction.java, +                if (logger.isTraceEnabled()) {, +                    logger.trace(, +                            "sending request [{}] to shard [{}] on node [{}]",, +                            internalRequest.request(),, +                            internalRequest.request().internalShardId,, +                            node, +                    );, +                }, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/BalancedShardsAllocator.java]