[+++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java, +        if (docToOrd.ordinals().hasSingleArrayBackingStorage()) {, +        }, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java, +        if (docToOrd.ordinals().hasSingleArrayBackingStorage()) {, +        }, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/DocIdOrdinals.java, +    public boolean hasSingleArrayBackingStorage() {, +        return false;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java, +        if (docToOrd.ordinals().hasSingleArrayBackingStorage()) {, +        }, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/DocIdOrdinals.java, +    public boolean hasSingleArrayBackingStorage() {, +        return false;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/EmptyOrdinals.java, +    public boolean hasSingleArrayBackingStorage() {, +        return false;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java, +        if (docToOrd.ordinals().hasSingleArrayBackingStorage()) {, +        }, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/DocIdOrdinals.java, +    public boolean hasSingleArrayBackingStorage() {, +        return false;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/EmptyOrdinals.java, +    public boolean hasSingleArrayBackingStorage() {, +        return false;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiFlatArrayOrdinals.java, +    public boolean hasSingleArrayBackingStorage() {, +        return false;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java, +        if (docToOrd.ordinals().hasSingleArrayBackingStorage()) {, +        }, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/DocIdOrdinals.java, +    public boolean hasSingleArrayBackingStorage() {, +        return false;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/EmptyOrdinals.java, +    public boolean hasSingleArrayBackingStorage() {, +        return false;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiFlatArrayOrdinals.java, +    public boolean hasSingleArrayBackingStorage() {, +        return false;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/Ordinals.java, +     * Are the ordinals backed by a single ordinals array?, +     */, +    boolean hasSingleArrayBackingStorage();, +, +    /**, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java, +        if (docToOrd.ordinals().hasSingleArrayBackingStorage()) {, +        }, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/DocIdOrdinals.java, +    public boolean hasSingleArrayBackingStorage() {, +        return false;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/EmptyOrdinals.java, +    public boolean hasSingleArrayBackingStorage() {, +        return false;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiFlatArrayOrdinals.java, +    public boolean hasSingleArrayBackingStorage() {, +        return false;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/Ordinals.java, +     * Are the ordinals backed by a single ordinals array?, +     */, +    boolean hasSingleArrayBackingStorage();]