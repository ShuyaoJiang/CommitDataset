[+++ b/src/main/java/org/elasticsearch/indices/query/IndicesQueriesModule.java, +        qpBinders.addBinding().to(FieldMaskingSpanQueryParser.class).asEagerSingleton();, +++ b/src/main/java/org/elasticsearch/indices/query/IndicesQueriesModule.java, +        qpBinders.addBinding().to(FieldMaskingSpanQueryParser.class).asEagerSingleton();, +++ b/src/test/java/org/elasticsearch/test/unit/index/query/SimpleIndexQueryParserTests.java, +    , +    @Test, +    public void testFieldMaskingSpanQuery() throws IOException {, +        IndexQueryParserService queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/test/unit/index/query/spanFieldMaskingTerm.json");, +        Query parsedQuery = queryParser.parse(query).query();, +        assertThat(parsedQuery, instanceOf(SpanNearQuery.class));, +        SpanNearQuery spanNearQuery = (SpanNearQuery) parsedQuery;, +        assertThat(spanNearQuery.getClauses().length, equalTo(3));, +        assertThat(((SpanTermQuery) spanNearQuery.getClauses()[0]).getTerm(), equalTo(new Term("age", longToPrefixCoded(34, 0))));, +        assertThat(((SpanTermQuery) spanNearQuery.getClauses()[1]).getTerm(), equalTo(new Term("age", longToPrefixCoded(35, 0))));, +        assertThat(((SpanTermQuery)((FieldMaskingSpanQuery) spanNearQuery.getClauses()[2]).getMaskedQuery()).getTerm(), equalTo(new Term("age_1", "36")));, +        assertThat(spanNearQuery.isInOrder(), equalTo(false));, +    }, +    , +    , +++ b/src/main/java/org/elasticsearch/indices/query/IndicesQueriesModule.java, +        qpBinders.addBinding().to(FieldMaskingSpanQueryParser.class).asEagerSingleton();, +++ b/src/test/java/org/elasticsearch/test/unit/index/query/SimpleIndexQueryParserTests.java, +    , +    @Test, +    public void testFieldMaskingSpanQuery() throws IOException {, +        IndexQueryParserService queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/test/unit/index/query/spanFieldMaskingTerm.json");, +        Query parsedQuery = queryParser.parse(query).query();, +        assertThat(parsedQuery, instanceOf(SpanNearQuery.class));, +        SpanNearQuery spanNearQuery = (SpanNearQuery) parsedQuery;, +        assertThat(spanNearQuery.getClauses().length, equalTo(3));, +        assertThat(((SpanTermQuery) spanNearQuery.getClauses()[0]).getTerm(), equalTo(new Term("age", longToPrefixCoded(34, 0))));, +        assertThat(((SpanTermQuery) spanNearQuery.getClauses()[1]).getTerm(), equalTo(new Term("age", longToPrefixCoded(35, 0))));, +        assertThat(((SpanTermQuery)((FieldMaskingSpanQuery) spanNearQuery.getClauses()[2]).getMaskedQuery()).getTerm(), equalTo(new Term("age_1", "36")));, +        assertThat(spanNearQuery.isInOrder(), equalTo(false));, +    }, +    , +    , +++ b/src/test/java/org/elasticsearch/test/unit/index/query/spanFieldMaskingTerm.json, +{, +   span_near:{, +      clauses:[, +         {, +            span_term:{, +               age:34, +            }, +         },, +         {, +            span_term:{, +               age:35, +            }, +         },, +         {, +           field_masking_span:{, +              query:{, +                 span_term:{, +                    age_1 : 36, +                 }, +              },, +              field:"age", +           }, +         }, +      ],, +      slop:12,, +      in_order:false,, +      collect_payloads:false, +   }, +}]