[+++ b/.idea/dictionaries/kimchy.xml, +      <w>tagline</w>, +++ b/.idea/dictionaries/kimchy.xml, +      <w>tagline</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +        this.autoCreateIndex = settings.getAsBoolean("action.auto_create_index", true);, +        if (autoCreateIndex && !clusterService.state().metaData().hasConcreteIndex(deleteRequest.index())) {, +++ b/.idea/dictionaries/kimchy.xml, +      <w>tagline</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +        this.autoCreateIndex = settings.getAsBoolean("action.auto_create_index", true);, +        if (autoCreateIndex && !clusterService.state().metaData().hasConcreteIndex(deleteRequest.index())) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        this.autoCreateIndex = settings.getAsBoolean("action.auto_create_index", true);, +        this.allowIdGeneration = componentSettings.getAsBoolean("allow_id_generation", true);, +++ b/.idea/dictionaries/kimchy.xml, +      <w>tagline</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +        this.autoCreateIndex = settings.getAsBoolean("action.auto_create_index", true);, +        if (autoCreateIndex && !clusterService.state().metaData().hasConcreteIndex(deleteRequest.index())) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        this.autoCreateIndex = settings.getAsBoolean("action.auto_create_index", true);, +        this.allowIdGeneration = componentSettings.getAsBoolean("allow_id_generation", true);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +    private int minTermFreq = -1;, +    public MoreLikeThisRequest minTermFreq(int minTermFreq) {, +        this.minTermFreq = minTermFreq;, +    public int minTermFreq() {, +        return this.minTermFreq;, +        minTermFreq = in.readVInt();, +        out.writeVInt(minTermFreq);, +++ b/.idea/dictionaries/kimchy.xml, +      <w>tagline</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +        this.autoCreateIndex = settings.getAsBoolean("action.auto_create_index", true);, +        if (autoCreateIndex && !clusterService.state().metaData().hasConcreteIndex(deleteRequest.index())) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        this.autoCreateIndex = settings.getAsBoolean("action.auto_create_index", true);, +        this.allowIdGeneration = componentSettings.getAsBoolean("allow_id_generation", true);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +    private int minTermFreq = -1;, +    public MoreLikeThisRequest minTermFreq(int minTermFreq) {, +        this.minTermFreq = minTermFreq;, +    public int minTermFreq() {, +        return this.minTermFreq;, +        minTermFreq = in.readVInt();, +        out.writeVInt(minTermFreq);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +                .minTermFreq(request.minTermFreq()), +++ b/.idea/dictionaries/kimchy.xml, +      <w>tagline</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +        this.autoCreateIndex = settings.getAsBoolean("action.auto_create_index", true);, +        if (autoCreateIndex && !clusterService.state().metaData().hasConcreteIndex(deleteRequest.index())) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        this.autoCreateIndex = settings.getAsBoolean("action.auto_create_index", true);, +        this.allowIdGeneration = componentSettings.getAsBoolean("allow_id_generation", true);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +    private int minTermFreq = -1;, +    public MoreLikeThisRequest minTermFreq(int minTermFreq) {, +        this.minTermFreq = minTermFreq;, +    public int minTermFreq() {, +        return this.minTermFreq;, +        minTermFreq = in.readVInt();, +        out.writeVInt(minTermFreq);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +                .minTermFreq(request.minTermFreq()), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/SearchResponse.java, +                    builder.field("shard", shardFailure.shard().shardId());, +++ b/.idea/dictionaries/kimchy.xml, +      <w>tagline</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +        this.autoCreateIndex = settings.getAsBoolean("action.auto_create_index", true);, +        if (autoCreateIndex && !clusterService.state().metaData().hasConcreteIndex(deleteRequest.index())) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        this.autoCreateIndex = settings.getAsBoolean("action.auto_create_index", true);, +        this.allowIdGeneration = componentSettings.getAsBoolean("allow_id_generation", true);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +    private int minTermFreq = -1;, +    public MoreLikeThisRequest minTermFreq(int minTermFreq) {, +        this.minTermFreq = minTermFreq;, +    public int minTermFreq() {, +        return this.minTermFreq;, +        minTermFreq = in.readVInt();, +        out.writeVInt(minTermFreq);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +                .minTermFreq(request.minTermFreq()), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/SearchResponse.java, +                    builder.field("shard", shardFailure.shard().shardId());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, + * A main entry point when starting from the command line., + *, + * @author kimchy (shay.banon), +++ b/.idea/dictionaries/kimchy.xml, +      <w>tagline</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +        this.autoCreateIndex = settings.getAsBoolean("action.auto_create_index", true);, +        if (autoCreateIndex && !clusterService.state().metaData().hasConcreteIndex(deleteRequest.index())) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        this.autoCreateIndex = settings.getAsBoolean("action.auto_create_index", true);]