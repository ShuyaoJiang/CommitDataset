[+++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestProxyActionFilter.java, +        assert clusterService.localNode().isIngestNode() == false;, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestProxyActionFilter.java, +        assert clusterService.localNode().isIngestNode() == false;, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import java.util.ArrayList;, +import java.util.List;, +import java.util.concurrent.TimeUnit;, +, +        }, +                modules.add(new ActionModule(false, true));, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestProxyActionFilter.java, +        assert clusterService.localNode().isIngestNode() == false;, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import java.util.ArrayList;, +import java.util.List;, +import java.util.concurrent.TimeUnit;, +, +        }, +                modules.add(new ActionModule(false, true));, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +import org.elasticsearch.node.Node;, +    public static boolean ingestNode(Settings settings) {, +        return Node.NODE_INGEST_SETTING.get(settings);, +    }, +, +    /**, +     * Returns a boolean that tells whether this an ingest node or not, +     */, +    public boolean isIngestNode() {, +        String ingest = attributes.get("ingest");, +        return ingest == null ? true : Booleans.parseBooleanExact(ingest);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestProxyActionFilter.java, +        assert clusterService.localNode().isIngestNode() == false;, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import java.util.ArrayList;, +import java.util.List;, +import java.util.concurrent.TimeUnit;, +, +        }, +                modules.add(new ActionModule(false, true));, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +import org.elasticsearch.node.Node;, +    public static boolean ingestNode(Settings settings) {, +        return Node.NODE_INGEST_SETTING.get(settings);, +    }, +, +    /**, +     * Returns a boolean that tells whether this an ingest node or not, +     */, +    public boolean isIngestNode() {, +        String ingest = attributes.get("ingest");, +        return ingest == null ? true : Booleans.parseBooleanExact(ingest);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +                if (nodeEntry.value.isIngestNode()) {, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestProxyActionFilter.java, +        assert clusterService.localNode().isIngestNode() == false;, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import java.util.ArrayList;, +import java.util.List;, +import java.util.concurrent.TimeUnit;, +, +        }, +                modules.add(new ActionModule(false, true));, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +import org.elasticsearch.node.Node;, +    public static boolean ingestNode(Settings settings) {, +        return Node.NODE_INGEST_SETTING.get(settings);, +    }, +, +    /**, +     * Returns a boolean that tells whether this an ingest node or not, +     */, +    public boolean isIngestNode() {, +        String ingest = attributes.get("ingest");, +        return ingest == null ? true : Booleans.parseBooleanExact(ingest);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +                if (nodeEntry.value.isIngestNode()) {, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.node.Node;, +        PrimaryShardAllocator.NODE_INITIAL_SHARDS_SETTING,, +        Node.NODE_INGEST_SETTING)));, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestProxyActionFilter.java, +        assert clusterService.localNode().isIngestNode() == false;, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import java.util.ArrayList;, +import java.util.List;, +import java.util.concurrent.TimeUnit;, +, +        }, +                modules.add(new ActionModule(false, true));, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +import org.elasticsearch.node.Node;, +    public static boolean ingestNode(Settings settings) {]