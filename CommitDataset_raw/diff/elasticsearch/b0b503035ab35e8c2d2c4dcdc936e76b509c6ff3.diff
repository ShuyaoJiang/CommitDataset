[+++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollAction.java, +, +            if (task.isCancelled()) {, +                finishHim(null);, +                return;, +            }, +, +, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollAction.java, +, +            if (task.isCancelled()) {, +                finishHim(null);, +                return;, +            }, +, +, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/UpdateByQueryRequestBuilder.java, +, +    public UpdateByQueryRequestBuilder setPipeline(String pipeline) {, +        request.setPipeline(pipeline);, +        return this;, +    }, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollAction.java, +, +            if (task.isCancelled()) {, +                finishHim(null);, +                return;, +            }, +, +, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/UpdateByQueryRequestBuilder.java, +, +    public UpdateByQueryRequestBuilder setPipeline(String pipeline) {, +        request.setPipeline(pipeline);, +        return this;, +    }, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/AsyncBulkByScrollActionTests.java, +        cancelTaskCase((DummyAbstractAsyncBulkByScrollAction action) ->, +                action.onBulkResponse(new BulkResponse(new BulkItemResponse[0], 0)));, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollAction.java, +, +            if (task.isCancelled()) {, +                finishHim(null);, +                return;, +            }, +, +, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/UpdateByQueryRequestBuilder.java, +, +    public UpdateByQueryRequestBuilder setPipeline(String pipeline) {, +        request.setPipeline(pipeline);, +        return this;, +    }, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/AsyncBulkByScrollActionTests.java, +        cancelTaskCase((DummyAbstractAsyncBulkByScrollAction action) ->, +                action.onBulkResponse(new BulkResponse(new BulkItemResponse[0], 0)));, +++ /dev/null, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollAction.java, +, +            if (task.isCancelled()) {, +                finishHim(null);, +                return;, +            }, +, +, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/UpdateByQueryRequestBuilder.java, +, +    public UpdateByQueryRequestBuilder setPipeline(String pipeline) {, +        request.setPipeline(pipeline);, +        return this;, +    }, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/AsyncBulkByScrollActionTests.java, +        cancelTaskCase((DummyAbstractAsyncBulkByScrollAction action) ->, +                action.onBulkResponse(new BulkResponse(new BulkItemResponse[0], 0)));, +++ /dev/null, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/CancelTests.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.index.reindex;, +, +import org.elasticsearch.action.ListenableActionFuture;, +import org.elasticsearch.action.admin.cluster.node.tasks.cancel.CancelTasksRequest;, +import org.elasticsearch.action.admin.cluster.node.tasks.list.ListTasksResponse;]