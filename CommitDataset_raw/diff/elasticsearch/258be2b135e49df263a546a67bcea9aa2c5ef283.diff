[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/indices/analysis/AnalysisModule.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/indices/analysis/AnalysisModule.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/indices/analysis/AnalysisModule.java, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/indices/analyze/AnalyzeActionIT.java, +            .setExplain(true).setTokenizer("standard").addTokenFilter("lowercase").get();, +        assertThat(analyzeResponse.detail().tokenfilters()[0].getName(), equalTo("lowercase"));, +        assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[2].getTerm(), equalTo("troubled"));, +            "positionLength"};, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/indices/analysis/AnalysisModule.java, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/indices/analyze/AnalyzeActionIT.java, +            .setExplain(true).setTokenizer("standard").addTokenFilter("lowercase").get();, +        assertThat(analyzeResponse.detail().tokenfilters()[0].getName(), equalTo("lowercase"));, +        assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[2].getTerm(), equalTo("troubled"));, +            "positionLength"};, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonAnalysisPlugin.java, +        filters.put("keyword_marker", requriesAnalysisSettings(KeywordMarkerTokenFilterFactory::new));, +        filters.put("porter_stem", PorterStemTokenFilterFactory::new);, +        filters.put("snowball", SnowballTokenFilterFactory::new);, +        filters.put("trim", TrimTokenFilterFactory::new);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/indices/analysis/AnalysisModule.java, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/indices/analyze/AnalyzeActionIT.java, +            .setExplain(true).setTokenizer("standard").addTokenFilter("lowercase").get();, +        assertThat(analyzeResponse.detail().tokenfilters()[0].getName(), equalTo("lowercase"));, +        assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[2].getTerm(), equalTo("troubled"));, +            "positionLength"};, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonAnalysisPlugin.java, +        filters.put("keyword_marker", requriesAnalysisSettings(KeywordMarkerTokenFilterFactory::new));, +        filters.put("porter_stem", PorterStemTokenFilterFactory::new);, +        filters.put("snowball", SnowballTokenFilterFactory::new);, +        filters.put("trim", TrimTokenFilterFactory::new);, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/KeywordMarkerTokenFilterFactory.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.analysis.common;, +, +import org.apache.lucene.analysis.CharArraySet;, +import org.apache.lucene.analysis.TokenStream;, +import org.apache.lucene.analysis.miscellaneous.PatternKeywordMarkerFilter;, +import org.apache.lucene.analysis.miscellaneous.SetKeywordMarkerFilter;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.env.Environment;, +import org.elasticsearch.index.IndexSettings;, +import org.elasticsearch.index.analysis.AbstractTokenFilterFactory;, +import org.elasticsearch.index.analysis.Analysis;, +, +import java.util.Set;, +import java.util.regex.Pattern;, +, +/**]