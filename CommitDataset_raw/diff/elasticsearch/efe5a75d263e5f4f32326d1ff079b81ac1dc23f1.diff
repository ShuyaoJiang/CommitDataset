[+++ b/docs/java-api/docs/bulk.asciidoc, +By default, `BulkProcessor`:, +, +* sets bulkActions to `1000`, +* sets bulkSize to `5mb`, +* does not set flushInterval, +* sets concurrentRequests to 1, which means an asynchronous execution of the flush operation., +* sets backoffPolicy to an exponential backoff with 8 retries and a start delay of 50ms. The total wait time is roughly 5.1 seconds., +, +[[java-docs-bulk-processor-requests]], +==== Add requests, +, +[[java-docs-bulk-processor-close]], +==== Closing the Bulk Processor, +[[java-docs-bulk-processor-tests]], +==== Using Bulk Processor in tests, +, +If you are running tests with elasticsearch and are using the `BulkProcessor` to populate your dataset, +you should better set the number of concurrent requests to `0` so the flush operation of the bulk will be executed, +in a synchronous manner:, +, +[source,java], +--------------------------------------------------, +BulkProcessor bulkProcessor = BulkProcessor.builder(client, new BulkProcessor.Listener() { /* Listener methods */ }), +        .setBulkActions(10000), +        .setConcurrentRequests(0), +        .build();, +, +// Add your requests, +bulkProcessor.add(/* Your requests */);, +, +// Flush any remaining requests, +bulkProcessor.flush();, +, +// Or close the bulkProcessor if you don't need it anymore, +bulkProcessor.close();, +, +// Refresh your indices, +client.admin().indices().prepareRefresh().get();, +, +// Now you can start searching!, +client.prepareSearch().get();, +--------------------------------------------------, +]