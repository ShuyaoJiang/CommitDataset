[+++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +            // we don't wait for a pending refreshes here since it's a stats call instead we mark it as accessed only which will cause, +            // we don't wait for a pending refreshes here since it's a stats call instead we mark it as accessed only which will cause, +                && isSearchIdle(), +                && indexSettings.isExplicitRefresh() == false, +                && active.get()) { // it must be active otherwise we might not free up segment memory once the shard became inactive, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +            // we don't wait for a pending refreshes here since it's a stats call instead we mark it as accessed only which will cause, +            // we don't wait for a pending refreshes here since it's a stats call instead we mark it as accessed only which will cause, +                && isSearchIdle(), +                && indexSettings.isExplicitRefresh() == false, +                && active.get()) { // it must be active otherwise we might not free up segment memory once the shard became inactive, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +, +        indexDoc(primary, "test", "2", "{\"foo\" : \"bar\"}");, +        assertFalse(primary.scheduledRefresh());, +        assertTrue(primary.isSearchIdle());, +        primary.checkIdle(0);, +        assertTrue(primary.scheduledRefresh()); // make sure we refresh once the shard is inactive, +        try (Engine.Searcher searcher = primary.acquireSearcher("test")) {, +            assertEquals(3, searcher.reader().numDocs());, +        }]