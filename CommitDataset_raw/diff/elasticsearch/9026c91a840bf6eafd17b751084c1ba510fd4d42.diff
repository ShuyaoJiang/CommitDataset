[+++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +        super(settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +        super(settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +        super(settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +        super(settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +        super(settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransport.java, +    public TcpTransport(Settings settings, Version version, ThreadPool threadPool, PageCacheRecycler pageCacheRecycler,, +                        CircuitBreakerService circuitBreakerService, NamedWriteableRegistry namedWriteableRegistry,, +                        NetworkService networkService) {, +                transportChannel = new TcpTransportChannel(this, channel, action, requestId, version, features, profileName,, +                transportChannel = new TcpTransportChannel(this, channel, action, requestId, version, features,, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +        super(settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +        super(settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransport.java, +    public TcpTransport(Settings settings, Version version, ThreadPool threadPool, PageCacheRecycler pageCacheRecycler,, +                        CircuitBreakerService circuitBreakerService, NamedWriteableRegistry namedWriteableRegistry,, +                        NetworkService networkService) {, +                transportChannel = new TcpTransportChannel(this, channel, action, requestId, version, features, profileName,, +                transportChannel = new TcpTransportChannel(this, channel, action, requestId, version, features,, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransportChannel.java, +    TcpTransportChannel(TcpTransport transport, TcpChannel channel, String action, long requestId, Version version, Set<String> features,, +                        String profileName, long reservedBytes, boolean compressResponse) {, +        return "transport";, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +        super(settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +        super(settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransport.java, +    public TcpTransport(Settings settings, Version version, ThreadPool threadPool, PageCacheRecycler pageCacheRecycler,, +                        CircuitBreakerService circuitBreakerService, NamedWriteableRegistry namedWriteableRegistry,, +                        NetworkService networkService) {, +                transportChannel = new TcpTransportChannel(this, channel, action, requestId, version, features, profileName,, +                transportChannel = new TcpTransportChannel(this, channel, action, requestId, version, features,, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransportChannel.java, +    TcpTransportChannel(TcpTransport transport, TcpChannel channel, String action, long requestId, Version version, Set<String> features,, +                        String profileName, long reservedBytes, boolean compressResponse) {, +        return "transport";, +++ b/server/src/test/java/org/elasticsearch/transport/TcpTransportTests.java, +            TcpTransport transport = new TcpTransport(Settings.EMPTY, Version.CURRENT, threadPool,, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +        super(settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +        super(settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransport.java, +    public TcpTransport(Settings settings, Version version, ThreadPool threadPool, PageCacheRecycler pageCacheRecycler,, +                        CircuitBreakerService circuitBreakerService, NamedWriteableRegistry namedWriteableRegistry,, +                        NetworkService networkService) {, +                transportChannel = new TcpTransportChannel(this, channel, action, requestId, version, features, profileName,, +                transportChannel = new TcpTransportChannel(this, channel, action, requestId, version, features,, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransportChannel.java, +    TcpTransportChannel(TcpTransport transport, TcpChannel channel, String action, long requestId, Version version, Set<String> features,, +                        String profileName, long reservedBytes, boolean compressResponse) {, +        return "transport";, +++ b/server/src/test/java/org/elasticsearch/transport/TcpTransportTests.java, +            TcpTransport transport = new TcpTransport(Settings.EMPTY, Version.CURRENT, threadPool,, +++ b/test/framework/src/main/java/org/elasticsearch/transport/nio/MockNioTransport.java, +        super(settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);]