[+++ b/buildSrc/src/main/resources/checkstyle.xml, +    Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3. It is not that, +    the standard is perfect, but having a consistent order makes the code more, +    readable and no other order is compellingly better than the standard., +++ b/buildSrc/src/main/resources/checkstyle.xml, +    Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3. It is not that, +    the standard is perfect, but having a consistent order makes the code more, +    readable and no other order is compellingly better than the standard., +++ b/buildSrc/src/test/java/org/elasticsearch/test/NamingConventionsCheckBadClasses.java, +    public abstract static class DummyAbstractTests extends UnitTestCase {, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3. It is not that, +    the standard is perfect, but having a consistent order makes the code more, +    readable and no other order is compellingly better than the standard., +++ b/buildSrc/src/test/java/org/elasticsearch/test/NamingConventionsCheckBadClasses.java, +    public abstract static class DummyAbstractTests extends UnitTestCase {, +++ b/client/rest/src/main/java/org/elasticsearch/client/HttpDeleteWithEntity.java, +    static final String METHOD_NAME = HttpDelete.METHOD_NAME;, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3. It is not that, +    the standard is perfect, but having a consistent order makes the code more, +    readable and no other order is compellingly better than the standard., +++ b/buildSrc/src/test/java/org/elasticsearch/test/NamingConventionsCheckBadClasses.java, +    public abstract static class DummyAbstractTests extends UnitTestCase {, +++ b/client/rest/src/main/java/org/elasticsearch/client/HttpDeleteWithEntity.java, +    static final String METHOD_NAME = HttpDelete.METHOD_NAME;, +++ b/client/rest/src/main/java/org/elasticsearch/client/HttpGetWithEntity.java, +    static final String METHOD_NAME = HttpGet.METHOD_NAME;, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3. It is not that, +    the standard is perfect, but having a consistent order makes the code more, +    readable and no other order is compellingly better than the standard., +++ b/buildSrc/src/test/java/org/elasticsearch/test/NamingConventionsCheckBadClasses.java, +    public abstract static class DummyAbstractTests extends UnitTestCase {, +++ b/client/rest/src/main/java/org/elasticsearch/client/HttpDeleteWithEntity.java, +    static final String METHOD_NAME = HttpDelete.METHOD_NAME;, +++ b/client/rest/src/main/java/org/elasticsearch/client/HttpGetWithEntity.java, +    static final String METHOD_NAME = HttpGet.METHOD_NAME;, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +        private static final class SurfaceFormAndPayload implements Comparable<SurfaceFormAndPayload> {, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3. It is not that, +    the standard is perfect, but having a consistent order makes the code more, +    readable and no other order is compellingly better than the standard., +++ b/buildSrc/src/test/java/org/elasticsearch/test/NamingConventionsCheckBadClasses.java, +    public abstract static class DummyAbstractTests extends UnitTestCase {, +++ b/client/rest/src/main/java/org/elasticsearch/client/HttpDeleteWithEntity.java, +    static final String METHOD_NAME = HttpDelete.METHOD_NAME;, +++ b/client/rest/src/main/java/org/elasticsearch/client/HttpGetWithEntity.java, +    static final String METHOD_NAME = HttpGet.METHOD_NAME;, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +        private static final class SurfaceFormAndPayload implements Comparable<SurfaceFormAndPayload> {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/NodeExplanation.java, +                           @Nullable final IndicesShardStoresResponse.StoreStatus storeStatus,, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3. It is not that, +    the standard is perfect, but having a consistent order makes the code more, +    readable and no other order is compellingly better than the standard., +++ b/buildSrc/src/test/java/org/elasticsearch/test/NamingConventionsCheckBadClasses.java, +    public abstract static class DummyAbstractTests extends UnitTestCase {, +++ b/client/rest/src/main/java/org/elasticsearch/client/HttpDeleteWithEntity.java, +    static final String METHOD_NAME = HttpDelete.METHOD_NAME;, +++ b/client/rest/src/main/java/org/elasticsearch/client/HttpGetWithEntity.java, +    static final String METHOD_NAME = HttpGet.METHOD_NAME;, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +        private static final class SurfaceFormAndPayload implements Comparable<SurfaceFormAndPayload> {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/NodeExplanation.java, +                           @Nullable final IndicesShardStoresResponse.StoreStatus storeStatus,, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +        static final String INCLUDE_DEFAULTS = "include_defaults";, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3. It is not that, +    the standard is perfect, but having a consistent order makes the code more, +    readable and no other order is compellingly better than the standard., +++ b/buildSrc/src/test/java/org/elasticsearch/test/NamingConventionsCheckBadClasses.java, +    public abstract static class DummyAbstractTests extends UnitTestCase {, +++ b/client/rest/src/main/java/org/elasticsearch/client/HttpDeleteWithEntity.java, +    static final String METHOD_NAME = HttpDelete.METHOD_NAME;, +++ b/client/rest/src/main/java/org/elasticsearch/client/HttpGetWithEntity.java, +    static final String METHOD_NAME = HttpGet.METHOD_NAME;, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +        private static final class SurfaceFormAndPayload implements Comparable<SurfaceFormAndPayload> {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/NodeExplanation.java, +                           @Nullable final IndicesShardStoresResponse.StoreStatus storeStatus,, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +        static final String INCLUDE_DEFAULTS = "include_defaults";, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/MaxAgeCondition.java, +    public static final String NAME = "max_age";, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3. It is not that, +    the standard is perfect, but having a consistent order makes the code more, +    readable and no other order is compellingly better than the standard., +++ b/buildSrc/src/test/java/org/elasticsearch/test/NamingConventionsCheckBadClasses.java, +    public abstract static class DummyAbstractTests extends UnitTestCase {, +++ b/client/rest/src/main/java/org/elasticsearch/client/HttpDeleteWithEntity.java, +    static final String METHOD_NAME = HttpDelete.METHOD_NAME;, +++ b/client/rest/src/main/java/org/elasticsearch/client/HttpGetWithEntity.java, +    static final String METHOD_NAME = HttpGet.METHOD_NAME;, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +        private static final class SurfaceFormAndPayload implements Comparable<SurfaceFormAndPayload> {]