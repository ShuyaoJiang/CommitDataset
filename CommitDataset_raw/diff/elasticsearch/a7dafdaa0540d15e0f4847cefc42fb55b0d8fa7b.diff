[+++ b/docs/reference/ingest/ingest-node.asciidoc, +| `target_field`    | no        | `field`  | The field to assign the converted value to, by default `field` is updated in-place, +| `ignore_missing`  | no        | `false`  | If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document, +| `target_field`    | no        | `field`  | The field to assign the joined value to, by default `field` is updated in-place, +| `target_field`   | no        | `field`  | The field to assign the converted value to, by default `field` is updated in-place, +| `target_field`    | no        | `field`  | The field to assign the split value to, by default `field` is updated in-place, +| `target_field`    | no        | `field`  | The field to assign the sorted value to, by default `field` is updated in-place, +| `target_field`    | no        | `field`  | The field to assign the trimmed value to, by default `field` is updated in-place, +| `target_field`   | no        | `field`  | The field to assign the converted value to, by default `field` is updated in-place, +++ b/docs/reference/ingest/ingest-node.asciidoc, +| `target_field`    | no        | `field`  | The field to assign the converted value to, by default `field` is updated in-place, +| `ignore_missing`  | no        | `false`  | If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document, +| `target_field`    | no        | `field`  | The field to assign the joined value to, by default `field` is updated in-place, +| `target_field`   | no        | `field`  | The field to assign the converted value to, by default `field` is updated in-place, +| `target_field`    | no        | `field`  | The field to assign the split value to, by default `field` is updated in-place, +| `target_field`    | no        | `field`  | The field to assign the sorted value to, by default `field` is updated in-place, +| `target_field`    | no        | `field`  | The field to assign the trimmed value to, by default `field` is updated in-place, +| `target_field`   | no        | `field`  | The field to assign the converted value to, by default `field` is updated in-place, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/AbstractStringProcessor.java, +    private final String targetField;, +    AbstractStringProcessor(String tag, String field, boolean ignoreMissing, String targetField) {, +        this.targetField = targetField;, +    String getTargetField() {, +        return targetField;, +    }, +, +        document.setFieldValue(targetField, process(val));, +            String targetField = ConfigurationUtils.readStringProperty(processorType, tag, config, "target_field", field);, +, +            return newProcessor(tag, config, field, ignoreMissing, targetField);, +        protected abstract AbstractStringProcessor newProcessor(String processorTag, Map<String, Object> config, String field,, +                                                                boolean ignoreMissing, String targetField);, +++ b/docs/reference/ingest/ingest-node.asciidoc, +| `target_field`    | no        | `field`  | The field to assign the converted value to, by default `field` is updated in-place, +| `ignore_missing`  | no        | `false`  | If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document, +| `target_field`    | no        | `field`  | The field to assign the joined value to, by default `field` is updated in-place, +| `target_field`   | no        | `field`  | The field to assign the converted value to, by default `field` is updated in-place, +| `target_field`    | no        | `field`  | The field to assign the split value to, by default `field` is updated in-place, +| `target_field`    | no        | `field`  | The field to assign the sorted value to, by default `field` is updated in-place, +| `target_field`    | no        | `field`  | The field to assign the trimmed value to, by default `field` is updated in-place, +| `target_field`   | no        | `field`  | The field to assign the converted value to, by default `field` is updated in-place, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/AbstractStringProcessor.java, +    private final String targetField;, +    AbstractStringProcessor(String tag, String field, boolean ignoreMissing, String targetField) {, +        this.targetField = targetField;, +    String getTargetField() {, +        return targetField;, +    }, +, +        document.setFieldValue(targetField, process(val));, +            String targetField = ConfigurationUtils.readStringProperty(processorType, tag, config, "target_field", field);, +, +            return newProcessor(tag, config, field, ignoreMissing, targetField);, +        protected abstract AbstractStringProcessor newProcessor(String processorTag, Map<String, Object> config, String field,, +                                                                boolean ignoreMissing, String targetField);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/GsubProcessor.java, +public final class GsubProcessor extends AbstractStringProcessor {, +    GsubProcessor(String tag, String field, Pattern pattern, String replacement, boolean ignoreMissing, String targetField) {, +        super(tag, field, ignoreMissing, targetField);, +    protected String process(String value) {, +        return pattern.matcher(value).replaceAll(replacement);, +    public static final class Factory extends AbstractStringProcessor.Factory {, +, +        public Factory() {, +            super(TYPE);, +        }, +, +        protected AbstractStringProcessor newProcessor(String processorTag, Map<String, Object> config, String field,, +                                                       boolean ignoreMissing, String targetField) {, +            return new GsubProcessor(processorTag, field, searchPattern, replacement, ignoreMissing, targetField);, +++ b/docs/reference/ingest/ingest-node.asciidoc, +| `target_field`    | no        | `field`  | The field to assign the converted value to, by default `field` is updated in-place, +| `ignore_missing`  | no        | `false`  | If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document, +| `target_field`    | no        | `field`  | The field to assign the joined value to, by default `field` is updated in-place, +| `target_field`   | no        | `field`  | The field to assign the converted value to, by default `field` is updated in-place, +| `target_field`    | no        | `field`  | The field to assign the split value to, by default `field` is updated in-place, +| `target_field`    | no        | `field`  | The field to assign the sorted value to, by default `field` is updated in-place, +| `target_field`    | no        | `field`  | The field to assign the trimmed value to, by default `field` is updated in-place, +| `target_field`   | no        | `field`  | The field to assign the converted value to, by default `field` is updated in-place, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/AbstractStringProcessor.java, +    private final String targetField;, +    AbstractStringProcessor(String tag, String field, boolean ignoreMissing, String targetField) {, +        this.targetField = targetField;, +    String getTargetField() {, +        return targetField;, +    }, +, +        document.setFieldValue(targetField, process(val));, +            String targetField = ConfigurationUtils.readStringProperty(processorType, tag, config, "target_field", field);, +, +            return newProcessor(tag, config, field, ignoreMissing, targetField);, +        protected abstract AbstractStringProcessor newProcessor(String processorTag, Map<String, Object> config, String field,, +                                                                boolean ignoreMissing, String targetField);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/GsubProcessor.java, +public final class GsubProcessor extends AbstractStringProcessor {, +    GsubProcessor(String tag, String field, Pattern pattern, String replacement, boolean ignoreMissing, String targetField) {, +        super(tag, field, ignoreMissing, targetField);, +    protected String process(String value) {, +        return pattern.matcher(value).replaceAll(replacement);, +    public static final class Factory extends AbstractStringProcessor.Factory {]