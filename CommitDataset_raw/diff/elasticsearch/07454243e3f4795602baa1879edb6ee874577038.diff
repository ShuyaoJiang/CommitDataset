[+++ b/src/main/java/org/elasticsearch/action/get/GetResponse.java, +     * The source of the document if exists., +     */, +    public byte[] getSourceAsBytes() {, +        return source();, +    }, +, +    /**, +     * Returns bytes reference, also un compress the source if needed., +     */, +    public BytesHolder getSourceAsBytesRef() {, +        return sourceRef();, +    }, +, +    /**, +    public String getSourceAsString() {, +        return sourceAsString();, +    }, +, +++ b/src/main/java/org/elasticsearch/action/get/GetResponse.java, +     * The source of the document if exists., +     */, +    public byte[] getSourceAsBytes() {, +        return source();, +    }, +, +    /**, +     * Returns bytes reference, also un compress the source if needed., +     */, +    public BytesHolder getSourceAsBytesRef() {, +        return sourceRef();, +    }, +, +    /**, +    public String getSourceAsString() {, +        return sourceAsString();, +    }, +, +++ b/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java, +import org.elasticsearch.common.BytesHolder;, +    public static String convertToJson(BytesHolder bytes, boolean reformatJson) throws IOException {, +        return convertToJson(bytes.bytes(), bytes.offset(), bytes.length(), reformatJson);, +    }, +, +    public static String convertToJson(BytesHolder bytes, boolean reformatJson, boolean prettyPrint) throws IOException {, +        return convertToJson(bytes.bytes(), bytes.offset(), bytes.length(), reformatJson, prettyPrint);, +    }, +, +++ b/src/main/java/org/elasticsearch/action/get/GetResponse.java, +     * The source of the document if exists., +     */, +    public byte[] getSourceAsBytes() {, +        return source();, +    }, +, +    /**, +     * Returns bytes reference, also un compress the source if needed., +     */, +    public BytesHolder getSourceAsBytesRef() {, +        return sourceRef();, +    }, +, +    /**, +    public String getSourceAsString() {, +        return sourceAsString();, +    }, +, +++ b/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java, +import org.elasticsearch.common.BytesHolder;, +    public static String convertToJson(BytesHolder bytes, boolean reformatJson) throws IOException {, +        return convertToJson(bytes.bytes(), bytes.offset(), bytes.length(), reformatJson);, +    }, +, +    public static String convertToJson(BytesHolder bytes, boolean reformatJson, boolean prettyPrint) throws IOException {, +        return convertToJson(bytes.bytes(), bytes.offset(), bytes.length(), reformatJson, prettyPrint);, +    }, +, +++ b/src/main/java/org/elasticsearch/index/get/GetResult.java, +import org.elasticsearch.common.xcontent.XContentHelper;, +        try {, +            return XContentHelper.convertToJson(source, false);, +        } catch (IOException e) {, +            throw new ElasticSearchParseException("failed to convert source to a json string");, +        }, +++ b/src/main/java/org/elasticsearch/action/get/GetResponse.java, +     * The source of the document if exists., +     */, +    public byte[] getSourceAsBytes() {, +        return source();, +    }, +, +    /**, +     * Returns bytes reference, also un compress the source if needed., +     */, +    public BytesHolder getSourceAsBytesRef() {, +        return sourceRef();, +    }, +, +    /**, +    public String getSourceAsString() {]