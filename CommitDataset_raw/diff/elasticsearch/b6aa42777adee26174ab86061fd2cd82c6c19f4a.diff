[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/server/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +    private void convertMultiPhraseQuery(int currentPos, int[] termsIdx, MultiPhraseQuery orig, Term[][] terms, int[] pos,, +            IndexReader reader, Collection<Query> flatQueries) throws IOException {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/server/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +    private void convertMultiPhraseQuery(int currentPos, int[] termsIdx, MultiPhraseQuery orig, Term[][] terms, int[] pos,, +            IndexReader reader, Collection<Query> flatQueries) throws IOException {, +++ b/server/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +            IndexFieldData.XFieldComparatorSource comparatorSource =, +                    (IndexFieldData.XFieldComparatorSource) sortField.getComparatorSource();, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/server/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +    private void convertMultiPhraseQuery(int currentPos, int[] termsIdx, MultiPhraseQuery orig, Term[][] terms, int[] pos,, +            IndexReader reader, Collection<Query> flatQueries) throws IOException {, +++ b/server/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +            IndexFieldData.XFieldComparatorSource comparatorSource =, +                    (IndexFieldData.XFieldComparatorSource) sortField.getComparatorSource();, +++ b/server/src/main/java/org/elasticsearch/common/lucene/index/ElasticsearchDirectoryReader.java, +    private ElasticsearchDirectoryReader(DirectoryReader in, FilterDirectoryReader.SubReaderWrapper wrapper,, +            ShardId shardId) throws IOException {, +     * Adds the given listener to the provided directory reader. The reader, +     * must contain an {@link ElasticsearchDirectoryReader} in it's hierarchy, +     * @throws IllegalArgumentException if the reader doesn't contain an, +     *     {@link ElasticsearchDirectoryReader} in it's hierarchy, +            throw new IllegalArgumentException(, +                    "Can't install close listener reader is not an ElasticsearchDirectoryReader/ElasticsearchLeafReader");, +     * Tries to unwrap the given reader until the first, +     * {@link ElasticsearchDirectoryReader} instance is found or {@code null}, +     * if no instance is found., +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/server/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +    private void convertMultiPhraseQuery(int currentPos, int[] termsIdx, MultiPhraseQuery orig, Term[][] terms, int[] pos,, +            IndexReader reader, Collection<Query> flatQueries) throws IOException {, +++ b/server/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +            IndexFieldData.XFieldComparatorSource comparatorSource =, +                    (IndexFieldData.XFieldComparatorSource) sortField.getComparatorSource();, +++ b/server/src/main/java/org/elasticsearch/common/lucene/index/ElasticsearchDirectoryReader.java, +    private ElasticsearchDirectoryReader(DirectoryReader in, FilterDirectoryReader.SubReaderWrapper wrapper,, +            ShardId shardId) throws IOException {, +     * Adds the given listener to the provided directory reader. The reader, +     * must contain an {@link ElasticsearchDirectoryReader} in it's hierarchy, +     * @throws IllegalArgumentException if the reader doesn't contain an, +     *     {@link ElasticsearchDirectoryReader} in it's hierarchy, +            throw new IllegalArgumentException(, +                    "Can't install close listener reader is not an ElasticsearchDirectoryReader/ElasticsearchLeafReader");, +     * Tries to unwrap the given reader until the first, +     * {@link ElasticsearchDirectoryReader} instance is found or {@code null}, +     * if no instance is found., +++ b/server/src/main/java/org/elasticsearch/common/lucene/index/FilterableTermsEnum.java, +    static final String UNSUPPORTED_MESSAGE =, +            "This TermsEnum only supports #seekExact(BytesRef) as well as #docFreq() and #totalTermFreq()";, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/server/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +    private void convertMultiPhraseQuery(int currentPos, int[] termsIdx, MultiPhraseQuery orig, Term[][] terms, int[] pos,, +            IndexReader reader, Collection<Query> flatQueries) throws IOException {, +++ b/server/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +            IndexFieldData.XFieldComparatorSource comparatorSource =, +                    (IndexFieldData.XFieldComparatorSource) sortField.getComparatorSource();, +++ b/server/src/main/java/org/elasticsearch/common/lucene/index/ElasticsearchDirectoryReader.java, +    private ElasticsearchDirectoryReader(DirectoryReader in, FilterDirectoryReader.SubReaderWrapper wrapper,, +            ShardId shardId) throws IOException {, +     * Adds the given listener to the provided directory reader. The reader, +     * must contain an {@link ElasticsearchDirectoryReader} in it's hierarchy, +     * @throws IllegalArgumentException if the reader doesn't contain an, +     *     {@link ElasticsearchDirectoryReader} in it's hierarchy, +            throw new IllegalArgumentException(, +                    "Can't install close listener reader is not an ElasticsearchDirectoryReader/ElasticsearchLeafReader");, +     * Tries to unwrap the given reader until the first, +     * {@link ElasticsearchDirectoryReader} instance is found or {@code null}, +     * if no instance is found., +++ b/server/src/main/java/org/elasticsearch/common/lucene/index/FilterableTermsEnum.java, +    static final String UNSUPPORTED_MESSAGE =, +            "This TermsEnum only supports #seekExact(BytesRef) as well as #docFreq() and #totalTermFreq()";, +++ b/server/src/main/java/org/elasticsearch/common/lucene/index/FreqTermsEnum.java, +    public FreqTermsEnum(IndexReader reader, String field, boolean needDocFreq, boolean needTotalTermFreq,, +            @Nullable Query filter, BigArrays bigArrays) throws IOException {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/server/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +    private void convertMultiPhraseQuery(int currentPos, int[] termsIdx, MultiPhraseQuery orig, Term[][] terms, int[] pos,, +            IndexReader reader, Collection<Query> flatQueries) throws IOException {, +++ b/server/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +            IndexFieldData.XFieldComparatorSource comparatorSource =, +                    (IndexFieldData.XFieldComparatorSource) sortField.getComparatorSource();, +++ b/server/src/main/java/org/elasticsearch/common/lucene/index/ElasticsearchDirectoryReader.java, +    private ElasticsearchDirectoryReader(DirectoryReader in, FilterDirectoryReader.SubReaderWrapper wrapper,, +            ShardId shardId) throws IOException {, +     * Adds the given listener to the provided directory reader. The reader, +     * must contain an {@link ElasticsearchDirectoryReader} in it's hierarchy, +     * @throws IllegalArgumentException if the reader doesn't contain an, +     *     {@link ElasticsearchDirectoryReader} in it's hierarchy, +            throw new IllegalArgumentException(, +                    "Can't install close listener reader is not an ElasticsearchDirectoryReader/ElasticsearchLeafReader");, +     * Tries to unwrap the given reader until the first, +     * {@link ElasticsearchDirectoryReader} instance is found or {@code null}, +     * if no instance is found., +++ b/server/src/main/java/org/elasticsearch/common/lucene/index/FilterableTermsEnum.java, +    static final String UNSUPPORTED_MESSAGE =, +            "This TermsEnum only supports #seekExact(BytesRef) as well as #docFreq() and #totalTermFreq()";]