[+++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/Data.java, +     * @param clazz The expected class of the field value, +     * @throws IllegalArgumentException if the field is present but is not of the type provided as argument., +    public <T> T getProperty(String path, Class<T> clazz) {, +        if (property == null) {, +            return null;, +        }, +        if (clazz.isInstance(property)) {, +            return clazz.cast(property);, +        }, +        throw new IllegalArgumentException("field [" + path + "] of type [" + property.getClass().getName() + "] cannot be cast to [" + clazz.getName() + "]");, +        return get(path) != null;, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/Data.java, +     * @param clazz The expected class of the field value, +     * @throws IllegalArgumentException if the field is present but is not of the type provided as argument., +    public <T> T getProperty(String path, Class<T> clazz) {, +        if (property == null) {, +            return null;, +        }, +        if (clazz.isInstance(property)) {, +            return clazz.cast(property);, +        }, +        throw new IllegalArgumentException("field [" + path + "] of type [" + property.getClass().getName() + "] cannot be cast to [" + clazz.getName() + "]");, +        return get(path) != null;, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/date/DateProcessor.java, +        String value = data.getProperty(matchField, String.class);, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/Data.java, +     * @param clazz The expected class of the field value, +     * @throws IllegalArgumentException if the field is present but is not of the type provided as argument., +    public <T> T getProperty(String path, Class<T> clazz) {, +        if (property == null) {, +            return null;, +        }, +        if (clazz.isInstance(property)) {, +            return clazz.cast(property);, +        }, +        throw new IllegalArgumentException("field [" + path + "] of type [" + property.getClass().getName() + "] cannot be cast to [" + clazz.getName() + "]");, +        return get(path) != null;, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/date/DateProcessor.java, +        String value = data.getProperty(matchField, String.class);, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/geoip/GeoIpProcessor.java, +        String ip = data.getProperty(sourceField, String.class);, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/Data.java, +     * @param clazz The expected class of the field value, +     * @throws IllegalArgumentException if the field is present but is not of the type provided as argument., +    public <T> T getProperty(String path, Class<T> clazz) {, +        if (property == null) {, +            return null;, +        }, +        if (clazz.isInstance(property)) {, +            return clazz.cast(property);, +        }, +        throw new IllegalArgumentException("field [" + path + "] of type [" + property.getClass().getName() + "] cannot be cast to [" + clazz.getName() + "]");, +        return get(path) != null;, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/date/DateProcessor.java, +        String value = data.getProperty(matchField, String.class);, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/geoip/GeoIpProcessor.java, +        String ip = data.getProperty(sourceField, String.class);, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/grok/GrokProcessor.java, +        Object field = data.getProperty(matchField, Object.class);, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/Data.java, +     * @param clazz The expected class of the field value, +     * @throws IllegalArgumentException if the field is present but is not of the type provided as argument., +    public <T> T getProperty(String path, Class<T> clazz) {, +        if (property == null) {, +            return null;, +        }, +        if (clazz.isInstance(property)) {, +            return clazz.cast(property);, +        }, +        throw new IllegalArgumentException("field [" + path + "] of type [" + property.getClass().getName() + "] cannot be cast to [" + clazz.getName() + "]");, +        return get(path) != null;, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/date/DateProcessor.java, +        String value = data.getProperty(matchField, String.class);, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/geoip/GeoIpProcessor.java, +        String ip = data.getProperty(sourceField, String.class);, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/grok/GrokProcessor.java, +        Object field = data.getProperty(matchField, Object.class);, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/mutate/MutateProcessor.java, +                Object oldVal = data.getProperty(entry.getKey(), Object.class);, +            Object oldVal = data.getProperty(entry.getKey(), Object.class);, +            Object oldVal = data.getProperty(entry.getKey(), Object.class);, +            String oldVal = data.getProperty(gsubExpression.getFieldName(), String.class);, +            Object oldVal = data.getProperty(entry.getKey(), Object.class);, +            Object val = data.getProperty(field, Object.class);, +            Object val = data.getProperty(field, Object.class);, +            Object val = data.getProperty(field, Object.class);, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/Data.java, +     * @param clazz The expected class of the field value, +     * @throws IllegalArgumentException if the field is present but is not of the type provided as argument., +    public <T> T getProperty(String path, Class<T> clazz) {, +        if (property == null) {, +            return null;, +        }, +        if (clazz.isInstance(property)) {, +            return clazz.cast(property);, +        }, +        throw new IllegalArgumentException("field [" + path + "] of type [" + property.getClass().getName() + "] cannot be cast to [" + clazz.getName() + "]");, +        return get(path) != null;, +++ b/plugins/ingest/src/main/java/org/elasticsearch/ingest/processor/date/DateProcessor.java]