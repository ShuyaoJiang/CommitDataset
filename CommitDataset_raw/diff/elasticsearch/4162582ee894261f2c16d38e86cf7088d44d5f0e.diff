[+++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        final NetworkService networkService = new NetworkService(settings);, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        final NetworkService networkService = new NetworkService(settings);, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +import java.util.Collections;, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        final NetworkService networkService = new NetworkService(settings);, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +import java.util.Collections;, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkModule.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +     *, +    public NetworkModule(NetworkService networkService, Settings settings, boolean transportClient, NamedWriteableRegistry namedWriteableRegistry) {, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        final NetworkService networkService = new NetworkService(settings);, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +import java.util.Collections;, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkModule.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +     *, +    public NetworkModule(NetworkService networkService, Settings settings, boolean transportClient, NamedWriteableRegistry namedWriteableRegistry) {, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +import java.util.concurrent.CopyOnWriteArrayList;, +    private final List<CustomNameResolver> customNameResolvers = new CopyOnWriteArrayList<>();, +    public NetworkService(Settings settings) {, +    }, +, +    /**, +     * Add a custom name resolver., +     */, +    public void addCustomNameResolver(CustomNameResolver customNameResolver) {, +        customNameResolvers.add(customNameResolver);, +                // next check any registered custom resolvers, +                // next check any registered custom resolvers, +            // allow custom resolvers to have special names, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        final NetworkService networkService = new NetworkService(settings);, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +import java.util.Collections;, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkModule.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +     *, +    public NetworkModule(NetworkService networkService, Settings settings, boolean transportClient, NamedWriteableRegistry namedWriteableRegistry) {, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +import java.util.concurrent.CopyOnWriteArrayList;, +    private final List<CustomNameResolver> customNameResolvers = new CopyOnWriteArrayList<>();, +    public NetworkService(Settings settings) {, +    }, +, +    /**, +     * Add a custom name resolver., +     */, +    public void addCustomNameResolver(CustomNameResolver customNameResolver) {, +        customNameResolvers.add(customNameResolver);, +                // next check any registered custom resolvers, +                // next check any registered custom resolvers, +            // allow custom resolvers to have special names, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +            final NetworkService networkService = new NetworkService(settings);, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        final NetworkService networkService = new NetworkService(settings);, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +import java.util.Collections;, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkModule.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +     *, +    public NetworkModule(NetworkService networkService, Settings settings, boolean transportClient, NamedWriteableRegistry namedWriteableRegistry) {, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +import java.util.concurrent.CopyOnWriteArrayList;, +    private final List<CustomNameResolver> customNameResolvers = new CopyOnWriteArrayList<>();, +    public NetworkService(Settings settings) {, +    }, +, +    /**, +     * Add a custom name resolver., +     */, +    public void addCustomNameResolver(CustomNameResolver customNameResolver) {, +        customNameResolvers.add(customNameResolver);, +                // next check any registered custom resolvers, +                // next check any registered custom resolvers, +            // allow custom resolvers to have special names, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +            final NetworkService networkService = new NetworkService(settings);, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        final NetworkService networkService = new NetworkService(settings);, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +import java.util.Collections;, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkModule.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +     *, +    public NetworkModule(NetworkService networkService, Settings settings, boolean transportClient, NamedWriteableRegistry namedWriteableRegistry) {, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +import java.util.concurrent.CopyOnWriteArrayList;, +    private final List<CustomNameResolver> customNameResolvers = new CopyOnWriteArrayList<>();, +    public NetworkService(Settings settings) {, +    }, +, +    /**]