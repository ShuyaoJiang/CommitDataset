[+++ b/server/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +        final InternalAggregations aggregations = aggregationsList.isEmpty() ? null :, +            InternalAggregations.reduce(aggregationsList, firstResult.pipelineAggregators(), reduceContext);, +                    ReduceContext reduceContext = controller.reduceContextFunction.apply(false);, +                    InternalAggregations reducedAggs = InternalAggregations.reduce(Arrays.asList(aggsBuffer), reduceContext);, +++ b/server/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +        final InternalAggregations aggregations = aggregationsList.isEmpty() ? null :, +            InternalAggregations.reduce(aggregationsList, firstResult.pipelineAggregators(), reduceContext);, +                    ReduceContext reduceContext = controller.reduceContextFunction.apply(false);, +                    InternalAggregations reducedAggs = InternalAggregations.reduce(Arrays.asList(aggsBuffer), reduceContext);, +++ b/server/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +++ b/server/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +        final InternalAggregations aggregations = aggregationsList.isEmpty() ? null :, +            InternalAggregations.reduce(aggregationsList, firstResult.pipelineAggregators(), reduceContext);, +                    ReduceContext reduceContext = controller.reduceContextFunction.apply(false);, +                    InternalAggregations reducedAggs = InternalAggregations.reduce(Arrays.asList(aggsBuffer), reduceContext);, +++ b/server/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java, +    public static final AggregatorFactories EMPTY = new AggregatorFactories(new AggregatorFactory<?>[0], new ArrayList<>());, +++ b/server/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +        final InternalAggregations aggregations = aggregationsList.isEmpty() ? null :, +            InternalAggregations.reduce(aggregationsList, firstResult.pipelineAggregators(), reduceContext);, +                    ReduceContext reduceContext = controller.reduceContextFunction.apply(false);, +                    InternalAggregations reducedAggs = InternalAggregations.reduce(Arrays.asList(aggsBuffer), reduceContext);, +++ b/server/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java, +    public static final AggregatorFactories EMPTY = new AggregatorFactories(new AggregatorFactory<?>[0], new ArrayList<>());, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java, +         * Operations that are potentially losing information can only be applied during the final reduce phase., +++ b/server/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +        final InternalAggregations aggregations = aggregationsList.isEmpty() ? null :, +            InternalAggregations.reduce(aggregationsList, firstResult.pipelineAggregators(), reduceContext);, +                    ReduceContext reduceContext = controller.reduceContextFunction.apply(false);, +                    InternalAggregations reducedAggs = InternalAggregations.reduce(Arrays.asList(aggsBuffer), reduceContext);, +++ b/server/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java, +    public static final AggregatorFactories EMPTY = new AggregatorFactories(new AggregatorFactory<?>[0], new ArrayList<>());, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java, +         * Operations that are potentially losing information can only be applied during the final reduce phase., +++ b/server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java, +import org.elasticsearch.search.aggregations.pipeline.SiblingPipelineAggregator;, +     * Constructs a new aggregation., +     * Reduces the given list of aggregations, +        return reduce(aggregationsList, null, context);, +    }, +, +    /**, +     * Reduces the given list of aggregations as well as the provided sibling pipeline aggregators., +     * Note that sibling pipeline aggregators are ignored when non final reduction is performed., +     */, +    public static InternalAggregations reduce(List<InternalAggregations> aggregationsList,, +                                              List<SiblingPipelineAggregator> siblingPipelineAggregators,, +                                              ReduceContext context) {, +, +        if (siblingPipelineAggregators != null) {, +            if (context.isFinalReduce()) {, +                for (SiblingPipelineAggregator pipelineAggregator : siblingPipelineAggregators) {, +                    InternalAggregation newAgg = pipelineAggregator.doReduce(new InternalAggregations(reducedAggregations), context);, +                    reducedAggregations.add(newAgg);, +                }, +            }, +        }]