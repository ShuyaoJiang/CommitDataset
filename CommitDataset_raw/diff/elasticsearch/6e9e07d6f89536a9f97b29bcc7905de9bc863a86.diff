[+++ b/core/src/main/java/org/elasticsearch/search/profile/aggregation/InternalAggregationProfileTree.java, +, +        // Anonymous classes (such as NonCollectingAggregator in TermsAgg) won't have a name,, +        // we need to get the super class, +        if (element.getClass().getSimpleName().isEmpty() == true) {, +            return element.getClass().getSuperclass().getSimpleName();, +        if (element instanceof MultiBucketAggregatorWrapper) {, +            return ((MultiBucketAggregatorWrapper) element).getWrappedClass().getSimpleName();, +        }, +        return element.getClass().getSimpleName();, +++ b/core/src/main/java/org/elasticsearch/search/profile/aggregation/InternalAggregationProfileTree.java, +, +        // Anonymous classes (such as NonCollectingAggregator in TermsAgg) won't have a name,, +        // we need to get the super class, +        if (element.getClass().getSimpleName().isEmpty() == true) {, +            return element.getClass().getSuperclass().getSimpleName();, +        if (element instanceof MultiBucketAggregatorWrapper) {, +            return ((MultiBucketAggregatorWrapper) element).getWrappedClass().getSimpleName();, +        }, +        return element.getClass().getSimpleName();, +++ b/core/src/main/java/org/elasticsearch/search/profile/aggregation/ProfilingAggregator.java, +    @Override, +    public String toString() {, +        return delegate.toString();, +    }, +++ b/core/src/main/java/org/elasticsearch/search/profile/aggregation/InternalAggregationProfileTree.java, +, +        // Anonymous classes (such as NonCollectingAggregator in TermsAgg) won't have a name,, +        // we need to get the super class, +        if (element.getClass().getSimpleName().isEmpty() == true) {, +            return element.getClass().getSuperclass().getSimpleName();, +        if (element instanceof MultiBucketAggregatorWrapper) {, +            return ((MultiBucketAggregatorWrapper) element).getWrappedClass().getSimpleName();, +        }, +        return element.getClass().getSimpleName();, +++ b/core/src/main/java/org/elasticsearch/search/profile/aggregation/ProfilingAggregator.java, +    @Override, +    public String toString() {, +        return delegate.toString();, +    }, +++ b/core/src/main/java/org/elasticsearch/search/profile/query/InternalQueryProfileTree.java, +        // Anonymous classes won't have a name,, +        // we need to get the super class, +        if (query.getClass().getSimpleName().isEmpty() == true) {, +            return query.getClass().getSuperclass().getSimpleName();, +        }, +++ b/core/src/main/java/org/elasticsearch/search/profile/aggregation/InternalAggregationProfileTree.java, +, +        // Anonymous classes (such as NonCollectingAggregator in TermsAgg) won't have a name,, +        // we need to get the super class, +        if (element.getClass().getSimpleName().isEmpty() == true) {, +            return element.getClass().getSuperclass().getSimpleName();, +        if (element instanceof MultiBucketAggregatorWrapper) {, +            return ((MultiBucketAggregatorWrapper) element).getWrappedClass().getSimpleName();, +        }, +        return element.getClass().getSimpleName();, +++ b/core/src/main/java/org/elasticsearch/search/profile/aggregation/ProfilingAggregator.java, +    @Override, +    public String toString() {, +        return delegate.toString();, +    }, +++ b/core/src/main/java/org/elasticsearch/search/profile/query/InternalQueryProfileTree.java, +        // Anonymous classes won't have a name,, +        // we need to get the super class, +        if (query.getClass().getSimpleName().isEmpty() == true) {, +            return query.getClass().getSuperclass().getSimpleName();, +        }, +++ b/core/src/test/java/org/elasticsearch/search/profile/aggregation/AggregationProfilerIT.java, +                    equalTo("HistogramAggregator"));, +                    equalTo("HistogramAggregator"));, +            assertThat(termsAggResult.getQueryName(), equalTo(GlobalOrdinalsStringTermsAggregator.class.getSimpleName()));, +            assertThat(avgAggResult.getQueryName(), equalTo(AvgAggregator.class.getSimpleName()));, +                    equalTo("HistogramAggregator"));, +            assertThat(termsAggResult.getQueryName(), equalTo(GlobalOrdinalsStringTermsAggregator.class.getSimpleName()));, +            assertThat(avgAggResult.getQueryName(), equalTo(AvgAggregator.class.getSimpleName()));, +                    equalTo(DiversifiedOrdinalsSamplerAggregator.class.getSimpleName()));, +            assertThat(maxAggResult.getQueryName(), equalTo(MaxAggregator.class.getSimpleName()));, +                    equalTo("HistogramAggregator"));, +            assertThat(tagsAggResult.getQueryName(), equalTo(GlobalOrdinalsStringTermsAggregator.class.getSimpleName()));, +            assertThat(avgAggResult.getQueryName(), equalTo(AvgAggregator.class.getSimpleName()));, +            assertThat(maxAggResult.getQueryName(), equalTo(MaxAggregator.class.getSimpleName()));, +            assertThat(stringsAggResult.getQueryName(), equalTo(GlobalOrdinalsStringTermsAggregator.class.getSimpleName()));, +            assertThat(avgAggResult.getQueryName(), equalTo(AvgAggregator.class.getSimpleName()));, +            assertThat(maxAggResult.getQueryName(), equalTo(MaxAggregator.class.getSimpleName()));, +            assertThat(tagsAggResult.getQueryName(), equalTo(GlobalOrdinalsStringTermsAggregator.class.getSimpleName()));, +            assertThat(avgAggResult.getQueryName(), equalTo(AvgAggregator.class.getSimpleName()));, +            assertThat(maxAggResult.getQueryName(), equalTo(MaxAggregator.class.getSimpleName()));, +++ b/core/src/main/java/org/elasticsearch/search/profile/aggregation/InternalAggregationProfileTree.java, +, +        // Anonymous classes (such as NonCollectingAggregator in TermsAgg) won't have a name,, +        // we need to get the super class, +        if (element.getClass().getSimpleName().isEmpty() == true) {, +            return element.getClass().getSuperclass().getSimpleName();, +        if (element instanceof MultiBucketAggregatorWrapper) {, +            return ((MultiBucketAggregatorWrapper) element).getWrappedClass().getSimpleName();, +        }, +        return element.getClass().getSimpleName();, +++ b/core/src/main/java/org/elasticsearch/search/profile/aggregation/ProfilingAggregator.java, +    @Override, +    public String toString() {]