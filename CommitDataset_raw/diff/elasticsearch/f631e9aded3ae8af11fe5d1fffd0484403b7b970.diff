[+++ b/.idea/dictionaries/kimchy.xml, +      <w>nospawn</w>, +++ b/.idea/dictionaries/kimchy.xml, +      <w>nospawn</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +                releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +, +            releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +++ b/.idea/dictionaries/kimchy.xml, +      <w>nospawn</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +                releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +, +            releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java, + * @author kimchy (shay.banon), +                releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +, +            releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +++ b/.idea/dictionaries/kimchy.xml, +      <w>nospawn</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +                releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +, +            releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java, + * @author kimchy (shay.banon), +                releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +, +            releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java, +import org.elasticsearch.search.query.QuerySearchResultProvider;, +import org.elasticsearch.util.trove.ExtTIntArrayList;, +import java.util.Map;, + * @author kimchy (shay.banon), +        /**, +         * Releases shard targets that are not used in the docsIdsToLoad., +         */, +        protected void releaseIrrelevantSearchContexts(Map<SearchShardTarget, QuerySearchResultProvider> queryResults,, +                                                       Map<SearchShardTarget, ExtTIntArrayList> docIdsToLoad) {, +            for (Map.Entry<SearchShardTarget, QuerySearchResultProvider> entry : queryResults.entrySet()) {, +                if (!docIdsToLoad.containsKey(entry.getKey())) {, +                    searchService.sendFreeContext(nodes.get(entry.getKey().nodeId()), entry.getValue().id());, +                }, +            }, +        }, +, +++ b/.idea/dictionaries/kimchy.xml, +      <w>nospawn</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +                releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +, +            releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java, + * @author kimchy (shay.banon), +                releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +, +            releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java, +import org.elasticsearch.search.query.QuerySearchResultProvider;, +import org.elasticsearch.util.trove.ExtTIntArrayList;, +import java.util.Map;, + * @author kimchy (shay.banon), +        /**, +         * Releases shard targets that are not used in the docsIdsToLoad., +         */, +        protected void releaseIrrelevantSearchContexts(Map<SearchShardTarget, QuerySearchResultProvider> queryResults,, +                                                       Map<SearchShardTarget, ExtTIntArrayList> docIdsToLoad) {, +            for (Map.Entry<SearchShardTarget, QuerySearchResultProvider> entry : queryResults.entrySet()) {, +                if (!docIdsToLoad.containsKey(entry.getKey())) {, +                    searchService.sendFreeContext(nodes.get(entry.getKey().nodeId()), entry.getValue().id());, +                }, +            }, +        }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java, +import org.elasticsearch.util.io.stream.VoidStreamable;, +++ b/.idea/dictionaries/kimchy.xml, +      <w>nospawn</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +                releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +, +            releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java, + * @author kimchy (shay.banon), +                releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +, +            releaseIrrelevantSearchContexts(queryResults, docIdsToLoad);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java, +import org.elasticsearch.search.query.QuerySearchResultProvider;, +import org.elasticsearch.util.trove.ExtTIntArrayList;, +import java.util.Map;, + * @author kimchy (shay.banon), +        /**, +         * Releases shard targets that are not used in the docsIdsToLoad., +         */, +        protected void releaseIrrelevantSearchContexts(Map<SearchShardTarget, QuerySearchResultProvider> queryResults,, +                                                       Map<SearchShardTarget, ExtTIntArrayList> docIdsToLoad) {, +            for (Map.Entry<SearchShardTarget, QuerySearchResultProvider> entry : queryResults.entrySet()) {, +                if (!docIdsToLoad.containsKey(entry.getKey())) {]