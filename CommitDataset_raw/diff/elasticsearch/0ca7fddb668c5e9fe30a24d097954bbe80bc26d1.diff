[+++ b/src/main/java/org/elasticsearch/index/mapper/geo/GeoPointFieldMapper.java, +                    if (fieldNode instanceof Integer) {, +                    } else {, +                        builder.geoHashPrecision(GeoUtils.geoHashLevelsForPrecision(fieldNode.toString()));, +                    }, +    int geoHashPrecision() {, +        return geoHashPrecision;, +    }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/geo/GeoPointFieldMapper.java, +                    if (fieldNode instanceof Integer) {, +                    } else {, +                        builder.geoHashPrecision(GeoUtils.geoHashLevelsForPrecision(fieldNode.toString()));, +                    }, +    int geoHashPrecision() {, +        return geoHashPrecision;, +    }, +, +++ b/src/test/java/org/elasticsearch/index/mapper/geo/GeohashMappingGeoPointTests.java, +import org.elasticsearch.index.mapper.FieldMapper;, +, +    @Test, +    public void testGeoHashPrecisionAsInteger() throws Exception {, +        String mapping = XContentFactory.jsonBuilder().startObject().startObject("type"), +                .startObject("properties").startObject("point").field("type", "geo_point").field("geohash_precision", 10).endObject().endObject(), +                .endObject().endObject().string();, +        DocumentMapper defaultMapper = MapperTestUtils.newParser().parse(mapping);, +        FieldMapper mapper = defaultMapper.mappers().smartName("point").mapper();, +        assertThat(mapper, instanceOf(GeoPointFieldMapper.class));, +        GeoPointFieldMapper geoPointFieldMapper = (GeoPointFieldMapper) mapper;, +        assertThat(geoPointFieldMapper.geoHashPrecision(), is(10));, +    }, +, +    @Test, +    public void testGeoHashPrecisionAsLength() throws Exception {, +        String mapping = XContentFactory.jsonBuilder().startObject().startObject("type"), +                .startObject("properties").startObject("point").field("type", "geo_point").field("geohash_precision", "5m").endObject().endObject(), +                .endObject().endObject().string();, +        DocumentMapper defaultMapper = MapperTestUtils.newParser().parse(mapping);, +        FieldMapper mapper = defaultMapper.mappers().smartName("point").mapper();, +        assertThat(mapper, instanceOf(GeoPointFieldMapper.class));, +        GeoPointFieldMapper geoPointFieldMapper = (GeoPointFieldMapper) mapper;, +        assertThat(geoPointFieldMapper.geoHashPrecision(), is(10));, +    }]