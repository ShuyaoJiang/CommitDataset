[+++ b/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureStorageService.java, +, +    static InputStream giveSocketPermissionsToStream(InputStream stream) {, +        return new InputStream() {, +            @Override, +            public int read() throws IOException {, +                return SocketAccess.doPrivilegedIOException(stream::read);, +            }, +, +            @Override, +            public int read(byte[] b) throws IOException {, +                return SocketAccess.doPrivilegedIOException(() -> stream.read(b));, +            }, +, +            @Override, +            public int read(byte[] b, int off, int len) throws IOException {, +                return SocketAccess.doPrivilegedIOException(() -> stream.read(b, off, len));, +            }, +        };, +    }, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureStorageService.java, +, +    static InputStream giveSocketPermissionsToStream(InputStream stream) {, +        return new InputStream() {, +            @Override, +            public int read() throws IOException {, +                return SocketAccess.doPrivilegedIOException(stream::read);, +            }, +, +            @Override, +            public int read(byte[] b) throws IOException {, +                return SocketAccess.doPrivilegedIOException(() -> stream.read(b));, +            }, +, +            @Override, +            public int read(byte[] b, int off, int len) throws IOException {, +                return SocketAccess.doPrivilegedIOException(() -> stream.read(b, off, len));, +            }, +        };, +    }, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureStorageServiceImpl.java, +import com.microsoft.azure.storage.blob.BlobInputStream;, +    public InputStream getInputStream(String account, LocationMode mode, String container, String blob) throws URISyntaxException,, +        StorageException {, +        BlobInputStream is = SocketAccess.doPrivilegedException(() ->, +            blockBlobReference.openInputStream(null, null, generateOperationContext(account)));, +        return AzureStorageService.giveSocketPermissionsToStream(is);, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureStorageService.java, +, +    static InputStream giveSocketPermissionsToStream(InputStream stream) {, +        return new InputStream() {, +            @Override, +            public int read() throws IOException {, +                return SocketAccess.doPrivilegedIOException(stream::read);, +            }, +, +            @Override, +            public int read(byte[] b) throws IOException {, +                return SocketAccess.doPrivilegedIOException(() -> stream.read(b));, +            }, +, +            @Override, +            public int read(byte[] b, int off, int len) throws IOException {, +                return SocketAccess.doPrivilegedIOException(() -> stream.read(b, off, len));, +            }, +        };, +    }, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureStorageServiceImpl.java, +import com.microsoft.azure.storage.blob.BlobInputStream;, +    public InputStream getInputStream(String account, LocationMode mode, String container, String blob) throws URISyntaxException,, +        StorageException {, +        BlobInputStream is = SocketAccess.doPrivilegedException(() ->, +            blockBlobReference.openInputStream(null, null, generateOperationContext(account)));, +        return AzureStorageService.giveSocketPermissionsToStream(is);, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/SocketAccess.java, +    public static <T> T doPrivilegedIOException(PrivilegedExceptionAction<T> operation) throws IOException {, +        SpecialPermission.check();, +        try {, +            return AccessController.doPrivileged(operation);, +        } catch (PrivilegedActionException e) {, +            throw (IOException) e.getCause();, +        }, +    }, +, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureStorageService.java, +, +    static InputStream giveSocketPermissionsToStream(InputStream stream) {, +        return new InputStream() {, +            @Override, +            public int read() throws IOException {, +                return SocketAccess.doPrivilegedIOException(stream::read);, +            }, +, +            @Override, +            public int read(byte[] b) throws IOException {, +                return SocketAccess.doPrivilegedIOException(() -> stream.read(b));, +            }, +, +            @Override, +            public int read(byte[] b, int off, int len) throws IOException {]