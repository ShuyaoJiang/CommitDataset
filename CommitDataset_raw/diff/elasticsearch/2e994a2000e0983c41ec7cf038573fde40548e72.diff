[+++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +        registerIndexDynamicSetting(EngineConfig.INDEX_VERSION_MAP_SIZE, Validator.BYTES_SIZE_OR_PERCENTAGE);, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +        registerIndexDynamicSetting(EngineConfig.INDEX_VERSION_MAP_SIZE, Validator.BYTES_SIZE_OR_PERCENTAGE);, +++ b/core/src/main/java/org/elasticsearch/index/CompositeIndexEventListener.java, +    public void onShardActive(IndexShard indexShard) {, +        for (IndexEventListener listener : listeners) {, +            try {, +                listener.onShardActive(indexShard);, +            } catch (Throwable t) {, +                logger.warn("[{}] failed to invoke on shard active callback", t, indexShard.shardId().getId());, +                throw t;, +            }, +        }, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +        registerIndexDynamicSetting(EngineConfig.INDEX_VERSION_MAP_SIZE, Validator.BYTES_SIZE_OR_PERCENTAGE);, +++ b/core/src/main/java/org/elasticsearch/index/CompositeIndexEventListener.java, +    public void onShardActive(IndexShard indexShard) {, +        for (IndexEventListener listener : listeners) {, +            try {, +                listener.onShardActive(indexShard);, +            } catch (Throwable t) {, +                logger.warn("[{}] failed to invoke on shard active callback", t, indexShard.shardId().getId());, +                throw t;, +            }, +        }, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +    public IndexService newIndexService(NodeEnvironment environment, IndexService.ShardStoreDeleter shardStoreDeleter, NodeServicesProvider servicesProvider, MapperRegistry mapperRegistry) throws IOException {, +                servicesProvider, queryCache, store, eventListener, searcherWrapperFactory, mapperRegistry);, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +        registerIndexDynamicSetting(EngineConfig.INDEX_VERSION_MAP_SIZE, Validator.BYTES_SIZE_OR_PERCENTAGE);, +++ b/core/src/main/java/org/elasticsearch/index/CompositeIndexEventListener.java, +    public void onShardActive(IndexShard indexShard) {, +        for (IndexEventListener listener : listeners) {, +            try {, +                listener.onShardActive(indexShard);, +            } catch (Throwable t) {, +                logger.warn("[{}] failed to invoke on shard active callback", t, indexShard.shardId().getId());, +                throw t;, +            }, +        }, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +    public IndexService newIndexService(NodeEnvironment environment, IndexService.ShardStoreDeleter shardStoreDeleter, NodeServicesProvider servicesProvider, MapperRegistry mapperRegistry) throws IOException {, +                servicesProvider, queryCache, store, eventListener, searcherWrapperFactory, mapperRegistry);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +                        MapperRegistry mapperRegistry) throws IOException {, +                indexShard = new IndexShard(shardId, this.indexSettings, path, store, indexCache, mapperService, similarityService, indexFieldData, engineFactory, eventListener, searcherWrapper, nodeServicesProvider, slowLog);, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +        registerIndexDynamicSetting(EngineConfig.INDEX_VERSION_MAP_SIZE, Validator.BYTES_SIZE_OR_PERCENTAGE);, +++ b/core/src/main/java/org/elasticsearch/index/CompositeIndexEventListener.java, +    public void onShardActive(IndexShard indexShard) {, +        for (IndexEventListener listener : listeners) {, +            try {, +                listener.onShardActive(indexShard);, +            } catch (Throwable t) {, +                logger.warn("[{}] failed to invoke on shard active callback", t, indexShard.shardId().getId());, +                throw t;, +            }, +        }, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +    public IndexService newIndexService(NodeEnvironment environment, IndexService.ShardStoreDeleter shardStoreDeleter, NodeServicesProvider servicesProvider, MapperRegistry mapperRegistry) throws IOException {, +                servicesProvider, queryCache, store, eventListener, searcherWrapperFactory, mapperRegistry);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +                        MapperRegistry mapperRegistry) throws IOException {, +                indexShard = new IndexShard(shardId, this.indexSettings, path, store, indexCache, mapperService, similarityService, indexFieldData, engineFactory, eventListener, searcherWrapper, nodeServicesProvider, slowLog);, +++ b/core/src/main/java/org/elasticsearch/index/engine/ElasticsearchConcurrentMergeScheduler.java, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +        registerIndexDynamicSetting(EngineConfig.INDEX_VERSION_MAP_SIZE, Validator.BYTES_SIZE_OR_PERCENTAGE);, +++ b/core/src/main/java/org/elasticsearch/index/CompositeIndexEventListener.java, +    public void onShardActive(IndexShard indexShard) {, +        for (IndexEventListener listener : listeners) {, +            try {, +                listener.onShardActive(indexShard);, +            } catch (Throwable t) {, +                logger.warn("[{}] failed to invoke on shard active callback", t, indexShard.shardId().getId());, +                throw t;, +            }, +        }, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +    public IndexService newIndexService(NodeEnvironment environment, IndexService.ShardStoreDeleter shardStoreDeleter, NodeServicesProvider servicesProvider, MapperRegistry mapperRegistry) throws IOException {, +                servicesProvider, queryCache, store, eventListener, searcherWrapperFactory, mapperRegistry);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +                        MapperRegistry mapperRegistry) throws IOException {, +                indexShard = new IndexShard(shardId, this.indexSettings, path, store, indexCache, mapperService, similarityService, indexFieldData, engineFactory, eventListener, searcherWrapper, nodeServicesProvider, slowLog);, +++ b/core/src/main/java/org/elasticsearch/index/engine/ElasticsearchConcurrentMergeScheduler.java]