[+++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java, +        ChildrenQuery that = (ChildrenQuery) obj;, +        if (!originalChildQuery.equals(that.originalChildQuery)) {, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java, +        ChildrenQuery that = (ChildrenQuery) obj;, +        if (!originalChildQuery.equals(that.originalChildQuery)) {, +++ b/src/main/java/org/elasticsearch/index/search/child/HasChildFilter.java, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java, +        ChildrenQuery that = (ChildrenQuery) obj;, +        if (!originalChildQuery.equals(that.originalChildQuery)) {, +++ b/src/main/java/org/elasticsearch/index/search/child/HasChildFilter.java, +++ b/src/main/java/org/elasticsearch/index/search/child/ParentQuery.java, +        ParentQuery that = (ParentQuery) obj;, +        if (!originalParentQuery.equals(that.originalParentQuery)) {, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java, +        ChildrenQuery that = (ChildrenQuery) obj;, +        if (!originalChildQuery.equals(that.originalChildQuery)) {, +++ b/src/main/java/org/elasticsearch/index/search/child/HasChildFilter.java, +++ b/src/main/java/org/elasticsearch/index/search/child/ParentQuery.java, +        ParentQuery that = (ParentQuery) obj;, +        if (!originalParentQuery.equals(that.originalParentQuery)) {, +++ b/src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java, +        TopChildrenQuery that = (TopChildrenQuery) obj;, +        if (!originalChildQuery.equals(that.originalChildQuery)) {, +        if (incrementalFactor != that.incrementalFactor) {, +        result = 31 * result + incrementalFactor;, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java, +        ChildrenQuery that = (ChildrenQuery) obj;, +        if (!originalChildQuery.equals(that.originalChildQuery)) {, +++ b/src/main/java/org/elasticsearch/index/search/child/HasChildFilter.java, +++ b/src/main/java/org/elasticsearch/index/search/child/ParentQuery.java, +        ParentQuery that = (ParentQuery) obj;, +        if (!originalParentQuery.equals(that.originalParentQuery)) {, +++ b/src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java, +        TopChildrenQuery that = (TopChildrenQuery) obj;, +        if (!originalChildQuery.equals(that.originalChildQuery)) {, +        if (incrementalFactor != that.incrementalFactor) {, +        result = 31 * result + incrementalFactor;, +++ b/src/test/java/org/elasticsearch/test/integration/search/child/SimpleChildQuerySearchTests.java, +, +, +    }, +, +    @Test, +    // See: https://github.com/elasticsearch/elasticsearch/issues/3290, +    public void testCachingBug_withFqueryFilter() throws Exception {, +        client().admin().indices().prepareCreate("test"), +                .setSettings(, +                        ImmutableSettings.settingsBuilder(), +                                .put("index.number_of_shards", 1), +                                .put("index.number_of_replicas", 0), +                ).execute().actionGet();, +        client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();, +        client().admin().indices().preparePutMapping("test").setType("child").setSource(jsonBuilder().startObject().startObject("type"), +                .startObject("_parent").field("type", "parent").endObject(), +                .endObject().endObject()).execute().actionGet();, +, +        // index simple data, +        for (int i = 0; i < 10; i++) {, +            client().prepareIndex("test", "parent", Integer.toString(i)).setSource("p_field", i).execute().actionGet();, +        }, +        for (int i = 0; i < 10; i++) {, +            client().prepareIndex("test", "child", Integer.toString(i)).setSource("c_field", i).setParent("" + 0).execute().actionGet();, +        }, +        for (int i = 0; i < 10; i++) {, +            client().prepareIndex("test", "child", Integer.toString(i + 10)).setSource("c_field", i + 10).setParent(Integer.toString(i)).execute().actionGet();, +        }, +        client().admin().indices().prepareFlush().execute().actionGet();, +        client().admin().indices().prepareRefresh().execute().actionGet();, +, +        for (int i = 0; i < 10; i++) {, +            SearchResponse searchResponse = client().prepareSearch("test").setQuery(constantScoreQuery(queryFilter(topChildrenQuery("child", matchAllQuery())).cache(true))), +                    .execute().actionGet();, +            assertThat("Failures " + Arrays.toString(searchResponse.getShardFailures()), searchResponse.getShardFailures().length, equalTo(0));, +            searchResponse = client().prepareSearch("test").setQuery(constantScoreQuery(queryFilter(hasChildQuery("child", matchAllQuery()).scoreType("max")).cache(true))), +                    .execute().actionGet();, +            assertThat("Failures " + Arrays.toString(searchResponse.getShardFailures()), searchResponse.getShardFailures().length, equalTo(0));, +            searchResponse = client().prepareSearch("test").setQuery(constantScoreQuery(queryFilter(hasParentQuery("parent", matchAllQuery()).scoreType("score")).cache(true))), +                    .execute().actionGet();, +            assertThat("Failures " + Arrays.toString(searchResponse.getShardFailures()), searchResponse.getShardFailures().length, equalTo(0));, +        }]