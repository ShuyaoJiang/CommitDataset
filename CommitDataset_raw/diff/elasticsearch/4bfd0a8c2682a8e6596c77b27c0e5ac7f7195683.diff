[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/gateway/blobstore/BlobReuseExistingNodeAllocation.java, +import org.elasticsearch.cluster.routing.*;, +import org.elasticsearch.common.util.concurrent.ConcurrentCollections;, +import org.elasticsearch.index.shard.ShardId;, +import java.util.concurrent.ConcurrentMap;, +    private final ConcurrentMap<ShardId, CommitPoint> cachedCommitPoints = ConcurrentCollections.newConcurrentMap();, +, +        this.listTimeout = componentSettings.getAsTime("list_timeout", TimeValue.timeValueSeconds(60));, +        // clean cached commit points for primaries that are already active, +        for (ShardId shardId : cachedCommitPoints.keySet()) {, +            IndexRoutingTable indexRoutingTable = routingNodes.routingTable().index(shardId.index().name());, +            if (indexRoutingTable == null) {, +                cachedCommitPoints.remove(shardId);, +                continue;, +            }, +, +            ShardRouting primaryShardRouting = indexRoutingTable.shard(shardId.id()).primaryShard();, +            if (primaryShardRouting.active()) {, +                cachedCommitPoints.remove(shardId);, +            }, +        }, +, +        if (!routingNodes.hasUnassigned()) {, +            return changed;, +        }, +, +                        CommitPoint commitPoint = cachedCommitPoints.get(shard.shardId());, +                        if (commitPoint == null) {, +                            commitPoint = indexGateway.findCommitPoint(shard.id());, +                            if (commitPoint != null) {, +                                cachedCommitPoints.put(shard.shardId(), commitPoint);, +                            } else {, +                                cachedCommitPoints.put(shard.shardId(), CommitPoint.NULL);, +                            }, +                        } else if (commitPoint == CommitPoint.NULL) {, +                            commitPoint = null;, +                        }, +, +                        if (commitPoint == null) {, +                            break;, +                        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/gateway/blobstore/BlobReuseExistingNodeAllocation.java, +import org.elasticsearch.cluster.routing.*;, +import org.elasticsearch.common.util.concurrent.ConcurrentCollections;, +import org.elasticsearch.index.shard.ShardId;, +import java.util.concurrent.ConcurrentMap;, +    private final ConcurrentMap<ShardId, CommitPoint> cachedCommitPoints = ConcurrentCollections.newConcurrentMap();, +, +        this.listTimeout = componentSettings.getAsTime("list_timeout", TimeValue.timeValueSeconds(60));, +        // clean cached commit points for primaries that are already active, +        for (ShardId shardId : cachedCommitPoints.keySet()) {, +            IndexRoutingTable indexRoutingTable = routingNodes.routingTable().index(shardId.index().name());, +            if (indexRoutingTable == null) {, +                cachedCommitPoints.remove(shardId);, +                continue;, +            }, +, +            ShardRouting primaryShardRouting = indexRoutingTable.shard(shardId.id()).primaryShard();, +            if (primaryShardRouting.active()) {, +                cachedCommitPoints.remove(shardId);, +            }, +        }, +, +        if (!routingNodes.hasUnassigned()) {, +            return changed;, +        }, +, +                        CommitPoint commitPoint = cachedCommitPoints.get(shard.shardId());, +                        if (commitPoint == null) {, +                            commitPoint = indexGateway.findCommitPoint(shard.id());, +                            if (commitPoint != null) {, +                                cachedCommitPoints.put(shard.shardId(), commitPoint);, +                            } else {, +                                cachedCommitPoints.put(shard.shardId(), CommitPoint.NULL);, +                            }, +                        } else if (commitPoint == CommitPoint.NULL) {, +                            commitPoint = null;, +                        }, +, +                        if (commitPoint == null) {, +                            break;, +                        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/CommitPoint.java, +    public static CommitPoint NULL = new CommitPoint(-1, "_null_", Type.GENERATED, ImmutableList.<CommitPoint.FileInfo>of(), ImmutableList.<CommitPoint.FileInfo>of());, +]