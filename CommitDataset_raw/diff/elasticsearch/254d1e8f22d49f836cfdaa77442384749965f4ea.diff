[+++ b/docs/reference/indices/templates.asciidoc, +          "format": "EEE MMM dd HH:mm:ss Z yyyy", +++ b/docs/reference/indices/templates.asciidoc, +          "format": "EEE MMM dd HH:mm:ss Z yyyy", +++ b/server/src/main/java/org/elasticsearch/common/joda/Joda.java, +import org.apache.logging.log4j.LogManager;, +import org.elasticsearch.common.logging.DeprecationLogger;, +    private static DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger(Joda.class));, +, +    public static JodaDateFormatter forPattern(String input) {, +                    ISODateTimeFormat.dateOptionalTimeParser().withLocale(Locale.ROOT).withZone(DateTimeZone.UTC),, +                    ISODateTimeFormat.dateTime().withLocale(Locale.ROOT).withZone(DateTimeZone.UTC));, +                    StrictISODateTimeFormat.dateOptionalTimeParser().withLocale(Locale.ROOT).withZone(DateTimeZone.UTC),, +                    StrictISODateTimeFormat.dateTime().withLocale(Locale.ROOT).withZone(DateTimeZone.UTC));, +                maybeLogJodaDeprecation(input);, +        formatter = formatter.withLocale(Locale.ROOT).withZone(DateTimeZone.UTC);, +    private static void maybeLogJodaDeprecation(String input) {, +        if (input.contains("CC")) {, +            deprecationLogger.deprecatedAndMaybeLog("joda-century-of-era-format",, +                "Use of 'C' (century-of-era) is deprecated and will not be supported in the next major version of Elasticsearch.");, +        }, +        if (input.contains("YY")) {, +            deprecationLogger.deprecatedAndMaybeLog("joda-year-of-era-format", "Use of 'Y' (year-of-era) will change to 'y' in the" +, +                " next major version of Elasticsearch. Prefix your date format with '8' to use the new specifier.");, +        }, +        if (input.contains("xx")) {, +            deprecationLogger.deprecatedAndMaybeLog("joda-week-based-year-format","Use of 'x' (week-based-year) will change" +, +                " to 'Y' in the next major version of Elasticsearch. Prefix your date format with '8' to use the new specifier.");, +        }, +    }, +, +++ b/docs/reference/indices/templates.asciidoc, +          "format": "EEE MMM dd HH:mm:ss Z yyyy", +++ b/server/src/main/java/org/elasticsearch/common/joda/Joda.java, +import org.apache.logging.log4j.LogManager;, +import org.elasticsearch.common.logging.DeprecationLogger;, +    private static DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger(Joda.class));, +, +    public static JodaDateFormatter forPattern(String input) {, +                    ISODateTimeFormat.dateOptionalTimeParser().withLocale(Locale.ROOT).withZone(DateTimeZone.UTC),, +                    ISODateTimeFormat.dateTime().withLocale(Locale.ROOT).withZone(DateTimeZone.UTC));, +                    StrictISODateTimeFormat.dateOptionalTimeParser().withLocale(Locale.ROOT).withZone(DateTimeZone.UTC),, +                    StrictISODateTimeFormat.dateTime().withLocale(Locale.ROOT).withZone(DateTimeZone.UTC));, +                maybeLogJodaDeprecation(input);, +        formatter = formatter.withLocale(Locale.ROOT).withZone(DateTimeZone.UTC);, +    private static void maybeLogJodaDeprecation(String input) {, +        if (input.contains("CC")) {, +            deprecationLogger.deprecatedAndMaybeLog("joda-century-of-era-format",, +                "Use of 'C' (century-of-era) is deprecated and will not be supported in the next major version of Elasticsearch.");, +        }, +        if (input.contains("YY")) {, +            deprecationLogger.deprecatedAndMaybeLog("joda-year-of-era-format", "Use of 'Y' (year-of-era) will change to 'y' in the" +, +                " next major version of Elasticsearch. Prefix your date format with '8' to use the new specifier.");, +        }, +        if (input.contains("xx")) {, +            deprecationLogger.deprecatedAndMaybeLog("joda-week-based-year-format","Use of 'x' (week-based-year) will change" +, +                " to 'Y' in the next major version of Elasticsearch. Prefix your date format with '8' to use the new specifier.");, +        }, +    }, +, +++ b/server/src/main/java/org/elasticsearch/common/time/DateFormatter.java, +            if (Strings.hasLength(input) == false) {, +                throw new IllegalArgumentException("Cannot have empty element in multi date format pattern: " + input);, +            }, +            final DateFormatter formatter;, +            if (pattern.startsWith("8")) {, +                // force java 8 date format, +                formatter = DateFormatters.forPattern(pattern.substring(1));, +            } else {, +                formatter = Joda.forPattern(pattern);, +            }, +            formatters.add(formatter);, +++ b/docs/reference/indices/templates.asciidoc, +          "format": "EEE MMM dd HH:mm:ss Z yyyy", +++ b/server/src/main/java/org/elasticsearch/common/joda/Joda.java, +import org.apache.logging.log4j.LogManager;, +import org.elasticsearch.common.logging.DeprecationLogger;, +    private static DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger(Joda.class));, +, +    public static JodaDateFormatter forPattern(String input) {, +                    ISODateTimeFormat.dateOptionalTimeParser().withLocale(Locale.ROOT).withZone(DateTimeZone.UTC),, +                    ISODateTimeFormat.dateTime().withLocale(Locale.ROOT).withZone(DateTimeZone.UTC));, +                    StrictISODateTimeFormat.dateOptionalTimeParser().withLocale(Locale.ROOT).withZone(DateTimeZone.UTC),, +                    StrictISODateTimeFormat.dateTime().withLocale(Locale.ROOT).withZone(DateTimeZone.UTC));, +                maybeLogJodaDeprecation(input);, +        formatter = formatter.withLocale(Locale.ROOT).withZone(DateTimeZone.UTC);, +    private static void maybeLogJodaDeprecation(String input) {, +        if (input.contains("CC")) {, +            deprecationLogger.deprecatedAndMaybeLog("joda-century-of-era-format",, +                "Use of 'C' (century-of-era) is deprecated and will not be supported in the next major version of Elasticsearch.");, +        }, +        if (input.contains("YY")) {, +            deprecationLogger.deprecatedAndMaybeLog("joda-year-of-era-format", "Use of 'Y' (year-of-era) will change to 'y' in the" +, +                " next major version of Elasticsearch. Prefix your date format with '8' to use the new specifier.");, +        }, +        if (input.contains("xx")) {, +            deprecationLogger.deprecatedAndMaybeLog("joda-week-based-year-format","Use of 'x' (week-based-year) will change" +, +                " to 'Y' in the next major version of Elasticsearch. Prefix your date format with '8' to use the new specifier.");, +        }, +    }]