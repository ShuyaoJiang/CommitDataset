[+++ b/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataCache.java, +            //noinspection unchecked, +            Key key = notification.getKey();, +            if (key == null || key.listener == null) {, +                return; // we can't do anything here..., +            AtomicFieldData value = notification.getValue();, +            long sizeInBytes = key.sizeInBytes;, +            if (sizeInBytes == -1 && value != null) {, +                sizeInBytes = value.getMemorySizeInBytes();, +            key.listener.onUnload(fieldNames, fieldDataType, notification.wasEvicted(), sizeInBytes, value);, +++ b/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataCache.java, +            //noinspection unchecked, +            Key key = notification.getKey();, +            if (key == null || key.listener == null) {, +                return; // we can't do anything here..., +            AtomicFieldData value = notification.getValue();, +            long sizeInBytes = key.sizeInBytes;, +            if (sizeInBytes == -1 && value != null) {, +                sizeInBytes = value.getMemorySizeInBytes();, +            key.listener.onUnload(fieldNames, fieldDataType, notification.wasEvicted(), sizeInBytes, value);, +++ b/src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCache.java, +        Key key = notification.getKey();, +        if (key == null || key.listener == null) {, +            return; // nothing to do here really..., +        IndexFieldCache indexCache = key.indexCache;, +        long sizeInBytes = key.sizeInBytes;, +        AtomicFieldData value = notification.getValue();, +        if (sizeInBytes == -1 && value != null) {, +            sizeInBytes = value.getMemorySizeInBytes();, +        key.listener.onUnload(indexCache.fieldNames, indexCache.fieldDataType, notification.wasEvicted(), sizeInBytes, value);]