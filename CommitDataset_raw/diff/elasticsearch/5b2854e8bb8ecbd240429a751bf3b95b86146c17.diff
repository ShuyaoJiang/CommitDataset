[+++ b/src/main/java/org/elasticsearch/common/joda/TimeZoneRounding.java, +        private long preOffset;, +        private long postOffset;, +, +        public Builder preOffset(long preOffset) {, +            this.preOffset = preOffset;, +            return this;, +        }, +, +        public Builder postOffset(long postOffset) {, +            this.postOffset = postOffset;, +            return this;, +        }, +, +                    timeZoneRounding = new UTCTimeZoneRoundingFloor(field);, +                    timeZoneRounding = new UTCIntervalTimeZoneRounding(interval);, +            if (preOffset != 0 || postOffset != 0) {, +                timeZoneRounding = new PrePostTimeZoneRounding(timeZoneRounding, preOffset, postOffset);, +            }, +, +    static class PrePostTimeZoneRounding extends TimeZoneRounding {, +, +        private final TimeZoneRounding timeZoneRounding;, +, +        private final long preOffset;, +        private final long postOffset;, +, +        PrePostTimeZoneRounding(TimeZoneRounding timeZoneRounding, long preOffset, long postOffset) {, +            this.timeZoneRounding = timeZoneRounding;, +            this.preOffset = preOffset;, +            this.postOffset = postOffset;, +        }, +, +        @Override, +        public long calc(long utcMillis) {, +            return postOffset + timeZoneRounding.calc(utcMillis + preOffset);, +        }, +    }, +++ b/src/main/java/org/elasticsearch/common/joda/TimeZoneRounding.java, +        private long preOffset;, +        private long postOffset;, +, +        public Builder preOffset(long preOffset) {, +            this.preOffset = preOffset;, +            return this;, +        }, +, +        public Builder postOffset(long postOffset) {, +            this.postOffset = postOffset;, +            return this;, +        }, +, +                    timeZoneRounding = new UTCTimeZoneRoundingFloor(field);, +                    timeZoneRounding = new UTCIntervalTimeZoneRounding(interval);, +            if (preOffset != 0 || postOffset != 0) {, +                timeZoneRounding = new PrePostTimeZoneRounding(timeZoneRounding, preOffset, postOffset);, +            }, +, +    static class PrePostTimeZoneRounding extends TimeZoneRounding {, +, +        private final TimeZoneRounding timeZoneRounding;, +, +        private final long preOffset;, +        private final long postOffset;, +, +        PrePostTimeZoneRounding(TimeZoneRounding timeZoneRounding, long preOffset, long postOffset) {, +            this.timeZoneRounding = timeZoneRounding;, +            this.preOffset = preOffset;, +            this.postOffset = postOffset;, +        }, +, +        @Override, +        public long calc(long utcMillis) {, +            return postOffset + timeZoneRounding.calc(utcMillis + preOffset);, +        }, +    }, +++ b/src/main/java/org/elasticsearch/search/facet/datehistogram/DateHistogramFacetProcessor.java, +        long preOffset = 0;, +        long postOffset = 0;, +                } else if ("pre_offset".equals(fieldName) || "preOffset".equals(fieldName)) {, +                    preOffset = parseOffset(parser.text());, +                } else if ("post_offset".equals(fieldName) || "postOffset".equals(fieldName)) {, +                    postOffset = parseOffset(parser.text());, +        TimeZoneRounding tzRounding = tzRoundingBuilder, +                .preZone(preZone).postZone(postZone), +                .preOffset(preOffset).postOffset(postOffset), +                .factor(factor), +                .build();, +    private long parseOffset(String offset) throws IOException {, +        if (offset.charAt(0) == '-') {, +            return -TimeValue.parseTimeValue(offset.substring(1), null).millis();, +        }, +        return TimeValue.parseTimeValue(offset, null).millis();, +    }, +, +++ b/src/main/java/org/elasticsearch/common/joda/TimeZoneRounding.java, +        private long preOffset;, +        private long postOffset;, +, +        public Builder preOffset(long preOffset) {]