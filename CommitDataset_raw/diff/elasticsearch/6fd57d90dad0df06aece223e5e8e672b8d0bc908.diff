[+++ b/x-pack/docs/en/security/auditing/event-types.asciidoc, +`request.method`  ::    The HTTP method of the REST request associated with this, +                        event. It is one of GET, POST, PUT, DELETE, OPTIONS,, +                        HEAD, PATCH, TRACE and CONNECT., +++ b/x-pack/docs/en/security/auditing/event-types.asciidoc, +`request.method`  ::    The HTTP method of the REST request associated with this, +                        event. It is one of GET, POST, PUT, DELETE, OPTIONS,, +                        HEAD, PATCH, TRACE and CONNECT., +++ b/x-pack/docs/en/security/auditing/output-logfile.asciidoc, +The log entries in the `<clustername>_audit.log` file have the following format:, +++ b/x-pack/docs/en/security/auditing/event-types.asciidoc, +`request.method`  ::    The HTTP method of the REST request associated with this, +                        event. It is one of GET, POST, PUT, DELETE, OPTIONS,, +                        HEAD, PATCH, TRACE and CONNECT., +++ b/x-pack/docs/en/security/auditing/output-logfile.asciidoc, +The log entries in the `<clustername>_audit.log` file have the following format:, +++ b/x-pack/plugin/core/src/main/config/log4j2.properties, +                %varsNotEmpty{, "request.method":"%enc{%map{request.method}}{JSON}"}\, +# "request.method" the method of the HTTP request, i.e. one of GET, POST, PUT, DELETE, OPTIONS, HEAD, PATCH, TRACE, CONNECT, +++ b/x-pack/docs/en/security/auditing/event-types.asciidoc, +`request.method`  ::    The HTTP method of the REST request associated with this, +                        event. It is one of GET, POST, PUT, DELETE, OPTIONS,, +                        HEAD, PATCH, TRACE and CONNECT., +++ b/x-pack/docs/en/security/auditing/output-logfile.asciidoc, +The log entries in the `<clustername>_audit.log` file have the following format:, +++ b/x-pack/plugin/core/src/main/config/log4j2.properties, +                %varsNotEmpty{, "request.method":"%enc{%map{request.method}}{JSON}"}\, +# "request.method" the method of the HTTP request, i.e. one of GET, POST, PUT, DELETE, OPTIONS, HEAD, PATCH, TRACE, CONNECT, +++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java, +    public static final String REQUEST_METHOD_FIELD_NAME = "request.method";, +                    .withRestUriAndMethod(request), +                    .withRestUriAndMethod(request), +                    .withRestUriAndMethod(request), +                    .withRestUriAndMethod(request), +                    .withRestUriAndMethod(request), +                    .withRestUriAndMethod(request), +                    .withRestUriAndMethod(request), +        LogEntryBuilder withRestUriAndMethod(RestRequest request) {, +            logEntry.with(REQUEST_METHOD_FIELD_NAME, request.method().toString());, +++ b/x-pack/docs/en/security/auditing/event-types.asciidoc, +`request.method`  ::    The HTTP method of the REST request associated with this, +                        event. It is one of GET, POST, PUT, DELETE, OPTIONS,, +                        HEAD, PATCH, TRACE and CONNECT., +++ b/x-pack/docs/en/security/auditing/output-logfile.asciidoc, +The log entries in the `<clustername>_audit.log` file have the following format:, +++ b/x-pack/plugin/core/src/main/config/log4j2.properties, +                %varsNotEmpty{, "request.method":"%enc{%map{request.method}}{JSON}"}\, +# "request.method" the method of the HTTP request, i.e. one of GET, POST, PUT, DELETE, OPTIONS, HEAD, PATCH, TRACE, CONNECT, +++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java, +    public static final String REQUEST_METHOD_FIELD_NAME = "request.method";, +                    .withRestUriAndMethod(request), +                    .withRestUriAndMethod(request), +                    .withRestUriAndMethod(request), +                    .withRestUriAndMethod(request), +                    .withRestUriAndMethod(request), +                    .withRestUriAndMethod(request), +                    .withRestUriAndMethod(request), +        LogEntryBuilder withRestUriAndMethod(RestRequest request) {, +            logEntry.with(REQUEST_METHOD_FIELD_NAME, request.method().toString());, +++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrailTests.java, +                .put(LoggingAuditTrail.REQUEST_METHOD_FIELD_NAME, request.method().toString()), +                     .put(LoggingAuditTrail.REQUEST_METHOD_FIELD_NAME, request.method().toString()), +                     .put(LoggingAuditTrail.REQUEST_METHOD_FIELD_NAME, request.method().toString()), +                     .put(LoggingAuditTrail.REQUEST_METHOD_FIELD_NAME, request.method().toString()), +                .put(LoggingAuditTrail.REQUEST_METHOD_FIELD_NAME, request.method().toString()), +                     .put(LoggingAuditTrail.REQUEST_METHOD_FIELD_NAME, request.method().toString()), +        builder.withMethod(randomFrom(RestRequest.Method.values()));]