[+++ b/src/main/java/org/elasticsearch/node/internal/InternalNode.java, +        // The only place we can actually fake the version a node is running on:, +        Version version = pSettings.getAsVersion("tests.mock.version", Version.CURRENT);, +++ b/src/main/java/org/elasticsearch/node/internal/InternalNode.java, +        // The only place we can actually fake the version a node is running on:, +        Version version = pSettings.getAsVersion("tests.mock.version", Version.CURRENT);, +++ b/src/test/java/org/elasticsearch/test/TestCluster.java, +import org.elasticsearch.Version;, +    private NodeAndClient buildNode(Settings settings, Version version) {, +        return buildNode(ord, random.nextLong(), settings, version);, +        return buildNode(ord, random.nextLong(), null, Version.CURRENT);, +    private NodeAndClient buildNode(int nodeId, long seed, Settings settings, Version version) {, +                .put("tests.mock.version", version), +                nodeAndClient = buildNode(i, sharedNodesSeeds[i], null, Version.CURRENT);, +        return startNode(ImmutableSettings.EMPTY, Version.CURRENT);, +    }, +, +    /**, +     * Starts a node with default settings ad the specified version and returns it's name., +     */, +    public String startNode(Version version) {, +        return startNode(ImmutableSettings.EMPTY, version);, +        return startNode(settings.build(), Version.CURRENT);, +        return startNode(settings, Version.CURRENT);, +    }, +, +    public String startNode(Settings settings, Version version) {, +        NodeAndClient buildNode = buildNode(settings, version);]