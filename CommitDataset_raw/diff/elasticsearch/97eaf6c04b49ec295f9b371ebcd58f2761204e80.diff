[+++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +    private final ShardSearchStats searchStats = new ShardSearchStats();, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +    private final ShardSearchStats searchStats = new ShardSearchStats();, +++ b/core/src/main/java/org/elasticsearch/index/shard/InternalIndexingStats.java, +        if (operation.origin() != Engine.Operation.Origin.RECOVERY) {, +        }, +        if (index.origin() != Engine.Operation.Origin.RECOVERY) {, +    }, +        if (index.origin() != Engine.Operation.Origin.RECOVERY) {, +    }, +        if (delete.origin() != Engine.Operation.Origin.RECOVERY) {, +        }, +, +        if (delete.origin() != Engine.Operation.Origin.RECOVERY) {, +    }, +        if (delete.origin() != Engine.Operation.Origin.RECOVERY) {, +    }, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +    private final ShardSearchStats searchStats = new ShardSearchStats();, +++ b/core/src/main/java/org/elasticsearch/index/shard/InternalIndexingStats.java, +        if (operation.origin() != Engine.Operation.Origin.RECOVERY) {, +        }, +        if (index.origin() != Engine.Operation.Origin.RECOVERY) {, +    }, +        if (index.origin() != Engine.Operation.Origin.RECOVERY) {, +    }, +        if (delete.origin() != Engine.Operation.Origin.RECOVERY) {, +        }, +, +        if (delete.origin() != Engine.Operation.Origin.RECOVERY) {, +    }, +        if (delete.origin() != Engine.Operation.Origin.RECOVERY) {, +    }, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +                ifd.loadGlobal(searcher.getDirectoryReader());, +            IndexingStats indexingStats = newShard.indexingStats();, +            // ensure we are not influencing the indexing stats, +            assertEquals(0, indexingStats.getTotal().getDeleteCount());, +            assertEquals(0, indexingStats.getTotal().getDeleteCurrent());, +            assertEquals(0, indexingStats.getTotal().getIndexCount());, +            assertEquals(0, indexingStats.getTotal().getIndexCurrent());, +            assertEquals(0, indexingStats.getTotal().getIndexFailedCount());]