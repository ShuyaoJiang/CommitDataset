[+++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/EvaluationMetric.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/EvaluationMetric.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalPlugin.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.xcontent.NamedXContentRegistry;, +, +    @Override, +    public List<NamedXContentRegistry.Entry> getNamedXContent() {, +        List<NamedXContentRegistry.Entry> namedXContent = new ArrayList<>();, +        namedXContent.add(, +                new NamedXContentRegistry.Entry(EvaluationMetric.class, new ParseField(PrecisionAtK.NAME), PrecisionAtK::fromXContent));, +        namedXContent.add(new NamedXContentRegistry.Entry(EvaluationMetric.class, new ParseField(MeanReciprocalRank.NAME),, +                MeanReciprocalRank::fromXContent));, +        namedXContent.add(new NamedXContentRegistry.Entry(EvaluationMetric.class, new ParseField(DiscountedCumulativeGain.NAME),, +                DiscountedCumulativeGain::fromXContent));, +        return namedXContent;, +    }, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/EvaluationMetric.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalPlugin.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.xcontent.NamedXContentRegistry;, +, +    @Override, +    public List<NamedXContentRegistry.Entry> getNamedXContent() {, +        List<NamedXContentRegistry.Entry> namedXContent = new ArrayList<>();, +        namedXContent.add(, +                new NamedXContentRegistry.Entry(EvaluationMetric.class, new ParseField(PrecisionAtK.NAME), PrecisionAtK::fromXContent));, +        namedXContent.add(new NamedXContentRegistry.Entry(EvaluationMetric.class, new ParseField(MeanReciprocalRank.NAME),, +                MeanReciprocalRank::fromXContent));, +        namedXContent.add(new NamedXContentRegistry.Entry(EvaluationMetric.class, new ParseField(DiscountedCumulativeGain.NAME),, +                DiscountedCumulativeGain::fromXContent));, +        return namedXContent;, +    }, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalSpec.java, +import org.elasticsearch.common.xcontent.XContentParserUtils;, +        PARSER.declareObjectArray(ConstructingObjectParser.constructorArg(), (p, c) -> RatedRequest.fromXContent(p), REQUESTS_FIELD);, +        PARSER.declareObject(ConstructingObjectParser.constructorArg(), (p, c) -> parseMetric(p), METRIC_FIELD);, +        PARSER.declareObjectArray(ConstructingObjectParser.optionalConstructorArg(), (p, c) -> ScriptWithId.fromXContent(p),, +                TEMPLATES_FIELD);, +    private static EvaluationMetric parseMetric(XContentParser parser) throws IOException {, +        XContentParserUtils.ensureExpectedToken(XContentParser.Token.START_OBJECT, parser.currentToken(), parser::getTokenLocation);, +        XContentParserUtils.ensureExpectedToken(XContentParser.Token.FIELD_NAME, parser.nextToken(), parser::getTokenLocation);, +        EvaluationMetric metric = parser.namedObject(EvaluationMetric.class, parser.currentName(), null);, +        XContentParserUtils.ensureExpectedToken(XContentParser.Token.END_OBJECT, parser.nextToken(), parser::getTokenLocation);, +        return metric;, +    }, +, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/EvaluationMetric.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalPlugin.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.xcontent.NamedXContentRegistry;, +, +    @Override, +    public List<NamedXContentRegistry.Entry> getNamedXContent() {, +        List<NamedXContentRegistry.Entry> namedXContent = new ArrayList<>();, +        namedXContent.add(, +                new NamedXContentRegistry.Entry(EvaluationMetric.class, new ParseField(PrecisionAtK.NAME), PrecisionAtK::fromXContent));, +        namedXContent.add(new NamedXContentRegistry.Entry(EvaluationMetric.class, new ParseField(MeanReciprocalRank.NAME),, +                MeanReciprocalRank::fromXContent));, +        namedXContent.add(new NamedXContentRegistry.Entry(EvaluationMetric.class, new ParseField(DiscountedCumulativeGain.NAME),, +                DiscountedCumulativeGain::fromXContent));, +        return namedXContent;, +    }, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalSpec.java, +import org.elasticsearch.common.xcontent.XContentParserUtils;, +        PARSER.declareObjectArray(ConstructingObjectParser.constructorArg(), (p, c) -> RatedRequest.fromXContent(p), REQUESTS_FIELD);, +        PARSER.declareObject(ConstructingObjectParser.constructorArg(), (p, c) -> parseMetric(p), METRIC_FIELD);, +        PARSER.declareObjectArray(ConstructingObjectParser.optionalConstructorArg(), (p, c) -> ScriptWithId.fromXContent(p),, +                TEMPLATES_FIELD);, +    private static EvaluationMetric parseMetric(XContentParser parser) throws IOException {, +        XContentParserUtils.ensureExpectedToken(XContentParser.Token.START_OBJECT, parser.currentToken(), parser::getTokenLocation);, +        XContentParserUtils.ensureExpectedToken(XContentParser.Token.FIELD_NAME, parser.nextToken(), parser::getTokenLocation);, +        EvaluationMetric metric = parser.namedObject(EvaluationMetric.class, parser.currentName(), null);, +        XContentParserUtils.ensureExpectedToken(XContentParser.Token.END_OBJECT, parser.nextToken(), parser::getTokenLocation);, +        return metric;, +    }, +, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/MeanReciprocalRankTests.java, +    static MeanReciprocalRank createTestItem() {, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/EvaluationMetric.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalPlugin.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.xcontent.NamedXContentRegistry;, +, +    @Override, +    public List<NamedXContentRegistry.Entry> getNamedXContent() {, +        List<NamedXContentRegistry.Entry> namedXContent = new ArrayList<>();, +        namedXContent.add(, +                new NamedXContentRegistry.Entry(EvaluationMetric.class, new ParseField(PrecisionAtK.NAME), PrecisionAtK::fromXContent));, +        namedXContent.add(new NamedXContentRegistry.Entry(EvaluationMetric.class, new ParseField(MeanReciprocalRank.NAME),, +                MeanReciprocalRank::fromXContent));, +        namedXContent.add(new NamedXContentRegistry.Entry(EvaluationMetric.class, new ParseField(DiscountedCumulativeGain.NAME),, +                DiscountedCumulativeGain::fromXContent));, +        return namedXContent;, +    }, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalSpec.java, +import org.elasticsearch.common.xcontent.XContentParserUtils;, +        PARSER.declareObjectArray(ConstructingObjectParser.constructorArg(), (p, c) -> RatedRequest.fromXContent(p), REQUESTS_FIELD);, +        PARSER.declareObject(ConstructingObjectParser.constructorArg(), (p, c) -> parseMetric(p), METRIC_FIELD);, +        PARSER.declareObjectArray(ConstructingObjectParser.optionalConstructorArg(), (p, c) -> ScriptWithId.fromXContent(p),]