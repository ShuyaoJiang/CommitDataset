[+++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpChannel.java, +import java.util.List;, +import java.util.Map;, +        // Add all custom headers, +        Map<String, List<String>> customHeaders = response.getHeaders();, +        if (customHeaders != null) {, +            for (Map.Entry<String, List<String>> headerEntry : customHeaders.entrySet()) {, +                for (String headerValue : headerEntry.getValue()) {, +                    resp.addHeader(headerEntry.getKey(), headerValue);, +                }, +            }, +        }, +, +++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpChannel.java, +import java.util.List;, +import java.util.Map;, +        // Add all custom headers, +        Map<String, List<String>> customHeaders = response.getHeaders();, +        if (customHeaders != null) {, +            for (Map.Entry<String, List<String>> headerEntry : customHeaders.entrySet()) {, +                for (String headerValue : headerEntry.getValue()) {, +                    resp.addHeader(headerEntry.getKey(), headerValue);, +                }, +            }, +        }, +, +++ b/src/main/java/org/elasticsearch/rest/AbstractRestResponse.java, +import java.util.ArrayList;, +import java.util.List;, +import java.util.Map;, +import java.util.HashMap;, +, +    Map<String, List<String>> customHeaders;, +, +, +    @Override, +    public void addHeader(String name, String value) {, +        if (customHeaders == null) {, +            customHeaders = new HashMap<String, List<String>>(2);, +        }, +        List<String> header = customHeaders.get(name);, +        if (header == null) {, +            header = new ArrayList<String>();, +            customHeaders.put(name, header);, +        }, +        header.add(value);, +    }, +, +    @Override, +    public Map<String, List<String>> getHeaders() {, +        return customHeaders;, +    }, +++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpChannel.java, +import java.util.List;, +import java.util.Map;, +        // Add all custom headers, +        Map<String, List<String>> customHeaders = response.getHeaders();, +        if (customHeaders != null) {, +            for (Map.Entry<String, List<String>> headerEntry : customHeaders.entrySet()) {, +                for (String headerValue : headerEntry.getValue()) {, +                    resp.addHeader(headerEntry.getKey(), headerValue);, +                }, +            }, +        }, +, +++ b/src/main/java/org/elasticsearch/rest/AbstractRestResponse.java, +import java.util.ArrayList;, +import java.util.List;, +import java.util.Map;, +import java.util.HashMap;, +, +    Map<String, List<String>> customHeaders;, +, +, +    @Override, +    public void addHeader(String name, String value) {, +        if (customHeaders == null) {, +            customHeaders = new HashMap<String, List<String>>(2);, +        }, +        List<String> header = customHeaders.get(name);, +        if (header == null) {, +            header = new ArrayList<String>();, +            customHeaders.put(name, header);, +        }, +        header.add(value);, +    }, +, +    @Override, +    public Map<String, List<String>> getHeaders() {, +        return customHeaders;, +    }, +++ b/src/main/java/org/elasticsearch/rest/RestResponse.java, +import java.util.List;, +import java.util.Map;, +, +    void addHeader(String name, String value);, +, +    /**, +     * @return The custom headers or null if none have been set, +     */]