[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/TapLoggerOutputStream.groovy, +import groovy.transform.PackageScope, +import org.gradle.logging.ProgressLoggerFactory, +public class TapLoggerOutputStream extends LoggingOutputStream {, +    private final ProgressLogger progressLogger, +    private boolean isStarted = false, +    private final Logger logger, +    private int testsCompleted = 0, +    private int testsFailed = 0, +    private int testsSkipped = 0, +    private Integer testCount, +    private String countsFormat, +        progressLogger.setDescription("TAP output for `${args.command}`"), +    @Override, +    public void flush() {, +        if (isStarted == false) {, +            progressLogger.started(), +            isStarted = true, +        }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/TapLoggerOutputStream.groovy, +import groovy.transform.PackageScope, +import org.gradle.logging.ProgressLoggerFactory, +public class TapLoggerOutputStream extends LoggingOutputStream {, +    private final ProgressLogger progressLogger, +    private boolean isStarted = false, +    private final Logger logger, +    private int testsCompleted = 0, +    private int testsFailed = 0, +    private int testsSkipped = 0, +    private Integer testCount, +    private String countsFormat, +        progressLogger.setDescription("TAP output for `${args.command}`"), +    @Override, +    public void flush() {, +        if (isStarted == false) {, +            progressLogger.started(), +            isStarted = true, +        }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantLoggerOutputStream.groovy, +import org.gradle.api.logging.Logger, +    private final ProgressLogger progressLogger, +    private boolean isStarted = false, +    private String squashedPrefix, +    private String lastLine = '', +    private boolean inProgressReport = false, +    private String heading = '', +    @Override, +    public void flush() {, +        if (isStarted == false) {, +            progressLogger.started(), +            isStarted = true, +        }]