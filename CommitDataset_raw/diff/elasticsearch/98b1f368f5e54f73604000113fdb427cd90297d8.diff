[+++ b/src/main/java/org/elasticsearch/common/xcontent/support/XContentMapValues.java, +, +        String key = pathElements[index];, +        Object currentValue = part.get(key);, +        int nextIndex = index + 1;, +        while (currentValue == null && nextIndex != pathElements.length) {, +            key += "." + pathElements[nextIndex];, +            currentValue = part.get(key);, +            nextIndex++;, +        }, +, +, +            extractRawValues(values, (Map<String, Object>) currentValue, pathElements, nextIndex);, +            extractRawValues(values, (List) currentValue, pathElements, nextIndex);, +            String key = pathElements[index];, +            Object mapValue = map.get(key);, +            int nextIndex = index + 1;, +            while (mapValue == null && nextIndex != pathElements.length) {, +                key += "." + pathElements[nextIndex];, +                mapValue = map.get(key);, +                nextIndex++;, +            }, +            return extractValue(pathElements, nextIndex, mapValue);, +++ b/src/main/java/org/elasticsearch/common/xcontent/support/XContentMapValues.java, +, +        String key = pathElements[index];, +        Object currentValue = part.get(key);, +        int nextIndex = index + 1;, +        while (currentValue == null && nextIndex != pathElements.length) {, +            key += "." + pathElements[nextIndex];, +            currentValue = part.get(key);, +            nextIndex++;, +        }, +, +, +            extractRawValues(values, (Map<String, Object>) currentValue, pathElements, nextIndex);, +            extractRawValues(values, (List) currentValue, pathElements, nextIndex);, +            String key = pathElements[index];, +            Object mapValue = map.get(key);, +            int nextIndex = index + 1;, +            while (mapValue == null && nextIndex != pathElements.length) {, +                key += "." + pathElements[nextIndex];, +                mapValue = map.get(key);, +                nextIndex++;, +            }, +            return extractValue(pathElements, nextIndex, mapValue);, +++ b/src/test/java/org/elasticsearch/test/unit/common/xcontent/support/XContentMapValuesTests.java, +, +        // fields with . in them, +        builder = XContentFactory.jsonBuilder().startObject(), +                .field("xxx.yyy", "value"), +                .endObject();, +        map = XContentFactory.xContent(XContentType.JSON).createParser(builder.string()).mapAndClose();, +        assertThat(XContentMapValues.extractValue("xxx.yyy", map).toString(), equalTo("value"));, +, +        builder = XContentFactory.jsonBuilder().startObject(), +                .startObject("path1.xxx").startObject("path2.yyy").field("test", "value").endObject().endObject(), +                .endObject();, +, +        map = XContentFactory.xContent(XContentType.JSON).createParser(builder.string()).mapAndClose();, +        assertThat(XContentMapValues.extractValue("path1.xxx.path2.yyy.test", map).toString(), equalTo("value"));, +    }, +, +    @SuppressWarnings({"unchecked"}), +    @Test, +    public void testExtractRawValue() throws Exception {, +        XContentBuilder builder = XContentFactory.jsonBuilder().startObject(), +                .field("test", "value"), +                .endObject();, +, +        Map<String, Object> map = XContentFactory.xContent(XContentType.JSON).createParser(builder.string()).mapAndClose();, +        assertThat(XContentMapValues.extractRawValues("test", map).get(0).toString(), equalTo("value"));, +, +        builder = XContentFactory.jsonBuilder().startObject(), +                .field("test.me", "value"), +                .endObject();, +, +        map = XContentFactory.xContent(XContentType.JSON).createParser(builder.string()).mapAndClose();, +        assertThat(XContentMapValues.extractRawValues("test.me", map).get(0).toString(), equalTo("value"));, +, +        builder = XContentFactory.jsonBuilder().startObject(), +                .startObject("path1").startObject("path2").field("test", "value").endObject().endObject(), +                .endObject();, +, +        map = XContentFactory.xContent(XContentType.JSON).createParser(builder.string()).mapAndClose();, +        assertThat(XContentMapValues.extractRawValues("path1.path2.test", map).get(0).toString(), equalTo("value"));, +, +        builder = XContentFactory.jsonBuilder().startObject(), +                .startObject("path1.xxx").startObject("path2.yyy").field("test", "value").endObject().endObject(), +                .endObject();, +, +        map = XContentFactory.xContent(XContentType.JSON).createParser(builder.string()).mapAndClose();, +        assertThat(XContentMapValues.extractRawValues("path1.xxx.path2.yyy.test", map).get(0).toString(), equalTo("value"));]