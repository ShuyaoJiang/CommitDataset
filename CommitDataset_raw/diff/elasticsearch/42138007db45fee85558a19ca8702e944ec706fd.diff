[+++ b/.gitignore, +.gradle/, +work/, +/data/, +logs/, +.DS_Store, +build/, +generated-resources/, +**/.local*, +docs/html/, +docs/build.log, +/tmp/, +backwards/, +html_docs, +.vagrant/, +## eclipse ignores (use 'mvn eclipse:eclipse' to build eclipse projects), +## All files (.project, .classpath, .settings/*) should be generated through Maven which, +## will correctly set the classpath based on the declared dependencies and write settings, +## files to ensure common coding style across Eclipse and IDEA., +## netbeans ignores, +# old patterns specific to maven, +*-execution-hints.log, +target/, +++ b/.gitignore, +.gradle/, +work/, +/data/, +logs/, +.DS_Store, +build/, +generated-resources/, +**/.local*, +docs/html/, +docs/build.log, +/tmp/, +backwards/, +html_docs, +.vagrant/, +## eclipse ignores (use 'mvn eclipse:eclipse' to build eclipse projects), +## All files (.project, .classpath, .settings/*) should be generated through Maven which, +## will correctly set the classpath based on the declared dependencies and write settings, +## files to ensure common coding style across Eclipse and IDEA., +## netbeans ignores, +# old patterns specific to maven, +*-execution-hints.log, +target/, +++ b/build.gradle, +  // For reasons we don't fully understand yet, external dependencies are not picked up by Ant's optional tasks., +  // But you can easily do it in another way., +  // Only if your buildscript and Ant's optional task need the same library would you have to define it twice., +  // https://docs.gradle.org/current/userguide/organizing_build_logic.html, +  configurations {, +    forbiddenApis, +  }, +  dependencies {, +    forbiddenApis 'de.thetaphi:forbiddenapis:2.0', +  }, +++ b/.gitignore, +.gradle/, +work/, +/data/, +logs/, +.DS_Store, +build/, +generated-resources/, +**/.local*, +docs/html/, +docs/build.log, +/tmp/, +backwards/, +html_docs, +.vagrant/, +## eclipse ignores (use 'mvn eclipse:eclipse' to build eclipse projects), +## All files (.project, .classpath, .settings/*) should be generated through Maven which, +## will correctly set the classpath based on the declared dependencies and write settings, +## files to ensure common coding style across Eclipse and IDEA., +## netbeans ignores, +# old patterns specific to maven, +*-execution-hints.log, +target/, +++ b/build.gradle, +  // For reasons we don't fully understand yet, external dependencies are not picked up by Ant's optional tasks., +  // But you can easily do it in another way., +  // Only if your buildscript and Ant's optional task need the same library would you have to define it twice., +  // https://docs.gradle.org/current/userguide/organizing_build_logic.html, +  configurations {, +    forbiddenApis, +  }, +  dependencies {, +    forbiddenApis 'de.thetaphi:forbiddenapis:2.0', +  }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            project.tasks.create('jarHell', JarHellTask.class),, +            project.tasks.create('thirdPartyAudit', ThirdPartyAuditTask.class)], +++ b/.gitignore, +.gradle/, +work/, +/data/, +logs/, +.DS_Store]