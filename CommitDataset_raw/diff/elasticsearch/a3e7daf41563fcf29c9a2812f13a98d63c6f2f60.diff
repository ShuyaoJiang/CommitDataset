[+++ b/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +import org.elasticsearch.action.support.AutoCreateIndex;, +    private final AutoCreateIndex autoCreateIndex;, +        this.autoCreateIndex = new AutoCreateIndex(settings);, +        if (autoCreateIndex.needToCheck()) {, +            ClusterState state = clusterService.state();, +                if (autoCreateIndex.shouldAutoCreate(index, state)) {, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +import org.elasticsearch.action.support.AutoCreateIndex;, +    private final AutoCreateIndex autoCreateIndex;, +        this.autoCreateIndex = new AutoCreateIndex(settings);, +        if (autoCreateIndex.needToCheck()) {, +            ClusterState state = clusterService.state();, +                if (autoCreateIndex.shouldAutoCreate(index, state)) {, +++ b/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +import org.elasticsearch.action.support.AutoCreateIndex;, +    private final AutoCreateIndex autoCreateIndex;, +        this.autoCreateIndex = new AutoCreateIndex(settings);, +        if (autoCreateIndex.shouldAutoCreate(request.index(), clusterService.state())) {, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +import org.elasticsearch.action.support.AutoCreateIndex;, +    private final AutoCreateIndex autoCreateIndex;, +        this.autoCreateIndex = new AutoCreateIndex(settings);, +        if (autoCreateIndex.needToCheck()) {, +            ClusterState state = clusterService.state();, +                if (autoCreateIndex.shouldAutoCreate(index, state)) {, +++ b/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +import org.elasticsearch.action.support.AutoCreateIndex;, +    private final AutoCreateIndex autoCreateIndex;, +        this.autoCreateIndex = new AutoCreateIndex(settings);, +        if (autoCreateIndex.shouldAutoCreate(request.index(), clusterService.state())) {, +++ b/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +import org.elasticsearch.action.support.AutoCreateIndex;, +    private final AutoCreateIndex autoCreateIndex;, +        this.autoCreateIndex = new AutoCreateIndex(settings);, +        if (autoCreateIndex.shouldAutoCreate(request.index(), clusterService.state())) {, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +import org.elasticsearch.action.support.AutoCreateIndex;, +    private final AutoCreateIndex autoCreateIndex;, +        this.autoCreateIndex = new AutoCreateIndex(settings);, +        if (autoCreateIndex.needToCheck()) {, +            ClusterState state = clusterService.state();, +                if (autoCreateIndex.shouldAutoCreate(index, state)) {, +++ b/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +import org.elasticsearch.action.support.AutoCreateIndex;, +    private final AutoCreateIndex autoCreateIndex;, +        this.autoCreateIndex = new AutoCreateIndex(settings);, +        if (autoCreateIndex.shouldAutoCreate(request.index(), clusterService.state())) {, +++ b/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +import org.elasticsearch.action.support.AutoCreateIndex;, +    private final AutoCreateIndex autoCreateIndex;, +        this.autoCreateIndex = new AutoCreateIndex(settings);, +        if (autoCreateIndex.shouldAutoCreate(request.index(), clusterService.state())) {, +++ b/src/main/java/org/elasticsearch/action/support/AutoCreateIndex.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.action.support;, +, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.common.Booleans;, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.regex.Regex;, +import org.elasticsearch.common.settings.Settings;, +, +/**, + */, +public class AutoCreateIndex {, +, +    private final boolean needToCheck;, +    private final boolean globallyDisabled;, +    private final String[] matches;, +    private final String[] matches2;, +, +    public AutoCreateIndex(Settings settings) {, +        String value = settings.get("action.auto_create_index");, +        if (value == null || Booleans.isExplicitTrue(value)) {, +            needToCheck = true;, +            globallyDisabled = false;, +            matches = null;, +            matches2 = null;, +        } else if (Booleans.isExplicitFalse(value)) {, +            needToCheck = false;, +            globallyDisabled = true;]