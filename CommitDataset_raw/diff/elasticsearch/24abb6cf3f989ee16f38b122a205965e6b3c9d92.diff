[+++ b/rest-api-spec/api/cluster.state.json, +          "options" : ["_all", "blocks", "metadata", "nodes", "routing_table"],, +        "index_templates": {, +          "type": "list",, +          "description": "A comma separated list to return specific index templates when returning metadata", +        },, +++ b/rest-api-spec/api/cluster.state.json, +          "options" : ["_all", "blocks", "metadata", "nodes", "routing_table"],, +        "index_templates": {, +          "type": "list",, +          "description": "A comma separated list to return specific index templates when returning metadata", +        },, +++ b/rest-api-spec/test/cluster.state/20_filtering.yaml, +setup:, +  - do:, +      index:, +        index: testidx, +        type:  testtype, +        id:    testing_document, +        body:, +            "text" : "The quick brown fox is brown.", +  - do:, +      indices.refresh: {}, +, +---, +"Filtering the cluster state by blocks should return the blocks field even if the response is empty":, +  - do:, +      cluster.state:, +        metric: [ blocks ]  , +  , +  - is_true: blocks, +  - is_false: nodes, +  - is_false: metadata, +  - is_false: routing_table, +  - is_false: routing_nodes, +  - is_false: allocations, +  - length:   { blocks: 0 }, +, +---, +"Filtering the cluster state by blocks should return the blocks":, +# read only index, +# TODO: can this cause issues leaving it read only when deleting it in teardown, +  - do:, +      indices.put_settings:, +        index: testidx, +        body:, +          index.blocks.read_only: true, +  - do:, +      cluster.state:, +        metric: [ blocks ]  , +, +  - is_true: blocks, +  - is_false: nodes, +  - is_false: metadata, +  - is_false: routing_table, +  - is_false: routing_nodes, +  - is_false: allocations, +  - length:   { blocks: 1 }, +, +---, +"Filtering the cluster state by nodes only should work":, +  - do:, +      cluster.state:, +        metric: [ nodes ] , +  , +  - is_false: blocks, +  - is_true: nodes, +  - is_false: metadata, +  - is_false: routing_table, +  - is_false: routing_nodes, +  - is_false: allocations, +, +---, +"Filtering the cluster state by metadata only should work":, +  - do:, +      cluster.state:, +        metric: [ metadata ] , +  , +  - is_false: blocks, +  - is_false: nodes, +  - is_true: metadata, +  - is_false: routing_table, +  - is_false: routing_nodes, +  - is_false: allocations, +, +, +---, +"Filtering the cluster state by routing table only should work":, +  - do:, +      cluster.state:, +        metric: [ routing_table ] , +  , +  - is_false: blocks, +  - is_false: nodes, +  - is_false: metadata, +  - is_true: routing_table, +  - is_true: routing_nodes, +  - is_true: allocations, +, +]