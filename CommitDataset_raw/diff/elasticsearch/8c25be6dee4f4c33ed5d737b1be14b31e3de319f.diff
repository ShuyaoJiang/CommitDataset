[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/PrimaryNotStartedActionException.java, +        return "[" + shardId.index().name() + "][" + shardId.id() + "] " + message;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/PrimaryNotStartedActionException.java, +        return "[" + shardId.index().name() + "][" + shardId.id() + "] " + message;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/replication/ShardReplicationPingRequest.java, +        return "replication_ping {[" + index + "][" + shardId + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/PrimaryNotStartedActionException.java, +        return "[" + shardId.index().name() + "][" + shardId.id() + "] " + message;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/replication/ShardReplicationPingRequest.java, +        return "replication_ping {[" + index + "][" + shardId + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/gateway/snapshot/ShardGatewaySnapshotRequest.java, +        return "gateway_snapshot {[" + index + "][" + shardId + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/PrimaryNotStartedActionException.java, +        return "[" + shardId.index().name() + "][" + shardId.id() + "] " + message;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/replication/ShardReplicationPingRequest.java, +        return "replication_ping {[" + index + "][" + shardId + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/gateway/snapshot/ShardGatewaySnapshotRequest.java, +        return "gateway_snapshot {[" + index + "][" + shardId + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +        return "delete {[" + index + "][" + type + "][" + id + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/PrimaryNotStartedActionException.java, +        return "[" + shardId.index().name() + "][" + shardId.id() + "] " + message;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/replication/ShardReplicationPingRequest.java, +        return "replication_ping {[" + index + "][" + shardId + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/gateway/snapshot/ShardGatewaySnapshotRequest.java, +        return "gateway_snapshot {[" + index + "][" + shardId + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +        return "delete {[" + index + "][" + type + "][" + id + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/ShardDeleteByQueryRequest.java, +        String sSource = "_na_";, +        try {, +            sSource = Unicode.fromBytes(querySource);, +        } catch (Exception e) {, +            // ignore, +        }, +        return "delete_by_query {[" + index + "]" + Arrays.toString(types) + ", query [" + sSource + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/PrimaryNotStartedActionException.java, +        return "[" + shardId.index().name() + "][" + shardId.id() + "] " + message;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/replication/ShardReplicationPingRequest.java, +        return "replication_ping {[" + index + "][" + shardId + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/gateway/snapshot/ShardGatewaySnapshotRequest.java, +        return "gateway_snapshot {[" + index + "][" + shardId + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +        return "delete {[" + index + "][" + type + "][" + id + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/ShardDeleteByQueryRequest.java, +        String sSource = "_na_";, +        try {, +            sSource = Unicode.fromBytes(querySource);, +        } catch (Exception e) {, +            // ignore, +        }, +        return "delete_by_query {[" + index + "]" + Arrays.toString(types) + ", query [" + sSource + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +        String sSource = "_na_";, +        try {, +            sSource = Unicode.fromBytes(source, sourceOffset, sourceLength);, +        } catch (Exception e) {, +            // ignore, +        }, +        return "index {[" + index + "][" + type + "][" + id + "], source[" + sSource + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/PrimaryNotStartedActionException.java, +        return "[" + shardId.index().name() + "][" + shardId.id() + "] " + message;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/replication/ShardReplicationPingRequest.java, +        return "replication_ping {[" + index + "][" + shardId + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/gateway/snapshot/ShardGatewaySnapshotRequest.java, +        return "gateway_snapshot {[" + index + "][" + shardId + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +        return "delete {[" + index + "][" + type + "][" + id + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/ShardDeleteByQueryRequest.java, +        String sSource = "_na_";, +        try {, +            sSource = Unicode.fromBytes(querySource);, +        } catch (Exception e) {, +            // ignore, +        }, +        return "delete_by_query {[" + index + "]" + Arrays.toString(types) + ", query [" + sSource + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +        String sSource = "_na_";, +        try {, +            sSource = Unicode.fromBytes(source, sourceOffset, sourceLength);, +        } catch (Exception e) {, +            // ignore, +        }, +        return "index {[" + index + "][" + type + "][" + id + "], source[" + sSource + "]}";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java, +                final PrimaryNotStartedActionException failure = new PrimaryNotStartedActionException(shards.shardId(), request.toString());, +                        final PrimaryNotStartedActionException failure = new PrimaryNotStartedActionException(shardId, "Timeout waiting for [" + timeValue + "], request: " + request.toString());]