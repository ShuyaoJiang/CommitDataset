[+++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static SegmentInfoPerCommit getSegmentInfo(SegmentReader reader) {, +            return (SegmentInfoPerCommit) segmentReaderSegmentInfoField.get(reader);, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static SegmentInfoPerCommit getSegmentInfo(SegmentReader reader) {, +            return (SegmentInfoPerCommit) segmentReaderSegmentInfoField.get(reader);, +++ b/src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java, +                for (AtomicReaderContext reader : searcher.reader().leaves()) {, +                    assert reader.reader() instanceof SegmentReader;, +                    SegmentInfoPerCommit info = Lucene.getSegmentInfo((SegmentReader) reader.reader());, +                    assert !segments.containsKey(info.info.name);, +                    Segment segment = new Segment(info.info.name);, +                    segment.docCount = reader.reader().numDocs();, +                    segment.delDocCount = reader.reader().numDeletedDocs();, +                        segment.sizeInBytes = info.sizeInBytes();, +                        logger.trace("failed to get size for [{}]", e, info.info.name);, +                    segments.put(info.info.name, segment);, +                for (SegmentInfoPerCommit info : infos) {, +                    Segment segment = segments.get(info.info.name);, +                        segment = new Segment(info.info.name);, +                        segment.docCount = info.info.getDocCount();, +                        segment.delDocCount = info.getDelCount();, +                            segment.sizeInBytes = info.sizeInBytes();, +                            logger.trace("failed to get size for [{}]", e, info.info.name);, +                        segments.put(info.info.name, segment);]