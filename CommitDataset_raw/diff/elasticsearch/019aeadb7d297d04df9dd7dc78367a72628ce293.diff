[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +            .withWaitForActiveShards(reindexRequest.getWaitForActiveShards()), +            .withRequestsPerSecond(reindexRequest.getRequestsPerSecond());, +            .withRequestsPerSecond(updateByQueryRequest.getRequestsPerSecond()), +            .withRequestsPerSecond(deleteByQueryRequest.getRequestsPerSecond()), +        Params withRequestsPerSecond(float requestsPerSecond) {, +            // the default in AbstractBulkByScrollRequest is Float.POSITIVE_INFINITY,, +            // but we don't want to add that to the URL parameters, instead we leave it out, +            if (Float.isFinite(requestsPerSecond)) {, +                return putParam("requests_per_second", Float.toString(requestsPerSecond));, +            } else {, +                return putParam("requests_per_second", "-1");, +            }, +        }, +, +                //we prepend "/" to the path part to make this path absolute, otherwise there can be issues with, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +            .withWaitForActiveShards(reindexRequest.getWaitForActiveShards()), +            .withRequestsPerSecond(reindexRequest.getRequestsPerSecond());, +            .withRequestsPerSecond(updateByQueryRequest.getRequestsPerSecond()), +            .withRequestsPerSecond(deleteByQueryRequest.getRequestsPerSecond()), +        Params withRequestsPerSecond(float requestsPerSecond) {, +            // the default in AbstractBulkByScrollRequest is Float.POSITIVE_INFINITY,, +            // but we don't want to add that to the URL parameters, instead we leave it out, +            if (Float.isFinite(requestsPerSecond)) {, +                return putParam("requests_per_second", Float.toString(requestsPerSecond));, +            } else {, +                return putParam("requests_per_second", "-1");, +            }, +        }, +, +                //we prepend "/" to the path part to make this path absolute, otherwise there can be issues with, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +            float requestsPerSecond = (float) randomDoubleBetween(0.0, 10.0, false);, +            expectedParams.put("requests_per_second", Float.toString(requestsPerSecond));, +            reindexRequest.setRequestsPerSecond(requestsPerSecond);, +        } else {, +            expectedParams.put("requests_per_second", "-1");, +        }, +        if (randomBoolean()) {, +            float requestsPerSecond = (float) randomDoubleBetween(0.0, 10.0, false);, +            expectedParams.put("requests_per_second", Float.toString(requestsPerSecond));, +            updateByQueryRequest.setRequestsPerSecond(requestsPerSecond);, +        } else {, +            expectedParams.put("requests_per_second", "-1");, +        }, +        if (randomBoolean()) {, +        if (randomBoolean()) {, +            float requestsPerSecond = (float) randomDoubleBetween(0.0, 10.0, false);, +            expectedParams.put("requests_per_second", Float.toString(requestsPerSecond));, +            deleteByQueryRequest.setRequestsPerSecond(requestsPerSecond);, +        } else {, +            expectedParams.put("requests_per_second", "-1");, +        }]