[+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/CommandBuilder.java, +                    // convert % to enumeration, +                    types.addAll(IndexType.VALID);, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/CommandBuilder.java, +                    // convert % to enumeration, +                    types.addAll(IndexType.VALID);, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plan/logical/command/sys/SysTables.java, +            if ((pattern == null || pattern.pattern().isEmpty()) && CollectionUtils.isEmpty(types)) {, +        if (IndexType.VALID.equals(types)) {, +            if ((clusterPattern == null || clusterPattern.pattern().isEmpty()), +                    && (pattern == null || pattern.pattern().isEmpty())) {, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/CommandBuilder.java, +                    // convert % to enumeration, +                    types.addAll(IndexType.VALID);, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plan/logical/command/sys/SysTables.java, +            if ((pattern == null || pattern.pattern().isEmpty()) && CollectionUtils.isEmpty(types)) {, +        if (IndexType.VALID.equals(types)) {, +            if ((clusterPattern == null || clusterPattern.pattern().isEmpty()), +                    && (pattern == null || pattern.pattern().isEmpty())) {, +++ b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/plan/logical/command/sys/SysTablesTests.java, +    public void testSysTablesEnumerateCatalog() throws Exception {, +        executeCommand("SYS TABLES CATALOG LIKE '%'", r -> {, +            assertEquals(1, r.size());, +            assertEquals(CLUSTER_NAME, r.column(0));, +        });, +    }, +, +    public void testSysTablesEnumerateTypes() throws Exception {, +        executeCommand("SYS TABLES TYPE '%'", r -> {, +            assertEquals(2, r.size());, +            assertEquals("ALIAS", r.column(3));, +            assertTrue(r.advanceRow());, +            assertEquals("BASE TABLE", r.column(3));, +        });, +    }, +, +            assertEquals("ALIAS", r.column(3));, +            assertTrue(r.advanceRow());, +            assertEquals("BASE TABLE", r.column(3));, +            assertEquals(0, r.size());]