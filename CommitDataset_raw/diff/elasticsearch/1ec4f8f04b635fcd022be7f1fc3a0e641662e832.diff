[+++ b/TESTING.asciidoc, +The REST tests support all the options provided by the randomized runner, plus the following:, +* `tests.rest[true|false]`: determines whether the REST tests need to be run (default) or not., +, +Note that the REST tests, like all the integration tests, can be run against an external, +cluster by specifying the `tests.cluster` property, which if present needs to contain a, +comma separated list of nodes to connect to (e.g. localhost:9300). A transport client will, +be created based on that and used for all the before|after test operations, and to extract, +the http addresses of the nodes so that REST requests can be sent to them., +++ b/TESTING.asciidoc, +The REST tests support all the options provided by the randomized runner, plus the following:, +* `tests.rest[true|false]`: determines whether the REST tests need to be run (default) or not., +, +Note that the REST tests, like all the integration tests, can be run against an external, +cluster by specifying the `tests.cluster` property, which if present needs to contain a, +comma separated list of nodes to connect to (e.g. localhost:9300). A transport client will, +be created based on that and used for all the before|after test operations, and to extract, +the http addresses of the nodes so that REST requests can be sent to them., +++ b/dev-tools/build_release.py, +          run_mvn('test -Dtests.cluster=%s -Dtests.class=*.*RestTests' % ("127.0.0.1:9300")), +++ b/TESTING.asciidoc, +The REST tests support all the options provided by the randomized runner, plus the following:, +* `tests.rest[true|false]`: determines whether the REST tests need to be run (default) or not., +, +Note that the REST tests, like all the integration tests, can be run against an external, +cluster by specifying the `tests.cluster` property, which if present needs to contain a, +comma separated list of nodes to connect to (e.g. localhost:9300). A transport client will, +be created based on that and used for all the before|after test operations, and to extract, +the http addresses of the nodes so that REST requests can be sent to them., +++ b/dev-tools/build_release.py, +          run_mvn('test -Dtests.cluster=%s -Dtests.class=*.*RestTests' % ("127.0.0.1:9300")), +++ b/pom.xml, +            <version>2.1.2</version>, +                <version>2.1.2</version>, +                            <uniqueSuiteNames>false</uniqueSuiteNames>, +++ b/TESTING.asciidoc, +The REST tests support all the options provided by the randomized runner, plus the following:, +* `tests.rest[true|false]`: determines whether the REST tests need to be run (default) or not., +, +Note that the REST tests, like all the integration tests, can be run against an external, +cluster by specifying the `tests.cluster` property, which if present needs to contain a, +comma separated list of nodes to connect to (e.g. localhost:9300). A transport client will, +be created based on that and used for all the before|after test operations, and to extract, +the http addresses of the nodes so that REST requests can be sent to them., +++ b/dev-tools/build_release.py, +          run_mvn('test -Dtests.cluster=%s -Dtests.class=*.*RestTests' % ("127.0.0.1:9300")), +++ b/pom.xml, +            <version>2.1.2</version>, +                <version>2.1.2</version>, +                            <uniqueSuiteNames>false</uniqueSuiteNames>, +++ b/rest-api-spec/test/cat.allocation/10_basic.yaml, +              ( \d+                 \s+, +++ b/TESTING.asciidoc, +The REST tests support all the options provided by the randomized runner, plus the following:, +* `tests.rest[true|false]`: determines whether the REST tests need to be run (default) or not., +, +Note that the REST tests, like all the integration tests, can be run against an external, +cluster by specifying the `tests.cluster` property, which if present needs to contain a, +comma separated list of nodes to connect to (e.g. localhost:9300). A transport client will, +be created based on that and used for all the before|after test operations, and to extract, +the http addresses of the nodes so that REST requests can be sent to them., +++ b/dev-tools/build_release.py, +          run_mvn('test -Dtests.cluster=%s -Dtests.class=*.*RestTests' % ("127.0.0.1:9300")), +++ b/pom.xml, +            <version>2.1.2</version>, +                <version>2.1.2</version>, +                            <uniqueSuiteNames>false</uniqueSuiteNames>, +++ b/rest-api-spec/test/cat.allocation/10_basic.yaml, +              ( \d+                 \s+, +++ b/rest-api-spec/test/cat.shards/10_basic.yaml, +      indices.create:, +        body:, +          settings:, +            number_of_shards: "5", +            number_of_replicas: "1", +            number_of_shards: "5", +++ b/TESTING.asciidoc, +The REST tests support all the options provided by the randomized runner, plus the following:, +* `tests.rest[true|false]`: determines whether the REST tests need to be run (default) or not., +, +Note that the REST tests, like all the integration tests, can be run against an external, +cluster by specifying the `tests.cluster` property, which if present needs to contain a, +comma separated list of nodes to connect to (e.g. localhost:9300). A transport client will, +be created based on that and used for all the before|after test operations, and to extract, +the http addresses of the nodes so that REST requests can be sent to them., +++ b/dev-tools/build_release.py, +          run_mvn('test -Dtests.cluster=%s -Dtests.class=*.*RestTests' % ("127.0.0.1:9300")), +++ b/pom.xml, +            <version>2.1.2</version>, +                <version>2.1.2</version>, +                            <uniqueSuiteNames>false</uniqueSuiteNames>, +++ b/rest-api-spec/test/cat.allocation/10_basic.yaml, +              ( \d+                 \s+, +++ b/rest-api-spec/test/cat.shards/10_basic.yaml, +      indices.create:, +        body:, +          settings:, +            number_of_shards: "5", +            number_of_replicas: "1", +            number_of_shards: "5"]