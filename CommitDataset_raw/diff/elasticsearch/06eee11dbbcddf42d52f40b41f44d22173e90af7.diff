[+++ b/rest-api-spec/test/indices.get_aliases/10_basic.yaml, +        version: 0 - 999, +++ b/rest-api-spec/test/indices.get_aliases/10_basic.yaml, +        version: 0 - 999, +++ b/rest-api-spec/test/indices.put_settings/all_path_options.yaml, +      version: 0 - 999, +++ b/rest-api-spec/test/indices.get_aliases/10_basic.yaml, +        version: 0 - 999, +++ b/rest-api-spec/test/indices.put_settings/all_path_options.yaml, +      version: 0 - 999, +++ b/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor and revision, and optionally the build: " + version);, +++ b/rest-api-spec/test/indices.get_aliases/10_basic.yaml, +        version: 0 - 999, +++ b/rest-api-spec/test/indices.put_settings/all_path_options.yaml, +      version: 0 - 999, +++ b/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor and revision, and optionally the build: " + version);, +++ b/src/test/java/org/elasticsearch/VersionTests.java, +import org.elasticsearch.test.VersionUtils;, +import static org.elasticsearch.test.VersionUtils.randomVersion;, +        for (Version version : VersionUtils.allVersions()) {, +++ b/rest-api-spec/test/indices.get_aliases/10_basic.yaml, +        version: 0 - 999, +++ b/rest-api-spec/test/indices.put_settings/all_path_options.yaml, +      version: 0 - 999, +++ b/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor and revision, and optionally the build: " + version);, +++ b/src/test/java/org/elasticsearch/VersionTests.java, +import org.elasticsearch.test.VersionUtils;, +import static org.elasticsearch.test.VersionUtils.randomVersion;, +        for (Version version : VersionUtils.allVersions()) {, +++ b/src/test/java/org/elasticsearch/action/OriginalIndicesTests.java, +import static org.elasticsearch.test.VersionUtils.randomVersion;, +++ b/rest-api-spec/test/indices.get_aliases/10_basic.yaml, +        version: 0 - 999, +++ b/rest-api-spec/test/indices.put_settings/all_path_options.yaml, +      version: 0 - 999, +++ b/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor and revision, and optionally the build: " + version);, +++ b/src/test/java/org/elasticsearch/VersionTests.java, +import org.elasticsearch.test.VersionUtils;, +import static org.elasticsearch.test.VersionUtils.randomVersion;, +        for (Version version : VersionUtils.allVersions()) {, +++ b/src/test/java/org/elasticsearch/action/OriginalIndicesTests.java, +import static org.elasticsearch.test.VersionUtils.randomVersion;, +++ b/src/test/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequestTest.java, +import org.elasticsearch.test.VersionUtils;, +            Version testVersion = VersionUtils.randomVersionBetween(random(), Version.CURRENT.minimumCompatibilityVersion(), Version.CURRENT);, +++ b/rest-api-spec/test/indices.get_aliases/10_basic.yaml, +        version: 0 - 999, +++ b/rest-api-spec/test/indices.put_settings/all_path_options.yaml, +      version: 0 - 999, +++ b/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor and revision, and optionally the build: " + version);, +++ b/src/test/java/org/elasticsearch/VersionTests.java, +import org.elasticsearch.test.VersionUtils;, +import static org.elasticsearch.test.VersionUtils.randomVersion;, +        for (Version version : VersionUtils.allVersions()) {, +++ b/src/test/java/org/elasticsearch/action/OriginalIndicesTests.java, +import static org.elasticsearch.test.VersionUtils.randomVersion;, +++ b/src/test/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequestTest.java, +import org.elasticsearch.test.VersionUtils;, +            Version testVersion = VersionUtils.randomVersionBetween(random(), Version.CURRENT.minimumCompatibilityVersion(), Version.CURRENT);, +++ b/src/test/java/org/elasticsearch/action/get/MultiGetShardRequestTests.java, +import static org.elasticsearch.test.VersionUtils.randomVersion;, +++ b/rest-api-spec/test/indices.get_aliases/10_basic.yaml, +        version: 0 - 999, +++ b/rest-api-spec/test/indices.put_settings/all_path_options.yaml, +      version: 0 - 999, +++ b/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor and revision, and optionally the build: " + version);, +++ b/src/test/java/org/elasticsearch/VersionTests.java, +import org.elasticsearch.test.VersionUtils;, +import static org.elasticsearch.test.VersionUtils.randomVersion;, +        for (Version version : VersionUtils.allVersions()) {, +++ b/src/test/java/org/elasticsearch/action/OriginalIndicesTests.java, +import static org.elasticsearch.test.VersionUtils.randomVersion;, +++ b/src/test/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequestTest.java, +import org.elasticsearch.test.VersionUtils;, +            Version testVersion = VersionUtils.randomVersionBetween(random(), Version.CURRENT.minimumCompatibilityVersion(), Version.CURRENT);, +++ b/src/test/java/org/elasticsearch/action/get/MultiGetShardRequestTests.java, +import static org.elasticsearch.test.VersionUtils.randomVersion;, +++ b/src/test/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequestTests.java, +import static org.elasticsearch.test.VersionUtils.randomVersion;, +++ b/rest-api-spec/test/indices.get_aliases/10_basic.yaml, +        version: 0 - 999, +++ b/rest-api-spec/test/indices.put_settings/all_path_options.yaml, +      version: 0 - 999, +++ b/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor and revision, and optionally the build: " + version);, +++ b/src/test/java/org/elasticsearch/VersionTests.java, +import org.elasticsearch.test.VersionUtils;, +import static org.elasticsearch.test.VersionUtils.randomVersion;, +        for (Version version : VersionUtils.allVersions()) {, +++ b/src/test/java/org/elasticsearch/action/OriginalIndicesTests.java, +import static org.elasticsearch.test.VersionUtils.randomVersion;, +++ b/src/test/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequestTest.java, +import org.elasticsearch.test.VersionUtils;, +            Version testVersion = VersionUtils.randomVersionBetween(random(), Version.CURRENT.minimumCompatibilityVersion(), Version.CURRENT);]