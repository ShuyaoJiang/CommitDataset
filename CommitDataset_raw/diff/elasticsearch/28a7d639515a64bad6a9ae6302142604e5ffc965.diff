[+++ b/src/main/java/org/elasticsearch/index/query/TermsFilterParser.java, +                if  (fieldName != null) {, +                    throw new QueryParsingException(parseContext.index(), "[terms] filter does not support multiple fields");, +                }, +++ b/src/main/java/org/elasticsearch/index/query/TermsFilterParser.java, +                if  (fieldName != null) {, +                    throw new QueryParsingException(parseContext.index(), "[terms] filter does not support multiple fields");, +                }, +++ b/src/main/java/org/elasticsearch/index/query/TermsQueryParser.java, +                if  (fieldName != null) {, +                    throw new QueryParsingException(parseContext.index(), "[terms] query does not support multiple fields");, +                }, +++ b/src/main/java/org/elasticsearch/index/query/TermsFilterParser.java, +                if  (fieldName != null) {, +                    throw new QueryParsingException(parseContext.index(), "[terms] filter does not support multiple fields");, +                }, +++ b/src/main/java/org/elasticsearch/index/query/TermsQueryParser.java, +                if  (fieldName != null) {, +                    throw new QueryParsingException(parseContext.index(), "[terms] query does not support multiple fields");, +                }, +++ b/src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java, +import org.elasticsearch.common.xcontent.XContentFactory;, +    public void testTermsQueryWithMultipleFields() throws IOException {, +        IndexQueryParserService queryParser = queryParser();, +        String query = XContentFactory.jsonBuilder().startObject(), +                .startObject("terms").array("foo", 123).array("bar", 456).endObject(), +                .endObject().string();, +        try {, +            queryParser.parse(query).query();, +            fail();, +        } catch (QueryParsingException ex) {, +            assertThat(ex.getMessage(), equalTo("[test] [terms] query does not support multiple fields"));, +        }, +    }, +, +    @Test, +    public void testTermsFilterWithMultipleFields() throws IOException {, +        IndexQueryParserService queryParser = queryParser();, +        String query = XContentFactory.jsonBuilder().startObject(), +                .startObject("filtered"), +                .startObject("query").startObject("match_all").endObject().endObject(), +                .startObject("filter").startObject("terms").array("foo", 123).array("bar", 456).endObject().endObject(), +                .endObject().string();, +        try {, +            queryParser.parse(query).query();, +            fail();, +        } catch (QueryParsingException ex) {, +            assertThat(ex.getMessage(), equalTo("[test] [terms] filter does not support multiple fields"));, +        }, +    }, +, +, +, +    @Test]