[+++ b/core/src/main/java/org/elasticsearch/action/main/MainResponse.java, +    private String clusterUuid;, +    public MainResponse(String nodeName, Version version, ClusterName clusterName, String clusterUuid, Build build, boolean available) {, +        this.clusterUuid = clusterUuid;, +    public String getClusterUuid() {, +        return clusterUuid;, +    }, +, +        out.writeString(clusterUuid);, +        clusterUuid = in.readString();, +        builder.field("cluster_uuid", clusterUuid);, +++ b/core/src/main/java/org/elasticsearch/action/main/MainResponse.java, +    private String clusterUuid;, +    public MainResponse(String nodeName, Version version, ClusterName clusterName, String clusterUuid, Build build, boolean available) {, +        this.clusterUuid = clusterUuid;, +    public String getClusterUuid() {, +        return clusterUuid;, +    }, +, +        out.writeString(clusterUuid);, +        clusterUuid = in.readString();, +        builder.field("cluster_uuid", clusterUuid);, +++ b/core/src/main/java/org/elasticsearch/action/main/TransportMainAction.java, +            new MainResponse(Node.NODE_NAME_SETTING.get(settings), Version.CURRENT, clusterState.getClusterName(),, +                    clusterState.metaData().clusterUUID(), Build.CURRENT, available));, +++ b/core/src/main/java/org/elasticsearch/action/main/MainResponse.java, +    private String clusterUuid;, +    public MainResponse(String nodeName, Version version, ClusterName clusterName, String clusterUuid, Build build, boolean available) {, +        this.clusterUuid = clusterUuid;, +    public String getClusterUuid() {, +        return clusterUuid;, +    }, +, +        out.writeString(clusterUuid);, +        clusterUuid = in.readString();, +        builder.field("cluster_uuid", clusterUuid);, +++ b/core/src/main/java/org/elasticsearch/action/main/TransportMainAction.java, +            new MainResponse(Node.NODE_NAME_SETTING.get(settings), Version.CURRENT, clusterState.getClusterName(),, +                    clusterState.metaData().clusterUUID(), Build.CURRENT, available));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.cli.UserException;, +            final Map<String, String> esSettings) throws BootstrapException, NodeValidationException, UserException {, +++ b/core/src/main/java/org/elasticsearch/action/main/MainResponse.java, +    private String clusterUuid;, +    public MainResponse(String nodeName, Version version, ClusterName clusterName, String clusterUuid, Build build, boolean available) {, +        this.clusterUuid = clusterUuid;, +    public String getClusterUuid() {, +        return clusterUuid;, +    }, +, +        out.writeString(clusterUuid);, +        clusterUuid = in.readString();, +        builder.field("cluster_uuid", clusterUuid);, +++ b/core/src/main/java/org/elasticsearch/action/main/TransportMainAction.java, +            new MainResponse(Node.NODE_NAME_SETTING.get(settings), Version.CURRENT, clusterState.getClusterName(),, +                    clusterState.metaData().clusterUUID(), Build.CURRENT, available));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.cli.UserException;, +            final Map<String, String> esSettings) throws BootstrapException, NodeValidationException, UserException {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +        throws NodeValidationException, UserException {, +     * NOTE: If this method is renamed and/or moved, make sure to, +     * update elasticsearch-service.bat!, +++ b/core/src/main/java/org/elasticsearch/action/main/MainResponse.java, +    private String clusterUuid;, +    public MainResponse(String nodeName, Version version, ClusterName clusterName, String clusterUuid, Build build, boolean available) {, +        this.clusterUuid = clusterUuid;, +    public String getClusterUuid() {, +        return clusterUuid;, +    }, +, +        out.writeString(clusterUuid);, +        clusterUuid = in.readString();, +        builder.field("cluster_uuid", clusterUuid);, +++ b/core/src/main/java/org/elasticsearch/action/main/TransportMainAction.java, +            new MainResponse(Node.NODE_NAME_SETTING.get(settings), Version.CURRENT, clusterState.getClusterName(),, +                    clusterState.metaData().clusterUUID(), Build.CURRENT, available));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.cli.UserException;, +            final Map<String, String> esSettings) throws BootstrapException, NodeValidationException, UserException {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +        throws NodeValidationException, UserException {, +     * NOTE: If this method is renamed and/or moved, make sure to, +     * update elasticsearch-service.bat!, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +++ b/core/src/main/java/org/elasticsearch/action/main/MainResponse.java, +    private String clusterUuid;, +    public MainResponse(String nodeName, Version version, ClusterName clusterName, String clusterUuid, Build build, boolean available) {, +        this.clusterUuid = clusterUuid;, +    public String getClusterUuid() {, +        return clusterUuid;, +    }, +, +        out.writeString(clusterUuid);, +        clusterUuid = in.readString();, +        builder.field("cluster_uuid", clusterUuid);, +++ b/core/src/main/java/org/elasticsearch/action/main/TransportMainAction.java, +            new MainResponse(Node.NODE_NAME_SETTING.get(settings), Version.CURRENT, clusterState.getClusterName(),, +                    clusterState.metaData().clusterUUID(), Build.CURRENT, available));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java]