[+++ b/src/main/java/org/elasticsearch/threadpool/ThreadPool.java, +                rejectedExecutionHandler = new AbortPolicy();, +    /**, +     * A handler for rejected tasks that throws a, +     * <tt>RejectedExecutionException</tt>., +     */, +    public static class AbortPolicy implements RejectedExecutionHandler {, +        /**, +         * Creates an <tt>AbortPolicy</tt>., +         */, +        public AbortPolicy() {, +        }, +, +        /**, +         * Always throws RejectedExecutionException., +         *, +         * @param r the runnable task requested to be executed, +         * @param e the executor attempting to execute this task, +         * @throws RejectedExecutionException always., +         */, +        public void rejectedExecution(Runnable r, ThreadPoolExecutor e) {, +            throw new ThreadPoolRejectedException();, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/threadpool/ThreadPool.java, +                rejectedExecutionHandler = new AbortPolicy();, +    /**, +     * A handler for rejected tasks that throws a, +     * <tt>RejectedExecutionException</tt>., +     */, +    public static class AbortPolicy implements RejectedExecutionHandler {, +        /**, +         * Creates an <tt>AbortPolicy</tt>., +         */, +        public AbortPolicy() {, +        }, +, +        /**, +         * Always throws RejectedExecutionException., +         *, +         * @param r the runnable task requested to be executed, +         * @param e the executor attempting to execute this task, +         * @throws RejectedExecutionException always., +         */, +        public void rejectedExecution(Runnable r, ThreadPoolExecutor e) {, +            throw new ThreadPoolRejectedException();, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/threadpool/ThreadPoolRejectedException.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.threadpool;, +, +import org.elasticsearch.ElasticSearchException;, +import org.elasticsearch.rest.RestStatus;, +, +/**, + */, +public class ThreadPoolRejectedException extends ElasticSearchException {, +, +    public ThreadPoolRejectedException() {, +        super("rejected");, +    }, +, +    @Override, +    public RestStatus status() {, +        return RestStatus.FORBIDDEN;, +    }, +}]