[+++ b/core/src/main/java/org/elasticsearch/index/mapper/core/TextFieldMapper.java, +        if (fieldType().indexOptions() == IndexOptions.NONE && fieldType().fielddata()) {, +            throw new IllegalArgumentException("Cannot enable fielddata on a [text] field that is not indexed: [" + name() + "]");, +        }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/TextFieldMapper.java, +        if (fieldType().indexOptions() == IndexOptions.NONE && fieldType().fielddata()) {, +            throw new IllegalArgumentException("Cannot enable fielddata on a [text] field that is not indexed: [" + name() + "]");, +        }, +++ b/core/src/test/java/org/elasticsearch/index/mapper/core/TextFieldMapperTests.java, +, +        String illegalMapping = XContentFactory.jsonBuilder().startObject().startObject("type"), +                .startObject("properties").startObject("field"), +                    .field("type", "text"), +                    .field("index", false), +                    .field("fielddata", true), +                .endObject().endObject(), +                .endObject().endObject().string();, +        IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,, +                () -> parser.parse("type", new CompressedXContent(illegalMapping)));, +        assertThat(ex.getMessage(), containsString("Cannot enable fielddata on a [text] field that is not indexed"));]