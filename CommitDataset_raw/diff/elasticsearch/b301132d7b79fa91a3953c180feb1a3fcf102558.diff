[+++ b/src/test/java/org/elasticsearch/action/bulk/BulkIntegrationTests.java, +        bulkBuilder.get();, +        assertBusy(new Runnable() {, +            public void run() {, +                GetMappingsResponse mappingsResponse = client().admin().indices().prepareGetMappings().get();, +        });, +    }, +++ b/src/test/java/org/elasticsearch/action/bulk/BulkIntegrationTests.java, +        bulkBuilder.get();, +        assertBusy(new Runnable() {, +            public void run() {, +                GetMappingsResponse mappingsResponse = client().admin().indices().prepareGetMappings().get();, +        });, +    }, +++ b/src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java, +        assertBusy(new Runnable() {, +            @Override, +            public void run() {, +                assertTrue(state.blocks().hasGlobalBlock(Discovery.NO_MASTER_BLOCK));, +        });, +++ b/src/test/java/org/elasticsearch/action/bulk/BulkIntegrationTests.java, +        bulkBuilder.get();, +        assertBusy(new Runnable() {, +            public void run() {, +                GetMappingsResponse mappingsResponse = client().admin().indices().prepareGetMappings().get();, +        });, +    }, +++ b/src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java, +        assertBusy(new Runnable() {, +            @Override, +            public void run() {, +                assertTrue(state.blocks().hasGlobalBlock(Discovery.NO_MASTER_BLOCK));, +        });, +++ b/src/test/java/org/elasticsearch/common/util/concurrent/EsExecutorsTests.java, +        assertBusy(new Runnable() {, +            @Override, +            public void run() {, +                assertThat("wrong active count", pool.getActiveCount(), equalTo(0));, +                assertThat("idle threads didn't shrink below max. (" + pool.getPoolSize() + ")", pool.getPoolSize(), lessThan(max));, +++ b/src/test/java/org/elasticsearch/action/bulk/BulkIntegrationTests.java, +        bulkBuilder.get();, +        assertBusy(new Runnable() {, +            public void run() {, +                GetMappingsResponse mappingsResponse = client().admin().indices().prepareGetMappings().get();, +        });, +    }, +++ b/src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java, +        assertBusy(new Runnable() {, +            @Override, +            public void run() {, +                assertTrue(state.blocks().hasGlobalBlock(Discovery.NO_MASTER_BLOCK));, +        });, +++ b/src/test/java/org/elasticsearch/common/util/concurrent/EsExecutorsTests.java, +        assertBusy(new Runnable() {, +            @Override, +            public void run() {, +                assertThat("wrong active count", pool.getActiveCount(), equalTo(0));, +                assertThat("idle threads didn't shrink below max. (" + pool.getPoolSize() + ")", pool.getPoolSize(), lessThan(max));, +++ b/src/test/java/org/elasticsearch/index/fielddata/DisabledFieldDataFormatTests.java, +import org.hamcrest.Matchers;, +import java.util.concurrent.Callable;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.notNullValue;, +        assertBusy(new Callable<Object>() {, +            public Object call() throws Exception {, +                assertFalse(nodes.isEmpty());, +                    assertThat(indexService, notNullValue());, +                    assertThat(mappers, notNullValue());, +                    assertTrue(mappers.hasMapper());, +                    assertThat(currentFormat, equalTo(format));, +                return null;, +++ b/src/test/java/org/elasticsearch/action/bulk/BulkIntegrationTests.java, +        bulkBuilder.get();, +        assertBusy(new Runnable() {, +            public void run() {, +                GetMappingsResponse mappingsResponse = client().admin().indices().prepareGetMappings().get();, +        });, +    }, +++ b/src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java, +        assertBusy(new Runnable() {, +            @Override, +            public void run() {, +                assertTrue(state.blocks().hasGlobalBlock(Discovery.NO_MASTER_BLOCK));, +        });, +++ b/src/test/java/org/elasticsearch/common/util/concurrent/EsExecutorsTests.java, +        assertBusy(new Runnable() {, +            @Override, +            public void run() {, +                assertThat("wrong active count", pool.getActiveCount(), equalTo(0));, +                assertThat("idle threads didn't shrink below max. (" + pool.getPoolSize() + ")", pool.getPoolSize(), lessThan(max));, +++ b/src/test/java/org/elasticsearch/index/fielddata/DisabledFieldDataFormatTests.java, +import org.hamcrest.Matchers;, +import java.util.concurrent.Callable;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.notNullValue;, +        assertBusy(new Callable<Object>() {, +            public Object call() throws Exception {, +                assertFalse(nodes.isEmpty());, +                    assertThat(indexService, notNullValue());, +                    assertThat(mappers, notNullValue());]