[+++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java, +                assert ord >= 0;, +        final long previousOrd = ord >> 2;, +        final BytesRef previous = previousOrd == Ordinals.MISSING_ORDINAL ? null : termsIndex.getValueByOrd(previousOrd);, +        long result = Ordinals.MISSING_ORDINAL;, +        assert result >= Ordinals.MISSING_ORDINAL;, +        assert result < readerOrds.getMaxOrd();, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java, +                assert ord >= 0;, +        final long previousOrd = ord >> 2;, +        final BytesRef previous = previousOrd == Ordinals.MISSING_ORDINAL ? null : termsIndex.getValueByOrd(previousOrd);, +        long result = Ordinals.MISSING_ORDINAL;, +        assert result >= Ordinals.MISSING_ORDINAL;, +        assert result < readerOrds.getMaxOrd();, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/EmptyOrdinals.java, +            return Ordinals.MISSING_ORDINAL;, +            return Ordinals.MISSING_ORDINAL;, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java, +                assert ord >= 0;, +        final long previousOrd = ord >> 2;, +        final BytesRef previous = previousOrd == Ordinals.MISSING_ORDINAL ? null : termsIndex.getValueByOrd(previousOrd);, +        long result = Ordinals.MISSING_ORDINAL;, +        assert result >= Ordinals.MISSING_ORDINAL;, +        assert result < readerOrds.getMaxOrd();, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/EmptyOrdinals.java, +            return Ordinals.MISSING_ORDINAL;, +            return Ordinals.MISSING_ORDINAL;, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsBuilder.java, +            currentGlobalOrdinal++;, +        final long maxOrd = currentGlobalOrdinal;, +            if (segmentOrd == Ordinals.MISSING_ORDINAL) {, +                return currentGlobalOrd = Ordinals.MISSING_ORDINAL;, +            } else {, +        }, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java, +                assert ord >= 0;, +        final long previousOrd = ord >> 2;, +        final BytesRef previous = previousOrd == Ordinals.MISSING_ORDINAL ? null : termsIndex.getValueByOrd(previousOrd);, +        long result = Ordinals.MISSING_ORDINAL;, +        assert result >= Ordinals.MISSING_ORDINAL;, +        assert result < readerOrds.getMaxOrd();, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/EmptyOrdinals.java, +            return Ordinals.MISSING_ORDINAL;, +            return Ordinals.MISSING_ORDINAL;, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsBuilder.java, +            currentGlobalOrdinal++;, +        final long maxOrd = currentGlobalOrdinal;, +            if (segmentOrd == Ordinals.MISSING_ORDINAL) {, +                return currentGlobalOrd = Ordinals.MISSING_ORDINAL;, +            } else {, +        }, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiOrdinals.java, +    private final long maxOrd;, +        maxOrd = builder.getMaxOrd();, +                ords.add(docOrds.longs[docOrds.offset + j]);, +        return maxOrd;, +                return currentOrd = Ordinals.MISSING_ORDINAL; // ord for missing values, +                return currentOrd = ords.get(startOffset);, +            return currentOrd = ords.get(offset++);, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java, +                assert ord >= 0;, +        final long previousOrd = ord >> 2;, +        final BytesRef previous = previousOrd == Ordinals.MISSING_ORDINAL ? null : termsIndex.getValueByOrd(previousOrd);, +        long result = Ordinals.MISSING_ORDINAL;, +        assert result >= Ordinals.MISSING_ORDINAL;, +        assert result < readerOrds.getMaxOrd();, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/EmptyOrdinals.java, +            return Ordinals.MISSING_ORDINAL;, +            return Ordinals.MISSING_ORDINAL;, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsBuilder.java, +            currentGlobalOrdinal++;, +        final long maxOrd = currentGlobalOrdinal;, +            if (segmentOrd == Ordinals.MISSING_ORDINAL) {, +                return currentGlobalOrd = Ordinals.MISSING_ORDINAL;, +            } else {, +        }, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiOrdinals.java, +    private final long maxOrd;, +        maxOrd = builder.getMaxOrd();, +                ords.add(docOrds.longs[docOrds.offset + j]);, +        return maxOrd;, +                return currentOrd = Ordinals.MISSING_ORDINAL; // ord for missing values, +                return currentOrd = ords.get(startOffset);, +            return currentOrd = ords.get(offset++);, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/Ordinals.java, +import org.apache.lucene.index.SortedSetDocValues;, +, +    static final long MISSING_ORDINAL = SortedSetDocValues.NO_MORE_ORDS;, +    static final long MIN_ORDINAL = 0;, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java, +                assert ord >= 0;, +        final long previousOrd = ord >> 2;, +        final BytesRef previous = previousOrd == Ordinals.MISSING_ORDINAL ? null : termsIndex.getValueByOrd(previousOrd);, +        long result = Ordinals.MISSING_ORDINAL;, +        assert result >= Ordinals.MISSING_ORDINAL;, +        assert result < readerOrds.getMaxOrd();, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/EmptyOrdinals.java, +            return Ordinals.MISSING_ORDINAL;, +            return Ordinals.MISSING_ORDINAL;, +++ b/src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsBuilder.java]