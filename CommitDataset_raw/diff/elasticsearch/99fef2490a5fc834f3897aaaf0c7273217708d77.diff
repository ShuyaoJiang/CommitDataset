[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.client.documentation;, +, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.action.ActionListener;, +import org.elasticsearch.action.DocWriteRequest;, +import org.elasticsearch.action.DocWriteResponse;, +import org.elasticsearch.action.delete.DeleteRequest;, +import org.elasticsearch.action.delete.DeleteResponse;, +import org.elasticsearch.action.index.IndexRequest;, +import org.elasticsearch.action.index.IndexResponse;, +import org.elasticsearch.action.support.WriteRequest;, +import org.elasticsearch.action.support.replication.ReplicationResponse;, +import org.elasticsearch.client.ESRestHighLevelClientTestCase;, +import org.elasticsearch.client.RestHighLevelClient;, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentType;, +import org.elasticsearch.index.VersionType;, +import org.elasticsearch.rest.RestStatus;, +, +import java.io.IOException;, +import java.util.Date;, +import java.util.HashMap;, +import java.util.Map;, +, +/**, + * This class is used to generate the Java CRUD API documentation., + * You need to wrap your code between two tags like:, + * // tag::example[], + * // end::example[], + *, + * Where example is your tag name., + *, + * Then in the documentation, you can extract what is between tag and end tags with, + * ["source","java",subs="attributes,callouts,macros"], + * --------------------------------------------------, + * include-tagged::{doc-tests}/CRUDDocumentationIT.java[example], + * --------------------------------------------------, + */, +public class CRUDDocumentationIT extends ESRestHighLevelClientTestCase {, +, +    public void testIndex() throws IOException {, +        RestHighLevelClient client = highLevelClient();, +, +        {, +            //tag::index-request-map, +            Map<String, Object> jsonMap = new HashMap<>();, +            jsonMap.put("user", "kimchy");, +            jsonMap.put("postDate",new Date());, +            jsonMap.put("message","trying out Elasticsearch");, +            IndexRequest indexRequest = new IndexRequest("index", "type", "id"), +                    .source(jsonMap); // <1>, +            //end::index-request-map, +            IndexResponse indexResponse = client.index(indexRequest);, +            assertEquals(indexResponse.getResult(), DocWriteResponse.Result.CREATED);, +        }, +        {, +            //tag::index-request-xcontent, +            XContentBuilder builder = XContentFactory.jsonBuilder();, +            builder.startObject();, +            {, +                builder.field("user", "kimchy");, +                builder.field("postDate", new Date());, +                builder.field("message", "trying out Elasticsearch");, +            }, +            builder.endObject();, +            IndexRequest indexRequest = new IndexRequest("index", "type", "id"), +                    .source(builder);  // <1>, +            //end::index-request-xcontent, +            IndexResponse indexResponse = client.index(indexRequest);, +            assertEquals(indexResponse.getResult(), DocWriteResponse.Result.UPDATED);, +        }, +        {, +            //tag::index-request-shortcut, +            IndexRequest indexRequest = new IndexRequest("index", "type", "id"), +                    .source("user", "kimchy",, +                            "postDate", new Date(),, +                            "message", "trying out Elasticsearch"); // <1>, +            //end::index-request-shortcut]