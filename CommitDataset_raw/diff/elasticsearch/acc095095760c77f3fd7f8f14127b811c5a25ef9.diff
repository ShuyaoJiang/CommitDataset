[+++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java, +            if (params.paramAsBoolean("reduce_mappings", false)) {, +                builder.startObject("mappings");, +                for (Map.Entry<String, CompressedString> entry : indexTemplateMetaData.mappings().entrySet()) {, +                    byte[] mappingSource = entry.getValue().uncompressed();, +                    XContentParser parser = XContentFactory.xContent(mappingSource).createParser(mappingSource);, +                    Map<String, Object> mapping = parser.map();, +                    if (mapping.size() == 1 && mapping.containsKey(entry.getKey())) {, +                        // the type name is the root value, reduce it, +                        mapping = (Map<String, Object>) mapping.get(entry.getKey());, +                    }, +                    builder.field(entry.getKey());, +                    builder.map(mapping);, +                }, +                builder.endObject();, +            } else {, +            }, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java, +            if (params.paramAsBoolean("reduce_mappings", false)) {, +                builder.startObject("mappings");, +                for (Map.Entry<String, CompressedString> entry : indexTemplateMetaData.mappings().entrySet()) {, +                    byte[] mappingSource = entry.getValue().uncompressed();, +                    XContentParser parser = XContentFactory.xContent(mappingSource).createParser(mappingSource);, +                    Map<String, Object> mapping = parser.map();, +                    if (mapping.size() == 1 && mapping.containsKey(entry.getKey())) {, +                        // the type name is the root value, reduce it, +                        mapping = (Map<String, Object>) mapping.get(entry.getKey());, +                    }, +                    builder.field(entry.getKey());, +                    builder.map(mapping);, +                }, +                builder.endObject();, +            } else {, +            }, +++ b/src/main/java/org/elasticsearch/common/xcontent/ToXContent.java, +    public static class DelegatingMapParams extends MapParams {, +, +        private final Params delegate;, +, +        public DelegatingMapParams(Map<String, String> params, Params delegate) {, +            super(params);, +            this.delegate = delegate;, +        }, +, +        @Override, +        public String param(String key) {, +            return super.param(key, delegate.param(key));, +        }, +, +        @Override, +        public String param(String key, String defaultValue) {, +            return super.param(key, delegate.param(key, defaultValue));, +        }, +, +        @Override, +        public boolean paramAsBoolean(String key, boolean defaultValue) {, +            return super.paramAsBoolean(key, delegate.paramAsBoolean(key, defaultValue));, +        }, +, +        @Override, +        public Boolean paramAsBooleanOptional(String key, Boolean defaultValue) {, +            return super.paramAsBooleanOptional(key, delegate.paramAsBooleanOptional(key, defaultValue));, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java, +            if (params.paramAsBoolean("reduce_mappings", false)) {, +                builder.startObject("mappings");, +                for (Map.Entry<String, CompressedString> entry : indexTemplateMetaData.mappings().entrySet()) {, +                    byte[] mappingSource = entry.getValue().uncompressed();, +                    XContentParser parser = XContentFactory.xContent(mappingSource).createParser(mappingSource);, +                    Map<String, Object> mapping = parser.map();, +                    if (mapping.size() == 1 && mapping.containsKey(entry.getKey())) {, +                        // the type name is the root value, reduce it, +                        mapping = (Map<String, Object>) mapping.get(entry.getKey());, +                    }, +                    builder.field(entry.getKey());, +                    builder.map(mapping);, +                }, +                builder.endObject();, +            } else {, +            }, +++ b/src/main/java/org/elasticsearch/common/xcontent/ToXContent.java, +    public static class DelegatingMapParams extends MapParams {, +, +        private final Params delegate;, +, +        public DelegatingMapParams(Map<String, String> params, Params delegate) {, +            super(params);, +            this.delegate = delegate;, +        }, +, +        @Override, +        public String param(String key) {, +            return super.param(key, delegate.param(key));, +        }, +, +        @Override, +        public String param(String key, String defaultValue) {, +            return super.param(key, delegate.param(key, defaultValue));]