[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +                // powershell sessions run over winrm always run as administrator, whether --elevated is passed or not. however, +                // remote sessions have some restrictions on what they can do, such as impersonating another user (or the same user, +                // without administrator elevation), which we need to do for these tests. passing --elevated runs the session, +                // as a scheduled job locally on the vm as a true administrator to get around this limitation, +                //, +                // https://github.com/hashicorp/vagrant/blob/9c299a2a357fcf87f356bb9d56e18a037a53d138/plugins/communicators/winrm/communicator.rb#L195-L225, +                // https://devops-collective-inc.gitbooks.io/secrets-of-powershell-remoting/content/manuscript/accessing-remote-computers.html, +                javaPackagingTest.args = ['--elevated', '--command', 'powershell -File "$Env:PACKAGING_TESTS/run-tests.ps1"'], +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +                // powershell sessions run over winrm always run as administrator, whether --elevated is passed or not. however, +                // remote sessions have some restrictions on what they can do, such as impersonating another user (or the same user, +                // without administrator elevation), which we need to do for these tests. passing --elevated runs the session, +                // as a scheduled job locally on the vm as a true administrator to get around this limitation, +                //, +                // https://github.com/hashicorp/vagrant/blob/9c299a2a357fcf87f356bb9d56e18a037a53d138/plugins/communicators/winrm/communicator.rb#L195-L225, +                // https://devops-collective-inc.gitbooks.io/secrets-of-powershell-remoting/content/manuscript/accessing-remote-computers.html, +                javaPackagingTest.args = ['--elevated', '--command', 'powershell -File "$Env:PACKAGING_TESTS/run-tests.ps1"'], +++ b/docs/reference/rest-api/info.asciidoc, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +                // powershell sessions run over winrm always run as administrator, whether --elevated is passed or not. however, +                // remote sessions have some restrictions on what they can do, such as impersonating another user (or the same user, +                // without administrator elevation), which we need to do for these tests. passing --elevated runs the session, +                // as a scheduled job locally on the vm as a true administrator to get around this limitation, +                //, +                // https://github.com/hashicorp/vagrant/blob/9c299a2a357fcf87f356bb9d56e18a037a53d138/plugins/communicators/winrm/communicator.rb#L195-L225, +                // https://devops-collective-inc.gitbooks.io/secrets-of-powershell-remoting/content/manuscript/accessing-remote-computers.html, +                javaPackagingTest.args = ['--elevated', '--command', 'powershell -File "$Env:PACKAGING_TESTS/run-tests.ps1"'], +++ b/docs/reference/rest-api/info.asciidoc, +++ b/qa/vagrant/build.gradle, +  compile "org.apache.httpcomponents:httpcore:${versions.httpcore}", +  compile "org.apache.httpcomponents:httpclient:${versions.httpclient}", +  compile "org.apache.httpcomponents:fluent-hc:${versions.httpclient}", +  compile "commons-codec:commons-codec:${versions.commonscodec}", +  compile "commons-logging:commons-logging:${versions.commonslogging}", +, +, +tasks.thirdPartyAudit.excludes = [, +        //commons-logging optional dependencies, +        'org.apache.avalon.framework.logger.Logger',, +        'org.apache.log.Hierarchy',, +        'org.apache.log.Logger',, +        'org.apache.log4j.Category',, +        'org.apache.log4j.Level',, +        'org.apache.log4j.Logger',, +        'org.apache.log4j.Priority',, +        //commons-logging provided dependencies, +        'javax.servlet.ServletContextEvent',, +        'javax.servlet.ServletContextListener', +], +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +                // powershell sessions run over winrm always run as administrator, whether --elevated is passed or not. however, +                // remote sessions have some restrictions on what they can do, such as impersonating another user (or the same user, +                // without administrator elevation), which we need to do for these tests. passing --elevated runs the session, +                // as a scheduled job locally on the vm as a true administrator to get around this limitation, +                //, +                // https://github.com/hashicorp/vagrant/blob/9c299a2a357fcf87f356bb9d56e18a037a53d138/plugins/communicators/winrm/communicator.rb#L195-L225, +                // https://devops-collective-inc.gitbooks.io/secrets-of-powershell-remoting/content/manuscript/accessing-remote-computers.html, +                javaPackagingTest.args = ['--elevated', '--command', 'powershell -File "$Env:PACKAGING_TESTS/run-tests.ps1"'], +++ b/docs/reference/rest-api/info.asciidoc, +++ b/qa/vagrant/build.gradle, +  compile "org.apache.httpcomponents:httpcore:${versions.httpcore}", +  compile "org.apache.httpcomponents:httpclient:${versions.httpclient}", +  compile "org.apache.httpcomponents:fluent-hc:${versions.httpclient}", +  compile "commons-codec:commons-codec:${versions.commonscodec}", +  compile "commons-logging:commons-logging:${versions.commonslogging}", +, +, +tasks.thirdPartyAudit.excludes = [, +        //commons-logging optional dependencies, +        'org.apache.avalon.framework.logger.Logger',, +        'org.apache.log.Hierarchy',, +        'org.apache.log.Logger',, +        'org.apache.log4j.Category',, +        'org.apache.log4j.Level',, +        'org.apache.log4j.Logger',, +        'org.apache.log4j.Priority',, +        //commons-logging provided dependencies, +        'javax.servlet.ServletContextEvent',, +        'javax.servlet.ServletContextListener', +], +++ b/qa/vagrant/src/main/java/org/elasticsearch/packaging/test/ArchiveTestCase.java, +import org.apache.http.client.fluent.Request;, +import org.elasticsearch.packaging.util.Archives;, +import org.elasticsearch.packaging.util.Platforms;, +import org.elasticsearch.packaging.util.ServerUtils;, +import org.elasticsearch.packaging.util.Shell;, +import org.elasticsearch.packaging.util.Shell.Result;, +import java.io.IOException;, +import java.nio.file.Files;, +import java.nio.file.Path;, +import java.util.Arrays;, +import java.util.stream.Stream;, +, +import static java.util.stream.Collectors.joining;, +import static org.elasticsearch.packaging.util.Archives.ARCHIVE_OWNER;, +import static org.elasticsearch.packaging.util.FileMatcher.Fileness.File;, +import static org.elasticsearch.packaging.util.FileMatcher.file;, +import static org.elasticsearch.packaging.util.FileMatcher.p660;, +import static org.elasticsearch.packaging.util.FileUtils.append;]