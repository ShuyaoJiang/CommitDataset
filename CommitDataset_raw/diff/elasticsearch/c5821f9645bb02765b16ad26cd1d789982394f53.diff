[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java, + * // tag::example, + * // end::example, + *, + * The column width of the code block is 84. If the code contains a line longer, + * than 84, the line will be cut and a horizontal scroll bar will be displayed., + * (the code indentation of the tag is not included in the width), +            Script inline = new Script(ScriptType.INLINE, "painless",, +                    "ctx._source.field += params.count", parameters);  // <2>, +            UpdateRequest request = new UpdateRequest("posts", "type", "does_not_exist"), +                    .doc("field", "value");, +            FetchSourceContext fetchSourceContext =, +                    new FetchSourceContext(true, includes, excludes);, +            FetchSourceContext fetchSourceContext =, +                    new FetchSourceContext(true, includes, excludes);, +                public void afterBulk(long executionId, BulkRequest request,, +                        BulkResponse response) {, +            BulkProcessor bulkProcessor =, +                    BulkProcessor.builder(client::bulkAsync, listener).build(); // <5>, +                    source(XContentType.JSON, "title",, +                            "In which order are my Elasticsearch queries executed?");, +                    .source(XContentType.JSON, "title",, +                            "Current status and upcoming changes in Elasticsearch");, +                    .source(XContentType.JSON, "title",, +                            "The Future of Federated Search in Elasticsearch");, +                    logger.debug("Executing bulk [{}] with {} requests",, +                            executionId, numberOfActions);, +                public void afterBulk(long executionId, BulkRequest request,, +                        BulkResponse response) {, +                        logger.debug("Bulk [{}] completed in {} milliseconds",, +                                executionId, response.getTook().getMillis());, +            builder.setBackoffPolicy(BackoffPolicy, +                    .constantBackoff(TimeValue.timeValueSeconds(1L), 3)); // <5>, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java, + * // tag::example, + * // end::example, + *, + * The column width of the code block is 84. If the code contains a line longer, + * than 84, the line will be cut and a horizontal scroll bar will be displayed., + * (the code indentation of the tag is not included in the width), +            Script inline = new Script(ScriptType.INLINE, "painless",, +                    "ctx._source.field += params.count", parameters);  // <2>, +            UpdateRequest request = new UpdateRequest("posts", "type", "does_not_exist"), +                    .doc("field", "value");, +            FetchSourceContext fetchSourceContext =, +                    new FetchSourceContext(true, includes, excludes);, +            FetchSourceContext fetchSourceContext =, +                    new FetchSourceContext(true, includes, excludes);, +                public void afterBulk(long executionId, BulkRequest request,, +                        BulkResponse response) {, +            BulkProcessor bulkProcessor =, +                    BulkProcessor.builder(client::bulkAsync, listener).build(); // <5>, +                    source(XContentType.JSON, "title",, +                            "In which order are my Elasticsearch queries executed?");, +                    .source(XContentType.JSON, "title",, +                            "Current status and upcoming changes in Elasticsearch");, +                    .source(XContentType.JSON, "title",, +                            "The Future of Federated Search in Elasticsearch");, +                    logger.debug("Executing bulk [{}] with {} requests",, +                            executionId, numberOfActions);, +                public void afterBulk(long executionId, BulkRequest request,, +                        BulkResponse response) {, +                        logger.debug("Bulk [{}] completed in {} milliseconds",, +                                executionId, response.getTook().getMillis());, +            builder.setBackoffPolicy(BackoffPolicy, +                    .constantBackoff(TimeValue.timeValueSeconds(1L), 3)); // <5>, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/ClusterClientDocumentationIT.java, + * // tag::example, + * // end::example, + *, + * The column width of the code block is 84. If the code contains a line longer, + * than 84, the line will be cut and a horizontal scroll bar will be displayed., + * (the code indentation of the tag is not included in the width), +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java, + * // tag::example, + * // end::example, + *, + * The column width of the code block is 84. If the code contains a line longer, + * than 84, the line will be cut and a horizontal scroll bar will be displayed., + * (the code indentation of the tag is not included in the width), +            Script inline = new Script(ScriptType.INLINE, "painless",, +                    "ctx._source.field += params.count", parameters);  // <2>, +            UpdateRequest request = new UpdateRequest("posts", "type", "does_not_exist"), +                    .doc("field", "value");, +            FetchSourceContext fetchSourceContext =, +                    new FetchSourceContext(true, includes, excludes);, +            FetchSourceContext fetchSourceContext =, +                    new FetchSourceContext(true, includes, excludes);, +                public void afterBulk(long executionId, BulkRequest request,, +                        BulkResponse response) {, +            BulkProcessor bulkProcessor =, +                    BulkProcessor.builder(client::bulkAsync, listener).build(); // <5>, +                    source(XContentType.JSON, "title",, +                            "In which order are my Elasticsearch queries executed?");, +                    .source(XContentType.JSON, "title",, +                            "Current status and upcoming changes in Elasticsearch");, +                    .source(XContentType.JSON, "title",, +                            "The Future of Federated Search in Elasticsearch");, +                    logger.debug("Executing bulk [{}] with {} requests",, +                            executionId, numberOfActions);]