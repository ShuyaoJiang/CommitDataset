[+++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +                final TransportService transportService = injector.getInstance(TransportService.class);, +                transportService.start();, +                transportService.acceptIncomingRequests();, +, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +                final TransportService transportService = injector.getInstance(TransportService.class);, +                transportService.start();, +                transportService.acceptIncomingRequests();, +, +++ b/core/src/main/java/org/elasticsearch/discovery/Discovery.java, +    /**, +     * Triggers the first join cycle, +     */, +    void startInitialJoin();, +, +, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +                final TransportService transportService = injector.getInstance(TransportService.class);, +                transportService.start();, +                transportService.acceptIncomingRequests();, +, +++ b/core/src/main/java/org/elasticsearch/discovery/Discovery.java, +    /**, +     * Triggers the first join cycle, +     */, +    void startInitialJoin();, +, +, +++ b/core/src/main/java/org/elasticsearch/discovery/DiscoveryService.java, +    public void joinClusterAndWaitForInitialState() {, +            discovery.startInitialJoin();, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +                final TransportService transportService = injector.getInstance(TransportService.class);, +                transportService.start();, +                transportService.acceptIncomingRequests();, +, +++ b/core/src/main/java/org/elasticsearch/discovery/Discovery.java, +    /**, +     * Triggers the first join cycle, +     */, +    void startInitialJoin();, +, +, +++ b/core/src/main/java/org/elasticsearch/discovery/DiscoveryService.java, +    public void joinClusterAndWaitForInitialState() {, +            discovery.startInitialJoin();, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +, +    }, +, +    @Override, +    public void startInitialJoin() {, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +                final TransportService transportService = injector.getInstance(TransportService.class);, +                transportService.start();, +                transportService.acceptIncomingRequests();, +, +++ b/core/src/main/java/org/elasticsearch/discovery/Discovery.java, +    /**, +     * Triggers the first join cycle, +     */, +    void startInitialJoin();, +, +, +++ b/core/src/main/java/org/elasticsearch/discovery/DiscoveryService.java, +    public void joinClusterAndWaitForInitialState() {, +            discovery.startInitialJoin();, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +, +    }, +, +    @Override, +    public void startInitialJoin() {, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +    }, +    @Override, +    public void startInitialJoin() {, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +                final TransportService transportService = injector.getInstance(TransportService.class);, +                transportService.start();, +                transportService.acceptIncomingRequests();, +, +++ b/core/src/main/java/org/elasticsearch/discovery/Discovery.java, +    /**, +     * Triggers the first join cycle, +     */, +    void startInitialJoin();, +, +, +++ b/core/src/main/java/org/elasticsearch/discovery/DiscoveryService.java, +    public void joinClusterAndWaitForInitialState() {, +            discovery.startInitialJoin();, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +, +    }, +, +    @Override, +    public void startInitialJoin() {, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java]