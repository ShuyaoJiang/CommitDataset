[+++ b/src/main/java/org/elasticsearch/action/count/CountRequestBuilder.java, +import org.elasticsearch.ExceptionsHelper;, +import org.elasticsearch.common.xcontent.XContentHelper;, +, +    @Override, +    public String toString() {, +        if (sourceBuilder != null) {, +            return sourceBuilder.toString();, +        }, +        if (request.source() != null) {, +            try {, +                return XContentHelper.convertToJson(request.source().toBytesArray(), false, true);, +            } catch(Exception e) {, +                return "{ \"error\" : \"" + ExceptionsHelper.detailedMessage(e) + "\"}";, +            }, +        }, +        return new QuerySourceBuilder().toString();, +    }, +++ b/src/main/java/org/elasticsearch/action/count/CountRequestBuilder.java, +import org.elasticsearch.ExceptionsHelper;, +import org.elasticsearch.common.xcontent.XContentHelper;, +, +    @Override, +    public String toString() {, +        if (sourceBuilder != null) {, +            return sourceBuilder.toString();, +        }, +        if (request.source() != null) {, +            try {, +                return XContentHelper.convertToJson(request.source().toBytesArray(), false, true);, +            } catch(Exception e) {, +                return "{ \"error\" : \"" + ExceptionsHelper.detailedMessage(e) + "\"}";, +            }, +        }, +        return new QuerySourceBuilder().toString();, +    }, +++ b/src/main/java/org/elasticsearch/action/support/QuerySourceBuilder.java, +import org.elasticsearch.ExceptionsHelper;, +, +    @Override, +    public String toString() {, +        try {, +            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON).prettyPrint();, +            toXContent(builder, ToXContent.EMPTY_PARAMS);, +            return builder.string();, +        } catch (Exception e) {, +            return "{ \"error\" : \"" + ExceptionsHelper.detailedMessage(e) + "\"}";, +        }, +    }, +++ b/src/main/java/org/elasticsearch/action/count/CountRequestBuilder.java, +import org.elasticsearch.ExceptionsHelper;, +import org.elasticsearch.common.xcontent.XContentHelper;, +, +    @Override, +    public String toString() {, +        if (sourceBuilder != null) {, +            return sourceBuilder.toString();, +        }, +        if (request.source() != null) {, +            try {, +                return XContentHelper.convertToJson(request.source().toBytesArray(), false, true);, +            } catch(Exception e) {, +                return "{ \"error\" : \"" + ExceptionsHelper.detailedMessage(e) + "\"}";, +            }, +        }, +        return new QuerySourceBuilder().toString();, +    }, +++ b/src/main/java/org/elasticsearch/action/support/QuerySourceBuilder.java, +import org.elasticsearch.ExceptionsHelper;, +, +    @Override, +    public String toString() {, +        try {, +            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON).prettyPrint();, +            toXContent(builder, ToXContent.EMPTY_PARAMS);, +            return builder.string();, +        } catch (Exception e) {, +            return "{ \"error\" : \"" + ExceptionsHelper.detailedMessage(e) + "\"}";, +        }, +    }, +++ b/src/test/java/org/elasticsearch/action/count/CountRequestBuilderTests.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +]