[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.search.aggregations.bucket.histogram.AutoDateHistogramAggregationBuilder;, +import org.elasticsearch.search.aggregations.bucket.histogram.ParsedAutoDateHistogram;, +        map.put(AutoDateHistogramAggregationBuilder.NAME, (p, c) -> ParsedAutoDateHistogram.fromXContent(p, (String) c));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.search.aggregations.bucket.histogram.AutoDateHistogramAggregationBuilder;, +import org.elasticsearch.search.aggregations.bucket.histogram.ParsedAutoDateHistogram;, +        map.put(AutoDateHistogramAggregationBuilder.NAME, (p, c) -> ParsedAutoDateHistogram.fromXContent(p, (String) c));, +++ b/docs/reference/aggregations/bucket.asciidoc, +include::bucket/autodatehistogram-aggregation.asciidoc[], +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.search.aggregations.bucket.histogram.AutoDateHistogramAggregationBuilder;, +import org.elasticsearch.search.aggregations.bucket.histogram.ParsedAutoDateHistogram;, +        map.put(AutoDateHistogramAggregationBuilder.NAME, (p, c) -> ParsedAutoDateHistogram.fromXContent(p, (String) c));, +++ b/docs/reference/aggregations/bucket.asciidoc, +include::bucket/autodatehistogram-aggregation.asciidoc[], +, +++ b/docs/reference/aggregations/bucket/autodatehistogram-aggregation.asciidoc, +[[search-aggregations-bucket-autodatehistogram-aggregation]], +=== Auto-interval Date Histogram Aggregation, +, +A multi-bucket aggregation similar to the <<search-aggregations-bucket-datehistogram-aggregation>> except , +instead of providing an interval to use as the width of each bucket, a target number of buckets is provided, +indicating the number of buckets needed and the interval of the buckets is automatically chosen to best achieve, +that target. The number of buckets returned will always be less than or equal to this target number., +, +The buckets field is optional, and will default to 10 buckets if not specified., +, +Requesting a target of 10 buckets., +, +[source,js], +--------------------------------------------------, +POST /sales/_search?size=0, +{, +    "aggs" : {, +        "sales_over_time" : {, +            "auto_date_histogram" : {, +                "field" : "date",, +                "buckets" : 10, +            }, +        }, +    }, +}, +--------------------------------------------------, +// CONSOLE, +// TEST[setup:sales], +, +==== Keys, +, +Internally, a date is represented as a 64 bit number representing a timestamp, +in milliseconds-since-the-epoch. These timestamps are returned as the bucket, +++key++s. The `key_as_string` is the same timestamp converted to a formatted, +date string using the format specified with the `format` parameter:, +, +TIP: If no `format` is specified, then it will use the first date, +<<mapping-date-format,format>> specified in the field mapping., +, +[source,js], +--------------------------------------------------, +POST /sales/_search?size=0, +{, +    "aggs" : {, +        "sales_over_time" : {, +            "auto_date_histogram" : {, +                "field" : "date",, +                "buckets" : 5,, +                "format" : "yyyy-MM-dd" <1>, +            }, +        }, +    }, +}, +--------------------------------------------------, +// CONSOLE, +// TEST[setup:sales], +, +<1> Supports expressive date <<date-format-pattern,format pattern>>, +, +Response:, +, +[source,js], +--------------------------------------------------, +{, +    ..., +    "aggregations": {, +        "sales_over_time": {, +            "buckets": [, +                {, +                    "key_as_string": "2015-01-01",, +                    "key": 1420070400000,, +                    "doc_count": 3, +                },, +                {, +                    "key_as_string": "2015-02-01",, +                    "key": 1422748800000,, +                    "doc_count": 2, +                },, +                {, +                    "key_as_string": "2015-03-01",, +                    "key": 1425168000000,]