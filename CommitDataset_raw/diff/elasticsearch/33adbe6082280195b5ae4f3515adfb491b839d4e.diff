[+++ b/docs/reference/indices/put-mapping.asciidoc, +merged. The `ignore_conflicts` parameters can be used to control if, +conflicts should be ignored or not, by default, it is set to `false`, +which means conflicts are *not* ignored., +++ b/docs/reference/indices/put-mapping.asciidoc, +merged. The `ignore_conflicts` parameters can be used to control if, +conflicts should be ignored or not, by default, it is set to `false`, +which means conflicts are *not* ignored., +++ b/docs/reference/migration/migrate_2_0.asciidoc, +++ b/docs/reference/indices/put-mapping.asciidoc, +merged. The `ignore_conflicts` parameters can be used to control if, +conflicts should be ignored or not, by default, it is set to `false`, +which means conflicts are *not* ignored., +++ b/docs/reference/migration/migrate_2_0.asciidoc, +++ b/rest-api-spec/api/indices.put_mapping.json, +        "ignore_conflicts": {, +          "type" : "boolean",, +          "description" : "Specify whether to ignore conflicts while updating the mapping (default: false)", +        },, +++ b/docs/reference/indices/put-mapping.asciidoc, +merged. The `ignore_conflicts` parameters can be used to control if, +conflicts should be ignored or not, by default, it is set to `false`, +which means conflicts are *not* ignored., +++ b/docs/reference/migration/migrate_2_0.asciidoc, +++ b/rest-api-spec/api/indices.put_mapping.json, +        "ignore_conflicts": {, +          "type" : "boolean",, +          "description" : "Specify whether to ignore conflicts while updating the mapping (default: false)", +        },, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingClusterStateUpdateRequest.java, +    private boolean ignoreConflicts = false;, +, +, +    public boolean ignoreConflicts() {, +        return ignoreConflicts;, +    }, +, +    public PutMappingClusterStateUpdateRequest ignoreConflicts(boolean ignoreConflicts) {, +        this.ignoreConflicts = ignoreConflicts;, +        return this;, +    }, +++ b/docs/reference/indices/put-mapping.asciidoc, +merged. The `ignore_conflicts` parameters can be used to control if, +conflicts should be ignored or not, by default, it is set to `false`, +which means conflicts are *not* ignored., +++ b/docs/reference/migration/migrate_2_0.asciidoc, +++ b/rest-api-spec/api/indices.put_mapping.json, +        "ignore_conflicts": {, +          "type" : "boolean",, +          "description" : "Specify whether to ignore conflicts while updating the mapping (default: false)", +        },, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingClusterStateUpdateRequest.java, +    private boolean ignoreConflicts = false;, +, +, +    public boolean ignoreConflicts() {, +        return ignoreConflicts;, +    }, +, +    public PutMappingClusterStateUpdateRequest ignoreConflicts(boolean ignoreConflicts) {, +        this.ignoreConflicts = ignoreConflicts;, +        return this;, +    }, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequest.java, + * that can't be merged are detected, the request will be rejected unless the {@link #ignoreConflicts(boolean)}, + * is set. In such a case, the duplicate mappings will be rejected., +    private boolean ignoreConflicts = false;, +, +    /**, +     * If there is already a mapping definition registered against the type, then it will be merged. If there are, +     * elements that can't be merged are detected, the request will be rejected unless the, +     * {@link #ignoreConflicts(boolean)} is set. In such a case, the duplicate mappings will be rejected., +     */, +    public boolean ignoreConflicts() {, +        return ignoreConflicts;, +    }, +, +    /**, +     * If there is already a mapping definition registered against the type, then it will be merged. If there are, +     * elements that can't be merged are detected, the request will be rejected unless the, +     * {@link #ignoreConflicts(boolean)} is set. In such a case, the duplicate mappings will be rejected., +     */, +    public PutMappingRequest ignoreConflicts(boolean ignoreDuplicates) {, +        this.ignoreConflicts = ignoreDuplicates;, +        return this;, +    }, +, +        ignoreConflicts = in.readBoolean();, +        out.writeBoolean(ignoreConflicts);, +++ b/docs/reference/indices/put-mapping.asciidoc, +merged. The `ignore_conflicts` parameters can be used to control if, +conflicts should be ignored or not, by default, it is set to `false`, +which means conflicts are *not* ignored., +++ b/docs/reference/migration/migrate_2_0.asciidoc, +++ b/rest-api-spec/api/indices.put_mapping.json, +        "ignore_conflicts": {, +          "type" : "boolean",, +          "description" : "Specify whether to ignore conflicts while updating the mapping (default: false)", +        },, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingClusterStateUpdateRequest.java]