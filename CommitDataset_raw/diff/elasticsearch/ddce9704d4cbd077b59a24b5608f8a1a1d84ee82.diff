[+++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/ops/bulk/BulkBenchmarkTask.java, +import org.apache.logging.log4j.LogManager;, +        private static final Logger logger = LogManager.getLogger(BulkIndexer.class);, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/ops/bulk/BulkBenchmarkTask.java, +import org.apache.logging.log4j.LogManager;, +        private static final Logger logger = LogManager.getLogger(BulkIndexer.class);, +++ b/plugins/discovery-ec2/src/test/java/org/elasticsearch/discovery/ec2/AmazonEC2Mock.java, +import org.apache.logging.log4j.LogManager;, +    private static final Logger logger = LogManager.getLogger(AmazonEC2Mock.class);, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/ops/bulk/BulkBenchmarkTask.java, +import org.apache.logging.log4j.LogManager;, +        private static final Logger logger = LogManager.getLogger(BulkIndexer.class);, +++ b/plugins/discovery-ec2/src/test/java/org/elasticsearch/discovery/ec2/AmazonEC2Mock.java, +import org.apache.logging.log4j.LogManager;, +    private static final Logger logger = LogManager.getLogger(AmazonEC2Mock.class);, +++ b/plugins/discovery-gce/src/main/java/org/elasticsearch/discovery/gce/RetryHttpInitializerWrapper.java, +import org.apache.logging.log4j.Logger;, +import org.apache.logging.log4j.LogManager;, +    private static final Logger logger = LogManager.getLogger(RetryHttpInitializerWrapper.class);, +    private TimeValue maxWait;, +, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/ops/bulk/BulkBenchmarkTask.java, +import org.apache.logging.log4j.LogManager;, +        private static final Logger logger = LogManager.getLogger(BulkIndexer.class);, +++ b/plugins/discovery-ec2/src/test/java/org/elasticsearch/discovery/ec2/AmazonEC2Mock.java, +import org.apache.logging.log4j.LogManager;, +    private static final Logger logger = LogManager.getLogger(AmazonEC2Mock.class);, +++ b/plugins/discovery-gce/src/main/java/org/elasticsearch/discovery/gce/RetryHttpInitializerWrapper.java, +import org.apache.logging.log4j.Logger;, +import org.apache.logging.log4j.LogManager;, +    private static final Logger logger = LogManager.getLogger(RetryHttpInitializerWrapper.class);, +    private TimeValue maxWait;, +, +++ b/qa/evil-tests/src/test/java/org/elasticsearch/common/logging/EvilLoggerConfigurationTests.java, +        final Level level = LogManager.getLogger("test").getLevel();, +        final Logger logger = LogManager.getLogger(loggerName);, +        final Logger logger = LogManager.getLogger(loggerName);, +        assertThat(LogManager.getLogger("x").getLevel(), equalTo(Level.TRACE));, +        assertThat(LogManager.getLogger("x.y").getLevel(), equalTo(Level.DEBUG));, +        Loggers.setLevel(LogManager.getLogger("x"), level);, +        assertThat(LogManager.getLogger("x").getLevel(), equalTo(level));, +        assertThat(LogManager.getLogger("x.y").getLevel(), equalTo(level));, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/ops/bulk/BulkBenchmarkTask.java, +import org.apache.logging.log4j.LogManager;, +        private static final Logger logger = LogManager.getLogger(BulkIndexer.class);, +++ b/plugins/discovery-ec2/src/test/java/org/elasticsearch/discovery/ec2/AmazonEC2Mock.java, +import org.apache.logging.log4j.LogManager;, +    private static final Logger logger = LogManager.getLogger(AmazonEC2Mock.class);, +++ b/plugins/discovery-gce/src/main/java/org/elasticsearch/discovery/gce/RetryHttpInitializerWrapper.java, +import org.apache.logging.log4j.Logger;, +import org.apache.logging.log4j.LogManager;, +    private static final Logger logger = LogManager.getLogger(RetryHttpInitializerWrapper.class);, +    private TimeValue maxWait;, +, +++ b/qa/evil-tests/src/test/java/org/elasticsearch/common/logging/EvilLoggerConfigurationTests.java, +        final Level level = LogManager.getLogger("test").getLevel();, +        final Logger logger = LogManager.getLogger(loggerName);, +        final Logger logger = LogManager.getLogger(loggerName);, +        assertThat(LogManager.getLogger("x").getLevel(), equalTo(Level.TRACE));, +        assertThat(LogManager.getLogger("x.y").getLevel(), equalTo(Level.DEBUG));, +        Loggers.setLevel(LogManager.getLogger("x"), level);, +        assertThat(LogManager.getLogger("x").getLevel(), equalTo(level));, +        assertThat(LogManager.getLogger("x.y").getLevel(), equalTo(level));, +++ b/qa/evil-tests/src/test/java/org/elasticsearch/common/logging/EvilLoggerTests.java, +        final Logger testLogger = LogManager.getLogger("test");, +        final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger("deprecation"));, +        final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger("deprecation"));, +        final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger("deprecation"));, +        final Logger hasConsoleAppender = LogManager.getLogger("has_console_appender");, +        final Logger hasCountingNoOpAppender = LogManager.getLogger("has_counting_no_op_appender");, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/ops/bulk/BulkBenchmarkTask.java, +import org.apache.logging.log4j.LogManager;, +        private static final Logger logger = LogManager.getLogger(BulkIndexer.class);, +++ b/plugins/discovery-ec2/src/test/java/org/elasticsearch/discovery/ec2/AmazonEC2Mock.java, +import org.apache.logging.log4j.LogManager;, +    private static final Logger logger = LogManager.getLogger(AmazonEC2Mock.class);, +++ b/plugins/discovery-gce/src/main/java/org/elasticsearch/discovery/gce/RetryHttpInitializerWrapper.java, +import org.apache.logging.log4j.Logger;, +import org.apache.logging.log4j.LogManager;, +    private static final Logger logger = LogManager.getLogger(RetryHttpInitializerWrapper.class);, +    private TimeValue maxWait;, +, +++ b/qa/evil-tests/src/test/java/org/elasticsearch/common/logging/EvilLoggerConfigurationTests.java, +        final Level level = LogManager.getLogger("test").getLevel();, +        final Logger logger = LogManager.getLogger(loggerName);, +        final Logger logger = LogManager.getLogger(loggerName);, +        assertThat(LogManager.getLogger("x").getLevel(), equalTo(Level.TRACE));, +        assertThat(LogManager.getLogger("x.y").getLevel(), equalTo(Level.DEBUG));, +        Loggers.setLevel(LogManager.getLogger("x"), level);, +        assertThat(LogManager.getLogger("x").getLevel(), equalTo(level));, +        assertThat(LogManager.getLogger("x.y").getLevel(), equalTo(level));, +++ b/qa/evil-tests/src/test/java/org/elasticsearch/common/logging/EvilLoggerTests.java, +        final Logger testLogger = LogManager.getLogger("test");, +        final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger("deprecation"));, +        final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger("deprecation"));, +        final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger("deprecation"));, +        final Logger hasConsoleAppender = LogManager.getLogger("has_console_appender");, +        final Logger hasCountingNoOpAppender = LogManager.getLogger("has_counting_no_op_appender");, +++ b/qa/smoke-test-client/src/test/java/org/elasticsearch/smoketest/ESSmokeClientTestCase.java, +import org.apache.logging.log4j.LogManager;]