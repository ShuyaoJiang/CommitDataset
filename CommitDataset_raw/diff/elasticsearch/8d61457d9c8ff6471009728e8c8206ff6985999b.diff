[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.protocol.xpack.license.DeleteLicenseRequest;, +import org.elasticsearch.protocol.xpack.license.GetLicenseRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +    static Request putLicense(PutLicenseRequest putLicenseRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("license"), +            .build();, +        Request request = new Request(HttpPut.METHOD_NAME, endpoint);, +        parameters.withTimeout(putLicenseRequest.timeout());, +        parameters.withMasterTimeout(putLicenseRequest.masterNodeTimeout());, +        if (putLicenseRequest.isAcknowledge()) {, +            parameters.putParam("acknowledge", "true");, +        }, +        request.setJsonEntity(putLicenseRequest.getLicenseDefinition());, +        return request;, +    }, +, +    static Request getLicense(GetLicenseRequest getLicenseRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("license"), +            .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);, +        Params parameters = new Params(request);, +        parameters.withLocal(getLicenseRequest.local());, +        return request;, +    }, +, +    static Request deleteLicense(DeleteLicenseRequest deleteLicenseRequest) {, +        Request request = new Request(HttpDelete.METHOD_NAME, "/_xpack/license");, +        Params parameters = new Params(request);, +        parameters.withTimeout(deleteLicenseRequest.timeout());, +        parameters.withMasterTimeout(deleteLicenseRequest.masterNodeTimeout());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.protocol.xpack.license.DeleteLicenseRequest;, +import org.elasticsearch.protocol.xpack.license.GetLicenseRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +    static Request putLicense(PutLicenseRequest putLicenseRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("license"), +            .build();, +        Request request = new Request(HttpPut.METHOD_NAME, endpoint);, +        parameters.withTimeout(putLicenseRequest.timeout());, +        parameters.withMasterTimeout(putLicenseRequest.masterNodeTimeout());, +        if (putLicenseRequest.isAcknowledge()) {, +            parameters.putParam("acknowledge", "true");, +        }, +        request.setJsonEntity(putLicenseRequest.getLicenseDefinition());, +        return request;, +    }, +, +    static Request getLicense(GetLicenseRequest getLicenseRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("license"), +            .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);, +        Params parameters = new Params(request);, +        parameters.withLocal(getLicenseRequest.local());, +        return request;, +    }, +, +    static Request deleteLicense(DeleteLicenseRequest deleteLicenseRequest) {, +        Request request = new Request(HttpDelete.METHOD_NAME, "/_xpack/license");, +        Params parameters = new Params(request);, +        parameters.withTimeout(deleteLicenseRequest.timeout());, +        parameters.withMasterTimeout(deleteLicenseRequest.masterNodeTimeout());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/XPackClient.java, +        return restHighLevelClient.performRequestAndParseEntity(request, XPackRequestConverters::info, options,, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, XPackRequestConverters::info, options,, +        return restHighLevelClient.performRequestAndParseEntity(request, XPackRequestConverters::usage, options,, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, XPackRequestConverters::usage, options,, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.protocol.xpack.license.DeleteLicenseRequest;, +import org.elasticsearch.protocol.xpack.license.GetLicenseRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +    static Request putLicense(PutLicenseRequest putLicenseRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("license"), +            .build();, +        Request request = new Request(HttpPut.METHOD_NAME, endpoint);, +        parameters.withTimeout(putLicenseRequest.timeout());, +        parameters.withMasterTimeout(putLicenseRequest.masterNodeTimeout());, +        if (putLicenseRequest.isAcknowledge()) {, +            parameters.putParam("acknowledge", "true");, +        }, +        request.setJsonEntity(putLicenseRequest.getLicenseDefinition());, +        return request;, +    }, +, +    static Request getLicense(GetLicenseRequest getLicenseRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("license"), +            .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);]