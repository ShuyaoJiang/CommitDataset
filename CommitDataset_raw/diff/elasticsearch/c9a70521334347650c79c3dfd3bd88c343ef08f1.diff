[+++ b/elasticsearch/x-pack/license-plugin/src/test/java/org/elasticsearch/license/plugin/core/AbstractLicenseServiceTestCase.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.license.plugin.core;, +, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.cluster.block.ClusterBlocks;, +import org.elasticsearch.cluster.metadata.MetaData;, +import org.elasticsearch.cluster.node.DiscoveryNode;, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +import org.elasticsearch.cluster.service.ClusterService;, +import org.elasticsearch.common.component.Lifecycle;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.transport.DummyTransportAddress;, +import org.elasticsearch.license.core.License;, +import org.elasticsearch.test.ESTestCase;, +import org.elasticsearch.transport.TransportService;, +import org.elasticsearch.xpack.scheduler.SchedulerEngine;, +import org.elasticsearch.xpack.support.clock.ClockMock;, +import org.junit.Before;, +, +import static java.util.Collections.emptyMap;, +import static java.util.Collections.emptySet;, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.when;, +, +public abstract class AbstractLicenseServiceTestCase extends ESTestCase {, +, +    protected LicensesService licensesService;, +    protected ClusterService clusterService;, +    protected TransportService transportService;, +    protected ClockMock clock;, +    protected SchedulerEngine schedulerEngine;, +, +    @Before, +    public void init() throws Exception {, +        clusterService = mock(ClusterService.class);, +        transportService = mock(TransportService.class);, +        clock = new ClockMock();, +        schedulerEngine = mock(SchedulerEngine.class);, +        licensesService = new LicensesService(Settings.EMPTY, clusterService, transportService, clock) {, +            @Override, +            protected SchedulerEngine getScheduler() {, +                return schedulerEngine;, +            }, +        };, +    }, +, +    protected void setInitialState(License license) {, +        ClusterState state = mock(ClusterState.class);, +        final ClusterBlocks noBlock = ClusterBlocks.builder().build();, +        when(state.blocks()).thenReturn(noBlock);, +        MetaData metaData = mock(MetaData.class);, +        when(metaData.custom(LicensesMetaData.TYPE)).thenReturn(new LicensesMetaData(license));, +        when(state.metaData()).thenReturn(metaData);, +        final DiscoveryNodes discoveryNodes = mock(DiscoveryNodes.class);, +        final DiscoveryNode mockNode = new DiscoveryNode("b", DummyTransportAddress.INSTANCE, emptyMap(), emptySet(), Version.CURRENT);, +        when(discoveryNodes.getMasterNode()).thenReturn(mockNode);, +        when(state.nodes()).thenReturn(discoveryNodes);, +        when(clusterService.state()).thenReturn(state);, +        when(clusterService.lifecycleState()).thenReturn(Lifecycle.State.STARTED);, +    }, +}, +++ b/elasticsearch/x-pack/license-plugin/src/test/java/org/elasticsearch/license/plugin/core/AbstractLicenseServiceTestCase.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.license.plugin.core;, +, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.cluster.block.ClusterBlocks;, +import org.elasticsearch.cluster.metadata.MetaData;, +import org.elasticsearch.cluster.node.DiscoveryNode;, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +import org.elasticsearch.cluster.service.ClusterService;, +import org.elasticsearch.common.component.Lifecycle;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.transport.DummyTransportAddress;, +import org.elasticsearch.license.core.License;, +import org.elasticsearch.test.ESTestCase;, +import org.elasticsearch.transport.TransportService;, +import org.elasticsearch.xpack.scheduler.SchedulerEngine;, +import org.elasticsearch.xpack.support.clock.ClockMock;, +import org.junit.Before;, +, +import static java.util.Collections.emptyMap;, +import static java.util.Collections.emptySet;, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.when;, +, +public abstract class AbstractLicenseServiceTestCase extends ESTestCase {, +, +    protected LicensesService licensesService;]