[+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +        IndexMetaData newMetaData = indexMetaData;, +        return indexMetaData.upgradeVersion().onOrAfter(Version.V_3_0_0);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +        IndexMetaData newMetaData = indexMetaData;, +        return indexMetaData.upgradeVersion().onOrAfter(Version.V_3_0_0);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataService.java, +import org.elasticsearch.cluster.routing.Murmur3HashFunction;, +        return indexMdLocks[MathUtils.mod(Murmur3HashFunction.hash(index), indexMdLocks.length)];, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +        IndexMetaData newMetaData = indexMetaData;, +        return indexMetaData.upgradeVersion().onOrAfter(Version.V_3_0_0);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataService.java, +import org.elasticsearch.cluster.routing.Murmur3HashFunction;, +        return indexMdLocks[MathUtils.mod(Murmur3HashFunction.hash(index), indexMdLocks.length)];, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +        IndexMetaData newMetaData = indexMetaData;, +        return indexMetaData.upgradeVersion().onOrAfter(Version.V_3_0_0);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataService.java, +import org.elasticsearch.cluster.routing.Murmur3HashFunction;, +        return indexMdLocks[MathUtils.mod(Murmur3HashFunction.hash(index), indexMdLocks.length)];, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +        IndexMetaData newMetaData = indexMetaData;, +        return indexMetaData.upgradeVersion().onOrAfter(Version.V_3_0_0);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataService.java, +import org.elasticsearch.cluster.routing.Murmur3HashFunction;, +        return indexMdLocks[MathUtils.mod(Murmur3HashFunction.hash(index), indexMdLocks.length)];, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/Murmur3HashFunction.java, +public final class Murmur3HashFunction {, +    private Murmur3HashFunction() {, +        //no instance, +    }, +, +    public static int hash(String routing) {, +        return hash(bytesToHash, 0, bytesToHash.length);, +    public static int hash(byte[] bytes, int offset, int length) {, +        return StringHelper.murmurhash3_x86_32(bytes, offset, length, 0);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +        IndexMetaData newMetaData = indexMetaData;, +        return indexMetaData.upgradeVersion().onOrAfter(Version.V_3_0_0);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataService.java, +import org.elasticsearch.cluster.routing.Murmur3HashFunction;, +        return indexMdLocks[MathUtils.mod(Murmur3HashFunction.hash(index), indexMdLocks.length)];, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/Murmur3HashFunction.java, +public final class Murmur3HashFunction {, +    private Murmur3HashFunction() {, +        //no instance, +    }, +, +    public static int hash(String routing) {, +        return hash(bytesToHash, 0, bytesToHash.length);, +    public static int hash(byte[] bytes, int offset, int length) {, +        return StringHelper.murmurhash3_x86_32(bytes, offset, length, 0);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/OperationRouting.java, +            return indexShard.activeInitializingShardsIt(Murmur3HashFunction.hash(preference));, +            return indexShard.preferAttributesActiveInitializingShardsIt(awarenessAttributes, nodes, Murmur3HashFunction.hash(preference));, +            hash = Murmur3HashFunction.hash(id);, +            hash = Murmur3HashFunction.hash(routing);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +        IndexMetaData newMetaData = indexMetaData;, +        return indexMetaData.upgradeVersion().onOrAfter(Version.V_3_0_0);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataService.java, +import org.elasticsearch.cluster.routing.Murmur3HashFunction;, +        return indexMdLocks[MathUtils.mod(Murmur3HashFunction.hash(index), indexMdLocks.length)];, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/Murmur3HashFunction.java, +public final class Murmur3HashFunction {, +    private Murmur3HashFunction() {, +        //no instance, +    }, +, +    public static int hash(String routing) {, +        return hash(bytesToHash, 0, bytesToHash.length);, +    public static int hash(byte[] bytes, int offset, int length) {, +        return StringHelper.murmurhash3_x86_32(bytes, offset, length, 0);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/OperationRouting.java]