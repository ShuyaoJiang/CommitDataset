[+++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +import org.elasticsearch.search.SearchShardTarget;, +        SearchShardTarget shardTarget = new SearchShardTarget(clusterService.localNode().id(), request.index(), request.shardId());, +                shardTarget, indexShard.searcher(), indexService, indexShard,, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +import org.elasticsearch.search.SearchShardTarget;, +        SearchShardTarget shardTarget = new SearchShardTarget(clusterService.localNode().id(), request.index(), request.shardId());, +                shardTarget, indexShard.searcher(), indexService, indexShard,, +++ b/src/main/java/org/elasticsearch/index/search/child/HasChildFilter.java, +            if (parentDocs == null) {, +                throw new ElasticSearchIllegalStateException("has_child filter/query hasn't executed properly");, +            }, +, +            if (collectedUids == null) {, +                throw new ElasticSearchIllegalStateException("has_child filter/query hasn't executed properly");, +            }, +, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +import org.elasticsearch.search.SearchShardTarget;, +        SearchShardTarget shardTarget = new SearchShardTarget(clusterService.localNode().id(), request.index(), request.shardId());, +                shardTarget, indexShard.searcher(), indexService, indexShard,, +++ b/src/main/java/org/elasticsearch/index/search/child/HasChildFilter.java, +            if (parentDocs == null) {, +                throw new ElasticSearchIllegalStateException("has_child filter/query hasn't executed properly");, +            }, +, +            if (collectedUids == null) {, +                throw new ElasticSearchIllegalStateException("has_child filter/query hasn't executed properly");, +            }, +, +++ b/src/main/java/org/elasticsearch/index/search/child/HasParentFilter.java, +            if (parents == null) {, +                throw new ElasticSearchIllegalStateException("has_parent filter/query hasn't executed properly");, +            }, +, +            if (parentDocs == null) {, +                throw new ElasticSearchIllegalStateException("has_parent filter/query hasn't executed properly");, +            }, +, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +import org.elasticsearch.search.SearchShardTarget;, +        SearchShardTarget shardTarget = new SearchShardTarget(clusterService.localNode().id(), request.index(), request.shardId());, +                shardTarget, indexShard.searcher(), indexService, indexShard,, +++ b/src/main/java/org/elasticsearch/index/search/child/HasChildFilter.java, +            if (parentDocs == null) {, +                throw new ElasticSearchIllegalStateException("has_child filter/query hasn't executed properly");, +            }, +, +            if (collectedUids == null) {, +                throw new ElasticSearchIllegalStateException("has_child filter/query hasn't executed properly");, +            }, +, +++ b/src/main/java/org/elasticsearch/index/search/child/HasParentFilter.java, +            if (parents == null) {, +                throw new ElasticSearchIllegalStateException("has_parent filter/query hasn't executed properly");, +            }, +, +            if (parentDocs == null) {, +                throw new ElasticSearchIllegalStateException("has_parent filter/query hasn't executed properly");, +            }, +, +++ b/src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java, +    // Need to know if this query is properly used, otherwise the results are unexpected for example in the count api, +    private boolean properlyInvoked = false;, +, +        properlyInvoked = true;, +        if (!properlyInvoked) {, +            throw new ElasticSearchIllegalStateException("top_children query hasn't executed properly");, +        }, +, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +import org.elasticsearch.search.SearchShardTarget;, +        SearchShardTarget shardTarget = new SearchShardTarget(clusterService.localNode().id(), request.index(), request.shardId());, +                shardTarget, indexShard.searcher(), indexService, indexShard,, +++ b/src/main/java/org/elasticsearch/index/search/child/HasChildFilter.java, +            if (parentDocs == null) {, +                throw new ElasticSearchIllegalStateException("has_child filter/query hasn't executed properly");, +            }, +, +            if (collectedUids == null) {, +                throw new ElasticSearchIllegalStateException("has_child filter/query hasn't executed properly");, +            }, +, +++ b/src/main/java/org/elasticsearch/index/search/child/HasParentFilter.java, +            if (parents == null) {, +                throw new ElasticSearchIllegalStateException("has_parent filter/query hasn't executed properly");, +            }, +, +            if (parentDocs == null) {, +                throw new ElasticSearchIllegalStateException("has_parent filter/query hasn't executed properly");, +            }, +, +++ b/src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java, +    // Need to know if this query is properly used, otherwise the results are unexpected for example in the count api, +    private boolean properlyInvoked = false;, +, +        properlyInvoked = true;, +        if (!properlyInvoked) {, +            throw new ElasticSearchIllegalStateException("top_children query hasn't executed properly");, +        }]