[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/collect/BoundedTreeSet.java, + * A {@link TreeSet} that is bounded by size., + *, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/collect/BoundedTreeSet.java, + * A {@link TreeSet} that is bounded by size., + *, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/ResponseHandlerFailureTransportException.java, + * @author kimchy (shay.banon), +public class ResponseHandlerFailureTransportException extends RemoteTransportException {, +    public ResponseHandlerFailureTransportException(Throwable cause) {, +        super(cause.getMessage(), cause);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/collect/BoundedTreeSet.java, + * A {@link TreeSet} that is bounded by size., + *, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/ResponseHandlerFailureTransportException.java, + * @author kimchy (shay.banon), +public class ResponseHandlerFailureTransportException extends RemoteTransportException {, +    public ResponseHandlerFailureTransportException(Throwable cause) {, +        super(cause.getMessage(), cause);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/TransportException.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/collect/BoundedTreeSet.java, + * A {@link TreeSet} that is bounded by size., + *, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/ResponseHandlerFailureTransportException.java, + * @author kimchy (shay.banon), +public class ResponseHandlerFailureTransportException extends RemoteTransportException {, +    public ResponseHandlerFailureTransportException(Throwable cause) {, +        super(cause.getMessage(), cause);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/TransportException.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/local/LocalTransport.java, +                        handleException(handler, new ResponseHandlerFailureTransportException(e));, +                handleException(handler, new ResponseHandlerFailureTransportException(e));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/collect/BoundedTreeSet.java, + * A {@link TreeSet} that is bounded by size., + *, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/ResponseHandlerFailureTransportException.java, + * @author kimchy (shay.banon), +public class ResponseHandlerFailureTransportException extends RemoteTransportException {, +    public ResponseHandlerFailureTransportException(Throwable cause) {, +        super(cause.getMessage(), cause);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/TransportException.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/local/LocalTransport.java, +                        handleException(handler, new ResponseHandlerFailureTransportException(e));, +                handleException(handler, new ResponseHandlerFailureTransportException(e));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/netty/MessageChannelHandler.java, +                            handleException(handler, new ResponseHandlerFailureTransportException(e));, +            handleException(handler, new ResponseHandlerFailureTransportException(e));, +            error = new RemoteTransportException(error.getMessage(), error);]