[+++ b/core/src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreIT.java, +        final Client client = client();, +        assertAcked(client.admin().cluster().preparePutRepository("test-repo").setType("mock").setVerify(false).setSettings(, +                Settings.builder(), +                    .put("location", repoPath), +                    .put("random_control_io_exception_rate", randomIntBetween(5, 20) / 100f), +                    .put("random", randomAsciiOfLength(10))));, +        assertThat(client.prepareSearch("test-idx").setSize(0).get().getHits().totalHits(), equalTo((long) numDocs));, +                client.admin().cluster().prepareCreateSnapshot("test-repo", "test-snap"), +        } catch (SnapshotCreationException | RepositoryException ex) {, +        assertAcked(client.admin().cluster().preparePutRepository("test-repo-2").setType("mock").setSettings(, +            client.admin().cluster().prepareCreateSnapshot("test-repo-2", "test-snap-2"), +        GetSnapshotsResponse getSnapshotsResponse = client.admin().cluster().prepareGetSnapshots("test-repo-2"), +++ b/core/src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreIT.java, +        final Client client = client();, +        assertAcked(client.admin().cluster().preparePutRepository("test-repo").setType("mock").setVerify(false).setSettings(, +                Settings.builder(), +                    .put("location", repoPath), +                    .put("random_control_io_exception_rate", randomIntBetween(5, 20) / 100f), +                    .put("random", randomAsciiOfLength(10))));, +        assertThat(client.prepareSearch("test-idx").setSize(0).get().getHits().totalHits(), equalTo((long) numDocs));, +                client.admin().cluster().prepareCreateSnapshot("test-repo", "test-snap"), +        } catch (SnapshotCreationException | RepositoryException ex) {, +        assertAcked(client.admin().cluster().preparePutRepository("test-repo-2").setType("mock").setSettings(, +            client.admin().cluster().prepareCreateSnapshot("test-repo-2", "test-snap-2"), +        GetSnapshotsResponse getSnapshotsResponse = client.admin().cluster().prepareGetSnapshots("test-repo-2"), +++ b/core/src/test/java/org/elasticsearch/snapshots/mockstore/MockRepository.java, +import com.carrotsearch.randomizedtesting.RandomizedContext;, +                if (RandomizedContext.current().getRandom().nextBoolean()) {, +                } else {, +                    // atomic move since this inherits from FsBlobContainer which provides atomic moves, +                    maybeIOExceptionOrBlock(targetBlob);, +                    super.move(sourceBlob, targetBlob);, +                }, +                if (RandomizedContext.current().getRandom().nextBoolean()) {, +}]