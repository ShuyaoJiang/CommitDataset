[+++ b/src/main/java/org/elasticsearch/monitor/os/OsInfo.java, +import org.elasticsearch.common.xcontent.XContentBuilderString;, +    static final class Fields {, +        static final XContentBuilderString OS = new XContentBuilderString("os");, +        static final XContentBuilderString REFRESH_INTERVAL = new XContentBuilderString("refresh_interval");, +        static final XContentBuilderString CPU = new XContentBuilderString("cpu");, +        static final XContentBuilderString VENDOR = new XContentBuilderString("vendor");, +        static final XContentBuilderString MODEL = new XContentBuilderString("model");, +        static final XContentBuilderString MHZ = new XContentBuilderString("mhz");, +        static final XContentBuilderString TOTAL_CORES = new XContentBuilderString("total_cores");, +        static final XContentBuilderString TOTAL_SOCKETS = new XContentBuilderString("total_sockets");, +        static final XContentBuilderString CORES_PER_SOCKET = new XContentBuilderString("cores_per_socket");, +        static final XContentBuilderString CACHE_SIZE = new XContentBuilderString("cache_size");, +        static final XContentBuilderString CACHE_SIZE_IN_BYTES = new XContentBuilderString("cache_size_in_bytes");, +, +        static final XContentBuilderString MEM = new XContentBuilderString("mem");, +        static final XContentBuilderString SWAP = new XContentBuilderString("swap");, +        static final XContentBuilderString TOTAL = new XContentBuilderString("total");, +        static final XContentBuilderString TOTAL_IN_BYTES = new XContentBuilderString("total_in_bytes");, +    }, +, +        builder.startObject(Fields.OS);, +        builder.field(Fields.REFRESH_INTERVAL, refreshInterval);, +            builder.startObject(Fields.CPU);, +            builder.field(Fields.VENDOR, cpu.vendor());, +            builder.field(Fields.MODEL, cpu.model());, +            builder.field(Fields.MHZ, cpu.mhz());, +            builder.field(Fields.TOTAL_CORES, cpu.totalCores());, +            builder.field(Fields.TOTAL_SOCKETS, cpu.totalSockets());, +            builder.field(Fields.CORES_PER_SOCKET, cpu.coresPerSocket());, +            builder.field(Fields.CACHE_SIZE, cpu.cacheSize().toString());, +            builder.field(Fields.CACHE_SIZE_IN_BYTES, cpu.cacheSize().bytes());, +            builder.startObject(Fields.MEM);, +            builder.field(Fields.TOTAL, mem.total().toString());, +            builder.field(Fields.TOTAL_IN_BYTES, mem.total);, +            builder.startObject(Fields.SWAP);, +            builder.field(Fields.TOTAL, swap.total().toString());, +            builder.field(Fields.TOTAL_IN_BYTES, swap.total);, +++ b/src/main/java/org/elasticsearch/monitor/os/OsInfo.java, +import org.elasticsearch.common.xcontent.XContentBuilderString;, +    static final class Fields {, +        static final XContentBuilderString OS = new XContentBuilderString("os");, +        static final XContentBuilderString REFRESH_INTERVAL = new XContentBuilderString("refresh_interval");, +        static final XContentBuilderString CPU = new XContentBuilderString("cpu");, +        static final XContentBuilderString VENDOR = new XContentBuilderString("vendor");, +        static final XContentBuilderString MODEL = new XContentBuilderString("model");, +        static final XContentBuilderString MHZ = new XContentBuilderString("mhz");, +        static final XContentBuilderString TOTAL_CORES = new XContentBuilderString("total_cores");, +        static final XContentBuilderString TOTAL_SOCKETS = new XContentBuilderString("total_sockets");, +        static final XContentBuilderString CORES_PER_SOCKET = new XContentBuilderString("cores_per_socket");, +        static final XContentBuilderString CACHE_SIZE = new XContentBuilderString("cache_size");, +        static final XContentBuilderString CACHE_SIZE_IN_BYTES = new XContentBuilderString("cache_size_in_bytes");, +, +        static final XContentBuilderString MEM = new XContentBuilderString("mem");, +        static final XContentBuilderString SWAP = new XContentBuilderString("swap");, +        static final XContentBuilderString TOTAL = new XContentBuilderString("total");, +        static final XContentBuilderString TOTAL_IN_BYTES = new XContentBuilderString("total_in_bytes");, +    }, +, +        builder.startObject(Fields.OS);, +        builder.field(Fields.REFRESH_INTERVAL, refreshInterval);, +            builder.startObject(Fields.CPU);, +            builder.field(Fields.VENDOR, cpu.vendor());, +            builder.field(Fields.MODEL, cpu.model());, +            builder.field(Fields.MHZ, cpu.mhz());, +            builder.field(Fields.TOTAL_CORES, cpu.totalCores());, +            builder.field(Fields.TOTAL_SOCKETS, cpu.totalSockets());, +            builder.field(Fields.CORES_PER_SOCKET, cpu.coresPerSocket());, +            builder.field(Fields.CACHE_SIZE, cpu.cacheSize().toString());, +            builder.field(Fields.CACHE_SIZE_IN_BYTES, cpu.cacheSize().bytes());, +            builder.startObject(Fields.MEM);, +            builder.field(Fields.TOTAL, mem.total().toString());, +            builder.field(Fields.TOTAL_IN_BYTES, mem.total);, +            builder.startObject(Fields.SWAP);, +            builder.field(Fields.TOTAL, swap.total().toString());, +            builder.field(Fields.TOTAL_IN_BYTES, swap.total);, +++ b/src/main/java/org/elasticsearch/monitor/os/OsStats.java, +import org.elasticsearch.common.xcontent.XContentBuilderString;, +    static final class Fields {, +        static final XContentBuilderString OS = new XContentBuilderString("os");, +        static final XContentBuilderString TIMESTAMP = new XContentBuilderString("timestamp");, +        static final XContentBuilderString UPTIME = new XContentBuilderString("uptime");, +        static final XContentBuilderString UPTIME_IN_MILLIS = new XContentBuilderString("uptime_in_millis");, +        static final XContentBuilderString LOAD_AVERAGE = new XContentBuilderString("load_average");, +, +        static final XContentBuilderString CPU = new XContentBuilderString("cpu");, +        static final XContentBuilderString SYS = new XContentBuilderString("sys");, +        static final XContentBuilderString USER = new XContentBuilderString("user");, +        static final XContentBuilderString IDLE = new XContentBuilderString("idle");, +, +        static final XContentBuilderString MEM = new XContentBuilderString("mem");, +        static final XContentBuilderString SWAP = new XContentBuilderString("swap");, +        static final XContentBuilderString FREE = new XContentBuilderString("free");, +        static final XContentBuilderString FREE_IN_BYTES = new XContentBuilderString("free_in_bytes");, +        static final XContentBuilderString USED = new XContentBuilderString("free");, +        static final XContentBuilderString USED_IN_BYTES = new XContentBuilderString("free_in_bytes");, +, +        static final XContentBuilderString FREE_PERCENT = new XContentBuilderString("free_percent");, +        static final XContentBuilderString USED_PERCENT = new XContentBuilderString("used_percent");, +]