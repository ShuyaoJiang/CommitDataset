[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/security/AuthenticateResponse.java, +    static final ParseField AUTHENTICATION_REALM = new ParseField("authentication_realm");, +    static final ParseField LOOKUP_REALM = new ParseField("lookup_realm");, +    static final ParseField REALM_NAME = new ParseField("name");, +    static final ParseField REALM_TYPE = new ParseField("type");, +                (String) a[3], (String) a[4]), (Boolean) a[5], (RealmInfo) a[6], (RealmInfo) a[7]));, +        final ConstructingObjectParser<RealmInfo, Void> realmInfoParser = new ConstructingObjectParser<>("realm_info",, +            a -> new RealmInfo((String) a[0], (String) a[1]));, +        realmInfoParser.declareString(constructorArg(), REALM_NAME);, +        realmInfoParser.declareString(constructorArg(), REALM_TYPE);, +        PARSER.declareObject(constructorArg(), realmInfoParser, AUTHENTICATION_REALM);, +        PARSER.declareObject(constructorArg(), realmInfoParser, LOOKUP_REALM);, +    private final RealmInfo authenticationRealm;, +    private final RealmInfo lookupRealm;, +, +    public AuthenticateResponse(User user, boolean enabled, RealmInfo authenticationRealm,, +                                RealmInfo lookupRealm) {, +        this.authenticationRealm = authenticationRealm;, +        this.lookupRealm = lookupRealm;, +    /**, +     * @return the realm that authenticated the user, +     */, +    public RealmInfo getAuthenticationRealm() {, +        return authenticationRealm;, +    }, +, +    /**, +     * @return the realm where the user information was looked up, +     */, +    public RealmInfo getLookupRealm() {, +        return lookupRealm;, +    }, +, +        if (this == o) return true;, +        if (o == null || getClass() != o.getClass()) return false;, +        AuthenticateResponse that = (AuthenticateResponse) o;, +        return enabled == that.enabled &&, +            Objects.equals(user, that.user) &&, +            Objects.equals(authenticationRealm, that.authenticationRealm) &&, +            Objects.equals(lookupRealm, that.lookupRealm);, +        return Objects.hash(user, enabled, authenticationRealm, lookupRealm);, +    public static class RealmInfo {, +        private String name;, +        private String type;, +, +        RealmInfo(String name, String type) {, +            this.name = name;, +            this.type = type;, +        }, +, +        public String getName() {, +            return name;, +        }, +, +        public String getType() {, +            return type;, +        }, +, +        @Override, +        public boolean equals(Object o) {, +            if (this == o) return true;, +            if (o == null || getClass() != o.getClass()) return false;, +            RealmInfo realmInfo = (RealmInfo) o;, +            return Objects.equals(name, realmInfo.name) &&, +                Objects.equals(type, realmInfo.type);, +        }, +, +        @Override, +        public int hashCode() {, +            return Objects.hash(name, type);, +        }, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/security/AuthenticateResponse.java, +    static final ParseField AUTHENTICATION_REALM = new ParseField("authentication_realm");, +    static final ParseField LOOKUP_REALM = new ParseField("lookup_realm");, +    static final ParseField REALM_NAME = new ParseField("name");, +    static final ParseField REALM_TYPE = new ParseField("type");, +                (String) a[3], (String) a[4]), (Boolean) a[5], (RealmInfo) a[6], (RealmInfo) a[7]));, +        final ConstructingObjectParser<RealmInfo, Void> realmInfoParser = new ConstructingObjectParser<>("realm_info",, +            a -> new RealmInfo((String) a[0], (String) a[1]));, +        realmInfoParser.declareString(constructorArg(), REALM_NAME);, +        realmInfoParser.declareString(constructorArg(), REALM_TYPE);, +        PARSER.declareObject(constructorArg(), realmInfoParser, AUTHENTICATION_REALM);, +        PARSER.declareObject(constructorArg(), realmInfoParser, LOOKUP_REALM);, +    private final RealmInfo authenticationRealm;, +    private final RealmInfo lookupRealm;, +, +    public AuthenticateResponse(User user, boolean enabled, RealmInfo authenticationRealm,, +                                RealmInfo lookupRealm) {, +        this.authenticationRealm = authenticationRealm;, +        this.lookupRealm = lookupRealm;, +    /**, +     * @return the realm that authenticated the user, +     */, +    public RealmInfo getAuthenticationRealm() {, +        return authenticationRealm;, +    }, +, +    /**, +     * @return the realm where the user information was looked up]