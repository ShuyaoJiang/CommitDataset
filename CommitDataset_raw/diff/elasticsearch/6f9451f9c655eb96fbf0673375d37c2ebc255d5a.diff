[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexGateway.java, +import org.elasticsearch.util.component.CloseableIndexComponent;, + * @author kimchy (shay.banon), +public interface IndexGateway extends IndexComponent, CloseableIndexComponent {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexGateway.java, +import org.elasticsearch.util.component.CloseableIndexComponent;, + * @author kimchy (shay.banon), +public interface IndexGateway extends IndexComponent, CloseableIndexComponent {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexShardGateway.java, +import org.elasticsearch.util.component.CloseableIndexComponent;, +public interface IndexShardGateway extends IndexShardComponent, CloseableIndexComponent {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexGateway.java, +import org.elasticsearch.util.component.CloseableIndexComponent;, + * @author kimchy (shay.banon), +public interface IndexGateway extends IndexComponent, CloseableIndexComponent {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexShardGateway.java, +import org.elasticsearch.util.component.CloseableIndexComponent;, +public interface IndexShardGateway extends IndexShardComponent, CloseableIndexComponent {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java, +import org.elasticsearch.util.component.CloseableIndexComponent;, +public class IndexShardGatewayService extends AbstractIndexShardComponent implements CloseableIndexComponent {, +    public void close(boolean delete) {, +        if (!delete && snapshotOnClose) {, +        // don't really delete the shard gateway if we are primary..., +        if (!indexShard.routingEntry().primary()) {, +            delete = false;, +        }, +        shardGateway.close(delete);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexGateway.java, +import org.elasticsearch.util.component.CloseableIndexComponent;, + * @author kimchy (shay.banon), +public interface IndexGateway extends IndexComponent, CloseableIndexComponent {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexShardGateway.java, +import org.elasticsearch.util.component.CloseableIndexComponent;, +public interface IndexShardGateway extends IndexShardComponent, CloseableIndexComponent {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java, +import org.elasticsearch.util.component.CloseableIndexComponent;, +public class IndexShardGatewayService extends AbstractIndexShardComponent implements CloseableIndexComponent {, +    public void close(boolean delete) {, +        if (!delete && snapshotOnClose) {, +        // don't really delete the shard gateway if we are primary..., +        if (!indexShard.routingEntry().primary()) {, +            delete = false;, +        }, +        shardGateway.close(delete);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/fs/FsIndexGateway.java, +import static org.elasticsearch.util.io.FileSystemUtils.*;, +, +    @Override public void close(boolean delete) {, +        try {, +            String[] files = indexGatewayHome.list();, +            if (files == null || files.length == 0) {, +                deleteRecursively(indexGatewayHome, true);, +        } catch (Exception e) {, +            // ignore, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexGateway.java, +import org.elasticsearch.util.component.CloseableIndexComponent;, + * @author kimchy (shay.banon), +public interface IndexGateway extends IndexComponent, CloseableIndexComponent {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexShardGateway.java, +import org.elasticsearch.util.component.CloseableIndexComponent;, +public interface IndexShardGateway extends IndexShardComponent, CloseableIndexComponent {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java, +import org.elasticsearch.util.component.CloseableIndexComponent;, +public class IndexShardGatewayService extends AbstractIndexShardComponent implements CloseableIndexComponent {, +    public void close(boolean delete) {, +        if (!delete && snapshotOnClose) {, +        // don't really delete the shard gateway if we are primary..., +        if (!indexShard.routingEntry().primary()) {, +            delete = false;, +        }, +        shardGateway.close(delete);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/fs/FsIndexGateway.java, +import static org.elasticsearch.util.io.FileSystemUtils.*;, +, +    @Override public void close(boolean delete) {, +        try {, +            String[] files = indexGatewayHome.list();, +            if (files == null || files.length == 0) {, +                deleteRecursively(indexGatewayHome, true);, +        } catch (Exception e) {, +            // ignore, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/fs/FsIndexShardGateway.java, +    @Override public void close(boolean delete) {, +        if (delete) {, +            deleteRecursively(location, true);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexGateway.java, +import org.elasticsearch.util.component.CloseableIndexComponent;, + * @author kimchy (shay.banon), +public interface IndexGateway extends IndexComponent, CloseableIndexComponent {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexShardGateway.java, +import org.elasticsearch.util.component.CloseableIndexComponent;, +public interface IndexShardGateway extends IndexShardComponent, CloseableIndexComponent {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java, +import org.elasticsearch.util.component.CloseableIndexComponent;, +public class IndexShardGatewayService extends AbstractIndexShardComponent implements CloseableIndexComponent {, +    public void close(boolean delete) {]