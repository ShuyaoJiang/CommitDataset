[+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/saml/SamlRealmTests.java, +import org.elasticsearch.xpack.security.authc.Realms;, +import java.util.stream.Stream;, +    public void testCorrectRealmSelected() throws Exception {, +        final String acsUrl = "https://idp.test/saml/login";, +        final UserRoleMapper roleMapper = mock(UserRoleMapper.class);, +        final EntityDescriptor idp = mockIdp();, +        final SpConfiguration sp = new SpConfiguration("<sp>", acsUrl, null, null, null, Collections.emptyList());, +        final SamlAuthenticator authenticator = mock(SamlAuthenticator.class);, +        final SamlLogoutRequestHandler logoutHandler = mock(SamlLogoutRequestHandler.class);, +        final Settings.Builder realmSettings = Settings.builder(), +            .put(getFullSettingKey(REALM_NAME, SamlRealmSettings.PRINCIPAL_ATTRIBUTE.getAttribute()), "uid"), +            .put(getFullSettingKey(REALM_NAME, SamlRealmSettings.IDP_METADATA_PATH), "http://url.to/metadata"), +            .put(getFullSettingKey(REALM_NAME, SamlRealmSettings.IDP_ENTITY_ID), TEST_IDP_ENTITY_ID), +            .put(getFullSettingKey(REALM_NAME, SamlRealmSettings.SP_ACS), acsUrl);, +        final RealmConfig config = buildConfig(realmSettings.build());, +        final SamlRealm realm = buildRealm(config, roleMapper, authenticator, logoutHandler, idp, sp);, +        final Realms realms = mock(Realms.class);, +        when(realms.realm(REALM_NAME)).thenReturn(realm);, +        when(realms.stream()).thenAnswer(i -> Stream.of(realm));, +        final String emptyRealmName = randomBoolean() ? null : "";, +        assertThat(SamlRealm.findSamlRealms(realms, emptyRealmName, acsUrl).size(), equalTo(1));, +        assertThat(SamlRealm.findSamlRealms(realms, emptyRealmName, acsUrl).get(0), equalTo(realm));, +        assertThat(SamlRealm.findSamlRealms(realms, "my-saml", acsUrl).size(), equalTo(1));, +        assertThat(SamlRealm.findSamlRealms(realms, "my-saml", acsUrl).get(0), equalTo(realm));, +        assertThat(SamlRealm.findSamlRealms(realms, "my-saml", null).size(), equalTo(1));, +        assertThat(SamlRealm.findSamlRealms(realms, "my-saml", null).get(0), equalTo(realm));, +        assertThat(SamlRealm.findSamlRealms(realms, "my-saml", "https://idp.test:443/saml/login").size(), equalTo(0));, +        assertThat(SamlRealm.findSamlRealms(realms, "incorrect", acsUrl).size(), equalTo(0));, +        assertThat(SamlRealm.findSamlRealms(realms, "incorrect", "https://idp.test:443/saml/login").size(), equalTo(0));, +    }, +]