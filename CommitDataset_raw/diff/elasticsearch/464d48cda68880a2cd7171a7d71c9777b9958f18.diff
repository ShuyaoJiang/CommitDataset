[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        m.put("lang-expression",     "org.elasticsearch.script.expression.ExpressionPlugin");, +        m.put("lang-groovy",         "org.elasticsearch.script.groovy.GroovyPlugin");, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        m.put("lang-expression",     "org.elasticsearch.script.expression.ExpressionPlugin");, +        m.put("lang-groovy",         "org.elasticsearch.script.groovy.GroovyPlugin");, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +grant codeBase "${es.security.plugin.lang-expression}" {, +  // needed to generate runtime classes, +  permission java.lang.RuntimePermission "createClassLoader";, +};, +, +grant codeBase "${es.security.plugin.lang-groovy}" {, +  // needed to generate runtime classes, +  permission java.lang.RuntimePermission "createClassLoader";, +  // needed by groovy engine, +  permission java.lang.RuntimePermission "accessClassInPackage.sun.reflect";, +  // needed by GroovyScriptEngineService to close its classloader (why?), +  permission java.lang.RuntimePermission "closeClassLoader";, +};, +, +  // TODO: make our own general ScriptServicePermission we check instead and , +  // check-before-createClassLoader for all scripting engines., +  // needed by ExceptionSerializationTests and RestTestCase for, +  // some hackish things they do. otherwise only needed by groovy , +  // (TODO: clean this up?), +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        m.put("lang-expression",     "org.elasticsearch.script.expression.ExpressionPlugin");, +        m.put("lang-groovy",         "org.elasticsearch.script.groovy.GroovyPlugin");, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +grant codeBase "${es.security.plugin.lang-expression}" {, +  // needed to generate runtime classes, +  permission java.lang.RuntimePermission "createClassLoader";, +};, +, +grant codeBase "${es.security.plugin.lang-groovy}" {, +  // needed to generate runtime classes, +  permission java.lang.RuntimePermission "createClassLoader";, +  // needed by groovy engine, +  permission java.lang.RuntimePermission "accessClassInPackage.sun.reflect";, +  // needed by GroovyScriptEngineService to close its classloader (why?), +  permission java.lang.RuntimePermission "closeClassLoader";, +};, +, +  // TODO: make our own general ScriptServicePermission we check instead and , +  // check-before-createClassLoader for all scripting engines., +  // needed by ExceptionSerializationTests and RestTestCase for, +  // some hackish things they do. otherwise only needed by groovy , +  // (TODO: clean this up?), +++ b/plugins/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngineService.java, +import java.security.AccessController;, +import java.security.PrivilegedAction;, +        // classloader created here, +        return AccessController.doPrivileged(new PrivilegedAction<Expression>() {, +            @Override, +            public Expression run() {, +        });, +    }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        m.put("lang-expression",     "org.elasticsearch.script.expression.ExpressionPlugin");, +        m.put("lang-groovy",         "org.elasticsearch.script.groovy.GroovyPlugin");, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +grant codeBase "${es.security.plugin.lang-expression}" {, +  // needed to generate runtime classes, +  permission java.lang.RuntimePermission "createClassLoader";, +};, +, +grant codeBase "${es.security.plugin.lang-groovy}" {, +  // needed to generate runtime classes, +  permission java.lang.RuntimePermission "createClassLoader";, +  // needed by groovy engine, +  permission java.lang.RuntimePermission "accessClassInPackage.sun.reflect";, +  // needed by GroovyScriptEngineService to close its classloader (why?), +  permission java.lang.RuntimePermission "closeClassLoader";, +};, +, +  // TODO: make our own general ScriptServicePermission we check instead and , +  // check-before-createClassLoader for all scripting engines., +  // needed by ExceptionSerializationTests and RestTestCase for, +  // some hackish things they do. otherwise only needed by groovy , +  // (TODO: clean this up?), +++ b/plugins/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngineService.java, +import java.security.AccessController;, +import java.security.PrivilegedAction;, +        // classloader created here, +        return AccessController.doPrivileged(new PrivilegedAction<Expression>() {, +            @Override, +            public Expression run() {, +        });, +    }, +++ b/plugins/lang-expression/src/test/java/org/elasticsearch/script/expression/MoreExpressionTests.java, +        assumeTrue("test creates classes directly, cannot run with security manager", System.getSecurityManager() == null);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        m.put("lang-expression",     "org.elasticsearch.script.expression.ExpressionPlugin");, +        m.put("lang-groovy",         "org.elasticsearch.script.groovy.GroovyPlugin");, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +grant codeBase "${es.security.plugin.lang-expression}" {, +  // needed to generate runtime classes, +  permission java.lang.RuntimePermission "createClassLoader";, +};]