[+++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShardOperationPermits.java, +    static final int TOTAL_PERMITS = Integer.MAX_VALUE;, +                    releasable = acquire();, +    private Releasable acquire() throws InterruptedException {, +        } else {, +            // this should never happen, if it does something is deeply wrong, +            throw new IllegalStateException("failed to obtain permit but operations are not delayed");, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShardOperationPermits.java, +    static final int TOTAL_PERMITS = Integer.MAX_VALUE;, +                    releasable = acquire();, +    private Releasable acquire() throws InterruptedException {, +        } else {, +            // this should never happen, if it does something is deeply wrong, +            throw new IllegalStateException("failed to obtain permit but operations are not delayed");, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardOperationPermitsTests.java, +    public void testNoPermitsRemaining() throws InterruptedException {, +        permits.semaphore.tryAcquire(IndexShardOperationPermits.TOTAL_PERMITS, 1, TimeUnit.SECONDS);, +        final IllegalStateException e = expectThrows(, +                IllegalStateException.class,, +                () -> this.permits.acquire(, +                        new ActionListener<Releasable>() {, +                            @Override, +                            public void onResponse(Releasable releasable) {, +                                assert false;, +                            }, +, +                            @Override, +                            public void onFailure(Exception e) {, +                                assert false;, +                            }, +                        },, +                        ThreadPool.Names.GENERIC,, +                        false));, +        assertThat(e, hasToString(containsString("failed to obtain permit but operations are not delayed")));, +        permits.semaphore.release(IndexShardOperationPermits.TOTAL_PERMITS);, +    }, +]