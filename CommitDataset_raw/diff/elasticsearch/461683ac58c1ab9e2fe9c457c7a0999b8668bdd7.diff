[+++ b/docs/reference/aggregations.asciidoc, +<<search-aggregations-reducer, _Reducer_>>::, +include::aggregations/reducer.asciidoc[], +++ b/docs/reference/aggregations.asciidoc, +<<search-aggregations-reducer, _Reducer_>>::, +include::aggregations/reducer.asciidoc[], +++ /dev/null, +++ b/docs/reference/aggregations.asciidoc, +<<search-aggregations-reducer, _Reducer_>>::, +include::aggregations/reducer.asciidoc[], +++ /dev/null, +++ /dev/null, +++ b/docs/reference/aggregations.asciidoc, +<<search-aggregations-reducer, _Reducer_>>::, +include::aggregations/reducer.asciidoc[], +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/docs/reference/aggregations.asciidoc, +<<search-aggregations-reducer, _Reducer_>>::, +include::aggregations/reducer.asciidoc[], +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/docs/reference/aggregations.asciidoc, +<<search-aggregations-reducer, _Reducer_>>::, +include::aggregations/reducer.asciidoc[], +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/docs/reference/aggregations.asciidoc, +<<search-aggregations-reducer, _Reducer_>>::, +include::aggregations/reducer.asciidoc[], +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/docs/reference/aggregations.asciidoc, +<<search-aggregations-reducer, _Reducer_>>::, +include::aggregations/reducer.asciidoc[], +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/docs/reference/aggregations.asciidoc, +<<search-aggregations-reducer, _Reducer_>>::, +include::aggregations/reducer.asciidoc[], +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/docs/reference/aggregations/reducer.asciidoc, +[[search-aggregations-reducer]], +, +== Reducer Aggregations, +, +coming[2.0.0], +, +experimental[], +, +Reducer aggregations work on the outputs produced from other aggregations rather than from document sets, adding, +information to the output tree. There are many different types of reducer, each computing different information from, +other aggregations, but these types can broken down into two families:, +, +_Parent_::, +                A family of reducer aggregations that is provided with the output of its parent aggregation and is able, +                to compute new buckets or new aggregations to add to existing buckets., +, +_Sibling_::, +                Reducer aggregations that are provided with the output of a sibling aggregation and are able to compute a, +                new aggregation which will be at the same level as the sibling aggregation., +, +Reducer aggregations can reference the aggregations they need to perform their computation by using the `buckets_paths`, +parameter to indicate the paths to the required metrics. The syntax for defining these paths can be found in the, +<<bucket-path-syntax, `buckets_path` Syntax>> section below., +, +Reducer aggregations cannot have sub-aggregations but depending on the type it can reference another reducer in the `buckets_path`, +allowing reducers to be chained.  For example, you can chain together two derivatives to calculate the second derivative, +(e.g. a derivative of a derivative)., +, +NOTE: Because reducer aggregations only add to the output, when chaining reducer aggregations the output of each reducer will be, +included in the final output., +, +[[bucket-path-syntax]], +[float], +=== `buckets_path` Syntax, +, +Most reducers require another aggregation as their input.  The input aggregation is defined via the `buckets_path`, +parameter, which follows a specific format:]