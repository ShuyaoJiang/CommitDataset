[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.protocol.xpack.ml.CloseJobRequest;, +    static Request closeJob(CloseJobRequest closeJobRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("anomaly_detectors"), +            .addPathPart(Strings.collectionToCommaDelimitedString(closeJobRequest.getJobIds())), +            .addPathPartAsIs("_close"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        if (closeJobRequest.isForce() != null) {, +            params.putParam("force", Boolean.toString(closeJobRequest.isForce()));, +        }, +        if (closeJobRequest.isAllowNoJobs() != null) {, +            params.putParam("allow_no_jobs", Boolean.toString(closeJobRequest.isAllowNoJobs()));, +        }, +        if (closeJobRequest.getTimeout() != null) {, +            params.putParam("timeout", closeJobRequest.getTimeout().getStringRep());, +        }, +, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.protocol.xpack.ml.CloseJobRequest;, +    static Request closeJob(CloseJobRequest closeJobRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("anomaly_detectors"), +            .addPathPart(Strings.collectionToCommaDelimitedString(closeJobRequest.getJobIds())), +            .addPathPartAsIs("_close"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        if (closeJobRequest.isForce() != null) {, +            params.putParam("force", Boolean.toString(closeJobRequest.isForce()));, +        }, +        if (closeJobRequest.isAllowNoJobs() != null) {, +            params.putParam("allow_no_jobs", Boolean.toString(closeJobRequest.isAllowNoJobs()));, +        }, +        if (closeJobRequest.getTimeout() != null) {, +            params.putParam("timeout", closeJobRequest.getTimeout().getStringRep());, +        }, +, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.protocol.xpack.ml.CloseJobRequest;, +import org.elasticsearch.protocol.xpack.ml.CloseJobResponse;, +, +    /**, +     * Closes one or more Machine Learning Jobs. A job can be opened and closed multiple times throughout its lifecycle., +     *, +     * A closed job cannot receive data or perform analysis operations, but you can still explore and navigate results., +     *, +     * @param request request containing job_ids and additional options. See {@link CloseJobRequest}, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return response containing if the job was successfully closed or not., +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public CloseJobResponse closeJob(CloseJobRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +            MLRequestConverters::closeJob,, +            options,, +            CloseJobResponse::fromXContent,, +            Collections.emptySet());, +    }, +, +    /**, +     * Closes one or more Machine Learning Jobs asynchronously, notifies listener on completion, +     *, +     * A closed job cannot receive data or perform analysis operations, but you can still explore and navigate results., +     *, +     * @param request request containing job_ids and additional options. See {@link CloseJobRequest}, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified upon request completion, +     */, +    public void closeJobAsync(CloseJobRequest request, RequestOptions options, ActionListener<CloseJobResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +            MLRequestConverters::closeJob,, +            options,, +            CloseJobResponse::fromXContent,, +            listener,, +            Collections.emptySet());, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.protocol.xpack.ml.CloseJobRequest;, +    static Request closeJob(CloseJobRequest closeJobRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml")]