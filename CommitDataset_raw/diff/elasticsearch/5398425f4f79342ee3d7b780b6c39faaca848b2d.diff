[+++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResponse.java, +    public RankEvalResponse(double qualityLevel, Map<String, Collection<RatedDocumentKey>> unknownDocs) {, +        return "RankEvalResponse, quality: " + qualityLevel + ", unknown docs: " + unknownDocs;, +        return Objects.equals(qualityLevel, other.qualityLevel) &&, +        return Objects.hash(getClass(), qualityLevel, unknownDocs);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResponse.java, +    public RankEvalResponse(double qualityLevel, Map<String, Collection<RatedDocumentKey>> unknownDocs) {, +        return "RankEvalResponse, quality: " + qualityLevel + ", unknown docs: " + unknownDocs;, +        return Objects.equals(qualityLevel, other.qualityLevel) &&, +        return Objects.hash(getClass(), qualityLevel, unknownDocs);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalSpec.java, +    public RankEvalSpec(Collection<RatedRequest> specs, RankedListQualityMetric metric) {, +        return Objects.equals(ratedRequests, other.ratedRequests) &&, +        return Objects.hash(ratedRequests, metric);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResponse.java, +    public RankEvalResponse(double qualityLevel, Map<String, Collection<RatedDocumentKey>> unknownDocs) {, +        return "RankEvalResponse, quality: " + qualityLevel + ", unknown docs: " + unknownDocs;, +        return Objects.equals(qualityLevel, other.qualityLevel) &&, +        return Objects.hash(getClass(), qualityLevel, unknownDocs);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalSpec.java, +    public RankEvalSpec(Collection<RatedRequest> specs, RankedListQualityMetric metric) {, +        return Objects.equals(ratedRequests, other.ratedRequests) &&, +        return Objects.hash(ratedRequests, metric);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/TransportRankEvalAction.java, +                        new RankEvalResponse(task.getEvaluator().combine(partialResults.values()), unknownDocs));, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResponse.java, +    public RankEvalResponse(double qualityLevel, Map<String, Collection<RatedDocumentKey>> unknownDocs) {, +        return "RankEvalResponse, quality: " + qualityLevel + ", unknown docs: " + unknownDocs;, +        return Objects.equals(qualityLevel, other.qualityLevel) &&, +        return Objects.hash(getClass(), qualityLevel, unknownDocs);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalSpec.java, +    public RankEvalSpec(Collection<RatedRequest> specs, RankedListQualityMetric metric) {, +        return Objects.equals(ratedRequests, other.ratedRequests) &&, +        return Objects.hash(ratedRequests, metric);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/TransportRankEvalAction.java, +                        new RankEvalResponse(task.getEvaluator().combine(partialResults.values()), unknownDocs));, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/RankEvalRequestTests.java, +        RankEvalSpec task = new RankEvalSpec(specifications, new PrecisionAtN(10));, +        RankEvalSpec task = new RankEvalSpec(specifications, new PrecisionAtN(10));, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResponse.java, +    public RankEvalResponse(double qualityLevel, Map<String, Collection<RatedDocumentKey>> unknownDocs) {, +        return "RankEvalResponse, quality: " + qualityLevel + ", unknown docs: " + unknownDocs;, +        return Objects.equals(qualityLevel, other.qualityLevel) &&, +        return Objects.hash(getClass(), qualityLevel, unknownDocs);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalSpec.java, +    public RankEvalSpec(Collection<RatedRequest> specs, RankedListQualityMetric metric) {, +        return Objects.equals(ratedRequests, other.ratedRequests) &&, +        return Objects.hash(ratedRequests, metric);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/TransportRankEvalAction.java, +                        new RankEvalResponse(task.getEvaluator().combine(partialResults.values()), unknownDocs));, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/RankEvalRequestTests.java, +        RankEvalSpec task = new RankEvalSpec(specifications, new PrecisionAtN(10));, +        RankEvalSpec task = new RankEvalSpec(specifications, new PrecisionAtN(10));, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/RankEvalResponseTests.java, +        return new RankEvalResponse(randomDouble(), unknownDocs );, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResponse.java, +    public RankEvalResponse(double qualityLevel, Map<String, Collection<RatedDocumentKey>> unknownDocs) {, +        return "RankEvalResponse, quality: " + qualityLevel + ", unknown docs: " + unknownDocs;, +        return Objects.equals(qualityLevel, other.qualityLevel) &&, +        return Objects.hash(getClass(), qualityLevel, unknownDocs);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalSpec.java, +    public RankEvalSpec(Collection<RatedRequest> specs, RankedListQualityMetric metric) {, +        return Objects.equals(ratedRequests, other.ratedRequests) &&, +        return Objects.hash(ratedRequests, metric);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/TransportRankEvalAction.java, +                        new RankEvalResponse(task.getEvaluator().combine(partialResults.values()), unknownDocs));, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/RankEvalRequestTests.java, +        RankEvalSpec task = new RankEvalSpec(specifications, new PrecisionAtN(10));, +        RankEvalSpec task = new RankEvalSpec(specifications, new PrecisionAtN(10));, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/RankEvalResponseTests.java, +        return new RankEvalResponse(randomDouble(), unknownDocs );, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/RankEvalSpecTests.java, +        RankEvalSpec testItem = new RankEvalSpec(specs, metric);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResponse.java, +    public RankEvalResponse(double qualityLevel, Map<String, Collection<RatedDocumentKey>> unknownDocs) {, +        return "RankEvalResponse, quality: " + qualityLevel + ", unknown docs: " + unknownDocs;, +        return Objects.equals(qualityLevel, other.qualityLevel) &&, +        return Objects.hash(getClass(), qualityLevel, unknownDocs);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalSpec.java, +    public RankEvalSpec(Collection<RatedRequest> specs, RankedListQualityMetric metric) {, +        return Objects.equals(ratedRequests, other.ratedRequests) &&, +        return Objects.hash(ratedRequests, metric);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/TransportRankEvalAction.java, +                        new RankEvalResponse(task.getEvaluator().combine(partialResults.values()), unknownDocs));, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/RankEvalRequestTests.java, +        RankEvalSpec task = new RankEvalSpec(specifications, new PrecisionAtN(10));, +        RankEvalSpec task = new RankEvalSpec(specifications, new PrecisionAtN(10));, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/RankEvalResponseTests.java, +        return new RankEvalResponse(randomDouble(), unknownDocs );, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/RankEvalSpecTests.java, +        RankEvalSpec testItem = new RankEvalSpec(specs, metric);, +++ b/modules/rank-eval/src/test/resources/rest-api-spec/test/rank_eval/10_basic.yaml, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResponse.java, +    public RankEvalResponse(double qualityLevel, Map<String, Collection<RatedDocumentKey>> unknownDocs) {, +        return "RankEvalResponse, quality: " + qualityLevel + ", unknown docs: " + unknownDocs;, +        return Objects.equals(qualityLevel, other.qualityLevel) &&, +        return Objects.hash(getClass(), qualityLevel, unknownDocs);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalSpec.java, +    public RankEvalSpec(Collection<RatedRequest> specs, RankedListQualityMetric metric) {, +        return Objects.equals(ratedRequests, other.ratedRequests) &&]