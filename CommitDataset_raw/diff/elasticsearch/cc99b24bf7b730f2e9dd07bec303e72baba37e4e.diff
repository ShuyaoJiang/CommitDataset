[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]junit[/\\]rule[/\\]RepeatOnExceptionRule.java" checks="LineLength" />, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]junit[/\\]rule[/\\]RepeatOnExceptionRule.java" checks="LineLength" />, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]junit[/\\]rule[/\\]RepeatOnExceptionRule.java" checks="LineLength" />, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_0_0_ID = 5000099;, +    public static final Version V_5_0_0 = new Version(V_5_0_0_ID, org.apache.lucene.util.Version.LUCENE_6_0_0);, +    public static final Version CURRENT = V_5_0_0;, +            case V_5_0_0_ID:, +                return V_5_0_0;, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]junit[/\\]rule[/\\]RepeatOnExceptionRule.java" checks="LineLength" />, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_0_0_ID = 5000099;, +    public static final Version V_5_0_0 = new Version(V_5_0_0_ID, org.apache.lucene.util.Version.LUCENE_6_0_0);, +    public static final Version CURRENT = V_5_0_0;, +            case V_5_0_0_ID:, +                return V_5_0_0;, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +                    if (unassignedShard.index().equals(index)) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]junit[/\\]rule[/\\]RepeatOnExceptionRule.java" checks="LineLength" />, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_0_0_ID = 5000099;, +    public static final Version V_5_0_0 = new Version(V_5_0_0_ID, org.apache.lucene.util.Version.LUCENE_6_0_0);, +    public static final Version CURRENT = V_5_0_0;, +            case V_5_0_0_ID:, +                return V_5_0_0;, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +                    if (unassignedShard.index().equals(index)) {, +++ /dev/null, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]junit[/\\]rule[/\\]RepeatOnExceptionRule.java" checks="LineLength" />, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_0_0_ID = 5000099;, +    public static final Version V_5_0_0 = new Version(V_5_0_0_ID, org.apache.lucene.util.Version.LUCENE_6_0_0);, +    public static final Version CURRENT = V_5_0_0;, +            case V_5_0_0_ID:, +                return V_5_0_0;, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +                    if (unassignedShard.index().equals(index)) {, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java, +import java.util.concurrent.SynchronousQueue;, +/**, + *, + */, +        // we force the execution, since we might run into concurrency issues in offer for ScalingBlockingQueue, +    public static EsThreadPoolExecutor newCached(String name, long keepAliveTime, TimeUnit unit, ThreadFactory threadFactory, ThreadContext contextHolder) {, +        return new EsThreadPoolExecutor(name, 0, Integer.MAX_VALUE, keepAliveTime, unit, new SynchronousQueue<Runnable>(), threadFactory, new EsAbortPolicy(), contextHolder);, +    }, +, +, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]junit[/\\]rule[/\\]RepeatOnExceptionRule.java" checks="LineLength" />, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_0_0_ID = 5000099;, +    public static final Version V_5_0_0 = new Version(V_5_0_0_ID, org.apache.lucene.util.Version.LUCENE_6_0_0);, +    public static final Version CURRENT = V_5_0_0;, +            case V_5_0_0_ID:, +                return V_5_0_0;, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +                    if (unassignedShard.index().equals(index)) {, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java, +import java.util.concurrent.SynchronousQueue;, +/**, + *, + */, +        // we force the execution, since we might run into concurrency issues in offer for ScalingBlockingQueue, +    public static EsThreadPoolExecutor newCached(String name, long keepAliveTime, TimeUnit unit, ThreadFactory threadFactory, ThreadContext contextHolder) {, +        return new EsThreadPoolExecutor(name, 0, Integer.MAX_VALUE, keepAliveTime, unit, new SynchronousQueue<Runnable>(), threadFactory, new EsAbortPolicy(), contextHolder);, +    }, +, +, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +import org.elasticsearch.index.mapper.core.LegacyDoubleFieldMapper;, +import org.elasticsearch.index.mapper.core.LegacyIntegerFieldMapper;, +import org.elasticsearch.index.mapper.core.StringFieldMapper;, +        if (indexCreated.onOrAfter(Version.V_5_0_0)) {, +        if (indexCreated.onOrAfter(Version.V_5_0_0)) {, +        if (indexCreated.onOrAfter(Version.V_5_0_0)) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]junit[/\\]rule[/\\]RepeatOnExceptionRule.java" checks="LineLength" />, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0]