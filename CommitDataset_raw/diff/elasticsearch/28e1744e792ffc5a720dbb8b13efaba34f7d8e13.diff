[+++ b/src/test/java/org/elasticsearch/test/integration/percolator/ConcurrentPercolatorTests.java, +import static org.elasticsearch.test.integration.percolator.PercolatorTests.convertFromTextArray;, +++ b/src/test/java/org/elasticsearch/test/integration/percolator/ConcurrentPercolatorTests.java, +import static org.elasticsearch.test.integration.percolator.PercolatorTests.convertFromTextArray;, +++ b/src/test/java/org/elasticsearch/test/integration/percolator/MultiPercolatorTests.java, +import static org.elasticsearch.test.integration.percolator.PercolatorTests.convertFromTextArray;, +++ b/src/test/java/org/elasticsearch/test/integration/percolator/ConcurrentPercolatorTests.java, +import static org.elasticsearch.test.integration.percolator.PercolatorTests.convertFromTextArray;, +++ b/src/test/java/org/elasticsearch/test/integration/percolator/MultiPercolatorTests.java, +import static org.elasticsearch.test.integration.percolator.PercolatorTests.convertFromTextArray;, +++ b/src/test/java/org/elasticsearch/test/integration/percolator/PercolatorTests.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.test.integration.percolator;, +, +import org.elasticsearch.action.admin.cluster.node.stats.NodeStats;, +import org.elasticsearch.action.admin.cluster.node.stats.NodesStatsResponse;, +import org.elasticsearch.action.admin.indices.alias.IndicesAliasesResponse;, +import org.elasticsearch.action.admin.indices.stats.IndicesStatsResponse;, +import org.elasticsearch.action.count.CountResponse;, +import org.elasticsearch.action.percolate.PercolateResponse;, +import org.elasticsearch.action.percolate.PercolateSourceBuilder;, +import org.elasticsearch.action.search.SearchResponse;, +import org.elasticsearch.action.support.IgnoreIndices;, +import org.elasticsearch.client.Client;, +import org.elasticsearch.client.Requests;, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.ImmutableSettings.Builder;, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.index.engine.DocumentMissingException;, +import org.elasticsearch.index.engine.VersionConflictEngineException;, +import org.elasticsearch.index.query.FilterBuilders;, +import org.elasticsearch.index.query.QueryBuilders;, +import org.elasticsearch.index.query.functionscore.factor.FactorBuilder;, +import org.elasticsearch.search.highlight.HighlightBuilder;, +import org.elasticsearch.test.integration.AbstractSharedClusterTest;, +import org.junit.Test;, +, +import java.util.*;, +, +import static org.elasticsearch.action.percolate.PercolateSourceBuilder.docBuilder;, +import static org.elasticsearch.common.settings.ImmutableSettings.settingsBuilder;, +import static org.elasticsearch.common.xcontent.XContentFactory.*;, +import static org.elasticsearch.index.query.FilterBuilders.termFilter;, +import static org.elasticsearch.index.query.QueryBuilders.*;, +import static org.elasticsearch.index.query.functionscore.ScoreFunctionBuilders.scriptFunction;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertNoFailures;, +import static org.hamcrest.Matchers.*;, +, +/**, + *, + */, +public class PercolatorTests extends AbstractSharedClusterTest {, +, +    @Override, +    protected int numberOfNodes() {, +        return 2;, +    }, +, +    @Test, +    public void testSimple1() throws Exception {, +        client().admin().indices().prepareCreate("test").execute().actionGet();, +        ensureGreen();, +, +        logger.info("--> Add dummy doc");, +        client().prepareIndex("test", "type", "1").setSource("field", "value").execute().actionGet();, +, +        logger.info("--> register a queries");, +        client().prepareIndex("test", "_percolator", "1"), +                .setSource(jsonBuilder().startObject().field("query", matchQuery("field1", "b")).field("a", "b").endObject()), +                .execute().actionGet();, +        client().prepareIndex("test", "_percolator", "2"), +                .setSource(jsonBuilder().startObject().field("query", matchQuery("field1", "c")).endObject()), +                .execute().actionGet();, +        client().prepareIndex("test", "_percolator", "3"), +                .setSource(jsonBuilder().startObject().field("query", boolQuery(), +                        .must(matchQuery("field1", "b")), +                        .must(matchQuery("field1", "c")), +                ).endObject()), +                .execute().actionGet();]