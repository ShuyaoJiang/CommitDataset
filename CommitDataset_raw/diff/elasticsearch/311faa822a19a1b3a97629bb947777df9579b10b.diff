[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +import java.util.Collections;, +            validationFailures = Collections.emptyList();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +import java.util.Collections;, +            validationFailures = Collections.emptyList();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterIndexHealth.java, +import java.util.Arrays;, +        validationFailures = Arrays.asList(in.readStringArray());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +import java.util.Collections;, +            validationFailures = Collections.emptyList();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterIndexHealth.java, +import java.util.Arrays;, +        validationFailures = Arrays.asList(in.readStringArray());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesResponse.java, +import java.util.ArrayList;, +import java.util.Collections;, +    private List<RepositoryMetaData> repositories = Collections.emptyList();, +    GetRepositoriesResponse(List<RepositoryMetaData> repositories) {, +        List<RepositoryMetaData> repositoryListBuilder = new ArrayList<>();, +        repositories = Collections.unmodifiableList(repositoryListBuilder);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +import java.util.Collections;, +            validationFailures = Collections.emptyList();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterIndexHealth.java, +import java.util.Arrays;, +        validationFailures = Arrays.asList(in.readStringArray());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesResponse.java, +import java.util.ArrayList;, +import java.util.Collections;, +    private List<RepositoryMetaData> repositories = Collections.emptyList();, +    GetRepositoriesResponse(List<RepositoryMetaData> repositories) {, +        List<RepositoryMetaData> repositoryListBuilder = new ArrayList<>();, +        repositories = Collections.unmodifiableList(repositoryListBuilder);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/TransportGetRepositoriesAction.java, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.List;, +, +                listener.onResponse(new GetRepositoriesResponse(Collections.<RepositoryMetaData>emptyList()));, +                List<RepositoryMetaData> repositoryListBuilder = new ArrayList<>();, +                listener.onResponse(new GetRepositoriesResponse(Collections.unmodifiableList(repositoryListBuilder)));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +import java.util.Collections;, +            validationFailures = Collections.emptyList();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterIndexHealth.java, +import java.util.Arrays;, +        validationFailures = Arrays.asList(in.readStringArray());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesResponse.java, +import java.util.ArrayList;, +import java.util.Collections;, +    private List<RepositoryMetaData> repositories = Collections.emptyList();, +    GetRepositoriesResponse(List<RepositoryMetaData> repositories) {, +        List<RepositoryMetaData> repositoryListBuilder = new ArrayList<>();, +        repositories = Collections.unmodifiableList(repositoryListBuilder);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/TransportGetRepositoriesAction.java, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.List;, +, +                listener.onResponse(new GetRepositoriesResponse(Collections.<RepositoryMetaData>emptyList()));, +                List<RepositoryMetaData> repositoryListBuilder = new ArrayList<>();, +                listener.onResponse(new GetRepositoriesResponse(Collections.unmodifiableList(repositoryListBuilder)));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsResponse.java, +import java.util.ArrayList;, +import java.util.Collections;, +    private List<SnapshotInfo> snapshots = Collections.emptyList();, +    GetSnapshotsResponse(List<SnapshotInfo> snapshots) {, +        List<SnapshotInfo> builder = new ArrayList<>();, +        snapshots = Collections.unmodifiableList(builder);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +import java.util.Collections;, +            validationFailures = Collections.emptyList();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterIndexHealth.java, +import java.util.Arrays;, +        validationFailures = Arrays.asList(in.readStringArray());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesResponse.java, +import java.util.ArrayList;, +import java.util.Collections;, +    private List<RepositoryMetaData> repositories = Collections.emptyList();, +    GetRepositoriesResponse(List<RepositoryMetaData> repositories) {, +        List<RepositoryMetaData> repositoryListBuilder = new ArrayList<>();, +        repositories = Collections.unmodifiableList(repositoryListBuilder);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/TransportGetRepositoriesAction.java, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.List;, +, +                listener.onResponse(new GetRepositoriesResponse(Collections.<RepositoryMetaData>emptyList()));, +                List<RepositoryMetaData> repositoryListBuilder = new ArrayList<>();, +                listener.onResponse(new GetRepositoriesResponse(Collections.unmodifiableList(repositoryListBuilder)));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsResponse.java, +import java.util.ArrayList;, +import java.util.Collections;, +    private List<SnapshotInfo> snapshots = Collections.emptyList();, +    GetSnapshotsResponse(List<SnapshotInfo> snapshots) {, +        List<SnapshotInfo> builder = new ArrayList<>();, +        snapshots = Collections.unmodifiableList(builder);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/TransportGetSnapshotsAction.java]