[+++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import org.apache.lucene.index.FieldInfo.IndexOptions;, +    IndexOptions indexOptions();, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import org.apache.lucene.index.FieldInfo.IndexOptions;, +    IndexOptions indexOptions();, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +import org.apache.lucene.index.FieldInfo.IndexOptions;, +import org.elasticsearch.ElasticSearchIllegalArgumentException;, +        public static final IndexOptions INDEX_OPTIONS = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;, +        public T indexOptions(IndexOptions indexOptions) {, +            return super.indexOptions(indexOptions);, +        protected IndexOptions indexOptions = Defaults.INDEX_OPTIONS;, +, +        protected T indexOptions(IndexOptions indexOptions) {, +            this.indexOptions = indexOptions;, +                                  float boost, boolean omitNorms, IndexOptions indexOptions, NamedAnalyzer indexAnalyzer, NamedAnalyzer searchAnalyzer) {, +        this.indexOptions = indexOptions;, +        , +    public IndexOptions indexOptions() {, +        return this.indexOptions;, +    protected static String indexOptionToString(IndexOptions indexOption) {, +        switch (indexOption) {, +        case DOCS_AND_FREQS:, +            return TypeParsers.INDEX_OPTIONS_FREQS;, +        case DOCS_AND_FREQS_AND_POSITIONS:, +            return TypeParsers.INDEX_OPTIONS_POSITIONS;, +        case DOCS_ONLY:, +            return TypeParsers.INDEX_OPTIONS_DOCS;, +        default:, +            throw new ElasticSearchIllegalArgumentException("Unknown IndexOptions [" + indexOption + "]");, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import org.apache.lucene.index.FieldInfo.IndexOptions;, +    IndexOptions indexOptions();, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +import org.apache.lucene.index.FieldInfo.IndexOptions;, +import org.elasticsearch.ElasticSearchIllegalArgumentException;, +        public static final IndexOptions INDEX_OPTIONS = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;, +        public T indexOptions(IndexOptions indexOptions) {, +            return super.indexOptions(indexOptions);, +        protected IndexOptions indexOptions = Defaults.INDEX_OPTIONS;, +, +        protected T indexOptions(IndexOptions indexOptions) {, +            this.indexOptions = indexOptions;, +                                  float boost, boolean omitNorms, IndexOptions indexOptions, NamedAnalyzer indexAnalyzer, NamedAnalyzer searchAnalyzer) {, +        this.indexOptions = indexOptions;, +        , +    public IndexOptions indexOptions() {, +        return this.indexOptions;, +    protected static String indexOptionToString(IndexOptions indexOption) {, +        switch (indexOption) {, +        case DOCS_AND_FREQS:, +            return TypeParsers.INDEX_OPTIONS_FREQS;, +        case DOCS_AND_FREQS_AND_POSITIONS:, +            return TypeParsers.INDEX_OPTIONS_POSITIONS;, +        case DOCS_ONLY:, +            return TypeParsers.INDEX_OPTIONS_DOCS;, +        default:, +            throw new ElasticSearchIllegalArgumentException("Unknown IndexOptions [" + indexOption + "]");, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/core/BinaryFieldMapper.java, +import org.apache.lucene.index.FieldInfo.IndexOptions;, +        super(names, Field.Index.NO, store, Field.TermVector.NO, 1.0f, true, IndexOptions.DOCS_ONLY, null, null);, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import org.apache.lucene.index.FieldInfo.IndexOptions;, +    IndexOptions indexOptions();, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +import org.apache.lucene.index.FieldInfo.IndexOptions;, +import org.elasticsearch.ElasticSearchIllegalArgumentException;, +        public static final IndexOptions INDEX_OPTIONS = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;, +        public T indexOptions(IndexOptions indexOptions) {, +            return super.indexOptions(indexOptions);, +        protected IndexOptions indexOptions = Defaults.INDEX_OPTIONS;, +, +        protected T indexOptions(IndexOptions indexOptions) {, +            this.indexOptions = indexOptions;, +                                  float boost, boolean omitNorms, IndexOptions indexOptions, NamedAnalyzer indexAnalyzer, NamedAnalyzer searchAnalyzer) {, +        this.indexOptions = indexOptions;, +        , +    public IndexOptions indexOptions() {, +        return this.indexOptions;, +    protected static String indexOptionToString(IndexOptions indexOption) {, +        switch (indexOption) {, +        case DOCS_AND_FREQS:, +            return TypeParsers.INDEX_OPTIONS_FREQS;, +        case DOCS_AND_FREQS_AND_POSITIONS:, +            return TypeParsers.INDEX_OPTIONS_POSITIONS;, +        case DOCS_ONLY:, +            return TypeParsers.INDEX_OPTIONS_DOCS;, +        default:, +            throw new ElasticSearchIllegalArgumentException("Unknown IndexOptions [" + indexOption + "]");, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/core/BinaryFieldMapper.java]