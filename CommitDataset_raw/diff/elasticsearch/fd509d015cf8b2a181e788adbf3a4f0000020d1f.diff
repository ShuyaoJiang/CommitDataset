[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import java.util.ArrayList;, +import java.util.List;, +import java.util.function.Function;, +import java.util.stream.Stream;, +import static java.util.stream.Collectors.toList;, + * Can be sub-classed to expose additional client methods that make use of endpoints added to Elasticsearch through plugins, or to, + * add support for custom response sections, again added to Elasticsearch through plugins., +    private final NamedXContentRegistry registry;, +    /**, +     * Creates a {@link RestHighLevelClient} given the low level {@link RestClient} that it should use to perform requests., +     */, +    public RestHighLevelClient(RestClient restClient) {, +        this(restClient, Collections.emptyList());, +    }, +, +    /**, +     * Creates a {@link RestHighLevelClient} given the low level {@link RestClient} that it should use to perform requests and, +     * a list of entries that allow to parse custom response sections added to Elasticsearch through plugins., +     */, +    protected RestHighLevelClient(RestClient restClient, List<NamedXContentRegistry.Entry> namedXContentEntries) {, +        this.client = Objects.requireNonNull(restClient);, +        this.registry = new NamedXContentRegistry(Stream.of(, +                getNamedXContents().stream(),, +                namedXContentEntries.stream(), +        ).flatMap(Function.identity()).collect(toList()));, +    <Resp> ResponseListener wrapResponseListener(CheckedFunction<Response, Resp, IOException> responseConverter,, +    ElasticsearchStatusException parseResponseException(ResponseException responseException) {, +    <Resp> Resp parseEntity(, +        try (XContentParser parser = xContentType.xContent().createParser(registry, entity.getContent())) {, +, +    static List<NamedXContentRegistry.Entry> getNamedXContents() {, +        List<NamedXContentRegistry.Entry> namedXContents = new ArrayList<>();, +        //namedXContents.add(new NamedXContentRegistry.Entry(Aggregation.class, new ParseField("sterms"), StringTerms::fromXContent));, +        return namedXContents;, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import java.util.ArrayList;, +import java.util.List;, +import java.util.function.Function;, +import java.util.stream.Stream;, +import static java.util.stream.Collectors.toList;, + * Can be sub-classed to expose additional client methods that make use of endpoints added to Elasticsearch through plugins, or to, + * add support for custom response sections, again added to Elasticsearch through plugins., +    private final NamedXContentRegistry registry;, +    /**, +     * Creates a {@link RestHighLevelClient} given the low level {@link RestClient} that it should use to perform requests., +     */, +    public RestHighLevelClient(RestClient restClient) {, +        this(restClient, Collections.emptyList());, +    }, +, +    /**, +     * Creates a {@link RestHighLevelClient} given the low level {@link RestClient} that it should use to perform requests and, +     * a list of entries that allow to parse custom response sections added to Elasticsearch through plugins., +     */, +    protected RestHighLevelClient(RestClient restClient, List<NamedXContentRegistry.Entry> namedXContentEntries) {, +        this.client = Objects.requireNonNull(restClient);, +        this.registry = new NamedXContentRegistry(Stream.of(, +                getNamedXContents().stream(),, +                namedXContentEntries.stream(), +        ).flatMap(Function.identity()).collect(toList()));, +    <Resp> ResponseListener wrapResponseListener(CheckedFunction<Response, Resp, IOException> responseConverter,, +    ElasticsearchStatusException parseResponseException(ResponseException responseException) {, +    <Resp> Resp parseEntity(, +        try (XContentParser parser = xContentType.xContent().createParser(registry, entity.getContent())) {, +, +    static List<NamedXContentRegistry.Entry> getNamedXContents() {, +        List<NamedXContentRegistry.Entry> namedXContents = new ArrayList<>();, +        //namedXContents.add(new NamedXContentRegistry.Entry(Aggregation.class, new ParseField("sterms"), StringTerms::fromXContent));, +        return namedXContents;, +    }, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientExtTests.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.client;, +, +import org.apache.http.HttpEntity;, +import org.apache.http.entity.ContentType;, +import org.apache.http.entity.StringEntity;, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.xcontent.NamedXContentRegistry;, +import org.elasticsearch.common.xcontent.XContentParser;]