[+++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +import java.util.ArrayList;, +        check(enforceLimits(settings), checks(settings));, +    private static List<Check> checks(Settings settings) {, +        List<Check> checks = new ArrayList<>();, +        checks.add(fileDescriptorCheck);, +        checks.add(new MlockallCheck(BootstrapSettings.MLOCKALL_SETTING.get(settings)));, +        return Collections.unmodifiableList(checks);, +    // visible for testing, +    static class MlockallCheck implements Check {, +, +        private final boolean mlockallSet;, +, +        public MlockallCheck(boolean mlockAllSet) {, +            this.mlockallSet = mlockAllSet;, +        }, +, +        @Override, +        public boolean check() {, +            return mlockallSet && !isMemoryLocked();, +        }, +, +        @Override, +        public String errorMessage() {, +            return "Memory locking requested for elasticsearch process but memory is not locked";, +        }, +, +        // visible for testing, +        boolean isMemoryLocked() {, +            return Natives.isMemoryLocked();, +        }, +, +    }, +, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +import java.util.ArrayList;, +        check(enforceLimits(settings), checks(settings));, +    private static List<Check> checks(Settings settings) {, +        List<Check> checks = new ArrayList<>();, +        checks.add(fileDescriptorCheck);, +        checks.add(new MlockallCheck(BootstrapSettings.MLOCKALL_SETTING.get(settings)));, +        return Collections.unmodifiableList(checks);, +    // visible for testing, +    static class MlockallCheck implements Check {, +, +        private final boolean mlockallSet;, +, +        public MlockallCheck(boolean mlockAllSet) {, +            this.mlockallSet = mlockAllSet;, +        }, +, +        @Override, +        public boolean check() {, +            return mlockallSet && !isMemoryLocked();, +        }, +, +        @Override, +        public String errorMessage() {, +            return "Memory locking requested for elasticsearch process but memory is not locked";, +        }, +, +        // visible for testing, +        boolean isMemoryLocked() {, +            return Natives.isMemoryLocked();, +        }, +, +    }, +, +++ b/core/src/test/java/org/elasticsearch/bootstrap/BootstrapCheckTests.java, +import java.util.ArrayList;, +import java.util.List;, +    public void testMlockallCheck() {, +        class MlockallCheckTestCase {, +, +            private final boolean mlockallSet;, +            private final boolean isMemoryLocked;, +            private final boolean shouldFail;, +, +            public MlockallCheckTestCase(boolean mlockallSet, boolean isMemoryLocked, boolean shouldFail) {, +                this.mlockallSet = mlockallSet;, +                this.isMemoryLocked = isMemoryLocked;, +                this.shouldFail = shouldFail;, +            }, +, +        }, +, +        final List<MlockallCheckTestCase> testCases = new ArrayList<>();, +        testCases.add(new MlockallCheckTestCase(true, true, false));, +        testCases.add(new MlockallCheckTestCase(true, false, true));, +        testCases.add(new MlockallCheckTestCase(false, true, false));, +        testCases.add(new MlockallCheckTestCase(false, false, false));, +, +        for (final MlockallCheckTestCase testCase : testCases) {, +            final BootstrapCheck.MlockallCheck check = new BootstrapCheck.MlockallCheck(testCase.mlockallSet) {, +                @Override, +                boolean isMemoryLocked() {, +                    return testCase.isMemoryLocked;, +                }, +            };, +]