[+++ b/x-pack/docs/en/security/authentication/saml-realm.asciidoc, +See {ref}/security-settings.html#ref-saml-settings[SAML Realm Settings]. , +, +See {ref}/security-settings.html#ref-saml-signing-settings[SAML Realm Signing Settings]. , +See {ref}/security-settings.html#ref-saml-encryption-settings[SAML Realm Encryption Settings]. , +See {ref}/security-settings.html#ref-saml-ssl-settings[SAML Realm SSL Settings]. , +++ b/x-pack/docs/en/security/authentication/saml-realm.asciidoc, +See {ref}/security-settings.html#ref-saml-settings[SAML Realm Settings]. , +, +See {ref}/security-settings.html#ref-saml-signing-settings[SAML Realm Signing Settings]. , +See {ref}/security-settings.html#ref-saml-encryption-settings[SAML Realm Encryption Settings]. , +See {ref}/security-settings.html#ref-saml-ssl-settings[SAML Realm SSL Settings]. , +++ b/x-pack/docs/en/settings/security-settings.asciidoc, +The `type` setting must be set to `pki`. In addition to the , +<<ref-realm-settings,settings that are valid for all realms>>, you can specify  , +the following settings: , +, +, +The `type` setting must be set to `saml`. In addition to the , +<<ref-realm-settings,settings that are valid for all realms>>, you can specify  , +the following settings: , +, +The Entity ID of the SAML Identity Provider. An Entity ID is a URI with a , +maximum length of 1024 characters. It can be a URL (https://idp.example.com/) or , +a URN (`urn:example.com:idp`) and can be found in the configuration or the SAML , +metadata of the Identity Provider., +{security} automatically polls this metadata resource and reloads , +The Entity ID to use for this SAML Service Provider. This should be entered as a , +URI. We recommend that you use the base URL of your Kibana instance. For example, , +`https://kibana.example.com/`. , +The URL of the Assertion Consumer Service within {kib}. Typically this is the , +"api/security/v1/saml" endpoint of your Kibana server. For example, , +`https://kibana.example.com/api/security/v1/saml`. , +The URL of the Single Logout service within {kib}. Typically this is the , +"logout" endpoint of your Kibana server. For example, , +`https://kibana.example.com/logout`., +principal (username)., +user's groups. , +user's full name. , +user's email address. , +user's X.500 _Distinguished Name_. , +A Java regular expression that is matched against the SAML attribute specified, +The attribute value must match the pattern and the value of the first, +_capturing group_ is used as the principal. For example, `^([^@]+)@example\\.com$` , +matches email addresses from the "example.com" domain and uses the local-part as , +the principal., +the current user. Defaults to requesting _transient_ names , +(`urn:oasis:names:tc:SAML:2.0:nameid-format:transient`). , +, +`nameid.allow_create`:: The value of the `AllowCreate` attribute of the , +`NameIdPolicy` element in an authentication request. Defaults to `false`. , +, +`nameid.sp_qualifier`:: The value of the `SPNameQualifier` attribute of the , +`NameIdPolicy` element in an authentication request. The default is to not , +include the `SPNameQualifier` attribute., +Specifies whether to set the `ForceAuthn` attribute when requesting that the IdP, +authenticate the current user. If set to `true`, the IdP is required to verify , +the userâ€™s identity, irrespective of any existing sessions they might have. , +Specifies whether to populate the {es} user's metadata with the values that are , +provided by the SAML attributes. Defaults to `true`., +[float], +[[ref-saml-signing-settings]], +===== SAML realm signing settings, +, +If a signing key is configured (that is, either `signing.key` or , +`signing.keystore.path` is set), then {security} signs outgoing SAML messages. , +Signing can be configured using the following settings:, +, +A list of SAML message types that should be signed or `*` to sign all messages., +`signing.key` and `signing.keystore.path` cannot be used at the same time., +Specifies the path to the PEM encoded certificate (or certificate chain) that , +corresponds to the `signing.key`. This certificate must also be included in the , +Service Provider metadata or manually configured within the IdP to allow for , +signature validation. This setting can only be used if `signing.key` is set., +`signing.key` and `signing.keystore.path` cannot be used at the same time., +The type of the keystore in `signing.keystore.path`., +Must be either `jks` or `PKCS12`. If the keystore path ends in ".p12", ".pfx", , +or "pkcs12", this setting defaults to `PKCS12`. Otherwise, it defaults to `jks`., +used for SAML message signing. If the keystore contains more than one private , +key, this setting must be specified. , +The password to the keystore in `signing.keystore.path`., +[float], +[[ref-saml-encryption-settings]], +===== SAML realm encryption settings, +, +If an encryption key is configured (that is, either `encryption.key` or , +`encryption.keystore.path` is set), then {security} publishes an encryption , +certificate when generating metadata and attempts to decrypt incoming SAML , +content. Encryption can be configured using the following settings:, +, +`encryption.key` and `encryption.keystore.path` cannot be used at the same time., +Specifies the path to the PEM encoded certificate (or certificate chain) that is , +associated with the `encryption.key`. This certificate must also be included in , +the Service Provider metadata or manually configured within the IdP to enable , +message encryption. This setting can be used only if `encryption.key` is set., +`encryption.key` and `encryption.keystore.path` cannot be used at the same time., +Must be either `jks` or `PKCS12`. If the keystore path ends in ".p12", ".pfx", , +or "pkcs12", this setting defaults to `PKCS12`. Otherwise, it defaults to `jks`., +key pairs from the keystore are considered as candidate keys for decryption., +single password is supported. If you are using multiple decryption keys, ]