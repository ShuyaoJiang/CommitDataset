[+++ b/src/main/java/org/elasticsearch/common/transport/DummyTransportAddress.java, +    public boolean sameHost(TransportAddress other) {, +        return other == INSTANCE;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/transport/DummyTransportAddress.java, +    public boolean sameHost(TransportAddress other) {, +        return other == INSTANCE;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/transport/InetSocketTransportAddress.java, +    @Override, +    public boolean sameHost(TransportAddress other) {, +        return other instanceof InetSocketTransportAddress &&, +                address.getAddress().equals(((InetSocketTransportAddress) other).address.getAddress());, +    }, +, +++ b/src/main/java/org/elasticsearch/common/transport/DummyTransportAddress.java, +    public boolean sameHost(TransportAddress other) {, +        return other == INSTANCE;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/transport/InetSocketTransportAddress.java, +    @Override, +    public boolean sameHost(TransportAddress other) {, +        return other instanceof InetSocketTransportAddress &&, +                address.getAddress().equals(((InetSocketTransportAddress) other).address.getAddress());, +    }, +, +++ b/src/main/java/org/elasticsearch/common/transport/LocalTransportAddress.java, +    public boolean sameHost(TransportAddress other) {, +        return other instanceof LocalTransportAddress && id.equals(((LocalTransportAddress) other).id);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/transport/DummyTransportAddress.java, +    public boolean sameHost(TransportAddress other) {, +        return other == INSTANCE;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/transport/InetSocketTransportAddress.java, +    @Override, +    public boolean sameHost(TransportAddress other) {, +        return other instanceof InetSocketTransportAddress &&, +                address.getAddress().equals(((InetSocketTransportAddress) other).address.getAddress());, +    }, +, +++ b/src/main/java/org/elasticsearch/common/transport/LocalTransportAddress.java, +    public boolean sameHost(TransportAddress other) {, +        return other instanceof LocalTransportAddress && id.equals(((LocalTransportAddress) other).id);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/transport/TransportAddress.java, +, +    boolean sameHost(TransportAddress other);, +++ b/src/main/java/org/elasticsearch/common/transport/DummyTransportAddress.java, +    public boolean sameHost(TransportAddress other) {, +        return other == INSTANCE;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/transport/InetSocketTransportAddress.java, +    @Override, +    public boolean sameHost(TransportAddress other) {, +        return other instanceof InetSocketTransportAddress &&, +                address.getAddress().equals(((InetSocketTransportAddress) other).address.getAddress());, +    }, +, +++ b/src/main/java/org/elasticsearch/common/transport/LocalTransportAddress.java, +    public boolean sameHost(TransportAddress other) {, +        return other instanceof LocalTransportAddress && id.equals(((LocalTransportAddress) other).id);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/transport/TransportAddress.java, +, +    boolean sameHost(TransportAddress other);, +++ b/src/main/java/org/elasticsearch/transport/TransportMessage.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License.]