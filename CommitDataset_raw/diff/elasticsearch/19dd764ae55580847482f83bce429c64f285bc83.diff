[+++ b/dev-tools/build_release.py, +import sys, +ROOT_DIR = abspath(os.path.join(abspath(dirname(__file__)), '../')), +README_FILE = ROOT_DIR + '/README.md', +POM_FILE = ROOT_DIR + '/pom.xml', +DEV_TOOLS_DIR = ROOT_DIR + '/dev-tools', +##########################################################, +#, +# Utility methods (log and run), +#, +##########################################################, +# Log a message, +, +# Purge the log file, +def purge_log():, +    os.remove(LOG), +, +, +# Log a message to the LOG file, +, +# Run a command and log it, +##########################################################, +#, +# Clean logs and check JAVA and Maven, +#, +##########################################################, +    purge_log(), +  On OSX use: export JAVA_HOME=`/usr/libexec/java_home -v '1.7*'`"""), +##########################################################, +#, +# String and file manipulation utils, +#, +##########################################################, +def release_branch(branchsource, version):, +    return 'release_branch_%s_%s' % (branchsource, version), +, +# Guess the next snapshot version number (increment last digit), +    source = '%s.%s.%s' % (digits[0], digits[1], digits[2]), +    destination = '%s.%s.%s' % (digits[0], digits[1], digits[2] + 1), +, +# Guess the anchor in generated documentation, +# Looks like this "#version-230-for-elasticsearch-13", +def get_doc_anchor(release, esversion):, +    plugin_digits = list(map(int, re.findall(r'\d+', release))), +    es_digits = list(map(int, re.findall(r'\d+', esversion))), +    return '#version-%s%s%s-for-elasticsearch-%s%s' % (, +        plugin_digits[0], plugin_digits[1], plugin_digits[2], es_digits[0], es_digits[1]), +, +, +, +, +, +, +# We need to find the right branch we are on and update the line, +#        |    es-1.3              | Build from source | [2.4.0-SNAPSHOT](https://github.com/elasticsearch/elasticsearch-cloud-azure/tree/es-1.3/#version-240-snapshot-for-elasticsearch-13)     |, +#        |    es-1.2              |     2.3.0         | [2.3.0](https://github.com/elasticsearch/elasticsearch-cloud-azure/tree/v2.3.0/#version-230-snapshot-for-elasticsearch-13)              |, +def update_documentation_to_released_version(readme_file, repo_url, release, branch, esversion):, +    pattern = '%s' % branch, +    replacement = '|    %s              |     %s         | [%s](%stree/v%s/%s)                  |\n' % (, +        branch, release, release, repo_url, release, get_doc_anchor(release, esversion)), +, +            return replacement, +, +, +, +    git_checkout(src_branch), +, +, +# Get artifacts which have been generated in target/releases, +    artifact_path = ROOT_DIR + '/target/releases/%s-%s.zip' % (artifact_id, release), +    print('  Path %s' % artifact_path), +        raise RuntimeError('Could not find required artifact at %s' % artifact_path), +, +    res += [os.path.join(directory, checksum_file), release_file], +# Format a GitHub issue as plain text, +, +# Format a GitHub issue as html text, +, +##########################################################, +#, +# GIT commands, +#, +##########################################################, +# Returns the hash of the current git HEAD revision, +def get_head_hash():, +    return os.popen('git rev-parse --verify HEAD 2>&1').read().strip(), +, +, +# Returns the name of the current branch, +def get_current_branch():, +    return os.popen('git rev-parse --abbrev-ref HEAD  2>&1').read().strip(), +, +, +# runs get fetch on the given remote, +def fetch(remote):, +    run('git fetch %s' % remote), +, +, +# Creates a new release branch from the given source branch, +# and rebases the source branch from the remote before creating]