[+++ b/build.gradle, +import org.apache.tools.ant.taskdefs.condition.Os, +    if (Os.isFamily(Os.FAMILY_WINDOWS)) {, +      eclipse.project.name = eclipse.project.name.replace(':', '_'), +    }, +++ b/build.gradle, +import org.apache.tools.ant.taskdefs.condition.Os, +    if (Os.isFamily(Os.FAMILY_WINDOWS)) {, +      eclipse.project.name = eclipse.project.name.replace(':', '_'), +    }, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/build.gradle, +import org.apache.tools.ant.taskdefs.condition.Os, +    if (Os.isFamily(Os.FAMILY_WINDOWS)) {, +      eclipse.project.name = eclipse.project.name.replace(':', '_'), +    }, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    /*, +     * The logic for ID is: XXYYZZAA, where XX is major version, YY is minor version, ZZ is revision, and AA is alpha/beta/rc indicator AA, +     * values below 25 are for alpha builder (since 5.0), and above 25 and below 50 are beta builds, and below 99 are RC builds, with 99, +     * indicating a release the (internal) format of the id is there so we can easily do after/before checks on the id, +     */, +     * @throws IllegalStateException if the given index settings doesn't contain a value for the key, +     *         {@value IndexMetaData#SETTING_VERSION_CREATED}, +            throw new IllegalStateException(, +                    "[" + IndexMetaData.SETTING_VERSION_CREATED + "] is not present in the index settings for index with uuid: [", +                            + indexSettings.get(IndexMetaData.SETTING_INDEX_UUID) + "]");, +            throw new IllegalArgumentException(, +                    "the version needs to contain major, minor, and revision, and optionally the build: " + version);, +        System.out.println("Version: " + Version.CURRENT + ", Build: " + Build.CURRENT.shortHash() + "/" + Build.CURRENT.date() + ", JVM: ", +                + JvmInfo.jvmInfo().version());, +++ b/build.gradle, +import org.apache.tools.ant.taskdefs.condition.Os, +    if (Os.isFamily(Os.FAMILY_WINDOWS)) {, +      eclipse.project.name = eclipse.project.name.replace(':', '_'), +    }, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    /*, +     * The logic for ID is: XXYYZZAA, where XX is major version, YY is minor version, ZZ is revision, and AA is alpha/beta/rc indicator AA, +     * values below 25 are for alpha builder (since 5.0), and above 25 and below 50 are beta builds, and below 99 are RC builds, with 99, +     * indicating a release the (internal) format of the id is there so we can easily do after/before checks on the id, +     */, +     * @throws IllegalStateException if the given index settings doesn't contain a value for the key, +     *         {@value IndexMetaData#SETTING_VERSION_CREATED}, +            throw new IllegalStateException(, +                    "[" + IndexMetaData.SETTING_VERSION_CREATED + "] is not present in the index settings for index with uuid: [", +                            + indexSettings.get(IndexMetaData.SETTING_INDEX_UUID) + "]");, +            throw new IllegalArgumentException(, +                    "the version needs to contain major, minor, and revision, and optionally the build: " + version);, +        System.out.println("Version: " + Version.CURRENT + ", Build: " + Build.CURRENT.shortHash() + "/" + Build.CURRENT.date() + ", JVM: ", +                + JvmInfo.jvmInfo().version());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/ListTasksResponse.java, +import org.elasticsearch.common.Strings;, +    public ListTasksResponse(List<TaskInfo> tasks, List<TaskOperationFailure> taskFailures,, +            List<? extends FailedNodeException> nodeFailures) {, +        return Strings.toString(this);, +++ b/build.gradle, +import org.apache.tools.ant.taskdefs.condition.Os, +    if (Os.isFamily(Os.FAMILY_WINDOWS)) {, +      eclipse.project.name = eclipse.project.name.replace(':', '_'), +    }, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    /*, +     * The logic for ID is: XXYYZZAA, where XX is major version, YY is minor version, ZZ is revision, and AA is alpha/beta/rc indicator AA, +     * values below 25 are for alpha builder (since 5.0), and above 25 and below 50 are beta builds, and below 99 are RC builds, with 99, +     * indicating a release the (internal) format of the id is there so we can easily do after/before checks on the id, +     */, +     * @throws IllegalStateException if the given index settings doesn't contain a value for the key, +     *         {@value IndexMetaData#SETTING_VERSION_CREATED}, +            throw new IllegalStateException(, +                    "[" + IndexMetaData.SETTING_VERSION_CREATED + "] is not present in the index settings for index with uuid: [", +                            + indexSettings.get(IndexMetaData.SETTING_INDEX_UUID) + "]");, +            throw new IllegalArgumentException(, +                    "the version needs to contain major, minor, and revision, and optionally the build: " + version);, +        System.out.println("Version: " + Version.CURRENT + ", Build: " + Build.CURRENT.shortHash() + "/" + Build.CURRENT.date() + ", JVM: ", +                + JvmInfo.jvmInfo().version());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/ListTasksResponse.java, +import org.elasticsearch.common.Strings;, +    public ListTasksResponse(List<TaskInfo> tasks, List<TaskOperationFailure> taskFailures,, +            List<? extends FailedNodeException> nodeFailures) {, +        return Strings.toString(this);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TransportListTasksAction.java, +    public TransportListTasksAction(Settings settings, ClusterName clusterName, ThreadPool threadPool, ClusterService clusterService,, +            TransportService transportService, ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver) {, +        super(settings, ListTasksAction.NAME, clusterName, threadPool, clusterService, transportService, actionFilters,, +                indexNameExpressionResolver, ListTasksRequest::new, ListTasksResponse::new, ThreadPool.Names.MANAGEMENT);, +    protected ListTasksResponse newResponse(ListTasksRequest request, List<TaskInfo> tasks,, +            List<TaskOperationFailure> taskOperationFailures, List<FailedNodeException> failedNodeExceptions) {, +++ b/build.gradle, +import org.apache.tools.ant.taskdefs.condition.Os, +    if (Os.isFamily(Os.FAMILY_WINDOWS)) {, +      eclipse.project.name = eclipse.project.name.replace(':', '_'), +    }, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    /*, +     * The logic for ID is: XXYYZZAA, where XX is major version, YY is minor version, ZZ is revision, and AA is alpha/beta/rc indicator AA]