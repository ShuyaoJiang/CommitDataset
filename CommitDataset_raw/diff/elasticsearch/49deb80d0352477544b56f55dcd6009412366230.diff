[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/SourceFieldMapper.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/SourceFieldMapper.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/ParseContext.java, +    // only should be used by SourceFieldMapper to update with a compressed source, +    public void source(byte[] source) {, +        this.source = source;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/SourceFieldMapper.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/ParseContext.java, +    // only should be used by SourceFieldMapper to update with a compressed source, +    public void source(byte[] source) {, +        this.source = source;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/SourceFieldMapper.java, +        private long compressThreshold = Defaults.COMPRESS_THRESHOLD;, +        this.compress = true;, +        if (compress != null && compress && !LZFDecoder.isCompressed(data)) {, +                context.source(data);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/SourceFieldMapper.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/ParseContext.java, +    // only should be used by SourceFieldMapper to update with a compressed source, +    public void source(byte[] source) {, +        this.source = source;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/SourceFieldMapper.java, +        private long compressThreshold = Defaults.COMPRESS_THRESHOLD;, +        this.compress = true;, +        if (compress != null && compress && !LZFDecoder.isCompressed(data)) {, +                context.source(data);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/XContentDocumentMapper.java, +import org.elasticsearch.common.compress.lzf.LZFDecoder;, +import org.elasticsearch.common.io.stream.BytesStreamInput;, +import org.elasticsearch.common.io.stream.CachedStreamInput;, +import org.elasticsearch.common.io.stream.LZFStreamInput;, +            if (LZFDecoder.isCompressed(source.source())) {, +                BytesStreamInput siBytes = new BytesStreamInput(source.source());, +                LZFStreamInput siLzf = CachedStreamInput.cachedLzf(siBytes);, +                XContentType contentType = XContentFactory.xContentType(siLzf);, +                siLzf.resetToBufferStart();, +                parser = XContentFactory.xContent(contentType).createParser(siLzf);, +            } else {, +            }, +                context.source(), context.mappersAdded()).parent(source.parent());]