[+++ b/docs/plugins/repository-azure.asciidoc, +[[repository-azure-repository-settings]], +===== Repository settings, +[[repository-azure-global-settings]], +===== Global repositories settings, +, +All those repository settings can also be defined globally in `elasticsearch.yml` file using prefix, +`repositories.azure.`. For example:, +, +[source,yaml], +----, +repositories.azure:, +    container: backup-container, +    base_path: backups, +    chunk_size: 32m, +    compress": true, +----, +, +, +++ b/docs/plugins/repository-azure.asciidoc, +[[repository-azure-repository-settings]], +===== Repository settings, +[[repository-azure-global-settings]], +===== Global repositories settings, +, +All those repository settings can also be defined globally in `elasticsearch.yml` file using prefix, +`repositories.azure.`. For example:, +, +[source,yaml], +----, +repositories.azure:, +    container: backup-container, +    base_path: backups, +    chunk_size: 32m, +    compress": true, +----, +, +, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobStore.java, +import org.elasticsearch.cloud.azure.storage.AzureStorageService.Storage;, +import org.elasticsearch.repositories.azure.AzureRepository.Defaults;, +import static org.elasticsearch.cloud.azure.storage.AzureStorageSettings.getRepositorySettings;, +        this.container = getRepositorySettings(repositorySettings, Repository.CONTAINER, Storage.CONTAINER, Defaults.CONTAINER);, +        this.accountName = getRepositorySettings(repositorySettings, Repository.ACCOUNT, Storage.ACCOUNT, null);, +        String modeStr = getRepositorySettings(repositorySettings, Repository.LOCATION_MODE, Storage.LOCATION_MODE, null);, +++ b/docs/plugins/repository-azure.asciidoc, +[[repository-azure-repository-settings]], +===== Repository settings, +[[repository-azure-global-settings]], +===== Global repositories settings, +, +All those repository settings can also be defined globally in `elasticsearch.yml` file using prefix, +`repositories.azure.`. For example:, +, +[source,yaml], +----, +repositories.azure:, +    container: backup-container, +    base_path: backups, +    chunk_size: 32m, +    compress": true, +----, +, +, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobStore.java, +import org.elasticsearch.cloud.azure.storage.AzureStorageService.Storage;, +import org.elasticsearch.repositories.azure.AzureRepository.Defaults;, +import static org.elasticsearch.cloud.azure.storage.AzureStorageSettings.getRepositorySettings;, +        this.container = getRepositorySettings(repositorySettings, Repository.CONTAINER, Storage.CONTAINER, Defaults.CONTAINER);, +        this.accountName = getRepositorySettings(repositorySettings, Repository.ACCOUNT, Storage.ACCOUNT, null);, +        String modeStr = getRepositorySettings(repositorySettings, Repository.LOCATION_MODE, Storage.LOCATION_MODE, null);, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/storage/AzureStorageService.java, +        public static final String ACCOUNT_DEPRECATED = "cloud.azure.storage.account";, +        public static final String KEY_DEPRECATED = "cloud.azure.storage.key";, +, +        public static final String ACCOUNT = "repositories.azure.account";, +        public static final String LOCATION_MODE = "repositories.azure.location_mode";, +++ b/docs/plugins/repository-azure.asciidoc, +[[repository-azure-repository-settings]], +===== Repository settings, +[[repository-azure-global-settings]], +===== Global repositories settings, +, +All those repository settings can also be defined globally in `elasticsearch.yml` file using prefix, +`repositories.azure.`. For example:, +, +[source,yaml], +----, +repositories.azure:, +    container: backup-container, +    base_path: backups, +    chunk_size: 32m, +    compress": true, +----, +, +, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobStore.java, +import org.elasticsearch.cloud.azure.storage.AzureStorageService.Storage;, +import org.elasticsearch.repositories.azure.AzureRepository.Defaults;, +import static org.elasticsearch.cloud.azure.storage.AzureStorageSettings.getRepositorySettings;]