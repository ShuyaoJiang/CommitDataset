[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java, +    public static final Setting<Boolean> ML_ENABLED =, +            Setting.boolSetting("node.ml", XPackSettings.MACHINE_LEARNING_ENABLED, Setting.Property.NodeScope);, +                        ML_ENABLED,, +        if (enabled == false || this.transportClientMode) {, +, +        Settings.Builder additionalSettings = Settings.builder();, +        additionalSettings.put(super.additionalSettings());, +        Boolean allocationEnabled = ML_ENABLED.get(settings);, +        if (allocationEnabled != null && allocationEnabled) {, +            // Copy max_running_jobs setting to node attribute, so that we use this information when assigning job tasks to nodes:, +        }, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java, +    public static final Setting<Boolean> ML_ENABLED =, +            Setting.boolSetting("node.ml", XPackSettings.MACHINE_LEARNING_ENABLED, Setting.Property.NodeScope);, +                        ML_ENABLED,, +        if (enabled == false || this.transportClientMode) {, +, +        Settings.Builder additionalSettings = Settings.builder();, +        additionalSettings.put(super.additionalSettings());, +        Boolean allocationEnabled = ML_ENABLED.get(settings);, +        if (allocationEnabled != null && allocationEnabled) {, +            // Copy max_running_jobs setting to node attribute, so that we use this information when assigning job tasks to nodes:, +        }, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/OpenJobAction.java, +            String maxNumberOfOpenJobsStr = nodeAttributes.get(AutodetectProcessManager.MAX_RUNNING_JOBS_PER_NODE.getKey());, +            if (maxNumberOfOpenJobsStr == null) {, +            long maxNumberOfOpenJobs = Long.parseLong(maxNumberOfOpenJobsStr);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java, +    public static final Setting<Boolean> ML_ENABLED =, +            Setting.boolSetting("node.ml", XPackSettings.MACHINE_LEARNING_ENABLED, Setting.Property.NodeScope);, +                        ML_ENABLED,, +        if (enabled == false || this.transportClientMode) {, +, +        Settings.Builder additionalSettings = Settings.builder();, +        additionalSettings.put(super.additionalSettings());, +        Boolean allocationEnabled = ML_ENABLED.get(settings);, +        if (allocationEnabled != null && allocationEnabled) {, +            // Copy max_running_jobs setting to node attribute, so that we use this information when assigning job tasks to nodes:, +        }, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/OpenJobAction.java, +            String maxNumberOfOpenJobsStr = nodeAttributes.get(AutodetectProcessManager.MAX_RUNNING_JOBS_PER_NODE.getKey());, +            if (maxNumberOfOpenJobsStr == null) {, +            long maxNumberOfOpenJobs = Long.parseLong(maxNumberOfOpenJobsStr);, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/action/OpenJobActionTests.java, +                        Collections.emptyMap(), Collections.emptySet(), Version.CURRENT)), +                        Collections.emptyMap(), Collections.emptySet(), Version.CURRENT)), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java, +    public static final Setting<Boolean> ML_ENABLED =, +            Setting.boolSetting("node.ml", XPackSettings.MACHINE_LEARNING_ENABLED, Setting.Property.NodeScope);, +                        ML_ENABLED,, +        if (enabled == false || this.transportClientMode) {, +, +        Settings.Builder additionalSettings = Settings.builder();, +        additionalSettings.put(super.additionalSettings());, +        Boolean allocationEnabled = ML_ENABLED.get(settings);, +        if (allocationEnabled != null && allocationEnabled) {, +            // Copy max_running_jobs setting to node attribute, so that we use this information when assigning job tasks to nodes:, +        }, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/OpenJobAction.java, +            String maxNumberOfOpenJobsStr = nodeAttributes.get(AutodetectProcessManager.MAX_RUNNING_JOBS_PER_NODE.getKey());, +            if (maxNumberOfOpenJobsStr == null) {, +            long maxNumberOfOpenJobs = Long.parseLong(maxNumberOfOpenJobsStr);, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/action/OpenJobActionTests.java, +                        Collections.emptyMap(), Collections.emptySet(), Version.CURRENT)), +                        Collections.emptyMap(), Collections.emptySet(), Version.CURRENT)), +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/integration/BasicDistributedJobsIT.java, +        internalCluster().startNode(Settings.builder().put(MachineLearning.ML_ENABLED.getKey(), false));, +        internalCluster().startNode(Settings.builder().put(MachineLearning.ML_ENABLED.getKey(), false));, +            internalCluster().startNode(Settings.builder().put(MachineLearning.ML_ENABLED.getKey(), true));, +        internalCluster().stopRandomNode(settings -> settings.getAsBoolean(MachineLearning.ML_ENABLED.getKey(), true));, +        internalCluster().startNode(Settings.builder().put(MachineLearning.ML_ENABLED.getKey(), true));, +                .put(MachineLearning.ML_ENABLED.getKey(), false));, +                .put(MachineLearning.ML_ENABLED.getKey(), true).build());, +                            .stopRandomNode(settings -> settings.getAsBoolean(MachineLearning.ML_ENABLED.getKey(), false));, +                .put(MachineLearning.ML_ENABLED.getKey(), true).build());]