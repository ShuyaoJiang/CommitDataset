[+++ b/server/src/main/java/org/elasticsearch/ExceptionsHelper.java, +++ b/server/src/main/java/org/elasticsearch/ExceptionsHelper.java, +++ b/server/src/main/java/org/elasticsearch/action/ShardOperationFailedException.java, +import org.elasticsearch.common.Nullable;, +import java.util.Objects;, +, +public abstract class ShardOperationFailedException implements Streamable, ToXContent {, +, +    protected String index;, +    protected int shardId;, +    protected String reason;, +    protected RestStatus status;, +    protected Throwable cause;, +, +    protected ShardOperationFailedException() {, +, +    }, +, +    protected ShardOperationFailedException(@Nullable String index, int shardId, String reason, RestStatus status, Throwable cause) {, +        this.index = index;, +        this.shardId = shardId;, +        this.reason = Objects.requireNonNull(reason, "reason cannot be null");, +        this.status = Objects.requireNonNull(status, "status cannot be null");, +        this.cause = Objects.requireNonNull(cause, "cause cannot be null");, +    }, +    @Nullable, +    public final String index() {, +        return index;, +    }, +    public final int shardId() {, +        return shardId;, +    }, +    public final String reason() {, +        return reason;, +    }, +    public final RestStatus status() {, +        return status;, +    }, +    public final Throwable getCause() {, +        return cause;, +    }, +++ b/server/src/main/java/org/elasticsearch/ExceptionsHelper.java, +++ b/server/src/main/java/org/elasticsearch/action/ShardOperationFailedException.java, +import org.elasticsearch.common.Nullable;, +import java.util.Objects;, +, +public abstract class ShardOperationFailedException implements Streamable, ToXContent {, +, +    protected String index;, +    protected int shardId;, +    protected String reason;, +    protected RestStatus status;, +    protected Throwable cause;, +, +    protected ShardOperationFailedException() {, +, +    }, +, +    protected ShardOperationFailedException(@Nullable String index, int shardId, String reason, RestStatus status, Throwable cause) {, +        this.index = index;, +        this.shardId = shardId;, +        this.reason = Objects.requireNonNull(reason, "reason cannot be null");, +        this.status = Objects.requireNonNull(status, "status cannot be null");, +        this.cause = Objects.requireNonNull(cause, "cause cannot be null");, +    }, +    @Nullable, +    public final String index() {, +        return index;, +    }, +    public final int shardId() {, +        return shardId;, +    }, +    public final String reason() {, +        return reason;, +    }, +    public final RestStatus status() {, +        return status;, +    }, +    public final Throwable getCause() {, +        return cause;, +    }, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java, +        static Failure readFailure(StreamInput in) throws IOException {, +++ b/server/src/main/java/org/elasticsearch/ExceptionsHelper.java, +++ b/server/src/main/java/org/elasticsearch/action/ShardOperationFailedException.java, +import org.elasticsearch.common.Nullable;, +import java.util.Objects;, +, +public abstract class ShardOperationFailedException implements Streamable, ToXContent {, +, +    protected String index;, +    protected int shardId;, +    protected String reason;, +    protected RestStatus status;, +    protected Throwable cause;, +, +    protected ShardOperationFailedException() {, +, +    }, +]