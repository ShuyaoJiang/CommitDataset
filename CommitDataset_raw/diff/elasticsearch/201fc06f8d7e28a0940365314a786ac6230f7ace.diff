[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +        if (request.getTaskId().isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +        if (request.getTaskId().isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TaskInfo.java, +        if (parentTaskId.isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +        if (request.getTaskId().isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TaskInfo.java, +        if (parentTaskId.isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/support/tasks/BaseTasksRequest.java, +        if (taskId.isSet() && nodesIds.length > 0) {, +        if (getTaskId().isSet()) {, +        if (parentTaskId.isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +        if (request.getTaskId().isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TaskInfo.java, +        if (parentTaskId.isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/support/tasks/BaseTasksRequest.java, +        if (taskId.isSet() && nodesIds.length > 0) {, +        if (getTaskId().isSet()) {, +        if (parentTaskId.isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/support/tasks/TransportTasksAction.java, +        } else {, +            return clusterState.nodes().resolveNodesIds(request.getNodesIds());, +        if (request.getTaskId().isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +        if (request.getTaskId().isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TaskInfo.java, +        if (parentTaskId.isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/support/tasks/BaseTasksRequest.java, +        if (taskId.isSet() && nodesIds.length > 0) {, +        if (getTaskId().isSet()) {, +        if (parentTaskId.isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/support/tasks/TransportTasksAction.java, +        } else {, +            return clusterState.nodes().resolveNodesIds(request.getNodesIds());, +        if (request.getTaskId().isSet()) {, +++ b/core/src/main/java/org/elasticsearch/tasks/TaskId.java, +        return id != -1L;, +        } else {, +            return "unset";, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +        if (request.getTaskId().isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TaskInfo.java, +        if (parentTaskId.isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/support/tasks/BaseTasksRequest.java, +        if (taskId.isSet() && nodesIds.length > 0) {, +        if (getTaskId().isSet()) {, +        if (parentTaskId.isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/support/tasks/TransportTasksAction.java, +        } else {, +            return clusterState.nodes().resolveNodesIds(request.getNodesIds());, +        if (request.getTaskId().isSet()) {, +++ b/core/src/main/java/org/elasticsearch/tasks/TaskId.java, +        return id != -1L;, +        } else {, +            return "unset";, +++ b/core/src/main/java/org/elasticsearch/tasks/TaskManager.java, +                if (task.getParentTaskId().isSet() && banedParents.isEmpty() == false) {, +                if (parentTaskId.isSet() && lastDiscoveryNodes.nodeExists(parentTaskId.getNodeId()) == false) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +        if (request.getTaskId().isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TaskInfo.java, +        if (parentTaskId.isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/support/tasks/BaseTasksRequest.java, +        if (taskId.isSet() && nodesIds.length > 0) {, +        if (getTaskId().isSet()) {, +        if (parentTaskId.isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/support/tasks/TransportTasksAction.java, +        } else {, +            return clusterState.nodes().resolveNodesIds(request.getNodesIds());, +        if (request.getTaskId().isSet()) {, +++ b/core/src/main/java/org/elasticsearch/tasks/TaskId.java, +        return id != -1L;, +        } else {, +            return "unset";, +++ b/core/src/main/java/org/elasticsearch/tasks/TaskManager.java, +                if (task.getParentTaskId().isSet() && banedParents.isEmpty() == false) {, +                if (parentTaskId.isSet() && lastDiscoveryNodes.nodeExists(parentTaskId.getNodeId()) == false) {, +++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/TasksIT.java, +        } else {, +            assertParentTask(Collections.singletonList(tasks.get(1)), tasks.get(0));, +            assertTrue(task.getParentTaskId().isSet());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +        if (request.getTaskId().isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TaskInfo.java, +        if (parentTaskId.isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/support/tasks/BaseTasksRequest.java, +        if (taskId.isSet() && nodesIds.length > 0) {, +        if (getTaskId().isSet()) {, +        if (parentTaskId.isSet()) {, +++ b/core/src/main/java/org/elasticsearch/action/support/tasks/TransportTasksAction.java, +        } else {, +            return clusterState.nodes().resolveNodesIds(request.getNodesIds());, +        if (request.getTaskId().isSet()) {, +++ b/core/src/main/java/org/elasticsearch/tasks/TaskId.java, +        return id != -1L;, +        } else {, +            return "unset";]