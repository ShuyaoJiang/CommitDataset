[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +                Map<String, Object> mapping = parser.mapOrdered();, +                            Map<String, Object> mapping = parser.mapOrdered();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +                Map<String, Object> mapping = parser.mapOrdered();, +                            Map<String, Object> mapping = parser.mapOrdered();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentParser.java, +    Map<String, Object> mapOrdered() throws IOException;, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +                Map<String, Object> mapping = parser.mapOrdered();, +                            Map<String, Object> mapping = parser.mapOrdered();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentParser.java, +    Map<String, Object> mapOrdered() throws IOException;, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/support/AbstractXContentParser.java, +    @Override public Map<String, Object> mapOrdered() throws IOException {, +        return XContentMapConverter.readOrderedMap(this);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +                Map<String, Object> mapping = parser.mapOrdered();, +                            Map<String, Object> mapping = parser.mapOrdered();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentParser.java, +    Map<String, Object> mapOrdered() throws IOException;, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/support/AbstractXContentParser.java, +    @Override public Map<String, Object> mapOrdered() throws IOException {, +        return XContentMapConverter.readOrderedMap(this);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/support/XContentMapConverter.java, +    public static interface MapFactory {, +        Map<String, Object> newMap();, +    }, +, +    public static final MapFactory SIMPLE_MAP_FACTORY = new MapFactory() {, +        @Override public Map<String, Object> newMap() {, +            return new HashMap<String, Object>();, +        }, +    };, +, +    public static final MapFactory ORDERED_MAP_FACTORY = new MapFactory() {, +        @Override public Map<String, Object> newMap() {, +            return new LinkedHashMap<String, Object>();, +        }, +    };, +, +        return readMap(parser, SIMPLE_MAP_FACTORY);, +    }, +, +    public static Map<String, Object> readOrderedMap(XContentParser parser) throws IOException {, +        return readMap(parser, ORDERED_MAP_FACTORY);, +    }, +, +    public static Map<String, Object> readMap(XContentParser parser, MapFactory mapFactory) throws IOException {, +        Map<String, Object> map = mapFactory.newMap();, +            Object value = readValue(parser, mapFactory, t);, +    private static List<Object> readList(XContentParser parser, MapFactory mapFactory, XContentParser.Token t) throws IOException {, +            list.add(readValue(parser, mapFactory, t));, +    private static Object readValue(XContentParser parser, MapFactory mapFactory, XContentParser.Token t) throws IOException {, +            return readMap(parser, mapFactory);, +            return readList(parser, mapFactory, t);]