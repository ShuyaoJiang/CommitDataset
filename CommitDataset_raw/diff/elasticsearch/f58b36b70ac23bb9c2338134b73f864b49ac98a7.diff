[+++ b/src/main/java/org/elasticsearch/alerts/AlertsStore.java, +                            } else if (token.isValue()) {, +                                switch (searchRequestFieldName) {, +                                    case "template_name":, +                                        searchRequest.templateName(parser.textOrNull());, +                                        break;, +                                    default:, +                                        throw new ElasticsearchIllegalArgumentException("Unexpected field [" + searchRequestFieldName + "]");, +                                }, +++ b/src/main/java/org/elasticsearch/alerts/AlertsStore.java, +                            } else if (token.isValue()) {, +                                switch (searchRequestFieldName) {, +                                    case "template_name":, +                                        searchRequest.templateName(parser.textOrNull());, +                                        break;, +                                    default:, +                                        throw new ElasticsearchIllegalArgumentException("Unexpected field [" + searchRequestFieldName + "]");, +                                }, +++ b/src/test/java/org/elasticsearch/alerts/AbstractAlertingTests.java, +import org.elasticsearch.common.Strings;, +        if (Strings.hasLength(request.source())) {, +        }, +        if (request.templateName() != null) {, +            builder.field("template_name", request.templateName());, +        }, +    protected void assertAlertTriggered(final String alertName, final long expectedAlertActionsWithActionPerformed) throws Exception {, +                assertThat(searchResponse.getHits().getTotalHits(), greaterThanOrEqualTo(expectedAlertActionsWithActionPerformed));, +    protected void assertNoAlertTrigger(final String alertName, final long expectedAlertActionsWithNoActionNeeded) throws Exception {, +//                SearchResponse k = client().prepareSearch(AlertActionManager.ALERT_HISTORY_INDEX), +//                        .setIndicesOptions(IndicesOptions.lenientExpandOpen()), +//                        .setQuery(boolQuery().must(matchQuery("alert_name", alertName))), +//                        .get();, +//                System.out.println("KK: " + k.getHits().getTotalHits());, +//                for (SearchHit hit : k.getHits()) {, +//                    System.out.println("Hit " + XContentHelper.toString(hit));, +//                }, +, +                assertThat(searchResponse.getHits().getTotalHits(), greaterThanOrEqualTo(expectedAlertActionsWithNoActionNeeded));, +++ b/src/main/java/org/elasticsearch/alerts/AlertsStore.java, +                            } else if (token.isValue()) {, +                                switch (searchRequestFieldName) {, +                                    case "template_name":, +                                        searchRequest.templateName(parser.textOrNull());, +                                        break;, +                                    default:, +                                        throw new ElasticsearchIllegalArgumentException("Unexpected field [" + searchRequestFieldName + "]");, +                                }, +++ b/src/test/java/org/elasticsearch/alerts/AbstractAlertingTests.java, +import org.elasticsearch.common.Strings;, +        if (Strings.hasLength(request.source())) {, +        }, +        if (request.templateName() != null) {, +            builder.field("template_name", request.templateName());, +        }, +    protected void assertAlertTriggered(final String alertName, final long expectedAlertActionsWithActionPerformed) throws Exception {, +                assertThat(searchResponse.getHits().getTotalHits(), greaterThanOrEqualTo(expectedAlertActionsWithActionPerformed));, +    protected void assertNoAlertTrigger(final String alertName, final long expectedAlertActionsWithNoActionNeeded) throws Exception {, +//                SearchResponse k = client().prepareSearch(AlertActionManager.ALERT_HISTORY_INDEX), +//                        .setIndicesOptions(IndicesOptions.lenientExpandOpen()), +//                        .setQuery(boolQuery().must(matchQuery("alert_name", alertName))), +//                        .get();, +//                System.out.println("KK: " + k.getHits().getTotalHits());, +//                for (SearchHit hit : k.getHits()) {, +//                    System.out.println("Hit " + XContentHelper.toString(hit));, +//                }, +, +                assertThat(searchResponse.getHits().getTotalHits(), greaterThanOrEqualTo(expectedAlertActionsWithNoActionNeeded));, +++ b/src/test/java/org/elasticsearch/alerts/BasicAlertingTest.java, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +        assertAlertTriggered("my-first-alert", 1);, +        assertNoAlertTrigger("my-first-alert", 1);, +        assertAlertTriggered("my-first-alert", 1);, +        assertAcked(prepareCreate("my-index").addMapping("my-type", "_timestamp", "enabled=true", "event_type", "type=string"));, +        client().preparePutIndexedScript(), +                .setScriptLang("mustache"), +                .setId("my-template"), +                .setSource(jsonBuilder().startObject().field("template").value(SearchSourceBuilder.searchSource().query(, +                        filteredQuery(matchQuery("event_type", "a"), rangeFilter("_timestamp").from("{{SCHEDULED_FIRE_TIME}}||-30s").to("{{SCHEDULED_FIRE_TIME}}")), +                )).endObject()), +                .get();, +        SearchRequest[] searchRequests = new SearchRequest[]{, +                new SearchRequest("my-index").source(searchSource().query(, +//                client().prepareSearch("my-index").setTemplateName("my-template").request(), +                // TODO: add template source based search requests, +        };, +            logger.info("Running: {}", request);, +            // A clean start. no data to trigger on and alert actions, +            cluster().wipeIndices(AlertActionManager.ALERT_HISTORY_INDEX, "my-index");, +, +            assertNoAlertTrigger(alertName, 1);, +            assertNoAlertTrigger(alertName, 2);, +            assertAlertTriggered(alertName, 1);, +++ b/src/main/java/org/elasticsearch/alerts/AlertsStore.java, +                            } else if (token.isValue()) {, +                                switch (searchRequestFieldName) {, +                                    case "template_name":, +                                        searchRequest.templateName(parser.textOrNull());, +                                        break;, +                                    default:, +                                        throw new ElasticsearchIllegalArgumentException("Unexpected field [" + searchRequestFieldName + "]");]