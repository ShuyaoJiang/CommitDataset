[+++ b/src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexRequest.java, +     * Constructs a new close index request for the specified index., +     * Timeout to wait for the index closure to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index closure to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index closure to be acknowledged by current cluster nodes. Defaults, +++ b/src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexRequest.java, +     * Constructs a new close index request for the specified index., +     * Timeout to wait for the index closure to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index closure to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index closure to be acknowledged by current cluster nodes. Defaults, +++ b/src/main/java/org/elasticsearch/action/admin/indices/open/OpenIndexRequest.java, +     * Constructs a new open index request for the specified index., +     * Timeout to wait for the index opening to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index opening to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index opening to be acknowledged by current cluster nodes. Defaults, +++ b/src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexRequest.java, +     * Constructs a new close index request for the specified index., +     * Timeout to wait for the index closure to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index closure to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index closure to be acknowledged by current cluster nodes. Defaults, +++ b/src/main/java/org/elasticsearch/action/admin/indices/open/OpenIndexRequest.java, +     * Constructs a new open index request for the specified index., +     * Timeout to wait for the index opening to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index opening to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index opening to be acknowledged by current cluster nodes. Defaults, +++ b/src/main/java/org/elasticsearch/cluster/ClusterChangedEvent.java, +import com.google.common.collect.ImmutableMap;, +import java.util.Map;, +, +    public boolean indicesStateChanged() {, +        if (metaDataChanged()) {, +            ImmutableMap<String,IndexMetaData> indices = state.metaData().indices();, +            ImmutableMap<String,IndexMetaData> previousIndices = previousState.metaData().indices();, +, +            for (Map.Entry<String, IndexMetaData> entry : indices.entrySet()) {, +                IndexMetaData indexMetaData = entry.getValue();, +                IndexMetaData previousIndexMetaData = previousIndices.get(entry.getKey());, +                if (previousIndexMetaData != null, +                        && indexMetaData.state() != previousIndexMetaData.state()) {, +                    return true;, +                }, +            }, +        }, +, +        return false;, +    }, +++ b/src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexRequest.java, +     * Constructs a new close index request for the specified index., +     * Timeout to wait for the index closure to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index closure to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index closure to be acknowledged by current cluster nodes. Defaults, +++ b/src/main/java/org/elasticsearch/action/admin/indices/open/OpenIndexRequest.java, +     * Constructs a new open index request for the specified index., +     * Timeout to wait for the index opening to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index opening to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index opening to be acknowledged by current cluster nodes. Defaults, +++ b/src/main/java/org/elasticsearch/cluster/ClusterChangedEvent.java, +import com.google.common.collect.ImmutableMap;, +import java.util.Map;, +, +    public boolean indicesStateChanged() {, +        if (metaDataChanged()) {, +            ImmutableMap<String,IndexMetaData> indices = state.metaData().indices();, +            ImmutableMap<String,IndexMetaData> previousIndices = previousState.metaData().indices();, +, +            for (Map.Entry<String, IndexMetaData> entry : indices.entrySet()) {, +                IndexMetaData indexMetaData = entry.getValue();, +                IndexMetaData previousIndexMetaData = previousIndices.get(entry.getKey());, +                if (previousIndexMetaData != null, +                        && indexMetaData.state() != previousIndexMetaData.state()) {, +                    return true;, +                }, +            }, +        }, +, +        return false;, +    }, +++ b/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +        bind(NodeIndicesStateUpdatedAction.class).asEagerSingleton();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexRequest.java, +     * Constructs a new close index request for the specified index., +     * Timeout to wait for the index closure to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index closure to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index closure to be acknowledged by current cluster nodes. Defaults, +++ b/src/main/java/org/elasticsearch/action/admin/indices/open/OpenIndexRequest.java, +     * Constructs a new open index request for the specified index., +     * Timeout to wait for the index opening to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index opening to be acknowledged by current cluster nodes. Defaults, +     * Timeout to wait for the index opening to be acknowledged by current cluster nodes. Defaults, +++ b/src/main/java/org/elasticsearch/cluster/ClusterChangedEvent.java, +import com.google.common.collect.ImmutableMap;, +import java.util.Map;, +, +    public boolean indicesStateChanged() {, +        if (metaDataChanged()) {, +            ImmutableMap<String,IndexMetaData> indices = state.metaData().indices();, +            ImmutableMap<String,IndexMetaData> previousIndices = previousState.metaData().indices();, +, +            for (Map.Entry<String, IndexMetaData> entry : indices.entrySet()) {, +                IndexMetaData indexMetaData = entry.getValue();]