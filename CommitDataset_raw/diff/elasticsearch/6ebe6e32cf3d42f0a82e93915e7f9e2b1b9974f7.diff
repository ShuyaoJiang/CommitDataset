[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +     * Certain requests should not have the shard failure check because the, +     * format of the response is incompatible i.e. it is not a JSON object., +     */, +    static shouldAddShardFailureCheck(String path) {, +        return path.startsWith('_cat') == false &&  path.startsWith('_xpack/ml/datafeeds/') == false, +    }, +, +    /**, +             * framework doesn't allow us to have assertions in the setup, +             * section so we have to skip it there. We also omit the assertion, +             * from APIs that don't return a JSON object, +            if (false == inSetup && shouldAddShardFailureCheck(path)) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +     * Certain requests should not have the shard failure check because the, +     * format of the response is incompatible i.e. it is not a JSON object., +     */, +    static shouldAddShardFailureCheck(String path) {, +        return path.startsWith('_cat') == false &&  path.startsWith('_xpack/ml/datafeeds/') == false, +    }, +, +    /**, +             * framework doesn't allow us to have assertions in the setup, +             * section so we have to skip it there. We also omit the assertion, +             * from APIs that don't return a JSON object, +            if (false == inSetup && shouldAddShardFailureCheck(path)) {, +++ b/buildSrc/src/test/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTaskTest.groovy, +import static org.elasticsearch.gradle.doc.RestTestsFromSnippetsTask.shouldAddShardFailureCheck, +, +    void testIsDocWriteRequest() {, +        assertTrue(shouldAddShardFailureCheck("doc-index/_search"));, +        assertFalse(shouldAddShardFailureCheck("_cat")), +        assertFalse(shouldAddShardFailureCheck("_xpack/ml/datafeeds/datafeed-id/_preview"));, +    }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +     * Certain requests should not have the shard failure check because the, +     * format of the response is incompatible i.e. it is not a JSON object., +     */, +    static shouldAddShardFailureCheck(String path) {, +        return path.startsWith('_cat') == false &&  path.startsWith('_xpack/ml/datafeeds/') == false, +    }, +, +    /**, +             * framework doesn't allow us to have assertions in the setup, +             * section so we have to skip it there. We also omit the assertion, +             * from APIs that don't return a JSON object, +            if (false == inSetup && shouldAddShardFailureCheck(path)) {, +++ b/buildSrc/src/test/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTaskTest.groovy, +import static org.elasticsearch.gradle.doc.RestTestsFromSnippetsTask.shouldAddShardFailureCheck, +, +    void testIsDocWriteRequest() {, +        assertTrue(shouldAddShardFailureCheck("doc-index/_search"));, +        assertFalse(shouldAddShardFailureCheck("_cat")), +        assertFalse(shouldAddShardFailureCheck("_xpack/ml/datafeeds/datafeed-id/_preview"));, +    }, +++ b/docs/reference/rest-api/info.asciidoc, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +     * Certain requests should not have the shard failure check because the, +     * format of the response is incompatible i.e. it is not a JSON object., +     */, +    static shouldAddShardFailureCheck(String path) {, +        return path.startsWith('_cat') == false &&  path.startsWith('_xpack/ml/datafeeds/') == false, +    }, +, +    /**, +             * framework doesn't allow us to have assertions in the setup, +             * section so we have to skip it there. We also omit the assertion, +             * from APIs that don't return a JSON object, +            if (false == inSetup && shouldAddShardFailureCheck(path)) {, +++ b/buildSrc/src/test/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTaskTest.groovy, +import static org.elasticsearch.gradle.doc.RestTestsFromSnippetsTask.shouldAddShardFailureCheck, +, +    void testIsDocWriteRequest() {, +        assertTrue(shouldAddShardFailureCheck("doc-index/_search"));, +        assertFalse(shouldAddShardFailureCheck("_cat")), +        assertFalse(shouldAddShardFailureCheck("_xpack/ml/datafeeds/datafeed-id/_preview"));, +    }, +++ b/docs/reference/rest-api/info.asciidoc, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +     * Certain requests should not have the shard failure check because the, +     * format of the response is incompatible i.e. it is not a JSON object., +     */, +    static shouldAddShardFailureCheck(String path) {, +        return path.startsWith('_cat') == false &&  path.startsWith('_xpack/ml/datafeeds/') == false, +    }, +, +    /**, +             * framework doesn't allow us to have assertions in the setup, +             * section so we have to skip it there. We also omit the assertion, +             * from APIs that don't return a JSON object, +            if (false == inSetup && shouldAddShardFailureCheck(path)) {, +++ b/buildSrc/src/test/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTaskTest.groovy, +import static org.elasticsearch.gradle.doc.RestTestsFromSnippetsTask.shouldAddShardFailureCheck, +, +    void testIsDocWriteRequest() {, +        assertTrue(shouldAddShardFailureCheck("doc-index/_search"));, +        assertFalse(shouldAddShardFailureCheck("_cat")), +        assertFalse(shouldAddShardFailureCheck("_xpack/ml/datafeeds/datafeed-id/_preview"));, +    }]