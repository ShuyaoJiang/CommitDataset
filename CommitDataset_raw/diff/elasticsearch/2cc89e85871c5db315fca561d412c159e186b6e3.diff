[+++ b/build.gradle, +        failOnVersionConflict(), +++ b/build.gradle, +        failOnVersionConflict(), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.api.artifacts.ProjectDependency, +        configureConfigurations(project), +    /** Makes dependencies non-transitive by default */, +    static void configureConfigurations(Project project) {, +, +        // force all dependencies added directly to compile/testCompile to be non-transitive, except for ES itself, +        project.configurations.compile.dependencies.all { dep ->, +            if (!(dep instanceof ProjectDependency) && dep.getGroup() != 'org.elasticsearch') {, +                dep.transitive = false, +            }, +        }, +        project.configurations.testCompile.dependencies.all { dep ->, +            if (!(dep instanceof ProjectDependency) && dep.getGroup() != 'org.elasticsearch') {, +                dep.transitive = false, +            }, +        }, +    }, +, +    /** Adds repositores used by ES dependencies */, +++ b/build.gradle, +        failOnVersionConflict(), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.api.artifacts.ProjectDependency, +        configureConfigurations(project), +    /** Makes dependencies non-transitive by default */, +    static void configureConfigurations(Project project) {, +, +        // force all dependencies added directly to compile/testCompile to be non-transitive, except for ES itself, +        project.configurations.compile.dependencies.all { dep ->, +            if (!(dep instanceof ProjectDependency) && dep.getGroup() != 'org.elasticsearch') {, +                dep.transitive = false, +            }, +        }, +        project.configurations.testCompile.dependencies.all { dep ->, +            if (!(dep instanceof ProjectDependency) && dep.getGroup() != 'org.elasticsearch') {, +                dep.transitive = false, +            }, +        }, +    }, +, +    /** Adds repositores used by ES dependencies */, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            File jps = getJpsExecutableByName("jps"), +            if (!jps.exists()) {, +            }, +++ b/build.gradle, +        failOnVersionConflict(), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.api.artifacts.ProjectDependency, +        configureConfigurations(project), +    /** Makes dependencies non-transitive by default */, +    static void configureConfigurations(Project project) {, +, +        // force all dependencies added directly to compile/testCompile to be non-transitive, except for ES itself, +        project.configurations.compile.dependencies.all { dep ->, +            if (!(dep instanceof ProjectDependency) && dep.getGroup() != 'org.elasticsearch') {, +                dep.transitive = false, +            }, +        }, +        project.configurations.testCompile.dependencies.all { dep ->, +            if (!(dep instanceof ProjectDependency) && dep.getGroup() != 'org.elasticsearch') {, +                dep.transitive = false, +            }, +        }, +    }, +, +    /** Adds repositores used by ES dependencies */, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            File jps = getJpsExecutableByName("jps"), +            if (!jps.exists()) {, +            }, +++ b/buildSrc/version.properties, +httpcore          = 4.3.3, +commonslogging    = 1.1.3, +commonscodec      = 1.10, +++ b/build.gradle, +        failOnVersionConflict(), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.api.artifacts.ProjectDependency, +        configureConfigurations(project), +    /** Makes dependencies non-transitive by default */, +    static void configureConfigurations(Project project) {, +, +        // force all dependencies added directly to compile/testCompile to be non-transitive, except for ES itself, +        project.configurations.compile.dependencies.all { dep ->, +            if (!(dep instanceof ProjectDependency) && dep.getGroup() != 'org.elasticsearch') {, +                dep.transitive = false, +            }, +        }, +        project.configurations.testCompile.dependencies.all { dep ->, +            if (!(dep instanceof ProjectDependency) && dep.getGroup() != 'org.elasticsearch') {, +                dep.transitive = false, +            }, +        }, +    }]