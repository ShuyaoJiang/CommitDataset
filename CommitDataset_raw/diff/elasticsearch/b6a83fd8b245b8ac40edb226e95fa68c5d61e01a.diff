[+++ b/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java, +    private final QueryBuilder queryBuilder;, +, +        this.queryBuilder = null;, +    }, +    /**, +     * A query that wraps a query and simply returns a constant score equal to the, +     * query boost for every document in the query., +     *, +     * @param queryBuilder The query to wrap in a constant score query, +     */, +    public ConstantScoreQueryBuilder(QueryBuilder queryBuilder) {, +        this.filterBuilder = null;, +        this.queryBuilder = queryBuilder;, +        if (queryBuilder != null) {, +            assert filterBuilder == null;, +            builder.field("query");, +            queryBuilder.toXContent(builder, params);, +        } else {, +        }, +        , +++ b/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java, +    private final QueryBuilder queryBuilder;, +, +        this.queryBuilder = null;, +    }, +    /**, +     * A query that wraps a query and simply returns a constant score equal to the, +     * query boost for every document in the query., +     *, +     * @param queryBuilder The query to wrap in a constant score query, +     */, +    public ConstantScoreQueryBuilder(QueryBuilder queryBuilder) {, +        this.filterBuilder = null;, +        this.queryBuilder = queryBuilder;, +        if (queryBuilder != null) {, +            assert filterBuilder == null;, +            builder.field("query");, +            queryBuilder.toXContent(builder, params);, +        } else {, +        }, +        , +++ b/src/main/java/org/elasticsearch/index/query/QueryBuilders.java, +    , +    /**, +     * A query that wraps another query and simply returns a constant score equal to the, +     * query boost for every document in the query., +     *, +     * @param queryBuilder The query to wrap in a constant score query, +     */, +    public static ConstantScoreQueryBuilder constantScoreQuery(QueryBuilder queryBuilder) {, +        return new ConstantScoreQueryBuilder(queryBuilder);, +    }, +++ b/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java, +    private final QueryBuilder queryBuilder;, +, +        this.queryBuilder = null;, +    }, +    /**, +     * A query that wraps a query and simply returns a constant score equal to the, +     * query boost for every document in the query., +     *, +     * @param queryBuilder The query to wrap in a constant score query, +     */, +    public ConstantScoreQueryBuilder(QueryBuilder queryBuilder) {, +        this.filterBuilder = null;, +        this.queryBuilder = queryBuilder;, +        if (queryBuilder != null) {, +            assert filterBuilder == null;, +            builder.field("query");, +            queryBuilder.toXContent(builder, params);, +        } else {, +        }, +        , +++ b/src/main/java/org/elasticsearch/index/query/QueryBuilders.java, +    , +    /**, +     * A query that wraps another query and simply returns a constant score equal to the, +     * query boost for every document in the query., +     *, +     * @param queryBuilder The query to wrap in a constant score query, +     */, +    public static ConstantScoreQueryBuilder constantScoreQuery(QueryBuilder queryBuilder) {, +        return new ConstantScoreQueryBuilder(queryBuilder);, +    }, +++ b/src/main/java/org/elasticsearch/search/highlight/CustomQueryScorer.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY]