[+++ b/core/src/main/java/org/elasticsearch/action/termvectors/TransportShardMultiTermsVectorAction.java, +                                                IndexNameExpressionResolver indexNameExpressionResolver) {, +                TermVectorsResponse termVectorsResponse = TermVectorsService.getTermVectors(indexShard, termVectorsRequest);, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TransportShardMultiTermsVectorAction.java, +                                                IndexNameExpressionResolver indexNameExpressionResolver) {, +                TermVectorsResponse termVectorsResponse = TermVectorsService.getTermVectors(indexShard, termVectorsRequest);, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TransportTermVectorsAction.java, +                                      IndexNameExpressionResolver indexNameExpressionResolver) {, +        TermVectorsResponse response = TermVectorsService.getTermVectors(indexShard, request);, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TransportShardMultiTermsVectorAction.java, +                                                IndexNameExpressionResolver indexNameExpressionResolver) {, +                TermVectorsResponse termVectorsResponse = TermVectorsService.getTermVectors(indexShard, termVectorsRequest);, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TransportTermVectorsAction.java, +                                      IndexNameExpressionResolver indexNameExpressionResolver) {, +        TermVectorsResponse response = TermVectorsService.getTermVectors(indexShard, request);, +++ b/core/src/main/java/org/elasticsearch/index/termvectors/TermVectorsService.java, +, +    private TermVectorsService() {}, +, +    public static TermVectorsResponse getTermVectors(IndexShard indexShard, TermVectorsRequest request) {, +    private static void handleFieldWildcards(IndexShard indexShard, TermVectorsRequest request) {, +    private static boolean isValidField(MappedFieldType fieldType) {, +    private static Fields addGeneratedTermVectors(IndexShard indexShard, Engine.GetResult get, Fields termVectorsByField, TermVectorsRequest request, Set<String> selectedFields) throws IOException {, +    private static Analyzer getAnalyzerAtField(IndexShard indexShard, String field, @Nullable Map<String, String> perFieldAnalyzer) {, +    private static Set<String> getFieldsToGenerate(Map<String, String> perAnalyzerField, Fields fieldsObject) {, +    private static Fields generateTermVectors(IndexShard indexShard, Collection<GetField> getFields, boolean withOffsets, @Nullable Map<String, String> perFieldAnalyzer, Set<String> fields), +    private static Fields generateTermVectorsFromDoc(IndexShard indexShard, TermVectorsRequest request, boolean doAllFields) throws Throwable {, +    private static ParsedDocument parseDocument(IndexShard indexShard, String index, String type, BytesReference doc) throws Throwable {, +    private static Fields mergeFields(Fields fields1, Fields fields2) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TransportShardMultiTermsVectorAction.java, +                                                IndexNameExpressionResolver indexNameExpressionResolver) {, +                TermVectorsResponse termVectorsResponse = TermVectorsService.getTermVectors(indexShard, termVectorsRequest);, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TransportTermVectorsAction.java, +                                      IndexNameExpressionResolver indexNameExpressionResolver) {, +        TermVectorsResponse response = TermVectorsService.getTermVectors(indexShard, request);, +++ b/core/src/main/java/org/elasticsearch/index/termvectors/TermVectorsService.java, +, +    private TermVectorsService() {}, +, +    public static TermVectorsResponse getTermVectors(IndexShard indexShard, TermVectorsRequest request) {, +    private static void handleFieldWildcards(IndexShard indexShard, TermVectorsRequest request) {, +    private static boolean isValidField(MappedFieldType fieldType) {, +    private static Fields addGeneratedTermVectors(IndexShard indexShard, Engine.GetResult get, Fields termVectorsByField, TermVectorsRequest request, Set<String> selectedFields) throws IOException {, +    private static Analyzer getAnalyzerAtField(IndexShard indexShard, String field, @Nullable Map<String, String> perFieldAnalyzer) {, +    private static Set<String> getFieldsToGenerate(Map<String, String> perAnalyzerField, Fields fieldsObject) {, +    private static Fields generateTermVectors(IndexShard indexShard, Collection<GetField> getFields, boolean withOffsets, @Nullable Map<String, String> perFieldAnalyzer, Set<String> fields), +    private static Fields generateTermVectorsFromDoc(IndexShard indexShard, TermVectorsRequest request, boolean doAllFields) throws Throwable {, +    private static ParsedDocument parseDocument(IndexShard indexShard, String index, String type, BytesReference doc) throws Throwable {, +    private static Fields mergeFields(Fields fields1, Fields fields2) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesModule.java, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TransportShardMultiTermsVectorAction.java, +                                                IndexNameExpressionResolver indexNameExpressionResolver) {, +                TermVectorsResponse termVectorsResponse = TermVectorsService.getTermVectors(indexShard, termVectorsRequest);, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TransportTermVectorsAction.java, +                                      IndexNameExpressionResolver indexNameExpressionResolver) {, +        TermVectorsResponse response = TermVectorsService.getTermVectors(indexShard, request);, +++ b/core/src/main/java/org/elasticsearch/index/termvectors/TermVectorsService.java, +, +    private TermVectorsService() {}, +, +    public static TermVectorsResponse getTermVectors(IndexShard indexShard, TermVectorsRequest request) {, +    private static void handleFieldWildcards(IndexShard indexShard, TermVectorsRequest request) {, +    private static boolean isValidField(MappedFieldType fieldType) {, +    private static Fields addGeneratedTermVectors(IndexShard indexShard, Engine.GetResult get, Fields termVectorsByField, TermVectorsRequest request, Set<String> selectedFields) throws IOException {, +    private static Analyzer getAnalyzerAtField(IndexShard indexShard, String field, @Nullable Map<String, String> perFieldAnalyzer) {, +    private static Set<String> getFieldsToGenerate(Map<String, String> perAnalyzerField, Fields fieldsObject) {, +    private static Fields generateTermVectors(IndexShard indexShard, Collection<GetField> getFields, boolean withOffsets, @Nullable Map<String, String> perFieldAnalyzer, Set<String> fields), +    private static Fields generateTermVectorsFromDoc(IndexShard indexShard, TermVectorsRequest request, boolean doAllFields) throws Throwable {, +    private static ParsedDocument parseDocument(IndexShard indexShard, String index, String type, BytesReference doc) throws Throwable {, +    private static Fields mergeFields(Fields fields1, Fields fields2) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesModule.java, +++ b/core/src/test/java/org/elasticsearch/search/fetch/FetchSubPhasePluginIT.java, +            TermVectorsResponse termVector = TermVectorsService.getTermVectors(context.indexShard(), new TermVectorsRequest(context.indexShard().shardId().getIndex().getName(), hitContext.hit().type(), hitContext.hit().id()));]