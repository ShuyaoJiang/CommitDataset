[+++ b/docs/reference/search/suggesters.asciidoc, +include::suggesters/context-suggest.asciidoc[], +, +++ b/docs/reference/search/suggesters.asciidoc, +include::suggesters/context-suggest.asciidoc[], +, +++ b/docs/reference/search/suggesters/completion-suggest.asciidoc, +NOTE: The completion suggester considers all documents in the index., +See <<suggester-context>> for an explanation of how to query a subset of, +documents instead., +++ b/docs/reference/search/suggesters.asciidoc, +include::suggesters/context-suggest.asciidoc[], +, +++ b/docs/reference/search/suggesters/completion-suggest.asciidoc, +NOTE: The completion suggester considers all documents in the index., +See <<suggester-context>> for an explanation of how to query a subset of, +documents instead., +++ b/docs/reference/search/suggesters/context-suggest.asciidoc, +[[suggester-context]], +== Context Suggester, +, +The context suggester is an extension to the suggest API of Elasticsearch. Namely the, +suggester system provides a very fast way of searching documents by handling these, +entirely in memory. But this special treatenment does not allow the handling of, +traditional queries and filters, because those would have notable impact on the, +performance. So the context extension is designed to take so-called context information, +into account to specify a more accurate way of searching within the suggester system. , +Instead of using the traditional query and filter system a predefined ``context`` is, +configured to limit suggestions to a particular subset of suggestions., +Such a context is defined by a set of context mappings which can either be a simple, +*category* or a *geo location*. The information used by the context suggester is, +configured in the type mapping with the `context` parameter, which lists all of the, +contexts that need to be specified in each document and in each suggestion request., +For instance:, +, +[source,js], +--------------------------------------------------, +PUT services/service/_mapping, +{, +    "service": {, +        "properties": {, +            "name": {, +                "type" : "string", +            },, +            "tag": {, +                "type" : "string", +            },, +            "suggest_field": {, +                "type": "completion",, +                "context": {, +                    "color": { <1>, +                        "type": "category",, +                        "path": "color_field", +                        "default": ["red", "green", "blue"], +                    },, +                    "location": { <2>, +                        "type": "geo",, +                        "precision": "5m",, +                        "neighbors": true,, +                        "default": "u33", +                    }, +                }, +            }, +        }, +    }, +}, +--------------------------------------------------, +<1> See <<suggester-context-category>>, +<2> See <<suggester-context-geo>>, +, +However contexts are specified (as type `category` or `geo`, which are discussed below), each, +context value generates a new sub-set of documents which can be queried by the completion, +suggester. All three types accept a `default` parameter which provides a default value to use, +if the corresponding context value is absent., +, +The basic structure of this element is that each field forms a new context and the fieldname, +is used to reference this context information later on during indexing or querying. All context, +mappings have the `default` and the `type` option in common. The value of the `default` field, +is used, when ever no specific is provided for the certain context. Note that a context is, +defined by at least one value. The `type` option defines the kind of information hold by this, +context. These type will be explained further in the following sections., +, +[[suggester-context-category]], +[float], +=== Category Context, +The `category` context allows you to specify one or more categories in the document at index time., +The document will be assigned to each named category, which can then be queried later. The category, +type also allows to specify a field to extract the categories from. The `path` parameter is used to, +specify this field of the documents that should be used. If the referenced field contains multiple, +values, all these values will be used as alternative categories., +, +[float], +==== Category Mapping, +, +The mapping for a category is simply defined by its `default` values. These can either be, +defined as list of *default* categories:, +, +[source,js], +--------------------------------------------------, +"context": {]