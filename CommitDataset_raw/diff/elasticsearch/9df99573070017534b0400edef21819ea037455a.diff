[+++ b/elasticsearch/qa/audit-tests/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/audit-tests/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/core-rest-tests-with-security/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/audit-tests/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/core-rest-tests-with-security/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/reindex-tests-with-security/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/audit-tests/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/core-rest-tests-with-security/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/reindex-tests-with-security/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/security-client-tests/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/audit-tests/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/core-rest-tests-with-security/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/reindex-tests-with-security/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/security-client-tests/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/security-example-realm/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/audit-tests/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/core-rest-tests-with-security/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/reindex-tests-with-security/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/security-client-tests/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/security-example-realm/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/security-example-realm/src/main/java/org/elasticsearch/example/ExampleRealmExtension.java, +import org.elasticsearch.xpack.security.authc.Realm;, +import java.util.Collections;, +import java.util.Map;, +, +    static {, +        // check that the extension's policy works., +        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {, +            System.getSecurityManager().checkPrintJobAccess();, +            return null;, +        });, +    }, +, +    }, +, +    @Override, +    public Map<String, Realm.Factory> getRealms() {, +        return Collections.singletonMap(CustomRealm.TYPE, CustomRealm::new);, +++ b/elasticsearch/qa/audit-tests/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/core-rest-tests-with-security/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/reindex-tests-with-security/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/security-client-tests/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/security-example-realm/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/security-example-realm/src/main/java/org/elasticsearch/example/ExampleRealmExtension.java, +import org.elasticsearch.xpack.security.authc.Realm;, +import java.util.Collections;, +import java.util.Map;, +, +    static {, +        // check that the extension's policy works., +        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {, +            System.getSecurityManager().checkPrintJobAccess();, +            return null;, +        });, +    }, +, +    }, +, +    @Override, +    public Map<String, Realm.Factory> getRealms() {, +        return Collections.singletonMap(CustomRealm.TYPE, CustomRealm::new);, +++ b/elasticsearch/qa/security-example-realm/src/main/java/org/elasticsearch/example/realm/CustomRealm.java, +public class CustomRealm extends Realm {, +    public User authenticate(AuthenticationToken authToken) {, +        UsernamePasswordToken token = (UsernamePasswordToken)authToken;, +++ b/elasticsearch/qa/audit-tests/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/core-rest-tests-with-security/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/reindex-tests-with-security/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/security-client-tests/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack'), +++ b/elasticsearch/qa/security-example-realm/build.gradle, +    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack')]