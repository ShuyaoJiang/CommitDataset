[+++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsTests.java, +                try (Response response = restClient.performRequest(randomHttpMethod(getRandom()), "/" + statusCode)) {, +                try (Response response = restClient.performRequest(method, "/" + statusCode)) {, +            restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +                    restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +                    try (Response esResponse = restClient.performRequest(randomHttpMethod(getRandom()), "/" + statusCode)) {, +                        restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsTests.java, +                try (Response response = restClient.performRequest(randomHttpMethod(getRandom()), "/" + statusCode)) {, +                try (Response response = restClient.performRequest(method, "/" + statusCode)) {, +            restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +                    restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +                    try (Response esResponse = restClient.performRequest(randomHttpMethod(getRandom()), "/" + statusCode)) {, +                        restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +++ b/core/src/test/java/org/elasticsearch/http/netty/NettyHttpCompressionIT.java, +            try (Response response = client.performRequest("GET", "/", new BasicHeader(HttpHeaders.ACCEPT_ENCODING, GZIP_ENCODING))) {, +            try (Response response = client.performRequest("GET", "/")) {, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsTests.java, +                try (Response response = restClient.performRequest(randomHttpMethod(getRandom()), "/" + statusCode)) {, +                try (Response response = restClient.performRequest(method, "/" + statusCode)) {, +            restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +                    restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +                    try (Response esResponse = restClient.performRequest(randomHttpMethod(getRandom()), "/" + statusCode)) {, +                        restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +++ b/core/src/test/java/org/elasticsearch/http/netty/NettyHttpCompressionIT.java, +            try (Response response = client.performRequest("GET", "/", new BasicHeader(HttpHeaders.ACCEPT_ENCODING, GZIP_ENCODING))) {, +            try (Response response = client.performRequest("GET", "/")) {, +++ b/core/src/test/java/org/elasticsearch/options/detailederrors/DetailedErrorsDisabledIT.java, +            getRestClient().performRequest("DELETE", "/", Collections.singletonMap("error_trace", "true"));, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsTests.java, +                try (Response response = restClient.performRequest(randomHttpMethod(getRandom()), "/" + statusCode)) {, +                try (Response response = restClient.performRequest(method, "/" + statusCode)) {, +            restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +                    restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +                    try (Response esResponse = restClient.performRequest(randomHttpMethod(getRandom()), "/" + statusCode)) {, +                        restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +++ b/core/src/test/java/org/elasticsearch/http/netty/NettyHttpCompressionIT.java, +            try (Response response = client.performRequest("GET", "/", new BasicHeader(HttpHeaders.ACCEPT_ENCODING, GZIP_ENCODING))) {, +            try (Response response = client.performRequest("GET", "/")) {, +++ b/core/src/test/java/org/elasticsearch/options/detailederrors/DetailedErrorsDisabledIT.java, +            getRestClient().performRequest("DELETE", "/", Collections.singletonMap("error_trace", "true"));, +++ b/core/src/test/java/org/elasticsearch/options/detailederrors/DetailedErrorsEnabledIT.java, +            getRestClient().performRequest("DELETE", "/", Collections.singletonMap("error_trace", "true"));, +            getRestClient().performRequest("DELETE", "/");, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsTests.java, +                try (Response response = restClient.performRequest(randomHttpMethod(getRandom()), "/" + statusCode)) {, +                try (Response response = restClient.performRequest(method, "/" + statusCode)) {, +            restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +                    restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +                    try (Response esResponse = restClient.performRequest(randomHttpMethod(getRandom()), "/" + statusCode)) {, +                        restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +++ b/core/src/test/java/org/elasticsearch/http/netty/NettyHttpCompressionIT.java, +            try (Response response = client.performRequest("GET", "/", new BasicHeader(HttpHeaders.ACCEPT_ENCODING, GZIP_ENCODING))) {, +            try (Response response = client.performRequest("GET", "/")) {, +++ b/core/src/test/java/org/elasticsearch/options/detailederrors/DetailedErrorsDisabledIT.java, +            getRestClient().performRequest("DELETE", "/", Collections.singletonMap("error_trace", "true"));, +++ b/core/src/test/java/org/elasticsearch/options/detailederrors/DetailedErrorsEnabledIT.java, +            getRestClient().performRequest("DELETE", "/", Collections.singletonMap("error_trace", "true"));, +            getRestClient().performRequest("DELETE", "/");, +++ b/core/src/test/java/org/elasticsearch/plugins/ResponseHeaderPluginIT.java, +            getRestClient().performRequest("GET", "/_protected");, +        try (Response authResponse = getRestClient().performRequest("GET", "/_protected", new BasicHeader("Secret", "password"))) {, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsTests.java, +                try (Response response = restClient.performRequest(randomHttpMethod(getRandom()), "/" + statusCode)) {, +                try (Response response = restClient.performRequest(method, "/" + statusCode)) {, +            restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +                    restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +                    try (Response esResponse = restClient.performRequest(randomHttpMethod(getRandom()), "/" + statusCode)) {, +                        restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +++ b/core/src/test/java/org/elasticsearch/http/netty/NettyHttpCompressionIT.java, +            try (Response response = client.performRequest("GET", "/", new BasicHeader(HttpHeaders.ACCEPT_ENCODING, GZIP_ENCODING))) {, +            try (Response response = client.performRequest("GET", "/")) {, +++ b/core/src/test/java/org/elasticsearch/options/detailederrors/DetailedErrorsDisabledIT.java, +            getRestClient().performRequest("DELETE", "/", Collections.singletonMap("error_trace", "true"));, +++ b/core/src/test/java/org/elasticsearch/options/detailederrors/DetailedErrorsEnabledIT.java, +            getRestClient().performRequest("DELETE", "/", Collections.singletonMap("error_trace", "true"));, +            getRestClient().performRequest("DELETE", "/");, +++ b/core/src/test/java/org/elasticsearch/plugins/ResponseHeaderPluginIT.java, +            getRestClient().performRequest("GET", "/_protected");, +        try (Response authResponse = getRestClient().performRequest("GET", "/_protected", new BasicHeader("Secret", "password"))) {, +++ b/core/src/test/java/org/elasticsearch/rest/CorsNotSetIT.java, +        try (Response response = getRestClient().performRequest("GET", "/",, +        try (Response response = getRestClient().performRequest("GET", "/")) {, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsTests.java, +                try (Response response = restClient.performRequest(randomHttpMethod(getRandom()), "/" + statusCode)) {, +                try (Response response = restClient.performRequest(method, "/" + statusCode)) {, +            restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +                    restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +                    try (Response esResponse = restClient.performRequest(randomHttpMethod(getRandom()), "/" + statusCode)) {, +                        restClient.performRequest(randomHttpMethod(getRandom()), retryEndpoint);, +++ b/core/src/test/java/org/elasticsearch/http/netty/NettyHttpCompressionIT.java, +            try (Response response = client.performRequest("GET", "/", new BasicHeader(HttpHeaders.ACCEPT_ENCODING, GZIP_ENCODING))) {, +            try (Response response = client.performRequest("GET", "/")) {, +++ b/core/src/test/java/org/elasticsearch/options/detailederrors/DetailedErrorsDisabledIT.java, +            getRestClient().performRequest("DELETE", "/", Collections.singletonMap("error_trace", "true"));, +++ b/core/src/test/java/org/elasticsearch/options/detailederrors/DetailedErrorsEnabledIT.java, +            getRestClient().performRequest("DELETE", "/", Collections.singletonMap("error_trace", "true"));, +            getRestClient().performRequest("DELETE", "/");, +++ b/core/src/test/java/org/elasticsearch/plugins/ResponseHeaderPluginIT.java, +            getRestClient().performRequest("GET", "/_protected");]