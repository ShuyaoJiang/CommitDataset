[+++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingPlugin.groovy, +        setupSeed(project), +    /**, +     * Pins the test seed at configuration time so it isn't different on every, +     * {@link RandomizedTestingTask} execution. This is useful if random, +     * decisions in one run of {@linkplain RandomizedTestingTask} influence the, +     * outcome of subsequent runs. Pinning the seed up front like this makes, +     * the reproduction line from one run be useful on another run., +     */, +    static void setupSeed(Project project) {, +        if (project.rootProject.ext.has('testSeed')) {, +            /* Skip this if we've already pinned the testSeed. It is important, +             * that this checks the rootProject so that we know we've only ever, +             * initialized one time. */, +            return, +        }, +        String testSeed = System.getProperty('tests.seed'), +        if (testSeed == null) {, +            long seed = new Random(System.currentTimeMillis()).nextLong(), +            testSeed = Long.toUnsignedString(seed, 16).toUpperCase(Locale.ROOT), +        }, +        /* Set the testSeed on the root project first so other projects can use, +         * it during initialization. */, +        project.rootProject.ext.testSeed = testSeed, +        project.rootProject.subprojects {, +            project.ext.testSeed = testSeed, +        }, +    }, +, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingPlugin.groovy, +        setupSeed(project), +    /**, +     * Pins the test seed at configuration time so it isn't different on every, +     * {@link RandomizedTestingTask} execution. This is useful if random, +     * decisions in one run of {@linkplain RandomizedTestingTask} influence the, +     * outcome of subsequent runs. Pinning the seed up front like this makes, +     * the reproduction line from one run be useful on another run., +     */, +    static void setupSeed(Project project) {, +        if (project.rootProject.ext.has('testSeed')) {, +            /* Skip this if we've already pinned the testSeed. It is important, +             * that this checks the rootProject so that we know we've only ever, +             * initialized one time. */, +            return, +        }, +        String testSeed = System.getProperty('tests.seed'), +        if (testSeed == null) {, +            long seed = new Random(System.currentTimeMillis()).nextLong(), +            testSeed = Long.toUnsignedString(seed, 16).toUpperCase(Locale.ROOT), +        }, +        /* Set the testSeed on the root project first so other projects can use, +         * it during initialization. */, +        project.rootProject.ext.testSeed = testSeed, +        project.rootProject.subprojects {, +            project.ext.testSeed = testSeed, +        }, +    }, +, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import org.gradle.api.InvalidUserDataException, +                    if (prop.getKey().equals('tests.seed')) {, +                        throw new InvalidUserDataException('Seed should be ' +, +                            'set on the project instead of a system property'), +                    }, +                systemProperty 'tests.seed', project.testSeed, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingPlugin.groovy, +        setupSeed(project), +    /**, +     * Pins the test seed at configuration time so it isn't different on every, +     * {@link RandomizedTestingTask} execution. This is useful if random, +     * decisions in one run of {@linkplain RandomizedTestingTask} influence the, +     * outcome of subsequent runs. Pinning the seed up front like this makes, +     * the reproduction line from one run be useful on another run., +     */, +    static void setupSeed(Project project) {, +        if (project.rootProject.ext.has('testSeed')) {, +            /* Skip this if we've already pinned the testSeed. It is important, +             * that this checks the rootProject so that we know we've only ever, +             * initialized one time. */, +            return, +        }, +        String testSeed = System.getProperty('tests.seed'), +        if (testSeed == null) {, +            long seed = new Random(System.currentTimeMillis()).nextLong(), +            testSeed = Long.toUnsignedString(seed, 16).toUpperCase(Locale.ROOT), +        }, +        /* Set the testSeed on the root project first so other projects can use, +         * it during initialization. */, +        project.rootProject.ext.testSeed = testSeed, +        project.rootProject.subprojects {, +            project.ext.testSeed = testSeed, +        }, +    }, +, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import org.gradle.api.InvalidUserDataException, +                    if (prop.getKey().equals('tests.seed')) {, +                        throw new InvalidUserDataException('Seed should be ' +, +                            'set on the project instead of a system property'), +                    }]