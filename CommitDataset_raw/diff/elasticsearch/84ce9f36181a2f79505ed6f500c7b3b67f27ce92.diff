[+++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    private volatile AsyncTranslogFSync fsyncTask;, +        this.fsyncTask = indexSettings.getTranslogDurability() == Translog.Durability.REQUEST ? null : new AsyncTranslogFSync(this);, +        final Translog.Durability oldTranslogDurability = indexSettings.getTranslogDurability();, +            final Translog.Durability durability = indexSettings.getTranslogDurability();, +            if (durability != oldTranslogDurability) {, +                rescheduleFsyncTask(durability);, +            }, +        }, +    }, +, +    private void rescheduleFsyncTask(Translog.Durability durability) {, +        try {, +            IOUtils.closeWhileHandlingException(fsyncTask);, +        } finally {, +            fsyncTask = durability == Translog.Durability.REQUEST ? null : new AsyncTranslogFSync(this);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    private volatile AsyncTranslogFSync fsyncTask;, +        this.fsyncTask = indexSettings.getTranslogDurability() == Translog.Durability.REQUEST ? null : new AsyncTranslogFSync(this);, +        final Translog.Durability oldTranslogDurability = indexSettings.getTranslogDurability();, +            final Translog.Durability durability = indexSettings.getTranslogDurability();, +            if (durability != oldTranslogDurability) {, +                rescheduleFsyncTask(durability);, +            }, +        }, +    }, +, +    private void rescheduleFsyncTask(Translog.Durability durability) {, +        try {, +            IOUtils.closeWhileHandlingException(fsyncTask);, +        } finally {, +            fsyncTask = durability == Translog.Durability.REQUEST ? null : new AsyncTranslogFSync(this);, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<TimeValue> INDEX_TRANSLOG_SYNC_INTERVAL_SETTING = Setting.timeSetting("index.translog.sync_interval", TimeValue.timeValueSeconds(5), TimeValue.timeValueMillis(100), false, Setting.Scope.INDEX);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    private volatile AsyncTranslogFSync fsyncTask;, +        this.fsyncTask = indexSettings.getTranslogDurability() == Translog.Durability.REQUEST ? null : new AsyncTranslogFSync(this);, +        final Translog.Durability oldTranslogDurability = indexSettings.getTranslogDurability();, +            final Translog.Durability durability = indexSettings.getTranslogDurability();, +            if (durability != oldTranslogDurability) {, +                rescheduleFsyncTask(durability);, +            }, +        }, +    }, +, +    private void rescheduleFsyncTask(Translog.Durability durability) {, +        try {, +            IOUtils.closeWhileHandlingException(fsyncTask);, +        } finally {, +            fsyncTask = durability == Translog.Durability.REQUEST ? null : new AsyncTranslogFSync(this);, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<TimeValue> INDEX_TRANSLOG_SYNC_INTERVAL_SETTING = Setting.timeSetting("index.translog.sync_interval", TimeValue.timeValueSeconds(5), TimeValue.timeValueMillis(100), false, Setting.Scope.INDEX);, +++ b/core/src/main/java/org/elasticsearch/index/translog/Translog.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    private volatile AsyncTranslogFSync fsyncTask;, +        this.fsyncTask = indexSettings.getTranslogDurability() == Translog.Durability.REQUEST ? null : new AsyncTranslogFSync(this);, +        final Translog.Durability oldTranslogDurability = indexSettings.getTranslogDurability();, +            final Translog.Durability durability = indexSettings.getTranslogDurability();, +            if (durability != oldTranslogDurability) {, +                rescheduleFsyncTask(durability);, +            }, +        }, +    }, +, +    private void rescheduleFsyncTask(Translog.Durability durability) {, +        try {, +            IOUtils.closeWhileHandlingException(fsyncTask);, +        } finally {, +            fsyncTask = durability == Translog.Durability.REQUEST ? null : new AsyncTranslogFSync(this);, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<TimeValue> INDEX_TRANSLOG_SYNC_INTERVAL_SETTING = Setting.timeSetting("index.translog.sync_interval", TimeValue.timeValueSeconds(5), TimeValue.timeValueMillis(100), false, Setting.Scope.INDEX);, +++ b/core/src/main/java/org/elasticsearch/index/translog/Translog.java, +++ b/core/src/main/java/org/elasticsearch/index/translog/TranslogConfig.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    private volatile AsyncTranslogFSync fsyncTask;, +        this.fsyncTask = indexSettings.getTranslogDurability() == Translog.Durability.REQUEST ? null : new AsyncTranslogFSync(this);, +        final Translog.Durability oldTranslogDurability = indexSettings.getTranslogDurability();, +            final Translog.Durability durability = indexSettings.getTranslogDurability();, +            if (durability != oldTranslogDurability) {, +                rescheduleFsyncTask(durability);, +            }, +        }, +    }, +, +    private void rescheduleFsyncTask(Translog.Durability durability) {, +        try {, +            IOUtils.closeWhileHandlingException(fsyncTask);, +        } finally {, +            fsyncTask = durability == Translog.Durability.REQUEST ? null : new AsyncTranslogFSync(this);, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<TimeValue> INDEX_TRANSLOG_SYNC_INTERVAL_SETTING = Setting.timeSetting("index.translog.sync_interval", TimeValue.timeValueSeconds(5), TimeValue.timeValueMillis(100), false, Setting.Scope.INDEX);, +++ b/core/src/main/java/org/elasticsearch/index/translog/Translog.java, +++ b/core/src/main/java/org/elasticsearch/index/translog/TranslogConfig.java, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +            modules.add(new SettingsModule(this.settings, settingsFilter));, +            modules.add(new ScriptModule(this.settings));, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    private volatile AsyncTranslogFSync fsyncTask;, +        this.fsyncTask = indexSettings.getTranslogDurability() == Translog.Durability.REQUEST ? null : new AsyncTranslogFSync(this);, +        final Translog.Durability oldTranslogDurability = indexSettings.getTranslogDurability();]