[+++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +                    return shardContext.toFilter(innerQueryBuilder.get()).query();, +                return null;, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +                    return shardContext.toFilter(innerQueryBuilder.get()).query();, +                return null;, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +                    return shardContext.toFilter(innerQueryBuilder.get()).query();, +                return null;, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/BoostingQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +                    return shardContext.toFilter(innerQueryBuilder.get()).query();, +                return null;, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/BoostingQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +                    return shardContext.toFilter(innerQueryBuilder.get()).query();, +                return null;, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/BoostingQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/DisMaxQueryBuilder.java, +        if (!queriesFound || queries.isEmpty()) {, +            throw new ParsingException(parser.getTokenLocation(), "[dis_max] requires 'queries' field with at least one clause");, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +                    return shardContext.toFilter(innerQueryBuilder.get()).query();, +                return null;, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/BoostingQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/DisMaxQueryBuilder.java, +        if (!queriesFound || queries.isEmpty()) {, +            throw new ParsingException(parser.getTokenLocation(), "[dis_max] requires 'queries' field with at least one clause");, +++ b/core/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +                    return shardContext.toFilter(innerQueryBuilder.get()).query();, +                return null;, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/BoostingQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/DisMaxQueryBuilder.java, +        if (!queriesFound || queries.isEmpty()) {, +            throw new ParsingException(parser.getTokenLocation(), "[dis_max] requires 'queries' field with at least one clause");, +++ b/core/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/HasParentQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +                    return shardContext.toFilter(innerQueryBuilder.get()).query();, +                return null;, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/BoostingQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/DisMaxQueryBuilder.java, +        if (!queriesFound || queries.isEmpty()) {, +            throw new ParsingException(parser.getTokenLocation(), "[dis_max] requires 'queries' field with at least one clause");, +++ b/core/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/HasParentQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/NestedQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +                    return shardContext.toFilter(innerQueryBuilder.get()).query();, +                return null;, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/BoostingQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/DisMaxQueryBuilder.java, +        if (!queriesFound || queries.isEmpty()) {, +            throw new ParsingException(parser.getTokenLocation(), "[dis_max] requires 'queries' field with at least one clause");, +++ b/core/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/HasParentQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/NestedQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregationBuilder.java, +import org.elasticsearch.index.query.MatchAllQueryBuilder;, +        QueryBuilder filter = context.parseInnerQueryBuilder().orElse(new MatchAllQueryBuilder());, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +                    return shardContext.toFilter(innerQueryBuilder.get()).query();, +                return null;, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/BoostingQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/DisMaxQueryBuilder.java, +        if (!queriesFound || queries.isEmpty()) {, +            throw new ParsingException(parser.getTokenLocation(), "[dis_max] requires 'queries' field with at least one clause");, +++ b/core/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/HasParentQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/NestedQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregationBuilder.java, +import org.elasticsearch.index.query.MatchAllQueryBuilder;, +        QueryBuilder filter = context.parseInnerQueryBuilder().orElse(new MatchAllQueryBuilder());, +++ b/core/src/test/java/org/elasticsearch/index/query/DisMaxQueryBuilderTests.java, +import org.elasticsearch.common.ParsingException;, +    public void testInnerQueryEmptyException() throws IOException {, +        ParsingException ex = expectThrows(ParsingException.class, () -> parseQuery(queryString, ParseFieldMatcher.EMPTY));, +        assertEquals("[dis_max] requires 'queries' field with at least one clause", ex.getMessage());]