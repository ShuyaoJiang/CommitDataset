[+++ b/.ci/java-versions.properties, +++ b/.ci/java-versions.properties, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        applyCommonTestConfig(project), +, +    static void applyCommonTestConfig(Project project) {, +        project.tasks.withType(RandomizedTestingTask) {, +            dependsOn(project.tasks.testClasses), +, +        project.tasks.getByName('test') {, +++ b/.ci/java-versions.properties, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        applyCommonTestConfig(project), +, +    static void applyCommonTestConfig(Project project) {, +        project.tasks.withType(RandomizedTestingTask) {, +            dependsOn(project.tasks.testClasses), +, +        project.tasks.getByName('test') {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    Closure<Integer> minimumMasterNodes = {, +        return getNumNodes() > 1 ? getNumNodes() : -1, +    }, +++ b/.ci/java-versions.properties, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        applyCommonTestConfig(project), +, +    static void applyCommonTestConfig(Project project) {, +        project.tasks.withType(RandomizedTestingTask) {, +            dependsOn(project.tasks.testClasses), +, +        project.tasks.getByName('test') {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    Closure<Integer> minimumMasterNodes = {, +        return getNumNodes() > 1 ? getNumNodes() : -1, +    }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            Closure<Map> writeConfigSetup, +            Object dependsOn, +            if (node.nodeVersion.onOrAfter("6.5.0-SNAPSHOT")) {, +                writeConfigSetup = { Map esConfig ->, +                    // Don't force discovery provider if one is set by the test cluster specs already, +                    if (esConfig.containsKey('discovery.zen.hosts_provider') == false) {, +                        esConfig['discovery.zen.hosts_provider'] = 'file', +                    }, +                    esConfig['discovery.zen.ping.unicast.hosts'] = [], +                    esConfig, +                }, +                dependsOn = startDependencies, +            } else {, +                dependsOn = startTasks.empty ? startDependencies : startTasks.get(0), +                writeConfigSetup = { Map esConfig ->, +                    String unicastTransportUri = node.config.unicastTransportUri(nodes.get(0), node, project.ant), +                    if (unicastTransportUri == null) {, +                        esConfig['discovery.zen.ping.unicast.hosts'] = [], +                    } else {, +                        esConfig['discovery.zen.ping.unicast.hosts'] = "\"${unicastTransportUri}\"", +                    }, +                    esConfig, +                }, +            }, +            startTasks.add(configureNode(project, prefix, runner, dependsOn, node, config, distro, writeConfigSetup)), +                              Configuration distribution, Closure<Map> writeConfig) {, +        setup = configureWriteConfigTask(taskName(prefix, node, 'configure'), project, setup, node, writeConfig), +    static Task configureWriteConfigTask(String name, Project project, Task setup, NodeInfo node, Closure<Map> configFilter) {, +            esConfig = configFilter.call(esConfig), +, +            Collection<String> unicastHosts = new HashSet<>(), +            nodes.forEach { otherNode ->, +                String unicastHost = otherNode.config.unicastTransportUri(otherNode, null, project.ant), +                if (unicastHost != null) {, +                    unicastHosts.addAll(Arrays.asList(unicastHost.split(","))), +                }, +            }, +            String unicastHostsTxt = String.join("\n", unicastHosts), +            nodes.forEach { node ->, +                node.pathConf.toPath().resolve("unicast_hosts.txt").setText(unicastHostsTxt), +            }, +, +++ b/.ci/java-versions.properties, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        applyCommonTestConfig(project), +, +    static void applyCommonTestConfig(Project project) {, +        project.tasks.withType(RandomizedTestingTask) {, +            dependsOn(project.tasks.testClasses), +, +        project.tasks.getByName('test') {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    Closure<Integer> minimumMasterNodes = {, +        return getNumNodes() > 1 ? getNumNodes() : -1, +    }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            Closure<Map> writeConfigSetup, +            Object dependsOn, +            if (node.nodeVersion.onOrAfter("6.5.0-SNAPSHOT")) {, +                writeConfigSetup = { Map esConfig ->, +                    // Don't force discovery provider if one is set by the test cluster specs already, +                    if (esConfig.containsKey('discovery.zen.hosts_provider') == false) {, +                        esConfig['discovery.zen.hosts_provider'] = 'file']