[+++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicNumericFieldData.java, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicNumericFieldData.java, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicNumericFieldData.java, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/index/fielddata/DoubleValues.java, +    , +    public static class FilteredDoubleValues implements DoubleValues {, +, +        protected final DoubleValues delegate;, +, +        public FilteredDoubleValues(DoubleValues delegate) {, +            this.delegate = delegate;, +        }, +, +        public boolean isMultiValued() {, +            return delegate.isMultiValued();, +        }, +, +        public boolean hasValue(int docId) {, +            return delegate.hasValue(docId);, +        }, +, +        public double getValue(int docId) {, +            return delegate.getValue(docId);, +        }, +, +        public double getValueMissing(int docId, double missingValue) {, +            return delegate.getValueMissing(docId, missingValue);, +        }, +, +        public DoubleArrayRef getValues(int docId) {, +            return delegate.getValues(docId);, +        }, +, +        public Iter getIter(int docId) {, +            return delegate.getIter(docId);, +        }, +, +        public void forEachValueInDoc(int docId, ValueInDocProc proc) {, +            delegate.forEachValueInDoc(docId, proc);, +        }, +    }, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicNumericFieldData.java, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/index/fielddata/DoubleValues.java, +    , +    public static class FilteredDoubleValues implements DoubleValues {, +, +        protected final DoubleValues delegate;, +, +        public FilteredDoubleValues(DoubleValues delegate) {, +            this.delegate = delegate;, +        }, +, +        public boolean isMultiValued() {, +            return delegate.isMultiValued();, +        }, +, +        public boolean hasValue(int docId) {, +            return delegate.hasValue(docId);, +        }, +, +        public double getValue(int docId) {, +            return delegate.getValue(docId);, +        }, +, +        public double getValueMissing(int docId, double missingValue) {, +            return delegate.getValueMissing(docId, missingValue);, +        }, +, +        public DoubleArrayRef getValues(int docId) {, +            return delegate.getValues(docId);, +        }, +, +        public Iter getIter(int docId) {, +            return delegate.getIter(docId);, +        }, +, +        public void forEachValueInDoc(int docId, ValueInDocProc proc) {, +            delegate.forEachValueInDoc(docId, proc);, +        }, +    }, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/index/fielddata/AtomicNumericFieldData.java, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/index/fielddata/DoubleValues.java, +    , +    public static class FilteredDoubleValues implements DoubleValues {, +, +        protected final DoubleValues delegate;, +, +        public FilteredDoubleValues(DoubleValues delegate) {, +            this.delegate = delegate;, +        }, +, +        public boolean isMultiValued() {, +            return delegate.isMultiValued();, +        }, +]