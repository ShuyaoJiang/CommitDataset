[+++ b/src/main/java/org/elasticsearch/action/percolate/MultiPercolateRequest.java, +        Map<String, Object> header = parseToMap(parser);, +                } else if ("ignore_unavailable".equals(entry.getKey()) || "ignoreUnavailable".equals(entry.getKey())) {, +                } else if ("allow_no_indices".equals(entry.getKey()) || "allowNoIndices".equals(entry.getKey())) {, +                } else if ("expand_wildcards".equals(entry.getKey()) || "expandWildcards".equals(entry.getKey())) {, +                } else if ("ignore_unavailable".equals(entry.getKey()) || "ignoreUnavailable".equals(entry.getKey())) {, +                } else if ("allow_no_indices".equals(entry.getKey()) || "allowNoIndices".equals(entry.getKey())) {, +                } else if ("expand_wildcards".equals(entry.getKey()) || "expandWildcards".equals(entry.getKey())) {, +    private Map<String, Object> parseToMap(XContentParser parser) throws IOException {, +        Map<String, Object> header = new HashMap<>();, +, +        String currentFieldName = null;, +        XContentParser.Token token;, +        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {, +            if (token == XContentParser.Token.FIELD_NAME) {, +                currentFieldName = parser.currentName();, +            } else if (token.isValue()) {, +                header.put(currentFieldName, parser.text());, +            } else if (token == XContentParser.Token.START_ARRAY) {, +                header.put(currentFieldName, parseArray(parser));, +            }, +        }, +        return header;, +    }, +]