[+++ b/core/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor, and revision, and optionally the build: " + version);, +++ b/core/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor, and revision, and optionally the build: " + version);, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +        throw new UnsupportedOperationException("can't read named writeable from StreamInput");, +++ b/core/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor, and revision, and optionally the build: " + version);, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +        throw new UnsupportedOperationException("can't read named writeable from StreamInput");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoDistanceRangeQueryBuilder.java, +            throw new IllegalArgumentException("optimizeBbox must not be null");, +++ b/core/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor, and revision, and optionally the build: " + version);, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +        throw new UnsupportedOperationException("can't read named writeable from StreamInput");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoDistanceRangeQueryBuilder.java, +            throw new IllegalArgumentException("optimizeBbox must not be null");, +++ b/core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java, +        Objects.requireNonNull(fields, "fields cannot be null");, +++ b/core/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor, and revision, and optionally the build: " + version);, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +        throw new UnsupportedOperationException("can't read named writeable from StreamInput");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoDistanceRangeQueryBuilder.java, +            throw new IllegalArgumentException("optimizeBbox must not be null");, +++ b/core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java, +        Objects.requireNonNull(fields, "fields cannot be null");, +++ b/core/src/test/java/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilterTests.java, +    public void testSimple() throws IOException {, +++ b/core/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor, and revision, and optionally the build: " + version);, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +        throw new UnsupportedOperationException("can't read named writeable from StreamInput");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoDistanceRangeQueryBuilder.java, +            throw new IllegalArgumentException("optimizeBbox must not be null");, +++ b/core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java, +        Objects.requireNonNull(fields, "fields cannot be null");, +++ b/core/src/test/java/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilterTests.java, +    public void testSimple() throws IOException {, +++ b/core/src/test/java/org/apache/lucene/analysis/miscellaneous/UniqueTokenFilterTests.java, +    public void testSimple() throws IOException {, +++ b/core/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor, and revision, and optionally the build: " + version);, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +        throw new UnsupportedOperationException("can't read named writeable from StreamInput");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoDistanceRangeQueryBuilder.java, +            throw new IllegalArgumentException("optimizeBbox must not be null");, +++ b/core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java, +        Objects.requireNonNull(fields, "fields cannot be null");, +++ b/core/src/test/java/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilterTests.java, +    public void testSimple() throws IOException {, +++ b/core/src/test/java/org/apache/lucene/analysis/miscellaneous/UniqueTokenFilterTests.java, +    public void testSimple() throws IOException {, +++ b/core/src/test/java/org/apache/lucene/queries/BlendedTermQueryTests.java, +import org.apache.lucene.index.DirectoryReader;, +import org.apache.lucene.index.IndexOptions;, +import org.apache.lucene.index.IndexWriter;, +import org.apache.lucene.index.MultiReader;, +import org.apache.lucene.index.Term;, +import org.apache.lucene.search.BooleanClause;, +import org.apache.lucene.search.BooleanQuery;, +import org.apache.lucene.search.DisjunctionMaxQuery;, +import org.apache.lucene.search.IndexSearcher;, +import org.apache.lucene.search.QueryUtils;, +import org.apache.lucene.search.ScoreDoc;, +import org.apache.lucene.search.TermQuery;, +import org.apache.lucene.search.TopDocs;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.HashSet;, +import java.util.List;, +import java.util.Set;, +++ b/core/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor, and revision, and optionally the build: " + version);, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +        throw new UnsupportedOperationException("can't read named writeable from StreamInput");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoDistanceRangeQueryBuilder.java, +            throw new IllegalArgumentException("optimizeBbox must not be null");, +++ b/core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java, +        Objects.requireNonNull(fields, "fields cannot be null");, +++ b/core/src/test/java/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilterTests.java, +    public void testSimple() throws IOException {, +++ b/core/src/test/java/org/apache/lucene/analysis/miscellaneous/UniqueTokenFilterTests.java, +    public void testSimple() throws IOException {, +++ b/core/src/test/java/org/apache/lucene/queries/BlendedTermQueryTests.java, +import org.apache.lucene.index.DirectoryReader;, +import org.apache.lucene.index.IndexOptions;, +import org.apache.lucene.index.IndexWriter;, +import org.apache.lucene.index.MultiReader;, +import org.apache.lucene.index.Term;, +import org.apache.lucene.search.BooleanClause;, +import org.apache.lucene.search.BooleanQuery;, +import org.apache.lucene.search.DisjunctionMaxQuery;, +import org.apache.lucene.search.IndexSearcher;, +import org.apache.lucene.search.QueryUtils;, +import org.apache.lucene.search.ScoreDoc;, +import org.apache.lucene.search.TermQuery;, +import org.apache.lucene.search.TopDocs;, +import java.util.Arrays;]