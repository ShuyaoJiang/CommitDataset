[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/plugins/PluginManager.java, +import org.elasticsearch.util.io.FileSystemUtils;, +import java.io.FileNotFoundException;, +    public void removePlugin(String name) throws IOException {, +        File pluginToDelete = new File(environment.pluginsFile(), name + ".zip");, +        if (!pluginToDelete.exists()) {, +            throw new FileNotFoundException("Plugin [" + name + "] does not exists");, +        }, +        pluginToDelete.delete();, +        FileSystemUtils.deleteRecursively(new File(new File(environment.workFile(), "plugins"), name), true);, +    }, +, +            System.out.println("    - install [list of plugin names]: Downloads and installs listed plugins");, +            System.out.println("    - remove [list of plugin names]: Removes listed plugins");, +        if (command.equals("install")) {, +                System.out.println("'install' requires an additional parameter with the plugin name");, +                System.out.print("-> Installing " + pluginName + " ");, +                    System.out.println("Failed to install " + pluginName + ", reason: " + e.getMessage());, +                }, +            }, +        } else if (command.equals("remove")) {, +            if (args.length < 2) {, +                System.out.println("'remove' requires an additional parameter with the plugin name");, +            }, +            for (int i = 1; i < args.length; i++) {, +                String pluginName = args[i];, +                System.out.println("-> Removing " + pluginName + " ");, +                try {, +                    pluginManager.removePlugin(pluginName);, +                } catch (IOException e) {, +                    System.out.println("Failed to remove " + pluginName + ", reason: " + e.getMessage());]