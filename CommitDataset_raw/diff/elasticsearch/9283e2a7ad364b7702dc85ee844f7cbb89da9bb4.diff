[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +, +                // update as fast as we can the local node state with the new metadata (so we create indices for example), +                final ClusterState masterState = master.clusterService.state();, +                clusterService.submitStateUpdateTask("local-disco(detected_master)", new ClusterStateUpdateTask() {, +                    @Override public ClusterState execute(ClusterState currentState) {, +                        // make sure we have the local node id set, we might need it as a result of the new metadata, +                        DiscoveryNodes.Builder nodesBuilder = DiscoveryNodes.newNodesBuilder().putAll(currentState.nodes()).put(localNode).localNodeId(localNode.id());, +                        return ClusterState.builder().state(currentState).metaData(masterState.metaData()).nodes(nodesBuilder).build();, +                    }, +                });, +, +                // tell the master to send the fact that we are here, +                            logger.warn("received an address [{}] for an existing node [{}]", localNode.address(), localNode);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +, +                // update as fast as we can the local node state with the new metadata (so we create indices for example), +                final ClusterState masterState = master.clusterService.state();, +                clusterService.submitStateUpdateTask("local-disco(detected_master)", new ClusterStateUpdateTask() {, +                    @Override public ClusterState execute(ClusterState currentState) {, +                        // make sure we have the local node id set, we might need it as a result of the new metadata, +                        DiscoveryNodes.Builder nodesBuilder = DiscoveryNodes.newNodesBuilder().putAll(currentState.nodes()).put(localNode).localNodeId(localNode.id());, +                        return ClusterState.builder().state(currentState).metaData(masterState.metaData()).nodes(nodesBuilder).build();, +                    }, +                });, +, +                // tell the master to send the fact that we are here, +                            logger.warn("received an address [{}] for an existing node [{}]", localNode.address(), localNode);, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/recovery/SimpleRecoveryTests.java, +        Thread.sleep(200);, +        clusterHealth = client("server1").admin().cluster().health(clusterHealth().waitForGreenStatus().waitForRelocatingShards(0).waitForNodes("3")).actionGet();]