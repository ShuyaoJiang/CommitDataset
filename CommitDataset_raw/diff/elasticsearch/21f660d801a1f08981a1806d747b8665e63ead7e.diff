[+++ /dev/null, +++ /dev/null, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/DateHistogramGroupConfig.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.xpack.core.rollup.job;, +, +import org.elasticsearch.action.ActionRequestValidationException;, +import org.elasticsearch.action.fieldcaps.FieldCapabilities;, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.io.stream.Writeable;, +import org.elasticsearch.common.rounding.DateTimeUnit;, +import org.elasticsearch.common.rounding.Rounding;, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.common.xcontent.ConstructingObjectParser;, +import org.elasticsearch.common.xcontent.ToXContentObject;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.search.aggregations.bucket.composite.CompositeValuesSourceBuilder;, +import org.elasticsearch.search.aggregations.bucket.composite.DateHistogramValuesSourceBuilder;, +import org.elasticsearch.search.aggregations.bucket.histogram.DateHistogramAggregationBuilder;, +import org.elasticsearch.search.aggregations.bucket.histogram.DateHistogramInterval;, +import org.elasticsearch.xpack.core.rollup.RollupField;, +import org.joda.time.DateTimeZone;, +, +import java.io.IOException;, +import java.util.Collections;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +import java.util.Objects;, +, +import static org.elasticsearch.common.xcontent.ConstructingObjectParser.constructorArg;, +import static org.elasticsearch.common.xcontent.ConstructingObjectParser.optionalConstructorArg;, +import static org.elasticsearch.common.xcontent.ObjectParser.ValueType;, +, +/**, + * The configuration object for the histograms in the rollup config, + *, + * {, + *     "groups": [, + *        "date_histogram": {, + *            "field" : "foo",, + *            "interval" : "1d",, + *            "delay": "30d",, + *            "time_zone" : "EST", + *        }, + *     ], + * }, + */, +public class DateHistogramGroupConfig implements Writeable, ToXContentObject {, +, +    private static final String NAME = "date_histogram";, +    private static final String INTERVAL = "interval";, +    private static final String FIELD = "field";, +    public static final String TIME_ZONE = "time_zone";, +    private static final String DELAY = "delay";, +    private static final String DEFAULT_TIMEZONE = "UTC";, +    private static final ConstructingObjectParser<DateHistogramGroupConfig, Void> PARSER;, +    static {, +        PARSER = new ConstructingObjectParser<>(NAME, a ->, +            new DateHistogramGroupConfig((String) a[0], (DateHistogramInterval) a[1], (DateHistogramInterval) a[2], (String) a[3]));, +        PARSER.declareString(constructorArg(), new ParseField(FIELD));, +        PARSER.declareField(constructorArg(), p -> new DateHistogramInterval(p.text()), new ParseField(INTERVAL), ValueType.STRING);, +        PARSER.declareField(optionalConstructorArg(),  p -> new DateHistogramInterval(p.text()), new ParseField(DELAY), ValueType.STRING);, +        PARSER.declareString(optionalConstructorArg(), new ParseField(TIME_ZONE));, +    }, +, +    private final String field;, +    private final DateHistogramInterval interval;, +    private final DateHistogramInterval delay;, +    private final String timeZone;, +, +    /**, +     * Create a new {@link DateHistogramGroupConfig} using the given field and interval parameters., +     */, +    public DateHistogramGroupConfig(final String field, final DateHistogramInterval interval) {, +        this(field, interval, null, null);, +    }, +, +    /**, +     * Create a new {@link DateHistogramGroupConfig} using the given configuration parameters., +     * <p>, +     *     The {@code field} and {@code interval} are required to compute the date histogram for the rolled up documents., +     *     The {@code delay} is optional and can be set to {@code null}. It defines how long to wait before rolling up new documents., +     *     The {@code timeZone} is optional and can be set to {@code null}. When configured, the time zone value  is resolved using, +     *     ({@link DateTimeZone#forID(String)} and must match a time zone identifier provided by the Joda Time library., +     * </p>, +     * @param field the name of the date field to use for the date histogram (required), +     * @param interval the interval to use for the date histogram (required), +     * @param delay the time delay (optional), +     * @param timeZone the id of time zone to use to calculate the date histogram (optional). When {@code null}, the UTC timezone is used., +     */]