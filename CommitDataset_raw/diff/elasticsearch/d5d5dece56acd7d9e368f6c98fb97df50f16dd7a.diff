[+++ b/src/main/java/org/elasticsearch/indices/IndicesLifecycle.java, +, +        /**, +         * Called after the index has been deleted., +         * This listener method is invoked after {@link #afterIndexClosed(org.elasticsearch.index.Index)}, +         * when an index is deleted, +         *, +         * @param index The index, +         */, +        public void afterIndexDeleted(Index index) {, +, +        }, +, +        /**, +         * Called before the index gets deleted., +         * This listener method is invoked after, +         * {@link #beforeIndexClosed(org.elasticsearch.index.service.IndexService)} when an index is deleted, +         *, +         * @param indexService The index service, +         */, +        public void beforeIndexDeleted(IndexService indexService) {, +, +        }, +++ b/src/main/java/org/elasticsearch/indices/IndicesLifecycle.java, +, +        /**, +         * Called after the index has been deleted., +         * This listener method is invoked after {@link #afterIndexClosed(org.elasticsearch.index.Index)}, +         * when an index is deleted, +         *, +         * @param index The index, +         */, +        public void afterIndexDeleted(Index index) {, +, +        }, +, +        /**, +         * Called before the index gets deleted., +         * This listener method is invoked after, +         * {@link #beforeIndexClosed(org.elasticsearch.index.service.IndexService)} when an index is deleted, +         *, +         * @param indexService The index service, +         */, +        public void beforeIndexDeleted(IndexService indexService) {, +, +        }, +++ b/src/main/java/org/elasticsearch/indices/IndicesService.java, +    /**, +     * Removes the given index from this service and releases all associated resources. Persistent parts of the index, +     * like the shards files, state and transaction logs are kept around in the case of a disaster recovery., +     * @param index the index to remove, +     * @param reason  the high level reason causing this removal, +     */, +    /**, +     * Deletes the given index. Persistent parts of the index, +     * like the shards files, state and transaction logs are removed once all resources are released., +     *, +     * Equivalent to {@link #removeIndex(String, String)} but fires, +     * different lifecycle events to ensure pending resources of this index are immediately removed., +     * @param index the index to delete, +     * @param reason the high level reason causing this delete, +     */, +    void deleteIndex(String index, String reason) throws ElasticsearchException;, +++ b/src/main/java/org/elasticsearch/indices/IndicesLifecycle.java, +, +        /**, +         * Called after the index has been deleted., +         * This listener method is invoked after {@link #afterIndexClosed(org.elasticsearch.index.Index)}, +         * when an index is deleted, +         *, +         * @param index The index, +         */, +        public void afterIndexDeleted(Index index) {, +, +        }, +, +        /**, +         * Called before the index gets deleted., +         * This listener method is invoked after, +         * {@link #beforeIndexClosed(org.elasticsearch.index.service.IndexService)} when an index is deleted, +         *, +         * @param indexService The index service, +         */, +        public void beforeIndexDeleted(IndexService indexService) {, +, +        }, +++ b/src/main/java/org/elasticsearch/indices/IndicesService.java, +    /**, +     * Removes the given index from this service and releases all associated resources. Persistent parts of the index, +     * like the shards files, state and transaction logs are kept around in the case of a disaster recovery., +     * @param index the index to remove, +     * @param reason  the high level reason causing this removal, +     */, +    /**, +     * Deletes the given index. Persistent parts of the index, +     * like the shards files, state and transaction logs are removed once all resources are released., +     *, +     * Equivalent to {@link #removeIndex(String, String)} but fires, +     * different lifecycle events to ensure pending resources of this index are immediately removed., +     * @param index the index to delete]