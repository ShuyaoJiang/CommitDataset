[+++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/MlPlugin.java, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.xpack.persistent.RemovePersistentTaskAction;, +import org.elasticsearch.xpack.persistent.PersistentActionCoordinator;, +import org.elasticsearch.xpack.persistent.PersistentActionRegistry;, +import org.elasticsearch.xpack.persistent.PersistentActionService;, +import org.elasticsearch.xpack.persistent.PersistentTaskClusterService;, +import org.elasticsearch.xpack.persistent.PersistentTasksInProgress;, +import org.elasticsearch.xpack.persistent.CompletionPersistentTaskAction;, +import org.elasticsearch.xpack.persistent.StartPersistentTaskAction;, +                new NamedWriteableRegistry.Entry(NamedDiff.class, "ml", MlMetadata.MlMetadataDiff::new),, +                new NamedWriteableRegistry.Entry(PersistentActionCoordinator.Status.class,, +                        PersistentActionCoordinator.Status.NAME, PersistentActionCoordinator.Status::new),, +                new NamedWriteableRegistry.Entry(ClusterState.Custom.class, PersistentTasksInProgress.TYPE, PersistentTasksInProgress::new),, +                new NamedWriteableRegistry.Entry(NamedDiff.class, PersistentTasksInProgress.TYPE, PersistentTasksInProgress::readDiffFrom), +        PersistentActionService persistentActionService = new PersistentActionService(Settings.EMPTY, clusterService, client);, +        PersistentActionRegistry persistentActionRegistry = new PersistentActionRegistry(Settings.EMPTY);, +                datafeedJobRunner,, +                persistentActionService,, +                persistentActionRegistry,, +                new PersistentTaskClusterService(Settings.EMPTY, persistentActionRegistry, clusterService), +                new ActionHandler<>(DeleteModelSnapshotAction.INSTANCE, DeleteModelSnapshotAction.TransportAction.class),, +                new ActionHandler<>(StartPersistentTaskAction.INSTANCE, StartPersistentTaskAction.TransportAction.class),, +                new ActionHandler<>(CompletionPersistentTaskAction.INSTANCE, CompletionPersistentTaskAction.TransportAction.class),, +                new ActionHandler<>(RemovePersistentTaskAction.INSTANCE, RemovePersistentTaskAction.TransportAction.class), +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/MlPlugin.java, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.xpack.persistent.RemovePersistentTaskAction;, +import org.elasticsearch.xpack.persistent.PersistentActionCoordinator;, +import org.elasticsearch.xpack.persistent.PersistentActionRegistry;, +import org.elasticsearch.xpack.persistent.PersistentActionService;, +import org.elasticsearch.xpack.persistent.PersistentTaskClusterService;, +import org.elasticsearch.xpack.persistent.PersistentTasksInProgress;, +import org.elasticsearch.xpack.persistent.CompletionPersistentTaskAction;, +import org.elasticsearch.xpack.persistent.StartPersistentTaskAction;, +                new NamedWriteableRegistry.Entry(NamedDiff.class, "ml", MlMetadata.MlMetadataDiff::new),, +                new NamedWriteableRegistry.Entry(PersistentActionCoordinator.Status.class,, +                        PersistentActionCoordinator.Status.NAME, PersistentActionCoordinator.Status::new),, +                new NamedWriteableRegistry.Entry(ClusterState.Custom.class, PersistentTasksInProgress.TYPE, PersistentTasksInProgress::new),, +                new NamedWriteableRegistry.Entry(NamedDiff.class, PersistentTasksInProgress.TYPE, PersistentTasksInProgress::readDiffFrom), +        PersistentActionService persistentActionService = new PersistentActionService(Settings.EMPTY, clusterService, client);, +        PersistentActionRegistry persistentActionRegistry = new PersistentActionRegistry(Settings.EMPTY);, +                datafeedJobRunner,, +                persistentActionService,, +                persistentActionRegistry,, +                new PersistentTaskClusterService(Settings.EMPTY, persistentActionRegistry, clusterService), +                new ActionHandler<>(DeleteModelSnapshotAction.INSTANCE, DeleteModelSnapshotAction.TransportAction.class),, +                new ActionHandler<>(StartPersistentTaskAction.INSTANCE, StartPersistentTaskAction.TransportAction.class),, +                new ActionHandler<>(CompletionPersistentTaskAction.INSTANCE, CompletionPersistentTaskAction.TransportAction.class),, +                new ActionHandler<>(RemovePersistentTaskAction.INSTANCE, RemovePersistentTaskAction.TransportAction.class), +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/persistent/CompletionPersistentTaskAction.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.xpack.persistent;, +, +import org.elasticsearch.action.Action;, +import org.elasticsearch.action.ActionListener;, +import org.elasticsearch.action.ActionRequestValidationException;, +import org.elasticsearch.action.support.ActionFilters;, +import org.elasticsearch.action.support.master.AcknowledgedResponse;, +import org.elasticsearch.action.support.master.MasterNodeOperationRequestBuilder;, +import org.elasticsearch.action.support.master.MasterNodeRequest;, +import org.elasticsearch.action.support.master.TransportMasterNodeAction;, +import org.elasticsearch.client.ElasticsearchClient;, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.cluster.block.ClusterBlockException;, +import org.elasticsearch.cluster.block.ClusterBlockLevel;, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +import org.elasticsearch.cluster.service.ClusterService;, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.threadpool.ThreadPool;, +import org.elasticsearch.transport.TransportResponse.Empty;, +import org.elasticsearch.transport.TransportService;, +, +import java.io.IOException;, +import java.util.Objects;, +, +/**, + * Action that is used by executor node to indicate that the persistent action finished or failed on the node and needs to be, + * removed from the cluster state in case of successful completion or restarted on some other node in case of failure., + */, +public class CompletionPersistentTaskAction extends Action<CompletionPersistentTaskAction.Request,, +        CompletionPersistentTaskAction.Response,, +        CompletionPersistentTaskAction.RequestBuilder> {, +, +    public static final CompletionPersistentTaskAction INSTANCE = new CompletionPersistentTaskAction();, +    public static final String NAME = "cluster:admin/persistent/completion";, +, +    private CompletionPersistentTaskAction() {, +        super(NAME);, +    }, +, +    @Override, +    public RequestBuilder newRequestBuilder(ElasticsearchClient client) {]