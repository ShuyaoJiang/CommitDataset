[+++ b/server/src/main/java/org/elasticsearch/common/time/DateUtils.java, +import java.util.Set;, +    public static final Set<String> DEPRECATED_SHORT_TZ_IDS;, +        DEPRECATED_SHORT_TZ_IDS = tzs.keySet();, +++ b/server/src/main/java/org/elasticsearch/common/time/DateUtils.java, +import java.util.Set;, +    public static final Set<String> DEPRECATED_SHORT_TZ_IDS;, +        DEPRECATED_SHORT_TZ_IDS = tzs.keySet();, +++ b/server/src/test/java/org/elasticsearch/index/query/RangeQueryBuilderTests.java, +        query.timeZone(randomDateTimeZone().getID());, +++ b/server/src/main/java/org/elasticsearch/common/time/DateUtils.java, +import java.util.Set;, +    public static final Set<String> DEPRECATED_SHORT_TZ_IDS;, +        DEPRECATED_SHORT_TZ_IDS = tzs.keySet();, +++ b/server/src/test/java/org/elasticsearch/index/query/RangeQueryBuilderTests.java, +        query.timeZone(randomDateTimeZone().getID());, +++ b/test/framework/src/main/java/org/elasticsearch/test/ESTestCase.java, +import org.elasticsearch.common.time.DateUtils;, +    protected static final List<String> JODA_TIMEZONE_IDS;, +    protected static final List<String> JAVA_TIMEZONE_IDS;, +    protected static final List<String> JAVA_ZONE_IDS;, +        // filter out joda timezones that are deprecated for the java time migration, +        List<String> jodaTZIds = DateTimeZone.getAvailableIDs().stream(), +            .filter(DateUtils.DEPRECATED_SHORT_TZ_IDS::contains).sorted().collect(Collectors.toList());, +++ b/server/src/main/java/org/elasticsearch/common/time/DateUtils.java, +import java.util.Set;, +    public static final Set<String> DEPRECATED_SHORT_TZ_IDS;, +        DEPRECATED_SHORT_TZ_IDS = tzs.keySet();, +++ b/server/src/test/java/org/elasticsearch/index/query/RangeQueryBuilderTests.java, +        query.timeZone(randomDateTimeZone().getID());, +++ b/test/framework/src/main/java/org/elasticsearch/test/ESTestCase.java, +import org.elasticsearch.common.time.DateUtils;, +    protected static final List<String> JODA_TIMEZONE_IDS;, +    protected static final List<String> JAVA_TIMEZONE_IDS;, +    protected static final List<String> JAVA_ZONE_IDS;, +        // filter out joda timezones that are deprecated for the java time migration, +        List<String> jodaTZIds = DateTimeZone.getAvailableIDs().stream(), +            .filter(DateUtils.DEPRECATED_SHORT_TZ_IDS::contains).sorted().collect(Collectors.toList());, +++ b/x-pack/qa/sql/src/main/java/org/elasticsearch/xpack/qa/sql/jdbc/JdbcIntegrationTestCase.java, +        Set<String> timeZones = new HashSet<>(JODA_TIMEZONE_IDS);, +        timeZones.retainAll(JAVA_TIMEZONE_IDS);]