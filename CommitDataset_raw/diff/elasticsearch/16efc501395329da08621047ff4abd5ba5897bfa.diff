[+++ b/docs/reference/testing/testing-framework.asciidoc, +If you are interested in the implementation being used, check out the http://labs.carrotsearch.com/randomizedtesting.html[RandomizedTesting webpage]., +++ b/docs/reference/testing/testing-framework.asciidoc, +If you are interested in the implementation being used, check out the http://labs.carrotsearch.com/randomizedtesting.html[RandomizedTesting webpage]., +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +            return readFrom(new BytesStreamInput(data), localNode);, +++ b/docs/reference/testing/testing-framework.asciidoc, +If you are interested in the implementation being used, check out the http://labs.carrotsearch.com/randomizedtesting.html[RandomizedTesting webpage]., +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +            return readFrom(new BytesStreamInput(data), localNode);, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesArray.java, +        return new BytesStreamInput(bytes, offset, length);, +++ b/docs/reference/testing/testing-framework.asciidoc, +If you are interested in the implementation being used, check out the http://labs.carrotsearch.com/randomizedtesting.html[RandomizedTesting webpage]., +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +            return readFrom(new BytesStreamInput(data), localNode);, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesArray.java, +        return new BytesStreamInput(bytes, offset, length);, +++ b/src/main/java/org/elasticsearch/common/io/stream/BytesStreamInput.java, +    public BytesStreamInput(byte buf[]) {, +        this(buf, 0, buf.length);, +    public BytesStreamInput(byte buf[], int offset, int length) {, +++ b/docs/reference/testing/testing-framework.asciidoc, +If you are interested in the implementation being used, check out the http://labs.carrotsearch.com/randomizedtesting.html[RandomizedTesting webpage]., +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +            return readFrom(new BytesStreamInput(data), localNode);, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesArray.java, +        return new BytesStreamInput(bytes, offset, length);, +++ b/src/main/java/org/elasticsearch/common/io/stream/BytesStreamInput.java, +    public BytesStreamInput(byte buf[]) {, +        this(buf, 0, buf.length);, +    public BytesStreamInput(byte buf[], int offset, int length) {, +++ b/src/main/java/org/elasticsearch/common/settings/loader/PropertiesSettingsLoader.java, +        BytesStreamInput stream = new BytesStreamInput(source);, +++ b/docs/reference/testing/testing-framework.asciidoc, +If you are interested in the implementation being used, check out the http://labs.carrotsearch.com/randomizedtesting.html[RandomizedTesting webpage]., +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +            return readFrom(new BytesStreamInput(data), localNode);, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesArray.java, +        return new BytesStreamInput(bytes, offset, length);, +++ b/src/main/java/org/elasticsearch/common/io/stream/BytesStreamInput.java, +    public BytesStreamInput(byte buf[]) {, +        this(buf, 0, buf.length);, +    public BytesStreamInput(byte buf[], int offset, int length) {, +++ b/src/main/java/org/elasticsearch/common/settings/loader/PropertiesSettingsLoader.java, +        BytesStreamInput stream = new BytesStreamInput(source);, +++ b/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java, +            CompressedStreamInput compressedInput = compressor.streamInput(new BytesStreamInput(data, offset, length));, +                CompressedStreamInput compressedStreamInput = compressor.streamInput(new BytesStreamInput(data, offset, length));, +++ b/docs/reference/testing/testing-framework.asciidoc, +If you are interested in the implementation being used, check out the http://labs.carrotsearch.com/randomizedtesting.html[RandomizedTesting webpage]., +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +            return readFrom(new BytesStreamInput(data), localNode);, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesArray.java, +        return new BytesStreamInput(bytes, offset, length);, +++ b/src/main/java/org/elasticsearch/common/io/stream/BytesStreamInput.java, +    public BytesStreamInput(byte buf[]) {, +        this(buf, 0, buf.length);, +    public BytesStreamInput(byte buf[], int offset, int length) {, +++ b/src/main/java/org/elasticsearch/common/settings/loader/PropertiesSettingsLoader.java, +        BytesStreamInput stream = new BytesStreamInput(source);, +++ b/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java, +            CompressedStreamInput compressedInput = compressor.streamInput(new BytesStreamInput(data, offset, length));, +                CompressedStreamInput compressedStreamInput = compressor.streamInput(new BytesStreamInput(data, offset, length));, +++ b/src/main/java/org/elasticsearch/index/translog/fs/FsChannelSnapshot.java, +import org.apache.lucene.util.BytesRef;, +import org.elasticsearch.common.bytes.BytesArray;, +            BytesArray bytesArray = new BytesArray(cacheBuffer.array(), 0, opSize);, +            return TranslogStreams.readTranslogOperation(new BytesStreamInput(bytesArray.copyBytesArray()));, +++ b/docs/reference/testing/testing-framework.asciidoc, +If you are interested in the implementation being used, check out the http://labs.carrotsearch.com/randomizedtesting.html[RandomizedTesting webpage]., +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +            return readFrom(new BytesStreamInput(data), localNode);, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesArray.java, +        return new BytesStreamInput(bytes, offset, length);, +++ b/src/main/java/org/elasticsearch/common/io/stream/BytesStreamInput.java, +    public BytesStreamInput(byte buf[]) {, +        this(buf, 0, buf.length);, +    public BytesStreamInput(byte buf[], int offset, int length) {, +++ b/src/main/java/org/elasticsearch/common/settings/loader/PropertiesSettingsLoader.java, +        BytesStreamInput stream = new BytesStreamInput(source);, +++ b/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java, +            CompressedStreamInput compressedInput = compressor.streamInput(new BytesStreamInput(data, offset, length));, +                CompressedStreamInput compressedStreamInput = compressor.streamInput(new BytesStreamInput(data, offset, length));, +++ b/src/main/java/org/elasticsearch/index/translog/fs/FsChannelSnapshot.java, +import org.apache.lucene.util.BytesRef;, +import org.elasticsearch.common.bytes.BytesArray;, +            BytesArray bytesArray = new BytesArray(cacheBuffer.array(), 0, opSize);, +            return TranslogStreams.readTranslogOperation(new BytesStreamInput(bytesArray.copyBytesArray()));, +++ b/src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java, +                try (BytesStreamInput in = new BytesStreamInput(data)) {, +++ b/docs/reference/testing/testing-framework.asciidoc, +If you are interested in the implementation being used, check out the http://labs.carrotsearch.com/randomizedtesting.html[RandomizedTesting webpage]., +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +            return readFrom(new BytesStreamInput(data), localNode);, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesArray.java, +        return new BytesStreamInput(bytes, offset, length);, +++ b/src/main/java/org/elasticsearch/common/io/stream/BytesStreamInput.java, +    public BytesStreamInput(byte buf[]) {, +        this(buf, 0, buf.length);]