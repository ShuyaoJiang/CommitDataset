[+++ b/server/src/test/java/org/elasticsearch/action/admin/cluster/bootstrap/BootstrapConfigurationTests.java, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +                (CopyFunction<BootstrapConfiguration>) bootstrapConfiguration -> copyWriteable(bootstrapConfiguration, writableRegistry(),, +                        BootstrapConfiguration::new),, +                this::mutate);, +++ b/server/src/test/java/org/elasticsearch/action/admin/cluster/bootstrap/BootstrapConfigurationTests.java, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +                (CopyFunction<BootstrapConfiguration>) bootstrapConfiguration -> copyWriteable(bootstrapConfiguration, writableRegistry(),, +                        BootstrapConfiguration::new),, +                this::mutate);, +++ b/server/src/test/java/org/elasticsearch/cluster/coordination/CoordinationMetaDataTests.java, +import org.elasticsearch.cluster.coordination.CoordinationMetaData.VotingConfiguration;, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +                (CopyFunction<VotingConfiguration>) orig -> ESTestCase.copyWriteable(orig,, +                        new NamedWriteableRegistry(Collections.emptyList()), VotingConfiguration::new),, +                (CopyFunction<VotingConfigExclusion>) orig -> ESTestCase.copyWriteable(orig,, +                        new NamedWriteableRegistry(Collections.emptyList()), VotingConfigExclusion::new),, +                (CopyFunction<CoordinationMetaData>) orig -> ESTestCase.copyWriteable(orig,, +                        new NamedWriteableRegistry(Collections.emptyList()), CoordinationMetaData::new),, +++ b/server/src/test/java/org/elasticsearch/action/admin/cluster/bootstrap/BootstrapConfigurationTests.java, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +                (CopyFunction<BootstrapConfiguration>) bootstrapConfiguration -> copyWriteable(bootstrapConfiguration, writableRegistry(),, +                        BootstrapConfiguration::new),, +                this::mutate);, +++ b/server/src/test/java/org/elasticsearch/cluster/coordination/CoordinationMetaDataTests.java, +import org.elasticsearch.cluster.coordination.CoordinationMetaData.VotingConfiguration;, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +                (CopyFunction<VotingConfiguration>) orig -> ESTestCase.copyWriteable(orig,, +                        new NamedWriteableRegistry(Collections.emptyList()), VotingConfiguration::new),, +                (CopyFunction<VotingConfigExclusion>) orig -> ESTestCase.copyWriteable(orig,, +                        new NamedWriteableRegistry(Collections.emptyList()), VotingConfigExclusion::new),, +                (CopyFunction<CoordinationMetaData>) orig -> ESTestCase.copyWriteable(orig,, +                        new NamedWriteableRegistry(Collections.emptyList()), CoordinationMetaData::new),, +++ b/server/src/test/java/org/elasticsearch/cluster/coordination/FollowersCheckerTests.java, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +            (CopyFunction<FollowerCheckRequest>) rq -> copyWriteable(rq, writableRegistry(), FollowerCheckRequest::new),, +++ b/server/src/test/java/org/elasticsearch/action/admin/cluster/bootstrap/BootstrapConfigurationTests.java, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +                (CopyFunction<BootstrapConfiguration>) bootstrapConfiguration -> copyWriteable(bootstrapConfiguration, writableRegistry(),, +                        BootstrapConfiguration::new),, +                this::mutate);, +++ b/server/src/test/java/org/elasticsearch/cluster/coordination/CoordinationMetaDataTests.java, +import org.elasticsearch.cluster.coordination.CoordinationMetaData.VotingConfiguration;, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +                (CopyFunction<VotingConfiguration>) orig -> ESTestCase.copyWriteable(orig,, +                        new NamedWriteableRegistry(Collections.emptyList()), VotingConfiguration::new),, +                (CopyFunction<VotingConfigExclusion>) orig -> ESTestCase.copyWriteable(orig,, +                        new NamedWriteableRegistry(Collections.emptyList()), VotingConfigExclusion::new),, +                (CopyFunction<CoordinationMetaData>) orig -> ESTestCase.copyWriteable(orig,, +                        new NamedWriteableRegistry(Collections.emptyList()), CoordinationMetaData::new),, +++ b/server/src/test/java/org/elasticsearch/cluster/coordination/FollowersCheckerTests.java, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +            (CopyFunction<FollowerCheckRequest>) rq -> copyWriteable(rq, writableRegistry(), FollowerCheckRequest::new),, +++ b/server/src/test/java/org/elasticsearch/cluster/coordination/LeaderCheckerTests.java, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +                (CopyFunction<LeaderCheckRequest>) rq -> copyWriteable(rq, writableRegistry(), LeaderCheckRequest::new),, +++ b/server/src/test/java/org/elasticsearch/action/admin/cluster/bootstrap/BootstrapConfigurationTests.java, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +                (CopyFunction<BootstrapConfiguration>) bootstrapConfiguration -> copyWriteable(bootstrapConfiguration, writableRegistry(),, +                        BootstrapConfiguration::new),, +                this::mutate);, +++ b/server/src/test/java/org/elasticsearch/cluster/coordination/CoordinationMetaDataTests.java, +import org.elasticsearch.cluster.coordination.CoordinationMetaData.VotingConfiguration;, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +                (CopyFunction<VotingConfiguration>) orig -> ESTestCase.copyWriteable(orig,, +                        new NamedWriteableRegistry(Collections.emptyList()), VotingConfiguration::new),, +                (CopyFunction<VotingConfigExclusion>) orig -> ESTestCase.copyWriteable(orig,, +                        new NamedWriteableRegistry(Collections.emptyList()), VotingConfigExclusion::new),, +                (CopyFunction<CoordinationMetaData>) orig -> ESTestCase.copyWriteable(orig,, +                        new NamedWriteableRegistry(Collections.emptyList()), CoordinationMetaData::new),, +++ b/server/src/test/java/org/elasticsearch/cluster/coordination/FollowersCheckerTests.java, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +            (CopyFunction<FollowerCheckRequest>) rq -> copyWriteable(rq, writableRegistry(), FollowerCheckRequest::new),, +++ b/server/src/test/java/org/elasticsearch/cluster/coordination/LeaderCheckerTests.java, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +                (CopyFunction<LeaderCheckRequest>) rq -> copyWriteable(rq, writableRegistry(), LeaderCheckRequest::new),, +++ b/server/src/test/java/org/elasticsearch/cluster/coordination/MessagesTests.java, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +            (CopyFunction<Join>) join -> copyWriteable(join, writableRegistry(), Join::new),, +            (CopyFunction<PublishResponse>) publishResponse -> copyWriteable(publishResponse, writableRegistry(), PublishResponse::new),, +                (CopyFunction<PublishWithJoinResponse>) publishWithJoinResponse -> copyWriteable(publishWithJoinResponse,, +                        writableRegistry(), PublishWithJoinResponse::new),, +                (CopyFunction<StartJoinRequest>) startJoinRequest -> copyWriteable(startJoinRequest, writableRegistry(),, +                        StartJoinRequest::new),, +                (CopyFunction<ApplyCommitRequest>) applyCommit -> copyWriteable(applyCommit, writableRegistry(), ApplyCommitRequest::new),, +                (CopyFunction<JoinRequest>) joinRequest -> copyWriteable(joinRequest, writableRegistry(), JoinRequest::new),, +                (CopyFunction<PreVoteRequest>) preVoteRequest -> copyWriteable(preVoteRequest, writableRegistry(), PreVoteRequest::new),, +                (CopyFunction<PreVoteResponse>) preVoteResponse -> copyWriteable(preVoteResponse, writableRegistry(), PreVoteResponse::new),, +++ b/server/src/test/java/org/elasticsearch/action/admin/cluster/bootstrap/BootstrapConfigurationTests.java, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +                (CopyFunction<BootstrapConfiguration>) bootstrapConfiguration -> copyWriteable(bootstrapConfiguration, writableRegistry(),, +                        BootstrapConfiguration::new),, +                this::mutate);, +++ b/server/src/test/java/org/elasticsearch/cluster/coordination/CoordinationMetaDataTests.java, +import org.elasticsearch.cluster.coordination.CoordinationMetaData.VotingConfiguration;, +import org.elasticsearch.test.EqualsHashCodeTestUtils.CopyFunction;, +                (CopyFunction<VotingConfiguration>) orig -> ESTestCase.copyWriteable(orig,, +                        new NamedWriteableRegistry(Collections.emptyList()), VotingConfiguration::new),, +                (CopyFunction<VotingConfigExclusion>) orig -> ESTestCase.copyWriteable(orig,, +                        new NamedWriteableRegistry(Collections.emptyList()), VotingConfigExclusion::new),]