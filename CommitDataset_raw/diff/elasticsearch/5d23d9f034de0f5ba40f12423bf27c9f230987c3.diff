[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        Object[] args = [new File(node.homeDir, 'bin/elasticsearch-plugin'), 'install', file], +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        Object[] args = [new File(node.homeDir, 'bin/elasticsearch-plugin'), 'install', file], +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +                    System.setProperty("es." + key, value);, +                        System.setProperty("es." + arg, value);, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        Object[] args = [new File(node.homeDir, 'bin/elasticsearch-plugin'), 'install', file], +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +                    System.setProperty("es." + key, value);, +                        System.setProperty("es." + arg, value);, +, +++ b/dev-tools/create_bwc_index.py, +  cmd = [os.path.join(release_dir, 'bin/elasticsearch-plugin'), plugin_cmd] + args, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        Object[] args = [new File(node.homeDir, 'bin/elasticsearch-plugin'), 'install', file], +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +                    System.setProperty("es." + key, value);, +                        System.setProperty("es." + arg, value);, +, +++ b/dev-tools/create_bwc_index.py, +  cmd = [os.path.join(release_dir, 'bin/elasticsearch-plugin'), plugin_cmd] + args, +++ b/dev-tools/prepare_release_candidate.py, +    bin/elasticsearch-plugin -Des.plugins.staging=true install cloud-aws, +    bin/elasticsearch-plugin -Des.plugins.staging=true install license, +    bin/elasticsearch-plugin -Des.plugins.staging=true install marvel-agent, +    bin/elasticsearch-plugin -Des.plugins.staging=true install shield, +    bin/elasticsearch-plugin -Des.plugins.staging=true install watcher, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        Object[] args = [new File(node.homeDir, 'bin/elasticsearch-plugin'), 'install', file], +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +                    System.setProperty("es." + key, value);, +                        System.setProperty("es." + arg, value);, +, +++ b/dev-tools/create_bwc_index.py, +  cmd = [os.path.join(release_dir, 'bin/elasticsearch-plugin'), plugin_cmd] + args, +++ b/dev-tools/prepare_release_candidate.py, +    bin/elasticsearch-plugin -Des.plugins.staging=true install cloud-aws, +    bin/elasticsearch-plugin -Des.plugins.staging=true install license, +    bin/elasticsearch-plugin -Des.plugins.staging=true install marvel-agent, +    bin/elasticsearch-plugin -Des.plugins.staging=true install shield, +    bin/elasticsearch-plugin -Des.plugins.staging=true install watcher, +++ b/dev-tools/smoke_test_rc.py, +    es_plugin_path = os.path.join(tmp_dir, 'elasticsearch-%s' % (release), 'bin/elasticsearch-plugin'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        Object[] args = [new File(node.homeDir, 'bin/elasticsearch-plugin'), 'install', file], +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +                    System.setProperty("es." + key, value);, +                        System.setProperty("es." + arg, value);, +, +++ b/dev-tools/create_bwc_index.py, +  cmd = [os.path.join(release_dir, 'bin/elasticsearch-plugin'), plugin_cmd] + args, +++ b/dev-tools/prepare_release_candidate.py, +    bin/elasticsearch-plugin -Des.plugins.staging=true install cloud-aws, +    bin/elasticsearch-plugin -Des.plugins.staging=true install license, +    bin/elasticsearch-plugin -Des.plugins.staging=true install marvel-agent, +    bin/elasticsearch-plugin -Des.plugins.staging=true install shield, +    bin/elasticsearch-plugin -Des.plugins.staging=true install watcher, +++ b/dev-tools/smoke_test_rc.py, +    es_plugin_path = os.path.join(tmp_dir, 'elasticsearch-%s' % (release), 'bin/elasticsearch-plugin'), +++ b/distribution/build.gradle, + * scripts like bin/elasticsearch and bin/elasticsearch-plugin that a user might run and also, + *    /etc/elasticsearch. Its also used in bin/elasticsearch-plugin, where it is, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        Object[] args = [new File(node.homeDir, 'bin/elasticsearch-plugin'), 'install', file], +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +                    System.setProperty("es." + key, value);, +                        System.setProperty("es." + arg, value);, +, +++ b/dev-tools/create_bwc_index.py, +  cmd = [os.path.join(release_dir, 'bin/elasticsearch-plugin'), plugin_cmd] + args, +++ b/dev-tools/prepare_release_candidate.py, +    bin/elasticsearch-plugin -Des.plugins.staging=true install cloud-aws, +    bin/elasticsearch-plugin -Des.plugins.staging=true install license, +    bin/elasticsearch-plugin -Des.plugins.staging=true install marvel-agent, +    bin/elasticsearch-plugin -Des.plugins.staging=true install shield, +    bin/elasticsearch-plugin -Des.plugins.staging=true install watcher, +++ b/dev-tools/smoke_test_rc.py, +    es_plugin_path = os.path.join(tmp_dir, 'elasticsearch-%s' % (release), 'bin/elasticsearch-plugin'), +++ b/distribution/build.gradle, + * scripts like bin/elasticsearch and bin/elasticsearch-plugin that a user might run and also, + *    /etc/elasticsearch. Its also used in bin/elasticsearch-plugin, where it is, +++ b/distribution/src/main/resources/bin/elasticsearch-plugin, +#!/bin/sh, +, +, +CDPATH="", +SCRIPT="$0", +, +# SCRIPT may be an arbitrarily deep series of symlinks. Loop until we have the concrete path., +while [ -h "$SCRIPT" ] ; do, +  ls=`ls -ld "$SCRIPT"`, +  # Drop everything prior to ->, +  link=`expr "$ls" : '.*-> \(.*\)$'`, +  if expr "$link" : '/.*' > /dev/null; then, +    SCRIPT="$link", +  else, +    SCRIPT=`dirname "$SCRIPT"`/"$link"]