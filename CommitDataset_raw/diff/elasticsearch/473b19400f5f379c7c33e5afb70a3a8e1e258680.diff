[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +import org.gradle.api.GradleException, +import org.gradle.api.Project, +    int baseHttpPort = 9400, +    int baseTransportPort = 9500, +    /**, +     * A closure to call before the cluster is considered ready. The closure is passed the node info,, +     * as well as a groovy AntBuilder, to enable running ant condition checks. The default wait, +     * condition is for http on the http port., +     */, +    @Input, +    Closure waitCondition = { NodeInfo node, AntBuilder ant ->, +        File tmpFile = new File(node.cwd, 'wait.success'), +        ant.get(src: "http://localhost:${node.httpPort()}",, +                dest: tmpFile.toString(),, +                ignoreerrors: true, // do not fail on error, so logging buffers can be flushed by the wait task, +                retries: 10), +        return tmpFile.exists(), +    }, +, +    Map<String, String> settings = new HashMap<>(), +, +    // map from destination path, to source file, +    Map<String, Object> extraConfigFiles = new HashMap<>(), +, +    LinkedHashMap<String, Object> plugins = new LinkedHashMap<>(), +    void setting(String name, String value) {, +        settings.put(name, value), +    }, +, +    @Input, +    void plugin(String name, FileCollection file) {, +        plugins.put(name, file), +    }, +, +    @Input, +    void plugin(String name, Project pluginProject) {, +        plugins.put(name, pluginProject), +    }, +, +    @Input, +, +    /**, +     * Add an extra configuration file. The path is relative to the config dir, and the sourceFile, +     * is anything accepted by project.file(), +     */, +    @Input, +    void extraConfigFile(String path, Object sourceFile) {, +        if (path == 'elasticsearch.yml') {, +            throw new GradleException('Overwriting elasticsearch.yml is not allowed, add additional settings using cluster { setting "foo", "bar" }'), +        }, +        extraConfigFiles.put(path, sourceFile), +    }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +import org.gradle.api.GradleException, +import org.gradle.api.Project, +    int baseHttpPort = 9400, +    int baseTransportPort = 9500, +    /**, +     * A closure to call before the cluster is considered ready. The closure is passed the node info,, +     * as well as a groovy AntBuilder, to enable running ant condition checks. The default wait, +     * condition is for http on the http port., +     */, +    @Input, +    Closure waitCondition = { NodeInfo node, AntBuilder ant ->, +        File tmpFile = new File(node.cwd, 'wait.success'), +        ant.get(src: "http://localhost:${node.httpPort()}",, +                dest: tmpFile.toString(),, +                ignoreerrors: true, // do not fail on error, so logging buffers can be flushed by the wait task, +                retries: 10), +        return tmpFile.exists(), +    }, +, +    Map<String, String> settings = new HashMap<>(), +, +    // map from destination path, to source file, +    Map<String, Object> extraConfigFiles = new HashMap<>(), +, +    LinkedHashMap<String, Object> plugins = new LinkedHashMap<>(), +    void setting(String name, String value) {, +        settings.put(name, value), +    }, +, +    @Input, +    void plugin(String name, FileCollection file) {, +        plugins.put(name, file), +    }, +, +    @Input, +    void plugin(String name, Project pluginProject) {, +        plugins.put(name, pluginProject), +    }, +, +    @Input, +, +    /**, +     * Add an extra configuration file. The path is relative to the config dir, and the sourceFile, +     * is anything accepted by project.file(), +     */, +    @Input]