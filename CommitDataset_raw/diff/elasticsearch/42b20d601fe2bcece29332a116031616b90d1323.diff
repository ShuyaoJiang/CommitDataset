[+++ b/pom.xml, +, +        <lucene.version>4.7.1</lucene.version>, +++ b/pom.xml, +, +        <lucene.version>4.7.1</lucene.version>, +++ /dev/null, +++ b/pom.xml, +, +        <lucene.version>4.7.1</lucene.version>, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import org.apache.lucene.queries.TermsFilter;, +            TermsFilter termsFilter = new TermsFilter(TypeFieldMapper.NAME, typesBytes);, +++ b/pom.xml, +, +        <lucene.version>4.7.1</lucene.version>, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import org.apache.lucene.queries.TermsFilter;, +            TermsFilter termsFilter = new TermsFilter(TypeFieldMapper.NAME, typesBytes);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +import org.apache.lucene.queries.TermsFilter;, +        return new TermsFilter(names.indexName(), bytesRefs);, +++ b/pom.xml, +, +        <lucene.version>4.7.1</lucene.version>, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import org.apache.lucene.queries.TermsFilter;, +            TermsFilter termsFilter = new TermsFilter(TypeFieldMapper.NAME, typesBytes);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +import org.apache.lucene.queries.TermsFilter;, +        return new TermsFilter(names.indexName(), bytesRefs);, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java, +import org.apache.lucene.queries.TermsFilter;, +        return new TermsFilter(UidFieldMapper.NAME, Uid.createTypeUids(context.queryTypes(), value));, +        return new TermsFilter(UidFieldMapper.NAME, Uid.createTypeUids(context.queryTypes(), values));, +++ b/pom.xml, +, +        <lucene.version>4.7.1</lucene.version>, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import org.apache.lucene.queries.TermsFilter;, +            TermsFilter termsFilter = new TermsFilter(TypeFieldMapper.NAME, typesBytes);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +import org.apache.lucene.queries.TermsFilter;, +        return new TermsFilter(names.indexName(), bytesRefs);, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java, +import org.apache.lucene.queries.TermsFilter;, +        return new TermsFilter(UidFieldMapper.NAME, Uid.createTypeUids(context.queryTypes(), value));, +        return new TermsFilter(UidFieldMapper.NAME, Uid.createTypeUids(context.queryTypes(), values));, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java, +import org.apache.lucene.queries.TermsFilter;, +            return new TermsFilter(names.indexName(), typesValues);, +        return new TermsFilter(names.indexName(), bValues);, +++ b/pom.xml, +, +        <lucene.version>4.7.1</lucene.version>, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import org.apache.lucene.queries.TermsFilter;, +            TermsFilter termsFilter = new TermsFilter(TypeFieldMapper.NAME, typesBytes);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +import org.apache.lucene.queries.TermsFilter;, +        return new TermsFilter(names.indexName(), bytesRefs);, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java, +import org.apache.lucene.queries.TermsFilter;, +        return new TermsFilter(UidFieldMapper.NAME, Uid.createTypeUids(context.queryTypes(), value));, +        return new TermsFilter(UidFieldMapper.NAME, Uid.createTypeUids(context.queryTypes(), values));, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java, +import org.apache.lucene.queries.TermsFilter;, +            return new TermsFilter(names.indexName(), typesValues);, +        return new TermsFilter(names.indexName(), bValues);, +++ b/src/main/java/org/elasticsearch/index/query/IdsFilterParser.java, +import org.apache.lucene.queries.TermsFilter;, +        TermsFilter filter = new TermsFilter(UidFieldMapper.NAME, Uid.createTypeUids(types, ids));, +++ b/pom.xml, +, +        <lucene.version>4.7.1</lucene.version>, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import org.apache.lucene.queries.TermsFilter;, +            TermsFilter termsFilter = new TermsFilter(TypeFieldMapper.NAME, typesBytes);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +import org.apache.lucene.queries.TermsFilter;, +        return new TermsFilter(names.indexName(), bytesRefs);, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java, +import org.apache.lucene.queries.TermsFilter;, +        return new TermsFilter(UidFieldMapper.NAME, Uid.createTypeUids(context.queryTypes(), value));, +        return new TermsFilter(UidFieldMapper.NAME, Uid.createTypeUids(context.queryTypes(), values));, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java, +import org.apache.lucene.queries.TermsFilter;, +            return new TermsFilter(names.indexName(), typesValues);, +        return new TermsFilter(names.indexName(), bValues);, +++ b/src/main/java/org/elasticsearch/index/query/IdsFilterParser.java, +import org.apache.lucene.queries.TermsFilter;, +        TermsFilter filter = new TermsFilter(UidFieldMapper.NAME, Uid.createTypeUids(types, ids));, +++ b/src/main/java/org/elasticsearch/index/query/IdsQueryParser.java, +import org.apache.lucene.queries.TermsFilter;]