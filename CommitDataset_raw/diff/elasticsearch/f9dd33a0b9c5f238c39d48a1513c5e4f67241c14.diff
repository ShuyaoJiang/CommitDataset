[+++ b/docs/reference/rollup/apis/rollup-search.asciidoc, +- Index patterns may be used, but if they match more than one rollup index an exception will be thrown., +++ b/docs/reference/rollup/apis/rollup-search.asciidoc, +- Index patterns may be used, but if they match more than one rollup index an exception will be thrown., +++ b/docs/reference/rollup/rollup-search-limitations.asciidoc, +- Index patterns may be used, but if they match more than one rollup index an exception will be thrown., +++ b/docs/reference/rollup/apis/rollup-search.asciidoc, +- Index patterns may be used, but if they match more than one rollup index an exception will be thrown., +++ b/docs/reference/rollup/rollup-search-limitations.asciidoc, +- Index patterns may be used, but if they match more than one rollup index an exception will be thrown., +++ b/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/action/TransportRollupSearchAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +        IndexNameExpressionResolver resolver = new IndexNameExpressionResolver(clusterService.getSettings());, +        String[] indices = resolver.concreteIndexNames(clusterService.state(), request.indicesOptions(), request.indices());, +        RollupSearchContext rollupSearchContext = separateIndices(indices, clusterService.state().getMetaData().indices());, +            throw new IllegalArgumentException("RollupSearch currently only supports searching one rollup index at a time. " +, +                "Found the following rollup indices: " + rollup);, +        return new RollupSearchContext(normal.toArray(new String[0]), rollup.toArray(new String[0]), jobCaps);, +++ b/docs/reference/rollup/apis/rollup-search.asciidoc, +- Index patterns may be used, but if they match more than one rollup index an exception will be thrown., +++ b/docs/reference/rollup/rollup-search-limitations.asciidoc, +- Index patterns may be used, but if they match more than one rollup index an exception will be thrown., +++ b/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/action/TransportRollupSearchAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +        IndexNameExpressionResolver resolver = new IndexNameExpressionResolver(clusterService.getSettings());, +        String[] indices = resolver.concreteIndexNames(clusterService.state(), request.indicesOptions(), request.indices());, +        RollupSearchContext rollupSearchContext = separateIndices(indices, clusterService.state().getMetaData().indices());, +            throw new IllegalArgumentException("RollupSearch currently only supports searching one rollup index at a time. " +, +                "Found the following rollup indices: " + rollup);, +        return new RollupSearchContext(normal.toArray(new String[0]), rollup.toArray(new String[0]), jobCaps);, +++ b/x-pack/plugin/rollup/src/test/java/org/elasticsearch/xpack/rollup/action/SearchActionTests.java, +        assertThat(e.getMessage(), equalTo("RollupSearch currently only supports searching one rollup index at a time. " +, +            "Found the following rollup indices: [foo, bar]"));, +++ b/docs/reference/rollup/apis/rollup-search.asciidoc, +- Index patterns may be used, but if they match more than one rollup index an exception will be thrown., +++ b/docs/reference/rollup/rollup-search-limitations.asciidoc, +- Index patterns may be used, but if they match more than one rollup index an exception will be thrown., +++ b/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/action/TransportRollupSearchAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +        IndexNameExpressionResolver resolver = new IndexNameExpressionResolver(clusterService.getSettings());, +        String[] indices = resolver.concreteIndexNames(clusterService.state(), request.indicesOptions(), request.indices());, +        RollupSearchContext rollupSearchContext = separateIndices(indices, clusterService.state().getMetaData().indices());, +            throw new IllegalArgumentException("RollupSearch currently only supports searching one rollup index at a time. " +, +                "Found the following rollup indices: " + rollup);, +        return new RollupSearchContext(normal.toArray(new String[0]), rollup.toArray(new String[0]), jobCaps);, +++ b/x-pack/plugin/rollup/src/test/java/org/elasticsearch/xpack/rollup/action/SearchActionTests.java, +        assertThat(e.getMessage(), equalTo("RollupSearch currently only supports searching one rollup index at a time. " +, +            "Found the following rollup indices: [foo, bar]"));, +++ b/x-pack/plugin/src/test/resources/rest-api-spec/test/rollup/rollup_search.yml, +---, +"Wildcards matching single rollup index":, +  - do:, +      xpack.rollup.rollup_search:, +        index: "foo_rollup*", +        body:, +          size: 0, +          aggs:, +            histo:, +              date_histogram:, +                field: "timestamp", +                interval: "1h", +                time_zone: "UTC", +, +  - length: { aggregations.histo.buckets: 4 }, +  - match: { aggregations.histo.buckets.0.key_as_string: "2017-01-01T05:00:00.000Z" }, +  - match: { aggregations.histo.buckets.0.doc_count: 1 }, +  - match: { aggregations.histo.buckets.1.key_as_string: "2017-01-01T06:00:00.000Z" }, +  - match: { aggregations.histo.buckets.1.doc_count: 2 }, +  - match: { aggregations.histo.buckets.2.key_as_string: "2017-01-01T07:00:00.000Z" }, +  - match: { aggregations.histo.buckets.2.doc_count: 10 }, +  - match: { aggregations.histo.buckets.3.key_as_string: "2017-01-01T08:00:00.000Z" }, +  - match: { aggregations.histo.buckets.3.doc_count: 20 }, +, +---, +"Wildcards matching two rollup indices":, +, +  - do:, +      indices.create:, +        index: bar, +        body:, +          mappings:, +            _doc:, +              properties:, +                timestamp:, +                  type: date, +                partition:, +                  type: keyword, +                price:, +                  type: integer, +, +  - do:, +      headers:, +        Authorization: "Basic eF9wYWNrX3Jlc3RfdXNlcjp4LXBhY2stdGVzdC1wYXNzd29yZA==" # run as x_pack_rest_user, i.e. the test setup superuser, +      xpack.rollup.put_job:, +        id: bar, +        body:  >, +          {, +            "index_pattern": "bar",, +            "rollup_index": "bar_rollup",, +            "cron": "*/30 * * * * ?",]