[+++ b/core/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java, +        if (boost == -1 && fuzziness == null && prefixLength == null && queryName != null) {, +            builder.field(name, value);, +        } else {, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java, +        if (boost == -1 && fuzziness == null && prefixLength == null && queryName != null) {, +            builder.field(name, value);, +        } else {, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/PrefixQueryBuilder.java, +        if (boost == -1 && rewrite == null && queryName != null) {, +++ b/core/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java, +        if (boost == -1 && fuzziness == null && prefixLength == null && queryName != null) {, +            builder.field(name, value);, +        } else {, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/PrefixQueryBuilder.java, +        if (boost == -1 && rewrite == null && queryName != null) {, +++ b/core/src/main/java/org/elasticsearch/index/query/RegexpQueryBuilder.java, +        if (boost == -1 && rewrite == null && queryName != null) {, +            builder.field(name, regexp);, +        } else {, +                builder.field("name", queryName);, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java, +        if (boost == -1 && fuzziness == null && prefixLength == null && queryName != null) {, +            builder.field(name, value);, +        } else {, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/PrefixQueryBuilder.java, +        if (boost == -1 && rewrite == null && queryName != null) {, +++ b/core/src/main/java/org/elasticsearch/index/query/RegexpQueryBuilder.java, +        if (boost == -1 && rewrite == null && queryName != null) {, +            builder.field(name, regexp);, +        } else {, +                builder.field("name", queryName);, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/RegexpQueryParser.java, +import org.elasticsearch.index.mapper.FieldMapper;, +++ b/core/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java, +        if (boost == -1 && fuzziness == null && prefixLength == null && queryName != null) {, +            builder.field(name, value);, +        } else {, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/PrefixQueryBuilder.java, +        if (boost == -1 && rewrite == null && queryName != null) {, +++ b/core/src/main/java/org/elasticsearch/index/query/RegexpQueryBuilder.java, +        if (boost == -1 && rewrite == null && queryName != null) {, +            builder.field(name, regexp);, +        } else {, +                builder.field("name", queryName);, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/RegexpQueryParser.java, +import org.elasticsearch.index.mapper.FieldMapper;, +++ b/core/src/main/java/org/elasticsearch/index/query/SpanFirstQueryBuilder.java, +            builder.field("name", queryName);, +++ b/core/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java, +        if (boost == -1 && fuzziness == null && prefixLength == null && queryName != null) {, +            builder.field(name, value);, +        } else {, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/PrefixQueryBuilder.java, +        if (boost == -1 && rewrite == null && queryName != null) {, +++ b/core/src/main/java/org/elasticsearch/index/query/RegexpQueryBuilder.java, +        if (boost == -1 && rewrite == null && queryName != null) {, +            builder.field(name, regexp);, +        } else {, +                builder.field("name", queryName);, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/RegexpQueryParser.java, +import org.elasticsearch.index.mapper.FieldMapper;, +++ b/core/src/main/java/org/elasticsearch/index/query/SpanFirstQueryBuilder.java, +            builder.field("name", queryName);, +++ b/core/src/main/java/org/elasticsearch/index/query/WildcardQueryBuilder.java, +        if (boost == -1 && rewrite == null && queryName != null) {, +++ b/core/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java, +        if (boost == -1 && fuzziness == null && prefixLength == null && queryName != null) {, +            builder.field(name, value);, +        } else {, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/PrefixQueryBuilder.java, +        if (boost == -1 && rewrite == null && queryName != null) {, +++ b/core/src/main/java/org/elasticsearch/index/query/RegexpQueryBuilder.java, +        if (boost == -1 && rewrite == null && queryName != null) {, +            builder.field(name, regexp);, +        } else {, +                builder.field("name", queryName);, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/RegexpQueryParser.java, +import org.elasticsearch.index.mapper.FieldMapper;, +++ b/core/src/main/java/org/elasticsearch/index/query/SpanFirstQueryBuilder.java, +            builder.field("name", queryName);, +++ b/core/src/main/java/org/elasticsearch/index/query/WildcardQueryBuilder.java, +        if (boost == -1 && rewrite == null && queryName != null) {, +++ b/core/src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCache.java, +            // don't call cache.cleanUp here as it would have bad performance implications, +            // don't call cache.cleanUp here as it would have bad performance implications, +            for (Key key : cache.asMap().keySet()) {, +                if (key.indexCache.index.equals(index)) {]