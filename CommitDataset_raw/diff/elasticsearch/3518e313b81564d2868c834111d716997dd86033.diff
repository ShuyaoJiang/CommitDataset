[+++ b/core/src/main/java/org/elasticsearch/action/get/GetResponse.java, +import org.elasticsearch.common.document.DocumentField;, +public class GetResponse extends ActionResponse implements Iterable<DocumentField>, ToXContentObject {, +    public Map<String, DocumentField> getFields() {, +    public DocumentField getField(String name) {, +    public Iterator<DocumentField> iterator() {, +++ b/core/src/main/java/org/elasticsearch/action/get/GetResponse.java, +import org.elasticsearch.common.document.DocumentField;, +public class GetResponse extends ActionResponse implements Iterable<DocumentField>, ToXContentObject {, +    public Map<String, DocumentField> getFields() {, +    public DocumentField getField(String name) {, +    public Iterator<DocumentField> iterator() {, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +import org.elasticsearch.common.document.DocumentField;, +        Map<String, DocumentField> fields = null;, +                    DocumentField documentField = fields.get(field);, +                    if (documentField == null) {, +                        documentField = new DocumentField(field, new ArrayList<>(2));, +                        fields.put(field, documentField);, +                    documentField.getValues().add(value);, +++ b/core/src/main/java/org/elasticsearch/action/get/GetResponse.java, +import org.elasticsearch.common.document.DocumentField;, +public class GetResponse extends ActionResponse implements Iterable<DocumentField>, ToXContentObject {, +    public Map<String, DocumentField> getFields() {, +    public DocumentField getField(String name) {, +    public Iterator<DocumentField> iterator() {, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +import org.elasticsearch.common.document.DocumentField;, +        Map<String, DocumentField> fields = null;, +                    DocumentField documentField = fields.get(field);, +                    if (documentField == null) {, +                        documentField = new DocumentField(field, new ArrayList<>(2));, +                        fields.put(field, documentField);, +                    documentField.getValues().add(value);, +++ b/core/src/main/java/org/elasticsearch/common/document/DocumentField.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.document;, +, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.io.stream.Streamable;, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.index.get.GetResult;, +import org.elasticsearch.index.mapper.MapperService;, +import org.elasticsearch.search.SearchHit;, +, +import java.io.IOException;, +import java.util.ArrayList;, +import java.util.Iterator;, +import java.util.List;, +import java.util.Objects;, +, +import static org.elasticsearch.common.xcontent.XContentParserUtils.ensureExpectedToken;, +import static org.elasticsearch.common.xcontent.XContentParserUtils.parseStoredFieldsValue;, +, +/**, + * A single field name and values part of {@link SearchHit} and {@link GetResult}., + *, + * @see SearchHit, + * @see GetResult, + */, +public class DocumentField implements Streamable, ToXContent, Iterable<Object> {, +, +    private String name;, +    private List<Object> values;, +, +    private DocumentField() {, +    }, +, +    public DocumentField(String name, List<Object> values) {, +        this.name = Objects.requireNonNull(name, "name must not be null");, +        this.values = Objects.requireNonNull(values, "values must not be null");, +    }, +, +    /**, +     * The name of the field., +     */, +    public String getName() {, +        return name;, +    }]