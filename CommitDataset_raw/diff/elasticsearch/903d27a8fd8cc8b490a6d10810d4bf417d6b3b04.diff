[+++ b/server/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java, +    @Override, +    public void setPhraseSlop(int phraseSlop) {, +        super.setPhraseSlop(phraseSlop);, +        queryBuilder.setPhraseSlop(phraseSlop);, +    }, +, +++ b/server/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java, +    @Override, +    public void setPhraseSlop(int phraseSlop) {, +        super.setPhraseSlop(phraseSlop);, +        queryBuilder.setPhraseSlop(phraseSlop);, +    }, +, +++ b/server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java, +    public void testPhraseSlop() throws Exception {, +        Query query = new QueryStringQueryBuilder("quick fox"), +            .field(STRING_FIELD_NAME), +            .type(MultiMatchQueryBuilder.Type.PHRASE), +            .toQuery(createShardContext());, +, +        PhraseQuery expected = new PhraseQuery.Builder(), +            .add(new Term(STRING_FIELD_NAME, "quick")), +            .add(new Term(STRING_FIELD_NAME, "fox")), +            .build();, +        assertEquals(expected, query);, +, +        query = new QueryStringQueryBuilder("quick fox"), +            .field(STRING_FIELD_NAME), +            .type(MultiMatchQueryBuilder.Type.PHRASE), +            .phraseSlop(2), +            .toQuery(createShardContext());, +, +        expected = new PhraseQuery.Builder(), +            .add(new Term(STRING_FIELD_NAME, "quick")), +            .add(new Term(STRING_FIELD_NAME, "fox")), +            .setSlop(2), +            .build();, +        assertEquals(expected, query);, +, +        query = new QueryStringQueryBuilder("\"quick fox\""), +            .field(STRING_FIELD_NAME), +            .phraseSlop(2), +            .toQuery(createShardContext());, +        assertEquals(expected, query);, +, +        query = new QueryStringQueryBuilder("\"quick fox\"~2"), +            .field(STRING_FIELD_NAME), +            .phraseSlop(10), +            .toQuery(createShardContext());, +        assertEquals(expected, query);, +    }, +]