[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JavaVersion.java, +import org.elasticsearch.common.Strings;, +, +        return Collections.unmodifiableList(version);, +        this.version = version;, +        if (value == null) {, +            throw new NullPointerException("value");, +        }, +        if ("".equals(value)) {, +        return Strings.collectionToDelimitedString(version, ".");, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JavaVersion.java, +import org.elasticsearch.common.Strings;, +, +        return Collections.unmodifiableList(version);, +        this.version = version;, +        if (value == null) {, +            throw new NullPointerException("value");, +        }, +        if ("".equals(value)) {, +        return Strings.collectionToDelimitedString(version, ".");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JavaVersion.java, +import org.elasticsearch.common.Strings;, +, +        return Collections.unmodifiableList(version);, +        this.version = version;, +        if (value == null) {, +            throw new NullPointerException("value");, +        }, +        if ("".equals(value)) {, +        return Strings.collectionToDelimitedString(version, ".");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                                aliasValidator.validateAliasFilter(aliasAction.alias(), filter, indexService.newQueryShardContext());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JavaVersion.java, +import org.elasticsearch.common.Strings;, +, +        return Collections.unmodifiableList(version);, +        this.version = version;, +        if (value == null) {, +            throw new NullPointerException("value");, +        }, +        if ("".equals(value)) {, +        return Strings.collectionToDelimitedString(version, ".");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                                aliasValidator.validateAliasFilter(aliasAction.alias(), filter, indexService.newQueryShardContext());, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java, +     * Moves the shard from started to initializing and bumps the version, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JavaVersion.java, +import org.elasticsearch.common.Strings;, +, +        return Collections.unmodifiableList(version);, +        this.version = version;, +        if (value == null) {, +            throw new NullPointerException("value");, +        }, +        if ("".equals(value)) {, +        return Strings.collectionToDelimitedString(version, ".");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                                aliasValidator.validateAliasFilter(aliasAction.alias(), filter, indexService.newQueryShardContext());, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java]