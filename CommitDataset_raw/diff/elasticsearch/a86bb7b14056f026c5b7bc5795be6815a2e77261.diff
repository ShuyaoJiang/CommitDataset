[+++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/AgentService.java, +import org.elasticsearch.marvel.agent.exporter.ExportBulk;, +                    ExportBulk bulk = exporters.openBulk();, +                    if (bulk == null) { // exporters are either not ready or faulty, +                        continue;, +                    }, +                    try {, +                            logger.trace("collecting [{}]", collector.name());, +                            Collection<MarvelDoc> docs = collector.collect();, +                            if (docs != null) {, +                                bulk.add(docs);, +                    } finally {, +                        bulk.close(!closed);, +                    }, +, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/AgentService.java, +import org.elasticsearch.marvel.agent.exporter.ExportBulk;, +                    ExportBulk bulk = exporters.openBulk();, +                    if (bulk == null) { // exporters are either not ready or faulty, +                        continue;, +                    }, +                    try {, +                            logger.trace("collecting [{}]", collector.name());, +                            Collection<MarvelDoc> docs = collector.collect();, +                            if (docs != null) {, +                                bulk.add(docs);, +                    } finally {, +                        bulk.close(!closed);, +                    }, +, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/ExportBulk.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.marvel.agent.exporter;, +, +import org.elasticsearch.ElasticsearchException;, +, +import java.util.Arrays;, +import java.util.Collection;, +, +/**, + *, + */, +public abstract class ExportBulk {, +, +    private final String name;, +, +    public ExportBulk(String name) {, +        this.name = name;, +    }, +, +    public ExportBulk add(MarvelDoc... docs) throws Exception {, +        return add(Arrays.asList(docs));, +    }, +, +    public abstract ExportBulk add(Collection<MarvelDoc> docs) throws Exception;, +, +    public abstract void flush() throws Exception;, +, +    public final void close(boolean flush) throws Exception {, +        Exception exception = null;, +        if (flush) {, +            try {, +                flush();, +            } catch (Exception e) {, +                exception = e;, +            }, +        }, +, +        // now closing, +        try {, +            onClose();, +        } catch (Exception e) {, +            if (exception != null) {, +                exception.addSuppressed(e);, +            } else {, +                exception = e;, +            }, +            throw exception;, +        }, +, +    }, +, +    protected void onClose() throws Exception {, +    }, +, +    public static class Compound extends ExportBulk {, +, +        private final Collection<ExportBulk> bulks;, +, +        public Compound(Collection<ExportBulk> bulks) {, +            super("all");, +            this.bulks = bulks;, +        }, +, +        @Override, +        public ExportBulk add(Collection<MarvelDoc> docs) throws Exception {]