[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/PluginInfo.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +package org.elasticsearch.action.admin.cluster.node.info;, +, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.io.stream.Streamable;, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentBuilderString;, +, +import java.io.IOException;, +, +public class PluginInfo implements Streamable, ToXContent {, +    public static final String DESCRIPTION_NOT_AVAILABLE = "No description found.";, +    public static final String VERSION_NOT_AVAILABLE = "NA";, +, +    static final class Fields {, +        static final XContentBuilderString NAME = new XContentBuilderString("name");, +        static final XContentBuilderString DESCRIPTION = new XContentBuilderString("description");, +        static final XContentBuilderString URL = new XContentBuilderString("url");, +        static final XContentBuilderString JVM = new XContentBuilderString("jvm");, +        static final XContentBuilderString SITE = new XContentBuilderString("site");, +        static final XContentBuilderString VERSION = new XContentBuilderString("version");, +    }, +, +    private String name;, +    private String description;, +    private boolean site;, +    private boolean jvm;, +    private String version;, +, +    public PluginInfo() {, +    }, +, +    /**, +     * Information about plugins, +     *, +     * @param name        Its name, +     * @param description Its description, +     * @param site        true if it's a site plugin, +     * @param jvm         true if it's a jvm plugin, +     * @param version     Version number is applicable (NA otherwise), +     */, +    public PluginInfo(String name, String description, boolean site, boolean jvm, String version) {, +        this.name = name;, +        this.description = description;, +        this.site = site;, +        this.jvm = jvm;, +        if (Strings.hasText(version)) {, +            this.version = version;, +        } else {, +            this.version = VERSION_NOT_AVAILABLE;, +        }, +    }, +, +    /**, +     * @return Plugin's name, +     */, +    public String getName() {, +        return name;, +    }, +, +    /**, +     * @return Plugin's description if any, +     */, +    public String getDescription() {, +        return description;, +    }, +, +    /**, +     * @return true if it's a site plugin, +     */, +    public boolean isSite() {, +        return site;, +    }, +, +    /**, +     * @return true if it's a plugin running in the jvm, +     */, +    public boolean isJvm() {, +        return jvm;]