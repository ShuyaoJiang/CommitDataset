[+++ b/elasticsearch/x-pack/shield/src/main/java/org/elasticsearch/shield/authz/accesscontrol/IndicesAccessControl.java, +            if (other.isGranted() == false) {, +                // nothing to merge, +                return this;, +, +            final boolean granted = this.granted;, +            if (granted == false) {, +                // we do not support negatives, so if the current isn't granted - just return other, +                assert other.isGranted();, +                return other;, +            }, +, +++ b/elasticsearch/x-pack/shield/src/main/java/org/elasticsearch/shield/authz/accesscontrol/IndicesAccessControl.java, +            if (other.isGranted() == false) {, +                // nothing to merge, +                return this;, +, +            final boolean granted = this.granted;, +            if (granted == false) {, +                // we do not support negatives, so if the current isn't granted - just return other, +                assert other.isGranted();, +                return other;, +            }, +, +++ b/elasticsearch/x-pack/shield/src/test/java/org/elasticsearch/integration/DocumentAndFieldLevelSecurityTests.java, +                "role1:user1\n" +, +                "role2:user1,user4\n" +, +                "role3:user2,user4\n" +, +                "role4:user3,user4\n";, +                "  cluster: [ none ]\n" +, +                "  indices:\n" +, +                "    - names: '*'\n" +, +                "      privileges: [ none ]\n" +, +                "role2:\n" +, +                "  cluster:\n" +, +                "   - all\n" +, +                "role3:\n" +, +                "role4:\n" +, +++ b/elasticsearch/x-pack/shield/src/main/java/org/elasticsearch/shield/authz/accesscontrol/IndicesAccessControl.java, +            if (other.isGranted() == false) {, +                // nothing to merge, +                return this;, +, +            final boolean granted = this.granted;, +            if (granted == false) {, +                // we do not support negatives, so if the current isn't granted - just return other, +                assert other.isGranted();, +                return other;, +            }, +, +++ b/elasticsearch/x-pack/shield/src/test/java/org/elasticsearch/integration/DocumentAndFieldLevelSecurityTests.java, +                "role1:user1\n" +, +                "role2:user1,user4\n" +, +                "role3:user2,user4\n" +, +                "role4:user3,user4\n";, +                "  cluster: [ none ]\n" +, +                "  indices:\n" +, +                "    - names: '*'\n" +, +                "      privileges: [ none ]\n" +, +                "role2:\n" +, +                "  cluster:\n" +, +                "   - all\n" +, +                "role3:\n" +, +                "role4:\n" +, +++ b/elasticsearch/x-pack/shield/src/test/java/org/elasticsearch/integration/DocumentLevelSecurityRandomTests.java, +        builder.append("role0:");, +        for (int i = 1; i <= numberOfRoles; i++) {, +            builder.append("user").append(i);, +            if (i != numberOfRoles) {, +                builder.append(",");, +            }, +        }, +        builder.append("\n");, +        builder.append("\nrole0:\n");, +        builder.append("  cluster: [ none ]\n");, +        builder.append("  indices:\n");, +        builder.append("    - names: '*'\n");, +        builder.append("      privileges: [ none ]\n");, +++ b/elasticsearch/x-pack/shield/src/main/java/org/elasticsearch/shield/authz/accesscontrol/IndicesAccessControl.java, +            if (other.isGranted() == false) {, +                // nothing to merge, +                return this;, +, +            final boolean granted = this.granted;, +            if (granted == false) {, +                // we do not support negatives, so if the current isn't granted - just return other, +                assert other.isGranted();, +                return other;, +            }, +, +++ b/elasticsearch/x-pack/shield/src/test/java/org/elasticsearch/integration/DocumentAndFieldLevelSecurityTests.java, +                "role1:user1\n" +, +                "role2:user1,user4\n" +, +                "role3:user2,user4\n" +, +                "role4:user3,user4\n";, +                "  cluster: [ none ]\n" +, +                "  indices:\n" +, +                "    - names: '*'\n" +, +                "      privileges: [ none ]\n" +, +                "role2:\n" +]