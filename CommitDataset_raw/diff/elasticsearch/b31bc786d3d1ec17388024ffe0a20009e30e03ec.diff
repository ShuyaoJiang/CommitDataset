[+++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/analysis/AnalysisException.java, +    public AnalysisException(Node<?> source, String message, Throwable cause) {, +        super(message, cause);, +, +        Location loc = Location.EMPTY;, +        if (source != null && source.location() != null) {, +            loc = source.location();, +        }, +        this.line = loc.getLineNumber();, +        this.column = loc.getColumnNumber();, +    }, +, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/analysis/AnalysisException.java, +    public AnalysisException(Node<?> source, String message, Throwable cause) {, +        super(message, cause);, +, +        Location loc = Location.EMPTY;, +        if (source != null && source.location() != null) {, +            loc = source.location();, +        }, +        this.line = loc.getLineNumber();, +        this.column = loc.getColumnNumber();, +    }, +, +++ /dev/null, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/analysis/AnalysisException.java, +    public AnalysisException(Node<?> source, String message, Throwable cause) {, +        super(message, cause);, +, +        Location loc = Location.EMPTY;, +        if (source != null && source.location() != null) {, +            loc = source.location();, +        }, +        this.line = loc.getLineNumber();, +        this.column = loc.getColumnNumber();, +    }, +, +++ /dev/null, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java, +import org.elasticsearch.xpack.sql.SqlIllegalArgumentException;, +            EsIndex found;, +            try {, +                found = catalog.getIndex(table.index());, +            } catch (SqlIllegalArgumentException e) {, +                throw new AnalysisException(plan, e.getMessage(), e);, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/analysis/AnalysisException.java, +    public AnalysisException(Node<?> source, String message, Throwable cause) {, +        super(message, cause);, +, +        Location loc = Location.EMPTY;, +        if (source != null && source.location() != null) {, +            loc = source.location();, +        }, +        this.line = loc.getLineNumber();, +        this.column = loc.getColumnNumber();, +    }, +, +++ /dev/null, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java, +import org.elasticsearch.xpack.sql.SqlIllegalArgumentException;, +            EsIndex found;, +            try {, +                found = catalog.getIndex(table.index());, +            } catch (SqlIllegalArgumentException e) {, +                throw new AnalysisException(plan, e.getMessage(), e);, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/analysis/catalog/Catalog.java, +import org.elasticsearch.xpack.sql.SqlIllegalArgumentException;, +     * @throws SqlIllegalArgumentException if the index is in some way invalid for use with sql, +    EsIndex getIndex(String index) throws SqlIllegalArgumentException;, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/analysis/AnalysisException.java, +    public AnalysisException(Node<?> source, String message, Throwable cause) {, +        super(message, cause);, +, +        Location loc = Location.EMPTY;, +        if (source != null && source.location() != null) {, +            loc = source.location();, +        }, +        this.line = loc.getLineNumber();, +        this.column = loc.getColumnNumber();, +    }, +, +++ /dev/null, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java, +import org.elasticsearch.xpack.sql.SqlIllegalArgumentException;, +            EsIndex found;, +            try {, +                found = catalog.getIndex(table.index());, +            } catch (SqlIllegalArgumentException e) {, +                throw new AnalysisException(plan, e.getMessage(), e);, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/analysis/catalog/Catalog.java, +import org.elasticsearch.xpack.sql.SqlIllegalArgumentException;, +     * @throws SqlIllegalArgumentException if the index is in some way invalid for use with sql, +    EsIndex getIndex(String index) throws SqlIllegalArgumentException;, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/analysis/catalog/EsCatalog.java, +import org.elasticsearch.xpack.sql.SqlIllegalArgumentException;, +    public EsIndex getIndex(String index) throws SqlIllegalArgumentException {, +        IndexMetaData idx = metadata.index(index);, +        if (idx == null) {, +        if (false == indexHasOnlyOneType(idx)) {, +            throw new SqlIllegalArgumentException("index has more than one type");]