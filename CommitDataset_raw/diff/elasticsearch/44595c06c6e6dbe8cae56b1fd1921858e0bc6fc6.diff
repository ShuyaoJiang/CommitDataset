[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/network/NetworkService.java, +import java.util.List;, +import java.util.concurrent.CopyOnWriteArrayList;, +    /**, +     * A custom name resolver can support custom lookup keys (my_net_key:ipv4) and also change, +     * the default inet address used in case no settings is provided., +     */, +        /**, +         * Resolves the default value if possible. If not, return <tt>null</tt>., +         */, +        InetAddress resolveDefault();, +, +        /**, +         * Resolves a custom value handling, return <tt>null</tt> if can't handle it., +         */, +        InetAddress resolveIfPossible(String value);, +    private final List<CustomNameResolver> customNameResolvers = new CopyOnWriteArrayList<CustomNameResolver>();, +    /**, +     * Add a custom name resolver., +     */, +    public void addCustomNameResolver(CustomNameResolver customNameResolver) {, +        customNameResolvers.add(customNameResolver);, +            for (CustomNameResolver customNameResolver : customNameResolvers) {, +                InetAddress inetAddress = customNameResolver.resolveDefault();, +                if (inetAddress != null) {, +                    return inetAddress;, +                }, +            }, +            for (CustomNameResolver customNameResolver : customNameResolvers) {, +                InetAddress inetAddress = customNameResolver.resolveIfPossible(host);, +                if (inetAddress != null) {, +                    return inetAddress;, +                }]