[+++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, Version.V_5_0_2),, +        UNKNOWN_NAMED_OBJECT_EXCEPTION(org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException.class,, +                org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException::new, 148, Version.V_5_2_0_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, Version.V_5_0_2),, +        UNKNOWN_NAMED_OBJECT_EXCEPTION(org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException.class,, +                org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException::new, 148, Version.V_5_2_0_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchParseException.java, +/**, + * Unchecked exception that is translated into a {@code 400 BAD REQUEST} error when it bubbles out over HTTP., + */, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, Version.V_5_0_2),, +        UNKNOWN_NAMED_OBJECT_EXCEPTION(org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException.class,, +                org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException::new, 148, Version.V_5_2_0_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchParseException.java, +/**, + * Unchecked exception that is translated into a {@code 400 BAD REQUEST} error when it bubbles out over HTTP., + */, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        final ClusterState state = clusterService.state();, +        final ClusterStateObserver observer = new ClusterStateObserver(state, clusterService, null, logger, threadPool.getThreadContext());, +                final ClusterHealthResponse response = getResponse(request, observer.setAndGetObservedState(), concreteWaitFor, true);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, Version.V_5_0_2),, +        UNKNOWN_NAMED_OBJECT_EXCEPTION(org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException.class,, +                org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException::new, 148, Version.V_5_2_0_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchParseException.java, +/**, + * Unchecked exception that is translated into a {@code 400 BAD REQUEST} error when it bubbles out over HTTP., + */, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        final ClusterState state = clusterService.state();, +        final ClusterStateObserver observer = new ClusterStateObserver(state, clusterService, null, logger, threadPool.getThreadContext());, +                final ClusterHealthResponse response = getResponse(request, observer.setAndGetObservedState(), concreteWaitFor, true);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/TransportGetTaskAction.java, +import org.elasticsearch.common.xcontent.NamedXContentRegistry;, +    private final NamedXContentRegistry xContentRegistry;, +            IndexNameExpressionResolver indexNameExpressionResolver, ClusterService clusterService, Client client,, +            NamedXContentRegistry xContentRegistry) {, +        this.xContentRegistry = xContentRegistry;, +        try (XContentParser parser = XContentHelper.createParser(xContentRegistry, response.getSourceAsBytesRef())) {, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, Version.V_5_0_2),, +        UNKNOWN_NAMED_OBJECT_EXCEPTION(org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException.class,, +                org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException::new, 148, Version.V_5_2_0_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchParseException.java, +/**, + * Unchecked exception that is translated into a {@code 400 BAD REQUEST} error when it bubbles out over HTTP., + */, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        final ClusterState state = clusterService.state();, +        final ClusterStateObserver observer = new ClusterStateObserver(state, clusterService, null, logger, threadPool.getThreadContext());, +                final ClusterHealthResponse response = getResponse(request, observer.setAndGetObservedState(), concreteWaitFor, true);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/TransportGetTaskAction.java, +import org.elasticsearch.common.xcontent.NamedXContentRegistry;, +    private final NamedXContentRegistry xContentRegistry;, +            IndexNameExpressionResolver indexNameExpressionResolver, ClusterService clusterService, Client client,, +            NamedXContentRegistry xContentRegistry) {, +        this.xContentRegistry = xContentRegistry;, +        try (XContentParser parser = XContentHelper.createParser(xContentRegistry, response.getSourceAsBytesRef())) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java, +import org.elasticsearch.common.xcontent.NamedXContentRegistry;, +        // EMPTY is safe here because we never call namedObject, +        try (XContentParser parser = XContentHelper.createParser(NamedXContentRegistry.EMPTY, source)) {, +            source(XContentHelper.convertToMap(source, false).v2());, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, Version.V_5_0_2),, +        UNKNOWN_NAMED_OBJECT_EXCEPTION(org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException.class,, +                org.elasticsearch.common.xcontent.NamedXContentRegistry.UnknownNamedObjectException::new, 148, Version.V_5_2_0_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchParseException.java, +/**, + * Unchecked exception that is translated into a {@code 400 BAD REQUEST} error when it bubbles out over HTTP., + */, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        final ClusterState state = clusterService.state();, +        final ClusterStateObserver observer = new ClusterStateObserver(state, clusterService, null, logger, threadPool.getThreadContext());, +                final ClusterHealthResponse response = getResponse(request, observer.setAndGetObservedState(), concreteWaitFor, true);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/TransportGetTaskAction.java, +import org.elasticsearch.common.xcontent.NamedXContentRegistry;, +    private final NamedXContentRegistry xContentRegistry;, +            IndexNameExpressionResolver indexNameExpressionResolver, ClusterService clusterService, Client client,, +            NamedXContentRegistry xContentRegistry) {, +        this.xContentRegistry = xContentRegistry;, +        try (XContentParser parser = XContentHelper.createParser(xContentRegistry, response.getSourceAsBytesRef())) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java, +import org.elasticsearch.common.xcontent.NamedXContentRegistry;, +        // EMPTY is safe here because we never call namedObject, +        try (XContentParser parser = XContentHelper.createParser(NamedXContentRegistry.EMPTY, source)) {, +            source(XContentHelper.convertToMap(source, false).v2());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java, +import org.elasticsearch.common.xcontent.NamedXContentRegistry;, +        return source(XContentHelper.convertToMap(XContentFactory.xContent(templateSource), templateSource, true));, +        return source(new BytesArray(source, offset, length));, +        return source(XContentHelper.convertToMap(source, true).v2());, +        // EMPTY is safe here because we never call namedObject, +        try (XContentParser parser = XContentHelper.createParser(NamedXContentRegistry.EMPTY, source)) {, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, Version.V_5_0_2),]