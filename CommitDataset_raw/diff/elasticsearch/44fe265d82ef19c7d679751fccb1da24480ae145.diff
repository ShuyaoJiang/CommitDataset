[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ccr/AutoFollowStats.java, +import org.elasticsearch.common.collect.Tuple;, +    static final ParseField TIMESTAMP = new ParseField("timestamp");, +                ((List<Map.Entry<String, Tuple<Long, ElasticsearchException>>>) args[3]), +    static final ConstructingObjectParser<Map.Entry<String, Tuple<Long, ElasticsearchException>>, Void> AUTO_FOLLOW_EXCEPTIONS_PARSER =, +            args -> new AbstractMap.SimpleEntry<>((String) args[0], Tuple.tuple((Long) args[1], (ElasticsearchException) args[2])));, +        AUTO_FOLLOW_EXCEPTIONS_PARSER.declareLong(ConstructingObjectParser.constructorArg(), TIMESTAMP);, +    private final NavigableMap<String, Tuple<Long, ElasticsearchException>> recentAutoFollowErrors;, +                    NavigableMap<String, Tuple<Long, ElasticsearchException>> recentAutoFollowErrors,, +    public NavigableMap<String, Tuple<Long, ElasticsearchException>> getRecentAutoFollowErrors() {, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ccr/AutoFollowStats.java, +import org.elasticsearch.common.collect.Tuple;, +    static final ParseField TIMESTAMP = new ParseField("timestamp");, +                ((List<Map.Entry<String, Tuple<Long, ElasticsearchException>>>) args[3]), +    static final ConstructingObjectParser<Map.Entry<String, Tuple<Long, ElasticsearchException>>, Void> AUTO_FOLLOW_EXCEPTIONS_PARSER =, +            args -> new AbstractMap.SimpleEntry<>((String) args[0], Tuple.tuple((Long) args[1], (ElasticsearchException) args[2])));, +        AUTO_FOLLOW_EXCEPTIONS_PARSER.declareLong(ConstructingObjectParser.constructorArg(), TIMESTAMP);, +    private final NavigableMap<String, Tuple<Long, ElasticsearchException>> recentAutoFollowErrors;, +                    NavigableMap<String, Tuple<Long, ElasticsearchException>> recentAutoFollowErrors,, +    public NavigableMap<String, Tuple<Long, ElasticsearchException>> getRecentAutoFollowErrors() {, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/ccr/CcrStatsResponseTests.java, +            for (final Map.Entry<String, Tuple<Long, ElasticsearchException>> entry :, +                newAutoFollowStats.getRecentAutoFollowErrors().entrySet()) {, +                final Tuple<Long, ElasticsearchException> expected =, +                    expectedAutoFollowStats.getRecentAutoFollowErrors().get(entry.getKey());, +                assertThat(entry.getValue().v2().getMessage(), containsString(expected.v2().getMessage()));, +                assertThat(entry.getValue().v1(), equalTo(expected.v1()));, +                assertNotNull(entry.getValue().v2().getCause());, +                    entry.getValue().v2().getCause(),, +                assertThat(entry.getValue().v2().getCause().getMessage(), containsString(expected.v2().getCause().getMessage()));, +                for (Map.Entry<String, Tuple<Long, ElasticsearchException>> entry :, +                    autoFollowStats.getRecentAutoFollowErrors().entrySet()) {, +                        builder.field(AutoFollowStats.TIMESTAMP.getPreferredName(), entry.getValue().v1());, +                            ElasticsearchException.generateThrowableXContent(builder, ToXContent.EMPTY_PARAMS, entry.getValue().v2());, +        final NavigableMap<String, Tuple<Long, ElasticsearchException>> readExceptions = new TreeMap<>();, +            readExceptions.put("" + i, Tuple.tuple(randomNonNegativeLong(),, +                new ElasticsearchException(new IllegalStateException("index [" + i + "]"))));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ccr/AutoFollowStats.java, +import org.elasticsearch.common.collect.Tuple;, +    static final ParseField TIMESTAMP = new ParseField("timestamp");, +                ((List<Map.Entry<String, Tuple<Long, ElasticsearchException>>>) args[3]), +    static final ConstructingObjectParser<Map.Entry<String, Tuple<Long, ElasticsearchException>>, Void> AUTO_FOLLOW_EXCEPTIONS_PARSER =, +            args -> new AbstractMap.SimpleEntry<>((String) args[0], Tuple.tuple((Long) args[1], (ElasticsearchException) args[2])));, +        AUTO_FOLLOW_EXCEPTIONS_PARSER.declareLong(ConstructingObjectParser.constructorArg(), TIMESTAMP);, +    private final NavigableMap<String, Tuple<Long, ElasticsearchException>> recentAutoFollowErrors;, +                    NavigableMap<String, Tuple<Long, ElasticsearchException>> recentAutoFollowErrors,, +    public NavigableMap<String, Tuple<Long, ElasticsearchException>> getRecentAutoFollowErrors() {, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/ccr/CcrStatsResponseTests.java, +            for (final Map.Entry<String, Tuple<Long, ElasticsearchException>> entry :, +                newAutoFollowStats.getRecentAutoFollowErrors().entrySet()) {, +                final Tuple<Long, ElasticsearchException> expected =, +                    expectedAutoFollowStats.getRecentAutoFollowErrors().get(entry.getKey());, +                assertThat(entry.getValue().v2().getMessage(), containsString(expected.v2().getMessage()));, +                assertThat(entry.getValue().v1(), equalTo(expected.v1()));, +                assertNotNull(entry.getValue().v2().getCause());, +                    entry.getValue().v2().getCause(),, +                assertThat(entry.getValue().v2().getCause().getMessage(), containsString(expected.v2().getCause().getMessage()));, +                for (Map.Entry<String, Tuple<Long, ElasticsearchException>> entry :, +                    autoFollowStats.getRecentAutoFollowErrors().entrySet()) {, +                        builder.field(AutoFollowStats.TIMESTAMP.getPreferredName(), entry.getValue().v1());, +                            ElasticsearchException.generateThrowableXContent(builder, ToXContent.EMPTY_PARAMS, entry.getValue().v2());, +        final NavigableMap<String, Tuple<Long, ElasticsearchException>> readExceptions = new TreeMap<>();, +            readExceptions.put("" + i, Tuple.tuple(randomNonNegativeLong(),, +                new ElasticsearchException(new IllegalStateException("index [" + i + "]"))));, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/Ccr.java, +            new AutoFollowCoordinator(settings, client, clusterService, ccrLicenseChecker,, +                threadPool::relativeTimeInMillis, threadPool::absoluteTimeInMillis), +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ccr/AutoFollowStats.java, +import org.elasticsearch.common.collect.Tuple;, +    static final ParseField TIMESTAMP = new ParseField("timestamp");, +                ((List<Map.Entry<String, Tuple<Long, ElasticsearchException>>>) args[3]), +    static final ConstructingObjectParser<Map.Entry<String, Tuple<Long, ElasticsearchException>>, Void> AUTO_FOLLOW_EXCEPTIONS_PARSER =, +            args -> new AbstractMap.SimpleEntry<>((String) args[0], Tuple.tuple((Long) args[1], (ElasticsearchException) args[2])));, +        AUTO_FOLLOW_EXCEPTIONS_PARSER.declareLong(ConstructingObjectParser.constructorArg(), TIMESTAMP);, +    private final NavigableMap<String, Tuple<Long, ElasticsearchException>> recentAutoFollowErrors;, +                    NavigableMap<String, Tuple<Long, ElasticsearchException>> recentAutoFollowErrors,, +    public NavigableMap<String, Tuple<Long, ElasticsearchException>> getRecentAutoFollowErrors() {, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/ccr/CcrStatsResponseTests.java, +            for (final Map.Entry<String, Tuple<Long, ElasticsearchException>> entry :, +                newAutoFollowStats.getRecentAutoFollowErrors().entrySet()) {, +                final Tuple<Long, ElasticsearchException> expected =, +                    expectedAutoFollowStats.getRecentAutoFollowErrors().get(entry.getKey());, +                assertThat(entry.getValue().v2().getMessage(), containsString(expected.v2().getMessage()));, +                assertThat(entry.getValue().v1(), equalTo(expected.v1()));, +                assertNotNull(entry.getValue().v2().getCause());, +                    entry.getValue().v2().getCause(),, +                assertThat(entry.getValue().v2().getCause().getMessage(), containsString(expected.v2().getCause().getMessage()));, +                for (Map.Entry<String, Tuple<Long, ElasticsearchException>> entry :, +                    autoFollowStats.getRecentAutoFollowErrors().entrySet()) {, +                        builder.field(AutoFollowStats.TIMESTAMP.getPreferredName(), entry.getValue().v1());, +                            ElasticsearchException.generateThrowableXContent(builder, ToXContent.EMPTY_PARAMS, entry.getValue().v2());, +        final NavigableMap<String, Tuple<Long, ElasticsearchException>> readExceptions = new TreeMap<>();, +            readExceptions.put("" + i, Tuple.tuple(randomNonNegativeLong(),, +                new ElasticsearchException(new IllegalStateException("index [" + i + "]"))));, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/Ccr.java, +            new AutoFollowCoordinator(settings, client, clusterService, ccrLicenseChecker,, +                threadPool::relativeTimeInMillis, threadPool::absoluteTimeInMillis), +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinator.java, +    private final LongSupplier absoluteMillisTimeProvider;, +    private final LinkedHashMap<String, Tuple<Long, ElasticsearchException>> recentAutoFollowErrors;]