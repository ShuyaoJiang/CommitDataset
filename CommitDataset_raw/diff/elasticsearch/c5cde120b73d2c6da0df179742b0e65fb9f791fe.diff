[+++ b/elasticsearch/x-pack/security/src/test/java/org/elasticsearch/OldSecurityIndexBackwardsCompatibilityIT.java, +import org.elasticsearch.test.InternalTestCluster;, +import java.io.IOException;, +    @Override, +    protected int maxNumberOfNodes() {, +        try {, +            return SecurityIntegTestCase.defaultMaxNumberOfNodes() + loadIndexesList("x-pack", getBwcIndicesPath()).size();, +        } catch (IOException e) {, +            throw new RuntimeException("couldn't enumerate bwc indices", e);, +        }, +    }, +, +++ b/elasticsearch/x-pack/security/src/test/java/org/elasticsearch/OldSecurityIndexBackwardsCompatibilityIT.java, +import org.elasticsearch.test.InternalTestCluster;, +import java.io.IOException;, +    @Override, +    protected int maxNumberOfNodes() {, +        try {, +            return SecurityIntegTestCase.defaultMaxNumberOfNodes() + loadIndexesList("x-pack", getBwcIndicesPath()).size();, +        } catch (IOException e) {, +            throw new RuntimeException("couldn't enumerate bwc indices", e);, +        }, +    }, +, +++ b/elasticsearch/x-pack/security/src/test/java/org/elasticsearch/test/SecurityIntegTestCase.java, +    protected static int defaultMaxNumberOfNodes() {, +            int dataNodes = 0;, +            if (clusterScope.numDataNodes() < 0) {, +                if (clusterScope.maxNumDataNodes() < 0) {, +                    dataNodes = InternalTestCluster.DEFAULT_MAX_NUM_DATA_NODES;, +                } else {, +                    dataNodes = clusterScope.maxNumDataNodes();, +                }, +            } else {, +                dataNodes = clusterScope.numDataNodes();, +            }, +            return masterNodes + dataNodes + clientNodes;, +            SECURITY_DEFAULT_SETTINGS = new SecuritySettingsSource(defaultMaxNumberOfNodes(), randomBoolean(), createTempDir(), Scope.SUITE);, +    protected int maxNumberOfNodes() {, +        return defaultMaxNumberOfNodes();, +    }, +, +++ b/elasticsearch/x-pack/security/src/test/java/org/elasticsearch/OldSecurityIndexBackwardsCompatibilityIT.java, +import org.elasticsearch.test.InternalTestCluster;, +import java.io.IOException;, +    @Override, +    protected int maxNumberOfNodes() {, +        try {, +            return SecurityIntegTestCase.defaultMaxNumberOfNodes() + loadIndexesList("x-pack", getBwcIndicesPath()).size();, +        } catch (IOException e) {, +            throw new RuntimeException("couldn't enumerate bwc indices", e);, +        }, +    }, +, +++ b/elasticsearch/x-pack/security/src/test/java/org/elasticsearch/test/SecurityIntegTestCase.java, +    protected static int defaultMaxNumberOfNodes() {, +            int dataNodes = 0;, +            if (clusterScope.numDataNodes() < 0) {, +                if (clusterScope.maxNumDataNodes() < 0) {, +                    dataNodes = InternalTestCluster.DEFAULT_MAX_NUM_DATA_NODES;, +                } else {, +                    dataNodes = clusterScope.maxNumDataNodes();, +                }, +            } else {, +                dataNodes = clusterScope.numDataNodes();, +            }, +            return masterNodes + dataNodes + clientNodes;, +            SECURITY_DEFAULT_SETTINGS = new SecuritySettingsSource(defaultMaxNumberOfNodes(), randomBoolean(), createTempDir(), Scope.SUITE);, +    protected int maxNumberOfNodes() {, +        return defaultMaxNumberOfNodes();, +    }, +, +++ b/elasticsearch/x-pack/src/test/resources/indices/bwc/x-pack-2.4.0.zip]