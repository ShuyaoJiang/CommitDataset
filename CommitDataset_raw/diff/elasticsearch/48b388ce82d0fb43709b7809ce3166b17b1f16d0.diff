[+++ b/modules/lang-painless/src/test/resources/rest-api-spec/test/painless/50_script_doc_values.yml, +    - match: { hits.hits.0.fields.field.0: '2017-01-01T12:11:12.000Z' }, +    - match: { hits.hits.0.fields.field.0: '2017-01-01T12:11:12.000Z' }, +++ b/modules/lang-painless/src/test/resources/rest-api-spec/test/painless/50_script_doc_values.yml, +    - match: { hits.hits.0.fields.field.0: '2017-01-01T12:11:12.000Z' }, +    - match: { hits.hits.0.fields.field.0: '2017-01-01T12:11:12.000Z' }, +++ b/server/src/main/java/org/elasticsearch/common/time/DateFormatters.java, +import static java.time.temporal.ChronoField.NANO_OF_SECOND;, +        .appendZoneOrOffsetId(), +        .appendOffset("+HHmm", "Z"), +    private static final DateTimeFormatter STRICT_DATE_OPTIONAL_TIME_FORMATTER_WITH_NANOS_1 = new DateTimeFormatterBuilder(), +        .append(STRICT_YEAR_MONTH_DAY_FORMATTER), +        .optionalStart(), +        .appendLiteral('T'), +        .append(STRICT_HOUR_MINUTE_SECOND_FORMATTER), +        .optionalStart(), +        .appendFraction(NANO_OF_SECOND, 3, 9, true), +        .optionalEnd(), +        .optionalStart(), +        .appendZoneOrOffsetId(), +        .optionalEnd(), +        .optionalEnd(), +        .toFormatter(Locale.ROOT);, +, +    private static final DateTimeFormatter STRICT_DATE_OPTIONAL_TIME_FORMATTER_WITH_NANOS_2 = new DateTimeFormatterBuilder(), +        .append(STRICT_YEAR_MONTH_DAY_FORMATTER), +        .optionalStart(), +        .appendLiteral('T'), +        .append(STRICT_HOUR_MINUTE_SECOND_FORMATTER), +        .optionalStart(), +        .appendFraction(NANO_OF_SECOND, 3, 9, true), +        .optionalEnd(), +        .optionalStart(), +        .appendOffset("+HHmm", "Z"), +        .optionalEnd(), +        .optionalEnd(), +        .toFormatter(Locale.ROOT);, +, +    /**, +     * Returns a generic ISO datetime parser where the date is mandatory and the time is optional with nanosecond resolution., +     */, +    private static final CompoundDateTimeFormatter STRICT_DATE_OPTIONAL_TIME_NANOS =, +        new CompoundDateTimeFormatter(STRICT_DATE_OPTIONAL_TIME_FORMATTER_WITH_NANOS_1, STRICT_DATE_OPTIONAL_TIME_FORMATTER_WITH_NANOS_2);, +, +        } else if ("strictDateOptionalTimeNanos".equals(input) || "strict_date_optional_time_nanos".equals(input)) {, +            return STRICT_DATE_OPTIONAL_TIME_NANOS;, +++ b/modules/lang-painless/src/test/resources/rest-api-spec/test/painless/50_script_doc_values.yml, +    - match: { hits.hits.0.fields.field.0: '2017-01-01T12:11:12.000Z' }, +    - match: { hits.hits.0.fields.field.0: '2017-01-01T12:11:12.000Z' }, +++ b/server/src/main/java/org/elasticsearch/common/time/DateFormatters.java, +import static java.time.temporal.ChronoField.NANO_OF_SECOND;, +        .appendZoneOrOffsetId(), +        .appendOffset("+HHmm", "Z"), +    private static final DateTimeFormatter STRICT_DATE_OPTIONAL_TIME_FORMATTER_WITH_NANOS_1 = new DateTimeFormatterBuilder(), +        .append(STRICT_YEAR_MONTH_DAY_FORMATTER), +        .optionalStart(), +        .appendLiteral('T'), +        .append(STRICT_HOUR_MINUTE_SECOND_FORMATTER), +        .optionalStart(), +        .appendFraction(NANO_OF_SECOND, 3, 9, true), +        .optionalEnd(), +        .optionalStart(), +        .appendZoneOrOffsetId(), +        .optionalEnd(), +        .optionalEnd(), +        .toFormatter(Locale.ROOT);, +, +    private static final DateTimeFormatter STRICT_DATE_OPTIONAL_TIME_FORMATTER_WITH_NANOS_2 = new DateTimeFormatterBuilder(), +        .append(STRICT_YEAR_MONTH_DAY_FORMATTER), +        .optionalStart(), +        .appendLiteral('T'), +        .append(STRICT_HOUR_MINUTE_SECOND_FORMATTER), +        .optionalStart(), +        .appendFraction(NANO_OF_SECOND, 3, 9, true), +        .optionalEnd(), +        .optionalStart(), +        .appendOffset("+HHmm", "Z"), +        .optionalEnd(), +        .optionalEnd(), +        .toFormatter(Locale.ROOT);, +, +    /**, +     * Returns a generic ISO datetime parser where the date is mandatory and the time is optional with nanosecond resolution., +     */, +    private static final CompoundDateTimeFormatter STRICT_DATE_OPTIONAL_TIME_NANOS =, +        new CompoundDateTimeFormatter(STRICT_DATE_OPTIONAL_TIME_FORMATTER_WITH_NANOS_1, STRICT_DATE_OPTIONAL_TIME_FORMATTER_WITH_NANOS_2);, +, +        } else if ("strictDateOptionalTimeNanos".equals(input) || "strict_date_optional_time_nanos".equals(input)) {, +            return STRICT_DATE_OPTIONAL_TIME_NANOS;, +++ b/server/src/main/java/org/elasticsearch/common/xcontent/XContentElasticsearchExtension.java, +import org.elasticsearch.common.time.CompoundDateTimeFormatter;, +import org.elasticsearch.common.time.DateFormatters;, +import java.time.DayOfWeek;, +import java.time.Duration;, +import java.time.LocalDate;, +import java.time.LocalDateTime;, +import java.time.LocalTime;, +import java.time.Month;, +import java.time.MonthDay;, +import java.time.OffsetDateTime;]