[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.UpdateFilterRequest;, +, +    static Request updateFilter(UpdateFilterRequest updateFilterRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("filters"), +            .addPathPart(updateFilterRequest.getFilterId()), +            .addPathPartAsIs("_update"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(updateFilterRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.UpdateFilterRequest;, +, +    static Request updateFilter(UpdateFilterRequest updateFilterRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("filters"), +            .addPathPart(updateFilterRequest.getFilterId()), +            .addPathPartAsIs("_update"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(updateFilterRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.UpdateFilterRequest;, +, +    /**, +     * Updates a Machine Learning Filter, +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-filter.html">, +     *     ML Update Filter documentation</a>, +     *, +     * @param request The request, +     * @param options Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return PutFilterResponse with the updated {@link org.elasticsearch.client.ml.job.config.MlFilter} object, +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public PutFilterResponse updateFilter(UpdateFilterRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +            MLRequestConverters::updateFilter,, +            options,, +            PutFilterResponse::fromXContent,, +            Collections.emptySet());, +    }, +, +    /**, +     * Updates a Machine Learning Filter asynchronously and notifies listener on completion, +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-filter.html">, +     *     ML Update Filter documentation</a>, +     *, +     * @param request  The request, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified upon request completion, +     */, +    public void updateFilterAsync(UpdateFilterRequest request, RequestOptions options, ActionListener<PutFilterResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +            MLRequestConverters::updateFilter,, +            options,, +            PutFilterResponse::fromXContent,, +            listener,, +            Collections.emptySet());, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.UpdateFilterRequest;, +, +    static Request updateFilter(UpdateFilterRequest updateFilterRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("filters"), +            .addPathPart(updateFilterRequest.getFilterId()), +            .addPathPartAsIs("_update"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(updateFilterRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.UpdateFilterRequest;, +, +    /**, +     * Updates a Machine Learning Filter, +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-filter.html">, +     *     ML Update Filter documentation</a>, +     *, +     * @param request The request, +     * @param options Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return PutFilterResponse with the updated {@link org.elasticsearch.client.ml.job.config.MlFilter} object]