[+++ b/plugin/src/main/java/org/elasticsearch/xpack/monitoring/exporter/ClusterAlertsUtil.java, +import org.elasticsearch.common.settings.SettingsException;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.List;, +import java.util.Set;, +import java.util.stream.Collectors;, +, +import static org.elasticsearch.xpack.monitoring.exporter.Exporter.CLUSTER_ALERTS_BLACKLIST_SETTING;, +    /**, +     * Get any blacklisted cluster alerts by their ID., +     *, +     * @param config The {@link Exporter}'s configuration, which is used for the {@link SettingsException}., +     * @return Never {@code null}. Can be empty., +     * @throws SettingsException if an unknown cluster alert ID exists in the blacklist., +     */, +    public static List<String> getClusterAlertsBlacklist(final Exporter.Config config) {, +        final List<String> blacklist = config.settings().getAsList(CLUSTER_ALERTS_BLACKLIST_SETTING, Collections.emptyList());, +, +        // validate the blacklist only contains recognized IDs, +        if (blacklist.isEmpty() == false) {, +            final List<String> watchIds = Arrays.asList(ClusterAlertsUtil.WATCH_IDS);, +            final Set<String> unknownIds = blacklist.stream().filter(id -> watchIds.contains(id) == false).collect(Collectors.toSet());, +, +            if (unknownIds.isEmpty() == false) {, +                throw new SettingsException(, +                    "[" + Exporter.settingFQN(config, CLUSTER_ALERTS_BLACKLIST_SETTING) + "] contains unrecognized Cluster Alert IDs [" +, +                    String.join(", ", unknownIds) + "]", +                );, +            }, +        }, +, +        return blacklist;, +    }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/monitoring/exporter/ClusterAlertsUtil.java, +import org.elasticsearch.common.settings.SettingsException;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.List;, +import java.util.Set;, +import java.util.stream.Collectors;, +, +import static org.elasticsearch.xpack.monitoring.exporter.Exporter.CLUSTER_ALERTS_BLACKLIST_SETTING;, +    /**, +     * Get any blacklisted cluster alerts by their ID., +     *, +     * @param config The {@link Exporter}'s configuration, which is used for the {@link SettingsException}., +     * @return Never {@code null}. Can be empty., +     * @throws SettingsException if an unknown cluster alert ID exists in the blacklist., +     */, +    public static List<String> getClusterAlertsBlacklist(final Exporter.Config config) {, +        final List<String> blacklist = config.settings().getAsList(CLUSTER_ALERTS_BLACKLIST_SETTING, Collections.emptyList());, +, +        // validate the blacklist only contains recognized IDs, +        if (blacklist.isEmpty() == false) {, +            final List<String> watchIds = Arrays.asList(ClusterAlertsUtil.WATCH_IDS);, +            final Set<String> unknownIds = blacklist.stream().filter(id -> watchIds.contains(id) == false).collect(Collectors.toSet());, +, +            if (unknownIds.isEmpty() == false) {, +                throw new SettingsException(, +                    "[" + Exporter.settingFQN(config, CLUSTER_ALERTS_BLACKLIST_SETTING) + "] contains unrecognized Cluster Alert IDs [" +, +                    String.join(", ", unknownIds) + "]", +                );, +            }, +        }, +, +        return blacklist;, +    }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/monitoring/exporter/Exporter.java, +     * Every {@code Exporter} allows users to explicitly disable specific cluster alerts., +     * <p>, +     * When cluster alerts management is enabled, this should delete anything blacklisted here in addition to not creating it., +     */, +    public static final String CLUSTER_ALERTS_BLACKLIST_SETTING = "cluster_alerts.management.blacklist";, +    /**, +    public static String settingFQN(final Config config, final String setting) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/monitoring/exporter/ClusterAlertsUtil.java, +import org.elasticsearch.common.settings.SettingsException;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.List;, +import java.util.Set;, +import java.util.stream.Collectors;, +, +import static org.elasticsearch.xpack.monitoring.exporter.Exporter.CLUSTER_ALERTS_BLACKLIST_SETTING;, +    /**, +     * Get any blacklisted cluster alerts by their ID., +     *, +     * @param config The {@link Exporter}'s configuration, which is used for the {@link SettingsException}., +     * @return Never {@code null}. Can be empty., +     * @throws SettingsException if an unknown cluster alert ID exists in the blacklist., +     */, +    public static List<String> getClusterAlertsBlacklist(final Exporter.Config config) {, +        final List<String> blacklist = config.settings().getAsList(CLUSTER_ALERTS_BLACKLIST_SETTING, Collections.emptyList());, +, +        // validate the blacklist only contains recognized IDs, +        if (blacklist.isEmpty() == false) {, +            final List<String> watchIds = Arrays.asList(ClusterAlertsUtil.WATCH_IDS);]