[+++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ForEachProcessor.java, +        List<?> values = ingestDocument.getFieldValue(field, List.class, ignoreMissing);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ForEachProcessor.java, +        List<?> values = ingestDocument.getFieldValue(field, List.class, ignoreMissing);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/RemoveProcessor.java, +                @SuppressWarnings("unchecked"), +                List<String> stringList = (List<String>) field;, +                fields.addAll(stringList);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ForEachProcessor.java, +        List<?> values = ingestDocument.getFieldValue(field, List.class, ignoreMissing);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/RemoveProcessor.java, +                @SuppressWarnings("unchecked"), +                List<String> stringList = (List<String>) field;, +                fields.addAll(stringList);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/SortProcessor.java, +        @Override, +        List<? extends Comparable<Object>> list = document.getFieldValue(field, List.class);, +        List<? extends Comparable<Object>> copy = new ArrayList<>(list);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ForEachProcessor.java, +        List<?> values = ingestDocument.getFieldValue(field, List.class, ignoreMissing);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/RemoveProcessor.java, +                @SuppressWarnings("unchecked"), +                List<String> stringList = (List<String>) field;, +                fields.addAll(stringList);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/SortProcessor.java, +        @Override, +        List<? extends Comparable<Object>> list = document.getFieldValue(field, List.class);, +        List<? extends Comparable<Object>> copy = new ArrayList<>(list);, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ForEachProcessorTests.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Locale;, +import java.util.Map;, +, +        @SuppressWarnings("unchecked"), +        List<String> result = ingestDocument.getFieldValue("values", List.class);, +        List<?> result = ingestDocument.getFieldValue("values", List.class);, +        List<?> errors = ingestDocument.getFieldValue("errors", List.class);, +        List<?> result = ingestDocument.getFieldValue("values", List.class);, +        List<?> result = ingestDocument.getFieldValue("values1.0.values2", List.class);, +        List<?> result2 = ingestDocument.getFieldValue("values1.1.values2", List.class);, +        assertThat(result2.get(0), equalTo("GHI"));, +        assertThat(result2.get(1), equalTo("JKL"));, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ForEachProcessor.java, +        List<?> values = ingestDocument.getFieldValue(field, List.class, ignoreMissing);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/RemoveProcessor.java, +                @SuppressWarnings("unchecked"), +                List<String> stringList = (List<String>) field;, +                fields.addAll(stringList);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/SortProcessor.java, +        @Override, +        List<? extends Comparable<Object>> list = document.getFieldValue(field, List.class);, +        List<? extends Comparable<Object>> copy = new ArrayList<>(list);, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ForEachProcessorTests.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Locale;, +import java.util.Map;, +, +        @SuppressWarnings("unchecked"), +        List<String> result = ingestDocument.getFieldValue("values", List.class);, +        List<?> result = ingestDocument.getFieldValue("values", List.class);, +        List<?> errors = ingestDocument.getFieldValue("errors", List.class);, +        List<?> result = ingestDocument.getFieldValue("values", List.class);, +        List<?> result = ingestDocument.getFieldValue("values1.0.values2", List.class);, +        List<?> result2 = ingestDocument.getFieldValue("values1.1.values2", List.class);, +        assertThat(result2.get(0), equalTo("GHI"));, +        assertThat(result2.get(1), equalTo("JKL"));, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +                Map<String, Object> ctx = (Map<String, Object>) script.get("ctx");, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ForEachProcessor.java, +        List<?> values = ingestDocument.getFieldValue(field, List.class, ignoreMissing);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/RemoveProcessor.java, +                @SuppressWarnings("unchecked"), +                List<String> stringList = (List<String>) field;, +                fields.addAll(stringList);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/SortProcessor.java, +        @Override, +        List<? extends Comparable<Object>> list = document.getFieldValue(field, List.class);, +        List<? extends Comparable<Object>> copy = new ArrayList<>(list);, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ForEachProcessorTests.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Locale;, +import java.util.Map;, +, +        @SuppressWarnings("unchecked"), +        List<String> result = ingestDocument.getFieldValue("values", List.class);, +        List<?> result = ingestDocument.getFieldValue("values", List.class);, +        List<?> errors = ingestDocument.getFieldValue("errors", List.class);, +        List<?> result = ingestDocument.getFieldValue("values", List.class);]