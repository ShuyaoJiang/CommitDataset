[+++ b/src/main/java/org/elasticsearch/index/mapper/Uid.java, +    public static BytesRef[] createUidsForTypesAndId(Collection<String> types, Object id) {, +        return createUidsForTypesAndIds(types, Collections.singletonList(id));, +    public static BytesRef[] createUidsForTypesAndIds(Collection<String> types, Collection<?> ids) {, +            for (Object id : ids) {, +                uids[index++] = Uid.createUidAsBytes(typeBytes.get(), BytesRefs.toBytesRef(id, idBytes));, +++ b/src/main/java/org/elasticsearch/index/mapper/Uid.java, +    public static BytesRef[] createUidsForTypesAndId(Collection<String> types, Object id) {, +        return createUidsForTypesAndIds(types, Collections.singletonList(id));, +    public static BytesRef[] createUidsForTypesAndIds(Collection<String> types, Collection<?> ids) {, +            for (Object id : ids) {, +                uids[index++] = Uid.createUidAsBytes(typeBytes.get(), BytesRefs.toBytesRef(id, idBytes));, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java, +        final BytesRef[] uids = Uid.createUidsForTypesAndId(context.queryTypes(), value);, +        return new TermsQuery(UidFieldMapper.NAME, Uid.createUidsForTypesAndIds(context.queryTypes(), values));, +++ b/src/main/java/org/elasticsearch/index/mapper/Uid.java, +    public static BytesRef[] createUidsForTypesAndId(Collection<String> types, Object id) {, +        return createUidsForTypesAndIds(types, Collections.singletonList(id));, +    public static BytesRef[] createUidsForTypesAndIds(Collection<String> types, Collection<?> ids) {, +            for (Object id : ids) {, +                uids[index++] = Uid.createUidAsBytes(typeBytes.get(), BytesRefs.toBytesRef(id, idBytes));, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java, +        final BytesRef[] uids = Uid.createUidsForTypesAndId(context.queryTypes(), value);, +        return new TermsQuery(UidFieldMapper.NAME, Uid.createUidsForTypesAndIds(context.queryTypes(), values));, +++ b/src/main/java/org/elasticsearch/index/query/IdsQueryParser.java, +        TermsQuery query = new TermsQuery(UidFieldMapper.NAME, Uid.createUidsForTypesAndIds(types, ids));]