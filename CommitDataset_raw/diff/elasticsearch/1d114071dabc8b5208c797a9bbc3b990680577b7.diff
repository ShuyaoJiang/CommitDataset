[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.analyze.AnalyzeRequest;, +import org.elasticsearch.action.admin.indices.analyze.AnalyzeResponse;, +, +    /**, +     * Calls the analyze API, +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html">Analyze API on elastic.co</a>, +     *, +     * @param request   the request, +     * @param options   the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     */, +    public AnalyzeResponse analyze(AnalyzeRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::analyze, options,, +            AnalyzeResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously calls the analyze API, +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html">Analyze API on elastic.co</a>, +     *, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void analyzeAsync(AnalyzeRequest request, RequestOptions options,, +                             ActionListener<AnalyzeResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::analyze, options,, +            AnalyzeResponse::fromXContent, listener, emptySet());, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.analyze.AnalyzeRequest;, +import org.elasticsearch.action.admin.indices.analyze.AnalyzeResponse;, +, +    /**, +     * Calls the analyze API, +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html">Analyze API on elastic.co</a>, +     *, +     * @param request   the request, +     * @param options   the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     */, +    public AnalyzeResponse analyze(AnalyzeRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::analyze, options,, +            AnalyzeResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously calls the analyze API, +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html">Analyze API on elastic.co</a>, +     *, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void analyzeAsync(AnalyzeRequest request, RequestOptions options,, +                             ActionListener<AnalyzeResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::analyze, options,, +            AnalyzeResponse::fromXContent, listener, emptySet());, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.indices.analyze.AnalyzeRequest;, +    static Request analyze(AnalyzeRequest request) throws IOException {, +        EndpointBuilder builder = new EndpointBuilder();, +        String index = request.index();, +        if (index != null) {, +            builder.addPathPart(index);, +        }, +        builder.addPathPartAsIs("_analyze");, +        Request req = new Request(HttpGet.METHOD_NAME, builder.build());, +        req.setEntity(createEntity(request, REQUEST_BODY_CONTENT_TYPE));, +        return req;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.analyze.AnalyzeRequest;, +import org.elasticsearch.action.admin.indices.analyze.AnalyzeResponse;, +, +    /**, +     * Calls the analyze API, +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html">Analyze API on elastic.co</a>, +     *, +     * @param request   the request, +     * @param options   the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     */, +    public AnalyzeResponse analyze(AnalyzeRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::analyze, options,, +            AnalyzeResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously calls the analyze API, +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html">Analyze API on elastic.co</a>, +     *, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized]