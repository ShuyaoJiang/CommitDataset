[+++ b/src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsTests.java, +import org.elasticsearch.index.query.functionscore.ScoreFunctionBuilders;, +import static org.elasticsearch.index.query.QueryBuilders.functionScoreQuery;, +    @Test, +    public void script_Score() {, +        SearchResponse response = client().prepareSearch("idx").setTypes("type"), +                .setQuery(functionScoreQuery(matchAllQuery()).add(ScoreFunctionBuilders.scriptFunction("doc['" + SINGLE_VALUED_FIELD_NAME + "'].value"))), +                .addAggregation(terms("terms"), +                        .script("ceil(_doc.score/3)"), +                ).execute().actionGet();, +, +        assertSearchResponse(response);, +, +        Terms terms = response.getAggregations().get("terms");, +        assertThat(terms, notNullValue());, +        assertThat(terms.getName(), equalTo("terms"));, +        assertThat(terms.getBuckets().size(), equalTo(3));, +, +        for (int i = 0; i < 3; i++) {, +            Terms.Bucket bucket = terms.getBucketByKey("" + (double) i);, +            assertThat(bucket, notNullValue());, +            assertThat(key(bucket), equalTo("" + (double)i));, +            assertThat(bucket.getKeyAsNumber().intValue(), equalTo(i));, +            assertThat(bucket.getDocCount(), equalTo(i == 1 ? 3L : 1L));, +        }, +    }]