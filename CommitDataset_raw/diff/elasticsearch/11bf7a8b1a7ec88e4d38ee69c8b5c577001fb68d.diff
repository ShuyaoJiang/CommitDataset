[+++ b/pom.xml, +        <lucene.version>4.2.0</lucene.version>, +++ b/pom.xml, +        <lucene.version>4.2.0</lucene.version>, +++ b/src/main/java/org/apache/lucene/queries/ExtendedCommonTermsQuery.java, +public class ExtendedCommonTermsQuery extends CommonTermsQuery {, +    protected int calcLowFreqMinimumNumberShouldMatch(int numOptional) {, +++ b/pom.xml, +        <lucene.version>4.2.0</lucene.version>, +++ b/src/main/java/org/apache/lucene/queries/ExtendedCommonTermsQuery.java, +public class ExtendedCommonTermsQuery extends CommonTermsQuery {, +    protected int calcLowFreqMinimumNumberShouldMatch(int numOptional) {, +++ /dev/null, +++ b/pom.xml, +        <lucene.version>4.2.0</lucene.version>, +++ b/src/main/java/org/apache/lucene/queries/ExtendedCommonTermsQuery.java, +public class ExtendedCommonTermsQuery extends CommonTermsQuery {, +    protected int calcLowFreqMinimumNumberShouldMatch(int numOptional) {, +++ /dev/null, +++ b/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +++ b/pom.xml, +        <lucene.version>4.2.0</lucene.version>, +++ b/src/main/java/org/apache/lucene/queries/ExtendedCommonTermsQuery.java, +public class ExtendedCommonTermsQuery extends CommonTermsQuery {, +    protected int calcLowFreqMinimumNumberShouldMatch(int numOptional) {, +++ /dev/null, +++ b/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +++ /dev/null, +++ b/pom.xml, +        <lucene.version>4.2.0</lucene.version>, +++ b/src/main/java/org/apache/lucene/queries/ExtendedCommonTermsQuery.java, +public class ExtendedCommonTermsQuery extends CommonTermsQuery {, +    protected int calcLowFreqMinimumNumberShouldMatch(int numOptional) {, +++ /dev/null, +++ b/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final Version VERSION = Version.LUCENE_42;, +        if ("4.2".equals(version)) {, +            return Version.LUCENE_42;, +        }, +++ b/pom.xml, +        <lucene.version>4.2.0</lucene.version>, +++ b/src/main/java/org/apache/lucene/queries/ExtendedCommonTermsQuery.java, +public class ExtendedCommonTermsQuery extends CommonTermsQuery {, +    protected int calcLowFreqMinimumNumberShouldMatch(int numOptional) {, +++ /dev/null, +++ b/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final Version VERSION = Version.LUCENE_42;, +        if ("4.2".equals(version)) {, +            return Version.LUCENE_42;, +        }, +++ b/src/main/java/org/elasticsearch/common/lucene/store/BufferedChecksumIndexOutput.java, +import org.apache.lucene.store.BufferedIndexOutput;, +public class BufferedChecksumIndexOutput extends BufferedIndexOutput {, +        super(BufferedIndexOutput.DEFAULT_BUFFER_SIZE + 64);, +++ b/pom.xml, +        <lucene.version>4.2.0</lucene.version>, +++ b/src/main/java/org/apache/lucene/queries/ExtendedCommonTermsQuery.java, +public class ExtendedCommonTermsQuery extends CommonTermsQuery {, +    protected int calcLowFreqMinimumNumberShouldMatch(int numOptional) {, +++ /dev/null, +++ b/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final Version VERSION = Version.LUCENE_42;, +        if ("4.2".equals(version)) {, +            return Version.LUCENE_42;, +        }, +++ b/src/main/java/org/elasticsearch/common/lucene/store/BufferedChecksumIndexOutput.java, +import org.apache.lucene.store.BufferedIndexOutput;, +public class BufferedChecksumIndexOutput extends BufferedIndexOutput {, +        super(BufferedIndexOutput.DEFAULT_BUFFER_SIZE + 64);, +++ b/src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java, +import org.apache.lucene.codecs.lucene42.Lucene42Codec;, +public class PerFieldMappingPostingFormatCodec extends Lucene42Codec {, +++ b/pom.xml, +        <lucene.version>4.2.0</lucene.version>, +++ b/src/main/java/org/apache/lucene/queries/ExtendedCommonTermsQuery.java, +public class ExtendedCommonTermsQuery extends CommonTermsQuery {, +    protected int calcLowFreqMinimumNumberShouldMatch(int numOptional) {, +++ /dev/null, +++ b/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final Version VERSION = Version.LUCENE_42;, +        if ("4.2".equals(version)) {, +            return Version.LUCENE_42;, +        }, +++ b/src/main/java/org/elasticsearch/common/lucene/store/BufferedChecksumIndexOutput.java, +import org.apache.lucene.store.BufferedIndexOutput;, +public class BufferedChecksumIndexOutput extends BufferedIndexOutput {, +        super(BufferedIndexOutput.DEFAULT_BUFFER_SIZE + 64);, +++ b/src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java, +import org.apache.lucene.codecs.lucene42.Lucene42Codec;, +public class PerFieldMappingPostingFormatCodec extends Lucene42Codec {, +++ b/src/main/java/org/elasticsearch/index/codec/postingsformat/BloomFilterPostingsFormat.java, +                bloomIn = state.directory.openInput(bloomFileName, state.context);]