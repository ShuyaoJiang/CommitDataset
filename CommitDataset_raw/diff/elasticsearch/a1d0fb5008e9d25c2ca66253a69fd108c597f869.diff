[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterHealthRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterHealthRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        super(settings, ClusterStateAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterStateRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterHealthRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        super(settings, ClusterStateAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterStateRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/support/HandledTransportAction.java, +    protected HandledTransportAction(Settings settings, String actionName, ThreadPool threadPool, TransportService transportService, ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver, Supplier<Request> request) {, +        transportService.registerRequestHandler(actionName, request, ThreadPool.Names.SAME, new TransportHandler());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterHealthRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        super(settings, ClusterStateAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterStateRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/support/HandledTransportAction.java, +    protected HandledTransportAction(Settings settings, String actionName, ThreadPool threadPool, TransportService transportService, ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver, Supplier<Request> request) {, +        transportService.registerRequestHandler(actionName, request, ThreadPool.Names.SAME, new TransportHandler());, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +        super(settings, actionName, threadPool, transportService, actionFilters, indexNameExpressionResolver, request);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterHealthRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        super(settings, ClusterStateAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterStateRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/support/HandledTransportAction.java, +    protected HandledTransportAction(Settings settings, String actionName, ThreadPool threadPool, TransportService transportService, ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver, Supplier<Request> request) {, +        transportService.registerRequestHandler(actionName, request, ThreadPool.Names.SAME, new TransportHandler());, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +        super(settings, actionName, threadPool, transportService, actionFilters, indexNameExpressionResolver, request);, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeReadAction.java, +        super(settings, actionName, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver,request);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterHealthRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        super(settings, ClusterStateAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterStateRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/support/HandledTransportAction.java, +    protected HandledTransportAction(Settings settings, String actionName, ThreadPool threadPool, TransportService transportService, ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver, Supplier<Request> request) {, +        transportService.registerRequestHandler(actionName, request, ThreadPool.Names.SAME, new TransportHandler());, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +        super(settings, actionName, threadPool, transportService, actionFilters, indexNameExpressionResolver, request);, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeReadAction.java, +        super(settings, actionName, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver,request);, +++ b/core/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesAction.java, +        transportService.registerRequestHandler(transportNodeAction, nodeRequest, nodeExecutor, new NodeTransportHandler());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterHealthRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        super(settings, ClusterStateAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterStateRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/support/HandledTransportAction.java, +    protected HandledTransportAction(Settings settings, String actionName, ThreadPool threadPool, TransportService transportService, ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver, Supplier<Request> request) {, +        transportService.registerRequestHandler(actionName, request, ThreadPool.Names.SAME, new TransportHandler());, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +        super(settings, actionName, threadPool, transportService, actionFilters, indexNameExpressionResolver, request);, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeReadAction.java, +        super(settings, actionName, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver,request);, +++ b/core/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesAction.java, +        transportService.registerRequestHandler(transportNodeAction, nodeRequest, nodeExecutor, new NodeTransportHandler());, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +    final private String transportReplicaAction;, +    final private String transportPrimaryAction;, +        transportService.registerRequestHandler(transportReplicaAction, replicaRequest, executor, true,, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterHealthRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        super(settings, ClusterStateAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterStateRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/support/HandledTransportAction.java, +    protected HandledTransportAction(Settings settings, String actionName, ThreadPool threadPool, TransportService transportService, ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver, Supplier<Request> request) {, +        transportService.registerRequestHandler(actionName, request, ThreadPool.Names.SAME, new TransportHandler());, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +        super(settings, actionName, threadPool, transportService, actionFilters, indexNameExpressionResolver, request);, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeReadAction.java, +        super(settings, actionName, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver,request);, +++ b/core/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesAction.java, +        transportService.registerRequestHandler(transportNodeAction, nodeRequest, nodeExecutor, new NodeTransportHandler());, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +    final private String transportReplicaAction;, +    final private String transportPrimaryAction;, +        transportService.registerRequestHandler(transportReplicaAction, replicaRequest, executor, true,, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +                    + " This index should be open using a version before " + Version.CURRENT.minimumCompatibilityVersion(), +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterHealthRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        super(settings, ClusterStateAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterStateRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/support/HandledTransportAction.java, +    protected HandledTransportAction(Settings settings, String actionName, ThreadPool threadPool, TransportService transportService, ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver, Supplier<Request> request) {, +        transportService.registerRequestHandler(actionName, request, ThreadPool.Names.SAME, new TransportHandler());, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +        super(settings, actionName, threadPool, transportService, actionFilters, indexNameExpressionResolver, request);, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeReadAction.java, +        super(settings, actionName, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver,request);, +++ b/core/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesAction.java, +        transportService.registerRequestHandler(transportNodeAction, nodeRequest, nodeExecutor, new NodeTransportHandler());, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +    final private String transportReplicaAction;, +    final private String transportPrimaryAction;, +        transportService.registerRequestHandler(transportReplicaAction, replicaRequest, executor, true,, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java]