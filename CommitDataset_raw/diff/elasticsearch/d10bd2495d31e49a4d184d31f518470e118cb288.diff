[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequest.java, +import org.elasticsearch.Version;, +import org.elasticsearch.action.support.master.AcknowledgedRequest;, + * Request to submit cluster reroute allocation commands, +public class ClusterRerouteRequest extends AcknowledgedRequest<ClusterRerouteRequest> {, +    /**, +     * Returns the current dry run flag which allows to run the commands without actually applying them,, +     * just to get back the resulting cluster state back., +     */, +        readTimeout(in, Version.V_0_90_6);, +        writeTimeout(out, Version.V_0_90_6);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequest.java, +import org.elasticsearch.Version;, +import org.elasticsearch.action.support.master.AcknowledgedRequest;, + * Request to submit cluster reroute allocation commands, +public class ClusterRerouteRequest extends AcknowledgedRequest<ClusterRerouteRequest> {, +    /**, +     * Returns the current dry run flag which allows to run the commands without actually applying them,, +     * just to get back the resulting cluster state back., +     */, +        readTimeout(in, Version.V_0_90_6);, +        writeTimeout(out, Version.V_0_90_6);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequestBuilder.java, +import org.elasticsearch.action.support.master.AcknowledgedRequestBuilder;, + * Builder for a cluster reroute request, +public class ClusterRerouteRequestBuilder extends AcknowledgedRequestBuilder<ClusterRerouteRequest, ClusterRerouteResponse, ClusterRerouteRequestBuilder> {, +    /**, +     * Sets the source for the request, +     */, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequest.java, +import org.elasticsearch.Version;, +import org.elasticsearch.action.support.master.AcknowledgedRequest;, + * Request to submit cluster reroute allocation commands, +public class ClusterRerouteRequest extends AcknowledgedRequest<ClusterRerouteRequest> {, +    /**, +     * Returns the current dry run flag which allows to run the commands without actually applying them,, +     * just to get back the resulting cluster state back., +     */, +        readTimeout(in, Version.V_0_90_6);, +        writeTimeout(out, Version.V_0_90_6);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequestBuilder.java, +import org.elasticsearch.action.support.master.AcknowledgedRequestBuilder;, + * Builder for a cluster reroute request, +public class ClusterRerouteRequestBuilder extends AcknowledgedRequestBuilder<ClusterRerouteRequest, ClusterRerouteResponse, ClusterRerouteRequestBuilder> {, +    /**, +     * Sets the source for the request, +     */, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteResponse.java, +import org.elasticsearch.Version;, +import org.elasticsearch.action.support.master.AcknowledgedResponse;, + * Response returned after a cluster reroute request, +public class ClusterRerouteResponse extends AcknowledgedResponse {, +    ClusterRerouteResponse(boolean acknowledged, ClusterState state) {, +        super(acknowledged);, +    /**, +     * Returns the cluster state resulted from the cluster reroute request execution, +     */, +        readAcknowledged(in, Version.V_0_90_6);, +        writeAcknowledged(out, Version.V_0_90_6);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequest.java, +import org.elasticsearch.Version;, +import org.elasticsearch.action.support.master.AcknowledgedRequest;, + * Request to submit cluster reroute allocation commands, +public class ClusterRerouteRequest extends AcknowledgedRequest<ClusterRerouteRequest> {, +    /**, +     * Returns the current dry run flag which allows to run the commands without actually applying them,, +     * just to get back the resulting cluster state back., +     */, +        readTimeout(in, Version.V_0_90_6);, +        writeTimeout(out, Version.V_0_90_6);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequestBuilder.java, +import org.elasticsearch.action.support.master.AcknowledgedRequestBuilder;, + * Builder for a cluster reroute request, +public class ClusterRerouteRequestBuilder extends AcknowledgedRequestBuilder<ClusterRerouteRequest, ClusterRerouteResponse, ClusterRerouteRequestBuilder> {, +    /**, +     * Sets the source for the request, +     */, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteResponse.java, +import org.elasticsearch.Version;, +import org.elasticsearch.action.support.master.AcknowledgedResponse;, + * Response returned after a cluster reroute request, +public class ClusterRerouteResponse extends AcknowledgedResponse {, +    ClusterRerouteResponse(boolean acknowledged, ClusterState state) {, +        super(acknowledged);, +    /**, +     * Returns the cluster state resulted from the cluster reroute request execution, +     */, +        readAcknowledged(in, Version.V_0_90_6);, +        writeAcknowledged(out, Version.V_0_90_6);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java, +import org.elasticsearch.cluster.AckedClusterStateUpdateTask;, +import org.elasticsearch.cluster.node.DiscoveryNode;, +import org.elasticsearch.common.Nullable;, +        clusterService.submitStateUpdateTask("cluster_reroute (api)", Priority.URGENT, new AckedClusterStateUpdateTask() {, +            public boolean mustAck(DiscoveryNode discoveryNode) {, +                return true;, +            }, +, +            @Override, +            public void onAllNodesAcked(@Nullable Throwable t) {]