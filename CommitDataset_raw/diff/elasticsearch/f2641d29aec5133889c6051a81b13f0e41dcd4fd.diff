[+++ b/src/test/java/org/elasticsearch/search/sort/SimpleSortTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +    @Test, +    public void testSortDuelBetweenSingleShardAndMultiShardIndex() throws Exception {, +        String sortField = "sortField";, +        assertAcked(prepareCreate("test1"), +                .setSettings(IndexMetaData.SETTING_NUMBER_OF_SHARDS, between(2, maximumNumberOfShards())), +                .addMapping("type", sortField, "type=long").get());, +        assertAcked(prepareCreate("test2"), +                .setSettings(IndexMetaData.SETTING_NUMBER_OF_SHARDS, 1), +                .addMapping("type", sortField, "type=long").get());, +, +        for (String index : new String[]{"test1", "test2"}) {, +            List<IndexRequestBuilder> docs = new ArrayList<>();, +            for (int i = 0; i < 256; i++) {, +                docs.add(client().prepareIndex(index, "type", Integer.toString(i)).setSource(sortField, i));, +            }, +            indexRandom(true, docs);, +        }, +, +        ensureSearchable("test1", "test2");, +        SortOrder order = randomBoolean() ? SortOrder.ASC : SortOrder.DESC;, +        int from = between(0, 256);, +        int size = between(0, 256);, +        SearchResponse multiShardResponse = client().prepareSearch("test1").setFrom(from).setSize(size).addSort(sortField, order).get();, +        assertNoFailures(multiShardResponse);, +        SearchResponse singleShardResponse = client().prepareSearch("test2").setFrom(from).setSize(size).addSort(sortField, order).get();, +        assertNoFailures(singleShardResponse);, +, +        assertThat(multiShardResponse.getHits().totalHits(), equalTo(singleShardResponse.getHits().totalHits()));, +        assertThat(multiShardResponse.getHits().getHits().length, equalTo(singleShardResponse.getHits().getHits().length));, +        for (int i = 0; i < multiShardResponse.getHits().getHits().length; i++) {, +            assertThat(multiShardResponse.getHits().getAt(i).sortValues()[0], equalTo(singleShardResponse.getHits().getAt(i).sortValues()[0]));, +            assertThat(multiShardResponse.getHits().getAt(i).id(), equalTo(singleShardResponse.getHits().getAt(i).id()));, +        }, +    }, +]