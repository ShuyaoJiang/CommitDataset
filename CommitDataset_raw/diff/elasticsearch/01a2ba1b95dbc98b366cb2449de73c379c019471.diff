[+++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Sets the source of the request as a SearchSourceBuilder. Note, settings anything other, +     * {@link #setExtraSource(SearchSourceBuilder)} instead., +    public SearchRequestBuilder setSource(SearchSourceBuilder source) {, +     * {@link #setExtraSource(SearchSourceBuilder)} instead., +     * Sets the an addtional source of the request as a SearchSourceBuilder. All values and, +     * settings set on the extra source will override the corresponding settings on the specified, +     * source., +    public SearchRequestBuilder setExtraSource(SearchSourceBuilder source) {, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Sets the source of the request as a SearchSourceBuilder. Note, settings anything other, +     * {@link #setExtraSource(SearchSourceBuilder)} instead., +    public SearchRequestBuilder setSource(SearchSourceBuilder source) {, +     * {@link #setExtraSource(SearchSourceBuilder)} instead., +     * Sets the an addtional source of the request as a SearchSourceBuilder. All values and, +     * settings set on the extra source will override the corresponding settings on the specified, +     * source., +    public SearchRequestBuilder setExtraSource(SearchSourceBuilder source) {, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.decider.DisableAllocationDecider;, +            EnableAllocationDecider.class, // new enable allocation logic should proceed old disable allocation logic, +            DisableAllocationDecider.class,, +        registerClusterDynamicSetting(DisableAllocationDecider.CLUSTER_ROUTING_ALLOCATION_DISABLE_NEW_ALLOCATION, Validator.EMPTY);, +        registerClusterDynamicSetting(DisableAllocationDecider.CLUSTER_ROUTING_ALLOCATION_DISABLE_ALLOCATION, Validator.EMPTY);, +        registerClusterDynamicSetting(DisableAllocationDecider.CLUSTER_ROUTING_ALLOCATION_DISABLE_REPLICA_ALLOCATION, Validator.EMPTY);, +        registerIndexDynamicSetting(DisableAllocationDecider.INDEX_ROUTING_ALLOCATION_DISABLE_ALLOCATION, Validator.EMPTY);, +        registerIndexDynamicSetting(DisableAllocationDecider.INDEX_ROUTING_ALLOCATION_DISABLE_NEW_ALLOCATION, Validator.EMPTY);, +        registerIndexDynamicSetting(DisableAllocationDecider.INDEX_ROUTING_ALLOCATION_DISABLE_REPLICA_ALLOCATION, Validator.EMPTY);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Sets the source of the request as a SearchSourceBuilder. Note, settings anything other, +     * {@link #setExtraSource(SearchSourceBuilder)} instead., +    public SearchRequestBuilder setSource(SearchSourceBuilder source) {, +     * {@link #setExtraSource(SearchSourceBuilder)} instead., +     * Sets the an addtional source of the request as a SearchSourceBuilder. All values and, +     * settings set on the extra source will override the corresponding settings on the specified, +     * source., +    public SearchRequestBuilder setExtraSource(SearchSourceBuilder source) {, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.decider.DisableAllocationDecider;, +            EnableAllocationDecider.class, // new enable allocation logic should proceed old disable allocation logic, +            DisableAllocationDecider.class,, +        registerClusterDynamicSetting(DisableAllocationDecider.CLUSTER_ROUTING_ALLOCATION_DISABLE_NEW_ALLOCATION, Validator.EMPTY);, +        registerClusterDynamicSetting(DisableAllocationDecider.CLUSTER_ROUTING_ALLOCATION_DISABLE_ALLOCATION, Validator.EMPTY);, +        registerClusterDynamicSetting(DisableAllocationDecider.CLUSTER_ROUTING_ALLOCATION_DISABLE_REPLICA_ALLOCATION, Validator.EMPTY);, +        registerIndexDynamicSetting(DisableAllocationDecider.INDEX_ROUTING_ALLOCATION_DISABLE_ALLOCATION, Validator.EMPTY);, +        registerIndexDynamicSetting(DisableAllocationDecider.INDEX_ROUTING_ALLOCATION_DISABLE_NEW_ALLOCATION, Validator.EMPTY);, +        registerIndexDynamicSetting(DisableAllocationDecider.INDEX_ROUTING_ALLOCATION_DISABLE_REPLICA_ALLOCATION, Validator.EMPTY);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/DisableAllocationDecider.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.cluster.routing.allocation.decider;, +, +import org.elasticsearch.cluster.routing.RoutingNode;, +import org.elasticsearch.cluster.routing.ShardRouting;, +import org.elasticsearch.cluster.routing.allocation.RoutingAllocation;, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.node.settings.NodeSettingsService;, +, +/**, + * This {@link AllocationDecider} prevents cluster-wide shard allocations. The, + * behavior of this {@link AllocationDecider} can be changed in real-time via, + * the cluster settings API. It respects the following settings:, + * <ul>, + * <li><tt>cluster.routing.allocation.disable_new_allocation</tt> - if set to, + * <code>true</code> no new shard-allocation are allowed. Note: this setting is, + * only applied if the allocated shard is a primary and it has not been, + * allocated before the this setting was applied.</li>, + * <p/>, + * <li><tt>cluster.routing.allocation.disable_allocation</tt> - if set to, + * <code>true</code> cluster wide allocations are disabled</li>, + * <p/>, + * <li><tt>cluster.routing.allocation.disable_replica_allocation</tt> - if set, + * to <code>true</code> cluster wide replica allocations are disabled while, + * primary shards can still be allocated</li>]