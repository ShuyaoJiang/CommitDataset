[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +                ClearIndicesCacheRequest::new, ThreadPool.Names.MANAGEMENT, false);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +                ClearIndicesCacheRequest::new, ThreadPool.Names.MANAGEMENT, false);, +++ b/core/src/main/java/org/elasticsearch/action/support/broadcast/node/TransportBroadcastByNodeAction.java, +        this(settings, actionName, threadPool, clusterService, transportService, actionFilters, indexNameExpressionResolver, request,, +            executor, true);, +    }, +, +    public TransportBroadcastByNodeAction(, +            Settings settings,, +            String actionName,, +            ThreadPool threadPool,, +            ClusterService clusterService,, +            TransportService transportService,, +            ActionFilters actionFilters,, +            IndexNameExpressionResolver indexNameExpressionResolver,, +            Supplier<Request> request,, +            String executor,, +            boolean canTripCircuitBreaker) {, +        transportService.registerRequestHandler(transportNodeBroadcastAction, NodeRequest::new, executor, false, canTripCircuitBreaker,, +            new BroadcastByNodeTransportRequestHandler());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +                ClearIndicesCacheRequest::new, ThreadPool.Names.MANAGEMENT, false);, +++ b/core/src/main/java/org/elasticsearch/action/support/broadcast/node/TransportBroadcastByNodeAction.java, +        this(settings, actionName, threadPool, clusterService, transportService, actionFilters, indexNameExpressionResolver, request,, +            executor, true);, +    }, +, +    public TransportBroadcastByNodeAction(, +            Settings settings,, +            String actionName,, +            ThreadPool threadPool,, +            ClusterService clusterService,, +            TransportService transportService,, +            ActionFilters actionFilters,, +            IndexNameExpressionResolver indexNameExpressionResolver,, +            Supplier<Request> request,, +            String executor,, +            boolean canTripCircuitBreaker) {, +        transportService.registerRequestHandler(transportNodeBroadcastAction, NodeRequest::new, executor, false, canTripCircuitBreaker,, +            new BroadcastByNodeTransportRequestHandler());, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    JvmGcMonitorService.GC_OVERHEAD_WARN_SETTING,, +                    JvmGcMonitorService.GC_OVERHEAD_INFO_SETTING,, +                    JvmGcMonitorService.GC_OVERHEAD_DEBUG_SETTING,, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +                ClearIndicesCacheRequest::new, ThreadPool.Names.MANAGEMENT, false);, +++ b/core/src/main/java/org/elasticsearch/action/support/broadcast/node/TransportBroadcastByNodeAction.java, +        this(settings, actionName, threadPool, clusterService, transportService, actionFilters, indexNameExpressionResolver, request,, +            executor, true);, +    }, +, +    public TransportBroadcastByNodeAction(, +            Settings settings,, +            String actionName,, +            ThreadPool threadPool,, +            ClusterService clusterService,, +            TransportService transportService,, +            ActionFilters actionFilters,, +            IndexNameExpressionResolver indexNameExpressionResolver,, +            Supplier<Request> request,, +            String executor,, +            boolean canTripCircuitBreaker) {, +        transportService.registerRequestHandler(transportNodeBroadcastAction, NodeRequest::new, executor, false, canTripCircuitBreaker,, +            new BroadcastByNodeTransportRequestHandler());, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    JvmGcMonitorService.GC_OVERHEAD_WARN_SETTING,, +                    JvmGcMonitorService.GC_OVERHEAD_INFO_SETTING,, +                    JvmGcMonitorService.GC_OVERHEAD_DEBUG_SETTING,, +++ b/core/src/main/java/org/elasticsearch/common/settings/Setting.java, +import java.io.IOException;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.EnumSet;, +import java.util.List;, +import java.util.Map;, +import java.util.Objects;, +import java.util.function.BiConsumer;, +import java.util.function.Consumer;, +import java.util.function.Function;, +import java.util.regex.Pattern;, +import java.util.stream.Collectors;, +, +            throw new IllegalArgumentException("Failed to parse value [" + s + "] for setting [" + key + "] must be <= " + maxValue);, +            throw new IllegalArgumentException("Failed to parse value [" + s + "] for setting [" + key + "] must be <= " + maxValue);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +                ClearIndicesCacheRequest::new, ThreadPool.Names.MANAGEMENT, false);, +++ b/core/src/main/java/org/elasticsearch/action/support/broadcast/node/TransportBroadcastByNodeAction.java, +        this(settings, actionName, threadPool, clusterService, transportService, actionFilters, indexNameExpressionResolver, request,, +            executor, true);, +    }, +, +    public TransportBroadcastByNodeAction(, +            Settings settings,, +            String actionName,, +            ThreadPool threadPool,, +            ClusterService clusterService,, +            TransportService transportService,, +            ActionFilters actionFilters,]