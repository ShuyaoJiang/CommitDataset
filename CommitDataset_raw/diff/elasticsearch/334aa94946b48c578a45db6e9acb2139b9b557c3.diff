[+++ b/elasticsearch/x-pack/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/test/MonitoringIntegTestCase.java, +import org.elasticsearch.env.Environment;, +                Path conf = createTempDir().resolve("monitoring_security");, +                Path xpackConf = conf.resolve(XPackPlugin.NAME);, +                Files.createDirectories(xpackConf);, +                writeFile(xpackConf, "users", USERS);, +                writeFile(xpackConf, "users_roles", USER_ROLES);, +                writeFile(xpackConf, "roles.yml", ROLES);, +                writeFile(xpackConf, "system_key", systemKey);, +                        .put(NetworkModule.HTTP_TYPE_KEY, Security.NAME4), +                        .put(Environment.PATH_CONF_SETTING.getKey(), conf);, +++ b/elasticsearch/x-pack/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/test/MonitoringIntegTestCase.java, +import org.elasticsearch.env.Environment;, +                Path conf = createTempDir().resolve("monitoring_security");, +                Path xpackConf = conf.resolve(XPackPlugin.NAME);, +                Files.createDirectories(xpackConf);, +                writeFile(xpackConf, "users", USERS);, +                writeFile(xpackConf, "users_roles", USER_ROLES);, +                writeFile(xpackConf, "roles.yml", ROLES);, +                writeFile(xpackConf, "system_key", systemKey);, +                        .put(NetworkModule.HTTP_TYPE_KEY, Security.NAME4), +                        .put(Environment.PATH_CONF_SETTING.getKey(), conf);, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/Security.java, +++ b/elasticsearch/x-pack/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/test/MonitoringIntegTestCase.java, +import org.elasticsearch.env.Environment;, +                Path conf = createTempDir().resolve("monitoring_security");, +                Path xpackConf = conf.resolve(XPackPlugin.NAME);, +                Files.createDirectories(xpackConf);, +                writeFile(xpackConf, "users", USERS);, +                writeFile(xpackConf, "users_roles", USER_ROLES);, +                writeFile(xpackConf, "roles.yml", ROLES);, +                writeFile(xpackConf, "system_key", systemKey);, +                        .put(NetworkModule.HTTP_TYPE_KEY, Security.NAME4), +                        .put(Environment.PATH_CONF_SETTING.getKey(), conf);, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/Security.java, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java, +++ b/elasticsearch/x-pack/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/test/MonitoringIntegTestCase.java, +import org.elasticsearch.env.Environment;, +                Path conf = createTempDir().resolve("monitoring_security");, +                Path xpackConf = conf.resolve(XPackPlugin.NAME);, +                Files.createDirectories(xpackConf);, +                writeFile(xpackConf, "users", USERS);, +                writeFile(xpackConf, "users_roles", USER_ROLES);, +                writeFile(xpackConf, "roles.yml", ROLES);, +                writeFile(xpackConf, "system_key", systemKey);, +                        .put(NetworkModule.HTTP_TYPE_KEY, Security.NAME4), +                        .put(Environment.PATH_CONF_SETTING.getKey(), conf);, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/Security.java, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/authc/esnative/ESNativeRealmMigrateTool.java, +            Path usersFile = FileUserPasswdStore.resolveFile(env);, +            Path usersRolesFile = FileUserRolesStore.resolveFile(env);, +            Path rolesFile = FileRolesStore.resolveFile(env).toAbsolutePath();, +++ b/elasticsearch/x-pack/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/test/MonitoringIntegTestCase.java, +import org.elasticsearch.env.Environment;, +                Path conf = createTempDir().resolve("monitoring_security");, +                Path xpackConf = conf.resolve(XPackPlugin.NAME);, +                Files.createDirectories(xpackConf);, +                writeFile(xpackConf, "users", USERS);, +                writeFile(xpackConf, "users_roles", USER_ROLES);, +                writeFile(xpackConf, "roles.yml", ROLES);, +                writeFile(xpackConf, "system_key", systemKey);, +                        .put(NetworkModule.HTTP_TYPE_KEY, Security.NAME4), +                        .put(Environment.PATH_CONF_SETTING.getKey(), conf);, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/Security.java, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/authc/esnative/ESNativeRealmMigrateTool.java, +            Path usersFile = FileUserPasswdStore.resolveFile(env);, +            Path usersRolesFile = FileUserRolesStore.resolveFile(env);, +            Path rolesFile = FileRolesStore.resolveFile(env).toAbsolutePath();, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/authc/file/FileUserPasswdStore.java, +        file = resolveFile(config.env());, +    public static Path resolveFile(Environment env) {, +++ b/elasticsearch/x-pack/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/test/MonitoringIntegTestCase.java, +import org.elasticsearch.env.Environment;, +                Path conf = createTempDir().resolve("monitoring_security");, +                Path xpackConf = conf.resolve(XPackPlugin.NAME);, +                Files.createDirectories(xpackConf);, +                writeFile(xpackConf, "users", USERS);, +                writeFile(xpackConf, "users_roles", USER_ROLES);, +                writeFile(xpackConf, "roles.yml", ROLES);, +                writeFile(xpackConf, "system_key", systemKey);, +                        .put(NetworkModule.HTTP_TYPE_KEY, Security.NAME4), +                        .put(Environment.PATH_CONF_SETTING.getKey(), conf);, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/Security.java, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/authc/esnative/ESNativeRealmMigrateTool.java, +            Path usersFile = FileUserPasswdStore.resolveFile(env);, +            Path usersRolesFile = FileUserRolesStore.resolveFile(env);, +            Path rolesFile = FileRolesStore.resolveFile(env).toAbsolutePath();, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/authc/file/FileUserPasswdStore.java, +        file = resolveFile(config.env());, +    public static Path resolveFile(Environment env) {, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/authc/file/FileUserRolesStore.java, +        file = resolveFile(config.env());, +    public static Path resolveFile(Environment env) {, +                logger.info("users roles file [{}] changed. updating users roles...", file.toAbsolutePath());, +++ b/elasticsearch/x-pack/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/test/MonitoringIntegTestCase.java, +import org.elasticsearch.env.Environment;, +                Path conf = createTempDir().resolve("monitoring_security");]