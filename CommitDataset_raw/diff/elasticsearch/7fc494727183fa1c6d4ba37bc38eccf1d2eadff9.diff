[+++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                        // make sure to add custom default mapping if exists, +                        if (indexMetaData.mappings().containsKey(MapperService.DEFAULT_MAPPING)) {, +                            indexService.mapperService().merge(MapperService.DEFAULT_MAPPING, indexMetaData.mappings().get(MapperService.DEFAULT_MAPPING).source().string(), false);, +                        }, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                        // make sure to add custom default mapping if exists, +                        if (indexMetaData.mappings().containsKey(MapperService.DEFAULT_MAPPING)) {, +                            indexService.mapperService().merge(MapperService.DEFAULT_MAPPING, indexMetaData.mappings().get(MapperService.DEFAULT_MAPPING).source().string(), false);, +                        }, +++ b/src/test/java/org/elasticsearch/cluster/SpecificMasterNodesTests.java, +import org.elasticsearch.cluster.metadata.MappingMetaData;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +import static org.hamcrest.Matchers.*;, +, +, +    /**, +     * Tests that putting custom default mapping and then putting a type mapping will have the default mapping merged, +     * to the type mapping., +     */, +    @Test, +    public void testCustomDefaultMapping() throws Exception {, +        logger.info("--> start master node / non data");, +        cluster().startNode(settingsBuilder().put("node.data", false).put("node.master", true));, +, +        logger.info("--> start data node / non master node");, +        cluster().startNode(settingsBuilder().put("node.data", true).put("node.master", false));, +, +        assertAcked(client().admin().indices().prepareCreate("test").setSettings("number_of_shards", 1).get());, +        assertAcked(client().admin().indices().preparePutMapping("test").setType("_default_").setSource("_timestamp", "enabled=true"));, +, +        MappingMetaData defaultMapping = client().admin().cluster().prepareState().get().getState().getMetaData().getIndices().get("test").getMappings().get("_default_");, +        assertThat(defaultMapping.getSourceAsMap().get("_timestamp"), notNullValue());, +, +        assertAcked(client().admin().indices().preparePutMapping("test").setType("_default_").setSource("_timestamp", "enabled=true"));, +, +        assertAcked(client().admin().indices().preparePutMapping("test").setType("type1").setSource("foo", "enabled=true"));, +        MappingMetaData type1Mapping = client().admin().cluster().prepareState().get().getState().getMetaData().getIndices().get("test").getMappings().get("type1");, +        assertThat(type1Mapping.getSourceAsMap().get("_timestamp"), notNullValue());, +    }]