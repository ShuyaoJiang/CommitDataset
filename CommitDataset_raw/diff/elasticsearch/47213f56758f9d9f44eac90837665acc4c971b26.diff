[+++ b/plugin/core/build.gradle, +    testCompile "org.apache.logging.log4j:log4j-slf4j-impl:${versions.log4j}", +    testCompile "org.slf4j:slf4j-api:${versions.slf4j}", +++ b/plugin/core/build.gradle, +    testCompile "org.apache.logging.log4j:log4j-slf4j-impl:${versions.log4j}", +    testCompile "org.slf4j:slf4j-api:${versions.slf4j}", +++ b/plugin/core/src/main/config/log4j2.properties, +, +logger.xmlsig.name = org.apache.xml.security.signature.XMLSignature, +logger.xmlsig.level = error, +logger.samlxml_decrypt.name = org.opensaml.xmlsec.encryption.support.Decrypter, +logger.samlxml_decrypt.level = fatal, +logger.saml2_decrypt.name = org.opensaml.saml.saml2.encryption.Decrypter, +logger.saml2_decrypt.level = fatal, +++ b/plugin/core/build.gradle, +    testCompile "org.apache.logging.log4j:log4j-slf4j-impl:${versions.log4j}", +    testCompile "org.slf4j:slf4j-api:${versions.slf4j}", +++ b/plugin/core/src/main/config/log4j2.properties, +, +logger.xmlsig.name = org.apache.xml.security.signature.XMLSignature, +logger.xmlsig.level = error, +logger.samlxml_decrypt.name = org.opensaml.xmlsec.encryption.support.Decrypter, +logger.samlxml_decrypt.level = fatal, +logger.saml2_decrypt.name = org.opensaml.saml.saml2.encryption.Decrypter, +logger.saml2_decrypt.level = fatal, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/security/action/saml/SamlAuthenticateAction.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.xpack.security.action.saml;, +, +import org.elasticsearch.action.Action;, +import org.elasticsearch.client.ElasticsearchClient;, +, +/**, + * Action for authenticating using SAML assertions, + */, +public final class SamlAuthenticateAction, +        extends Action<SamlAuthenticateRequest, SamlAuthenticateResponse, SamlAuthenticateRequestBuilder> {, +, +    public static final String NAME = "cluster:admin/xpack/security/saml/authenticate";, +    public static final SamlAuthenticateAction INSTANCE = new SamlAuthenticateAction();, +, +    private SamlAuthenticateAction() {, +        super(NAME);, +    }, +, +    @Override, +    public SamlAuthenticateRequestBuilder newRequestBuilder(ElasticsearchClient client) {, +        return new SamlAuthenticateRequestBuilder(client);, +    }, +, +    @Override, +    public SamlAuthenticateResponse newResponse() {, +        return new SamlAuthenticateResponse();, +    }, +}, +++ b/plugin/core/build.gradle, +    testCompile "org.apache.logging.log4j:log4j-slf4j-impl:${versions.log4j}", +    testCompile "org.slf4j:slf4j-api:${versions.slf4j}", +++ b/plugin/core/src/main/config/log4j2.properties, +, +logger.xmlsig.name = org.apache.xml.security.signature.XMLSignature, +logger.xmlsig.level = error, +logger.samlxml_decrypt.name = org.opensaml.xmlsec.encryption.support.Decrypter, +logger.samlxml_decrypt.level = fatal, +logger.saml2_decrypt.name = org.opensaml.saml.saml2.encryption.Decrypter, +logger.saml2_decrypt.level = fatal, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/security/action/saml/SamlAuthenticateAction.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.xpack.security.action.saml;, +, +import org.elasticsearch.action.Action;, +import org.elasticsearch.client.ElasticsearchClient;, +, +/**, + * Action for authenticating using SAML assertions, + */, +public final class SamlAuthenticateAction, +        extends Action<SamlAuthenticateRequest, SamlAuthenticateResponse, SamlAuthenticateRequestBuilder> {, +, +    public static final String NAME = "cluster:admin/xpack/security/saml/authenticate";, +    public static final SamlAuthenticateAction INSTANCE = new SamlAuthenticateAction();, +, +    private SamlAuthenticateAction() {, +        super(NAME);, +    }, +, +    @Override, +    public SamlAuthenticateRequestBuilder newRequestBuilder(ElasticsearchClient client) {, +        return new SamlAuthenticateRequestBuilder(client);, +    }, +, +    @Override]