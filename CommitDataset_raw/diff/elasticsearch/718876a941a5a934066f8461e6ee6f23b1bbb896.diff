[+++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +            logger.trace("[{}] not acking store deletion (not a data node)", index);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +            logger.trace("[{}] not acking store deletion (not a data node)", index);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +                    logger.trace("new cluster state [{}] after waiting for master election to fail shard [{}]", state.prettyPrint(), shardRoutingEntry);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +            logger.trace("[{}] not acking store deletion (not a data node)", index);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +                    logger.trace("new cluster state [{}] after waiting for master election to fail shard [{}]", state.prettyPrint(), shardRoutingEntry);, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/PolygonBuilder.java, +            LOGGER.debug("shift: [{}]", shiftOffset);, +                LOGGER.debug("Component [{}]:", i);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +            logger.trace("[{}] not acking store deletion (not a data node)", index);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +                    logger.trace("new cluster state [{}] after waiting for master election to fail shard [{}]", state.prettyPrint(), shardRoutingEntry);, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/PolygonBuilder.java, +            LOGGER.debug("shift: [{}]", shiftOffset);, +                LOGGER.debug("Component [{}]:", i);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +            logger.warn("no version match {}, default to {}", e, version, defaultVersion);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +            logger.trace("[{}] not acking store deletion (not a data node)", index);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +                    logger.trace("new cluster state [{}] after waiting for master election to fail shard [{}]", state.prettyPrint(), shardRoutingEntry);, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/PolygonBuilder.java, +            LOGGER.debug("shift: [{}]", shiftOffset);, +                LOGGER.debug("Component [{}]:", i);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +            logger.warn("no version match {}, default to {}", e, version, defaultVersion);, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +                        logger.debug("tried to fail engine but engine is already failed. ignoring. [{}]", failure, reason);, +            logger.debug("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", failure, reason);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +            logger.trace("[{}] not acking store deletion (not a data node)", index);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +                    logger.trace("new cluster state [{}] after waiting for master election to fail shard [{}]", state.prettyPrint(), shardRoutingEntry);, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/PolygonBuilder.java, +            LOGGER.debug("shift: [{}]", shiftOffset);, +                LOGGER.debug("Component [{}]:", i);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +            logger.warn("no version match {}, default to {}", e, version, defaultVersion);, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +                        logger.debug("tried to fail engine but engine is already failed. ignoring. [{}]", failure, reason);, +            logger.debug("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", failure, reason);, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +            logger.trace("upgraded segments for {} from version {} to version {}", shardId, previousVersion, version);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +            logger.trace("[{}] not acking store deletion (not a data node)", index);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +                    logger.trace("new cluster state [{}] after waiting for master election to fail shard [{}]", state.prettyPrint(), shardRoutingEntry);, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/PolygonBuilder.java, +            LOGGER.debug("shift: [{}]", shiftOffset);, +                LOGGER.debug("Component [{}]:", i);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +            logger.warn("no version match {}, default to {}", e, version, defaultVersion);, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +                        logger.debug("tried to fail engine but engine is already failed. ignoring. [{}]", failure, reason);, +            logger.debug("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", failure, reason);, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +            logger.trace("upgraded segments for {} from version {} to version {}", shardId, previousVersion, version);, +++ b/core/src/main/java/org/elasticsearch/indices/flush/SyncedFlushService.java, +                logger.trace("{} can't resolve expected commit id for current node, skipping for sync id [{}]. shard routing {}", shardId, syncId, shard);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +            logger.trace("[{}] not acking store deletion (not a data node)", index);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +                    logger.trace("new cluster state [{}] after waiting for master election to fail shard [{}]", state.prettyPrint(), shardRoutingEntry);, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/PolygonBuilder.java, +            LOGGER.debug("shift: [{}]", shiftOffset);, +                LOGGER.debug("Component [{}]:", i);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +            logger.warn("no version match {}, default to {}", e, version, defaultVersion);, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +                        logger.debug("tried to fail engine but engine is already failed. ignoring. [{}]", failure, reason);, +            logger.debug("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", failure, reason);, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +            logger.trace("upgraded segments for {} from version {} to version {}", shardId, previousVersion, version);, +++ b/core/src/main/java/org/elasticsearch/indices/flush/SyncedFlushService.java, +                logger.trace("{} can't resolve expected commit id for current node, skipping for sync id [{}]. shard routing {}", shardId, syncId, shard);, +++ b/core/src/main/java/org/elasticsearch/indices/recovery/RecoveriesCollection.java, +            logger.trace("[monitor] rescheduling check for [{}]. last access time is [{}]", recoveryId, lastSeenAccessTime);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +            logger.trace("[{}] not acking store deletion (not a data node)", index);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +                    logger.trace("new cluster state [{}] after waiting for master election to fail shard [{}]", state.prettyPrint(), shardRoutingEntry);, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/PolygonBuilder.java, +            LOGGER.debug("shift: [{}]", shiftOffset);, +                LOGGER.debug("Component [{}]:", i);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +            logger.warn("no version match {}, default to {}", e, version, defaultVersion);, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +                        logger.debug("tried to fail engine but engine is already failed. ignoring. [{}]", failure, reason);, +            logger.debug("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", failure, reason);, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +            logger.trace("upgraded segments for {} from version {} to version {}", shardId, previousVersion, version);, +++ b/core/src/main/java/org/elasticsearch/indices/flush/SyncedFlushService.java, +                logger.trace("{} can't resolve expected commit id for current node, skipping for sync id [{}]. shard routing {}", shardId, syncId, shard);, +++ b/core/src/main/java/org/elasticsearch/indices/recovery/RecoveriesCollection.java, +            logger.trace("[monitor] rescheduling check for [{}]. last access time is [{}]", recoveryId, lastSeenAccessTime);]