[+++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +@defaultMessage Use org.elasticsearch.common.Randomness#get for reproducible sources of randomness, +java.util.Random#<init>(), +java.util.concurrent.ThreadLocalRandom, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +@defaultMessage Use org.elasticsearch.common.Randomness#get for reproducible sources of randomness, +java.util.Random#<init>(), +java.util.concurrent.ThreadLocalRandom, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +, +, +    public ActionModule(boolean proxy) {, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +@defaultMessage Use org.elasticsearch.common.Randomness#get for reproducible sources of randomness, +java.util.Random#<init>(), +java.util.concurrent.ThreadLocalRandom, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +, +, +    public ActionModule(boolean proxy) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.common.Randomness;, +        Map<String, Set<String>> routingMap = indexNameExpressionResolver.resolveSearchRouting(clusterState, Integer.toString(Randomness.get().nextInt(1000)), request.indices());, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +@defaultMessage Use org.elasticsearch.common.Randomness#get for reproducible sources of randomness, +java.util.Random#<init>(), +java.util.concurrent.ThreadLocalRandom, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +, +, +    public ActionModule(boolean proxy) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.common.Randomness;, +        Map<String, Set<String>> routingMap = indexNameExpressionResolver.resolveSearchRouting(clusterState, Integer.toString(Randomness.get().nextInt(1000)), request.indices());, +++ /dev/null, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +@defaultMessage Use org.elasticsearch.common.Randomness#get for reproducible sources of randomness, +java.util.Random#<init>(), +java.util.concurrent.ThreadLocalRandom, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +, +, +    public ActionModule(boolean proxy) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.common.Randomness;, +        Map<String, Set<String>> routingMap = indexNameExpressionResolver.resolveSearchRouting(clusterState, Integer.toString(Randomness.get().nextInt(1000)), request.indices());, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +@defaultMessage Use org.elasticsearch.common.Randomness#get for reproducible sources of randomness, +java.util.Random#<init>(), +java.util.concurrent.ThreadLocalRandom, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +, +, +    public ActionModule(boolean proxy) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.common.Randomness;, +        Map<String, Set<String>> routingMap = indexNameExpressionResolver.resolveSearchRouting(clusterState, Integer.toString(Randomness.get().nextInt(1000)), request.indices());, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +@defaultMessage Use org.elasticsearch.common.Randomness#get for reproducible sources of randomness, +java.util.Random#<init>(), +java.util.concurrent.ThreadLocalRandom, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +, +, +    public ActionModule(boolean proxy) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.common.Randomness;, +        Map<String, Set<String>> routingMap = indexNameExpressionResolver.resolveSearchRouting(clusterState, Integer.toString(Randomness.get().nextInt(1000)), request.indices());, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +@defaultMessage Use org.elasticsearch.common.Randomness#get for reproducible sources of randomness, +java.util.Random#<init>(), +java.util.concurrent.ThreadLocalRandom, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +, +, +    public ActionModule(boolean proxy) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.common.Randomness;, +        Map<String, Set<String>> routingMap = indexNameExpressionResolver.resolveSearchRouting(clusterState, Integer.toString(Randomness.get().nextInt(1000)), request.indices());, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +@defaultMessage Use org.elasticsearch.common.Randomness#get for reproducible sources of randomness, +java.util.Random#<init>(), +java.util.concurrent.ThreadLocalRandom, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +, +]