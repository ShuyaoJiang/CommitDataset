[+++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.settings.ClusterSettings;, +        if (!transportService.addressSupported(node.getAddress().getClass())) {, +            // TODO, what should we do now? Maybe inform that node that its crap?, +            logger.warn("received a wrong address type from [{}], ignoring...", node);, +        } else if (nodeJoinController == null) {, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.settings.ClusterSettings;, +        if (!transportService.addressSupported(node.getAddress().getClass())) {, +            // TODO, what should we do now? Maybe inform that node that its crap?, +            logger.warn("received a wrong address type from [{}], ignoring...", node);, +        } else if (nodeJoinController == null) {, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +            for (String name : blobs.keySet()) {, +            for (String name : blobs.keySet()) {, +                        snapshot = indexShardSnapshotFormat.readBlob(blobContainer, snapshotId.getUUID());, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.settings.ClusterSettings;, +        if (!transportService.addressSupported(node.getAddress().getClass())) {, +            // TODO, what should we do now? Maybe inform that node that its crap?, +            logger.warn("received a wrong address type from [{}], ignoring...", node);, +        } else if (nodeJoinController == null) {, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +            for (String name : blobs.keySet()) {, +            for (String name : blobs.keySet()) {, +                        snapshot = indexShardSnapshotFormat.readBlob(blobContainer, snapshotId.getUUID());, +++ b/core/src/main/java/org/elasticsearch/transport/TcpTransport.java, +    public boolean addressSupported(Class<? extends TransportAddress> address) {, +        return TransportAddress.class.equals(address);, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.settings.ClusterSettings;, +        if (!transportService.addressSupported(node.getAddress().getClass())) {, +            // TODO, what should we do now? Maybe inform that node that its crap?, +            logger.warn("received a wrong address type from [{}], ignoring...", node);, +        } else if (nodeJoinController == null) {, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +            for (String name : blobs.keySet()) {, +            for (String name : blobs.keySet()) {, +                        snapshot = indexShardSnapshotFormat.readBlob(blobContainer, snapshotId.getUUID());, +++ b/core/src/main/java/org/elasticsearch/transport/TcpTransport.java, +    public boolean addressSupported(Class<? extends TransportAddress> address) {, +        return TransportAddress.class.equals(address);, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/transport/Transport.java, +     * Is the address type supported., +     */, +    boolean addressSupported(Class<? extends TransportAddress> address);, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.settings.ClusterSettings;, +        if (!transportService.addressSupported(node.getAddress().getClass())) {, +            // TODO, what should we do now? Maybe inform that node that its crap?, +            logger.warn("received a wrong address type from [{}], ignoring...", node);, +        } else if (nodeJoinController == null) {, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +            for (String name : blobs.keySet()) {, +            for (String name : blobs.keySet()) {, +                        snapshot = indexShardSnapshotFormat.readBlob(blobContainer, snapshotId.getUUID());, +++ b/core/src/main/java/org/elasticsearch/transport/TcpTransport.java, +    public boolean addressSupported(Class<? extends TransportAddress> address) {, +        return TransportAddress.class.equals(address);, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/transport/Transport.java, +     * Is the address type supported., +     */, +    boolean addressSupported(Class<? extends TransportAddress> address);, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/transport/TransportService.java, +    public final boolean addressSupported(Class<? extends TransportAddress> address) {, +        return transport.addressSupported(address);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.settings.ClusterSettings;, +        if (!transportService.addressSupported(node.getAddress().getClass())) {, +            // TODO, what should we do now? Maybe inform that node that its crap?, +            logger.warn("received a wrong address type from [{}], ignoring...", node);, +        } else if (nodeJoinController == null) {, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +            for (String name : blobs.keySet()) {, +            for (String name : blobs.keySet()) {, +                        snapshot = indexShardSnapshotFormat.readBlob(blobContainer, snapshotId.getUUID());, +++ b/core/src/main/java/org/elasticsearch/transport/TcpTransport.java, +    public boolean addressSupported(Class<? extends TransportAddress> address) {, +        return TransportAddress.class.equals(address);]