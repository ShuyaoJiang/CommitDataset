[+++ b/distribution/archives/build.gradle, +CopySpec archiveFiles(CopySpec modulesFiles, boolean oss) {, +        with configFiles('def', oss), +          MavenFilteringHack.filter(it, expansionsForDistribution('def', oss)), +  with archiveFiles(transportModulesFiles, false), +  with archiveFiles(modulesFiles(false), false), +  with archiveFiles(modulesFiles(true), true), +  with archiveFiles(modulesFiles(false), false), +  with archiveFiles(modulesFiles(true), true), +++ b/distribution/archives/build.gradle, +CopySpec archiveFiles(CopySpec modulesFiles, boolean oss) {, +        with configFiles('def', oss), +          MavenFilteringHack.filter(it, expansionsForDistribution('def', oss)), +  with archiveFiles(transportModulesFiles, false), +  with archiveFiles(modulesFiles(false), false), +  with archiveFiles(modulesFiles(true), true), +  with archiveFiles(modulesFiles(false), false), +  with archiveFiles(modulesFiles(true), true), +++ b/distribution/build.gradle, +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss)), +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss)), +  ext.expansionsForDistribution = { distributionType, oss ->, +, +      'es.distribution.flavor': [, +        'def': oss ? 'oss' : 'default', +      ], +++ b/distribution/archives/build.gradle, +CopySpec archiveFiles(CopySpec modulesFiles, boolean oss) {, +        with configFiles('def', oss), +          MavenFilteringHack.filter(it, expansionsForDistribution('def', oss)), +  with archiveFiles(transportModulesFiles, false), +  with archiveFiles(modulesFiles(false), false), +  with archiveFiles(modulesFiles(true), true), +  with archiveFiles(modulesFiles(false), false), +  with archiveFiles(modulesFiles(true), true), +++ b/distribution/build.gradle, +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss)), +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss)), +  ext.expansionsForDistribution = { distributionType, oss ->, +, +      'es.distribution.flavor': [, +        'def': oss ? 'oss' : 'default', +      ], +++ b/distribution/packages/build.gradle, +    MavenFilteringHack.filter(it, expansionsForDistribution(type, oss)), +    String envFile = expansionsForDistribution(type, false)['path.env'], +++ b/distribution/archives/build.gradle, +CopySpec archiveFiles(CopySpec modulesFiles, boolean oss) {, +        with configFiles('def', oss), +          MavenFilteringHack.filter(it, expansionsForDistribution('def', oss)), +  with archiveFiles(transportModulesFiles, false), +  with archiveFiles(modulesFiles(false), false), +  with archiveFiles(modulesFiles(true), true), +  with archiveFiles(modulesFiles(false), false), +  with archiveFiles(modulesFiles(true), true), +++ b/distribution/build.gradle, +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss)), +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss)), +  ext.expansionsForDistribution = { distributionType, oss ->, +, +      'es.distribution.flavor': [, +        'def': oss ? 'oss' : 'default', +      ], +++ b/distribution/packages/build.gradle, +    MavenFilteringHack.filter(it, expansionsForDistribution(type, oss)), +    String envFile = expansionsForDistribution(type, false)['path.env'], +++ b/distribution/src/bin/elasticsearch, +    -Des.distribution.flavor="$ES_DISTRIBUTION_FLAVOR" \, +    -Des.distribution.flavor="$ES_DISTRIBUTION_FLAVOR" \, +++ b/distribution/archives/build.gradle, +CopySpec archiveFiles(CopySpec modulesFiles, boolean oss) {, +        with configFiles('def', oss), +          MavenFilteringHack.filter(it, expansionsForDistribution('def', oss)), +  with archiveFiles(transportModulesFiles, false), +  with archiveFiles(modulesFiles(false), false), +  with archiveFiles(modulesFiles(true), true), +  with archiveFiles(modulesFiles(false), false), +  with archiveFiles(modulesFiles(true), true), +++ b/distribution/build.gradle, +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss)), +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss)), +  ext.expansionsForDistribution = { distributionType, oss ->, +, +      'es.distribution.flavor': [, +        'def': oss ? 'oss' : 'default', +      ], +++ b/distribution/packages/build.gradle, +    MavenFilteringHack.filter(it, expansionsForDistribution(type, oss)), +    String envFile = expansionsForDistribution(type, false)['path.env'], +++ b/distribution/src/bin/elasticsearch, +    -Des.distribution.flavor="$ES_DISTRIBUTION_FLAVOR" \, +    -Des.distribution.flavor="$ES_DISTRIBUTION_FLAVOR" \, +++ b/distribution/src/bin/elasticsearch-env, +ES_DISTRIBUTION_FLAVOR=${es.distribution.flavor}, +, +++ b/distribution/archives/build.gradle, +CopySpec archiveFiles(CopySpec modulesFiles, boolean oss) {, +        with configFiles('def', oss), +          MavenFilteringHack.filter(it, expansionsForDistribution('def', oss)), +  with archiveFiles(transportModulesFiles, false)]