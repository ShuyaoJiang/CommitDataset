[+++ b/src/main/java/org/elasticsearch/shield/authc/ldap/ActiveDirectoryConnectionFactory.java, +, +        String[] ldapUrls = componentSettings.getAsArray(URLS_SETTING);, +        if (ldapUrls == null) {, +            String url = componentSettings.get(URLS_SETTING);, +            ldapUrls = url == null ? null : new String[]{url};, +        }, +        if (ldapUrls == null) {, +            ldapUrls = new String[] { "ldaps://" + domainName + ":636" };, +        }, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/ActiveDirectoryConnectionFactory.java, +, +        String[] ldapUrls = componentSettings.getAsArray(URLS_SETTING);, +        if (ldapUrls == null) {, +            String url = componentSettings.get(URLS_SETTING);, +            ldapUrls = url == null ? null : new String[]{url};, +        }, +        if (ldapUrls == null) {, +            ldapUrls = new String[] { "ldaps://" + domainName + ":636" };, +        }, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/LdapConnectionFactory.java, +    static final String URLS_SETTING = "url"; //comma separated, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/ActiveDirectoryConnectionFactory.java, +, +        String[] ldapUrls = componentSettings.getAsArray(URLS_SETTING);, +        if (ldapUrls == null) {, +            String url = componentSettings.get(URLS_SETTING);, +            ldapUrls = url == null ? null : new String[]{url};, +        }, +        if (ldapUrls == null) {, +            ldapUrls = new String[] { "ldaps://" + domainName + ":636" };, +        }, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/LdapConnectionFactory.java, +    static final String URLS_SETTING = "url"; //comma separated, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/LdapSslSocketFactory.java, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.shield.ShieldSettingsException;, +    static final String JAVA_NAMING_LDAP_FACTORY_SOCKET = "java.naming.ldap.factory.socket";, +     * @return a singleton instance of LdapSslSocketFactory set by calling the init static method., +     * @param ldapUrls array of ldap urls, either all SSL or none with SSL (no mixing), +     * @throws org.elasticsearch.shield.ShieldSettingsException if URLs have mixed protocols., +        boolean secureProtocol = ldapUrls[0].toLowerCase(Locale.getDefault()).startsWith("ldaps://");, +            if (secureProtocol != url.toLowerCase(Locale.getDefault()).startsWith("ldaps://")) {, +                //this is because LdapSSLSocketFactory produces only SSL sockets and not clear text sockets, +                throw new ShieldSettingsException("Configured ldap protocols are not all equal " +, +                        "(ldaps://.. and ldap://..): [" + Strings.arrayToCommaDelimitedString(ldapUrls) + "]");, +        if (secureProtocol && instance != null) {, +            builder.put(JAVA_NAMING_LDAP_FACTORY_SOCKET, LdapSslSocketFactory.class.getName());, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/ActiveDirectoryConnectionFactory.java, +, +        String[] ldapUrls = componentSettings.getAsArray(URLS_SETTING);, +        if (ldapUrls == null) {, +            String url = componentSettings.get(URLS_SETTING);, +            ldapUrls = url == null ? null : new String[]{url};, +        }, +        if (ldapUrls == null) {, +            ldapUrls = new String[] { "ldaps://" + domainName + ":636" };, +        }, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/LdapConnectionFactory.java, +    static final String URLS_SETTING = "url"; //comma separated, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/LdapSslSocketFactory.java, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.shield.ShieldSettingsException;, +    static final String JAVA_NAMING_LDAP_FACTORY_SOCKET = "java.naming.ldap.factory.socket";, +     * @return a singleton instance of LdapSslSocketFactory set by calling the init static method., +     * @param ldapUrls array of ldap urls, either all SSL or none with SSL (no mixing), +     * @throws org.elasticsearch.shield.ShieldSettingsException if URLs have mixed protocols., +        boolean secureProtocol = ldapUrls[0].toLowerCase(Locale.getDefault()).startsWith("ldaps://");, +            if (secureProtocol != url.toLowerCase(Locale.getDefault()).startsWith("ldaps://")) {, +                //this is because LdapSSLSocketFactory produces only SSL sockets and not clear text sockets, +                throw new ShieldSettingsException("Configured ldap protocols are not all equal " +, +                        "(ldaps://.. and ldap://..): [" + Strings.arrayToCommaDelimitedString(ldapUrls) + "]");, +        if (secureProtocol && instance != null) {, +            builder.put(JAVA_NAMING_LDAP_FACTORY_SOCKET, LdapSslSocketFactory.class.getName());, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/StandardLdapConnectionFactory.java, +            String url = componentSettings.get(URLS_SETTING);, +            ldapUrls = url == null ? null : new String[]{url};, +        }, +        if (ldapUrls == null) {, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/ActiveDirectoryConnectionFactory.java, +, +        String[] ldapUrls = componentSettings.getAsArray(URLS_SETTING);, +        if (ldapUrls == null) {, +            String url = componentSettings.get(URLS_SETTING);, +            ldapUrls = url == null ? null : new String[]{url};, +        }, +        if (ldapUrls == null) {, +            ldapUrls = new String[] { "ldaps://" + domainName + ":636" };, +        }, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/LdapConnectionFactory.java, +    static final String URLS_SETTING = "url"; //comma separated, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/LdapSslSocketFactory.java, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.shield.ShieldSettingsException;, +    static final String JAVA_NAMING_LDAP_FACTORY_SOCKET = "java.naming.ldap.factory.socket";, +     * @return a singleton instance of LdapSslSocketFactory set by calling the init static method., +     * @param ldapUrls array of ldap urls, either all SSL or none with SSL (no mixing), +     * @throws org.elasticsearch.shield.ShieldSettingsException if URLs have mixed protocols., +        boolean secureProtocol = ldapUrls[0].toLowerCase(Locale.getDefault()).startsWith("ldaps://");, +            if (secureProtocol != url.toLowerCase(Locale.getDefault()).startsWith("ldaps://")) {]