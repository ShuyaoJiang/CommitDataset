[+++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +, +            if (mapping.root.isEnabled()) {, +            }, +, +            if (mapping.root.isEnabled() == false) {, +                // entire type is disabled, +                parser.skipChildren();, +            } else if (emptyDoc == false) {, +, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +, +            if (mapping.root.isEnabled()) {, +            }, +, +            if (mapping.root.isEnabled() == false) {, +                // entire type is disabled, +                parser.skipChildren();, +            } else if (emptyDoc == false) {, +, +++ b/core/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java, +import org.elasticsearch.index.mapper.internal.UidFieldMapper;, +            .startObject().startObject("foo"), +            .endObject().endObject().bytes();, +        assertNotNull(doc.rootDoc().getField(UidFieldMapper.NAME));, +        assertNotNull(doc.rootDoc().getField(UidFieldMapper.NAME));, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +, +            if (mapping.root.isEnabled()) {, +            }, +, +            if (mapping.root.isEnabled() == false) {, +                // entire type is disabled, +                parser.skipChildren();, +            } else if (emptyDoc == false) {, +, +++ b/core/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java, +import org.elasticsearch.index.mapper.internal.UidFieldMapper;, +            .startObject().startObject("foo"), +            .endObject().endObject().bytes();, +        assertNotNull(doc.rootDoc().getField(UidFieldMapper.NAME));, +        assertNotNull(doc.rootDoc().getField(UidFieldMapper.NAME));, +++ b/docs/reference/migration/migrate_2_0/removals.asciidoc]