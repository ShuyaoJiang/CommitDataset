[+++ b/core/src/main/java/org/elasticsearch/common/lucene/search/function/FieldValueFactorFunction.java, +import org.elasticsearch.index.fielddata.FieldData;, +        final SortedNumericDoubleValues values;, +        if(indexFieldData == null) {, +            values = FieldData.emptySortedNumericDoubles(ctx.reader().maxDoc());, +        } else {, +            values = this.indexFieldData.load(ctx).getDoubleValues();, +        }, +, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/function/FieldValueFactorFunction.java, +import org.elasticsearch.index.fielddata.FieldData;, +        final SortedNumericDoubleValues values;, +        if(indexFieldData == null) {, +            values = FieldData.emptySortedNumericDoubles(ctx.reader().maxDoc());, +        } else {, +            values = this.indexFieldData.load(ctx).getDoubleValues();, +        }, +, +++ b/core/src/main/java/org/elasticsearch/index/query/functionscore/fieldvaluefactor/FieldValueFactorFunctionParser.java, +import org.apache.lucene.document.FieldType;, +import org.elasticsearch.index.fielddata.plain.DoubleArrayIndexFieldData;, +        IndexNumericFieldData fieldData = null;, +            if(missing == null) {, +                throw new ElasticsearchException("Unable to find a field mapper for field [" + field + "]. No 'missing' value defined.");, +        } else {, +            fieldData = searchContext.fieldData().getForField(fieldType);, +        }, +        return new FieldValueFactorFunction(field, boostFactor, modifier, missing, fieldData);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/function/FieldValueFactorFunction.java, +import org.elasticsearch.index.fielddata.FieldData;, +        final SortedNumericDoubleValues values;, +        if(indexFieldData == null) {, +            values = FieldData.emptySortedNumericDoubles(ctx.reader().maxDoc());, +        } else {, +            values = this.indexFieldData.load(ctx).getDoubleValues();, +        }, +, +++ b/core/src/main/java/org/elasticsearch/index/query/functionscore/fieldvaluefactor/FieldValueFactorFunctionParser.java, +import org.apache.lucene.document.FieldType;, +import org.elasticsearch.index.fielddata.plain.DoubleArrayIndexFieldData;, +        IndexNumericFieldData fieldData = null;, +            if(missing == null) {, +                throw new ElasticsearchException("Unable to find a field mapper for field [" + field + "]. No 'missing' value defined.");, +        } else {, +            fieldData = searchContext.fieldData().getForField(fieldType);, +        }, +        return new FieldValueFactorFunction(field, boostFactor, modifier, missing, fieldData);, +++ b/core/src/test/java/org/elasticsearch/search/functionscore/FunctionScoreFieldValueIT.java, +        // field is not mapped but we're defaulting it to 100 so all documents should have the same score, +        response = client().prepareSearch("test"), +                .setExplain(randomBoolean()), +                .setQuery(functionScoreQuery(matchAllQuery(),, +                        fieldValueFactorFunction("notmapped").modifier(FieldValueFactorFunction.Modifier.RECIPROCAL).missing(100))), +                .get();, +        assertEquals(response.getHits().getAt(0).score(), response.getHits().getAt(2).score(), 0);, +, +]