[+++ b/core/src/main/java/org/elasticsearch/common/settings/SecureSettings.java, +import java.io.IOException;, +, +    @Override, +    void close() throws IOException;, +++ b/core/src/main/java/org/elasticsearch/common/settings/SecureSettings.java, +import java.io.IOException;, +, +    @Override, +    void close() throws IOException;, +++ b/test/framework/src/main/java/org/elasticsearch/common/settings/MockSecureSettings.java, +import java.util.concurrent.atomic.AtomicBoolean;, +    private final AtomicBoolean closed = new AtomicBoolean(false);, +        ensureOpen();, +        ensureOpen();, +        ensureOpen();, +        ensureOpen();, +    public void close() throws IOException {, +        closed.set(true);, +    }, +, +    private void ensureOpen() {, +        if (closed.get()) {, +            throw new IllegalStateException("secure settings are already closed");, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/common/settings/SecureSettings.java, +import java.io.IOException;, +, +    @Override, +    void close() throws IOException;, +++ b/test/framework/src/main/java/org/elasticsearch/common/settings/MockSecureSettings.java, +import java.util.concurrent.atomic.AtomicBoolean;, +    private final AtomicBoolean closed = new AtomicBoolean(false);, +        ensureOpen();, +        ensureOpen();, +        ensureOpen();, +        ensureOpen();, +    public void close() throws IOException {, +        closed.set(true);, +    }, +, +    private void ensureOpen() {, +        if (closed.get()) {, +            throw new IllegalStateException("secure settings are already closed");, +        }, +    }, +++ b/test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java, +import org.elasticsearch.common.settings.SecureSettings;, +import java.io.UncheckedIOException;, +        SecureSettings secureSettings = finalSettings.getSecureSettings();, +        try {, +            IOUtils.close(secureSettings);, +        } catch (IOException e) {, +            throw new UncheckedIOException(e);, +        }]