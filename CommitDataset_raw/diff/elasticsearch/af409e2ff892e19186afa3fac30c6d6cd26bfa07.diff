[+++ b/src/main/java/org/elasticsearch/shield/authz/Permission.java, +, +                    while (globals.hasNext()) {, +                        Indices indices = globals.next().indices();, +                        if (!indices.isEmpty()) {, +                            current = indices.iterator();, +                            return;, +                        }, +                    }, +, +                    current = null;, +++ b/src/main/java/org/elasticsearch/shield/authz/Permission.java, +, +                    while (globals.hasNext()) {, +                        Indices indices = globals.next().indices();, +                        if (!indices.isEmpty()) {, +                            current = indices.iterator();, +                            return;, +                        }, +                    }, +, +                    current = null;, +++ b/src/test/java/org/elasticsearch/shield/authz/PermissionTests.java, +import org.elasticsearch.common.collect.ImmutableList;, +import java.util.Iterator;, +, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.instanceOf;, +    @Test, +    public void testIndicesGlobalsIterator() {, +        Permission.Global.Role.Builder builder = Permission.Global.Role.builder("tc_role");, +        builder.set(Cluster.action("cluster:monitor/nodes/info"));, +        Permission.Global.Role noIndicesPermission = builder.build();, +, +        Permission.Indices.Globals indicesGlobals = new Permission.Indices.Globals(ImmutableList.<Permission.Global>of(noIndicesPermission, permission));, +        Iterator<Permission.Indices.Group> iterator = indicesGlobals.iterator();, +        assertThat(iterator.hasNext(), is(equalTo(true)));, +        int count = 0;, +        while (iterator.hasNext()) {, +            iterator.next();, +            count++;, +        }, +        assertThat(count, is(equalTo(permission.indices().groups().length)));, +    }, +]