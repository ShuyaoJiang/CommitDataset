[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.admin.indices.stats.TransportIndicesStatsAction;, +        bind(TransportIndicesStatsAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.admin.indices.stats.TransportIndicesStatsAction;, +        bind(TransportIndicesStatsAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActions.java, +            public static final String STATS = "indices/stats";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.admin.indices.stats.TransportIndicesStatsAction;, +        bind(TransportIndicesStatsAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActions.java, +            public static final String STATS = "indices/stats";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.action.admin.indices.stats;, +, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.io.stream.Streamable;, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.index.flush.FlushStats;, +import org.elasticsearch.index.indexing.IndexingStats;, +import org.elasticsearch.index.merge.MergeStats;, +import org.elasticsearch.index.refresh.RefreshStats;, +import org.elasticsearch.index.shard.DocsStats;, +import org.elasticsearch.index.store.StoreStats;, +, +import java.io.IOException;, +, +/**, + */, +public class CommonStats implements Streamable, ToXContent {, +, +    @Nullable DocsStats docs;, +, +    @Nullable StoreStats store;, +, +    @Nullable IndexingStats indexing;, +, +    @Nullable MergeStats merge;, +, +    @Nullable RefreshStats refresh;, +, +    @Nullable FlushStats flush;, +, +    public void add(CommonStats stats) {, +        if (docs == null) {, +            if (stats.docs() != null) {, +                docs = new DocsStats();, +                docs.add(stats.docs());, +            }, +        } else {, +            docs.add(stats.docs());, +        }, +        if (store == null) {, +            if (stats.store() != null) {, +                store = new StoreStats();, +                store.add(stats.store());, +            }, +        } else {, +            store.add(stats.store());, +        }, +        if (indexing == null) {, +            if (stats.indexing() != null) {, +                indexing = new IndexingStats();, +                indexing.add(stats.indexing());, +            }, +        } else {, +            indexing.add(stats.indexing());, +        }, +        if (merge == null) {, +            if (stats.merge() != null) {, +                merge = new MergeStats();, +                merge.add(stats.merge());, +            }, +        } else {, +            merge.add(stats.merge());, +        }, +        if (refresh == null) {]