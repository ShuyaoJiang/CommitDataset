[+++ b/src/main/java/org/elasticsearch/watcher/actions/Action.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.watcher.transform.Transform;, +import org.elasticsearch.watcher.watch.Payload;, +import org.elasticsearch.watcher.watch.WatchExecutionContext;, +    protected Action(ESLogger logger) {, +    protected abstract R execute(String actionId, WatchExecutionContext context, Payload payload) throws IOException;, +    public interface Parser<R extends Result, T extends Action<R>> {, +    public static abstract class SourceBuilder<SB extends SourceBuilder<SB>> implements ToXContent {, +        protected final String id;, +        protected @Nullable Transform.SourceBuilder transform;, +, +        public SourceBuilder(String id) {, +            this.id = id;, +        }, +, +        public String id() {, +            return id;, +        }, +, +        public SB transform(Transform.SourceBuilder transform) {, +            this.transform = transform;, +            return (SB) this;, +        }, +, +        public abstract String type();, +, +        @Override, +        public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +            builder.startObject();, +            if (transform != null) {, +                builder.startObject(Transform.Parser.TRANSFORM_FIELD.getPreferredName()), +                        .field(transform.type(), transform), +                        .endObject();, +            }, +            builder.field(type());, +            actionXContent(builder, params);, +            return builder.endObject();, +        }, +, +        protected abstract XContentBuilder actionXContent(XContentBuilder builder, Params params) throws IOException;, +++ b/src/main/java/org/elasticsearch/watcher/actions/Action.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.watcher.transform.Transform;, +import org.elasticsearch.watcher.watch.Payload;, +import org.elasticsearch.watcher.watch.WatchExecutionContext;, +    protected Action(ESLogger logger) {, +    protected abstract R execute(String actionId, WatchExecutionContext context, Payload payload) throws IOException;, +    public interface Parser<R extends Result, T extends Action<R>> {, +    public static abstract class SourceBuilder<SB extends SourceBuilder<SB>> implements ToXContent {, +        protected final String id;, +        protected @Nullable Transform.SourceBuilder transform;, +, +        public SourceBuilder(String id) {, +            this.id = id;, +        }, +, +        public String id() {, +            return id;, +        }, +, +        public SB transform(Transform.SourceBuilder transform) {, +            this.transform = transform;, +            return (SB) this;, +        }, +, +        public abstract String type();, +, +        @Override, +        public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +            builder.startObject();, +            if (transform != null) {, +                builder.startObject(Transform.Parser.TRANSFORM_FIELD.getPreferredName()), +                        .field(transform.type(), transform), +                        .endObject();, +            }, +            builder.field(type());, +            actionXContent(builder, params);, +            return builder.endObject();, +        }, +, +        protected abstract XContentBuilder actionXContent(XContentBuilder builder, Params params) throws IOException;, +++ b/src/main/java/org/elasticsearch/watcher/actions/ActionBuilders.java, +    public static EmailAction.SourceBuilder emailAction(String id) {, +        return new EmailAction.SourceBuilder(id);, +    public static IndexAction.SourceBuilder indexAction(String id, String index, String type) {, +        return new IndexAction.SourceBuilder(id, index, type);, +    public static WebhookAction.SourceBuilder webhookAction(String id, TemplatedHttpRequest.SourceBuilder httpRequest) {, +        return new WebhookAction.SourceBuilder(id, httpRequest);, +++ b/src/main/java/org/elasticsearch/watcher/actions/Action.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.watcher.transform.Transform;, +import org.elasticsearch.watcher.watch.Payload;, +import org.elasticsearch.watcher.watch.WatchExecutionContext;, +    protected Action(ESLogger logger) {, +    protected abstract R execute(String actionId, WatchExecutionContext context, Payload payload) throws IOException;, +    public interface Parser<R extends Result, T extends Action<R>> {, +    public static abstract class SourceBuilder<SB extends SourceBuilder<SB>> implements ToXContent {, +        protected final String id;, +        protected @Nullable Transform.SourceBuilder transform;]