[+++ b/elasticsearch/license/base/src/main/java/org/elasticsearch/license/core/License.java, +++ b/elasticsearch/license/base/src/main/java/org/elasticsearch/license/core/License.java, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/LicenseOperationModeTests.java, +        assertResolve(OperationMode.GOLD, "SiLvEr", "gOlD", "silver", "gold");, +        assertResolve(OperationMode.PLATINUM, "iNtErNaL");, +        assertResolve(OperationMode.PLATINUM, "PlAtINum", "platinum");, +++ b/elasticsearch/license/base/src/main/java/org/elasticsearch/license/core/License.java, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/LicenseOperationModeTests.java, +        assertResolve(OperationMode.GOLD, "SiLvEr", "gOlD", "silver", "gold");, +        assertResolve(OperationMode.PLATINUM, "iNtErNaL");, +        assertResolve(OperationMode.PLATINUM, "PlAtINum", "platinum");, +++ b/elasticsearch/license/plugin-api/src/main/java/org/elasticsearch/license/plugin/core/LicenseState.java, +    DISABLED, +++ b/elasticsearch/license/base/src/main/java/org/elasticsearch/license/core/License.java, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/LicenseOperationModeTests.java, +        assertResolve(OperationMode.GOLD, "SiLvEr", "gOlD", "silver", "gold");, +        assertResolve(OperationMode.PLATINUM, "iNtErNaL");, +        assertResolve(OperationMode.PLATINUM, "PlAtINum", "platinum");, +++ b/elasticsearch/license/plugin-api/src/main/java/org/elasticsearch/license/plugin/core/LicenseState.java, +    DISABLED, +++ b/elasticsearch/license/plugin-api/src/main/java/org/elasticsearch/license/plugin/core/Licensee.java, +++ b/elasticsearch/license/base/src/main/java/org/elasticsearch/license/core/License.java, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/LicenseOperationModeTests.java, +        assertResolve(OperationMode.GOLD, "SiLvEr", "gOlD", "silver", "gold");, +        assertResolve(OperationMode.PLATINUM, "iNtErNaL");, +        assertResolve(OperationMode.PLATINUM, "PlAtINum", "platinum");, +++ b/elasticsearch/license/plugin-api/src/main/java/org/elasticsearch/license/plugin/core/LicenseState.java, +    DISABLED, +++ b/elasticsearch/license/plugin-api/src/main/java/org/elasticsearch/license/plugin/core/Licensee.java, +++ /dev/null, +++ b/elasticsearch/license/base/src/main/java/org/elasticsearch/license/core/License.java, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/LicenseOperationModeTests.java, +        assertResolve(OperationMode.GOLD, "SiLvEr", "gOlD", "silver", "gold");, +        assertResolve(OperationMode.PLATINUM, "iNtErNaL");, +        assertResolve(OperationMode.PLATINUM, "PlAtINum", "platinum");, +++ b/elasticsearch/license/plugin-api/src/main/java/org/elasticsearch/license/plugin/core/LicenseState.java, +    DISABLED, +++ b/elasticsearch/license/plugin-api/src/main/java/org/elasticsearch/license/plugin/core/Licensee.java, +++ /dev/null, +++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/graph/license/GraphLicensee.java, +import org.elasticsearch.license.core.License.OperationMode;, +import org.elasticsearch.license.plugin.core.LicenseState;, +        switch (newLicense.operationMode()) {, +            case BASIC:, +            case GOLD:, +                if (currentLicense != null) {, +                    switch (currentLicense.operationMode()) {, +                        case TRIAL:, +                        case PLATINUM:, +                break;, +        }, +    /**, +     * Determine if Graph Exploration should be enabled., +     * <p>, +     * Exploration is only disabled when the license has expired or if the mode is not:, +     * <ul>, +     * <li>{@link OperationMode#PLATINUM}</li>, +     * <li>{@link OperationMode#TRIAL}</li>, +     * </ul>, +     *, +     * @return {@code true} as long as the license is valid. Otherwise {@code false}., +     */, +        OperationMode operationMode = localStatus.getMode();, +, +        boolean licensed = operationMode == OperationMode.TRIAL || operationMode == OperationMode.PLATINUM;, +, +        return licensed && localStatus.getLicenseState() != LicenseState.DISABLED;, +++ b/elasticsearch/license/base/src/main/java/org/elasticsearch/license/core/License.java, +++ b/elasticsearch/license/base/src/test/java/org/elasticsearch/license/core/LicenseOperationModeTests.java, +        assertResolve(OperationMode.GOLD, "SiLvEr", "gOlD", "silver", "gold");, +        assertResolve(OperationMode.PLATINUM, "iNtErNaL");, +        assertResolve(OperationMode.PLATINUM, "PlAtINum", "platinum");, +++ b/elasticsearch/license/plugin-api/src/main/java/org/elasticsearch/license/plugin/core/LicenseState.java, +    DISABLED, +++ b/elasticsearch/license/plugin-api/src/main/java/org/elasticsearch/license/plugin/core/Licensee.java, +++ /dev/null, +++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/graph/license/GraphLicensee.java, +import org.elasticsearch.license.core.License.OperationMode;, +import org.elasticsearch.license.plugin.core.LicenseState;, +        switch (newLicense.operationMode()) {, +            case BASIC:, +            case GOLD:, +                if (currentLicense != null) {, +                    switch (currentLicense.operationMode()) {, +                        case TRIAL:, +                        case PLATINUM:, +                break;, +        }, +    /**, +     * Determine if Graph Exploration should be enabled., +     * <p>, +     * Exploration is only disabled when the license has expired or if the mode is not:, +     * <ul>, +     * <li>{@link OperationMode#PLATINUM}</li>, +     * <li>{@link OperationMode#TRIAL}</li>, +     * </ul>, +     *, +     * @return {@code true} as long as the license is valid. Otherwise {@code false}., +     */, +        OperationMode operationMode = localStatus.getMode();]