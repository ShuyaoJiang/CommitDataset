[+++ b/TESTING.asciidoc, +or run jessie and trusty:, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='jessie, trusty', +++ b/TESTING.asciidoc, +or run jessie and trusty:, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='jessie, trusty', +++ b/Vagrantfile, +  # Wheezy's backports don't contain Openjdk 8 and the backflips required to, +  # get the sun jdk on there just aren't worth it. We have jessie for testing, +  # debian and it works fine., +    deb_common config,, +      'echo deb http://http.debian.net/debian jessie-backports main > /etc/apt/sources.list.d/backports.list', 'backports', +    config.vm.box = "boxcutter/centos67", +    rpm_common config, +    config.vm.box = "boxcutter/centos71", +    rpm_common config, +    rpm_common config, +    dnf_common config, +  end, +  config.vm.define "opensuse-13" do |config|, +    config.vm.box = "chef/opensuse-13", +    config.vm.box_url = "http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_opensuse-13.2-x86_64_chef-provisionerless.box", +    suse_common config, +  config.vm.synced_folder ".", "/elasticsearch", +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', +end, +, +def deb_common(config, add_openjdk_repository_command, openjdk_list), +  provision(config,, +    update_command: "apt-get update",, +    update_tracking_file: "/var/cache/apt/archives/last_update",, +    install_command: "apt-get install -y",, +    java_package: "openjdk-8-jdk",, +    extra: <<-SHELL, +      export DEBIAN_FRONTEND=noninteractive, +      ls /etc/apt/sources.list.d/#{openjdk_list}.list > /dev/null 2>&1 ||, +        (echo "Importing java-8 ppa" &&, +          #{add_openjdk_repository_command} &&, +          apt-get update -o \, +            Dir::Etc::sourcelist="$(ls /etc/apt/sources.list.d/#{openjdk_list}.list)" \, +            -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"), +SHELL, +  ), +  provision(config,, +    update_command: "yum check-update",, +    update_tracking_file: "/var/cache/yum/last_update",, +    install_command: "yum install -y",, +    java_package: "java-1.8.0-openjdk-devel"), +  provision(config,, +    update_command: "dnf check-update",, +    update_tracking_file: "/var/cache/dnf/last_update",, +    install_command: "dnf install -y",, +    java_package: "java-1.8.0-openjdk-devel"), +def suse_common(config), +  provision(config,, +    update_command: "zypper --non-interactive list-updates",, +    update_tracking_file: "/var/cache/zypp/packages/last_update",, +    install_command: "zypper --non-interactive --quiet install --no-recommends",, +    java_package: "java-1_8_0-openjdk-devel"), +end, +# Register the main box provisioning script., +# @param config Vagrant's config object. Required., +# @param update_command [String] The command used to update the package, +#   manager. Required. Think `apt-get update`., +# @param update_tracking_file [String] The location of the file tracking the, +#   last time the update command was run. Required. Should be in a place that, +#   is cached by vagrant-cachier., +# @param install_command [String] The command used to install a package., +#   Required. Think `apt-get install #{package}`., +# @param java_package [String] The name of the java package. Required., +# @param extra [String] Extra provisioning commands run before anything else., +#   Optional. Used for things like setting up the ppa for Java 8., +def provision(config,, +    update_command: 'required',, +    update_tracking_file: 'required',, +    install_command: 'required',, +    java_package: 'required',, +    extra: ''), +  # Vagrant run ruby 2.0.0 which doesn't have required named parameters...., +  raise ArgumentError.new('update_command is required') if update_command == 'required', +  raise ArgumentError.new('update_tracking_file is required') if update_tracking_file == 'required', +  raise ArgumentError.new('install_command is required') if install_command == 'required', +  raise ArgumentError.new('java_package is required') if java_package == 'required', +    set -o pipefail, +      if [ ! -f #{update_tracking_file} ] || [ "x$(find #{update_tracking_file} -mtime +0)" == "x#{update_tracking_file}" ]; then, +          #{update_command} || true, +      #{install_command} $1, +, +    #{extra}, +, +    ensure tar, +      /tmp/bats/install.sh /usr, +      rm -rf /tmp/bats, +++ b/TESTING.asciidoc, +or run jessie and trusty:, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='jessie, trusty', +++ b/Vagrantfile, +  # Wheezy's backports don't contain Openjdk 8 and the backflips required to, +  # get the sun jdk on there just aren't worth it. We have jessie for testing, +  # debian and it works fine.]