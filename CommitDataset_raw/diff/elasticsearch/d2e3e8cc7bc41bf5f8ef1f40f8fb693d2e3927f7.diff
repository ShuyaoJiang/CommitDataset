[+++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        if (indexSettings.get("index.translog.type") != null) { // TODO remove?, +            throw new IllegalStateException("a custom translog type is no longer supported. got [" + indexSettings.get("index.translog.type") + "]");, +        }, +            if (useShadowEngine(primary, indexSettings)) {, +    static boolean useShadowEngine(boolean primary, Settings indexSettings) {, +        return primary == false && IndexMetaData.isIndexUsingShadowReplicas(indexSettings);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        if (indexSettings.get("index.translog.type") != null) { // TODO remove?, +            throw new IllegalStateException("a custom translog type is no longer supported. got [" + indexSettings.get("index.translog.type") + "]");, +        }, +            if (useShadowEngine(primary, indexSettings)) {, +    static boolean useShadowEngine(boolean primary, Settings indexSettings) {, +        return primary == false && IndexMetaData.isIndexUsingShadowReplicas(indexSettings);, +    }, +, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        if (indexSettings.get("index.translog.type") != null) { // TODO remove?, +            throw new IllegalStateException("a custom translog type is no longer supported. got [" + indexSettings.get("index.translog.type") + "]");, +        }, +            if (useShadowEngine(primary, indexSettings)) {, +    static boolean useShadowEngine(boolean primary, Settings indexSettings) {, +        return primary == false && IndexMetaData.isIndexUsingShadowReplicas(indexSettings);, +    }, +, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/store/IndexStore.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        if (indexSettings.get("index.translog.type") != null) { // TODO remove?, +            throw new IllegalStateException("a custom translog type is no longer supported. got [" + indexSettings.get("index.translog.type") + "]");, +        }, +            if (useShadowEngine(primary, indexSettings)) {, +    static boolean useShadowEngine(boolean primary, Settings indexSettings) {, +        return primary == false && IndexMetaData.isIndexUsingShadowReplicas(indexSettings);, +    }, +, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/store/IndexStore.java, +++ b/core/src/main/java/org/elasticsearch/plugins/Plugin.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        if (indexSettings.get("index.translog.type") != null) { // TODO remove?, +            throw new IllegalStateException("a custom translog type is no longer supported. got [" + indexSettings.get("index.translog.type") + "]");, +        }, +            if (useShadowEngine(primary, indexSettings)) {, +    static boolean useShadowEngine(boolean primary, Settings indexSettings) {, +        return primary == false && IndexMetaData.isIndexUsingShadowReplicas(indexSettings);, +    }, +, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/store/IndexStore.java, +++ b/core/src/main/java/org/elasticsearch/plugins/Plugin.java, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginsService.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        if (indexSettings.get("index.translog.type") != null) { // TODO remove?, +            throw new IllegalStateException("a custom translog type is no longer supported. got [" + indexSettings.get("index.translog.type") + "]");, +        }, +            if (useShadowEngine(primary, indexSettings)) {, +    static boolean useShadowEngine(boolean primary, Settings indexSettings) {, +        return primary == false && IndexMetaData.isIndexUsingShadowReplicas(indexSettings);, +    }, +, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/store/IndexStore.java, +++ b/core/src/main/java/org/elasticsearch/plugins/Plugin.java, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginsService.java, +++ b/core/src/test/java/org/elasticsearch/index/IndexServiceTests.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.index;, +, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.index.shard.ShardId;, +import org.elasticsearch.test.ESTestCase;, +import org.junit.Test;, +, +/** Unit test(s) for IndexService */, +public class IndexServiceTests extends ESTestCase {, +, +    @Test]