[+++ b/.gitignore, +html_docs, +++ b/.gitignore, +html_docs, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +import org.elasticsearch.index.query.QueryParseContext;, +    public Query query(QueryParseContext parseContext, String queryText) {, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ b/.gitignore, +html_docs, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +import org.elasticsearch.index.query.QueryParseContext;, +    public Query query(QueryParseContext parseContext, String queryText) {, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/FieldQueryExtension.java, +import org.elasticsearch.index.query.QueryParseContext;, +    Query query(QueryParseContext parseContext, String queryText);, +++ b/.gitignore, +html_docs, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +import org.elasticsearch.index.query.QueryParseContext;, +    public Query query(QueryParseContext parseContext, String queryText) {, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/FieldQueryExtension.java, +import org.elasticsearch.index.query.QueryParseContext;, +    Query query(QueryParseContext parseContext, String queryText);, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import org.elasticsearch.index.query.QueryParseContext;, +    private final QueryParseContext parseContext;, +    public MapperQueryParser(QueryParseContext parseContext) {, +        this.parseContext = parseContext;, +    }, +, +    public MapperQueryParser(QueryParserSettings settings, QueryParseContext parseContext) {, +        super(settings.defaultField(), settings.defaultAnalyzer());, +        this.parseContext = parseContext;, +        reset(settings);, +            return fieldQueryExtension.query(parseContext, queryText);, +                    currentFieldType = parseContext.fieldMapper(field + quoteFieldSuffix);, +                currentFieldType = parseContext.fieldMapper(field);, +                        setAnalyzer(parseContext.getSearchQuoteAnalyzer(currentFieldType));, +                        setAnalyzer(parseContext.getSearchAnalyzer(currentFieldType));, +                            query = currentFieldType.termQuery(queryText, parseContext);, +        currentFieldType = parseContext.fieldMapper(field);, +        currentFieldType = parseContext.fieldMapper(field);, +            currentFieldType = parseContext.fieldMapper(field);, +                    setAnalyzer(parseContext.getSearchAnalyzer(currentFieldType));, +                    query = currentFieldType.prefixQuery(termStr, multiTermRewriteMethod, parseContext);, +                return fieldQueryExtensions.get(ExistsFieldQueryExtension.NAME).query(parseContext, actualField);, +            currentFieldType = parseContext.fieldMapper(field);, +                    setAnalyzer(parseContext.getSearchAnalyzer(currentFieldType));, +            currentFieldType = parseContext.fieldMapper(field);, +                    setAnalyzer(parseContext.getSearchAnalyzer(currentFieldType));, +                    query = currentFieldType.regexpQuery(termStr, RegExp.ALL, maxDeterminizedStates, multiTermRewriteMethod, parseContext);, +            fields = parseContext.simpleMatchToIndexNames(field);, +++ b/.gitignore, +html_docs, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +import org.elasticsearch.index.query.QueryParseContext;, +    public Query query(QueryParseContext parseContext, String queryText) {, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/FieldQueryExtension.java, +import org.elasticsearch.index.query.QueryParseContext;, +    Query query(QueryParseContext parseContext, String queryText);, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import org.elasticsearch.index.query.QueryParseContext;, +    private final QueryParseContext parseContext;, +    public MapperQueryParser(QueryParseContext parseContext) {, +        this.parseContext = parseContext;, +    }, +, +    public MapperQueryParser(QueryParserSettings settings, QueryParseContext parseContext) {, +        super(settings.defaultField(), settings.defaultAnalyzer());, +        this.parseContext = parseContext;, +        reset(settings);, +            return fieldQueryExtension.query(parseContext, queryText);, +                    currentFieldType = parseContext.fieldMapper(field + quoteFieldSuffix);, +                currentFieldType = parseContext.fieldMapper(field);, +                        setAnalyzer(parseContext.getSearchQuoteAnalyzer(currentFieldType));, +                        setAnalyzer(parseContext.getSearchAnalyzer(currentFieldType));, +                            query = currentFieldType.termQuery(queryText, parseContext);, +        currentFieldType = parseContext.fieldMapper(field);, +        currentFieldType = parseContext.fieldMapper(field);, +            currentFieldType = parseContext.fieldMapper(field);, +                    setAnalyzer(parseContext.getSearchAnalyzer(currentFieldType));, +                    query = currentFieldType.prefixQuery(termStr, multiTermRewriteMethod, parseContext);, +                return fieldQueryExtensions.get(ExistsFieldQueryExtension.NAME).query(parseContext, actualField);, +            currentFieldType = parseContext.fieldMapper(field);, +                    setAnalyzer(parseContext.getSearchAnalyzer(currentFieldType));, +            currentFieldType = parseContext.fieldMapper(field);, +                    setAnalyzer(parseContext.getSearchAnalyzer(currentFieldType));, +                    query = currentFieldType.regexpQuery(termStr, RegExp.ALL, maxDeterminizedStates, multiTermRewriteMethod, parseContext);, +            fields = parseContext.simpleMatchToIndexNames(field);, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MissingFieldQueryExtension.java, +import org.elasticsearch.index.query.MissingQueryParser;, +import org.elasticsearch.index.query.QueryParseContext;]