[+++ b/plugin/src/main/java/org/elasticsearch/xpack/security/PkiRealmBootstrapCheck.java, +import org.elasticsearch.xpack.XPackSettings;, +            final boolean transportSSLEnabled = XPackSettings.TRANSPORT_SSL_ENABLED.get(settings);, +            if (transportSSLEnabled && clientAuthEnabled) {, +                if (transportSSLEnabled && sslService.isSSLClientAuthEnabled(, +                        SecurityNetty4Transport.profileSslSettings(entry.getValue()), transportSSLSettings)) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/PkiRealmBootstrapCheck.java, +import org.elasticsearch.xpack.XPackSettings;, +            final boolean transportSSLEnabled = XPackSettings.TRANSPORT_SSL_ENABLED.get(settings);, +            if (transportSSLEnabled && clientAuthEnabled) {, +                if (transportSSLEnabled && sslService.isSSLClientAuthEnabled(, +                        SecurityNetty4Transport.profileSslSettings(entry.getValue()), transportSSLSettings)) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/Security.java, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/PkiRealmBootstrapCheck.java, +import org.elasticsearch.xpack.XPackSettings;, +            final boolean transportSSLEnabled = XPackSettings.TRANSPORT_SSL_ENABLED.get(settings);, +            if (transportSSLEnabled && clientAuthEnabled) {, +                if (transportSSLEnabled && sslService.isSSLClientAuthEnabled(, +                        SecurityNetty4Transport.profileSslSettings(entry.getValue()), transportSSLSettings)) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/Security.java, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/transport/SecurityServerTransportInterceptor.java, +        final boolean transportSSLEnabled = XPackSettings.TRANSPORT_SSL_ENABLED.get(settings);, +            final boolean extractClientCert = transportSSLEnabled &&, +                    sslService.isSSLClientAuthEnabled(profileSslSettings, transportSSLSettings);, +            final boolean extractClientCert = transportSSLEnabled && sslService.isSSLClientAuthEnabled(transportSSLSettings);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/PkiRealmBootstrapCheck.java, +import org.elasticsearch.xpack.XPackSettings;, +            final boolean transportSSLEnabled = XPackSettings.TRANSPORT_SSL_ENABLED.get(settings);, +            if (transportSSLEnabled && clientAuthEnabled) {, +                if (transportSSLEnabled && sslService.isSSLClientAuthEnabled(, +                        SecurityNetty4Transport.profileSslSettings(entry.getValue()), transportSSLSettings)) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/Security.java, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/transport/SecurityServerTransportInterceptor.java, +        final boolean transportSSLEnabled = XPackSettings.TRANSPORT_SSL_ENABLED.get(settings);, +            final boolean extractClientCert = transportSSLEnabled &&, +                    sslService.isSSLClientAuthEnabled(profileSslSettings, transportSSLSettings);, +            final boolean extractClientCert = transportSSLEnabled && sslService.isSSLClientAuthEnabled(transportSSLSettings);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/transport/netty4/SecurityNetty4Transport.java, +import org.elasticsearch.xpack.XPackSettings;, +    private final boolean sslEnabled;, +        this.sslEnabled = XPackSettings.TRANSPORT_SSL_ENABLED.get(settings);, +        if (sslEnabled) {, +            this.sslConfiguration = sslService.sslConfiguration(transportSSLSettings, Settings.EMPTY);, +        } else {, +            this.profileConfiguration = Collections.emptyMap();, +            this.sslConfiguration = null;, +        }, +        if (sslEnabled) {, +        } else {, +            return new IPFilterServerChannelInitializer(name);, +        }, +    class IPFilterServerChannelInitializer extends ServerChannelInitializer {, +        IPFilterServerChannelInitializer(String name) {, +            super(name);, +        }, +, +        @Override, +        protected void initChannel(Channel ch) throws Exception {, +            super.initChannel(ch);, +            if (authenticator != null) {, +                ch.pipeline().addFirst("ipfilter", new IpFilterRemoteAddressFilter(authenticator, name));, +            }, +        }, +    }, +, +    class SecurityServerChannelInitializer extends IPFilterServerChannelInitializer {, +            IpFilterRemoteAddressFilter remoteAddressFilter = ch.pipeline().get(IpFilterRemoteAddressFilter.class);, +            final SslHandler sslHandler = new SslHandler(serverEngine);, +            if (remoteAddressFilter == null) {, +                ch.pipeline().addFirst("sslhandler", sslHandler);, +            } else {, +                ch.pipeline().addAfter("ipfilter", "sslhandler", sslHandler);, +            this.hostnameVerificationEnabled = sslEnabled && sslConfiguration.verificationMode().isHostnameVerificationEnabled();, +            if (sslEnabled) {, +    }, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/PkiRealmBootstrapCheck.java, +import org.elasticsearch.xpack.XPackSettings;, +            final boolean transportSSLEnabled = XPackSettings.TRANSPORT_SSL_ENABLED.get(settings);, +            if (transportSSLEnabled && clientAuthEnabled) {, +                if (transportSSLEnabled && sslService.isSSLClientAuthEnabled(, +                        SecurityNetty4Transport.profileSslSettings(entry.getValue()), transportSSLSettings)) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/Security.java, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/transport/SecurityServerTransportInterceptor.java, +        final boolean transportSSLEnabled = XPackSettings.TRANSPORT_SSL_ENABLED.get(settings);, +            final boolean extractClientCert = transportSSLEnabled &&, +                    sslService.isSSLClientAuthEnabled(profileSslSettings, transportSSLSettings);, +            final boolean extractClientCert = transportSSLEnabled && sslService.isSSLClientAuthEnabled(transportSSLSettings);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/transport/netty4/SecurityNetty4Transport.java, +import org.elasticsearch.xpack.XPackSettings;, +    private final boolean sslEnabled;, +        this.sslEnabled = XPackSettings.TRANSPORT_SSL_ENABLED.get(settings);, +        if (sslEnabled) {, +            this.sslConfiguration = sslService.sslConfiguration(transportSSLSettings, Settings.EMPTY);, +        } else {, +            this.profileConfiguration = Collections.emptyMap();, +            this.sslConfiguration = null;, +        }, +        if (sslEnabled) {, +        } else {, +            return new IPFilterServerChannelInitializer(name);]