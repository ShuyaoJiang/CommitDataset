[+++ b/docs/reference/ingest/ingest-node.asciidoc, +| `params`               | no        | -       | Script Parameters, +The following example sets a new field called `field_a_plus_b_times_c` to be the sum of two existing, +numeric fields `field_a` and `field_b` multiplied by the parameter param_c:, +    "inline": "ctx.field_a_plus_b_times_c = (ctx.field_a + ctx.field_b) * params.param_c",, +    "params": {, +      "param_c": 10, +    }, +++ b/docs/reference/ingest/ingest-node.asciidoc, +| `params`               | no        | -       | Script Parameters, +The following example sets a new field called `field_a_plus_b_times_c` to be the sum of two existing, +numeric fields `field_a` and `field_b` multiplied by the parameter param_c:, +    "inline": "ctx.field_a_plus_b_times_c = (ctx.field_a + ctx.field_b) * params.param_c",, +    "params": {, +      "param_c": 10, +    }, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java, +import static org.elasticsearch.ingest.ConfigurationUtils.readOptionalMap;, +        ExecutableScript executableScript = scriptService.executable(script, ScriptContext.Standard.INGEST, emptyMap());, +        executableScript.setNextVar("ctx",  document.getSourceAndMetadata());, +            Map<String, ?> params = readOptionalMap(TYPE, processorTag, config, "params");, +            if(params == null) {, +                params = emptyMap();, +            }, +, +                script = new Script(file, FILE, lang, params);, +                script = new Script(inline, INLINE, lang, params);, +                script = new Script(id, STORED, lang, params);, +++ b/docs/reference/ingest/ingest-node.asciidoc, +| `params`               | no        | -       | Script Parameters, +The following example sets a new field called `field_a_plus_b_times_c` to be the sum of two existing, +numeric fields `field_a` and `field_b` multiplied by the parameter param_c:, +    "inline": "ctx.field_a_plus_b_times_c = (ctx.field_a + ctx.field_b) * params.param_c",, +    "params": {, +      "param_c": 10, +    }, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java, +import static org.elasticsearch.ingest.ConfigurationUtils.readOptionalMap;, +        ExecutableScript executableScript = scriptService.executable(script, ScriptContext.Standard.INGEST, emptyMap());, +        executableScript.setNextVar("ctx",  document.getSourceAndMetadata());, +            Map<String, ?> params = readOptionalMap(TYPE, processorTag, config, "params");, +            if(params == null) {, +                params = emptyMap();, +            }, +, +                script = new Script(file, FILE, lang, params);, +                script = new Script(inline, INLINE, lang, params);, +                script = new Script(id, STORED, lang, params);, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ScriptProcessorTests.java, +        when(scriptService.executable(any(), any(), any())).thenReturn(executableScript);, +++ b/docs/reference/ingest/ingest-node.asciidoc, +| `params`               | no        | -       | Script Parameters, +The following example sets a new field called `field_a_plus_b_times_c` to be the sum of two existing, +numeric fields `field_a` and `field_b` multiplied by the parameter param_c:, +    "inline": "ctx.field_a_plus_b_times_c = (ctx.field_a + ctx.field_b) * params.param_c",, +    "params": {, +      "param_c": 10, +    }, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java, +import static org.elasticsearch.ingest.ConfigurationUtils.readOptionalMap;, +        ExecutableScript executableScript = scriptService.executable(script, ScriptContext.Standard.INGEST, emptyMap());, +        executableScript.setNextVar("ctx",  document.getSourceAndMetadata());, +            Map<String, ?> params = readOptionalMap(TYPE, processorTag, config, "params");, +            if(params == null) {, +                params = emptyMap();, +            }, +, +                script = new Script(file, FILE, lang, params);, +                script = new Script(inline, INLINE, lang, params);, +                script = new Script(id, STORED, lang, params);, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ScriptProcessorTests.java, +        when(scriptService.executable(any(), any(), any())).thenReturn(executableScript);, +++ b/qa/smoke-test-ingest-with-all-dependencies/src/test/resources/rest-api-spec/test/ingest/50_script_processor_using_painless.yaml, +"Test script processor with inline script and params":, +                  "inline": "ctx.bytes_total = (ctx.bytes_in + ctx.bytes_out) * params.factor",, +                  "params": {, +                     "factor": 10, +                  }, +  - match: { _source.bytes_total: 55550 }]