[+++ b/src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java, +import org.junit.After;, +    @After, +    public void afterBenchmarkIntegrationTests() throws Exception {, +        final BenchmarkStatusResponse statusResponse = client().prepareBenchStatus().execute().actionGet();, +        assertThat("Some benchmarks are still running", statusResponse.benchmarkResponses(), is(empty()));, +    }, +, +        try {, +            waitForQuery.await();, +, +        } finally {, +            if (waitForTestLatch.getCount() == 1) {, +                waitForTestLatch.countDown();, +            }, +            assertThat(waitForTestLatch.getCount(), is(0l));, +        }, +, +        logger.info("--> Submitting benchmark - competitors [{}] iterations [{}]", request.competitors().size(),, +                request.settings().iterations());, +        boolean aborted = false;, +        try {, +            waitForQuery.await();, +                    client().prepareAbortBench(BENCHMARK_NAME).get();, +            aborted = true;, +, +        } finally {, +            if (waitForTestLatch.getCount() == 1) {, +                waitForTestLatch.countDown();, +            }, +            if (!aborted) {, +                client().prepareAbortBench(BENCHMARK_NAME).get();, +            }, +            assertThat(waitForTestLatch.getCount(), is(0l));, +        }, +++ b/src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java, +import org.junit.After;, +    @After, +    public void afterBenchmarkIntegrationTests() throws Exception {, +        final BenchmarkStatusResponse statusResponse = client().prepareBenchStatus().execute().actionGet();, +        assertThat("Some benchmarks are still running", statusResponse.benchmarkResponses(), is(empty()));, +    }, +, +        try {, +            waitForQuery.await();, +, +        } finally {, +            if (waitForTestLatch.getCount() == 1) {, +                waitForTestLatch.countDown();, +            }, +            assertThat(waitForTestLatch.getCount(), is(0l));, +        }, +, +        logger.info("--> Submitting benchmark - competitors [{}] iterations [{}]", request.competitors().size(),, +                request.settings().iterations());, +        boolean aborted = false;, +        try {, +            waitForQuery.await();, +                    client().prepareAbortBench(BENCHMARK_NAME).get();, +            aborted = true;, +, +        } finally {, +            if (waitForTestLatch.getCount() == 1) {, +                waitForTestLatch.countDown();, +            }, +            if (!aborted) {, +                client().prepareAbortBench(BENCHMARK_NAME).get();, +            }, +            assertThat(waitForTestLatch.getCount(), is(0l));, +        }, +++ b/src/test/java/org/elasticsearch/test/ImmutableTestCluster.java]