[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/JsonThrowableHttpResponse.java, +import static org.elasticsearch.util.json.JsonBuilder.*;, +        JsonBuilder builder = jsonBuilder().prettyPrint(), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/JsonThrowableHttpResponse.java, +import static org.elasticsearch.util.json.JsonBuilder.*;, +        JsonBuilder builder = jsonBuilder().prettyPrint(), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/create/HttpCreateIndexAction.java, +                        channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", t.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/JsonThrowableHttpResponse.java, +import static org.elasticsearch.util.json.JsonBuilder.*;, +        JsonBuilder builder = jsonBuilder().prettyPrint(), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/create/HttpCreateIndexAction.java, +                        channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", t.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/delete/HttpDeleteIndexAction.java, +import static org.elasticsearch.util.json.JsonBuilder.*;, +                    channel.sendResponse(new JsonHttpResponse(request, OK, jsonBuilder().startObject().field("ok", true).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/JsonThrowableHttpResponse.java, +import static org.elasticsearch.util.json.JsonBuilder.*;, +        JsonBuilder builder = jsonBuilder().prettyPrint(), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/create/HttpCreateIndexAction.java, +                        channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", t.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/delete/HttpDeleteIndexAction.java, +import static org.elasticsearch.util.json.JsonBuilder.*;, +                    channel.sendResponse(new JsonHttpResponse(request, OK, jsonBuilder().startObject().field("ok", true).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/mapping/create/HttpCreateMappingAction.java, +                        channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", t.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/JsonThrowableHttpResponse.java, +import static org.elasticsearch.util.json.JsonBuilder.*;, +        JsonBuilder builder = jsonBuilder().prettyPrint(), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/create/HttpCreateIndexAction.java, +                        channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", t.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/delete/HttpDeleteIndexAction.java, +import static org.elasticsearch.util.json.JsonBuilder.*;, +                    channel.sendResponse(new JsonHttpResponse(request, OK, jsonBuilder().startObject().field("ok", true).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/mapping/create/HttpCreateMappingAction.java, +                        channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", t.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/count/HttpCountAction.java, +                channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", e.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/JsonThrowableHttpResponse.java, +import static org.elasticsearch.util.json.JsonBuilder.*;, +        JsonBuilder builder = jsonBuilder().prettyPrint(), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/create/HttpCreateIndexAction.java, +                        channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", t.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/delete/HttpDeleteIndexAction.java, +import static org.elasticsearch.util.json.JsonBuilder.*;, +                    channel.sendResponse(new JsonHttpResponse(request, OK, jsonBuilder().startObject().field("ok", true).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/mapping/create/HttpCreateMappingAction.java, +                        channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", t.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/count/HttpCountAction.java, +                channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", e.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/deletebyquery/HttpDeleteByQueryAction.java, +                channel.sendResponse(new JsonHttpResponse(request, PRECONDITION_FAILED, JsonBuilder.jsonBuilder().startObject().field("error", e.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/JsonThrowableHttpResponse.java, +import static org.elasticsearch.util.json.JsonBuilder.*;, +        JsonBuilder builder = jsonBuilder().prettyPrint(), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/create/HttpCreateIndexAction.java, +                        channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", t.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/delete/HttpDeleteIndexAction.java, +import static org.elasticsearch.util.json.JsonBuilder.*;, +                    channel.sendResponse(new JsonHttpResponse(request, OK, jsonBuilder().startObject().field("ok", true).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/mapping/create/HttpCreateMappingAction.java, +                        channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", t.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/count/HttpCountAction.java, +                channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", e.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/deletebyquery/HttpDeleteByQueryAction.java, +                channel.sendResponse(new JsonHttpResponse(request, PRECONDITION_FAILED, JsonBuilder.jsonBuilder().startObject().field("error", e.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/index/HttpIndexAction.java, +                    channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", "opType [" + sOpType + "] not allowed, either [index] or [create] are allowed").endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/JsonThrowableHttpResponse.java, +import static org.elasticsearch.util.json.JsonBuilder.*;, +        JsonBuilder builder = jsonBuilder().prettyPrint(), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/create/HttpCreateIndexAction.java, +                        channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", t.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/delete/HttpDeleteIndexAction.java, +import static org.elasticsearch.util.json.JsonBuilder.*;, +                    channel.sendResponse(new JsonHttpResponse(request, OK, jsonBuilder().startObject().field("ok", true).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/mapping/create/HttpCreateMappingAction.java, +                        channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", t.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/count/HttpCountAction.java, +                channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", e.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/deletebyquery/HttpDeleteByQueryAction.java, +                channel.sendResponse(new JsonHttpResponse(request, PRECONDITION_FAILED, JsonBuilder.jsonBuilder().startObject().field("error", e.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/index/HttpIndexAction.java, +                    channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", "opType [" + sOpType + "] not allowed, either [index] or [create] are allowed").endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/search/HttpSearchAction.java, +                channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", e.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/JsonThrowableHttpResponse.java, +import static org.elasticsearch.util.json.JsonBuilder.*;, +        JsonBuilder builder = jsonBuilder().prettyPrint(), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/create/HttpCreateIndexAction.java, +                        channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", t.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/delete/HttpDeleteIndexAction.java, +import static org.elasticsearch.util.json.JsonBuilder.*;, +                    channel.sendResponse(new JsonHttpResponse(request, OK, jsonBuilder().startObject().field("ok", true).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/admin/indices/mapping/create/HttpCreateMappingAction.java, +                        channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", t.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/count/HttpCountAction.java, +                channel.sendResponse(new JsonHttpResponse(request, BAD_REQUEST, JsonBuilder.jsonBuilder().startObject().field("error", e.getMessage()).endObject()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/http/action/deletebyquery/HttpDeleteByQueryAction.java, +                channel.sendResponse(new JsonHttpResponse(request, PRECONDITION_FAILED, JsonBuilder.jsonBuilder().startObject().field("error", e.getMessage()).endObject()));]