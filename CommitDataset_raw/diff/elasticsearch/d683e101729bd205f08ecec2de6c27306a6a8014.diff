[+++ b/core/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +import org.elasticsearch.index.query.QueryShardException;, +        if (numericType() != null) {, +            throw new QueryShardException(context, "Cannot use regular expression to filter numeric field [" + names.fullName + "]");, +        }, +, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +import org.elasticsearch.index.query.QueryShardException;, +        if (numericType() != null) {, +            throw new QueryShardException(context, "Cannot use regular expression to filter numeric field [" + names.fullName + "]");, +        }, +, +++ b/core/src/test/java/org/elasticsearch/search/simple/SimpleSearchIT.java, +import static org.hamcrest.Matchers.equalTo;, +    public void testQueryNumericFieldWithRegex() throws Exception {, +        createIndex("idx");, +        indexRandom(true, client().prepareIndex("idx", "type").setSource("num", 34));, +        , +        try {, +            client().prepareSearch("idx").setQuery(QueryBuilders.regexpQuery("num", "34")).get();, +            fail("SearchPhaseExecutionException should have been thrown");, +        } catch (SearchPhaseExecutionException ex) {, +            assertThat(ex.getCause().getCause().getMessage(), equalTo("Cannot use regular expression to filter numeric field [num]"));, +        }, +    }, +]