[+++ b/CONTRIBUTING.md, +* Don't worry too much about imports.  Try not to change the order but don't worry about fighting your IDE to stop it from switching from * imports to specific imports or from specific to * imports., +++ b/CONTRIBUTING.md, +* Don't worry too much about imports.  Try not to change the order but don't worry about fighting your IDE to stop it from switching from * imports to specific imports or from specific to * imports., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +, +        inputs.property("excludes", filesFilter.excludes), +        inputs.property("rules", patterns), +        filesFilter.exclude(excludes), +++ b/CONTRIBUTING.md, +* Don't worry too much about imports.  Try not to change the order but don't worry about fighting your IDE to stop it from switching from * imports to specific imports or from specific to * imports., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +, +        inputs.property("excludes", filesFilter.excludes), +        inputs.property("rules", patterns), +        filesFilter.exclude(excludes), +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +, +java.util.Collections#shuffle(java.util.List) @ Use java.util.Collections#shuffle(java.util.List, java.util.Random) with a reproducible source of randomness, +java.util.Random#<init>() @ Use org.elasticsearch.common.random.Randomness#create for reproducible sources of randomness, +++ b/CONTRIBUTING.md, +* Don't worry too much about imports.  Try not to change the order but don't worry about fighting your IDE to stop it from switching from * imports to specific imports or from specific to * imports., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +, +        inputs.property("excludes", filesFilter.excludes), +        inputs.property("rules", patterns), +        filesFilter.exclude(excludes), +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +, +java.util.Collections#shuffle(java.util.List) @ Use java.util.Collections#shuffle(java.util.List, java.util.Random) with a reproducible source of randomness, +java.util.Random#<init>() @ Use org.elasticsearch.common.random.Randomness#create for reproducible sources of randomness, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +++ b/CONTRIBUTING.md, +* Don't worry too much about imports.  Try not to change the order but don't worry about fighting your IDE to stop it from switching from * imports to specific imports or from specific to * imports., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +, +        inputs.property("excludes", filesFilter.excludes), +        inputs.property("rules", patterns), +        filesFilter.exclude(excludes), +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +, +java.util.Collections#shuffle(java.util.List) @ Use java.util.Collections#shuffle(java.util.List, java.util.Random) with a reproducible source of randomness, +java.util.Random#<init>() @ Use org.elasticsearch.common.random.Randomness#create for reproducible sources of randomness, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +++ /dev/null, +++ b/CONTRIBUTING.md, +* Don't worry too much about imports.  Try not to change the order but don't worry about fighting your IDE to stop it from switching from * imports to specific imports or from specific to * imports., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +, +        inputs.property("excludes", filesFilter.excludes), +        inputs.property("rules", patterns), +        filesFilter.exclude(excludes), +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +, +java.util.Collections#shuffle(java.util.List) @ Use java.util.Collections#shuffle(java.util.List, java.util.Random) with a reproducible source of randomness, +java.util.Random#<init>() @ Use org.elasticsearch.common.random.Randomness#create for reproducible sources of randomness, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +import org.elasticsearch.common.Randomness;, +import java.util.*;, +            Randomness.shuffle(unassigned);, +++ b/CONTRIBUTING.md, +* Don't worry too much about imports.  Try not to change the order but don't worry about fighting your IDE to stop it from switching from * imports to specific imports or from specific to * imports., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +, +        inputs.property("excludes", filesFilter.excludes), +        inputs.property("rules", patterns), +        filesFilter.exclude(excludes), +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +, +java.util.Collections#shuffle(java.util.List) @ Use java.util.Collections#shuffle(java.util.List, java.util.Random) with a reproducible source of randomness, +java.util.Random#<init>() @ Use org.elasticsearch.common.random.Randomness#create for reproducible sources of randomness, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +import org.elasticsearch.common.Randomness;, +import java.util.*;, +            Randomness.shuffle(unassigned);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +import org.elasticsearch.common.Randomness;, +import java.util.*;, +++ b/CONTRIBUTING.md, +* Don't worry too much about imports.  Try not to change the order but don't worry about fighting your IDE to stop it from switching from * imports to specific imports or from specific to * imports., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +, +        inputs.property("excludes", filesFilter.excludes), +        inputs.property("rules", patterns), +        filesFilter.exclude(excludes), +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +, +java.util.Collections#shuffle(java.util.List) @ Use java.util.Collections#shuffle(java.util.List, java.util.Random) with a reproducible source of randomness, +java.util.Random#<init>() @ Use org.elasticsearch.common.random.Randomness#create for reproducible sources of randomness, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +import org.elasticsearch.common.Randomness;, +import java.util.*;, +            Randomness.shuffle(unassigned);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java]