[+++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final boolean REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT = true;, +    public static final boolean REST_EXCEPTION_SKIP_CAUSE_DEFAULT = false;, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final boolean REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT = true;, +    public static final boolean REST_EXCEPTION_SKIP_CAUSE_DEFAULT = false;, +++ b/core/src/main/java/org/elasticsearch/action/ActionRequestValidationException.java, +import org.elasticsearch.common.ValidationException;, +public class ActionRequestValidationException extends ValidationException {, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final boolean REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT = true;, +    public static final boolean REST_EXCEPTION_SKIP_CAUSE_DEFAULT = false;, +++ b/core/src/main/java/org/elasticsearch/action/ActionRequestValidationException.java, +import org.elasticsearch.common.ValidationException;, +public class ActionRequestValidationException extends ValidationException {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JarHell.java, +import java.io.ByteArrayInputStream;, +import java.util.*;, +            checkVersionFormat(targetVersion);, +    public static void checkVersionFormat(String targetVersion) {, +        if (!JavaVersion.isValid(targetVersion)) {, +            throw new IllegalStateException(, +                    String.format(, +                            Locale.ROOT,, +                            "version string must be a sequence of nonnegative decimal integers separated by \".\"'s and may have leading zeros but was %s",, +                            targetVersion, +                    ), +            );, +        }, +    }, +, +        JavaVersion version = JavaVersion.parse(targetVersion);, +        if (JavaVersion.current().compareTo(version) < 0) {, +            throw new IllegalStateException(, +                    String.format(, +                            Locale.ROOT,, +                            "%s requires Java %s:, your system: %s",, +                            resource,, +                            targetVersion,, +                            JavaVersion.current().toString(), +                    ), +            );, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final boolean REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT = true;, +    public static final boolean REST_EXCEPTION_SKIP_CAUSE_DEFAULT = false;, +++ b/core/src/main/java/org/elasticsearch/action/ActionRequestValidationException.java, +import org.elasticsearch.common.ValidationException;, +public class ActionRequestValidationException extends ValidationException {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JarHell.java, +import java.io.ByteArrayInputStream;, +import java.util.*;, +            checkVersionFormat(targetVersion);, +    public static void checkVersionFormat(String targetVersion) {, +        if (!JavaVersion.isValid(targetVersion)) {, +            throw new IllegalStateException(, +                    String.format(, +                            Locale.ROOT,, +                            "version string must be a sequence of nonnegative decimal integers separated by \".\"'s and may have leading zeros but was %s",, +                            targetVersion, +                    ), +            );, +        }, +    }, +, +        JavaVersion version = JavaVersion.parse(targetVersion);, +        if (JavaVersion.current().compareTo(version) < 0) {, +            throw new IllegalStateException(, +                    String.format(, +                            Locale.ROOT,, +                            "%s requires Java %s:, your system: %s",, +                            resource,, +                            targetVersion,, +                            JavaVersion.current().toString(), +                    ), +            );, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JavaVersion.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.bootstrap;, +, +import org.elasticsearch.common.Strings;, +, +import java.util.ArrayList;]