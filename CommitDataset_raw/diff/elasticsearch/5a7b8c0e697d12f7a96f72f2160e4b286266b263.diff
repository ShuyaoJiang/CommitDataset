[+++ b/.ci/java-versions.properties, +++ b/.ci/java-versions.properties, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/.ci/java-versions.properties, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ /dev/null, +++ b/.ci/java-versions.properties, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ /dev/null, +++ /dev/null, +++ b/.ci/java-versions.properties, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ /dev/null, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +    static Request sourceExists(GetRequest getRequest) {, +        Request request = new Request(HttpHead.METHOD_NAME, endpoint(getRequest.index(), getRequest.type(), getRequest.id(), "_source"));, +, +        Params parameters = new Params(request);, +        parameters.withPreference(getRequest.preference());, +        parameters.withRouting(getRequest.routing());, +        parameters.withRefresh(getRequest.refresh());, +        parameters.withRealtime(getRequest.realtime());, +        // Version params are not currently supported by the source exists API so are not passed, +        return request;, +    }    , +, +++ b/.ci/java-versions.properties, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ /dev/null, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +    static Request sourceExists(GetRequest getRequest) {, +        Request request = new Request(HttpHead.METHOD_NAME, endpoint(getRequest.index(), getRequest.type(), getRequest.id(), "_source"));, +, +        Params parameters = new Params(request);, +        parameters.withPreference(getRequest.preference());, +        parameters.withRouting(getRequest.routing());, +        parameters.withRefresh(getRequest.refresh());, +        parameters.withRealtime(getRequest.realtime());, +        // Version params are not currently supported by the source exists API so are not passed, +        return request;, +    }    , +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +     * Checks for the existence of a document with a "_source" field. Returns true if it exists, false otherwise., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-get.html#_source">Source exists API , +     * on elastic.co</a>, +     * @param getRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return <code>true</code> if the document and _source field exists, <code>false</code> otherwise, +     * @throws IOException in case there is a problem sending the request, +     */, +    public boolean existsSource(GetRequest getRequest, RequestOptions options) throws IOException {, +        return performRequest(getRequest, RequestConverters::sourceExists, options, RestHighLevelClient::convertExistsResponse, emptySet());, +    }     , +    , +    /**, +     * Asynchronously checks for the existence of a document with a "_source" field. Returns true if it exists, false otherwise., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-get.html#_source">Source exists API , +     * on elastic.co</a>, +     * @param getRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public final void existsSourceAsync(GetRequest getRequest, RequestOptions options, ActionListener<Boolean> listener) {, +        performRequestAsync(getRequest, RequestConverters::sourceExists, options, RestHighLevelClient::convertExistsResponse, listener,, +                emptySet());, +    }    , +    , +    /**, +++ b/.ci/java-versions.properties, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ /dev/null, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +    static Request sourceExists(GetRequest getRequest) {, +        Request request = new Request(HttpHead.METHOD_NAME, endpoint(getRequest.index(), getRequest.type(), getRequest.id(), "_source"));, +, +        Params parameters = new Params(request);, +        parameters.withPreference(getRequest.preference());, +        parameters.withRouting(getRequest.routing());, +        parameters.withRefresh(getRequest.refresh());, +        parameters.withRealtime(getRequest.realtime());, +        // Version params are not currently supported by the source exists API so are not passed, +        return request;, +    }    , +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +     * Checks for the existence of a document with a "_source" field. Returns true if it exists, false otherwise., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-get.html#_source">Source exists API , +     * on elastic.co</a>, +     * @param getRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return <code>true</code> if the document and _source field exists, <code>false</code> otherwise, +     * @throws IOException in case there is a problem sending the request, +     */, +    public boolean existsSource(GetRequest getRequest, RequestOptions options) throws IOException {, +        return performRequest(getRequest, RequestConverters::sourceExists, options, RestHighLevelClient::convertExistsResponse, emptySet());, +    }     ]