[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/logging/PrefixLoggerAdapter.java, +    public final boolean isTraceEnabled() {, +    public final void trace(String s) {, +    public final void trace(String s, Object o) {, +    public final void trace(String s, Object o, Object o1) {, +    public final void trace(String s, Object[] objects) {, +    public final void trace(String s, Throwable throwable) {, +    public final boolean isTraceEnabled(Marker marker) {, +    public final void trace(Marker marker, String s) {, +    public final void trace(Marker marker, String s, Object o) {, +    public final void trace(Marker marker, String s, Object o, Object o1) {, +    public final void trace(Marker marker, String s, Object[] objects) {, +    public final void trace(Marker marker, String s, Throwable throwable) {, +    public final boolean isDebugEnabled() {, +    public final void debug(String s) {, +    public final void debug(String s, Object o) {, +    public final void debug(String s, Object o, Object o1) {, +    public final void debug(String s, Object[] objects) {, +    public final void debug(String s, Throwable throwable) {, +    public final boolean isDebugEnabled(Marker marker) {, +    public final void debug(Marker marker, String s) {, +    public final void debug(Marker marker, String s, Object o) {, +    public final void debug(Marker marker, String s, Object o, Object o1) {, +    public final void debug(Marker marker, String s, Object[] objects) {, +    public final void debug(Marker marker, String s, Throwable throwable) {, +    public final boolean isInfoEnabled() {, +    public final void info(String s) {, +    public final void info(String s, Object o) {, +    public final void info(String s, Object o, Object o1) {, +    public final void info(String s, Object[] objects) {, +    public final void info(String s, Throwable throwable) {, +    public final boolean isInfoEnabled(Marker marker) {, +    public final void info(Marker marker, String s) {, +    public final void info(Marker marker, String s, Object o) {, +    public final void info(Marker marker, String s, Object o, Object o1) {, +    public final void info(Marker marker, String s, Object[] objects) {, +    public final void info(Marker marker, String s, Throwable throwable) {, +    public final boolean isWarnEnabled() {, +    public final void warn(String s) {, +    public final void warn(String s, Object o) {, +    public final void warn(String s, Object[] objects) {, +    public final void warn(String s, Object o, Object o1) {, +    public final void warn(String s, Throwable throwable) {, +    public final boolean isWarnEnabled(Marker marker) {, +    public final void warn(Marker marker, String s) {, +    public final void warn(Marker marker, String s, Object o) {, +    public final void warn(Marker marker, String s, Object o, Object o1) {, +    public final void warn(Marker marker, String s, Object[] objects) {, +    public final void warn(Marker marker, String s, Throwable throwable) {, +    public final boolean isErrorEnabled() {, +    public final void error(String s) {, +    public final void error(String s, Object o) {, +    public final void error(String s, Object o, Object o1) {, +    public final void error(String s, Object[] objects) {, +    public final void error(String s, Throwable throwable) {, +    public final boolean isErrorEnabled(Marker marker) {, +    public final void error(Marker marker, String s) {, +    public final void error(Marker marker, String s, Object o) {, +    public final void error(Marker marker, String s, Object o, Object o1) {, +    public final void error(Marker marker, String s, Object[] objects) {, +    public final void error(Marker marker, String s, Throwable throwable) {]