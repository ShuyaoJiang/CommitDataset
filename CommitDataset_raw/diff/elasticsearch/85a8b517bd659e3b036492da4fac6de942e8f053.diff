[+++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/benchmark/README.md, +1. Build `client-benchmark-noop-api-plugin` with `./gradlew :client:client-benchmark-noop-api-plugin:assemble`, +2. Install it on the target host with `bin/elasticsearch-plugin install file:///full/path/to/client-benchmark-noop-api-plugin.zip`., +./gradlew -p client/benchmark run --args ' rest search localhost geonames {"query":{"match_phrase":{"name":"Sankt Georgen"}}} 500,1000,1100,1200', +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/benchmark/README.md, +1. Build `client-benchmark-noop-api-plugin` with `./gradlew :client:client-benchmark-noop-api-plugin:assemble`, +2. Install it on the target host with `bin/elasticsearch-plugin install file:///full/path/to/client-benchmark-noop-api-plugin.zip`., +./gradlew -p client/benchmark run --args ' rest search localhost geonames {"query":{"match_phrase":{"name":"Sankt Georgen"}}} 500,1000,1100,1200', +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityRequestConverters.java, +            .addPathPart(putUserRequest.getUser().getUsername()), +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/benchmark/README.md, +1. Build `client-benchmark-noop-api-plugin` with `./gradlew :client:client-benchmark-noop-api-plugin:assemble`, +2. Install it on the target host with `bin/elasticsearch-plugin install file:///full/path/to/client-benchmark-noop-api-plugin.zip`., +./gradlew -p client/benchmark run --args ' rest search localhost geonames {"query":{"match_phrase":{"name":"Sankt Georgen"}}} 500,1000,1100,1200', +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityRequestConverters.java, +            .addPathPart(putUserRequest.getUser().getUsername()), +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/security/PutUserRequest.java, +import org.elasticsearch.client.security.user.User;, +import org.elasticsearch.common.Nullable;, +    private final User user;, +    private final @Nullable char[] password;, +     * @param user the user to be created or updated, +    public PutUserRequest(User user, @Nullable char[] password, boolean enabled, @Nullable RefreshPolicy refreshPolicy) {, +        this.user = Objects.requireNonNull(user, "user is required, cannot be null");, +    public User getUser() {, +        return user;, +    public @Nullable char[] getPassword() {, +        final PutUserRequest that = (PutUserRequest) o;, +        return Objects.equals(user, that.user), +                && Arrays.equals(password, that.password), +                && enabled == that.enabled, +                && refreshPolicy == that.refreshPolicy;, +        int result = Objects.hash(user, enabled, refreshPolicy);, +        if (user.getMetadata() != null && user.getMetadata().keySet().stream().anyMatch(s -> s.startsWith("_"))) {, +            validationException.addValidationError("user metadata keys may not start with [_]");, +        builder.field("username", user.getUsername());, +        builder.field("roles", user.getRoles());, +        if (user.getFullName() != null) {, +            builder.field("full_name", user.getFullName());, +        if (user.getEmail() != null) {, +            builder.field("email", user.getEmail());, +        builder.field("metadata", user.getMetadata());, +        builder.field("enabled", enabled);, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/benchmark/README.md, +1. Build `client-benchmark-noop-api-plugin` with `./gradlew :client:client-benchmark-noop-api-plugin:assemble`, +2. Install it on the target host with `bin/elasticsearch-plugin install file:///full/path/to/client-benchmark-noop-api-plugin.zip`., +./gradlew -p client/benchmark run --args ' rest search localhost geonames {"query":{"match_phrase":{"name":"Sankt Georgen"}}} 500,1000,1100,1200', +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityRequestConverters.java, +            .addPathPart(putUserRequest.getUser().getUsername()), +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/security/PutUserRequest.java, +import org.elasticsearch.client.security.user.User;, +import org.elasticsearch.common.Nullable;, +    private final User user;, +    private final @Nullable char[] password;, +     * @param user the user to be created or updated, +    public PutUserRequest(User user, @Nullable char[] password, boolean enabled, @Nullable RefreshPolicy refreshPolicy) {, +        this.user = Objects.requireNonNull(user, "user is required, cannot be null");, +    public User getUser() {, +        return user;, +    public @Nullable char[] getPassword() {, +        final PutUserRequest that = (PutUserRequest) o;, +        return Objects.equals(user, that.user), +                && Arrays.equals(password, that.password), +                && enabled == that.enabled, +                && refreshPolicy == that.refreshPolicy;, +        int result = Objects.hash(user, enabled, refreshPolicy);, +        if (user.getMetadata() != null && user.getMetadata().keySet().stream().anyMatch(s -> s.startsWith("_"))) {, +            validationException.addValidationError("user metadata keys may not start with [_]");, +        builder.field("username", user.getUsername());, +        builder.field("roles", user.getRoles());, +        if (user.getFullName() != null) {, +            builder.field("full_name", user.getFullName());, +        if (user.getEmail() != null) {, +            builder.field("email", user.getEmail());, +        builder.field("metadata", user.getMetadata());, +        builder.field("enabled", enabled);, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/security/user/User.java]