[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/terms/TermsRequest.java, +     * The lower bound term from which the iteration will start.  Defaults to start from the, +     * The lower bound term from which the iteration will start.  Defaults to start from the, +     * Greater than (like setting from with fromIInclusive set to <tt>false</tt>)., +     */, +    public TermsRequest gt(Object from) {, +        from(from);, +        fromInclusive(false);, +        return this;, +    }, +, +    /**, +     * Greater/equal than  (like setting from with fromInclusive set to <tt>true</tt>)., +     */, +    public TermsRequest gte(Object from) {, +        from(from);, +        fromInclusive(true);, +        return this;, +    }, +, +    /**, +     * Lower then (like setting to with toInclusive set to <tt>false</tt>), +     */, +    public TermsRequest lt(Object to) {, +        to(to);, +        toInclusive(false);, +        return this;, +    }, +, +    /**, +     * Lower/equal then (like setting to with toInclusive set to <tt>false</tt>), +     */, +    public TermsRequest lte(Object to) {, +        to(to);, +        toInclusive(true);, +        return this;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/terms/TermsRequest.java, +     * The lower bound term from which the iteration will start.  Defaults to start from the, +     * The lower bound term from which the iteration will start.  Defaults to start from the, +     * Greater than (like setting from with fromIInclusive set to <tt>false</tt>)., +     */, +    public TermsRequest gt(Object from) {, +        from(from);, +        fromInclusive(false);, +        return this;, +    }, +, +    /**, +     * Greater/equal than  (like setting from with fromInclusive set to <tt>true</tt>)., +     */, +    public TermsRequest gte(Object from) {, +        from(from);, +        fromInclusive(true);, +        return this;, +    }, +, +    /**, +     * Lower then (like setting to with toInclusive set to <tt>false</tt>), +     */, +    public TermsRequest lt(Object to) {, +        to(to);, +        toInclusive(false);, +        return this;, +    }, +, +    /**, +     * Lower/equal then (like setting to with toInclusive set to <tt>false</tt>), +     */, +    public TermsRequest lte(Object to) {, +        to(to);, +        toInclusive(true);, +        return this;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/terms/RestTermsAction.java, +, +            Object temp = request.param("gt");, +            if (temp != null) {, +                termsRequest.gt(temp);, +            } else {, +                temp = request.param("gte");, +                if (temp != null) {, +                    termsRequest.gte(temp);, +                }, +            }, +            temp = request.param("lt");, +            if (temp != null) {, +                termsRequest.lt(temp);, +            } else {, +                temp = request.param("lte");, +                if (temp != null) {, +                    termsRequest.lte(temp);, +                }, +            }, +]