[+++ b/docs/reference/search/aggregations/bucket/tophits-aggregation.asciidoc, +* `from` - The offset from the first result you want to fetch., +++ b/docs/reference/search/aggregations/bucket/tophits-aggregation.asciidoc, +* `from` - The offset from the first result you want to fetch., +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java, +    private int from;, +    public InternalTopHits(String name, int from, int size, Sort sort, TopDocs topDocs, InternalSearchHits searchHits) {, +        this.from = from;, +            TopDocs reducedTopDocs = TopDocs.merge(sort, from, size, shardDocs);, +        from = in.readVInt();, +        out.writeVInt(from);, +++ b/docs/reference/search/aggregations/bucket/tophits-aggregation.asciidoc, +* `from` - The offset from the first result you want to fetch., +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java, +    private int from;, +    public InternalTopHits(String name, int from, int size, Sort sort, TopDocs topDocs, InternalSearchHits searchHits) {, +        this.from = from;, +            TopDocs reducedTopDocs = TopDocs.merge(sort, from, size, shardDocs);, +        from = in.readVInt();, +        out.writeVInt(from);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHits.java, + * Accumulation of the most relevant hits for a bucket this aggregation falls into., +    /**, +     * @return The top matching hits for the bucket, +     */, +++ b/docs/reference/search/aggregations/bucket/tophits-aggregation.asciidoc, +* `from` - The offset from the first result you want to fetch., +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java, +    private int from;, +    public InternalTopHits(String name, int from, int size, Sort sort, TopDocs topDocs, InternalSearchHits searchHits) {, +        this.from = from;, +            TopDocs reducedTopDocs = TopDocs.merge(sort, from, size, shardDocs);, +        from = in.readVInt();, +        out.writeVInt(from);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHits.java, + * Accumulation of the most relevant hits for a bucket this aggregation falls into., +    /**, +     * @return The top matching hits for the bucket, +     */, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsAggregator.java, +            return new InternalTopHits(name, topHitsContext.from(), topHitsContext.size(), topHitsContext.sort(), topDocs, fetchResult.hits());, +            int topN = topHitsContext.from() + topHitsContext.size();, +                    topDocsCollector = sort != null ? TopFieldCollector.create(sort, topN, true, topHitsContext.trackScores(), true, false) : TopScoreDocCollector.create(topN, false), +++ b/docs/reference/search/aggregations/bucket/tophits-aggregation.asciidoc, +* `from` - The offset from the first result you want to fetch., +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java, +    private int from;, +    public InternalTopHits(String name, int from, int size, Sort sort, TopDocs topDocs, InternalSearchHits searchHits) {, +        this.from = from;, +            TopDocs reducedTopDocs = TopDocs.merge(sort, from, size, shardDocs);, +        from = in.readVInt();, +        out.writeVInt(from);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHits.java, + * Accumulation of the most relevant hits for a bucket this aggregation falls into., +    /**, +     * @return The top matching hits for the bucket, +     */, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsAggregator.java, +            return new InternalTopHits(name, topHitsContext.from(), topHitsContext.size(), topHitsContext.sort(), topDocs, fetchResult.hits());, +            int topN = topHitsContext.from() + topHitsContext.size();, +                    topDocsCollector = sort != null ? TopFieldCollector.create(sort, topN, true, topHitsContext.trackScores(), true, false) : TopScoreDocCollector.create(topN, false), +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsBuilder.java, +     * The index to start to return hits from. Defaults to <tt>0</tt>., +     */, +    public TopHitsBuilder setFrom(int from) {, +        sourceBuilder().from(from);, +        return this;, +    }, +, +, +    /**, +++ b/docs/reference/search/aggregations/bucket/tophits-aggregation.asciidoc, +* `from` - The offset from the first result you want to fetch., +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java, +    private int from;, +    public InternalTopHits(String name, int from, int size, Sort sort, TopDocs topDocs, InternalSearchHits searchHits) {, +        this.from = from;, +            TopDocs reducedTopDocs = TopDocs.merge(sort, from, size, shardDocs);, +        from = in.readVInt();, +        out.writeVInt(from);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHits.java, + * Accumulation of the most relevant hits for a bucket this aggregation falls into., +    /**, +     * @return The top matching hits for the bucket, +     */, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsAggregator.java, +            return new InternalTopHits(name, topHitsContext.from(), topHitsContext.size(), topHitsContext.sort(), topDocs, fetchResult.hits());, +            int topN = topHitsContext.from() + topHitsContext.size();, +                    topDocsCollector = sort != null ? TopFieldCollector.create(sort, topN, true, topHitsContext.trackScores(), true, false) : TopScoreDocCollector.create(topN, false), +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsBuilder.java, +     * The index to start to return hits from. Defaults to <tt>0</tt>., +     */, +    public TopHitsBuilder setFrom(int from) {, +        sourceBuilder().from(from);, +        return this;, +    }, +, +, +    /**, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsContext.java]