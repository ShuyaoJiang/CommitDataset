[+++ b/core/src/main/java/org/elasticsearch/script/Script.java, +                    //this is really for search templates, that need to be converted to json format, +                    XContentBuilder builder = XContentFactory.jsonBuilder();, +                    idOrCode = builder.copyCurrentStructure(parser).string();, +                    options.put(CONTENT_TYPE_OPTION, XContentType.JSON.mediaType());, +++ b/core/src/main/java/org/elasticsearch/script/Script.java, +                    //this is really for search templates, that need to be converted to json format, +                    XContentBuilder builder = XContentFactory.jsonBuilder();, +                    idOrCode = builder.copyCurrentStructure(parser).string();, +                    options.put(CONTENT_TYPE_OPTION, XContentType.JSON.mediaType());, +++ b/core/src/main/java/org/elasticsearch/script/StoredScriptSource.java, +                    //this is really for search templates, that need to be converted to json format, +                    XContentBuilder builder = XContentFactory.jsonBuilder();, +                    code = builder.copyCurrentStructure(parser).string();, +                    options.put(Script.CONTENT_TYPE_OPTION, XContentType.JSON.mediaType());, +                        //this is really for search templates, that need to be converted to json format, +                        try (XContentBuilder builder = XContentFactory.jsonBuilder()) {, +                                Collections.singletonMap(Script.CONTENT_TYPE_OPTION, XContentType.JSON.mediaType()));, +                            Collections.singletonMap(Script.CONTENT_TYPE_OPTION, XContentType.JSON.mediaType()));, +                try (XContentBuilder builder = XContentFactory.jsonBuilder()) {, +                        Collections.singletonMap(Script.CONTENT_TYPE_OPTION, XContentType.JSON.mediaType()));, +++ b/core/src/main/java/org/elasticsearch/script/Script.java, +                    //this is really for search templates, that need to be converted to json format, +                    XContentBuilder builder = XContentFactory.jsonBuilder();, +                    idOrCode = builder.copyCurrentStructure(parser).string();, +                    options.put(CONTENT_TYPE_OPTION, XContentType.JSON.mediaType());, +++ b/core/src/main/java/org/elasticsearch/script/StoredScriptSource.java, +                    //this is really for search templates, that need to be converted to json format, +                    XContentBuilder builder = XContentFactory.jsonBuilder();, +                    code = builder.copyCurrentStructure(parser).string();, +                    options.put(Script.CONTENT_TYPE_OPTION, XContentType.JSON.mediaType());, +                        //this is really for search templates, that need to be converted to json format, +                        try (XContentBuilder builder = XContentFactory.jsonBuilder()) {, +                                Collections.singletonMap(Script.CONTENT_TYPE_OPTION, XContentType.JSON.mediaType()));, +                            Collections.singletonMap(Script.CONTENT_TYPE_OPTION, XContentType.JSON.mediaType()));, +                try (XContentBuilder builder = XContentFactory.jsonBuilder()) {, +                        Collections.singletonMap(Script.CONTENT_TYPE_OPTION, XContentType.JSON.mediaType()));, +++ b/core/src/test/java/org/elasticsearch/script/ScriptTests.java, +import org.elasticsearch.common.xcontent.XContentFactory;, +        Script expectedScript = createScript();, +        try (XContentBuilder builder = XContentFactory.contentBuilder(randomFrom(XContentType.values()))) {, +        Script expectedScript = createScript();, +    private Script createScript() throws IOException {, +            try (XContentBuilder builder = XContentFactory.jsonBuilder()) {, +            scriptType == ScriptType.INLINE ?, +                    Collections.singletonMap(Script.CONTENT_TYPE_OPTION, XContentType.JSON.mediaType()) : null, params, +++ b/core/src/main/java/org/elasticsearch/script/Script.java, +                    //this is really for search templates, that need to be converted to json format, +                    XContentBuilder builder = XContentFactory.jsonBuilder();, +                    idOrCode = builder.copyCurrentStructure(parser).string();, +                    options.put(CONTENT_TYPE_OPTION, XContentType.JSON.mediaType());, +++ b/core/src/main/java/org/elasticsearch/script/StoredScriptSource.java, +                    //this is really for search templates, that need to be converted to json format, +                    XContentBuilder builder = XContentFactory.jsonBuilder();, +                    code = builder.copyCurrentStructure(parser).string();, +                    options.put(Script.CONTENT_TYPE_OPTION, XContentType.JSON.mediaType());, +                        //this is really for search templates, that need to be converted to json format, +                        try (XContentBuilder builder = XContentFactory.jsonBuilder()) {, +                                Collections.singletonMap(Script.CONTENT_TYPE_OPTION, XContentType.JSON.mediaType()));, +                            Collections.singletonMap(Script.CONTENT_TYPE_OPTION, XContentType.JSON.mediaType()));, +                try (XContentBuilder builder = XContentFactory.jsonBuilder()) {, +                        Collections.singletonMap(Script.CONTENT_TYPE_OPTION, XContentType.JSON.mediaType()));, +++ b/core/src/test/java/org/elasticsearch/script/ScriptTests.java, +import org.elasticsearch.common.xcontent.XContentFactory;, +        Script expectedScript = createScript();, +        try (XContentBuilder builder = XContentFactory.contentBuilder(randomFrom(XContentType.values()))) {, +        Script expectedScript = createScript();, +    private Script createScript() throws IOException {, +            try (XContentBuilder builder = XContentFactory.jsonBuilder()) {, +            scriptType == ScriptType.INLINE ?, +                    Collections.singletonMap(Script.CONTENT_TYPE_OPTION, XContentType.JSON.mediaType()) : null, params, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestSearchTemplateAction.java, +                //convert the template to json which is the only supported XContentType (see CustomMustacheFactory#createEncoder), +                try (XContentBuilder builder = XContentFactory.jsonBuilder()) {, +                    request.setScript(builder.copyCurrentStructure(parser).string());]