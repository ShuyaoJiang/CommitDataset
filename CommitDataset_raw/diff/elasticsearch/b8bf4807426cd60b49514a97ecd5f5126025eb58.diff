[+++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/rest/RestClientBenchmark.java, +import org.elasticsearch.client.Request;, +            Request request = new Request("POST", "/geonames/type/_noop_bulk");, +            request.setJsonEntity(bulkRequestBody.toString());, +                Response response = client.performRequest(request);, +            Request request = new Request("GET", endpoint);, +            request.setJsonEntity(source);, +                Response response = client.performRequest(request);, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/rest/RestClientBenchmark.java, +import org.elasticsearch.client.Request;, +            Request request = new Request("POST", "/geonames/type/_noop_bulk");, +            request.setJsonEntity(bulkRequestBody.toString());, +                Response response = client.performRequest(request);, +            Request request = new Request("GET", endpoint);, +            request.setJsonEntity(source);, +                Response response = client.performRequest(request);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorIT.java, +        Request request = new Request("PUT", "/test-ro");, +        request.setJsonEntity("{\n" +, +                "}");, +        Response response = client().performRequest(request);, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/rest/RestClientBenchmark.java, +import org.elasticsearch.client.Request;, +            Request request = new Request("POST", "/geonames/type/_noop_bulk");, +            request.setJsonEntity(bulkRequestBody.toString());, +                Response response = client.performRequest(request);, +            Request request = new Request("GET", endpoint);, +            request.setJsonEntity(source);, +                Response response = client.performRequest(request);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorIT.java, +        Request request = new Request("PUT", "/test-ro");, +        request.setJsonEntity("{\n" +, +                "}");, +        Response response = client().performRequest(request);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +        IndexRequest index = new IndexRequest("index", "type", "id");, +        index.source("{\"field1\":\"value1\",\"field2\":\"value2\"}", XContentType.JSON);, +        index.setRefreshPolicy(RefreshPolicy.IMMEDIATE);, +        highLevelClient().index(index);, +        IndexRequest index = new IndexRequest("index", "type", "id");, +        index.source(document, XContentType.JSON);, +        index.setRefreshPolicy(RefreshPolicy.IMMEDIATE);, +        highLevelClient().index(index);, +        BulkRequest bulk = new BulkRequest();, +        bulk.setRefreshPolicy(RefreshPolicy.IMMEDIATE);, +        IndexRequest index = new IndexRequest("index", "type", "id1");, +        index.source("{\"field\":\"value1\"}", XContentType.JSON);, +        bulk.add(index);, +        index = new IndexRequest("index", "type", "id2");, +        index.source("{\"field\":\"value2\"}", XContentType.JSON);, +        bulk.add(index);, +        highLevelClient().bulk(bulk);, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/rest/RestClientBenchmark.java, +import org.elasticsearch.client.Request;, +            Request request = new Request("POST", "/geonames/type/_noop_bulk");, +            request.setJsonEntity(bulkRequestBody.toString());, +                Response response = client.performRequest(request);, +            Request request = new Request("GET", endpoint);, +            request.setJsonEntity(source);, +                Response response = client.performRequest(request);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorIT.java, +        Request request = new Request("PUT", "/test-ro");, +        request.setJsonEntity("{\n" +, +                "}");, +        Response response = client().performRequest(request);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +        IndexRequest index = new IndexRequest("index", "type", "id");, +        index.source("{\"field1\":\"value1\",\"field2\":\"value2\"}", XContentType.JSON);, +        index.setRefreshPolicy(RefreshPolicy.IMMEDIATE);, +        highLevelClient().index(index);, +        IndexRequest index = new IndexRequest("index", "type", "id");, +        index.source(document, XContentType.JSON);, +        index.setRefreshPolicy(RefreshPolicy.IMMEDIATE);, +        highLevelClient().index(index);, +        BulkRequest bulk = new BulkRequest();, +        bulk.setRefreshPolicy(RefreshPolicy.IMMEDIATE);, +        IndexRequest index = new IndexRequest("index", "type", "id1");, +        index.source("{\"field\":\"value1\"}", XContentType.JSON);, +        bulk.add(index);, +        index = new IndexRequest("index", "type", "id2");, +        index.source("{\"field\":\"value2\"}", XContentType.JSON);, +        bulk.add(index);, +        highLevelClient().bulk(bulk);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java, +import org.elasticsearch.client.Request;, +import org.elasticsearch.common.xcontent.json.JsonXContent;, +            Request request = new Request("POST", "/_scripts/increment-field");, +            request.setJsonEntity(Strings.toString(JsonXContent.contentBuilder(), +                    .endObject()));, +            Response response = client().performRequest(request);, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/rest/RestClientBenchmark.java, +import org.elasticsearch.client.Request;, +            Request request = new Request("POST", "/geonames/type/_noop_bulk");, +            request.setJsonEntity(bulkRequestBody.toString());, +                Response response = client.performRequest(request);, +            Request request = new Request("GET", endpoint);, +            request.setJsonEntity(source);, +                Response response = client.performRequest(request);]