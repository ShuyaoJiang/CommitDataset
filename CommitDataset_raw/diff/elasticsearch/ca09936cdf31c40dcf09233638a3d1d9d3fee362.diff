[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MigrationClient.java, +import org.elasticsearch.client.migration.DeprecationInfoRequest;, +import org.elasticsearch.client.migration.DeprecationInfoResponse;, +, +    /**, +     * Get deprecation info for one or more indices, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public DeprecationInfoResponse getDeprecationInfo(DeprecationInfoRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, MigrationRequestConverters::getDeprecationInfo, options,, +            DeprecationInfoResponse::fromXContent, Collections.emptySet());, +    }, +, +    /**, +     * Asynchronously get deprecation info for one or more indices, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void getDeprecationInfoAsync(DeprecationInfoRequest request, RequestOptions options,, +                                        ActionListener<DeprecationInfoResponse> listener)  {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, MigrationRequestConverters::getDeprecationInfo, options,, +            DeprecationInfoResponse::fromXContent, listener, Collections.emptySet());, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MigrationClient.java, +import org.elasticsearch.client.migration.DeprecationInfoRequest;, +import org.elasticsearch.client.migration.DeprecationInfoResponse;, +, +    /**, +     * Get deprecation info for one or more indices, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public DeprecationInfoResponse getDeprecationInfo(DeprecationInfoRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, MigrationRequestConverters::getDeprecationInfo, options,, +            DeprecationInfoResponse::fromXContent, Collections.emptySet());, +    }, +, +    /**, +     * Asynchronously get deprecation info for one or more indices, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void getDeprecationInfoAsync(DeprecationInfoRequest request, RequestOptions options,, +                                        ActionListener<DeprecationInfoResponse> listener)  {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, MigrationRequestConverters::getDeprecationInfo, options,, +            DeprecationInfoResponse::fromXContent, listener, Collections.emptySet());, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MigrationRequestConverters.java, +import org.elasticsearch.client.migration.DeprecationInfoRequest;, +    static Request getDeprecationInfo(DeprecationInfoRequest deprecationInfoRequest) {, +        String endpoint = new RequestConverters.EndpointBuilder(), +            .addCommaSeparatedPathParts(deprecationInfoRequest.getIndices()), +            .addPathPartAsIs("_migration", "deprecations"), +            .build();, +, +        return new Request(HttpGet.METHOD_NAME, endpoint);, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MigrationClient.java, +import org.elasticsearch.client.migration.DeprecationInfoRequest;, +import org.elasticsearch.client.migration.DeprecationInfoResponse;, +, +    /**, +     * Get deprecation info for one or more indices, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public DeprecationInfoResponse getDeprecationInfo(DeprecationInfoRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, MigrationRequestConverters::getDeprecationInfo, options,, +            DeprecationInfoResponse::fromXContent, Collections.emptySet());, +    }, +, +    /**, +     * Asynchronously get deprecation info for one or more indices, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void getDeprecationInfoAsync(DeprecationInfoRequest request, RequestOptions options,, +                                        ActionListener<DeprecationInfoResponse> listener)  {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, MigrationRequestConverters::getDeprecationInfo, options,, +            DeprecationInfoResponse::fromXContent, listener, Collections.emptySet());, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MigrationRequestConverters.java, +import org.elasticsearch.client.migration.DeprecationInfoRequest;, +    static Request getDeprecationInfo(DeprecationInfoRequest deprecationInfoRequest) {, +        String endpoint = new RequestConverters.EndpointBuilder(), +            .addCommaSeparatedPathParts(deprecationInfoRequest.getIndices()), +            .addPathPartAsIs("_migration", "deprecations"), +            .build();, +]