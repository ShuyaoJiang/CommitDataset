[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/VersionCollection.groovy, +                    // caveat 0 - now dip back 2 versions to get the last supported snapshot version of the line, +                    Version highestMinor = getHighestPreviousMinor(currentVersion.major - 1), +                    maintenanceBugfixSnapshot = replaceAsSnapshot(highestMinor), +        return versionSet.headSet(Version.fromString("${nextMajorVersion}.0.0")).last(), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/VersionCollection.groovy, +                    // caveat 0 - now dip back 2 versions to get the last supported snapshot version of the line, +                    Version highestMinor = getHighestPreviousMinor(currentVersion.major - 1), +                    maintenanceBugfixSnapshot = replaceAsSnapshot(highestMinor), +        return versionSet.headSet(Version.fromString("${nextMajorVersion}.0.0")).last(), +++ b/buildSrc/src/test/groovy/org/elasticsearch/gradle/VersionCollectionTests.groovy, +    assertEquals(vc.maintenanceBugfixSnapshot, Version.fromString("5.2.1-SNAPSHOT")), +    assertEquals(vc.maintenanceBugfixSnapshot, Version.fromString("5.2.1-SNAPSHOT")), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/VersionCollection.groovy, +                    // caveat 0 - now dip back 2 versions to get the last supported snapshot version of the line, +                    Version highestMinor = getHighestPreviousMinor(currentVersion.major - 1), +                    maintenanceBugfixSnapshot = replaceAsSnapshot(highestMinor), +        return versionSet.headSet(Version.fromString("${nextMajorVersion}.0.0")).last(), +++ b/buildSrc/src/test/groovy/org/elasticsearch/gradle/VersionCollectionTests.groovy, +    assertEquals(vc.maintenanceBugfixSnapshot, Version.fromString("5.2.1-SNAPSHOT")), +    assertEquals(vc.maintenanceBugfixSnapshot, Version.fromString("5.2.1-SNAPSHOT")), +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/VersionCollection.groovy, +                    // caveat 0 - now dip back 2 versions to get the last supported snapshot version of the line, +                    Version highestMinor = getHighestPreviousMinor(currentVersion.major - 1), +                    maintenanceBugfixSnapshot = replaceAsSnapshot(highestMinor), +        return versionSet.headSet(Version.fromString("${nextMajorVersion}.0.0")).last(), +++ b/buildSrc/src/test/groovy/org/elasticsearch/gradle/VersionCollectionTests.groovy, +    assertEquals(vc.maintenanceBugfixSnapshot, Version.fromString("5.2.1-SNAPSHOT")), +    assertEquals(vc.maintenanceBugfixSnapshot, Version.fromString("5.2.1-SNAPSHOT")), +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1",, +                     "min_retained_seq_no": "0", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/VersionCollection.groovy, +                    // caveat 0 - now dip back 2 versions to get the last supported snapshot version of the line, +                    Version highestMinor = getHighestPreviousMinor(currentVersion.major - 1), +                    maintenanceBugfixSnapshot = replaceAsSnapshot(highestMinor), +        return versionSet.headSet(Version.fromString("${nextMajorVersion}.0.0")).last(), +++ b/buildSrc/src/test/groovy/org/elasticsearch/gradle/VersionCollectionTests.groovy, +    assertEquals(vc.maintenanceBugfixSnapshot, Version.fromString("5.2.1-SNAPSHOT")), +    assertEquals(vc.maintenanceBugfixSnapshot, Version.fromString("5.2.1-SNAPSHOT")), +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1",, +                     "min_retained_seq_no": "0", +++ b/modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisPluginTests.java, +                        VersionUtils.randomVersionBetween(random(), Version.V_5_0_0, Version.V_6_3_0)), +                        VersionUtils.randomVersionBetween(random(), Version.V_5_0_0, Version.V_6_3_0)), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/VersionCollection.groovy, +                    // caveat 0 - now dip back 2 versions to get the last supported snapshot version of the line, +                    Version highestMinor = getHighestPreviousMinor(currentVersion.major - 1), +                    maintenanceBugfixSnapshot = replaceAsSnapshot(highestMinor), +        return versionSet.headSet(Version.fromString("${nextMajorVersion}.0.0")).last(), +++ b/buildSrc/src/test/groovy/org/elasticsearch/gradle/VersionCollectionTests.groovy, +    assertEquals(vc.maintenanceBugfixSnapshot, Version.fromString("5.2.1-SNAPSHOT")), +    assertEquals(vc.maintenanceBugfixSnapshot, Version.fromString("5.2.1-SNAPSHOT")), +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1",, +                     "min_retained_seq_no": "0", +++ b/modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisPluginTests.java, +                        VersionUtils.randomVersionBetween(random(), Version.V_5_0_0, Version.V_6_3_0)), +                        VersionUtils.randomVersionBetween(random(), Version.V_5_0_0, Version.V_6_3_0)), +++ b/modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/HtmlStripCharFilterFactoryTests.java, +                        VersionUtils.randomVersionBetween(random(), Version.V_5_0_0, Version.V_6_2_4)), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/VersionCollection.groovy, +                    // caveat 0 - now dip back 2 versions to get the last supported snapshot version of the line, +                    Version highestMinor = getHighestPreviousMinor(currentVersion.major - 1), +                    maintenanceBugfixSnapshot = replaceAsSnapshot(highestMinor), +        return versionSet.headSet(Version.fromString("${nextMajorVersion}.0.0")).last(), +++ b/buildSrc/src/test/groovy/org/elasticsearch/gradle/VersionCollectionTests.groovy, +    assertEquals(vc.maintenanceBugfixSnapshot, Version.fromString("5.2.1-SNAPSHOT")), +    assertEquals(vc.maintenanceBugfixSnapshot, Version.fromString("5.2.1-SNAPSHOT")), +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1",, +                     "min_retained_seq_no": "0", +++ b/modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisPluginTests.java, +                        VersionUtils.randomVersionBetween(random(), Version.V_5_0_0, Version.V_6_3_0))]