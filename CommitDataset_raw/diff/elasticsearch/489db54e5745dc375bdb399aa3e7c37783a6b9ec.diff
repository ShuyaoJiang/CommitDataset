[+++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +            if (waitForActiveShards.equals(ActiveShardCount.ALL)) {, +                if (response.getUnassignedShards() == 0 && response.getInitializingShards() == 0) {, +                }, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +            if (waitForActiveShards.equals(ActiveShardCount.ALL)) {, +                if (response.getUnassignedShards() == 0 && response.getInitializingShards() == 0) {, +                }, +++ b/server/src/test/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthActionTests.java, +import org.elasticsearch.action.support.ActiveShardCount;, +    public void testWaitForAllShards() {, +        final String[] indices = {"test"};, +        final ClusterHealthRequest request = new ClusterHealthRequest();, +        request.waitForActiveShards(ActiveShardCount.ALL);, +, +        ClusterState clusterState = randomClusterStateWithInitializingShards("test", 1);, +        ClusterHealthResponse response = new ClusterHealthResponse("", indices, clusterState);, +        assertThat(TransportClusterHealthAction.prepareResponse(request, response, clusterState, null), equalTo(0));, +, +        clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).build();, +        response = new ClusterHealthResponse("", indices, clusterState);, +        assertThat(TransportClusterHealthAction.prepareResponse(request, response, clusterState, null), equalTo(1));, +    }, +]