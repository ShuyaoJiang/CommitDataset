[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("cluster_reroute (api)", Priority.URGENT, new ProcessedClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("cluster_reroute (api)", Priority.URGENT, new ProcessedClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("cluster_update_settings", Priority.URGENT, new ProcessedClusterStateUpdateTask() {, +                clusterService.submitStateUpdateTask("reroute_after_cluster_update_settings", Priority.URGENT, new ClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("cluster_reroute (api)", Priority.URGENT, new ProcessedClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("cluster_update_settings", Priority.URGENT, new ProcessedClusterStateUpdateTask() {, +                clusterService.submitStateUpdateTask("reroute_after_cluster_update_settings", Priority.URGENT, new ClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/cluster/ClusterService.java, +import org.elasticsearch.common.Priority;, +    void submitStateUpdateTask(final String source, Priority priority, final ClusterStateUpdateTask updateTask);, +, +    /**, +     * Submits a task that will update the cluster state (the task has a default priority of {@link Priority#NORMAL})., +     */, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("cluster_reroute (api)", Priority.URGENT, new ProcessedClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("cluster_update_settings", Priority.URGENT, new ProcessedClusterStateUpdateTask() {, +                clusterService.submitStateUpdateTask("reroute_after_cluster_update_settings", Priority.URGENT, new ClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/cluster/ClusterService.java, +import org.elasticsearch.common.Priority;, +    void submitStateUpdateTask(final String source, Priority priority, final ClusterStateUpdateTask updateTask);, +, +    /**, +     * Submits a task that will update the cluster state (the task has a default priority of {@link Priority#NORMAL})., +     */, +++ b/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("shard-failed (" + shardRouting + "), reason [" + reason + "]", Priority.HIGH, new ClusterStateUpdateTask() {, +        clusterService.submitStateUpdateTask("shard-started (" + shardRouting + "), reason [" + reason + "]", Priority.HIGH, new ClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("cluster_reroute (api)", Priority.URGENT, new ProcessedClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("cluster_update_settings", Priority.URGENT, new ProcessedClusterStateUpdateTask() {, +                clusterService.submitStateUpdateTask("reroute_after_cluster_update_settings", Priority.URGENT, new ClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/cluster/ClusterService.java, +import org.elasticsearch.common.Priority;, +    void submitStateUpdateTask(final String source, Priority priority, final ClusterStateUpdateTask updateTask);, +, +    /**, +     * Submits a task that will update the cluster state (the task has a default priority of {@link Priority#NORMAL})., +     */, +++ b/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("shard-failed (" + shardRouting + "), reason [" + reason + "]", Priority.HIGH, new ClusterStateUpdateTask() {, +        clusterService.submitStateUpdateTask("shard-started (" + shardRouting + "), reason [" + reason + "]", Priority.HIGH, new ClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("create-index [" + request.index + "], cause [" + request.cause + "]", Priority.URGENT, new ProcessedClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("cluster_reroute (api)", Priority.URGENT, new ProcessedClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("cluster_update_settings", Priority.URGENT, new ProcessedClusterStateUpdateTask() {, +                clusterService.submitStateUpdateTask("reroute_after_cluster_update_settings", Priority.URGENT, new ClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/cluster/ClusterService.java, +import org.elasticsearch.common.Priority;, +    void submitStateUpdateTask(final String source, Priority priority, final ClusterStateUpdateTask updateTask);, +, +    /**, +     * Submits a task that will update the cluster state (the task has a default priority of {@link Priority#NORMAL})., +     */, +++ b/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("shard-failed (" + shardRouting + "), reason [" + reason + "]", Priority.HIGH, new ClusterStateUpdateTask() {, +        clusterService.submitStateUpdateTask("shard-started (" + shardRouting + "), reason [" + reason + "]", Priority.HIGH, new ClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("create-index [" + request.index + "], cause [" + request.cause + "]", Priority.URGENT, new ProcessedClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java, +import org.elasticsearch.common.Priority;, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("cluster_reroute (api)", Priority.URGENT, new ProcessedClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.common.Priority;, +        clusterService.submitStateUpdateTask("cluster_update_settings", Priority.URGENT, new ProcessedClusterStateUpdateTask() {, +                clusterService.submitStateUpdateTask("reroute_after_cluster_update_settings", Priority.URGENT, new ClusterStateUpdateTask() {, +++ b/src/main/java/org/elasticsearch/cluster/ClusterService.java, +import org.elasticsearch.common.Priority;, +    void submitStateUpdateTask(final String source, Priority priority, final ClusterStateUpdateTask updateTask);, +, +    /**, +     * Submits a task that will update the cluster state (the task has a default priority of {@link Priority#NORMAL})., +     */]