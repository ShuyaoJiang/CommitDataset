[+++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.tribe.TribeService;, +                    TribeService.BLOCKS_METADATA_SETTING,, +                    TribeService.BLOCKS_WRITE_SETTING,, +                    TribeService.BLOCKS_WRITE_INDICES_SETTING,, +                    TribeService.BLOCKS_READ_INDICES_SETTING,, +                    TribeService.BLOCKS_METADATA_INDICES_SETTING,, +                    TribeService.ON_CONFLICT_SETTING,, +                    NodeEnvironment.ADD_NODE_ID_TO_CUSTOM_PATH)));, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.tribe.TribeService;, +                    TribeService.BLOCKS_METADATA_SETTING,, +                    TribeService.BLOCKS_WRITE_SETTING,, +                    TribeService.BLOCKS_WRITE_INDICES_SETTING,, +                    TribeService.BLOCKS_READ_INDICES_SETTING,, +                    TribeService.BLOCKS_METADATA_INDICES_SETTING,, +                    TribeService.ON_CONFLICT_SETTING,, +                    NodeEnvironment.ADD_NODE_ID_TO_CUSTOM_PATH)));, +++ b/core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java, +                    cancellableThreads.execute(() -> {, +                    });, +                            ArrayUtil.timSort(metadata, (o1, o2) -> {, +                                cancellableThreads.checkForCancel();, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.tribe.TribeService;, +                    TribeService.BLOCKS_METADATA_SETTING,, +                    TribeService.BLOCKS_WRITE_SETTING,, +                    TribeService.BLOCKS_WRITE_INDICES_SETTING,, +                    TribeService.BLOCKS_READ_INDICES_SETTING,, +                    TribeService.BLOCKS_METADATA_INDICES_SETTING,, +                    TribeService.ON_CONFLICT_SETTING,, +                    NodeEnvironment.ADD_NODE_ID_TO_CUSTOM_PATH)));, +++ b/core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java, +                    cancellableThreads.execute(() -> {, +                    });, +                            ArrayUtil.timSort(metadata, (o1, o2) -> {, +                                cancellableThreads.checkForCancel();, +++ b/core/src/main/java/org/elasticsearch/monitor/MonitorService.java, +import org.elasticsearch.monitor.jvm.JvmMonitorService;, +    private final JvmMonitorService jvmMonitorService;, +        this.jvmMonitorService = new JvmMonitorService(settings, threadPool);, +        jvmMonitorService.start();, +        jvmMonitorService.stop();, +        jvmMonitorService.close();, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.tribe.TribeService;, +                    TribeService.BLOCKS_METADATA_SETTING,, +                    TribeService.BLOCKS_WRITE_SETTING,, +                    TribeService.BLOCKS_WRITE_INDICES_SETTING,, +                    TribeService.BLOCKS_READ_INDICES_SETTING,, +                    TribeService.BLOCKS_METADATA_INDICES_SETTING,, +                    TribeService.ON_CONFLICT_SETTING,, +                    NodeEnvironment.ADD_NODE_ID_TO_CUSTOM_PATH)));, +++ b/core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java, +                    cancellableThreads.execute(() -> {, +                    });, +                            ArrayUtil.timSort(metadata, (o1, o2) -> {, +                                cancellableThreads.checkForCancel();, +++ b/core/src/main/java/org/elasticsearch/monitor/MonitorService.java, +import org.elasticsearch.monitor.jvm.JvmMonitorService;, +    private final JvmMonitorService jvmMonitorService;, +        this.jvmMonitorService = new JvmMonitorService(settings, threadPool);, +        jvmMonitorService.start();, +        jvmMonitorService.stop();, +        jvmMonitorService.close();, +++ b/core/src/main/java/org/elasticsearch/monitor/fs/FsService.java, +        TimeValue refreshInterval = settings.getAsTime("monitor.fs.refresh_interval", TimeValue.timeValueSeconds(1));, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.tribe.TribeService;, +                    TribeService.BLOCKS_METADATA_SETTING,, +                    TribeService.BLOCKS_WRITE_SETTING,, +                    TribeService.BLOCKS_WRITE_INDICES_SETTING,, +                    TribeService.BLOCKS_READ_INDICES_SETTING,, +                    TribeService.BLOCKS_METADATA_INDICES_SETTING,, +                    TribeService.ON_CONFLICT_SETTING,, +                    NodeEnvironment.ADD_NODE_ID_TO_CUSTOM_PATH)));, +++ b/core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java, +                    cancellableThreads.execute(() -> {, +                    });, +                            ArrayUtil.timSort(metadata, (o1, o2) -> {, +                                cancellableThreads.checkForCancel();, +++ b/core/src/main/java/org/elasticsearch/monitor/MonitorService.java, +import org.elasticsearch.monitor.jvm.JvmMonitorService;, +    private final JvmMonitorService jvmMonitorService;, +        this.jvmMonitorService = new JvmMonitorService(settings, threadPool);, +        jvmMonitorService.start();, +        jvmMonitorService.stop();, +        jvmMonitorService.close();, +++ b/core/src/main/java/org/elasticsearch/monitor/fs/FsService.java, +        TimeValue refreshInterval = settings.getAsTime("monitor.fs.refresh_interval", TimeValue.timeValueSeconds(1));, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.tribe.TribeService;, +                    TribeService.BLOCKS_METADATA_SETTING,, +                    TribeService.BLOCKS_WRITE_SETTING,, +                    TribeService.BLOCKS_WRITE_INDICES_SETTING,, +                    TribeService.BLOCKS_READ_INDICES_SETTING,, +                    TribeService.BLOCKS_METADATA_INDICES_SETTING,, +                    TribeService.ON_CONFLICT_SETTING,, +                    NodeEnvironment.ADD_NODE_ID_TO_CUSTOM_PATH)));]