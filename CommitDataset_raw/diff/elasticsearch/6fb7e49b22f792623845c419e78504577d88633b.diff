[+++ b/docs/reference/sql/functions/math.asciidoc, +* https://en.wikipedia.org/wiki/Exponential_function[e^x^] (`EXP`), +["source","sql",subs="attributes,callouts,macros"], +--------------------------------------------------, +include-tagged::{sql-specs}/math.sql-spec[exp], +--------------------------------------------------, +* https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#expm1-double-[e^x^ - 1] (`EXPM1`), +["source","sql",subs="attributes,callouts,macros"], +--------------------------------------------------, +include-tagged::{sql-specs}/math.sql-spec[expm1], +--------------------------------------------------, +* `ROUND`, +, +.Synopsis:, +[source, sql], +----, +ROUND(numeric_exp<1>[, integer_exp<2>]), +----, +*Input*:, +, + <1> numeric expression, + <2> integer expression; optional, +, +*Output*: numeric , +, +.Description:, +Returns `numeric_exp` rounded to `integer_exp` places right of the decimal point. If `integer_exp` is negative,, +`numeric_exp` is rounded to |`integer_exp`| places to the left of the decimal point. If `integer_exp` is omitted,, +the function will perform as if `integer_exp` would be 0. The returned numeric data type is the same as the data type , +of `numeric_exp`., +, +["source","sql",subs="attributes,callouts,macros"], +--------------------------------------------------, +include-tagged::{sql-specs}/docs.csv-spec[mathRoundWithPositiveParameter], +--------------------------------------------------, +, +["source","sql",subs="attributes,callouts,macros"], +--------------------------------------------------, +include-tagged::{sql-specs}/docs.csv-spec[mathRoundWithNegativeParameter], +--------------------------------------------------, +, +* `TRUNCATE`, +, +.Synopsis:, +[source, sql], +----, +TRUNCATE(numeric_exp<1>[, integer_exp<2>]), +----, +*Input*:, +, + <1> numeric expression, + <2> integer expression; optional, +, +*Output*: numeric , +, +.Description:, +Returns `numeric_exp` truncated to `integer_exp` places right of the decimal point. If `integer_exp` is negative,, +`numeric_exp` is truncated to |`integer_exp`| places to the left of the decimal point.  If `integer_exp` is omitted,, +the function will perform as if `integer_exp` would be 0. The returned numeric data type is the same as the data type , +of `numeric_exp`., +include-tagged::{sql-specs}/docs.csv-spec[mathTruncateWithPositiveParameter], +include-tagged::{sql-specs}/docs.csv-spec[mathTruncateWithNegativeParameter], +++ b/docs/reference/sql/functions/math.asciidoc, +* https://en.wikipedia.org/wiki/Exponential_function[e^x^] (`EXP`), +["source","sql",subs="attributes,callouts,macros"], +--------------------------------------------------, +include-tagged::{sql-specs}/math.sql-spec[exp], +--------------------------------------------------, +* https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#expm1-double-[e^x^ - 1] (`EXPM1`), +["source","sql",subs="attributes,callouts,macros"], +--------------------------------------------------, +include-tagged::{sql-specs}/math.sql-spec[expm1], +--------------------------------------------------, +* `ROUND`, +, +.Synopsis:, +[source, sql], +----, +ROUND(numeric_exp<1>[, integer_exp<2>]), +----, +*Input*:, +, + <1> numeric expression, + <2> integer expression; optional, +, +*Output*: numeric , +, +.Description:, +Returns `numeric_exp` rounded to `integer_exp` places right of the decimal point. If `integer_exp` is negative,, +`numeric_exp` is rounded to |`integer_exp`| places to the left of the decimal point. If `integer_exp` is omitted,, +the function will perform as if `integer_exp` would be 0. The returned numeric data type is the same as the data type , +of `numeric_exp`., +, +["source","sql",subs="attributes,callouts,macros"], +--------------------------------------------------, +include-tagged::{sql-specs}/docs.csv-spec[mathRoundWithPositiveParameter], +--------------------------------------------------, +, +["source","sql",subs="attributes,callouts,macros"], +--------------------------------------------------]