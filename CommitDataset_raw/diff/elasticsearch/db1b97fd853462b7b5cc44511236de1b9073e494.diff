[+++ b/server/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/server/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import org.apache.lucene.search.Query;, +            cachingPolicy = new QueryCachingPolicy() {, +                @Override, +                public void onUse(Query query) {, +, +                }, +                @Override, +                public boolean shouldCache(Query query) {, +                    return true;, +                }, +            };, +++ b/server/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import org.apache.lucene.search.Query;, +            cachingPolicy = new QueryCachingPolicy() {, +                @Override, +                public void onUse(Query query) {, +, +                }, +                @Override, +                public boolean shouldCache(Query query) {, +                    return true;, +                }, +            };, +++ b/server/src/test/java/org/elasticsearch/indices/IndicesQueryCacheTests.java, +    private static QueryCachingPolicy alwaysCachePolicy() {, +        return new QueryCachingPolicy() {, +            @Override, +            public void onUse(Query query) {, +, +            }, +            @Override, +            public boolean shouldCache(Query query) {, +                return true;, +            }, +        };, +    }, +, +        s.setQueryCachingPolicy(alwaysCachePolicy());, +        s1.setQueryCachingPolicy(alwaysCachePolicy());, +        s2.setQueryCachingPolicy(alwaysCachePolicy());, +        s1.setQueryCachingPolicy(alwaysCachePolicy());, +        s2.setQueryCachingPolicy(alwaysCachePolicy());, +++ b/server/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import org.apache.lucene.search.Query;, +            cachingPolicy = new QueryCachingPolicy() {, +                @Override, +                public void onUse(Query query) {, +, +                }, +                @Override, +                public boolean shouldCache(Query query) {, +                    return true;, +                }, +            };, +++ b/server/src/test/java/org/elasticsearch/indices/IndicesQueryCacheTests.java, +    private static QueryCachingPolicy alwaysCachePolicy() {, +        return new QueryCachingPolicy() {, +            @Override, +            public void onUse(Query query) {, +, +            }, +            @Override, +            public boolean shouldCache(Query query) {, +                return true;, +            }, +        };, +    }, +, +        s.setQueryCachingPolicy(alwaysCachePolicy());, +        s1.setQueryCachingPolicy(alwaysCachePolicy());, +        s2.setQueryCachingPolicy(alwaysCachePolicy());, +        s1.setQueryCachingPolicy(alwaysCachePolicy());, +        s2.setQueryCachingPolicy(alwaysCachePolicy());, +++ b/server/src/test/java/org/elasticsearch/search/scriptfilter/ScriptQuerySearchIT.java, +import org.elasticsearch.test.InternalSettingsPlugin;, +import java.util.Arrays;, +        return Arrays.asList(CustomScriptPlugin.class, InternalSettingsPlugin.class);, +++ b/server/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import org.apache.lucene.search.Query;, +            cachingPolicy = new QueryCachingPolicy() {, +                @Override, +                public void onUse(Query query) {, +, +                }, +                @Override, +                public boolean shouldCache(Query query) {, +                    return true;, +                }, +            };, +++ b/server/src/test/java/org/elasticsearch/indices/IndicesQueryCacheTests.java, +    private static QueryCachingPolicy alwaysCachePolicy() {, +        return new QueryCachingPolicy() {, +            @Override, +            public void onUse(Query query) {]