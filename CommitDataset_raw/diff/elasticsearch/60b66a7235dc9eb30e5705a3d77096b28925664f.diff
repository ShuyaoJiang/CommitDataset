[+++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +            boolean success = false;, +            try {, +                success = true;, +            } finally {, +                if (success == false) {, +                    IOUtils.closeWhileHandlingException(translog);, +                }, +            }, +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +            boolean success = false;, +            try {, +                success = true;, +            } finally {, +                if (success == false) {, +                    IOUtils.closeWhileHandlingException(translog);, +                }, +            }, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    public CompressedString refreshSource() throws ElasticsearchGenerationException {, +            return mappingSource = new CompressedString(bStream.bytes());, +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +            boolean success = false;, +            try {, +                success = true;, +            } finally {, +                if (success == false) {, +                    IOUtils.closeWhileHandlingException(translog);, +                }, +            }, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    public CompressedString refreshSource() throws ElasticsearchGenerationException {, +            return mappingSource = new CompressedString(bStream.bytes());, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +        DocumentMapper documentMapper = docBuilder.build(mapperService, this);, +        // update the source with the generated one, +        documentMapper.refreshSource();, +        return documentMapper;, +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +            boolean success = false;, +            try {, +                success = true;, +            } finally {, +                if (success == false) {, +                    IOUtils.closeWhileHandlingException(translog);, +                }, +            }, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    public CompressedString refreshSource() throws ElasticsearchGenerationException {, +            return mappingSource = new CompressedString(bStream.bytes());, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +        DocumentMapper documentMapper = docBuilder.build(mapperService, this);, +        // update the source with the generated one, +        documentMapper.refreshSource();, +        return documentMapper;, +++ b/src/main/java/org/elasticsearch/index/translog/Translog.java, +    private final Set<View> outstandingViews = ConcurrentCollections.newConcurrentSet();, +    private Callback<View> onViewClose = new Callback<View>() {, +        @Override, +        public void handle(View view) {, +            logger.trace("closing view starting at translog [{}]", view.minTranslogGeneration());, +            outstandingViews.remove(this);, +        }, +    };, +, +    private static Snapshot createSnapshot(TranslogReader... translogs) {, +                View view = new View(translogs, onViewClose);, +    public static final class View implements Closeable {, +        public static final Translog.View EMPTY_VIEW = new View(Collections.EMPTY_LIST, null);, +        private final Callback<View> onClose;, +        View(List<TranslogReader> orderedTranslogs, Callback<View> onClose) {, +            this.onClose = onClose;, +        /** this smallest translog generation in this view */, +        /**, +         * The total number of operations in the view., +         */, +        /**, +         * Returns the size in bytes of the files behind the view., +         */, +        /** create a snapshot from this view */, +            final List<TranslogReader> toClose = new ArrayList<>();, +                        try {, +                            if (onClose != null) {, +                                onClose.handle(this);, +                            }, +                        } finally {, +                }, +            for (View view : outstandingViews) {, +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +            boolean success = false;, +            try {, +                success = true;, +            } finally {, +                if (success == false) {, +                    IOUtils.closeWhileHandlingException(translog);, +                }, +            }, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    public CompressedString refreshSource() throws ElasticsearchGenerationException {, +            return mappingSource = new CompressedString(bStream.bytes());]