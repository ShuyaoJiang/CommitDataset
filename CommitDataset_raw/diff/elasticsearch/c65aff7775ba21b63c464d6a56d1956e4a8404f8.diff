[+++ b/src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +            if (ignoreReplicas()) {, +            ShardRouting shard;, +, +, +            // we also need to make sure if the new state has a new primary shard (that we indexed to before) started, +            // and assigned to another node (while the indexing happened). In that case, we want to apply it on the, +            // new primary shard as well..., +            ShardRouting newPrimaryShard = null;, +                shardIt.reset();, +                ShardRouting originalPrimaryShard = null;, +                while ((shard = shardIt.nextOrNull()) != null) {, +                    if (shard.primary()) {, +                        originalPrimaryShard = shard;, +                        break;, +                    }, +                }, +                if (originalPrimaryShard == null || !originalPrimaryShard.active()) {, +                    throw new ElasticSearchIllegalStateException("unexpected state, failed to find primary shard on an index operation that succeeded");, +                }, +, +                while ((shard = shardIt.nextOrNull()) != null) {, +                    if (shard.primary()) {, +                        if (originalPrimaryShard.currentNodeId().equals(shard.currentNodeId())) {, +                            newPrimaryShard = null;, +                        } else {, +                            newPrimaryShard = shard;, +                        }, +                        break;, +                    }, +                }, +            if (newPrimaryShard != null) {, +                replicaCounter++;, +            }, +, +, +            if (newPrimaryShard != null) {, +                performOnReplica(response, counter, newPrimaryShard, newPrimaryShard.currentNodeId());, +            }, +, +++ b/src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +            if (ignoreReplicas()) {, +            ShardRouting shard;, +, +, +            // we also need to make sure if the new state has a new primary shard (that we indexed to before) started, +            // and assigned to another node (while the indexing happened). In that case, we want to apply it on the, +            // new primary shard as well..., +            ShardRouting newPrimaryShard = null;, +                shardIt.reset();, +                ShardRouting originalPrimaryShard = null;, +                while ((shard = shardIt.nextOrNull()) != null) {, +                    if (shard.primary()) {, +                        originalPrimaryShard = shard;, +                        break;, +                    }, +                }, +                if (originalPrimaryShard == null || !originalPrimaryShard.active()) {, +                    throw new ElasticSearchIllegalStateException("unexpected state, failed to find primary shard on an index operation that succeeded");, +                }, +, +                while ((shard = shardIt.nextOrNull()) != null) {, +                    if (shard.primary()) {, +                        if (originalPrimaryShard.currentNodeId().equals(shard.currentNodeId())) {, +                            newPrimaryShard = null;, +                        } else {, +                            newPrimaryShard = shard;, +                        }, +                        break;, +                    }, +                }, +            if (newPrimaryShard != null) {, +                replicaCounter++;, +            }, +, +, +            if (newPrimaryShard != null) {, +                performOnReplica(response, counter, newPrimaryShard, newPrimaryShard.currentNodeId());, +            }, +, +++ b/src/test/java/org/elasticsearch/test/integration/recovery/RelocationTests.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License.]