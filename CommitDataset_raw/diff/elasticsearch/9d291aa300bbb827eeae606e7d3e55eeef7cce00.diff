[+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java, +        return dataType(source(ctx), visitIdentifier(ctx.identifier()));, +            DataType dataType = dataType(source(convertTc.dataType()), convertTc.dataType().getText());, +    private static DataType dataType(Source ctx, String string) {, +        String type = string.toUpperCase(Locale.ROOT);, +        DataType dataType = type.startsWith("SQL_") ? DataType.fromOdbcType(type) : DataType.fromSqlOrEsType(type);, +        if (dataType == null) {, +            throw new ParsingException(ctx, "Does not recognize type [{}]", string);, +        }, +        return dataType;, +    }, +, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java, +        return dataType(source(ctx), visitIdentifier(ctx.identifier()));, +            DataType dataType = dataType(source(convertTc.dataType()), convertTc.dataType().getText());, +    private static DataType dataType(Source ctx, String string) {, +        String type = string.toUpperCase(Locale.ROOT);, +        DataType dataType = type.startsWith("SQL_") ? DataType.fromOdbcType(type) : DataType.fromSqlOrEsType(type);, +        if (dataType == null) {, +            throw new ParsingException(ctx, "Does not recognize type [{}]", string);, +        }, +        return dataType;, +    }, +, +++ b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/parser/ExpressionTests.java, +        assertEquals("line 1:13: Does not recognize type [SQL_INVALID]", ex.getMessage());, +        assertEquals("line 1:13: Does not recognize type [INVALID]", ex.getMessage());]