[+++ b/server/src/main/java/org/elasticsearch/persistent/CompletionPersistentTaskAction.java, +        public Response() {, +            super();, +        }, +, +        public Response(boolean acknowledged) {, +            super(acknowledged);, +        }, +, +        @Override, +        public void readFrom(StreamInput in) throws IOException {, +            readAcknowledged(in);, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            writeAcknowledged(out);, +        }, +, +        @Override, +        public boolean equals(Object o) {, +            if (this == o) return true;, +            if (o == null || getClass() != o.getClass()) return false;, +            AcknowledgedResponse that = (AcknowledgedResponse) o;, +            return isAcknowledged() == that.isAcknowledged();, +        }, +, +        @Override, +        public int hashCode() {, +            return Objects.hash(isAcknowledged());, +        }, +        private final PersistentTasksClusterService persistentTasksClusterService;, +                               PersistentTasksClusterService persistentTasksClusterService,, +            this.persistentTasksClusterService = persistentTasksClusterService;, +            persistentTasksClusterService.completeOrRestartPersistentTask(request.taskId, request.exception, new ActionListener<Empty>() {, +++ b/server/src/main/java/org/elasticsearch/persistent/CompletionPersistentTaskAction.java, +        public Response() {, +            super();, +        }, +, +        public Response(boolean acknowledged) {, +            super(acknowledged);, +        }, +, +        @Override, +        public void readFrom(StreamInput in) throws IOException {, +            readAcknowledged(in);, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            writeAcknowledged(out);, +        }, +, +        @Override, +        public boolean equals(Object o) {, +            if (this == o) return true;, +            if (o == null || getClass() != o.getClass()) return false;, +            AcknowledgedResponse that = (AcknowledgedResponse) o;, +            return isAcknowledged() == that.isAcknowledged();, +        }, +, +        @Override, +        public int hashCode() {, +            return Objects.hash(isAcknowledged());, +        }, +        private final PersistentTasksClusterService persistentTasksClusterService;, +                               PersistentTasksClusterService persistentTasksClusterService,, +            this.persistentTasksClusterService = persistentTasksClusterService;, +            persistentTasksClusterService.completeOrRestartPersistentTask(request.taskId, request.exception, new ActionListener<Empty>() {, +++ b/server/src/main/java/org/elasticsearch/persistent/CreatePersistentTaskAction.java, +        PersistentTaskResponse,, +    public PersistentTaskResponse newResponse() {, +        return new PersistentTaskResponse();, +        private PersistentTaskRequest request;, +        public Request(String action, PersistentTaskRequest request) {, +            request = in.readNamedWriteable(PersistentTaskRequest.class);, +        public PersistentTaskRequest getRequest() {, +        public void setRequest(PersistentTaskRequest request) {, +            PersistentTaskResponse, CreatePersistentTaskAction.RequestBuilder> {, +        public RequestBuilder setRequest(PersistentTaskRequest persistentTaskRequest) {, +            request.setRequest(persistentTaskRequest);, +    public static class TransportAction extends TransportMasterNodeAction<Request, PersistentTaskResponse> {, +        private final PersistentTasksClusterService persistentTasksClusterService;, +                               PersistentTasksClusterService persistentTasksClusterService,, +                               PersistentTasksExecutorRegistry persistentTasksExecutorRegistry,, +                               PersistentTasksService persistentTasksService,, +            this.persistentTasksClusterService = persistentTasksClusterService;, +            NodePersistentTasksExecutor executor = new NodePersistentTasksExecutor(threadPool);, +            clusterService.addListener(new PersistentTasksNodeService(settings, persistentTasksService, persistentTasksExecutorRegistry,, +                    transportService.getTaskManager(), threadPool, executor));, +        protected PersistentTaskResponse newResponse() {, +            return new PersistentTaskResponse();, +                                             final ActionListener<PersistentTaskResponse> listener) {, +            persistentTasksClusterService.createPersistentTask(request.action, request.request, request.stopped, request.removeOnCompletion,, +                    listener.onResponse(new PersistentTaskResponse(newTaskId));, +++ b/server/src/main/java/org/elasticsearch/persistent/CompletionPersistentTaskAction.java, +        public Response() {, +            super();, +        }]