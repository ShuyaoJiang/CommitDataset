[+++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/Netty4Plugin.java, +    public Map<String, Supplier<Transport>> getTransports(Settings settings, ThreadPool threadPool, PageCacheRecycler pageCacheRecycler,, +                                                          NamedWriteableRegistry namedWriteableRegistry, NetworkService networkService) {, +            networkService, pageCacheRecycler, namedWriteableRegistry, circuitBreakerService));, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/Netty4Plugin.java, +    public Map<String, Supplier<Transport>> getTransports(Settings settings, ThreadPool threadPool, PageCacheRecycler pageCacheRecycler,, +                                                          NamedWriteableRegistry namedWriteableRegistry, NetworkService networkService) {, +            networkService, pageCacheRecycler, namedWriteableRegistry, circuitBreakerService));, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    public Netty4Transport(Settings settings, Version version, ThreadPool threadPool, NetworkService networkService,, +                           PageCacheRecycler pageCacheRecycler, NamedWriteableRegistry namedWriteableRegistry,, +                           CircuitBreakerService circuitBreakerService) {, +        super("netty", settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/Netty4Plugin.java, +    public Map<String, Supplier<Transport>> getTransports(Settings settings, ThreadPool threadPool, PageCacheRecycler pageCacheRecycler,, +                                                          NamedWriteableRegistry namedWriteableRegistry, NetworkService networkService) {, +            networkService, pageCacheRecycler, namedWriteableRegistry, circuitBreakerService));, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    public Netty4Transport(Settings settings, Version version, ThreadPool threadPool, NetworkService networkService,, +                           PageCacheRecycler pageCacheRecycler, NamedWriteableRegistry namedWriteableRegistry,, +                           CircuitBreakerService circuitBreakerService) {, +        super("netty", settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4SizeHeaderFrameDecoderTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +        PageCacheRecycler recycler = new MockPageCacheRecycler(Settings.EMPTY);, +        nettyTransport = new Netty4Transport(settings, Version.CURRENT, threadPool, networkService, recycler,, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/Netty4Plugin.java, +    public Map<String, Supplier<Transport>> getTransports(Settings settings, ThreadPool threadPool, PageCacheRecycler pageCacheRecycler,, +                                                          NamedWriteableRegistry namedWriteableRegistry, NetworkService networkService) {, +            networkService, pageCacheRecycler, namedWriteableRegistry, circuitBreakerService));, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    public Netty4Transport(Settings settings, Version version, ThreadPool threadPool, NetworkService networkService,, +                           PageCacheRecycler pageCacheRecycler, NamedWriteableRegistry namedWriteableRegistry,, +                           CircuitBreakerService circuitBreakerService) {, +        super("netty", settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4SizeHeaderFrameDecoderTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +        PageCacheRecycler recycler = new MockPageCacheRecycler(Settings.EMPTY);, +        nettyTransport = new Netty4Transport(settings, Version.CURRENT, threadPool, networkService, recycler,, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4TransportIT.java, +            public Map<String, Supplier<Transport>> getTransports(Settings settings, ThreadPool threadPool,, +                    () -> new ExceptionThrowingNetty4Transport(settings, threadPool, networkService, pageCacheRecycler,, +                PageCacheRecycler recycler,, +            super(settings, Version.CURRENT, threadPool, networkService, recycler, namedWriteableRegistry, circuitBreakerService);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/Netty4Plugin.java, +    public Map<String, Supplier<Transport>> getTransports(Settings settings, ThreadPool threadPool, PageCacheRecycler pageCacheRecycler,, +                                                          NamedWriteableRegistry namedWriteableRegistry, NetworkService networkService) {, +            networkService, pageCacheRecycler, namedWriteableRegistry, circuitBreakerService));, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    public Netty4Transport(Settings settings, Version version, ThreadPool threadPool, NetworkService networkService,, +                           PageCacheRecycler pageCacheRecycler, NamedWriteableRegistry namedWriteableRegistry,, +                           CircuitBreakerService circuitBreakerService) {, +        super("netty", settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4SizeHeaderFrameDecoderTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +        PageCacheRecycler recycler = new MockPageCacheRecycler(Settings.EMPTY);, +        nettyTransport = new Netty4Transport(settings, Version.CURRENT, threadPool, networkService, recycler,, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4TransportIT.java, +            public Map<String, Supplier<Transport>> getTransports(Settings settings, ThreadPool threadPool,, +                    () -> new ExceptionThrowingNetty4Transport(settings, threadPool, networkService, pageCacheRecycler,, +                PageCacheRecycler recycler,, +            super(settings, Version.CURRENT, threadPool, networkService, recycler, namedWriteableRegistry, circuitBreakerService);, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4UtilsTests.java, +import org.elasticsearch.common.breaker.CircuitBreaker;, +    private final BigArrays bigarrays = new BigArrays(null, new NoneCircuitBreakerService(), CircuitBreaker.REQUEST);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/Netty4Plugin.java, +    public Map<String, Supplier<Transport>> getTransports(Settings settings, ThreadPool threadPool, PageCacheRecycler pageCacheRecycler,, +                                                          NamedWriteableRegistry namedWriteableRegistry, NetworkService networkService) {, +            networkService, pageCacheRecycler, namedWriteableRegistry, circuitBreakerService));, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    public Netty4Transport(Settings settings, Version version, ThreadPool threadPool, NetworkService networkService,, +                           PageCacheRecycler pageCacheRecycler, NamedWriteableRegistry namedWriteableRegistry,, +                           CircuitBreakerService circuitBreakerService) {, +        super("netty", settings, version, threadPool, pageCacheRecycler, circuitBreakerService, namedWriteableRegistry, networkService);, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4SizeHeaderFrameDecoderTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +        PageCacheRecycler recycler = new MockPageCacheRecycler(Settings.EMPTY);, +        nettyTransport = new Netty4Transport(settings, Version.CURRENT, threadPool, networkService, recycler,, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4TransportIT.java, +            public Map<String, Supplier<Transport>> getTransports(Settings settings, ThreadPool threadPool,, +                    () -> new ExceptionThrowingNetty4Transport(settings, threadPool, networkService, pageCacheRecycler,, +                PageCacheRecycler recycler,, +            super(settings, Version.CURRENT, threadPool, networkService, recycler, namedWriteableRegistry, circuitBreakerService);, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4UtilsTests.java, +import org.elasticsearch.common.breaker.CircuitBreaker;, +    private final BigArrays bigarrays = new BigArrays(null, new NoneCircuitBreakerService(), CircuitBreaker.REQUEST);, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/NettyTransportMultiPortTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +        PageCacheRecycler recycler = new MockPageCacheRecycler(Settings.EMPTY);, +            recycler, new NamedWriteableRegistry(Collections.emptyList()), new NoneCircuitBreakerService());, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/Netty4Plugin.java, +    public Map<String, Supplier<Transport>> getTransports(Settings settings, ThreadPool threadPool, PageCacheRecycler pageCacheRecycler,, +                                                          NamedWriteableRegistry namedWriteableRegistry, NetworkService networkService) {, +            networkService, pageCacheRecycler, namedWriteableRegistry, circuitBreakerService));, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java]