[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +    private boolean refresh;, +    /**, +     * Should a refresh be executed post this index operation causing the operation to, +     * be searchable. Note, heavy indexing should not set this to <tt>true</tt>. Defaults, +     * to <tt>false</tt>., +     */, +    public DeleteRequest refresh(boolean refresh) {, +        this.refresh = refresh;, +        return this;, +    }, +, +    public boolean refresh() {, +        return this.refresh;, +    }, +, +        refresh = in.readBoolean();, +        out.writeBoolean(refresh);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +    private boolean refresh;, +    /**, +     * Should a refresh be executed post this index operation causing the operation to, +     * be searchable. Note, heavy indexing should not set this to <tt>true</tt>. Defaults, +     * to <tt>false</tt>., +     */, +    public DeleteRequest refresh(boolean refresh) {, +        this.refresh = refresh;, +        return this;, +    }, +, +    public boolean refresh() {, +        return this.refresh;, +    }, +, +        refresh = in.readBoolean();, +        out.writeBoolean(refresh);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +import org.elasticsearch.index.engine.Engine;, +import org.elasticsearch.index.shard.service.IndexShard;, +        IndexShard indexShard = indexShard(shardRequest);, +        Engine.Delete delete = indexShard.prepareDelete(request.type(), request.id());, +        delete.refresh(request.refresh());, +        indexShard.delete(delete);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +    private boolean refresh;, +    /**, +     * Should a refresh be executed post this index operation causing the operation to, +     * be searchable. Note, heavy indexing should not set this to <tt>true</tt>. Defaults, +     * to <tt>false</tt>., +     */, +    public DeleteRequest refresh(boolean refresh) {, +        this.refresh = refresh;, +        return this;, +    }, +, +    public boolean refresh() {, +        return this.refresh;, +    }, +, +        refresh = in.readBoolean();, +        out.writeBoolean(refresh);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +import org.elasticsearch.index.engine.Engine;, +import org.elasticsearch.index.shard.service.IndexShard;, +        IndexShard indexShard = indexShard(shardRequest);, +        Engine.Delete delete = indexShard.prepareDelete(request.type(), request.id());, +        delete.refresh(request.refresh());, +        indexShard.delete(delete);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +    private boolean refresh = false;, +, +    /**, +     * Should a refresh be executed post this index operation causing the operation to, +     * be searchable. Note, heavy indexing should not set this to <tt>true</tt>. Defaults, +     * to <tt>false</tt>., +     */, +    public IndexRequest refresh(boolean refresh) {, +        this.refresh = refresh;, +        return this;, +    }, +, +    public boolean refresh() {, +        return this.refresh;, +    }, +, +        refresh = in.readBoolean();, +        out.writeBoolean(refresh);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +    private boolean refresh;, +    /**, +     * Should a refresh be executed post this index operation causing the operation to, +     * be searchable. Note, heavy indexing should not set this to <tt>true</tt>. Defaults, +     * to <tt>false</tt>., +     */, +    public DeleteRequest refresh(boolean refresh) {, +        this.refresh = refresh;, +        return this;, +    }, +, +    public boolean refresh() {]