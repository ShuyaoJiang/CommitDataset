[+++ b/src/main/java/org/elasticsearch/index/query/TermsFilterParser.java, +            TermsLookup termsLookup = new TermsLookup(fieldMapper, lookupIndex, lookupType, lookupId, lookupPath, parseContext);, +++ b/src/main/java/org/elasticsearch/index/query/TermsFilterParser.java, +            TermsLookup termsLookup = new TermsLookup(fieldMapper, lookupIndex, lookupType, lookupId, lookupPath, parseContext);, +++ b/src/main/java/org/elasticsearch/indices/cache/filter/terms/IndicesTermsFilterCache.java, +                    Filter filter = lookup.getFieldMapper().termsFilter(values, lookup.getQueryParseContext());, +++ b/src/main/java/org/elasticsearch/index/query/TermsFilterParser.java, +            TermsLookup termsLookup = new TermsLookup(fieldMapper, lookupIndex, lookupType, lookupId, lookupPath, parseContext);, +++ b/src/main/java/org/elasticsearch/indices/cache/filter/terms/IndicesTermsFilterCache.java, +                    Filter filter = lookup.getFieldMapper().termsFilter(values, lookup.getQueryParseContext());, +++ b/src/main/java/org/elasticsearch/indices/cache/filter/terms/TermsLookup.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.index.query.QueryParseContext;, +    @Nullable, +    private final QueryParseContext queryParseContext;, +, +    public TermsLookup(FieldMapper fieldMapper, String index, String type, String id, String path, @Nullable QueryParseContext queryParseContext) {, +        this.queryParseContext = queryParseContext;, +    @Nullable, +    public QueryParseContext getQueryParseContext() {, +        return queryParseContext;, +    }, +, +++ b/src/main/java/org/elasticsearch/index/query/TermsFilterParser.java, +            TermsLookup termsLookup = new TermsLookup(fieldMapper, lookupIndex, lookupType, lookupId, lookupPath, parseContext);, +++ b/src/main/java/org/elasticsearch/indices/cache/filter/terms/IndicesTermsFilterCache.java, +                    Filter filter = lookup.getFieldMapper().termsFilter(values, lookup.getQueryParseContext());, +++ b/src/main/java/org/elasticsearch/indices/cache/filter/terms/TermsLookup.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.index.query.QueryParseContext;, +    @Nullable, +    private final QueryParseContext queryParseContext;, +, +    public TermsLookup(FieldMapper fieldMapper, String index, String type, String id, String path, @Nullable QueryParseContext queryParseContext) {, +        this.queryParseContext = queryParseContext;, +    @Nullable, +    public QueryParseContext getQueryParseContext() {, +        return queryParseContext;, +    }, +, +++ b/src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertHitCount;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertNoFailures;, +, +        // same as above, just on the _id..., +        searchResponse = client.prepareSearch("test"), +                .setQuery(filteredQuery(matchAllQuery(), termsLookupFilter("_id").lookupIndex("lookup").lookupType("type").lookupId("1").lookupPath("terms")), +                ).execute().actionGet();, +        assertThat("Failures " + Arrays.toString(searchResponse.getShardFailures()), searchResponse.getShardFailures().length, equalTo(0));, +        assertThat(searchResponse.getHits().getTotalHits(), equalTo(2l));, +        assertThat(searchResponse.getHits().getHits()[0].getId(), anyOf(equalTo("1"), equalTo("3")));, +        assertThat(searchResponse.getHits().getHits()[1].getId(), anyOf(equalTo("1"), equalTo("3")));, +]