[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.ShardAllocationModule;, +, +        new ShardAllocationModule().configure(binder());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.ShardAllocationModule;, +, +        new ShardAllocationModule().configure(binder());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.cluster.routing.allocation.ShardsAllocation;, +    private final ShardsAllocation shardsAllocation;, +                                    ShardsAllocation shardsAllocation, ThreadPool threadPool) {, +        this.shardsAllocation = shardsAllocation;, +                RoutingTable newRoutingTable = shardsAllocation.applyFailedShards(currentState, newArrayList(shardRouting));, +                RoutingTable newRoutingTable = shardsAllocation.applyStartedShards(currentState, newArrayList(shardRouting));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.ShardAllocationModule;, +, +        new ShardAllocationModule().configure(binder());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.cluster.routing.allocation.ShardsAllocation;, +    private final ShardsAllocation shardsAllocation;, +                                    ShardsAllocation shardsAllocation, ThreadPool threadPool) {, +        this.shardsAllocation = shardsAllocation;, +                RoutingTable newRoutingTable = shardsAllocation.applyFailedShards(currentState, newArrayList(shardRouting));, +                RoutingTable newRoutingTable = shardsAllocation.applyStartedShards(currentState, newArrayList(shardRouting));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.cluster.routing.allocation.ShardsAllocation;, +    private final ShardsAllocation shardsAllocation;, +                                              ShardsAllocation shardsAllocation, NodeIndexCreatedAction nodeIndexCreatedAction) {, +        this.shardsAllocation = shardsAllocation;, +                if (shardsAllocation.preferUnallocatedStrategy() != null) {, +                    shardsAllocation.preferUnallocatedStrategy().prefetch(response.indexMetaData(), clusterService.state().nodes());, +                        RoutingTable newRoutingTable = shardsAllocation.reroute(newClusterStateBuilder().state(currentState).routingTable(routingTableBuilder).build());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.ShardAllocationModule;, +, +        new ShardAllocationModule().configure(binder());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.cluster.routing.allocation.ShardsAllocation;, +    private final ShardsAllocation shardsAllocation;, +                                    ShardsAllocation shardsAllocation, ThreadPool threadPool) {, +        this.shardsAllocation = shardsAllocation;, +                RoutingTable newRoutingTable = shardsAllocation.applyFailedShards(currentState, newArrayList(shardRouting));, +                RoutingTable newRoutingTable = shardsAllocation.applyStartedShards(currentState, newArrayList(shardRouting));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.cluster.routing.allocation.ShardsAllocation;, +    private final ShardsAllocation shardsAllocation;, +                                              ShardsAllocation shardsAllocation, NodeIndexCreatedAction nodeIndexCreatedAction) {, +        this.shardsAllocation = shardsAllocation;, +                if (shardsAllocation.preferUnallocatedStrategy() != null) {, +                    shardsAllocation.preferUnallocatedStrategy().prefetch(response.indexMetaData(), clusterService.state().nodes());, +                        RoutingTable newRoutingTable = shardsAllocation.reroute(newClusterStateBuilder().state(currentState).routingTable(routingTableBuilder).build());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java, +import org.elasticsearch.cluster.routing.allocation.ShardsAllocation;, +    private final ShardsAllocation shardsAllocation;, +    @Inject public MetaDataDeleteIndexService(Settings settings, TimerService timerService, ClusterService clusterService, ShardsAllocation shardsAllocation,, +        this.shardsAllocation = shardsAllocation;, +                    RoutingTable newRoutingTable = shardsAllocation.reroute(, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.ShardAllocationModule;, +, +        new ShardAllocationModule().configure(binder());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.cluster.routing.allocation.ShardsAllocation;, +    private final ShardsAllocation shardsAllocation;, +                                    ShardsAllocation shardsAllocation, ThreadPool threadPool) {, +        this.shardsAllocation = shardsAllocation;, +                RoutingTable newRoutingTable = shardsAllocation.applyFailedShards(currentState, newArrayList(shardRouting));, +                RoutingTable newRoutingTable = shardsAllocation.applyStartedShards(currentState, newArrayList(shardRouting));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.cluster.routing.allocation.ShardsAllocation;, +    private final ShardsAllocation shardsAllocation;, +                                              ShardsAllocation shardsAllocation, NodeIndexCreatedAction nodeIndexCreatedAction) {, +        this.shardsAllocation = shardsAllocation;, +                if (shardsAllocation.preferUnallocatedStrategy() != null) {, +                    shardsAllocation.preferUnallocatedStrategy().prefetch(response.indexMetaData(), clusterService.state().nodes());, +                        RoutingTable newRoutingTable = shardsAllocation.reroute(newClusterStateBuilder().state(currentState).routingTable(routingTableBuilder).build());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java, +import org.elasticsearch.cluster.routing.allocation.ShardsAllocation;, +    private final ShardsAllocation shardsAllocation;, +    @Inject public MetaDataDeleteIndexService(Settings settings, TimerService timerService, ClusterService clusterService, ShardsAllocation shardsAllocation,, +        this.shardsAllocation = shardsAllocation;, +                    RoutingTable newRoutingTable = shardsAllocation.reroute(, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.routing.allocation.ShardAllocationModule;, +, +        new ShardAllocationModule().configure(binder());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.cluster.routing.allocation.ShardsAllocation;, +    private final ShardsAllocation shardsAllocation;, +                                    ShardsAllocation shardsAllocation, ThreadPool threadPool) {, +        this.shardsAllocation = shardsAllocation;, +                RoutingTable newRoutingTable = shardsAllocation.applyFailedShards(currentState, newArrayList(shardRouting));, +                RoutingTable newRoutingTable = shardsAllocation.applyStartedShards(currentState, newArrayList(shardRouting));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.cluster.routing.allocation.ShardsAllocation;, +    private final ShardsAllocation shardsAllocation;, +                                              ShardsAllocation shardsAllocation, NodeIndexCreatedAction nodeIndexCreatedAction) {]