[+++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import org.elasticsearch.Version;, +        protected boolean defaultDocValues(Version indexCreated) {, +            if (indexCreated.onOrAfter(Version.V_3_0_0)) {, +                // add doc values by default to keyword (boolean, numerics, etc.) fields, +                return fieldType.tokenized() == false;, +            } else {, +                return fieldType.tokenized() == false && fieldType.indexOptions() != IndexOptions.NONE;, +            }, +        }, +, +            boolean defaultDocValues = defaultDocValues(context.indexCreatedVersion());, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import org.elasticsearch.Version;, +        protected boolean defaultDocValues(Version indexCreated) {, +            if (indexCreated.onOrAfter(Version.V_3_0_0)) {, +                // add doc values by default to keyword (boolean, numerics, etc.) fields, +                return fieldType.tokenized() == false;, +            } else {, +                return fieldType.tokenized() == false && fieldType.indexOptions() != IndexOptions.NONE;, +            }, +        }, +, +            boolean defaultDocValues = defaultDocValues(context.indexCreatedVersion());, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java, +        if (fieldType().indexOptions() != IndexOptions.NONE || fieldType().stored()) {, +        }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import org.elasticsearch.Version;, +        protected boolean defaultDocValues(Version indexCreated) {, +            if (indexCreated.onOrAfter(Version.V_3_0_0)) {, +                // add doc values by default to keyword (boolean, numerics, etc.) fields, +                return fieldType.tokenized() == false;, +            } else {, +                return fieldType.tokenized() == false && fieldType.indexOptions() != IndexOptions.NONE;, +            }, +        }, +, +            boolean defaultDocValues = defaultDocValues(context.indexCreatedVersion());, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java, +        if (fieldType().indexOptions() != IndexOptions.NONE || fieldType().stored()) {, +        }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/StringFieldMapper.java, +import org.elasticsearch.index.fielddata.FieldDataType;, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import org.elasticsearch.Version;, +        protected boolean defaultDocValues(Version indexCreated) {, +            if (indexCreated.onOrAfter(Version.V_3_0_0)) {, +                // add doc values by default to keyword (boolean, numerics, etc.) fields, +                return fieldType.tokenized() == false;, +            } else {, +                return fieldType.tokenized() == false && fieldType.indexOptions() != IndexOptions.NONE;, +            }, +        }, +, +            boolean defaultDocValues = defaultDocValues(context.indexCreatedVersion());, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java, +        if (fieldType().indexOptions() != IndexOptions.NONE || fieldType().stored()) {, +        }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/StringFieldMapper.java, +import org.elasticsearch.index.fielddata.FieldDataType;, +++ b/core/src/test/java/org/elasticsearch/index/mapper/core/BooleanFieldMapperTests.java, +import org.apache.lucene.index.DocValuesType;, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.index.mapper.ParseContext.Document;, +import org.elasticsearch.index.mapper.string.SimpleStringMappingTests;, +import org.elasticsearch.plugins.Plugin;, +import org.elasticsearch.test.InternalSettingsPlugin;, +import java.util.Collection;, +    @Override, +    protected Collection<Class<? extends Plugin>> getPlugins() {, +        return pluginList(InternalSettingsPlugin.class);, +    }, +, +, +    public void testDocValues() throws Exception {, +        String mapping = XContentFactory.jsonBuilder().startObject().startObject("type"), +                .startObject("properties"), +                .startObject("bool1"), +                    .field("type", "boolean"), +                .endObject(), +                .startObject("bool2"), +                    .field("type", "boolean"), +                    .field("index", false), +                .endObject(), +                .startObject("bool3"), +                    .field("type", "boolean"), +                    .field("index", true), +                .endObject(), +                .endObject(), +                .endObject().endObject().string();, +, +        DocumentMapper defaultMapper = indexService.mapperService().documentMapperParser().parse("type", new CompressedXContent(mapping));, +, +        ParsedDocument parsedDoc = defaultMapper.parse("test", "type", "1", XContentFactory.jsonBuilder(), +                .startObject(), +                .field("bool1", true), +                .field("bool2", true)]