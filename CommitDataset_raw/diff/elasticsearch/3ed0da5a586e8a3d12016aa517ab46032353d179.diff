[+++ b/core/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +++ b/core/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/AllFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/AllFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/AllFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldNamesFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/AllFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldNamesFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/LegacyTokenCountFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/AllFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldNamesFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/LegacyTokenCountFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/TokenCountFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/AllFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldNamesFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/LegacyTokenCountFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/TokenCountFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/termvectors/TermVectorsService.java, +import org.elasticsearch.common.xcontent.XContentHelper;, +import org.elasticsearch.common.xcontent.support.XContentMapValues;, +import org.elasticsearch.index.mapper.SourceFieldMapper;, +import java.util.HashMap;, +import java.util.List;, +        String[] getFields = validFields.toArray(new String[validFields.size() + 1]);, +        getFields[getFields.length - 1] = SourceFieldMapper.NAME;, +                get, request.id(), request.type(), getFields, null);, +        Fields generatedTermVectors = generateTermVectors(indexShard, getResult.sourceAsMap(), getResult.getFields().values(), request.offsets(), request.perFieldAnalyzer(), validFields);, +    private static Fields generateTermVectors(IndexShard indexShard, Map<String, Object> source, Collection<GetField> getFields, boolean withOffsets, @Nullable Map<String, String> perFieldAnalyzer, Set<String> fields) throws IOException {, +        Map<String, Collection<Object>> values = new HashMap<>();, +            if (fields.contains(field)) { // some fields are returned even when not asked for, eg. _timestamp, +                values.put(field, getField.getValues());, +        }, +        if (source != null) {, +            for (String field : fields) {, +                if (values.containsKey(field) == false) {, +                    List<Object> v = XContentMapValues.extractRawValues(field, source);, +                    if (v.isEmpty() == false) {, +                        values.put(field, v);, +                    }, +                }, +            }, +        }, +, +        /* store document in memory index */, +        MemoryIndex index = new MemoryIndex(withOffsets);, +        for (Map.Entry<String, Collection<Object>> entry : values.entrySet()) {, +            String field = entry.getKey();, +            for (Object text : entry.getValue()) {, +        return generateTermVectors(indexShard, XContentHelper.convertToMap(parsedDocument.source(), true).v2(), getFields, request.offsets(), request.perFieldAnalyzer(), seenFields);, +++ b/core/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/AllFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldNamesFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/LegacyTokenCountFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/TokenCountFieldMapper.java, +++ b/core/src/main/java/org/elasticsearch/index/termvectors/TermVectorsService.java, +import org.elasticsearch.common.xcontent.XContentHelper;, +import org.elasticsearch.common.xcontent.support.XContentMapValues;, +import org.elasticsearch.index.mapper.SourceFieldMapper;, +import java.util.HashMap;, +import java.util.List;, +        String[] getFields = validFields.toArray(new String[validFields.size() + 1]);, +        getFields[getFields.length - 1] = SourceFieldMapper.NAME;, +                get, request.id(), request.type(), getFields, null);, +        Fields generatedTermVectors = generateTermVectors(indexShard, getResult.sourceAsMap(), getResult.getFields().values(), request.offsets(), request.perFieldAnalyzer(), validFields);, +    private static Fields generateTermVectors(IndexShard indexShard, Map<String, Object> source, Collection<GetField> getFields, boolean withOffsets, @Nullable Map<String, String> perFieldAnalyzer, Set<String> fields) throws IOException {, +        Map<String, Collection<Object>> values = new HashMap<>();, +            if (fields.contains(field)) { // some fields are returned even when not asked for, eg. _timestamp, +                values.put(field, getField.getValues());, +        }, +        if (source != null) {, +            for (String field : fields) {, +                if (values.containsKey(field) == false) {, +                    List<Object> v = XContentMapValues.extractRawValues(field, source);, +                    if (v.isEmpty() == false) {, +                        values.put(field, v);, +                    }, +                }, +            }, +        }, +, +        /* store document in memory index */, +        MemoryIndex index = new MemoryIndex(withOffsets);, +        for (Map.Entry<String, Collection<Object>> entry : values.entrySet()) {, +            String field = entry.getKey();, +            for (Object text : entry.getValue()) {, +        return generateTermVectors(indexShard, XContentHelper.convertToMap(parsedDocument.source(), true).v2(), getFields, request.offsets(), request.perFieldAnalyzer(), seenFields);, +++ b/core/src/test/java/org/elasticsearch/action/bulk/BulkWithUpdatesIT.java, +        GetResponse getResponse = client().prepareGet().setIndex("test").setType("type1").setId("1").execute(), +        assertThat(((Number) getResponse.getSource().get("field")).longValue(), equalTo(2L));]