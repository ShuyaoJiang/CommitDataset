[+++ b/server/src/main/java/org/elasticsearch/index/engine/RecoverySourcePruneMergePolicy.java, +        Weight weight = s.createWeight(s.rewrite(retainSourceQuerySupplier.get()), ScoreMode.COMPLETE_NO_SCORES, 1.0f);, +            BitSet recoverySourceToKeep = BitSet.of(scorer.iterator(), reader.maxDoc());, +            // calculating the cardinality is significantly cheaper than skipping all bulk-merging we might do, +            // if retentions are high we keep most of it, +            if (recoverySourceToKeep.cardinality() == reader.maxDoc()) {, +                return reader; // keep all source, +            }, +            return new SourcePruningFilterCodecReader(recoverySourceField, reader, recoverySourceToKeep);, +++ b/server/src/main/java/org/elasticsearch/index/engine/RecoverySourcePruneMergePolicy.java, +        Weight weight = s.createWeight(s.rewrite(retainSourceQuerySupplier.get()), ScoreMode.COMPLETE_NO_SCORES, 1.0f);, +            BitSet recoverySourceToKeep = BitSet.of(scorer.iterator(), reader.maxDoc());, +            // calculating the cardinality is significantly cheaper than skipping all bulk-merging we might do, +            // if retentions are high we keep most of it, +            if (recoverySourceToKeep.cardinality() == reader.maxDoc()) {, +                return reader; // keep all source, +            }, +            return new SourcePruningFilterCodecReader(recoverySourceField, reader, recoverySourceToKeep);, +++ b/server/src/test/java/org/elasticsearch/index/engine/RecoverySourcePruneMergePolicyTests.java, +import org.apache.lucene.search.MatchAllDocsQuery;, +, +    public void testPruneNone() throws IOException {, +        try (Directory dir = newDirectory()) {, +            IndexWriterConfig iwc = newIndexWriterConfig();, +            iwc.setMergePolicy(new RecoverySourcePruneMergePolicy("extra_source",, +                () -> new MatchAllDocsQuery(), iwc.getMergePolicy()));, +            try (IndexWriter writer = new IndexWriter(dir, iwc)) {, +                for (int i = 0; i < 20; i++) {, +                    if (i > 0 && randomBoolean()) {, +                        writer.flush();, +                    }, +                    Document doc = new Document();, +                    doc.add(new StoredField("source", "hello world"));, +                    doc.add(new StoredField("extra_source", "hello world"));, +                    doc.add(new NumericDocValuesField("extra_source", 1));, +                    writer.addDocument(doc);, +                }, +                writer.forceMerge(1);, +                writer.commit();, +                try (DirectoryReader reader = DirectoryReader.open(writer)) {, +                    assertEquals(1, reader.leaves().size());, +                    NumericDocValues extra_source = reader.leaves().get(0).reader().getNumericDocValues("extra_source");, +                    assertNotNull(extra_source);, +                    for (int i = 0; i < reader.maxDoc(); i++) {, +                        Document document = reader.document(i);, +                        Set<String> collect = document.getFields().stream().map(IndexableField::name).collect(Collectors.toSet());, +                        assertTrue(collect.contains("source"));, +                        assertTrue(collect.contains("extra_source"));, +                        assertEquals(i, extra_source.nextDoc());, +                    }, +                    assertEquals(DocIdSetIterator.NO_MORE_DOCS, extra_source.nextDoc());, +                }, +            }, +        }, +    }]