[+++ b/core/src/main/java/org/elasticsearch/common/xcontent/XContentFactory.java, +        int jsonStart = 0;, +        // JSON may be preceded by UTF-8 BOM, +        if (length > 3 && first == (byte) 0xEF && bytes.get(1) == (byte) 0xBB && bytes.get(2) == (byte) 0xBF) {, +            jsonStart = 3;, +        }, +, +        for (int i = jsonStart; i < length; i++) {, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/XContentFactory.java, +        int jsonStart = 0;, +        // JSON may be preceded by UTF-8 BOM, +        if (length > 3 && first == (byte) 0xEF && bytes.get(1) == (byte) 0xBB && bytes.get(2) == (byte) 0xBF) {, +            jsonStart = 3;, +        }, +, +        for (int i = jsonStart; i < length; i++) {, +++ b/core/src/test/java/org/elasticsearch/common/xcontent/XContentFactoryTests.java, +    , +    public void testJsonFromBytesOptionallyPrecededByUtf8Bom() throws Exception {, +        byte[] bytes = new byte[] {(byte) '{', (byte) '}'};, +        assertThat(XContentFactory.xContentType(bytes), equalTo(XContentType.JSON));, +        , +        bytes = new byte[] {(byte) 0x20, (byte) '{', (byte) '}'};, +        assertThat(XContentFactory.xContentType(bytes), equalTo(XContentType.JSON));, +        , +        bytes = new byte[] {(byte) 0xef, (byte) 0xbb, (byte) 0xbf, (byte) '{', (byte) '}'};, +        assertThat(XContentFactory.xContentType(bytes), equalTo(XContentType.JSON));, +        , +        bytes = new byte[] {(byte) 0xef, (byte) 0xbb, (byte) 0xbf, (byte) 0x20, (byte) '{', (byte) '}'};, +        assertThat(XContentFactory.xContentType(bytes), equalTo(XContentType.JSON));, +    }]