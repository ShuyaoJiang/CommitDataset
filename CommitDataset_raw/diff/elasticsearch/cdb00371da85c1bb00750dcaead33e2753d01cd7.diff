[+++ b/core/pom.xml, +                                <include>org/elasticsearch/search/aggregations/bucket/AbstractTermsTestCase.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/TestScript.class</include>, +                                <include>org/elasticsearch/search/aggregations/metrics/AbstractNumericTestCase.class</include>, +                                <include>org/elasticsearch/percolator/PercolatorTestUtil.class</include>, +++ b/core/pom.xml, +                                <include>org/elasticsearch/search/aggregations/bucket/AbstractTermsTestCase.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/TestScript.class</include>, +                                <include>org/elasticsearch/search/aggregations/metrics/AbstractNumericTestCase.class</include>, +                                <include>org/elasticsearch/percolator/PercolatorTestUtil.class</include>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import org.apache.lucene.util.IOUtils;, +        List<String> tlist;, +        TokenStream source = null;, +        try {, +            tlist = new ArrayList<>();, +        } finally {, +            if (source != null) {, +                IOUtils.closeWhileHandlingException(source);, +            }, +                    try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                }, +++ b/core/pom.xml, +                                <include>org/elasticsearch/search/aggregations/bucket/AbstractTermsTestCase.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/TestScript.class</include>, +                                <include>org/elasticsearch/search/aggregations/metrics/AbstractNumericTestCase.class</include>, +                                <include>org/elasticsearch/percolator/PercolatorTestUtil.class</include>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import org.apache.lucene.util.IOUtils;, +        List<String> tlist;, +        TokenStream source = null;, +        try {, +            tlist = new ArrayList<>();, +        } finally {, +            if (source != null) {, +                IOUtils.closeWhileHandlingException(source);, +            }, +                    try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                }, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +      , +      try (TokenStream ts = queryAnalyzer.tokenStream("", key.toString())) {, +++ b/core/pom.xml, +                                <include>org/elasticsearch/search/aggregations/bucket/AbstractTermsTestCase.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/TestScript.class</include>, +                                <include>org/elasticsearch/search/aggregations/metrics/AbstractNumericTestCase.class</include>, +                                <include>org/elasticsearch/percolator/PercolatorTestUtil.class</include>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import org.apache.lucene.util.IOUtils;, +        List<String> tlist;, +        TokenStream source = null;, +        try {, +            tlist = new ArrayList<>();, +        } finally {, +            if (source != null) {, +                IOUtils.closeWhileHandlingException(source);, +            }, +                    try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                }, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +      , +      try (TokenStream ts = queryAnalyzer.tokenStream("", key.toString())) {, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/pom.xml, +                                <include>org/elasticsearch/search/aggregations/bucket/AbstractTermsTestCase.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/TestScript.class</include>, +                                <include>org/elasticsearch/search/aggregations/metrics/AbstractNumericTestCase.class</include>, +                                <include>org/elasticsearch/percolator/PercolatorTestUtil.class</include>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import org.apache.lucene.util.IOUtils;, +        List<String> tlist;, +        TokenStream source = null;, +        try {, +            tlist = new ArrayList<>();, +        } finally {, +            if (source != null) {, +                IOUtils.closeWhileHandlingException(source);]