[+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Definition.java, +        addMethod("Object", "toString", null, false, stringType, new Type[] {}, null, null);, +        addMethod("def", "toString", null, false, stringType, new Type[] {}, null, null);, +        addMethod("Boolean", "compare", null, true, intType, new Type[] {booleanType,booleanType}, null, null);, +        addMethod("Boolean", "compareTo", null, false, intType, new Type[] {booleanobjType}, null, null);, +        addMethod("Boolean", "parseBoolean", null, true, booleanType, new Type[] {stringType}, null, null);, +        addMethod("Boolean", "valueOf", null, true, booleanobjType, new Type[] {booleanType}, null, null);, +        addField("Boolean", "FALSE", null, true, booleanobjType, null);, +        addField("Boolean", "TRUE", null, true, booleanobjType, null);, +        addMethod("Byte", "compare", null, true, intType, new Type[] {byteType,byteType}, null, null);, +        addMethod("Byte", "compareTo", null, false, intType, new Type[] {byteobjType}, null, null);, +        addMethod("Byte", "parseByte", null, true, byteType, new Type[] {stringType}, null, null);, +        addMethod("Short", "compare", null, true, intType, new Type[] {shortType,shortType}, null, null);, +        addMethod("Short", "compareTo", null, false, intType, new Type[] {shortobjType}, null, null);, +        addMethod("Short", "parseShort", null, true, shortType, new Type[] {stringType}, null, null);, +        addMethod("Character", "charCount", null, true, intType, new Type[] {intType}, null, null);, +        addMethod("Character", "compare", null, true, intType, new Type[] {charType,charType}, null, null);, +        addMethod("Character", "compareTo", null, false, intType, new Type[] {charobjType}, null, null);, +        addMethod("Character", "digit", null, true, intType, new Type[] {intType,intType}, null, null);, +        addMethod("Character", "forDigit", null, true, charType, new Type[] {intType,intType}, null, null);, +        addMethod("Character", "getName", null, true, stringType, new Type[] {intType}, null, null);, +        addMethod("Character", "getNumericValue", null, true, intType, new Type[] {intType}, null, null);, +        addMethod("Character", "isAlphabetic", null, true, booleanType, new Type[] {intType}, null, null);, +        addMethod("Character", "isDefined", null, true, booleanType, new Type[] {intType}, null, null);, +        addMethod("Character", "isDigit", null, true, booleanType, new Type[] {intType}, null, null);, +        addMethod("Character", "isIdeographic", null, true, booleanType, new Type[] {intType}, null, null);, +        addMethod("Character", "isLetter", null, true, booleanType, new Type[] {intType}, null, null);, +        addMethod("Character", "isLetterOrDigit", null, true, booleanType, new Type[] {intType}, null, null);, +        addMethod("Character", "isLowerCase", null, true, booleanType, new Type[] {intType}, null, null);, +        addMethod("Character", "isMirrored", null, true, booleanType, new Type[] {intType}, null, null);, +        addMethod("Character", "isSpaceChar", null, true, booleanType, new Type[] {intType}, null, null);, +        addMethod("Character", "isTitleCase", null, true, booleanType, new Type[] {intType}, null, null);, +        addMethod("Character", "isUpperCase", null, true, booleanType, new Type[] {intType}, null, null);, +        addMethod("Character", "isWhitespace", null, true, booleanType, new Type[] {intType}, null, null);, +        addMethod("Character", "valueOf", null, true, charobjType, new Type[] {charType}, null, null);, +        addMethod("Integer", "compare", null, true, intType, new Type[] {intType,intType}, null, null);, +        addMethod("Integer", "compareTo", null, false, intType, new Type[] {intobjType}, null, null);, +        addMethod("Integer", "min", null, true, intType, new Type[] {intType,intType}, null, null);, +        addMethod("Integer", "max", null, true, intType, new Type[] {intType,intType}, null, null);, +        addMethod("Integer", "parseInt", null, true, intType, new Type[] {stringType}, null, null);, +        addMethod("Integer", "signum", null, true, intType, new Type[] {intType}, null, null);, +        addMethod("Integer", "toHexString", null, true, stringType, new Type[] {intType}, null, null);, +        addMethod("Long", "compare", null, true, intType, new Type[] {longType,longType}, null, null);, +        addMethod("Long", "compareTo", null, false, intType, new Type[] {longobjType}, null, null);, +        addMethod("Long", "min", null, true, longType, new Type[] {longType,longType}, null, null);, +        addMethod("Long", "max", null, true, longType, new Type[] {longType,longType}, null, null);, +        addMethod("Long", "parseLong", null, true, longType, new Type[] {stringType}, null, null);, +        addMethod("Long", "signum", null, true, intType, new Type[] {longType}, null, null);, +        addMethod("Long", "toHexString", null, true, stringType, new Type[] {longType}, null, null);, +        addMethod("Float", "compare", null, true, intType, new Type[] {floatType,floatType}, null, null);, +        addMethod("Float", "compareTo", null, false, intType, new Type[] {floatobjType}, null, null);, +        addMethod("Float", "min", null, true, floatType, new Type[] {floatType,floatType}, null, null);, +        addMethod("Float", "max", null, true, floatType, new Type[] {floatType,floatType}, null, null);, +        addMethod("Float", "parseFloat", null, true, floatType, new Type[] {stringType}, null, null);, +        addMethod("Float", "toHexString", null, true, stringType, new Type[] {floatType}, null, null);, +        addMethod("Double", "compare", null, true, intType, new Type[] {doubleType,doubleType}, null, null);, +        addMethod("Double", "compareTo", null, false, intType, new Type[] {doubleobjType}, null, null);, +        addMethod("Double", "min", null, true, doubleType, new Type[] {doubleType,doubleType}, null, null);, +        addMethod("Double", "max", null, true, doubleType, new Type[] {doubleType,doubleType}, null, null);, +        addMethod("Double", "parseDouble", null, true, doubleType, new Type[] {stringType}, null, null);, +        addMethod("Double", "toHexString", null, true, stringType, new Type[] {doubleType}, null, null);, +        addMethod("Math", "max", null, true, doubleType, new Type[] {doubleType, doubleType}, null, null);, +        addMethod("Math", "min", null, true, doubleType, new Type[] {doubleType, doubleType}, null, null);, +        addField("Math", "E", null, true, doubleType, null);, +        addField("Math", "PI", null, true, doubleType, null);]