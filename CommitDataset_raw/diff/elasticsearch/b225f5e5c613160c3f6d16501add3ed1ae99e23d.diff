[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +    public final BulkResponse bulk(BulkRequest bulkRequest, RequestOptions options) throws IOException {, +        return performRequestAndParseEntity(bulkRequest, RequestConverters::bulk, options, BulkResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Executes a bulk request using the Bulk API, +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html">Bulk API on elastic.co</a>, +     * @deprecated Prefer {@link #bulk(BulkRequest, RequestOptions)}, +     */, +    @Deprecated, +    public final void bulkAsync(BulkRequest bulkRequest, RequestOptions options, ActionListener<BulkResponse> listener) {, +        performRequestAsyncAndParseEntity(bulkRequest, RequestConverters::bulk, options, BulkResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +     * Asynchronously executes a bulk request using the Bulk API, +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html">Bulk API on elastic.co</a>, +     * @deprecated Prefer {@link #bulkAsync(BulkRequest, RequestOptions, ActionListener)}, +     */, +    @Deprecated, +    @Deprecated, +    protected final <Req extends ActionRequest, Resp> Resp performRequestAndParseEntity(Req request,, +                                                                            CheckedFunction<Req, Request, IOException> requestConverter,, +                                                                            RequestOptions options,, +                                                                            CheckedFunction<XContentParser, Resp, IOException> entityParser,, +                                                                            Set<Integer> ignores) throws IOException {, +        return performRequest(request, requestConverter, options,, +                response -> parseEntity(response.getEntity(), entityParser), ignores);, +    }, +, +    @Deprecated, +        return performRequest(request, requestConverter, optionsForHeaders(headers), responseConverter, ignores);, +    }, +, +    protected final <Req extends ActionRequest, Resp> Resp performRequest(Req request,, +                                                          CheckedFunction<Req, Request, IOException> requestConverter,, +                                                          RequestOptions options,, +                                                          CheckedFunction<Response, Resp, IOException> responseConverter,, +                                                          Set<Integer> ignores) throws IOException {, +        req.setOptions(options);, +    @Deprecated, +    protected final <Req extends ActionRequest, Resp> void performRequestAsyncAndParseEntity(Req request,, +                                                                 CheckedFunction<Req, Request, IOException> requestConverter,, +                                                                 RequestOptions options,, +                                                                 CheckedFunction<XContentParser, Resp, IOException> entityParser,, +                                                                 ActionListener<Resp> listener, Set<Integer> ignores) {, +        performRequestAsync(request, requestConverter, options,, +                response -> parseEntity(response.getEntity(), entityParser), listener, ignores);, +    }, +, +    @Deprecated, +        performRequestAsync(request, requestConverter, optionsForHeaders(headers), responseConverter, listener, ignores);, +    }, +, +    protected final <Req extends ActionRequest, Resp> void performRequestAsync(Req request,, +                                                               CheckedFunction<Req, Request, IOException> requestConverter,, +                                                               RequestOptions options,, +                                                               CheckedFunction<Response, Resp, IOException> responseConverter,, +                                                               ActionListener<Resp> listener, Set<Integer> ignores) {, +        req.setOptions(options);, +    private static RequestOptions optionsForHeaders(Header[] headers) {, +        RequestOptions.Builder options = RequestOptions.DEFAULT.toBuilder();, +        for (Header header : headers) {, +            Objects.requireNonNull(header, "header cannot be null");, +            options.addHeader(header.getName(), header.getValue());, +        }, +        return options.build();, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +    public final BulkResponse bulk(BulkRequest bulkRequest, RequestOptions options) throws IOException {, +        return performRequestAndParseEntity(bulkRequest, RequestConverters::bulk, options, BulkResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Executes a bulk request using the Bulk API, +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html">Bulk API on elastic.co</a>, +     * @deprecated Prefer {@link #bulk(BulkRequest, RequestOptions)}, +     */, +    @Deprecated, +    public final void bulkAsync(BulkRequest bulkRequest, RequestOptions options, ActionListener<BulkResponse> listener) {, +        performRequestAsyncAndParseEntity(bulkRequest, RequestConverters::bulk, options, BulkResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +     * Asynchronously executes a bulk request using the Bulk API, +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html">Bulk API on elastic.co</a>, +     * @deprecated Prefer {@link #bulkAsync(BulkRequest, RequestOptions, ActionListener)}, +     */, +    @Deprecated, +    @Deprecated, +    protected final <Req extends ActionRequest, Resp> Resp performRequestAndParseEntity(Req request,, +                                                                            CheckedFunction<Req, Request, IOException> requestConverter,, +                                                                            RequestOptions options,, +                                                                            CheckedFunction<XContentParser, Resp, IOException> entityParser,]