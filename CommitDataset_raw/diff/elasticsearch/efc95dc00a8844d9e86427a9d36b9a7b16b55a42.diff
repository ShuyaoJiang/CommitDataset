[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentParser.java, +            }, +        },, +            }, +        },, +            }, +        },, +            }, +        },, +            }, +        },, +            }, +        },, +            }, +        },, +            }, +        },, +, +        // usually a binary value, +        VALUE_EMBEDDED_OBJECT {, +            @Override public boolean isValue() {, +                return true;, +            }, +        },, +            }, +        };, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentParser.java, +            }, +        },, +            }, +        },, +            }, +        },, +            }, +        },, +            }, +        },, +            }, +        },, +            }, +        },, +            }, +        },, +, +        // usually a binary value, +        VALUE_EMBEDDED_OBJECT {, +            @Override public boolean isValue() {, +                return true;, +            }, +        },, +            }, +        };, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContentParser.java, +            case VALUE_EMBEDDED_OBJECT:, +                return Token.VALUE_EMBEDDED_OBJECT;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentParser.java, +            }, +        },, +            }, +        },, +            }, +        },, +            }, +        },, +            }, +        },, +            }, +        },, +            }, +        },, +            }, +        },, +, +        // usually a binary value, +        VALUE_EMBEDDED_OBJECT {, +            @Override public boolean isValue() {, +                return true;, +            }, +        },, +            }, +        };, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContentParser.java, +            case VALUE_EMBEDDED_OBJECT:, +                return Token.VALUE_EMBEDDED_OBJECT;, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java, +    @Test public void passQueryAsStringTest() throws Exception {, +        try {, +            client.admin().indices().prepareDelete("test").execute().actionGet();, +        } catch (Exception e) {, +            // ignore, +        }, +, +        client.admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("number_of_shards", 1)).execute().actionGet();, +, +        client.prepareIndex("test", "type1", "1").setSource("field1", "value1_1", "field2", "value2_1").setRefresh(true).execute().actionGet();, +, +        SearchResponse searchResponse = client.prepareSearch().setQuery("{ \"term\" : { \"field1\" : \"value1_1\" }}").execute().actionGet();, +        assertThat(searchResponse.hits().totalHits(), equalTo(1l));, +    }, +]