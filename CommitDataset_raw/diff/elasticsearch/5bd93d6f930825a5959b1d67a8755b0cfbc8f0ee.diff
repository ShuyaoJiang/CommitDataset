[+++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    /**, +     * Null value filter, returns <tt>null</tt> if there is no null value associated with the field., +     */, +    @Nullable, +    Filter nullValueFilter();, +, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    /**, +     * Null value filter, returns <tt>null</tt> if there is no null value associated with the field., +     */, +    @Nullable, +    Filter nullValueFilter();, +, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    public Filter nullValueFilter() {, +        return null;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    /**, +     * Null value filter, returns <tt>null</tt> if there is no null value associated with the field., +     */, +    @Nullable, +    Filter nullValueFilter();, +, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    public Filter nullValueFilter() {, +        return null;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java, +import org.apache.lucene.search.Filter;, +import org.elasticsearch.common.lucene.search.TermFilter;, +    public Filter nullValueFilter() {, +        if (nullValue == null) {, +            return null;, +        }, +        return new TermFilter(names().createIndexNameTerm(nullValue ? "T" : "F"));, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    /**, +     * Null value filter, returns <tt>null</tt> if there is no null value associated with the field., +     */, +    @Nullable, +    Filter nullValueFilter();, +, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    public Filter nullValueFilter() {, +        return null;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java, +import org.apache.lucene.search.Filter;, +import org.elasticsearch.common.lucene.search.TermFilter;, +    public Filter nullValueFilter() {, +        if (nullValue == null) {, +            return null;, +        }, +        return new TermFilter(names().createIndexNameTerm(nullValue ? "T" : "F"));, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +    public Filter nullValueFilter() {, +        if (nullValue == null) {, +            return null;, +        }, +        return NumericRangeFilter.newIntRange(names.indexName(), precisionStep,, +                nullValue.intValue(),, +                nullValue.intValue(),, +                true, true);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    /**, +     * Null value filter, returns <tt>null</tt> if there is no null value associated with the field., +     */, +    @Nullable, +    Filter nullValueFilter();, +, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    public Filter nullValueFilter() {, +        return null;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java, +import org.apache.lucene.search.Filter;, +import org.elasticsearch.common.lucene.search.TermFilter;, +    public Filter nullValueFilter() {, +        if (nullValue == null) {, +            return null;, +        }]