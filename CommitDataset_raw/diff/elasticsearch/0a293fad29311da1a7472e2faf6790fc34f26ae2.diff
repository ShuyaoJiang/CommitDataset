[+++ b/core/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +    public interface Provider {, +++ b/core/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +    public interface Provider {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +    BulkShardRequest(ShardId shardId, RefreshPolicy refreshPolicy, BulkItemRequest[] items) {, +++ b/core/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +    public interface Provider {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +    BulkShardRequest(ShardId shardId, RefreshPolicy refreshPolicy, BulkItemRequest[] items) {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +            BulkShardRequest bulkShardRequest = new BulkShardRequest(shardId, bulkRequest.getRefreshPolicy(),, +++ b/core/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +    public interface Provider {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +    BulkShardRequest(ShardId shardId, RefreshPolicy refreshPolicy, BulkItemRequest[] items) {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +            BulkShardRequest bulkShardRequest = new BulkShardRequest(shardId, bulkRequest.getRefreshPolicy(),, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +                GetResult getResult = indexShard.getService().get(result, request.id(), request.type(), request.fields(), request.fetchSourceContext());, +++ b/core/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +    public interface Provider {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +    BulkShardRequest(ShardId shardId, RefreshPolicy refreshPolicy, BulkItemRequest[] items) {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +            BulkShardRequest bulkShardRequest = new BulkShardRequest(shardId, bulkRequest.getRefreshPolicy(),, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +                GetResult getResult = indexShard.getService().get(result, request.id(), request.type(), request.fields(), request.fetchSourceContext());, +++ b/core/src/main/java/org/elasticsearch/action/support/WriteResponse.java, +    void setForcedRefresh(boolean forcedRefresh);, +++ b/core/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +    public interface Provider {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +    BulkShardRequest(ShardId shardId, RefreshPolicy refreshPolicy, BulkItemRequest[] items) {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +            BulkShardRequest bulkShardRequest = new BulkShardRequest(shardId, bulkRequest.getRefreshPolicy(),, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +                GetResult getResult = indexShard.getService().get(result, request.id(), request.type(), request.fields(), request.fetchSourceContext());, +++ b/core/src/main/java/org/elasticsearch/action/support/WriteResponse.java, +    void setForcedRefresh(boolean forcedRefresh);, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationResponse.java, +++ b/core/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +    public interface Provider {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +    BulkShardRequest(ShardId shardId, RefreshPolicy refreshPolicy, BulkItemRequest[] items) {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +            BulkShardRequest bulkShardRequest = new BulkShardRequest(shardId, bulkRequest.getRefreshPolicy(),, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +                GetResult getResult = indexShard.getService().get(result, request.id(), request.type(), request.fields(), request.fetchSourceContext());, +++ b/core/src/main/java/org/elasticsearch/action/support/WriteResponse.java, +    void setForcedRefresh(boolean forcedRefresh);, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationResponse.java, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TermVectorsRequest.java, +                    termVectorsRequest.filterSettings(readFilterSettings(parser));, +    private static FilterSettings readFilterSettings(XContentParser parser) throws IOException {, +++ b/core/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +    public interface Provider {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +    BulkShardRequest(ShardId shardId, RefreshPolicy refreshPolicy, BulkItemRequest[] items) {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +            BulkShardRequest bulkShardRequest = new BulkShardRequest(shardId, bulkRequest.getRefreshPolicy(),, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +                GetResult getResult = indexShard.getService().get(result, request.id(), request.type(), request.fields(), request.fetchSourceContext());, +++ b/core/src/main/java/org/elasticsearch/action/support/WriteResponse.java, +    void setForcedRefresh(boolean forcedRefresh);, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationResponse.java, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TermVectorsRequest.java, +                    termVectorsRequest.filterSettings(readFilterSettings(parser));, +    private static FilterSettings readFilterSettings(XContentParser parser) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +    public UpdateHelper(Settings settings, ScriptService scriptService) {, +++ b/core/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +    public interface Provider {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +    BulkShardRequest(ShardId shardId, RefreshPolicy refreshPolicy, BulkItemRequest[] items) {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +            BulkShardRequest bulkShardRequest = new BulkShardRequest(shardId, bulkRequest.getRefreshPolicy(),, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +                GetResult getResult = indexShard.getService().get(result, request.id(), request.type(), request.fields(), request.fetchSourceContext());, +++ b/core/src/main/java/org/elasticsearch/action/support/WriteResponse.java, +    void setForcedRefresh(boolean forcedRefresh);, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationResponse.java, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TermVectorsRequest.java, +                    termVectorsRequest.filterSettings(readFilterSettings(parser));, +    private static FilterSettings readFilterSettings(XContentParser parser) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +    public UpdateHelper(Settings settings, ScriptService scriptService) {, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterInfoService.java, +    ClusterInfo getClusterInfo();, +    void addListener(Listener listener);, +    interface Listener {, +        void onNewInfo(ClusterInfo info);, +++ b/core/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +    public interface Provider {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +    BulkShardRequest(ShardId shardId, RefreshPolicy refreshPolicy, BulkItemRequest[] items) {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +            BulkShardRequest bulkShardRequest = new BulkShardRequest(shardId, bulkRequest.getRefreshPolicy(),, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +                GetResult getResult = indexShard.getService().get(result, request.id(), request.type(), request.fields(), request.fetchSourceContext());]