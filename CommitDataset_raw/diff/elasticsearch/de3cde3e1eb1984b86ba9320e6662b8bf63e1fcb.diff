[+++ b/src/main/java/org/elasticsearch/index/engine/Engine.java, +    /**, +     * Retruns a new searcher instance. The consumer of this, +     * API is responsible for releasing the returned seacher in a, +     * safe manner, preferrablly in a try/finally block., +     * , +     * @see Searcher#release(), +     */, +    Searcher acquireSearcher() throws EngineException;, +++ b/src/main/java/org/elasticsearch/index/engine/Engine.java, +    /**, +     * Retruns a new searcher instance. The consumer of this, +     * API is responsible for releasing the returned seacher in a, +     * safe manner, preferrablly in a try/finally block., +     * , +     * @see Searcher#release(), +     */, +    Searcher acquireSearcher() throws EngineException;, +++ b/src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java, +            Searcher searcher = acquireSearcher();, +    public final Searcher acquireSearcher() throws EngineException {, +            Searcher searcher = acquireSearcher();, +        Searcher searcher = acquireSearcher();, +                        currentSearcher = acquireSearcher();, +++ b/src/main/java/org/elasticsearch/index/engine/Engine.java, +    /**, +     * Retruns a new searcher instance. The consumer of this, +     * API is responsible for releasing the returned seacher in a, +     * safe manner, preferrablly in a try/finally block., +     * , +     * @see Searcher#release(), +     */, +    Searcher acquireSearcher() throws EngineException;, +++ b/src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java, +            Searcher searcher = acquireSearcher();, +    public final Searcher acquireSearcher() throws EngineException {, +            Searcher searcher = acquireSearcher();, +        Searcher searcher = acquireSearcher();, +                        currentSearcher = acquireSearcher();, +++ b/src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java, +        return engine.acquireSearcher();, +++ b/src/main/java/org/elasticsearch/index/engine/Engine.java, +    /**, +     * Retruns a new searcher instance. The consumer of this, +     * API is responsible for releasing the returned seacher in a, +     * safe manner, preferrablly in a try/finally block., +     * , +     * @see Searcher#release(), +     */, +    Searcher acquireSearcher() throws EngineException;, +++ b/src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java, +            Searcher searcher = acquireSearcher();, +    public final Searcher acquireSearcher() throws EngineException {, +            Searcher searcher = acquireSearcher();, +        Searcher searcher = acquireSearcher();, +                        currentSearcher = acquireSearcher();, +++ b/src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java, +        return engine.acquireSearcher();, +++ b/src/test/java/org/elasticsearch/index/engine/robin/RobinEngineTests.java, +        Engine.Searcher searchResult = engine.acquireSearcher();, +        searchResult = engine.acquireSearcher();, +        searchResult = engine.acquireSearcher();, +        searchResult = engine.acquireSearcher();, +        searchResult = engine.acquireSearcher();, +        searchResult = engine.acquireSearcher();, +        searchResult = engine.acquireSearcher();, +        searchResult = engine.acquireSearcher();, +        searchResult = engine.acquireSearcher();, +        searchResult = engine.acquireSearcher();, +        searchResult = engine.acquireSearcher();, +        Engine.Searcher searchResult = engine.acquireSearcher();, +        searchResult = engine.acquireSearcher();, +        searchResult = engine.acquireSearcher();, +        Engine.Searcher updateSearchResult = engine.acquireSearcher();]