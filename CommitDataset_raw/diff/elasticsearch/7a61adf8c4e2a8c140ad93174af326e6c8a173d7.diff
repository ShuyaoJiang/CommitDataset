[+++ b/core/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +, +import java.util.Collection;, +    Collection<String> queryTypes = null;, +    public boolean isCacheable() {, +        // a hack for now :) to determine if a query string is cacheable, +        return !queryString.contains("now");, +    }, +, +    public Collection<String> queryTypes() {, +        return queryTypes;, +    }, +, +    public void queryTypes(Collection<String> queryTypes) {, +        this.queryTypes = queryTypes;, +    }, +, +        if (queryTypes != null ? !queryTypes.equals(that.queryTypes) : that.queryTypes != null) return false;, +        result = 31 * result + (queryTypes != null ? queryTypes.hashCode() : 0);, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +, +import java.util.Collection;, +    Collection<String> queryTypes = null;, +    public boolean isCacheable() {, +        // a hack for now :) to determine if a query string is cacheable, +        return !queryString.contains("now");, +    }, +, +    public Collection<String> queryTypes() {, +        return queryTypes;, +    }, +, +    public void queryTypes(Collection<String> queryTypes) {, +        this.queryTypes = queryTypes;, +    }, +, +        if (queryTypes != null ? !queryTypes.equals(that.queryTypes) : that.queryTypes != null) return false;, +        result = 31 * result + (queryTypes != null ? queryTypes.hashCode() : 0);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +            SearchContext.current().close();, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +, +import java.util.Collection;, +    Collection<String> queryTypes = null;, +    public boolean isCacheable() {, +        // a hack for now :) to determine if a query string is cacheable, +        return !queryString.contains("now");, +    }, +, +    public Collection<String> queryTypes() {, +        return queryTypes;, +    }, +, +    public void queryTypes(Collection<String> queryTypes) {, +        this.queryTypes = queryTypes;, +    }, +, +        if (queryTypes != null ? !queryTypes.equals(that.queryTypes) : that.queryTypes != null) return false;, +        result = 31 * result + (queryTypes != null ? queryTypes.hashCode() : 0);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +            SearchContext.current().close();, +++ b/core/src/main/java/org/elasticsearch/action/exists/TransportExistsAction.java, +                Lucene.EarlyTerminatingCollector existsCollector = Lucene.createExistsCollector();, +                Lucene.exists(context.searcher(), context.query(), existsCollector);, +                return new ShardExistsResponse(request.shardId(), existsCollector.exists());, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +, +import java.util.Collection;, +    Collection<String> queryTypes = null;, +    public boolean isCacheable() {, +        // a hack for now :) to determine if a query string is cacheable, +        return !queryString.contains("now");, +    }, +, +    public Collection<String> queryTypes() {, +        return queryTypes;, +    }, +, +    public void queryTypes(Collection<String> queryTypes) {, +        this.queryTypes = queryTypes;, +    }, +, +        if (queryTypes != null ? !queryTypes.equals(that.queryTypes) : that.queryTypes != null) return false;, +        result = 31 * result + (queryTypes != null ? queryTypes.hashCode() : 0);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +            SearchContext.current().close();, +++ b/core/src/main/java/org/elasticsearch/action/exists/TransportExistsAction.java, +                Lucene.EarlyTerminatingCollector existsCollector = Lucene.createExistsCollector();, +                Lucene.exists(context.searcher(), context.query(), existsCollector);, +                return new ShardExistsResponse(request.shardId(), existsCollector.exists());, +++ b/core/src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastAction.java, +    protected final ThreadPool threadPool;, +        this.threadPool = threadPool;, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +, +import java.util.Collection;, +    Collection<String> queryTypes = null;, +    public boolean isCacheable() {, +        // a hack for now :) to determine if a query string is cacheable, +        return !queryString.contains("now");]