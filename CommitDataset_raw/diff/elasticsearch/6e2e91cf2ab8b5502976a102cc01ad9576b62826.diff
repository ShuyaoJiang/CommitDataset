[+++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    public synchronized IndexShard createShard(ShardRouting routing) throws IOException {, +            throw new IllegalStateException("Can't create shard " + routing.shardId() + ", closed");, +        final ShardId shardId = routing.shardId();, +            indexShard.updateRoutingEntry(routing, true);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    public synchronized IndexShard createShard(ShardRouting routing) throws IOException {, +            throw new IllegalStateException("Can't create shard " + routing.shardId() + ", closed");, +        final ShardId shardId = routing.shardId();, +            indexShard.updateRoutingEntry(routing, true);, +++ b/core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java, +                IndexShard indexShard = indexService.createShard(shardRouting);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    public synchronized IndexShard createShard(ShardRouting routing) throws IOException {, +            throw new IllegalStateException("Can't create shard " + routing.shardId() + ", closed");, +        final ShardId shardId = routing.shardId();, +            indexShard.updateRoutingEntry(routing, true);, +++ b/core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java, +                IndexShard indexShard = indexService.createShard(shardRouting);, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +import org.apache.lucene.index.CorruptIndexException;, +import org.apache.lucene.index.DirectoryReader;, +import org.apache.lucene.index.IndexCommit;, +import org.apache.lucene.index.Term;, +import org.elasticsearch.test.*;, +        IndexShard newShard = test.createShard(routing);, +        IndexShard newShard = test.createShard(routing);, +        newShard = test.createShard(routing);, +        final IndexShard test_target_shard = test_target.createShard(routing);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    public synchronized IndexShard createShard(ShardRouting routing) throws IOException {, +            throw new IllegalStateException("Can't create shard " + routing.shardId() + ", closed");, +        final ShardId shardId = routing.shardId();, +            indexShard.updateRoutingEntry(routing, true);, +++ b/core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java, +                IndexShard indexShard = indexService.createShard(shardRouting);, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +import org.apache.lucene.index.CorruptIndexException;, +import org.apache.lucene.index.DirectoryReader;, +import org.apache.lucene.index.IndexCommit;, +import org.apache.lucene.index.Term;, +import org.elasticsearch.test.*;, +        IndexShard newShard = test.createShard(routing);, +        IndexShard newShard = test.createShard(routing);, +        newShard = test.createShard(routing);, +        final IndexShard test_target_shard = test_target.createShard(routing);, +++ b/core/src/test/java/org/elasticsearch/indices/IndicesLifecycleListenerSingleNodeTests.java, +            IndexShard shard = index.createShard(newRouting);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    public synchronized IndexShard createShard(ShardRouting routing) throws IOException {, +            throw new IllegalStateException("Can't create shard " + routing.shardId() + ", closed");, +        final ShardId shardId = routing.shardId();, +            indexShard.updateRoutingEntry(routing, true);, +++ b/core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java, +                IndexShard indexShard = indexService.createShard(shardRouting);, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +import org.apache.lucene.index.CorruptIndexException;, +import org.apache.lucene.index.DirectoryReader;, +import org.apache.lucene.index.IndexCommit;, +import org.apache.lucene.index.Term;, +import org.elasticsearch.test.*;, +        IndexShard newShard = test.createShard(routing);, +        IndexShard newShard = test.createShard(routing);, +        newShard = test.createShard(routing);, +        final IndexShard test_target_shard = test_target.createShard(routing);, +++ b/core/src/test/java/org/elasticsearch/indices/IndicesLifecycleListenerSingleNodeTests.java, +            IndexShard shard = index.createShard(newRouting);, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    public synchronized IndexShard createShard(ShardRouting routing) throws IOException {, +            throw new IllegalStateException("Can't create shard " + routing.shardId() + ", closed");, +        final ShardId shardId = routing.shardId();, +            indexShard.updateRoutingEntry(routing, true);, +++ b/core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java, +                IndexShard indexShard = indexService.createShard(shardRouting);, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +import org.apache.lucene.index.CorruptIndexException;, +import org.apache.lucene.index.DirectoryReader;, +import org.apache.lucene.index.IndexCommit;, +import org.apache.lucene.index.Term;, +import org.elasticsearch.test.*;, +        IndexShard newShard = test.createShard(routing);, +        IndexShard newShard = test.createShard(routing);, +        newShard = test.createShard(routing);, +        final IndexShard test_target_shard = test_target.createShard(routing);, +++ b/core/src/test/java/org/elasticsearch/indices/IndicesLifecycleListenerSingleNodeTests.java, +            IndexShard shard = index.createShard(newRouting);, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +    public synchronized IndexShard createShard(ShardRouting routing) throws IOException {, +            throw new IllegalStateException("Can't create shard " + routing.shardId() + ", closed");, +        final ShardId shardId = routing.shardId();, +            indexShard.updateRoutingEntry(routing, true);, +++ b/core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java, +                IndexShard indexShard = indexService.createShard(shardRouting);, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +import org.apache.lucene.index.CorruptIndexException;, +import org.apache.lucene.index.DirectoryReader;, +import org.apache.lucene.index.IndexCommit;]