[+++ b/docs/community/clients.asciidoc, +* There is of course the http://www.elasticsearch.org/guide/en/elasticsearch/client/java-api/current/index.html[native ES Java client], +++ b/docs/community/clients.asciidoc, +* There is of course the http://www.elasticsearch.org/guide/en/elasticsearch/client/java-api/current/index.html[native ES Java client], +++ b/docs/community/index.asciidoc, +:client: http://www.elasticsearch.org/guide/en/elasticsearch/client, +++ b/docs/community/clients.asciidoc, +* There is of course the http://www.elasticsearch.org/guide/en/elasticsearch/client/java-api/current/index.html[native ES Java client], +++ b/docs/community/index.asciidoc, +:client: http://www.elasticsearch.org/guide/en/elasticsearch/client, +++ b/docs/groovy-api/index.asciidoc, +:ref:  http://www.elasticsearch.org/guide/en/elasticsearch/reference/current, +:java: http://www.elasticsearch.org/guide/en/elasticsearch/client/java-api/current, +++ b/docs/community/clients.asciidoc, +* There is of course the http://www.elasticsearch.org/guide/en/elasticsearch/client/java-api/current/index.html[native ES Java client], +++ b/docs/community/index.asciidoc, +:client: http://www.elasticsearch.org/guide/en/elasticsearch/client, +++ b/docs/groovy-api/index.asciidoc, +:ref:  http://www.elasticsearch.org/guide/en/elasticsearch/reference/current, +:java: http://www.elasticsearch.org/guide/en/elasticsearch/client/java-api/current, +++ b/docs/java-api/index.asciidoc, +:ref: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current, +++ b/docs/community/clients.asciidoc, +* There is of course the http://www.elasticsearch.org/guide/en/elasticsearch/client/java-api/current/index.html[native ES Java client], +++ b/docs/community/index.asciidoc, +:client: http://www.elasticsearch.org/guide/en/elasticsearch/client, +++ b/docs/groovy-api/index.asciidoc, +:ref:  http://www.elasticsearch.org/guide/en/elasticsearch/reference/current, +:java: http://www.elasticsearch.org/guide/en/elasticsearch/client/java-api/current, +++ b/docs/java-api/index.asciidoc, +:ref: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current, +++ b/docs/javascript/index.asciidoc, += elasticsearch-js, +, +== Overview, +, +Official low-level client for Elasticsearch. Its goal is to provide common, +ground for all Elasticsearch-related code in JavaScript; because of this it tries, +to be opinion-free and very extendable., +, +The full documentation is available at http://elasticsearch.github.io/elasticsearch-js, +, +, +=== Getting the Node.js module, +, +To install the module into an existing Node.js project use npm:, +, +[source,sh], +------------------------------------, +npm install elasticsearch, +------------------------------------, +, +=== Getting the browser client, +, +For a browser-based projects, builds for modern browsers are available http://elasticsearch.github.io/elasticsearch-js#browser-builds[here]. Download one of the archives and extract it, inside you'll find three files, pick the one that best matches your environment:, +, + * elasticsearch.jquery.js - for projects that already use jQuery, + * elasticsearch.angular.js - for Angular projects, + * elasticsearch.js - generic build for all other projects, +, +Each of the library specific builds tie into the AJAX and Promise creation facilities provided by their respective libraries. This is an example of how Elasticsearch.js can be extended to provide a more opinionated approach when appropriate., +, +=== Setting up the client, +, +Now you are ready to get busy! First thing you'll need to do is create an instance of `elasticsearch.Client`. Here are several examples of configuration parameters you can use when creating that instance. For a full list of configuration options see http://elasticsearch.github.io/elasticsearch-js/index.html#configuration[the configuration docs]., +, +[source,javascript], +------------------------------------, +var elasticsearch = require('elasticsearch');, +, +// Connect to localhost:9200 and use the default settings, +var client = new elasticsearch.Client();, +, +// Connect the client to two nodes, requests will be, +// load-balanced between them using round-robin, +var client = elasticsearch.Client({, +  hosts: [, +    'elasticsearch1:9200',, +    'elasticsearch2:9200', +  ], +});, +, +// Connect to the this host's cluster, sniff, +// for the rest of the cluster right away, and, +// again every 5 minutes, +var client = elasticsearch.Client({, +  host: 'elasticsearch1:9200',, +  sniffOnStart: true,, +  sniffInterval: 300000, +});, +, +// Connect to this host using https, basic auth,, +// a path prefix, and static query string values, +var client = new elasticsearch.Client({, +  host: 'https://user:password@elasticsearch1/search?app=blog', +});, +------------------------------------, +, +, +=== Setting up the client in the browser]