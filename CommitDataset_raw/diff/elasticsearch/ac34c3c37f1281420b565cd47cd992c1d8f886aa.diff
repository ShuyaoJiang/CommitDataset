[+++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/AuthenticationService.java, +            final BiConsumer<Realm, ActionListener<User>> realmLookupConsumer = (realm, lookupUserListener) ->, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/AuthenticationService.java, +            final BiConsumer<Realm, ActionListener<User>> realmLookupConsumer = (realm, lookupUserListener) ->, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/Realm.java, +     * Authenticates the given token in an asynchronous fashion. A successful authentication will call the, +     * {@link ActionListener#onResponse} with the User associated with the given token. An unsuccessful authentication calls, +     * with {@code null} on the argument., +     * @param listener The listener to pass the authentication result to, +    public abstract void authenticate(AuthenticationToken token, ActionListener<User> listener);, +     * Looks up the user identified the String identifier. A successful lookup will call the {@link ActionListener#onResponse}, +     * with the {@link User} identified by the username. An unsuccessful lookup call with {@code null} as the argument. If lookup is not, +     * supported, simply return {@code null} when called., +     * @param listener The listener to pass the lookup result to, +    public abstract void lookupUser(String username, ActionListener<User> listener);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/AuthenticationService.java, +            final BiConsumer<Realm, ActionListener<User>> realmLookupConsumer = (realm, lookupUserListener) ->, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/Realm.java, +     * Authenticates the given token in an asynchronous fashion. A successful authentication will call the, +     * {@link ActionListener#onResponse} with the User associated with the given token. An unsuccessful authentication calls, +     * with {@code null} on the argument., +     * @param listener The listener to pass the authentication result to, +    public abstract void authenticate(AuthenticationToken token, ActionListener<User> listener);, +     * Looks up the user identified the String identifier. A successful lookup will call the {@link ActionListener#onResponse}, +     * with the {@link User} identified by the username. An unsuccessful lookup call with {@code null} as the argument. If lookup is not, +     * supported, simply return {@code null} when called., +     * @param listener The listener to pass the lookup result to, +    public abstract void lookupUser(String username, ActionListener<User> listener);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/esnative/NativeRealm.java, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/AuthenticationService.java, +            final BiConsumer<Realm, ActionListener<User>> realmLookupConsumer = (realm, lookupUserListener) ->, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/Realm.java, +     * Authenticates the given token in an asynchronous fashion. A successful authentication will call the, +     * {@link ActionListener#onResponse} with the User associated with the given token. An unsuccessful authentication calls, +     * with {@code null} on the argument., +     * @param listener The listener to pass the authentication result to, +    public abstract void authenticate(AuthenticationToken token, ActionListener<User> listener);, +     * Looks up the user identified the String identifier. A successful lookup will call the {@link ActionListener#onResponse}, +     * with the {@link User} identified by the username. An unsuccessful lookup call with {@code null} as the argument. If lookup is not, +     * supported, simply return {@code null} when called., +     * @param listener The listener to pass the lookup result to, +    public abstract void lookupUser(String username, ActionListener<User> listener);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/esnative/NativeRealm.java, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/esnative/ReservedRealm.java, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/AuthenticationService.java, +            final BiConsumer<Realm, ActionListener<User>> realmLookupConsumer = (realm, lookupUserListener) ->, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/Realm.java, +     * Authenticates the given token in an asynchronous fashion. A successful authentication will call the, +     * {@link ActionListener#onResponse} with the User associated with the given token. An unsuccessful authentication calls, +     * with {@code null} on the argument., +     * @param listener The listener to pass the authentication result to, +    public abstract void authenticate(AuthenticationToken token, ActionListener<User> listener);, +     * Looks up the user identified the String identifier. A successful lookup will call the {@link ActionListener#onResponse}, +     * with the {@link User} identified by the username. An unsuccessful lookup call with {@code null} as the argument. If lookup is not, +     * supported, simply return {@code null} when called., +     * @param listener The listener to pass the lookup result to, +    public abstract void lookupUser(String username, ActionListener<User> listener);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/esnative/NativeRealm.java, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/esnative/ReservedRealm.java, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/file/FileRealm.java, +    private final FileUserPasswdStore userPasswdStore;, +    private final FileUserRolesStore userRolesStore;, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/AuthenticationService.java, +            final BiConsumer<Realm, ActionListener<User>> realmLookupConsumer = (realm, lookupUserListener) ->, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/Realm.java, +     * Authenticates the given token in an asynchronous fashion. A successful authentication will call the, +     * {@link ActionListener#onResponse} with the User associated with the given token. An unsuccessful authentication calls, +     * with {@code null} on the argument., +     * @param listener The listener to pass the authentication result to, +    public abstract void authenticate(AuthenticationToken token, ActionListener<User> listener);, +     * Looks up the user identified the String identifier. A successful lookup will call the {@link ActionListener#onResponse}, +     * with the {@link User} identified by the username. An unsuccessful lookup call with {@code null} as the argument. If lookup is not, +     * supported, simply return {@code null} when called., +     * @param listener The listener to pass the lookup result to, +    public abstract void lookupUser(String username, ActionListener<User> listener);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/esnative/NativeRealm.java, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/esnative/ReservedRealm.java, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/file/FileRealm.java, +    private final FileUserPasswdStore userPasswdStore;, +    private final FileUserRolesStore userRolesStore;, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/ldap/LdapRealm.java, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/AuthenticationService.java, +            final BiConsumer<Realm, ActionListener<User>> realmLookupConsumer = (realm, lookupUserListener) ->, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/Realm.java, +     * Authenticates the given token in an asynchronous fashion. A successful authentication will call the, +     * {@link ActionListener#onResponse} with the User associated with the given token. An unsuccessful authentication calls, +     * with {@code null} on the argument., +     * @param listener The listener to pass the authentication result to, +    public abstract void authenticate(AuthenticationToken token, ActionListener<User> listener);, +     * Looks up the user identified the String identifier. A successful lookup will call the {@link ActionListener#onResponse}, +     * with the {@link User} identified by the username. An unsuccessful lookup call with {@code null} as the argument. If lookup is not, +     * supported, simply return {@code null} when called., +     * @param listener The listener to pass the lookup result to, +    public abstract void lookupUser(String username, ActionListener<User> listener);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/esnative/NativeRealm.java, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/esnative/ReservedRealm.java, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/file/FileRealm.java, +    private final FileUserPasswdStore userPasswdStore;, +    private final FileUserRolesStore userRolesStore;, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/ldap/LdapRealm.java]