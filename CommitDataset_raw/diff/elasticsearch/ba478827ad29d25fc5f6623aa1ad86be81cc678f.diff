[+++ b/server/src/main/java/org/elasticsearch/transport/TcpTransport.java, +    protected final BigArrays bigArrays;, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransport.java, +    protected final BigArrays bigArrays;, +++ b/test/framework/src/main/java/org/elasticsearch/transport/MockTcpTransport.java, +import org.elasticsearch.cli.SuppressForbidden;, +import org.elasticsearch.cluster.node.DiscoveryNode;, +import org.elasticsearch.common.bytes.BytesArray;, +import org.elasticsearch.common.concurrent.CompletableContext;, +import org.elasticsearch.common.io.stream.ReleasableBytesStreamOutput;, +import org.elasticsearch.core.internal.io.IOUtils;, +import java.io.EOFException;, +        byte[] minimalHeader = new byte[TcpHeader.MARKER_BYTES_SIZE + TcpHeader.MESSAGE_LENGTH_SIZE];, +        try {, +            input.readFully(minimalHeader);, +        } catch (EOFException eof) {, +, +        // Read message length will throw stream corrupted exception if the marker bytes incorrect, +        int msgSize = TcpTransport.readMessageLength(new BytesArray(minimalHeader));, +            int expectedSize = TcpHeader.MARKER_BYTES_SIZE + TcpHeader.MESSAGE_LENGTH_SIZE + msgSize;, +            try (BytesStreamOutput output = new ReleasableBytesStreamOutput(expectedSize, bigArrays)) {, +    }]