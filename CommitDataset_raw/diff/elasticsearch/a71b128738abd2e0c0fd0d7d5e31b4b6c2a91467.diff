[+++ b/core/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +        // TODO: should be validating if index options go "up" (but "down" is ok), +        if (Objects.equals(similarity(), other.similarity()) == false) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +        // TODO: should be validating if index options go "up" (but "down" is ok), +        if (Objects.equals(similarity(), other.similarity()) == false) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +            if (fieldMergeWith.customFieldDataSettings != null) {, +                if (!Objects.equal(fieldMergeWith.customFieldDataSettings, this.customFieldDataSettings)) {, +                    this.customFieldDataSettings = fieldMergeWith.customFieldDataSettings;, +                }, +            }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +        // TODO: should be validating if index options go "up" (but "down" is ok), +        if (Objects.equals(similarity(), other.similarity()) == false) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +            if (fieldMergeWith.customFieldDataSettings != null) {, +                if (!Objects.equal(fieldMergeWith.customFieldDataSettings, this.customFieldDataSettings)) {, +                    this.customFieldDataSettings = fieldMergeWith.customFieldDataSettings;, +                }, +            }, +++ b/core/src/test/java/org/elasticsearch/index/mapper/update/UpdateMappingOnClusterTests.java, +import com.carrotsearch.randomizedtesting.annotations.Seed;, +    @Seed(value = "12345678"), +    public void testUpdateTimestamp() throws Exception {, +        boolean enabled = randomBoolean();, +                .startObject("_timestamp").field("enabled", enabled).startObject("fielddata").field("loading", "lazy").field("format", "doc_values").endObject().field("store", "no").endObject(), +                .startObject("_timestamp").field("enabled", enabled).startObject("fielddata").field("loading", "eager").field("format", "array").endObject().field("store", "no").endObject()]