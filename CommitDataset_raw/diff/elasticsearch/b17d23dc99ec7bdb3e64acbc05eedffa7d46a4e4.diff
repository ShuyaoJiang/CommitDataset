[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/transport/src/main/java/org/elasticsearch/transport/client/PreBuiltTransportClient.java, +     * Netty wants to do some unwelcome things like use unsafe and replace a private field, or use a poorly considered buffer recycler. This, +     * method disables these things by default, but can be overridden by setting the corresponding system properties., +        /*, +         * We disable three pieces of Netty functionality here:, +         *  - we disable Netty from being unsafe, +         *  - we disable Netty from replacing the selector key set, +         *  - we disable Netty from using the recycler, +         *, +         * While permissions are needed to read and set these, the permissions needed here are innocuous and thus should simply be granted, +         * rather than us handling a security exception here., +         */, +        setSystemPropertyIfUnset("io.netty.noUnsafe", Boolean.toString(true));, +        setSystemPropertyIfUnset("io.netty.noKeySetOptimization", Boolean.toString(true));, +        setSystemPropertyIfUnset("io.netty.recycler.maxCapacityPerThread", Integer.toString(0));, +    @SuppressForbidden(reason = "set system properties to configure Netty"), +    private static void setSystemPropertyIfUnset(final String key, final String value) {, +        final String currentValue = System.getProperty(key);, +        if (currentValue == null) {, +            System.setProperty(key, value);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/transport/src/main/java/org/elasticsearch/transport/client/PreBuiltTransportClient.java, +     * Netty wants to do some unwelcome things like use unsafe and replace a private field, or use a poorly considered buffer recycler. This, +     * method disables these things by default, but can be overridden by setting the corresponding system properties., +        /*, +         * We disable three pieces of Netty functionality here:, +         *  - we disable Netty from being unsafe, +         *  - we disable Netty from replacing the selector key set, +         *  - we disable Netty from using the recycler, +         *, +         * While permissions are needed to read and set these, the permissions needed here are innocuous and thus should simply be granted, +         * rather than us handling a security exception here., +         */, +        setSystemPropertyIfUnset("io.netty.noUnsafe", Boolean.toString(true));, +        setSystemPropertyIfUnset("io.netty.noKeySetOptimization", Boolean.toString(true));, +        setSystemPropertyIfUnset("io.netty.recycler.maxCapacityPerThread", Integer.toString(0));, +    @SuppressForbidden(reason = "set system properties to configure Netty"), +    private static void setSystemPropertyIfUnset(final String key, final String value) {, +        final String currentValue = System.getProperty(key);, +        if (currentValue == null) {, +            System.setProperty(key, value);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchResponse.java, +import static org.elasticsearch.search.internal.InternalSearchResponse.readInternalSearchResponse;, +    private InternalSearchResponse internalResponse;, +    public SearchResponse(InternalSearchResponse internalResponse, String scrollId, int totalShards, int successfulShards,, +    @Nullable public Map<String, ProfileShardResult> getProfileResults() {, +            builder.field("_scroll_id", scrollId);, +        builder.field("took", tookInMillis);, +        builder.field("timed_out", isTimedOut());, +            builder.field("terminated_early", isTerminatedEarly());, +            builder.field("num_reduce_phases", getNumReducePhases());, +        internalResponse = readInternalSearchResponse(in);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/transport/src/main/java/org/elasticsearch/transport/client/PreBuiltTransportClient.java, +     * Netty wants to do some unwelcome things like use unsafe and replace a private field, or use a poorly considered buffer recycler. This, +     * method disables these things by default, but can be overridden by setting the corresponding system properties., +        /*, +         * We disable three pieces of Netty functionality here:, +         *  - we disable Netty from being unsafe, +         *  - we disable Netty from replacing the selector key set, +         *  - we disable Netty from using the recycler, +         *, +         * While permissions are needed to read and set these, the permissions needed here are innocuous and thus should simply be granted, +         * rather than us handling a security exception here., +         */, +        setSystemPropertyIfUnset("io.netty.noUnsafe", Boolean.toString(true));, +        setSystemPropertyIfUnset("io.netty.noKeySetOptimization", Boolean.toString(true));, +        setSystemPropertyIfUnset("io.netty.recycler.maxCapacityPerThread", Integer.toString(0));, +    @SuppressForbidden(reason = "set system properties to configure Netty"), +    private static void setSystemPropertyIfUnset(final String key, final String value) {, +        final String currentValue = System.getProperty(key);, +        if (currentValue == null) {, +            System.setProperty(key, value);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchResponse.java, +import static org.elasticsearch.search.internal.InternalSearchResponse.readInternalSearchResponse;, +    private InternalSearchResponse internalResponse;, +    public SearchResponse(InternalSearchResponse internalResponse, String scrollId, int totalShards, int successfulShards,, +    @Nullable public Map<String, ProfileShardResult> getProfileResults() {, +            builder.field("_scroll_id", scrollId);, +        builder.field("took", tookInMillis);, +        builder.field("timed_out", isTimedOut());, +            builder.field("terminated_early", isTerminatedEarly());, +            builder.field("num_reduce_phases", getNumReducePhases());, +        internalResponse = readInternalSearchResponse(in);, +++ /dev/null, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/transport/src/main/java/org/elasticsearch/transport/client/PreBuiltTransportClient.java, +     * Netty wants to do some unwelcome things like use unsafe and replace a private field, or use a poorly considered buffer recycler. This, +     * method disables these things by default, but can be overridden by setting the corresponding system properties., +        /*, +         * We disable three pieces of Netty functionality here:, +         *  - we disable Netty from being unsafe, +         *  - we disable Netty from replacing the selector key set, +         *  - we disable Netty from using the recycler, +         *, +         * While permissions are needed to read and set these, the permissions needed here are innocuous and thus should simply be granted, +         * rather than us handling a security exception here., +         */]