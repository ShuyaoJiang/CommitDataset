[+++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStatsTests.java, +                JvmStats jvm = nodeStats.getJvm();, +                JvmStats deserializedJvm = deserializedNodeStats.getJvm();, +                if (jvm == null) {, +                    assertNull(deserializedJvm);, +                    JvmStats.Mem mem = jvm.getMem();, +                    JvmStats.Mem deserializedMem = deserializedJvm.getMem();, +                    assertEquals(jvm.getTimestamp(), deserializedJvm.getTimestamp());, +                    assertEquals(mem.getHeapUsedPercent(), deserializedMem.getHeapUsedPercent());, +                    assertEquals(mem.getHeapUsed(), deserializedMem.getHeapUsed());, +                    assertEquals(mem.getHeapCommitted(), deserializedMem.getHeapCommitted());, +                    assertEquals(mem.getNonHeapCommitted(), deserializedMem.getNonHeapCommitted());, +                    assertEquals(mem.getNonHeapUsed(), deserializedMem.getNonHeapUsed());, +                    assertEquals(mem.getHeapMax(), deserializedMem.getHeapMax());, +                    JvmStats.Classes classes = jvm.getClasses();, +                    assertEquals(classes.getLoadedClassCount(), deserializedJvm.getClasses().getLoadedClassCount());, +                    assertEquals(classes.getTotalLoadedClassCount(), deserializedJvm.getClasses().getTotalLoadedClassCount());, +                    assertEquals(classes.getUnloadedClassCount(), deserializedJvm.getClasses().getUnloadedClassCount());, +                    assertEquals(jvm.getGc().getCollectors().length, deserializedJvm.getGc().getCollectors().length);, +                    for (int i = 0; i < jvm.getGc().getCollectors().length; i++) {, +                        JvmStats.GarbageCollector garbageCollector = jvm.getGc().getCollectors()[i];, +                        JvmStats.GarbageCollector deserializedGarbageCollector = deserializedJvm.getGc().getCollectors()[i];, +                    assertEquals(jvm.getThreads().getCount(), deserializedJvm.getThreads().getCount());, +                    assertEquals(jvm.getThreads().getPeakCount(), deserializedJvm.getThreads().getPeakCount());, +                    assertEquals(jvm.getUptime(), deserializedJvm.getUptime());, +                    if (jvm.getBufferPools() == null) {, +                        assertNull(deserializedJvm.getBufferPools());, +                        assertEquals(jvm.getBufferPools().size(), deserializedJvm.getBufferPools().size());, +                        for (int i = 0; i < jvm.getBufferPools().size(); i++) {, +                            JvmStats.BufferPool bufferPool = jvm.getBufferPools().get(i);, +                            JvmStats.BufferPool deserializedBufferPool = deserializedJvm.getBufferPools().get(i);, +                FsInfo fs = nodeStats.getFs();, +                FsInfo deserializedFs = deserializedNodeStats.getFs();, +                if (fs == null) {, +                    assertNull(deserializedFs);, +                    assertEquals(fs.getTimestamp(), deserializedFs.getTimestamp());, +                    assertEquals(fs.getTotal().getAvailable(), deserializedFs.getTotal().getAvailable());, +                    assertEquals(fs.getTotal().getTotal(), deserializedFs.getTotal().getTotal());, +                    assertEquals(fs.getTotal().getFree(), deserializedFs.getTotal().getFree());, +                    assertEquals(fs.getTotal().getMount(), deserializedFs.getTotal().getMount());, +                    assertEquals(fs.getTotal().getPath(), deserializedFs.getTotal().getPath());, +                    assertEquals(fs.getTotal().getSpins(), deserializedFs.getTotal().getSpins());, +                    assertEquals(fs.getTotal().getType(), deserializedFs.getTotal().getType());, +                    FsInfo.IoStats ioStats = fs.getIoStats();, +                    FsInfo.IoStats deserializedIoStats = deserializedFs.getIoStats();, +                    assertEquals(ioStats.getTotalOperations(), deserializedIoStats.getTotalOperations());, +                    assertEquals(ioStats.getTotalReadKilobytes(), deserializedIoStats.getTotalReadKilobytes());, +                    assertEquals(ioStats.getTotalReadOperations(), deserializedIoStats.getTotalReadOperations());, +                    assertEquals(ioStats.getTotalWriteKilobytes(), deserializedIoStats.getTotalWriteKilobytes());, +                    assertEquals(ioStats.getTotalWriteOperations(), deserializedIoStats.getTotalWriteOperations());, +                    assertEquals(ioStats.getDevicesStats().length, deserializedIoStats.getDevicesStats().length);, +                    for (int i = 0; i < ioStats.getDevicesStats().length; i++) {, +                        FsInfo.DeviceStats deviceStats = ioStats.getDevicesStats()[i];, +                        FsInfo.DeviceStats deserializedDeviceStats = deserializedIoStats.getDevicesStats()[i];, +                ScriptStats scriptStats = nodeStats.getScriptStats();, +                if (scriptStats == null) {, +                    assertEquals(scriptStats.getCacheEvictions(), deserializedNodeStats.getScriptStats().getCacheEvictions());, +                    assertEquals(scriptStats.getCompilations(), deserializedNodeStats.getScriptStats().getCompilations());, +                DiscoveryStats discoveryStats = nodeStats.getDiscoveryStats();, +                DiscoveryStats deserializedDiscoveryStats = deserializedNodeStats.getDiscoveryStats();, +                if (discoveryStats == null) {, +                    assertNull(deserializedDiscoveryStats);, +                    PendingClusterStateStats queueStats = discoveryStats.getQueueStats();, +                    if (queueStats == null) {, +                        assertNull(deserializedDiscoveryStats.getQueueStats());, +                        assertEquals(queueStats.getCommitted(), deserializedDiscoveryStats.getQueueStats().getCommitted());, +                        assertEquals(queueStats.getTotal(), deserializedDiscoveryStats.getQueueStats().getTotal());, +                        assertEquals(queueStats.getPending(), deserializedDiscoveryStats.getQueueStats().getPending());, +                IngestStats ingestStats = nodeStats.getIngestStats();, +                IngestStats deserializedIngestStats = deserializedNodeStats.getIngestStats();, +                if (ingestStats == null) {, +                    assertNull(deserializedIngestStats);, +                    IngestStats.Stats totalStats = ingestStats.getTotalStats();, +                    assertEquals(totalStats.getIngestCount(), deserializedIngestStats.getTotalStats().getIngestCount());, +                    assertEquals(totalStats.getIngestCurrent(), deserializedIngestStats.getTotalStats().getIngestCurrent());, +                    assertEquals(totalStats.getIngestFailedCount(), deserializedIngestStats.getTotalStats().getIngestFailedCount());, +                    assertEquals(totalStats.getIngestTimeInMillis(), deserializedIngestStats.getTotalStats().getIngestTimeInMillis());, +                    assertEquals(ingestStats.getStatsPerPipeline().size(), deserializedIngestStats.getStatsPerPipeline().size());, +                    for (Map.Entry<String, IngestStats.Stats> entry : ingestStats.getStatsPerPipeline().entrySet()) {, +                        IngestStats.Stats deserializedStats = deserializedIngestStats.getStatsPerPipeline().get(entry.getKey());]