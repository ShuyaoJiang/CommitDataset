[+++ b/src/main/java/org/elasticsearch/gateway/GatewayAllocator.java, +import java.util.concurrent.atomic.AtomicBoolean;, +                fetch = new InternalAsyncFetch<>(logger, "shard_started", shard.shardId(), startedAction);, +                fetch = new InternalAsyncFetch<>(logger, "shard_store", shard.shardId(), storeAction);, +    private final AtomicBoolean rerouting = new AtomicBoolean();, +    class InternalAsyncFetch<T extends BaseNodeResponse> extends AsyncShardFetch<T> {, +        public InternalAsyncFetch(ESLogger logger, String type, ShardId shardId, List<? extends BaseNodesResponse<T>, T> action) {, +            if (rerouting.compareAndSet(false, true) == false) {, +                logger.trace("{} already has pending reroute, ignoring {}", shardId, reason);, +                return;, +            }, +            clusterService.submitStateUpdateTask("async_shard_fetch", Priority.HIGH, new ClusterStateUpdateTask() {, +                    rerouting.set(false);]