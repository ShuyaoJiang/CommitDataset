[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/plugins/PluginManager.java, +import org.elasticsearch.common.io.Streams;, +import java.io.FileOutputStream;, +import java.util.Enumeration;, +import java.util.zip.ZipEntry;, +import java.util.zip.ZipFile;, +        File pluginFile = new File(environment.pluginsFile(), name + ".zip");, +        downloadHelper.download(pluginUrl, pluginFile, new HttpDownloadHelper.VerboseProgress(System.out));, +, +        // extract the plugin, +        File extractLocation = new File(environment.pluginsFile(), name);, +        ZipFile zipFile = null;, +        try {, +            zipFile = new ZipFile(pluginFile);, +            Enumeration<? extends ZipEntry> zipEntries = zipFile.entries();, +            while (zipEntries.hasMoreElements()) {, +                ZipEntry zipEntry = zipEntries.nextElement();, +                if (!(zipEntry.getName().endsWith(".jar") || zipEntry.getName().endsWith(".zip"))) {, +                    continue;, +                }, +                String zipName = zipEntry.getName().replace('\\', '/');, +                File target = new File(extractLocation, zipName);, +                target.getParentFile().mkdirs();, +                Streams.copy(zipFile.getInputStream(zipEntry), new FileOutputStream(target));, +            }, +        } catch (Exception e) {, +            System.err.println("failed to extract plugin [" + pluginFile + "]");, +        } finally {, +            if (zipFile != null) {, +                try {, +                    zipFile.close();, +                } catch (IOException e) {, +                    // ignore, +                }, +            }, +            pluginFile.delete();, +        }, +        File pluginToDelete = new File(environment.pluginsFile(), name);, +        if (pluginToDelete.exists()) {, +            FileSystemUtils.deleteRecursively(pluginToDelete, true);, +        pluginToDelete = new File(environment.pluginsFile(), name + ".zip");, +        if (pluginToDelete.exists()) {, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/plugins/PluginManager.java, +import org.elasticsearch.common.io.Streams;, +import java.io.FileOutputStream;, +import java.util.Enumeration;, +import java.util.zip.ZipEntry;, +import java.util.zip.ZipFile;, +        File pluginFile = new File(environment.pluginsFile(), name + ".zip");, +        downloadHelper.download(pluginUrl, pluginFile, new HttpDownloadHelper.VerboseProgress(System.out));, +, +        // extract the plugin, +        File extractLocation = new File(environment.pluginsFile(), name);, +        ZipFile zipFile = null;, +        try {, +            zipFile = new ZipFile(pluginFile);, +            Enumeration<? extends ZipEntry> zipEntries = zipFile.entries();, +            while (zipEntries.hasMoreElements()) {, +                ZipEntry zipEntry = zipEntries.nextElement();, +                if (!(zipEntry.getName().endsWith(".jar") || zipEntry.getName().endsWith(".zip"))) {, +                    continue;, +                }, +                String zipName = zipEntry.getName().replace('\\', '/');, +                File target = new File(extractLocation, zipName);, +                target.getParentFile().mkdirs();, +                Streams.copy(zipFile.getInputStream(zipEntry), new FileOutputStream(target));, +            }, +        } catch (Exception e) {, +            System.err.println("failed to extract plugin [" + pluginFile + "]");, +        } finally {, +            if (zipFile != null) {, +                try {, +                    zipFile.close();, +                } catch (IOException e) {, +                    // ignore, +                }, +            }, +            pluginFile.delete();, +        }, +        File pluginToDelete = new File(environment.pluginsFile(), name);, +        if (pluginToDelete.exists()) {, +            FileSystemUtils.deleteRecursively(pluginToDelete, true);, +        pluginToDelete = new File(environment.pluginsFile(), name + ".zip");, +        if (pluginToDelete.exists()) {, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/plugins/PluginsService.java, +import java.io.File;, +import java.io.IOException;, +import java.io.InputStream;, +                logger.trace("--- adding plugin [" + pluginFile.getAbsolutePath() + "]");]