[+++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version, Result result) {, +, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version, Result result) {, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version, Result result) {, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java, +    public ShardStats(ShardRouting routing, ShardPath shardPath, CommonStats commonStats, CommitStats commitStats) {, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version, Result result) {, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java, +    public ShardStats(ShardRouting routing, ShardPath shardPath, CommonStats commonStats, CommitStats commitStats) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java, +        return new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, flags), indexShard.commitStats());, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version, Result result) {, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java, +    public ShardStats(ShardRouting routing, ShardPath shardPath, CommonStats commonStats, CommitStats commitStats) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java, +        return new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, flags), indexShard.commitStats());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                        response = new IndexResponse(primary.shardId(), indexRequest.type(), indexRequest.id(),, +                        response = new DeleteResponse(request.shardId(), deleteRequest.type(), deleteRequest.id(),, +                updateOperationResult = new Engine.IndexResult(failure, updateRequest.version());, +                                updateIndexRequest.type(), updateIndexRequest.id(),, +                                indexResponse.getShardId(), indexResponse.getType(), indexResponse.getId(),, +                                updateDeleteRequest.type(), updateDeleteRequest.id(),, +                                deleteResponse.getShardId(), deleteResponse.getType(), deleteResponse.getId(),, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version, Result result) {, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java, +    public ShardStats(ShardRouting routing, ShardPath shardPath, CommonStats commonStats, CommitStats commitStats) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java, +        return new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, flags), indexShard.commitStats());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                        response = new IndexResponse(primary.shardId(), indexRequest.type(), indexRequest.id(),, +                        response = new DeleteResponse(request.shardId(), deleteRequest.type(), deleteRequest.id(),, +                updateOperationResult = new Engine.IndexResult(failure, updateRequest.version());, +                                updateIndexRequest.type(), updateIndexRequest.id(),, +                                indexResponse.getShardId(), indexResponse.getType(), indexResponse.getId(),, +                                updateDeleteRequest.type(), updateDeleteRequest.id(),, +                                deleteResponse.getShardId(), deleteResponse.getType(), deleteResponse.getId(),, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteResponse.java, +    public DeleteResponse(ShardId shardId, String type, String id, long version, boolean found) {, +        super(shardId, type, id, version, found ? Result.DELETED : Result.NOT_FOUND);, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version, Result result) {, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java, +    public ShardStats(ShardRouting routing, ShardPath shardPath, CommonStats commonStats, CommitStats commitStats) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java]