[+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +                if (result == null) {, +                    // add all the previous ones..., +                    result = new HashSet<>(expressions.subList(0, i));, +                }, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +                if (result == null) {, +                    // add all the previous ones..., +                    result = new HashSet<>(expressions.subList(0, i));, +                }, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +                // TODO: why does the target file sometimes already exist?  Simon says: I think, this can happen if you fail a shard and, +                // it's not cleaned up yet, the restore process tries to reuse files, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +                if (result == null) {, +                    // add all the previous ones..., +                    result = new HashSet<>(expressions.subList(0, i));, +                }, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +                // TODO: why does the target file sometimes already exist?  Simon says: I think, this can happen if you fail a shard and, +                // it's not cleaned up yet, the restore process tries to reuse files, +++ b/core/src/main/java/org/elasticsearch/script/ScriptSettings.java, +                        defaultLangAndType, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +                if (result == null) {, +                    // add all the previous ones..., +                    result = new HashSet<>(expressions.subList(0, i));, +                }, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +                // TODO: why does the target file sometimes already exist?  Simon says: I think, this can happen if you fail a shard and, +                // it's not cleaned up yet, the restore process tries to reuse files, +++ b/core/src/main/java/org/elasticsearch/script/ScriptSettings.java, +                        defaultLangAndType, Property.NodeScope);, +++ b/core/src/test/java/org/elasticsearch/cluster/metadata/WildcardExpressionResolverTests.java, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("testXXX", "+testYYY"))), equalTo(newHashSet("testXXX", "testYYY")));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("testXXX", "-testXXX"))).size(), equalTo(0));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("testXXX", "+testY*"))), equalTo(newHashSet("testXXX", "testYYY")));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("testXXX", "-testX*"))).size(), equalTo(0));, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +                if (result == null) {, +                    // add all the previous ones..., +                    result = new HashSet<>(expressions.subList(0, i));, +                }, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +                // TODO: why does the target file sometimes already exist?  Simon says: I think, this can happen if you fail a shard and, +                // it's not cleaned up yet, the restore process tries to reuse files, +++ b/core/src/main/java/org/elasticsearch/script/ScriptSettings.java, +                        defaultLangAndType, Property.NodeScope);, +++ b/core/src/test/java/org/elasticsearch/cluster/metadata/WildcardExpressionResolverTests.java, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("testXXX", "+testYYY"))), equalTo(newHashSet("testXXX", "testYYY")));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("testXXX", "-testXXX"))).size(), equalTo(0));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("testXXX", "+testY*"))), equalTo(newHashSet("testXXX", "testYYY")));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("testXXX", "-testX*"))).size(), equalTo(0));, +++ b/core/src/test/java/org/elasticsearch/script/ScriptSettingsTests.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +                if (result == null) {, +                    // add all the previous ones..., +                    result = new HashSet<>(expressions.subList(0, i));, +                }, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +                // TODO: why does the target file sometimes already exist?  Simon says: I think, this can happen if you fail a shard and, +                // it's not cleaned up yet, the restore process tries to reuse files, +++ b/core/src/main/java/org/elasticsearch/script/ScriptSettings.java, +                        defaultLangAndType, Property.NodeScope);, +++ b/core/src/test/java/org/elasticsearch/cluster/metadata/WildcardExpressionResolverTests.java, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("testXXX", "+testYYY"))), equalTo(newHashSet("testXXX", "testYYY")));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("testXXX", "-testXXX"))).size(), equalTo(0));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("testXXX", "+testY*"))), equalTo(newHashSet("testXXX", "testYYY")));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("testXXX", "-testX*"))).size(), equalTo(0));, +++ b/core/src/test/java/org/elasticsearch/script/ScriptSettingsTests.java, +++ b/docs/java-api/query-dsl/script-query.asciidoc, +[source,js], +, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +                if (result == null) {, +                    // add all the previous ones..., +                    result = new HashSet<>(expressions.subList(0, i));, +                }, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +                // TODO: why does the target file sometimes already exist?  Simon says: I think, this can happen if you fail a shard and, +                // it's not cleaned up yet, the restore process tries to reuse files, +++ b/core/src/main/java/org/elasticsearch/script/ScriptSettings.java, +                        defaultLangAndType, Property.NodeScope);, +++ b/core/src/test/java/org/elasticsearch/cluster/metadata/WildcardExpressionResolverTests.java, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("testXXX", "+testYYY"))), equalTo(newHashSet("testXXX", "testYYY")));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("testXXX", "-testXXX"))).size(), equalTo(0));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("testXXX", "+testY*"))), equalTo(newHashSet("testXXX", "testYYY")));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("testXXX", "-testX*"))).size(), equalTo(0));, +++ b/core/src/test/java/org/elasticsearch/script/ScriptSettingsTests.java, +++ b/docs/java-api/query-dsl/script-query.asciidoc, +[source,js], +, +, +++ b/docs/plugins/analysis-kuromoji.asciidoc, +    "position" : 3, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +                if (result == null) {, +                    // add all the previous ones..., +                    result = new HashSet<>(expressions.subList(0, i));]