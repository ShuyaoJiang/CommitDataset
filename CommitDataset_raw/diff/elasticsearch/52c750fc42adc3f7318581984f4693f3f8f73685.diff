[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/ParsedScrollId.java, +import java.util.Map;, +, +    private final Tuple<String, Long>[] context;, +    private final Map<String, String> attributes;, +, +    public ParsedScrollId(String source, String type, Tuple<String, Long>[] context, Map<String, String> attributes) {, +        this.context = context;, +        this.attributes = attributes;, +    public Tuple<String, Long>[] context() {, +        return context;, +    }, +, +    public Map<String, String> attributes() {, +        return this.attributes;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/ParsedScrollId.java, +import java.util.Map;, +, +    private final Tuple<String, Long>[] context;, +    private final Map<String, String> attributes;, +, +    public ParsedScrollId(String source, String type, Tuple<String, Long>[] context, Map<String, String> attributes) {, +        this.context = context;, +        this.attributes = attributes;, +    public Tuple<String, Long>[] context() {, +        return context;, +    }, +, +    public Map<String, String> attributes() {, +        return this.attributes;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchCountAction.java, +                scrollId = buildScrollId(request.searchType(), queryFetchResults.values(), null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/ParsedScrollId.java, +import java.util.Map;, +, +    private final Tuple<String, Long>[] context;, +    private final Map<String, String> attributes;, +, +    public ParsedScrollId(String source, String type, Tuple<String, Long>[] context, Map<String, String> attributes) {, +        this.context = context;, +        this.attributes = attributes;, +    public Tuple<String, Long>[] context() {, +        return context;, +    }, +, +    public Map<String, String> attributes() {, +        return this.attributes;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchCountAction.java, +                scrollId = buildScrollId(request.searchType(), queryFetchResults.values(), null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, +                scrollId = buildScrollId(request.searchType(), dfsResults, null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/ParsedScrollId.java, +import java.util.Map;, +, +    private final Tuple<String, Long>[] context;, +    private final Map<String, String> attributes;, +, +    public ParsedScrollId(String source, String type, Tuple<String, Long>[] context, Map<String, String> attributes) {, +        this.context = context;, +        this.attributes = attributes;, +    public Tuple<String, Long>[] context() {, +        return context;, +    }, +, +    public Map<String, String> attributes() {, +        return this.attributes;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchCountAction.java, +                scrollId = buildScrollId(request.searchType(), queryFetchResults.values(), null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, +                scrollId = buildScrollId(request.searchType(), dfsResults, null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +                scrollId = TransportSearchHelper.buildScrollId(request.searchType(), dfsResults, null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/ParsedScrollId.java, +import java.util.Map;, +, +    private final Tuple<String, Long>[] context;, +    private final Map<String, String> attributes;, +, +    public ParsedScrollId(String source, String type, Tuple<String, Long>[] context, Map<String, String> attributes) {, +        this.context = context;, +        this.attributes = attributes;, +    public Tuple<String, Long>[] context() {, +        return context;, +    }, +, +    public Map<String, String> attributes() {, +        return this.attributes;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchCountAction.java, +                scrollId = buildScrollId(request.searchType(), queryFetchResults.values(), null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, +                scrollId = buildScrollId(request.searchType(), dfsResults, null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +                scrollId = TransportSearchHelper.buildScrollId(request.searchType(), dfsResults, null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/type/TransportSearchHelper.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.common.collect.ImmutableMap;, +import org.elasticsearch.common.collect.Maps;, +import java.util.Map;, +    public static String buildScrollId(SearchType searchType, Collection<? extends SearchPhaseResult> searchPhaseResults, @Nullable Map<String, String> attributes) throws IOException {, +            return buildScrollId(ParsedScrollId.QUERY_THEN_FETCH_TYPE, searchPhaseResults, attributes);]