[+++ b/core/src/main/java/org/apache/lucene/queries/BlendedTermQuery.java, +                BooleanQuery query = new BooleanQuery(disableCoord);, +                return query;, +                BooleanQuery query = new BooleanQuery(true);, +                BooleanQuery high = new BooleanQuery(disableCoord);, +                BooleanQuery low = new BooleanQuery(disableCoord);, +                        high.add(termQuery, BooleanClause.Occur.SHOULD);, +                        low.add(termQuery, BooleanClause.Occur.SHOULD);, +                        booleanClause.setOccur(BooleanClause.Occur.MUST);, +                    return high;, +                    query.add(high, BooleanClause.Occur.SHOULD);, +                    query.add(low, BooleanClause.Occur.MUST);, +                    return query;, +++ b/core/src/main/java/org/apache/lucene/queries/BlendedTermQuery.java, +                BooleanQuery query = new BooleanQuery(disableCoord);, +                return query;, +                BooleanQuery query = new BooleanQuery(true);, +                BooleanQuery high = new BooleanQuery(disableCoord);, +                BooleanQuery low = new BooleanQuery(disableCoord);, +                        high.add(termQuery, BooleanClause.Occur.SHOULD);, +                        low.add(termQuery, BooleanClause.Occur.SHOULD);, +                        booleanClause.setOccur(BooleanClause.Occur.MUST);, +                    return high;, +                    query.add(high, BooleanClause.Occur.SHOULD);, +                    query.add(low, BooleanClause.Occur.MUST);, +                    return query;, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import com.google.common.base.Objects;, +            if ("*".equals(field) || Objects.equal(field, this.field)) {, +++ b/core/src/main/java/org/apache/lucene/queries/BlendedTermQuery.java, +                BooleanQuery query = new BooleanQuery(disableCoord);, +                return query;, +                BooleanQuery query = new BooleanQuery(true);, +                BooleanQuery high = new BooleanQuery(disableCoord);, +                BooleanQuery low = new BooleanQuery(disableCoord);, +                        high.add(termQuery, BooleanClause.Occur.SHOULD);, +                        low.add(termQuery, BooleanClause.Occur.SHOULD);, +                        booleanClause.setOccur(BooleanClause.Occur.MUST);, +                    return high;, +                    query.add(high, BooleanClause.Occur.SHOULD);, +                    query.add(low, BooleanClause.Occur.MUST);, +                    return query;, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import com.google.common.base.Objects;, +            if ("*".equals(field) || Objects.equal(field, this.field)) {, +++ b/core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +            PhraseQuery query = new PhraseQuery();, +            query.setSlop(orig.getSlop());, +            for (int i = 0; i < termsIdx.length; i++) {, +                query.add(terms.get(i)[termsIdx[i]], pos[i]);, +            }, +++ b/core/src/main/java/org/apache/lucene/queries/BlendedTermQuery.java, +                BooleanQuery query = new BooleanQuery(disableCoord);, +                return query;, +                BooleanQuery query = new BooleanQuery(true);, +                BooleanQuery high = new BooleanQuery(disableCoord);, +                BooleanQuery low = new BooleanQuery(disableCoord);, +                        high.add(termQuery, BooleanClause.Occur.SHOULD);, +                        low.add(termQuery, BooleanClause.Occur.SHOULD);, +                        booleanClause.setOccur(BooleanClause.Occur.MUST);, +                    return high;, +                    query.add(high, BooleanClause.Occur.SHOULD);, +                    query.add(low, BooleanClause.Occur.MUST);, +                    return query;, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import com.google.common.base.Objects;, +            if ("*".equals(field) || Objects.equal(field, this.field)) {, +++ b/core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +            PhraseQuery query = new PhraseQuery();, +            query.setSlop(orig.getSlop());, +            for (int i = 0; i < termsIdx.length; i++) {, +                query.add(terms.get(i)[termsIdx[i]], pos[i]);, +            }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +import com.google.common.base.Predicate;, +import com.google.common.collect.Collections2;, +            typeIntersection = Collections2.filter(indexService.mapperService().types(), new Predicate<String>() {, +, +                @Override, +                public boolean apply(String type) {, +                    return Regex.simpleMatch(request.types(), type);, +                }, +, +            });, +++ b/core/src/main/java/org/apache/lucene/queries/BlendedTermQuery.java, +                BooleanQuery query = new BooleanQuery(disableCoord);, +                return query;, +                BooleanQuery query = new BooleanQuery(true);, +                BooleanQuery high = new BooleanQuery(disableCoord);, +                BooleanQuery low = new BooleanQuery(disableCoord);, +                        high.add(termQuery, BooleanClause.Occur.SHOULD);, +                        low.add(termQuery, BooleanClause.Occur.SHOULD);, +                        booleanClause.setOccur(BooleanClause.Occur.MUST);, +                    return high;, +                    query.add(high, BooleanClause.Occur.SHOULD);, +                    query.add(low, BooleanClause.Occur.MUST);, +                    return query;, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import com.google.common.base.Objects;, +            if ("*".equals(field) || Objects.equal(field, this.field)) {]