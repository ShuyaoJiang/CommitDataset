[+++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequest.java, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequest.java, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java, +    private FlushRequest request = new FlushRequest();, +        this.request = request;, +        request.readFrom(in);, +        request.writeTo(out);, +    }, +, +    FlushRequest getRequest() {, +        return request;, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequest.java, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java, +    private FlushRequest request = new FlushRequest();, +        this.request = request;, +        request.readFrom(in);, +        request.writeTo(out);, +    }, +, +    FlushRequest getRequest() {, +        return request;, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java, +        indexShard.flush(request.getRequest());, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequest.java, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java, +    private FlushRequest request = new FlushRequest();, +        this.request = request;, +        request.readFrom(in);, +        request.writeTo(out);, +    }, +, +    FlushRequest getRequest() {, +        return request;, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java, +        indexShard.flush(request.getRequest());, +++ b/src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java, +, +    @Override, +    public String toString() {, +        return "OptimizeRequest{" +, +                "waitForMerge=" + waitForMerge +, +                ", maxNumSegments=" + maxNumSegments +, +                ", onlyExpungeDeletes=" + onlyExpungeDeletes +, +                ", flush=" + flush +, +                ", upgrade=" + upgrade +, +                '}';, +    }, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequest.java, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java, +    private FlushRequest request = new FlushRequest();, +        this.request = request;, +        request.readFrom(in);, +        request.writeTo(out);, +    }, +, +    FlushRequest getRequest() {, +        return request;, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java, +        indexShard.flush(request.getRequest());, +++ b/src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java, +, +    @Override, +    public String toString() {, +        return "OptimizeRequest{" +, +                "waitForMerge=" + waitForMerge +, +                ", maxNumSegments=" + maxNumSegments +, +                ", onlyExpungeDeletes=" + onlyExpungeDeletes +, +                ", flush=" + flush +, +                ", upgrade=" + upgrade +, +                '}';, +    }, +++ b/src/main/java/org/elasticsearch/action/admin/indices/optimize/ShardOptimizeRequest.java, +final class ShardOptimizeRequest extends BroadcastShardOperationRequest {, +    private OptimizeRequest request = new OptimizeRequest();, +        this.request = request;, +        request.readFrom(in);, +        request.writeTo(out);, +    }, +, +    public OptimizeRequest optimizeRequest() {, +        return this.request;, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequest.java, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java, +    private FlushRequest request = new FlushRequest();, +        this.request = request;, +        request.readFrom(in);, +        request.writeTo(out);, +    }, +, +    FlushRequest getRequest() {, +        return request;, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java, +        indexShard.flush(request.getRequest());, +++ b/src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java, +, +    @Override, +    public String toString() {, +        return "OptimizeRequest{" +, +                "waitForMerge=" + waitForMerge +, +                ", maxNumSegments=" + maxNumSegments +]