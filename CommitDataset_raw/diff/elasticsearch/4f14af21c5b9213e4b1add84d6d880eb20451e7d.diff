[+++ b/src/main/java/org/apache/lucene/analysis/PrefixAnalyzer.java, +import java.lang.IllegalArgumentException;, +                throw new IllegalArgumentException("one or more prefixes needed");, +++ b/src/main/java/org/apache/lucene/analysis/PrefixAnalyzer.java, +import java.lang.IllegalArgumentException;, +                throw new IllegalArgumentException("one or more prefixes needed");, +++ b/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +import java.lang.IllegalArgumentException;, +        public static Type fromString(String type) throws IllegalArgumentException {, +            throw new IllegalArgumentException("rate limiting type [" + type + "] not valid, can be one of [all|merge|none]");, +    public void setType(String type) throws IllegalArgumentException {, +++ b/src/main/java/org/apache/lucene/analysis/PrefixAnalyzer.java, +import java.lang.IllegalArgumentException;, +                throw new IllegalArgumentException("one or more prefixes needed");, +++ b/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +import java.lang.IllegalArgumentException;, +        public static Type fromString(String type) throws IllegalArgumentException {, +            throw new IllegalArgumentException("rate limiting type [" + type + "] not valid, can be one of [all|merge|none]");, +    public void setType(String type) throws IllegalArgumentException {, +++ /dev/null, +++ b/src/main/java/org/apache/lucene/analysis/PrefixAnalyzer.java, +import java.lang.IllegalArgumentException;, +                throw new IllegalArgumentException("one or more prefixes needed");, +++ b/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +import java.lang.IllegalArgumentException;, +        public static Type fromString(String type) throws IllegalArgumentException {, +            throw new IllegalArgumentException("rate limiting type [" + type + "] not valid, can be one of [all|merge|none]");, +    public void setType(String type) throws IllegalArgumentException {, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/apache/lucene/analysis/PrefixAnalyzer.java, +import java.lang.IllegalArgumentException;, +                throw new IllegalArgumentException("one or more prefixes needed");, +++ b/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +import java.lang.IllegalArgumentException;, +        public static Type fromString(String type) throws IllegalArgumentException {, +            throw new IllegalArgumentException("rate limiting type [" + type + "] not valid, can be one of [all|merge|none]");, +    public void setType(String type) throws IllegalArgumentException {, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/Version.java, +     * @throws IllegalStateException if the given index settings doesn't contain a value for the key {@value IndexMetaData#SETTING_VERSION_CREATED}, +            throw new IllegalStateException("[" + IndexMetaData.SETTING_VERSION_CREATED + "] is not present in the index settings for index with uuid: [" + indexSettings.get(IndexMetaData.SETTING_UUID) + "]");, +++ b/src/main/java/org/apache/lucene/analysis/PrefixAnalyzer.java, +import java.lang.IllegalArgumentException;, +                throw new IllegalArgumentException("one or more prefixes needed");, +++ b/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +import java.lang.IllegalArgumentException;, +        public static Type fromString(String type) throws IllegalArgumentException {, +            throw new IllegalArgumentException("rate limiting type [" + type + "] not valid, can be one of [all|merge|none]");, +    public void setType(String type) throws IllegalArgumentException {, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/Version.java, +     * @throws IllegalStateException if the given index settings doesn't contain a value for the key {@value IndexMetaData#SETTING_VERSION_CREATED}, +            throw new IllegalStateException("[" + IndexMetaData.SETTING_VERSION_CREATED + "] is not present in the index settings for index with uuid: [" + indexSettings.get(IndexMetaData.SETTING_UUID) + "]");, +++ b/src/main/java/org/elasticsearch/action/ActionFuture.java, +     * an {@link IllegalStateException} instead. Also catches, +     * an {@link IllegalStateException} instead. Also catches, +     * an {@link IllegalStateException} instead. Also catches, +     * an {@link IllegalStateException} instead. Also catches, +     * an {@link IllegalStateException} instead. Also catches, +++ b/src/main/java/org/apache/lucene/analysis/PrefixAnalyzer.java, +import java.lang.IllegalArgumentException;, +                throw new IllegalArgumentException("one or more prefixes needed");, +++ b/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +import java.lang.IllegalArgumentException;, +        public static Type fromString(String type) throws IllegalArgumentException {, +            throw new IllegalArgumentException("rate limiting type [" + type + "] not valid, can be one of [all|merge|none]");, +    public void setType(String type) throws IllegalArgumentException {, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/Version.java, +     * @throws IllegalStateException if the given index settings doesn't contain a value for the key {@value IndexMetaData#SETTING_VERSION_CREATED}, +            throw new IllegalStateException("[" + IndexMetaData.SETTING_VERSION_CREATED + "] is not present in the index settings for index with uuid: [" + indexSettings.get(IndexMetaData.SETTING_UUID) + "]");, +++ b/src/main/java/org/elasticsearch/action/ActionFuture.java, +     * an {@link IllegalStateException} instead. Also catches, +     * an {@link IllegalStateException} instead. Also catches, +     * an {@link IllegalStateException} instead. Also catches, +     * an {@link IllegalStateException} instead. Also catches, +     * an {@link IllegalStateException} instead. Also catches, +++ b/src/main/java/org/elasticsearch/action/ActionRequestValidationException.java, +import org.elasticsearch.ElasticsearchException;, +, +import java.lang.IllegalArgumentException;, +public class ActionRequestValidationException extends IllegalArgumentException {, +        super("validation failed");, +++ b/src/main/java/org/apache/lucene/analysis/PrefixAnalyzer.java, +import java.lang.IllegalArgumentException;, +                throw new IllegalArgumentException("one or more prefixes needed");, +++ b/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +import java.lang.IllegalArgumentException;, +        public static Type fromString(String type) throws IllegalArgumentException {, +            throw new IllegalArgumentException("rate limiting type [" + type + "] not valid, can be one of [all|merge|none]");, +    public void setType(String type) throws IllegalArgumentException {, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/Version.java, +     * @throws IllegalStateException if the given index settings doesn't contain a value for the key {@value IndexMetaData#SETTING_VERSION_CREATED}, +            throw new IllegalStateException("[" + IndexMetaData.SETTING_VERSION_CREATED + "] is not present in the index settings for index with uuid: [" + indexSettings.get(IndexMetaData.SETTING_UUID) + "]");]