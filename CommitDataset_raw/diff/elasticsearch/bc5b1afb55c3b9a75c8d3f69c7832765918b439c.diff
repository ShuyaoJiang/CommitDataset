[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.client.core.TermVectorsRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.client.core.TermVectorsRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RollupRequestConverters.java, +, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        RequestConverters.Params parameters = new RequestConverters.Params(request);, +        parameters.withTimeout(stopRollupJobRequest.timeout());, +        if (stopRollupJobRequest.waitForCompletion() != null) {, +            parameters.withWaitForCompletion(stopRollupJobRequest.waitForCompletion());, +        }, +        return request;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.client.core.TermVectorsRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RollupRequestConverters.java, +, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        RequestConverters.Params parameters = new RequestConverters.Params(request);, +        parameters.withTimeout(stopRollupJobRequest.timeout());, +        if (stopRollupJobRequest.waitForCompletion() != null) {, +            parameters.withWaitForCompletion(stopRollupJobRequest.waitForCompletion());, +        }, +        return request;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/rollup/StopRollupJobRequest.java, +import org.elasticsearch.common.unit.TimeValue;, +    private TimeValue timeout;, +    private Boolean waitForCompletion;, +, +    /**, +     * Sets the requests optional "timeout" parameter., +     */, +    public void timeout(TimeValue timeout) {, +        this.timeout = timeout;, +    }, +, +    public TimeValue timeout() {, +        return this.timeout;, +    }, +, +    /**, +     * Sets the requests optional "wait_for_completion"., +     */, +    public void waitForCompletion(boolean waitForCompletion) {, +        this.waitForCompletion = waitForCompletion;, +    }, +, +    public Boolean waitForCompletion() {, +        return this.waitForCompletion;, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.client.core.TermVectorsRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RollupRequestConverters.java, +, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        RequestConverters.Params parameters = new RequestConverters.Params(request);, +        parameters.withTimeout(stopRollupJobRequest.timeout());, +        if (stopRollupJobRequest.waitForCompletion() != null) {, +            parameters.withWaitForCompletion(stopRollupJobRequest.waitForCompletion());, +        }, +        return request;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/rollup/StopRollupJobRequest.java, +import org.elasticsearch.common.unit.TimeValue;, +    private TimeValue timeout;, +    private Boolean waitForCompletion;, +, +    /**, +     * Sets the requests optional "timeout" parameter., +     */, +    public void timeout(TimeValue timeout) {, +        this.timeout = timeout;, +    }, +, +    public TimeValue timeout() {, +        return this.timeout;, +    }, +, +    /**, +     * Sets the requests optional "wait_for_completion"., +     */, +    public void waitForCompletion(boolean waitForCompletion) {, +        this.waitForCompletion = waitForCompletion;, +    }, +, +    public Boolean waitForCompletion() {, +        return this.waitForCompletion;, +    }, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RollupIT.java, +        stopRequest.waitForCompletion(randomBoolean());, +        if (stopRequest.waitForCompletion()) {, +            getResponse = execute(new GetRollupJobRequest(id), rollupClient::getRollupJob, rollupClient::getRollupJobAsync);, +            assertThat(getResponse.getJobs(), hasSize(1));, +            assertThat(getResponse.getJobs().get(0).getStatus().getState(), equalTo(IndexerState.STOPPED));, +        }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.client.core.TermVectorsRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RollupRequestConverters.java, +, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        RequestConverters.Params parameters = new RequestConverters.Params(request);]