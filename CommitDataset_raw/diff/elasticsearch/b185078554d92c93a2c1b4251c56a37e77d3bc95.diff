[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/ActionFuture.java, +import org.elasticsearch.common.Nullable;, +     *, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * from {@link org.elasticsearch.transport.RemoteTransportException}. The root failure is, +     * still accessible using {@link #getRootFailure()}., +     *, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * from {@link org.elasticsearch.transport.RemoteTransportException}. The root failure is, +     * still accessible using {@link #getRootFailure()}., +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * from {@link org.elasticsearch.transport.RemoteTransportException}. The root failure is, +     * still accessible using {@link #getRootFailure()}., +     *, +     *, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * from {@link org.elasticsearch.transport.RemoteTransportException}. The root failure is, +     * still accessible using {@link #getRootFailure()}., +     *, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * from {@link org.elasticsearch.transport.RemoteTransportException}. The root failure is, +     * still accessible using {@link #getRootFailure()}., +, +    /**, +     * The root (possibly) wrapped failure., +     */, +    @Nullable Throwable getRootFailure();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/ActionFuture.java, +import org.elasticsearch.common.Nullable;, +     *, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * from {@link org.elasticsearch.transport.RemoteTransportException}. The root failure is, +     * still accessible using {@link #getRootFailure()}., +     *, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * from {@link org.elasticsearch.transport.RemoteTransportException}. The root failure is, +     * still accessible using {@link #getRootFailure()}., +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * from {@link org.elasticsearch.transport.RemoteTransportException}. The root failure is, +     * still accessible using {@link #getRootFailure()}., +     *, +     *, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * from {@link org.elasticsearch.transport.RemoteTransportException}. The root failure is, +     * still accessible using {@link #getRootFailure()}., +     *, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * from {@link org.elasticsearch.transport.RemoteTransportException}. The root failure is, +     * still accessible using {@link #getRootFailure()}., +, +    /**, +     * The root (possibly) wrapped failure., +     */, +    @Nullable Throwable getRootFailure();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/AdapterActionFuture.java, +    private Throwable rootFailure;, +, +            throw rethrowExecutionException(e);, +            throw rethrowExecutionException(e);, +, +    static ElasticSearchException rethrowExecutionException(ExecutionException e) {, +        if (e.getCause() instanceof ElasticSearchException) {, +            ElasticSearchException esEx = (ElasticSearchException) e.getCause();, +            Throwable root = esEx.unwrapCause();, +            if (root instanceof ElasticSearchException) {, +                return (ElasticSearchException) root;, +            }, +            return new UncategorizedExecutionException("Failed execution", root);, +        } else {, +            return new UncategorizedExecutionException("Failed execution", e);, +        }, +, +    @Override public Throwable getRootFailure() {, +        return rootFailure;, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/ActionFuture.java, +import org.elasticsearch.common.Nullable;, +     *, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * from {@link org.elasticsearch.transport.RemoteTransportException}. The root failure is, +     * still accessible using {@link #getRootFailure()}., +     *, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * from {@link org.elasticsearch.transport.RemoteTransportException}. The root failure is, +     * still accessible using {@link #getRootFailure()}., +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * from {@link org.elasticsearch.transport.RemoteTransportException}. The root failure is, +     * still accessible using {@link #getRootFailure()}., +     *, +     *, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * from {@link org.elasticsearch.transport.RemoteTransportException}. The root failure is, +     * still accessible using {@link #getRootFailure()}., +     *, +     * <p>Note, the actual cause is unwrapped to the actual failure (for example, unwrapped, +     * from {@link org.elasticsearch.transport.RemoteTransportException}. The root failure is, +     * still accessible using {@link #getRootFailure()}., +, +    /**, +     * The root (possibly) wrapped failure.]