[+++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    private static final boolean REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT = false;, +    private static final boolean REST_EXCEPTION_SKIP_CAUSE_DEFAULT = false;, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    private static final boolean REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT = false;, +    private static final boolean REST_EXCEPTION_SKIP_CAUSE_DEFAULT = false;, +++ b/core/src/main/java/org/elasticsearch/action/ActionRequestValidationException.java, +import org.elasticsearch.ElasticsearchException;, +, +import java.util.ArrayList;, +import java.util.List;, +, +/**, + *, + */, +public class ActionRequestValidationException extends IllegalArgumentException {, +, +    private final List<String> validationErrors = new ArrayList<>();, +, +    public ActionRequestValidationException() {, +        super("validation failed");, +    }, +, +    public void addValidationError(String error) {, +        validationErrors.add(error);, +    }, +, +    public void addValidationErrors(Iterable<String> errors) {, +        for (String error : errors) {, +            validationErrors.add(error);, +        }, +    }, +, +    public List<String> validationErrors() {, +        return validationErrors;, +    }, +, +    @Override, +    public String getMessage() {, +        StringBuilder sb = new StringBuilder();, +        sb.append("Validation Failed: ");, +        int index = 0;, +        for (String error : validationErrors) {, +            sb.append(++index).append(": ").append(error).append(";");, +        }, +        return sb.toString();, +    }, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    private static final boolean REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT = false;, +    private static final boolean REST_EXCEPTION_SKIP_CAUSE_DEFAULT = false;, +++ b/core/src/main/java/org/elasticsearch/action/ActionRequestValidationException.java, +import org.elasticsearch.ElasticsearchException;, +, +import java.util.ArrayList;, +import java.util.List;, +, +/**, + *, + */, +public class ActionRequestValidationException extends IllegalArgumentException {, +, +    private final List<String> validationErrors = new ArrayList<>();, +, +    public ActionRequestValidationException() {, +        super("validation failed");, +    }, +, +    public void addValidationError(String error) {, +        validationErrors.add(error);, +    }, +, +    public void addValidationErrors(Iterable<String> errors) {, +        for (String error : errors) {, +            validationErrors.add(error);, +        }, +    }, +, +    public List<String> validationErrors() {, +        return validationErrors;, +    }, +, +    @Override, +    public String getMessage() {, +        StringBuilder sb = new StringBuilder();, +        sb.append("Validation Failed: ");, +        int index = 0;, +        for (String error : validationErrors) {, +            sb.append(++index).append(": ").append(error).append(";");, +        }, +        return sb.toString();, +    }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +    /** Calls doMain(), but with special formatting of errors */, +    public static void main(String[] args) throws StartupError {, +        try {, +            doMain(args);, +        } catch (Throwable t) {, +            throw new StartupError(t);, +        }, +    }]