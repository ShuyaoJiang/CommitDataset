[+++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        registerBuiltinRescorers();, +    private void registerBuiltinRescorers() {, +        namedWriteableRegistry.register(RescoreBuilder.class, QueryRescorerBuilder.NAME, QueryRescorerBuilder::new);, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        registerBuiltinRescorers();, +    private void registerBuiltinRescorers() {, +        namedWriteableRegistry.register(RescoreBuilder.class, QueryRescorerBuilder.NAME, QueryRescorerBuilder::new);, +++ b/core/src/main/java/org/elasticsearch/search/rescore/QueryRescoreMode.java, +    public static QueryRescoreMode readFromStream(StreamInput in) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        registerBuiltinRescorers();, +    private void registerBuiltinRescorers() {, +        namedWriteableRegistry.register(RescoreBuilder.class, QueryRescorerBuilder.NAME, QueryRescorerBuilder::new);, +++ b/core/src/main/java/org/elasticsearch/search/rescore/QueryRescoreMode.java, +    public static QueryRescoreMode readFromStream(StreamInput in) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/search/rescore/QueryRescorerBuilder.java, +     * Read from a stream., +     */, +    public QueryRescorerBuilder(StreamInput in) throws IOException {, +        super(in);, +        queryBuilder = in.readQuery();, +        scoreMode = QueryRescoreMode.readFromStream(in);, +        rescoreQueryWeight = in.readFloat();, +        queryWeight = in.readFloat();, +    }, +, +    @Override, +    public void doWriteTo(StreamOutput out) throws IOException {, +        out.writeQuery(queryBuilder);, +        scoreMode.writeTo(out);, +        out.writeFloat(rescoreQueryWeight);, +        out.writeFloat(queryWeight);, +    }, +, +    /**, +    public static QueryRescorerBuilder fromXContent(QueryParseContext parseContext) throws IOException {, +    private static class InnerBuilder {, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        registerBuiltinRescorers();, +    private void registerBuiltinRescorers() {, +        namedWriteableRegistry.register(RescoreBuilder.class, QueryRescorerBuilder.NAME, QueryRescorerBuilder::new);, +++ b/core/src/main/java/org/elasticsearch/search/rescore/QueryRescoreMode.java, +    public static QueryRescoreMode readFromStream(StreamInput in) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/search/rescore/QueryRescorerBuilder.java, +     * Read from a stream., +     */, +    public QueryRescorerBuilder(StreamInput in) throws IOException {, +        super(in);, +        queryBuilder = in.readQuery();, +        scoreMode = QueryRescoreMode.readFromStream(in);, +        rescoreQueryWeight = in.readFloat();, +        queryWeight = in.readFloat();, +    }, +, +    @Override, +    public void doWriteTo(StreamOutput out) throws IOException {, +        out.writeQuery(queryBuilder);, +        scoreMode.writeTo(out);, +        out.writeFloat(rescoreQueryWeight);, +        out.writeFloat(queryWeight);, +    }, +, +    /**, +    public static QueryRescorerBuilder fromXContent(QueryParseContext parseContext) throws IOException {, +    private static class InnerBuilder {, +++ b/core/src/main/java/org/elasticsearch/search/rescore/RescoreBuilder.java, +    /**, +     * Construct an empty RescoreBuilder., +     */, +    public RescoreBuilder() {, +    }, +, +    /**, +     * Read from a stream., +     */, +    protected RescoreBuilder(StreamInput in) throws IOException {, +        windowSize = in.readOptionalVInt();, +    }, +, +    @Override, +    public final void writeTo(StreamOutput out) throws IOException {, +        out.writeOptionalVInt(this.windowSize);, +        doWriteTo(out);, +    }, +, +    protected abstract void doWriteTo(StreamOutput out) throws IOException;, +, +                    rescorer = QueryRescorerBuilder.fromXContent(parseContext);, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        registerBuiltinRescorers();, +    private void registerBuiltinRescorers() {, +        namedWriteableRegistry.register(RescoreBuilder.class, QueryRescorerBuilder.NAME, QueryRescorerBuilder::new);, +++ b/core/src/main/java/org/elasticsearch/search/rescore/QueryRescoreMode.java, +    public static QueryRescoreMode readFromStream(StreamInput in) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/search/rescore/QueryRescorerBuilder.java, +     * Read from a stream., +     */, +    public QueryRescorerBuilder(StreamInput in) throws IOException {, +        super(in);]