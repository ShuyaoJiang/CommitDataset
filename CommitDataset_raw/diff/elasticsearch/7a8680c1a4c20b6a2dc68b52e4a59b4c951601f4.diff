[+++ b/core/src/test/java/org/elasticsearch/indices/recovery/RecoverySourceHandlerTests.java, +        final ParsedDocument doc = new ParsedDocument(versionField, seqID, id, type, null, Arrays.asList(document), source, null);, +++ b/core/src/test/java/org/elasticsearch/indices/recovery/RecoverySourceHandlerTests.java, +        final ParsedDocument doc = new ParsedDocument(versionField, seqID, id, type, null, Arrays.asList(document), source, null);, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/UpdateByQueryWhileModifyingTests.java, +    private static final int MAX_ATTEMPTS = 10;, +                        logger.info(, +                                "Caught expected version conflict trying to perform mutation number {} with version {}. Retrying.",, +                                i, get.getVersion());, +++ b/core/src/test/java/org/elasticsearch/indices/recovery/RecoverySourceHandlerTests.java, +        final ParsedDocument doc = new ParsedDocument(versionField, seqID, id, type, null, Arrays.asList(document), source, null);, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/UpdateByQueryWhileModifyingTests.java, +    private static final int MAX_ATTEMPTS = 10;, +                        logger.info(, +                                "Caught expected version conflict trying to perform mutation number {} with version {}. Retrying.",, +                                i, get.getVersion());, +++ b/plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/TikaDocTests.java, +import java.nio.file.Paths;, +    static final String TIKA_FILES = "/org/elasticsearch/ingest/attachment/test/tika-files/";, +        logger.debug("unzipping all tika sample files");, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(Paths.get(getClass().getResource(TIKA_FILES).toURI()))) {, +            for (Path doc : stream) {, +                String filename = doc.getFileName().toString();, +                TestUtil.unzip(getClass().getResourceAsStream(TIKA_FILES + filename), tmp);, +            }, +        }, +++ b/core/src/test/java/org/elasticsearch/indices/recovery/RecoverySourceHandlerTests.java, +        final ParsedDocument doc = new ParsedDocument(versionField, seqID, id, type, null, Arrays.asList(document), source, null);, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/UpdateByQueryWhileModifyingTests.java, +    private static final int MAX_ATTEMPTS = 10;, +                        logger.info(, +                                "Caught expected version conflict trying to perform mutation number {} with version {}. Retrying.",, +                                i, get.getVersion());, +++ b/plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/TikaDocTests.java, +import java.nio.file.Paths;, +    static final String TIKA_FILES = "/org/elasticsearch/ingest/attachment/test/tika-files/";, +        logger.debug("unzipping all tika sample files");, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(Paths.get(getClass().getResource(TIKA_FILES).toURI()))) {, +            for (Path doc : stream) {, +                String filename = doc.getFileName().toString();, +                TestUtil.unzip(getClass().getResourceAsStream(TIKA_FILES + filename), tmp);, +            }, +        }, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/indices/recovery/RecoverySourceHandlerTests.java, +        final ParsedDocument doc = new ParsedDocument(versionField, seqID, id, type, null, Arrays.asList(document), source, null);, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/UpdateByQueryWhileModifyingTests.java, +    private static final int MAX_ATTEMPTS = 10;, +                        logger.info(, +                                "Caught expected version conflict trying to perform mutation number {} with version {}. Retrying.",, +                                i, get.getVersion());, +++ b/plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/TikaDocTests.java, +import java.nio.file.Paths;, +    static final String TIKA_FILES = "/org/elasticsearch/ingest/attachment/test/tika-files/";, +        logger.debug("unzipping all tika sample files");, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(Paths.get(getClass().getResource(TIKA_FILES).toURI()))) {, +            for (Path doc : stream) {, +                String filename = doc.getFileName().toString();, +                TestUtil.unzip(getClass().getResourceAsStream(TIKA_FILES + filename), tmp);, +            }, +        }, +++ /dev/null, +++ b/plugins/ingest-attachment/src/test/resources/org/elasticsearch/ingest/attachment/test/tika-files/Doc1_ole.doc.zip, +++ b/core/src/test/java/org/elasticsearch/indices/recovery/RecoverySourceHandlerTests.java, +        final ParsedDocument doc = new ParsedDocument(versionField, seqID, id, type, null, Arrays.asList(document), source, null);, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/UpdateByQueryWhileModifyingTests.java, +    private static final int MAX_ATTEMPTS = 10;, +                        logger.info(, +                                "Caught expected version conflict trying to perform mutation number {} with version {}. Retrying.",, +                                i, get.getVersion());, +++ b/plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/TikaDocTests.java, +import java.nio.file.Paths;, +    static final String TIKA_FILES = "/org/elasticsearch/ingest/attachment/test/tika-files/";, +        logger.debug("unzipping all tika sample files");, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(Paths.get(getClass().getResource(TIKA_FILES).toURI()))) {, +            for (Path doc : stream) {, +                String filename = doc.getFileName().toString();, +                TestUtil.unzip(getClass().getResourceAsStream(TIKA_FILES + filename), tmp);, +            }, +        }, +++ /dev/null, +++ b/plugins/ingest-attachment/src/test/resources/org/elasticsearch/ingest/attachment/test/tika-files/Doc1_ole.doc.zip, +++ b/plugins/ingest-attachment/src/test/resources/org/elasticsearch/ingest/attachment/test/tika-files/EmbeddedDocument.docx.zip, +++ b/core/src/test/java/org/elasticsearch/indices/recovery/RecoverySourceHandlerTests.java, +        final ParsedDocument doc = new ParsedDocument(versionField, seqID, id, type, null, Arrays.asList(document), source, null);, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/UpdateByQueryWhileModifyingTests.java, +    private static final int MAX_ATTEMPTS = 10;, +                        logger.info(, +                                "Caught expected version conflict trying to perform mutation number {} with version {}. Retrying.",, +                                i, get.getVersion());, +++ b/plugins/ingest-attachment/src/test/java/org/elasticsearch/ingest/attachment/TikaDocTests.java, +import java.nio.file.Paths;, +    static final String TIKA_FILES = "/org/elasticsearch/ingest/attachment/test/tika-files/";, +        logger.debug("unzipping all tika sample files");, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(Paths.get(getClass().getResource(TIKA_FILES).toURI()))) {, +            for (Path doc : stream) {, +                String filename = doc.getFileName().toString();, +                TestUtil.unzip(getClass().getResourceAsStream(TIKA_FILES + filename), tmp);, +            }, +        }]