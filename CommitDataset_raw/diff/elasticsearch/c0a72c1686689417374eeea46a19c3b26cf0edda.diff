[+++ b/client/src/main/java/org/elasticsearch/client/RestClient.java, +import org.apache.http.Header;, +import java.util.Collection;, +    public ElasticsearchResponse performRequest(String method, String endpoint, Map<String, Object> params,, +                                                HttpEntity entity, Header... headers) throws IOException {, +        if (headers.length > 0) {, +            for (Header header : headers) {, +                request.addHeader(header);, +            }, +        }, +        private Collection<? extends Header> defaultHeaders;, +         * Sets the http client. A new default one will be created if not, +         * specified, by calling {@link #createDefaultHttpClient(Collection)}., +         * Sets the default request headers, to be used when creating the default http client instance., +         * In case the http client is set through {@link #setHttpClient(CloseableHttpClient)}, the default headers need to be, +         * set to it externally during http client construction., +         */, +        public Builder setDefaultHeaders(Collection<? extends Header> defaultHeaders) {, +            this.defaultHeaders = defaultHeaders;, +            return this;, +        }, +, +        /**, +                httpClient = createDefaultHttpClient(defaultHeaders);, +            } else {, +                if (defaultHeaders != null) {, +                    throw new IllegalArgumentException("defaultHeaders need to be set to the HttpClient directly when manually provided");, +                }, +            }, +            if (hosts == null || hosts.length == 0) {, +                throw new IllegalArgumentException("no hosts provided");, +        public static CloseableHttpClient createDefaultHttpClient(Collection<? extends Header> defaultHeaders) {, +            HttpClientBuilder httpClientBuilder = HttpClientBuilder.create();, +            if (defaultHeaders != null) {, +                httpClientBuilder.setDefaultHeaders(defaultHeaders);, +            }, +            return httpClientBuilder.setConnectionManager(connectionManager).setDefaultRequestConfig(requestConfig).build();, +++ b/client/src/main/java/org/elasticsearch/client/RestClient.java, +import org.apache.http.Header;, +import java.util.Collection;, +    public ElasticsearchResponse performRequest(String method, String endpoint, Map<String, Object> params,, +                                                HttpEntity entity, Header... headers) throws IOException {, +        if (headers.length > 0) {, +            for (Header header : headers) {, +                request.addHeader(header);, +            }, +        }, +        private Collection<? extends Header> defaultHeaders;, +         * Sets the http client. A new default one will be created if not, +         * specified, by calling {@link #createDefaultHttpClient(Collection)}., +         * Sets the default request headers, to be used when creating the default http client instance., +         * In case the http client is set through {@link #setHttpClient(CloseableHttpClient)}, the default headers need to be, +         * set to it externally during http client construction., +         */, +        public Builder setDefaultHeaders(Collection<? extends Header> defaultHeaders) {, +            this.defaultHeaders = defaultHeaders;, +            return this;, +        }, +, +        /**, +                httpClient = createDefaultHttpClient(defaultHeaders);, +            } else {, +                if (defaultHeaders != null) {, +                    throw new IllegalArgumentException("defaultHeaders need to be set to the HttpClient directly when manually provided");, +                }, +            }, +            if (hosts == null || hosts.length == 0) {, +                throw new IllegalArgumentException("no hosts provided");, +        public static CloseableHttpClient createDefaultHttpClient(Collection<? extends Header> defaultHeaders) {, +            HttpClientBuilder httpClientBuilder = HttpClientBuilder.create();, +            if (defaultHeaders != null) {, +                httpClientBuilder.setDefaultHeaders(defaultHeaders);, +            }, +            return httpClientBuilder.setConnectionManager(connectionManager).setDefaultRequestConfig(requestConfig).build();, +++ b/client/src/main/java/org/elasticsearch/client/sniff/Sniffer.java, +import java.util.Collection;, +         * through {@link RestClient.Builder#createDefaultHttpClient(Collection)}., +++ b/client/src/main/java/org/elasticsearch/client/RestClient.java, +import org.apache.http.Header;, +import java.util.Collection;, +    public ElasticsearchResponse performRequest(String method, String endpoint, Map<String, Object> params,, +                                                HttpEntity entity, Header... headers) throws IOException {, +        if (headers.length > 0) {, +            for (Header header : headers) {, +                request.addHeader(header);, +            }, +        }, +        private Collection<? extends Header> defaultHeaders;, +         * Sets the http client. A new default one will be created if not, +         * specified, by calling {@link #createDefaultHttpClient(Collection)}., +         * Sets the default request headers, to be used when creating the default http client instance., +         * In case the http client is set through {@link #setHttpClient(CloseableHttpClient)}, the default headers need to be, +         * set to it externally during http client construction., +         */, +        public Builder setDefaultHeaders(Collection<? extends Header> defaultHeaders) {, +            this.defaultHeaders = defaultHeaders;, +            return this;, +        }, +, +        /**]