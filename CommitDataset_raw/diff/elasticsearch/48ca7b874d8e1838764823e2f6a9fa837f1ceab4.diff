[+++ b/src/main/java/org/elasticsearch/cluster/action/index/NodeAliasesUpdatedAction.java, +import org.elasticsearch.cluster.ClusterState;, +    public NodeAliasesUpdatedAction(Settings settings, ThreadPool threadPool, TransportService transportService) {, +    public void nodeAliasesUpdated(final ClusterState clusterState, final NodeAliasesUpdatedResponse response) throws ElasticSearchException {, +        DiscoveryNodes nodes = clusterState.nodes();, +            transportService.sendRequest(clusterState.nodes().masterNode(),, +++ b/src/main/java/org/elasticsearch/cluster/action/index/NodeAliasesUpdatedAction.java, +import org.elasticsearch.cluster.ClusterState;, +    public NodeAliasesUpdatedAction(Settings settings, ThreadPool threadPool, TransportService transportService) {, +    public void nodeAliasesUpdated(final ClusterState clusterState, final NodeAliasesUpdatedResponse response) throws ElasticSearchException {, +        DiscoveryNodes nodes = clusterState.nodes();, +            transportService.sendRequest(clusterState.nodes().masterNode(),, +++ b/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexCreatedAction.java, +import org.elasticsearch.cluster.ClusterState;, +    public NodeIndexCreatedAction(Settings settings, ThreadPool threadPool, TransportService transportService) {, +    public void nodeIndexCreated(final ClusterState clusterState, final String index, final String nodeId) throws ElasticSearchException {, +        DiscoveryNodes nodes = clusterState.nodes();, +            transportService.sendRequest(clusterState.nodes().masterNode(),, +++ b/src/main/java/org/elasticsearch/cluster/action/index/NodeAliasesUpdatedAction.java, +import org.elasticsearch.cluster.ClusterState;, +    public NodeAliasesUpdatedAction(Settings settings, ThreadPool threadPool, TransportService transportService) {, +    public void nodeAliasesUpdated(final ClusterState clusterState, final NodeAliasesUpdatedResponse response) throws ElasticSearchException {, +        DiscoveryNodes nodes = clusterState.nodes();, +            transportService.sendRequest(clusterState.nodes().masterNode(),, +++ b/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexCreatedAction.java, +import org.elasticsearch.cluster.ClusterState;, +    public NodeIndexCreatedAction(Settings settings, ThreadPool threadPool, TransportService transportService) {, +    public void nodeIndexCreated(final ClusterState clusterState, final String index, final String nodeId) throws ElasticSearchException {, +        DiscoveryNodes nodes = clusterState.nodes();, +            transportService.sendRequest(clusterState.nodes().masterNode(),, +++ b/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +import org.elasticsearch.cluster.ClusterState;, +    public NodeIndexDeletedAction(Settings settings, ThreadPool threadPool, TransportService transportService) {, +    public void nodeIndexDeleted(final ClusterState clusterState, final String index, final String nodeId) throws ElasticSearchException {, +        DiscoveryNodes nodes = clusterState.nodes();, +            transportService.sendRequest(clusterState.nodes().masterNode(),, +    public void nodeIndexStoreDeleted(final ClusterState clusterState, final String index, final String nodeId) throws ElasticSearchException {, +        DiscoveryNodes nodes = clusterState.nodes();, +            transportService.sendRequest(clusterState.nodes().masterNode(),, +++ b/src/main/java/org/elasticsearch/cluster/action/index/NodeAliasesUpdatedAction.java, +import org.elasticsearch.cluster.ClusterState;, +    public NodeAliasesUpdatedAction(Settings settings, ThreadPool threadPool, TransportService transportService) {, +    public void nodeAliasesUpdated(final ClusterState clusterState, final NodeAliasesUpdatedResponse response) throws ElasticSearchException {, +        DiscoveryNodes nodes = clusterState.nodes();, +            transportService.sendRequest(clusterState.nodes().masterNode(),, +++ b/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexCreatedAction.java, +import org.elasticsearch.cluster.ClusterState;, +    public NodeIndexCreatedAction(Settings settings, ThreadPool threadPool, TransportService transportService) {, +    public void nodeIndexCreated(final ClusterState clusterState, final String index, final String nodeId) throws ElasticSearchException {, +        DiscoveryNodes nodes = clusterState.nodes();, +            transportService.sendRequest(clusterState.nodes().masterNode(),, +++ b/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +import org.elasticsearch.cluster.ClusterState;, +    public NodeIndexDeletedAction(Settings settings, ThreadPool threadPool, TransportService transportService) {, +    public void nodeIndexDeleted(final ClusterState clusterState, final String index, final String nodeId) throws ElasticSearchException {, +        DiscoveryNodes nodes = clusterState.nodes();, +            transportService.sendRequest(clusterState.nodes().masterNode(),, +    public void nodeIndexStoreDeleted(final ClusterState clusterState, final String index, final String nodeId) throws ElasticSearchException {, +        DiscoveryNodes nodes = clusterState.nodes();, +            transportService.sendRequest(clusterState.nodes().masterNode(),, +++ b/src/main/java/org/elasticsearch/cluster/action/index/NodeIndicesStateUpdatedAction.java, +import org.elasticsearch.cluster.ClusterState;, +    public NodeIndicesStateUpdatedAction(Settings settings, ThreadPool threadPool, TransportService transportService) {, +    public void nodeIndexStateUpdated(final ClusterState state, final NodeIndexStateUpdatedResponse response) throws ElasticSearchException {, +        DiscoveryNodes nodes = state.nodes();, +            transportService.sendRequest(state.nodes().masterNode(),, +, +++ b/src/main/java/org/elasticsearch/cluster/action/index/NodeAliasesUpdatedAction.java, +import org.elasticsearch.cluster.ClusterState;, +    public NodeAliasesUpdatedAction(Settings settings, ThreadPool threadPool, TransportService transportService) {, +    public void nodeAliasesUpdated(final ClusterState clusterState, final NodeAliasesUpdatedResponse response) throws ElasticSearchException {, +        DiscoveryNodes nodes = clusterState.nodes();, +            transportService.sendRequest(clusterState.nodes().masterNode(),, +++ b/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexCreatedAction.java, +import org.elasticsearch.cluster.ClusterState;, +    public NodeIndexCreatedAction(Settings settings, ThreadPool threadPool, TransportService transportService) {, +    public void nodeIndexCreated(final ClusterState clusterState, final String index, final String nodeId) throws ElasticSearchException {, +        DiscoveryNodes nodes = clusterState.nodes();, +            transportService.sendRequest(clusterState.nodes().masterNode(),, +++ b/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +import org.elasticsearch.cluster.ClusterState;, +    public NodeIndexDeletedAction(Settings settings, ThreadPool threadPool, TransportService transportService) {, +    public void nodeIndexDeleted(final ClusterState clusterState, final String index, final String nodeId) throws ElasticSearchException {, +        DiscoveryNodes nodes = clusterState.nodes();, +            transportService.sendRequest(clusterState.nodes().masterNode(),, +    public void nodeIndexStoreDeleted(final ClusterState clusterState, final String index, final String nodeId) throws ElasticSearchException {, +        DiscoveryNodes nodes = clusterState.nodes();, +            transportService.sendRequest(clusterState.nodes().masterNode(),, +++ b/src/main/java/org/elasticsearch/cluster/action/index/NodeIndicesStateUpdatedAction.java, +import org.elasticsearch.cluster.ClusterState;, +    public NodeIndicesStateUpdatedAction(Settings settings, ThreadPool threadPool, TransportService transportService) {, +    public void nodeIndexStateUpdated(final ClusterState state, final NodeIndexStateUpdatedResponse response) throws ElasticSearchException {, +        DiscoveryNodes nodes = state.nodes();, +            transportService.sendRequest(state.nodes().masterNode(),, +, +++ b/src/main/java/org/elasticsearch/cluster/action/index/NodeMappingCreatedAction.java, +import org.elasticsearch.cluster.ClusterState;, +    public NodeMappingCreatedAction(Settings settings, ThreadPool threadPool, TransportService transportService) {, +    public void nodeMappingCreated(final ClusterState state, final NodeMappingCreatedResponse response) throws ElasticSearchException {, +        if (state.nodes().localNodeMaster()) {]