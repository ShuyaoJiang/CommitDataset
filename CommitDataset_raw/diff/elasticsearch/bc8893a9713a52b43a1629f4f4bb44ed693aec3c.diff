[+++ b/TESTING.asciidoc, +mvn test -Dtests.filter="@Rest", +++ b/TESTING.asciidoc, +mvn test -Dtests.filter="@Rest", +++ b/core/pom.xml, +, +    <properties>, +        <skip.integ.tests>true</skip.integ.tests>, +    </properties>, +, +++ b/TESTING.asciidoc, +mvn test -Dtests.filter="@Rest", +++ b/core/pom.xml, +, +    <properties>, +        <skip.integ.tests>true</skip.integ.tests>, +    </properties>, +, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +import org.elasticsearch.client.Client;, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +    private final Map<String, FetchSubPhaseContext> subPhaseContexts = new HashMap<>();, +    @Override, +    public <SubPhaseContext extends FetchSubPhaseContext> SubPhaseContext getFetchSubPhaseContext(FetchSubPhase.ContextFactory<SubPhaseContext> contextFactory) {, +        String subPhaseName = contextFactory.getName();, +        if (subPhaseContexts.get(subPhaseName) == null) {, +            subPhaseContexts.put(subPhaseName, contextFactory.newContextInstance());, +        }, +        return (SubPhaseContext) subPhaseContexts.get(subPhaseName);, +    }, +, +++ b/TESTING.asciidoc, +mvn test -Dtests.filter="@Rest", +++ b/core/pom.xml, +, +    <properties>, +        <skip.integ.tests>true</skip.integ.tests>, +    </properties>, +, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +import org.elasticsearch.client.Client;, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +    private final Map<String, FetchSubPhaseContext> subPhaseContexts = new HashMap<>();, +    @Override, +    public <SubPhaseContext extends FetchSubPhaseContext> SubPhaseContext getFetchSubPhaseContext(FetchSubPhase.ContextFactory<SubPhaseContext> contextFactory) {, +        String subPhaseName = contextFactory.getName();, +        if (subPhaseContexts.get(subPhaseName) == null) {, +            subPhaseContexts.put(subPhaseName, contextFactory.newContextInstance());, +        }, +        return (SubPhaseContext) subPhaseContexts.get(subPhaseName);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.fetch.FetchSubPhaseModule;, +                new AggregationModule(),, +                new FetchSubPhaseModule());, +++ b/TESTING.asciidoc, +mvn test -Dtests.filter="@Rest", +++ b/core/pom.xml, +, +    <properties>, +        <skip.integ.tests>true</skip.integ.tests>, +    </properties>, +, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +import org.elasticsearch.client.Client;, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +    private final Map<String, FetchSubPhaseContext> subPhaseContexts = new HashMap<>();, +    @Override, +    public <SubPhaseContext extends FetchSubPhaseContext> SubPhaseContext getFetchSubPhaseContext(FetchSubPhase.ContextFactory<SubPhaseContext> contextFactory) {, +        String subPhaseName = contextFactory.getName();, +        if (subPhaseContexts.get(subPhaseName) == null) {, +            subPhaseContexts.put(subPhaseName, contextFactory.newContextInstance());, +        }, +        return (SubPhaseContext) subPhaseContexts.get(subPhaseName);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.fetch.FetchSubPhaseModule;, +                new AggregationModule(),, +                new FetchSubPhaseModule());, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +import org.elasticsearch.index.query.functionscore.ScoreFunctionParser;, +    public FetchPhase(Set<FetchSubPhase> fetchSubPhases, InnerHitsFetchSubPhase innerHitsFetchSubPhase) {, +        this.fetchSubPhases = fetchSubPhases.toArray(new FetchSubPhase[fetchSubPhases.size() + 1]);, +        this.fetchSubPhases[fetchSubPhases.size()] = innerHitsFetchSubPhase;, +++ b/TESTING.asciidoc, +mvn test -Dtests.filter="@Rest", +++ b/core/pom.xml, +, +    <properties>, +        <skip.integ.tests>true</skip.integ.tests>, +    </properties>, +, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +import org.elasticsearch.client.Client;, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +    private final Map<String, FetchSubPhaseContext> subPhaseContexts = new HashMap<>();, +    @Override, +    public <SubPhaseContext extends FetchSubPhaseContext> SubPhaseContext getFetchSubPhaseContext(FetchSubPhase.ContextFactory<SubPhaseContext> contextFactory) {]