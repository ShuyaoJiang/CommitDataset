[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/Bytes.java, +    public static ThreadLocal<ThreadLocals.CleanableValue<byte[]>> cachedBytes = new ThreadLocal<ThreadLocals.CleanableValue<byte[]>>() {, +        @Override protected ThreadLocals.CleanableValue<byte[]> initialValue() {, +            return new ThreadLocals.CleanableValue<byte[]>(new byte[256]);, +        }, +    };, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/Bytes.java, +    public static ThreadLocal<ThreadLocals.CleanableValue<byte[]>> cachedBytes = new ThreadLocal<ThreadLocals.CleanableValue<byte[]>>() {, +        @Override protected ThreadLocals.CleanableValue<byte[]> initialValue() {, +            return new ThreadLocals.CleanableValue<byte[]>(new byte[256]);, +        }, +    };, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/io/stream/StreamInput.java, +import org.elasticsearch.util.Bytes;, +        byte[] bytes = Bytes.cachedBytes.get().get();, +            Bytes.cachedBytes.get().set(bytes);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/Bytes.java, +    public static ThreadLocal<ThreadLocals.CleanableValue<byte[]>> cachedBytes = new ThreadLocal<ThreadLocals.CleanableValue<byte[]>>() {, +        @Override protected ThreadLocals.CleanableValue<byte[]> initialValue() {, +            return new ThreadLocals.CleanableValue<byte[]>(new byte[256]);, +        }, +    };, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/io/stream/StreamInput.java, +import org.elasticsearch.util.Bytes;, +        byte[] bytes = Bytes.cachedBytes.get().get();, +            Bytes.cachedBytes.get().set(bytes);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/xcontent/xson/XsonXContentParser.java, +import org.elasticsearch.util.Bytes;, +        byte[] bytes = Bytes.cachedBytes.get().get();, +            Bytes.cachedBytes.get().set(bytes);]