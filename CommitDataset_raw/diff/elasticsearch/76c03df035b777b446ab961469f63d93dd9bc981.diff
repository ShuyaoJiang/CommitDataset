[+++ b/core/src/main/java/org/elasticsearch/action/termvectors/TermVectorsRequest.java, +        this.filterSettings = other.filterSettings();, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TermVectorsRequest.java, +        this.filterSettings = other.filterSettings();, +++ b/core/src/test/java/org/elasticsearch/action/termvectors/TermVectorsUnitTests.java, +, +    @Test // issue #12311, +    public void testMultiParserFilter() throws Exception {, +        byte[] data = Streams.copyToBytesFromClasspath("/org/elasticsearch/action/termvectors/multiRequest3.json");, +        BytesReference bytes = new BytesArray(data);, +        MultiTermVectorsRequest request = new MultiTermVectorsRequest();, +        request.add(new TermVectorsRequest(), bytes);, +        checkParsedFilterParameters(request);, +    }, +, +    void checkParsedFilterParameters(MultiTermVectorsRequest multiRequest) {, +        int id = 1;, +        for (TermVectorsRequest request : multiRequest.requests) {, +            assertThat(request.index(), equalTo("testidx"));, +            assertThat(request.type(), equalTo("test"));, +            assertThat(request.id(), equalTo(id+""));, +            assertNotNull(request.filterSettings());, +            assertThat(request.filterSettings().maxNumTerms, equalTo(20));, +            assertThat(request.filterSettings().minTermFreq, equalTo(1));, +            assertThat(request.filterSettings().maxTermFreq, equalTo(20));, +            assertThat(request.filterSettings().minDocFreq, equalTo(1));, +            assertThat(request.filterSettings().maxDocFreq, equalTo(20));, +            assertThat(request.filterSettings().minWordLength, equalTo(1));, +            assertThat(request.filterSettings().maxWordLength, equalTo(20));, +            id++;, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TermVectorsRequest.java, +        this.filterSettings = other.filterSettings();, +++ b/core/src/test/java/org/elasticsearch/action/termvectors/TermVectorsUnitTests.java, +, +    @Test // issue #12311, +    public void testMultiParserFilter() throws Exception {, +        byte[] data = Streams.copyToBytesFromClasspath("/org/elasticsearch/action/termvectors/multiRequest3.json");, +        BytesReference bytes = new BytesArray(data);, +        MultiTermVectorsRequest request = new MultiTermVectorsRequest();, +        request.add(new TermVectorsRequest(), bytes);, +        checkParsedFilterParameters(request);, +    }, +, +    void checkParsedFilterParameters(MultiTermVectorsRequest multiRequest) {, +        int id = 1;, +        for (TermVectorsRequest request : multiRequest.requests) {, +            assertThat(request.index(), equalTo("testidx"));, +            assertThat(request.type(), equalTo("test"));, +            assertThat(request.id(), equalTo(id+""));, +            assertNotNull(request.filterSettings());, +            assertThat(request.filterSettings().maxNumTerms, equalTo(20));, +            assertThat(request.filterSettings().minTermFreq, equalTo(1));, +            assertThat(request.filterSettings().maxTermFreq, equalTo(20));, +            assertThat(request.filterSettings().minDocFreq, equalTo(1));, +            assertThat(request.filterSettings().maxDocFreq, equalTo(20));, +            assertThat(request.filterSettings().minWordLength, equalTo(1));, +            assertThat(request.filterSettings().maxWordLength, equalTo(20));, +            id++;, +        }, +    }, +++ b/core/src/test/java/org/elasticsearch/action/termvectors/multiRequest3.json, +{, +   "ids": ["1","2"],, +   "parameters": {, +      "_index": "testidx",, +      "_type": "test",, +      "filter": {, +         "max_num_terms": 20,, +         "min_term_freq": 1,, +         "max_term_freq": 20,, +         "min_doc_freq": 1,, +         "max_doc_freq": 20,, +         "min_word_length": 1,, +         "max_word_length": 20, +      }, +   }, +}]