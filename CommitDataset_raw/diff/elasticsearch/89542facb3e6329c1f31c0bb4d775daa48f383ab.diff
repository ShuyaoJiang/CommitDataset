[+++ b/docs/reference/mapping/fields/source-field.asciidoc, +, +[float], +[[include-exclude]], +==== Includes / Excludes, +, +Allow to specify paths in the source that would be included / excluded, +when it's stored, supporting `*` as wildcard annotation. For example:, +, +[source,js], +--------------------------------------------------, +{, +    "my_type" : {, +        "_source" : {, +            "includes" : ["path1.*", "path2.*"],, +            "excludes" : ["path3.*"], +        }, +    }, +}, +--------------------------------------------------, +++ b/docs/reference/mapping/fields/source-field.asciidoc, +, +[float], +[[include-exclude]], +==== Includes / Excludes, +, +Allow to specify paths in the source that would be included / excluded, +when it's stored, supporting `*` as wildcard annotation. For example:, +, +[source,js], +--------------------------------------------------, +{, +    "my_type" : {, +        "_source" : {, +            "includes" : ["path1.*", "path2.*"],, +            "excludes" : ["path3.*"], +        }, +    }, +}, +--------------------------------------------------, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +=== Boolean fields, +=== Murmur3 Fields, +++ b/docs/reference/mapping/fields/source-field.asciidoc, +, +[float], +[[include-exclude]], +==== Includes / Excludes, +, +Allow to specify paths in the source that would be included / excluded, +when it's stored, supporting `*` as wildcard annotation. For example:, +, +[source,js], +--------------------------------------------------, +{, +    "my_type" : {, +        "_source" : {, +            "includes" : ["path1.*", "path2.*"],, +            "excludes" : ["path3.*"], +        }, +    }, +}, +--------------------------------------------------, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +=== Boolean fields, +=== Murmur3 Fields, +++ b/docs/reference/search/request/search-type.asciidoc, +++ b/docs/reference/mapping/fields/source-field.asciidoc, +, +[float], +[[include-exclude]], +==== Includes / Excludes, +, +Allow to specify paths in the source that would be included / excluded, +when it's stored, supporting `*` as wildcard annotation. For example:, +, +[source,js], +--------------------------------------------------, +{, +    "my_type" : {, +        "_source" : {, +            "includes" : ["path1.*", "path2.*"],, +            "excludes" : ["path3.*"], +        }, +    }, +}, +--------------------------------------------------, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +=== Boolean fields, +=== Murmur3 Fields, +++ b/docs/reference/search/request/search-type.asciidoc, +++ b/rest-api-spec/api/search.json, +          "options" : ["query_then_fetch", "dfs_query_then_fetch", "count", "scan"],, +++ b/docs/reference/mapping/fields/source-field.asciidoc, +, +[float], +[[include-exclude]], +==== Includes / Excludes, +, +Allow to specify paths in the source that would be included / excluded]