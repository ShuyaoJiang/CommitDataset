[+++ b/modules/repository-url/src/test/java/org/elasticsearch/repositories/url/RepositoryURLClientYamlTestSuiteIT.java, +import org.elasticsearch.client.Request;, +        Request clusterSettingsRequest = new Request("GET", "/_cluster/settings");, +        clusterSettingsRequest.addParameter("include_defaults", "true");, +        clusterSettingsRequest.addParameter("filter_path", "defaults.path.repo,defaults.repositories.url.allowed_urls");, +        Response clusterSettingsResponse = client().performRequest(clusterSettingsRequest);, +        Request createFsRepositoryRequest = new Request("PUT", "/_snapshot/repository-fs");, +        createFsRepositoryRequest.setEntity(buildRepositorySettings(FsRepository.TYPE,, +                Settings.builder().put("location", pathRepo).build()));, +        Response createFsRepositoryResponse = client().performRequest(createFsRepositoryRequest);, +        Request createFileRepositoryRequest = new Request("PUT", "/_snapshot/repository-file");, +        createFileRepositoryRequest.setEntity(buildRepositorySettings(URLRepository.TYPE,, +                Settings.builder().put("url", pathRepoUri.toString()).build()));, +        Response createFileRepositoryResponse = client().performRequest(createFileRepositoryRequest);, +                    Request createUrlRepositoryRequest = new Request("PUT", "/_snapshot/repository-url");, +                    createUrlRepositoryRequest.setEntity(buildRepositorySettings(URLRepository.TYPE,, +                            Settings.builder().put("url", allowedUrl).build()));, +                    Response createUrlRepositoryResponse = client().performRequest(createUrlRepositoryRequest);]