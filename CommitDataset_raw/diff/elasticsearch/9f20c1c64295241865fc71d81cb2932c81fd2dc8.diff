[+++ b/src/main/java/org/elasticsearch/action/ActionWriteResponse.java, +++ b/src/main/java/org/elasticsearch/action/ActionWriteResponse.java, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +    protected void shardOperationOnReplica(ShardId shardId, BulkShardRequest request) throws Exception {, +                        if (index.parsedDoc().dynamicMappingsUpdate() != null) {, +                            if (indexService.index().name().equals(RiverIndexName.Conf.indexName(settings))) {, +                                // mappings updates on the _river are not validated synchronously so we can't, +                                // assume they are here when indexing on a replica, +                                indexService.mapperService().merge(indexRequest.type(), new CompressedString(index.parsedDoc().dynamicMappingsUpdate().toBytes()), true);, +                            } else {, +                                throw new ElasticsearchIllegalStateException("Index operations on replicas should not trigger dynamic mappings updates: [" + index.parsedDoc().dynamicMappingsUpdate() + "]");, +                            }, +                        if (create.parsedDoc().dynamicMappingsUpdate() != null) {, +                            if (indexService.index().name().equals(RiverIndexName.Conf.indexName(settings))) {, +                                // mappings updates on the _river are not validated synchronously so we can't, +                                // assume they are here when indexing on a replica, +                                indexService.mapperService().merge(indexRequest.type(), new CompressedString(create.parsedDoc().dynamicMappingsUpdate().toBytes()), true);, +                            } else {, +                                throw new ElasticsearchIllegalStateException("Index operations on replicas should not trigger dynamic mappings updates: [" + create.parsedDoc().dynamicMappingsUpdate() + "]");, +                            }, +++ b/src/main/java/org/elasticsearch/action/ActionWriteResponse.java, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +    protected void shardOperationOnReplica(ShardId shardId, BulkShardRequest request) throws Exception {, +                        if (index.parsedDoc().dynamicMappingsUpdate() != null) {, +                            if (indexService.index().name().equals(RiverIndexName.Conf.indexName(settings))) {, +                                // mappings updates on the _river are not validated synchronously so we can't, +                                // assume they are here when indexing on a replica, +                                indexService.mapperService().merge(indexRequest.type(), new CompressedString(index.parsedDoc().dynamicMappingsUpdate().toBytes()), true);, +                            } else {, +                                throw new ElasticsearchIllegalStateException("Index operations on replicas should not trigger dynamic mappings updates: [" + index.parsedDoc().dynamicMappingsUpdate() + "]");, +                            }, +                        if (create.parsedDoc().dynamicMappingsUpdate() != null) {, +                            if (indexService.index().name().equals(RiverIndexName.Conf.indexName(settings))) {, +                                // mappings updates on the _river are not validated synchronously so we can't, +                                // assume they are here when indexing on a replica, +                                indexService.mapperService().merge(indexRequest.type(), new CompressedString(create.parsedDoc().dynamicMappingsUpdate().toBytes()), true);, +                            } else {, +                                throw new ElasticsearchIllegalStateException("Index operations on replicas should not trigger dynamic mappings updates: [" + create.parsedDoc().dynamicMappingsUpdate() + "]");, +                            }, +++ b/src/main/java/org/elasticsearch/action/index/IndexResponse.java, +++ b/src/main/java/org/elasticsearch/action/ActionWriteResponse.java, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +    protected void shardOperationOnReplica(ShardId shardId, BulkShardRequest request) throws Exception {, +                        if (index.parsedDoc().dynamicMappingsUpdate() != null) {, +                            if (indexService.index().name().equals(RiverIndexName.Conf.indexName(settings))) {, +                                // mappings updates on the _river are not validated synchronously so we can't, +                                // assume they are here when indexing on a replica, +                                indexService.mapperService().merge(indexRequest.type(), new CompressedString(index.parsedDoc().dynamicMappingsUpdate().toBytes()), true);, +                            } else {, +                                throw new ElasticsearchIllegalStateException("Index operations on replicas should not trigger dynamic mappings updates: [" + index.parsedDoc().dynamicMappingsUpdate() + "]");, +                            }, +                        if (create.parsedDoc().dynamicMappingsUpdate() != null) {, +                            if (indexService.index().name().equals(RiverIndexName.Conf.indexName(settings))) {, +                                // mappings updates on the _river are not validated synchronously so we can't, +                                // assume they are here when indexing on a replica, +                                indexService.mapperService().merge(indexRequest.type(), new CompressedString(create.parsedDoc().dynamicMappingsUpdate().toBytes()), true);, +                            } else {, +                                throw new ElasticsearchIllegalStateException("Index operations on replicas should not trigger dynamic mappings updates: [" + create.parsedDoc().dynamicMappingsUpdate() + "]");, +                            }, +++ b/src/main/java/org/elasticsearch/action/index/IndexResponse.java, +++ b/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +import org.elasticsearch.ElasticsearchIllegalStateException;, +import java.io.IOException;, +, +    protected void shardOperationOnReplica(ShardId shardId, IndexRequest request) throws IOException {, +            if (index.parsedDoc().dynamicMappingsUpdate() != null) {, +                if (indexService.index().name().equals(RiverIndexName.Conf.indexName(settings))) {, +                    // mappings updates on the _river are not validated synchronously so we can't, +                    // assume they are here when indexing on a replica, +                    indexService.mapperService().merge(request.type(), new CompressedString(index.parsedDoc().dynamicMappingsUpdate().toBytes()), true);, +                } else {, +                    throw new ElasticsearchIllegalStateException("Index operations on replicas should not trigger dynamic mappings updates: [" + index.parsedDoc().dynamicMappingsUpdate() + "]");, +                }, +            Engine.Create create = indexShard.prepareCreate(sourceToParse,, +                    request.version(), request.versionType(), Engine.Operation.Origin.REPLICA, request.canHaveDuplicates(), request.autoGeneratedId());, +            if (create.parsedDoc().dynamicMappingsUpdate() != null) {, +                if (indexService.index().name().equals(RiverIndexName.Conf.indexName(settings))) {, +                    // mappings updates on the _river are not validated synchronously so we can't, +                    // assume they are here when indexing on a replica, +                    indexService.mapperService().merge(request.type(), new CompressedString(create.parsedDoc().dynamicMappingsUpdate().toBytes()), true);, +                } else {, +                    throw new ElasticsearchIllegalStateException("Index operations on replicas should not trigger dynamic mappings updates: [" + create.parsedDoc().dynamicMappingsUpdate() + "]");, +                }, +++ b/src/main/java/org/elasticsearch/action/ActionWriteResponse.java, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +    protected void shardOperationOnReplica(ShardId shardId, BulkShardRequest request) throws Exception {, +                        if (index.parsedDoc().dynamicMappingsUpdate() != null) {, +                            if (indexService.index().name().equals(RiverIndexName.Conf.indexName(settings))) {, +                                // mappings updates on the _river are not validated synchronously so we can't, +                                // assume they are here when indexing on a replica, +                                indexService.mapperService().merge(indexRequest.type(), new CompressedString(index.parsedDoc().dynamicMappingsUpdate().toBytes()), true);, +                            } else {, +                                throw new ElasticsearchIllegalStateException("Index operations on replicas should not trigger dynamic mappings updates: [" + index.parsedDoc().dynamicMappingsUpdate() + "]");, +                            }, +                        if (create.parsedDoc().dynamicMappingsUpdate() != null) {, +                            if (indexService.index().name().equals(RiverIndexName.Conf.indexName(settings))) {, +                                // mappings updates on the _river are not validated synchronously so we can't, +                                // assume they are here when indexing on a replica, +                                indexService.mapperService().merge(indexRequest.type(), new CompressedString(create.parsedDoc().dynamicMappingsUpdate().toBytes()), true);, +                            } else {]