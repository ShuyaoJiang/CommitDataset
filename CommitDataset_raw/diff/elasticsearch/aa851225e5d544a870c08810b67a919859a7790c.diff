[+++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                                UpdateResponse updateResponse = new UpdateResponse(indexResponse.getIndex(), indexResponse.getType(),, +                                        indexResponse.getId(), indexResponse.getVersion(), indexResponse.isCreated());, +                                updateResponse = new UpdateResponse(response.getIndex(), response.getType(), response.getId(), response.getVersion(), false);, +        boolean created;, +            created = index.created();, +            created = true;, +        IndexResponse indexResponse = new IndexResponse(indexRequest.index(), indexRequest.type(), indexRequest.id(), version, created);, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                                UpdateResponse updateResponse = new UpdateResponse(indexResponse.getIndex(), indexResponse.getType(),, +                                        indexResponse.getId(), indexResponse.getVersion(), indexResponse.isCreated());, +                                updateResponse = new UpdateResponse(response.getIndex(), response.getType(), response.getId(), response.getVersion(), false);, +        boolean created;, +            created = index.created();, +            created = true;, +        IndexResponse indexResponse = new IndexResponse(indexRequest.index(), indexRequest.type(), indexRequest.id(), version, created);, +++ b/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +import org.elasticsearch.common.lucene.uid.Versions;, +                            long version = Versions.MATCH_ANY;, +                                    found = true;, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                                UpdateResponse updateResponse = new UpdateResponse(indexResponse.getIndex(), indexResponse.getType(),, +                                        indexResponse.getId(), indexResponse.getVersion(), indexResponse.isCreated());, +                                updateResponse = new UpdateResponse(response.getIndex(), response.getType(), response.getId(), response.getVersion(), false);, +        boolean created;, +            created = index.created();, +            created = true;, +        IndexResponse indexResponse = new IndexResponse(indexRequest.index(), indexRequest.type(), indexRequest.id(), version, created);, +++ b/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +import org.elasticsearch.common.lucene.uid.Versions;, +                            long version = Versions.MATCH_ANY;, +                                    found = true;, +++ b/src/main/java/org/elasticsearch/action/index/IndexResponse.java, +    private boolean created;, +    public IndexResponse(String index, String type, String id, long version, boolean created) {, +        this.created = created;, +     * Returns the current version of the doc indexed., +     * Returns true if the document was created, false if updated., +     */, +    public boolean isCreated() {, +        return this.created;, +    }, +, +    /**, +        created = in.readBoolean();, +        out.writeBoolean(created);, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                                UpdateResponse updateResponse = new UpdateResponse(indexResponse.getIndex(), indexResponse.getType(),, +                                        indexResponse.getId(), indexResponse.getVersion(), indexResponse.isCreated());, +                                updateResponse = new UpdateResponse(response.getIndex(), response.getType(), response.getId(), response.getVersion(), false);, +        boolean created;, +            created = index.created();, +            created = true;, +        IndexResponse indexResponse = new IndexResponse(indexRequest.index(), indexRequest.type(), indexRequest.id(), version, created);, +++ b/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +import org.elasticsearch.common.lucene.uid.Versions;, +                            long version = Versions.MATCH_ANY;, +                                    found = true;, +++ b/src/main/java/org/elasticsearch/action/index/IndexResponse.java, +    private boolean created;, +    public IndexResponse(String index, String type, String id, long version, boolean created) {, +        this.created = created;, +     * Returns the current version of the doc indexed., +     * Returns true if the document was created, false if updated., +     */, +    public boolean isCreated() {, +        return this.created;, +    }, +, +    /**, +        created = in.readBoolean();, +        out.writeBoolean(created);, +++ b/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        boolean created;, +            created = index.created();, +            created = true;, +        IndexResponse response = new IndexResponse(request.index(), request.type(), request.id(), version, created);, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                                UpdateResponse updateResponse = new UpdateResponse(indexResponse.getIndex(), indexResponse.getType(),, +                                        indexResponse.getId(), indexResponse.getVersion(), indexResponse.isCreated());, +                                updateResponse = new UpdateResponse(response.getIndex(), response.getType(), response.getId(), response.getVersion(), false);, +        boolean created;, +            created = index.created();, +            created = true;, +        IndexResponse indexResponse = new IndexResponse(indexRequest.index(), indexRequest.type(), indexRequest.id(), version, created);, +++ b/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +import org.elasticsearch.common.lucene.uid.Versions;, +                            long version = Versions.MATCH_ANY;, +                                    found = true;, +++ b/src/main/java/org/elasticsearch/action/index/IndexResponse.java, +    private boolean created;, +    public IndexResponse(String index, String type, String id, long version, boolean created) {, +        this.created = created;, +     * Returns the current version of the doc indexed., +     * Returns true if the document was created, false if updated., +     */, +    public boolean isCreated() {, +        return this.created;, +    }, +]