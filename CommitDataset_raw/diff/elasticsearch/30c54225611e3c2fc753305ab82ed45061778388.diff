[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/user/HasPrivilegesResponse.java, +import org.elasticsearch.common.xcontent.ToXContentObject;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import java.util.Comparator;, +public class HasPrivilegesResponse extends ActionResponse implements ToXContentObject {, +    private String username;, +        this("", true, Collections.emptyMap(), Collections.emptyList(), Collections.emptyMap());, +    public HasPrivilegesResponse(String username, boolean completeMatch, Map<String, Boolean> cluster, Collection<ResourcePrivileges> index,, +        this.username = username;, +        this.index = sorted(new ArrayList<>(index));, +        application.forEach((key, val) -> this.application.put(key, Collections.unmodifiableList(sorted(new ArrayList<>(val)))));, +    }, +, +    private static List<ResourcePrivileges> sorted(List<ResourcePrivileges> resources) {, +        Collections.sort(resources, Comparator.comparing(o -> o.resource));, +        return resources;, +    }, +, +    public String getUsername() {, +        return username;, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) {, +            return true;, +        }, +        if (o == null || getClass() != o.getClass()) {, +            return false;, +        }, +        final HasPrivilegesResponse response = (HasPrivilegesResponse) o;, +        return completeMatch == response.completeMatch, +            && Objects.equals(username, response.username), +            && Objects.equals(cluster, response.cluster), +            && Objects.equals(index, response.index), +            && Objects.equals(application, response.application);, +    }, +, +    @Override, +    public int hashCode() {, +        return Objects.hash(username, completeMatch, cluster, index, application);, +    }, +, +        if (in.getVersion().onOrAfter(Version.V_7_0_0)) {, +            cluster = in.readMap(StreamInput::readString, StreamInput::readBoolean);, +        }, +        if (in.getVersion().onOrAfter(Version.V_7_0_0)) {, +            username = in.readString();, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0)) {, +            out.writeMap(cluster, StreamOutput::writeString, StreamOutput::writeBoolean);, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0)) {, +            out.writeString(username);, +        }, +    @Override, +    public String toString() {, +        return getClass().getSimpleName() + "{", +            + "username=" + username + ",", +            + "completeMatch=" + completeMatch + ",", +            + "cluster=" + cluster + ",", +            + "index=" + index + ",", +            + "application=" + application, +            + "}";, +    }, +, +    @Override, +    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +        builder.startObject(), +            .field("username", username), +            .field("has_all_requested", completeMatch);, +, +        builder.field("cluster");, +        builder.map(cluster);, +, +        appendResources(builder, "index", index);, +, +        builder.startObject("application");, +        for (String app : application.keySet()) {, +            appendResources(builder, app, application.get(app));, +        }, +        builder.endObject();, +, +        builder.endObject();, +        return builder;, +    }, +, +    private void appendResources(XContentBuilder builder, String field, List<HasPrivilegesResponse.ResourcePrivileges> privileges), +        throws IOException {, +        builder.startObject(field);, +        for (HasPrivilegesResponse.ResourcePrivileges privilege : privileges) {, +            builder.field(privilege.getResource());, +            builder.map(privilege.getPrivileges());, +        }, +        builder.endObject();, +    }, +, +, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/user/HasPrivilegesResponse.java, +import org.elasticsearch.common.xcontent.ToXContentObject;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import java.util.Comparator;]