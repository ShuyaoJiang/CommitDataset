[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                // Insert a setup defined outside of the docs, +        void emitDo(String method, String pathAndQuery, String body,, +                String catchPart, List warnings, boolean inSetup) {, +            if (false == warnings.isEmpty()) {, +                current.println("      warnings:"), +                for (String warning in warnings) {, +                    // Escape " because we're going to quote the warning, +                    String escaped = warning.replaceAll('"', '\\\\"'), +                    /* Quote the warning in case it starts with [ which makes, +                     * it look too much like an array. */, +                    current.println("         - \"$escaped\""), +                }, +            }, +                emitDo(method, pathAndQuery, body, catchPart, snippet.warnings,, +                    inSetup), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                // Insert a setup defined outside of the docs, +        void emitDo(String method, String pathAndQuery, String body,, +                String catchPart, List warnings, boolean inSetup) {, +            if (false == warnings.isEmpty()) {, +                current.println("      warnings:"), +                for (String warning in warnings) {, +                    // Escape " because we're going to quote the warning, +                    String escaped = warning.replaceAll('"', '\\\\"'), +                    /* Quote the warning in case it starts with [ which makes, +                     * it look too much like an array. */, +                    current.println("         - \"$escaped\""), +                }, +            }, +                emitDo(method, pathAndQuery, body, catchPart, snippet.warnings,, +                    inSetup), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/SnippetsTask.groovy, +    private static final String WARNING = /warning:(.+)/, +        /(?:$CATCH|$SUBSTITUTION|$SKIP|(continued)|$SETUP|$WARNING) ?/, +                            if (it.group(7) != null) {, +                                snippet.warnings.add(it.group(7)), +                                return, +                            }, +        List warnings = new ArrayList(), +                for (String warning in warnings) {, +                    result += "[warning:$warning]", +                }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                // Insert a setup defined outside of the docs, +        void emitDo(String method, String pathAndQuery, String body,, +                String catchPart, List warnings, boolean inSetup) {, +            if (false == warnings.isEmpty()) {, +                current.println("      warnings:"), +                for (String warning in warnings) {, +                    // Escape " because we're going to quote the warning, +                    String escaped = warning.replaceAll('"', '\\\\"'), +                    /* Quote the warning in case it starts with [ which makes, +                     * it look too much like an array. */, +                    current.println("         - \"$escaped\""), +                }, +            }, +                emitDo(method, pathAndQuery, body, catchPart, snippet.warnings,, +                    inSetup), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/SnippetsTask.groovy, +    private static final String WARNING = /warning:(.+)/, +        /(?:$CATCH|$SUBSTITUTION|$SKIP|(continued)|$SETUP|$WARNING) ?/, +                            if (it.group(7) != null) {, +                                snippet.warnings.add(it.group(7)), +                                return, +                            }, +        List warnings = new ArrayList(), +                for (String warning in warnings) {, +                    result += "[warning:$warning]", +                }, +++ b/docs/README.asciidoc, +  * `// TEST[warning:some warning]`: Expect the response to include a `Warning`, +  header. If the response doesn't include a `Warning` header with the exact, +  text then the test fails. If the response includes `Warning` headers that, +  aren't expected then the test fails., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                // Insert a setup defined outside of the docs, +        void emitDo(String method, String pathAndQuery, String body,, +                String catchPart, List warnings, boolean inSetup) {, +            if (false == warnings.isEmpty()) {, +                current.println("      warnings:"), +                for (String warning in warnings) {, +                    // Escape " because we're going to quote the warning, +                    String escaped = warning.replaceAll('"', '\\\\"'), +                    /* Quote the warning in case it starts with [ which makes, +                     * it look too much like an array. */, +                    current.println("         - \"$escaped\""), +                }, +            }, +                emitDo(method, pathAndQuery, body, catchPart, snippet.warnings,, +                    inSetup), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/SnippetsTask.groovy, +    private static final String WARNING = /warning:(.+)/, +        /(?:$CATCH|$SUBSTITUTION|$SKIP|(continued)|$SETUP|$WARNING) ?/, +                            if (it.group(7) != null) {, +                                snippet.warnings.add(it.group(7)), +                                return, +                            }, +        List warnings = new ArrayList(), +                for (String warning in warnings) {]