[+++ b/elasticsearch/x-pack/build.gradle, +  testCompile 'com.google.jimfs:jimfs:1.1', +++ b/elasticsearch/x-pack/build.gradle, +  testCompile 'com.google.jimfs:jimfs:1.1', +++ b/elasticsearch/x-pack/src/main/java/org/elasticsearch/xpack/common/http/HttpResponse.java, +        MapBuilder<String, List<String>> builder = MapBuilder.newMapBuilder();, +        return builder.immutableMap();, +++ b/elasticsearch/x-pack/build.gradle, +  testCompile 'com.google.jimfs:jimfs:1.1', +++ b/elasticsearch/x-pack/src/main/java/org/elasticsearch/xpack/common/http/HttpResponse.java, +        MapBuilder<String, List<String>> builder = MapBuilder.newMapBuilder();, +        return builder.immutableMap();, +++ b/elasticsearch/x-pack/src/test/java/org/elasticsearch/xpack/common/http/HttpResponseTests.java, +import java.util.Collections;, +import static org.hamcrest.Matchers.notNullValue;, +        assertThat(responseHeaders, hasEntry("es_index", Collections.singletonList("value")));, +        assertThat(responseHeaders, hasEntry("es_index_2", Collections.singletonList("value")));, +++ b/elasticsearch/x-pack/build.gradle, +  testCompile 'com.google.jimfs:jimfs:1.1', +++ b/elasticsearch/x-pack/src/main/java/org/elasticsearch/xpack/common/http/HttpResponse.java, +        MapBuilder<String, List<String>> builder = MapBuilder.newMapBuilder();, +        return builder.immutableMap();, +++ b/elasticsearch/x-pack/src/test/java/org/elasticsearch/xpack/common/http/HttpResponseTests.java, +import java.util.Collections;, +import static org.hamcrest.Matchers.notNullValue;, +        assertThat(responseHeaders, hasEntry("es_index", Collections.singletonList("value")));, +        assertThat(responseHeaders, hasEntry("es_index_2", Collections.singletonList("value")));, +++ b/elasticsearch/x-pack/src/test/java/org/elasticsearch/xpack/notification/email/ManualPublicSmtpServersTester.java, +import org.elasticsearch.ElasticsearchException;, +        if (InternalEmailServiceTests.class.getResourceAsStream(path) == null) {, +            throw new ElasticsearchException("Could not find logo at path {}", path);, +        }, +++ b/elasticsearch/x-pack/build.gradle, +  testCompile 'com.google.jimfs:jimfs:1.1', +++ b/elasticsearch/x-pack/src/main/java/org/elasticsearch/xpack/common/http/HttpResponse.java, +        MapBuilder<String, List<String>> builder = MapBuilder.newMapBuilder();, +        return builder.immutableMap();, +++ b/elasticsearch/x-pack/src/test/java/org/elasticsearch/xpack/common/http/HttpResponseTests.java, +import java.util.Collections;, +import static org.hamcrest.Matchers.notNullValue;, +        assertThat(responseHeaders, hasEntry("es_index", Collections.singletonList("value")));, +        assertThat(responseHeaders, hasEntry("es_index_2", Collections.singletonList("value")));, +++ b/elasticsearch/x-pack/src/test/java/org/elasticsearch/xpack/notification/email/ManualPublicSmtpServersTester.java, +import org.elasticsearch.ElasticsearchException;, +        if (InternalEmailServiceTests.class.getResourceAsStream(path) == null) {, +            throw new ElasticsearchException("Could not find logo at path {}", path);, +        }, +++ b/elasticsearch/x-pack/src/test/java/org/elasticsearch/xpack/notification/email/attachment/EmailAttachmentParsersTests.java, +import org.elasticsearch.xpack.watcher.execution.WatchExecutionContext;, +import org.elasticsearch.xpack.watcher.watch.Payload;, +import java.nio.charset.StandardCharsets;, +            return new Attachment.Bytes(attachment.id(), attachment.getValue().getBytes(StandardCharsets.UTF_8),, +                                        "personalContentType", false);, +++ b/elasticsearch/x-pack/build.gradle, +  testCompile 'com.google.jimfs:jimfs:1.1', +++ b/elasticsearch/x-pack/src/main/java/org/elasticsearch/xpack/common/http/HttpResponse.java, +        MapBuilder<String, List<String>> builder = MapBuilder.newMapBuilder();, +        return builder.immutableMap();, +++ b/elasticsearch/x-pack/src/test/java/org/elasticsearch/xpack/common/http/HttpResponseTests.java, +import java.util.Collections;, +import static org.hamcrest.Matchers.notNullValue;, +        assertThat(responseHeaders, hasEntry("es_index", Collections.singletonList("value")));, +        assertThat(responseHeaders, hasEntry("es_index_2", Collections.singletonList("value")));, +++ b/elasticsearch/x-pack/src/test/java/org/elasticsearch/xpack/notification/email/ManualPublicSmtpServersTester.java, +import org.elasticsearch.ElasticsearchException;, +        if (InternalEmailServiceTests.class.getResourceAsStream(path) == null) {, +            throw new ElasticsearchException("Could not find logo at path {}", path);, +        }, +++ b/elasticsearch/x-pack/src/test/java/org/elasticsearch/xpack/notification/email/attachment/EmailAttachmentParsersTests.java, +import org.elasticsearch.xpack.watcher.execution.WatchExecutionContext;, +import org.elasticsearch.xpack.watcher.watch.Payload;, +import java.nio.charset.StandardCharsets;, +            return new Attachment.Bytes(attachment.id(), attachment.getValue().getBytes(StandardCharsets.UTF_8),, +                                        "personalContentType", false);, +++ b/elasticsearch/x-pack/watcher/src/main/java/org/elasticsearch/xpack/watcher/support/WatcherIndexTemplateRegistry.java, +import org.elasticsearch.xpack.watcher.support.init.proxy.WatcherClientProxy;, +import java.nio.charset.StandardCharsets;, +                    Pattern.quote("${xpack.watcher.template.version}")).getBytes(StandardCharsets.UTF_8);, +++ b/elasticsearch/x-pack/build.gradle, +  testCompile 'com.google.jimfs:jimfs:1.1', +++ b/elasticsearch/x-pack/src/main/java/org/elasticsearch/xpack/common/http/HttpResponse.java, +        MapBuilder<String, List<String>> builder = MapBuilder.newMapBuilder();, +        return builder.immutableMap();, +++ b/elasticsearch/x-pack/src/test/java/org/elasticsearch/xpack/common/http/HttpResponseTests.java, +import java.util.Collections;, +import static org.hamcrest.Matchers.notNullValue;, +        assertThat(responseHeaders, hasEntry("es_index", Collections.singletonList("value")));, +        assertThat(responseHeaders, hasEntry("es_index_2", Collections.singletonList("value")));, +++ b/elasticsearch/x-pack/src/test/java/org/elasticsearch/xpack/notification/email/ManualPublicSmtpServersTester.java, +import org.elasticsearch.ElasticsearchException;, +        if (InternalEmailServiceTests.class.getResourceAsStream(path) == null) {, +            throw new ElasticsearchException("Could not find logo at path {}", path);, +        }, +++ b/elasticsearch/x-pack/src/test/java/org/elasticsearch/xpack/notification/email/attachment/EmailAttachmentParsersTests.java, +import org.elasticsearch.xpack.watcher.execution.WatchExecutionContext;, +import org.elasticsearch.xpack.watcher.watch.Payload;, +import java.nio.charset.StandardCharsets;, +            return new Attachment.Bytes(attachment.id(), attachment.getValue().getBytes(StandardCharsets.UTF_8),, +                                        "personalContentType", false);, +++ b/elasticsearch/x-pack/watcher/src/main/java/org/elasticsearch/xpack/watcher/support/WatcherIndexTemplateRegistry.java]