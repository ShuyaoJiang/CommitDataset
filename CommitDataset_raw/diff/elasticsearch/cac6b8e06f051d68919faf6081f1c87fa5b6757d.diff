[+++ b/docs/reference/ingest/processors/user-agent.asciidoc, +      "original": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36",, +      "version": "51.0.2704",, +      "os": {, +        "name": "Mac OS X",, +        "version": "10.10.5",, +        "full": "Mac OS X 10.10.5", +      },, +++ b/docs/reference/ingest/processors/user-agent.asciidoc, +      "original": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36",, +      "version": "51.0.2704",, +      "os": {, +        "name": "Mac OS X",, +        "version": "10.10.5",, +        "full": "Mac OS X 10.10.5", +      },, +++ b/docs/reference/migration/migrate_7_0/settings.asciidoc, +, +[float], +[[ingest-user-agent-ecs-always]], +==== Ingest User Agent processor always uses `ecs` output format, +The deprecated `ecs` setting for the user agent ingest processor has been, +removed. https://github.com/elastic/ecs[ECS] format is now the default., +++ b/docs/reference/ingest/processors/user-agent.asciidoc, +      "original": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36",, +      "version": "51.0.2704",, +      "os": {, +        "name": "Mac OS X",, +        "version": "10.10.5",, +        "full": "Mac OS X 10.10.5", +      },, +++ b/docs/reference/migration/migrate_7_0/settings.asciidoc, +, +[float], +[[ingest-user-agent-ecs-always]], +==== Ingest User Agent processor always uses `ecs` output format, +The deprecated `ecs` setting for the user agent ingest processor has been, +removed. https://github.com/elastic/ecs[ECS] format is now the default., +++ b/modules/ingest-user-agent/src/main/java/org/elasticsearch/ingest/useragent/UserAgentProcessor.java, +import org.apache.logging.log4j.LogManager;, +import org.elasticsearch.common.logging.DeprecationLogger;, +    private static final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger(UserAgentProcessor.class));, +, +    public IngestDocument execute(IngestDocument ingestDocument) {, +, +        // Parse the user agent in the ECS (Elastic Common Schema) format, +                case ORIGINAL:, +                    uaDetails.put("original", userAgent);, +                    break;, +                    } else {, +                case VERSION:, +                    StringBuilder version = new StringBuilder();, +                        version.append(uaClient.userAgent.major);, +                        if (uaClient.userAgent.minor != null) {, +                            version.append(".").append(uaClient.userAgent.minor);, +                            if (uaClient.userAgent.patch != null) {, +                                version.append(".").append(uaClient.userAgent.patch);, +                                if (uaClient.userAgent.build != null) {, +                                    version.append(".").append(uaClient.userAgent.build);, +                        uaDetails.put("version", version.toString());, +                        Map<String, String> osDetails = new HashMap<>(3);, +                        if (uaClient.operatingSystem.name != null) {, +                            osDetails.put("name", uaClient.operatingSystem.name);, +                            StringBuilder sb = new StringBuilder();, +                            if (uaClient.operatingSystem.major != null) {, +                                sb.append(uaClient.operatingSystem.major);, +                                if (uaClient.operatingSystem.minor != null) {, +                                    sb.append(".").append(uaClient.operatingSystem.minor);, +                                    if (uaClient.operatingSystem.patch != null) {, +                                        sb.append(".").append(uaClient.operatingSystem.patch);, +                                        if (uaClient.operatingSystem.build != null) {, +                                            sb.append(".").append(uaClient.operatingSystem.build);, +                                osDetails.put("version", sb.toString());, +                                osDetails.put("full", uaClient.operatingSystem.name + " " + sb.toString());, +                            uaDetails.put("os", osDetails);, +                    } else {, +            Object ecsValue = config.remove("ecs");, +            if (ecsValue != null) {, +                deprecationLogger.deprecated("setting [ecs] is deprecated as ECS format is the default and only option");, +            }, +        NAME,, +        OS,, +        DEVICE,, +        ORIGINAL,, +        VERSION;, +            } catch (IllegalArgumentException e) {, +++ b/docs/reference/ingest/processors/user-agent.asciidoc, +      "original": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36",, +      "version": "51.0.2704",, +      "os": {, +        "name": "Mac OS X",, +        "version": "10.10.5",, +        "full": "Mac OS X 10.10.5", +      },, +++ b/docs/reference/migration/migrate_7_0/settings.asciidoc, +, +[float], +[[ingest-user-agent-ecs-always]], +==== Ingest User Agent processor always uses `ecs` output format, +The deprecated `ecs` setting for the user agent ingest processor has been]