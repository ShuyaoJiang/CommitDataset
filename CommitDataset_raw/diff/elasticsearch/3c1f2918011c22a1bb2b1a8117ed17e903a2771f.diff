[+++ b/src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java, +import org.elasticsearch.index.mapper.MapperParsingException;, +                    if (!t.isValue()) {, +                        throw new MapperParsingException("id field must be a value but was either an object or an array");, +                    }, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java, +import org.elasticsearch.index.mapper.MapperParsingException;, +                    if (!t.isValue()) {, +                        throw new MapperParsingException("id field must be a value but was either an object or an array");, +                    }, +++ b/src/test/java/org/elasticsearch/test/unit/cluster/metadata/MappingMetaDataParserTests.java, +import org.elasticsearch.index.mapper.MapperParsingException;, +    public void testFailIfIdIsNoValue() throws Exception {, +        MappingMetaData md = new MappingMetaData("type1", new CompressedString(""),, +                new MappingMetaData.Id("id"),, +                new MappingMetaData.Routing(true, "routing"),, +                new MappingMetaData.Timestamp(true, "timestamp", "dateOptionalTime"));, +        byte[] bytes = jsonBuilder().startObject().field("field1", "value1").field("field2", "value2"), +                .startArray("id").value("id").endArray().field("routing", "routing_value").field("timestamp", "1").endObject().bytes().toBytes();, +        MappingMetaData.ParseContext parseContext = md.createParseContext(null, "routing_value", "1");, +        try {, +            md.parse(XContentFactory.xContent(bytes).createParser(bytes), parseContext);, +        assert false;, +        } catch (MapperParsingException ex) {, +            // bogus its an array, +        }, +        , +        bytes = jsonBuilder().startObject().field("field1", "value1").field("field2", "value2"), +                .startObject("id").field("x", "id").endObject().field("routing", "routing_value").field("timestamp", "1").endObject().bytes().toBytes();, +        parseContext = md.createParseContext(null, "routing_value", "1");, +        try {, +            md.parse(XContentFactory.xContent(bytes).createParser(bytes), parseContext);, +        assert false;, +        } catch (MapperParsingException ex) {, +            // bogus its an object, +        }, +    }, +, +    @Test]