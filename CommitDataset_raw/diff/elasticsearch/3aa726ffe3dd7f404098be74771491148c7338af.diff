[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCountAggregator.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.search.aggregations.support.ValueType;, +import org.elasticsearch.search.aggregations.support.ValuesSourceType;, +        public Factory(String name, ValuesSourceType valuesSourceType, ValueType valueType) {, +            super(name, InternalValueCount.TYPE.name(), valuesSourceType, valueType);, +        @Override, +        protected ValuesSourceAggregatorFactory<VS> innerReadFrom(String name, ValuesSourceType valuesSourceType,, +                ValueType targetValueType, StreamInput in) {, +            return new ValueCountAggregator.Factory<VS>(name, valuesSourceType, targetValueType);, +        }, +, +        @Override, +        protected void innerWriteTo(StreamOutput out) {, +            // Do nothing, no extra state to write to stream, +        }, +, +        @Override, +        public XContentBuilder doXContentBody(XContentBuilder builder, Params params) throws IOException {, +            return builder;, +        }, +, +        @Override, +        protected int innerHashCode() {, +            return 0;, +        }, +, +        @Override, +        protected boolean innerEquals(Object obj) {, +            return true;, +        }, +, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCountAggregator.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.search.aggregations.support.ValueType;, +import org.elasticsearch.search.aggregations.support.ValuesSourceType;, +        public Factory(String name, ValuesSourceType valuesSourceType, ValueType valueType) {, +            super(name, InternalValueCount.TYPE.name(), valuesSourceType, valueType);, +        @Override, +        protected ValuesSourceAggregatorFactory<VS> innerReadFrom(String name, ValuesSourceType valuesSourceType,, +                ValueType targetValueType, StreamInput in) {, +            return new ValueCountAggregator.Factory<VS>(name, valuesSourceType, targetValueType);, +        }, +, +        @Override, +        protected void innerWriteTo(StreamOutput out) {, +            // Do nothing, no extra state to write to stream, +        }, +, +        @Override, +        public XContentBuilder doXContentBody(XContentBuilder builder, Params params) throws IOException {, +            return builder;, +        }, +, +        @Override, +        protected int innerHashCode() {, +            return 0;, +        }, +, +        @Override, +        protected boolean innerEquals(Object obj) {, +            return true;, +        }, +, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCountParser.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.ParseFieldMatcher;, +import org.elasticsearch.search.aggregations.support.AbstractValuesSourceParser.AnyValuesSourceParser;, +import org.elasticsearch.search.aggregations.support.ValueType;, +import org.elasticsearch.search.aggregations.support.ValuesSource;, +import org.elasticsearch.search.aggregations.support.ValuesSourceAggregatorFactory;, +import org.elasticsearch.search.aggregations.support.ValuesSourceType;, +import java.util.Map;, +public class ValueCountParser extends AnyValuesSourceParser {, +, +    public ValueCountParser() {, +        super(true, true);, +    }, +    protected boolean token(String aggregationName, String currentFieldName, XContentParser.Token token, XContentParser parser,, +            ParseFieldMatcher parseFieldMatcher, Map<ParseField, Object> otherOptions) throws IOException {, +        return false;, +    @Override, +    protected ValuesSourceAggregatorFactory<ValuesSource> createFactory(String aggregationName, ValuesSourceType valuesSourceType,, +            ValueType targetValueType, Map<ParseField, Object> otherOptions) {, +        return new ValueCountAggregator.Factory<ValuesSource>(aggregationName, valuesSourceType, targetValueType);, +        return new ValueCountAggregator.Factory<ValuesSource>(null, null, null);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCountAggregator.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.search.aggregations.support.ValueType;, +import org.elasticsearch.search.aggregations.support.ValuesSourceType;, +        public Factory(String name, ValuesSourceType valuesSourceType, ValueType valueType) {, +            super(name, InternalValueCount.TYPE.name(), valuesSourceType, valueType);, +        @Override, +        protected ValuesSourceAggregatorFactory<VS> innerReadFrom(String name, ValuesSourceType valuesSourceType,]