[+++ b/core/src/test/java/org/elasticsearch/threadpool/ScalingThreadPoolTests.java, +        final int min = "generic".equals(threadPoolName) ? 4 : 1;, +            final CountDownLatch taskLatch = new CountDownLatch(128);, +                        taskLatch.countDown();, +            assertThat(stats(threadPool, threadPoolName).getThreads(), equalTo(128));, +            // this while loop is the core of this test; if threads, +            // are correctly idled down by the pool, the number of, +            // threads in the pool will drop to the min for the pool, +            // but if threads are not correctly idled down by the pool,, +            // this test will just timeout waiting for them to idle, +            // down, +            } while (stats(threadPool, threadPoolName).getThreads() > min);, +            try {, +                taskLatch.await();, +            } catch (InterruptedException e) {, +                throw new RuntimeException(e);, +            }, +++ b/core/src/test/java/org/elasticsearch/threadpool/ScalingThreadPoolTests.java, +        final int min = "generic".equals(threadPoolName) ? 4 : 1;, +            final CountDownLatch taskLatch = new CountDownLatch(128);, +                        taskLatch.countDown();, +            assertThat(stats(threadPool, threadPoolName).getThreads(), equalTo(128));, +            // this while loop is the core of this test; if threads, +            // are correctly idled down by the pool, the number of, +            // threads in the pool will drop to the min for the pool, +            // but if threads are not correctly idled down by the pool,, +            // this test will just timeout waiting for them to idle, +            // down, +            } while (stats(threadPool, threadPoolName).getThreads() > min);, +            try {, +                taskLatch.await();, +            } catch (InterruptedException e) {, +                throw new RuntimeException(e);, +            }, +++ b/docs/reference/mapping/types/keyword.asciidoc, +The following parameters are accepted by `keyword` fields:]