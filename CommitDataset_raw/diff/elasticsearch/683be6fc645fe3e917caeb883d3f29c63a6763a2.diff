[+++ b/src/main/java/org/elasticsearch/index/query/BoolFilterParser.java, +import org.apache.lucene.queries.FilterClause;, +++ b/src/main/java/org/elasticsearch/index/query/BoolFilterParser.java, +import org.apache.lucene.queries.FilterClause;, +++ b/src/main/java/org/elasticsearch/index/query/BoostingQueryParser.java, +import org.apache.lucene.queries.BoostingQuery;, +++ b/src/main/java/org/elasticsearch/index/query/BoolFilterParser.java, +import org.apache.lucene.queries.FilterClause;, +++ b/src/main/java/org/elasticsearch/index/query/BoostingQueryParser.java, +import org.apache.lucene.queries.BoostingQuery;, +++ b/src/main/java/org/elasticsearch/index/query/CustomScoreQueryParser.java, +import org.apache.lucene.index.AtomicReaderContext;, +        public void setNextReader(AtomicReaderContext ctx) {, +            //LUCENE 4 UPGRADE should this pass on a ARC or just and atomic reader? , +            script.setNextReader(ctx);, +++ b/src/main/java/org/elasticsearch/index/query/BoolFilterParser.java, +import org.apache.lucene.queries.FilterClause;, +++ b/src/main/java/org/elasticsearch/index/query/BoostingQueryParser.java, +import org.apache.lucene.queries.BoostingQuery;, +++ b/src/main/java/org/elasticsearch/index/query/CustomScoreQueryParser.java, +import org.apache.lucene.index.AtomicReaderContext;, +        public void setNextReader(AtomicReaderContext ctx) {, +            //LUCENE 4 UPGRADE should this pass on a ARC or just and atomic reader? , +            script.setNextReader(ctx);, +++ b/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java, +    private Boolean transpositions;, +            if (transpositions != null) {, +++ b/src/main/java/org/elasticsearch/index/query/BoolFilterParser.java, +import org.apache.lucene.queries.FilterClause;, +++ b/src/main/java/org/elasticsearch/index/query/BoostingQueryParser.java, +import org.apache.lucene.queries.BoostingQuery;, +++ b/src/main/java/org/elasticsearch/index/query/CustomScoreQueryParser.java, +import org.apache.lucene.index.AtomicReaderContext;, +        public void setNextReader(AtomicReaderContext ctx) {, +            //LUCENE 4 UPGRADE should this pass on a ARC or just and atomic reader? , +            script.setNextReader(ctx);, +++ b/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java, +    private Boolean transpositions;, +            if (transpositions != null) {, +++ b/src/main/java/org/elasticsearch/index/query/FuzzyQueryParser.java, +        boolean transpositions = false;, +++ b/src/main/java/org/elasticsearch/index/query/BoolFilterParser.java, +import org.apache.lucene.queries.FilterClause;, +++ b/src/main/java/org/elasticsearch/index/query/BoostingQueryParser.java, +import org.apache.lucene.queries.BoostingQuery;, +++ b/src/main/java/org/elasticsearch/index/query/CustomScoreQueryParser.java, +import org.apache.lucene.index.AtomicReaderContext;, +        public void setNextReader(AtomicReaderContext ctx) {, +            //LUCENE 4 UPGRADE should this pass on a ARC or just and atomic reader? , +            script.setNextReader(ctx);, +++ b/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java, +    private Boolean transpositions;, +            if (transpositions != null) {, +++ b/src/main/java/org/elasticsearch/index/query/FuzzyQueryParser.java, +        boolean transpositions = false;, +++ b/src/main/java/org/elasticsearch/index/query/IdsFilterParser.java, +        UidFilter filter = new UidFilter(types, ids);, +++ b/src/main/java/org/elasticsearch/index/query/BoolFilterParser.java, +import org.apache.lucene.queries.FilterClause;, +++ b/src/main/java/org/elasticsearch/index/query/BoostingQueryParser.java, +import org.apache.lucene.queries.BoostingQuery;, +++ b/src/main/java/org/elasticsearch/index/query/CustomScoreQueryParser.java, +import org.apache.lucene.index.AtomicReaderContext;, +        public void setNextReader(AtomicReaderContext ctx) {, +            //LUCENE 4 UPGRADE should this pass on a ARC or just and atomic reader? , +            script.setNextReader(ctx);, +++ b/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java, +    private Boolean transpositions;, +            if (transpositions != null) {, +++ b/src/main/java/org/elasticsearch/index/query/FuzzyQueryParser.java, +        boolean transpositions = false;, +++ b/src/main/java/org/elasticsearch/index/query/IdsFilterParser.java, +        UidFilter filter = new UidFilter(types, ids);, +++ b/src/main/java/org/elasticsearch/index/query/IdsQueryParser.java, +        UidFilter filter = new UidFilter(types, ids);, +++ b/src/main/java/org/elasticsearch/index/query/BoolFilterParser.java, +import org.apache.lucene.queries.FilterClause;, +++ b/src/main/java/org/elasticsearch/index/query/BoostingQueryParser.java, +import org.apache.lucene.queries.BoostingQuery;, +++ b/src/main/java/org/elasticsearch/index/query/CustomScoreQueryParser.java, +import org.apache.lucene.index.AtomicReaderContext;, +        public void setNextReader(AtomicReaderContext ctx) {, +            //LUCENE 4 UPGRADE should this pass on a ARC or just and atomic reader? , +            script.setNextReader(ctx);, +++ b/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java, +    private Boolean transpositions;, +            if (transpositions != null) {, +++ b/src/main/java/org/elasticsearch/index/query/FuzzyQueryParser.java, +        boolean transpositions = false;, +++ b/src/main/java/org/elasticsearch/index/query/IdsFilterParser.java, +        UidFilter filter = new UidFilter(types, ids);, +++ b/src/main/java/org/elasticsearch/index/query/IdsQueryParser.java, +        UidFilter filter = new UidFilter(types, ids);, +++ b/src/main/java/org/elasticsearch/index/query/MatchAllQueryParser.java, +        //LUCENE 4 UPGRADE norms field is not supported anymore need to find another way or drop the functionality, +        //MatchAllDocsQuery query = new MatchAllDocsQuery(normsField);, +        MatchAllDocsQuery query = new MatchAllDocsQuery();, +++ b/src/main/java/org/elasticsearch/index/query/BoolFilterParser.java, +import org.apache.lucene.queries.FilterClause;, +++ b/src/main/java/org/elasticsearch/index/query/BoostingQueryParser.java]