[+++ b/docs/plugins/repository-gcs.asciidoc, +The plugin uses the https://github.com/GoogleCloudPlatform/google-cloud-java/tree/master/google-cloud-clients/google-cloud-storage[Google Cloud Java Client for Storage], +to connect to the Storage service. If you are using  , +https://cloud.google.com/storage/[Google Cloud Storage] for the first time, you , +must connect to the https://console.cloud.google.com/[Google Cloud Platform Console], +and create a new project. After your project is created, you must enable the, +Cloud Storage Service for your project., +The Google Cloud Storage service uses the concept of a , +https://cloud.google.com/storage/docs/key-terms[bucket] as a container for all , +the data. Buckets are usually created using the , +https://console.cloud.google.com/[Google Cloud Platform Console]. The plugin , +does not automatically create buckets., +1. Connect to the https://console.cloud.google.com/[Google Cloud Platform Console]., +2. Select your project., +3. Go to the https://console.cloud.google.com/storage/browser[Storage Browser]., +4. Click the *Create Bucket* button., +5. Enter the name of the new bucket., +6. Select a storage class., +7. Select a location., +8. Click the *Create* button., +For more detailed instructions, see the, +https://cloud.google.com/storage/docs/quickstart-console#create_a_bucket[Google Cloud documentation]., +The plugin must authenticate the requests it makes to the Google Cloud Storage , +service. It is common for Google client libraries to employ a strategy named https://cloud.google.com/docs/authentication/production#providing_credentials_to_your_application[application default credentials]., +However, that strategy is **not** supported for use with Elasticsearch. The , +plugin operates under the Elasticsearch process, which runs with the security , +manager enabled. The security manager obstructs the "automatic" credential discovery., +Therefore, you must configure <<repository-gcs-using-service-account,service account>> , +credentials even if you are using an environment that does not normally require, +this configuration (such as Compute Engine, Kubernetes Engine or App Engine)., +You have to obtain and provide https://cloud.google.com/iam/docs/overview#service_account[service account credentials], +manually., +For detailed information about generating JSON service account files, see the  https://cloud.google.com/storage/docs/authentication?hl=en#service_accounts[Google Cloud documentation]., +Note that the PKCS12 format is not supported by this plugin., +Here is a summary of the steps:, +1. Connect to the https://console.cloud.google.com/[Google Cloud Platform Console]., +2. Select your project., +3. Got to the https://console.cloud.google.com/permissions[Permission] tab., +4. Select the https://console.cloud.google.com/permissions/serviceaccounts[Service Accounts] tab., +5. Click *Create service account*., +6. After the account is created, select it and download a JSON key file. , +, +A JSON service account file looks like this:, +  "client_id": "...",, +  "auth_uri": "https://accounts.google.com/o/oauth2/auth",, +  "token_uri": "https://accounts.google.com/o/oauth2/token",, +  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",, +  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/your-bucket@your-project-id.iam.gserviceaccount.com", +To provide this file to the plugin, it must be stored in the {ref}/secure-settings.html[Elasticsearch keystore].  You must add a setting name of the form `gcs.client.NAME.credentials_file`, where `NAME`, +is the name of the client configuration for the repository. The implicit client, +name is `default`, but a different client name can be specified in the, +repository settings with the `client` key. , +NOTE: Passing the file path via the GOOGLE_APPLICATION_CREDENTIALS environment , +variable is **not** supported., +, +For example, if you added a `gcs.client.my_alternate_client.credentials_file` , +setting in the keystore, you can configure a repository to use those credentials , +like this:, +After you reload the settings, the internal `gcs` clients, which are used to , +transfer the snapshot contents, utilize the latest settings from the keystore., +NOTE: Snapshot or restore jobs that are in progress are not preempted by a *reload*, +of the client's `credentials_file` settings. They complete using the client as , +it was built when the operation started., +Client setting names are of the form `gcs.client.CLIENT_NAME.SETTING_NAME` and are specified, +{ref}/secure-settings.html[Elasticsearch keystore]. This is the case for the service account file:, +    The Google Cloud project id. This will be automatically inferred from the credentials file but, +1. Connect to the https://console.cloud.google.com/[Google Cloud Platform Console]., +2. Select your project., +3. Got to the https://console.cloud.google.com/storage/browser[Storage Browser]., +4. Select the bucket and "Edit bucket permission"., +5. The service account must be configured as a "User" with "Writer" access.]