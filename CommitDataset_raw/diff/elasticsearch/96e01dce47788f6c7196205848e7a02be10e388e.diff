[+++ b/docs/en/security/getting-started.asciidoc, +            text and will not be able to install a non-trial license that enables the use, +            of {security}., +++ b/docs/en/security/getting-started.asciidoc, +            text and will not be able to install a non-trial license that enables the use, +            of {security}., +++ b/docs/en/security/securing-communications.asciidoc, +files storing the data. Securing your nodes is required in order to use a production, +license that enables {security} and helps reduce the risk from network-based attacks., +++ b/docs/en/security/getting-started.asciidoc, +            text and will not be able to install a non-trial license that enables the use, +            of {security}., +++ b/docs/en/security/securing-communications.asciidoc, +files storing the data. Securing your nodes is required in order to use a production, +license that enables {security} and helps reduce the risk from network-based attacks., +++ b/docs/en/security/securing-communications/separating-node-client-traffic.asciidoc, +++ b/docs/en/security/getting-started.asciidoc, +            text and will not be able to install a non-trial license that enables the use, +            of {security}., +++ b/docs/en/security/securing-communications.asciidoc, +files storing the data. Securing your nodes is required in order to use a production, +license that enables {security} and helps reduce the risk from network-based attacks., +++ b/docs/en/security/securing-communications/separating-node-client-traffic.asciidoc, +++ b/docs/en/security/securing-communications/setting-up-ssl.asciidoc, +including passwords and will not be able to install a license that enables {security}., +++ b/docs/en/security/getting-started.asciidoc, +            text and will not be able to install a non-trial license that enables the use, +            of {security}., +++ b/docs/en/security/securing-communications.asciidoc, +files storing the data. Securing your nodes is required in order to use a production, +license that enables {security} and helps reduce the risk from network-based attacks., +++ b/docs/en/security/securing-communications/separating-node-client-traffic.asciidoc, +++ b/docs/en/security/securing-communications/setting-up-ssl.asciidoc, +including passwords and will not be able to install a license that enables {security}., +++ b/docs/en/settings/security-settings.asciidoc, +As an example, lets look at the key setting. For the default transport, +this is `xpack.security.transport.ssl.key`. In order to use this setting in a, +append the portion of the setting after `xpack.security.transport.`. For the key, +setting, this would be `transport.profiles.$PROFILE.xpack.security.ssl.key`., +++ b/docs/en/security/getting-started.asciidoc, +            text and will not be able to install a non-trial license that enables the use, +            of {security}., +++ b/docs/en/security/securing-communications.asciidoc, +files storing the data. Securing your nodes is required in order to use a production, +license that enables {security} and helps reduce the risk from network-based attacks., +++ b/docs/en/security/securing-communications/separating-node-client-traffic.asciidoc, +++ b/docs/en/security/securing-communications/setting-up-ssl.asciidoc, +including passwords and will not be able to install a license that enables {security}., +++ b/docs/en/settings/security-settings.asciidoc, +As an example, lets look at the key setting. For the default transport, +this is `xpack.security.transport.ssl.key`. In order to use this setting in a, +append the portion of the setting after `xpack.security.transport.`. For the key, +setting, this would be `transport.profiles.$PROFILE.xpack.security.ssl.key`., +++ b/plugin/build.gradle, +import org.elasticsearch.gradle.LoggedExec, +// location of generated keystores and certificates, +File keystoreDir = new File(project.buildDir, 'keystore'), +, +// Generate the node's keystore, +File nodeKeystore = new File(keystoreDir, 'test-node.jks'), +task createNodeKeyStore(type: LoggedExec) {, +  doFirst {, +    if (nodeKeystore.parentFile.exists() == false) {, +      nodeKeystore.parentFile.mkdirs(), +    }, +    if (nodeKeystore.exists()) {, +      delete nodeKeystore, +    }, +  }, +  executable = new File(project.javaHome, 'bin/keytool'), +  standardInput = new ByteArrayInputStream('FirstName LastName\nUnit\nOrganization\nCity\nState\nNL\nyes\n\n'.getBytes('UTF-8')), +  args '-genkey',, +          '-alias', 'test-node',, +          '-keystore', nodeKeystore,, +          '-keyalg', 'RSA',, +          '-keysize', '2048',, +          '-validity', '712',, +          '-dname', 'CN=smoke-test-plugins-ssl',, +          '-keypass', 'keypass',, +          '-storepass', 'keypass', +}, +, +// Add keystores to test classpath: it expects it there, +sourceSets.test.resources.srcDir(keystoreDir), +processTestResources.dependsOn(createNodeKeyStore), +, +  dependsOn createNodeKeyStore, +  setting 'xpack.security.transport.ssl.enabled', 'true', +  setting 'xpack.security.transport.ssl.keystore.path', nodeKeystore.name, +  setting 'xpack.security.transport.ssl.verification_mode', 'certificate', +  keystoreSetting 'xpack.security.transport.ssl.keystore.secure_password', 'keypass', +  extraConfigFile nodeKeystore.name, nodeKeystore, +, +++ b/docs/en/security/getting-started.asciidoc, +            text and will not be able to install a non-trial license that enables the use, +            of {security}., +++ b/docs/en/security/securing-communications.asciidoc, +files storing the data. Securing your nodes is required in order to use a production, +license that enables {security} and helps reduce the risk from network-based attacks., +++ b/docs/en/security/securing-communications/separating-node-client-traffic.asciidoc]