[+++ b/build.gradle, +allprojects {, +allprojects {, +        Project upstreamProject = project.ext.dependencyToProject(dep), +++ b/build.gradle, +allprojects {, +allprojects {, +        Project upstreamProject = project.ext.dependencyToProject(dep), +++ b/buildSrc/src/main/java/org/elasticsearch/GradleServicesAdapter.java, +import org.gradle.api.file.FileCollection;, + * Bridge a gap until Gradle offers service injection for plugins., +, +    public FileCollection fileTree(File dir) {, +        return project.fileTree(dir);, +    }, +++ b/build.gradle, +allprojects {, +allprojects {, +        Project upstreamProject = project.ext.dependencyToProject(dep), +++ b/buildSrc/src/main/java/org/elasticsearch/GradleServicesAdapter.java, +import org.gradle.api.file.FileCollection;, + * Bridge a gap until Gradle offers service injection for plugins., +, +    public FileCollection fileTree(File dir) {, +        return project.fileTree(dir);, +    }, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/Distribution.java, +    INTEG_TEST("integ-test"),, +    ZIP("elasticsearch"),, +    ZIP_OSS("elasticsearch-oss");, +    private final String fileName;, +        this.fileName = name;, +    public String getFileName() {, +        return fileName;, +++ b/build.gradle, +allprojects {, +allprojects {, +        Project upstreamProject = project.ext.dependencyToProject(dep), +++ b/buildSrc/src/main/java/org/elasticsearch/GradleServicesAdapter.java, +import org.gradle.api.file.FileCollection;, + * Bridge a gap until Gradle offers service injection for plugins., +, +    public FileCollection fileTree(File dir) {, +        return project.fileTree(dir);, +    }, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/Distribution.java, +    INTEG_TEST("integ-test"),, +    ZIP("elasticsearch"),, +    ZIP_OSS("elasticsearch-oss");, +    private final String fileName;, +        this.fileName = name;, +    public String getFileName() {, +        return fileName;, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/ElasticsearchNode.java, +    private String version;, +    public String getVersion() {, +    public void setVersion(String version) {, +        Objects.requireNonNull(version, "Version of test cluster `" + this + "` can't be null");, +++ b/build.gradle, +allprojects {, +allprojects {, +        Project upstreamProject = project.ext.dependencyToProject(dep), +++ b/buildSrc/src/main/java/org/elasticsearch/GradleServicesAdapter.java, +import org.gradle.api.file.FileCollection;, + * Bridge a gap until Gradle offers service injection for plugins., +, +    public FileCollection fileTree(File dir) {, +        return project.fileTree(dir);, +    }, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/Distribution.java, +    INTEG_TEST("integ-test"),, +    ZIP("elasticsearch"),, +    ZIP_OSS("elasticsearch-oss");, +    private final String fileName;, +        this.fileName = name;, +    public String getFileName() {, +        return fileName;, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/ElasticsearchNode.java, +    private String version;, +    public String getVersion() {, +    public void setVersion(String version) {, +        Objects.requireNonNull(version, "Version of test cluster `" + this + "` can't be null");, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/testclusters/SyncTestClustersConfiguration.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License.]