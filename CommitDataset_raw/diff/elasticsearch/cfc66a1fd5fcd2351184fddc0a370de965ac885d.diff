[+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/JobManager.java, +import java.util.concurrent.atomic.AtomicReference;, +                        private AtomicReference<Job> updatedJob = new AtomicReference<>();, +                            return new PutJobAction.Response(updatedJob.get());, +                            Job job = getJobOrThrowIfUnknown(request.getJobId(), currentState);, +                            updatedJob.set(request.getJobUpdate().mergeWithJob(job, maxModelMemoryLimit));, +                            return updateClusterState(updatedJob.get(), true, currentState);, +                private AtomicReference<Job> updatedJob = new AtomicReference<>();, +                    Job job = getJobOrThrowIfUnknown(request.getJobId(), currentState);, +                    updatedJob.set(request.getJobUpdate().mergeWithJob(job, maxModelMemoryLimit));, +                    return updateClusterState(updatedJob.get(), true, currentState);, +                    actionListener.onResponse(new PutJobAction.Response(updatedJob.get()));, +++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/JobManager.java, +import java.util.concurrent.atomic.AtomicReference;, +                        private AtomicReference<Job> updatedJob = new AtomicReference<>();, +                            return new PutJobAction.Response(updatedJob.get());, +                            Job job = getJobOrThrowIfUnknown(request.getJobId(), currentState);, +                            updatedJob.set(request.getJobUpdate().mergeWithJob(job, maxModelMemoryLimit));, +                            return updateClusterState(updatedJob.get(), true, currentState);, +                private AtomicReference<Job> updatedJob = new AtomicReference<>();, +                    Job job = getJobOrThrowIfUnknown(request.getJobId(), currentState);, +                    updatedJob.set(request.getJobUpdate().mergeWithJob(job, maxModelMemoryLimit));, +                    return updateClusterState(updatedJob.get(), true, currentState);, +                    actionListener.onResponse(new PutJobAction.Response(updatedJob.get()));, +++ b/x-pack/qa/ml-native-tests/src/test/java/org/elasticsearch/xpack/ml/integration/BasicRenormalizationIT.java, +        assertBusy(() -> {, +        });, +++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/JobManager.java, +import java.util.concurrent.atomic.AtomicReference;, +                        private AtomicReference<Job> updatedJob = new AtomicReference<>();, +                            return new PutJobAction.Response(updatedJob.get());, +                            Job job = getJobOrThrowIfUnknown(request.getJobId(), currentState);, +                            updatedJob.set(request.getJobUpdate().mergeWithJob(job, maxModelMemoryLimit));, +                            return updateClusterState(updatedJob.get(), true, currentState);, +                private AtomicReference<Job> updatedJob = new AtomicReference<>();, +                    Job job = getJobOrThrowIfUnknown(request.getJobId(), currentState);, +                    updatedJob.set(request.getJobUpdate().mergeWithJob(job, maxModelMemoryLimit));, +                    return updateClusterState(updatedJob.get(), true, currentState);, +                    actionListener.onResponse(new PutJobAction.Response(updatedJob.get()));, +++ b/x-pack/qa/ml-native-tests/src/test/java/org/elasticsearch/xpack/ml/integration/BasicRenormalizationIT.java, +        assertBusy(() -> {, +        });, +++ b/x-pack/qa/ml-native-tests/src/test/java/org/elasticsearch/xpack/ml/integration/DatafeedJobsIT.java, +        assertBusy(() -> {, +        });, +++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/JobManager.java, +import java.util.concurrent.atomic.AtomicReference;, +                        private AtomicReference<Job> updatedJob = new AtomicReference<>();, +                            return new PutJobAction.Response(updatedJob.get());, +                            Job job = getJobOrThrowIfUnknown(request.getJobId(), currentState);, +                            updatedJob.set(request.getJobUpdate().mergeWithJob(job, maxModelMemoryLimit));, +                            return updateClusterState(updatedJob.get(), true, currentState);, +                private AtomicReference<Job> updatedJob = new AtomicReference<>();, +                    Job job = getJobOrThrowIfUnknown(request.getJobId(), currentState);, +                    updatedJob.set(request.getJobUpdate().mergeWithJob(job, maxModelMemoryLimit));, +                    return updateClusterState(updatedJob.get(), true, currentState);, +                    actionListener.onResponse(new PutJobAction.Response(updatedJob.get()));, +++ b/x-pack/qa/ml-native-tests/src/test/java/org/elasticsearch/xpack/ml/integration/BasicRenormalizationIT.java, +        assertBusy(() -> {, +        });, +++ b/x-pack/qa/ml-native-tests/src/test/java/org/elasticsearch/xpack/ml/integration/DatafeedJobsIT.java, +        assertBusy(() -> {, +        });, +++ b/x-pack/qa/ml-native-tests/src/test/java/org/elasticsearch/xpack/ml/integration/OverallBucketsIT.java, +        assertBusy(() -> {, +        });, +++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/JobManager.java, +import java.util.concurrent.atomic.AtomicReference;, +                        private AtomicReference<Job> updatedJob = new AtomicReference<>();, +                            return new PutJobAction.Response(updatedJob.get());, +                            Job job = getJobOrThrowIfUnknown(request.getJobId(), currentState);, +                            updatedJob.set(request.getJobUpdate().mergeWithJob(job, maxModelMemoryLimit));, +                            return updateClusterState(updatedJob.get(), true, currentState);, +                private AtomicReference<Job> updatedJob = new AtomicReference<>();, +                    Job job = getJobOrThrowIfUnknown(request.getJobId(), currentState);, +                    updatedJob.set(request.getJobUpdate().mergeWithJob(job, maxModelMemoryLimit));, +                    return updateClusterState(updatedJob.get(), true, currentState);, +                    actionListener.onResponse(new PutJobAction.Response(updatedJob.get()));, +++ b/x-pack/qa/ml-native-tests/src/test/java/org/elasticsearch/xpack/ml/integration/BasicRenormalizationIT.java, +        assertBusy(() -> {, +        });, +++ b/x-pack/qa/ml-native-tests/src/test/java/org/elasticsearch/xpack/ml/integration/DatafeedJobsIT.java, +        assertBusy(() -> {, +        });, +++ b/x-pack/qa/ml-native-tests/src/test/java/org/elasticsearch/xpack/ml/integration/OverallBucketsIT.java, +        assertBusy(() -> {, +        });, +++ b/x-pack/qa/ml-native-tests/src/test/java/org/elasticsearch/xpack/ml/integration/RestoreModelSnapshotIT.java, +        assertBusy(() -> {, +        });]