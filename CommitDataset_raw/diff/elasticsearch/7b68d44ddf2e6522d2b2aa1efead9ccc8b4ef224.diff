[+++ b/build.gradle, +++ b/build.gradle, +++ b/buildSrc/build.gradle, +++ b/build.gradle, +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import nebula.plugin.publishing.maven.MavenManifestPlugin, +, +                // Plugins decalare extensions of ESIntegTestCase as "Tests" instead of IT., +++ b/build.gradle, +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import nebula.plugin.publishing.maven.MavenManifestPlugin, +, +                // Plugins decalare extensions of ESIntegTestCase as "Tests" instead of IT., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/NamingConventionsTask.groovy, +, +                args(testClass, integTestClass), +++ b/build.gradle, +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import nebula.plugin.publishing.maven.MavenManifestPlugin, +, +                // Plugins decalare extensions of ESIntegTestCase as "Tests" instead of IT., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/NamingConventionsTask.groovy, +, +                args(testClass, integTestClass), +++ b/buildSrc/src/main/java/org/elasticsearch/test/NamingConventionsCheck.java, +        int i = 0;, +        NamingConventionsCheck check = new NamingConventionsCheck(, +                loadClassWithoutInitializing(args[i++]),, +                loadClassWithoutInitializing(args[i++]));, +        while (true) {, +            switch (args[i]) {, +                i++;, +                continue;, +                i++;, +                continue;, +                i++;, +                fail("Expected -- before a path.");, +            break;, +        check.check(Paths.get(args[i]));, +        if (!skipIntegTestsInDisguise) {, +            assertNoViolations("Subclasses of ESIntegTestCase should end with IT as they are integration tests",, +                    check.integTestsInDisguise);, +    public void check(Path rootPath) throws IOException {, +                        if (integTestClass.isAssignableFrom(clazz)) {, +++ b/build.gradle, +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import nebula.plugin.publishing.maven.MavenManifestPlugin, +, +                // Plugins decalare extensions of ESIntegTestCase as "Tests" instead of IT., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/NamingConventionsTask.groovy, +, +                args(testClass, integTestClass), +++ b/buildSrc/src/main/java/org/elasticsearch/test/NamingConventionsCheck.java, +        int i = 0;, +        NamingConventionsCheck check = new NamingConventionsCheck(, +                loadClassWithoutInitializing(args[i++]),, +                loadClassWithoutInitializing(args[i++]));, +        while (true) {, +            switch (args[i]) {, +                i++;, +                continue;, +                i++;, +                continue;, +                i++;, +                fail("Expected -- before a path.");, +            break;, +        check.check(Paths.get(args[i]));, +        if (!skipIntegTestsInDisguise) {, +            assertNoViolations("Subclasses of ESIntegTestCase should end with IT as they are integration tests",, +                    check.integTestsInDisguise);, +    public void check(Path rootPath) throws IOException {, +                        if (integTestClass.isAssignableFrom(clazz)) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]options[/\\]detailederrors[/\\]DetailedErrorsEnabledIT.java" checks="LineLength" />, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]rest[/\\]ESRestTestCase.java" checks="LineLength" />, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]rest[/\\]RestTestExecutionContext.java" checks="LineLength" />, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]rest[/\\]client[/\\]http[/\\]HttpRequestBuilder.java" checks="LineLength" />, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]rest[/\\]section[/\\]DoSection.java" checks="LineLength" />, +++ b/build.gradle, +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import nebula.plugin.publishing.maven.MavenManifestPlugin, +, +                // Plugins decalare extensions of ESIntegTestCase as "Tests" instead of IT., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/NamingConventionsTask.groovy, +, +                args(testClass, integTestClass), +++ b/buildSrc/src/main/java/org/elasticsearch/test/NamingConventionsCheck.java, +        int i = 0;, +        NamingConventionsCheck check = new NamingConventionsCheck(, +                loadClassWithoutInitializing(args[i++]),, +                loadClassWithoutInitializing(args[i++]));, +        while (true) {, +            switch (args[i]) {, +                i++;, +                continue;]