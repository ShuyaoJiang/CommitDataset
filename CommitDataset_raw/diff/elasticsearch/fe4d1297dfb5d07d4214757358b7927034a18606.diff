[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequest.java, +import org.elasticsearch.cluster.routing.allocation.command.AllocationCommandRegistry;, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.ParseFieldMatcher;, +import org.elasticsearch.common.xcontent.ObjectParser;, +import java.util.List;, +     * Set the allocation commands to execute., +     */, +    public ClusterRerouteRequest commands(AllocationCommand... commands) {, +        this.commands = new AllocationCommands(commands);, +        return this;, +    }, +, +    /**, +    public ClusterRerouteRequest source(BytesReference source, AllocationCommandRegistry registry, ParseFieldMatcher parseFieldMatcher), +            throws Exception {, +            parser.setParseFieldMatcher(parseFieldMatcher);, +                        this.commands = AllocationCommands.fromXContent(parser, registry);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequest.java, +import org.elasticsearch.cluster.routing.allocation.command.AllocationCommandRegistry;, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.ParseFieldMatcher;, +import org.elasticsearch.common.xcontent.ObjectParser;, +import java.util.List;, +     * Set the allocation commands to execute., +     */, +    public ClusterRerouteRequest commands(AllocationCommand... commands) {, +        this.commands = new AllocationCommands(commands);, +        return this;, +    }, +, +    /**, +    public ClusterRerouteRequest source(BytesReference source, AllocationCommandRegistry registry, ParseFieldMatcher parseFieldMatcher), +            throws Exception {, +            parser.setParseFieldMatcher(parseFieldMatcher);, +                        this.commands = AllocationCommands.fromXContent(parser, registry);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequestBuilder.java, +     * Sets the commands for the request to execute., +    public ClusterRerouteRequestBuilder setCommands(AllocationCommand... commands) throws Exception {, +        request.commands(commands);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequest.java, +import org.elasticsearch.cluster.routing.allocation.command.AllocationCommandRegistry;, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.ParseFieldMatcher;, +import org.elasticsearch.common.xcontent.ObjectParser;, +import java.util.List;, +     * Set the allocation commands to execute., +     */, +    public ClusterRerouteRequest commands(AllocationCommand... commands) {, +        this.commands = new AllocationCommands(commands);, +        return this;, +    }, +, +    /**, +    public ClusterRerouteRequest source(BytesReference source, AllocationCommandRegistry registry, ParseFieldMatcher parseFieldMatcher), +            throws Exception {, +            parser.setParseFieldMatcher(parseFieldMatcher);, +                        this.commands = AllocationCommands.fromXContent(parser, registry);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequestBuilder.java, +     * Sets the commands for the request to execute., +    public ClusterRerouteRequestBuilder setCommands(AllocationCommand... commands) throws Exception {, +        request.commands(commands);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/RerouteExplanation.java, +        AllocationCommand command = in.readAllocationCommand();, +        out.writeAllocationCommand(explanation.command);, +        builder.field("parameters", command);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequest.java, +import org.elasticsearch.cluster.routing.allocation.command.AllocationCommandRegistry;, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.ParseFieldMatcher;, +import org.elasticsearch.common.xcontent.ObjectParser;, +import java.util.List;, +     * Set the allocation commands to execute., +     */, +    public ClusterRerouteRequest commands(AllocationCommand... commands) {, +        this.commands = new AllocationCommands(commands);, +        return this;, +    }, +, +    /**, +    public ClusterRerouteRequest source(BytesReference source, AllocationCommandRegistry registry, ParseFieldMatcher parseFieldMatcher), +            throws Exception {, +            parser.setParseFieldMatcher(parseFieldMatcher);, +                        this.commands = AllocationCommands.fromXContent(parser, registry);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequestBuilder.java, +     * Sets the commands for the request to execute., +    public ClusterRerouteRequestBuilder setCommands(AllocationCommand... commands) throws Exception {, +        request.commands(commands);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/RerouteExplanation.java, +        AllocationCommand command = in.readAllocationCommand();, +        out.writeAllocationCommand(explanation.command);, +        builder.field("parameters", command);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/command/AbstractAllocateAllocationCommand.java, +public abstract class AbstractAllocateAllocationCommand implements AllocationCommand {, +    private static final String INDEX_FIELD = "index";, +    private static final String SHARD_FIELD = "shard";, +    private static final String NODE_FIELD = "node";, +    protected static <T extends Builder<?>> ObjectParser<T, Void> createAllocateParser(String command) {, +        parser.declareString(Builder::setIndex, new ParseField(INDEX_FIELD));, +        parser.declareInt(Builder::setShard, new ParseField(SHARD_FIELD));]