[+++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            copyConfig.from(srcConfigFile), +        return project.tasks.create(name: name, type: Exec, dependsOn: setup) {, +            // only show output on failure, when not in info or debug mode, +            if (logger.isInfoEnabled() == false) {, +                standardOutput = new ByteArrayOutputStream(), +                errorOutput = standardOutput, +                ignoreExitValue = true, +                doLast {, +                    if (execResult.exitValue != 0) {, +                        logger.error(standardOutput.toString()), +                        throw new GradleException("Process '${execArgs.join(' ')}' finished with non-zero exit value ${execResult.exitValue}"), +                    }, +                }, +            }, +        return project.tasks.create(name: name, type: Exec, dependsOn: depends) {, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            copyConfig.from(srcConfigFile), +        return project.tasks.create(name: name, type: Exec, dependsOn: setup) {, +            // only show output on failure, when not in info or debug mode, +            if (logger.isInfoEnabled() == false) {, +                standardOutput = new ByteArrayOutputStream(), +                errorOutput = standardOutput, +                ignoreExitValue = true, +                doLast {, +                    if (execResult.exitValue != 0) {, +                        logger.error(standardOutput.toString()), +                        throw new GradleException("Process '${execArgs.join(' ')}' finished with non-zero exit value ${execResult.exitValue}"), +                    }, +                }, +            }, +        return project.tasks.create(name: name, type: Exec, dependsOn: depends) {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNACLibrary.java, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            copyConfig.from(srcConfigFile), +        return project.tasks.create(name: name, type: Exec, dependsOn: setup) {, +            // only show output on failure, when not in info or debug mode, +            if (logger.isInfoEnabled() == false) {, +                standardOutput = new ByteArrayOutputStream(), +                errorOutput = standardOutput, +                ignoreExitValue = true, +                doLast {, +                    if (execResult.exitValue != 0) {, +                        logger.error(standardOutput.toString()), +                        throw new GradleException("Process '${execArgs.join(' ')}' finished with non-zero exit value ${execResult.exitValue}"), +                    }, +                }, +            }, +        return project.tasks.create(name: name, type: Exec, dependsOn: depends) {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNACLibrary.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Seccomp.java, + * This is only supported on the Linux, Solaris, and Mac OS X operating systems., +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            copyConfig.from(srcConfigFile), +        return project.tasks.create(name: name, type: Exec, dependsOn: setup) {, +            // only show output on failure, when not in info or debug mode, +            if (logger.isInfoEnabled() == false) {, +                standardOutput = new ByteArrayOutputStream(), +                errorOutput = standardOutput, +                ignoreExitValue = true, +                doLast {, +                    if (execResult.exitValue != 0) {, +                        logger.error(standardOutput.toString()), +                        throw new GradleException("Process '${execArgs.join(' ')}' finished with non-zero exit value ${execResult.exitValue}"), +                    }, +                }, +            }, +        return project.tasks.create(name: name, type: Exec, dependsOn: depends) {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNACLibrary.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Seccomp.java, + * This is only supported on the Linux, Solaris, and Mac OS X operating systems., +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.common.network.NetworkService;, +import org.elasticsearch.common.settings.SettingsFilter;, +import org.elasticsearch.node.settings.NodeSettingsService;, +            final NetworkService networkService = new NetworkService(settings);, +            final SettingsFilter settingsFilter = new SettingsFilter(settings);, +                modules.add(new SettingsModule(this.settings, settingsFilter ));, +                modules.add(new NetworkModule(networkService));, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            copyConfig.from(srcConfigFile), +        return project.tasks.create(name: name, type: Exec, dependsOn: setup) {, +            // only show output on failure, when not in info or debug mode, +            if (logger.isInfoEnabled() == false) {, +                standardOutput = new ByteArrayOutputStream(), +                errorOutput = standardOutput, +                ignoreExitValue = true, +                doLast {, +                    if (execResult.exitValue != 0) {, +                        logger.error(standardOutput.toString()), +                        throw new GradleException("Process '${execArgs.join(' ')}' finished with non-zero exit value ${execResult.exitValue}"), +                    }, +                }, +            }]