[+++ b/docs/reference/indices/stats.asciidoc, +By default, all stats are returned, returning only specific stats can be, +specified as well in the URI. Those stats can be any of:, +# Get back stats for merge and refresh only for all indices, +curl 'localhost:9200/_stats/merge,refresh', +curl 'localhost:9200/my_index/_stats/indexing?types=type1,type2, +curl 'localhost:9200/_stats/search?groups=group1,group2, +++ b/docs/reference/indices/stats.asciidoc, +By default, all stats are returned, returning only specific stats can be, +specified as well in the URI. Those stats can be any of:, +# Get back stats for merge and refresh only for all indices, +curl 'localhost:9200/_stats/merge,refresh', +curl 'localhost:9200/my_index/_stats/indexing?types=type1,type2, +curl 'localhost:9200/_stats/search?groups=group1,group2, +++ b/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.translog.TranslogStats;, +                case Translog:, +                    translog = new TranslogStats();, +                    break;, +                case Translog:, +                    translog = indexShard.translogStats();, +                    break;, +    @Nullable, +    public TranslogStats translog;, +, +        if (translog == null) {, +            if (stats.getTranslog() != null) {, +                translog = new TranslogStats();, +                translog.add(stats.getTranslog());, +            }, +        } else {, +            translog.add(stats.getTranslog());, +        }, +    @Nullable, +    public TranslogStats getTranslog() { return translog; }, +, +        if (in.getVersion().after(Version.V_1_0_0_Beta2)) {, +            translog = in.readOptionalStreamable(new TranslogStats());, +        }, +        if (out.getVersion().after(Version.V_1_0_0_Beta2)) {, +            out.writeOptionalStreamable(translog);, +        }, +        if (translog != null) {, +            translog.toXContent(builder, params);, +        }, +++ b/docs/reference/indices/stats.asciidoc, +By default, all stats are returned, returning only specific stats can be, +specified as well in the URI. Those stats can be any of:, +# Get back stats for merge and refresh only for all indices, +curl 'localhost:9200/_stats/merge,refresh', +curl 'localhost:9200/my_index/_stats/indexing?types=type1,type2, +curl 'localhost:9200/_stats/search?groups=group1,group2, +++ b/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.translog.TranslogStats;, +                case Translog:, +                    translog = new TranslogStats();, +                    break;, +                case Translog:, +                    translog = indexShard.translogStats();, +                    break;, +    @Nullable, +    public TranslogStats translog;, +, +        if (translog == null) {, +            if (stats.getTranslog() != null) {, +                translog = new TranslogStats();, +                translog.add(stats.getTranslog());, +            }, +        } else {, +            translog.add(stats.getTranslog());, +        }, +    @Nullable, +    public TranslogStats getTranslog() { return translog; }, +, +        if (in.getVersion().after(Version.V_1_0_0_Beta2)) {, +            translog = in.readOptionalStreamable(new TranslogStats());, +        }, +        if (out.getVersion().after(Version.V_1_0_0_Beta2)) {, +            out.writeOptionalStreamable(translog);, +        }, +        if (translog != null) {, +            translog.toXContent(builder, params);, +        }, +++ b/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStatsFlags.java, +    private EnumSet<Flag> flags = EnumSet.allOf(Flag.class);, +        Segments("segments"),, +        Translog("translog");, +++ b/docs/reference/indices/stats.asciidoc, +By default, all stats are returned, returning only specific stats can be, +specified as well in the URI. Those stats can be any of:, +# Get back stats for merge and refresh only for all indices, +curl 'localhost:9200/_stats/merge,refresh', +curl 'localhost:9200/my_index/_stats/indexing?types=type1,type2, +curl 'localhost:9200/_stats/search?groups=group1,group2, +++ b/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.translog.TranslogStats;, +                case Translog:, +                    translog = new TranslogStats();, +                    break;, +                case Translog:]