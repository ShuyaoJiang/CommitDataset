[+++ b/src/test/java/org/elasticsearch/benchmark/search/facet/TermsFacetSearchBenchmark.java, +            client.admin().indices().create(createIndexRequest("test").mapping("type1", jsonBuilder(), +              .startObject(), +                .startObject("type1"), +                  .startObject("properties"), +                    .startObject("s_value_dv"), +                      .field("type", "string"), +                      .field("index", "no"), +                      .startObject("fielddata"), +                        .field("format", "doc_values"), +                      .endObject(), +                    .endObject(), +                    .startObject("sm_value_dv"), +                      .field("type", "string"), +                      .field("index", "no"), +                      .startObject("fielddata"), +                        .field("format", "doc_values"), +                      .endObject(), +                    .endObject(), +                    .startObject("l_value_dv"), +                      .field("type", "long"), +                      .field("index", "no"), +                      .startObject("fielddata"), +                        .field("format", "doc_values"), +                      .endObject(), +                    .endObject(), +                    .startObject("lm_value_dv"), +                      .field("type", "long"), +                      .field("index", "no"), +                      .startObject("fielddata"), +                        .field("format", "doc_values"), +                      .endObject(), +                    .endObject(), +                  .endObject(), +                .endObject(), +              .endObject())).actionGet();, +                    final String sValue = sValues[counter % sValues.length];, +                    final long lValue = lValues[counter % lValues.length];, +                    builder.field("s_value", sValue);, +                    builder.field("l_value", lValue);, +                    builder.field("s_value_dv", sValue);, +                    builder.field("l_value_dv", lValue);, +                    for (String field : new String[] {"sm_value", "sm_value_dv"}) {, +                        builder.startArray(field);, +                    }, +                    for (String field : new String[] {"lm_value", "lm_value_dv"}) {, +                        builder.startArray(field);, +                    }, +        stats.add(terms("terms_s_dv", "s_value_dv", null));, +        stats.add(terms("terms_map_s_dv", "s_value_dv", "map"));, +        stats.add(terms("terms_l_dv", "l_value_dv", null));, +        stats.add(terms("terms_map_l_dv", "l_value_dv", "map"));, +        stats.add(terms("terms_sm_dv", "sm_value_dv", null));, +        stats.add(terms("terms_map_sm_dv", "sm_value_dv", "map"));, +        stats.add(terms("terms_lm_dv", "lm_value_dv", null));, +        stats.add(terms("terms_map_lm_dv", "lm_value_dv", "map"));, +        stats.add(termsStats("terms_stats_s_l_dv", "s_value_dv", "l_value_dv", null));, +        stats.add(termsStats("terms_stats_s_lm_dv", "s_value_dv", "lm_value_dv", null));, +        stats.add(termsStats("terms_stats_sm_l_dv", "sm_value_dv", "l_value_dv", null));]