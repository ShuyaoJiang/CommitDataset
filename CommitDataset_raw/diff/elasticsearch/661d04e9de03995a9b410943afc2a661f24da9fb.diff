[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.block.ClusterBlocks;, +                    Settings persistentSettingsBuilt = persistentSettings.build();, +                    Settings transientSettingsBuilt = transientSettings.build();, +                            .persistentSettings(persistentSettingsBuilt), +                            .transientSettings(transientSettingsBuilt);, +                    ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks());, +                    Boolean updatedReadOnly = persistentSettingsBuilt.getAsBoolean(MetaData.SETTING_READ_ONLY, false) || transientSettingsBuilt.getAsBoolean(MetaData.SETTING_READ_ONLY, false);, +                    if (updatedReadOnly) {, +                        blocks.addGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    }, +                    else {, +                        blocks.removeGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    }, +                    return ClusterState.builder().state(currentState).metaData(metaData).blocks(blocks).build();, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.block.ClusterBlocks;, +                    Settings persistentSettingsBuilt = persistentSettings.build();, +                    Settings transientSettingsBuilt = transientSettings.build();, +                            .persistentSettings(persistentSettingsBuilt), +                            .transientSettings(transientSettingsBuilt);, +                    ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks());, +                    Boolean updatedReadOnly = persistentSettingsBuilt.getAsBoolean(MetaData.SETTING_READ_ONLY, false) || transientSettingsBuilt.getAsBoolean(MetaData.SETTING_READ_ONLY, false);, +                    if (updatedReadOnly) {, +                        blocks.addGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    }, +                    else {, +                        blocks.removeGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    }, +                    return ClusterState.builder().state(currentState).metaData(metaData).blocks(blocks).build();, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.cluster.block.ClusterBlock;, +import org.elasticsearch.cluster.block.ClusterBlockLevel;, +            .add(IndexMetaData.SETTING_READ_ONLY), +    public static final ClusterBlock INDEX_READ_ONLY_BLOCK = new ClusterBlock(5, "index read-only", false, false, ClusterBlockLevel.WRITE, ClusterBlockLevel.METADATA);, +, +    public static final String SETTING_READ_ONLY = "index.read_only";, +, +    public boolean readOnly() {, +        return settings.getAsBoolean(SETTING_READ_ONLY, false);, +    }, +, +    public boolean getreadOnly() {, +        return readOnly();, +    }, +, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.block.ClusterBlocks;, +                    Settings persistentSettingsBuilt = persistentSettings.build();, +                    Settings transientSettingsBuilt = transientSettings.build();, +                            .persistentSettings(persistentSettingsBuilt), +                            .transientSettings(transientSettingsBuilt);, +                    ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks());, +                    Boolean updatedReadOnly = persistentSettingsBuilt.getAsBoolean(MetaData.SETTING_READ_ONLY, false) || transientSettingsBuilt.getAsBoolean(MetaData.SETTING_READ_ONLY, false);, +                    if (updatedReadOnly) {, +                        blocks.addGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    }, +                    else {, +                        blocks.removeGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    }, +                    return ClusterState.builder().state(currentState).metaData(metaData).blocks(blocks).build();, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.cluster.block.ClusterBlock;, +import org.elasticsearch.cluster.block.ClusterBlockLevel;, +            .add(IndexMetaData.SETTING_READ_ONLY), +    public static final ClusterBlock INDEX_READ_ONLY_BLOCK = new ClusterBlock(5, "index read-only", false, false, ClusterBlockLevel.WRITE, ClusterBlockLevel.METADATA);, +, +    public static final String SETTING_READ_ONLY = "index.read_only";, +, +    public boolean readOnly() {, +        return settings.getAsBoolean(SETTING_READ_ONLY, false);, +    }, +, +    public boolean getreadOnly() {, +        return readOnly();, +    }, +, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +import org.elasticsearch.cluster.block.ClusterBlock;, +import org.elasticsearch.cluster.block.ClusterBlockLevel;, +    public static final String SETTING_READ_ONLY = "cluster.read_only";, +, +    public static final ClusterBlock CLUSTER_READ_ONLY_BLOCK = new ClusterBlock(6, "cluster read-only", false, false, ClusterBlockLevel.WRITE, ClusterBlockLevel.METADATA);, +            .add("cluster.read_only"), +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.block.ClusterBlocks;, +                    Settings persistentSettingsBuilt = persistentSettings.build();, +                    Settings transientSettingsBuilt = transientSettings.build();, +                            .persistentSettings(persistentSettingsBuilt), +                            .transientSettings(transientSettingsBuilt);, +                    ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks());, +                    Boolean updatedReadOnly = persistentSettingsBuilt.getAsBoolean(MetaData.SETTING_READ_ONLY, false) || transientSettingsBuilt.getAsBoolean(MetaData.SETTING_READ_ONLY, false);, +                    if (updatedReadOnly) {, +                        blocks.addGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    }, +                    else {, +                        blocks.removeGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    }, +                    return ClusterState.builder().state(currentState).metaData(metaData).blocks(blocks).build();, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java]