[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateRequest;, +import org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateResponse;, +    /**, +     * Puts an index template using the Index Templates API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html"> Index Templates API, +     * on elastic.co</a>, +     */, +    public PutIndexTemplateResponse putTemplate(PutIndexTemplateRequest putIndexTemplateRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(putIndexTemplateRequest, RequestConverters::putTemplate,, +            PutIndexTemplateResponse::fromXContent, emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously puts an index template using the Index Templates API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html"> Index Templates API, +     * on elastic.co</a>, +     */, +    public void putTemplateAsync(PutIndexTemplateRequest putIndexTemplateRequest,, +                                 ActionListener<PutIndexTemplateResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(putIndexTemplateRequest, RequestConverters::putTemplate,, +            PutIndexTemplateResponse::fromXContent, listener, emptySet(), headers);, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateRequest;, +import org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateResponse;, +    /**, +     * Puts an index template using the Index Templates API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html"> Index Templates API, +     * on elastic.co</a>, +     */, +    public PutIndexTemplateResponse putTemplate(PutIndexTemplateRequest putIndexTemplateRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(putIndexTemplateRequest, RequestConverters::putTemplate,, +            PutIndexTemplateResponse::fromXContent, emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously puts an index template using the Index Templates API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html"> Index Templates API, +     * on elastic.co</a>, +     */, +    public void putTemplateAsync(PutIndexTemplateRequest putIndexTemplateRequest,, +                                 ActionListener<PutIndexTemplateResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(putIndexTemplateRequest, RequestConverters::putTemplate,, +            PutIndexTemplateResponse::fromXContent, listener, emptySet(), headers);, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateRequest;, +    static Request putTemplate(PutIndexTemplateRequest putIndexTemplateRequest) throws IOException {, +        String endpoint = new EndpointBuilder().addPathPartAsIs("_template").addPathPart(putIndexTemplateRequest.name()).build();, +        Request request = new Request(HttpPut.METHOD_NAME, endpoint);, +        Params params = new Params(request);, +        params.withMasterTimeout(putIndexTemplateRequest.masterNodeTimeout());, +        if (putIndexTemplateRequest.create()) {, +            params.putParam("create", Boolean.TRUE.toString());, +        }, +        if (Strings.hasText(putIndexTemplateRequest.cause())) {, +            params.putParam("cause", putIndexTemplateRequest.cause());, +        }, +        request.setEntity(createEntity(putIndexTemplateRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateRequest;, +import org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateResponse;, +    /**, +     * Puts an index template using the Index Templates API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html"> Index Templates API, +     * on elastic.co</a>, +     */, +    public PutIndexTemplateResponse putTemplate(PutIndexTemplateRequest putIndexTemplateRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(putIndexTemplateRequest, RequestConverters::putTemplate,, +            PutIndexTemplateResponse::fromXContent, emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously puts an index template using the Index Templates API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html"> Index Templates API, +     * on elastic.co</a>, +     */, +    public void putTemplateAsync(PutIndexTemplateRequest putIndexTemplateRequest,, +                                 ActionListener<PutIndexTemplateResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(putIndexTemplateRequest, RequestConverters::putTemplate,, +            PutIndexTemplateResponse::fromXContent, listener, emptySet(), headers);, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateRequest;, +    static Request putTemplate(PutIndexTemplateRequest putIndexTemplateRequest) throws IOException {, +        String endpoint = new EndpointBuilder().addPathPartAsIs("_template").addPathPart(putIndexTemplateRequest.name()).build();, +        Request request = new Request(HttpPut.METHOD_NAME, endpoint);, +        Params params = new Params(request);, +        params.withMasterTimeout(putIndexTemplateRequest.masterNodeTimeout());, +        if (putIndexTemplateRequest.create()) {]