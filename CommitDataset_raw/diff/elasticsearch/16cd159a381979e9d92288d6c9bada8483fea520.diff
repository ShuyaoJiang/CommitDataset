[+++ b/pom.xml, +        <lucene.version>3.6.0</lucene.version>, +++ b/pom.xml, +        <lucene.version>3.6.0</lucene.version>, +++ b/src/main/java/org/apache/lucene/index/memory/CustomMemoryIndex.java, +import org.elasticsearch.common.io.FastStringReader;, +    private final FieldInfos fieldInfos;, +, +        fieldInfos = new FieldInfos();, +        TokenStream stream;, +        try {, +            stream = analyzer.reusableTokenStream(fieldName, new FastStringReader(text));, +        } catch (IOException ex) {, +            throw new RuntimeException(ex);, +        }, +            fieldInfos.add(fieldName, true, true);, +, +    final class MemoryIndexReader extends IndexReader {, +        public FieldInfos getFieldInfos() {, +            return fieldInfos;, +++ b/pom.xml, +        <lucene.version>3.6.0</lucene.version>, +++ b/src/main/java/org/apache/lucene/index/memory/CustomMemoryIndex.java, +import org.elasticsearch.common.io.FastStringReader;, +    private final FieldInfos fieldInfos;, +, +        fieldInfos = new FieldInfos();, +        TokenStream stream;, +        try {, +            stream = analyzer.reusableTokenStream(fieldName, new FastStringReader(text));, +        } catch (IOException ex) {, +            throw new RuntimeException(ex);, +        }, +            fieldInfos.add(fieldName, true, true);, +, +    final class MemoryIndexReader extends IndexReader {, +        public FieldInfos getFieldInfos() {, +            return fieldInfos;, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final Version VERSION = Version.LUCENE_36;, +        if ("3.6".equals(version)) {, +            return Version.LUCENE_36;, +        }, +++ b/pom.xml, +        <lucene.version>3.6.0</lucene.version>, +++ b/src/main/java/org/apache/lucene/index/memory/CustomMemoryIndex.java, +import org.elasticsearch.common.io.FastStringReader;, +    private final FieldInfos fieldInfos;, +, +        fieldInfos = new FieldInfos();, +        TokenStream stream;, +        try {, +            stream = analyzer.reusableTokenStream(fieldName, new FastStringReader(text));, +        } catch (IOException ex) {, +            throw new RuntimeException(ex);, +        }, +            fieldInfos.add(fieldName, true, true);, +, +    final class MemoryIndexReader extends IndexReader {, +        public FieldInfos getFieldInfos() {, +            return fieldInfos;, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final Version VERSION = Version.LUCENE_36;, +        if ("3.6".equals(version)) {, +            return Version.LUCENE_36;, +        }, +++ /dev/null, +++ b/pom.xml, +        <lucene.version>3.6.0</lucene.version>, +++ b/src/main/java/org/apache/lucene/index/memory/CustomMemoryIndex.java, +import org.elasticsearch.common.io.FastStringReader;, +    private final FieldInfos fieldInfos;, +, +        fieldInfos = new FieldInfos();, +        TokenStream stream;, +        try {, +            stream = analyzer.reusableTokenStream(fieldName, new FastStringReader(text));, +        } catch (IOException ex) {, +            throw new RuntimeException(ex);, +        }, +            fieldInfos.add(fieldName, true, true);, +, +    final class MemoryIndexReader extends IndexReader {, +        public FieldInfos getFieldInfos() {, +            return fieldInfos;, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final Version VERSION = Version.LUCENE_36;, +        if ("3.6".equals(version)) {, +            return Version.LUCENE_36;, +        }, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +        <lucene.version>3.6.0</lucene.version>, +++ b/src/main/java/org/apache/lucene/index/memory/CustomMemoryIndex.java, +import org.elasticsearch.common.io.FastStringReader;, +    private final FieldInfos fieldInfos;, +, +        fieldInfos = new FieldInfos();, +        TokenStream stream;]