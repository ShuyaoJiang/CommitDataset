[+++ b/plugin/src/main/java/org/elasticsearch/xpack/security/authz/accesscontrol/FieldExtractor.java, +import org.apache.lucene.search.IndexOrDocValuesQuery;, +        } else if (query instanceof IndexOrDocValuesQuery) {, +            extractFields(((IndexOrDocValuesQuery) query).getIndexQuery(), fields);, +            extractFields(((IndexOrDocValuesQuery) query).getRandomAccessQuery(), fields);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/authz/accesscontrol/FieldExtractor.java, +import org.apache.lucene.search.IndexOrDocValuesQuery;, +        } else if (query instanceof IndexOrDocValuesQuery) {, +            extractFields(((IndexOrDocValuesQuery) query).getIndexQuery(), fields);, +            extractFields(((IndexOrDocValuesQuery) query).getRandomAccessQuery(), fields);, +++ b/plugin/src/test/java/org/elasticsearch/xpack/security/authz/accesscontrol/FieldExtractorTests.java, +import org.apache.lucene.search.IndexOrDocValuesQuery;, +, +    public void testIndexOrDocValuesQuery() {, +        Set<String> fields = new HashSet<>();, +        IndexOrDocValuesQuery query = new IndexOrDocValuesQuery(new FieldValueQuery("foo"),, +                        new DocValuesNumbersQuery("foo", 5L));, +        FieldExtractor.extractFields(query, fields);, +        assertEquals(asSet("foo"), fields);, +, +        // what if they have different fields - some programming error, +        fields.clear();, +        query = new IndexOrDocValuesQuery(new FieldValueQuery("foo1"),, +                new DocValuesNumbersQuery("bar", 5L));, +        FieldExtractor.extractFields(query, fields);, +        assertEquals(asSet("foo1", "bar"), fields);, +    }]