[+++ b/src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java, +                        sb.append("    start    : took [").append(TimeValue.timeValueMillis(recoveryStatus.start().time())).append("], check_index [").append(timeValueMillis(recoveryStatus.start().checkIndexTime())).append("]\n");, +++ b/src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java, +                        sb.append("    start    : took [").append(TimeValue.timeValueMillis(recoveryStatus.start().time())).append("], check_index [").append(timeValueMillis(recoveryStatus.start().checkIndexTime())).append("]\n");, +++ b/src/main/java/org/elasticsearch/index/gateway/RecoveryStatus.java, +        START,, +    private Start start = new Start();, +, +    public Start start() {, +        return this.start;, +    }, +, +    public static class Start {, +        private long startTime;, +        private long time;, +        private long checkIndexTime;, +, +        public long startTime() {, +            return this.startTime;, +        }, +, +        public void startTime(long startTime) {, +            this.startTime = startTime;, +        }, +, +        public long time() {, +            return this.time;, +        }, +, +        public void time(long time) {, +            this.time = time;, +        }, +, +        public long checkIndexTime() {, +            return checkIndexTime;, +        }, +, +        public void checkIndexTime(long checkIndexTime) {, +            this.checkIndexTime = checkIndexTime;, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java, +                        sb.append("    start    : took [").append(TimeValue.timeValueMillis(recoveryStatus.start().time())).append("], check_index [").append(timeValueMillis(recoveryStatus.start().checkIndexTime())).append("]\n");, +++ b/src/main/java/org/elasticsearch/index/gateway/RecoveryStatus.java, +        START,, +    private Start start = new Start();, +, +    public Start start() {, +        return this.start;, +    }, +, +    public static class Start {, +        private long startTime;, +        private long time;, +        private long checkIndexTime;, +, +        public long startTime() {, +            return this.startTime;, +        }, +, +        public void startTime(long startTime) {, +            this.startTime = startTime;, +        }, +, +        public long time() {, +            return this.time;, +        }, +, +        public void time(long time) {, +            this.time = time;, +        }, +, +        public long checkIndexTime() {, +            return checkIndexTime;, +        }, +, +        public void checkIndexTime(long checkIndexTime) {, +            this.checkIndexTime = checkIndexTime;, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/index/gateway/blobstore/BlobStoreIndexShardGateway.java, +            recoveryStatus.start().startTime(System.currentTimeMillis());, +            recoveryStatus.updateStage(RecoveryStatus.Stage.START);, +            recoveryStatus.start().time(System.currentTimeMillis() - recoveryStatus.start().startTime());, +            recoveryStatus.start().checkIndexTime(indexShard.checkIndexTook());, +            recoveryStatus.start().startTime(System.currentTimeMillis());, +            recoveryStatus.updateStage(RecoveryStatus.Stage.START);, +            recoveryStatus.start().time(System.currentTimeMillis() - recoveryStatus.start().startTime());, +            recoveryStatus.start().checkIndexTime(indexShard.checkIndexTook());, +, +            recoveryStatus.updateStage(RecoveryStatus.Stage.TRANSLOG);, +            recoveryStatus.translog().startTime(System.currentTimeMillis());, +            recoveryStatus.translog().time(System.currentTimeMillis() - recoveryStatus.translog().startTime());, +        recoveryStatus.updateStage(RecoveryStatus.Stage.INDEX);, +++ b/src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java, +                        sb.append("    start    : took [").append(TimeValue.timeValueMillis(recoveryStatus.start().time())).append("], check_index [").append(timeValueMillis(recoveryStatus.start().checkIndexTime())).append("]\n");, +++ b/src/main/java/org/elasticsearch/index/gateway/RecoveryStatus.java, +        START,]