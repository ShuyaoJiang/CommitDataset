[+++ b/docs/reference/aggregations/bucket/composite-aggregation.asciidoc, +      },, +      "nested": {, +          "type": "nested",, +          "properties": {, +            "product": {, +                "type": "keyword", +            },, +            "timestamp": {, +                "type": "date", +            },, +            "price": {, +                "type": "long", +            },, +            "shop": {, +                "type": "keyword", +            }, +          }, +++ b/docs/reference/aggregations/bucket/composite-aggregation.asciidoc, +      },, +      "nested": {, +          "type": "nested",, +          "properties": {, +            "product": {, +                "type": "keyword", +            },, +            "timestamp": {, +                "type": "date", +            },, +            "price": {, +                "type": "long", +            },, +            "shop": {, +                "type": "keyword", +            }, +          }, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/search.aggregation/230_composite.yml, +                    nested:, +                      type: nested, +                      properties:, +                        nested_long:, +                          type: long, +        body:  { "keyword": "foo", "long": [10, 20], "nested": [{"nested_long": 10}, {"nested_long": 20}] }, +        body:  { "keyword": "bar", "long": [100, 0], "nested": [{"nested_long": 10}, {"nested_long": 0}] }, +        body:  { "keyword": "bar", "long": [1000, 0], "nested": [{"nested_long": 1000}, {"nested_long": 20}] }, +, +---, +"Composite aggregation with nested parent":, +  - skip:, +      version: " - 6.99.99", +      reason:  the ability to set a nested parent aggregation was added in 7.0., +, +  - do:, +        search:, +          rest_total_hits_as_int: true, +          index: test, +          body:, +            aggregations:, +              1:, +                nested:, +                  path: nested, +                aggs:, +                  2:, +                    composite:, +                      sources: [, +                        "nested": {, +                          "terms": {, +                            "field": "nested.nested_long", +                        }, +                      }, +                    ], +, +  - match: {hits.total: 6}, +  - length: { aggregations.1.2.buckets: 4 }, +  - match: { aggregations.1.2.buckets.0.key.nested: 0 }, +  - match: { aggregations.1.2.buckets.0.doc_count:  1 }, +  - match: { aggregations.1.2.buckets.1.key.nested: 10 }, +  - match: { aggregations.1.2.buckets.1.doc_count:  2 }, +  - match: { aggregations.1.2.buckets.2.key.nested: 20 }, +  - match: { aggregations.1.2.buckets.2.doc_count:  2 }, +  - match: { aggregations.1.2.buckets.3.key.nested: 1000 }, +  - match: { aggregations.1.2.buckets.3.doc_count:  1 }, +, +  - do:, +      search:, +        rest_total_hits_as_int: true, +        index: test, +        body:, +          aggregations:, +            1:, +              nested:, +                path: nested, +              aggs:, +                2:, +                  composite:, +                    after: { "nested": 10 }, +                    sources: [, +                      "nested": {, +                        "terms": {, +                          "field": "nested.nested_long"]