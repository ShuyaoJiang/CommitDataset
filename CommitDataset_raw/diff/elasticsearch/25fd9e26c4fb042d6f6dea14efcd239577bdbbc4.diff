[+++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<? super Response> listener;, +    public ActionListenerResponseHandler(ActionListener<? super Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<? super Response> listener;, +    public ActionListenerResponseHandler(ActionListener<? super Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteResponse;, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    private long seqNo;, +    public DocWriteResponse(ShardId shardId, String type, String id, long seqNo, long version, Result result) {, +        this.seqNo = seqNo;, +     * Returns the sequence number assigned for this change. Returns {@link SequenceNumbersService#UNASSIGNED_SEQ_NO} if the operation, +     * wasn't performed (i.e., an update operation that resulted in a NOOP)., +     */, +    public long getSeqNo() {, +        return seqNo;, +    }, +, +    /**, +        seqNo = in.readZLong();, +        out.writeZLong(seqNo);, +        //nocommit: i'm not sure we want to expose it in the api but it will be handy for debugging while we work..., +        builder.field("_shard_id", shardId.id());, +        if (getSeqNo() >= 0) {, +            builder.field("_seq_no", getSeqNo());, +        }, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<? super Response> listener;, +    public ActionListenerResponseHandler(ActionListener<? super Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteResponse;, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    private long seqNo;, +    public DocWriteResponse(ShardId shardId, String type, String id, long seqNo, long version, Result result) {, +        this.seqNo = seqNo;, +     * Returns the sequence number assigned for this change. Returns {@link SequenceNumbersService#UNASSIGNED_SEQ_NO} if the operation, +     * wasn't performed (i.e., an update operation that resulted in a NOOP)., +     */, +    public long getSeqNo() {, +        return seqNo;, +    }, +, +    /**, +        seqNo = in.readZLong();, +        out.writeZLong(seqNo);, +        //nocommit: i'm not sure we want to expose it in the api but it will be handy for debugging while we work..., +        builder.field("_shard_id", shardId.id());, +        if (getSeqNo() >= 0) {, +            builder.field("_seq_no", getSeqNo());, +        }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(, +                        new ShardStats(, +                            indexShard.routingEntry(),, +                            indexShard.shardPath(),, +                            new CommonStats(indicesService.getIndicesQueryCache(), indexShard, SHARD_STATS_FLAGS),, +                            indexShard.commitStats(),, +                            indexShard.seqNoStats()));, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<? super Response> listener;, +    public ActionListenerResponseHandler(ActionListener<? super Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteResponse;, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    private long seqNo;, +    public DocWriteResponse(ShardId shardId, String type, String id, long seqNo, long version, Result result) {, +        this.seqNo = seqNo;, +     * Returns the sequence number assigned for this change. Returns {@link SequenceNumbersService#UNASSIGNED_SEQ_NO} if the operation, +     * wasn't performed (i.e., an update operation that resulted in a NOOP)., +     */, +    public long getSeqNo() {, +        return seqNo;, +    }, +, +    /**, +        seqNo = in.readZLong();, +        out.writeZLong(seqNo);, +        //nocommit: i'm not sure we want to expose it in the api but it will be handy for debugging while we work..., +        builder.field("_shard_id", shardId.id());, +        if (getSeqNo() >= 0) {, +            builder.field("_seq_no", getSeqNo());, +        }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(, +                        new ShardStats(, +                            indexShard.routingEntry(),, +                            indexShard.shardPath(),, +                            new CommonStats(indicesService.getIndicesQueryCache(), indexShard, SHARD_STATS_FLAGS),, +                            indexShard.commitStats(),, +                            indexShard.seqNoStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/IndexShardStats.java, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<? super Response> listener;, +    public ActionListenerResponseHandler(ActionListener<? super Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteResponse;, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    private long seqNo;, +    public DocWriteResponse(ShardId shardId, String type, String id, long seqNo, long version, Result result) {]