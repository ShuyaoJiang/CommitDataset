[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +import org.elasticsearch.cluster.ClusterService;, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.cluster.routing.GroupShardsIterator;, +    private final ClusterService clusterService;, +, +    private final boolean optimizeSingleShard;, +, +    @Inject public TransportSearchAction(Settings settings, TransportService transportService, ClusterService clusterService,, +        this.clusterService = clusterService;, +        this.optimizeSingleShard = componentSettings.getAsBoolean("optimize_single_shard", true);, +, +        // optimize search type for cases where there is only one shard group to search on, +        if (optimizeSingleShard) {, +            try {, +                ClusterState clusterState = clusterService.state();, +                searchRequest.indices(clusterState.metaData().concreteIndices(searchRequest.indices()));, +                GroupShardsIterator groupIt = clusterService.operationRouting().searchShards(clusterState, searchRequest.indices(), searchRequest.queryHint(), searchRequest.routing());, +                if (groupIt.size() == 1) {, +                    // if we only have one group, then we always want Q_A_F, no need for DFS, and no need to do THEN since we hit one shard, +                    searchRequest.searchType(QUERY_AND_FETCH);, +                }, +            } catch (Exception e) {, +                logger.debug("failed to optimize search type, continue as normal", e);, +            }, +        }, +]