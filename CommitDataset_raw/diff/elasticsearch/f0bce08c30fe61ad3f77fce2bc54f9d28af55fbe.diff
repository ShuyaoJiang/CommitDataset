[+++ b/docs/reference/query-dsl/queries/query-string-syntax.asciidoc, +, +===== Empty Query, +, +If the query string is empty or only contains whitespaces the, +query string is interpreted as a `no_docs_query` and will yield, +an empty result set. , +++ b/docs/reference/query-dsl/queries/query-string-syntax.asciidoc, +, +===== Empty Query, +, +If the query string is empty or only contains whitespaces the, +query string is interpreted as a `no_docs_query` and will yield, +an empty result set. , +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import org.elasticsearch.common.lucene.search.MatchNoDocsQuery;, +, +    public Query parse(String query) throws ParseException {, +        if (query.trim().isEmpty()) {, +            // if the query string is empty we return no docs / empty result, +            // the behavior is simple to change in the client if all docs is required, +            // or a default query, +            return new MatchNoDocsQuery();, +        }, +        return super.parse(query);, +    }, +++ b/docs/reference/query-dsl/queries/query-string-syntax.asciidoc, +, +===== Empty Query, +, +If the query string is empty or only contains whitespaces the, +query string is interpreted as a `no_docs_query` and will yield, +an empty result set. , +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import org.elasticsearch.common.lucene.search.MatchNoDocsQuery;, +, +    public Query parse(String query) throws ParseException {, +        if (query.trim().isEmpty()) {, +            // if the query string is empty we return no docs / empty result, +            // the behavior is simple to change in the client if all docs is required, +            // or a default query, +            return new MatchNoDocsQuery();, +        }, +        return super.parse(query);, +    }, +++ b/src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java, +    @Test // see #3952, +    public void testEmptyQueryString() throws ExecutionException, InterruptedException, IOException {, +        createIndex("test");, +        indexRandom(true, client().prepareIndex("test", "type1", "1").setSource("field1", "the quick brown fox jumps"),, +                client().prepareIndex("test", "type1", "2").setSource("field1", "quick brown"),, +                client().prepareIndex("test", "type1", "3").setSource("field1", "quick"));, +        assertHitCount(client().prepareSearch().setQuery(queryString("quick")).get(), 3l);, +        assertHitCount(client().prepareSearch().setQuery(queryString("")).get(), 0l); // return no docs, +    }]