[+++ b/src/main/java/org/elasticsearch/index/query/functionscore/fieldvaluefactor/FieldValueFactorFunctionParser.java, +            } else if("factor".equals(currentFieldName) && (token == XContentParser.Token.START_ARRAY || token == XContentParser.Token.START_OBJECT)) {, +                throw new QueryParsingException(parseContext.index(), "[" + NAMES[0] + "] field 'factor' does not support lists or objects");, +++ b/src/main/java/org/elasticsearch/index/query/functionscore/fieldvaluefactor/FieldValueFactorFunctionParser.java, +            } else if("factor".equals(currentFieldName) && (token == XContentParser.Token.START_ARRAY || token == XContentParser.Token.START_OBJECT)) {, +                throw new QueryParsingException(parseContext.index(), "[" + NAMES[0] + "] field 'factor' does not support lists or objects");, +++ b/src/test/java/org/elasticsearch/search/functionscore/FunctionScoreFieldValueTests.java, +, +        // don't permit an array of factors, +        try {, +          String querySource = "{" +, +            "\"query\": {" +, +            "  \"function_score\": {" +, +            "    \"query\": {" +, +            "      \"match\": {\"name\": \"foo\"}" +, +            "      }," +, +            "      \"functions\": [" +, +            "        {" +, +            "          \"field_value_factor\": {" +, +            "            \"field\": \"test\"," +, +            "            \"factor\": [1.2,2]" +, +            "          }" +, +            "        }" +, +            "      ]" +, +            "    }" +, +            "  }" +, +            "}";, +          response = client().prepareSearch("test"), +          .setSource(querySource), +          .get();, +          assertFailures(response);, +        } catch (SearchPhaseExecutionException e) {, +          // This is fine, the query will throw an exception if executed, +          // locally, instead of just having failures, +        }, +]