[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                final compilerJavaHomeFile = new File(project.compilerJavaHome), +                // we only fork if the Gradle JDK is not the same as the compiler JDK, +                if (compilerJavaHomeFile.canonicalPath == Jvm.current().javaHome.canonicalPath) {, +                    options.fork = false, +                } else {, +                    options.forkOptions.javaHome = compilerJavaHomeFile, +                    options.compilerArgs << '--release' << JavaVersion.toVersion(it.targetCompatibility).majorVersion, +                }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                final compilerJavaHomeFile = new File(project.compilerJavaHome), +                // we only fork if the Gradle JDK is not the same as the compiler JDK, +                if (compilerJavaHomeFile.canonicalPath == Jvm.current().javaHome.canonicalPath) {, +                    options.fork = false, +                } else {, +                    options.forkOptions.javaHome = compilerJavaHomeFile, +                    options.compilerArgs << '--release' << JavaVersion.toVersion(it.targetCompatibility).majorVersion, +                }, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                final compilerJavaHomeFile = new File(project.compilerJavaHome), +                // we only fork if the Gradle JDK is not the same as the compiler JDK, +                if (compilerJavaHomeFile.canonicalPath == Jvm.current().javaHome.canonicalPath) {, +                    options.fork = false, +                } else {, +                    options.forkOptions.javaHome = compilerJavaHomeFile, +                    options.compilerArgs << '--release' << JavaVersion.toVersion(it.targetCompatibility).majorVersion, +                }, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                final compilerJavaHomeFile = new File(project.compilerJavaHome), +                // we only fork if the Gradle JDK is not the same as the compiler JDK, +                if (compilerJavaHomeFile.canonicalPath == Jvm.current().javaHome.canonicalPath) {, +                    options.fork = false, +                } else {, +                    options.forkOptions.javaHome = compilerJavaHomeFile, +                    options.compilerArgs << '--release' << JavaVersion.toVersion(it.targetCompatibility).majorVersion, +                }, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                final compilerJavaHomeFile = new File(project.compilerJavaHome), +                // we only fork if the Gradle JDK is not the same as the compiler JDK, +                if (compilerJavaHomeFile.canonicalPath == Jvm.current().javaHome.canonicalPath) {, +                    options.fork = false, +                } else {, +                    options.forkOptions.javaHome = compilerJavaHomeFile, +                    options.compilerArgs << '--release' << JavaVersion.toVersion(it.targetCompatibility).majorVersion, +                }, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                final compilerJavaHomeFile = new File(project.compilerJavaHome), +                // we only fork if the Gradle JDK is not the same as the compiler JDK, +                if (compilerJavaHomeFile.canonicalPath == Jvm.current().javaHome.canonicalPath) {, +                    options.fork = false, +                } else {, +                    options.forkOptions.javaHome = compilerJavaHomeFile, +                    options.compilerArgs << '--release' << JavaVersion.toVersion(it.targetCompatibility).majorVersion, +                }, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/x-pack/docs/en/rest-api/info.asciidoc, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                final compilerJavaHomeFile = new File(project.compilerJavaHome), +                // we only fork if the Gradle JDK is not the same as the compiler JDK, +                if (compilerJavaHomeFile.canonicalPath == Jvm.current().javaHome.canonicalPath) {, +                    options.fork = false, +                } else {, +                    options.forkOptions.javaHome = compilerJavaHomeFile, +                    options.compilerArgs << '--release' << JavaVersion.toVersion(it.targetCompatibility).majorVersion, +                }, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/x-pack/docs/en/rest-api/info.asciidoc, +++ b/x-pack/plugin/build.gradle, +             'ml', 'monitoring', 'security', 'upgrade', 'watcher', 'sql', 'rollup'], +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                final compilerJavaHomeFile = new File(project.compilerJavaHome), +                // we only fork if the Gradle JDK is not the same as the compiler JDK, +                if (compilerJavaHomeFile.canonicalPath == Jvm.current().javaHome.canonicalPath) {, +                    options.fork = false, +                } else {, +                    options.forkOptions.javaHome = compilerJavaHomeFile, +                    options.compilerArgs << '--release' << JavaVersion.toVersion(it.targetCompatibility).majorVersion, +                }, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/x-pack/docs/en/rest-api/info.asciidoc, +++ b/x-pack/plugin/build.gradle]