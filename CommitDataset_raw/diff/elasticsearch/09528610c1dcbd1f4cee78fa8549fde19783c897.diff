[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/engine/Engine.java, +            return (UidField) doc.rootDoc().getFieldable(UidFieldMapper.NAME);, +            return (UidField) doc.rootDoc().getFieldable(UidFieldMapper.NAME);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/engine/Engine.java, +            return (UidField) doc.rootDoc().getFieldable(UidFieldMapper.NAME);, +            return (UidField) doc.rootDoc().getFieldable(UidFieldMapper.NAME);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/ParsedDocument.java, +    public Document rootDoc() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/engine/Engine.java, +            return (UidField) doc.rootDoc().getFieldable(UidFieldMapper.NAME);, +            return (UidField) doc.rootDoc().getFieldable(UidFieldMapper.NAME);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/ParsedDocument.java, +    public Document rootDoc() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/percolator/PercolatorExecutor.java, +        for (Fieldable field : request.doc().rootDoc().getFields()) {, +                        memoryIndex.addField(field.name(), request.doc().analyzer().reusableTokenStream(field.name(), reader), field.getBoost() * request.doc().rootDoc().getBoost());, +                            memoryIndex.addField(field.name(), request.doc().analyzer().reusableTokenStream(field.name(), new FastStringReader(value)), field.getBoost() * request.doc().rootDoc().getBoost());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/engine/Engine.java, +            return (UidField) doc.rootDoc().getFieldable(UidFieldMapper.NAME);, +            return (UidField) doc.rootDoc().getFieldable(UidFieldMapper.NAME);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/ParsedDocument.java, +    public Document rootDoc() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/percolator/PercolatorExecutor.java, +        for (Fieldable field : request.doc().rootDoc().getFields()) {, +                        memoryIndex.addField(field.name(), request.doc().analyzer().reusableTokenStream(field.name(), reader), field.getBoost() * request.doc().rootDoc().getBoost());, +                            memoryIndex.addField(field.name(), request.doc().analyzer().reusableTokenStream(field.name(), new FastStringReader(value)), field.getBoost() * request.doc().rootDoc().getBoost());, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/common/lucene/all/SimpleAllTests.java, +import org.apache.lucene.index.IndexWriterConfig;, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));, +        IndexReader reader = IndexReader.open(indexWriter, true);, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));, +        IndexReader reader = IndexReader.open(indexWriter, true);, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));, +        IndexReader reader = IndexReader.open(indexWriter, true);, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));, +        IndexReader reader = IndexReader.open(indexWriter, true);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/engine/Engine.java, +            return (UidField) doc.rootDoc().getFieldable(UidFieldMapper.NAME);, +            return (UidField) doc.rootDoc().getFieldable(UidFieldMapper.NAME);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/ParsedDocument.java, +    public Document rootDoc() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/percolator/PercolatorExecutor.java, +        for (Fieldable field : request.doc().rootDoc().getFields()) {, +                        memoryIndex.addField(field.name(), request.doc().analyzer().reusableTokenStream(field.name(), reader), field.getBoost() * request.doc().rootDoc().getBoost());, +                            memoryIndex.addField(field.name(), request.doc().analyzer().reusableTokenStream(field.name(), new FastStringReader(value)), field.getBoost() * request.doc().rootDoc().getBoost());, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/common/lucene/all/SimpleAllTests.java, +import org.apache.lucene.index.IndexWriterConfig;, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));, +        IndexReader reader = IndexReader.open(indexWriter, true);, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));, +        IndexReader reader = IndexReader.open(indexWriter, true);, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));, +        IndexReader reader = IndexReader.open(indexWriter, true);, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));, +        IndexReader reader = IndexReader.open(indexWriter, true);, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/common/lucene/search/MatchAllDocsFilterTests.java, +import org.apache.lucene.index.IndexWriterConfig;, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));, +        IndexReader reader = IndexReader.open(indexWriter, true);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/engine/Engine.java, +            return (UidField) doc.rootDoc().getFieldable(UidFieldMapper.NAME);, +            return (UidField) doc.rootDoc().getFieldable(UidFieldMapper.NAME);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/ParsedDocument.java, +    public Document rootDoc() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/percolator/PercolatorExecutor.java, +        for (Fieldable field : request.doc().rootDoc().getFields()) {, +                        memoryIndex.addField(field.name(), request.doc().analyzer().reusableTokenStream(field.name(), reader), field.getBoost() * request.doc().rootDoc().getBoost());, +                            memoryIndex.addField(field.name(), request.doc().analyzer().reusableTokenStream(field.name(), new FastStringReader(value)), field.getBoost() * request.doc().rootDoc().getBoost());, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/common/lucene/all/SimpleAllTests.java, +import org.apache.lucene.index.IndexWriterConfig;, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));, +        IndexReader reader = IndexReader.open(indexWriter, true);, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));, +        IndexReader reader = IndexReader.open(indexWriter, true);, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));, +        IndexReader reader = IndexReader.open(indexWriter, true);, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));, +        IndexReader reader = IndexReader.open(indexWriter, true);, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/common/lucene/search/MatchAllDocsFilterTests.java, +import org.apache.lucene.index.IndexWriterConfig;, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));, +        IndexReader reader = IndexReader.open(indexWriter, true);, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/common/lucene/search/MoreLikeThisQueryTests.java, +        IndexReader reader = IndexReader.open(indexWriter, true);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/engine/Engine.java, +            return (UidField) doc.rootDoc().getFieldable(UidFieldMapper.NAME);, +            return (UidField) doc.rootDoc().getFieldable(UidFieldMapper.NAME);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/ParsedDocument.java, +    public Document rootDoc() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/percolator/PercolatorExecutor.java, +        for (Fieldable field : request.doc().rootDoc().getFields()) {, +                        memoryIndex.addField(field.name(), request.doc().analyzer().reusableTokenStream(field.name(), reader), field.getBoost() * request.doc().rootDoc().getBoost());, +                            memoryIndex.addField(field.name(), request.doc().analyzer().reusableTokenStream(field.name(), new FastStringReader(value)), field.getBoost() * request.doc().rootDoc().getBoost());, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/common/lucene/all/SimpleAllTests.java, +import org.apache.lucene.index.IndexWriterConfig;, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));, +        IndexReader reader = IndexReader.open(indexWriter, true);, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));, +        IndexReader reader = IndexReader.open(indexWriter, true);, +        IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.VERSION, Lucene.STANDARD_ANALYZER));]