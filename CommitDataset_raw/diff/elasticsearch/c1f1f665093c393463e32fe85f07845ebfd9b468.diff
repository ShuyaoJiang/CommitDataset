[+++ b/core/src/main/java/org/elasticsearch/script/LeafSearchScript.java, +import org.apache.lucene.search.Scorer;, + *, + * This is effectively a functional interface, requiring at least implementing {@link #runAsDouble()}., +    /**, +     * Set the document this script will process next., +     */, +    default void setDocument(int doc) {}, +    @Override, +    default void setScorer(Scorer scorer) {}, +, +    /**, +     * Set the source for the current document., +     */, +    default void setSource(Map<String, Object> source) {}, +    @Override, +    default void setNextVar(String field, Object value) {}, +    /**, +     * Return the result as a long. This is used by aggregation scripts over long fields., +     */, +    default long runAsLong() {, +        throw new UnsupportedOperationException("runAsLong is not implemented");, +    }, +, +    @Override, +    default Object run() {, +        return runAsDouble();, +    }, +, +    /**, +     * Return the result as a double. This is the main use case of search script, used for document scoring., +     */, +++ b/core/src/main/java/org/elasticsearch/script/LeafSearchScript.java, +import org.apache.lucene.search.Scorer;, + *, + * This is effectively a functional interface, requiring at least implementing {@link #runAsDouble()}., +    /**, +     * Set the document this script will process next., +     */, +    default void setDocument(int doc) {}, +    @Override, +    default void setScorer(Scorer scorer) {}, +, +    /**, +     * Set the source for the current document., +     */, +    default void setSource(Map<String, Object> source) {}, +    @Override, +    default void setNextVar(String field, Object value) {}, +    /**, +     * Return the result as a long. This is used by aggregation scripts over long fields., +     */, +    default long runAsLong() {, +        throw new UnsupportedOperationException("runAsLong is not implemented");, +    }, +, +    @Override, +    default Object run() {, +        return runAsDouble();, +    }, +, +    /**, +     * Return the result as a double. This is the main use case of search script, used for document scoring., +     */, +++ b/core/src/main/java/org/elasticsearch/script/ScriptEngine.java, +    default String getExtension() {, +        return getType();, +    }, +++ b/core/src/main/java/org/elasticsearch/script/LeafSearchScript.java, +import org.apache.lucene.search.Scorer;, + *, + * This is effectively a functional interface, requiring at least implementing {@link #runAsDouble()}., +    /**, +     * Set the document this script will process next., +     */, +    default void setDocument(int doc) {}, +    @Override, +    default void setScorer(Scorer scorer) {}, +, +    /**, +     * Set the source for the current document., +     */, +    default void setSource(Map<String, Object> source) {}, +    @Override, +    default void setNextVar(String field, Object value) {}, +    /**, +     * Return the result as a long. This is used by aggregation scripts over long fields., +     */, +    default long runAsLong() {, +        throw new UnsupportedOperationException("runAsLong is not implemented");, +    }, +, +    @Override, +    default Object run() {, +        return runAsDouble();, +    }, +, +    /**, +     * Return the result as a double. This is the main use case of search script, used for document scoring., +     */]