[+++ b/docs/reference/cluster/health.asciidoc, +following will wait till the cluster reaches the `yellow` level for 50, +seconds (if it reaches the `green` or `yellow` status beforehand, it, +will return):, +++ b/docs/reference/cluster/health.asciidoc, +following will wait till the cluster reaches the `yellow` level for 50, +seconds (if it reaches the `green` or `yellow` status beforehand, it, +will return):, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.search.facet.FacetBuilder;, +    /**, +     * Similar as {@link #setScore(boolean)}, but also sort by the score., +     */, +    /**, +     * Whether to compute a score for each match and include it in the response. The score is based on, +     * {@link #setPercolateQuery(QueryBuilder)}}., +     */, +    /**, +     * Sets a query to reduce the number of percolate queries to be evaluated and score the queries that match based, +     * on this query., +     */, +    public PercolateRequestBuilder setPercolateDoc(PercolateSourceBuilder.DocBuilder docBuilder) {, +        sourceBuilder().setDoc(docBuilder);, +        return this;, +    }, +, +    /**, +     * Sets a query to reduce the number of percolate queries to be evaluated and score the queries that match based, +     * on this query., +     */, +    public PercolateRequestBuilder setPercolateQuery(QueryBuilder queryBuilder) {, +        sourceBuilder().setQueryBuilder(queryBuilder);, +        return this;, +    }, +, +    /**, +     * Sets a filter to reduce the number of percolate queries to be evaluated., +     */, +    public PercolateRequestBuilder setPercolateFilter(FilterBuilder filterBuilder) {, +        sourceBuilder().setFilterBuilder(filterBuilder);, +        return this;, +    }, +, +    /**, +     * Enables highlighting for the percolate document. Per matched percolate query highlight the percolate document., +     */, +    public PercolateRequestBuilder setHighlightBuilder(HighlightBuilder highlightBuilder) {, +        sourceBuilder().setHighlightBuilder(highlightBuilder);, +        return this;, +    }, +, +    /**, +     * Add a facet definition., +     */, +    public PercolateRequestBuilder addFacet(FacetBuilder facetBuilder) {, +        sourceBuilder().addFacet(facetBuilder);, +        return this;, +    }, +, +    /**, +     * Sets the raw percolate request body., +     */, +++ b/docs/reference/cluster/health.asciidoc, +following will wait till the cluster reaches the `yellow` level for 50, +seconds (if it reaches the `green` or `yellow` status beforehand, it, +will return):, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.search.facet.FacetBuilder;, +    /**, +     * Similar as {@link #setScore(boolean)}, but also sort by the score., +     */, +    /**, +     * Whether to compute a score for each match and include it in the response. The score is based on, +     * {@link #setPercolateQuery(QueryBuilder)}}., +     */, +    /**, +     * Sets a query to reduce the number of percolate queries to be evaluated and score the queries that match based, +     * on this query., +     */, +    public PercolateRequestBuilder setPercolateDoc(PercolateSourceBuilder.DocBuilder docBuilder) {, +        sourceBuilder().setDoc(docBuilder);, +        return this;, +    }, +, +    /**, +     * Sets a query to reduce the number of percolate queries to be evaluated and score the queries that match based, +     * on this query., +     */, +    public PercolateRequestBuilder setPercolateQuery(QueryBuilder queryBuilder) {, +        sourceBuilder().setQueryBuilder(queryBuilder);, +        return this;, +    }, +, +    /**, +     * Sets a filter to reduce the number of percolate queries to be evaluated., +     */, +    public PercolateRequestBuilder setPercolateFilter(FilterBuilder filterBuilder) {, +        sourceBuilder().setFilterBuilder(filterBuilder);, +        return this;, +    }]