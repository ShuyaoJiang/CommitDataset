[+++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/support/CachingUsernamePasswordRealm.java, +        assert cache != null;, +        return cache == null ? -1 : cache.count();, +        assert cache != null;, +++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/support/CachingUsernamePasswordRealm.java, +        assert cache != null;, +        return cache == null ? -1 : cache.count();, +        assert cache != null;, +++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/support/CachingUsernamePasswordRealmTests.java, +    public void testCacheSizeWhenCacheDisabled() {, +        final RealmConfig.RealmIdentifier identifier = new RealmConfig.RealmIdentifier("caching", "test_realm");, +        final Settings settings = Settings.builder(), +                .put(globalSettings), +                .put(RealmSettings.getFullSettingKey(identifier, CachingUsernamePasswordRealmSettings.CACHE_TTL_SETTING), -1), +                .build();, +, +        final RealmConfig config =, +                new RealmConfig(identifier, settings, TestEnvironment.newEnvironment(globalSettings), new ThreadContext(Settings.EMPTY));, +        final CachingUsernamePasswordRealm realm = new CachingUsernamePasswordRealm(config, threadPool) {, +            @Override, +            protected void doAuthenticate(UsernamePasswordToken token, ActionListener<AuthenticationResult> listener) {, +                listener.onResponse(AuthenticationResult.success(new User("username", new String[]{"r1", "r2", "r3"})));, +            }, +, +            @Override, +            protected void doLookupUser(String username, ActionListener<User> listener) {, +                listener.onFailure(new UnsupportedOperationException("this method should not be called"));, +            }, +        };, +        assertThat(realm.getCacheSize(), equalTo(-1));, +    }, +, +        assertThat(realm.getCacheSize(), equalTo(1));, +        assertThat(realm.getCacheSize(), equalTo(2));, +        assertThat(realm.getCacheSize(), equalTo(3));, +        assertThat(realm.getCacheSize(), equalTo(3));, +        assertThat(realm.getCacheSize(), equalTo(3));, +        assertThat(realm.getCacheSize(), equalTo(3));]