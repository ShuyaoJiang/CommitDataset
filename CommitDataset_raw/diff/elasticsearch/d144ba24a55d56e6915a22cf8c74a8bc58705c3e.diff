[+++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentFieldType.name(), queryText, quoted);, +                    query = getPossiblyAnalyzedPrefixQuery(currentFieldType.name(), termStr);, +                indexedNameField = currentFieldType.name();, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentFieldType.name(), queryText, quoted);, +                    query = getPossiblyAnalyzedPrefixQuery(currentFieldType.name(), termStr);, +                indexedNameField = currentFieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                MappedFieldType fieldType = indexService.mapperService().fullName(request.field());, +                    field = fieldType.name();, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentFieldType.name(), queryText, quoted);, +                    query = getPossiblyAnalyzedPrefixQuery(currentFieldType.name(), termStr);, +                indexedNameField = currentFieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                MappedFieldType fieldType = indexService.mapperService().fullName(request.field());, +                    field = fieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.fieldType().name(), builder.bytes()));, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentFieldType.name(), queryText, quoted);, +                    query = getPossiblyAnalyzedPrefixQuery(currentFieldType.name(), termStr);, +                indexedNameField = currentFieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                MappedFieldType fieldType = indexService.mapperService().fullName(request.field());, +                    field = fieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.fieldType().name(), builder.bytes()));, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        if (indexShard.getTranslogDurability() == Translog.Durability.REQUEST && location != null) {, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentFieldType.name(), queryText, quoted);, +                    query = getPossiblyAnalyzedPrefixQuery(currentFieldType.name(), termStr);, +                indexedNameField = currentFieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                MappedFieldType fieldType = indexService.mapperService().fullName(request.field());, +                    field = fieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.fieldType().name(), builder.bytes()));, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        if (indexShard.getTranslogDurability() == Translog.Durability.REQUEST && location != null) {, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.index.IndexSettings;, +        registerIndexDynamicSetting(IndexSettings.INDEX_TRANSLOG_DURABILITY, Validator.EMPTY);, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentFieldType.name(), queryText, quoted);, +                    query = getPossiblyAnalyzedPrefixQuery(currentFieldType.name(), termStr);, +                indexedNameField = currentFieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                MappedFieldType fieldType = indexService.mapperService().fullName(request.field());, +                    field = fieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.fieldType().name(), builder.bytes()));, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        if (indexShard.getTranslogDurability() == Translog.Durability.REQUEST && location != null) {, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.index.IndexSettings;, +        registerIndexDynamicSetting(IndexSettings.INDEX_TRANSLOG_DURABILITY, Validator.EMPTY);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                        // first, simulate: just call merge and ignore the result, +                        existingMapper.merge(newMapper.mapping(), request.updateAllTypes());, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentFieldType.name(), queryText, quoted);, +                    query = getPossiblyAnalyzedPrefixQuery(currentFieldType.name(), termStr);, +                indexedNameField = currentFieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                MappedFieldType fieldType = indexService.mapperService().fullName(request.field());, +                    field = fieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.fieldType().name(), builder.bytes()));, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        if (indexShard.getTranslogDurability() == Translog.Durability.REQUEST && location != null) {, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.index.IndexSettings;]