[+++ b/plugin/src/main/java/org/elasticsearch/xpack/security/authc/ldap/SearchGroupsResolver.java, +        if (isNullOrEmpty(userAttribute) || userAttribute.equals("dn")) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/authc/ldap/SearchGroupsResolver.java, +        if (isNullOrEmpty(userAttribute) || userAttribute.equals("dn")) {, +++ b/plugin/src/test/java/org/elasticsearch/xpack/security/authc/ldap/SearchGroupsResolverInMemoryTests.java, +import static org.hamcrest.Matchers.containsString;, +import static org.hamcrest.Matchers.iterableWithSize;, +    private static final String WILLIAM_BUSH = "cn=William Bush,ou=people,o=sevenSeas";, +        resolver.resolve(connection, WILLIAM_BUSH, TimeValue.timeValueSeconds(30), logger, null, future);, +    /**, +     * Tests searching for groups when the "user_attribute" field is not set, +     */, +    public void testResolveWithDefaultUserAttribute() throws Exception {, +        connect(new LDAPConnectionOptions());, +, +        Settings settings = Settings.builder(), +                .put("group_search.base_dn", "ou=groups,o=sevenSeas"), +                .put("group_search.scope", LdapSearchScope.SUB_TREE), +                .build();, +, +        final List<String> groups = resolveGroups(settings, WILLIAM_BUSH);, +        assertThat(groups, iterableWithSize(1));, +        assertThat(groups.get(0), containsString("HMS Lydia"));, +    }, +, +    /**, +     * Tests searching for groups when the "user_attribute" field is set to "dn" (which is special), +     */, +    public void testResolveWithExplicitDnAttribute() throws Exception {, +        connect(new LDAPConnectionOptions());, +, +        Settings settings = Settings.builder(), +                .put("group_search.base_dn", "ou=groups,o=sevenSeas"), +                .put("group_search.user_attribute", "dn"), +                .build();, +, +        final List<String> groups = resolveGroups(settings, WILLIAM_BUSH);, +        assertThat(groups, iterableWithSize(1));, +        assertThat(groups.get(0), containsString("HMS Lydia"));, +    }, +, +    /**, +     * Tests searching for groups when the "user_attribute" field is set to a missing value, +     */, +    public void testResolveWithMissingAttribute() throws Exception {, +        connect(new LDAPConnectionOptions());, +, +        Settings settings = Settings.builder(), +                .put("group_search.base_dn", "ou=groups,o=sevenSeas"), +                .put("group_search.user_attribute", "no-such-attribute"), +                .build();, +, +        final List<String> groups = resolveGroups(settings, WILLIAM_BUSH);, +        assertThat(groups, iterableWithSize(0));, +    }, +, +    private List<String> resolveGroups(Settings settings, String userDn) {, +        final SearchGroupsResolver resolver = new SearchGroupsResolver(settings);, +        final PlainActionFuture<List<String>> future = new PlainActionFuture<>();, +        resolver.resolve(connection, userDn, TimeValue.timeValueSeconds(30), logger, null, future);, +        return future.actionGet();, +    }, +]