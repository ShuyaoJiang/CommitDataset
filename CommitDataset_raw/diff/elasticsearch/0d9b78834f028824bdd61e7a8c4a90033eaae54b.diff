[+++ b/client/rest/src/main/java/org/elasticsearch/client/DeadHostState.java, +    static final long MAX_CONNECTION_TIMEOUT_NANOS = TimeUnit.MINUTES.toNanos(30);, +    DeadHostState(DeadHostState previousDeadHostState) {, +        this.deadUntilNanos = previousDeadHostState.timeSupplier.nanoTime() + timeoutNanos;, +        this.timeSupplier = previousDeadHostState.timeSupplier;, +        if (timeSupplier != other.timeSupplier) {, +            throw new IllegalArgumentException("can't compare DeadHostStates with different clocks [", +                    + timeSupplier + " != " + other.timeSupplier + "]");, +        }, +                ", timeSupplier=" + timeSupplier +, +, +            @Override, +            public String toString() {, +                return "nanoTime";, +            }, +++ b/client/rest/src/main/java/org/elasticsearch/client/DeadHostState.java, +    static final long MAX_CONNECTION_TIMEOUT_NANOS = TimeUnit.MINUTES.toNanos(30);, +    DeadHostState(DeadHostState previousDeadHostState) {, +        this.deadUntilNanos = previousDeadHostState.timeSupplier.nanoTime() + timeoutNanos;, +        this.timeSupplier = previousDeadHostState.timeSupplier;, +        if (timeSupplier != other.timeSupplier) {, +            throw new IllegalArgumentException("can't compare DeadHostStates with different clocks [", +                    + timeSupplier + " != " + other.timeSupplier + "]");, +        }, +                ", timeSupplier=" + timeSupplier +, +, +            @Override, +            public String toString() {, +                return "nanoTime";, +            }, +++ b/client/rest/src/main/java/org/elasticsearch/client/Node.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.client;, +, +import java.util.Objects;, +import java.util.Set;, +, +import org.apache.http.HttpHost;, +, +/**, + * Metadata about an {@link HttpHost} running Elasticsearch., + */, +public class Node {, +    /**, +     * Address that this host claims is its primary contact point., +     */, +    private final HttpHost host;, +    /**, +     * Addresses on which the host is listening. These are useful to have, +     * around because they allow you to find a host based on any address it, +     * is listening on., +     */, +    private final Set<HttpHost> boundHosts;, +    /**, +     * Name of the node as configured by the {@code node.name} attribute., +     */, +    private final String name;, +    /**, +     * Version of Elasticsearch that the node is running or {@code null}, +     * if we don't know the version., +     */, +    private final String version;, +    /**, +     * Roles that the Elasticsearch process on the host has or {@code null}, +     * if we don't know what roles the node has., +     */, +    private final Roles roles;, +, +    /**, +     * Create a {@linkplain Node} with metadata. All parameters except, +     * {@code host} are nullable and implementations of {@link NodeSelector}, +     * need to decide what to do in their absence., +     */, +    public Node(HttpHost host, Set<HttpHost> boundHosts, String name, String version, Roles roles) {, +        if (host == null) {, +            throw new IllegalArgumentException("host cannot be null");, +        }, +        this.host = host;, +        this.boundHosts = boundHosts;, +        this.name = name;, +        this.version = version;, +        this.roles = roles;]