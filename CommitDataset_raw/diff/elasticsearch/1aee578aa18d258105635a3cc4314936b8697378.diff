[+++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                // we use index result to communicate failure while translating update request, +                updateOperationResult = new Engine.IndexResult(failure, updateRequest.version(), 0, 0);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                // we use index result to communicate failure while translating update request, +                updateOperationResult = new Engine.IndexResult(failure, updateRequest.version(), 0, 0);, +++ b/core/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +    public void postIndex(Engine.Index indexOperation, Engine.IndexResult result) {, +        final ParsedDocument doc = indexOperation.parsedDoc();, +        final long tookInNanos = result.getTook();, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                // we use index result to communicate failure while translating update request, +                updateOperationResult = new Engine.IndexResult(failure, updateRequest.version(), 0, 0);, +++ b/core/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +    public void postIndex(Engine.Index indexOperation, Engine.IndexResult result) {, +        final ParsedDocument doc = indexOperation.parsedDoc();, +        final long tookInNanos = result.getTook();, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +            result = new IndexResult(transientOperationFailure, index.version(),, +                    index.startTime() - System.nanoTime(), index.estimatedSizeInBytes());, +                return new IndexResult(null, expectedVersion, false, index.startTime() - System.nanoTime(), index.estimatedSizeInBytes());, +                return new IndexResult(location, updatedVersion, deleted, index.startTime() - System.nanoTime(), index.estimatedSizeInBytes());, +            result = new DeleteResult(transientOperationFailure, delete.version(),, +                    delete.startTime() - System.nanoTime(), delete.estimatedSizeInBytes());, +                return new DeleteResult(null, expectedVersion, true,, +                        delete.startTime() - System.nanoTime(), delete.estimatedSizeInBytes());, +                return new DeleteResult(location, updatedVersion, found,, +                        delete.startTime() - System.nanoTime(), delete.estimatedSizeInBytes());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                // we use index result to communicate failure while translating update request, +                updateOperationResult = new Engine.IndexResult(failure, updateRequest.version(), 0, 0);, +++ b/core/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +    public void postIndex(Engine.Index indexOperation, Engine.IndexResult result) {, +        final ParsedDocument doc = indexOperation.parsedDoc();, +        final long tookInNanos = result.getTook();, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +            result = new IndexResult(transientOperationFailure, index.version(),, +                    index.startTime() - System.nanoTime(), index.estimatedSizeInBytes());, +                return new IndexResult(null, expectedVersion, false, index.startTime() - System.nanoTime(), index.estimatedSizeInBytes());, +                return new IndexResult(location, updatedVersion, deleted, index.startTime() - System.nanoTime(), index.estimatedSizeInBytes());, +            result = new DeleteResult(transientOperationFailure, delete.version(),, +                    delete.startTime() - System.nanoTime(), delete.estimatedSizeInBytes());, +                return new DeleteResult(null, expectedVersion, true,, +                        delete.startTime() - System.nanoTime(), delete.estimatedSizeInBytes());, +                return new DeleteResult(location, updatedVersion, found,, +                        delete.startTime() - System.nanoTime(), delete.estimatedSizeInBytes());, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexingOperationListener.java, +    default void postIndex(Engine.Index index, Engine.IndexResult result) {}, +    default void postDelete(Engine.Delete delete, Engine.DeleteResult result) {}, +        public void postIndex(Engine.Index index, Engine.IndexResult result) {, +                    listener.postIndex(index, result);, +        public void postDelete(Engine.Delete delete, Engine.DeleteResult result) {, +                    listener.postDelete(delete, result);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                // we use index result to communicate failure while translating update request, +                updateOperationResult = new Engine.IndexResult(failure, updateRequest.version(), 0, 0);, +++ b/core/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +    public void postIndex(Engine.Index indexOperation, Engine.IndexResult result) {, +        final ParsedDocument doc = indexOperation.parsedDoc();, +        final long tookInNanos = result.getTook();, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +            result = new IndexResult(transientOperationFailure, index.version(),, +                    index.startTime() - System.nanoTime(), index.estimatedSizeInBytes());, +                return new IndexResult(null, expectedVersion, false, index.startTime() - System.nanoTime(), index.estimatedSizeInBytes());, +                return new IndexResult(location, updatedVersion, deleted, index.startTime() - System.nanoTime(), index.estimatedSizeInBytes());, +            result = new DeleteResult(transientOperationFailure, delete.version(),, +                    delete.startTime() - System.nanoTime(), delete.estimatedSizeInBytes());, +                return new DeleteResult(null, expectedVersion, true,, +                        delete.startTime() - System.nanoTime(), delete.estimatedSizeInBytes());, +                return new DeleteResult(location, updatedVersion, found,, +                        delete.startTime() - System.nanoTime(), delete.estimatedSizeInBytes());, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexingOperationListener.java, +    default void postIndex(Engine.Index index, Engine.IndexResult result) {}, +    default void postDelete(Engine.Delete delete, Engine.DeleteResult result) {}, +        public void postIndex(Engine.Index index, Engine.IndexResult result) {, +                    listener.postIndex(index, result);, +        public void postDelete(Engine.Delete delete, Engine.DeleteResult result) {, +                    listener.postDelete(delete, result);, +++ b/core/src/main/java/org/elasticsearch/index/shard/InternalIndexingStats.java, +    public void postIndex(Engine.Index index, Engine.IndexResult result) {, +            long took = result.getTook();, +    public void postDelete(Engine.Delete delete, Engine.DeleteResult result) {, +            long took = result.getTook();, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                // we use index result to communicate failure while translating update request, +                updateOperationResult = new Engine.IndexResult(failure, updateRequest.version(), 0, 0);, +++ b/core/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +    public void postIndex(Engine.Index indexOperation, Engine.IndexResult result) {, +        final ParsedDocument doc = indexOperation.parsedDoc();, +        final long tookInNanos = result.getTook();, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +            result = new IndexResult(transientOperationFailure, index.version(),, +                    index.startTime() - System.nanoTime(), index.estimatedSizeInBytes());, +                return new IndexResult(null, expectedVersion, false, index.startTime() - System.nanoTime(), index.estimatedSizeInBytes());, +                return new IndexResult(location, updatedVersion, deleted, index.startTime() - System.nanoTime(), index.estimatedSizeInBytes());, +            result = new DeleteResult(transientOperationFailure, delete.version(),, +                    delete.startTime() - System.nanoTime(), delete.estimatedSizeInBytes());, +                return new DeleteResult(null, expectedVersion, true,, +                        delete.startTime() - System.nanoTime(), delete.estimatedSizeInBytes());, +                return new DeleteResult(location, updatedVersion, found,]