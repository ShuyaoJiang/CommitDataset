[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/replication/TransportShardReplicationPingAction.java, +    @Override protected PrimaryResponse<ShardReplicationPingResponse> shardOperationOnPrimary(ClusterState clusterState, ShardOperationRequest shardRequest) {, +        return new PrimaryResponse<ShardReplicationPingResponse>(new ShardReplicationPingResponse(), null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/replication/TransportShardReplicationPingAction.java, +    @Override protected PrimaryResponse<ShardReplicationPingResponse> shardOperationOnPrimary(ClusterState clusterState, ShardOperationRequest shardRequest) {, +        return new PrimaryResponse<ShardReplicationPingResponse>(new ShardReplicationPingResponse(), null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +    public <T extends ActionResponse> T response() {, +        return (T) response;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/replication/TransportShardReplicationPingAction.java, +    @Override protected PrimaryResponse<ShardReplicationPingResponse> shardOperationOnPrimary(ClusterState clusterState, ShardOperationRequest shardRequest) {, +        return new PrimaryResponse<ShardReplicationPingResponse>(new ShardReplicationPingResponse(), null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +    public <T extends ActionResponse> T response() {, +        return (T) response;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +            String percolate = null;, +                    } else if ("percolate".equals(currentFieldName)) {, +                        percolate = parser.textOrNull();, +                                .source(data, from, nextMarker - from, contentUnsafe), +                                .percolate(percolate));, +                                .source(data, from, nextMarker - from, contentUnsafe), +                                .percolate(percolate));, +                            .source(data, from, nextMarker - from, contentUnsafe), +                            .percolate(percolate));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/replication/TransportShardReplicationPingAction.java, +    @Override protected PrimaryResponse<ShardReplicationPingResponse> shardOperationOnPrimary(ClusterState clusterState, ShardOperationRequest shardRequest) {, +        return new PrimaryResponse<ShardReplicationPingResponse>(new ShardReplicationPingResponse(), null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +    public <T extends ActionResponse> T response() {, +        return (T) response;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +            String percolate = null;, +                    } else if ("percolate".equals(currentFieldName)) {, +                        percolate = parser.textOrNull();, +                                .source(data, from, nextMarker - from, contentUnsafe), +                                .percolate(percolate));, +                                .source(data, from, nextMarker - from, contentUnsafe), +                                .percolate(percolate));, +                            .source(data, from, nextMarker - from, contentUnsafe), +                            .percolate(percolate));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.index.percolator.PercolatorExecutor;, +import org.elasticsearch.index.service.IndexService;, +    @Override protected PrimaryResponse<BulkShardResponse> shardOperationOnPrimary(ClusterState clusterState, ShardOperationRequest shardRequest) {, +        BulkShardResponse response = new BulkShardResponse(new ShardId(request.index(), request.shardId()), responses);, +        return new PrimaryResponse<BulkShardResponse>(response, ops);, +    }, +, +    @Override protected void postPrimaryOperation(BulkShardRequest request, PrimaryResponse<BulkShardResponse> response) {, +        IndexService indexService = indicesService.indexServiceSafe(request.index());, +        Engine.Operation[] ops = (Engine.Operation[]) response.payload();, +        for (int i = 0; i < ops.length; i++) {, +            BulkItemRequest itemRequest = request.items()[i];, +            BulkItemResponse itemResponse = response.response().responses()[i];, +            if (itemResponse.failed()) {, +                // failure, continue, +                continue;, +            }, +            if (itemRequest.request() instanceof IndexRequest) {, +                IndexRequest indexRequest = (IndexRequest) itemRequest.request();, +                if (!Strings.hasLength(indexRequest.percolate())) {, +                    continue;, +                }, +                ParsedDocument doc;, +                if (ops[i] instanceof Engine.Create) {, +                    doc = ((Engine.Create) ops[i]).parsedDoc();, +                } else {, +                    doc = ((Engine.Index) ops[i]).parsedDoc();, +                }, +                try {, +                    PercolatorExecutor.Response percolate = indexService.percolateService().percolate(new PercolatorExecutor.DocAndSourceQueryRequest(doc, indexRequest.percolate()));, +                    ((IndexResponse) itemResponse.response()).matches(percolate.matches());, +                } catch (Exception e) {, +                    logger.warn("failed to percolate [{}]", e, itemRequest.request());, +                }, +            }, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/replication/TransportShardReplicationPingAction.java, +    @Override protected PrimaryResponse<ShardReplicationPingResponse> shardOperationOnPrimary(ClusterState clusterState, ShardOperationRequest shardRequest) {, +        return new PrimaryResponse<ShardReplicationPingResponse>(new ShardReplicationPingResponse(), null);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +    public <T extends ActionResponse> T response() {, +        return (T) response;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +            String percolate = null;, +                    } else if ("percolate".equals(currentFieldName)) {, +                        percolate = parser.textOrNull();, +                                .source(data, from, nextMarker - from, contentUnsafe), +                                .percolate(percolate));, +                                .source(data, from, nextMarker - from, contentUnsafe), +                                .percolate(percolate));, +                            .source(data, from, nextMarker - from, contentUnsafe), +                            .percolate(percolate));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.index.percolator.PercolatorExecutor;, +import org.elasticsearch.index.service.IndexService;, +    @Override protected PrimaryResponse<BulkShardResponse> shardOperationOnPrimary(ClusterState clusterState, ShardOperationRequest shardRequest) {]