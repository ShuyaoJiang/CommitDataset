[+++ b/docs/reference/modules/cluster/allocation_filtering.asciidoc, +Cluster-wide shard allocation filtering works in the same way as index-level, +shard allocation filtering (see <<index-modules-allocation>> for details)., +, +The available _dynamic_ cluster settings are as follows, where `{attribute}`, +refers to an arbitrary node attribute.:, +, +`cluster.routing.allocation.include.{attribute}`::, +, +    Assign the index to a node whose `{attribute}` has at least one of the, +    comma-separated values., +, +`cluster.routing.allocation.require.{attribute}`::, +, +    Assign the index to a node whose `{attribute}` has _all_ of the, +    comma-separated values., +, +`cluster.routing.allocation.exclude.{attribute}`::, +, +    Assign the index to a node whose `{attribute}` has _none_ of the, +    comma-separated values., +, +These special attributes are also supported:, +, +[horizontal], +`_name`::   Match nodes by node name, +`_ip`::     Match nodes by IP address (the IP address associated with the hostname), +`_host`::   Match nodes by hostname, +, +All attribute values can be specified with wildcards, eg:, +++ b/docs/reference/modules/cluster/allocation_filtering.asciidoc, +Cluster-wide shard allocation filtering works in the same way as index-level, +shard allocation filtering (see <<index-modules-allocation>> for details)., +, +The available _dynamic_ cluster settings are as follows, where `{attribute}`, +refers to an arbitrary node attribute.:, +, +`cluster.routing.allocation.include.{attribute}`::, +, +    Assign the index to a node whose `{attribute}` has at least one of the, +    comma-separated values., +, +`cluster.routing.allocation.require.{attribute}`::, +, +    Assign the index to a node whose `{attribute}` has _all_ of the, +    comma-separated values., +, +`cluster.routing.allocation.exclude.{attribute}`::, +, +    Assign the index to a node whose `{attribute}` has _none_ of the, +    comma-separated values., +, +These special attributes are also supported:, +, +[horizontal], +`_name`::   Match nodes by node name, +`_ip`::     Match nodes by IP address (the IP address associated with the hostname), +`_host`::   Match nodes by hostname, +, +All attribute values can be specified with wildcards, eg:, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/restspec/ClientYamlSuiteRestApiParser.java, +                        String method = parser.text();, +                        if (restApi.getMethods().contains(method)) {, +                            throw new IllegalArgumentException("Found duplicate method [" + method + "]");, +                        }, +                        restApi.addMethod(method);, +                                String path = parser.text();, +                                if (restApi.getPaths().contains(path)) {, +                                    throw new IllegalArgumentException("Found duplicate path [" + path + "]");, +                                }, +                                restApi.addPath(path);, +                                String part = parser.currentName();, +                                if (restApi.getPathParts().contains(part)) {, +                                    throw new IllegalArgumentException("Found duplicate part [" + part + "]");, +                                }, +                                restApi.addPathPart(part);, +                                    throw new IllegalArgumentException("Expected parts field in rest api definition to contain an object");, +                                String param = parser.currentName();, +                                if (restApi.getParams().contains(param)) {, +                                    throw new IllegalArgumentException("Found duplicate param [" + param + "]");, +                                }, +                                    throw new IllegalArgumentException("Expected params field in rest api definition to contain an object");, +++ b/docs/reference/modules/cluster/allocation_filtering.asciidoc, +Cluster-wide shard allocation filtering works in the same way as index-level, +shard allocation filtering (see <<index-modules-allocation>> for details)., +, +The available _dynamic_ cluster settings are as follows, where `{attribute}`, +refers to an arbitrary node attribute.:, +, +`cluster.routing.allocation.include.{attribute}`::, +, +    Assign the index to a node whose `{attribute}` has at least one of the, +    comma-separated values., +, +`cluster.routing.allocation.require.{attribute}`::, +, +    Assign the index to a node whose `{attribute}` has _all_ of the, +    comma-separated values., +, +`cluster.routing.allocation.exclude.{attribute}`::]