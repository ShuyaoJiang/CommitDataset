[+++ b/TESTING.asciidoc, +`gradle -Pvagrant.boxes=all vagrantSmokeTest`. The first time you run this it will, +. Run the tests with `gradle packagingTest`. This will cause gradle to build, +You can run on all the VMs by running `gradle -Pvagrant.boxes=all packagingTest`., +You can run a particular VM with a command like, +`gradle -Pvagrant.boxes=oel-7 packagingTest`. See `gradle tasks` for a complete, +list of available vagrant boxes for testing. It's important to know that if you, +ctrl-c any of these `gradle` commands then the boxes will remain running and, +you'll have to terminate them with 'gradle stop'., +It's important to think of VMs like cattle. If they become lame you just shoot, +++ b/TESTING.asciidoc, +`gradle -Pvagrant.boxes=all vagrantSmokeTest`. The first time you run this it will, +. Run the tests with `gradle packagingTest`. This will cause gradle to build, +You can run on all the VMs by running `gradle -Pvagrant.boxes=all packagingTest`., +You can run a particular VM with a command like, +`gradle -Pvagrant.boxes=oel-7 packagingTest`. See `gradle tasks` for a complete, +list of available vagrant boxes for testing. It's important to know that if you, +ctrl-c any of these `gradle` commands then the boxes will remain running and, +you'll have to terminate them with 'gradle stop'., +It's important to think of VMs like cattle. If they become lame you just shoot, +++ b/core/src/main/java/org/elasticsearch/Build.java, +, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) {, +            return true;, +        }, +        if (o == null || getClass() != o.getClass()) {, +            return false;, +        }, +, +        Build build = (Build) o;, +, +        if (isSnapshot != build.isSnapshot) {, +            return false;, +        }, +        if (!shortHash.equals(build.shortHash)) {, +            return false;, +        }, +        return date.equals(build.date);, +, +    }, +, +    @Override, +    public int hashCode() {, +        int result = (isSnapshot ? 1 : 0);, +        result = 31 * result + shortHash.hashCode();, +        result = 31 * result + date.hashCode();, +        return result;, +    }, +++ b/TESTING.asciidoc, +`gradle -Pvagrant.boxes=all vagrantSmokeTest`. The first time you run this it will, +. Run the tests with `gradle packagingTest`. This will cause gradle to build, +You can run on all the VMs by running `gradle -Pvagrant.boxes=all packagingTest`., +You can run a particular VM with a command like, +`gradle -Pvagrant.boxes=oel-7 packagingTest`. See `gradle tasks` for a complete, +list of available vagrant boxes for testing. It's important to know that if you, +ctrl-c any of these `gradle` commands then the boxes will remain running and, +you'll have to terminate them with 'gradle stop'., +It's important to think of VMs like cattle. If they become lame you just shoot, +++ b/core/src/main/java/org/elasticsearch/Build.java, +, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) {, +            return true;, +        }, +        if (o == null || getClass() != o.getClass()) {, +            return false;, +        }, +, +        Build build = (Build) o;, +, +        if (isSnapshot != build.isSnapshot) {, +            return false;, +        }, +        if (!shortHash.equals(build.shortHash)) {, +            return false;, +        }, +        return date.equals(build.date);, +, +    }, +, +    @Override, +    public int hashCode() {, +        int result = (isSnapshot ? 1 : 0);, +        result = 31 * result + shortHash.hashCode();, +        result = 31 * result + date.hashCode();, +        return result;, +    }, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.main.MainAction;, +import org.elasticsearch.action.main.TransportMainAction;, +        registerAction(MainAction.INSTANCE, TransportMainAction.class);, +++ b/TESTING.asciidoc, +`gradle -Pvagrant.boxes=all vagrantSmokeTest`. The first time you run this it will, +. Run the tests with `gradle packagingTest`. This will cause gradle to build, +You can run on all the VMs by running `gradle -Pvagrant.boxes=all packagingTest`., +You can run a particular VM with a command like, +`gradle -Pvagrant.boxes=oel-7 packagingTest`. See `gradle tasks` for a complete]