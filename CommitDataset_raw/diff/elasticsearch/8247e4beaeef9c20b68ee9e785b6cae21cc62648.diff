[+++ b/docs/reference/indices/refresh.asciidoc, +example, the internal one requires refresh to be called, but by default a, +++ b/docs/reference/indices/refresh.asciidoc, +example, the internal one requires refresh to be called, but by default a, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequest.java, + * capabilities depends on the index engine used. For example, the internal one requires refresh to be called, but by, +++ b/docs/reference/indices/refresh.asciidoc, +example, the internal one requires refresh to be called, but by default a, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequest.java, + * capabilities depends on the index engine used. For example, the internal one requires refresh to be called, but by, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequestBuilder.java, + * capabilities depends on the index engine used. For example, the internal one requires refresh to be called, but by, +++ b/docs/reference/indices/refresh.asciidoc, +example, the internal one requires refresh to be called, but by default a, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequest.java, + * capabilities depends on the index engine used. For example, the internal one requires refresh to be called, but by, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequestBuilder.java, + * capabilities depends on the index engine used. For example, the internal one requires refresh to be called, but by, +++ b/src/main/java/org/elasticsearch/index/deletionpolicy/SnapshotDeletionPolicy.java, +       // the clone will just be the identity. See InternalEngine recovery why we need this., +++ b/docs/reference/indices/refresh.asciidoc, +example, the internal one requires refresh to be called, but by default a, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequest.java, + * capabilities depends on the index engine used. For example, the internal one requires refresh to be called, but by, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequestBuilder.java, + * capabilities depends on the index engine used. For example, the internal one requires refresh to be called, but by, +++ b/src/main/java/org/elasticsearch/index/deletionpolicy/SnapshotDeletionPolicy.java, +       // the clone will just be the identity. See InternalEngine recovery why we need this., +++ b/src/main/java/org/elasticsearch/index/engine/IndexEngineModule.java, +import org.elasticsearch.index.engine.internal.InternalEngineModule;, +import org.elasticsearch.index.engine.internal.InternalIndexEngineModule;, +        public static final Class<? extends Module> DEFAULT_INDEX_ENGINE = InternalIndexEngineModule.class;, +        public static final Class<? extends Module> DEFAULT_ENGINE = InternalEngineModule.class;, +++ b/docs/reference/indices/refresh.asciidoc, +example, the internal one requires refresh to be called, but by default a, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequest.java, + * capabilities depends on the index engine used. For example, the internal one requires refresh to be called, but by, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequestBuilder.java, + * capabilities depends on the index engine used. For example, the internal one requires refresh to be called, but by, +++ b/src/main/java/org/elasticsearch/index/deletionpolicy/SnapshotDeletionPolicy.java, +       // the clone will just be the identity. See InternalEngine recovery why we need this., +++ b/src/main/java/org/elasticsearch/index/engine/IndexEngineModule.java, +import org.elasticsearch.index.engine.internal.InternalEngineModule;, +import org.elasticsearch.index.engine.internal.InternalIndexEngineModule;, +        public static final Class<? extends Module> DEFAULT_INDEX_ENGINE = InternalIndexEngineModule.class;, +        public static final Class<? extends Module> DEFAULT_ENGINE = InternalEngineModule.class;, +++ b/src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.index.engine.internal;, +, +import com.google.common.collect.Lists;, +import org.apache.lucene.index.*;, +import org.apache.lucene.index.IndexWriter.IndexReaderWarmer;, +import org.apache.lucene.search.IndexSearcher;, +import org.apache.lucene.search.Query;, +import org.apache.lucene.search.SearcherFactory;, +import org.apache.lucene.search.SearcherManager;, +import org.apache.lucene.store.AlreadyClosedException;, +import org.apache.lucene.store.LockObtainFailedException;, +import org.apache.lucene.util.BytesRef;, +import org.apache.lucene.util.IOUtils;, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.ElasticsearchIllegalStateException;, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.routing.operation.hash.djb.DjbHashFunction;, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.common.Preconditions;, +import org.elasticsearch.common.collect.MapBuilder;, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.lucene.HashedBytesRef;, +import org.elasticsearch.common.lucene.Lucene;, +import org.elasticsearch.common.lucene.search.XFilteredQuery;, +import org.elasticsearch.common.lucene.uid.Versions;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.unit.ByteSizeUnit;, +import org.elasticsearch.common.unit.ByteSizeValue;, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.common.util.concurrent.ConcurrentCollections;, +import org.elasticsearch.common.util.concurrent.EsExecutors;, +import org.elasticsearch.index.VersionType;, +import org.elasticsearch.index.analysis.AnalysisService;, +import org.elasticsearch.index.codec.CodecService;]