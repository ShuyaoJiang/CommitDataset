[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +     * Updates cluster wide specific settings using the Cluster Update Settings API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-update-settings.html"> Cluster Update Settings, +     * API on elastic.co</a>, +     * @param clusterUpdateSettingsRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public ClusterUpdateSettingsResponse putSettings(ClusterUpdateSettingsRequest clusterUpdateSettingsRequest, RequestOptions options), +            throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(clusterUpdateSettingsRequest, RequestConverters::clusterPutSettings,, +                options, ClusterUpdateSettingsResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Updates cluster wide specific settings using the Cluster Update Settings API., +     * @deprecated Prefer {@link #putSettings(ClusterUpdateSettingsRequest, RequestOptions)}, +    @Deprecated, +     * Asynchronously updates cluster wide specific settings using the Cluster Update Settings API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-update-settings.html"> Cluster Update Settings, +     * API on elastic.co</a>, +     * @param clusterUpdateSettingsRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void putSettingsAsync(ClusterUpdateSettingsRequest clusterUpdateSettingsRequest, RequestOptions options,, +                                 ActionListener<ClusterUpdateSettingsResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(clusterUpdateSettingsRequest, RequestConverters::clusterPutSettings,, +                options, ClusterUpdateSettingsResponse::fromXContent, listener, emptySet());, +    }, +    /**, +     * Asynchronously updates cluster wide specific settings using the Cluster Update Settings API., +     * @deprecated Prefer {@link #putSettingsAsync(ClusterUpdateSettingsRequest, RequestOptions, ActionListener)}, +    @Deprecated, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +     * Updates cluster wide specific settings using the Cluster Update Settings API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-update-settings.html"> Cluster Update Settings, +     * API on elastic.co</a>, +     * @param clusterUpdateSettingsRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public ClusterUpdateSettingsResponse putSettings(ClusterUpdateSettingsRequest clusterUpdateSettingsRequest, RequestOptions options), +            throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(clusterUpdateSettingsRequest, RequestConverters::clusterPutSettings,, +                options, ClusterUpdateSettingsResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Updates cluster wide specific settings using the Cluster Update Settings API., +     * @deprecated Prefer {@link #putSettings(ClusterUpdateSettingsRequest, RequestOptions)}, +    @Deprecated, +     * Asynchronously updates cluster wide specific settings using the Cluster Update Settings API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-update-settings.html"> Cluster Update Settings, +     * API on elastic.co</a>, +     * @param clusterUpdateSettingsRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void putSettingsAsync(ClusterUpdateSettingsRequest clusterUpdateSettingsRequest, RequestOptions options,, +                                 ActionListener<ClusterUpdateSettingsResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(clusterUpdateSettingsRequest, RequestConverters::clusterPutSettings,, +                options, ClusterUpdateSettingsResponse::fromXContent, listener, emptySet());, +    }, +    /**, +     * Asynchronously updates cluster wide specific settings using the Cluster Update Settings API., +     * @deprecated Prefer {@link #putSettingsAsync(ClusterUpdateSettingsRequest, RequestOptions, ActionListener)}, +    @Deprecated, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.settings.get.GetSettingsRequest;, +import org.elasticsearch.action.admin.indices.settings.get.GetSettingsResponse;, +     * Deletes an index using the Delete Index API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-delete-index.html">, +     * Delete Index API on elastic.co</a>, +     * @param deleteIndexRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public DeleteIndexResponse delete(DeleteIndexRequest deleteIndexRequest, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(deleteIndexRequest, RequestConverters::deleteIndex, options,, +                DeleteIndexResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Deletes an index using the Delete Index API., +     * @deprecated Prefer {@link #delete(DeleteIndexRequest, RequestOptions)}, +    @Deprecated, +     * Asynchronously deletes an index using the Delete Index API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-delete-index.html">, +     * Delete Index API on elastic.co</a>, +     * @param deleteIndexRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void deleteAsync(DeleteIndexRequest deleteIndexRequest, RequestOptions options, ActionListener<DeleteIndexResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(deleteIndexRequest, RequestConverters::deleteIndex, options,, +                DeleteIndexResponse::fromXContent, listener, emptySet());]