[+++ b/core/src/main/java/org/elasticsearch/index/query/SpanNearQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/SpanNearQueryBuilder.java, +++ b/core/src/test/java/org/elasticsearch/index/query/SpanNearQueryBuilderTests.java, +import org.elasticsearch.common.ParsingException;, +import static org.hamcrest.CoreMatchers.containsString;, +    public void testCollectPayloadsNoLongerSupported() throws Exception {, +        final ParsingException e = expectThrows(, +                ParsingException.class,, +                () -> parseQuery(json, ParseFieldMatcher.EMPTY));, +        assertThat(e.getMessage(), containsString("[span_near] query does not support [collect_payloads]"));, +++ b/core/src/main/java/org/elasticsearch/index/query/SpanNearQueryBuilder.java, +++ b/core/src/test/java/org/elasticsearch/index/query/SpanNearQueryBuilderTests.java, +import org.elasticsearch.common.ParsingException;, +import static org.hamcrest.CoreMatchers.containsString;, +    public void testCollectPayloadsNoLongerSupported() throws Exception {, +        final ParsingException e = expectThrows(, +                ParsingException.class,, +                () -> parseQuery(json, ParseFieldMatcher.EMPTY));, +        assertThat(e.getMessage(), containsString("[span_near] query does not support [collect_payloads]"));, +++ b/docs/reference/migration/index.asciidoc, +* Migration between minor versions -- e.g. `6.x` to `6.y` -- can be, +* Migration between consecutive major versions -- e.g. `5.x` to `6.x` --, +* Migration between non-consecutive major versions -- e.g. `2.x` to `6.x` --, +include::migrate_6_0.asciidoc[], +++ b/core/src/main/java/org/elasticsearch/index/query/SpanNearQueryBuilder.java, +++ b/core/src/test/java/org/elasticsearch/index/query/SpanNearQueryBuilderTests.java, +import org.elasticsearch.common.ParsingException;, +import static org.hamcrest.CoreMatchers.containsString;, +    public void testCollectPayloadsNoLongerSupported() throws Exception {, +        final ParsingException e = expectThrows(, +                ParsingException.class,, +                () -> parseQuery(json, ParseFieldMatcher.EMPTY));, +        assertThat(e.getMessage(), containsString("[span_near] query does not support [collect_payloads]"));, +++ b/docs/reference/migration/index.asciidoc, +* Migration between minor versions -- e.g. `6.x` to `6.y` -- can be, +* Migration between consecutive major versions -- e.g. `5.x` to `6.x` --, +* Migration between non-consecutive major versions -- e.g. `2.x` to `6.x` --, +include::migrate_6_0.asciidoc[], +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/query/SpanNearQueryBuilder.java, +++ b/core/src/test/java/org/elasticsearch/index/query/SpanNearQueryBuilderTests.java, +import org.elasticsearch.common.ParsingException;, +import static org.hamcrest.CoreMatchers.containsString;, +    public void testCollectPayloadsNoLongerSupported() throws Exception {, +        final ParsingException e = expectThrows(, +                ParsingException.class,, +                () -> parseQuery(json, ParseFieldMatcher.EMPTY));, +        assertThat(e.getMessage(), containsString("[span_near] query does not support [collect_payloads]"));, +++ b/docs/reference/migration/index.asciidoc, +* Migration between minor versions -- e.g. `6.x` to `6.y` -- can be, +* Migration between consecutive major versions -- e.g. `5.x` to `6.x` --, +* Migration between non-consecutive major versions -- e.g. `2.x` to `6.x` --, +include::migrate_6_0.asciidoc[], +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/query/SpanNearQueryBuilder.java, +++ b/core/src/test/java/org/elasticsearch/index/query/SpanNearQueryBuilderTests.java, +import org.elasticsearch.common.ParsingException;, +import static org.hamcrest.CoreMatchers.containsString;, +    public void testCollectPayloadsNoLongerSupported() throws Exception {, +        final ParsingException e = expectThrows(, +                ParsingException.class,, +                () -> parseQuery(json, ParseFieldMatcher.EMPTY));, +        assertThat(e.getMessage(), containsString("[span_near] query does not support [collect_payloads]"));, +++ b/docs/reference/migration/index.asciidoc, +* Migration between minor versions -- e.g. `6.x` to `6.y` -- can be, +* Migration between consecutive major versions -- e.g. `5.x` to `6.x` --, +* Migration between non-consecutive major versions -- e.g. `2.x` to `6.x` --, +include::migrate_6_0.asciidoc[], +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/query/SpanNearQueryBuilder.java, +++ b/core/src/test/java/org/elasticsearch/index/query/SpanNearQueryBuilderTests.java, +import org.elasticsearch.common.ParsingException;, +import static org.hamcrest.CoreMatchers.containsString;, +    public void testCollectPayloadsNoLongerSupported() throws Exception {, +        final ParsingException e = expectThrows(, +                ParsingException.class,, +                () -> parseQuery(json, ParseFieldMatcher.EMPTY));, +        assertThat(e.getMessage(), containsString("[span_near] query does not support [collect_payloads]"));, +++ b/docs/reference/migration/index.asciidoc, +* Migration between minor versions -- e.g. `6.x` to `6.y` -- can be, +* Migration between consecutive major versions -- e.g. `5.x` to `6.x` --, +* Migration between non-consecutive major versions -- e.g. `2.x` to `6.x` --, +include::migrate_6_0.asciidoc[], +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/query/SpanNearQueryBuilder.java, +++ b/core/src/test/java/org/elasticsearch/index/query/SpanNearQueryBuilderTests.java, +import org.elasticsearch.common.ParsingException;, +import static org.hamcrest.CoreMatchers.containsString;, +    public void testCollectPayloadsNoLongerSupported() throws Exception {, +        final ParsingException e = expectThrows(, +                ParsingException.class,, +                () -> parseQuery(json, ParseFieldMatcher.EMPTY));, +        assertThat(e.getMessage(), containsString("[span_near] query does not support [collect_payloads]"));, +++ b/docs/reference/migration/index.asciidoc]