[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            // always wait for yellow before anything is executed, +            current.println(, +                    "  - do:\n" +, +                    "      raw:\n" +, +                    "        method: GET\n" +, +                    "        path: \"_cluster/health\"\n" +, +                    "        wait_for_status: \"yellow\""), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            // always wait for yellow before anything is executed, +            current.println(, +                    "  - do:\n" +, +                    "      raw:\n" +, +                    "        method: GET\n" +, +                    "        path: \"_cluster/health\"\n" +, +                    "        wait_for_status: \"yellow\""), +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            // always wait for yellow before anything is executed, +            current.println(, +                    "  - do:\n" +, +                    "      raw:\n" +, +                    "        method: GET\n" +, +                    "        path: \"_cluster/health\"\n" +, +                    "        wait_for_status: \"yellow\""), +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/TransportCreateSnapshotAction.java, +import org.elasticsearch.snapshots.Snapshot;, +                new SnapshotsService.SnapshotRequest(request.repository(), request.snapshot(), "create_snapshot [" + request.snapshot() + "]"), +                        public void onSnapshotCompletion(Snapshot snapshot, SnapshotInfo snapshotInfo) {, +                            if (snapshot.getRepository().equals(request.repository()) &&, +                                    snapshot.getSnapshotId().getName().equals(request.snapshot())) {, +                                listener.onResponse(new CreateSnapshotResponse(snapshotInfo));, +                        public void onSnapshotFailure(Snapshot snapshot, Throwable t) {, +                            if (snapshot.getRepository().equals(request.repository()) &&, +                                    snapshot.getSnapshotId().getName().equals(request.snapshot())) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            // always wait for yellow before anything is executed, +            current.println(, +                    "  - do:\n" +, +                    "      raw:\n" +, +                    "        method: GET\n" +, +                    "        path: \"_cluster/health\"\n" +, +                    "        wait_for_status: \"yellow\""), +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/TransportCreateSnapshotAction.java, +import org.elasticsearch.snapshots.Snapshot;, +                new SnapshotsService.SnapshotRequest(request.repository(), request.snapshot(), "create_snapshot [" + request.snapshot() + "]"), +                        public void onSnapshotCompletion(Snapshot snapshot, SnapshotInfo snapshotInfo) {, +                            if (snapshot.getRepository().equals(request.repository()) &&, +                                    snapshot.getSnapshotId().getName().equals(request.snapshot())) {, +                                listener.onResponse(new CreateSnapshotResponse(snapshotInfo));, +                        public void onSnapshotFailure(Snapshot snapshot, Throwable t) {, +                            if (snapshot.getRepository().equals(request.repository()) &&, +                                    snapshot.getSnapshotId().getName().equals(request.snapshot())) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/delete/TransportDeleteSnapshotAction.java, +        snapshotsService.deleteSnapshot(request.repository(), request.snapshot(), new SnapshotsService.DeleteSnapshotListener() {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            // always wait for yellow before anything is executed, +            current.println(, +                    "  - do:\n" +, +                    "      raw:\n" +, +                    "        method: GET\n" +, +                    "        path: \"_cluster/health\"\n" +, +                    "        wait_for_status: \"yellow\""), +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/TransportCreateSnapshotAction.java, +import org.elasticsearch.snapshots.Snapshot;, +                new SnapshotsService.SnapshotRequest(request.repository(), request.snapshot(), "create_snapshot [" + request.snapshot() + "]"), +                        public void onSnapshotCompletion(Snapshot snapshot, SnapshotInfo snapshotInfo) {, +                            if (snapshot.getRepository().equals(request.repository()) &&, +                                    snapshot.getSnapshotId().getName().equals(request.snapshot())) {, +                                listener.onResponse(new CreateSnapshotResponse(snapshotInfo));, +                        public void onSnapshotFailure(Snapshot snapshot, Throwable t) {, +                            if (snapshot.getRepository().equals(request.repository()) &&, +                                    snapshot.getSnapshotId().getName().equals(request.snapshot())) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/delete/TransportDeleteSnapshotAction.java, +        snapshotsService.deleteSnapshot(request.repository(), request.snapshot(), new SnapshotsService.DeleteSnapshotListener() {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsResponse.java, +        this.snapshots = Collections.unmodifiableList(snapshots);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            // always wait for yellow before anything is executed, +            current.println(, +                    "  - do:\n" +, +                    "      raw:\n" +, +                    "        method: GET\n" +, +                    "        path: \"_cluster/health\"\n" +, +                    "        wait_for_status: \"yellow\""), +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/TransportCreateSnapshotAction.java, +import org.elasticsearch.snapshots.Snapshot;, +                new SnapshotsService.SnapshotRequest(request.repository(), request.snapshot(), "create_snapshot [" + request.snapshot() + "]"), +                        public void onSnapshotCompletion(Snapshot snapshot, SnapshotInfo snapshotInfo) {, +                            if (snapshot.getRepository().equals(request.repository()) &&, +                                    snapshot.getSnapshotId().getName().equals(request.snapshot())) {, +                                listener.onResponse(new CreateSnapshotResponse(snapshotInfo));, +                        public void onSnapshotFailure(Snapshot snapshot, Throwable t) {, +                            if (snapshot.getRepository().equals(request.repository()) &&, +                                    snapshot.getSnapshotId().getName().equals(request.snapshot())) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/delete/TransportDeleteSnapshotAction.java]