[+++ b/src/main/java/org/elasticsearch/common/lucene/docset/DocSets.java, +import org.elasticsearch.common.Nullable;, +    public static DocSet cacheable(IndexReader reader, @Nullable DocIdSet set) throws IOException {, +        if (set == null) {, +        if (set == DocIdSet.EMPTY_DOCIDSET) {, +            return DocSet.EMPTY_DOC_SET;, +        }, +, +        DocIdSetIterator it = set.iterator();, +        if (it == null) {, +            return DocSet.EMPTY_DOC_SET;, +        }, +        int doc = it.nextDoc();, +        if (doc == DocIdSetIterator.NO_MORE_DOCS) {, +            return DocSet.EMPTY_DOC_SET;, +        }, +, +        if (set.isCacheable() && (set instanceof DocSet)) {, +            return (DocSet) set;, +        }, +        if (set instanceof FixedBitSet) {, +            return new FixedBitDocSet((FixedBitSet) set);, +        }, +        if (set instanceof OpenBitSet) {, +            return new OpenBitDocSet((OpenBitSet) set);, +        }, +, +        // work with the iterator..., +        FixedBitSet fixedBitSet = new FixedBitSet(reader.maxDoc());, +        fixedBitSet.set(doc);, +        while ((doc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {, +            fixedBitSet.set(doc);, +        }, +        return new FixedBitDocSet(fixedBitSet);, +++ b/src/main/java/org/elasticsearch/common/lucene/docset/DocSets.java, +import org.elasticsearch.common.Nullable;, +    public static DocSet cacheable(IndexReader reader, @Nullable DocIdSet set) throws IOException {, +        if (set == null) {, +        if (set == DocIdSet.EMPTY_DOCIDSET) {, +            return DocSet.EMPTY_DOC_SET;, +        }, +, +        DocIdSetIterator it = set.iterator();, +        if (it == null) {, +            return DocSet.EMPTY_DOC_SET;, +        }, +        int doc = it.nextDoc();, +        if (doc == DocIdSetIterator.NO_MORE_DOCS) {, +            return DocSet.EMPTY_DOC_SET;, +        }, +, +        if (set.isCacheable() && (set instanceof DocSet)) {, +            return (DocSet) set;, +        }, +        if (set instanceof FixedBitSet) {, +            return new FixedBitDocSet((FixedBitSet) set);, +        }, +        if (set instanceof OpenBitSet) {, +            return new OpenBitDocSet((OpenBitSet) set);, +        }, +, +        // work with the iterator..., +        FixedBitSet fixedBitSet = new FixedBitSet(reader.maxDoc());, +        fixedBitSet.set(doc);, +        while ((doc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {, +            fixedBitSet.set(doc);, +        }, +        return new FixedBitDocSet(fixedBitSet);, +++ b/src/main/java/org/elasticsearch/index/cache/filter/support/FilterCacheValue.java, +++ b/src/main/java/org/elasticsearch/common/lucene/docset/DocSets.java, +import org.elasticsearch.common.Nullable;, +    public static DocSet cacheable(IndexReader reader, @Nullable DocIdSet set) throws IOException {, +        if (set == null) {, +        if (set == DocIdSet.EMPTY_DOCIDSET) {, +            return DocSet.EMPTY_DOC_SET;, +        }, +, +        DocIdSetIterator it = set.iterator();, +        if (it == null) {, +            return DocSet.EMPTY_DOC_SET;, +        }, +        int doc = it.nextDoc();, +        if (doc == DocIdSetIterator.NO_MORE_DOCS) {, +            return DocSet.EMPTY_DOC_SET;, +        }, +, +        if (set.isCacheable() && (set instanceof DocSet)) {, +            return (DocSet) set;, +        }, +        if (set instanceof FixedBitSet) {, +            return new FixedBitDocSet((FixedBitSet) set);, +        }, +        if (set instanceof OpenBitSet) {, +            return new OpenBitDocSet((OpenBitSet) set);, +        }, +, +        // work with the iterator..., +        FixedBitSet fixedBitSet = new FixedBitSet(reader.maxDoc());, +        fixedBitSet.set(doc);, +        while ((doc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {]