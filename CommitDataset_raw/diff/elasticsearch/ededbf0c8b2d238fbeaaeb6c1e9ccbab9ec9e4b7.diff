[+++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).index(shardId.getIndex()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).index(shardId.getIndex()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, request.source()).index(shardId.getIndex()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).index(shardId.getIndex()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, request.source()).index(shardId.getIndex()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.PRIMARY, request.source()).index(request.index()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).index(shardId.getIndex()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, request.source()).index(shardId.getIndex()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.PRIMARY, request.source()).index(request.index()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +        public Builder(Settings indexSettings, RootObjectMapper.Builder builder, MapperService mapperService) {, +            return new DocumentMapper(mapperService, indexSettings, docMapperParser, rootObjectMapper, meta, rootMappers, sourceTransforms, mapperService.mappingLock);, +    public DocumentMapper(MapperService mapperService, @Nullable Settings indexSettings, DocumentMapperParser docMapperParser,, +        this.documentParser = new DocumentParser(indexSettings, docMapperParser, this, new ReleasableLock(mappingLock.readLock()));, +    public ParsedDocument parse(String index, String type, String id, BytesReference source) throws MapperParsingException {, +        return parse(SourceToParse.source(source).index(index).type(type).id(id));, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).index(shardId.getIndex()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, request.source()).index(shardId.getIndex()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.PRIMARY, request.source()).index(request.index()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +        public Builder(Settings indexSettings, RootObjectMapper.Builder builder, MapperService mapperService) {, +            return new DocumentMapper(mapperService, indexSettings, docMapperParser, rootObjectMapper, meta, rootMappers, sourceTransforms, mapperService.mappingLock);, +    public DocumentMapper(MapperService mapperService, @Nullable Settings indexSettings, DocumentMapperParser docMapperParser,, +        this.documentParser = new DocumentParser(indexSettings, docMapperParser, this, new ReleasableLock(mappingLock.readLock()));, +    public ParsedDocument parse(String index, String type, String id, BytesReference source) throws MapperParsingException {, +        return parse(SourceToParse.source(source).index(index).type(type).id(id));, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +public class DocumentMapperParser {, +    private final Settings indexSettings;, +    public DocumentMapperParser(@IndexSettings Settings indexSettings, MapperService mapperService, AnalysisService analysisService,, +        this.indexSettings = indexSettings;, +        DocumentMapper.Builder docBuilder = doc(indexSettings, (RootObjectMapper.Builder) rootObjectTypeParser.parse(type, mapping, parserContext), mapperService);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).index(shardId.getIndex()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, request.source()).index(shardId.getIndex()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.PRIMARY, request.source()).index(request.index()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +        public Builder(Settings indexSettings, RootObjectMapper.Builder builder, MapperService mapperService) {, +            return new DocumentMapper(mapperService, indexSettings, docMapperParser, rootObjectMapper, meta, rootMappers, sourceTransforms, mapperService.mappingLock);, +    public DocumentMapper(MapperService mapperService, @Nullable Settings indexSettings, DocumentMapperParser docMapperParser,, +        this.documentParser = new DocumentParser(indexSettings, docMapperParser, this, new ReleasableLock(mappingLock.readLock()));, +    public ParsedDocument parse(String index, String type, String id, BytesReference source) throws MapperParsingException {, +        return parse(SourceToParse.source(source).index(index).type(type).id(id));, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +public class DocumentMapperParser {, +    private final Settings indexSettings;, +    public DocumentMapperParser(@IndexSettings Settings indexSettings, MapperService mapperService, AnalysisService analysisService,, +        this.indexSettings = indexSettings;, +        DocumentMapper.Builder docBuilder = doc(indexSettings, (RootObjectMapper.Builder) rootObjectTypeParser.parse(type, mapping, parserContext), mapperService);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +            return new ParseContext.InternalParseContext(indexSettings, docMapperParser, docMapper, new ContentPath(0));, +    public DocumentParser(Settings indexSettings, DocumentMapperParser docMapperParser, DocumentMapper docMapper, ReleasableLock parseLock) {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).index(shardId.getIndex()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, request.source()).index(shardId.getIndex()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.PRIMARY, request.source()).index(request.index()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +        public Builder(Settings indexSettings, RootObjectMapper.Builder builder, MapperService mapperService) {, +            return new DocumentMapper(mapperService, indexSettings, docMapperParser, rootObjectMapper, meta, rootMappers, sourceTransforms, mapperService.mappingLock);, +    public DocumentMapper(MapperService mapperService, @Nullable Settings indexSettings, DocumentMapperParser docMapperParser,, +        this.documentParser = new DocumentParser(indexSettings, docMapperParser, this, new ReleasableLock(mappingLock.readLock()));, +    public ParsedDocument parse(String index, String type, String id, BytesReference source) throws MapperParsingException {, +        return parse(SourceToParse.source(source).index(index).type(type).id(id));, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +public class DocumentMapperParser {, +    private final Settings indexSettings;, +    public DocumentMapperParser(@IndexSettings Settings indexSettings, MapperService mapperService, AnalysisService analysisService,, +        this.indexSettings = indexSettings;, +        DocumentMapper.Builder docBuilder = doc(indexSettings, (RootObjectMapper.Builder) rootObjectTypeParser.parse(type, mapping, parserContext), mapperService);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +            return new ParseContext.InternalParseContext(indexSettings, docMapperParser, docMapper, new ContentPath(0));, +    public DocumentParser(Settings indexSettings, DocumentMapperParser docMapperParser, DocumentMapper docMapper, ReleasableLock parseLock) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MapperBuilders.java, +    public static DocumentMapper.Builder doc(Settings settings, RootObjectMapper.Builder objectBuilder, MapperService mapperService) {, +        return new DocumentMapper.Builder(settings, objectBuilder, mapperService);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).index(shardId.getIndex()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, request.source()).index(shardId.getIndex()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.PRIMARY, request.source()).index(request.index()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +        public Builder(Settings indexSettings, RootObjectMapper.Builder builder, MapperService mapperService) {, +            return new DocumentMapper(mapperService, indexSettings, docMapperParser, rootObjectMapper, meta, rootMappers, sourceTransforms, mapperService.mappingLock);]