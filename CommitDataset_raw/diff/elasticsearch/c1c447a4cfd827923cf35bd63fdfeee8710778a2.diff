[+++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/StemmerTokenFilterFactory.java, +import org.apache.lucene.analysis.miscellaneous.EmptyTokenStream;, +import java.io.IOException;, +, +    private static final TokenStream EMPTY_TOKEN_STREAM = new EmptyTokenStream();, +, +    StemmerTokenFilterFactory(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException {, +        // check that we have a valid language by trying to create a TokenStream, +        create(EMPTY_TOKEN_STREAM).close();, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/StemmerTokenFilterFactory.java, +import org.apache.lucene.analysis.miscellaneous.EmptyTokenStream;, +import java.io.IOException;, +, +    private static final TokenStream EMPTY_TOKEN_STREAM = new EmptyTokenStream();, +, +    StemmerTokenFilterFactory(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException {, +        // check that we have a valid language by trying to create a TokenStream, +        create(EMPTY_TOKEN_STREAM).close();, +++ b/modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/StemmerTokenFilterFactoryTests.java, +    public void testMultipleLanguagesThrowsException() throws IOException {, +        Version v = VersionUtils.randomVersion(random());, +        Settings settings = Settings.builder().put("index.analysis.filter.my_english.type", "stemmer"), +                .putList("index.analysis.filter.my_english.language", "english", "light_english").put(SETTING_VERSION_CREATED, v), +                .put(Environment.PATH_HOME_SETTING.getKey(), createTempDir().toString()).build();, +, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,, +                () -> AnalysisTestsHelper.createTestAnalysisFromSettings(settings, PLUGIN));, +        assertEquals("Invalid stemmer class specified: [english, light_english]", e.getMessage());, +    }]