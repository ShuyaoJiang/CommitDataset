[+++ b/server/src/main/java/org/elasticsearch/repositories/RepositoriesService.java, +        // Trying to create the new repository on master to make sure it works, +        try {, +            closeRepository(createRepository(newRepositoryMetaData));, +        } catch (Exception e) {, +            registrationListener.onFailure(e);, +            return;, +        }, +, +            public ClusterState execute(ClusterState currentState) {, +                            if (newRepositoryMetaData.equals(repositoryMetaData)) {, +                                // Previous version is the same as this one no update is needed., +                                return currentState;, +                            }, +    private void closeRepository(Repository repository) {, +++ b/server/src/main/java/org/elasticsearch/repositories/RepositoriesService.java, +        // Trying to create the new repository on master to make sure it works, +        try {, +            closeRepository(createRepository(newRepositoryMetaData));, +        } catch (Exception e) {, +            registrationListener.onFailure(e);, +            return;, +        }, +, +            public ClusterState execute(ClusterState currentState) {, +                            if (newRepositoryMetaData.equals(repositoryMetaData)) {, +                                // Previous version is the same as this one no update is needed., +                                return currentState;, +                            }, +    private void closeRepository(Repository repository) {, +++ b/server/src/test/java/org/elasticsearch/snapshots/RepositoriesIT.java, +        logger.info("--> check that trying to create a repository with the same settings repeatedly does not update cluster state");, +        String beforeStateUuid = clusterStateResponse.getState().stateUUID();, +        assertThat(, +            client.admin().cluster().preparePutRepository("test-repo-1"), +                .setType("fs").setSettings(Settings.builder(), +                .put("location", location), +            ).get().isAcknowledged(),, +            equalTo(true));, +        assertEquals(beforeStateUuid, client.admin().cluster().prepareState().clear().get().getState().stateUUID());, +]