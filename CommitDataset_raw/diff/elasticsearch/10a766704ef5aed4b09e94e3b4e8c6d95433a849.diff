[+++ b/core/src/main/java/org/elasticsearch/action/ActionRequest.java, +     * Should this task store its result after it has finished?, +    public boolean getShouldStoreResult() {, +++ b/core/src/main/java/org/elasticsearch/action/ActionRequest.java, +     * Should this task store its result after it has finished?, +    public boolean getShouldStoreResult() {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/GetTaskResponse.java, +import org.elasticsearch.tasks.TaskResult;, +    private TaskResult task;, +    public GetTaskResponse(TaskResult task) {, +        task = in.readOptionalWriteable(TaskResult::new);, +    public TaskResult getTask() {, +++ b/core/src/main/java/org/elasticsearch/action/ActionRequest.java, +     * Should this task store its result after it has finished?, +    public boolean getShouldStoreResult() {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/GetTaskResponse.java, +import org.elasticsearch.tasks.TaskResult;, +    private TaskResult task;, +    public GetTaskResponse(TaskResult task) {, +        task = in.readOptionalWriteable(TaskResult::new);, +    public TaskResult getTask() {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/TransportGetTaskAction.java, +import org.elasticsearch.tasks.TaskResult;, +import org.elasticsearch.tasks.TaskResultsService;, +                listener.onResponse(new GetTaskResponse(new TaskResult(false, info)));, +                    listener.onResponse(new GetTaskResponse(new TaskResult(true, snapshotOfRunningTask)));, +     * task's result was stored. Called on the node that once had the task if that node is still part of the cluster or on the, +        GetRequest get = new GetRequest(TaskResultsService.TASK_INDEX, TaskResultsService.TASK_TYPE,, +                    listener.onFailure(new ResourceNotFoundException("task [{}] isn't running or stored its results", e,, +                        request.getTaskId()));, +            listener.onFailure(new ResourceNotFoundException("task [{}] isn't running or stored its results", response.getId()));, +            TaskResult result = TaskResult.PARSER.apply(parser, () -> ParseFieldMatcher.STRICT);, +++ b/core/src/main/java/org/elasticsearch/action/ActionRequest.java, +     * Should this task store its result after it has finished?, +    public boolean getShouldStoreResult() {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/GetTaskResponse.java, +import org.elasticsearch.tasks.TaskResult;, +    private TaskResult task;, +    public GetTaskResponse(TaskResult task) {, +        task = in.readOptionalWriteable(TaskResult::new);, +    public TaskResult getTask() {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/TransportGetTaskAction.java, +import org.elasticsearch.tasks.TaskResult;, +import org.elasticsearch.tasks.TaskResultsService;, +                listener.onResponse(new GetTaskResponse(new TaskResult(false, info)));, +                    listener.onResponse(new GetTaskResponse(new TaskResult(true, snapshotOfRunningTask)));, +     * task's result was stored. Called on the node that once had the task if that node is still part of the cluster or on the, +        GetRequest get = new GetRequest(TaskResultsService.TASK_INDEX, TaskResultsService.TASK_TYPE,, +                    listener.onFailure(new ResourceNotFoundException("task [{}] isn't running or stored its results", e,, +                        request.getTaskId()));, +            listener.onFailure(new ResourceNotFoundException("task [{}] isn't running or stored its results", response.getId()));, +            TaskResult result = TaskResult.PARSER.apply(parser, () -> ParseFieldMatcher.STRICT);, +++ b/core/src/main/java/org/elasticsearch/action/support/TransportAction.java, +        if (task != null && request.getShouldStoreResult()) {, +            listener = new TaskResultStoringActionListener<>(taskManager, task, listener);, +     * Wrapper for an action listener that stores the result at the end of the execution, +    private static class TaskResultStoringActionListener<Response extends ActionResponse> implements ActionListener<Response> {, +        private TaskResultStoringActionListener(TaskManager taskManager, Task task, ActionListener<Response> delegate) {, +                taskManager.storeResult(task, response, delegate);, +                taskManager.storeResult(task, e, delegate);, +++ b/core/src/main/java/org/elasticsearch/action/ActionRequest.java, +     * Should this task store its result after it has finished?, +    public boolean getShouldStoreResult() {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/GetTaskResponse.java, +import org.elasticsearch.tasks.TaskResult;, +    private TaskResult task;, +    public GetTaskResponse(TaskResult task) {, +        task = in.readOptionalWriteable(TaskResult::new);, +    public TaskResult getTask() {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/TransportGetTaskAction.java, +import org.elasticsearch.tasks.TaskResult;, +import org.elasticsearch.tasks.TaskResultsService;, +                listener.onResponse(new GetTaskResponse(new TaskResult(false, info)));, +                    listener.onResponse(new GetTaskResponse(new TaskResult(true, snapshotOfRunningTask)));, +     * task's result was stored. Called on the node that once had the task if that node is still part of the cluster or on the, +        GetRequest get = new GetRequest(TaskResultsService.TASK_INDEX, TaskResultsService.TASK_TYPE,, +                    listener.onFailure(new ResourceNotFoundException("task [{}] isn't running or stored its results", e,, +                        request.getTaskId()));, +            listener.onFailure(new ResourceNotFoundException("task [{}] isn't running or stored its results", response.getId()));, +            TaskResult result = TaskResult.PARSER.apply(parser, () -> ParseFieldMatcher.STRICT);, +++ b/core/src/main/java/org/elasticsearch/action/support/TransportAction.java, +        if (task != null && request.getShouldStoreResult()) {, +            listener = new TaskResultStoringActionListener<>(taskManager, task, listener);, +     * Wrapper for an action listener that stores the result at the end of the execution, +    private static class TaskResultStoringActionListener<Response extends ActionResponse> implements ActionListener<Response> {, +        private TaskResultStoringActionListener(TaskManager taskManager, Task task, ActionListener<Response> delegate) {, +                taskManager.storeResult(task, response, delegate);, +                taskManager.storeResult(task, e, delegate);, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/action/ActionRequest.java, +     * Should this task store its result after it has finished?, +    public boolean getShouldStoreResult() {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/GetTaskResponse.java, +import org.elasticsearch.tasks.TaskResult;, +    private TaskResult task;, +    public GetTaskResponse(TaskResult task) {, +        task = in.readOptionalWriteable(TaskResult::new);, +    public TaskResult getTask() {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/TransportGetTaskAction.java, +import org.elasticsearch.tasks.TaskResult;]