[+++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = PathUtils.get(NamingConventionTests.class.getResource(path).toURI());, +++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = PathUtils.get(NamingConventionTests.class.getResource(path).toURI());, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +        Path dir = PathUtils.get(dirUrl.toURI());, +        Path backwardsIndex = PathUtils.get(getClass().getResource(indexFile).toURI());, +++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = PathUtils.get(NamingConventionTests.class.getResource(path).toURI());, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +        Path dir = PathUtils.get(dirUrl.toURI());, +        Path backwardsIndex = PathUtils.get(getClass().getResource(indexFile).toURI());, +++ b/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatTests.java, +        Path repoFiles = PathUtils.get(RestoreBackwardsCompatTests.class.getResource(".").toURI());, +++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = PathUtils.get(NamingConventionTests.class.getResource(path).toURI());, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +        Path dir = PathUtils.get(dirUrl.toURI());, +        Path backwardsIndex = PathUtils.get(getClass().getResource(indexFile).toURI());, +++ b/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatTests.java, +        Path repoFiles = PathUtils.get(RestoreBackwardsCompatTests.class.getResource(".").toURI());, +++ b/src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityUponUpgradeTests.java, +        Path zippedIndexDir = PathUtils.get(getClass().getResource("/org/elasticsearch/cluster/routing/" + name + ".zip").toURI());, +++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = PathUtils.get(NamingConventionTests.class.getResource(path).toURI());, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +        Path dir = PathUtils.get(dirUrl.toURI());, +        Path backwardsIndex = PathUtils.get(getClass().getResource(indexFile).toURI());, +++ b/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatTests.java, +        Path repoFiles = PathUtils.get(RestoreBackwardsCompatTests.class.getResource(".").toURI());, +++ b/src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityUponUpgradeTests.java, +        Path zippedIndexDir = PathUtils.get(getClass().getResource("/org/elasticsearch/cluster/routing/" + name + ".zip").toURI());, +++ b/src/test/java/org/elasticsearch/common/io/FileSystemUtilsTests.java, +        final Path path = PathUtils.get(FileSystemUtilsTests.class.getResource("/org/elasticsearch/common/io/copyappend").toURI());, +++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = PathUtils.get(NamingConventionTests.class.getResource(path).toURI());, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +        Path dir = PathUtils.get(dirUrl.toURI());, +        Path backwardsIndex = PathUtils.get(getClass().getResource(indexFile).toURI());, +++ b/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatTests.java, +        Path repoFiles = PathUtils.get(RestoreBackwardsCompatTests.class.getResource(".").toURI());, +++ b/src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityUponUpgradeTests.java, +        Path zippedIndexDir = PathUtils.get(getClass().getResource("/org/elasticsearch/cluster/routing/" + name + ".zip").toURI());, +++ b/src/test/java/org/elasticsearch/common/io/FileSystemUtilsTests.java, +        final Path path = PathUtils.get(FileSystemUtilsTests.class.getResource("/org/elasticsearch/common/io/copyappend").toURI());, +++ b/src/test/java/org/elasticsearch/common/logging/log4j/Log4jESLoggerTests.java, +        return PathUtils.get(url.toURI());, +++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = PathUtils.get(NamingConventionTests.class.getResource(path).toURI());, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +        Path dir = PathUtils.get(dirUrl.toURI());, +        Path backwardsIndex = PathUtils.get(getClass().getResource(indexFile).toURI());, +++ b/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatTests.java, +        Path repoFiles = PathUtils.get(RestoreBackwardsCompatTests.class.getResource(".").toURI());, +++ b/src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityUponUpgradeTests.java, +        Path zippedIndexDir = PathUtils.get(getClass().getResource("/org/elasticsearch/cluster/routing/" + name + ".zip").toURI());, +++ b/src/test/java/org/elasticsearch/common/io/FileSystemUtilsTests.java, +        final Path path = PathUtils.get(FileSystemUtilsTests.class.getResource("/org/elasticsearch/common/io/copyappend").toURI());, +++ b/src/test/java/org/elasticsearch/common/logging/log4j/Log4jESLoggerTests.java, +        return PathUtils.get(url.toURI());, +++ b/src/test/java/org/elasticsearch/common/logging/log4j/LoggingConfigurationTests.java, +        return PathUtils.get(url.toURI());, +++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = PathUtils.get(NamingConventionTests.class.getResource(path).toURI());, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +        Path dir = PathUtils.get(dirUrl.toURI());, +        Path backwardsIndex = PathUtils.get(getClass().getResource(indexFile).toURI());, +++ b/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatTests.java, +        Path repoFiles = PathUtils.get(RestoreBackwardsCompatTests.class.getResource(".").toURI());, +++ b/src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityUponUpgradeTests.java, +        Path zippedIndexDir = PathUtils.get(getClass().getResource("/org/elasticsearch/cluster/routing/" + name + ".zip").toURI());, +++ b/src/test/java/org/elasticsearch/common/io/FileSystemUtilsTests.java, +        final Path path = PathUtils.get(FileSystemUtilsTests.class.getResource("/org/elasticsearch/common/io/copyappend").toURI());, +++ b/src/test/java/org/elasticsearch/common/logging/log4j/Log4jESLoggerTests.java, +        return PathUtils.get(url.toURI());, +++ b/src/test/java/org/elasticsearch/common/logging/log4j/LoggingConfigurationTests.java, +        return PathUtils.get(url.toURI());, +++ b/src/test/java/org/elasticsearch/nodesinfo/SimpleNodesInfoTests.java, +            settings.put("path.plugins", PathUtils.get(resource.toURI()).toAbsolutePath());, +++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = PathUtils.get(NamingConventionTests.class.getResource(path).toURI());, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +        Path dir = PathUtils.get(dirUrl.toURI());, +        Path backwardsIndex = PathUtils.get(getClass().getResource(indexFile).toURI());, +++ b/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatTests.java, +        Path repoFiles = PathUtils.get(RestoreBackwardsCompatTests.class.getResource(".").toURI());, +++ b/src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityUponUpgradeTests.java, +        Path zippedIndexDir = PathUtils.get(getClass().getResource("/org/elasticsearch/cluster/routing/" + name + ".zip").toURI());, +++ b/src/test/java/org/elasticsearch/common/io/FileSystemUtilsTests.java, +        final Path path = PathUtils.get(FileSystemUtilsTests.class.getResource("/org/elasticsearch/common/io/copyappend").toURI());, +++ b/src/test/java/org/elasticsearch/common/logging/log4j/Log4jESLoggerTests.java, +        return PathUtils.get(url.toURI());, +++ b/src/test/java/org/elasticsearch/common/logging/log4j/LoggingConfigurationTests.java, +        return PathUtils.get(url.toURI());, +++ b/src/test/java/org/elasticsearch/nodesinfo/SimpleNodesInfoTests.java, +            settings.put("path.plugins", PathUtils.get(resource.toURI()).toAbsolutePath());, +++ b/src/test/java/org/elasticsearch/plugins/PluginManagerTests.java, +        URI uri = URI.create(PluginManagerTests.class.getResource(resourceName).toString());, +        return "file://" + uri.getPath();, +++ b/src/test/java/org/elasticsearch/NamingConventionTests.java]