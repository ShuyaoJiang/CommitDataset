[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        node = new Node(nodeSettings);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        node = new Node(nodeSettings);, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        node = new Node(nodeSettings);, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        node = new Node(nodeSettings);, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/node/package-info.java, + * Allow to build a {@link org.elasticsearch.node.Node} which is a, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        node = new Node(nodeSettings);, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/node/package-info.java, + * Allow to build a {@link org.elasticsearch.node.Node} which is a, +++ b/core/src/main/java/org/elasticsearch/tribe/TribeService.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        node = new Node(nodeSettings);, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/node/package-info.java, + * Allow to build a {@link org.elasticsearch.node.Node} which is a, +++ b/core/src/main/java/org/elasticsearch/tribe/TribeService.java, +++ b/core/src/test/java/org/elasticsearch/benchmark/aliases/AliasesBenchmark.java, +        Node node1 = new Node(, +                Settings.settingsBuilder().put(settings).put("node.master", true).build(), +        ).start();, +            otherNodes[i] = new Node(settings).start();, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        node = new Node(nodeSettings);, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/node/package-info.java, + * Allow to build a {@link org.elasticsearch.node.Node} which is a, +++ b/core/src/main/java/org/elasticsearch/tribe/TribeService.java, +++ b/core/src/test/java/org/elasticsearch/benchmark/aliases/AliasesBenchmark.java, +        Node node1 = new Node(, +                Settings.settingsBuilder().put(settings).put("node.master", true).build(), +        ).start();, +            otherNodes[i] = new Node(settings).start();, +++ b/core/src/test/java/org/elasticsearch/benchmark/breaker/CircuitBreakerBenchmark.java, +        Node node = new Node(Settings.EMPTY);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        node = new Node(nodeSettings);, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/node/package-info.java, + * Allow to build a {@link org.elasticsearch.node.Node} which is a, +++ b/core/src/main/java/org/elasticsearch/tribe/TribeService.java, +++ b/core/src/test/java/org/elasticsearch/benchmark/aliases/AliasesBenchmark.java, +        Node node1 = new Node(, +                Settings.settingsBuilder().put(settings).put("node.master", true).build(), +        ).start();, +            otherNodes[i] = new Node(settings).start();, +++ b/core/src/test/java/org/elasticsearch/benchmark/breaker/CircuitBreakerBenchmark.java, +        Node node = new Node(Settings.EMPTY);, +++ b/core/src/test/java/org/elasticsearch/benchmark/get/SimpleGetActionBenchmark.java, +import org.elasticsearch.common.settings.Settings;, +        Node node = new Node(Settings.EMPTY);, +            client = new Node(Settings.builder().put("node.client", true).build()).start().client();, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        node = new Node(nodeSettings);, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/node/package-info.java, + * Allow to build a {@link org.elasticsearch.node.Node} which is a, +++ b/core/src/main/java/org/elasticsearch/tribe/TribeService.java, +++ b/core/src/test/java/org/elasticsearch/benchmark/aliases/AliasesBenchmark.java, +        Node node1 = new Node(, +                Settings.settingsBuilder().put(settings).put("node.master", true).build(), +        ).start();, +            otherNodes[i] = new Node(settings).start();, +++ b/core/src/test/java/org/elasticsearch/benchmark/breaker/CircuitBreakerBenchmark.java, +        Node node = new Node(Settings.EMPTY);, +++ b/core/src/test/java/org/elasticsearch/benchmark/get/SimpleGetActionBenchmark.java, +import org.elasticsearch.common.settings.Settings;, +        Node node = new Node(Settings.EMPTY);, +            client = new Node(Settings.builder().put("node.client", true).build()).start().client();, +++ b/core/src/test/java/org/elasticsearch/benchmark/mapping/ManyMappingsBenchmark.java, +                .put("cluster.name",  ManyMappingsBenchmark.class.getSimpleName()), +        Node node = new Node(settings).start();, +            Node node2 = new Node(settings).start();, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        node = new Node(nodeSettings);, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/node/package-info.java, + * Allow to build a {@link org.elasticsearch.node.Node} which is a, +++ b/core/src/main/java/org/elasticsearch/tribe/TribeService.java, +++ b/core/src/test/java/org/elasticsearch/benchmark/aliases/AliasesBenchmark.java, +        Node node1 = new Node(, +                Settings.settingsBuilder().put(settings).put("node.master", true).build(), +        ).start();, +            otherNodes[i] = new Node(settings).start();]