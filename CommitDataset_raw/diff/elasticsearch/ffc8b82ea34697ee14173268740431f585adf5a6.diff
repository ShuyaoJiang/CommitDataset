[+++ b/buildSrc/src/test/java/org/elasticsearch/gradle/precommit/NamingConventionsTaskIT.java, +import org.junit.Ignore;, +    @Ignore("AwaitsFix : https://github.com/elastic/elasticsearch/issues/31665"), +    @Ignore("AwaitsFix : https://github.com/elastic/elasticsearch/issues/31665"), +++ b/buildSrc/src/test/java/org/elasticsearch/gradle/precommit/NamingConventionsTaskIT.java, +import org.junit.Ignore;, +    @Ignore("AwaitsFix : https://github.com/elastic/elasticsearch/issues/31665"), +    @Ignore("AwaitsFix : https://github.com/elastic/elasticsearch/issues/31665"), +++ b/client/benchmark/build.gradle, +test.enabled = false, +++ b/buildSrc/src/test/java/org/elasticsearch/gradle/precommit/NamingConventionsTaskIT.java, +import org.junit.Ignore;, +    @Ignore("AwaitsFix : https://github.com/elastic/elasticsearch/issues/31665"), +    @Ignore("AwaitsFix : https://github.com/elastic/elasticsearch/issues/31665"), +++ b/client/benchmark/build.gradle, +test.enabled = false, +++ b/docs/plugins/api.asciidoc, +* https://github.com/ritesh-kapoor/elasticsearch-pql[PQL language Plugin]:, +  Allows Elasticsearch to be queried with simple pipeline query syntax., +, +++ b/buildSrc/src/test/java/org/elasticsearch/gradle/precommit/NamingConventionsTaskIT.java, +import org.junit.Ignore;, +    @Ignore("AwaitsFix : https://github.com/elastic/elasticsearch/issues/31665"), +    @Ignore("AwaitsFix : https://github.com/elastic/elasticsearch/issues/31665"), +++ b/client/benchmark/build.gradle, +test.enabled = false, +++ b/docs/plugins/api.asciidoc, +* https://github.com/ritesh-kapoor/elasticsearch-pql[PQL language Plugin]:, +  Allows Elasticsearch to be queried with simple pipeline query syntax., +, +++ b/docs/reference/cat/thread_pool.asciidoc, +// TESTRESPONSE[s/\.\.\./(node-0 .+ 0 0 0\n)+/], +++ b/buildSrc/src/test/java/org/elasticsearch/gradle/precommit/NamingConventionsTaskIT.java, +import org.junit.Ignore;, +    @Ignore("AwaitsFix : https://github.com/elastic/elasticsearch/issues/31665"), +    @Ignore("AwaitsFix : https://github.com/elastic/elasticsearch/issues/31665"), +++ b/client/benchmark/build.gradle, +test.enabled = false, +++ b/docs/plugins/api.asciidoc, +* https://github.com/ritesh-kapoor/elasticsearch-pql[PQL language Plugin]:, +  Allows Elasticsearch to be queried with simple pipeline query syntax., +, +++ b/docs/reference/cat/thread_pool.asciidoc, +// TESTRESPONSE[s/\.\.\./(node-0 .+ 0 0 0\n)+/], +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1", +++ b/buildSrc/src/test/java/org/elasticsearch/gradle/precommit/NamingConventionsTaskIT.java, +import org.junit.Ignore;, +    @Ignore("AwaitsFix : https://github.com/elastic/elasticsearch/issues/31665"), +    @Ignore("AwaitsFix : https://github.com/elastic/elasticsearch/issues/31665"), +++ b/client/benchmark/build.gradle, +test.enabled = false, +++ b/docs/plugins/api.asciidoc, +* https://github.com/ritesh-kapoor/elasticsearch-pql[PQL language Plugin]:, +  Allows Elasticsearch to be queried with simple pipeline query syntax., +, +++ b/docs/reference/cat/thread_pool.asciidoc, +// TESTRESPONSE[s/\.\.\./(node-0 .+ 0 0 0\n)+/], +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1", +++ b/docs/reference/licensing/get-trial-status.asciidoc, +If you want to try the features that are included in a platinum license, you can , +start a 30-day trial. , +already activated a trial license for the current major product version. For, +++ b/buildSrc/src/test/java/org/elasticsearch/gradle/precommit/NamingConventionsTaskIT.java, +import org.junit.Ignore;, +    @Ignore("AwaitsFix : https://github.com/elastic/elasticsearch/issues/31665"), +    @Ignore("AwaitsFix : https://github.com/elastic/elasticsearch/issues/31665"), +++ b/client/benchmark/build.gradle, +test.enabled = false, +++ b/docs/plugins/api.asciidoc, +* https://github.com/ritesh-kapoor/elasticsearch-pql[PQL language Plugin]:, +  Allows Elasticsearch to be queried with simple pipeline query syntax., +, +++ b/docs/reference/cat/thread_pool.asciidoc, +// TESTRESPONSE[s/\.\.\./(node-0 .+ 0 0 0\n)+/], +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1", +++ b/docs/reference/licensing/get-trial-status.asciidoc, +If you want to try the features that are included in a platinum license, you can , +start a 30-day trial. , +already activated a trial license for the current major product version. For, +++ b/docs/reference/licensing/start-basic.asciidoc, +gives access to all the basic features. If the basic license does not support, +++ b/buildSrc/src/test/java/org/elasticsearch/gradle/precommit/NamingConventionsTaskIT.java, +import org.junit.Ignore;, +    @Ignore("AwaitsFix : https://github.com/elastic/elasticsearch/issues/31665"), +    @Ignore("AwaitsFix : https://github.com/elastic/elasticsearch/issues/31665"), +++ b/client/benchmark/build.gradle, +test.enabled = false, +++ b/docs/plugins/api.asciidoc, +* https://github.com/ritesh-kapoor/elasticsearch-pql[PQL language Plugin]:, +  Allows Elasticsearch to be queried with simple pipeline query syntax., +, +++ b/docs/reference/cat/thread_pool.asciidoc, +// TESTRESPONSE[s/\.\.\./(node-0 .+ 0 0 0\n)+/], +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1", +++ b/docs/reference/licensing/get-trial-status.asciidoc, +If you want to try the features that are included in a platinum license, you can ]