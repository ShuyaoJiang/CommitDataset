[+++ b/plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsRepository.java, +    private final ThreadPool threadPool;, +    private final String path;, +    private HdfsBlobStore blobStore;, +        this.threadPool = threadPool;, +        path = repositorySettings.settings().get("path", settings.get("path"));, +, +, +        this.basePath = BlobPath.cleanPath();, +        this.chunkSize = repositorySettings.settings().getAsBytesSize("chunk_size", settings.getAsBytesSize("chunk_size", null));, +        this.compress = repositorySettings.settings().getAsBoolean("compress", settings.getAsBoolean("compress", false));, +    }, +    , +    @Override, +    protected void doStart() {, +        // get configuration, +        try {, +        } catch (IOException e) {, +            throw new RuntimeException(e);, +        }, +        super.doStart();, +++ b/plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsRepository.java, +    private final ThreadPool threadPool;, +    private final String path;, +    private HdfsBlobStore blobStore;, +        this.threadPool = threadPool;, +        path = repositorySettings.settings().get("path", settings.get("path"));, +, +, +        this.basePath = BlobPath.cleanPath();, +        this.chunkSize = repositorySettings.settings().getAsBytesSize("chunk_size", settings.getAsBytesSize("chunk_size", null));, +        this.compress = repositorySettings.settings().getAsBoolean("compress", settings.getAsBoolean("compress", false));, +    }, +    , +    @Override, +    protected void doStart() {, +        // get configuration, +        try {, +        } catch (IOException e) {, +            throw new RuntimeException(e);, +        }, +        super.doStart();, +++ b/plugins/repository-hdfs/src/test/resources/rest-api-spec/test/hdfs_repository/20_repository.yaml, +              uri: "hdfs://localhost:40737", +++ b/plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsRepository.java, +    private final ThreadPool threadPool;, +    private final String path;, +    private HdfsBlobStore blobStore;, +        this.threadPool = threadPool;, +        path = repositorySettings.settings().get("path", settings.get("path"));, +, +, +        this.basePath = BlobPath.cleanPath();, +        this.chunkSize = repositorySettings.settings().getAsBytesSize("chunk_size", settings.getAsBytesSize("chunk_size", null));, +        this.compress = repositorySettings.settings().getAsBoolean("compress", settings.getAsBoolean("compress", false));, +    }, +    , +    @Override, +    protected void doStart() {, +        // get configuration, +        try {, +        } catch (IOException e) {, +            throw new RuntimeException(e);, +        }, +        super.doStart();, +++ b/plugins/repository-hdfs/src/test/resources/rest-api-spec/test/hdfs_repository/20_repository.yaml, +              uri: "hdfs://localhost:40737", +++ b/plugins/repository-hdfs/src/test/resources/rest-api-spec/test/hdfs_repository/30_snapshot.yaml, +            uri: "hdfs://localhost:40737", +++ b/plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsRepository.java, +    private final ThreadPool threadPool;, +    private final String path;, +    private HdfsBlobStore blobStore;, +        this.threadPool = threadPool;, +        path = repositorySettings.settings().get("path", settings.get("path"));, +, +, +        this.basePath = BlobPath.cleanPath();, +        this.chunkSize = repositorySettings.settings().getAsBytesSize("chunk_size", settings.getAsBytesSize("chunk_size", null));, +        this.compress = repositorySettings.settings().getAsBoolean("compress", settings.getAsBoolean("compress", false));, +    }, +    , +    @Override, +    protected void doStart() {, +        // get configuration, +        try {, +        } catch (IOException e) {, +            throw new RuntimeException(e);, +        }, +        super.doStart();, +++ b/plugins/repository-hdfs/src/test/resources/rest-api-spec/test/hdfs_repository/20_repository.yaml, +              uri: "hdfs://localhost:40737", +++ b/plugins/repository-hdfs/src/test/resources/rest-api-spec/test/hdfs_repository/30_snapshot.yaml, +            uri: "hdfs://localhost:40737", +++ b/plugins/repository-hdfs/src/test/resources/rest-api-spec/test/hdfs_repository/40_restore.yaml, +            uri: "hdfs://localhost:40737"]