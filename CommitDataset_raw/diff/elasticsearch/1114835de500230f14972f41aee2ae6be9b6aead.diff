[+++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java, +        return clusterState.routingTable().allActiveShardsGrouped(concreteIndices, true, true);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java, +        return clusterState.routingTable().allActiveShardsGrouped(concreteIndices, true, true);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java, +        return clusterState.routingTable().allAssignedShardsGrouped(concreteIndices, true, true);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java, +        return clusterState.routingTable().allActiveShardsGrouped(concreteIndices, true, true);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java, +        return clusterState.routingTable().allAssignedShardsGrouped(concreteIndices, true, true);, +++ b/src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java, +    /**, +     * Determines the shards this operation will be executed on. The operation is executed once per shard iterator, typically, +     * on the first shard in it. If the operation fails, it will be retried on the next shard in the iterator., +     */, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java, +        return clusterState.routingTable().allActiveShardsGrouped(concreteIndices, true, true);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java, +        return clusterState.routingTable().allAssignedShardsGrouped(concreteIndices, true, true);, +++ b/src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java, +    /**, +     * Determines the shards this operation will be executed on. The operation is executed once per shard iterator, typically, +     * on the first shard in it. If the operation fails, it will be retried on the next shard in the iterator., +     */, +++ b/src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java, +    public ShardRouting targetRoutingIfRelocating() {, +        if (!relocating()) {, +            return null;, +        }, +        return new ImmutableShardRouting(index, shardId, relocatingNodeId, currentNodeId, primary, ShardRoutingState.INITIALIZING, version);, +    }, +, +    @Override, +        if (this == o) {, +            return true;, +        }, +        if (o == null || !(o instanceof ImmutableShardRouting)) {, +            return false;, +        }, +        if (primary != that.primary) {, +            return false;, +        }, +        if (shardId != that.shardId) {, +            return false;, +        }, +        if (index != null ? !index.equals(that.index) : that.index != null) {, +            return false;, +        }, +        if (state != that.state) {, +            return false;, +        }, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java, +        return clusterState.routingTable().allActiveShardsGrouped(concreteIndices, true, true);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java, +        return clusterState.routingTable().allAssignedShardsGrouped(concreteIndices, true, true);, +++ b/src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java, +    /**, +     * Determines the shards this operation will be executed on. The operation is executed once per shard iterator, typically, +     * on the first shard in it. If the operation fails, it will be retried on the next shard in the iterator., +     */, +++ b/src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java, +    public ShardRouting targetRoutingIfRelocating() {, +        if (!relocating()) {, +            return null;, +        }, +        return new ImmutableShardRouting(index, shardId, relocatingNodeId, currentNodeId, primary, ShardRoutingState.INITIALIZING, version);, +    }, +, +    @Override, +        if (this == o) {, +            return true;, +        }, +        if (o == null || !(o instanceof ImmutableShardRouting)) {, +            return false;, +        }, +        if (primary != that.primary) {, +            return false;, +        }, +        if (shardId != that.shardId) {, +            return false;, +        }, +        if (index != null ? !index.equals(that.index) : that.index != null) {, +            return false;, +        }, +        if (state != that.state) {, +            return false;, +        }, +++ b/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +                allInitializingShards.add(shard.targetRoutingIfRelocating());, +++ b/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java, +        return clusterState.routingTable().allActiveShardsGrouped(concreteIndices, true, true);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java, +        return clusterState.routingTable().allAssignedShardsGrouped(concreteIndices, true, true);, +++ b/src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java, +    /**, +     * Determines the shards this operation will be executed on. The operation is executed once per shard iterator, typically, +     * on the first shard in it. If the operation fails, it will be retried on the next shard in the iterator., +     */, +++ b/src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java, +    public ShardRouting targetRoutingIfRelocating() {]