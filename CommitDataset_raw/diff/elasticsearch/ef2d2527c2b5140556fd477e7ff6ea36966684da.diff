[+++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcConfiguration.java, +    protected Collection<String> extraOptions() {, +        for (String option : optionNames()) {, +            DriverPropertyInfo prop = new DriverPropertyInfo(option, null);, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcConfiguration.java, +    protected Collection<String> extraOptions() {, +        for (String option : optionNames()) {, +            DriverPropertyInfo prop = new DriverPropertyInfo(option, null);, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcConnection.java, +        this(connectionInfo, true);, +    }, +    JdbcConnection(JdbcConfiguration connectionInfo, boolean checkServer) throws SQLException {, +        cfg = connectionInfo;, +        client = new JdbcHttpClient(connectionInfo, checkServer);, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcConfiguration.java, +    protected Collection<String> extraOptions() {, +        for (String option : optionNames()) {, +            DriverPropertyInfo prop = new DriverPropertyInfo(option, null);, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcConnection.java, +        this(connectionInfo, true);, +    }, +    JdbcConnection(JdbcConfiguration connectionInfo, boolean checkServer) throws SQLException {, +        cfg = connectionInfo;, +        client = new JdbcHttpClient(connectionInfo, checkServer);, +++ b/x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcDatabaseMetaData.java, +import java.sql.DriverPropertyInfo;, +import static java.sql.JDBCType.BIGINT;, +import static java.sql.JDBCType.BOOLEAN;, +        return emptySet(con.cfg, "ROUTINES",, +        return emptySet(con.cfg, "ROUTINES_COLUMNS",, +        return memorySet(con.cfg, columnInfo("CATALOGS", "TABLE_CAT"), data);, +        return memorySet(con.cfg, columnInfo("TABLE_TYPES", "TABLE_TYPE"), data);, +        return emptySet(con.cfg, "",, +                "TABLE_CAT",, +                "TABLE_SCHEM",, +                "TABLE_NAME",, +                "COLUMN_NAME",, +                "GRANTOR",, +                "GRANTEE",, +                "PRIVILEGE",, +                "IS_GRANTABLE");, +        return emptySet(con.cfg, "",, +                "TABLE_CAT",, +                "TABLE_SCHEM",, +                "TABLE_NAME",, +                "GRANTOR",, +                "GRANTEE",, +                "PRIVILEGE",, +                "IS_GRANTABLE");, +        return emptySet(con.cfg, "",, +                "SCOPE", SMALLINT,, +                "COLUMN_NAME",, +                "DATA_TYPE", INTEGER,, +                "TYPE_NAME",, +                "COLUMN_SIZE", INTEGER,, +                "BUFFER_LENGTH", INTEGER,, +                "DECIMAL_DIGITS", SMALLINT,, +                "PSEUDO_COLUMN", SMALLINT);, +        return emptySet(con.cfg, "",, +                "SCOPE", SMALLINT,, +                "COLUMN_NAME",, +                "DATA_TYPE", INTEGER,, +                "TYPE_NAME",, +                "COLUMN_SIZE", INTEGER,, +                "BUFFER_LENGTH", INTEGER,, +                "DECIMAL_DIGITS", SMALLINT,, +                "PSEUDO_COLUMN", SMALLINT);, +        return emptySet(con.cfg, "",, +                "TABLE_CAT",, +                "TABLE_SCHEM",, +                "TABLE_NAME",, +                "COLUMN_NAME",, +                "KEY_SEQ", SMALLINT,, +                "PK_NAME");, +        return emptySet(con.cfg, "",, +                "PKTABLE_CAT",, +                "PKTABLE_SCHEM",, +                "PKTABLE_NAME",, +                "PKCOLUMN_NAME",, +                "FKTABLE_CAT",, +                "FKTABLE_SCHEM",, +                "FKTABLE_NAME",, +                "FKCOLUMN_NAME",, +                "KEY_SEQ", SMALLINT,, +                "UPDATE_RULE ", SMALLINT,, +                "DELETE_RULE ", SMALLINT,, +                "FK_NAME",, +                "PK_NAME ",, +                "DEFERRABILITY", SMALLINT,, +                "IS_NULLABLE", +                );, +        return emptySet(con.cfg, "",, +                "PKTABLE_CAT",, +                "PKTABLE_SCHEM",, +                "PKTABLE_NAME",, +                "PKCOLUMN_NAME",, +                "FKTABLE_CAT",, +                "FKTABLE_SCHEM",, +                "FKTABLE_NAME",, +                "FKCOLUMN_NAME",]