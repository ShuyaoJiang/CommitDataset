[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        return query(querySource, 0, querySource.length, false);, +    @Required public CountRequest query(byte[] querySource, int offset, int length, boolean unsafe) {, +        this.querySourceUnsafe = unsafe;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        return query(querySource, 0, querySource.length, false);, +    @Required public CountRequest query(byte[] querySource, int offset, int length, boolean unsafe) {, +        this.querySourceUnsafe = unsafe;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +        if (querySourceUnsafe || querySourceOffset > 0) {, +        return query(querySource, 0, querySource.length, false);, +    @Required public DeleteByQueryRequest query(byte[] querySource, int offset, int length, boolean unsafe) {, +        this.querySourceUnsafe = unsafe;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        return query(querySource, 0, querySource.length, false);, +    @Required public CountRequest query(byte[] querySource, int offset, int length, boolean unsafe) {, +        this.querySourceUnsafe = unsafe;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +        if (querySourceUnsafe || querySourceOffset > 0) {, +        return query(querySource, 0, querySource.length, false);, +    @Required public DeleteByQueryRequest query(byte[] querySource, int offset, int length, boolean unsafe) {, +        this.querySourceUnsafe = unsafe;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +        if (sourceUnsafe || sourceOffset > 0) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        return query(querySource, 0, querySource.length, false);, +    @Required public CountRequest query(byte[] querySource, int offset, int length, boolean unsafe) {, +        this.querySourceUnsafe = unsafe;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +        if (querySourceUnsafe || querySourceOffset > 0) {, +        return query(querySource, 0, querySource.length, false);, +    @Required public DeleteByQueryRequest query(byte[] querySource, int offset, int length, boolean unsafe) {, +        this.querySourceUnsafe = unsafe;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +        if (sourceUnsafe || sourceOffset > 0) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +        return searchSource(searchSource, 0, searchSource.length, false);, +    public MoreLikeThisRequest searchSource(byte[] searchSource, int offset, int length, boolean unsafe) {, +        this.searchSourceUnsafe = unsafe;, +    public boolean searchSourceUnsafe() {, +        return searchSourceUnsafe;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        return query(querySource, 0, querySource.length, false);, +    @Required public CountRequest query(byte[] querySource, int offset, int length, boolean unsafe) {, +        this.querySourceUnsafe = unsafe;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +        if (querySourceUnsafe || querySourceOffset > 0) {, +        return query(querySource, 0, querySource.length, false);, +    @Required public DeleteByQueryRequest query(byte[] querySource, int offset, int length, boolean unsafe) {, +        this.querySourceUnsafe = unsafe;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +        if (sourceUnsafe || sourceOffset > 0) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +        return searchSource(searchSource, 0, searchSource.length, false);, +    public MoreLikeThisRequest searchSource(byte[] searchSource, int offset, int length, boolean unsafe) {, +        this.searchSourceUnsafe = unsafe;, +    public boolean searchSourceUnsafe() {, +        return searchSourceUnsafe;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +                    searchRequest.source(request.searchSource(), request.searchSourceOffset(), request.searchSourceLength(), request.searchSourceUnsafe());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        return query(querySource, 0, querySource.length, false);, +    @Required public CountRequest query(byte[] querySource, int offset, int length, boolean unsafe) {, +        this.querySourceUnsafe = unsafe;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +        if (querySourceUnsafe || querySourceOffset > 0) {, +        return query(querySource, 0, querySource.length, false);, +    @Required public DeleteByQueryRequest query(byte[] querySource, int offset, int length, boolean unsafe) {, +        this.querySourceUnsafe = unsafe;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +        if (sourceUnsafe || sourceOffset > 0) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +        return searchSource(searchSource, 0, searchSource.length, false);, +    public MoreLikeThisRequest searchSource(byte[] searchSource, int offset, int length, boolean unsafe) {, +        this.searchSourceUnsafe = unsafe;, +    public boolean searchSourceUnsafe() {, +        return searchSourceUnsafe;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +                    searchRequest.source(request.searchSource(), request.searchSourceOffset(), request.searchSourceLength(), request.searchSourceUnsafe());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +        return source(source, 0, source.length, false);, +    public SearchRequest source(byte[] source, int offset, int length, boolean unsafe) {, +        this.sourceUnsafe = unsafe;, +        return extraSource(source, 0, source.length, false);, +    public SearchRequest extraSource(byte[] source, int offset, int length, boolean unsafe) {, +        this.extraSourceUnsafe = unsafe;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        return query(querySource, 0, querySource.length, false);, +    @Required public CountRequest query(byte[] querySource, int offset, int length, boolean unsafe) {, +        this.querySourceUnsafe = unsafe;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +        if (querySourceUnsafe || querySourceOffset > 0) {, +        return query(querySource, 0, querySource.length, false);, +    @Required public DeleteByQueryRequest query(byte[] querySource, int offset, int length, boolean unsafe) {]