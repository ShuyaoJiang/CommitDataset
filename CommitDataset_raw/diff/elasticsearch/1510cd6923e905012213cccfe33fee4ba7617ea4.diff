[+++ b/src/main/java/org/elasticsearch/action/termvector/TransportMultiTermVectorsAction.java, +        if (shardRequests.size() == 0) {, +            // only failures.., +            listener.onResponse(new MultiTermVectorsResponse(responses.toArray(new MultiTermVectorsItemResponse[responses.length()])));, +        }, +        final AtomicInteger counter = new AtomicInteger(shardRequests.size());, +++ b/src/main/java/org/elasticsearch/action/termvector/TransportMultiTermVectorsAction.java, +        if (shardRequests.size() == 0) {, +            // only failures.., +            listener.onResponse(new MultiTermVectorsResponse(responses.toArray(new MultiTermVectorsItemResponse[responses.length()])));, +        }, +        final AtomicInteger counter = new AtomicInteger(shardRequests.size());, +++ b/src/test/java/org/elasticsearch/action/termvector/MultiTermVectorsTests.java, +import org.elasticsearch.action.termvector.MultiTermVectorsResponse;, +import org.elasticsearch.action.termvector.TermVectorRequestBuilder;, +import static org.hamcrest.Matchers.equalTo;, +    public void testMissingIndexThrowsMissingIndex() throws Exception {, +        TermVectorRequestBuilder requestBuilder = client().prepareTermVector("testX", "typeX", Integer.toString(1));, +        MultiTermVectorsRequestBuilder mtvBuilder = new MultiTermVectorsRequestBuilder(client());, +        mtvBuilder.add(requestBuilder.request());, +        MultiTermVectorsResponse response = mtvBuilder.execute().actionGet();, +        assertThat(response.getResponses().length, equalTo(1));, +        assertThat(response.getResponses()[0].getFailure().getMessage(), equalTo("[" + response.getResponses()[0].getIndex() + "] missing"));, +    }]