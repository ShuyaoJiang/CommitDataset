[+++ b/src/main/java/org/elasticsearch/gateway/local/state/shards/LocalGatewayShardsState.java, +                    newState.put(shardRouting.shardId(), new ShardStateInfo(shardRouting.version(), shardRouting.primary()));, +            ShardStateInfo highestShardState = null;, +                            ShardStateInfo readState = readShardState(data);, +                            if (readState == null) {, +                                logger.debug("[{}][{}]: not data for [" + stateFile.getAbsolutePath() + "], ignoring...", shardId.index().name(), shardId.id());, +                                continue;, +                            }, +                            assert readState.version == version;, +                            highestShardState = readState;, +            if (highestShardState == null) {, +            shardsState.put(shardId, highestShardState);, +    @Nullable, +    private ShardStateInfo readShardState(byte[] data) throws Exception {, +                return null;, +            Boolean primary = null;, +                    } else if ("primary".equals(currentFieldName)) {, +                        primary = parser.booleanValue();, +            return new ShardStateInfo(version, primary);, +                                shardsState.put(new ShardId(shardIndex, shardId), new ShardStateInfo(version, null));, +++ b/src/main/java/org/elasticsearch/gateway/local/state/shards/LocalGatewayShardsState.java, +                    newState.put(shardRouting.shardId(), new ShardStateInfo(shardRouting.version(), shardRouting.primary()));, +            ShardStateInfo highestShardState = null;, +                            ShardStateInfo readState = readShardState(data);, +                            if (readState == null) {, +                                logger.debug("[{}][{}]: not data for [" + stateFile.getAbsolutePath() + "], ignoring...", shardId.index().name(), shardId.id());, +                                continue;, +                            }, +                            assert readState.version == version;, +                            highestShardState = readState;, +            if (highestShardState == null) {, +            shardsState.put(shardId, highestShardState);, +    @Nullable, +    private ShardStateInfo readShardState(byte[] data) throws Exception {, +                return null;, +            Boolean primary = null;, +                    } else if ("primary".equals(currentFieldName)) {, +                        primary = parser.booleanValue();, +            return new ShardStateInfo(version, primary);, +                                shardsState.put(new ShardId(shardIndex, shardId), new ShardStateInfo(version, null));, +++ b/src/main/java/org/elasticsearch/gateway/local/state/shards/ShardStateInfo.java, +import org.elasticsearch.common.Nullable;, +, +    // can be null if we don't know..., +    @Nullable, +    public final Boolean primary;, +, +    public ShardStateInfo(long version, Boolean primary) {, +        this.primary = primary;]