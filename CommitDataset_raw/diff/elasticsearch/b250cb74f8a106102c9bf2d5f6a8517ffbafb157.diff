[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/dataframe/DataFrameField.java, +    // internal document id, +    public static String DOCUMENT_ID_FIELD = "_id";, +, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/dataframe/DataFrameField.java, +    // internal document id, +    public static String DOCUMENT_ID_FIELD = "_id";, +, +++ b/x-pack/plugin/data-frame/src/main/java/org/elasticsearch/xpack/dataframe/action/TransportPreviewDataFrameTransformAction.java, +                            // remove all internal fields, +                            List<Map<String, Object>> results = pivot.extractResults(agg, deducedMappings, stats), +                                    .map(record -> {, +                                        record.keySet().removeIf(k -> k.startsWith("_"));, +                                        return record;, +                                    }).collect(Collectors.toList());, +                            listener.onResponse(results);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/dataframe/DataFrameField.java, +    // internal document id, +    public static String DOCUMENT_ID_FIELD = "_id";, +, +++ b/x-pack/plugin/data-frame/src/main/java/org/elasticsearch/xpack/dataframe/action/TransportPreviewDataFrameTransformAction.java, +                            // remove all internal fields, +                            List<Map<String, Object>> results = pivot.extractResults(agg, deducedMappings, stats), +                                    .map(record -> {, +                                        record.keySet().removeIf(k -> k.startsWith("_"));, +                                        return record;, +                                    }).collect(Collectors.toList());, +                            listener.onResponse(results);, +++ b/x-pack/plugin/data-frame/src/main/java/org/elasticsearch/xpack/dataframe/transforms/DataFrameIndexer.java, +import org.elasticsearch.xpack.core.dataframe.DataFrameField;, +            String id = (String) document.get(DataFrameField.DOCUMENT_ID_FIELD);, +, +            if (id == null) {, +                throw new RuntimeException("Expected a document id but got null.");, +            }, +, +                builder.startObject();, +                for (Map.Entry<String, ?> value : document.entrySet()) {, +                    // skip all internal fields, +                    if (value.getKey().startsWith("_") == false) {, +                        builder.field(value.getKey(), value.getValue());, +                    }, +                }, +                builder.endObject();, +            IndexRequest request = new IndexRequest(indexName).source(builder).id(id);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/dataframe/DataFrameField.java, +    // internal document id, +    public static String DOCUMENT_ID_FIELD = "_id";, +, +++ b/x-pack/plugin/data-frame/src/main/java/org/elasticsearch/xpack/dataframe/action/TransportPreviewDataFrameTransformAction.java, +                            // remove all internal fields, +                            List<Map<String, Object>> results = pivot.extractResults(agg, deducedMappings, stats), +                                    .map(record -> {, +                                        record.keySet().removeIf(k -> k.startsWith("_"));, +                                        return record;, +                                    }).collect(Collectors.toList());, +                            listener.onResponse(results);, +++ b/x-pack/plugin/data-frame/src/main/java/org/elasticsearch/xpack/dataframe/transforms/DataFrameIndexer.java, +import org.elasticsearch.xpack.core.dataframe.DataFrameField;, +            String id = (String) document.get(DataFrameField.DOCUMENT_ID_FIELD);, +, +            if (id == null) {, +                throw new RuntimeException("Expected a document id but got null.");, +            }, +, +                builder.startObject();, +                for (Map.Entry<String, ?> value : document.entrySet()) {, +                    // skip all internal fields, +                    if (value.getKey().startsWith("_") == false) {, +                        builder.field(value.getKey(), value.getValue());, +                    }, +                }, +                builder.endObject();, +            IndexRequest request = new IndexRequest(indexName).source(builder).id(id);, +++ b/x-pack/plugin/data-frame/src/main/java/org/elasticsearch/xpack/dataframe/transforms/IDGenerator.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +, +package org.elasticsearch.xpack.dataframe.transforms;, +, +import org.apache.lucene.util.BytesRefBuilder;, +import org.elasticsearch.common.Numbers;, +import org.elasticsearch.common.hash.MurmurHash3;, +, +import java.nio.charset.StandardCharsets;, +import java.util.Base64;, +import java.util.TreeMap;, +, +/**, + * ID Generator for creating unique but deterministic document ids., + *, + * uses MurmurHash with 128 bits, + */, +public final class IDGenerator {, +    private static final byte[] NULL_VALUE = "__NULL_VALUE__".getBytes(StandardCharsets.UTF_8);, +    private static final byte DELIM = '$';, +    private static final long SEED = 19;]