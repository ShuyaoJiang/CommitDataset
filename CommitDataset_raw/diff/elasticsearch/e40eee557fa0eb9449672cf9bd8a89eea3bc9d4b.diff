[+++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/PrioritizedEsThreadPoolExecutor.java, +        super.execute(command);, +        private volatile ScheduledFuture<?> timeoutFuture;, +        private volatile boolean started = false;, +            // make the task as stared. This is needed for synchronization with the timeout handling, +            // see  #scheduleTimeout(), +            started = true;, +            if (started) {, +                // if the actual action already it might have missed the setting of the future. Clean it ourselves., +                FutureUtils.cancel(timeoutFuture);, +            }, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/PrioritizedEsThreadPoolExecutor.java, +        super.execute(command);, +        private volatile ScheduledFuture<?> timeoutFuture;, +        private volatile boolean started = false;, +            // make the task as stared. This is needed for synchronization with the timeout handling, +            // see  #scheduleTimeout(), +            started = true;, +            if (started) {, +                // if the actual action already it might have missed the setting of the future. Clean it ourselves., +                FutureUtils.cancel(timeoutFuture);, +            }, +++ b/core/src/test/java/org/elasticsearch/common/util/concurrent/PrioritizedExecutorsTests.java, +                         }, timer, TimeValue.timeValueHours(1), new Runnable() {]