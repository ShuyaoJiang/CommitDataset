[+++ b/core/src/main/java/org/elasticsearch/cluster/ClusterService.java, +     * Submits a cluster state update task; submitted updates will be, +     * batched across the same instance of executor. The exact batching, +     * semantics depend on the underlying implementation but a rough, +     * guideline is that if the update task is submitted while there, +     * are pending update tasks for the same executor, these update, +     * tasks will all be executed on the executor in a single batch, +     *, +     * @param source   the source of the cluster state update task, +     * @param task     the state needed for the cluster state update task, +     * @param config   the cluster state update task configuration, +     * @param executor the cluster state update task executor; tasks, +     *                 that share the same executor will be executed, +     *                 batches on this executor, +     * @param listener callback after the cluster state update task, +     *                 completes, +     * @param <T>      the type of the cluster state update task state, +     * Submits a cluster state update task; unlike {@link #submitStateUpdateTask(String, Object, ClusterStateTaskConfig, ClusterStateTaskExecutor, ClusterStateTaskListener)},, +     * submitted updates will not be batched., +     *, +     * @param source     the source of the cluster state update task, +     * @param updateTask the full context for the cluster state update, +     *                   task, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterService.java, +     * Submits a cluster state update task; submitted updates will be, +     * batched across the same instance of executor. The exact batching, +     * semantics depend on the underlying implementation but a rough, +     * guideline is that if the update task is submitted while there, +     * are pending update tasks for the same executor, these update, +     * tasks will all be executed on the executor in a single batch, +     *, +     * @param source   the source of the cluster state update task, +     * @param task     the state needed for the cluster state update task, +     * @param config   the cluster state update task configuration, +     * @param executor the cluster state update task executor; tasks, +     *                 that share the same executor will be executed, +     *                 batches on this executor, +     * @param listener callback after the cluster state update task, +     *                 completes, +     * @param <T>      the type of the cluster state update task state, +     * Submits a cluster state update task; unlike {@link #submitStateUpdateTask(String, Object, ClusterStateTaskConfig, ClusterStateTaskExecutor, ClusterStateTaskListener)},, +     * submitted updates will not be batched., +     *, +     * @param source     the source of the cluster state update task, +     * @param updateTask the full context for the cluster state update, +     *                   task, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterStateTaskConfig.java, + * Cluster state update task configuration for timeout and priority, + */, +public interface ClusterStateTaskConfig {, +    /**, +     * The timeout for this cluster state update task configuration. If, +     * the cluster state update task isn't processed within this, +     * timeout, the associated {@link ClusterStateTaskListener#onFailure(String, Throwable)}, +     * is invoked., +     *, +     * @return the timeout, or null if one is not set, +    /**, +     * The {@link Priority} for this cluster state update task configuration., +     *, +     * @return the priority, +     */, +    /**, +     * Build a cluster state update task configuration with the, +     * specified {@link Priority} and no timeout., +     *, +     * @param priority the priority for the associated cluster state, +     *                 update task, +     * @return the resulting cluster state update task configuration, +     */, +    /**, +     * Build a cluster state update task configuration with the, +     * specified {@link Priority} and timeout., +     *, +     * @param priority the priority for the associated cluster state, +     *                 update task, +     * @param timeout  the timeout for the associated cluster state, +     *                 update task, +     * @return the result cluster state update task configuration, +     */, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterService.java, +     * Submits a cluster state update task; submitted updates will be, +     * batched across the same instance of executor. The exact batching, +     * semantics depend on the underlying implementation but a rough, +     * guideline is that if the update task is submitted while there, +     * are pending update tasks for the same executor, these update, +     * tasks will all be executed on the executor in a single batch, +     *, +     * @param source   the source of the cluster state update task, +     * @param task     the state needed for the cluster state update task, +     * @param config   the cluster state update task configuration, +     * @param executor the cluster state update task executor; tasks, +     *                 that share the same executor will be executed, +     *                 batches on this executor, +     * @param listener callback after the cluster state update task, +     *                 completes, +     * @param <T>      the type of the cluster state update task state, +     * Submits a cluster state update task; unlike {@link #submitStateUpdateTask(String, Object, ClusterStateTaskConfig, ClusterStateTaskExecutor, ClusterStateTaskListener)},, +     * submitted updates will not be batched., +     *]