[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        public Builder updateNumberOfReplicas(int numberOfReplicas, String... indices) {, +            if (indices == null || indices.length == 0) {, +                indices = this.indices.map().keySet().toArray(new String[this.indices.map().keySet().size()]);, +            }, +            for (String index : indices) {, +                IndexMetaData indexMetaData = this.indices.get(index);, +                if (indexMetaData == null) {, +                    throw new IndexMissingException(new Index(index));, +                }, +                put(IndexMetaData.newIndexMetaDataBuilder(indexMetaData).numberOfReplicas(numberOfReplicas).build());, +            }, +            return this;, +        }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        public Builder updateNumberOfReplicas(int numberOfReplicas, String... indices) {, +            if (indices == null || indices.length == 0) {, +                indices = this.indices.map().keySet().toArray(new String[this.indices.map().keySet().size()]);, +            }, +            for (String index : indices) {, +                IndexMetaData indexMetaData = this.indices.get(index);, +                if (indexMetaData == null) {, +                    throw new IndexMissingException(new Index(index));, +                }, +                put(IndexMetaData.newIndexMetaDataBuilder(indexMetaData).numberOfReplicas(numberOfReplicas).build());, +            }, +            return this;, +        }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        public Builder updateNumberOfReplicas(int numberOfReplicas, String... indices) {, +            if (indices == null || indices.length == 0) {, +                indices = this.indices.map().keySet().toArray(new String[this.indices.map().keySet().size()]);, +            }, +            for (String index : indices) {, +                IndexMetaData indexMetaData = this.indices.get(index);, +                if (indexMetaData == null) {, +                    throw new IndexMissingException(new Index(index));, +                }, +                put(IndexMetaData.newIndexMetaDataBuilder(indexMetaData).numberOfReplicas(numberOfReplicas).build());, +            }, +            return this;, +        }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexRoutingTable.java, +         * Initializes a new empty index, +        public Builder addReplica() {, +            for (int shardId : shards.keySet()) {, +                addShard(shardId, null, false, ShardRoutingState.UNASSIGNED);, +            }, +            return this;, +        }, +, +        public Builder removeReplica() {, +            for (int shardId : shards.keySet()) {, +                IndexShardRoutingTable indexShard = shards.get(shardId);, +                if (indexShard.backupsShards().isEmpty()) {, +                    // nothing to do here!, +                    return this;, +                }, +                // re-add all the current ones, +                IndexShardRoutingTable.Builder builder = new IndexShardRoutingTable.Builder(indexShard.shardId());, +                for (ShardRouting shardRouting : indexShard) {, +                    builder.addShard(new ImmutableShardRouting(shardRouting));, +                }, +                // first check if there is one that is not assigned to a node, and remove it, +                boolean removed = false;, +                for (ShardRouting shardRouting : indexShard) {, +                    if (!shardRouting.primary() && !shardRouting.assignedToNode()) {, +                        builder.removeShard(shardRouting);, +                        removed = true;, +                        break;, +                    }, +                }, +                if (!removed) {, +                    for (ShardRouting shardRouting : indexShard) {, +                        if (!shardRouting.primary()) {, +                            builder.removeShard(shardRouting);, +                            removed = true;, +                            break;, +                        }, +                    }, +                }, +                shards.put(shardId, builder.build());, +            }, +            return this;, +        }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        public Builder updateNumberOfReplicas(int numberOfReplicas, String... indices) {, +            if (indices == null || indices.length == 0) {, +                indices = this.indices.map().keySet().toArray(new String[this.indices.map().keySet().size()]);, +            }, +            for (String index : indices) {, +                IndexMetaData indexMetaData = this.indices.get(index);]