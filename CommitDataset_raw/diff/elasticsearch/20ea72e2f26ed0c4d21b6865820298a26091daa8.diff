[+++ b/x-pack/plugin/sql/src/main/antlr/SqlBase.g4, +    : functionName '(' (setQuantifier? expression (',' expression)*)? ')', +    ;, +functionName, +    : LEFT , +    | RIGHT , +    | identifier, +++ b/x-pack/plugin/sql/src/main/antlr/SqlBase.g4, +    : functionName '(' (setQuantifier? expression (',' expression)*)? ')', +    ;, +functionName, +    : LEFT , +    | RIGHT , +    | identifier, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java, +        String name = template.functionName().getText();, +++ b/x-pack/plugin/sql/src/main/antlr/SqlBase.g4, +    : functionName '(' (setQuantifier? expression (',' expression)*)? ')', +    ;, +functionName, +    : LEFT , +    | RIGHT , +    | identifier, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java, +        String name = template.functionName().getText();, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseBaseListener.java, +  @Override public void enterFunctionName(SqlBaseParser.FunctionNameContext ctx) { }, +  /**, +   * {@inheritDoc}, +   *, +   * <p>The default implementation does nothing.</p>, +   */, +  @Override public void exitFunctionName(SqlBaseParser.FunctionNameContext ctx) { }, +  /**, +   * {@inheritDoc}, +   *, +   * <p>The default implementation does nothing.</p>, +   */, +++ b/x-pack/plugin/sql/src/main/antlr/SqlBase.g4, +    : functionName '(' (setQuantifier? expression (',' expression)*)? ')', +    ;, +functionName, +    : LEFT , +    | RIGHT , +    | identifier, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java, +        String name = template.functionName().getText();, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseBaseListener.java, +  @Override public void enterFunctionName(SqlBaseParser.FunctionNameContext ctx) { }, +  /**, +   * {@inheritDoc}, +   *, +   * <p>The default implementation does nothing.</p>, +   */, +  @Override public void exitFunctionName(SqlBaseParser.FunctionNameContext ctx) { }, +  /**, +   * {@inheritDoc}, +   *, +   * <p>The default implementation does nothing.</p>, +   */, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseBaseVisitor.java, +  @Override public T visitFunctionName(SqlBaseParser.FunctionNameContext ctx) { return visitChildren(ctx); }, +  /**, +   * {@inheritDoc}, +   *, +   * <p>The default implementation returns the result of calling, +   * {@link #visitChildren} on {@code ctx}.</p>, +   */, +++ b/x-pack/plugin/sql/src/main/antlr/SqlBase.g4, +    : functionName '(' (setQuantifier? expression (',' expression)*)? ')', +    ;, +functionName, +    : LEFT , +    | RIGHT , +    | identifier, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java, +        String name = template.functionName().getText();, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseBaseListener.java, +  @Override public void enterFunctionName(SqlBaseParser.FunctionNameContext ctx) { }, +  /**, +   * {@inheritDoc}, +   *, +   * <p>The default implementation does nothing.</p>, +   */, +  @Override public void exitFunctionName(SqlBaseParser.FunctionNameContext ctx) { }, +  /**, +   * {@inheritDoc}, +   *, +   * <p>The default implementation does nothing.</p>, +   */, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseBaseVisitor.java, +  @Override public T visitFunctionName(SqlBaseParser.FunctionNameContext ctx) { return visitChildren(ctx); }, +  /**, +   * {@inheritDoc}, +   *, +   * <p>The default implementation returns the result of calling, +   * {@link #visitChildren} on {@code ctx}.</p>, +   */, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseListener.java, +   * Enter a parse tree produced by {@link SqlBaseParser#functionName}.]