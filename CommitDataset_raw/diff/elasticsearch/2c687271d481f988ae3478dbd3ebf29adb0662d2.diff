[+++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrail.java, +        public void anonymousAccessDenied(String action, TransportMessage<?> message) {, +        public void anonymousAccessDenied(RestRequest request) {, +    void anonymousAccessDenied(String action, TransportMessage<?> message);, +    void anonymousAccessDenied(RestRequest request);, +++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrail.java, +        public void anonymousAccessDenied(String action, TransportMessage<?> message) {, +        public void anonymousAccessDenied(RestRequest request) {, +    void anonymousAccessDenied(String action, TransportMessage<?> message);, +    void anonymousAccessDenied(RestRequest request);, +++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrailService.java, +    public void anonymousAccessDenied(String action, TransportMessage<?> message) {, +            auditTrail.anonymousAccessDenied(action, message);, +    public void anonymousAccessDenied(RestRequest request) {, +            auditTrail.anonymousAccessDenied(request);, +++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrail.java, +        public void anonymousAccessDenied(String action, TransportMessage<?> message) {, +        public void anonymousAccessDenied(RestRequest request) {, +    void anonymousAccessDenied(String action, TransportMessage<?> message);, +    void anonymousAccessDenied(RestRequest request);, +++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrailService.java, +    public void anonymousAccessDenied(String action, TransportMessage<?> message) {, +            auditTrail.anonymousAccessDenied(action, message);, +    public void anonymousAccessDenied(RestRequest request) {, +            auditTrail.anonymousAccessDenied(request);, +++ b/src/main/java/org/elasticsearch/shield/audit/logfile/LoggingAuditTrail.java, +    public void anonymousAccessDenied(String action, TransportMessage<?> message) {, +                logger.debug("{}[transport] [anonymous_access_denied]\t{}, action=[{}], indices=[{}], request=[{}]", prefix, originAttributes(message), action, indices, message.getClass().getSimpleName());, +                logger.warn("{}[transport] [anonymous_access_denied]\t{}, action=[{}], indices=[{}]", prefix, originAttributes(message), action, indices);, +                logger.debug("{}[transport] [anonymous_access_denied]\t{}, action=[{}], request=[{}]", prefix, originAttributes(message), action, message.getClass().getSimpleName());, +                logger.warn("{}[transport] [anonymous_access_denied]\t{}, action=[{}]", prefix, originAttributes(message), action);, +    public void anonymousAccessDenied(RestRequest request) {, +            logger.debug("{}[rest] [anonymous_access_denied]\t{}, uri=[{}], request_body=[{}]", prefix, hostAttributes(request), request.uri(), restRequestContent(request));, +            logger.warn("{}[rest] [anonymous_access_denied]\t{}, uri=[{}]", prefix, hostAttributes(request), request.uri());, +++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrail.java, +        public void anonymousAccessDenied(String action, TransportMessage<?> message) {, +        public void anonymousAccessDenied(RestRequest request) {, +    void anonymousAccessDenied(String action, TransportMessage<?> message);, +    void anonymousAccessDenied(RestRequest request);, +++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrailService.java, +    public void anonymousAccessDenied(String action, TransportMessage<?> message) {, +            auditTrail.anonymousAccessDenied(action, message);, +    public void anonymousAccessDenied(RestRequest request) {, +            auditTrail.anonymousAccessDenied(request);, +++ b/src/main/java/org/elasticsearch/shield/audit/logfile/LoggingAuditTrail.java, +    public void anonymousAccessDenied(String action, TransportMessage<?> message) {, +                logger.debug("{}[transport] [anonymous_access_denied]\t{}, action=[{}], indices=[{}], request=[{}]", prefix, originAttributes(message), action, indices, message.getClass().getSimpleName());, +                logger.warn("{}[transport] [anonymous_access_denied]\t{}, action=[{}], indices=[{}]", prefix, originAttributes(message), action, indices);, +                logger.debug("{}[transport] [anonymous_access_denied]\t{}, action=[{}], request=[{}]", prefix, originAttributes(message), action, message.getClass().getSimpleName());, +                logger.warn("{}[transport] [anonymous_access_denied]\t{}, action=[{}]", prefix, originAttributes(message), action);, +    public void anonymousAccessDenied(RestRequest request) {, +            logger.debug("{}[rest] [anonymous_access_denied]\t{}, uri=[{}], request_body=[{}]", prefix, hostAttributes(request), request.uri(), restRequestContent(request));, +            logger.warn("{}[rest] [anonymous_access_denied]\t{}, uri=[{}]", prefix, hostAttributes(request), request.uri());, +++ b/src/main/java/org/elasticsearch/shield/authc/InternalAuthenticationService.java, +            auditTrail.anonymousAccessDenied(request);, +                auditTrail.anonymousAccessDenied(action, message);, +++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrail.java, +        public void anonymousAccessDenied(String action, TransportMessage<?> message) {, +        public void anonymousAccessDenied(RestRequest request) {, +    void anonymousAccessDenied(String action, TransportMessage<?> message);, +    void anonymousAccessDenied(RestRequest request);, +++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrailService.java, +    public void anonymousAccessDenied(String action, TransportMessage<?> message) {, +            auditTrail.anonymousAccessDenied(action, message);, +    public void anonymousAccessDenied(RestRequest request) {, +            auditTrail.anonymousAccessDenied(request);, +++ b/src/main/java/org/elasticsearch/shield/audit/logfile/LoggingAuditTrail.java, +    public void anonymousAccessDenied(String action, TransportMessage<?> message) {, +                logger.debug("{}[transport] [anonymous_access_denied]\t{}, action=[{}], indices=[{}], request=[{}]", prefix, originAttributes(message), action, indices, message.getClass().getSimpleName());, +                logger.warn("{}[transport] [anonymous_access_denied]\t{}, action=[{}], indices=[{}]", prefix, originAttributes(message), action, indices);, +                logger.debug("{}[transport] [anonymous_access_denied]\t{}, action=[{}], request=[{}]", prefix, originAttributes(message), action, message.getClass().getSimpleName());, +                logger.warn("{}[transport] [anonymous_access_denied]\t{}, action=[{}]", prefix, originAttributes(message), action);, +    public void anonymousAccessDenied(RestRequest request) {, +            logger.debug("{}[rest] [anonymous_access_denied]\t{}, uri=[{}], request_body=[{}]", prefix, hostAttributes(request), request.uri(), restRequestContent(request));, +            logger.warn("{}[rest] [anonymous_access_denied]\t{}, uri=[{}]", prefix, hostAttributes(request), request.uri());, +++ b/src/main/java/org/elasticsearch/shield/authc/InternalAuthenticationService.java, +            auditTrail.anonymousAccessDenied(request);, +                auditTrail.anonymousAccessDenied(action, message);, +++ b/src/test/java/org/elasticsearch/shield/audit/AuditTrailServiceTests.java, +        service.anonymousAccessDenied("_action", message);, +            verify(auditTrail).anonymousAccessDenied("_action", message);, +++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrail.java, +        public void anonymousAccessDenied(String action, TransportMessage<?> message) {, +        public void anonymousAccessDenied(RestRequest request) {, +    void anonymousAccessDenied(String action, TransportMessage<?> message);, +    void anonymousAccessDenied(RestRequest request);, +++ b/src/main/java/org/elasticsearch/shield/audit/AuditTrailService.java, +    public void anonymousAccessDenied(String action, TransportMessage<?> message) {, +            auditTrail.anonymousAccessDenied(action, message);, +    public void anonymousAccessDenied(RestRequest request) {, +            auditTrail.anonymousAccessDenied(request);, +++ b/src/main/java/org/elasticsearch/shield/audit/logfile/LoggingAuditTrail.java, +    public void anonymousAccessDenied(String action, TransportMessage<?> message) {, +                logger.debug("{}[transport] [anonymous_access_denied]\t{}, action=[{}], indices=[{}], request=[{}]", prefix, originAttributes(message), action, indices, message.getClass().getSimpleName());, +                logger.warn("{}[transport] [anonymous_access_denied]\t{}, action=[{}], indices=[{}]", prefix, originAttributes(message), action, indices);, +                logger.debug("{}[transport] [anonymous_access_denied]\t{}, action=[{}], request=[{}]", prefix, originAttributes(message), action, message.getClass().getSimpleName());, +                logger.warn("{}[transport] [anonymous_access_denied]\t{}, action=[{}]", prefix, originAttributes(message), action);, +    public void anonymousAccessDenied(RestRequest request) {, +            logger.debug("{}[rest] [anonymous_access_denied]\t{}, uri=[{}], request_body=[{}]", prefix, hostAttributes(request), request.uri(), restRequestContent(request));, +            logger.warn("{}[rest] [anonymous_access_denied]\t{}, uri=[{}]", prefix, hostAttributes(request), request.uri());]