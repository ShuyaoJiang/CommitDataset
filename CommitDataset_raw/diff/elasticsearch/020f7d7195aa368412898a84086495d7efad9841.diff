[+++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/src/main/java/org/elasticsearch/common/jna/CLibrary.java, +    public static native int munlockall();, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/src/main/java/org/elasticsearch/common/jna/CLibrary.java, +    public static native int munlockall();, +++ b/src/main/java/org/elasticsearch/common/jna/Natives.java, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/src/main/java/org/elasticsearch/common/jna/CLibrary.java, +    public static native int munlockall();, +++ b/src/main/java/org/elasticsearch/common/jna/Natives.java, +++ b/src/main/java/org/elasticsearch/search/lookup/LeafDocLookup.java, +, +import java.security.AccessController;, +import java.security.PrivilegedAction;, +            final FieldMapper mapper = mapperService.smartNameFieldMapper(fieldName, types);, +            // load fielddata on behalf of the script: otherwise it would need additional permissions, +            // to deal with pagedbytes/ramusagestimator/etc, +            scriptValues = AccessController.doPrivileged(new PrivilegedAction<ScriptDocValues>() {, +                @Override, +                public ScriptDocValues run() {, +                    return fieldDataService.getForField(mapper).load(reader).getScriptValues();, +                }, +            });, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/src/main/java/org/elasticsearch/common/jna/CLibrary.java, +    public static native int munlockall();, +++ b/src/main/java/org/elasticsearch/common/jna/Natives.java, +++ b/src/main/java/org/elasticsearch/search/lookup/LeafDocLookup.java, +, +import java.security.AccessController;, +import java.security.PrivilegedAction;, +            final FieldMapper mapper = mapperService.smartNameFieldMapper(fieldName, types);, +            // load fielddata on behalf of the script: otherwise it would need additional permissions, +            // to deal with pagedbytes/ramusagestimator/etc, +            scriptValues = AccessController.doPrivileged(new PrivilegedAction<ScriptDocValues>() {, +                @Override, +                public ScriptDocValues run() {, +                    return fieldDataService.getForField(mapper).load(reader).getScriptValues();, +                }, +            });, +++ b/src/test/java/org/elasticsearch/script/GroovySecurityTests.java, +        client().prepareIndex("test", "doc", "1").setSource("foo", 5, "bar", "baz").setRefresh(true).get();, +        // numeric field access, +        assertSuccess("def foo = doc['foo'].value; if (foo == null) { return 5; }");, +        // string field access, +        assertSuccess("def bar = doc['bar'].value; if (foo == null) { return 5; }");]