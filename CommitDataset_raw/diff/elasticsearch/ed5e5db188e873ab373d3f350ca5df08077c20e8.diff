[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/TransportRolloverAction.java, +            return String.join("-", sourceIndexName.substring(0, numberIndex), String.valueOf(++counter));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/TransportRolloverAction.java, +            return String.join("-", sourceIndexName.substring(0, numberIndex), String.valueOf(++counter));, +++ b/core/src/main/java/org/elasticsearch/env/ESFileStore.java, +        long result = in.getTotalSpace();, +        if (result < 0) {, +            // see https://bugs.openjdk.java.net/browse/JDK-8162520:, +            result = Long.MAX_VALUE;, +        }, +        return result;, +        long result = in.getUsableSpace();, +        if (result < 0) {, +            // see https://bugs.openjdk.java.net/browse/JDK-8162520:, +            result = Long.MAX_VALUE;, +        }, +        return result;, +        long result = in.getUnallocatedSpace();, +        if (result < 0) {, +            // see https://bugs.openjdk.java.net/browse/JDK-8162520:, +            result = Long.MAX_VALUE;, +        }, +        return result;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/TransportRolloverAction.java, +            return String.join("-", sourceIndexName.substring(0, numberIndex), String.valueOf(++counter));, +++ b/core/src/main/java/org/elasticsearch/env/ESFileStore.java, +        long result = in.getTotalSpace();, +        if (result < 0) {, +            // see https://bugs.openjdk.java.net/browse/JDK-8162520:, +            result = Long.MAX_VALUE;, +        }, +        return result;, +        long result = in.getUsableSpace();, +        if (result < 0) {, +            // see https://bugs.openjdk.java.net/browse/JDK-8162520:, +            result = Long.MAX_VALUE;, +        }, +        return result;, +        long result = in.getUnallocatedSpace();, +        if (result < 0) {, +            // see https://bugs.openjdk.java.net/browse/JDK-8162520:, +            result = Long.MAX_VALUE;, +        }, +        return result;, +++ b/core/src/main/java/org/elasticsearch/index/shard/ShardPath.java, +import java.math.BigInteger;, +            BigInteger totFreeSpace = BigInteger.ZERO;, +                totFreeSpace = totFreeSpace.add(BigInteger.valueOf(nodePath.fileStore.getUsableSpace()));, +            BigInteger estShardSizeInBytes = BigInteger.valueOf(avgShardSizeInBytes).max(totFreeSpace.divide(BigInteger.valueOf(20)));, +            BigInteger maxUsableBytes = BigInteger.valueOf(-1);, +, +                BigInteger usableBytes = BigInteger.valueOf(fileStore.getUsableSpace());, +                assert usableBytes.compareTo(BigInteger.ZERO) >= 0;, +                    usableBytes = usableBytes.subtract(estShardSizeInBytes.multiply(BigInteger.valueOf(count)));, +                if (usableBytes.compareTo(maxUsableBytes) > 0) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/TransportRolloverAction.java, +            return String.join("-", sourceIndexName.substring(0, numberIndex), String.valueOf(++counter));, +++ b/core/src/main/java/org/elasticsearch/env/ESFileStore.java, +        long result = in.getTotalSpace();, +        if (result < 0) {, +            // see https://bugs.openjdk.java.net/browse/JDK-8162520:, +            result = Long.MAX_VALUE;, +        }, +        return result;, +        long result = in.getUsableSpace();, +        if (result < 0) {, +            // see https://bugs.openjdk.java.net/browse/JDK-8162520:, +            result = Long.MAX_VALUE;, +        }, +        return result;, +        long result = in.getUnallocatedSpace();, +        if (result < 0) {, +            // see https://bugs.openjdk.java.net/browse/JDK-8162520:, +            result = Long.MAX_VALUE;, +        }, +        return result;, +++ b/core/src/main/java/org/elasticsearch/index/shard/ShardPath.java, +import java.math.BigInteger;, +            BigInteger totFreeSpace = BigInteger.ZERO;, +                totFreeSpace = totFreeSpace.add(BigInteger.valueOf(nodePath.fileStore.getUsableSpace()));, +            BigInteger estShardSizeInBytes = BigInteger.valueOf(avgShardSizeInBytes).max(totFreeSpace.divide(BigInteger.valueOf(20)));, +            BigInteger maxUsableBytes = BigInteger.valueOf(-1);, +, +                BigInteger usableBytes = BigInteger.valueOf(fileStore.getUsableSpace());, +                assert usableBytes.compareTo(BigInteger.ZERO) >= 0;, +                    usableBytes = usableBytes.subtract(estShardSizeInBytes.multiply(BigInteger.valueOf(count)));, +                if (usableBytes.compareTo(maxUsableBytes) > 0) {, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/rollover/RolloverIT.java, +        assertThat(response.getNewIndex(), equalTo("test_index-2"));, +        final IndexMetaData newIndex = state.metaData().index("test_index-2");, +        assertThat(response.getNewIndex(), equalTo("test_index-3"));, +        final IndexMetaData newIndex = state.metaData().index("test_index-3");, +        assertThat(response.getNewIndex(), equalTo("test_index-3"));, +        final IndexMetaData newIndex = state.metaData().index("test_index-3");, +        assertThat(response.getNewIndex(), equalTo("test_index-2"));, +        final IndexMetaData newIndex = state.metaData().index("test_index-2");, +        final IndexMetaData newIndex = state.metaData().index("test_index-1");, +        assertAcked(prepareCreate("test_index-1").get());, +        index("test_index-1", "type1", "1", "field", "value");, +        flush("test_index-0", "test_index-1");]