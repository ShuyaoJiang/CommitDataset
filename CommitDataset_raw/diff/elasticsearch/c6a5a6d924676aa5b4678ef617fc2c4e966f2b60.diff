[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/PutFilterAction.java, +import org.elasticsearch.action.ActionResponse;, +    public static class Response extends ActionResponse implements ToXContentObject {, +        private MlFilter filter;, +, +        Response() {, +        }, +, +        public Response(MlFilter filter) {, +            this.filter = filter;, +        }, +, +        @Override, +        public void readFrom(StreamInput in) throws IOException {, +            super.readFrom(in);, +            filter = new MlFilter(in);, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            super.writeTo(out);, +            filter.writeTo(out);, +        }, +, +        @Override, +        public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +            return filter.toXContent(builder, params);, +        }, +, +        public MlFilter getFilter() {, +            return filter;, +        }, +, +        @Override, +        public int hashCode() {, +            return Objects.hash(filter);, +        }, +, +        @Override, +        public boolean equals(Object obj) {, +            if (obj == null) {, +                return false;, +            }, +            if (getClass() != obj.getClass()) {, +                return false;, +            }, +            Response other = (Response) obj;, +            return Objects.equals(filter, other.filter);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/PutFilterAction.java, +import org.elasticsearch.action.ActionResponse;, +    public static class Response extends ActionResponse implements ToXContentObject {, +        private MlFilter filter;, +, +        Response() {, +        }, +, +        public Response(MlFilter filter) {, +            this.filter = filter;, +        }, +, +        @Override, +        public void readFrom(StreamInput in) throws IOException {, +            super.readFrom(in);, +            filter = new MlFilter(in);, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            super.writeTo(out);, +            filter.writeTo(out);, +        }, +, +        @Override, +        public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +            return filter.toXContent(builder, params);, +        }, +, +        public MlFilter getFilter() {, +            return filter;, +        }, +, +        @Override, +        public int hashCode() {, +            return Objects.hash(filter);, +        }, +, +        @Override, +        public boolean equals(Object obj) {, +            if (obj == null) {, +                return false;, +            }, +            if (getClass() != obj.getClass()) {, +                return false;, +            }, +            Response other = (Response) obj;, +            return Objects.equals(filter, other.filter);, +++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/action/PutCalendarActionResponseTests.java, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.test.AbstractStreamableXContentTestCase;, +import org.elasticsearch.xpack.core.ml.calendars.Calendar;]