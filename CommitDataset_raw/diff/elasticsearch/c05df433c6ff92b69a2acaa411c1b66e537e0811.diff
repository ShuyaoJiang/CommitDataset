[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    private final AnalysisService analysisService;, +, +        this.analysisService = analysisService;, +    public AnalysisService analysisService() {, +        return this.analysisService;, +    }, +, +                termsFilter.addTerm(TypeFieldMapper.TERM_FACTORY.createTerm(type));, +                    bool.add(new FilterClause(new TermFilter(TypeFieldMapper.TERM_FACTORY.createTerm(type)), BooleanClause.Occur.SHOULD));, +            termsFilter.addTerm(TypeFieldMapper.TERM_FACTORY.createTerm(type));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    private final AnalysisService analysisService;, +, +        this.analysisService = analysisService;, +    public AnalysisService analysisService() {, +        return this.analysisService;, +    }, +, +                termsFilter.addTerm(TypeFieldMapper.TERM_FACTORY.createTerm(type));, +                    bool.add(new FilterClause(new TermFilter(TypeFieldMapper.TERM_FACTORY.createTerm(type)), BooleanClause.Occur.SHOULD));, +            termsFilter.addTerm(TypeFieldMapper.TERM_FACTORY.createTerm(type));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/TypeFieldMapper.java, +    public static final Term TERM_FACTORY = new Term(NAME, "");, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    private final AnalysisService analysisService;, +, +        this.analysisService = analysisService;, +    public AnalysisService analysisService() {, +        return this.analysisService;, +    }, +, +                termsFilter.addTerm(TypeFieldMapper.TERM_FACTORY.createTerm(type));, +                    bool.add(new FilterClause(new TermFilter(TypeFieldMapper.TERM_FACTORY.createTerm(type)), BooleanClause.Occur.SHOULD));, +            termsFilter.addTerm(TypeFieldMapper.TERM_FACTORY.createTerm(type));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/TypeFieldMapper.java, +    public static final Term TERM_FACTORY = new Term(NAME, "");, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/UidFieldMapper.java, +    public static final Term TERM_FACTORY = new Term(NAME, "");, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    private final AnalysisService analysisService;, +, +        this.analysisService = analysisService;, +    public AnalysisService analysisService() {, +        return this.analysisService;, +    }, +, +                termsFilter.addTerm(TypeFieldMapper.TERM_FACTORY.createTerm(type));, +                    bool.add(new FilterClause(new TermFilter(TypeFieldMapper.TERM_FACTORY.createTerm(type)), BooleanClause.Occur.SHOULD));, +            termsFilter.addTerm(TypeFieldMapper.TERM_FACTORY.createTerm(type));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/TypeFieldMapper.java, +    public static final Term TERM_FACTORY = new Term(NAME, "");, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/UidFieldMapper.java, +    public static final Term TERM_FACTORY = new Term(NAME, "");, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/AbstractFieldMapper.java, +    protected final Term termFactory;, +, +, +        this.termFactory = new Term(names.indexName(), "");, +        return new TermQuery(termFactory.createTerm(indexedValue(value)));, +        return new FuzzyQuery(termFactory.createTerm(indexedValue(value)), Float.parseFloat(minSim), prefixLength, maxExpansions);, +        return new FuzzyQuery(termFactory.createTerm(value), (float) minSim, prefixLength, maxExpansions);, +        return new TermFilter(termFactory.createTerm(indexedValue(value)));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    private final AnalysisService analysisService;, +, +        this.analysisService = analysisService;, +    public AnalysisService analysisService() {, +        return this.analysisService;, +    }, +, +                termsFilter.addTerm(TypeFieldMapper.TERM_FACTORY.createTerm(type));, +                    bool.add(new FilterClause(new TermFilter(TypeFieldMapper.TERM_FACTORY.createTerm(type)), BooleanClause.Occur.SHOULD));, +            termsFilter.addTerm(TypeFieldMapper.TERM_FACTORY.createTerm(type));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/TypeFieldMapper.java, +    public static final Term TERM_FACTORY = new Term(NAME, "");, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/UidFieldMapper.java, +    public static final Term TERM_FACTORY = new Term(NAME, "");, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/AbstractFieldMapper.java, +    protected final Term termFactory;, +, +, +        this.termFactory = new Term(names.indexName(), "");, +        return new TermQuery(termFactory.createTerm(indexedValue(value)));, +        return new FuzzyQuery(termFactory.createTerm(indexedValue(value)), Float.parseFloat(minSim), prefixLength, maxExpansions);, +        return new FuzzyQuery(termFactory.createTerm(value), (float) minSim, prefixLength, maxExpansions);, +        return new TermFilter(termFactory.createTerm(indexedValue(value)));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/AllFieldMapper.java, +        return new AllTermQuery(termFactory.createTerm(value));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    private final AnalysisService analysisService;, +, +        this.analysisService = analysisService;]