[+++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/xpack/graph/Graph.java, +import org.elasticsearch.rest.RestHandler;, +        if (false == enabled) {, +        return singletonList(new ActionHandler<>(GraphExploreAction.INSTANCE, TransportGraphExploreAction.class));, +    @Override, +    public List<Class<? extends RestHandler>> getRestHandlers() {, +        if (false == enabled) {, +            return emptyList();, +        }, +        return singletonList(RestGraphAction.class);, +    }, +++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/xpack/graph/Graph.java, +import org.elasticsearch.rest.RestHandler;, +        if (false == enabled) {, +        return singletonList(new ActionHandler<>(GraphExploreAction.INSTANCE, TransportGraphExploreAction.class));, +    @Override, +    public List<Class<? extends RestHandler>> getRestHandlers() {, +        if (false == enabled) {, +            return emptyList();, +        }, +        return singletonList(RestGraphAction.class);, +    }, +++ b/elasticsearch/x-pack/license-plugin/src/main/java/org/elasticsearch/license/plugin/Licensing.java, +import org.elasticsearch.rest.RestHandler;, +    @Override, +    public List<Class<? extends RestHandler>> getRestHandlers() {, +        if (isTribeNode) {, +            return emptyList();, +        }, +        return Arrays.asList(RestPutLicenseAction.class,, +                RestGetLicenseAction.class,, +                RestDeleteLicenseAction.class);, +    }, +, +++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/xpack/graph/Graph.java, +import org.elasticsearch.rest.RestHandler;, +        if (false == enabled) {, +        return singletonList(new ActionHandler<>(GraphExploreAction.INSTANCE, TransportGraphExploreAction.class));, +    @Override, +    public List<Class<? extends RestHandler>> getRestHandlers() {, +        if (false == enabled) {, +            return emptyList();, +        }, +        return singletonList(RestGraphAction.class);, +    }, +++ b/elasticsearch/x-pack/license-plugin/src/main/java/org/elasticsearch/license/plugin/Licensing.java, +import org.elasticsearch.rest.RestHandler;, +    @Override, +    public List<Class<? extends RestHandler>> getRestHandlers() {, +        if (isTribeNode) {, +            return emptyList();, +        }, +        return Arrays.asList(RestPutLicenseAction.class,, +                RestGetLicenseAction.class,, +                RestDeleteLicenseAction.class);, +    }, +, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/Monitoring.java, +import org.elasticsearch.rest.RestHandler;, +        if (false == enabled || tribeNode) {, +        return singletonList(new ActionHandler<>(MonitoringBulkAction.INSTANCE, TransportMonitoringBulkAction.class));, +, +    @Override, +    public List<Class<? extends RestHandler>> getRestHandlers() {, +        if (false == enabled || tribeNode) {, +            return emptyList();, +        }, +        return singletonList(RestMonitoringBulkAction.class);, +++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/xpack/graph/Graph.java, +import org.elasticsearch.rest.RestHandler;, +        if (false == enabled) {, +        return singletonList(new ActionHandler<>(GraphExploreAction.INSTANCE, TransportGraphExploreAction.class));, +    @Override, +    public List<Class<? extends RestHandler>> getRestHandlers() {, +        if (false == enabled) {, +            return emptyList();, +        }, +        return singletonList(RestGraphAction.class);, +    }, +++ b/elasticsearch/x-pack/license-plugin/src/main/java/org/elasticsearch/license/plugin/Licensing.java, +import org.elasticsearch.rest.RestHandler;, +    @Override, +    public List<Class<? extends RestHandler>> getRestHandlers() {, +        if (isTribeNode) {, +            return emptyList();, +        }, +        return Arrays.asList(RestPutLicenseAction.class,, +                RestGetLicenseAction.class,, +                RestDeleteLicenseAction.class);, +    }, +, +++ b/elasticsearch/x-pack/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/Monitoring.java, +import org.elasticsearch.rest.RestHandler;, +        if (false == enabled || tribeNode) {, +        return singletonList(new ActionHandler<>(MonitoringBulkAction.INSTANCE, TransportMonitoringBulkAction.class));, +, +    @Override, +    public List<Class<? extends RestHandler>> getRestHandlers() {, +        if (false == enabled || tribeNode) {, +            return emptyList();]