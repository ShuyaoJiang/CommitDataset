[+++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/docs/build.gradle, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/docs/build.gradle, +++ b/docs/en/index.asciidoc, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/docs/build.gradle, +++ b/docs/en/index.asciidoc, +++ b/docs/en/rest-api/ml/put-datafeed.asciidoc, +// TEST[skip:https://github.com/elastic/elasticsearch/pull/27183], +//TESTRESPONSE[s/"query.boost": "1.0"/"query.boost": $body.query.boost/], +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/docs/build.gradle, +++ b/docs/en/index.asciidoc, +++ b/docs/en/rest-api/ml/put-datafeed.asciidoc, +// TEST[skip:https://github.com/elastic/elasticsearch/pull/27183], +//TESTRESPONSE[s/"query.boost": "1.0"/"query.boost": $body.query.boost/], +++ b/docs/en/security/troubleshooting.asciidoc, +* <<trb-security-setup>>, +, +, +[[trb-security-setup]], +=== Setup-passwords command fails due to connection failure, +, +The {ref}/setup-passwords.html[setup-passwords command] sets passwords for, +the built-in users by sending user management API requests. If your cluster uses, +SSL/TLS for the HTTP (REST) interface, the command attempts to establish a, +connection with the HTTPS protocol. If the connection attempt fails, the, +command fails., +, +*Symptoms:*, +, +. {es} is running HTTPS, but the command fails to detect it and returns the, +following errors:, ++, +--, +[source, shell], +------------------------------------------, +Cannot connect to elasticsearch node., +java.net.SocketException: Unexpected end of file from server, +..., +ERROR: Failed to connect to elasticsearch at, +http://127.0.0.1:9200/_xpack/security/_authenticate?pretty., +Is the URL correct and elasticsearch running?, +------------------------------------------, +--, +, +. SSL/TLS is configured, but trust cannot be established. The command returns, +the following errors:, ++, +--, +[source, shell], +------------------------------------------, +SSL connection to, +https://127.0.0.1:9200/_xpack/security/_authenticate?pretty, +failed: sun.security.validator.ValidatorException:, +PKIX path building failed:, +sun.security.provider.certpath.SunCertPathBuilderException:, +unable to find valid certification path to requested target, +Please check the elasticsearch SSL settings under, +xpack.security.http.ssl., +..., +ERROR: Failed to establish SSL connection to elasticsearch at, +https://127.0.0.1:9200/_xpack/security/_authenticate?pretty., +------------------------------------------, +--, +, +. The command fails because hostname verification fails, which results in the, +following errors:, ++, +--, +[source, shell], +------------------------------------------, +SSL connection to]