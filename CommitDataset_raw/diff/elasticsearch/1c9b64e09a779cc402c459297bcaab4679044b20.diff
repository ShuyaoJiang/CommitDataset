[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequest.java, +    private boolean ignoreUnavailable;, +, +    /**, +     * Set to <code>true</code> to ignore unavailable snapshots, instead of throwing an exception., +     * Defaults to <code>false</code>, which means unavailable snapshots cause an exception to be thrown., +     *, +     * @param ignoreUnavailable whether to ignore unavailable snapshots, +     * @return this request, +     */, +    public SnapshotsStatusRequest ignoreUnavailable(boolean ignoreUnavailable) {, +        this.ignoreUnavailable = ignoreUnavailable;, +        return this;, +    }, +, +    /**, +     * Returns whether the request permits unavailable snapshots to be ignored., +     *, +     * @return true if the request will ignore unavailable snapshots, false if it will throw an exception on unavailable snapshots, +     */, +    public boolean ignoreUnavailable() {, +        return ignoreUnavailable;, +    }, +, +        ignoreUnavailable = in.readBoolean();, +        out.writeBoolean(ignoreUnavailable);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequest.java, +    private boolean ignoreUnavailable;, +, +    /**, +     * Set to <code>true</code> to ignore unavailable snapshots, instead of throwing an exception., +     * Defaults to <code>false</code>, which means unavailable snapshots cause an exception to be thrown., +     *, +     * @param ignoreUnavailable whether to ignore unavailable snapshots, +     * @return this request, +     */, +    public SnapshotsStatusRequest ignoreUnavailable(boolean ignoreUnavailable) {, +        this.ignoreUnavailable = ignoreUnavailable;, +        return this;, +    }, +, +    /**, +     * Returns whether the request permits unavailable snapshots to be ignored., +     *, +     * @return true if the request will ignore unavailable snapshots, false if it will throw an exception on unavailable snapshots, +     */, +    public boolean ignoreUnavailable() {, +        return ignoreUnavailable;, +    }, +, +        ignoreUnavailable = in.readBoolean();, +        out.writeBoolean(ignoreUnavailable);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequestBuilder.java, +, +    /**, +     * Set to <code>true</code> to ignore unavailable snapshots, instead of throwing an exception., +     * Defaults to <code>false</code>, which means unavailable snapshots cause an exception to be thrown., +     *, +     * @param ignoreUnavailable whether to ignore unavailable snapshots., +     * @return this builder, +     */, +    public SnapshotsStatusRequestBuilder setIgnoreUnavailable(boolean ignoreUnavailable) {, +        request.ignoreUnavailable(ignoreUnavailable);, +        return this;, +    }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequest.java, +    private boolean ignoreUnavailable;, +, +    /**, +     * Set to <code>true</code> to ignore unavailable snapshots, instead of throwing an exception., +     * Defaults to <code>false</code>, which means unavailable snapshots cause an exception to be thrown., +     *, +     * @param ignoreUnavailable whether to ignore unavailable snapshots, +     * @return this request, +     */, +    public SnapshotsStatusRequest ignoreUnavailable(boolean ignoreUnavailable) {, +        this.ignoreUnavailable = ignoreUnavailable;, +        return this;, +    }, +, +    /**, +     * Returns whether the request permits unavailable snapshots to be ignored., +     *, +     * @return true if the request will ignore unavailable snapshots, false if it will throw an exception on unavailable snapshots, +     */, +    public boolean ignoreUnavailable() {, +        return ignoreUnavailable;, +    }, +, +        ignoreUnavailable = in.readBoolean();, +        out.writeBoolean(ignoreUnavailable);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequestBuilder.java, +, +    /**, +     * Set to <code>true</code> to ignore unavailable snapshots, instead of throwing an exception., +     * Defaults to <code>false</code>, which means unavailable snapshots cause an exception to be thrown., +     *, +     * @param ignoreUnavailable whether to ignore unavailable snapshots., +     * @return this builder, +     */]