[+++ b/elasticsearch/x-pack/marvel/src/main/java/org/elasticsearch/marvel/MarvelPlugin.java, +import java.util.ArrayList;, +import java.util.List;, +    boolean isEnabled() {, +        List<Module> modules = new ArrayList<>();, +, +        // Always load the security integration for tribe nodes., +        // This is useful if the tribe node is connected to a, +        // protected monitored cluster: __marvel_user operations must be allowed., +        if (enabled || isTribeNode(settings) || isTribeClientNode(settings)) {, +            modules.add(new MarvelShieldModule(settings));, +, +        if (enabled) {, +            modules.add(new MarvelModule());, +            modules.add(new LicenseModule());, +            modules.add(new CollectorModule());, +            modules.add(new ExporterModule(settings));, +            modules.add(new RendererModule());, +        }, +        return Collections.unmodifiableList(modules);, +        // By default, marvel is disabled on tribe nodes, +        return settings.getAsBoolean(ENABLED, !isTribeNode(settings) && !isTribeClientNode(settings));, +    }, +, +    static boolean isTribeNode(Settings settings) {, +        if (settings.getGroups("tribe", true).isEmpty() == false) {, +            logger.trace("detecting tribe node");, +            return true;, +        }, +        return false;, +    }, +, +    static boolean isTribeClientNode(Settings settings) {, +        String tribeName = settings.get(TribeService.TRIBE_NAME);, +        if (tribeName != null) {, +            logger.trace("detecting tribe client node [{}]", tribeName);, +            return true;, +        }, +        return false;, +        if (MarvelShieldIntegration.enabled(settings) && module instanceof AuthorizationModule) {, +++ b/elasticsearch/x-pack/marvel/src/main/java/org/elasticsearch/marvel/MarvelPlugin.java, +import java.util.ArrayList;, +import java.util.List;, +    boolean isEnabled() {, +        List<Module> modules = new ArrayList<>();, +, +        // Always load the security integration for tribe nodes., +        // This is useful if the tribe node is connected to a, +        // protected monitored cluster: __marvel_user operations must be allowed., +        if (enabled || isTribeNode(settings) || isTribeClientNode(settings)) {, +            modules.add(new MarvelShieldModule(settings));, +, +        if (enabled) {, +            modules.add(new MarvelModule());, +            modules.add(new LicenseModule());, +            modules.add(new CollectorModule());, +            modules.add(new ExporterModule(settings));, +            modules.add(new RendererModule());, +        }, +        return Collections.unmodifiableList(modules);, +        // By default, marvel is disabled on tribe nodes, +        return settings.getAsBoolean(ENABLED, !isTribeNode(settings) && !isTribeClientNode(settings));, +    }, +, +    static boolean isTribeNode(Settings settings) {, +        if (settings.getGroups("tribe", true).isEmpty() == false) {, +            logger.trace("detecting tribe node");, +            return true;, +        }, +        return false;, +    }, +, +    static boolean isTribeClientNode(Settings settings) {, +        String tribeName = settings.get(TribeService.TRIBE_NAME);, +        if (tribeName != null) {, +            logger.trace("detecting tribe client node [{}]", tribeName);, +            return true;, +        }, +        return false;, +        if (MarvelShieldIntegration.enabled(settings) && module instanceof AuthorizationModule) {, +++ b/elasticsearch/x-pack/marvel/src/main/java/org/elasticsearch/marvel/shield/MarvelShieldModule.java, +import org.elasticsearch.marvel.MarvelPlugin;, +    private final boolean shieldEnabled;, +    private final boolean marvelEnabled;, +        this.shieldEnabled = MarvelShieldIntegration.enabled(settings);, +        this.marvelEnabled = MarvelPlugin.marvelEnabled(settings);;, +        if (marvelEnabled) {, +        }, +        if (shieldEnabled) {, +++ b/elasticsearch/x-pack/marvel/src/main/java/org/elasticsearch/marvel/MarvelPlugin.java, +import java.util.ArrayList;, +import java.util.List;, +    boolean isEnabled() {, +        List<Module> modules = new ArrayList<>();, +, +        // Always load the security integration for tribe nodes., +        // This is useful if the tribe node is connected to a, +        // protected monitored cluster: __marvel_user operations must be allowed., +        if (enabled || isTribeNode(settings) || isTribeClientNode(settings)) {, +            modules.add(new MarvelShieldModule(settings));]