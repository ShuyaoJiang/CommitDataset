[+++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), prefix + "-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), prefix + "-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatIT.java, +                    .put("path.repo", getBwcIndicesPath()), +                URI repoJarPatternUri = new URI("jar:" + getBwcIndicesPath().toUri().toString() + "*.zip!/repo/");, +        Path repoFiles = getBwcIndicesPath();, +        Path repoFile = getBwcIndicesPath().resolve(prefix + "-" + version + ".zip");, +        URI repoFileUri = repoFile.toUri();, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), prefix + "-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatIT.java, +                    .put("path.repo", getBwcIndicesPath()), +                URI repoJarPatternUri = new URI("jar:" + getBwcIndicesPath().toUri().toString() + "*.zip!/repo/");, +        Path repoFiles = getBwcIndicesPath();, +        Path repoFile = getBwcIndicesPath().resolve(prefix + "-" + version + ".zip");, +        URI repoFileUri = repoFile.toUri();, +++ b/core/src/test/java/org/elasticsearch/common/util/MultiDataPathUpgraderTests.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), "index-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), prefix + "-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatIT.java, +                    .put("path.repo", getBwcIndicesPath()), +                URI repoJarPatternUri = new URI("jar:" + getBwcIndicesPath().toUri().toString() + "*.zip!/repo/");, +        Path repoFiles = getBwcIndicesPath();, +        Path repoFile = getBwcIndicesPath().resolve(prefix + "-" + version + ".zip");, +        URI repoFileUri = repoFile.toUri();, +++ b/core/src/test/java/org/elasticsearch/common/util/MultiDataPathUpgraderTests.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), "index-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), "index-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), prefix + "-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatIT.java, +                    .put("path.repo", getBwcIndicesPath()), +                URI repoJarPatternUri = new URI("jar:" + getBwcIndicesPath().toUri().toString() + "*.zip!/repo/");, +        Path repoFiles = getBwcIndicesPath();, +        Path repoFile = getBwcIndicesPath().resolve(prefix + "-" + version + ".zip");, +        URI repoFileUri = repoFile.toUri();, +++ b/core/src/test/java/org/elasticsearch/common/util/MultiDataPathUpgraderTests.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), "index-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), "index-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), "index-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), prefix + "-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatIT.java, +                    .put("path.repo", getBwcIndicesPath()), +                URI repoJarPatternUri = new URI("jar:" + getBwcIndicesPath().toUri().toString() + "*.zip!/repo/");, +        Path repoFiles = getBwcIndicesPath();, +        Path repoFile = getBwcIndicesPath().resolve(prefix + "-" + version + ".zip");, +        URI repoFileUri = repoFile.toUri();, +++ b/core/src/test/java/org/elasticsearch/common/util/MultiDataPathUpgraderTests.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), "index-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), "index-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), "index-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/test/ESTestCase.java, +    public Path getBwcIndicesPath() {, +        return getDataPath("/indices/bwc");, +    }, +, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), prefix + "-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatIT.java, +                    .put("path.repo", getBwcIndicesPath()), +                URI repoJarPatternUri = new URI("jar:" + getBwcIndicesPath().toUri().toString() + "*.zip!/repo/");, +        Path repoFiles = getBwcIndicesPath();, +        Path repoFile = getBwcIndicesPath().resolve(prefix + "-" + version + ".zip");, +        URI repoFileUri = repoFile.toUri();, +++ b/core/src/test/java/org/elasticsearch/common/util/MultiDataPathUpgraderTests.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), "index-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), "index-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), "index-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/test/ESTestCase.java, +    public Path getBwcIndicesPath() {, +        return getDataPath("/indices/bwc");, +    }, +, +++ b/core/src/test/resources/indices/bwc/index-0.90.0.Beta1.zip, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), prefix + "-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatIT.java, +                    .put("path.repo", getBwcIndicesPath()), +                URI repoJarPatternUri = new URI("jar:" + getBwcIndicesPath().toUri().toString() + "*.zip!/repo/");, +        Path repoFiles = getBwcIndicesPath();, +        Path repoFile = getBwcIndicesPath().resolve(prefix + "-" + version + ".zip");, +        URI repoFileUri = repoFile.toUri();, +++ b/core/src/test/java/org/elasticsearch/common/util/MultiDataPathUpgraderTests.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), "index-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), "index-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java, +        try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), "index-*.zip")) {, +++ b/core/src/test/java/org/elasticsearch/test/ESTestCase.java]