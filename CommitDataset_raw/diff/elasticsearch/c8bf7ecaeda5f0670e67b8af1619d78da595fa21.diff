[+++ b/core/src/main/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighter.java, +, +            if (positionSpanQueries.length == 1) {, +                return Collections.singletonList(positionSpanQueries[0]);, +            }, +++ b/core/src/main/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighter.java, +, +            if (positionSpanQueries.length == 1) {, +                return Collections.singletonList(positionSpanQueries[0]);, +            }, +++ b/core/src/test/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighterTests.java, +    public void testMultiPhrasePrefixQuerySingleTerm() throws Exception {, +        final String[] inputs = {, +            "The quick brown fox.", +        };, +        final String[] outputs = {, +            "The quick <b>brown</b> fox.", +        };, +        MultiPhrasePrefixQuery query = new MultiPhrasePrefixQuery();, +        query.add(new Term("text", "bro"));, +        assertHighlightOneDoc("text", inputs, new StandardAnalyzer(), query, Locale.ROOT,, +            BreakIterator.getSentenceInstance(Locale.ROOT), 0, outputs);, +    }, +, +++ b/core/src/main/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighter.java, +, +            if (positionSpanQueries.length == 1) {, +                return Collections.singletonList(positionSpanQueries[0]);, +            }, +++ b/core/src/test/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighterTests.java, +    public void testMultiPhrasePrefixQuerySingleTerm() throws Exception {, +        final String[] inputs = {, +            "The quick brown fox.", +        };, +        final String[] outputs = {, +            "The quick <b>brown</b> fox.", +        };, +        MultiPhrasePrefixQuery query = new MultiPhrasePrefixQuery();, +        query.add(new Term("text", "bro"));, +        assertHighlightOneDoc("text", inputs, new StandardAnalyzer(), query, Locale.ROOT,, +            BreakIterator.getSentenceInstance(Locale.ROOT), 0, outputs);, +    }, +, +++ b/core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java, +                .query(matchPhrasePrefixQuery("field0", "bro")), +            assertHighlight(searchResponse, 0, "field0", 0, 1, equalTo("The quick <x>brown</x> fox jumps over the lazy dog"));, +, +, +            source = searchSource(), +                .query(matchPhrasePrefixQuery("field0", "quick bro")), +                .highlighter(highlight().field("field0").order("score").preTags("<x>").postTags("</x>").highlighterType(type));, +, +            searchResponse = client().search(searchRequest("test").source(source)).actionGet();, +]