[+++ b/core/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java, +        this.includeInAll = mergeWith.includeInAll;, +++ b/core/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java, +        this.includeInAll = mergeWith.includeInAll;, +++ b/core/src/test/java/org/elasticsearch/index/mapper/ObjectMapperTests.java, +import org.elasticsearch.index.mapper.MapperService.MergeReason;, +import org.elasticsearch.index.mapper.ObjectMapper.Dynamic;, +import java.io.IOException;, +, +, +    public void testMerge() throws IOException {, +        String mapping = XContentFactory.jsonBuilder().startObject(), +                .startObject("type"), +                    .startObject("properties"), +                        .startObject("foo"), +                            .field("type", "keyword"), +                        .endObject(), +                    .endObject(), +                .endObject().endObject().string();, +        MapperService mapperService = createIndex("test").mapperService();, +        DocumentMapper mapper = mapperService.merge("type", new CompressedXContent(mapping), MergeReason.MAPPING_UPDATE, false);, +        assertNull(mapper.root().includeInAll());, +        assertNull(mapper.root().dynamic());, +        String update = XContentFactory.jsonBuilder().startObject(), +                .startObject("type"), +                    .field("include_in_all", false), +                    .field("dynamic", "strict"), +                .endObject().endObject().string();, +        mapper = mapperService.merge("type", new CompressedXContent(update), MergeReason.MAPPING_UPDATE, false);, +        assertFalse(mapper.root().includeInAll());, +        assertEquals(Dynamic.STRICT, mapper.root().dynamic());, +    }]