[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, environment.binFile(), "read,readlink");, +        addPath(policy, environment.libFile(), "read,readlink");, +        addPath(policy, environment.pluginsFile(), "read,readlink");, +        addPath(policy, environment.configFile(), "read,readlink");, +        addPath(policy, environment.scriptsFile(), "read,readlink");, +        addPath(policy, environment.tmpFile(), "read,readlink,write,delete");, +        addPath(policy, environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, path, "read,readlink,write,delete");, +            addPath(policy, path, "read,readlink,write,delete");, +            addPath(policy, path, "read,readlink,write,delete");, +    /** Add access to path (and all files underneath it */, +    static void addPath(Permissions policy, Path path, String permissions) throws IOException {, +        // paths may not exist yet, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, environment.binFile(), "read,readlink");, +        addPath(policy, environment.libFile(), "read,readlink");, +        addPath(policy, environment.pluginsFile(), "read,readlink");, +        addPath(policy, environment.configFile(), "read,readlink");, +        addPath(policy, environment.scriptsFile(), "read,readlink");, +        addPath(policy, environment.tmpFile(), "read,readlink,write,delete");, +        addPath(policy, environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, path, "read,readlink,write,delete");, +            addPath(policy, path, "read,readlink,write,delete");, +            addPath(policy, path, "read,readlink,write,delete");, +    /** Add access to path (and all files underneath it */, +    static void addPath(Permissions policy, Path path, String permissions) throws IOException {, +        // paths may not exist yet, +++ b/core/src/main/java/org/elasticsearch/bootstrap/StartupError.java, +        String message = cause.getMessage();, +        if (message == null) {, +            message = "Unknown Error";, +        }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, environment.binFile(), "read,readlink");, +        addPath(policy, environment.libFile(), "read,readlink");, +        addPath(policy, environment.pluginsFile(), "read,readlink");, +        addPath(policy, environment.configFile(), "read,readlink");, +        addPath(policy, environment.scriptsFile(), "read,readlink");, +        addPath(policy, environment.tmpFile(), "read,readlink,write,delete");, +        addPath(policy, environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, path, "read,readlink,write,delete");, +            addPath(policy, path, "read,readlink,write,delete");, +            addPath(policy, path, "read,readlink,write,delete");, +    /** Add access to path (and all files underneath it */, +    static void addPath(Permissions policy, Path path, String permissions) throws IOException {, +        // paths may not exist yet, +++ b/core/src/main/java/org/elasticsearch/bootstrap/StartupError.java, +        String message = cause.getMessage();, +        if (message == null) {, +            message = "Unknown Error";, +        }, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginsService.java, +import org.elasticsearch.bootstrap.Bootstrap;, +          throw new IllegalStateException(ex);, +        ESLogger logger = Loggers.getLogger(Bootstrap.class);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, environment.binFile(), "read,readlink");, +        addPath(policy, environment.libFile(), "read,readlink");, +        addPath(policy, environment.pluginsFile(), "read,readlink");, +        addPath(policy, environment.configFile(), "read,readlink");, +        addPath(policy, environment.scriptsFile(), "read,readlink");, +        addPath(policy, environment.tmpFile(), "read,readlink,write,delete");, +        addPath(policy, environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, path, "read,readlink,write,delete");, +            addPath(policy, path, "read,readlink,write,delete");, +            addPath(policy, path, "read,readlink,write,delete");, +    /** Add access to path (and all files underneath it */, +    static void addPath(Permissions policy, Path path, String permissions) throws IOException {, +        // paths may not exist yet, +++ b/core/src/main/java/org/elasticsearch/bootstrap/StartupError.java, +        String message = cause.getMessage();, +        if (message == null) {, +            message = "Unknown Error";, +        }, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginsService.java, +import org.elasticsearch.bootstrap.Bootstrap;, +          throw new IllegalStateException(ex);, +        ESLogger logger = Loggers.getLogger(Bootstrap.class);, +++ b/core/src/test/java/org/elasticsearch/bootstrap/BootstrapForTesting.java, +                Security.addPath(perms, javaTmpDir, "read,readlink,write,delete");, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, environment.binFile(), "read,readlink");, +        addPath(policy, environment.libFile(), "read,readlink");, +        addPath(policy, environment.pluginsFile(), "read,readlink");, +        addPath(policy, environment.configFile(), "read,readlink");, +        addPath(policy, environment.scriptsFile(), "read,readlink");, +        addPath(policy, environment.tmpFile(), "read,readlink,write,delete");, +        addPath(policy, environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, path, "read,readlink,write,delete");, +            addPath(policy, path, "read,readlink,write,delete");, +            addPath(policy, path, "read,readlink,write,delete");, +    /** Add access to path (and all files underneath it */, +    static void addPath(Permissions policy, Path path, String permissions) throws IOException {, +        // paths may not exist yet]