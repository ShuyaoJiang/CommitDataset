[+++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +        String currentFieldName = parser.currentName();, +                if (MapperService.isMetadataField(context.path().pathAsText(currentFieldName))) {, +                    throw new MapperParsingException("Field [" + currentFieldName + "] is a metadata field and cannot be added inside a document. Use the index API request parameters.");, +                }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +        String currentFieldName = parser.currentName();, +                if (MapperService.isMetadataField(context.path().pathAsText(currentFieldName))) {, +                    throw new MapperParsingException("Field [" + currentFieldName + "] is a metadata field and cannot be added inside a document. Use the index API request parameters.");, +                }, +++ b/core/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java, +, +    public void testDocumentContainsMetadataField() throws Exception {, +        DocumentMapperParser mapperParser = createIndex("test").mapperService().documentMapperParser();, +        String mapping = XContentFactory.jsonBuilder().startObject().startObject("type").endObject().endObject().string();, +        DocumentMapper mapper = mapperParser.parse("type", new CompressedXContent(mapping));, +, +        BytesReference bytes = XContentFactory.jsonBuilder().startObject().field("_ttl", 0).endObject().bytes();, +        MapperParsingException e = expectThrows(MapperParsingException.class, () ->, +            mapper.parse("test", "type", "1", bytes), +        );, +        assertTrue(e.getMessage(), e.getMessage().contains("cannot be added inside a document"));, +, +        BytesReference bytes2 = XContentFactory.jsonBuilder().startObject().field("foo._ttl", 0).endObject().bytes();, +        mapper.parse("test", "type", "1", bytes2); // parses without error, +    }]