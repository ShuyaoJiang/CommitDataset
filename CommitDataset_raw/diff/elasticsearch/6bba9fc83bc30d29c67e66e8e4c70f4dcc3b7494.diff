[+++ b/docs/reference/mapping/types.asciidoc, +<<search-as-you-type>>:: A text-like field optimized for queries to implement as-you-type completion, +, +include::types/search-as-you-type.asciidoc[], +++ b/docs/reference/mapping/types.asciidoc, +<<search-as-you-type>>:: A text-like field optimized for queries to implement as-you-type completion, +, +include::types/search-as-you-type.asciidoc[], +++ b/docs/reference/mapping/types/search-as-you-type.asciidoc, +[[search-as-you-type]], +=== Search as you type datatype, +, +experimental[], +, +The `search_as_you_type` field type is a text-like field that is optimized to, +provide out-of-the-box support for queries that serve an as-you-type completion, +use case. It creates a series of subfields that are analyzed to index terms, +that can be efficiently matched by a query that partially matches the entire, +indexed text value. Both prefix completion (i.e matching terms starting at the, +beginning of the input) and infix completion (i.e. matching terms at any, +position within the input) are supported., +, +When adding a field of this type to a mapping, +, +[source,js], +--------------------------------------------------, +PUT my_index, +{, +  "mappings": {, +    "properties": {, +      "my_field": {, +        "type": "search_as_you_type", +      }, +    }, +  }, +}, +--------------------------------------------------, +// CONSOLE, +, +This creates the following fields, +, +[horizontal], +, +`my_field`::, +, +    Analyzed as configured in the mapping. If an analyzer is not configured,, +    the default analyzer for the index is used, +, +`my_field._2gram`::, +, +    Wraps the analyzer of `my_field` with a shingle token filter of shingle, +    size 2, +, +`my_field._3gram`::, +, +    Wraps the analyzer of `my_field` with a shingle token filter of shingle, +    size 3, +, +`my_field._index_prefix`::, +, +    Wraps the analyzer of `my_field._3gram` with an edge ngram token filter, +, +, +The size of shingles in subfields can be configured with the `max_shingle_size`, +mapping parameter. The default is 3, and valid values for this parameter are, +integer values 2 - 4 inclusive. Shingle subfields will be created for each, +shingle size from 2 up to and including the `max_shingle_size`. The, +`my_field._index_prefix` subfield will always use the analyzer from the shingle, +subfield with the `max_shingle_size` when constructing its own analyzer., +, +Increasing the `max_shingle_size` will improve matches for queries with more, +consecutive terms, at the cost of larger index size. The default, +`max_shingle_size` should usually be sufficient., +, +The same input text is indexed into each of these fields automatically, with, +their differing analysis chains, when an indexed document has a value for the, +root field `my_field`., +, +[source,js], +--------------------------------------------------, +PUT my_index/_doc/1?refresh, +{, +  "my_field": "quick brown fox jump lazy dog", +}, +--------------------------------------------------, +// CONSOLE, +// TEST[continued], +, +The most efficient way of querying to serve a search-as-you-type use case is, +usually a <<query-dsl-multi-match-query,`multi_match`>> query of type, +<<query-dsl-match-bool-prefix-query,`bool_prefix`>> that targets the root, +`search_as_you_type` field and its shingle subfields. This can match the query, +terms in any order, but will score documents higher if they contain the terms, +in order in a shingle subfield., +, +[source,js], +--------------------------------------------------, +GET my_index/_search, +{, +  "query": {]