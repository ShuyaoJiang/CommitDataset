[+++ b/plugins/examples/custom-suggester/src/main/java/org/elasticsearch/example/customsuggester/CustomSuggestion.java, +++ b/plugins/examples/custom-suggester/src/main/java/org/elasticsearch/example/customsuggester/CustomSuggestion.java, +++ b/server/src/main/java/org/elasticsearch/search/suggest/Suggest.java, +        protected final String name;, +        protected final int size;, +                private final Text text;, +                private final Text highlighted;, +        return Strings.toString(this, true, true);, +++ b/plugins/examples/custom-suggester/src/main/java/org/elasticsearch/example/customsuggester/CustomSuggestion.java, +++ b/server/src/main/java/org/elasticsearch/search/suggest/Suggest.java, +        protected final String name;, +        protected final int size;, +                private final Text text;, +                private final Text highlighted;, +        return Strings.toString(this, true, true);, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestion.java, +     * Creates a completion suggestion given its name, size and whether it should skip duplicates, +        private Entry() {}, +            private final Map<String, Set<String>> contexts;, +            private final ScoreDoc doc;, +++ b/plugins/examples/custom-suggester/src/main/java/org/elasticsearch/example/customsuggester/CustomSuggestion.java, +++ b/server/src/main/java/org/elasticsearch/search/suggest/Suggest.java, +        protected final String name;, +        protected final int size;, +                private final Text text;, +                private final Text highlighted;, +        return Strings.toString(this, true, true);, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestion.java, +     * Creates a completion suggestion given its name, size and whether it should skip duplicates, +        private Entry() {}, +            private final Map<String, Set<String>> contexts;, +            private final ScoreDoc doc;, +++ b/server/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestion.java, +            PARSER.declareObjectArray(Entry::addOptions, (p, c) -> Option.fromXContent(p), new ParseField(OPTIONS));, +++ b/plugins/examples/custom-suggester/src/main/java/org/elasticsearch/example/customsuggester/CustomSuggestion.java, +++ b/server/src/main/java/org/elasticsearch/search/suggest/Suggest.java, +        protected final String name;, +        protected final int size;, +                private final Text text;, +                private final Text highlighted;, +        return Strings.toString(this, true, true);, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestion.java, +     * Creates a completion suggestion given its name, size and whether it should skip duplicates, +        private Entry() {}, +            private final Map<String, Set<String>> contexts;, +            private final ScoreDoc doc;, +++ b/server/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestion.java, +            PARSER.declareObjectArray(Entry::addOptions, (p, c) -> Option.fromXContent(p), new ParseField(OPTIONS));, +++ b/server/src/main/java/org/elasticsearch/search/suggest/term/TermSuggestion.java, +        private Entry() {}, +++ b/plugins/examples/custom-suggester/src/main/java/org/elasticsearch/example/customsuggester/CustomSuggestion.java, +++ b/server/src/main/java/org/elasticsearch/search/suggest/Suggest.java, +        protected final String name;, +        protected final int size;, +                private final Text text;, +                private final Text highlighted;, +        return Strings.toString(this, true, true);, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestion.java, +     * Creates a completion suggestion given its name, size and whether it should skip duplicates, +        private Entry() {}, +            private final Map<String, Set<String>> contexts;, +            private final ScoreDoc doc;, +++ b/server/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestion.java, +            PARSER.declareObjectArray(Entry::addOptions, (p, c) -> Option.fromXContent(p), new ParseField(OPTIONS));, +++ b/server/src/main/java/org/elasticsearch/search/suggest/term/TermSuggestion.java, +        private Entry() {}, +++ b/server/src/test/java/org/elasticsearch/search/SearchModuleTests.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregator;]