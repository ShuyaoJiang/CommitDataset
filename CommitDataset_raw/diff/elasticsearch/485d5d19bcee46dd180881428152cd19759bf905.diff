[+++ b/TESTING.asciidoc, +== Skip fetching latest, +, +For some BWC testing scenarios, you want to use the local clone of the, +repository without fetching latest. For these use cases, you can set the system, +property `tests.bwc.git_fetch_latest` to `false` and the BWC builds will skip, +fetching the latest from the remote., +, +++ b/TESTING.asciidoc, +== Skip fetching latest, +, +For some BWC testing scenarios, you want to use the local clone of the, +repository without fetching latest. For these use cases, you can set the system, +property `tests.bwc.git_fetch_latest` to `false` and the BWC builds will skip, +fetching the latest from the remote., +, +++ b/buildSrc/version.properties, +lucene            = 7.3.0, +++ b/TESTING.asciidoc, +== Skip fetching latest, +, +For some BWC testing scenarios, you want to use the local clone of the, +repository without fetching latest. For these use cases, you can set the system, +property `tests.bwc.git_fetch_latest` to `false` and the BWC builds will skip, +fetching the latest from the remote., +, +++ b/buildSrc/version.properties, +lucene            = 7.3.0, +++ b/distribution/bwc/build.gradle, +  final boolean gitFetchLatest, +  final String gitFetchLatestProperty = System.getProperty("tests.bwc.git_fetch_latest", "true"), +  if ("true".equals(gitFetchLatestProperty)) {, +    gitFetchLatest = true, +  } else if ("false".equals(gitFetchLatestProperty)) {, +    gitFetchLatest = false, +  } else {, +    throw new GradleException("tests.bwc.git_fetch_latest must be [true] or [false] but was [" + gitFetchLatestProperty + "]"), +  }, +, +    onlyIf { project.gradle.startParameter.isOffline() == false && gitFetchLatest }, +++ b/TESTING.asciidoc, +== Skip fetching latest, +, +For some BWC testing scenarios, you want to use the local clone of the, +repository without fetching latest. For these use cases, you can set the system, +property `tests.bwc.git_fetch_latest` to `false` and the BWC builds will skip, +fetching the latest from the remote., +, +++ b/buildSrc/version.properties, +lucene            = 7.3.0, +++ b/distribution/bwc/build.gradle, +  final boolean gitFetchLatest, +  final String gitFetchLatestProperty = System.getProperty("tests.bwc.git_fetch_latest", "true"), +  if ("true".equals(gitFetchLatestProperty)) {, +    gitFetchLatest = true, +  } else if ("false".equals(gitFetchLatestProperty)) {, +    gitFetchLatest = false, +  } else {, +    throw new GradleException("tests.bwc.git_fetch_latest must be [true] or [false] but was [" + gitFetchLatestProperty + "]"), +  }, +, +    onlyIf { project.gradle.startParameter.isOffline() == false && gitFetchLatest }, +++ b/docs/Versions.asciidoc, +:lucene_version:        7.3.0, +:lucene_version_path:   7_3_0, +++ b/TESTING.asciidoc, +== Skip fetching latest, +, +For some BWC testing scenarios, you want to use the local clone of the, +repository without fetching latest. For these use cases, you can set the system, +property `tests.bwc.git_fetch_latest` to `false` and the BWC builds will skip, +fetching the latest from the remote., +, +++ b/buildSrc/version.properties, +lucene            = 7.3.0, +++ b/distribution/bwc/build.gradle, +  final boolean gitFetchLatest, +  final String gitFetchLatestProperty = System.getProperty("tests.bwc.git_fetch_latest", "true"), +  if ("true".equals(gitFetchLatestProperty)) {, +    gitFetchLatest = true, +  } else if ("false".equals(gitFetchLatestProperty)) {, +    gitFetchLatest = false, +  } else {, +    throw new GradleException("tests.bwc.git_fetch_latest must be [true] or [false] but was [" + gitFetchLatestProperty + "]"), +  }, +, +    onlyIf { project.gradle.startParameter.isOffline() == false && gitFetchLatest }, +++ b/docs/Versions.asciidoc, +:lucene_version:        7.3.0, +:lucene_version_path:   7_3_0, +++ b/modules/lang-expression/licenses/lucene-expressions-7.3.0.jar.sha1, +cb82d9db3043bbd25b4d0eb5022ed1e529c936d3, +++ b/TESTING.asciidoc, +== Skip fetching latest, +, +For some BWC testing scenarios, you want to use the local clone of the, +repository without fetching latest. For these use cases, you can set the system, +property `tests.bwc.git_fetch_latest` to `false` and the BWC builds will skip, +fetching the latest from the remote., +]