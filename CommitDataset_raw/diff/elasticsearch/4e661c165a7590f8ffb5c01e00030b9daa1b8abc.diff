[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/geo/GeoBoundingBoxFilter.java, +        //checks to see if bounding box crosses 180 degrees, +                            double lat = lats[i];, +                            double lon = lons[i];, +                            if (lon < 0) {, +                                if (-180.0 <= lon && bottomRight.lon >= lon, +                                        && topLeft.lat >= lat && bottomRight.lat <= lat) {, +                            } else {, +                                if (topLeft.lon <= lon && 180 >= lon, +                                        && topLeft.lat >= lat && bottomRight.lat <= lat) {, +                                    return true;, +                                }, +                            }, +                        if (lon < 0) {, +                            if (-180.0 <= lon && bottomRight.lon >= lon, +                        } else {, +                            if (topLeft.lon <= lon && 180 >= lon, +                                    && topLeft.lat >= lat && bottomRight.lat <= lat) {, +                                return true;, +                            }, +                        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/geo/GeoBoundingBoxFilter.java, +        //checks to see if bounding box crosses 180 degrees, +                            double lat = lats[i];, +                            double lon = lons[i];, +                            if (lon < 0) {, +                                if (-180.0 <= lon && bottomRight.lon >= lon, +                                        && topLeft.lat >= lat && bottomRight.lat <= lat) {, +                            } else {, +                                if (topLeft.lon <= lon && 180 >= lon, +                                        && topLeft.lat >= lat && bottomRight.lat <= lat) {, +                                    return true;, +                                }, +                            }, +                        if (lon < 0) {, +                            if (-180.0 <= lon && bottomRight.lon >= lon, +                        } else {, +                            if (topLeft.lon <= lon && 180 >= lon, +                                    && topLeft.lat >= lat && bottomRight.lat <= lat) {, +                                return true;, +                            }, +                        }, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/search/geo/GeoBoundingBoxTests.java, +import static org.elasticsearch.common.settings.ImmutableSettings.*;, +, +    @Test public void limitsBoundingBoxTest() throws Exception {, +        try {, +            client.admin().indices().prepareDelete("test").execute().actionGet();, +        } catch (Exception e) {, +            // ignore, +        }, +        client.admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("number_of_shards", "1")).execute().actionGet();, +        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();, +, +        client.prepareIndex("test", "type1", "1").setSource(jsonBuilder().startObject(), +                .startObject("location").field("lat", 40).field("lon", -20).endObject(), +                .endObject()).execute().actionGet();, +, +        client.prepareIndex("test", "type1", "2").setSource(jsonBuilder().startObject(), +                .startObject("location").field("lat", 40).field("lon", -10).endObject(), +                .endObject()).execute().actionGet();, +, +        client.prepareIndex("test", "type1", "3").setSource(jsonBuilder().startObject(), +                .startObject("location").field("lat", 40).field("lon", 10).endObject(), +                .endObject()).execute().actionGet();, +, +        client.prepareIndex("test", "type1", "4").setSource(jsonBuilder().startObject(), +                .startObject("location").field("lat", 40).field("lon", 20).endObject(), +                .endObject()).execute().actionGet();, +, +        client.prepareIndex("test", "type1", "5").setSource(jsonBuilder().startObject(), +                .startObject("location").field("lat", 10).field("lon", -170).endObject(), +                .endObject()).execute().actionGet();, +, +        client.prepareIndex("test", "type1", "6").setSource(jsonBuilder().startObject(), +                .startObject("location").field("lat", 0).field("lon", -170).endObject(), +                .endObject()).execute().actionGet();, +, +        client.prepareIndex("test", "type1", "7").setSource(jsonBuilder().startObject(), +                .startObject("location").field("lat", -10).field("lon", -170).endObject(), +                .endObject()).execute().actionGet();, +, +        client.prepareIndex("test", "type1", "8").setSource(jsonBuilder().startObject(), +                .startObject("location").field("lat", 10).field("lon", 170).endObject(), +                .endObject()).execute().actionGet();, +, +        client.prepareIndex("test", "type1", "9").setSource(jsonBuilder().startObject(), +                .startObject("location").field("lat", 0).field("lon", 170).endObject(), +                .endObject()).execute().actionGet();, +, +        client.prepareIndex("test", "type1", "10").setSource(jsonBuilder().startObject(), +                .startObject("location").field("lat", -10).field("lon", 170).endObject(), +                .endObject()).execute().actionGet();, +, +        client.admin().indices().prepareRefresh().execute().actionGet();, +, +        SearchResponse searchResponse = client.prepareSearch(), +                .setQuery(filtered(matchAllQuery(), geoBoundingBoxFilter("location").topLeft(41, -11).bottomRight(40, 9))), +                .execute().actionGet();, +        assertThat(searchResponse.hits().getTotalHits(), equalTo(1l));]