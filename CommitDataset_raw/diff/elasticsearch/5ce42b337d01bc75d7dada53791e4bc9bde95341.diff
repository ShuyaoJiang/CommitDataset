[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/single/shard/TransportShardSingleOperationAction.java, +import org.elasticsearch.common.Nullable;, +            perform(null);, +        private void perform(@Nullable final Exception lastException) {, +            final ShardRouting shardRouting = shardIt.nextActiveOrNull();, +            if (shardRouting == null) {, +                Exception failure = lastException;, +                if (failure == null) {, +                    failure = new NoShardAvailableActionException(shardIt.shardId(), "No shard available for [" + request + "]");, +                } else {, +                    if (logger.isDebugEnabled()) {, +                        logger.debug(shardIt.shardId() + ": Failed to get [{}]", failure, request);, +                    }, +                }, +                listener.onFailure(failure);, +                return;, +            }, +, +            if (shardRouting.currentNodeId().equals(nodes.localNodeId())) {, +                                Response response = shardOperation(request, shardRouting.id());, +                                onFailure(shardRouting, e);, +                        final Response response = shardOperation(request, shardRouting.id());, +                        onFailure(shardRouting, e);, +            } else {, +                DiscoveryNode node = nodes.get(shardRouting.currentNodeId());, +                transportService.sendRequest(node, transportShardAction, new ShardSingleOperationRequest(request, shardRouting.id()), new BaseTransportResponseHandler<Response>() {, +                        onFailure(shardRouting, exp);]