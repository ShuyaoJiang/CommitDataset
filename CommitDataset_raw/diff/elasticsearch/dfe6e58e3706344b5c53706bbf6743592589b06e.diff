[+++ b/src/main/java/org/apache/lucene/search/PublicTermsFilter.java, +import org.elasticsearch.common.lucene.Lucene;, +            int[] docs = new int[Lucene.BATCH_ENUM_DOCS];, +            int[] freqs = new int[Lucene.BATCH_ENUM_DOCS];, +++ b/src/main/java/org/apache/lucene/search/PublicTermsFilter.java, +import org.elasticsearch.common.lucene.Lucene;, +            int[] docs = new int[Lucene.BATCH_ENUM_DOCS];, +            int[] freqs = new int[Lucene.BATCH_ENUM_DOCS];, +++ b/src/main/java/org/apache/lucene/search/XTermsFilter.java, +import org.elasticsearch.common.lucene.Lucene;, +            int[] docs = new int[Lucene.BATCH_ENUM_DOCS];, +            int[] freqs = new int[Lucene.BATCH_ENUM_DOCS];, +++ b/src/main/java/org/apache/lucene/search/PublicTermsFilter.java, +import org.elasticsearch.common.lucene.Lucene;, +            int[] docs = new int[Lucene.BATCH_ENUM_DOCS];, +            int[] freqs = new int[Lucene.BATCH_ENUM_DOCS];, +++ b/src/main/java/org/apache/lucene/search/XTermsFilter.java, +import org.elasticsearch.common.lucene.Lucene;, +            int[] docs = new int[Lucene.BATCH_ENUM_DOCS];, +            int[] freqs = new int[Lucene.BATCH_ENUM_DOCS];, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final int BATCH_ENUM_DOCS = 32;, +, +++ b/src/main/java/org/apache/lucene/search/PublicTermsFilter.java, +import org.elasticsearch.common.lucene.Lucene;, +            int[] docs = new int[Lucene.BATCH_ENUM_DOCS];, +            int[] freqs = new int[Lucene.BATCH_ENUM_DOCS];, +++ b/src/main/java/org/apache/lucene/search/XTermsFilter.java, +import org.elasticsearch.common.lucene.Lucene;, +            int[] docs = new int[Lucene.BATCH_ENUM_DOCS];, +            int[] freqs = new int[Lucene.BATCH_ENUM_DOCS];, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final int BATCH_ENUM_DOCS = 32;, +, +++ b/src/main/java/org/elasticsearch/common/lucene/search/TermFilter.java, +import org.elasticsearch.common.lucene.Lucene;, +            int[] docs = new int[Lucene.BATCH_ENUM_DOCS];, +            int[] freqs = new int[Lucene.BATCH_ENUM_DOCS];, +++ b/src/main/java/org/apache/lucene/search/PublicTermsFilter.java, +import org.elasticsearch.common.lucene.Lucene;, +            int[] docs = new int[Lucene.BATCH_ENUM_DOCS];, +            int[] freqs = new int[Lucene.BATCH_ENUM_DOCS];, +++ b/src/main/java/org/apache/lucene/search/XTermsFilter.java, +import org.elasticsearch.common.lucene.Lucene;, +            int[] docs = new int[Lucene.BATCH_ENUM_DOCS];, +            int[] freqs = new int[Lucene.BATCH_ENUM_DOCS];, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final int BATCH_ENUM_DOCS = 32;, +, +++ b/src/main/java/org/elasticsearch/common/lucene/search/TermFilter.java, +import org.elasticsearch.common.lucene.Lucene;, +            int[] docs = new int[Lucene.BATCH_ENUM_DOCS];, +            int[] freqs = new int[Lucene.BATCH_ENUM_DOCS];, +++ b/src/main/java/org/elasticsearch/index/search/UidFilter.java, +import java.util.Arrays;, +import java.util.Collection;, +import java.util.List;, +    private final Term[] uids;, +        this.uids = new Term[types.size() * ids.size()];, +        int i = 0;, +                uids[i++] = UidFieldMapper.TERM_FACTORY.createTerm(Uid.createUid(type, id));, +        if (this.uids.length > 1) {, +            Arrays.sort(this.uids);, +        }, +                // no need for batching, its on the UID, there will be only one doc, +        StringBuilder builder = new StringBuilder();, +        for (Term term : uids) {, +            if (builder.length() > 0) {, +                builder.append(' ');, +            }, +            builder.append(term);, +        }, +        return builder.toString();, +++ b/src/main/java/org/apache/lucene/search/PublicTermsFilter.java, +import org.elasticsearch.common.lucene.Lucene;, +            int[] docs = new int[Lucene.BATCH_ENUM_DOCS];, +            int[] freqs = new int[Lucene.BATCH_ENUM_DOCS];, +++ b/src/main/java/org/apache/lucene/search/XTermsFilter.java, +import org.elasticsearch.common.lucene.Lucene;, +            int[] docs = new int[Lucene.BATCH_ENUM_DOCS];, +            int[] freqs = new int[Lucene.BATCH_ENUM_DOCS];, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final int BATCH_ENUM_DOCS = 32;, +, +++ b/src/main/java/org/elasticsearch/common/lucene/search/TermFilter.java, +import org.elasticsearch.common.lucene.Lucene;, +            int[] docs = new int[Lucene.BATCH_ENUM_DOCS];, +            int[] freqs = new int[Lucene.BATCH_ENUM_DOCS];, +++ b/src/main/java/org/elasticsearch/index/search/UidFilter.java, +import java.util.Arrays;, +import java.util.Collection;, +import java.util.List;, +    private final Term[] uids;, +        this.uids = new Term[types.size() * ids.size()];, +        int i = 0;, +                uids[i++] = UidFieldMapper.TERM_FACTORY.createTerm(Uid.createUid(type, id));, +        if (this.uids.length > 1) {, +            Arrays.sort(this.uids);, +        }, +                // no need for batching, its on the UID, there will be only one doc]