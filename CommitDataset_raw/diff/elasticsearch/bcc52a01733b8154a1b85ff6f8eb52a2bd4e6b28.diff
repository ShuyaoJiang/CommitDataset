[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/merge/policy/LogByteSizeMergePolicyProvider.java, +    private final boolean calibrateSizeByDeletes;, +        this.calibrateSizeByDeletes = componentSettings.getAsBoolean("calibrateSizeByDeletes", false);, +        logger.debug("Using [LogByteSize] merge policy with mergeFactor[{}], minMergeSize[{}], maxMergeSize[{}], maxMergeDocs[{}] useCompoundFile[{}], calibrateSizeByDeletes[{}]",, +                new Object[]{mergeFactor, minMergeSize, maxMergeSize, maxMergeDocs, useCompoundFile, calibrateSizeByDeletes});, +        mergePolicy.setCalibrateSizeByDeletes(calibrateSizeByDeletes);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/merge/policy/LogByteSizeMergePolicyProvider.java, +    private final boolean calibrateSizeByDeletes;, +        this.calibrateSizeByDeletes = componentSettings.getAsBoolean("calibrateSizeByDeletes", false);, +        logger.debug("Using [LogByteSize] merge policy with mergeFactor[{}], minMergeSize[{}], maxMergeSize[{}], maxMergeDocs[{}] useCompoundFile[{}], calibrateSizeByDeletes[{}]",, +                new Object[]{mergeFactor, minMergeSize, maxMergeSize, maxMergeDocs, useCompoundFile, calibrateSizeByDeletes});, +        mergePolicy.setCalibrateSizeByDeletes(calibrateSizeByDeletes);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/merge/policy/LogDocMergePolicyProvider.java, +    private final boolean calibrateSizeByDeletes;, +        this.calibrateSizeByDeletes = componentSettings.getAsBoolean("calibrateSizeByDeletes", false);, +        logger.debug("Using [LogDoc] merge policy with mergeFactor[{}] minMergeDocs[{}], maxMergeDocs[{}], useCompoundFile[{}], calibrateSizeByDeletes[{}]",, +                new Object[]{mergeFactor, minMergeDocs, maxMergeDocs, useCompoundFile, calibrateSizeByDeletes});, +        mergePolicy.setCalibrateSizeByDeletes(calibrateSizeByDeletes);]