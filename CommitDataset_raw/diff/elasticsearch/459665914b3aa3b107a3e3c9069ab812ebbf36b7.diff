[+++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.apache.lucene.util.IOUtils;, +import java.io.Closeable;, +            final List<Closeable> resourcesToClose = new ArrayList<>();, +            resourcesToClose.add(() -> ThreadPool.terminate(threadPool, 10, TimeUnit.SECONDS));, +                resourcesToClose.add(circuitBreakerService);, +                BigArrays bigArrays = new BigArrays(settings, circuitBreakerService);, +                resourcesToClose.add(bigArrays);, +                    b.bind(BigArrays.class).toInstance(bigArrays);, +                resourcesToClose.clear();, +                IOUtils.closeWhileHandlingException(resourcesToClose);, +        List<Closeable> closeables = new ArrayList<>();, +        closeables.add(injector.getInstance(TransportClientNodesService.class));, +        closeables.add(injector.getInstance(TransportService.class));, +            closeables.add(injector.getInstance(plugin));, +        closeables.add(() -> ThreadPool.terminate(injector.getInstance(ThreadPool.class), 10, TimeUnit.SECONDS));, +        closeables.add(injector.getInstance(BigArrays.class));, +        IOUtils.closeWhileHandlingException(closeables);, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.apache.lucene.util.IOUtils;, +import java.io.Closeable;, +            final List<Closeable> resourcesToClose = new ArrayList<>();, +            resourcesToClose.add(() -> ThreadPool.terminate(threadPool, 10, TimeUnit.SECONDS));, +                resourcesToClose.add(circuitBreakerService);, +                BigArrays bigArrays = new BigArrays(settings, circuitBreakerService);, +                resourcesToClose.add(bigArrays);, +                    b.bind(BigArrays.class).toInstance(bigArrays);, +                resourcesToClose.clear();, +                IOUtils.closeWhileHandlingException(resourcesToClose);, +        List<Closeable> closeables = new ArrayList<>();, +        closeables.add(injector.getInstance(TransportClientNodesService.class));, +        closeables.add(injector.getInstance(TransportService.class));, +            closeables.add(injector.getInstance(plugin));, +        closeables.add(() -> ThreadPool.terminate(injector.getInstance(ThreadPool.class), 10, TimeUnit.SECONDS));, +        closeables.add(injector.getInstance(BigArrays.class));, +        IOUtils.closeWhileHandlingException(closeables);, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +import java.io.Closeable;, +public class TransportClientNodesService extends AbstractComponent implements Closeable {, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.apache.lucene.util.IOUtils;, +import java.io.Closeable;, +            final List<Closeable> resourcesToClose = new ArrayList<>();, +            resourcesToClose.add(() -> ThreadPool.terminate(threadPool, 10, TimeUnit.SECONDS));, +                resourcesToClose.add(circuitBreakerService);, +                BigArrays bigArrays = new BigArrays(settings, circuitBreakerService);, +                resourcesToClose.add(bigArrays);, +                    b.bind(BigArrays.class).toInstance(bigArrays);, +                resourcesToClose.clear();, +                IOUtils.closeWhileHandlingException(resourcesToClose);, +        List<Closeable> closeables = new ArrayList<>();, +        closeables.add(injector.getInstance(TransportClientNodesService.class));, +        closeables.add(injector.getInstance(TransportService.class));, +            closeables.add(injector.getInstance(plugin));, +        closeables.add(() -> ThreadPool.terminate(injector.getInstance(ThreadPool.class), 10, TimeUnit.SECONDS));, +        closeables.add(injector.getInstance(BigArrays.class));, +        IOUtils.closeWhileHandlingException(closeables);, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +import java.io.Closeable;, +public class TransportClientNodesService extends AbstractComponent implements Closeable {, +++ b/core/src/main/java/org/elasticsearch/common/util/BigArrays.java, +    // public for tests, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.apache.lucene.util.IOUtils;, +import java.io.Closeable;, +            final List<Closeable> resourcesToClose = new ArrayList<>();, +            resourcesToClose.add(() -> ThreadPool.terminate(threadPool, 10, TimeUnit.SECONDS));, +                resourcesToClose.add(circuitBreakerService);, +                BigArrays bigArrays = new BigArrays(settings, circuitBreakerService);, +                resourcesToClose.add(bigArrays);, +                    b.bind(BigArrays.class).toInstance(bigArrays);, +                resourcesToClose.clear();, +                IOUtils.closeWhileHandlingException(resourcesToClose);, +        List<Closeable> closeables = new ArrayList<>();, +        closeables.add(injector.getInstance(TransportClientNodesService.class));, +        closeables.add(injector.getInstance(TransportService.class));, +            closeables.add(injector.getInstance(plugin));, +        closeables.add(() -> ThreadPool.terminate(injector.getInstance(ThreadPool.class), 10, TimeUnit.SECONDS));, +        closeables.add(injector.getInstance(BigArrays.class));, +        IOUtils.closeWhileHandlingException(closeables);, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +import java.io.Closeable;, +public class TransportClientNodesService extends AbstractComponent implements Closeable {, +++ b/core/src/main/java/org/elasticsearch/common/util/BigArrays.java, +    // public for tests, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.apache.lucene.util.IOUtils;, +import java.io.Closeable;, +            final List<Closeable> resourcesToClose = new ArrayList<>();, +            resourcesToClose.add(() -> ThreadPool.terminate(threadPool, 10, TimeUnit.SECONDS));, +                resourcesToClose.add(circuitBreakerService);, +                BigArrays bigArrays = new BigArrays(settings, circuitBreakerService);, +                resourcesToClose.add(bigArrays);, +                    b.bind(BigArrays.class).toInstance(bigArrays);, +                resourcesToClose.clear();, +                IOUtils.closeWhileHandlingException(resourcesToClose);, +        List<Closeable> closeables = new ArrayList<>();, +        closeables.add(injector.getInstance(TransportClientNodesService.class));, +        closeables.add(injector.getInstance(TransportService.class));]