[+++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGain.java, +            double idcg = computeDCG(allRatings.subList(0, Math.min(ratingsInSearchHits.size(), allRatings.size())));, +            if (idcg > 0) {, +            } else {, +                dcg = 0;, +            }, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGain.java, +            double idcg = computeDCG(allRatings.subList(0, Math.min(ratingsInSearchHits.size(), allRatings.size())));, +            if (idcg > 0) {, +            } else {, +                dcg = 0;, +            }, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/MeanReciprocalRank.java, +        /**, +         * the ranking of the first relevant document, or -1 if no relevant document was, +         * found, +         */, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGain.java, +            double idcg = computeDCG(allRatings.subList(0, Math.min(ratingsInSearchHits.size(), allRatings.size())));, +            if (idcg > 0) {, +            } else {, +                dcg = 0;, +            }, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/MeanReciprocalRank.java, +        /**, +         * the ranking of the first relevant document, or -1 if no relevant document was, +         * found, +         */, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java, +    /**, +     * test that metric returns 0.0 when there are no search results, +     */, +    public void testNoResults() throws Exception {, +        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };, +        List<RatedDocument> ratedDocs = new ArrayList<>();, +        for (int i = 0; i < 6; i++) {, +            if (i < relevanceRatings.length) {, +                if (relevanceRatings[i] != null) {, +                    ratedDocs.add(new RatedDocument("index", Integer.toString(i), relevanceRatings[i]));, +                }, +            }, +        }, +        SearchHit[] hits = new SearchHit[0];, +        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();, +        EvalQueryQuality result = dcg.evaluate("id", hits, ratedDocs);, +        assertEquals(0.0d, result.getQualityLevel(), DELTA);, +        assertEquals(0, filterUnknownDocuments(result.getHitsAndRatings()).size());, +, +        // also check normalized, +        dcg = new DiscountedCumulativeGain(true, null, 10);, +        result = dcg.evaluate("id", hits, ratedDocs);, +        assertEquals(0.0d, result.getQualityLevel(), DELTA);, +        assertEquals(0, filterUnknownDocuments(result.getHitsAndRatings()).size());, +    }, +, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGain.java, +            double idcg = computeDCG(allRatings.subList(0, Math.min(ratingsInSearchHits.size(), allRatings.size())));, +            if (idcg > 0) {, +            } else {, +                dcg = 0;, +            }, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/MeanReciprocalRank.java, +        /**, +         * the ranking of the first relevant document, or -1 if no relevant document was, +         * found, +         */, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java, +    /**, +     * test that metric returns 0.0 when there are no search results, +     */, +    public void testNoResults() throws Exception {, +        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };, +        List<RatedDocument> ratedDocs = new ArrayList<>();, +        for (int i = 0; i < 6; i++) {, +            if (i < relevanceRatings.length) {, +                if (relevanceRatings[i] != null) {, +                    ratedDocs.add(new RatedDocument("index", Integer.toString(i), relevanceRatings[i]));, +                }, +            }, +        }, +        SearchHit[] hits = new SearchHit[0];, +        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();, +        EvalQueryQuality result = dcg.evaluate("id", hits, ratedDocs);, +        assertEquals(0.0d, result.getQualityLevel(), DELTA);, +        assertEquals(0, filterUnknownDocuments(result.getHitsAndRatings()).size());, +, +        // also check normalized, +        dcg = new DiscountedCumulativeGain(true, null, 10);, +        result = dcg.evaluate("id", hits, ratedDocs);, +        assertEquals(0.0d, result.getQualityLevel(), DELTA);, +        assertEquals(0, filterUnknownDocuments(result.getHitsAndRatings()).size());, +    }, +, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/MeanReciprocalRankTests.java, +    public void testNoResults() throws Exception {, +        SearchHit[] hits = new SearchHit[0];, +        EvalQueryQuality evaluated = (new MeanReciprocalRank()).evaluate("id", hits, Collections.emptyList());, +        assertEquals(0.0d, evaluated.getQualityLevel(), 0.00001);, +        assertEquals(-1, ((MeanReciprocalRank.Breakdown) evaluated.getMetricDetails()).getFirstRelevantRank());, +    }]