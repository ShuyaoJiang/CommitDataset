[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.GetDatafeedStatsRequest;, +    static Request getDatafeedStats(GetDatafeedStatsRequest getDatafeedStatsRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("datafeeds"), +            .addPathPart(Strings.collectionToCommaDelimitedString(getDatafeedStatsRequest.getDatafeedIds())), +            .addPathPartAsIs("_stats"), +            .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);, +, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        if (getDatafeedStatsRequest.isAllowNoDatafeeds() != null) {, +            params.putParam("allow_no_datafeeds", Boolean.toString(getDatafeedStatsRequest.isAllowNoDatafeeds()));, +        }, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.GetDatafeedStatsRequest;, +    static Request getDatafeedStats(GetDatafeedStatsRequest getDatafeedStatsRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("datafeeds"), +            .addPathPart(Strings.collectionToCommaDelimitedString(getDatafeedStatsRequest.getDatafeedIds())), +            .addPathPartAsIs("_stats"), +            .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);, +, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        if (getDatafeedStatsRequest.isAllowNoDatafeeds() != null) {, +            params.putParam("allow_no_datafeeds", Boolean.toString(getDatafeedStatsRequest.isAllowNoDatafeeds()));, +        }, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.GetDatafeedStatsRequest;, +import org.elasticsearch.client.ml.GetDatafeedStatsResponse;, +     * Gets usage statistics for one or more Machine Learning jobs, asynchronously., +     * Gets statistics for one or more Machine Learning datafeeds, +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html">Get datafeed stats docs</a>, +     *, +     * @param request {@link GetDatafeedStatsRequest} Request containing a list of datafeedId(s) and additional options, +     * @param options Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return {@link GetDatafeedStatsResponse} response object containing, +     * the {@link org.elasticsearch.client.ml.datafeed.DatafeedStats} objects and the number of datafeeds found, +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public GetDatafeedStatsResponse getDatafeedStats(GetDatafeedStatsRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +            MLRequestConverters::getDatafeedStats,, +            options,, +            GetDatafeedStatsResponse::fromXContent,, +            Collections.emptySet());, +    }, +, +    /**, +     * Gets statistics for one or more Machine Learning datafeeds, asynchronously., +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html">Get datafeed stats docs</a>, +     *, +     * @param request  {@link GetDatafeedStatsRequest} Request containing a list of datafeedId(s) and additional options, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified with {@link GetDatafeedStatsResponse} upon request completion, +     */, +    public void getDatafeedStatsAsync(GetDatafeedStatsRequest request,, +                                      RequestOptions options,, +                                      ActionListener<GetDatafeedStatsResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +            MLRequestConverters::getDatafeedStats,, +            options,, +            GetDatafeedStatsResponse::fromXContent,, +            listener,, +            Collections.emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.GetDatafeedStatsRequest;, +    static Request getDatafeedStats(GetDatafeedStatsRequest getDatafeedStatsRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("datafeeds"), +            .addPathPart(Strings.collectionToCommaDelimitedString(getDatafeedStatsRequest.getDatafeedIds())), +            .addPathPartAsIs("_stats"), +            .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);, +, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        if (getDatafeedStatsRequest.isAllowNoDatafeeds() != null) {, +            params.putParam("allow_no_datafeeds", Boolean.toString(getDatafeedStatsRequest.isAllowNoDatafeeds()));, +        }, +        return request;]