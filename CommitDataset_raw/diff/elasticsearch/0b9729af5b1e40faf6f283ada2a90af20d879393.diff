[+++ b/core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java, +    private boolean create = false;, +, +    /**, +     * Iff set to <code>true</code> the engine will create a new lucene index when opening the engine., +     * Otherwise the lucene index writer is opened in append mode. The default is <code>false</code>, +     */, +    public void setCreate(boolean create) {, +        this.create = create;, +    }, +, +    /**, +     * Iff <code>true</code> the engine should create a new lucene index when opening the engine., +     * Otherwise the lucene index writer should be opened in append mode. The default is <code>false</code>, +     */, +    public boolean isCreate() {, +        return create;, +    }, +++ b/core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java, +    private boolean create = false;, +, +    /**, +     * Iff set to <code>true</code> the engine will create a new lucene index when opening the engine., +     * Otherwise the lucene index writer is opened in append mode. The default is <code>false</code>, +     */, +    public void setCreate(boolean create) {, +        this.create = create;, +    }, +, +    /**, +     * Iff <code>true</code> the engine should create a new lucene index when opening the engine., +     * Otherwise the lucene index writer should be opened in append mode. The default is <code>false</code>, +     */, +    public boolean isCreate() {, +        return create;, +    }, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +                final boolean create = engineConfig.isCreate();, +++ b/core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java, +    private boolean create = false;, +, +    /**, +     * Iff set to <code>true</code> the engine will create a new lucene index when opening the engine., +     * Otherwise the lucene index writer is opened in append mode. The default is <code>false</code>, +     */, +    public void setCreate(boolean create) {, +        this.create = create;, +    }, +, +    /**, +     * Iff <code>true</code> the engine should create a new lucene index when opening the engine., +     * Otherwise the lucene index writer should be opened in append mode. The default is <code>false</code>, +     */, +    public boolean isCreate() {, +        return create;, +    }, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +                final boolean create = engineConfig.isCreate();, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +    public Map<String, Mapping> performTranslogRecovery(boolean indexExists) {, +        final Map<String, Mapping> recoveredTypes = internalPerformTranslogRecovery(false, indexExists);, +    private Map<String, Mapping> internalPerformTranslogRecovery(boolean skipTranslogRecovery, boolean indexExists) {, +        engineConfig.setCreate(indexExists == false);, +    public void skipTranslogRecovery() throws IOException {, +        Map<String, Mapping> recoveredTypes = internalPerformTranslogRecovery(true, true);, +++ b/core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java, +    private boolean create = false;, +, +    /**, +     * Iff set to <code>true</code> the engine will create a new lucene index when opening the engine., +     * Otherwise the lucene index writer is opened in append mode. The default is <code>false</code>, +     */, +    public void setCreate(boolean create) {, +        this.create = create;, +    }, +, +    /**, +     * Iff <code>true</code> the engine should create a new lucene index when opening the engine., +     * Otherwise the lucene index writer should be opened in append mode. The default is <code>false</code>, +     */, +    public boolean isCreate() {, +        return create;, +    }, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +                final boolean create = engineConfig.isCreate();, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +    public Map<String, Mapping> performTranslogRecovery(boolean indexExists) {, +        final Map<String, Mapping> recoveredTypes = internalPerformTranslogRecovery(false, indexExists);, +    private Map<String, Mapping> internalPerformTranslogRecovery(boolean skipTranslogRecovery, boolean indexExists) {, +        engineConfig.setCreate(indexExists == false);, +    public void skipTranslogRecovery() throws IOException {, +        Map<String, Mapping> recoveredTypes = internalPerformTranslogRecovery(true, true);, +++ b/core/src/main/java/org/elasticsearch/index/shard/ShadowIndexShard.java, +        config.setCreate(false); // hardcoded - we always expect an index to be present, +++ b/core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java, +    private boolean create = false;, +, +    /**, +     * Iff set to <code>true</code> the engine will create a new lucene index when opening the engine., +     * Otherwise the lucene index writer is opened in append mode. The default is <code>false</code>]