[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/AuthenticationResult.java, +import java.util.Collections;, +import java.util.Map;, +    private static final AuthenticationResult NOT_HANDLED = new AuthenticationResult(Status.CONTINUE, null, null, null, null);, +, +    public static String THREAD_CONTEXT_KEY = "_xpack_security_auth_result";, +    private final Map<String, Object> metadata;, +    private AuthenticationResult(Status status, @Nullable User user, @Nullable String message, @Nullable Exception exception,, +                                 @Nullable Map<String, Object> metadata) {, +        this.metadata = metadata == null ? Collections.emptyMap() : Collections.unmodifiableMap(metadata);, +    public Map<String, Object> getMetadata() {, +        return metadata;, +    }, +, +        return success(user, null);, +    }, +, +    /**, +     * Creates a successful result, with optional metadata, +     *, +     * @see #success(User), +     */, +    public static AuthenticationResult success(User user, @Nullable Map<String, Object> metadata) {, +        return new AuthenticationResult(Status.SUCCESS, user, null, null, metadata);, +        return new AuthenticationResult(Status.CONTINUE, null, message, cause, null);, +        return new AuthenticationResult(Status.TERMINATE, null, message, cause, null);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/AuthenticationResult.java, +import java.util.Collections;, +import java.util.Map;, +    private static final AuthenticationResult NOT_HANDLED = new AuthenticationResult(Status.CONTINUE, null, null, null, null);, +, +    public static String THREAD_CONTEXT_KEY = "_xpack_security_auth_result";, +    private final Map<String, Object> metadata;, +    private AuthenticationResult(Status status, @Nullable User user, @Nullable String message, @Nullable Exception exception,, +                                 @Nullable Map<String, Object> metadata) {, +        this.metadata = metadata == null ? Collections.emptyMap() : Collections.unmodifiableMap(metadata);, +    public Map<String, Object> getMetadata() {, +        return metadata;, +    }, +, +        return success(user, null);, +    }, +, +    /**, +     * Creates a successful result, with optional metadata, +     *, +     * @see #success(User), +     */, +    public static AuthenticationResult success(User user, @Nullable Map<String, Object> metadata) {, +        return new AuthenticationResult(Status.SUCCESS, user, null, null, metadata);, +        return new AuthenticationResult(Status.CONTINUE, null, message, cause, null);, +        return new AuthenticationResult(Status.TERMINATE, null, message, cause, null);, +++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/saml/TransportSamlAuthenticateAction.java, +import org.elasticsearch.xpack.core.security.authc.AuthenticationResult;, +                AuthenticationResult result = threadContext.getTransient(AuthenticationResult.THREAD_CONTEXT_KEY);, +                if (result == null) {, +                    listener.onFailure(new IllegalStateException("Cannot find AuthenticationResult on thread context"));, +                    return;, +                }, +                final Map<String, Object> tokenMeta = (Map<String, Object>) result.getMetadata().get(SamlRealm.CONTEXT_TOKEN_DATA);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/AuthenticationResult.java, +import java.util.Collections;, +import java.util.Map;, +    private static final AuthenticationResult NOT_HANDLED = new AuthenticationResult(Status.CONTINUE, null, null, null, null);, +, +    public static String THREAD_CONTEXT_KEY = "_xpack_security_auth_result";, +    private final Map<String, Object> metadata;, +    private AuthenticationResult(Status status, @Nullable User user, @Nullable String message, @Nullable Exception exception,, +                                 @Nullable Map<String, Object> metadata) {, +        this.metadata = metadata == null ? Collections.emptyMap() : Collections.unmodifiableMap(metadata);, +    public Map<String, Object> getMetadata() {, +        return metadata;, +    }, +, +        return success(user, null);, +    }, +, +    /**, +     * Creates a successful result, with optional metadata, +     *, +     * @see #success(User), +     */, +    public static AuthenticationResult success(User user, @Nullable Map<String, Object> metadata) {, +        return new AuthenticationResult(Status.SUCCESS, user, null, null, metadata);, +        return new AuthenticationResult(Status.CONTINUE, null, message, cause, null);, +        return new AuthenticationResult(Status.TERMINATE, null, message, cause, null);, +++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/saml/TransportSamlAuthenticateAction.java, +import org.elasticsearch.xpack.core.security.authc.AuthenticationResult;, +                AuthenticationResult result = threadContext.getTransient(AuthenticationResult.THREAD_CONTEXT_KEY);, +                if (result == null) {, +                    listener.onFailure(new IllegalStateException("Cannot find AuthenticationResult on thread context"));, +                    return;, +                }, +                final Map<String, Object> tokenMeta = (Map<String, Object>) result.getMetadata().get(SamlRealm.CONTEXT_TOKEN_DATA);, +++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/AuthenticationService.java, +        private AuthenticationResult authenticationResult = null;, +                                authenticationResult = result;, +                threadContext.putTransient(AuthenticationResult.THREAD_CONTEXT_KEY, authenticationResult);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/AuthenticationResult.java, +import java.util.Collections;]