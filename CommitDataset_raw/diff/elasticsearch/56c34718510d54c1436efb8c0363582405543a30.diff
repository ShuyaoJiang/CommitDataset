[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorParsers.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorParsers.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/pipeline/PercentilesBucketIT.java, +import org.elasticsearch.search.SearchParseException;, +import static org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilders.sumBucket;, +    @AwaitsFix(bugUrl = "https://github.com/elastic/elasticsearch/issues/13179"), +            SearchResponse response = client().prepareSearch("idx"), +            assertSearchResponse(response);, +, +            Terms terms = response.getAggregations().get("terms");, +            assertThat(terms, notNullValue());, +            assertThat(terms.getName(), equalTo("terms"));, +            List<Terms.Bucket> buckets = terms.getBuckets();, +            assertThat(buckets.size(), equalTo(0));, +, +            PercentilesBucket percentilesBucketValue = response.getAggregations().get("percentiles_bucket");, +, +            // All good, +        SearchResponse response = client(), +            PercentilesBucket percentilesBucketValue = response.getAggregations().get("percentiles_bucket");, +, +            // All good, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorParsers.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/pipeline/PercentilesBucketIT.java, +import org.elasticsearch.search.SearchParseException;, +import static org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilders.sumBucket;, +    @AwaitsFix(bugUrl = "https://github.com/elastic/elasticsearch/issues/13179"), +            SearchResponse response = client().prepareSearch("idx"), +            assertSearchResponse(response);, +, +            Terms terms = response.getAggregations().get("terms");, +            assertThat(terms, notNullValue());, +            assertThat(terms.getName(), equalTo("terms"));, +            List<Terms.Bucket> buckets = terms.getBuckets();, +            assertThat(buckets.size(), equalTo(0));, +, +            PercentilesBucket percentilesBucketValue = response.getAggregations().get("percentiles_bucket");, +, +            // All good, +        SearchResponse response = client(), +            PercentilesBucket percentilesBucketValue = response.getAggregations().get("percentiles_bucket");, +, +            // All good, +++ b/core/src/test/java/org/elasticsearch/test/rest/ESRestTestCase.java, +            .put("node.testattr", "test"), +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorParsers.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/pipeline/PercentilesBucketIT.java, +import org.elasticsearch.search.SearchParseException;, +import static org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilders.sumBucket;, +    @AwaitsFix(bugUrl = "https://github.com/elastic/elasticsearch/issues/13179"), +            SearchResponse response = client().prepareSearch("idx"), +            assertSearchResponse(response);, +, +            Terms terms = response.getAggregations().get("terms");, +            assertThat(terms, notNullValue());, +            assertThat(terms.getName(), equalTo("terms"));, +            List<Terms.Bucket> buckets = terms.getBuckets();, +            assertThat(buckets.size(), equalTo(0));, +, +            PercentilesBucket percentilesBucketValue = response.getAggregations().get("percentiles_bucket");, +, +            // All good, +        SearchResponse response = client(), +            PercentilesBucket percentilesBucketValue = response.getAggregations().get("percentiles_bucket");, +, +            // All good, +++ b/core/src/test/java/org/elasticsearch/test/rest/ESRestTestCase.java, +            .put("node.testattr", "test"), +++ b/dev-tools/Elasticsearch.launch, +<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-Xms256m -Xmx1g -Djava.awt.headless=true -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=logs/heapdump.hprof -Delasticsearch -Des.foreground=yes -ea -Des.path.home=target/eclipse_run -Des.security.manager.enabled=false&#10;-Des.node.attr=test"/>, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorParsers.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/pipeline/PercentilesBucketIT.java, +import org.elasticsearch.search.SearchParseException;, +import static org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilders.sumBucket;, +    @AwaitsFix(bugUrl = "https://github.com/elastic/elasticsearch/issues/13179"), +            SearchResponse response = client().prepareSearch("idx"), +            assertSearchResponse(response);, +, +            Terms terms = response.getAggregations().get("terms");, +            assertThat(terms, notNullValue());, +            assertThat(terms.getName(), equalTo("terms"));, +            List<Terms.Bucket> buckets = terms.getBuckets();, +            assertThat(buckets.size(), equalTo(0));, +, +            PercentilesBucket percentilesBucketValue = response.getAggregations().get("percentiles_bucket");, +, +            // All good, +        SearchResponse response = client(), +            PercentilesBucket percentilesBucketValue = response.getAggregations().get("percentiles_bucket");, +, +            // All good, +++ b/core/src/test/java/org/elasticsearch/test/rest/ESRestTestCase.java, +            .put("node.testattr", "test"), +++ b/dev-tools/Elasticsearch.launch]