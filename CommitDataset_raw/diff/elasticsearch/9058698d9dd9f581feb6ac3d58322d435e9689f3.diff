[+++ b/server/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +++ b/server/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +++ b/server/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java, +import org.elasticsearch.search.collapse.CollapseBuilder;, +            @SuppressWarnings("unchecked"), +++ b/server/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +++ b/server/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java, +import org.elasticsearch.search.collapse.CollapseBuilder;, +            @SuppressWarnings("unchecked"), +++ b/server/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortBuilder.java, +++ b/server/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +++ b/server/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java, +import org.elasticsearch.search.collapse.CollapseBuilder;, +            @SuppressWarnings("unchecked"), +++ b/server/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortBuilder.java, +++ b/server/src/test/java/org/elasticsearch/search/sort/GeoDistanceSortBuilderIT.java, +import java.util.Collections;, +        List<GeoPoint> qPoints = Arrays.asList(new GeoPoint(2, 1), new GeoPoint(2, 2), new GeoPoint(2, 3), new GeoPoint(2, 4));, +        Collections.shuffle(qPoints, random());, +        for (GeoPoint point : qPoints) {, +                    geoDistanceSortBuilder = new GeoDistanceSortBuilder(LOCATION_FIELD, point);, +                    geoDistanceSortBuilder.points(point);]