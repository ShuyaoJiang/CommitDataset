[+++ b/marvel/src/main/java/org/elasticsearch/marvel/MarvelPlugin.java, +import org.elasticsearch.marvel.license.MarvelLicensee;, +        return Arrays.<Class<? extends LifecycleComponent>>asList(MarvelLicensee.class, AgentService.class);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/MarvelPlugin.java, +import org.elasticsearch.marvel.license.MarvelLicensee;, +        return Arrays.<Class<? extends LifecycleComponent>>asList(MarvelLicensee.class, AgentService.class);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/AgentService.java, +                        MarvelSettings marvelSettings, Set<Collector> collectors, Exporters exporters) {, +++ b/marvel/src/main/java/org/elasticsearch/marvel/MarvelPlugin.java, +import org.elasticsearch.marvel.license.MarvelLicensee;, +        return Arrays.<Class<? extends LifecycleComponent>>asList(MarvelLicensee.class, AgentService.class);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/AgentService.java, +                        MarvelSettings marvelSettings, Set<Collector> collectors, Exporters exporters) {, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/AbstractCollector.java, +import org.elasticsearch.marvel.license.MarvelLicensee;, +    protected final MarvelLicensee licensee;, +    public AbstractCollector(Settings settings, String name, ClusterService clusterService, MarvelSettings marvelSettings, MarvelLicensee licensee) {, +        this.licensee = licensee;, +        if (licensee.collectionEnabled()) {, +            return false;, +        return true;, +++ b/marvel/src/main/java/org/elasticsearch/marvel/MarvelPlugin.java, +import org.elasticsearch.marvel.license.MarvelLicensee;, +        return Arrays.<Class<? extends LifecycleComponent>>asList(MarvelLicensee.class, AgentService.class);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/AgentService.java, +                        MarvelSettings marvelSettings, Set<Collector> collectors, Exporters exporters) {, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/AbstractCollector.java, +import org.elasticsearch.marvel.license.MarvelLicensee;, +    protected final MarvelLicensee licensee;, +    public AbstractCollector(Settings settings, String name, ClusterService clusterService, MarvelSettings marvelSettings, MarvelLicensee licensee) {, +        this.licensee = licensee;, +        if (licensee.collectionEnabled()) {, +            return false;, +        return true;, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterInfoCollector.java, +import org.elasticsearch.marvel.license.MarvelLicensee;, +    private final MarvelLicensee marvelLicensee;, +    public ClusterInfoCollector(Settings settings, ClusterService clusterService, MarvelSettings marvelSettings, MarvelLicensee marvelLicensee,, +        super(settings, NAME, clusterService, marvelSettings, marvelLicensee);, +        this.marvelLicensee = marvelLicensee;, +        License license = marvelLicensee.getLicense();, +                clusterName.value(), Version.CURRENT.toString(), license, clusterStats));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/MarvelPlugin.java, +import org.elasticsearch.marvel.license.MarvelLicensee;, +        return Arrays.<Class<? extends LifecycleComponent>>asList(MarvelLicensee.class, AgentService.class);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/AgentService.java, +                        MarvelSettings marvelSettings, Set<Collector> collectors, Exporters exporters) {, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/AbstractCollector.java, +import org.elasticsearch.marvel.license.MarvelLicensee;, +    protected final MarvelLicensee licensee;, +    public AbstractCollector(Settings settings, String name, ClusterService clusterService, MarvelSettings marvelSettings, MarvelLicensee licensee) {, +        this.licensee = licensee;, +        if (licensee.collectionEnabled()) {, +            return false;, +        return true;, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterInfoCollector.java, +import org.elasticsearch.marvel.license.MarvelLicensee;, +    private final MarvelLicensee marvelLicensee;, +    public ClusterInfoCollector(Settings settings, ClusterService clusterService, MarvelSettings marvelSettings, MarvelLicensee marvelLicensee,, +        super(settings, NAME, clusterService, marvelSettings, marvelLicensee);, +        this.marvelLicensee = marvelLicensee;, +        License license = marvelLicensee.getLicense();, +                clusterName.value(), Version.CURRENT.toString(), license, clusterStats));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterInfoMarvelDoc.java, +    private final License license;, +                         String clusterName, String version, License license, ClusterStatsResponse clusterStats) {, +        this.license = license;, +    public License getLicense() {, +        return license;, +++ b/marvel/src/main/java/org/elasticsearch/marvel/MarvelPlugin.java, +import org.elasticsearch.marvel.license.MarvelLicensee;, +        return Arrays.<Class<? extends LifecycleComponent>>asList(MarvelLicensee.class, AgentService.class);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/AgentService.java, +                        MarvelSettings marvelSettings, Set<Collector> collectors, Exporters exporters) {, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/AbstractCollector.java, +import org.elasticsearch.marvel.license.MarvelLicensee;, +    protected final MarvelLicensee licensee;, +    public AbstractCollector(Settings settings, String name, ClusterService clusterService, MarvelSettings marvelSettings, MarvelLicensee licensee) {, +        this.licensee = licensee;, +        if (licensee.collectionEnabled()) {, +            return false;, +        return true;, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterInfoCollector.java, +import org.elasticsearch.marvel.license.MarvelLicensee;, +    private final MarvelLicensee marvelLicensee;, +    public ClusterInfoCollector(Settings settings, ClusterService clusterService, MarvelSettings marvelSettings, MarvelLicensee marvelLicensee,, +        super(settings, NAME, clusterService, marvelSettings, marvelLicensee);, +        this.marvelLicensee = marvelLicensee;, +        License license = marvelLicensee.getLicense();, +                clusterName.value(), Version.CURRENT.toString(), license, clusterStats));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterInfoMarvelDoc.java, +    private final License license;, +                         String clusterName, String version, License license, ClusterStatsResponse clusterStats) {, +        this.license = license;, +    public License getLicense() {, +        return license;, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStateCollector.java, +import org.elasticsearch.marvel.license.MarvelLicensee;, +    public ClusterStateCollector(Settings settings, ClusterService clusterService, MarvelSettings marvelSettings,  MarvelLicensee marvelLicensee,, +        super(settings, NAME, clusterService, marvelSettings, marvelLicensee);]