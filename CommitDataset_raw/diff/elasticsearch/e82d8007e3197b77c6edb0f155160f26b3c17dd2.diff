[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            ant.waitfor(maxwait: '30', maxwaitunit: 'second', checkevery: '500', checkeveryunit: 'millisecond', timeoutproperty: "failed${name}") {, +                waitFailed(project, nodes, logger, 'Failed to start elasticsearch'), +                    waitFailed(project, nodes, logger, 'Elasticsearch cluster failed to pass wait condition'), +    static void waitFailed(Project project, List<NodeInfo> nodes, Logger logger, String msg) {, +            if (node.pidFile.exists() && node.failedMarker.exists() == false &&, +                (node.httpPortsFile.exists() == false || node.transportPortsFile.exists() == false)) {, +                logger.error("|\n|  [jstack]"), +                String pid = node.pidFile.getText('UTF-8'), +                ByteArrayOutputStream output = new ByteArrayOutputStream(), +                project.exec {, +                    commandLine = ["${project.javaHome}/bin/jstack", pid], +                    standardOutput = output, +                }, +                output.toString('UTF-8').eachLine { line -> logger.error("|    ${line}") }, +            }]