[+++ b/src/main/java/org/elasticsearch/search/facet/statistical/ScriptStatisticalFacetCollector.java, +++ b/src/main/java/org/elasticsearch/search/facet/statistical/ScriptStatisticalFacetCollector.java, +++ b/src/main/java/org/elasticsearch/search/facet/statistical/StatisticalFacetCollector.java, +import org.elasticsearch.index.fielddata.DoubleValues;, +import org.elasticsearch.index.fielddata.IndexNumericFieldData;, +    private final IndexNumericFieldData indexFieldData;, +    private DoubleValues values;, +    public StatisticalFacetCollector(String facetName, IndexNumericFieldData indexFieldData, SearchContext context) {, +        this.indexFieldData = indexFieldData;, +        values.forEachValueInDoc(doc, statsProc);, +        values = indexFieldData.load(context).getDoubleValues();, +    public static class StatsProc implements DoubleValues.ValueInDocProc {, +++ b/src/main/java/org/elasticsearch/search/facet/statistical/ScriptStatisticalFacetCollector.java, +++ b/src/main/java/org/elasticsearch/search/facet/statistical/StatisticalFacetCollector.java, +import org.elasticsearch.index.fielddata.DoubleValues;, +import org.elasticsearch.index.fielddata.IndexNumericFieldData;, +    private final IndexNumericFieldData indexFieldData;, +    private DoubleValues values;, +    public StatisticalFacetCollector(String facetName, IndexNumericFieldData indexFieldData, SearchContext context) {, +        this.indexFieldData = indexFieldData;, +        values.forEachValueInDoc(doc, statsProc);, +        values = indexFieldData.load(context).getDoubleValues();, +    public static class StatsProc implements DoubleValues.ValueInDocProc {, +++ b/src/main/java/org/elasticsearch/search/facet/statistical/StatisticalFacetProcessor.java, +import org.elasticsearch.index.fielddata.IndexNumericFieldData;, +import org.elasticsearch.index.mapper.FieldMapper;, +            IndexNumericFieldData[] indexFieldDatas = new IndexNumericFieldData[fieldsNames.length];, +            for (int i = 0; i < fieldsNames.length; i++) {, +                FieldMapper fieldMapper = context.mapperService().smartNameFieldMapper(fieldsNames[i]);, +                if (fieldMapper == null) {, +                    throw new FacetPhaseExecutionException(facetName, "No mapping found for field [" + fieldsNames[i] + "]");, +                }, +                indexFieldDatas[i] = context.fieldData().getForField(fieldMapper);, +            }, +            return new StatisticalFieldsFacetCollector(facetName, indexFieldDatas, context);, +            FieldMapper fieldMapper = context.mapperService().smartNameFieldMapper(field);, +            if (fieldMapper == null) {, +                throw new FacetPhaseExecutionException(facetName, "No mapping found for field [" + field + "]");, +            }, +            IndexNumericFieldData indexFieldData = context.fieldData().getForField(fieldMapper);, +            return new StatisticalFacetCollector(facetName, indexFieldData, context);, +++ b/src/main/java/org/elasticsearch/search/facet/statistical/ScriptStatisticalFacetCollector.java, +++ b/src/main/java/org/elasticsearch/search/facet/statistical/StatisticalFacetCollector.java, +import org.elasticsearch.index.fielddata.DoubleValues;, +import org.elasticsearch.index.fielddata.IndexNumericFieldData;, +    private final IndexNumericFieldData indexFieldData;, +    private DoubleValues values;, +    public StatisticalFacetCollector(String facetName, IndexNumericFieldData indexFieldData, SearchContext context) {, +        this.indexFieldData = indexFieldData;, +        values.forEachValueInDoc(doc, statsProc);, +        values = indexFieldData.load(context).getDoubleValues();, +    public static class StatsProc implements DoubleValues.ValueInDocProc {, +++ b/src/main/java/org/elasticsearch/search/facet/statistical/StatisticalFacetProcessor.java, +import org.elasticsearch.index.fielddata.IndexNumericFieldData;, +import org.elasticsearch.index.mapper.FieldMapper;, +            IndexNumericFieldData[] indexFieldDatas = new IndexNumericFieldData[fieldsNames.length];, +            for (int i = 0; i < fieldsNames.length; i++) {, +                FieldMapper fieldMapper = context.mapperService().smartNameFieldMapper(fieldsNames[i]);, +                if (fieldMapper == null) {, +                    throw new FacetPhaseExecutionException(facetName, "No mapping found for field [" + fieldsNames[i] + "]");, +                }, +                indexFieldDatas[i] = context.fieldData().getForField(fieldMapper);, +            }, +            return new StatisticalFieldsFacetCollector(facetName, indexFieldDatas, context);, +            FieldMapper fieldMapper = context.mapperService().smartNameFieldMapper(field);, +            if (fieldMapper == null) {, +                throw new FacetPhaseExecutionException(facetName, "No mapping found for field [" + field + "]");, +            }, +            IndexNumericFieldData indexFieldData = context.fieldData().getForField(fieldMapper);, +            return new StatisticalFacetCollector(facetName, indexFieldData, context);, +++ b/src/main/java/org/elasticsearch/search/facet/statistical/StatisticalFieldsFacetCollector.java, +import org.elasticsearch.index.fielddata.DoubleValues;, +import org.elasticsearch.index.fielddata.IndexNumericFieldData;, +    private final IndexNumericFieldData[] indexFieldDatas;, +    private DoubleValues[] values;, +    public StatisticalFieldsFacetCollector(String facetName, IndexNumericFieldData[] indexFieldDatas, SearchContext context) {, +        this.indexFieldDatas = indexFieldDatas;, +        this.values = new DoubleValues[indexFieldDatas.length];, +        for (DoubleValues value : values) {, +            value.forEachValueInDoc(doc, statsProc);, +        for (int i = 0; i < indexFieldDatas.length; i++) {, +            values[i] = indexFieldDatas[i].load(context).getDoubleValues();, +    public static class StatsProc implements DoubleValues.ValueInDocProc {]