[+++ b/docs/plugins/discovery-azure.asciidoc, +WARNING: The keystore file must be placed in a directory accessible by elasticsearch like the `config` directory., +, +You can use {ref}/modules-network.html[core network host settings]. For example `_en0_`., +++ b/docs/plugins/discovery-azure.asciidoc, +WARNING: The keystore file must be placed in a directory accessible by elasticsearch like the `config` directory., +, +You can use {ref}/modules-network.html[core network host settings]. For example `_en0_`., +++ b/plugins/discovery-azure/src/main/java/org/elasticsearch/cloud/azure/management/AzureComputeServiceImpl.java, +import com.microsoft.windowsazure.core.Builder;, +import com.microsoft.windowsazure.core.DefaultBuilder;, +import java.util.ServiceLoader;, +    private final ComputeManagementClient client;, +            // Azure SDK configuration uses DefaultBuilder which uses java.util.ServiceLoader to load the, +            // various Azure services. By default, this will use the current thread's context classloader, +            // to load services. Since the current thread refers to the main application classloader it, +            // won't find any Azure service implementation., +, +            // Here we basically create a new DefaultBuilder that uses the current class classloader to load services., +            DefaultBuilder builder = new DefaultBuilder();, +            for (Builder.Exports exports : ServiceLoader.load(Builder.Exports.class, getClass().getClassLoader())) {, +                exports.register(builder);, +, +            // And create a new blank configuration based on the previous DefaultBuilder, +            Configuration configuration = new Configuration(builder);, +            configuration.setProperty(Configuration.PROPERTY_LOG_HTTP_REQUESTS, logger.isTraceEnabled());, +, +            Configuration managementConfig = ManagementConfiguration.configure(null, configuration,, +                    Management.ENDPOINT_SETTING.get(settings), subscriptionId, keystorePath, keystorePassword, keystoreType);, +, +            logger.debug("creating new Azure client for [{}], [{}]", subscriptionId, serviceName);, +            client = ComputeManagementService.create(managementConfig);, +        } catch (IOException e) {, +            throw new ElasticsearchException("Unable to configure Azure compute service", e);, +        }, +            return client.getHostedServicesOperations().getDetailed(serviceName);, +        if (client != null) {, +                client.close();]