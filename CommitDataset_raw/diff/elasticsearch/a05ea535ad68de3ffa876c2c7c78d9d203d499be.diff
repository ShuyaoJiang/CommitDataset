[+++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateShardRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateShardRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportShardMultiPercolateAction.java, +                PercolateShardRequest shardRequest = new PercolateShardRequest();, +                shardRequest.readFrom(in);, +                item.request.writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateShardRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportShardMultiPercolateAction.java, +                PercolateShardRequest shardRequest = new PercolateShardRequest();, +                shardRequest.readFrom(in);, +                item.request.writeTo(out);, +++ b/core/src/test/java/org/elasticsearch/percolator/MultiPercolatorIT.java, +import static org.elasticsearch.common.settings.Settings.settingsBuilder;, +import static org.elasticsearch.index.query.QueryBuilders.rangeQuery;, +    public void testStartTimeIsPropagatedToShardRequests() throws Exception {, +        // See: https://github.com/elastic/elasticsearch/issues/15908, +        internalCluster().ensureAtLeastNumDataNodes(2);, +        client().admin().indices().prepareCreate("test"), +            .setSettings(settingsBuilder(), +                .put("index.number_of_shards", 1), +                .put("index.number_of_replicas", 1), +            ), +            .addMapping("type", "date_field", "type=date,format=strict_date_optional_time||epoch_millis"), +            .get();, +        ensureGreen();, +, +        client().prepareIndex("test", ".percolator", "1"), +            .setSource(jsonBuilder().startObject().field("query", rangeQuery("date_field").lt("now+90d")).endObject()), +            .setRefresh(true), +            .get();, +, +        for (int i = 0; i < 32; i++) {, +            MultiPercolateResponse response = client().prepareMultiPercolate(), +                .add(client().preparePercolate().setDocumentType("type").setIndices("test"), +                    .setPercolateDoc(new PercolateSourceBuilder.DocBuilder().setDoc("date_field", "2015-07-21T10:28:01-07:00"))), +                .get();, +            assertThat(response.getItems()[0].getResponse().getCount(), equalTo(1L));, +            assertThat(response.getItems()[0].getResponse().getMatches()[0].getId().string(), equalTo("1"));, +        }, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateShardRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportShardMultiPercolateAction.java, +                PercolateShardRequest shardRequest = new PercolateShardRequest();, +                shardRequest.readFrom(in);, +                item.request.writeTo(out);, +++ b/core/src/test/java/org/elasticsearch/percolator/MultiPercolatorIT.java, +import static org.elasticsearch.common.settings.Settings.settingsBuilder;, +import static org.elasticsearch.index.query.QueryBuilders.rangeQuery;, +    public void testStartTimeIsPropagatedToShardRequests() throws Exception {, +        // See: https://github.com/elastic/elasticsearch/issues/15908, +        internalCluster().ensureAtLeastNumDataNodes(2);, +        client().admin().indices().prepareCreate("test"), +            .setSettings(settingsBuilder(), +                .put("index.number_of_shards", 1), +                .put("index.number_of_replicas", 1), +            ), +            .addMapping("type", "date_field", "type=date,format=strict_date_optional_time||epoch_millis"), +            .get();, +        ensureGreen();, +, +        client().prepareIndex("test", ".percolator", "1"), +            .setSource(jsonBuilder().startObject().field("query", rangeQuery("date_field").lt("now+90d")).endObject()), +            .setRefresh(true), +            .get();, +, +        for (int i = 0; i < 32; i++) {, +            MultiPercolateResponse response = client().prepareMultiPercolate(), +                .add(client().preparePercolate().setDocumentType("type").setIndices("test"), +                    .setPercolateDoc(new PercolateSourceBuilder.DocBuilder().setDoc("date_field", "2015-07-21T10:28:01-07:00"))), +                .get();, +            assertThat(response.getItems()[0].getResponse().getCount(), equalTo(1L));, +            assertThat(response.getItems()[0].getResponse().getMatches()[0].getId().string(), equalTo("1"));, +        }, +    }, +, +++ b/core/src/test/java/org/elasticsearch/percolator/PercolateDocumentParserTests.java, +    private PercolateShardRequest request;, +, +        request = Mockito.mock(PercolateShardRequest.class);, +        Mockito.when(request.shardId()).thenReturn(new ShardId(new Index("_index"), 0));, +        Mockito.when(request.documentType()).thenReturn("type");, +        Mockito.when(request.source()).thenReturn(source.bytes());, +        Mockito.when(request.source()).thenReturn(source.bytes());, +        Mockito.when(request.source()).thenReturn(source.bytes());, +        Mockito.when(request.docSource()).thenReturn(docSource.bytes());, +        Mockito.when(request.source()).thenReturn(source.bytes());, +        Mockito.when(request.docSource()).thenReturn(docSource.bytes());]