[+++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0-alpha4, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0-alpha4, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_0_0_alpha4_ID = 5000004;, +    public static final Version V_5_0_0_alpha4 = new Version(V_5_0_0_alpha4_ID, org.apache.lucene.util.Version.LUCENE_6_1_0);, +    public static final Version CURRENT = V_5_0_0_alpha4;, +            case V_5_0_0_alpha4_ID:, +                return V_5_0_0_alpha4;, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0-alpha4, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_0_0_alpha4_ID = 5000004;, +    public static final Version V_5_0_0_alpha4 = new Version(V_5_0_0_alpha4_ID, org.apache.lucene.util.Version.LUCENE_6_1_0);, +    public static final Version CURRENT = V_5_0_0_alpha4;, +            case V_5_0_0_alpha4_ID:, +                return V_5_0_0_alpha4;, +++ b/core/src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java, +    private int maxConcurrentSearchRequests = 0;, +    /**, +     * Returns the amount of search requests specified in this multi search requests are allowed to be ran concurrently., +     */, +    public int maxConcurrentSearchRequests() {, +        return maxConcurrentSearchRequests;, +    }, +, +    /**, +     * Sets how many search requests specified in this multi search requests are allowed to be ran concurrently., +     */, +    public MultiSearchRequest maxConcurrentSearchRequests(int maxConcurrentSearchRequests) {, +        if (maxConcurrentSearchRequests < 1) {, +            throw new IllegalArgumentException("maxConcurrentSearchRequests must be positive");, +        }, +, +        this.maxConcurrentSearchRequests = maxConcurrentSearchRequests;, +        return this;, +    }, +, +        maxConcurrentSearchRequests = in.readVInt();, +        out.writeVInt(maxConcurrentSearchRequests);, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0-alpha4, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_0_0_alpha4_ID = 5000004;, +    public static final Version V_5_0_0_alpha4 = new Version(V_5_0_0_alpha4_ID, org.apache.lucene.util.Version.LUCENE_6_1_0);, +    public static final Version CURRENT = V_5_0_0_alpha4;, +            case V_5_0_0_alpha4_ID:, +                return V_5_0_0_alpha4;, +++ b/core/src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java, +    private int maxConcurrentSearchRequests = 0;, +    /**, +     * Returns the amount of search requests specified in this multi search requests are allowed to be ran concurrently., +     */, +    public int maxConcurrentSearchRequests() {, +        return maxConcurrentSearchRequests;, +    }, +, +    /**, +     * Sets how many search requests specified in this multi search requests are allowed to be ran concurrently., +     */, +    public MultiSearchRequest maxConcurrentSearchRequests(int maxConcurrentSearchRequests) {, +        if (maxConcurrentSearchRequests < 1) {, +            throw new IllegalArgumentException("maxConcurrentSearchRequests must be positive");, +        }, +, +        this.maxConcurrentSearchRequests = maxConcurrentSearchRequests;, +        return this;, +    }, +, +        maxConcurrentSearchRequests = in.readVInt();, +        out.writeVInt(maxConcurrentSearchRequests);, +++ b/core/src/main/java/org/elasticsearch/action/search/MultiSearchRequestBuilder.java, +, +    /**, +     * Sets how many search requests specified in this multi search requests are allowed to be ran concurrently., +     */, +    public MultiSearchRequestBuilder setMaxConcurrentSearchRequests(int maxConcurrentSearchRequests) {, +        request().maxConcurrentSearchRequests(maxConcurrentSearchRequests);, +        return this;, +    }, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0-alpha4, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_5_0_0_alpha4_ID = 5000004;, +    public static final Version V_5_0_0_alpha4 = new Version(V_5_0_0_alpha4_ID, org.apache.lucene.util.Version.LUCENE_6_1_0);, +    public static final Version CURRENT = V_5_0_0_alpha4;, +            case V_5_0_0_alpha4_ID:, +                return V_5_0_0_alpha4;, +++ b/core/src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java, +    private int maxConcurrentSearchRequests = 0;, +    /**, +     * Returns the amount of search requests specified in this multi search requests are allowed to be ran concurrently., +     */, +    public int maxConcurrentSearchRequests() {, +        return maxConcurrentSearchRequests;, +    }, +, +    /**, +     * Sets how many search requests specified in this multi search requests are allowed to be ran concurrently.]