[+++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/DatafeedConfig.java, +        // Headers are only parsed by the metadata parser, so headers supplied in the _body_ of a REST request will be rejected., +        // (For config headers are explicitly transferred from the auth headers by code in the put/update datafeed actions.), +        METADATA_PARSER.declareObject(Builder::setHeaders, (p, c) -> p.mapStrings(), HEADERS);, +        if (headers.isEmpty() == false && params.paramAsBoolean(ToXContentParams.FOR_CLUSTER_STATE, false) == true) {, +            this.headers = ExceptionsHelper.requireNonNull(headers, HEADERS.getPreferredName());, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/DatafeedConfig.java, +        // Headers are only parsed by the metadata parser, so headers supplied in the _body_ of a REST request will be rejected., +        // (For config headers are explicitly transferred from the auth headers by code in the put/update datafeed actions.), +        METADATA_PARSER.declareObject(Builder::setHeaders, (p, c) -> p.mapStrings(), HEADERS);, +        if (headers.isEmpty() == false && params.paramAsBoolean(ToXContentParams.FOR_CLUSTER_STATE, false) == true) {, +            this.headers = ExceptionsHelper.requireNonNull(headers, HEADERS.getPreferredName());, +++ b/plugin/src/test/resources/rest-api-spec/test/ml/datafeeds_crud.yml, +"Test put datafeed with security headers in the body":, +  - do:, +      catch: /unknown field \[headers\], parser not found/, +      xpack.ml.put_datafeed:, +        datafeed_id: test-datafeed-1, +        body:  >, +          {, +            "job_id":"datafeeds-crud-1",, +            "indices":["index-foo"],, +            "headers":{ "a_security_header" : "secret" }, +          }, +, +---, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/DatafeedConfig.java, +        // Headers are only parsed by the metadata parser, so headers supplied in the _body_ of a REST request will be rejected., +        // (For config headers are explicitly transferred from the auth headers by code in the put/update datafeed actions.), +        METADATA_PARSER.declareObject(Builder::setHeaders, (p, c) -> p.mapStrings(), HEADERS);, +        if (headers.isEmpty() == false && params.paramAsBoolean(ToXContentParams.FOR_CLUSTER_STATE, false) == true) {, +            this.headers = ExceptionsHelper.requireNonNull(headers, HEADERS.getPreferredName());, +++ b/plugin/src/test/resources/rest-api-spec/test/ml/datafeeds_crud.yml, +"Test put datafeed with security headers in the body":, +  - do:, +      catch: /unknown field \[headers\], parser not found/, +      xpack.ml.put_datafeed:, +        datafeed_id: test-datafeed-1, +        body:  >, +          {, +            "job_id":"datafeeds-crud-1",, +            "indices":["index-foo"],, +            "headers":{ "a_security_header" : "secret" }, +          }, +, +---, +++ b/qa/smoke-test-ml-with-security/build.gradle, +    'ml/datafeeds_crud/Test put datafeed with security headers in the body',]