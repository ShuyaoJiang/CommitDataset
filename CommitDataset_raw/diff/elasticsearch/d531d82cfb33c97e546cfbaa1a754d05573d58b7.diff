[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/component/Lifecycle.java, +    public boolean stoppedOrClosed() {, +        Lifecycle.State state = this.state;, +        return state == State.STOPPED || state == State.CLOSED;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/component/Lifecycle.java, +    public boolean stoppedOrClosed() {, +        Lifecycle.State state = this.state;, +        return state == State.STOPPED || state == State.CLOSED;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +        // do the join on a different thread, the DiscoveryService waits for 30s anyhow till it is discovered, +                joinCluster();, +    private void joinCluster() {, +            if (lifecycle.stoppedOrClosed()) {, +                return;, +            }, +            DiscoveryNode masterNode = findMaster();, +            if (masterNode == null) {, +                retry = true;, +                continue;, +            }, +    private void handleMasterGone(final DiscoveryNode masterNode, final String reason) {, +        logger.info("master_left [{}], reason [{}]", masterNode, reason);, +, +        clusterService.submitStateUpdateTask("zen-disco-master_failed (" + masterNode + ")", new ProcessedClusterStateUpdateTask() {, +            @Override public ClusterState execute(ClusterState currentState) {, +                if (!masterNode.id().equals(currentState.nodes().masterNodeId())) {, +                    // master got switched on us, no need to send anything, +                    return currentState;, +                }, +, +                List<DiscoveryNode> nodes = newArrayList(currentState.nodes().nodes().values());, +                final DiscoveryNode electedMaster = electMaster.electMaster(nodes); // elect master, +                    master = true;, +                    DiscoveryNodes.Builder builder = DiscoveryNodes.newNodesBuilder(), +                } else {, +                    nodesFD.stop();, +                    DiscoveryNodes.Builder builder = DiscoveryNodes.newNodesBuilder(), +                            .putAll(currentState.nodes()).remove(masterNode.id());, +                    if (electedMaster != null) {, +                        builder.masterNodeId(electedMaster.id());, +                        masterFD.restart(electedMaster, "possible elected master since master left (reason = " + reason + ")");, +                    } else {, +                        builder.masterNodeId(null);, +                        masterFD.stop("no master elected since master left (reason = " + reason + ")");, +                        // try and join the cluster again..., +                        threadPool.execute(new Runnable() {, +                            @Override public void run() {, +                                joinCluster();, +                            }, +                        });, +                    }, +                    latestDiscoNodes = builder.build();, +                    return newClusterStateBuilder().state(currentState).nodes(latestDiscoNodes).build();, +                }, +, +    void handleNewClusterStateFromMaster(final ClusterState clusterState) {, +            if (clusterState.nodes().localNode() == null) {, +                logger.warn("received a cluster state from [{}] and not part of the cluster, should not happen", clusterState.nodes().masterNode());, +            } else {, +                clusterService.submitStateUpdateTask("zen-disco-receive(from [" + clusterState.nodes().masterNode() + "])", new ProcessedClusterStateUpdateTask() {, +                    @Override public ClusterState execute(ClusterState currentState) {, +    private DiscoveryNode findMaster() {, +        return null;, +            handleNewClusterStateFromMaster(clusterState);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/component/Lifecycle.java, +    public boolean stoppedOrClosed() {, +        Lifecycle.State state = this.state;, +        return state == State.STOPPED || state == State.CLOSED;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +        // do the join on a different thread, the DiscoveryService waits for 30s anyhow till it is discovered, +                joinCluster();, +    private void joinCluster() {, +            if (lifecycle.stoppedOrClosed()) {, +                return;, +            }, +            DiscoveryNode masterNode = findMaster();, +            if (masterNode == null) {, +                retry = true;, +                continue;, +            }, +    private void handleMasterGone(final DiscoveryNode masterNode, final String reason) {, +        logger.info("master_left [{}], reason [{}]", masterNode, reason);, +, +        clusterService.submitStateUpdateTask("zen-disco-master_failed (" + masterNode + ")", new ProcessedClusterStateUpdateTask() {, +            @Override public ClusterState execute(ClusterState currentState) {, +                if (!masterNode.id().equals(currentState.nodes().masterNodeId())) {, +                    // master got switched on us, no need to send anything, +                    return currentState;, +                }, +, +                List<DiscoveryNode> nodes = newArrayList(currentState.nodes().nodes().values());, +                final DiscoveryNode electedMaster = electMaster.electMaster(nodes); // elect master, +                    master = true;, +                    DiscoveryNodes.Builder builder = DiscoveryNodes.newNodesBuilder()]