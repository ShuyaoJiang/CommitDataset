[+++ b/src/test/java/org/elasticsearch/aliases/IndexAliasesTests.java, +import static org.elasticsearch.client.Requests.createIndexRequest;, +import static org.elasticsearch.client.Requests.indexRequest;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +        assertAcked(admin().indices().prepareAliases().addAlias("test", "alias1"));, +        logger.info("--> creating index [test_x]");, +        createIndex("test_x");, +        assertAcked(admin().indices().prepareAliases().removeAlias("test", "alias1").addAlias("test_x", "alias1"));, +            admin().indices().prepareAliases().addAlias("test", "alias1", "{ t }").get();, +        assertAcked(admin().indices().prepareAliases().addAlias("test", "alias1", filter));, +        ClusterState clusterState = admin().cluster().prepareState().get().getState();, +        assertAcked(admin().indices().prepareAliases().addAlias("test", "alias1", "{}"));, +        assertAcked(admin().indices().prepareAliases().addAlias("test", "alias1"));, +        assertAcked(admin().indices().prepareAliases().addAlias("test", "alias2"));, +        assertAcked(admin().indices().prepareAliases().addAlias("test", "foos", termFilter("name", "foo")));, +        assertAcked(admin().indices().prepareAliases().addAlias("test", "bars", termFilter("name", "bar")));, +        assertAcked(admin().indices().prepareAliases().addAlias("test", "tests", termFilter("name", "test")));, +        SearchResponse searchResponse = client().prepareSearch("foos").setQuery(QueryBuilders.matchAllQuery()).get();, +        searchResponse = client().prepareSearch("fo*").setQuery(QueryBuilders.matchAllQuery()).get();, +        searchResponse = client().prepareSearch("tests").setQuery(QueryBuilders.matchAllQuery()).get();, +        searchResponse = client().prepareSearch("tests").setQuery(QueryBuilders.matchAllQuery()).addSort("_uid", SortOrder.ASC).get();, +                .get();, +                .addSort("_uid", SortOrder.ASC).get();, +                .addSort("_uid", SortOrder.ASC).get();, +        searchResponse = client().prepareSearch("foos", "bars").setQuery(QueryBuilders.matchAllQuery()).get();, +        searchResponse = client().prepareSearch("alias1").setQuery(QueryBuilders.matchAllQuery()).get();, +        searchResponse = client().prepareSearch("alias1", "foos").setQuery(QueryBuilders.matchAllQuery()).get();, +        searchResponse = client().prepareSearch("test", "foos").setQuery(QueryBuilders.matchAllQuery()).get();, +        searchResponse = client().prepareSearch("te*", "fo*").setQuery(QueryBuilders.matchAllQuery()).get();, +        createIndex("test1");, +        createIndex("test2");, +        assertAcked(admin().indices().prepareAliases().addAlias("test1", "aliasToTest1"));, +        assertAcked(admin().indices().prepareAliases().addAlias("test1", "aliasToTests"));, +        assertAcked(admin().indices().prepareAliases().addAlias("test1", "foos", termFilter("name", "foo")));, +        assertAcked(admin().indices().prepareAliases().addAlias("test1", "bars", termFilter("name", "bar")));, +        assertAcked(admin().indices().prepareAliases().addAlias("test2", "aliasToTest2"));, +        assertAcked(admin().indices().prepareAliases().addAlias("test2", "aliasToTests"));, +        assertAcked(admin().indices().prepareAliases().addAlias("test2", "foos", termFilter("name", "foo")));, +        client().index(indexRequest("test1").type("type1").id("1").source(source("1", "foo test"))).get();, +        client().index(indexRequest("test1").type("type1").id("2").source(source("2", "bar test"))).get();, +        client().index(indexRequest("test1").type("type1").id("3").source(source("3", "baz test"))).get();, +        client().index(indexRequest("test1").type("type1").id("4").source(source("4", "something else"))).get();, +        client().index(indexRequest("test2").type("type1").id("5").source(source("5", "foo test"))).get();, +        client().index(indexRequest("test2").type("type1").id("6").source(source("6", "bar test"))).get();, +        client().index(indexRequest("test2").type("type1").id("7").source(source("7", "baz test"))).get();, +        client().index(indexRequest("test2").type("type1").id("8").source(source("8", "something else"))).get();, +, +        refresh();, +        SearchResponse searchResponse = client().prepareSearch("foos").setQuery(QueryBuilders.matchAllQuery()).get();, +        assertThat(client().prepareCount("foos").setQuery(QueryBuilders.matchAllQuery()).get().getCount(), equalTo(2L));, +        searchResponse = client().prepareSearch("bars").setQuery(QueryBuilders.matchAllQuery()).get();, +        assertThat(client().prepareCount("bars").setQuery(QueryBuilders.matchAllQuery()).get().getCount(), equalTo(1L));, +        searchResponse = client().prepareSearch("foos", "test1").setQuery(QueryBuilders.matchAllQuery()).get();, +        assertThat(client().prepareCount("foos", "test1").setQuery(QueryBuilders.matchAllQuery()).get().getCount(), equalTo(5L));, +        searchResponse = client().prepareSearch("foos", "aliasToTest1").setQuery(QueryBuilders.matchAllQuery()).get();, +        assertThat(client().prepareCount("foos", "aliasToTest1").setQuery(QueryBuilders.matchAllQuery()).get().getCount(), equalTo(5L));, +        searchResponse = client().prepareSearch("foos", "aliasToTests").setQuery(QueryBuilders.matchAllQuery()).get();, +        assertThat(client().prepareCount("foos", "aliasToTests").setQuery(QueryBuilders.matchAllQuery()).get().getCount(), equalTo(8L));, +        searchResponse = client().prepareSearch("foos", "aliasToTests").setQuery(QueryBuilders.termQuery("name", "something")).get();, +        assertThat(client().prepareCount("foos", "aliasToTests").setQuery(QueryBuilders.termQuery("name", "something")).get().getCount(), equalTo(2L));, +        createIndex("test1", "test2", "test3");, +        assertAcked(admin().indices().prepareAliases().addAlias("test1", "alias12"));, +        assertAcked(admin().indices().prepareAliases().addAlias("test2", "alias12"));, +        assertAcked(admin().indices().prepareAliases().addAlias("test1", "filter1", termFilter("name", "test1")));, +        assertAcked(admin().indices().prepareAliases().addAlias("test2", "filter23", termFilter("name", "foo")));, +        assertAcked(admin().indices().prepareAliases().addAlias("test3", "filter23", termFilter("name", "foo")));, +        assertAcked(admin().indices().prepareAliases().addAlias("test1", "filter13", termFilter("name", "baz")));, +        assertAcked(admin().indices().prepareAliases().addAlias("test3", "filter13", termFilter("name", "baz")));, +        client().index(indexRequest("test1").type("type1").id("11").source(source("11", "foo test1"))).get();, +        client().index(indexRequest("test1").type("type1").id("12").source(source("12", "bar test1"))).get();, +        client().index(indexRequest("test1").type("type1").id("13").source(source("13", "baz test1"))).get();, +        client().index(indexRequest("test2").type("type1").id("21").source(source("21", "foo test2"))).get();, +        client().index(indexRequest("test2").type("type1").id("22").source(source("22", "bar test2"))).get();, +        client().index(indexRequest("test2").type("type1").id("23").source(source("23", "baz test2"))).get();, +        client().index(indexRequest("test3").type("type1").id("31").source(source("31", "foo test3"))).get();, +        client().index(indexRequest("test3").type("type1").id("32").source(source("32", "bar test3"))).get();, +        client().index(indexRequest("test3").type("type1").id("33").source(source("33", "baz test3"))).get();, +, +        refresh();, +        SearchResponse searchResponse = client().prepareSearch("filter23", "filter13").setQuery(QueryBuilders.matchAllQuery()).get();, +        assertThat(client().prepareCount("filter23", "filter13").setQuery(QueryBuilders.matchAllQuery()).get().getCount(), equalTo(4L));, +        searchResponse = client().prepareSearch("filter23", "filter1").setQuery(QueryBuilders.matchAllQuery()).get();, +        assertThat(client().prepareCount("filter23", "filter1").setQuery(QueryBuilders.matchAllQuery()).get().getCount(), equalTo(5L));, +        searchResponse = client().prepareSearch("filter13", "filter1").setQuery(QueryBuilders.matchAllQuery()).get();, +        assertThat(client().prepareCount("filter13", "filter1").setQuery(QueryBuilders.matchAllQuery()).get().getCount(), equalTo(4L));, +        searchResponse = client().prepareSearch("filter13", "filter1", "filter23").setQuery(QueryBuilders.matchAllQuery()).get();, +        assertThat(client().prepareCount("filter13", "filter1", "filter23").setQuery(QueryBuilders.matchAllQuery()).get().getCount(), equalTo(6L));, +        searchResponse = client().prepareSearch("filter23", "filter13", "test2").setQuery(QueryBuilders.matchAllQuery()).get();, +        assertThat(client().prepareCount("filter23", "filter13", "test2").setQuery(QueryBuilders.matchAllQuery()).get().getCount(), equalTo(6L));, +        searchResponse = client().prepareSearch("filter23", "filter13", "test1", "test2").setQuery(QueryBuilders.matchAllQuery()).get();, +        assertThat(client().prepareCount("filter23", "filter13", "test1", "test2").setQuery(QueryBuilders.matchAllQuery()).get().getCount(), equalTo(8L));, +        logger.info("--> creating index [test1] and [test2");, +        createIndex("test1", "test2");, +        assertAcked(admin().indices().prepareAliases().addAlias("test1", "aliasToTest1"));, +        assertAcked(admin().indices().prepareAliases().addAlias("test1", "aliasToTests"));, +        assertAcked(admin().indices().prepareAliases().addAlias("test1", "foos", termFilter("name", "foo")));, +        assertAcked(admin().indices().prepareAliases().addAlias("test1", "bars", termFilter("name", "bar")));, +        assertAcked(admin().indices().prepareAliases().addAlias("test1", "tests", termFilter("name", "test")));, +        assertAcked(admin().indices().prepareAliases().addAlias("test2", "aliasToTest2"));, +        assertAcked(admin().indices().prepareAliases().addAlias("test2", "aliasToTests"));]