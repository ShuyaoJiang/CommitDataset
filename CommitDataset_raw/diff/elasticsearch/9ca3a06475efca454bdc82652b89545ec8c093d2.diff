[+++ b/server/src/main/java/org/elasticsearch/index/search/MatchQuery.java, +            } catch (IllegalArgumentException | IllegalStateException e) {, +            } catch (IllegalArgumentException | IllegalStateException e) {, +++ b/server/src/main/java/org/elasticsearch/index/search/MatchQuery.java, +            } catch (IllegalArgumentException | IllegalStateException e) {, +            } catch (IllegalArgumentException | IllegalStateException e) {, +++ b/server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java, +            PhraseQuery pq1 = new PhraseQuery.Builder(), +                .add(new Term(STRING_FIELD_NAME, "that")), +                .add(new Term(STRING_FIELD_NAME, "guinea")), +                .add(new Term(STRING_FIELD_NAME, "pig")), +                .add(new Term(STRING_FIELD_NAME, "smells")), +            PhraseQuery pq2 = new PhraseQuery.Builder(), +                .add(new Term(STRING_FIELD_NAME, "that")), +                .add(new Term(STRING_FIELD_NAME, "cavy")), +                .add(new Term(STRING_FIELD_NAME, "smells")), +                .setSlop(2), +                .build();, +            expectedQuery = new BooleanQuery.Builder(), +                .add(pq1, Occur.SHOULD), +                .add(pq2, Occur.SHOULD), +                .build();, +++ b/server/src/main/java/org/elasticsearch/index/search/MatchQuery.java, +            } catch (IllegalArgumentException | IllegalStateException e) {, +            } catch (IllegalArgumentException | IllegalStateException e) {, +++ b/server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java, +            PhraseQuery pq1 = new PhraseQuery.Builder(), +                .add(new Term(STRING_FIELD_NAME, "that")), +                .add(new Term(STRING_FIELD_NAME, "guinea")), +                .add(new Term(STRING_FIELD_NAME, "pig")), +                .add(new Term(STRING_FIELD_NAME, "smells")), +            PhraseQuery pq2 = new PhraseQuery.Builder(), +                .add(new Term(STRING_FIELD_NAME, "that")), +                .add(new Term(STRING_FIELD_NAME, "cavy")), +                .add(new Term(STRING_FIELD_NAME, "smells")), +                .setSlop(2), +                .build();, +            expectedQuery = new BooleanQuery.Builder(), +                .add(pq1, Occur.SHOULD), +                .add(pq2, Occur.SHOULD), +                .build();, +++ b/server/src/test/java/org/elasticsearch/index/query/SimpleQueryStringBuilderTests.java, +import org.apache.lucene.search.PhraseQuery;, +            PhraseQuery pq1 = new PhraseQuery.Builder(), +                .add(new Term(STRING_FIELD_NAME, "tiny")), +                .add(new Term(STRING_FIELD_NAME, "guinea")), +                .add(new Term(STRING_FIELD_NAME, "pig")), +                .setSlop(2), +                .build();, +            PhraseQuery pq2 = new PhraseQuery.Builder(), +                .add(new Term(STRING_FIELD_NAME, "tiny")), +                .add(new Term(STRING_FIELD_NAME, "cavy")), +                .setSlop(2), +                .build();, +                .add(new BooleanQuery.Builder(), +                        .add(pq1, BooleanClause.Occur.SHOULD), +                        .add(pq2, BooleanClause.Occur.SHOULD), +                        .build(),, +                    defaultOp)]