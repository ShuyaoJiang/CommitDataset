[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/tasks/TransportPendingClusterTasksAction.java, +        listener.onResponse(new PendingClusterTasksResponse(clusterService.pendingTasks()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/tasks/TransportPendingClusterTasksAction.java, +        listener.onResponse(new PendingClusterTasksResponse(clusterService.pendingTasks()));, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisService.java, +import org.elasticsearch.index.mapper.core.TextFieldMapper;, +            int overridePositionIncrementGap = TextFieldMapper.Defaults.POSITION_INCREMENT_GAP;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/tasks/TransportPendingClusterTasksAction.java, +        listener.onResponse(new PendingClusterTasksResponse(clusterService.pendingTasks()));, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisService.java, +import org.elasticsearch.index.mapper.core.TextFieldMapper;, +            int overridePositionIncrementGap = TextFieldMapper.Defaults.POSITION_INCREMENT_GAP;, +++ b/core/src/main/java/org/elasticsearch/index/analysis/CustomAnalyzerProvider.java, +import org.elasticsearch.index.mapper.core.TextFieldMapper;, +        int positionIncrementGap = TextFieldMapper.Defaults.POSITION_INCREMENT_GAP;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/tasks/TransportPendingClusterTasksAction.java, +        listener.onResponse(new PendingClusterTasksResponse(clusterService.pendingTasks()));, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisService.java, +import org.elasticsearch.index.mapper.core.TextFieldMapper;, +            int overridePositionIncrementGap = TextFieldMapper.Defaults.POSITION_INCREMENT_GAP;, +++ b/core/src/main/java/org/elasticsearch/index/analysis/CustomAnalyzerProvider.java, +import org.elasticsearch.index.mapper.core.TextFieldMapper;, +        int positionIncrementGap = TextFieldMapper.Defaults.POSITION_INCREMENT_GAP;, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +import org.elasticsearch.index.mapper.core.TextFieldMapper;, +        buildersByTypeBuilder.put(TextFieldMapper.CONTENT_TYPE, new PagedBytesIndexFieldData.Builder());, +                .put(Tuple.tuple(TextFieldMapper.CONTENT_TYPE, PAGED_BYTES_FORMAT), new PagedBytesIndexFieldData.Builder()), +                .put(Tuple.tuple(TextFieldMapper.CONTENT_TYPE, DISABLED_FORMAT), DISABLED_BUILDER), +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/tasks/TransportPendingClusterTasksAction.java, +        listener.onResponse(new PendingClusterTasksResponse(clusterService.pendingTasks()));, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisService.java, +import org.elasticsearch.index.mapper.core.TextFieldMapper;, +            int overridePositionIncrementGap = TextFieldMapper.Defaults.POSITION_INCREMENT_GAP;, +++ b/core/src/main/java/org/elasticsearch/index/analysis/CustomAnalyzerProvider.java, +import org.elasticsearch.index.mapper.core.TextFieldMapper;, +        int positionIncrementGap = TextFieldMapper.Defaults.POSITION_INCREMENT_GAP;, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +import org.elasticsearch.index.mapper.core.TextFieldMapper;, +        buildersByTypeBuilder.put(TextFieldMapper.CONTENT_TYPE, new PagedBytesIndexFieldData.Builder());, +                .put(Tuple.tuple(TextFieldMapper.CONTENT_TYPE, PAGED_BYTES_FORMAT), new PagedBytesIndexFieldData.Builder()), +                .put(Tuple.tuple(TextFieldMapper.CONTENT_TYPE, DISABLED_FORMAT), DISABLED_BUILDER), +, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +import org.elasticsearch.index.mapper.core.KeywordFieldMapper;, +import org.elasticsearch.index.mapper.core.KeywordFieldMapper.KeywordFieldType;, +import org.elasticsearch.index.mapper.core.TextFieldMapper;, +import org.elasticsearch.index.mapper.core.TextFieldMapper.TextFieldType;, +        } else if (fieldType instanceof TextFieldType) {, +            builder = context.root().findTemplateBuilder(context, currentFieldName, "string");, +            if (builder == null) {, +                builder = new TextFieldMapper.Builder(currentFieldName);, +            }, +        } else if (fieldType instanceof KeywordFieldType) {, +            builder = context.root().findTemplateBuilder(context, currentFieldName, "string");, +            if (builder == null) {, +                builder = new KeywordFieldMapper.Builder(currentFieldName);, +            }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/tasks/TransportPendingClusterTasksAction.java, +        listener.onResponse(new PendingClusterTasksResponse(clusterService.pendingTasks()));, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisService.java, +import org.elasticsearch.index.mapper.core.TextFieldMapper;, +            int overridePositionIncrementGap = TextFieldMapper.Defaults.POSITION_INCREMENT_GAP;, +++ b/core/src/main/java/org/elasticsearch/index/analysis/CustomAnalyzerProvider.java, +import org.elasticsearch.index.mapper.core.TextFieldMapper;, +        int positionIncrementGap = TextFieldMapper.Defaults.POSITION_INCREMENT_GAP;, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +import org.elasticsearch.index.mapper.core.TextFieldMapper;, +        buildersByTypeBuilder.put(TextFieldMapper.CONTENT_TYPE, new PagedBytesIndexFieldData.Builder());, +                .put(Tuple.tuple(TextFieldMapper.CONTENT_TYPE, PAGED_BYTES_FORMAT), new PagedBytesIndexFieldData.Builder()), +                .put(Tuple.tuple(TextFieldMapper.CONTENT_TYPE, DISABLED_FORMAT), DISABLED_BUILDER), +, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +import org.elasticsearch.index.mapper.core.KeywordFieldMapper;, +import org.elasticsearch.index.mapper.core.KeywordFieldMapper.KeywordFieldType;, +import org.elasticsearch.index.mapper.core.TextFieldMapper;, +import org.elasticsearch.index.mapper.core.TextFieldMapper.TextFieldType;, +        } else if (fieldType instanceof TextFieldType) {, +            builder = context.root().findTemplateBuilder(context, currentFieldName, "string");, +            if (builder == null) {, +                builder = new TextFieldMapper.Builder(currentFieldName);, +            }, +        } else if (fieldType instanceof KeywordFieldType) {, +            builder = context.root().findTemplateBuilder(context, currentFieldName, "string");, +            if (builder == null) {, +                builder = new KeywordFieldMapper.Builder(currentFieldName);, +            }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +        public T searchQuoteAnalyzer(NamedAnalyzer searchQuoteAnalyzer) {, +            this.fieldType.setSearchQuoteAnalyzer(searchQuoteAnalyzer);, +            return builder;, +        }, +, +                if (!customBoost(), +                        // don't set boosts eg. on dv fields, +                        && field.fieldType().indexOptions() != IndexOptions.NONE) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/tasks/TransportPendingClusterTasksAction.java, +        listener.onResponse(new PendingClusterTasksResponse(clusterService.pendingTasks()));, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisService.java, +import org.elasticsearch.index.mapper.core.TextFieldMapper;]