[+++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +                engine.create(new Engine.Create(null, new Term("_id", sId), pDoc));, +                engine.index(new Engine.Index(null, new Term("_id", sId), pDoc));, +                        engine.create(new Engine.Create(null, new Term("_id", sId), pDoc));, +                        engine.index(new Engine.Index(null, new Term("_id", sId), pDoc));, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +                engine.create(new Engine.Create(null, new Term("_id", sId), pDoc));, +                engine.index(new Engine.Index(null, new Term("_id", sId), pDoc));, +                        engine.create(new Engine.Create(null, new Term("_id", sId), pDoc));, +                        engine.index(new Engine.Index(null, new Term("_id", sId), pDoc));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +        Engine.IndexingOperation[] ops = new Engine.IndexingOperation[request.items().length];, +                    Engine.IndexingOperation op;, +                        indexShard.index(index);, +                        indexShard.create(create);, +                    if (op.parsedDoc().mappersAdded()) {, +                            ops = new Engine.IndexingOperation[request.items().length];, +                    } else {, +                        op.docMapper().processDocumentAfterIndex(op.doc());, +        Engine.IndexingOperation[] ops = (Engine.IndexingOperation[]) response.payload();, +            Engine.IndexingOperation op = ops[i];, +            if (op == null) {, +                    PercolatorExecutor.Response percolate = indexService.percolateService().percolate(new PercolatorExecutor.DocAndSourceQueryRequest(op.parsedDoc(), indexRequest.percolate()));, +                } finally {, +                    op.docMapper().processDocumentAfterIndex(op.doc());, +                        index.docMapper().processDocumentAfterIndex(index.doc());, +                        create.docMapper().processDocumentAfterIndex(create.doc());, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +                engine.create(new Engine.Create(null, new Term("_id", sId), pDoc));, +                engine.index(new Engine.Index(null, new Term("_id", sId), pDoc));, +                        engine.create(new Engine.Create(null, new Term("_id", sId), pDoc));, +                        engine.index(new Engine.Index(null, new Term("_id", sId), pDoc));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +        Engine.IndexingOperation[] ops = new Engine.IndexingOperation[request.items().length];, +                    Engine.IndexingOperation op;, +                        indexShard.index(index);, +                        indexShard.create(create);, +                    if (op.parsedDoc().mappersAdded()) {, +                            ops = new Engine.IndexingOperation[request.items().length];, +                    } else {, +                        op.docMapper().processDocumentAfterIndex(op.doc());, +        Engine.IndexingOperation[] ops = (Engine.IndexingOperation[]) response.payload();, +            Engine.IndexingOperation op = ops[i];, +            if (op == null) {, +                    PercolatorExecutor.Response percolate = indexService.percolateService().percolate(new PercolatorExecutor.DocAndSourceQueryRequest(op.parsedDoc(), indexRequest.percolate()));, +                } finally {, +                    op.docMapper().processDocumentAfterIndex(op.doc());, +                        index.docMapper().processDocumentAfterIndex(index.doc());, +                        create.docMapper().processDocumentAfterIndex(create.doc());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        Engine.IndexingOperation op;, +            indexShard.index(index);, +            op = index;, +            indexShard.create(create);, +            op = create;, +        if (op.parsedDoc().mappersAdded()) {, +        return new PrimaryResponse<IndexResponse>(response, op);, +        Engine.IndexingOperation op = (Engine.IndexingOperation) response.payload();, +            op.docMapper().processDocumentAfterIndex(op.doc());, +            PercolatorExecutor.Response percolate = indexService.percolateService().percolate(new PercolatorExecutor.DocAndSourceQueryRequest(op.parsedDoc(), request.percolate()));, +        } finally {, +            op.docMapper().processDocumentAfterIndex(op.doc());, +            index.docMapper().processDocumentAfterIndex(index.doc());, +            create.docMapper().processDocumentAfterIndex(create.doc());, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +                engine.create(new Engine.Create(null, new Term("_id", sId), pDoc));, +                engine.index(new Engine.Index(null, new Term("_id", sId), pDoc));, +                        engine.create(new Engine.Create(null, new Term("_id", sId), pDoc));, +                        engine.index(new Engine.Index(null, new Term("_id", sId), pDoc));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +        Engine.IndexingOperation[] ops = new Engine.IndexingOperation[request.items().length];, +                    Engine.IndexingOperation op;, +                        indexShard.index(index);, +                        indexShard.create(create);, +                    if (op.parsedDoc().mappersAdded()) {, +                            ops = new Engine.IndexingOperation[request.items().length];, +                    } else {, +                        op.docMapper().processDocumentAfterIndex(op.doc());, +        Engine.IndexingOperation[] ops = (Engine.IndexingOperation[]) response.payload();, +            Engine.IndexingOperation op = ops[i];, +            if (op == null) {, +                    PercolatorExecutor.Response percolate = indexService.percolateService().percolate(new PercolatorExecutor.DocAndSourceQueryRequest(op.parsedDoc(), indexRequest.percolate()));, +                } finally {, +                    op.docMapper().processDocumentAfterIndex(op.doc());, +                        index.docMapper().processDocumentAfterIndex(index.doc());, +                        create.docMapper().processDocumentAfterIndex(create.doc());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        Engine.IndexingOperation op;, +            indexShard.index(index);, +            op = index;, +            indexShard.create(create);, +            op = create;, +        if (op.parsedDoc().mappersAdded()) {, +        return new PrimaryResponse<IndexResponse>(response, op);, +        Engine.IndexingOperation op = (Engine.IndexingOperation) response.payload();, +            op.docMapper().processDocumentAfterIndex(op.doc());, +            PercolatorExecutor.Response percolate = indexService.percolateService().percolate(new PercolatorExecutor.DocAndSourceQueryRequest(op.parsedDoc(), request.percolate()));, +        } finally {, +            op.docMapper().processDocumentAfterIndex(op.doc());, +            index.docMapper().processDocumentAfterIndex(index.doc());]