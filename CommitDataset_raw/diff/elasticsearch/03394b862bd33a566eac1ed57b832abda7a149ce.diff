[+++ b/server/src/main/java/org/elasticsearch/index/IndexModule.java, +            IndexService.IndexCreationContext indexCreationContext,, +        return new IndexService(indexSettings, indexCreationContext, environment, xContentRegistry,, +++ b/server/src/main/java/org/elasticsearch/index/IndexModule.java, +            IndexService.IndexCreationContext indexCreationContext,, +        return new IndexService(indexSettings, indexCreationContext, environment, xContentRegistry,, +++ b/server/src/main/java/org/elasticsearch/index/IndexService.java, +            IndexCreationContext indexCreationContext,, +        if (indexSettings.getIndexMetaData().getState() == IndexMetaData.State.CLOSE &&, +            indexCreationContext == IndexCreationContext.CREATE_INDEX) { // metadata verification needs a mapper service, +            this.mapperService = null;, +            this.indexFieldData = null;, +            this.indexSortSupplier = () -> null;, +            this.bitsetFilterCache = null;, +            this.warmer = null;, +            this.indexCache = null;, +        } else {, +            indexFieldData.setListener(new FieldDataCacheListener(this));, +            this.bitsetFilterCache = new BitsetFilterCache(indexSettings, new BitsetCacheListener(this));, +            this.warmer = new IndexWarmer(threadPool, indexFieldData, bitsetFilterCache.createListener(threadPool));, +            this.indexCache = new IndexCache(indexSettings, queryCache, bitsetFilterCache);, +        }, +, +    public enum IndexCreationContext {, +        CREATE_INDEX,, +        META_DATA_VERIFICATION, +    }, +, +        if (mapperService == null) {, +            return false;, +        }, +        return mapperService.updateMapping(currentIndexMetaData, newIndexMetaData);, +++ b/server/src/main/java/org/elasticsearch/index/IndexModule.java, +            IndexService.IndexCreationContext indexCreationContext,, +        return new IndexService(indexSettings, indexCreationContext, environment, xContentRegistry,, +++ b/server/src/main/java/org/elasticsearch/index/IndexService.java, +            IndexCreationContext indexCreationContext,, +        if (indexSettings.getIndexMetaData().getState() == IndexMetaData.State.CLOSE &&, +            indexCreationContext == IndexCreationContext.CREATE_INDEX) { // metadata verification needs a mapper service, +            this.mapperService = null;, +            this.indexFieldData = null;, +            this.indexSortSupplier = () -> null;, +            this.bitsetFilterCache = null;, +            this.warmer = null;, +            this.indexCache = null;, +        } else {, +            indexFieldData.setListener(new FieldDataCacheListener(this));, +            this.bitsetFilterCache = new BitsetFilterCache(indexSettings, new BitsetCacheListener(this));, +            this.warmer = new IndexWarmer(threadPool, indexFieldData, bitsetFilterCache.createListener(threadPool));, +            this.indexCache = new IndexCache(indexSettings, queryCache, bitsetFilterCache);, +        }, +, +    public enum IndexCreationContext {, +        CREATE_INDEX,, +        META_DATA_VERIFICATION, +    }, +, +        if (mapperService == null) {, +            return false;, +        }, +        return mapperService.updateMapping(currentIndexMetaData, newIndexMetaData);, +++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                mapperService != null ? mapperService.indexAnalyzer() : null,, +                similarityService.similarity(mapperService), codecService, shardEventListener,, +                indexCache != null ? indexCache.query() : null, cachingPolicy, translogConfig,, +        final DocumentMapper noopDocumentMapper = mapperService != null ?, +            new DocumentMapper.Builder(noopRootMapper, mapperService).build(mapperService) :, +            null;, +++ b/server/src/main/java/org/elasticsearch/index/IndexModule.java, +            IndexService.IndexCreationContext indexCreationContext,, +        return new IndexService(indexSettings, indexCreationContext, environment, xContentRegistry,, +++ b/server/src/main/java/org/elasticsearch/index/IndexService.java, +            IndexCreationContext indexCreationContext,, +        if (indexSettings.getIndexMetaData().getState() == IndexMetaData.State.CLOSE &&, +            indexCreationContext == IndexCreationContext.CREATE_INDEX) { // metadata verification needs a mapper service, +            this.mapperService = null;, +            this.indexFieldData = null;, +            this.indexSortSupplier = () -> null;, +            this.bitsetFilterCache = null;, +            this.warmer = null;, +            this.indexCache = null;, +        } else {, +            indexFieldData.setListener(new FieldDataCacheListener(this));, +            this.bitsetFilterCache = new BitsetFilterCache(indexSettings, new BitsetCacheListener(this));, +            this.warmer = new IndexWarmer(threadPool, indexFieldData, bitsetFilterCache.createListener(threadPool));, +            this.indexCache = new IndexCache(indexSettings, queryCache, bitsetFilterCache);, +        }, +, +    public enum IndexCreationContext {, +        CREATE_INDEX,, +        META_DATA_VERIFICATION, +    }, +, +        if (mapperService == null) {, +            return false;, +        }, +        return mapperService.updateMapping(currentIndexMetaData, newIndexMetaData);, +++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                mapperService != null ? mapperService.indexAnalyzer() : null,, +                similarityService.similarity(mapperService), codecService, shardEventListener,]