[+++ b/src/test/java/org/elasticsearch/test/integration/cluster/MinimumMasterNodesTests.java, +import com.google.common.base.Predicate;, +import java.util.concurrent.TimeUnit;, +        super.tearDown();, +        final String noMasterNode = nonMasterNodeName;, +        awaitBusy(new Predicate<Object>() {, +            public boolean apply(Object obj) {, +                ClusterState  state = client(noMasterNode).admin().cluster().prepareState().setLocal(true).execute().actionGet().getState();, +                return state.blocks().hasGlobalBlock(Discovery.NO_MASTER_BLOCK);, +        });, +        final String masterNode = masterNodeName;, +        awaitBusy(new Predicate<Object>() {, +            public boolean apply(Object obj) {, +                ClusterState state = client(masterNode).admin().cluster().prepareState().setLocal(true).execute().actionGet().getState();, +                return state.blocks().hasGlobalBlock(Discovery.NO_MASTER_BLOCK);, +        });, +        awaitBusy(new Predicate<Object>() {, +            public boolean apply(Object obj) {, +                ClusterState state = client("node1").admin().cluster().prepareState().setLocal(true).execute().actionGet().getState();, +                return state.blocks().hasGlobalBlock(Discovery.NO_MASTER_BLOCK);, +        });, +        , +        awaitBusy(new Predicate<Object>() {, +            public boolean apply(Object obj) {, +                ClusterState state = client("node2").admin().cluster().prepareState().setLocal(true).execute().actionGet().getState();, +                return state.blocks().hasGlobalBlock(Discovery.NO_MASTER_BLOCK);, +        });, +        final String masterNode = state.nodes().masterNode().name();, +        final String lastNonMasterNodeUp = nonMasterNodes.removeLast();, +        awaitBusy(new Predicate<Object>() {, +            public boolean apply(Object obj) {, +                ClusterState state = client(masterNode).admin().cluster().prepareState().setLocal(true).execute().actionGet().getState();, +                return firstNoMasterLock && secondNoMasterLock;, +        }, 20, TimeUnit.SECONDS);, +      ]