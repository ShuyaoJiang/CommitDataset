[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]rest[/\\]client[/\\]RestClient.java" checks="LineLength" />, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]rest[/\\]client[/\\]RestClient.java" checks="LineLength" />, +++ b/buildSrc/version.properties, +# TODO: Upgrade httpclient to a version > 4.5.1 once released. Then remove o.e.test.rest.client.StrictHostnameVerifier* and use, +#  DefaultHostnameVerifier instead since we no longer need to workaround https://issues.apache.org/jira/browse/HTTPCLIENT-1698, +httpclient        = 4.3.6, +httpcore          = 4.3.3, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]rest[/\\]client[/\\]RestClient.java" checks="LineLength" />, +++ b/buildSrc/version.properties, +# TODO: Upgrade httpclient to a version > 4.5.1 once released. Then remove o.e.test.rest.client.StrictHostnameVerifier* and use, +#  DefaultHostnameVerifier instead since we no longer need to workaround https://issues.apache.org/jira/browse/HTTPCLIENT-1698, +httpclient        = 4.3.6, +httpcore          = 4.3.3, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsIndices.java, +import org.elasticsearch.index.percolator.PercolatorQueryCacheStats;, +    private PercolatorQueryCacheStats percolatorCache;, +        this.percolatorCache = new PercolatorQueryCacheStats();, +                percolatorCache.add(shardCommonStats.percolatorCache);, +    public PercolatorQueryCacheStats getPercolatorCache() {, +        return percolatorCache;, +    }, +, +        percolatorCache.toXContent(builder, params);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]rest[/\\]client[/\\]RestClient.java" checks="LineLength" />, +++ b/buildSrc/version.properties, +# TODO: Upgrade httpclient to a version > 4.5.1 once released. Then remove o.e.test.rest.client.StrictHostnameVerifier* and use, +#  DefaultHostnameVerifier instead since we no longer need to workaround https://issues.apache.org/jira/browse/HTTPCLIENT-1698, +httpclient        = 4.3.6, +httpcore          = 4.3.3, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsIndices.java, +import org.elasticsearch.index.percolator.PercolatorQueryCacheStats;, +    private PercolatorQueryCacheStats percolatorCache;, +        this.percolatorCache = new PercolatorQueryCacheStats();, +                percolatorCache.add(shardCommonStats.percolatorCache);, +    public PercolatorQueryCacheStats getPercolatorCache() {, +        return percolatorCache;, +    }, +, +        percolatorCache.toXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +            CommonStatsFlags.Flag.FieldData, CommonStatsFlags.Flag.QueryCache, CommonStatsFlags.Flag.Completion, CommonStatsFlags.Flag.Segments,, +            CommonStatsFlags.Flag.PercolatorCache);, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexService.cache().getPercolatorQueryCache(), indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="test[/\\]framework[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]test[/\\]rest[/\\]client[/\\]RestClient.java" checks="LineLength" />, +++ b/buildSrc/version.properties, +# TODO: Upgrade httpclient to a version > 4.5.1 once released. Then remove o.e.test.rest.client.StrictHostnameVerifier* and use, +#  DefaultHostnameVerifier instead since we no longer need to workaround https://issues.apache.org/jira/browse/HTTPCLIENT-1698, +httpclient        = 4.3.6, +httpcore          = 4.3.3, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsIndices.java, +import org.elasticsearch.index.percolator.PercolatorQueryCacheStats;, +    private PercolatorQueryCacheStats percolatorCache;, +        this.percolatorCache = new PercolatorQueryCacheStats();, +                percolatorCache.add(shardCommonStats.percolatorCache);, +    public PercolatorQueryCacheStats getPercolatorCache() {, +        return percolatorCache;, +    }, +, +        percolatorCache.toXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +            CommonStatsFlags.Flag.FieldData, CommonStatsFlags.Flag.QueryCache, CommonStatsFlags.Flag.Completion, CommonStatsFlags.Flag.Segments,, +            CommonStatsFlags.Flag.PercolatorCache);, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexService.cache().getPercolatorQueryCache(), indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.percolator.PercolatorQueryCache;, +import org.elasticsearch.index.percolator.PercolatorQueryCacheStats;, +                case PercolatorCache:, +                    percolatorCache = new PercolatorQueryCacheStats();, +                    break;, +    public CommonStats(IndicesQueryCache indicesQueryCache, PercolatorQueryCache percolatorQueryCache,, +                       IndexShard indexShard, CommonStatsFlags flags) {, +                case PercolatorCache:, +                    percolatorCache = percolatorQueryCache.getStats(indexShard.shardId());, +                    break;, +    public PercolatorQueryCacheStats percolatorCache;, +, +    @Nullable, +        if (percolatorCache == null) {, +            if (stats.getPercolatorCache() != null) {, +                percolatorCache = new PercolatorQueryCacheStats();, +                percolatorCache.add(stats.getPercolatorCache());, +            }, +        } else {, +            percolatorCache.add(stats.getPercolatorCache());, +        }, +    public PercolatorQueryCacheStats getPercolatorCache() {, +        return percolatorCache;, +    }, +]