[+++ b/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/action/RollupIndexCaps.java, +import org.elasticsearch.common.xcontent.ConstructingObjectParser;, +import static org.elasticsearch.common.xcontent.ConstructingObjectParser.constructorArg;, +public class RollupIndexCaps implements Writeable, ToXContentFragment {, +    private static ParseField ROLLUP_JOBS = new ParseField("rollup_jobs");, +    private static ParseField DOC_FIELD = new ParseField("_doc");, +    private static ParseField META_FIELD = new ParseField("_meta");, +    private static ParseField ROLLUP_FIELD = new ParseField(RollupField.ROLLUP_META);, +        METADATA_PARSER.declareField((parser, rollupIndexCaps, aVoid), +                -> rollupIndexCaps.setJobs(DocParser.DOC_PARSER.apply(parser, aVoid).jobs),, +            DOC_FIELD, ObjectParser.ValueType.OBJECT);, +    }, +    /**, +     * Parser for `_doc` portion of mapping metadata, +     */, +    private static class DocParser {, +        public List<RollupJobConfig> jobs;, +        // Ignore unknown fields because there could be unrelated doc types, +        private static final ConstructingObjectParser<DocParser, Void> DOC_PARSER, +            = new ConstructingObjectParser<>("_rollup_doc_parser", true, a -> {, +                List<RollupJobConfig> j = new ArrayList<>();, +                for (Object o : (List)a[0]) {, +                    if (o instanceof RollupJobConfig) {, +                        j.add((RollupJobConfig) o);, +                    }, +                }, +                return new DocParser(j);, +            });, +        static {, +            DOC_PARSER.declareField(constructorArg(), MetaParser.META_PARSER::apply, META_FIELD, ObjectParser.ValueType.OBJECT);, +        }, +        DocParser(List<RollupJobConfig> jobs) {, +            this.jobs = jobs;, +        }, +    }, +, +    /**, +     * Parser for `_meta` portion of mapping metadata, +     */, +    private static class MetaParser {, +        // Ignore unknown fields because there could be unrelated _meta values, +        private static final ObjectParser<List<RollupJobConfig>, Void> META_PARSER, +            = new ObjectParser<>("_rollup_meta_parser", true, ArrayList::new);, +        static {, +            META_PARSER.declareField((parser, jobs, aVoid) -> {, +            }, ROLLUP_FIELD, ObjectParser.ValueType.OBJECT);, +, +++ b/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/action/RollupIndexCaps.java, +import org.elasticsearch.common.xcontent.ConstructingObjectParser;, +import static org.elasticsearch.common.xcontent.ConstructingObjectParser.constructorArg;, +public class RollupIndexCaps implements Writeable, ToXContentFragment {, +    private static ParseField ROLLUP_JOBS = new ParseField("rollup_jobs");, +    private static ParseField DOC_FIELD = new ParseField("_doc");, +    private static ParseField META_FIELD = new ParseField("_meta");, +    private static ParseField ROLLUP_FIELD = new ParseField(RollupField.ROLLUP_META);, +        METADATA_PARSER.declareField((parser, rollupIndexCaps, aVoid), +                -> rollupIndexCaps.setJobs(DocParser.DOC_PARSER.apply(parser, aVoid).jobs),, +            DOC_FIELD, ObjectParser.ValueType.OBJECT);, +    }, +    /**, +     * Parser for `_doc` portion of mapping metadata, +     */, +    private static class DocParser {, +        public List<RollupJobConfig> jobs;, +        // Ignore unknown fields because there could be unrelated doc types, +        private static final ConstructingObjectParser<DocParser, Void> DOC_PARSER, +            = new ConstructingObjectParser<>("_rollup_doc_parser", true, a -> {, +                List<RollupJobConfig> j = new ArrayList<>();, +                for (Object o : (List)a[0]) {, +                    if (o instanceof RollupJobConfig) {, +                        j.add((RollupJobConfig) o);, +                    }, +                }, +                return new DocParser(j);, +            });, +        static {, +            DOC_PARSER.declareField(constructorArg(), MetaParser.META_PARSER::apply, META_FIELD, ObjectParser.ValueType.OBJECT);, +        }, +        DocParser(List<RollupJobConfig> jobs) {, +            this.jobs = jobs;, +        }, +    }, +, +    /**, +     * Parser for `_meta` portion of mapping metadata, +     */, +    private static class MetaParser {, +        // Ignore unknown fields because there could be unrelated _meta values, +        private static final ObjectParser<List<RollupJobConfig>, Void> META_PARSER, +            = new ObjectParser<>("_rollup_meta_parser", true, ArrayList::new);, +        static {, +            META_PARSER.declareField((parser, jobs, aVoid) -> {, +            }, ROLLUP_FIELD, ObjectParser.ValueType.OBJECT);, +, +++ b/x-pack/plugin/rollup/src/test/java/org/elasticsearch/xpack/rollup/action/GetRollupCapsActionRequestTests.java, +, +    public void testNonRollupMeta() throws IOException {, +        String indexPattern = randomBoolean() ? randomAlphaOfLength(10) : randomAlphaOfLength(10) + "-*";, +, +        MappingMetaData mappingMeta = new MappingMetaData(RollupField.TYPE_NAME,]