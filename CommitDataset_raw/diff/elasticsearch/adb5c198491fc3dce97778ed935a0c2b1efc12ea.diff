[+++ b/src/main/java/org/elasticsearch/action/Action.java, +import org.elasticsearch.client.ElasticsearchClient;, +public abstract class Action<Request extends ActionRequest, Response extends ActionResponse, RequestBuilder extends ActionRequestBuilder<Request, Response, RequestBuilder, Client>, Client extends ElasticsearchClient>, +++ b/src/main/java/org/elasticsearch/action/Action.java, +import org.elasticsearch.client.ElasticsearchClient;, +public abstract class Action<Request extends ActionRequest, Response extends ActionResponse, RequestBuilder extends ActionRequestBuilder<Request, Response, RequestBuilder, Client>, Client extends ElasticsearchClient>, +++ b/src/main/java/org/elasticsearch/action/ActionRequestBuilder.java, +import org.elasticsearch.client.Client;, +import org.elasticsearch.client.ClusterAdminClient;, +import org.elasticsearch.client.ElasticsearchClient;, +import org.elasticsearch.client.IndicesAdminClient;, +import org.elasticsearch.threadpool.ThreadPool;, +public abstract class ActionRequestBuilder<Request extends ActionRequest, Response extends ActionResponse, RequestBuilder extends ActionRequestBuilder, Client extends ElasticsearchClient> {, +    private final ThreadPool threadPool;, +    protected final Client client;, +    protected ActionRequestBuilder(Client client, Request request) {, +        this.client = client;, +        threadPool = client.threadPool();, +, +        PlainListenableActionFuture<Response> future = new PlainListenableActionFuture<>(request.listenerThreaded(), threadPool);, +++ b/src/main/java/org/elasticsearch/action/Action.java, +import org.elasticsearch.client.ElasticsearchClient;, +public abstract class Action<Request extends ActionRequest, Response extends ActionResponse, RequestBuilder extends ActionRequestBuilder<Request, Response, RequestBuilder, Client>, Client extends ElasticsearchClient>, +++ b/src/main/java/org/elasticsearch/action/ActionRequestBuilder.java, +import org.elasticsearch.client.Client;, +import org.elasticsearch.client.ClusterAdminClient;, +import org.elasticsearch.client.ElasticsearchClient;, +import org.elasticsearch.client.IndicesAdminClient;, +import org.elasticsearch.threadpool.ThreadPool;, +public abstract class ActionRequestBuilder<Request extends ActionRequest, Response extends ActionResponse, RequestBuilder extends ActionRequestBuilder, Client extends ElasticsearchClient> {, +    private final ThreadPool threadPool;, +    protected final Client client;, +    protected ActionRequestBuilder(Client client, Request request) {, +        this.client = client;, +        threadPool = client.threadPool();, +, +        PlainListenableActionFuture<Response> future = new PlainListenableActionFuture<>(request.listenerThreaded(), threadPool);, +++ b/src/main/java/org/elasticsearch/action/ClientAction.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.action;, +, +import org.elasticsearch.client.Client;, +import org.elasticsearch.client.IndicesAdminClient;, +, +/**, + * Indices action (used with {@link IndicesAdminClient} API., + */, +public abstract class ClientAction<Request extends ActionRequest, Response extends ActionResponse, RequestBuilder extends ActionRequestBuilder<Request, Response, RequestBuilder, Client>>, +        extends Action<Request, Response, RequestBuilder, Client> {, +, +    protected ClientAction(String name) {, +        super(name);, +    }, +}, +++ b/src/main/java/org/elasticsearch/action/Action.java, +import org.elasticsearch.client.ElasticsearchClient;, +public abstract class Action<Request extends ActionRequest, Response extends ActionResponse, RequestBuilder extends ActionRequestBuilder<Request, Response, RequestBuilder, Client>, Client extends ElasticsearchClient>, +++ b/src/main/java/org/elasticsearch/action/ActionRequestBuilder.java, +import org.elasticsearch.client.Client;, +import org.elasticsearch.client.ClusterAdminClient;, +import org.elasticsearch.client.ElasticsearchClient;, +import org.elasticsearch.client.IndicesAdminClient;, +import org.elasticsearch.threadpool.ThreadPool;, +public abstract class ActionRequestBuilder<Request extends ActionRequest, Response extends ActionResponse, RequestBuilder extends ActionRequestBuilder, Client extends ElasticsearchClient> {, +    private final ThreadPool threadPool;, +    protected final Client client;, +    protected ActionRequestBuilder(Client client, Request request) {, +        this.client = client;, +        threadPool = client.threadPool();, +, +        PlainListenableActionFuture<Response> future = new PlainListenableActionFuture<>(request.listenerThreaded(), threadPool);, +++ b/src/main/java/org/elasticsearch/action/ClientAction.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0]