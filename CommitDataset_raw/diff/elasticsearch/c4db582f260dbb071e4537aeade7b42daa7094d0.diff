[+++ b/src/main/java/org/elasticsearch/common/joda/FormatDateTimeFormatter.java, +import java.util.Locale;, +, +    private final Locale locale;, +, +    public FormatDateTimeFormatter(String format, DateTimeFormatter parser, Locale locale) {, +        this(format, parser, parser, locale);, +    public FormatDateTimeFormatter(String format, DateTimeFormatter parser, DateTimeFormatter printer, Locale locale) {, +        this.locale = locale;, +        this.printer = locale == null ? printer : printer.withLocale(locale);, +        this.parser = locale == null ? parser : parser.withLocale(locale);, +    , +    public Locale locale() {, +        return locale;, +    }, +++ b/src/main/java/org/elasticsearch/common/joda/FormatDateTimeFormatter.java, +import java.util.Locale;, +, +    private final Locale locale;, +, +    public FormatDateTimeFormatter(String format, DateTimeFormatter parser, Locale locale) {, +        this(format, parser, parser, locale);, +    public FormatDateTimeFormatter(String format, DateTimeFormatter parser, DateTimeFormatter printer, Locale locale) {, +        this.locale = locale;, +        this.printer = locale == null ? printer : printer.withLocale(locale);, +        this.parser = locale == null ? parser : parser.withLocale(locale);, +    , +    public Locale locale() {, +        return locale;, +    }, +++ b/src/main/java/org/elasticsearch/common/joda/Joda.java, +import java.util.Locale;, +, +    public static FormatDateTimeFormatter forPattern(String input) {, +        return forPattern(input, Locale.ROOT);, +    }, +, +    public static FormatDateTimeFormatter forPattern(String input, Locale locale) {, +            // this sucks we should use the root local by default and not be dependent on the node, +                    ISODateTimeFormat.dateTime().withZone(DateTimeZone.UTC), locale);, +        return new FormatDateTimeFormatter(input, formatter.withZone(DateTimeZone.UTC), locale);, +++ b/src/main/java/org/elasticsearch/common/joda/FormatDateTimeFormatter.java, +import java.util.Locale;, +, +    private final Locale locale;, +, +    public FormatDateTimeFormatter(String format, DateTimeFormatter parser, Locale locale) {, +        this(format, parser, parser, locale);, +    public FormatDateTimeFormatter(String format, DateTimeFormatter parser, DateTimeFormatter printer, Locale locale) {, +        this.locale = locale;, +        this.printer = locale == null ? printer : printer.withLocale(locale);, +        this.parser = locale == null ? parser : parser.withLocale(locale);, +    , +    public Locale locale() {, +        return locale;, +    }, +++ b/src/main/java/org/elasticsearch/common/joda/Joda.java, +import java.util.Locale;, +, +    public static FormatDateTimeFormatter forPattern(String input) {, +        return forPattern(input, Locale.ROOT);, +    }, +, +    public static FormatDateTimeFormatter forPattern(String input, Locale locale) {, +            // this sucks we should use the root local by default and not be dependent on the node, +                    ISODateTimeFormat.dateTime().withZone(DateTimeZone.UTC), locale);, +        return new FormatDateTimeFormatter(input, formatter.withZone(DateTimeZone.UTC), locale);, +++ b/src/main/java/org/elasticsearch/index/mapper/Mapper.java, +        Mapper.Builder<?,?> parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException;, +++ b/src/main/java/org/elasticsearch/common/joda/FormatDateTimeFormatter.java, +import java.util.Locale;, +, +    private final Locale locale;, +, +    public FormatDateTimeFormatter(String format, DateTimeFormatter parser, Locale locale) {, +        this(format, parser, parser, locale);, +    public FormatDateTimeFormatter(String format, DateTimeFormatter parser, DateTimeFormatter printer, Locale locale) {, +        this.locale = locale;, +        this.printer = locale == null ? printer : printer.withLocale(locale);, +        this.parser = locale == null ? parser : parser.withLocale(locale);, +    , +    public Locale locale() {, +        return locale;, +    }, +++ b/src/main/java/org/elasticsearch/common/joda/Joda.java, +import java.util.Locale;, +, +    public static FormatDateTimeFormatter forPattern(String input) {, +        return forPattern(input, Locale.ROOT);, +    }, +, +    public static FormatDateTimeFormatter forPattern(String input, Locale locale) {, +            // this sucks we should use the root local by default and not be dependent on the node, +                    ISODateTimeFormat.dateTime().withZone(DateTimeZone.UTC), locale);, +        return new FormatDateTimeFormatter(input, formatter.withZone(DateTimeZone.UTC), locale);, +++ b/src/main/java/org/elasticsearch/index/mapper/Mapper.java, +        Mapper.Builder<?,?> parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException;, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +import java.util.Locale;, +        private Locale locale;]