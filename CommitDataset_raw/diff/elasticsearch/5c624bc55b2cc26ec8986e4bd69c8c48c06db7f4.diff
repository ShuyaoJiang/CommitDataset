[+++ b/server/src/main/java/org/elasticsearch/common/logging/Loggers.java, +        return getLogger(clazz, shardId.getIndex(), asArrayList(Integer.toString(shardId.id()), prefixes).toArray(new String[0]));, +     * Class and no extra prefixes., +    public static Logger getLogger(String loggerName, ShardId shardId) {, +        return ESLoggerFactory.getLogger(formatPrefix(shardId.getIndexName(), Integer.toString(shardId.id())), loggerName);, +    public static Logger getLogger(Class<?> clazz, Index index, String... prefixes) {, +        return getLogger(clazz, Settings.EMPTY, asArrayList(Loggers.SPACE, index.getName(), prefixes).toArray(new String[0]));, +++ b/server/src/main/java/org/elasticsearch/common/logging/Loggers.java, +        return getLogger(clazz, shardId.getIndex(), asArrayList(Integer.toString(shardId.id()), prefixes).toArray(new String[0]));, +     * Class and no extra prefixes., +    public static Logger getLogger(String loggerName, ShardId shardId) {, +        return ESLoggerFactory.getLogger(formatPrefix(shardId.getIndexName(), Integer.toString(shardId.id())), loggerName);, +    public static Logger getLogger(Class<?> clazz, Index index, String... prefixes) {, +        return getLogger(clazz, Settings.EMPTY, asArrayList(Loggers.SPACE, index.getName(), prefixes).toArray(new String[0]));, +++ b/server/src/main/java/org/elasticsearch/index/AbstractIndexComponent.java, +        this.logger = Loggers.getLogger(getClass(), indexSettings.getIndex());, +++ b/server/src/main/java/org/elasticsearch/common/logging/Loggers.java, +        return getLogger(clazz, shardId.getIndex(), asArrayList(Integer.toString(shardId.id()), prefixes).toArray(new String[0]));, +     * Class and no extra prefixes., +    public static Logger getLogger(String loggerName, ShardId shardId) {, +        return ESLoggerFactory.getLogger(formatPrefix(shardId.getIndexName(), Integer.toString(shardId.id())), loggerName);, +    public static Logger getLogger(Class<?> clazz, Index index, String... prefixes) {, +        return getLogger(clazz, Settings.EMPTY, asArrayList(Loggers.SPACE, index.getName(), prefixes).toArray(new String[0]));, +++ b/server/src/main/java/org/elasticsearch/index/AbstractIndexComponent.java, +        this.logger = Loggers.getLogger(getClass(), indexSettings.getIndex());, +++ b/server/src/main/java/org/elasticsearch/index/CompositeIndexEventListener.java, +        this.logger = Loggers.getLogger(getClass(), indexSettings.getIndex());, +++ b/server/src/main/java/org/elasticsearch/common/logging/Loggers.java, +        return getLogger(clazz, shardId.getIndex(), asArrayList(Integer.toString(shardId.id()), prefixes).toArray(new String[0]));, +     * Class and no extra prefixes., +    public static Logger getLogger(String loggerName, ShardId shardId) {, +        return ESLoggerFactory.getLogger(formatPrefix(shardId.getIndexName(), Integer.toString(shardId.id())), loggerName);, +    public static Logger getLogger(Class<?> clazz, Index index, String... prefixes) {, +        return getLogger(clazz, Settings.EMPTY, asArrayList(Loggers.SPACE, index.getName(), prefixes).toArray(new String[0]));, +++ b/server/src/main/java/org/elasticsearch/index/AbstractIndexComponent.java, +        this.logger = Loggers.getLogger(getClass(), indexSettings.getIndex());, +++ b/server/src/main/java/org/elasticsearch/index/CompositeIndexEventListener.java, +        this.logger = Loggers.getLogger(getClass(), indexSettings.getIndex());, +++ b/server/src/main/java/org/elasticsearch/index/IndexSettings.java, +        logger = Loggers.getLogger(getClass(), index);, +++ b/server/src/main/java/org/elasticsearch/common/logging/Loggers.java, +        return getLogger(clazz, shardId.getIndex(), asArrayList(Integer.toString(shardId.id()), prefixes).toArray(new String[0]));, +     * Class and no extra prefixes., +    public static Logger getLogger(String loggerName, ShardId shardId) {, +        return ESLoggerFactory.getLogger(formatPrefix(shardId.getIndexName(), Integer.toString(shardId.id())), loggerName);, +    public static Logger getLogger(Class<?> clazz, Index index, String... prefixes) {, +        return getLogger(clazz, Settings.EMPTY, asArrayList(Loggers.SPACE, index.getName(), prefixes).toArray(new String[0]));, +++ b/server/src/main/java/org/elasticsearch/index/AbstractIndexComponent.java, +        this.logger = Loggers.getLogger(getClass(), indexSettings.getIndex());, +++ b/server/src/main/java/org/elasticsearch/index/CompositeIndexEventListener.java, +        this.logger = Loggers.getLogger(getClass(), indexSettings.getIndex());, +++ b/server/src/main/java/org/elasticsearch/index/IndexSettings.java, +        logger = Loggers.getLogger(getClass(), index);, +++ b/server/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +import org.apache.logging.log4j.LogManager;, +        this.indexLogger = LogManager.getLogger(INDEX_INDEXING_SLOWLOG_PREFIX + ".index");, +++ b/server/src/main/java/org/elasticsearch/common/logging/Loggers.java, +        return getLogger(clazz, shardId.getIndex(), asArrayList(Integer.toString(shardId.id()), prefixes).toArray(new String[0]));, +     * Class and no extra prefixes., +    public static Logger getLogger(String loggerName, ShardId shardId) {, +        return ESLoggerFactory.getLogger(formatPrefix(shardId.getIndexName(), Integer.toString(shardId.id())), loggerName);, +    public static Logger getLogger(Class<?> clazz, Index index, String... prefixes) {, +        return getLogger(clazz, Settings.EMPTY, asArrayList(Loggers.SPACE, index.getName(), prefixes).toArray(new String[0]));, +++ b/server/src/main/java/org/elasticsearch/index/AbstractIndexComponent.java, +        this.logger = Loggers.getLogger(getClass(), indexSettings.getIndex());, +++ b/server/src/main/java/org/elasticsearch/index/CompositeIndexEventListener.java, +        this.logger = Loggers.getLogger(getClass(), indexSettings.getIndex());, +++ b/server/src/main/java/org/elasticsearch/index/IndexSettings.java, +        logger = Loggers.getLogger(getClass(), index);, +++ b/server/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +import org.apache.logging.log4j.LogManager;, +        this.indexLogger = LogManager.getLogger(INDEX_INDEXING_SLOWLOG_PREFIX + ".index");, +++ b/server/src/main/java/org/elasticsearch/index/SearchSlowLog.java, +import org.apache.logging.log4j.LogManager;, +        this.queryLogger = LogManager.getLogger(INDEX_SEARCH_SLOWLOG_PREFIX + ".query");, +        this.fetchLogger = LogManager.getLogger(INDEX_SEARCH_SLOWLOG_PREFIX + ".fetch");, +++ b/server/src/main/java/org/elasticsearch/common/logging/Loggers.java, +        return getLogger(clazz, shardId.getIndex(), asArrayList(Integer.toString(shardId.id()), prefixes).toArray(new String[0]));, +     * Class and no extra prefixes., +    public static Logger getLogger(String loggerName, ShardId shardId) {, +        return ESLoggerFactory.getLogger(formatPrefix(shardId.getIndexName(), Integer.toString(shardId.id())), loggerName);, +    public static Logger getLogger(Class<?> clazz, Index index, String... prefixes) {, +        return getLogger(clazz, Settings.EMPTY, asArrayList(Loggers.SPACE, index.getName(), prefixes).toArray(new String[0]));, +++ b/server/src/main/java/org/elasticsearch/index/AbstractIndexComponent.java, +        this.logger = Loggers.getLogger(getClass(), indexSettings.getIndex());, +++ b/server/src/main/java/org/elasticsearch/index/CompositeIndexEventListener.java, +        this.logger = Loggers.getLogger(getClass(), indexSettings.getIndex());, +++ b/server/src/main/java/org/elasticsearch/index/IndexSettings.java, +        logger = Loggers.getLogger(getClass(), index);, +++ b/server/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +import org.apache.logging.log4j.LogManager;, +        this.indexLogger = LogManager.getLogger(INDEX_INDEXING_SLOWLOG_PREFIX + ".index");, +++ b/server/src/main/java/org/elasticsearch/index/SearchSlowLog.java, +import org.apache.logging.log4j.LogManager;, +        this.queryLogger = LogManager.getLogger(INDEX_SEARCH_SLOWLOG_PREFIX + ".query");, +        this.fetchLogger = LogManager.getLogger(INDEX_SEARCH_SLOWLOG_PREFIX + ".fetch");, +++ b/x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/Watcher.java, +        actionFactoryMap.put(LoggingAction.TYPE, new LoggingActionFactory(templateEngine));, +++ b/server/src/main/java/org/elasticsearch/common/logging/Loggers.java, +        return getLogger(clazz, shardId.getIndex(), asArrayList(Integer.toString(shardId.id()), prefixes).toArray(new String[0]));]