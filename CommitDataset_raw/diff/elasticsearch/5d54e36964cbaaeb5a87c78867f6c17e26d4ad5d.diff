[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/statistical/StatisticalFacetBuilder.java, +    private String[] fieldsNames;, +    /**, +     * The fields the terms will be collected from., +     */, +    public StatisticalFacetBuilder fields(String... fields) {, +        this.fieldsNames = fields;, +        return this;, +    }, +, +        if (fieldName == null && fieldsNames == null) {, +        if (fieldsNames != null) {, +            if (fieldsNames.length == 1) {, +                builder.field("field", fieldsNames[0]);, +            } else {, +                builder.field("fields", fieldsNames);, +            }, +        } else {, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/statistical/StatisticalFacetBuilder.java, +    private String[] fieldsNames;, +    /**, +     * The fields the terms will be collected from., +     */, +    public StatisticalFacetBuilder fields(String... fields) {, +        this.fieldsNames = fields;, +        return this;, +    }, +, +        if (fieldName == null && fieldsNames == null) {, +        if (fieldsNames != null) {, +            if (fieldsNames.length == 1) {, +                builder.field("field", fieldsNames[0]);, +            } else {, +                builder.field("fields", fieldsNames);, +            }, +        } else {, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/statistical/StatisticalFacetCollectorParser.java, +import org.elasticsearch.common.collect.Lists;, +import java.util.List;, +        String[] fieldsNames = null;, +, +        String currentFieldName = null;, +            } else if (token == XContentParser.Token.START_ARRAY) {, +                if ("fields".equals(currentFieldName)) {, +                    List<String> fields = Lists.newArrayListWithCapacity(4);, +                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {, +                        fields.add(parser.text());, +                    }, +                    fieldsNames = fields.toArray(new String[fields.size()]);, +                }, +        if (fieldsNames != null) {, +            return new StatisticalFieldsFacetCollector(facetName, fieldsNames, context);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/statistical/StatisticalFacetBuilder.java, +    private String[] fieldsNames;, +    /**, +     * The fields the terms will be collected from., +     */, +    public StatisticalFacetBuilder fields(String... fields) {, +        this.fieldsNames = fields;, +        return this;, +    }, +, +        if (fieldName == null && fieldsNames == null) {, +        if (fieldsNames != null) {, +            if (fieldsNames.length == 1) {, +                builder.field("field", fieldsNames[0]);, +            } else {, +                builder.field("fields", fieldsNames);, +            }, +        } else {, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/statistical/StatisticalFacetCollectorParser.java, +import org.elasticsearch.common.collect.Lists;, +import java.util.List;, +        String[] fieldsNames = null;, +, +        String currentFieldName = null;, +            } else if (token == XContentParser.Token.START_ARRAY) {, +                if ("fields".equals(currentFieldName)) {, +                    List<String> fields = Lists.newArrayListWithCapacity(4);, +                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {, +                        fields.add(parser.text());, +                    }, +                    fieldsNames = fields.toArray(new String[fields.size()]);, +                }, +        if (fieldsNames != null) {, +            return new StatisticalFieldsFacetCollector(facetName, fieldsNames, context);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/statistical/StatisticalFieldsFacetCollector.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at]