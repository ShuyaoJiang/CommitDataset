[+++ b/.ci/java-versions.properties, +GRADLE_EXTRA_ARGS=-Dtests.bwc.refspec=elastic/index-lifecycle-6.x, +++ b/.ci/java-versions.properties, +GRADLE_EXTRA_ARGS=-Dtests.bwc.refspec=elastic/index-lifecycle-6.x, +++ b/CONTRIBUTING.md, +++ b/.ci/java-versions.properties, +GRADLE_EXTRA_ARGS=-Dtests.bwc.refspec=elastic/index-lifecycle-6.x, +++ b/CONTRIBUTING.md, +++ b/buildSrc/build.gradle, +if (JavaVersion.current() < JavaVersion.VERSION_1_8) {, +  throw new GradleException('Java 1.8 is required to build elasticsearch gradle tools'), +}, +, +// Make sure :buildSrc: doesn't generate classes incompatible with RUNTIME_JAVA_HOME, +// We can't use BuildPlugin here, so read from file, +String minimumRuntimeVersion = file('src/main/resources/minimumRuntimeVersion').text.trim(), +targetCompatibility = minimumRuntimeVersion, +sourceCompatibility = minimumRuntimeVersion, +, +  compile("junit:junit:${props.getProperty('junit')}") {, +    transitive = false, +  }, +++ b/.ci/java-versions.properties, +GRADLE_EXTRA_ARGS=-Dtests.bwc.refspec=elastic/index-lifecycle-6.x, +++ b/CONTRIBUTING.md, +++ b/buildSrc/build.gradle, +if (JavaVersion.current() < JavaVersion.VERSION_1_8) {, +  throw new GradleException('Java 1.8 is required to build elasticsearch gradle tools'), +}, +, +// Make sure :buildSrc: doesn't generate classes incompatible with RUNTIME_JAVA_HOME, +// We can't use BuildPlugin here, so read from file, +String minimumRuntimeVersion = file('src/main/resources/minimumRuntimeVersion').text.trim(), +targetCompatibility = minimumRuntimeVersion, +sourceCompatibility = minimumRuntimeVersion, +, +  compile("junit:junit:${props.getProperty('junit')}") {, +    transitive = false, +  }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +    /** Returns a closure of common configuration shared by unit and integration tests. */, +    static Closure commonTestConfig(Project project) {, +        return {, +        RandomizedTestingTask test = project.tasks.getByName('test'), +        test.configure(commonTestConfig(project)), +        test.configure {, +, +        // Add a method to create additional unit tests for a project, which will share the same, +        // randomized testing setup, but by default run no tests., +        project.extensions.add('additionalTest', { String name, Closure config ->, +            RandomizedTestingTask additionalTest = project.tasks.create(name, RandomizedTestingTask.class), +            additionalTest.classpath = test.classpath, +            additionalTest.testClassesDirs = test.testClassesDirs, +            additionalTest.configure(commonTestConfig(project)), +            additionalTest.configure(config), +            additionalTest.dependsOn(project.tasks.testClasses), +            project.check.dependsOn(additionalTest), +        });, +++ b/.ci/java-versions.properties, +GRADLE_EXTRA_ARGS=-Dtests.bwc.refspec=elastic/index-lifecycle-6.x, +++ b/CONTRIBUTING.md, +++ b/buildSrc/build.gradle, +if (JavaVersion.current() < JavaVersion.VERSION_1_8) {, +  throw new GradleException('Java 1.8 is required to build elasticsearch gradle tools'), +}, +, +// Make sure :buildSrc: doesn't generate classes incompatible with RUNTIME_JAVA_HOME, +// We can't use BuildPlugin here, so read from file, +String minimumRuntimeVersion = file('src/main/resources/minimumRuntimeVersion').text.trim(), +targetCompatibility = minimumRuntimeVersion, +sourceCompatibility = minimumRuntimeVersion, +, +  compile("junit:junit:${props.getProperty('junit')}") {, +    transitive = false, +  }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +    /** Returns a closure of common configuration shared by unit and integration tests. */, +    static Closure commonTestConfig(Project project) {, +        return {, +        RandomizedTestingTask test = project.tasks.getByName('test'), +        test.configure(commonTestConfig(project)), +        test.configure {, +, +        // Add a method to create additional unit tests for a project, which will share the same, +        // randomized testing setup, but by default run no tests., +        project.extensions.add('additionalTest', { String name, Closure config ->, +            RandomizedTestingTask additionalTest = project.tasks.create(name, RandomizedTestingTask.class), +            additionalTest.classpath = test.classpath, +            additionalTest.testClassesDirs = test.testClassesDirs, +            additionalTest.configure(commonTestConfig(project)), +            additionalTest.configure(config), +            additionalTest.dependsOn(project.tasks.testClasses), +            project.check.dependsOn(additionalTest), +        });, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    Closure<Integer> minimumMasterNodes = { getNumNodes() > 1 ? getNumNodes() : -1 }, +++ b/.ci/java-versions.properties, +GRADLE_EXTRA_ARGS=-Dtests.bwc.refspec=elastic/index-lifecycle-6.x, +++ b/CONTRIBUTING.md, +++ b/buildSrc/build.gradle]