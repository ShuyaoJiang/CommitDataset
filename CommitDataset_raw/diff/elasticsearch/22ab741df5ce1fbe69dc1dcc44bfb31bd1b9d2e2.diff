[+++ b/build.gradle, +BuildPlugin.configureRepositories(project), +, +++ b/build.gradle, +BuildPlugin.configureRepositories(project), +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import org.elasticsearch.gradle.testclusters.TestClustersPlugin, +            // set the project description so it will be picked up by publishing, +            if (project.plugins.hasPlugin(TestClustersPlugin.class) == false) {, +                project.integTestCluster.dependsOn(project.tasks.bundlePlugin), +                } else {, +                    project.integTestCluster.plugin(project.path), +                }, +            } else {, +                project.tasks.integTest.dependsOn(project.tasks.bundlePlugin), +                if (isModule) {, +                    throw new RuntimeException("Testclusters does not support modules yet");, +                } else {, +                    project.testClusters.integTestCluster.plugin(, +                            project.file(project.tasks.bundlePlugin.archiveFile), +                    ), +                }, +            }, +, +            project.tasks.run.dependsOn(project.tasks.bundlePlugin), +            if (isModule) {, +        if (project.plugins.hasPlugin(TestClustersPlugin.class) == false) {, +            // only if not using test clusters, +        }, +            project.tasks.bundlePlugin.from(licenseFile.parentFile) {, +            project.tasks.bundlePlugin.from(generateNotice), +++ b/build.gradle, +BuildPlugin.configureRepositories(project), +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import org.elasticsearch.gradle.testclusters.TestClustersPlugin, +            // set the project description so it will be picked up by publishing, +            if (project.plugins.hasPlugin(TestClustersPlugin.class) == false) {, +                project.integTestCluster.dependsOn(project.tasks.bundlePlugin), +                } else {, +                    project.integTestCluster.plugin(project.path), +                }, +            } else {, +                project.tasks.integTest.dependsOn(project.tasks.bundlePlugin), +                if (isModule) {, +                    throw new RuntimeException("Testclusters does not support modules yet");, +                } else {, +                    project.testClusters.integTestCluster.plugin(, +                            project.file(project.tasks.bundlePlugin.archiveFile), +                    ), +                }, +            }, +, +            project.tasks.run.dependsOn(project.tasks.bundlePlugin), +            if (isModule) {, +        if (project.plugins.hasPlugin(TestClustersPlugin.class) == false) {, +            // only if not using test clusters, +        }, +            project.tasks.bundlePlugin.from(licenseFile.parentFile) {, +            project.tasks.bundlePlugin.from(generateNotice), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        boolean internalBuild = project.hasProperty('bwcVersions'), +            if (internalBuild) {, +                project.dependencies.add(, +                        configuration.name,, +                        project.dependencies.project(path: ":distribution", configuration: 'integ-test-zip'), +                ), +            } else {, +                project.dependencies.add(, +                        configuration.name,, +                        "org.elasticsearch.distribution.integ-test-zip:elasticsearch:${elasticsearchVersion}@zip", +                ), +            }, +        , +, +++ b/build.gradle, +BuildPlugin.configureRepositories(project), +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import org.elasticsearch.gradle.testclusters.TestClustersPlugin, +            // set the project description so it will be picked up by publishing, +            if (project.plugins.hasPlugin(TestClustersPlugin.class) == false) {, +                project.integTestCluster.dependsOn(project.tasks.bundlePlugin), +                } else {, +                    project.integTestCluster.plugin(project.path), +                }, +            } else {, +                project.tasks.integTest.dependsOn(project.tasks.bundlePlugin), +                if (isModule) {, +                    throw new RuntimeException("Testclusters does not support modules yet");, +                } else {, +                    project.testClusters.integTestCluster.plugin(, +                            project.file(project.tasks.bundlePlugin.archiveFile), +                    ), +                }, +            }, +, +            project.tasks.run.dependsOn(project.tasks.bundlePlugin), +            if (isModule) {]