[+++ b/server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java, +     * Return true if this aggregation is mapped, and can lead a reduction.  If this agg returns, +     * false, it should return itself if asked to lead a reduction, +     */, +    public boolean isMapped() {, +        return true;, +    }, +, +    /**, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java, +     * Return true if this aggregation is mapped, and can lead a reduction.  If this agg returns, +     * false, it should return itself if asked to lead a reduction, +     */, +    public boolean isMapped() {, +        return true;, +    }, +, +    /**, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java, +import java.util.Comparator;, +    private static final Comparator<InternalAggregation> INTERNAL_AGG_COMPARATOR = (agg1, agg2) -> {, +        if (agg1.isMapped() == agg2.isMapped()) {, +            return 0;, +        } else if (agg1.isMapped() && agg2.isMapped() == false) {, +            return -1;, +        } else {, +            return 1;, +        }, +    };, +            // Sort aggregations so that unmapped aggs come last in the list, +            // If all aggs are unmapped, the agg that leads the reduction will just return itself, +            aggregations.sort(INTERNAL_AGG_COMPARATOR);, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java, +     * Return true if this aggregation is mapped, and can lead a reduction.  If this agg returns, +     * false, it should return itself if asked to lead a reduction, +     */, +    public boolean isMapped() {, +        return true;, +    }, +, +    /**, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java, +import java.util.Comparator;, +    private static final Comparator<InternalAggregation> INTERNAL_AGG_COMPARATOR = (agg1, agg2) -> {, +        if (agg1.isMapped() == agg2.isMapped()) {, +            return 0;, +        } else if (agg1.isMapped() && agg2.isMapped() == false) {, +            return -1;, +        } else {, +            return 1;, +        }, +    };, +            // Sort aggregations so that unmapped aggs come last in the list, +            // If all aggs are unmapped, the agg that leads the reduction will just return itself, +            aggregations.sort(INTERNAL_AGG_COMPARATOR);, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/sampler/UnmappedSampler.java, +        return new UnmappedSampler(name, pipelineAggregators(), metaData);, +, +    @Override, +    public boolean isMapped() {, +        return false;, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java, +     * Return true if this aggregation is mapped, and can lead a reduction.  If this agg returns, +     * false, it should return itself if asked to lead a reduction, +     */, +    public boolean isMapped() {, +        return true;, +    }, +, +    /**, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java, +import java.util.Comparator;, +    private static final Comparator<InternalAggregation> INTERNAL_AGG_COMPARATOR = (agg1, agg2) -> {, +        if (agg1.isMapped() == agg2.isMapped()) {, +            return 0;, +        } else if (agg1.isMapped() && agg2.isMapped() == false) {, +            return -1;, +        } else {, +            return 1;, +        }, +    };, +            // Sort aggregations so that unmapped aggs come last in the list, +            // If all aggs are unmapped, the agg that leads the reduction will just return itself, +            aggregations.sort(INTERNAL_AGG_COMPARATOR);, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/sampler/UnmappedSampler.java, +        return new UnmappedSampler(name, pipelineAggregators(), metaData);, +, +    @Override, +    public boolean isMapped() {, +        return false;, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/UnmappedSignificantTerms.java, +        return new UnmappedSignificantTerms(name, requiredSize, minDocCount, pipelineAggregators(), metaData);, +, +    @Override, +    public boolean isMapped() {, +        return false;, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java, +     * Return true if this aggregation is mapped, and can lead a reduction.  If this agg returns, +     * false, it should return itself if asked to lead a reduction, +     */]