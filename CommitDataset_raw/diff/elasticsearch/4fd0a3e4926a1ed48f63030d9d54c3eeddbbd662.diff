[+++ b/docs/reference/migration/migrate_7_0/settings.asciidoc, +The setting `http.enabled` previously allowed disabling binding to HTTP, only allowing, +++ b/docs/reference/migration/migrate_7_0/settings.asciidoc, +The setting `http.enabled` previously allowed disabling binding to HTTP, only allowing, +++ b/docs/reference/modules/http.asciidoc, +|`http.pipelining` |Enable or disable HTTP pipelining, defaults to `true`., +, +++ b/docs/reference/migration/migrate_7_0/settings.asciidoc, +The setting `http.enabled` previously allowed disabling binding to HTTP, only allowing, +++ b/docs/reference/modules/http.asciidoc, +|`http.pipelining` |Enable or disable HTTP pipelining, defaults to `true`., +, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpChannel.java, +import org.elasticsearch.http.netty4.pipelining.HttpPipelinedRequest;, +    private final HttpPipelinedRequest pipelinedRequest;, +     * @param pipelinedRequest      If HTTP pipelining is enabled provide the corresponding pipelined request. May be null if, + *                              HTTP pipelining is disabled., +     * @param handlingSettings true iff error messages should include stack traces., +    Netty4HttpChannel(, +            final Netty4HttpServerTransport transport,, +            final Netty4HttpRequest request,, +            final HttpPipelinedRequest pipelinedRequest,, +            final HttpHandlingSettings handlingSettings,, +            final ThreadContext threadContext) {, +        this.pipelinedRequest = pipelinedRequest;, +            final Object msg;, +            if (pipelinedRequest != null) {, +                msg = pipelinedRequest.createHttpResponse(resp, promise);, +            } else {, +                msg = resp;, +            }, +            channel.writeAndFlush(msg, promise);, +            if (pipelinedRequest != null) {, +                pipelinedRequest.release();, +            }, +++ b/docs/reference/migration/migrate_7_0/settings.asciidoc, +The setting `http.enabled` previously allowed disabling binding to HTTP, only allowing, +++ b/docs/reference/modules/http.asciidoc, +|`http.pipelining` |Enable or disable HTTP pipelining, defaults to `true`., +, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpChannel.java, +import org.elasticsearch.http.netty4.pipelining.HttpPipelinedRequest;, +    private final HttpPipelinedRequest pipelinedRequest;, +     * @param pipelinedRequest      If HTTP pipelining is enabled provide the corresponding pipelined request. May be null if, + *                              HTTP pipelining is disabled., +     * @param handlingSettings true iff error messages should include stack traces., +    Netty4HttpChannel(, +            final Netty4HttpServerTransport transport,, +            final Netty4HttpRequest request,, +            final HttpPipelinedRequest pipelinedRequest,, +            final HttpHandlingSettings handlingSettings,, +            final ThreadContext threadContext) {, +        this.pipelinedRequest = pipelinedRequest;, +            final Object msg;, +            if (pipelinedRequest != null) {, +                msg = pipelinedRequest.createHttpResponse(resp, promise);, +            } else {, +                msg = resp;, +            }, +            channel.writeAndFlush(msg, promise);, +            if (pipelinedRequest != null) {, +                pipelinedRequest.release();, +            }, +++ /dev/null, +++ b/docs/reference/migration/migrate_7_0/settings.asciidoc, +The setting `http.enabled` previously allowed disabling binding to HTTP, only allowing, +++ b/docs/reference/modules/http.asciidoc, +|`http.pipelining` |Enable or disable HTTP pipelining, defaults to `true`., +, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpChannel.java, +import org.elasticsearch.http.netty4.pipelining.HttpPipelinedRequest;, +    private final HttpPipelinedRequest pipelinedRequest;, +     * @param pipelinedRequest      If HTTP pipelining is enabled provide the corresponding pipelined request. May be null if, + *                              HTTP pipelining is disabled., +     * @param handlingSettings true iff error messages should include stack traces., +    Netty4HttpChannel(, +            final Netty4HttpServerTransport transport,, +            final Netty4HttpRequest request,, +            final HttpPipelinedRequest pipelinedRequest,, +            final HttpHandlingSettings handlingSettings,, +            final ThreadContext threadContext) {, +        this.pipelinedRequest = pipelinedRequest;, +            final Object msg;, +            if (pipelinedRequest != null) {, +                msg = pipelinedRequest.createHttpResponse(resp, promise);, +            } else {, +                msg = resp;, +            }, +            channel.writeAndFlush(msg, promise);, +            if (pipelinedRequest != null) {, +                pipelinedRequest.release();, +            }, +++ /dev/null, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpRequestHandler.java, +import org.elasticsearch.http.netty4.pipelining.HttpPipelinedRequest;, +class Netty4HttpRequestHandler extends SimpleChannelInboundHandler<Object> {, +    private final boolean httpPipeliningEnabled;, +        this.httpPipeliningEnabled = serverTransport.pipelining;, +    protected void channelRead0(ChannelHandlerContext ctx, Object msg) throws Exception {, +        final FullHttpRequest request;]