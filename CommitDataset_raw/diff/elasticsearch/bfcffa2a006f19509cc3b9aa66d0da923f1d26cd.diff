[+++ b/core/src/main/java/org/elasticsearch/common/lucene/ShardCoreKeyMap.java, +import org.apache.lucene.index.LeafReader.CoreClosedListener;, +import java.io.IOException;, +                CoreClosedListener listener = ownerCoreCacheKey -> {, +                };, +                boolean addedListener = false;, +                try {, +                    reader.addCoreClosedListener(listener);, +                    addedListener = true;, +                } finally {, +                    if (false == addedListener) {, +                        try {, +                            listener.onClose(coreKey);, +                        } catch (IOException e) {, +                            throw new RuntimeException("Blow up trying to recover from failure to add listener", e);, +                        }, +                    }, +                }, +++ b/core/src/main/java/org/elasticsearch/common/lucene/ShardCoreKeyMap.java, +import org.apache.lucene.index.LeafReader.CoreClosedListener;, +import java.io.IOException;, +                CoreClosedListener listener = ownerCoreCacheKey -> {, +                };, +                boolean addedListener = false;, +                try {, +                    reader.addCoreClosedListener(listener);, +                    addedListener = true;, +                } finally {, +                    if (false == addedListener) {, +                        try {, +                            listener.onClose(coreKey);, +                        } catch (IOException e) {, +                            throw new RuntimeException("Blow up trying to recover from failure to add listener", e);, +                        }, +                    }, +                }, +++ b/core/src/test/java/org/elasticsearch/common/lucene/ShardCoreKeyMapTests.java, +import org.apache.lucene.index.LeafReader;, +import org.apache.lucene.store.AlreadyClosedException;, +    public void testAddingAClosedReader() throws Exception {, +        LeafReader reader;, +        try (Directory dir = newDirectory();, +                RandomIndexWriter writer = new RandomIndexWriter(random(), dir)) {, +            writer.addDocument(new Document());, +            try (DirectoryReader dirReader = ElasticsearchDirectoryReader.wrap(writer.getReader(), new ShardId("index1", 1))) {, +                reader = dirReader.leaves().get(0).reader();, +            }, +        }, +        ShardCoreKeyMap map = new ShardCoreKeyMap();, +        try {, +            map.add(reader);, +            fail("Expected AlreadyClosedException");, +        } catch (AlreadyClosedException e) {, +            // What we wanted, +        }, +        assertEquals(0, map.size());, +    }, +]