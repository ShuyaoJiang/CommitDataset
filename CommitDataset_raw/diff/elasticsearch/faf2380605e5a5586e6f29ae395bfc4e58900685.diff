[+++ b/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +            case 17:, +                return readPrimitiveIntArray();, +            case 18:, +                return readPrimitiveLongArray();, +            case 19:, +                return readPrimitiveFloatArray();, +            case 20:, +                return readPrimitiveDoubleArray();, +    private Object readPrimitiveIntArray() throws IOException {, +        int length = readVInt();, +        int[] values = new int[length];, +        for(int i=0; i<length; i++) {, +            values[i] = readInt();, +        }, +        return values;, +    }, +    , +    private Object readPrimitiveLongArray() throws IOException {, +        int length = readVInt();, +        long[] values = new long[length];, +        for(int i=0; i<length; i++) {, +            values[i] = readLong();, +        }, +        return values;, +    }, +    , +    private Object readPrimitiveFloatArray() throws IOException {, +        int length = readVInt();, +        float[] values = new float[length];, +        for(int i=0; i<length; i++) {, +            values[i] = readFloat();, +        }, +        return values;, +    }, +    , +    private Object readPrimitiveDoubleArray() throws IOException {, +        int length = readVInt();, +        double[] values = new double[length];, +        for(int i=0; i<length; i++) {, +            values[i] = readDouble();, +        }, +        return values;, +    }, +, +++ b/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +            case 17:, +                return readPrimitiveIntArray();, +            case 18:, +                return readPrimitiveLongArray();, +            case 19:, +                return readPrimitiveFloatArray();, +            case 20:, +                return readPrimitiveDoubleArray();, +    private Object readPrimitiveIntArray() throws IOException {, +        int length = readVInt();, +        int[] values = new int[length];, +        for(int i=0; i<length; i++) {, +            values[i] = readInt();, +        }, +        return values;, +    }, +    , +    private Object readPrimitiveLongArray() throws IOException {, +        int length = readVInt();, +        long[] values = new long[length];, +        for(int i=0; i<length; i++) {, +            values[i] = readLong();, +        }, +        return values;, +    }, +    , +    private Object readPrimitiveFloatArray() throws IOException {, +        int length = readVInt();, +        float[] values = new float[length];, +        for(int i=0; i<length; i++) {, +            values[i] = readFloat();, +        }, +        return values;, +    }, +    , +    private Object readPrimitiveDoubleArray() throws IOException {, +        int length = readVInt();, +        double[] values = new double[length];, +        for(int i=0; i<length; i++) {, +            values[i] = readDouble();, +        }, +        return values;, +    }, +, +++ b/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +        } else if (type == int[].class) {, +            writeByte((byte) 17);, +            writePrimitiveIntArray((int[]) value);, +        } else if (type == long[].class) {, +            writeByte((byte) 18);, +            writePrimitiveLongArray((long[]) value);, +        } else if (type == float[].class) {, +            writeByte((byte) 19);, +            writePrimitiveFloatArray((float[]) value);]