[+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/ADefLink.java, + * For this node it is allowed to change {@link ALink#after} from outside, by default, + * {@code after} is {@code DEF}., +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/ADefLink.java, + * For this node it is allowed to change {@link ALink#after} from outside, by default, + * {@code after} is {@code DEF}., +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/EChain.java, +        if (last instanceof ADefLink) {, +            final ADefLink lastDef = (ADefLink) last;, +            // Unfortunately, we don't know the real type because we load from DEF and store to DEF!, +            lastDef.storeValueType = last.after;, +        }, +, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/ADefLink.java, + * For this node it is allowed to change {@link ALink#after} from outside, by default, + * {@code after} is {@code DEF}., +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/EChain.java, +        if (last instanceof ADefLink) {, +            final ADefLink lastDef = (ADefLink) last;, +            // Unfortunately, we don't know the real type because we load from DEF and store to DEF!, +            lastDef.storeValueType = last.after;, +        }, +, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/LDefArray.java, +        super(line, location, 2);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/ADefLink.java, + * For this node it is allowed to change {@link ALink#after} from outside, by default, + * {@code after} is {@code DEF}., +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/EChain.java, +        if (last instanceof ADefLink) {, +            final ADefLink lastDef = (ADefLink) last;, +            // Unfortunately, we don't know the real type because we load from DEF and store to DEF!, +            lastDef.storeValueType = last.after;, +        }, +, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/LDefArray.java, +        super(line, location, 2);, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ArrayTests.java, +    public void testArrayCompoundInt() {, +        assertEquals(6, exec("int[] x = new int[5]; x[0] = 5; x[0]++; return x[0];"));, +    }, +    , +    public void testArrayCompoundDef() {, +        assertEquals(6, exec("def x = new int[5]; x[0] = 5; x[0]++; return x[0];"));, +    }, +    ]