[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationModule.java, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDecider;, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDecidersModule;, +    private List<Class<? extends AllocationDecider>> allocations = Lists.newArrayList();, +        return ImmutableList.of(new ShardsAllocatorModule(settings), new AllocationDecidersModule(settings));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationModule.java, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDecider;, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDecidersModule;, +    private List<Class<? extends AllocationDecider>> allocations = Lists.newArrayList();, +        return ImmutableList.of(new ShardsAllocatorModule(settings), new AllocationDecidersModule(settings));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDeciders;, +    private final AllocationDeciders allocationDeciders;, +                new AllocationDeciders(settings, new NodeSettingsService(ImmutableSettings.Builder.EMPTY_SETTINGS)),, +    @Inject public AllocationService(Settings settings, AllocationDeciders allocationDeciders, ShardsAllocators shardsAllocators) {, +        this.allocationDeciders = allocationDeciders;, +        StartedRerouteAllocation allocation = new StartedRerouteAllocation(allocationDeciders, routingNodes, clusterState.nodes(), startedShards);, +        shardsAllocators.applyStartedShards(allocation);, +        FailedRerouteAllocation allocation = new FailedRerouteAllocation(allocationDeciders, routingNodes, clusterState.nodes(), failedShard);, +        shardsAllocators.applyFailedShards(allocation);, +        RoutingAllocation allocation = new RoutingAllocation(allocationDeciders, routingNodes, clusterState.nodes());, +        RoutingAllocation allocation = new RoutingAllocation(allocationDeciders, routingNodes, clusterState.nodes());, +            changed |= shardsAllocators.allocateUnassigned(allocation);, +        changed |= shardsAllocators.rebalance(allocation);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationModule.java, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDecider;, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDecidersModule;, +    private List<Class<? extends AllocationDecider>> allocations = Lists.newArrayList();, +        return ImmutableList.of(new ShardsAllocatorModule(settings), new AllocationDecidersModule(settings));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDeciders;, +    private final AllocationDeciders allocationDeciders;, +                new AllocationDeciders(settings, new NodeSettingsService(ImmutableSettings.Builder.EMPTY_SETTINGS)),, +    @Inject public AllocationService(Settings settings, AllocationDeciders allocationDeciders, ShardsAllocators shardsAllocators) {, +        this.allocationDeciders = allocationDeciders;, +        StartedRerouteAllocation allocation = new StartedRerouteAllocation(allocationDeciders, routingNodes, clusterState.nodes(), startedShards);, +        shardsAllocators.applyStartedShards(allocation);, +        FailedRerouteAllocation allocation = new FailedRerouteAllocation(allocationDeciders, routingNodes, clusterState.nodes(), failedShard);, +        shardsAllocators.applyFailedShards(allocation);, +        RoutingAllocation allocation = new RoutingAllocation(allocationDeciders, routingNodes, clusterState.nodes());, +        RoutingAllocation allocation = new RoutingAllocation(allocationDeciders, routingNodes, clusterState.nodes());, +            changed |= shardsAllocators.allocateUnassigned(allocation);, +        changed |= shardsAllocators.rebalance(allocation);, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationModule.java, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDecider;, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDecidersModule;, +    private List<Class<? extends AllocationDecider>> allocations = Lists.newArrayList();, +        return ImmutableList.of(new ShardsAllocatorModule(settings), new AllocationDecidersModule(settings));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDeciders;, +    private final AllocationDeciders allocationDeciders;, +                new AllocationDeciders(settings, new NodeSettingsService(ImmutableSettings.Builder.EMPTY_SETTINGS)),, +    @Inject public AllocationService(Settings settings, AllocationDeciders allocationDeciders, ShardsAllocators shardsAllocators) {, +        this.allocationDeciders = allocationDeciders;, +        StartedRerouteAllocation allocation = new StartedRerouteAllocation(allocationDeciders, routingNodes, clusterState.nodes(), startedShards);, +        shardsAllocators.applyStartedShards(allocation);, +        FailedRerouteAllocation allocation = new FailedRerouteAllocation(allocationDeciders, routingNodes, clusterState.nodes(), failedShard);, +        shardsAllocators.applyFailedShards(allocation);, +        RoutingAllocation allocation = new RoutingAllocation(allocationDeciders, routingNodes, clusterState.nodes());, +        RoutingAllocation allocation = new RoutingAllocation(allocationDeciders, routingNodes, clusterState.nodes());, +            changed |= shardsAllocators.allocateUnassigned(allocation);, +        changed |= shardsAllocators.rebalance(allocation);, +++ /dev/null, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationModule.java, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDecider;, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDecidersModule;, +    private List<Class<? extends AllocationDecider>> allocations = Lists.newArrayList();, +        return ImmutableList.of(new ShardsAllocatorModule(settings), new AllocationDecidersModule(settings));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDeciders;, +    private final AllocationDeciders allocationDeciders;, +                new AllocationDeciders(settings, new NodeSettingsService(ImmutableSettings.Builder.EMPTY_SETTINGS)),, +    @Inject public AllocationService(Settings settings, AllocationDeciders allocationDeciders, ShardsAllocators shardsAllocators) {, +        this.allocationDeciders = allocationDeciders;, +        StartedRerouteAllocation allocation = new StartedRerouteAllocation(allocationDeciders, routingNodes, clusterState.nodes(), startedShards);, +        shardsAllocators.applyStartedShards(allocation);, +        FailedRerouteAllocation allocation = new FailedRerouteAllocation(allocationDeciders, routingNodes, clusterState.nodes(), failedShard);, +        shardsAllocators.applyFailedShards(allocation);, +        RoutingAllocation allocation = new RoutingAllocation(allocationDeciders, routingNodes, clusterState.nodes());, +        RoutingAllocation allocation = new RoutingAllocation(allocationDeciders, routingNodes, clusterState.nodes());, +            changed |= shardsAllocators.allocateUnassigned(allocation);, +        changed |= shardsAllocators.rebalance(allocation);, +++ /dev/null, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/FailedRerouteAllocation.java, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDeciders;, +    public FailedRerouteAllocation(AllocationDeciders deciders, RoutingNodes routingNodes, DiscoveryNodes nodes, ShardRouting failedShard) {, +        super(deciders, routingNodes, nodes);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationModule.java, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDecider;, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDecidersModule;, +    private List<Class<? extends AllocationDecider>> allocations = Lists.newArrayList();, +        return ImmutableList.of(new ShardsAllocatorModule(settings), new AllocationDecidersModule(settings));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +import org.elasticsearch.cluster.routing.allocation.decider.AllocationDeciders;, +    private final AllocationDeciders allocationDeciders;, +                new AllocationDeciders(settings, new NodeSettingsService(ImmutableSettings.Builder.EMPTY_SETTINGS)),, +    @Inject public AllocationService(Settings settings, AllocationDeciders allocationDeciders, ShardsAllocators shardsAllocators) {]