[+++ b/src/main/java/org/elasticsearch/cluster/ClusterService.java, +    void removeInitialStateBlock(ClusterBlock block) throws ElasticsearchIllegalStateException;, +, +++ b/src/main/java/org/elasticsearch/cluster/ClusterService.java, +    void removeInitialStateBlock(ClusterBlock block) throws ElasticsearchIllegalStateException;, +, +++ b/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +    public void removeInitialStateBlock(ClusterBlock block) throws ElasticsearchIllegalStateException {, +        if (lifecycle.started()) {, +            throw new ElasticsearchIllegalStateException("can't set initial block when started");, +        }, +        initialBlocks.removeGlobalBlock(block);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/cluster/ClusterService.java, +    void removeInitialStateBlock(ClusterBlock block) throws ElasticsearchIllegalStateException;, +, +++ b/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +    public void removeInitialStateBlock(ClusterBlock block) throws ElasticsearchIllegalStateException {, +        if (lifecycle.started()) {, +            throw new ElasticsearchIllegalStateException("can't set initial block when started");, +        }, +        initialBlocks.removeGlobalBlock(block);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java, +        return getGroups(settingPrefix, false);, +    }, +, +    @Override, +    public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException {, +                    if (ignoreNonGrouped) {, +                        continue;, +                    }, +++ b/src/main/java/org/elasticsearch/cluster/ClusterService.java, +    void removeInitialStateBlock(ClusterBlock block) throws ElasticsearchIllegalStateException;, +, +++ b/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +    public void removeInitialStateBlock(ClusterBlock block) throws ElasticsearchIllegalStateException {, +        if (lifecycle.started()) {, +            throw new ElasticsearchIllegalStateException("can't set initial block when started");, +        }, +        initialBlocks.removeGlobalBlock(block);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java, +        return getGroups(settingPrefix, false);, +    }, +, +    @Override, +    public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException {, +                    if (ignoreNonGrouped) {, +                        continue;, +                    }, +++ b/src/main/java/org/elasticsearch/common/settings/Settings.java, +     * Returns group settings for the given setting prefix., +     */, +    Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException;, +, +    /**, +++ b/src/main/java/org/elasticsearch/cluster/ClusterService.java, +    void removeInitialStateBlock(ClusterBlock block) throws ElasticsearchIllegalStateException;, +, +++ b/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +    public void removeInitialStateBlock(ClusterBlock block) throws ElasticsearchIllegalStateException {, +        if (lifecycle.started()) {, +            throw new ElasticsearchIllegalStateException("can't set initial block when started");, +        }, +        initialBlocks.removeGlobalBlock(block);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java, +        return getGroups(settingPrefix, false);, +    }, +, +    @Override, +    public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException {, +                    if (ignoreNonGrouped) {, +                        continue;, +                    }, +++ b/src/main/java/org/elasticsearch/common/settings/Settings.java, +     * Returns group settings for the given setting prefix., +     */, +    Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException;, +, +    /**, +++ b/src/main/java/org/elasticsearch/discovery/DiscoveryService.java, +import org.elasticsearch.common.Strings;, +import java.util.Random;, +            if (initialStateTimeout.millis() > 0) {, +            }, +     * <p/>, +, +    public static String generateNodeId(Settings settings) {, +        String seed = settings.get("discovery.id.seed");, +        if (seed != null) {]