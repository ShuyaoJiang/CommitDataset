[+++ b/src/main/java/org/elasticsearch/action/percolate/MultiPercolateRequest.java, +, +            // Setting values based on get request, if needed..., +            if ((percolateRequest.indices() == null || percolateRequest.indices().length == 0) && getRequest.index() != null) {, +                percolateRequest.indices(getRequest.index());, +            }, +            if (percolateRequest.documentType() == null && getRequest.type() != null) {, +                percolateRequest.documentType(getRequest.type());, +            }, +            if (percolateRequest.routing() == null && getRequest.routing() != null) {, +                percolateRequest.routing(getRequest.routing());, +            }, +            if (percolateRequest.preference() == null && getRequest.preference() != null) {, +                percolateRequest.preference(getRequest.preference());, +            }, +++ b/src/main/java/org/elasticsearch/action/percolate/MultiPercolateRequest.java, +, +            // Setting values based on get request, if needed..., +            if ((percolateRequest.indices() == null || percolateRequest.indices().length == 0) && getRequest.index() != null) {, +                percolateRequest.indices(getRequest.index());, +            }, +            if (percolateRequest.documentType() == null && getRequest.type() != null) {, +                percolateRequest.documentType(getRequest.type());, +            }, +            if (percolateRequest.routing() == null && getRequest.routing() != null) {, +                percolateRequest.routing(getRequest.routing());, +            }, +            if (percolateRequest.preference() == null && getRequest.preference() != null) {, +                percolateRequest.preference(getRequest.preference());, +            }, +++ b/src/test/java/org/elasticsearch/action/percolate/MultiPercolatorRequestTests.java, +        assertThat(request.requests().size(), equalTo(3));, +, +        percolateRequest = request.requests().get(2);, +        assertThat(percolateRequest.indices()[0], equalTo("my-index1"));, +        assertThat(percolateRequest.documentType(), equalTo("my-type1"));, +        assertThat(percolateRequest.ignoreIndices(), equalTo(IgnoreIndices.MISSING));, +        assertThat(percolateRequest.onlyCount(), equalTo(false));, +        assertThat(percolateRequest.getRequest(), nullValue());, +        assertThat(percolateRequest.source(), notNullValue());, +        sourceMap =  XContentFactory.xContent(percolateRequest.source()).createParser(percolateRequest.source()).map();, +        assertThat(sourceMap.get("doc"), equalTo((Object)MapBuilder.newMapBuilder().put("field1", "value3").map()));, +++ b/src/main/java/org/elasticsearch/action/percolate/MultiPercolateRequest.java, +, +            // Setting values based on get request, if needed..., +            if ((percolateRequest.indices() == null || percolateRequest.indices().length == 0) && getRequest.index() != null) {, +                percolateRequest.indices(getRequest.index());, +            }, +            if (percolateRequest.documentType() == null && getRequest.type() != null) {, +                percolateRequest.documentType(getRequest.type());, +            }, +            if (percolateRequest.routing() == null && getRequest.routing() != null) {, +                percolateRequest.routing(getRequest.routing());, +            }, +            if (percolateRequest.preference() == null && getRequest.preference() != null) {, +                percolateRequest.preference(getRequest.preference());, +            }, +++ b/src/test/java/org/elasticsearch/action/percolate/MultiPercolatorRequestTests.java, +        assertThat(request.requests().size(), equalTo(3));, +, +        percolateRequest = request.requests().get(2);, +        assertThat(percolateRequest.indices()[0], equalTo("my-index1"));, +        assertThat(percolateRequest.documentType(), equalTo("my-type1"));, +        assertThat(percolateRequest.ignoreIndices(), equalTo(IgnoreIndices.MISSING));, +        assertThat(percolateRequest.onlyCount(), equalTo(false));, +        assertThat(percolateRequest.getRequest(), nullValue());, +        assertThat(percolateRequest.source(), notNullValue());, +        sourceMap =  XContentFactory.xContent(percolateRequest.source()).createParser(percolateRequest.source()).map();, +        assertThat(sourceMap.get("doc"), equalTo((Object)MapBuilder.newMapBuilder().put("field1", "value3").map()));, +++ b/src/test/java/org/elasticsearch/action/percolate/mpercolate2.json, +{"percolate" : {}}, +{"doc" : {"field1" : "value3"}}]