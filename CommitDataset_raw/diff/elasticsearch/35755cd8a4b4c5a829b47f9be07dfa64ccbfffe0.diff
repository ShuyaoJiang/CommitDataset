[+++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java, +        this.topDocs = Lucene.EMPTY_TOP_DOCS;, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java, +        this.topDocs = Lucene.EMPTY_TOP_DOCS;, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsAggregator.java, +import org.elasticsearch.common.lucene.Lucene;, +import org.elasticsearch.search.internal.InternalSearchHits;, +        return new InternalTopHits(name, topHitsContext.size(), topHitsContext.sort(), Lucene.EMPTY_TOP_DOCS, InternalSearchHits.empty());, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java, +        this.topDocs = Lucene.EMPTY_TOP_DOCS;, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsAggregator.java, +import org.elasticsearch.common.lucene.Lucene;, +import org.elasticsearch.search.internal.InternalSearchHits;, +        return new InternalTopHits(name, topHitsContext.size(), topHitsContext.sort(), Lucene.EMPTY_TOP_DOCS, InternalSearchHits.empty());, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsBuilder.java, +        sourceBuilder().toXContent(builder, params);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java, +        this.topDocs = Lucene.EMPTY_TOP_DOCS;, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsAggregator.java, +import org.elasticsearch.common.lucene.Lucene;, +import org.elasticsearch.search.internal.InternalSearchHits;, +        return new InternalTopHits(name, topHitsContext.size(), topHitsContext.sort(), Lucene.EMPTY_TOP_DOCS, InternalSearchHits.empty());, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsBuilder.java, +        sourceBuilder().toXContent(builder, params);, +++ b/src/main/java/org/elasticsearch/search/internal/InternalSearchHits.java, +    public static InternalSearchHits empty() {, +        // We shouldn't use static final instance, since that could directly be returned by native transport clients, +        return new InternalSearchHits(EMPTY, 0, 0);, +    }, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java, +        this.topDocs = Lucene.EMPTY_TOP_DOCS;, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsAggregator.java, +import org.elasticsearch.common.lucene.Lucene;, +import org.elasticsearch.search.internal.InternalSearchHits;, +        return new InternalTopHits(name, topHitsContext.size(), topHitsContext.sort(), Lucene.EMPTY_TOP_DOCS, InternalSearchHits.empty());, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsBuilder.java, +        sourceBuilder().toXContent(builder, params);, +++ b/src/main/java/org/elasticsearch/search/internal/InternalSearchHits.java, +    public static InternalSearchHits empty() {, +        // We shouldn't use static final instance, since that could directly be returned by native transport clients, +        return new InternalSearchHits(EMPTY, 0, 0);, +    }, +++ b/src/main/java/org/elasticsearch/search/internal/InternalSearchResponse.java, +        return new InternalSearchResponse(InternalSearchHits.empty(), null, null, null, false);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java, +        this.topDocs = Lucene.EMPTY_TOP_DOCS;, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsAggregator.java, +import org.elasticsearch.common.lucene.Lucene;, +import org.elasticsearch.search.internal.InternalSearchHits;, +        return new InternalTopHits(name, topHitsContext.size(), topHitsContext.sort(), Lucene.EMPTY_TOP_DOCS, InternalSearchHits.empty());, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsBuilder.java, +        sourceBuilder().toXContent(builder, params);, +++ b/src/main/java/org/elasticsearch/search/internal/InternalSearchHits.java, +    public static InternalSearchHits empty() {, +        // We shouldn't use static final instance, since that could directly be returned by native transport clients, +        return new InternalSearchHits(EMPTY, 0, 0);, +    }, +++ b/src/main/java/org/elasticsearch/search/internal/InternalSearchResponse.java, +        return new InternalSearchResponse(InternalSearchHits.empty(), null, null, null, false);, +++ b/src/test/java/org/elasticsearch/search/aggregations/bucket/TopHitsTests.java, +        createIndex("empty");, +    @Test, +    public void testEmptyIndex() throws Exception {, +        SearchResponse response = client().prepareSearch("empty").setTypes("type"), +                .addAggregation(topHits("hits")), +                .get();, +        assertSearchResponse(response);, +, +        TopHits hits = response.getAggregations().get("hits");, +        assertThat(hits, notNullValue());, +        assertThat(hits.getName(), equalTo("hits"));, +        assertThat(hits.getHits().totalHits(), equalTo(0l));, +    }, +]