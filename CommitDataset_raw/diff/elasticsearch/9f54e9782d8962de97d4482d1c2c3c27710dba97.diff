[+++ b/docs/reference/modules/advanced-scripting.asciidoc, +Text features, such as term or document frequency for a specific term can be accessed in scripts (see <<modules-scripting, scripting documentation>> ) with the `_index` variable. This can be useful if, for example, you want to implement your own scoring model using for example a script inside a <<query-dsl-function-score-query,function score query>>., +`_index.numDocs()`::, +`_index.maxDoc()`::, +`_index.numDeletedDocs()`::, +`_index['FIELD']`., +`_index['FIELD'].docCount()`::, +`_index['FIELD'].sumttf()`::, +`_index['FIELD'].sumdf()`::, +The number of terms in a field cannot be accessed using the `_index` variable. See <<mapping-core-types, word count mapping type>> on how to do that., +this: `_index['FIELD']['TERM']`. This will never return null, even if term or field does not exist. , +If you do not need the term frequency, call `_index['FIELD'].get('TERM', 0)`, +`_index['FIELD']['TERM'].df()`::, +`_index['FIELD']['TERM'].ttf()`::, +`_index['FIELD']['TERM'].tf()`::, +`_index['FIELD'].get('TERM', flag)` where flag can be, +    `_index['FIELD'].get('TERM', _POSITIONS | _PAYLOADS)`, +termInfo = _index['my_field'].get('foo',_PAYLOADS);, +The `_index` variable can only be used to gather statistics for single terms. If you want to use information on all terms in a field, you must store the term vectors (set `term_vector` in the mapping as described in the <<mapping-core-types,mapping documentation>>). To access them, call, +`_index.getTermVectors()` to get a, +++ b/docs/reference/modules/advanced-scripting.asciidoc, +Text features, such as term or document frequency for a specific term can be accessed in scripts (see <<modules-scripting, scripting documentation>> ) with the `_index` variable. This can be useful if, for example, you want to implement your own scoring model using for example a script inside a <<query-dsl-function-score-query,function score query>>., +`_index.numDocs()`::, +`_index.maxDoc()`::, +`_index.numDeletedDocs()`::, +`_index['FIELD']`., +`_index['FIELD'].docCount()`::, +`_index['FIELD'].sumttf()`::, +`_index['FIELD'].sumdf()`::, +The number of terms in a field cannot be accessed using the `_index` variable. See <<mapping-core-types, word count mapping type>> on how to do that., +this: `_index['FIELD']['TERM']`. This will never return null, even if term or field does not exist. , +If you do not need the term frequency, call `_index['FIELD'].get('TERM', 0)`, +`_index['FIELD']['TERM'].df()`::, +`_index['FIELD']['TERM'].ttf()`::, +`_index['FIELD']['TERM'].tf()`::, +`_index['FIELD'].get('TERM', flag)` where flag can be, +    `_index['FIELD'].get('TERM', _POSITIONS | _PAYLOADS)`, +termInfo = _index['my_field'].get('foo',_PAYLOADS);, +The `_index` variable can only be used to gather statistics for single terms. If you want to use information on all terms in a field, you must store the term vectors (set `term_vector` in the mapping as described in the <<mapping-core-types,mapping documentation>>). To access them, call, +`_index.getTermVectors()` to get a, +++ b/src/main/java/org/elasticsearch/script/AbstractSearchScript.java, +import org.elasticsearch.search.lookup.IndexLookup;, +    protected final IndexLookup indexLookup() {, +        return lookup.indexLookup();, +++ b/docs/reference/modules/advanced-scripting.asciidoc, +Text features, such as term or document frequency for a specific term can be accessed in scripts (see <<modules-scripting, scripting documentation>> ) with the `_index` variable. This can be useful if, for example, you want to implement your own scoring model using for example a script inside a <<query-dsl-function-score-query,function score query>>., +`_index.numDocs()`::, +`_index.maxDoc()`::, +`_index.numDeletedDocs()`::, +`_index['FIELD']`., +`_index['FIELD'].docCount()`::, +`_index['FIELD'].sumttf()`::, +`_index['FIELD'].sumdf()`::, +The number of terms in a field cannot be accessed using the `_index` variable. See <<mapping-core-types, word count mapping type>> on how to do that., +this: `_index['FIELD']['TERM']`. This will never return null, even if term or field does not exist. , +If you do not need the term frequency, call `_index['FIELD'].get('TERM', 0)`, +`_index['FIELD']['TERM'].df()`::, +`_index['FIELD']['TERM'].ttf()`::, +`_index['FIELD']['TERM'].tf()`::, +`_index['FIELD'].get('TERM', flag)` where flag can be, +    `_index['FIELD'].get('TERM', _POSITIONS | _PAYLOADS)`, +termInfo = _index['my_field'].get('foo',_PAYLOADS);, +The `_index` variable can only be used to gather statistics for single terms. If you want to use information on all terms in a field, you must store the term vectors (set `term_vector` in the mapping as described in the <<mapping-core-types,mapping documentation>>). To access them, call, +`_index.getTermVectors()` to get a, +++ b/src/main/java/org/elasticsearch/script/AbstractSearchScript.java, +import org.elasticsearch.search.lookup.IndexLookup;, +    protected final IndexLookup indexLookup() {, +        return lookup.indexLookup();, +++ b/src/main/java/org/elasticsearch/search/lookup/CachedPositionIterator.java, +    public CachedPositionIterator(IndexFieldTerm indexFieldTerm) {, +        super(indexFieldTerm);, +++ b/docs/reference/modules/advanced-scripting.asciidoc, +Text features, such as term or document frequency for a specific term can be accessed in scripts (see <<modules-scripting, scripting documentation>> ) with the `_index` variable. This can be useful if, for example, you want to implement your own scoring model using for example a script inside a <<query-dsl-function-score-query,function score query>>., +`_index.numDocs()`::, +`_index.maxDoc()`::, +`_index.numDeletedDocs()`::, +`_index['FIELD']`., +`_index['FIELD'].docCount()`::, +`_index['FIELD'].sumttf()`::, +`_index['FIELD'].sumdf()`::, +The number of terms in a field cannot be accessed using the `_index` variable. See <<mapping-core-types, word count mapping type>> on how to do that., +this: `_index['FIELD']['TERM']`. This will never return null, even if term or field does not exist. , +If you do not need the term frequency, call `_index['FIELD'].get('TERM', 0)`, +`_index['FIELD']['TERM'].df()`::, +`_index['FIELD']['TERM'].ttf()`::, +`_index['FIELD']['TERM'].tf()`::, +`_index['FIELD'].get('TERM', flag)` where flag can be, +    `_index['FIELD'].get('TERM', _POSITIONS | _PAYLOADS)`, +termInfo = _index['my_field'].get('foo',_PAYLOADS);, +The `_index` variable can only be used to gather statistics for single terms. If you want to use information on all terms in a field, you must store the term vectors (set `term_vector` in the mapping as described in the <<mapping-core-types,mapping documentation>>). To access them, call, +`_index.getTermVectors()` to get a, +++ b/src/main/java/org/elasticsearch/script/AbstractSearchScript.java, +import org.elasticsearch.search.lookup.IndexLookup;, +    protected final IndexLookup indexLookup() {, +        return lookup.indexLookup();, +++ b/src/main/java/org/elasticsearch/search/lookup/CachedPositionIterator.java, +    public CachedPositionIterator(IndexFieldTerm indexFieldTerm) {, +        super(indexFieldTerm);, +++ b/src/main/java/org/elasticsearch/search/lookup/IndexField.java, +/*]