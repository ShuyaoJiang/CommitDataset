[+++ b/core/src/main/java/org/elasticsearch/cluster/NodeConnectionsService.java, +import static org.elasticsearch.common.settings.Setting.Property;, +import static org.elasticsearch.common.settings.Setting.positiveTimeSetting;, +, +, +            positiveTimeSetting("cluster.nodes.reconnect_interval", TimeValue.timeValueSeconds(10), Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/cluster/NodeConnectionsService.java, +import static org.elasticsearch.common.settings.Setting.Property;, +import static org.elasticsearch.common.settings.Setting.positiveTimeSetting;, +, +, +            positiveTimeSetting("cluster.nodes.reconnect_interval", TimeValue.timeValueSeconds(10), Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeService.java, +import org.elasticsearch.common.settings.Setting.Property;, +            Setting.longSetting("node_id.seed", 0L, Long.MIN_VALUE, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/cluster/NodeConnectionsService.java, +import static org.elasticsearch.common.settings.Setting.Property;, +import static org.elasticsearch.common.settings.Setting.positiveTimeSetting;, +, +, +            positiveTimeSetting("cluster.nodes.reconnect_interval", TimeValue.timeValueSeconds(10), Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeService.java, +import org.elasticsearch.common.settings.Setting.Property;, +            Setting.longSetting("node_id.seed", 0L, Long.MIN_VALUE, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +        Setting.groupSetting("index.similarity.", (s) -> {, +        }, Property.IndexScope), // this allows similarity settings to be passed, +++ b/core/src/main/java/org/elasticsearch/cluster/NodeConnectionsService.java, +import static org.elasticsearch.common.settings.Setting.Property;, +import static org.elasticsearch.common.settings.Setting.positiveTimeSetting;, +, +, +            positiveTimeSetting("cluster.nodes.reconnect_interval", TimeValue.timeValueSeconds(10), Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeService.java, +import org.elasticsearch.common.settings.Setting.Property;, +            Setting.longSetting("node_id.seed", 0L, Long.MIN_VALUE, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +        Setting.groupSetting("index.similarity.", (s) -> {, +        }, Property.IndexScope), // this allows similarity settings to be passed, +++ b/core/src/main/java/org/elasticsearch/common/settings/Setting.java, +        return groupSetting(key, (s) -> {}, properties);, +    }, +    public static Setting<Settings> groupSetting(String key, Consumer<Settings> validator, Property... properties) {]