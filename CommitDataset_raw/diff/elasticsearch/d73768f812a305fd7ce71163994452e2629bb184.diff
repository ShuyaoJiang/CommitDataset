[+++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinator.java, +import org.elasticsearch.index.IndexSettings;, +                        if (leaderIndexMetaData.getSettings().getAsBoolean(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), false)) {, +            }, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinator.java, +import org.elasticsearch.index.IndexSettings;, +                        if (leaderIndexMetaData.getSettings().getAsBoolean(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), false)) {, +            }, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/TransportPutFollowAction.java, +        if (leaderIndexMetaData.getSettings().getAsBoolean(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), false) == false) {, +            listener.onFailure(, +                new IllegalArgumentException("leader index [" + request.getLeaderIndex() + "] does not have soft deletes enabled"));, +        }, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinator.java, +import org.elasticsearch.index.IndexSettings;, +                        if (leaderIndexMetaData.getSettings().getAsBoolean(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), false)) {, +            }, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/TransportPutFollowAction.java, +        if (leaderIndexMetaData.getSettings().getAsBoolean(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), false) == false) {, +            listener.onFailure(, +                new IllegalArgumentException("leader index [" + request.getLeaderIndex() + "] does not have soft deletes enabled"));, +        }, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/LocalIndexFollowingIT.java, +    public void testDoNotCreateFollowerIfLeaderDoesNotHaveSoftDeletes() throws Exception {, +        final String leaderIndexSettings = getIndexSettings(2, 0,, +            singletonMap(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), "false"));, +        assertAcked(client().admin().indices().prepareCreate("leader-index").setSource(leaderIndexSettings, XContentType.JSON));, +        ResumeFollowAction.Request followRequest = getResumeFollowRequest();, +        followRequest.setFollowerIndex("follower-index");, +        PutFollowAction.Request putFollowRequest = getPutFollowRequest();, +        putFollowRequest.setLeaderIndex("leader-index");, +        putFollowRequest.setFollowRequest(followRequest);, +        IllegalArgumentException error = expectThrows(IllegalArgumentException.class,, +            () -> client().execute(PutFollowAction.INSTANCE, putFollowRequest).actionGet());, +        assertThat(error.getMessage(), equalTo("leader index [leader-index] does not have soft deletes enabled"));, +        assertThat(client().admin().indices().prepareExists("follower-index").get().isExists(), equalTo(false));, +    }, +, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinator.java, +import org.elasticsearch.index.IndexSettings;, +                        if (leaderIndexMetaData.getSettings().getAsBoolean(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), false)) {, +            }, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/TransportPutFollowAction.java, +        if (leaderIndexMetaData.getSettings().getAsBoolean(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), false) == false) {, +            listener.onFailure(, +                new IllegalArgumentException("leader index [" + request.getLeaderIndex() + "] does not have soft deletes enabled"));, +        }, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/LocalIndexFollowingIT.java, +    public void testDoNotCreateFollowerIfLeaderDoesNotHaveSoftDeletes() throws Exception {, +        final String leaderIndexSettings = getIndexSettings(2, 0,, +            singletonMap(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), "false"));, +        assertAcked(client().admin().indices().prepareCreate("leader-index").setSource(leaderIndexSettings, XContentType.JSON));, +        ResumeFollowAction.Request followRequest = getResumeFollowRequest();, +        followRequest.setFollowerIndex("follower-index");, +        PutFollowAction.Request putFollowRequest = getPutFollowRequest();, +        putFollowRequest.setLeaderIndex("leader-index");, +        putFollowRequest.setFollowRequest(followRequest);, +        IllegalArgumentException error = expectThrows(IllegalArgumentException.class,, +            () -> client().execute(PutFollowAction.INSTANCE, putFollowRequest).actionGet());, +        assertThat(error.getMessage(), equalTo("leader index [leader-index] does not have soft deletes enabled"));, +        assertThat(client().admin().indices().prepareExists("follower-index").get().isExists(), equalTo(false));, +    }, +, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinatorTests.java, +import org.elasticsearch.index.IndexSettings;, +                .settings(settings(Version.CURRENT).put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), true)), +                .settings(settings(Version.CURRENT).put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), true)), +                .settings(settings(Version.CURRENT).put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), true)), +                .put(IndexMetaData.SETTING_INDEX_UUID, "metrics-" + i), +                .put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), i % 2 == 0);, +        assertThat(result.size(), equalTo(3));, +        assertThat(result.get(1).getName(), equalTo("metrics-2"));, +        assertThat(result.get(2).getName(), equalTo("metrics-4"));, +        assertThat(result.size(), equalTo(2));, +        assertThat(result.get(1).getName(), equalTo("metrics-4"));]