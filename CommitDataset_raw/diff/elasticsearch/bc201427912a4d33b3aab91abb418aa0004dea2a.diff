[+++ b/buildSrc/src/test/java/org/elasticsearch/gradle/testclusters/TestClustersPluginIT.java, +        BuildResult result = getTestClustersRunner(":user1").build();, +        BuildResult result = getTestClustersRunner("--dry-run", ":user1").build();, +        BuildResult result = getTestClustersRunner(":user1", ":user2").build();, +        getTestClustersRunner(":upToDate1", ":upToDate2").build();, +        BuildResult result = getTestClustersRunner(":upToDate1", ":upToDate2").build();, +        BuildResult result = getTestClustersRunner(":skipped1", ":skipped2").build();, +        BuildResult result = getTestClustersRunner(, +            "user1", "user2", "-s", "-i", "--parallel", "-Dlocal.repo.path=" + getLocalTestRepoPath(), +        ).build();, +, +        assertTaskSuccessful(, +            result,, +            ":user1", ":user2", ":alpha:user1", ":alpha:user2", ":bravo:user1", ":bravo:user2", +        );, +        assertStartedAndStoppedOnce(result);, +        assertOutputOnlyOnce(, +            result.getOutput(),, +            "Starting `node{:alpha:myTestCluster}`",, +            "Stopping `node{::myTestCluster}`", +        );, +        assertOutputOnlyOnce(, +            result.getOutput(),, +            "Starting `node{::myTestCluster}`",, +            "Stopping `node{:bravo:myTestCluster}`", +        );, +    }, +, +    public void testIncremental() {, +        BuildResult result = getTestClustersRunner("clean", ":user1").build();, +        assertTaskSuccessful(result, ":user1");, +        assertStartedAndStoppedOnce(result);, +, +        result = getTestClustersRunner(":user1").build();, +        assertTaskSuccessful(result, ":user1");, +        assertStartedAndStoppedOnce(result);, +, +        result = getTestClustersRunner("clean", ":user1").build();, +        assertTaskSuccessful(result, ":user1");, +        assertStartedAndStoppedOnce(result);, +        BuildResult result = getTestClustersRunner(":itAlwaysFails").buildAndFail();, +        BuildResult result = getTestClustersRunner(":dependsOnFailed").buildAndFail();, +        BuildResult result = getTestClustersRunner(":illegalConfigAlter").buildAndFail();, +++ b/buildSrc/src/test/java/org/elasticsearch/gradle/testclusters/TestClustersPluginIT.java, +        BuildResult result = getTestClustersRunner(":user1").build();, +        BuildResult result = getTestClustersRunner("--dry-run", ":user1").build();, +        BuildResult result = getTestClustersRunner(":user1", ":user2").build();, +        getTestClustersRunner(":upToDate1", ":upToDate2").build();, +        BuildResult result = getTestClustersRunner(":upToDate1", ":upToDate2").build();, +        BuildResult result = getTestClustersRunner(":skipped1", ":skipped2").build();, +        BuildResult result = getTestClustersRunner(, +            "user1", "user2", "-s", "-i", "--parallel", "-Dlocal.repo.path=" + getLocalTestRepoPath(), +        ).build();, +, +        assertTaskSuccessful(, +            result,, +            ":user1", ":user2", ":alpha:user1", ":alpha:user2", ":bravo:user1", ":bravo:user2", +        );, +        assertStartedAndStoppedOnce(result);, +        assertOutputOnlyOnce(, +            result.getOutput(),, +            "Starting `node{:alpha:myTestCluster}`",, +            "Stopping `node{::myTestCluster}`", +        );, +        assertOutputOnlyOnce(, +            result.getOutput(),, +            "Starting `node{::myTestCluster}`",, +            "Stopping `node{:bravo:myTestCluster}`", +        );, +    }, +, +    public void testIncremental() {, +        BuildResult result = getTestClustersRunner("clean", ":user1").build();, +        assertTaskSuccessful(result, ":user1");, +        assertStartedAndStoppedOnce(result);, +, +        result = getTestClustersRunner(":user1").build();, +        assertTaskSuccessful(result, ":user1");, +        assertStartedAndStoppedOnce(result);, +, +        result = getTestClustersRunner("clean", ":user1").build();, +        assertTaskSuccessful(result, ":user1");, +        assertStartedAndStoppedOnce(result);, +        BuildResult result = getTestClustersRunner(":itAlwaysFails").buildAndFail();, +        BuildResult result = getTestClustersRunner(":dependsOnFailed").buildAndFail();, +        BuildResult result = getTestClustersRunner(":illegalConfigAlter").buildAndFail();, +++ b/buildSrc/src/testKit/testclusters/build.gradle, +    id 'base', +allprojects { all ->, +        String luceneSnapshotRevision = System.getProperty("test.lucene-snapshot-revision"), +        if (luceneSnapshotRevision != null) {, +            maven {, +                url "http://s3.amazonaws.com/download.elasticsearch.org/lucenesnapshots/" + luceneSnapshotRevision, +            }, +        }, +        jcenter(), +    }, +, +    if (project == rootProject || project.name == "alpha" || project.name == "bravo") {, +        apply plugin: 'elasticsearch.testclusters']