[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/adjacency/InternalAdjacencyMatrix.java, +import java.util.Objects;, +, +        @Override, +        public boolean equals(Object other) {, +            if (this == other) {, +                return true;, +            }, +            if (other == null || getClass() != other.getClass()) {, +                return false;, +            }, +            InternalBucket that = (InternalBucket) other;, +            return Objects.equals(key, that.key), +                    && Objects.equals(docCount, that.docCount), +                    && Objects.equals(aggregations, that.aggregations);, +        }, +, +        @Override, +        public int hashCode() {, +            return Objects.hash(getClass(), key, docCount, aggregations);, +        }, +    @Override, +    protected int doHashCode() {, +        return Objects.hash(buckets);, +    }, +, +    @Override, +    protected boolean doEquals(Object obj) {, +        InternalAdjacencyMatrix that = (InternalAdjacencyMatrix) obj;, +        return Objects.equals(buckets, that.buckets);, +    }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/adjacency/InternalAdjacencyMatrix.java, +import java.util.Objects;, +, +        @Override, +        public boolean equals(Object other) {, +            if (this == other) {, +                return true;, +            }, +            if (other == null || getClass() != other.getClass()) {, +                return false;, +            }, +            InternalBucket that = (InternalBucket) other;, +            return Objects.equals(key, that.key), +                    && Objects.equals(docCount, that.docCount), +                    && Objects.equals(aggregations, that.aggregations);, +        }, +, +        @Override, +        public int hashCode() {, +            return Objects.hash(getClass(), key, docCount, aggregations);, +        }, +    @Override, +    protected int doHashCode() {, +        return Objects.hash(buckets);, +    }, +, +    @Override, +    protected boolean doEquals(Object obj) {, +        InternalAdjacencyMatrix that = (InternalAdjacencyMatrix) obj;, +        return Objects.equals(buckets, that.buckets);, +    }, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/adjacency/InternalAdjacencyMatrixTests.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.search.aggregations.bucket.adjacency;, +, +import org.elasticsearch.common.io.stream.Writeable.Reader;, +import org.elasticsearch.search.aggregations.InternalAggregations;, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregator;, +import org.elasticsearch.test.InternalAggregationTestCase;, +import org.junit.Before;, +, +import java.util.ArrayList;, +import java.util.List;, +import java.util.Map;, +import java.util.TreeMap;, +, +public class InternalAdjacencyMatrixTests extends InternalAggregationTestCase<InternalAdjacencyMatrix> {, +, +    private List<String> keys;, +, +    @Override]