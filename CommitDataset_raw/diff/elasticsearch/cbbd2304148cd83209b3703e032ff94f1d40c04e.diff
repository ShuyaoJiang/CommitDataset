[+++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/repository/CcrRepository.java, +                    final FileSession prevFileSession;, +                        prevFileSession = minEntry.getValue();, +                        requestSeqIdTracker.waitForOpsToComplete(prevFileSession.lastTrackedSeqNo);, +                        final FileSession fileSession;, +                            fileSession = inFlightRequests.get(fileToRecover);, +                            if (fileSession == null) {, +                            logger.trace("[{}] [{}] fetching chunk for file [{}], expected offset: {}, size: {}", shardId, snapshotId,, +                                fileToRecover.name(), fileSession.lastOffset, bytesRequested);, +                                            logger.trace("[{}] [{}] got response for file [{}], offset: {}, length: {}", shardId,, +                                                snapshotId, fileToRecover.name(), r.getOffset(), actualChunkSize);, +, +                                            assert r.getOffset() == fileSession.lastOffset;, +                                            assert actualChunkSize == bytesRequested;, +                                                    final FileSession removed = inFlightRequests.remove(fileToRecover);, +                                                    assert removed != null : "session disappeared for " + fileToRecover.name();, +                                                    assert removed.lastTrackedSeqNo == requestSeqId;, +                                                    assert removed.lastOffset == fileSession.lastOffset;, +                                                    assert replaced.lastTrackedSeqNo == requestSeqId;, +                                                    assert replaced.lastOffset == fileSession.lastOffset;, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/repository/CcrRepository.java, +                    final FileSession prevFileSession;, +                        prevFileSession = minEntry.getValue();, +                        requestSeqIdTracker.waitForOpsToComplete(prevFileSession.lastTrackedSeqNo);, +                        final FileSession fileSession;, +                            fileSession = inFlightRequests.get(fileToRecover);, +                            if (fileSession == null) {, +                            logger.trace("[{}] [{}] fetching chunk for file [{}], expected offset: {}, size: {}", shardId, snapshotId,, +                                fileToRecover.name(), fileSession.lastOffset, bytesRequested);, +                                            logger.trace("[{}] [{}] got response for file [{}], offset: {}, length: {}", shardId,, +                                                snapshotId, fileToRecover.name(), r.getOffset(), actualChunkSize);, +, +                                            assert r.getOffset() == fileSession.lastOffset;, +                                            assert actualChunkSize == bytesRequested;, +                                                    final FileSession removed = inFlightRequests.remove(fileToRecover);, +                                                    assert removed != null : "session disappeared for " + fileToRecover.name();, +                                                    assert removed.lastTrackedSeqNo == requestSeqId;, +                                                    assert removed.lastOffset == fileSession.lastOffset;, +                                                    assert replaced.lastTrackedSeqNo == requestSeqId;, +                                                    assert replaced.lastOffset == fileSession.lastOffset;, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/IndexFollowingIT.java, +, +        followerClient().admin().cluster().prepareUpdateSettings(), +            .setTransientSettings(Settings.builder().put(CcrSettings.RECOVERY_CHUNK_SIZE.getKey(),, +                new ByteSizeValue(randomIntBetween(1, 1000), ByteSizeUnit.KB))), +            .get();, +]