[+++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/DataTypeConversion.java, +        // Special handling for nulls and if conversion is not requires, +        if (from == to) {, +            return Conversion.IDENTITY;, +        }, +        if (to == DataType.NULL) {, +            return Conversion.NULL;, +        }, +, +        IDENTITY(Function.identity()),, +        NULL(value -> null),, +        STRING_TO_BOOLEAN(fromString(DataTypeConversion::convertToBoolean, "Boolean"));, +++ b/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/DataTypeConversion.java, +        // Special handling for nulls and if conversion is not requires, +        if (from == to) {, +            return Conversion.IDENTITY;, +        }, +        if (to == DataType.NULL) {, +            return Conversion.NULL;, +        }, +, +        IDENTITY(Function.identity()),, +        NULL(value -> null),, +        STRING_TO_BOOLEAN(fromString(DataTypeConversion::convertToBoolean, "Boolean"));, +++ b/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/type/DataTypeConversionTests.java, +    public void testConversionToNull() {, +        Conversion conversion = DataTypeConversion.conversionFor(DataType.DOUBLE, DataType.NULL);, +        assertNull(conversion.convert(null));, +        assertNull(conversion.convert(10.0));, +    }, +, +    public void testConversionToIdentity() {, +        Conversion conversion = DataTypeConversion.conversionFor(DataType.INTEGER, DataType.INTEGER);, +        assertNull(conversion.convert(null));, +        assertEquals(10, conversion.convert(10));, +    }, +]