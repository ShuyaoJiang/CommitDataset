[+++ b/core/src/main/java/org/elasticsearch/action/DocumentRequest.java, +import org.elasticsearch.action.support.IndicesOptions;, +public interface DocumentRequest<T> extends IndicesRequest {, +, +    /**, +     * Get the index that this request operates on, +     * @return the index, +     */, +    String index();, +    String type();, +    String id();, +, +    /**, +     * Get the options for this request, +     * @return the indices options, +     */, +    IndicesOptions indicesOptions();, +    T routing(String routing);, +    String routing();, +    String parent();, +    long version();, +    T version(long version);, +    VersionType versionType();, +    T versionType(VersionType versionType);, +    OpType opType();, +    enum OpType {, +    static DocumentRequest readDocumentRequest(StreamInput in) throws IOException {, +        final DocumentRequest documentRequest;, +            documentRequest = indexRequest;, +            documentRequest = deleteRequest;, +            documentRequest = updateRequest;, +        return documentRequest;, +    static void writeDocumentRequest(StreamOutput out, DocumentRequest request)  throws IOException {, +            ((IndexRequest) request).writeTo(out);, +            ((DeleteRequest) request).writeTo(out);, +            ((UpdateRequest) request).writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/DocumentRequest.java, +import org.elasticsearch.action.support.IndicesOptions;, +public interface DocumentRequest<T> extends IndicesRequest {, +, +    /**, +     * Get the index that this request operates on, +     * @return the index, +     */, +    String index();, +    String type();, +    String id();, +, +    /**, +     * Get the options for this request, +     * @return the indices options, +     */, +    IndicesOptions indicesOptions();, +    T routing(String routing);, +    String routing();, +    String parent();, +    long version();, +    T version(long version);, +    VersionType versionType();, +    T versionType(VersionType versionType);, +    OpType opType();, +    enum OpType {, +    static DocumentRequest readDocumentRequest(StreamInput in) throws IOException {, +        final DocumentRequest documentRequest;, +            documentRequest = indexRequest;, +            documentRequest = deleteRequest;, +            documentRequest = updateRequest;, +        return documentRequest;, +    static void writeDocumentRequest(StreamOutput out, DocumentRequest request)  throws IOException {, +            ((IndexRequest) request).writeTo(out);, +            ((DeleteRequest) request).writeTo(out);, +            ((UpdateRequest) request).writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java, +import org.elasticsearch.action.delete.DeleteRequest;, +import org.elasticsearch.action.index.IndexRequest;, +import org.elasticsearch.action.update.UpdateRequest;, +++ b/core/src/main/java/org/elasticsearch/action/DocumentRequest.java, +import org.elasticsearch.action.support.IndicesOptions;, +public interface DocumentRequest<T> extends IndicesRequest {, +, +    /**, +     * Get the index that this request operates on, +     * @return the index, +     */, +    String index();, +    String type();, +    String id();, +, +    /**, +     * Get the options for this request, +     * @return the indices options, +     */, +    IndicesOptions indicesOptions();, +    T routing(String routing);, +    String routing();, +    String parent();, +    long version();, +    T version(long version);, +    VersionType versionType();, +    T versionType(VersionType versionType);]