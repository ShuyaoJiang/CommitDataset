[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/blobstore/fs/AbstractFsBlobContainer.java, +import org.elasticsearch.common.blobstore.support.PlainBlobMetaData;, +            builder.put(file.getName(), new PlainBlobMetaData(file.getName(), file.length()));, +                byte[] buffer = new byte[blobStore.bufferSizeInBytes()];, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/blobstore/fs/AbstractFsBlobContainer.java, +import org.elasticsearch.common.blobstore.support.PlainBlobMetaData;, +            builder.put(file.getName(), new PlainBlobMetaData(file.getName(), file.length()));, +                byte[] buffer = new byte[blobStore.bufferSizeInBytes()];, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/blobstore/fs/AbstractFsBlobContainer.java, +import org.elasticsearch.common.blobstore.support.PlainBlobMetaData;, +            builder.put(file.getName(), new PlainBlobMetaData(file.getName(), file.length()));, +                byte[] buffer = new byte[blobStore.bufferSizeInBytes()];, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobStore.java, +import org.elasticsearch.common.unit.ByteSizeUnit;, +import org.elasticsearch.common.unit.ByteSizeValue;, +    private final int bufferSizeInBytes;, +, +        this.bufferSizeInBytes = (int) settings.getAsBytesSize("buffer_size", new ByteSizeValue(100, ByteSizeUnit.KB)).bytes();, +        this.executorService = Executors.newCachedThreadPool(daemonThreadFactory(settings, "fs_blobstore"));, +    public int bufferSizeInBytes() {, +        return this.bufferSizeInBytes;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/blobstore/fs/AbstractFsBlobContainer.java, +import org.elasticsearch.common.blobstore.support.PlainBlobMetaData;, +            builder.put(file.getName(), new PlainBlobMetaData(file.getName(), file.length()));, +                byte[] buffer = new byte[blobStore.bufferSizeInBytes()];, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobStore.java, +import org.elasticsearch.common.unit.ByteSizeUnit;, +import org.elasticsearch.common.unit.ByteSizeValue;, +    private final int bufferSizeInBytes;, +, +        this.bufferSizeInBytes = (int) settings.getAsBytesSize("buffer_size", new ByteSizeValue(100, ByteSizeUnit.KB)).bytes();, +        this.executorService = Executors.newCachedThreadPool(daemonThreadFactory(settings, "fs_blobstore"));, +    public int bufferSizeInBytes() {, +        return this.bufferSizeInBytes;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/blobstore/fs/FsImmutableBlobContainer.java, +                        byte[] buffer = new byte[blobStore.bufferSizeInBytes()];, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/blobstore/fs/AbstractFsBlobContainer.java, +import org.elasticsearch.common.blobstore.support.PlainBlobMetaData;, +            builder.put(file.getName(), new PlainBlobMetaData(file.getName(), file.length()));, +                byte[] buffer = new byte[blobStore.bufferSizeInBytes()];, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobStore.java, +import org.elasticsearch.common.unit.ByteSizeUnit;, +import org.elasticsearch.common.unit.ByteSizeValue;, +    private final int bufferSizeInBytes;, +, +        this.bufferSizeInBytes = (int) settings.getAsBytesSize("buffer_size", new ByteSizeValue(100, ByteSizeUnit.KB)).bytes();, +        this.executorService = Executors.newCachedThreadPool(daemonThreadFactory(settings, "fs_blobstore"));, +    public int bufferSizeInBytes() {, +        return this.bufferSizeInBytes;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/blobstore/fs/FsImmutableBlobContainer.java, +                        byte[] buffer = new byte[blobStore.bufferSizeInBytes()];, +++ b/plugins/hadoop/src/main/java/org/elasticsearch/common/blobstore/hdfs/AbstractHdfsBlobContainer.java, +                byte[] buffer = new byte[blobStore.bufferSizeInBytes()];, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/blobstore/fs/AbstractFsBlobContainer.java, +import org.elasticsearch.common.blobstore.support.PlainBlobMetaData;, +            builder.put(file.getName(), new PlainBlobMetaData(file.getName(), file.length()));, +                byte[] buffer = new byte[blobStore.bufferSizeInBytes()];, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobStore.java, +import org.elasticsearch.common.unit.ByteSizeUnit;, +import org.elasticsearch.common.unit.ByteSizeValue;, +    private final int bufferSizeInBytes;, +, +        this.bufferSizeInBytes = (int) settings.getAsBytesSize("buffer_size", new ByteSizeValue(100, ByteSizeUnit.KB)).bytes();, +        this.executorService = Executors.newCachedThreadPool(daemonThreadFactory(settings, "fs_blobstore"));, +    public int bufferSizeInBytes() {, +        return this.bufferSizeInBytes;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/blobstore/fs/FsImmutableBlobContainer.java, +                        byte[] buffer = new byte[blobStore.bufferSizeInBytes()];, +++ b/plugins/hadoop/src/main/java/org/elasticsearch/common/blobstore/hdfs/AbstractHdfsBlobContainer.java, +                byte[] buffer = new byte[blobStore.bufferSizeInBytes()];, +++ b/plugins/hadoop/src/main/java/org/elasticsearch/common/blobstore/hdfs/HdfsBlobStore.java, +import org.elasticsearch.common.unit.ByteSizeUnit;, +import org.elasticsearch.common.unit.ByteSizeValue;, +    private final int bufferSizeInBytes;, +, +        this.bufferSizeInBytes = (int) settings.getAsBytesSize("buffer_size", new ByteSizeValue(100, ByteSizeUnit.KB)).bytes();, +    public int bufferSizeInBytes() {, +        return this.bufferSizeInBytes;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/blobstore/fs/AbstractFsBlobContainer.java, +import org.elasticsearch.common.blobstore.support.PlainBlobMetaData;, +            builder.put(file.getName(), new PlainBlobMetaData(file.getName(), file.length()));, +                byte[] buffer = new byte[blobStore.bufferSizeInBytes()];, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobStore.java, +import org.elasticsearch.common.unit.ByteSizeUnit;]