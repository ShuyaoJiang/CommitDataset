[+++ b/modules/elasticsearch/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +import org.elasticsearch.common.lucene.search.function.FiltersFunctionScoreQuery;, +        } else if (sourceQuery instanceof FiltersFunctionScoreQuery) {, +            flatten(((FiltersFunctionScoreQuery) sourceQuery).getSubQuery(), flatQueries);, +        } else if (sourceQuery instanceof FunctionScoreQuery) {, +            flatten(((FunctionScoreQuery) sourceQuery).getSubQuery(), flatQueries);, +++ b/modules/elasticsearch/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +import org.elasticsearch.common.lucene.search.function.FiltersFunctionScoreQuery;, +        } else if (sourceQuery instanceof FiltersFunctionScoreQuery) {, +            flatten(((FiltersFunctionScoreQuery) sourceQuery).getSubQuery(), flatQueries);, +        } else if (sourceQuery instanceof FunctionScoreQuery) {, +            flatten(((FunctionScoreQuery) sourceQuery).getSubQuery(), flatQueries);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/highlight/HighlightPhase.java, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.elasticsearch.common.lucene.search.function.FiltersFunctionScoreQuery;, +import org.elasticsearch.common.lucene.search.function.FunctionScoreQuery;, +, +                    // QueryScorer uses WeightedSpanTermExtractor to extract terms, but we can't really plug into, +                    // it, so, we hack here (and really only support top level queries), +                    Query query = context.parsedQuery().query();, +                    if (query instanceof FunctionScoreQuery) {, +                        query = ((FunctionScoreQuery) query).getSubQuery();, +                    } else if (query instanceof FiltersFunctionScoreQuery) {, +                        query = ((FiltersFunctionScoreQuery) query).getSubQuery();, +                    } else if (query instanceof ConstantScoreQuery) {, +                        ConstantScoreQuery q = (ConstantScoreQuery) query;, +                        if (q.getQuery() != null) {, +                            query = q.getQuery();, +                        }, +                    }, +                    QueryScorer queryScorer = new QueryScorer(query, null);]