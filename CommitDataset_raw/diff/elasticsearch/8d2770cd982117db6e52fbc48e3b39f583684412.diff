[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            pom.withXml(fixupDependencies(project)), +    /**, +     * Returns a closure which can be used with a MavenPom for fixing problems with gradle generated poms., +     *, +     * <ul>, +     *     <li>Remove transitive dependencies (using wildcard exclusions, fixed in gradle 2.14)</li>, +     *     <li>Set compile time deps back to compile from runtime (known issue with maven-publish plugin), +     * </ul>, +     */, +    private static Closure fixupDependencies(Project project) {, +        // TODO: remove this when enforcing gradle 2.14+, it now properly handles exclusions, +                // fix deps incorrectly marked as runtime back to compile time deps, +                // see https://discuss.gradle.org/t/maven-publish-plugin-generated-pom-making-dependency-scope-runtime/7494/4, +                boolean isCompileDep = project.configurations.compile.allDependencies.find { dep ->, +                    dep.name == depNode.artifactId.text(), +                }, +                if (depNode.scope.text() == 'runtime' && isCompileDep) {, +                    depNode.scope*.value = 'compile', +                }, +, +                // we now know we have something to exclude, so add a wildcard exclusion element, +                Node exclusion = depNode.appendNode('exclusions').appendNode('exclusion'), +                exclusion.appendNode('groupId', '*'), +                exclusion.appendNode('artifactId', '*'), +                        publication.pom.withXml(fixupDependencies(project))]