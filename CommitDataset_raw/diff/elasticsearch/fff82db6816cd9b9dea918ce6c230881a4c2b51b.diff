[+++ b/docs/reference/modules/scripting/scripting.asciidoc, +Boolean fields are exposed as numerics, with `true` mapped to `1` and `false` mapped to `0`. , +For example: `doc['on_sale'] ? doc['price'] * 0.5 : doc['price']`, +, +* Only numeric, boolean, date, and geo_point fields may be accessed, +++ b/docs/reference/modules/scripting/scripting.asciidoc, +Boolean fields are exposed as numerics, with `true` mapped to `1` and `false` mapped to `0`. , +For example: `doc['on_sale'] ? doc['price'] * 0.5 : doc['price']`, +, +* Only numeric, boolean, date, and geo_point fields may be accessed, +++ b/modules/lang-expression/src/test/java/org/elasticsearch/script/expression/MoreExpressionTests.java, +    , +    public void testBoolean() throws Exception {, +        XContentBuilder xContentBuilder = XContentFactory.jsonBuilder().startObject().startObject("type1"), +                .startObject("properties").startObject("vip").field("type", "boolean");, +        xContentBuilder.endObject().endObject().endObject().endObject();, +        assertAcked(prepareCreate("test").addMapping("type1", xContentBuilder));, +        ensureGreen();, +        indexRandom(true,, +                client().prepareIndex("test", "doc", "1").setSource("price", 1.0, "vip", true),, +                client().prepareIndex("test", "doc", "2").setSource("price", 2.0, "vip", false),, +                client().prepareIndex("test", "doc", "3").setSource("price", 2.0, "vip", false));, +        // access .value, +        SearchResponse rsp = buildRequest("doc['vip'].value").get();, +        assertSearchResponse(rsp);, +        assertEquals(3, rsp.getHits().getTotalHits());, +        assertEquals(1.0D, rsp.getHits().getAt(0).field("foo").getValue(), 1.0D);, +        assertEquals(0.0D, rsp.getHits().getAt(1).field("foo").getValue(), 1.0D);, +        assertEquals(0.0D, rsp.getHits().getAt(2).field("foo").getValue(), 1.0D);, +        // access .empty, +        rsp = buildRequest("doc['vip'].empty ? 1 : 0").get();, +        assertSearchResponse(rsp);, +        assertEquals(3, rsp.getHits().getTotalHits());, +        assertEquals(0.0D, rsp.getHits().getAt(0).field("foo").getValue(), 1.0D);, +        assertEquals(0.0D, rsp.getHits().getAt(1).field("foo").getValue(), 1.0D);, +        assertEquals(1.0D, rsp.getHits().getAt(2).field("foo").getValue(), 1.0D);, +        // ternary operator, +        // vip's have a 50% discount, +        rsp = buildRequest("doc['vip'] ? doc['price']/2 : doc['price']").get();, +        assertSearchResponse(rsp);, +        assertEquals(3, rsp.getHits().getTotalHits());, +        assertEquals(0.5D, rsp.getHits().getAt(0).field("foo").getValue(), 1.0D);, +        assertEquals(2.0D, rsp.getHits().getAt(1).field("foo").getValue(), 1.0D);, +        assertEquals(2.0D, rsp.getHits().getAt(2).field("foo").getValue(), 1.0D);, +    }]