[+++ b/server/src/main/java/org/elasticsearch/index/engine/Engine.java, +     * Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive)., +     * This feature requires soft-deletes enabled. If soft-deletes are disabled, this method will throw an {@link IllegalStateException}., +++ b/server/src/main/java/org/elasticsearch/index/engine/Engine.java, +     * Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive)., +     * This feature requires soft-deletes enabled. If soft-deletes are disabled, this method will throw an {@link IllegalStateException}., +++ b/server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +        if (softDeleteEnabled == false) {, +            throw new IllegalStateException("accessing changes snapshot requires soft-deletes enabled");, +        }, +++ b/server/src/main/java/org/elasticsearch/index/engine/Engine.java, +     * Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive)., +     * This feature requires soft-deletes enabled. If soft-deletes are disabled, this method will throw an {@link IllegalStateException}., +++ b/server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +        if (softDeleteEnabled == false) {, +            throw new IllegalStateException("accessing changes snapshot requires soft-deletes enabled");, +        }, +++ b/server/src/main/java/org/elasticsearch/index/engine/ReadOnlyEngine.java, +        if (engineConfig.getIndexSettings().isSoftDeleteEnabled() == false) {, +            throw new IllegalStateException("accessing changes snapshot requires soft-deletes enabled");, +        }, +++ b/server/src/main/java/org/elasticsearch/index/engine/Engine.java, +     * Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive)., +     * This feature requires soft-deletes enabled. If soft-deletes are disabled, this method will throw an {@link IllegalStateException}., +++ b/server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +        if (softDeleteEnabled == false) {, +            throw new IllegalStateException("accessing changes snapshot requires soft-deletes enabled");, +        }, +++ b/server/src/main/java/org/elasticsearch/index/engine/ReadOnlyEngine.java, +        if (engineConfig.getIndexSettings().isSoftDeleteEnabled() == false) {, +            throw new IllegalStateException("accessing changes snapshot requires soft-deletes enabled");, +        }, +++ b/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +        if (engine.engineConfig.getIndexSettings().isSoftDeleteEnabled()) {, +    }, +        final IndexSettings indexSettings = IndexSettingsModule.newIndexSettings(, +            IndexMetaData.builder(defaultSettings.getIndexMetaData()).settings(Settings.builder()., +                put(defaultSettings.getSettings()).put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), true)).build());, +             InternalEngine engine = createEngine(config(indexSettings, store, createTempDir(), newMergePolicy(),, +    public void testRequireSoftDeletesWhenAccessingChangesSnapshot() throws Exception {, +        try (Store store = createStore()) {, +            final IndexSettings indexSettings = IndexSettingsModule.newIndexSettings(, +                IndexMetaData.builder(defaultSettings.getIndexMetaData()).settings(Settings.builder()., +                    put(defaultSettings.getSettings()).put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), false)).build());, +            try (InternalEngine engine = createEngine(config(indexSettings, store, createTempDir(), newMergePolicy(), null))) {, +                IllegalStateException error = expectThrows(IllegalStateException.class,, +                    () -> engine.newChangesSnapshot("test", createMapperService("test"), 0, randomNonNegativeLong(), randomBoolean()));, +                assertThat(error.getMessage(), equalTo("accessing changes snapshot requires soft-deletes enabled"));, +            }, +        }, +    }, +]