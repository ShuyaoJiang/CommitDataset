[+++ b/core/src/main/java/org/elasticsearch/index/indexing/IndexingOperationListener.java, +     * Called after create index operation occurred., +     * Called after create index operation occurred with exception., +     */, +    public void postCreate(Engine.Create create, Throwable ex) {, +, +    }, +, +    /**, +     * Called after the indexing operation occurred with exception., +     */, +    public void postIndex(Engine.Index index, Throwable ex) {, +, +    }, +, +    /**, +, +    /**, +     * Called after the delete operation occurred with exception., +     */, +    public void postDelete(Engine.Delete delete, Throwable ex) {, +, +    }, +++ b/core/src/main/java/org/elasticsearch/index/indexing/IndexingOperationListener.java, +     * Called after create index operation occurred., +     * Called after create index operation occurred with exception., +     */, +    public void postCreate(Engine.Create create, Throwable ex) {, +, +    }, +, +    /**, +     * Called after the indexing operation occurred with exception., +     */, +    public void postIndex(Engine.Index index, Throwable ex) {, +, +    }, +, +    /**, +, +    /**, +     * Called after the delete operation occurred with exception., +     */, +    public void postDelete(Engine.Delete delete, Throwable ex) {, +, +    }, +++ b/core/src/main/java/org/elasticsearch/index/indexing/ShardIndexingService.java, +                logger.warn("postCreateUnderLock listener [{}] failed", e, listener);, +                logger.warn("postCreate listener [{}] failed", e, listener);, +        for (IndexingOperationListener listener : listeners) {, +            try {, +                listener.postCreate(create, ex);, +            } catch (Throwable t) {, +                logger.warn("postCreate listener [{}] failed", t, listener);, +            }, +        }, +                logger.warn("postIndexUnderLock listener [{}] failed", e, listener);, +                logger.warn("postIndex listener [{}] failed", e, listener);, +        for (IndexingOperationListener listener : listeners) {, +            try {, +                listener.postIndex(index, ex);, +            } catch (Throwable t) {, +                logger.warn("postIndex listener [{}] failed", t, listener);, +            }, +        }, +                logger.warn("postDeleteUnderLock listener [{}] failed", e, listener);, +                logger.warn("postDelete listener [{}] failed", e, listener);, +        for (IndexingOperationListener listener : listeners) {, +            try {, +                listener. postDelete(delete, ex);, +            } catch (Throwable t) {, +                logger.warn("postDelete listener [{}] failed", t, listener);, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/index/indexing/IndexingOperationListener.java, +     * Called after create index operation occurred., +     * Called after create index operation occurred with exception., +     */, +    public void postCreate(Engine.Create create, Throwable ex) {, +, +    }, +, +    /**, +     * Called after the indexing operation occurred with exception., +     */, +    public void postIndex(Engine.Index index, Throwable ex) {, +, +    }, +, +    /**, +, +    /**, +     * Called after the delete operation occurred with exception., +     */, +    public void postDelete(Engine.Delete delete, Throwable ex) {, +, +    }, +++ b/core/src/main/java/org/elasticsearch/index/indexing/ShardIndexingService.java, +                logger.warn("postCreateUnderLock listener [{}] failed", e, listener);, +                logger.warn("postCreate listener [{}] failed", e, listener);]