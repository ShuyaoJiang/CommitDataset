[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/modules/lang-painless/src/main/resources/org/elasticsearch/painless/spi/org.elasticsearch.txt, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/modules/lang-painless/src/main/resources/org/elasticsearch/painless/spi/org.elasticsearch.txt, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/AugmentationTests.java, +        assertEquals(5, exec("org.elasticsearch.painless.FeatureTestObject ft = new org.elasticsearch.painless.FeatureTestObject();" +, +        assertEquals(5, exec("def ft = new org.elasticsearch.painless.FeatureTestObject();" +, +        assertEquals(8, exec("org.elasticsearch.painless.FeatureTestObject ft = new org.elasticsearch.painless.FeatureTestObject();" +, +        assertEquals(8, exec("def ft = new org.elasticsearch.painless.FeatureTestObject();" +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/modules/lang-painless/src/main/resources/org/elasticsearch/painless/spi/org.elasticsearch.txt, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/AugmentationTests.java, +        assertEquals(5, exec("org.elasticsearch.painless.FeatureTestObject ft = new org.elasticsearch.painless.FeatureTestObject();" +, +        assertEquals(5, exec("def ft = new org.elasticsearch.painless.FeatureTestObject();" +, +        assertEquals(8, exec("org.elasticsearch.painless.FeatureTestObject ft = new org.elasticsearch.painless.FeatureTestObject();" +, +        assertEquals(8, exec("def ft = new org.elasticsearch.painless.FeatureTestObject();" +, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/BasicAPITests.java, +        assertEquals(5, exec("org.elasticsearch.painless.FeatureTestObject ft = new org.elasticsearch.painless.FeatureTestObject();" +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/modules/lang-painless/src/main/resources/org/elasticsearch/painless/spi/org.elasticsearch.txt, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/AugmentationTests.java, +        assertEquals(5, exec("org.elasticsearch.painless.FeatureTestObject ft = new org.elasticsearch.painless.FeatureTestObject();" +, +        assertEquals(5, exec("def ft = new org.elasticsearch.painless.FeatureTestObject();" +, +        assertEquals(8, exec("org.elasticsearch.painless.FeatureTestObject ft = new org.elasticsearch.painless.FeatureTestObject();" +, +        assertEquals(8, exec("def ft = new org.elasticsearch.painless.FeatureTestObject();" +, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/BasicAPITests.java, +        assertEquals(5, exec("org.elasticsearch.painless.FeatureTestObject ft = new org.elasticsearch.painless.FeatureTestObject();" +, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/BasicExpressionTests.java, +        assertMustBeNullable(    "org.elasticsearch.painless.FeatureTestObject a = null; return a?.x");, +                "org.elasticsearch.painless.FeatureTestObject a = new org.elasticsearch.painless.FeatureTestObject(); return a?.x");, +        assertEquals(0,     exec("def    a = new org.elasticsearch.painless.FeatureTestObject(); return a?.x"));, +        FeatureTestObject t = new FeatureTestObject();, +//        assertEquals(null, exec("org.elasticsearch.painless.FeatureTestObject a = null; return a?.x"));            // Read field, +//        assertEquals(null, exec("org.elasticsearch.painless.FeatureTestObject a = null; a?.x = 7; return a?.x"));  // Write field, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/modules/lang-painless/src/main/resources/org/elasticsearch/painless/spi/org.elasticsearch.txt, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/AugmentationTests.java, +        assertEquals(5, exec("org.elasticsearch.painless.FeatureTestObject ft = new org.elasticsearch.painless.FeatureTestObject();" +, +        assertEquals(5, exec("def ft = new org.elasticsearch.painless.FeatureTestObject();" +, +        assertEquals(8, exec("org.elasticsearch.painless.FeatureTestObject ft = new org.elasticsearch.painless.FeatureTestObject();" +, +        assertEquals(8, exec("def ft = new org.elasticsearch.painless.FeatureTestObject();" +, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/BasicAPITests.java, +        assertEquals(5, exec("org.elasticsearch.painless.FeatureTestObject ft = new org.elasticsearch.painless.FeatureTestObject();" +, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/BasicExpressionTests.java, +        assertMustBeNullable(    "org.elasticsearch.painless.FeatureTestObject a = null; return a?.x");, +                "org.elasticsearch.painless.FeatureTestObject a = new org.elasticsearch.painless.FeatureTestObject(); return a?.x");, +        assertEquals(0,     exec("def    a = new org.elasticsearch.painless.FeatureTestObject(); return a?.x"));, +        FeatureTestObject t = new FeatureTestObject();, +//        assertEquals(null, exec("org.elasticsearch.painless.FeatureTestObject a = null; return a?.x"));            // Read field, +//        assertEquals(null, exec("org.elasticsearch.painless.FeatureTestObject a = null; a?.x = 7; return a?.x"));  // Write field, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/FeatureTestAugmentationObject.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.painless;, +, +public class FeatureTestAugmentationObject {, +    public static int getTotal(FeatureTestObject ft) {, +        return ft.getX() + ft.getY();, +    }, +, +    public static int addToTotal(FeatureTestObject ft, int add) {, +        return getTotal(ft) + add;, +    }, +, +    private FeatureTestAugmentationObject() {}, +}, +++ /dev/null]