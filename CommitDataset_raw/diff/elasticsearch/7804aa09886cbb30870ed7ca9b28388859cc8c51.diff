[+++ b/core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java, +import java.net.InetAddress;, +import java.net.UnknownHostException;, +                String host = remoteHost.substring(0, portSeparator);, +                try {, +                    InetAddress.getByName(host);, +                } catch (UnknownHostException e) {, +                    throw new IllegalArgumentException("unknown host [" + host + "]", e);, +                }, +    static Map<String, List<DiscoveryNode>> buildRemoteClustersSeeds(Settings settings) {, +                InetAddress hostAddress;, +                try {, +                    hostAddress = InetAddress.getByName(host);, +                } catch (UnknownHostException e) {, +                    throw new IllegalArgumentException("unknown host [" + host + "]", e);, +                }, +                        new TransportAddress(new InetSocketAddress(hostAddress, port)),, +                        Version.CURRENT.minimumCompatibilityVersion());, +        remoteClustersSeeds = buildRemoteClustersSeeds(settings);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java, +import java.net.InetAddress;, +import java.net.UnknownHostException;, +                String host = remoteHost.substring(0, portSeparator);, +                try {, +                    InetAddress.getByName(host);, +                } catch (UnknownHostException e) {, +                    throw new IllegalArgumentException("unknown host [" + host + "]", e);, +                }, +    static Map<String, List<DiscoveryNode>> buildRemoteClustersSeeds(Settings settings) {, +                InetAddress hostAddress;, +                try {, +                    hostAddress = InetAddress.getByName(host);, +                } catch (UnknownHostException e) {, +                    throw new IllegalArgumentException("unknown host [" + host + "]", e);, +                }, +                        new TransportAddress(new InetSocketAddress(hostAddress, port)),, +                        Version.CURRENT.minimumCompatibilityVersion());, +        remoteClustersSeeds = buildRemoteClustersSeeds(settings);, +++ b/core/src/test/java/org/elasticsearch/action/search/SearchTransportServiceTests.java, +import java.net.InetAddress;, +    public void testBuiltRemoteClustersSeeds() throws Exception {, +        Map<String, List<DiscoveryNode>> map = SearchTransportService.buildRemoteClustersSeeds(, +, +        assertEquals(foo.getAddress(), new TransportAddress(new InetSocketAddress(InetAddress.getByName("192.168.0.1"), 8080)));, +        assertEquals(bar.getAddress(), new TransportAddress(new InetSocketAddress(InetAddress.getByName("[::1]"), 9090)));]