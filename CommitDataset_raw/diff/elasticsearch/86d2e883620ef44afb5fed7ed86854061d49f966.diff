[+++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingService.java, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingService.java, +++ b/core/src/main/java/org/elasticsearch/discovery/Discovery.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    void setAllocationService(AllocationService allocationService);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingService.java, +++ b/core/src/main/java/org/elasticsearch/discovery/Discovery.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    void setAllocationService(AllocationService allocationService);, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private AllocationService allocationService;, +    public void setAllocationService(AllocationService allocationService) {, +        this.allocationService = allocationService;, +                        currentState = ClusterState.builder(currentState).nodes(nodesBuilder).build();, +                        RoutingAllocation.Result result =  master.allocationService.reroute(currentState, "node_add");, +                        if (result.changed()) {, +                            currentState = ClusterState.builder(currentState).routingResult(result).build();, +                        }, +                        return currentState;, +                        RoutingAllocation.Result routingResult = master.allocationService.reroute(, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingService.java, +++ b/core/src/main/java/org/elasticsearch/discovery/Discovery.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    void setAllocationService(AllocationService allocationService);, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private AllocationService allocationService;, +    public void setAllocationService(AllocationService allocationService) {, +        this.allocationService = allocationService;, +                        currentState = ClusterState.builder(currentState).nodes(nodesBuilder).build();, +                        RoutingAllocation.Result result =  master.allocationService.reroute(currentState, "node_add");, +                        if (result.changed()) {, +                            currentState = ClusterState.builder(currentState).routingResult(result).build();, +                        }, +                        return currentState;, +                        RoutingAllocation.Result routingResult = master.allocationService.reroute(, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/NodeJoinController.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private final AllocationService allocationService;, +    public NodeJoinController(ClusterService clusterService, AllocationService allocationService, ElectMasterService electMaster,, +                              DiscoverySettings discoverySettings, Settings settings) {, +        this.allocationService = allocationService;, +                            logger.warn("received join request from node [{}], but found existing node {} with same address, " +, +                                "removing existing node", node, existingNode);, +                final ClusterState tmpState = newState.build();, +                RoutingAllocation.Result result = allocationService.reroute(tmpState, "node_join");, +                newState = ClusterState.builder(tmpState);, +                if (result.changed()) {, +                    newState.routingResult(result);, +                }, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingService.java, +++ b/core/src/main/java/org/elasticsearch/discovery/Discovery.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    void setAllocationService(AllocationService allocationService);, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private AllocationService allocationService;, +    public void setAllocationService(AllocationService allocationService) {, +        this.allocationService = allocationService;, +                        currentState = ClusterState.builder(currentState).nodes(nodesBuilder).build();, +                        RoutingAllocation.Result result =  master.allocationService.reroute(currentState, "node_add");, +                        if (result.changed()) {, +                            currentState = ClusterState.builder(currentState).routingResult(result).build();, +                        }, +                        return currentState;, +                        RoutingAllocation.Result routingResult = master.allocationService.reroute(, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/NodeJoinController.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private final AllocationService allocationService;, +    public NodeJoinController(ClusterService clusterService, AllocationService allocationService, ElectMasterService electMaster,, +                              DiscoverySettings discoverySettings, Settings settings) {, +        this.allocationService = allocationService;, +                            logger.warn("received join request from node [{}], but found existing node {} with same address, " +, +                                "removing existing node", node, existingNode);, +                final ClusterState tmpState = newState.build();, +                RoutingAllocation.Result result = allocationService.reroute(tmpState, "node_join");, +                newState = ClusterState.builder(tmpState);, +                if (result.changed()) {, +                    newState.routingResult(result);, +                }, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private AllocationService allocationService;, +    // must initialized in doStart(), when we have the allocationService set, +    public void setAllocationService(AllocationService allocationService) {, +        this.allocationService = allocationService;, +        this.nodeJoinController = new NodeJoinController(clusterService, allocationService, electMaster, discoverySettings, settings);, +                    RoutingAllocation.Result routingResult = allocationService.reroute(ClusterState.builder(currentState).build(),, +                RoutingAllocation.Result routingResult = allocationService.reroute(, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingService.java, +++ b/core/src/main/java/org/elasticsearch/discovery/Discovery.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    void setAllocationService(AllocationService allocationService);, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +    private AllocationService allocationService;, +    public void setAllocationService(AllocationService allocationService) {, +        this.allocationService = allocationService;, +                        currentState = ClusterState.builder(currentState).nodes(nodesBuilder).build();]