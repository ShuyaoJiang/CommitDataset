[+++ b/Vagrantfile, +    # Give the boxes 2GB so they can run our tests if they have to., +    v.memory = 2048, +++ b/Vagrantfile, +    # Give the boxes 2GB so they can run our tests if they have to., +    v.memory = 2048, +++ b/benchmarks/build.gradle, +++ b/Vagrantfile, +    # Give the boxes 2GB so they can run our tests if they have to., +    v.memory = 2048, +++ b/benchmarks/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                options.compilerArgs << '-Werror' << '-proc:none' << '-Xlint:all,-path,-serial,-options,-deprecation' << '-Xdoclint:all' << '-Xdoclint:-missing', +++ b/Vagrantfile, +    # Give the boxes 2GB so they can run our tests if they have to., +    v.memory = 2048, +++ b/benchmarks/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                options.compilerArgs << '-Werror' << '-proc:none' << '-Xlint:all,-path,-serial,-options,-deprecation' << '-Xdoclint:all' << '-Xdoclint:-missing', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    String jvmArgs = System.getProperty('tests.jvm.argline', ''), +++ b/Vagrantfile, +    # Give the boxes 2GB so they can run our tests if they have to., +    v.memory = 2048, +++ b/benchmarks/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                options.compilerArgs << '-Werror' << '-proc:none' << '-Xlint:all,-path,-serial,-options,-deprecation' << '-Xdoclint:all' << '-Xdoclint:-missing', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    String jvmArgs = System.getProperty('tests.jvm.argline', ''), +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequest.java, +++ b/Vagrantfile, +    # Give the boxes 2GB so they can run our tests if they have to., +    v.memory = 2048, +++ b/benchmarks/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                options.compilerArgs << '-Werror' << '-proc:none' << '-Xlint:all,-path,-serial,-options,-deprecation' << '-Xdoclint:all' << '-Xdoclint:-missing', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    String jvmArgs = System.getProperty('tests.jvm.argline', ''), +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequestBuilder.java, +++ b/Vagrantfile, +    # Give the boxes 2GB so they can run our tests if they have to., +    v.memory = 2048, +++ b/benchmarks/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                options.compilerArgs << '-Werror' << '-proc:none' << '-Xlint:all,-path,-serial,-options,-deprecation' << '-Xdoclint:all' << '-Xdoclint:-missing', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    String jvmArgs = System.getProperty('tests.jvm.argline', ''), +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequestBuilder.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java, +++ b/Vagrantfile, +    # Give the boxes 2GB so they can run our tests if they have to., +    v.memory = 2048, +++ b/benchmarks/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                options.compilerArgs << '-Werror' << '-proc:none' << '-Xlint:all,-path,-serial,-options,-deprecation' << '-Xdoclint:all' << '-Xdoclint:-missing', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    String jvmArgs = System.getProperty('tests.jvm.argline', ''), +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequestBuilder.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                new StartupError(e).printStackTrace(ps);, +++ b/Vagrantfile, +    # Give the boxes 2GB so they can run our tests if they have to., +    v.memory = 2048, +++ b/benchmarks/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                options.compilerArgs << '-Werror' << '-proc:none' << '-Xlint:all,-path,-serial,-options,-deprecation' << '-Xdoclint:all' << '-Xdoclint:-missing', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    String jvmArgs = System.getProperty('tests.jvm.argline', ''), +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequestBuilder.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                new StartupError(e).printStackTrace(ps);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +        checks.add(new MinMasterNodesCheck(ElectMasterService.DISCOVERY_ZEN_MINIMUM_MASTER_NODES_SETTING.exists(settings)));, +    static class MinMasterNodesCheck implements Check {, +, +        final boolean minMasterNodesIsSet;, +, +        MinMasterNodesCheck(boolean minMasterNodesIsSet) {, +            this.minMasterNodesIsSet = minMasterNodesIsSet;, +        }, +, +        @Override, +        public boolean check() {, +            return minMasterNodesIsSet == false;, +        }, +, +        @Override, +        public String errorMessage() {, +            return "please set [" + ElectMasterService.DISCOVERY_ZEN_MINIMUM_MASTER_NODES_SETTING.getKey() +, +                "] to a majority of the number of master eligible nodes in your cluster";, +        }, +, +        @Override, +        public final boolean isSystemCheck() {]