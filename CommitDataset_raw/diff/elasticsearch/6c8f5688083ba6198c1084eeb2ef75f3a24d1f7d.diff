[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.index.reindex.ReindexRequest;, +    static Request reindex(ReindexRequest reindexRequest) throws IOException {, +        String endpoint = new EndpointBuilder().addPathPart("_reindex").build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        Params params = new Params(request), +            .withRefresh(reindexRequest.isRefresh()), +            .withTimeout(reindexRequest.getTimeout()), +            .withWaitForActiveShards(reindexRequest.getWaitForActiveShards());, +, +        if (reindexRequest.getScrollTime() != null) {, +            params.putParam("scroll", reindexRequest.getScrollTime());, +        }, +        request.setEntity(createEntity(reindexRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.index.reindex.ReindexRequest;, +    static Request reindex(ReindexRequest reindexRequest) throws IOException {, +        String endpoint = new EndpointBuilder().addPathPart("_reindex").build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        Params params = new Params(request), +            .withRefresh(reindexRequest.isRefresh()), +            .withTimeout(reindexRequest.getTimeout()), +            .withWaitForActiveShards(reindexRequest.getWaitForActiveShards());, +, +        if (reindexRequest.getScrollTime() != null) {, +            params.putParam("scroll", reindexRequest.getScrollTime());, +        }, +        request.setEntity(createEntity(reindexRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.index.reindex.BulkByScrollResponse;, +import org.elasticsearch.index.reindex.ReindexRequest;, +     * Executes a reindex request., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-reindex.html">Reindex API on elastic.co</a>, +     * @param reindexRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public final BulkByScrollResponse reindex(ReindexRequest reindexRequest, RequestOptions options) throws IOException {, +        return performRequestAndParseEntity(, +            reindexRequest, RequestConverters::reindex, options, BulkByScrollResponse::fromXContent, emptySet(), +        );, +    }, +, +    /**, +     * Asynchronously executes a reindex request., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-reindex.html">Reindex API on elastic.co</a>, +     * @param reindexRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public final void reindexAsync(ReindexRequest reindexRequest, RequestOptions options, ActionListener<BulkByScrollResponse> listener) {, +        performRequestAsyncAndParseEntity(, +            reindexRequest, RequestConverters::reindex, options, BulkByScrollResponse::fromXContent, listener, emptySet(), +        );, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.index.reindex.ReindexRequest;, +    static Request reindex(ReindexRequest reindexRequest) throws IOException {, +        String endpoint = new EndpointBuilder().addPathPart("_reindex").build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        Params params = new Params(request), +            .withRefresh(reindexRequest.isRefresh()), +            .withTimeout(reindexRequest.getTimeout()), +            .withWaitForActiveShards(reindexRequest.getWaitForActiveShards());, +, +        if (reindexRequest.getScrollTime() != null) {, +            params.putParam("scroll", reindexRequest.getScrollTime());, +        }, +        request.setEntity(createEntity(reindexRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.index.reindex.BulkByScrollResponse;, +import org.elasticsearch.index.reindex.ReindexRequest;, +     * Executes a reindex request., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-reindex.html">Reindex API on elastic.co</a>, +     * @param reindexRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public final BulkByScrollResponse reindex(ReindexRequest reindexRequest, RequestOptions options) throws IOException {, +        return performRequestAndParseEntity(, +            reindexRequest, RequestConverters::reindex, options, BulkByScrollResponse::fromXContent, emptySet(), +        );, +    }, +, +    /**, +     * Asynchronously executes a reindex request., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-reindex.html">Reindex API on elastic.co</a>]