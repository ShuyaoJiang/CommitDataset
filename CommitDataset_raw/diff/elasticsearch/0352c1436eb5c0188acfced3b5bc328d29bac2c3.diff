[+++ b/src/main/java/org/elasticsearch/index/mapper/attachment/AttachmentMapper.java, + * <p/>, +        private Integer defaultIndexedChars = null;, +, +        public Builder defaultIndexedChars(int defaultIndexedChars) {, +            this.defaultIndexedChars = defaultIndexedChars;, +            return this;, +        }, +, +            if (defaultIndexedChars != null && context.indexSettings() != null) {, +                defaultIndexedChars = context.indexSettings().getAsInt("index.mapping.attachment.indexed_chars", 100000);, +            }, +            if (defaultIndexedChars == null) {, +                defaultIndexedChars = 100000;, +            }, +, +            return new AttachmentMapper(name, pathType, defaultIndexedChars, contentMapper, dateMapper, titleMapper, authorMapper, keywordsMapper, contentTypeMapper);, +    private final int defaultIndexedChars;, +, +    public AttachmentMapper(String name, ContentPath.Type pathType, int defaultIndexedChars, StringFieldMapper contentMapper,, +        this.defaultIndexedChars = defaultIndexedChars;, +        int indexedChars = defaultIndexedChars;, +                    if ("_indexed_chars".equals(currentFieldName) || "_indexedChars".equals(currentFieldName)) {, +                        indexedChars = parser.intValue();, +            parsedContent = tika().parseToString(new FastByteArrayInputStream(content), metadata, indexedChars);, +            throw new MapperParsingException("Failed to extract [" + indexedChars + "] characters of text for [" + name + "]", e);, +++ b/src/main/java/org/elasticsearch/index/mapper/attachment/AttachmentMapper.java, + * <p/>, +        private Integer defaultIndexedChars = null;, +, +        public Builder defaultIndexedChars(int defaultIndexedChars) {, +            this.defaultIndexedChars = defaultIndexedChars;, +            return this;, +        }, +, +            if (defaultIndexedChars != null && context.indexSettings() != null) {, +                defaultIndexedChars = context.indexSettings().getAsInt("index.mapping.attachment.indexed_chars", 100000);, +            }, +            if (defaultIndexedChars == null) {, +                defaultIndexedChars = 100000;, +            }, +, +            return new AttachmentMapper(name, pathType, defaultIndexedChars, contentMapper, dateMapper, titleMapper, authorMapper, keywordsMapper, contentTypeMapper);, +    private final int defaultIndexedChars;, +, +    public AttachmentMapper(String name, ContentPath.Type pathType, int defaultIndexedChars, StringFieldMapper contentMapper,, +        this.defaultIndexedChars = defaultIndexedChars;, +        int indexedChars = defaultIndexedChars;, +                    if ("_indexed_chars".equals(currentFieldName) || "_indexedChars".equals(currentFieldName)) {, +                        indexedChars = parser.intValue();, +            parsedContent = tika().parseToString(new FastByteArrayInputStream(content), metadata, indexedChars);, +            throw new MapperParsingException("Failed to extract [" + indexedChars + "] characters of text for [" + name + "]", e);, +++ b/src/main/java/org/elasticsearch/plugin/mapper/attachments/tika/TikaExtended.java, +import java.io.IOException;, +import java.io.InputStream;, +, +    public String parseToString(InputStream stream, Metadata metadata, int maxStringLength), +            throws IOException, TikaException {, +        WriteOutContentHandler handler =, +                new WriteOutContentHandler(maxStringLength);, +            ParseContext context = new ParseContext();, +            context.set(Parser.class, getParser());, +            getParser().parse(, +                    stream, new BodyContentHandler(handler), metadata, context);, +            if (!handler.isWriteLimitReached(e)) {, +                // This should never happen with BodyContentHandler..., +        return handler.toString();, +++ b/src/main/java/org/elasticsearch/index/mapper/attachment/AttachmentMapper.java, + * <p/>, +        private Integer defaultIndexedChars = null;, +, +        public Builder defaultIndexedChars(int defaultIndexedChars) {, +            this.defaultIndexedChars = defaultIndexedChars;, +            return this;, +        }, +, +            if (defaultIndexedChars != null && context.indexSettings() != null) {, +                defaultIndexedChars = context.indexSettings().getAsInt("index.mapping.attachment.indexed_chars", 100000);, +            }, +            if (defaultIndexedChars == null) {, +                defaultIndexedChars = 100000;, +            }, +, +            return new AttachmentMapper(name, pathType, defaultIndexedChars, contentMapper, dateMapper, titleMapper, authorMapper, keywordsMapper, contentTypeMapper);, +    private final int defaultIndexedChars;, +, +    public AttachmentMapper(String name, ContentPath.Type pathType, int defaultIndexedChars, StringFieldMapper contentMapper,, +        this.defaultIndexedChars = defaultIndexedChars;, +        int indexedChars = defaultIndexedChars;, +                    if ("_indexed_chars".equals(currentFieldName) || "_indexedChars".equals(currentFieldName)) {, +                        indexedChars = parser.intValue();, +            parsedContent = tika().parseToString(new FastByteArrayInputStream(content), metadata, indexedChars);, +            throw new MapperParsingException("Failed to extract [" + indexedChars + "] characters of text for [" + name + "]", e);, +++ b/src/main/java/org/elasticsearch/plugin/mapper/attachments/tika/TikaExtended.java, +import java.io.IOException;, +import java.io.InputStream;, +, +    public String parseToString(InputStream stream, Metadata metadata, int maxStringLength), +            throws IOException, TikaException {, +        WriteOutContentHandler handler =]