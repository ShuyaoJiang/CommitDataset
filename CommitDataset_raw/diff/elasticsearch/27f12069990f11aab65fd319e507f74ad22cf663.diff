[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.plugins.spi.NamedXContentProvider;, +import java.util.ArrayList;, +import java.util.ServiceLoader;, +        this.registry = new NamedXContentRegistry(, +                Stream.of(getDefaultNamedXContents().stream(), getProvidedNamedXContents().stream(), namedXContentEntries.stream()), +, +    /**, +     * Loads and returns the {@link NamedXContentRegistry.Entry} parsers provided by plugins., +     */, +    static List<NamedXContentRegistry.Entry> getProvidedNamedXContents() {, +        List<NamedXContentRegistry.Entry> entries = new ArrayList<>();, +        for (NamedXContentProvider service : ServiceLoader.load(NamedXContentProvider.class)) {, +            entries.addAll(service.getNamedXContentParsers());, +        }, +        return entries;, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.plugins.spi.NamedXContentProvider;, +import java.util.ArrayList;, +import java.util.ServiceLoader;, +        this.registry = new NamedXContentRegistry(, +                Stream.of(getDefaultNamedXContents().stream(), getProvidedNamedXContents().stream(), namedXContentEntries.stream()), +, +    /**, +     * Loads and returns the {@link NamedXContentRegistry.Entry} parsers provided by plugins., +     */, +    static List<NamedXContentRegistry.Entry> getProvidedNamedXContents() {, +        List<NamedXContentRegistry.Entry> entries = new ArrayList<>();, +        for (NamedXContentProvider service : ServiceLoader.load(NamedXContentProvider.class)) {, +            entries.addAll(service.getNamedXContentParsers());, +        }, +        return entries;, +    }, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +import org.elasticsearch.join.aggregations.ChildrenAggregationBuilder;, +import org.elasticsearch.search.aggregations.matrix.stats.MatrixStatsAggregationBuilder;, +import java.util.ArrayList;, +    public void testDefaultNamedXContents() {, +        assertEquals(43, namedXContents.size());, +        assertEquals(Integer.valueOf(40), categories.get(Aggregation.class));, +    public void testProvidedNamedXContents() {, +        List<NamedXContentRegistry.Entry> namedXContents = RestHighLevelClient.getProvidedNamedXContents();, +        assertEquals(2, namedXContents.size());, +        Map<Class<?>, Integer> categories = new HashMap<>();, +        List<String> names = new ArrayList<>();, +        for (NamedXContentRegistry.Entry namedXContent : namedXContents) {, +            names.add(namedXContent.name.getPreferredName());, +            Integer counter = categories.putIfAbsent(namedXContent.categoryClass, 1);, +            if (counter != null) {, +                categories.put(namedXContent.categoryClass, counter + 1);, +            }, +        }, +        assertEquals(1, categories.size());, +        assertEquals(Integer.valueOf(2), categories.get(Aggregation.class));, +        assertTrue(names.contains(ChildrenAggregationBuilder.NAME));, +        assertTrue(names.contains(MatrixStatsAggregationBuilder.NAME));, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.plugins.spi.NamedXContentProvider;, +import java.util.ArrayList;, +import java.util.ServiceLoader;, +        this.registry = new NamedXContentRegistry(, +                Stream.of(getDefaultNamedXContents().stream(), getProvidedNamedXContents().stream(), namedXContentEntries.stream()), +, +    /**, +     * Loads and returns the {@link NamedXContentRegistry.Entry} parsers provided by plugins., +     */, +    static List<NamedXContentRegistry.Entry> getProvidedNamedXContents() {, +        List<NamedXContentRegistry.Entry> entries = new ArrayList<>();, +        for (NamedXContentProvider service : ServiceLoader.load(NamedXContentProvider.class)) {, +            entries.addAll(service.getNamedXContentParsers());, +        }, +        return entries;, +    }, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +import org.elasticsearch.join.aggregations.ChildrenAggregationBuilder;, +import org.elasticsearch.search.aggregations.matrix.stats.MatrixStatsAggregationBuilder;, +import java.util.ArrayList;, +    public void testDefaultNamedXContents() {, +        assertEquals(43, namedXContents.size());, +        assertEquals(Integer.valueOf(40), categories.get(Aggregation.class));, +    public void testProvidedNamedXContents() {, +        List<NamedXContentRegistry.Entry> namedXContents = RestHighLevelClient.getProvidedNamedXContents();, +        assertEquals(2, namedXContents.size());, +        Map<Class<?>, Integer> categories = new HashMap<>();, +        List<String> names = new ArrayList<>();, +        for (NamedXContentRegistry.Entry namedXContent : namedXContents) {, +            names.add(namedXContent.name.getPreferredName());, +            Integer counter = categories.putIfAbsent(namedXContent.categoryClass, 1);, +            if (counter != null) {, +                categories.put(namedXContent.categoryClass, counter + 1);, +            }, +        }, +        assertEquals(1, categories.size());, +        assertEquals(Integer.valueOf(2), categories.get(Aggregation.class));, +        assertTrue(names.contains(ChildrenAggregationBuilder.NAME));, +        assertTrue(names.contains(MatrixStatsAggregationBuilder.NAME));, +    }]