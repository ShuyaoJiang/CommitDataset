[+++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java, +import org.elasticsearch.search.aggregations.AggregatorFactories;, +        if (bucketOrd >= docCounts.size()) {, +            // This may happen eg. if no document in the highest buckets is accepted by a sub aggregator., +            // For example, if there is a long terms agg on 3 terms 1,2,3 with a sub filter aggregator and if no document with 3 as a value, +            // matches the filter, then the filter will never collect bucket ord 3. However, the long terms agg will call bucketAggregations(3), +            // on the filter aggregator anyway to build sub-aggregations., +            return 0L;, +        } else {, +    }, +        final InternalAggregation[] aggregations = new InternalAggregation[subAggregators.length];, +        final long bucketDocCount = bucketDocCount(bucketOrd);, +            aggregations[i] = bucketDocCount == 0L, +                    ? subAggregators[i].buildEmptyAggregation(), +                    : subAggregators[i].buildAggregation(bucketOrd);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java, +import org.elasticsearch.search.aggregations.AggregatorFactories;, +        if (bucketOrd >= docCounts.size()) {, +            // This may happen eg. if no document in the highest buckets is accepted by a sub aggregator., +            // For example, if there is a long terms agg on 3 terms 1,2,3 with a sub filter aggregator and if no document with 3 as a value, +            // matches the filter, then the filter will never collect bucket ord 3. However, the long terms agg will call bucketAggregations(3), +            // on the filter aggregator anyway to build sub-aggregations., +            return 0L;, +        } else {, +    }, +        final InternalAggregation[] aggregations = new InternalAggregation[subAggregators.length];, +        final long bucketDocCount = bucketDocCount(bucketOrd);, +            aggregations[i] = bucketDocCount == 0L, +                    ? subAggregators[i].buildEmptyAggregation(), +                    : subAggregators[i].buildAggregation(bucketOrd);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java, +import org.elasticsearch.search.aggregations.*;]