[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            // fail if somebody replaced the lucene jars, +            checkLucene();, +, +, +    private static void checkLucene() {, +        if (Version.CURRENT.luceneVersion.equals(org.apache.lucene.util.Version.LATEST) == false) {, +            throw new AssertionError("Lucene version mismatch this version of Elasticsearch requires lucene version [", +                + Version.CURRENT.luceneVersion + "]  but the current lucene version is [" + org.apache.lucene.util.Version.LATEST + "]");, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            // fail if somebody replaced the lucene jars, +            checkLucene();, +, +, +    private static void checkLucene() {, +        if (Version.CURRENT.luceneVersion.equals(org.apache.lucene.util.Version.LATEST) == false) {, +            throw new AssertionError("Lucene version mismatch this version of Elasticsearch requires lucene version [", +                + Version.CURRENT.luceneVersion + "]  but the current lucene version is [" + org.apache.lucene.util.Version.LATEST + "]");, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java, +                cancellableThreads.execute(() -> {, +                                ArrayUtil.timSort(metadata, new Comparator<StoreFileMetaData>() {, +                                    @Override, +                                    public int compare(StoreFileMetaData o1, StoreFileMetaData o2) {, +                                    }, +                });]