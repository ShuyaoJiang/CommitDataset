[+++ b/server/src/main/java/org/elasticsearch/ExceptionsHelper.java, +import org.elasticsearch.transport.TransportException;, +    public static boolean isTransportStoppedForAction(final Throwable t, final String action) {, +        final TransportException maybeTransport =, +                (TransportException) ExceptionsHelper.unwrap(t, TransportException.class);, +        return maybeTransport != null, +                && (maybeTransport.getMessage().equals("TransportService is closed stopped can't send request"), +                || maybeTransport.getMessage().equals("transport stopped, action: " + action));, +    }, +, +++ b/server/src/main/java/org/elasticsearch/ExceptionsHelper.java, +import org.elasticsearch.transport.TransportException;, +    public static boolean isTransportStoppedForAction(final Throwable t, final String action) {, +        final TransportException maybeTransport =, +                (TransportException) ExceptionsHelper.unwrap(t, TransportException.class);, +        return maybeTransport != null, +                && (maybeTransport.getMessage().equals("TransportService is closed stopped can't send request"), +                || maybeTransport.getMessage().equals("transport stopped, action: " + action));, +    }, +, +++ b/server/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +        final boolean nodeIsClosing =, +                cause instanceof NodeClosedException, +                        || ExceptionsHelper.isTransportStoppedForAction(cause, "internal:cluster/shard/failure");, +++ b/server/src/main/java/org/elasticsearch/ExceptionsHelper.java, +import org.elasticsearch.transport.TransportException;, +    public static boolean isTransportStoppedForAction(final Throwable t, final String action) {, +        final TransportException maybeTransport =, +                (TransportException) ExceptionsHelper.unwrap(t, TransportException.class);, +        return maybeTransport != null, +                && (maybeTransport.getMessage().equals("TransportService is closed stopped can't send request"), +                || maybeTransport.getMessage().equals("transport stopped, action: " + action));, +    }, +, +++ b/server/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +        final boolean nodeIsClosing =, +                cause instanceof NodeClosedException, +                        || ExceptionsHelper.isTransportStoppedForAction(cause, "internal:cluster/shard/failure");, +++ b/server/src/main/java/org/elasticsearch/index/seqno/RetentionLeaseBackgroundSyncAction.java, +                                if (ExceptionsHelper.isTransportStoppedForAction(e, ACTION_NAME + "[p]")) {, +                                    // we are likely shutting down, +                                    return;, +                                if (ExceptionsHelper.unwrap(e, AlreadyClosedException.class, IndexShardClosedException.class) != null) {, +                                    // the shard is closed, +                                    return;, +                                }, +                                getLogger().warn(new ParameterizedMessage("{} retention lease background sync failed", shardId), e);, +++ b/server/src/main/java/org/elasticsearch/ExceptionsHelper.java, +import org.elasticsearch.transport.TransportException;, +    public static boolean isTransportStoppedForAction(final Throwable t, final String action) {, +        final TransportException maybeTransport =, +                (TransportException) ExceptionsHelper.unwrap(t, TransportException.class);, +        return maybeTransport != null, +                && (maybeTransport.getMessage().equals("TransportService is closed stopped can't send request"), +                || maybeTransport.getMessage().equals("transport stopped, action: " + action));, +    }, +, +++ b/server/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +        final boolean nodeIsClosing =, +                cause instanceof NodeClosedException, +                        || ExceptionsHelper.isTransportStoppedForAction(cause, "internal:cluster/shard/failure");, +++ b/server/src/main/java/org/elasticsearch/index/seqno/RetentionLeaseBackgroundSyncAction.java, +                                if (ExceptionsHelper.isTransportStoppedForAction(e, ACTION_NAME + "[p]")) {, +                                    // we are likely shutting down, +                                    return;, +                                if (ExceptionsHelper.unwrap(e, AlreadyClosedException.class, IndexShardClosedException.class) != null) {, +                                    // the shard is closed, +                                    return;, +                                }, +                                getLogger().warn(new ParameterizedMessage("{} retention lease background sync failed", shardId), e);, +++ b/server/src/main/java/org/elasticsearch/transport/TransportService.java, +                        // cf. ExceptionsHelper#isTransportStoppedForAction, +                /*, +                 * If we are not started the exception handling will remove the request holder again and calls the handler to notify the, +                 * caller. It will only notify if toStop hasn't done the work yet., +                 *, +                 * Do not edit this exception message, it is currently relied upon in production code!, +                 */, +                // TODO: make a dedicated exception for a stopped transport service? cf. ExceptionsHelper#isTransportStoppedForAction, +++ b/server/src/main/java/org/elasticsearch/ExceptionsHelper.java, +import org.elasticsearch.transport.TransportException;, +    public static boolean isTransportStoppedForAction(final Throwable t, final String action) {, +        final TransportException maybeTransport =, +                (TransportException) ExceptionsHelper.unwrap(t, TransportException.class);, +        return maybeTransport != null, +                && (maybeTransport.getMessage().equals("TransportService is closed stopped can't send request"), +                || maybeTransport.getMessage().equals("transport stopped, action: " + action));, +    }, +, +++ b/server/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +        final boolean nodeIsClosing =, +                cause instanceof NodeClosedException, +                        || ExceptionsHelper.isTransportStoppedForAction(cause, "internal:cluster/shard/failure");, +++ b/server/src/main/java/org/elasticsearch/index/seqno/RetentionLeaseBackgroundSyncAction.java, +                                if (ExceptionsHelper.isTransportStoppedForAction(e, ACTION_NAME + "[p]")) {, +                                    // we are likely shutting down, +                                    return;, +                                if (ExceptionsHelper.unwrap(e, AlreadyClosedException.class, IndexShardClosedException.class) != null) {, +                                    // the shard is closed, +                                    return;]