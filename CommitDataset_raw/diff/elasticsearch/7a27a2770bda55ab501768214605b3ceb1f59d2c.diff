[+++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +        final Scroll scroll = scroll();, +        if (source != null && source.trackTotalHits() == false && scroll != null) {, +        if (source != null && source.from() > 0 && scroll != null) {, +        if (requestCache != null && requestCache && scroll != null) {, +                addValidationError("[request_cache] cannot be used in a scroll context", validationException);, +        }, +        if (source != null && source.size() == 0 && scroll != null) {, +            validationException = addValidationError("[size] cannot be [0] in a scroll context", validationException);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +        final Scroll scroll = scroll();, +        if (source != null && source.trackTotalHits() == false && scroll != null) {, +        if (source != null && source.from() > 0 && scroll != null) {, +        if (requestCache != null && requestCache && scroll != null) {, +                addValidationError("[request_cache] cannot be used in a scroll context", validationException);, +        }, +        if (source != null && source.size() == 0 && scroll != null) {, +            validationException = addValidationError("[size] cannot be [0] in a scroll context", validationException);, +++ b/core/src/test/java/org/elasticsearch/search/SearchRequestTests.java, +        {, +            // scroll and `size` is `0`, +            SearchRequest searchRequest = createSearchRequest().source(new SearchSourceBuilder().size(0));, +            searchRequest.requestCache(false);, +            searchRequest.scroll(new TimeValue(1000));, +            ActionRequestValidationException validationErrors = searchRequest.validate();, +            assertNotNull(validationErrors);, +            assertEquals(1, validationErrors.validationErrors().size());, +            assertEquals("[size] cannot be [0] in a scroll context", validationErrors.validationErrors().get(0));, +        }, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +        final Scroll scroll = scroll();, +        if (source != null && source.trackTotalHits() == false && scroll != null) {, +        if (source != null && source.from() > 0 && scroll != null) {, +        if (requestCache != null && requestCache && scroll != null) {, +                addValidationError("[request_cache] cannot be used in a scroll context", validationException);, +        }, +        if (source != null && source.size() == 0 && scroll != null) {, +            validationException = addValidationError("[size] cannot be [0] in a scroll context", validationException);, +++ b/core/src/test/java/org/elasticsearch/search/SearchRequestTests.java, +        {, +            // scroll and `size` is `0`, +            SearchRequest searchRequest = createSearchRequest().source(new SearchSourceBuilder().size(0));, +            searchRequest.requestCache(false);, +            searchRequest.scroll(new TimeValue(1000));, +            ActionRequestValidationException validationErrors = searchRequest.validate();, +            assertNotNull(validationErrors);, +            assertEquals(1, validationErrors.validationErrors().size());, +            assertEquals("[size] cannot be [0] in a scroll context", validationErrors.validationErrors().get(0));, +        }, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/scroll/10_basic.yml, +      catch: /\[request_cache\] cannot be used in a scroll context/, +, +---, +"Scroll with size 0":, +  - skip:, +      version: " - 6.99.99", +      reason:  the error message has been added in v7.0.0, +  - do:, +      indices.create:, +        index: test_scroll, +  - do:, +      catch: /\[size\] cannot be \[0\] in a scroll context/, +      search:, +        index: test_scroll, +        scroll: 1m, +        request_cache: true, +        body:, +          query:, +            match_all: {}, +          size: 0]