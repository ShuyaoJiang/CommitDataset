[+++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.search.internal.DefaultSearchContext;, +            SearchContext.setCurrent(new DefaultSearchContext(0,, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.search.internal.DefaultSearchContext;, +            SearchContext.setCurrent(new DefaultSearchContext(0,, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +import org.elasticsearch.search.internal.DefaultSearchContext;, +        SearchContext context = new DefaultSearchContext(0,, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.search.internal.DefaultSearchContext;, +            SearchContext.setCurrent(new DefaultSearchContext(0,, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +import org.elasticsearch.search.internal.DefaultSearchContext;, +        SearchContext context = new DefaultSearchContext(0,, +++ b/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +import org.elasticsearch.search.internal.DefaultSearchContext;, +        SearchContext context = new DefaultSearchContext(, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.search.internal.DefaultSearchContext;, +            SearchContext.setCurrent(new DefaultSearchContext(0,, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +import org.elasticsearch.search.internal.DefaultSearchContext;, +        SearchContext context = new DefaultSearchContext(0,, +++ b/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +import org.elasticsearch.search.internal.DefaultSearchContext;, +        SearchContext context = new DefaultSearchContext(, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.search.highlight.HighlightBuilder;, +    public PercolateRequestBuilder setHighlightBuilder(HighlightBuilder highlightBuilder) {, +        sourceBuilder().setHighlightBuilder(highlightBuilder);, +        return this;, +    }, +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.search.internal.DefaultSearchContext;, +            SearchContext.setCurrent(new DefaultSearchContext(0,, +++ b/src/main/java/org/elasticsearch/action/count/TransportCountAction.java, +import org.elasticsearch.search.internal.DefaultSearchContext;, +        SearchContext context = new DefaultSearchContext(0,, +++ b/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +import org.elasticsearch.search.internal.DefaultSearchContext;, +        SearchContext context = new DefaultSearchContext(, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.search.highlight.HighlightBuilder;, +    public PercolateRequestBuilder setHighlightBuilder(HighlightBuilder highlightBuilder) {, +        sourceBuilder().setHighlightBuilder(highlightBuilder);, +        return this;, +    }, +, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateResponse.java, +import org.elasticsearch.search.highlight.HighlightField;, +import java.util.*;, +                    builder.value(match.getId());, +                    float score = match.getScore();, +                    if (match.getHighlightFields() != null) {, +                        builder.startObject(Fields.HIGHLIGHT);, +                        for (HighlightField field : match.getHighlightFields().values()) {, +                            builder.field(field.name());, +                            if (field.fragments() == null) {, +                                builder.nullValue();, +                            } else {, +                                builder.startArray();, +                                for (Text fragment : field.fragments()) {, +                                    builder.value(fragment);, +                                }, +                                builder.endArray();, +                            }, +                        }, +                        builder.endObject();, +                    }, +        private Map<String, HighlightField> hl;, +, +        public Match(Text index, Text id, float score, Map<String, HighlightField> hl) {, +            this.id = id;, +            this.score = score;, +            this.index = index;, +            this.hl = hl;, +        }, +        public Text getIndex() {, +        public Text getId() {, +        public float getScore() {, +        public Map<String, HighlightField> getHighlightFields() {, +            return hl;, +            int size = in.readVInt();, +            if (size > 0) {, +                hl = new HashMap<String, HighlightField>(size);, +                for (int j = 0; j < size; j++) {, +                    hl.put(in.readString(), HighlightField.readHighlightField(in));, +                }, +            }, +            if (hl != null) {, +                out.writeVInt(hl.size());, +                for (Map.Entry<String, HighlightField> entry : hl.entrySet()) {, +                    out.writeString(entry.getKey());, +                    entry.getValue().writeTo(out);, +                }, +            } else {, +                out.writeVInt(0);, +            }]