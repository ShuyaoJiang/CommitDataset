[+++ b/core/src/main/java/org/elasticsearch/action/ingest/WriteableIngestDocument.java, +            if (metadata.getValue() != null) {, +        }, +++ b/core/src/main/java/org/elasticsearch/action/ingest/WriteableIngestDocument.java, +            if (metadata.getValue() != null) {, +        }, +++ b/core/src/test/java/org/elasticsearch/action/ingest/WriteableIngestDocumentTests.java, +import org.elasticsearch.test.XContentTestUtils;, +import static org.elasticsearch.test.XContentTestUtils.convertToMap;, +import static org.elasticsearch.test.XContentTestUtils.differenceBetweenMapsIgnoringArrayOrder;, +import static org.hamcrest.Matchers.is;, +import static org.hamcrest.Matchers.nullValue;, +, +    @SuppressWarnings("unchecked"), +    public void testToXContent() throws IOException {, +        IngestDocument ingestDocument = RandomDocumentPicks.randomIngestDocument(random());, +        WriteableIngestDocument writeableIngestDocument = new WriteableIngestDocument(new IngestDocument(ingestDocument));, +, +        Map<String, Object> toXContentMap = convertToMap(writeableIngestDocument);, +        Map<String, Object> toXContentDoc = (Map<String, Object>) toXContentMap.get("doc");, +        Map<String, Object> toXContentSource = (Map<String, Object>) toXContentDoc.get("_source");, +        Map<String, String> toXContentIngestMetadata = (Map<String, String>) toXContentDoc.get("_ingest");, +, +        Map<IngestDocument.MetaData, String> metadataMap = ingestDocument.extractMetadata();, +        for (Map.Entry<IngestDocument.MetaData, String> metadata : metadataMap.entrySet()) {, +            String fieldName = metadata.getKey().getFieldName();, +            if (metadata.getValue() == null) {, +               assertThat(toXContentDoc.containsKey(fieldName), is(false));, +            } else {, +                assertThat(toXContentDoc.get(fieldName), equalTo(metadata.getValue()));, +            }, +        }, +, +        String sourceDiff = differenceBetweenMapsIgnoringArrayOrder(toXContentSource, ingestDocument.getSourceAndMetadata());, +        assertThat(sourceDiff, is(nullValue()));, +, +        assertThat(toXContentIngestMetadata, equalTo(ingestDocument.getIngestMetadata()));, +    }]