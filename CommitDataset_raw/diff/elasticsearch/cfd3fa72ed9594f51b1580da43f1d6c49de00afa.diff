[+++ b/docs/reference/modules/cluster/misc.asciidoc, +[[user-defined-data]], +==== User Defined Cluster Metadata, +, +User-defined metadata can be stored and retrieved using the Cluster Settings API., +This can be used to store arbitrary, infrequently-changing data about the cluster, +without the need to create an index to store it. This data may be stored using, +any key prefixed with `cluster.metadata.`.  For example, to store the email, +address of the administrator of a cluster under the key `cluster.metadata.administrator`,, +issue this request:, +, +[source,js], +-------------------------------, +PUT /_cluster/settings, +{, +  "persistent": {, +    "cluster.metadata.administrator": "sysadmin@example.com", +  }, +}, +-------------------------------, +// CONSOLE, +, +++ b/docs/reference/modules/cluster/misc.asciidoc, +[[user-defined-data]], +==== User Defined Cluster Metadata, +, +User-defined metadata can be stored and retrieved using the Cluster Settings API., +This can be used to store arbitrary, infrequently-changing data about the cluster, +without the need to create an index to store it. This data may be stored using, +any key prefixed with `cluster.metadata.`.  For example, to store the email, +address of the administrator of a cluster under the key `cluster.metadata.administrator`,, +issue this request:, +, +[source,js], +-------------------------------, +PUT /_cluster/settings, +{, +  "persistent": {, +    "cluster.metadata.administrator": "sysadmin@example.com", +  }, +}, +-------------------------------, +// CONSOLE, +, +++ b/server/src/main/java/org/elasticsearch/cluster/service/ClusterService.java, +    public static final org.elasticsearch.common.settings.Setting.AffixSetting<String> USER_DEFINED_META_DATA =, +        Setting.prefixKeySetting("cluster.metadata.", (key) -> Setting.simpleString(key, Property.Dynamic, Property.NodeScope));, +, +        // Add a no-op update consumer so changes are logged, +        this.clusterSettings.addAffixUpdateConsumer(USER_DEFINED_META_DATA, (first, second) -> {}, (first, second) -> {});, +++ b/docs/reference/modules/cluster/misc.asciidoc, +[[user-defined-data]], +==== User Defined Cluster Metadata, +, +User-defined metadata can be stored and retrieved using the Cluster Settings API., +This can be used to store arbitrary, infrequently-changing data about the cluster, +without the need to create an index to store it. This data may be stored using, +any key prefixed with `cluster.metadata.`.  For example, to store the email, +address of the administrator of a cluster under the key `cluster.metadata.administrator`,, +issue this request:, +, +[source,js], +-------------------------------, +PUT /_cluster/settings, +{, +  "persistent": {, +    "cluster.metadata.administrator": "sysadmin@example.com", +  }, +}, +-------------------------------, +// CONSOLE, +, +++ b/server/src/main/java/org/elasticsearch/cluster/service/ClusterService.java, +    public static final org.elasticsearch.common.settings.Setting.AffixSetting<String> USER_DEFINED_META_DATA =, +        Setting.prefixKeySetting("cluster.metadata.", (key) -> Setting.simpleString(key, Property.Dynamic, Property.NodeScope));, +, +        // Add a no-op update consumer so changes are logged, +        this.clusterSettings.addAffixUpdateConsumer(USER_DEFINED_META_DATA, (first, second) -> {}, (first, second) -> {});, +++ b/server/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    ClusterService.USER_DEFINED_META_DATA,, +++ b/docs/reference/modules/cluster/misc.asciidoc, +[[user-defined-data]], +==== User Defined Cluster Metadata, +, +User-defined metadata can be stored and retrieved using the Cluster Settings API., +This can be used to store arbitrary, infrequently-changing data about the cluster, +without the need to create an index to store it. This data may be stored using, +any key prefixed with `cluster.metadata.`.  For example, to store the email, +address of the administrator of a cluster under the key `cluster.metadata.administrator`,, +issue this request:, +, +[source,js], +-------------------------------, +PUT /_cluster/settings, +{, +  "persistent": {, +    "cluster.metadata.administrator": "sysadmin@example.com", +  }, +}, +-------------------------------]