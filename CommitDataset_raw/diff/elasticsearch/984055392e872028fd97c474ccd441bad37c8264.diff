[+++ b/dev-tools/checkstyle_suppressions.xml, +  <suppress files="plugin[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]common[/\\]action[/\\]XPackDeleteByQueryAction.java" checks="LineLength" />, +++ b/dev-tools/checkstyle_suppressions.xml, +  <suppress files="plugin[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]common[/\\]action[/\\]XPackDeleteByQueryAction.java" checks="LineLength" />, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.xpack.common.action.XPackDeleteByQueryAction;, +        actions.add(new ActionHandler<>(XPackDeleteByQueryAction.INSTANCE, XPackDeleteByQueryAction.TransportAction.class));, +++ b/dev-tools/checkstyle_suppressions.xml, +  <suppress files="plugin[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]common[/\\]action[/\\]XPackDeleteByQueryAction.java" checks="LineLength" />, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.xpack.common.action.XPackDeleteByQueryAction;, +        actions.add(new ActionHandler<>(XPackDeleteByQueryAction.INSTANCE, XPackDeleteByQueryAction.TransportAction.class));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/common/action/XPackDeleteByQueryAction.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.xpack.common.action;, +, +import org.elasticsearch.action.Action;, +import org.elasticsearch.action.ActionListener;, +import org.elasticsearch.action.bulk.byscroll.AbstractBulkByScrollRequestBuilder;, +import org.elasticsearch.action.bulk.byscroll.AsyncDeleteByQueryAction;, +import org.elasticsearch.action.bulk.byscroll.BulkByScrollParallelizationHelper;, +import org.elasticsearch.action.bulk.byscroll.BulkByScrollResponse;, +import org.elasticsearch.action.bulk.byscroll.DeleteByQueryRequest;, +import org.elasticsearch.action.bulk.byscroll.ParentBulkByScrollTask;, +import org.elasticsearch.action.bulk.byscroll.WorkingBulkByScrollTask;, +import org.elasticsearch.action.search.SearchAction;, +import org.elasticsearch.action.search.SearchRequest;, +import org.elasticsearch.action.search.SearchRequestBuilder;, +import org.elasticsearch.action.support.ActionFilters;, +import org.elasticsearch.action.support.HandledTransportAction;, +import org.elasticsearch.action.support.IndicesOptions;, +import org.elasticsearch.client.Client;, +import org.elasticsearch.client.ElasticsearchClient;, +import org.elasticsearch.client.ParentTaskAssigningClient;, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +import org.elasticsearch.cluster.service.ClusterService;, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.script.ScriptService;, +import org.elasticsearch.tasks.Task;, +import org.elasticsearch.threadpool.ThreadPool;, +import org.elasticsearch.transport.TransportService;, +import org.elasticsearch.xpack.common.action.XPackDeleteByQueryAction.XPackDeleteByQueryRequestBuilder;, +, +public class XPackDeleteByQueryAction extends Action<DeleteByQueryRequest, BulkByScrollResponse,, +        XPackDeleteByQueryRequestBuilder> {, +, +    public static final XPackDeleteByQueryAction INSTANCE = new XPackDeleteByQueryAction();, +    // Ideally we'd use an "internal" action here as we don't want transport client users running it, +    // but unfortunately the _xpack user is forbidden to run "internal" actions as these are really, +    // intended to be run as the system user, +    public static final String NAME = "indices:internal/data/write/xpackdeletebyquery";, +, +    private XPackDeleteByQueryAction() {, +        super(NAME);, +    }, +, +    @Override, +    public XPackDeleteByQueryRequestBuilder newRequestBuilder(ElasticsearchClient client) {, +        return new XPackDeleteByQueryRequestBuilder(client, this);, +    }, +, +    @Override, +    public BulkByScrollResponse newResponse() {, +        return new BulkByScrollResponse();, +    }, +, +    public static class XPackDeleteByQueryRequestBuilder extends, +            AbstractBulkByScrollRequestBuilder<DeleteByQueryRequest, XPackDeleteByQueryRequestBuilder> {, +, +        private XPackDeleteByQueryRequestBuilder(ElasticsearchClient client,, +                                                 Action<DeleteByQueryRequest, BulkByScrollResponse, XPackDeleteByQueryRequestBuilder> action) {, +            this(client, action, new SearchRequestBuilder(client, SearchAction.INSTANCE));, +        }, +, +        private XPackDeleteByQueryRequestBuilder(ElasticsearchClient client,, +                                                 Action<DeleteByQueryRequest, BulkByScrollResponse, XPackDeleteByQueryRequestBuilder> action,, +                                                 SearchRequestBuilder search) {, +            super(client, action, search,, +                    new DeleteByQueryRequest(, +                            search.setIndicesOptions(addIgnoreUnavailable(SearchRequest.DEFAULT_INDICES_OPTIONS)).request()));, +        }, +, +        @Override, +        protected XPackDeleteByQueryRequestBuilder self() {, +            return this;, +        }, +, +        @Override, +        public XPackDeleteByQueryRequestBuilder abortOnVersionConflict(boolean abortOnVersionConflict) {, +            request.setAbortOnVersionConflict(abortOnVersionConflict);, +            return this;, +        }, +    }, +]