[+++ b/build.gradle, +    "org.elasticsearch.xpack.test:feature-aware:${version}": ':x-pack:test:feature-aware',, +    configurations.all { Configuration configuration ->, +      /*, +       * The featureAwarePlugin configuration has a dependency on x-pack:plugin:core and x-pack:plugin:core has a dependency on the, +       * featureAwarePlugin configuration. The below task ordering logic would force :x-pack:plugin:core:test, +       * :x-pack:test:feature-aware:test to depend on each other circularly. We break that cycle here., +       */, +      if (configuration.name == "featureAwarePlugin") {, +        return, +      }, +++ b/build.gradle, +    "org.elasticsearch.xpack.test:feature-aware:${version}": ':x-pack:test:feature-aware',, +    configurations.all { Configuration configuration ->, +      /*, +       * The featureAwarePlugin configuration has a dependency on x-pack:plugin:core and x-pack:plugin:core has a dependency on the, +       * featureAwarePlugin configuration. The below task ordering logic would force :x-pack:plugin:core:test, +       * :x-pack:test:feature-aware:test to depend on each other circularly. We break that cycle here., +       */, +      if (configuration.name == "featureAwarePlugin") {, +        return, +      }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +     * Updates cluster wide specific settings using the Cluster Update Settings API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-update-settings.html"> Cluster Update Settings, +     * API on elastic.co</a>, +     * @param clusterUpdateSettingsRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public ClusterUpdateSettingsResponse putSettings(ClusterUpdateSettingsRequest clusterUpdateSettingsRequest, RequestOptions options), +            throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(clusterUpdateSettingsRequest, RequestConverters::clusterPutSettings,, +                options, ClusterUpdateSettingsResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Updates cluster wide specific settings using the Cluster Update Settings API., +     * @deprecated Prefer {@link #putSettings(ClusterUpdateSettingsRequest, RequestOptions)}, +    @Deprecated, +     * Asynchronously updates cluster wide specific settings using the Cluster Update Settings API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-update-settings.html"> Cluster Update Settings, +     * API on elastic.co</a>, +     * @param clusterUpdateSettingsRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void putSettingsAsync(ClusterUpdateSettingsRequest clusterUpdateSettingsRequest, RequestOptions options,, +                                 ActionListener<ClusterUpdateSettingsResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(clusterUpdateSettingsRequest, RequestConverters::clusterPutSettings,, +                options, ClusterUpdateSettingsResponse::fromXContent, listener, emptySet());, +    }, +    /**, +     * Asynchronously updates cluster wide specific settings using the Cluster Update Settings API., +     * @deprecated Prefer {@link #putSettingsAsync(ClusterUpdateSettingsRequest, RequestOptions, ActionListener)}, +    @Deprecated, +++ b/build.gradle, +    "org.elasticsearch.xpack.test:feature-aware:${version}": ':x-pack:test:feature-aware',, +    configurations.all { Configuration configuration ->, +      /*, +       * The featureAwarePlugin configuration has a dependency on x-pack:plugin:core and x-pack:plugin:core has a dependency on the, +       * featureAwarePlugin configuration. The below task ordering logic would force :x-pack:plugin:core:test, +       * :x-pack:test:feature-aware:test to depend on each other circularly. We break that cycle here., +       */, +      if (configuration.name == "featureAwarePlugin") {, +        return, +      }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +     * Updates cluster wide specific settings using the Cluster Update Settings API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-update-settings.html"> Cluster Update Settings, +     * API on elastic.co</a>, +     * @param clusterUpdateSettingsRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public ClusterUpdateSettingsResponse putSettings(ClusterUpdateSettingsRequest clusterUpdateSettingsRequest, RequestOptions options), +            throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(clusterUpdateSettingsRequest, RequestConverters::clusterPutSettings,, +                options, ClusterUpdateSettingsResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Updates cluster wide specific settings using the Cluster Update Settings API., +     * @deprecated Prefer {@link #putSettings(ClusterUpdateSettingsRequest, RequestOptions)}, +    @Deprecated, +     * Asynchronously updates cluster wide specific settings using the Cluster Update Settings API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-update-settings.html"> Cluster Update Settings, +     * API on elastic.co</a>, +     * @param clusterUpdateSettingsRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void putSettingsAsync(ClusterUpdateSettingsRequest clusterUpdateSettingsRequest, RequestOptions options,, +                                 ActionListener<ClusterUpdateSettingsResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(clusterUpdateSettingsRequest, RequestConverters::clusterPutSettings,, +                options, ClusterUpdateSettingsResponse::fromXContent, listener, emptySet());, +    }, +    /**]