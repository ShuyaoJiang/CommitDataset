[+++ b/bin/elasticsearch.bat, +if NOT "%ES_DIRECT_SIZE%" == "" (, +set JAVA_OPTS=%JAVA_OPTS% -XX:MaxDirectMemorySize=%ES_DIRECT_SIZE%, +), +, +++ b/bin/elasticsearch.bat, +if NOT "%ES_DIRECT_SIZE%" == "" (, +set JAVA_OPTS=%JAVA_OPTS% -XX:MaxDirectMemorySize=%ES_DIRECT_SIZE%, +), +, +++ b/bin/elasticsearch.in.sh, +# max direct memory, +if [ "x$ES_DIRECT_SIZE" != "x" ]; then, +    JAVA_OPTS="$JAVA_OPTS -XX:MaxDirectMemorySize=${ES_DIRECT_SIZE}", +fi, +, +++ b/bin/elasticsearch.bat, +if NOT "%ES_DIRECT_SIZE%" == "" (, +set JAVA_OPTS=%JAVA_OPTS% -XX:MaxDirectMemorySize=%ES_DIRECT_SIZE%, +), +, +++ b/bin/elasticsearch.in.sh, +# max direct memory, +if [ "x$ES_DIRECT_SIZE" != "x" ]; then, +    JAVA_OPTS="$JAVA_OPTS -XX:MaxDirectMemorySize=${ES_DIRECT_SIZE}", +fi, +, +++ b/src/deb/default/elasticsearch, +# Heap new generation, +#ES_HEAP_NEWSIZE=, +, +# max direct memory, +#ES_DIRECT_SIZE=, +, +++ b/bin/elasticsearch.bat, +if NOT "%ES_DIRECT_SIZE%" == "" (, +set JAVA_OPTS=%JAVA_OPTS% -XX:MaxDirectMemorySize=%ES_DIRECT_SIZE%, +), +, +++ b/bin/elasticsearch.in.sh, +# max direct memory, +if [ "x$ES_DIRECT_SIZE" != "x" ]; then, +    JAVA_OPTS="$JAVA_OPTS -XX:MaxDirectMemorySize=${ES_DIRECT_SIZE}", +fi, +, +++ b/src/deb/default/elasticsearch, +# Heap new generation, +#ES_HEAP_NEWSIZE=, +, +# max direct memory, +#ES_DIRECT_SIZE=, +, +++ b/src/deb/init.d/elasticsearch, +# Heap new generation, +#ES_HEAP_NEWSIZE=, +, +# max direct memory, +#ES_DIRECT_SIZE=, +, +export ES_HEAP_NEWSIZE, +export ES_DIRECT_SIZE, +++ b/bin/elasticsearch.bat, +if NOT "%ES_DIRECT_SIZE%" == "" (, +set JAVA_OPTS=%JAVA_OPTS% -XX:MaxDirectMemorySize=%ES_DIRECT_SIZE%, +), +, +++ b/bin/elasticsearch.in.sh, +# max direct memory, +if [ "x$ES_DIRECT_SIZE" != "x" ]; then, +    JAVA_OPTS="$JAVA_OPTS -XX:MaxDirectMemorySize=${ES_DIRECT_SIZE}", +fi, +, +++ b/src/deb/default/elasticsearch, +# Heap new generation, +#ES_HEAP_NEWSIZE=, +, +# max direct memory, +#ES_DIRECT_SIZE=, +, +++ b/src/deb/init.d/elasticsearch, +# Heap new generation, +#ES_HEAP_NEWSIZE=, +, +# max direct memory, +#ES_DIRECT_SIZE=, +, +export ES_HEAP_NEWSIZE, +export ES_DIRECT_SIZE, +++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransport.java, +import org.elasticsearch.monitor.jvm.JvmInfo;, +        long defaultReceiverPredictor = 512 * 1024;, +        if (JvmInfo.jvmInfo().mem().directMemoryMax().bytes() > 0) {, +            // we can guess a better default..., +            long l = (long) ((0.3 * JvmInfo.jvmInfo().mem().directMemoryMax().bytes()) / workerCount);, +            defaultReceiverPredictor = Math.min(defaultReceiverPredictor, Math.max(l, 64 * 1024));, +        }, +, +        ByteSizeValue receivePredictorMin = componentSettings.getAsBytesSize("receive_predictor_min", componentSettings.getAsBytesSize("receive_predictor_size", new ByteSizeValue(defaultReceiverPredictor)));, +        ByteSizeValue receivePredictorMax = componentSettings.getAsBytesSize("receive_predictor_max", componentSettings.getAsBytesSize("receive_predictor_size", new ByteSizeValue(defaultReceiverPredictor)));, +        logger.debug("using max_chunk_size[{}], max_header_size[{}], max_initial_line_length[{}], max_content_length[{}], receive_predictor[{}->{}]",]