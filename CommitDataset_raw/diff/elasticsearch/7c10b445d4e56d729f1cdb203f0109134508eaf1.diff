[+++ b/src/main/java/org/elasticsearch/index/query/SpanNotQueryBuilder.java, +    private int dist = -1;, +, +    private int pre = -1;, +, +    private int post = -1;, +, +    public SpanNotQueryBuilder dist(int dist) {, +        this.dist = dist;, +        return this;, +    }, +, +    public SpanNotQueryBuilder pre(int pre) {, +        this.pre = pre;, +        return this;, +    }, +, +    public SpanNotQueryBuilder post(int post) {, +        this.post = post;, +        return this;, +    }, +, +, +        if ((dist != -1 && (pre != -1 || post != -1)) || (pre != -1 && post == -1) || (pre == -1 && post != -1))  {, +            throw new ElasticSearchIllegalArgumentException("spanNot can either use [dist] or [pre] & [post] (or none)");, +        }, +, +        if (dist != -1) {, +            builder.field("dist", dist);, +        }, +        if (pre != -1) {, +            builder.field("pre", pre);, +        }, +        if (post != -1) {, +            builder.field("post", post);, +        }, +++ b/src/main/java/org/elasticsearch/index/query/SpanNotQueryBuilder.java, +    private int dist = -1;, +, +    private int pre = -1;, +, +    private int post = -1;, +, +    public SpanNotQueryBuilder dist(int dist) {, +        this.dist = dist;, +        return this;, +    }, +, +    public SpanNotQueryBuilder pre(int pre) {, +        this.pre = pre;, +        return this;, +    }, +, +    public SpanNotQueryBuilder post(int post) {, +        this.post = post;, +        return this;, +    }, +, +, +        if ((dist != -1 && (pre != -1 || post != -1)) || (pre != -1 && post == -1) || (pre == -1 && post != -1))  {, +            throw new ElasticSearchIllegalArgumentException("spanNot can either use [dist] or [pre] & [post] (or none)");, +        }, +, +        if (dist != -1) {, +            builder.field("dist", dist);, +        }, +        if (pre != -1) {, +            builder.field("pre", pre);, +        }, +        if (post != -1) {, +            builder.field("post", post);, +        }, +++ b/src/main/java/org/elasticsearch/index/query/SpanNotQueryParser.java, +, +        int dist = -1;, +        int pre  = -1;, +        int post = -1;, +, +                if ("dist".equals(currentFieldName)) {, +                    dist = parser.intValue();, +                } else if ("pre".equals(currentFieldName)) {, +                    pre = parser.intValue();, +                } else if ("post".equals(currentFieldName)) {, +                    post = parser.intValue();, +                } else if ("boost".equals(currentFieldName)) {, +        if ((dist != -1 && (pre != -1 || post != -1)) || (pre != -1 && post == -1) || (pre == -1 && post != -1))  {, +            throw new QueryParsingException(parseContext.index(), "spanNot can either use [dist] or [pre] & [post] (or none)");, +        }, +        SpanNotQuery query;, +        if (pre != -1 && post != -1) {, +            query = new SpanNotQuery(include, exclude, pre, post);, +        } else if (dist != -1) {, +            query = new SpanNotQuery(include, exclude, dist);, +        } else {, +            query = new SpanNotQuery(include, exclude);, +        }, +, +++ b/src/main/java/org/elasticsearch/index/query/SpanNotQueryBuilder.java, +    private int dist = -1;, +]