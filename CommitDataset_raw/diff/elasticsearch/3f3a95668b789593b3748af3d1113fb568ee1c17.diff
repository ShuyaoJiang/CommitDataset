[+++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/IntegerFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/IntegerFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/LongFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost != 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/IntegerFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/LongFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost != 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ShortFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/IntegerFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/LongFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost != 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ShortFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/TypeParsers.java, +            } else if (propName.equals("omit_norms")) {, +                builder.omitNorms(nodeBooleanValue(propNode));, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/IntegerFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/LongFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost != 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ShortFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/TypeParsers.java, +            } else if (propName.equals("omit_norms")) {, +                builder.omitNorms(nodeBooleanValue(propNode));, +++ b/src/main/java/org/elasticsearch/index/mapper/ip/IpFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);, +++ b/src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java, +            fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);]