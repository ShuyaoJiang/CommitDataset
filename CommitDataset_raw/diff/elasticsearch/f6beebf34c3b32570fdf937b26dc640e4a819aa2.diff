[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/terms/TermsFacet.java, +     * The total count of terms., +     */, +    long totalCount();, +, +    /**, +     * The total count of terms., +     */, +    long getTotalCount();, +, +    /**, +     * The count of terms other than the one provided by the entries., +     */, +    long otherCount();, +, +    /**, +     * The count of terms other than the one provided by the entries., +     */, +    long getOtherCount();, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/terms/TermsFacet.java, +     * The total count of terms., +     */, +    long totalCount();, +, +    /**, +     * The total count of terms., +     */, +    long getTotalCount();, +, +    /**, +     * The count of terms other than the one provided by the entries., +     */, +    long otherCount();, +, +    /**, +     * The count of terms other than the one provided by the entries., +     */, +    long getOtherCount();, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/terms/bytes/InternalByteTermsFacet.java, +    long total;, +    public InternalByteTermsFacet(String name, ComparatorType comparatorType, int requiredSize, Collection<ByteEntry> entries, long missing, long total) {, +        this.total = total;, +    @Override public long totalCount() {, +        return this.total;, +    }, +, +    @Override public long getTotalCount() {, +        return totalCount();, +    }, +, +    @Override public long otherCount() {, +        long other = total;, +        for (Entry entry : entries) {, +            other -= entry.count();, +        }, +        return other;, +    }, +, +    @Override public long getOtherCount() {, +        return otherCount();, +    }, +, +, +        long total = 0;, +            total += mFacet.totalCount();, +        first.total = total;, +        static final XContentBuilderString TOTAL = new XContentBuilderString("total");, +        static final XContentBuilderString OTHER = new XContentBuilderString("other");, +        builder.field(Fields.TOTAL, total);, +        builder.field(Fields.OTHER, otherCount());, +        total = in.readVLong();, +        out.writeVLong(total);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/terms/TermsFacet.java, +     * The total count of terms., +     */, +    long totalCount();, +, +    /**, +     * The total count of terms., +     */, +    long getTotalCount();, +, +    /**, +     * The count of terms other than the one provided by the entries., +     */, +    long otherCount();, +, +    /**, +     * The count of terms other than the one provided by the entries., +     */, +    long getOtherCount();, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/terms/bytes/InternalByteTermsFacet.java, +    long total;, +    public InternalByteTermsFacet(String name, ComparatorType comparatorType, int requiredSize, Collection<ByteEntry> entries, long missing, long total) {]