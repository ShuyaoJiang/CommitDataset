[+++ b/qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java, +import org.elasticsearch.rest.action.document.RestGetAction;, +import org.elasticsearch.rest.action.search.RestExplainAction;, +                mappingsAndSettings.startObject("doc");, +                mappingsAndSettings.startObject("doc");, +                mappingsAndSettings.startObject("doc");, +                mappingsAndSettings.startObject("doc");, +                mappingsAndSettings.startObject("doc");, +        Request bulkRequest = new Request("POST", "/" + index + "_write/doc/_bulk");, +        Request explainRequest = new Request("GET", "/" + index + "/" + type + "/" + id + "/_explain");, +        explainRequest.setJsonEntity("{ \"query\": { \"match_all\" : {} }}");, +        explainRequest.setOptions(expectWarnings(RestExplainAction.TYPES_DEPRECATION_MESSAGE));, +        String explanation = toStr(client().performRequest(explainRequest));, +        searchRequest.setEntity(explainRequest.getEntity());, +        Request updateRequest = new Request("POST", "/" + index + "/doc/" + docId + "/_update");, +        Request getRequest = new Request("GET", "/" + index + "/doc/" + docId);, +        getRequest.setOptions(expectWarnings(RestGetAction.TYPES_DEPRECATION_MESSAGE));, +        Map<String, Object> getRsp = entityAsMap(client().performRequest(getRequest));, +        String docLocation = "/" + index + "/doc/1";, +, +        Request request = new Request("GET", docLocation);, +        request.setOptions(expectWarnings(RestGetAction.TYPES_DEPRECATION_MESSAGE));, +        assertThat(toStr(client().performRequest(request)), containsString(doc));, +            templateBuilder.startObject("doc"); {, +                Request request = new Request("POST", "/" + index + "/doc/" + i);, +                    Request request = new Request("POST", "/" + index + "/doc/" + i);, +                    client().performRequest(new Request("DELETE", "/" + index + "/doc/" + i));, +        Request writeToRestoredRequest = new Request("POST", "/restored_" + index + "/doc/_bulk");, +        expectedTemplate.put("mappings", singletonMap("doc", singletonMap("_source", singletonMap("enabled", true))));, +            Request createDocument = new Request("POST", "/" + index + "/doc/" + i);, +        Request request = new Request("PUT", "/info/doc/" + index + "_" + type);, +        Request request = new Request("GET", "/info/doc/" + index + "_" + type);, +        request.setOptions(expectWarnings(RestGetAction.TYPES_DEPRECATION_MESSAGE));, +++ b/qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java, +import org.elasticsearch.rest.action.document.RestGetAction;, +import org.elasticsearch.rest.action.search.RestExplainAction;, +                mappingsAndSettings.startObject("doc");, +                mappingsAndSettings.startObject("doc");, +                mappingsAndSettings.startObject("doc");, +                mappingsAndSettings.startObject("doc");, +                mappingsAndSettings.startObject("doc");, +        Request bulkRequest = new Request("POST", "/" + index + "_write/doc/_bulk");, +        Request explainRequest = new Request("GET", "/" + index + "/" + type + "/" + id + "/_explain");, +        explainRequest.setJsonEntity("{ \"query\": { \"match_all\" : {} }}");, +        explainRequest.setOptions(expectWarnings(RestExplainAction.TYPES_DEPRECATION_MESSAGE));, +        String explanation = toStr(client().performRequest(explainRequest));, +        searchRequest.setEntity(explainRequest.getEntity());, +        Request updateRequest = new Request("POST", "/" + index + "/doc/" + docId + "/_update");, +        Request getRequest = new Request("GET", "/" + index + "/doc/" + docId);, +        getRequest.setOptions(expectWarnings(RestGetAction.TYPES_DEPRECATION_MESSAGE));, +        Map<String, Object> getRsp = entityAsMap(client().performRequest(getRequest));, +        String docLocation = "/" + index + "/doc/1";, +, +        Request request = new Request("GET", docLocation);, +        request.setOptions(expectWarnings(RestGetAction.TYPES_DEPRECATION_MESSAGE));, +        assertThat(toStr(client().performRequest(request)), containsString(doc));, +            templateBuilder.startObject("doc"); {, +                Request request = new Request("POST", "/" + index + "/doc/" + i);, +                    Request request = new Request("POST", "/" + index + "/doc/" + i);, +                    client().performRequest(new Request("DELETE", "/" + index + "/doc/" + i));, +        Request writeToRestoredRequest = new Request("POST", "/restored_" + index + "/doc/_bulk");, +        expectedTemplate.put("mappings", singletonMap("doc", singletonMap("_source", singletonMap("enabled", true))));, +            Request createDocument = new Request("POST", "/" + index + "/doc/" + i);, +        Request request = new Request("PUT", "/info/doc/" + index + "_" + type);, +        Request request = new Request("GET", "/info/doc/" + index + "_" + type);, +        request.setOptions(expectWarnings(RestGetAction.TYPES_DEPRECATION_MESSAGE));, +++ b/qa/mixed-cluster/src/test/java/org/elasticsearch/backwards/IndexingIT.java, +import org.elasticsearch.rest.action.document.RestGetAction;, +            Request request = new Request("PUT", index + "/doc/" + id);, +        Request request = new Request("GET", index + "/doc/" + docId);, +        request.setOptions(expectWarnings(RestGetAction.TYPES_DEPRECATION_MESSAGE));, +, +++ b/qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java, +import org.elasticsearch.rest.action.document.RestGetAction;, +import org.elasticsearch.rest.action.search.RestExplainAction;, +                mappingsAndSettings.startObject("doc");, +                mappingsAndSettings.startObject("doc");, +                mappingsAndSettings.startObject("doc");, +                mappingsAndSettings.startObject("doc");, +                mappingsAndSettings.startObject("doc");, +        Request bulkRequest = new Request("POST", "/" + index + "_write/doc/_bulk");, +        Request explainRequest = new Request("GET", "/" + index + "/" + type + "/" + id + "/_explain");, +        explainRequest.setJsonEntity("{ \"query\": { \"match_all\" : {} }}");, +        explainRequest.setOptions(expectWarnings(RestExplainAction.TYPES_DEPRECATION_MESSAGE));, +        String explanation = toStr(client().performRequest(explainRequest));, +        searchRequest.setEntity(explainRequest.getEntity());, +        Request updateRequest = new Request("POST", "/" + index + "/doc/" + docId + "/_update");, +        Request getRequest = new Request("GET", "/" + index + "/doc/" + docId);, +        getRequest.setOptions(expectWarnings(RestGetAction.TYPES_DEPRECATION_MESSAGE));, +        Map<String, Object> getRsp = entityAsMap(client().performRequest(getRequest));, +        String docLocation = "/" + index + "/doc/1";, +, +        Request request = new Request("GET", docLocation);, +        request.setOptions(expectWarnings(RestGetAction.TYPES_DEPRECATION_MESSAGE));, +        assertThat(toStr(client().performRequest(request)), containsString(doc));, +            templateBuilder.startObject("doc"); {, +                Request request = new Request("POST", "/" + index + "/doc/" + i);, +                    Request request = new Request("POST", "/" + index + "/doc/" + i);, +                    client().performRequest(new Request("DELETE", "/" + index + "/doc/" + i));, +        Request writeToRestoredRequest = new Request("POST", "/restored_" + index + "/doc/_bulk");]