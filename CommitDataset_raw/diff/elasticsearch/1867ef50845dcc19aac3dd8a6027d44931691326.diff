[+++ b/src/main/java/org/elasticsearch/common/lucene/uid/UidField.java, +        super(name, UidFieldMapper.Defaults.FIELD_TYPE);, +++ b/src/main/java/org/elasticsearch/common/lucene/uid/UidField.java, +        super(name, UidFieldMapper.Defaults.FIELD_TYPE);, +++ b/src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java, +        PostingsFormatProvider postingsFormat = mapperService.indexName(field).mapper().postingsFormatProvider();, +++ b/src/main/java/org/elasticsearch/common/lucene/uid/UidField.java, +        super(name, UidFieldMapper.Defaults.FIELD_TYPE);, +++ b/src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java, +        PostingsFormatProvider postingsFormat = mapperService.indexName(field).mapper().postingsFormatProvider();, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +                    FieldType fieldType = new FieldType(IdFieldMapper.Defaults.FIELD_TYPE);, +++ b/src/main/java/org/elasticsearch/common/lucene/uid/UidField.java, +        super(name, UidFieldMapper.Defaults.FIELD_TYPE);, +++ b/src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java, +        PostingsFormatProvider postingsFormat = mapperService.indexName(field).mapper().postingsFormatProvider();, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +                    FieldType fieldType = new FieldType(IdFieldMapper.Defaults.FIELD_TYPE);, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    PostingsFormatProvider postingsFormatProvider();, +++ b/src/main/java/org/elasticsearch/common/lucene/uid/UidField.java, +        super(name, UidFieldMapper.Defaults.FIELD_TYPE);, +++ b/src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java, +        PostingsFormatProvider postingsFormat = mapperService.indexName(field).mapper().postingsFormatProvider();, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +                    FieldType fieldType = new FieldType(IdFieldMapper.Defaults.FIELD_TYPE);, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    PostingsFormatProvider postingsFormatProvider();, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    public abstract FieldType defaultFieldType();, +, +    public PostingsFormatProvider postingsFormatProvider() {, +    protected void doXContentBody(XContentBuilder builder) throws IOException {, +        builder.field("type", contentType());, +        if (!names.name().equals(names.indexNameClean())) {, +            builder.field("index_name", names.indexNameClean());, +        }, +, +        if (boost != 1.0f) {, +            builder.field("boost", boost);, +        }, +, +        FieldType defaultFieldType = defaultFieldType();, +        if (indexed() != defaultFieldType.indexed() ||, +                tokenized() != defaultFieldType.tokenized()) {, +            builder.field("index", indexTokenizeOptionToString(indexed(), tokenized()));, +        }, +        if (stored() != defaultFieldType.stored()) {, +            builder.field("store", stored());, +        }, +        if (storeTermVectors() != defaultFieldType.storeTermVectors()) {, +            builder.field("store_term_vector", storeTermVectors());, +        }, +        if (storeTermVectorOffsets() != defaultFieldType.storeTermVectorOffsets()) {, +            builder.field("store_term_vector_offsets", storeTermVectorOffsets());, +        }, +        if (storeTermVectorPositions() != defaultFieldType.storeTermVectorPositions()) {, +            builder.field("store_term_vector_positions", storeTermVectorPositions());, +        }, +        if (storeTermVectorPayloads() != defaultFieldType.storeTermVectorPayloads()) {, +            builder.field("store_term_vector_payloads", storeTermVectorPayloads());, +        }, +        if (omitNorms() != defaultFieldType.omitNorms()) {, +            builder.field("omit_norms", omitNorms());, +        }, +        if (indexOptions() != defaultFieldType.indexOptions()) {, +            builder.field("index_options", indexOptionToString(indexOptions()));, +        }, +, +        if (indexAnalyzer != null && searchAnalyzer != null && indexAnalyzer.name().equals(searchAnalyzer.name()) && !indexAnalyzer.name().startsWith("_") && !indexAnalyzer.name().equals("default")) {, +            // same analyzers, output it once, +            builder.field("analyzer", indexAnalyzer.name());, +        } else {, +            if (indexAnalyzer != null && !indexAnalyzer.name().startsWith("_") && !indexAnalyzer.name().equals("default")) {, +                builder.field("index_analyzer", indexAnalyzer.name());, +            }, +            if (searchAnalyzer != null && !searchAnalyzer.name().startsWith("_") && !searchAnalyzer.name().equals("default")) {, +                builder.field("search_analyzer", searchAnalyzer.name());, +            }, +        }, +        if (postingsFormat != null) {, +            if (!postingsFormat.name().equals(defaultPostingFormat())) {, +                builder.field("postings_format", postingsFormat.name());, +            }, +        }, +, +        if (similarity() != null) {, +            builder.field("similarity", similarity().name());, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/common/lucene/uid/UidField.java, +        super(name, UidFieldMapper.Defaults.FIELD_TYPE);, +++ b/src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java, +        PostingsFormatProvider postingsFormat = mapperService.indexName(field).mapper().postingsFormatProvider();, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +                    FieldType fieldType = new FieldType(IdFieldMapper.Defaults.FIELD_TYPE);, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    PostingsFormatProvider postingsFormatProvider();, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java]