[+++ b/docs/en/security/securing-communications/setting-up-ssl.asciidoc, +==== Generating Node Certificates, +names (SAN) that correspond to the node's IP address and DNS name so that hostname verification, +line tool, {ref}/certutil.html[`certutil`] has been included with {xpack}. This, +tool takes care of the generating, +a CA and signing certificates with the CA. `certutil` can be used interactively or in a silent, +mode through the use of an input file. The `certutil` tool also supports generation of certificate, +signing requests (CSR), so that a commercial or organization specific CA can be used to sign, +the certificates. For example:, +1. Optional: Create a certificate authority by using the `certutil ca` command., +2. Generate a certificate for each node by using the `certutil cert` command., ++, +--, +NOTE: You should secure the output files, since they contain the private keys, +for your instance., +, +--, +3. Copy the node certificate to the appropriate locations. For each Elastic, +product that you want to configure, copy the certificates to the relevant, +configuration directory. For more information, see, +<<enable-ssl,Configuring security in {es}>>,, +{kibana-ref}/using-kibana-with-security.html[Configuring security in {kib}], and, +{logstash-ref}/ls-security.html[Configuring security in Logstash]., +, +NOTE: If you choose not to use `certutil`, the certificates that you obtain must allow for both, +need to be in PEM or PKCS#12 format. Although not required, it is highly recommended that the certificate contain, +the DNS names and/or IP addresses of the node so that hostname verification can be used., +, +++ b/docs/en/security/securing-communications/setting-up-ssl.asciidoc, +==== Generating Node Certificates, +names (SAN) that correspond to the node's IP address and DNS name so that hostname verification, +line tool, {ref}/certutil.html[`certutil`] has been included with {xpack}. This, +tool takes care of the generating, +a CA and signing certificates with the CA. `certutil` can be used interactively or in a silent, +mode through the use of an input file. The `certutil` tool also supports generation of certificate, +signing requests (CSR), so that a commercial or organization specific CA can be used to sign, +the certificates. For example:, +1. Optional: Create a certificate authority by using the `certutil ca` command., +2. Generate a certificate for each node by using the `certutil cert` command., ++, +--, +NOTE: You should secure the output files, since they contain the private keys, +for your instance., +, +--, +3. Copy the node certificate to the appropriate locations. For each Elastic, +product that you want to configure, copy the certificates to the relevant, +configuration directory. For more information, see, +<<enable-ssl,Configuring security in {es}>>,, +{kibana-ref}/using-kibana-with-security.html[Configuring security in {kib}], and, +{logstash-ref}/ls-security.html[Configuring security in Logstash]., +, +NOTE: If you choose not to use `certutil`, the certificates that you obtain must allow for both, +need to be in PEM or PKCS#12 format. Although not required, it is highly recommended that the certificate contain, +the DNS names and/or IP addresses of the node so that hostname verification can be used., +, +++ b/docs/en/setup/installing-xes.asciidoc, +. Configure Transport Layer Security (TLS/SSL)., +If you have a non-trial license and you want to use {security}, you must, +configure TLS for internode-communication., +, +.. Generate node certificates. For example, you can use the `certutil` command, +line tool to generate a certificate authority (CA) and signed certificates for, +your nodes. For more information, see <<certutil>>., +, +... Generate a new Certificate Authority (CA) for your {es} cluster:, +bin/x-pack/certutil ca, +You can configure the cluster to trust all nodes that have a certificate that, +has been signed by this CA., +The command outputs a single file, with a default name of `elastic-stack-ca.p12`., +This file is a PKCS#12 keystore that contains the public certificate for your CA, +and the private key that is used to sign the certificates for each node., +, +The `certutil` command also prompts you for a password to protect the file and, +key. If you plan to add more nodes to your cluster in the future, retain a copy, +of the file and remember its password., +, +... Generate a certificate and private key for each node in your cluster:, ++, +--, +[source,shell], +----------------------------------------------------------, +bin/x-pack/certutil cert --ca elastic-stack-ca.p12, +----------------------------------------------------------, +The output is a single PKCS#12 keystore that includes the node certificate, node, +key, and CA certificate., +, +You are also prompted for a password. You can enter a password for your, +certificate and key, or you can leave the password blank by pressing Enter., +, +By default `certutil` generates certificates that have no hostname information, +in them (that is, they do not have any Subject Alternative Name fields)., +This means that you can use the certificate for every node in your cluster, but, +you must turn off hostname verification as shown in the configuration below., +, +If you want to use hostname verification within your cluster, run the, +`certutil cert` command once for each of your nodes and provide the `--name`,, +`--dns` and `--ip` options., +--, +... Alternatively, if you want to use a commercial or organization-specific CA,]