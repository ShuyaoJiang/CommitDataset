[+++ b/core/src/main/java/org/elasticsearch/index/query/ScriptQueryBuilder.java, +        final Script script;, +        final SearchScript searchScript;, +            // TODO: Do this if/when we can assume scripts are pure functions, +            // and they have a reliable equals impl, +            /*if (this == obj), +            return Objects.equals(script, other.script);*/, +            return this == obj;, +            // TODO: Do this if/when we can assume scripts are pure functions, +            // and they have a reliable equals impl, +            // return Objects.hash(classHash(), script);, +            return System.identityHashCode(this);, +++ b/core/src/main/java/org/elasticsearch/index/query/ScriptQueryBuilder.java, +        final Script script;, +        final SearchScript searchScript;, +            // TODO: Do this if/when we can assume scripts are pure functions, +            // and they have a reliable equals impl, +            /*if (this == obj), +            return Objects.equals(script, other.script);*/, +            return this == obj;, +            // TODO: Do this if/when we can assume scripts are pure functions, +            // and they have a reliable equals impl, +            // return Objects.hash(classHash(), script);, +            return System.identityHashCode(this);, +++ b/core/src/test/java/org/elasticsearch/index/query/ScriptQueryBuilderTests.java, +import org.elasticsearch.index.query.ScriptQueryBuilder.ScriptQuery;, +    protected boolean builderGeneratesCacheableQueries() {, +        return false;, +    }, +, +    @Override, +        // make sure the query would not get cached, +        ScriptQuery sQuery = (ScriptQuery) query;, +        ScriptQuery clone = new ScriptQuery(sQuery.script, sQuery.searchScript);, +        assertFalse(sQuery.equals(clone));, +        assertFalse(sQuery.hashCode() == clone.hashCode());, +++ b/core/src/main/java/org/elasticsearch/index/query/ScriptQueryBuilder.java, +        final Script script;, +        final SearchScript searchScript;, +            // TODO: Do this if/when we can assume scripts are pure functions, +            // and they have a reliable equals impl, +            /*if (this == obj), +            return Objects.equals(script, other.script);*/, +            return this == obj;, +            // TODO: Do this if/when we can assume scripts are pure functions, +            // and they have a reliable equals impl, +            // return Objects.hash(classHash(), script);, +            return System.identityHashCode(this);, +++ b/core/src/test/java/org/elasticsearch/index/query/ScriptQueryBuilderTests.java, +import org.elasticsearch.index.query.ScriptQueryBuilder.ScriptQuery;, +    protected boolean builderGeneratesCacheableQueries() {, +        return false;, +    }, +, +    @Override, +        // make sure the query would not get cached, +        ScriptQuery sQuery = (ScriptQuery) query;, +        ScriptQuery clone = new ScriptQuery(sQuery.script, sQuery.searchScript);, +        assertFalse(sQuery.equals(clone));, +        assertFalse(sQuery.hashCode() == clone.hashCode());, +++ b/test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java, +     * Whether the queries produced by this builder are expected to be cacheable., +     */, +    protected boolean builderGeneratesCacheableQueries() {, +        return true;, +    }, +, +    /**, +            if (builderGeneratesCacheableQueries()) {, +            }]