[+++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<TimeValue> INDEX_REFRESH_INTERVAL_SETTING = Setting.timeSetting("index.refresh_interval", DEFAULT_REFRESH_INTERVAL, new TimeValue(-1, TimeUnit.MICROSECONDS), true, Setting.Scope.INDEX);, +, +    public static final TimeValue DEFAULT_GC_DELETES = TimeValue.timeValueSeconds(60);, +    public static final Setting<TimeValue> INDEX_GC_DELETES_SETTING = Setting.timeSetting("index.gc_deletes", DEFAULT_GC_DELETES, new TimeValue(-1, TimeUnit.MICROSECONDS), true, Setting.Scope.INDEX);, +        ShardsLimitAllocationDecider.INDEX_TOTAL_SHARDS_PER_NODE_SETTING,, +        IndexSettings.INDEX_GC_DELETES_SETTING, +        scopedSettings.addSettingsUpdateConsumer(INDEX_GC_DELETES_SETTING, this::setGCDeletes);, +        gcDeletesInMillis = scopedSettings.get(INDEX_GC_DELETES_SETTING).getMillis();, +    private void setGCDeletes(TimeValue timeValue) {, +        this.gcDeletesInMillis = timeValue.getMillis();, +    }, +, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<TimeValue> INDEX_REFRESH_INTERVAL_SETTING = Setting.timeSetting("index.refresh_interval", DEFAULT_REFRESH_INTERVAL, new TimeValue(-1, TimeUnit.MICROSECONDS), true, Setting.Scope.INDEX);, +, +    public static final TimeValue DEFAULT_GC_DELETES = TimeValue.timeValueSeconds(60);, +    public static final Setting<TimeValue> INDEX_GC_DELETES_SETTING = Setting.timeSetting("index.gc_deletes", DEFAULT_GC_DELETES, new TimeValue(-1, TimeUnit.MICROSECONDS), true, Setting.Scope.INDEX);, +        ShardsLimitAllocationDecider.INDEX_TOTAL_SHARDS_PER_NODE_SETTING,, +        IndexSettings.INDEX_GC_DELETES_SETTING, +        scopedSettings.addSettingsUpdateConsumer(INDEX_GC_DELETES_SETTING, this::setGCDeletes);, +        gcDeletesInMillis = scopedSettings.get(INDEX_GC_DELETES_SETTING).getMillis();, +    private void setGCDeletes(TimeValue timeValue) {, +        this.gcDeletesInMillis = timeValue.getMillis();, +    }, +, +++ b/core/src/test/java/org/elasticsearch/index/IndexSettingsTests.java, +    }, +    public void testGCDeletesSetting() {, +        TimeValue gcDeleteSetting = new TimeValue(Math.abs(randomInt()), TimeUnit.MILLISECONDS);, +        IndexMetaData metaData = newIndexMeta("index", Settings.settingsBuilder(), +            .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT), +            .put(IndexSettings.INDEX_GC_DELETES_SETTING.getKey(), gcDeleteSetting.getStringRep()), +            .build());, +        IndexSettings settings = new IndexSettings(metaData, Settings.EMPTY);, +        assertEquals(TimeValue.parseTimeValue(gcDeleteSetting.getStringRep(), new TimeValue(1, TimeUnit.DAYS), IndexSettings.INDEX_GC_DELETES_SETTING.getKey()).getMillis(), settings.getGcDeletesInMillis());, +        TimeValue newGCDeleteSetting = new TimeValue(Math.abs(randomInt()), TimeUnit.MILLISECONDS);, +        settings.updateIndexMetaData(newIndexMeta("index", Settings.builder().put(IndexSettings.INDEX_GC_DELETES_SETTING.getKey(), newGCDeleteSetting.getStringRep()).build()));, +        assertEquals(TimeValue.parseTimeValue(newGCDeleteSetting.getStringRep(), new TimeValue(1, TimeUnit.DAYS), IndexSettings.INDEX_GC_DELETES_SETTING.getKey()).getMillis(), settings.getGcDeletesInMillis());, +, +        try {, +            settings.updateIndexMetaData(newIndexMeta("index", Settings.builder().put(IndexSettings.INDEX_GC_DELETES_SETTING.getKey(), new TimeValue(-1, TimeUnit.MILLISECONDS)).build()));, +            fail();, +        } catch (IllegalArgumentException e) {, +            // expected, +        }, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<TimeValue> INDEX_REFRESH_INTERVAL_SETTING = Setting.timeSetting("index.refresh_interval", DEFAULT_REFRESH_INTERVAL, new TimeValue(-1, TimeUnit.MICROSECONDS), true, Setting.Scope.INDEX);, +, +    public static final TimeValue DEFAULT_GC_DELETES = TimeValue.timeValueSeconds(60);, +    public static final Setting<TimeValue> INDEX_GC_DELETES_SETTING = Setting.timeSetting("index.gc_deletes", DEFAULT_GC_DELETES, new TimeValue(-1, TimeUnit.MICROSECONDS), true, Setting.Scope.INDEX);, +        ShardsLimitAllocationDecider.INDEX_TOTAL_SHARDS_PER_NODE_SETTING,, +        IndexSettings.INDEX_GC_DELETES_SETTING, +        scopedSettings.addSettingsUpdateConsumer(INDEX_GC_DELETES_SETTING, this::setGCDeletes);, +        gcDeletesInMillis = scopedSettings.get(INDEX_GC_DELETES_SETTING).getMillis();, +    private void setGCDeletes(TimeValue timeValue) {, +        this.gcDeletesInMillis = timeValue.getMillis();, +    }, +, +++ b/core/src/test/java/org/elasticsearch/index/IndexSettingsTests.java, +    }, +    public void testGCDeletesSetting() {, +        TimeValue gcDeleteSetting = new TimeValue(Math.abs(randomInt()), TimeUnit.MILLISECONDS);, +        IndexMetaData metaData = newIndexMeta("index", Settings.settingsBuilder(), +            .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT), +            .put(IndexSettings.INDEX_GC_DELETES_SETTING.getKey(), gcDeleteSetting.getStringRep()), +            .build());, +        IndexSettings settings = new IndexSettings(metaData, Settings.EMPTY);, +        assertEquals(TimeValue.parseTimeValue(gcDeleteSetting.getStringRep(), new TimeValue(1, TimeUnit.DAYS), IndexSettings.INDEX_GC_DELETES_SETTING.getKey()).getMillis(), settings.getGcDeletesInMillis());, +        TimeValue newGCDeleteSetting = new TimeValue(Math.abs(randomInt()), TimeUnit.MILLISECONDS);, +        settings.updateIndexMetaData(newIndexMeta("index", Settings.builder().put(IndexSettings.INDEX_GC_DELETES_SETTING.getKey(), newGCDeleteSetting.getStringRep()).build()));, +        assertEquals(TimeValue.parseTimeValue(newGCDeleteSetting.getStringRep(), new TimeValue(1, TimeUnit.DAYS), IndexSettings.INDEX_GC_DELETES_SETTING.getKey()).getMillis(), settings.getGcDeletesInMillis());, +, +        try {, +            settings.updateIndexMetaData(newIndexMeta("index", Settings.builder().put(IndexSettings.INDEX_GC_DELETES_SETTING.getKey(), new TimeValue(-1, TimeUnit.MILLISECONDS)).build()));, +            fail();, +        } catch (IllegalArgumentException e) {, +            // expected, +        }, +++ b/core/src/test/java/org/elasticsearch/index/engine/InternalEngineSettingsTests.java, +            assertEquals(gcDeletes, build.getAsTime(IndexSettings.INDEX_GC_DELETES_SETTING.getKey(), null).millis());]