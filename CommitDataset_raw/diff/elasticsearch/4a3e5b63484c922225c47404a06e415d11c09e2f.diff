[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cache/NodeCache.java, +import org.elasticsearch.cluster.ClusterChangedEvent;, +import org.elasticsearch.cluster.ClusterService;, +import org.elasticsearch.cluster.ClusterStateListener;, +public class NodeCache extends AbstractComponent implements ClusterStateListener {, +, +    private final ClusterService clusterService;, +    @Inject public NodeCache(Settings settings, ByteBufferCache byteBufferCache, QueryParserCache queryParserCache, ClusterService clusterService) {, +        this.clusterService = clusterService;, +        clusterService.add(this);, +        clusterService.remove(this);, +        queryParserCache.clear();, +, +    // listen on cluster change events to invalidate the query parser cache, +    @Override public void clusterChanged(ClusterChangedEvent event) {, +        // TODO we can do better by detecting just mappings changes, +        if (event.metaDataChanged()) {, +            queryParserCache.clear();, +        }, +    }]