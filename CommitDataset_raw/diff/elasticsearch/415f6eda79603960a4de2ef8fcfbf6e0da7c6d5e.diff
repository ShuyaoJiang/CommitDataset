[+++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/Exporter.java, +    public abstract void start();, +, +    public abstract void stop();, +, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/Exporter.java, +    public abstract void start();, +, +    public abstract void stop();, +, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/Exporters.java, +, +        ElasticsearchException exception = null;, +        for (Exporter exporter : exporters) {, +            try {, +                exporter.start();, +            } catch (Exception e) {, +                logger.error("exporter [{}] failed to start", e, exporter.name());, +                if (exception == null) {, +                    exception = new ElasticsearchException("failed to start exporters");, +                }, +                exception.addSuppressed(e);, +            }, +        }, +        if (exception != null) {, +            throw exception;, +        }, +                exporter.stop();, +            } catch (Exception e) {, +                logger.error("exporter [{}] failed to stop", e, exporter.name());, +                if (exception == null) {, +                    exception = new ElasticsearchException("failed to stop exporters");, +                }, +                exception.addSuppressed(e);, +            }, +        }, +        if (exception != null) {, +            throw exception;, +        }, +    }, +, +, +    @Override, +    protected void doClose() {, +        ElasticsearchException exception = null;, +        for (Exporter exporter : exporters) {, +            try {, +        exporters.start(logger);, +    // TODO only rebuild the exporters that need to be updated according to settings, +        void start(ESLogger logger) {, +            for (Exporter exporter : exporters.values()) {, +                try {, +                    exporter.start();, +                } catch (Exception e) {, +                    logger.error("failed to start exporter [{}]", e, exporter.name());, +                }, +            }, +        }, +, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/Exporter.java, +    public abstract void start();, +, +    public abstract void stop();, +, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/Exporters.java, +, +        ElasticsearchException exception = null;, +        for (Exporter exporter : exporters) {, +            try {, +                exporter.start();, +            } catch (Exception e) {, +                logger.error("exporter [{}] failed to start", e, exporter.name());, +                if (exception == null) {, +                    exception = new ElasticsearchException("failed to start exporters");, +                }, +                exception.addSuppressed(e);, +            }, +        }, +        if (exception != null) {, +            throw exception;, +        }, +                exporter.stop();, +            } catch (Exception e) {, +                logger.error("exporter [{}] failed to stop", e, exporter.name());, +                if (exception == null) {, +                    exception = new ElasticsearchException("failed to stop exporters");, +                }, +                exception.addSuppressed(e);, +            }, +        }, +        if (exception != null) {, +            throw exception;, +        }, +    }, +, +, +    @Override, +    protected void doClose() {, +        ElasticsearchException exception = null;, +        for (Exporter exporter : exporters) {]