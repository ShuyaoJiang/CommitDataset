[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/network/NetworkUtils.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +import org.elasticsearch.common.collect.Lists;, +import java.lang.reflect.Method;, +, +        List<NetworkInterface> intfsList = Lists.newArrayList();, +            intfsList.add((NetworkInterface) intfs.nextElement());, +        }, +, +        // order by index, assuming first ones are more interesting, +        try {, +            final Method getIndexMethod = NetworkInterface.class.getDeclaredMethod("getIndex");, +            getIndexMethod.setAccessible(true);, +, +            Collections.sort(intfsList, new Comparator<NetworkInterface>() {, +                @Override public int compare(NetworkInterface o1, NetworkInterface o2) {, +                    try {, +                        return ((Integer) getIndexMethod.invoke(o1)).intValue() - ((Integer) getIndexMethod.invoke(o2)).intValue();, +                    } catch (Exception e) {, +                        throw new ElasticSearchIllegalStateException("failed to fetch index of network interface");, +                    }, +                }, +            });, +        } catch (Exception e) {, +            // ignore, +        }, +, +        for (NetworkInterface intf : intfsList) {, +]