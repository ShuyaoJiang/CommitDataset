[+++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +     * @throws  FileAlreadyExistsException if a blob by the same name already exists, +     * @throws  IOException if the input stream could not be read, or the target blob could not be written to., +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +     * @throws  FileAlreadyExistsException if a blob by the same name already exists, +     * @throws  IOException if the input stream could not be read, or the target blob could not be written to., +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +        if (blobExists(blobName)) {, +            throw new FileAlreadyExistsException("blob [" + blobName + "] already exists, cannot overwrite");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +     * @throws  FileAlreadyExistsException if a blob by the same name already exists, +     * @throws  IOException if the input stream could not be read, or the target blob could not be written to., +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +        if (blobExists(blobName)) {, +            throw new FileAlreadyExistsException("blob [" + blobName + "] already exists, cannot overwrite");, +        }, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +        if (blobExists(blobName)) {, +            throw new FileAlreadyExistsException("blob [" + blobName + "] already exists, cannot overwrite");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +     * @throws  FileAlreadyExistsException if a blob by the same name already exists, +     * @throws  IOException if the input stream could not be read, or the target blob could not be written to., +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +        if (blobExists(blobName)) {, +            throw new FileAlreadyExistsException("blob [" + blobName + "] already exists, cannot overwrite");, +        }, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +        if (blobExists(blobName)) {, +            throw new FileAlreadyExistsException("blob [" + blobName + "] already exists, cannot overwrite");, +        }, +++ b/plugins/repository-gcs/src/main/java/org/elasticsearch/common/blobstore/gcs/GoogleCloudStorageBlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +        if (blobExists(blobName)) {, +            throw new FileAlreadyExistsException("blob [" + blobName + "] already exists, cannot overwrite");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +     * @throws  FileAlreadyExistsException if a blob by the same name already exists, +     * @throws  IOException if the input stream could not be read, or the target blob could not be written to., +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +        if (blobExists(blobName)) {, +            throw new FileAlreadyExistsException("blob [" + blobName + "] already exists, cannot overwrite");, +        }, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +        if (blobExists(blobName)) {, +            throw new FileAlreadyExistsException("blob [" + blobName + "] already exists, cannot overwrite");, +        }, +++ b/plugins/repository-gcs/src/main/java/org/elasticsearch/common/blobstore/gcs/GoogleCloudStorageBlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +        if (blobExists(blobName)) {, +            throw new FileAlreadyExistsException("blob [" + blobName + "] already exists, cannot overwrite");, +        }, +++ b/plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsBlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +        if (blobExists(blobName)) {, +            throw new FileAlreadyExistsException("blob [" + blobName + "] already exists, cannot overwrite");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +     * @throws  FileAlreadyExistsException if a blob by the same name already exists, +     * @throws  IOException if the input stream could not be read, or the target blob could not be written to., +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +        if (blobExists(blobName)) {, +            throw new FileAlreadyExistsException("blob [" + blobName + "] already exists, cannot overwrite");, +        }, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +        if (blobExists(blobName)) {, +            throw new FileAlreadyExistsException("blob [" + blobName + "] already exists, cannot overwrite");, +        }, +++ b/plugins/repository-gcs/src/main/java/org/elasticsearch/common/blobstore/gcs/GoogleCloudStorageBlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +        if (blobExists(blobName)) {, +            throw new FileAlreadyExistsException("blob [" + blobName + "] already exists, cannot overwrite");, +        }, +++ b/plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsBlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +        if (blobExists(blobName)) {, +            throw new FileAlreadyExistsException("blob [" + blobName + "] already exists, cannot overwrite");, +        }, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobContainer.java, +import java.nio.file.FileAlreadyExistsException;, +        if (blobExists(blobName)) {, +            throw new FileAlreadyExistsException("blob [" + blobName + "] already exists, cannot overwrite");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java]