[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/TransportRolloverAction.java, +import org.elasticsearch.indices.IndexAlreadyExistsException;, +        final String unresolvedName = (rolloverRequest.getNewIndexName() != null), +            ? rolloverRequest.getNewIndexName(), +            : generateRolloverIndexName(sourceProvidedName, indexNameExpressionResolver);, +        final String rolloverIndexName = indexNameExpressionResolver.resolveDateMathExpression(unresolvedName);, +        MetaDataCreateIndexService.validateIndexName(rolloverIndexName, state); // will fail if the index already exists, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/TransportRolloverAction.java, +import org.elasticsearch.indices.IndexAlreadyExistsException;, +        final String unresolvedName = (rolloverRequest.getNewIndexName() != null), +            ? rolloverRequest.getNewIndexName(), +            : generateRolloverIndexName(sourceProvidedName, indexNameExpressionResolver);, +        final String rolloverIndexName = indexNameExpressionResolver.resolveDateMathExpression(unresolvedName);, +        MetaDataCreateIndexService.validateIndexName(rolloverIndexName, state); // will fail if the index already exists, +, +++ b/rest-api-spec/src/main/resources/rest-api-spec/api/indices.rollover.json, +        "dry_run": {, +          "type" : "boolean",, +          "description" : "If set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false", +        },, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/TransportRolloverAction.java, +import org.elasticsearch.indices.IndexAlreadyExistsException;, +        final String unresolvedName = (rolloverRequest.getNewIndexName() != null), +            ? rolloverRequest.getNewIndexName(), +            : generateRolloverIndexName(sourceProvidedName, indexNameExpressionResolver);, +        final String rolloverIndexName = indexNameExpressionResolver.resolveDateMathExpression(unresolvedName);, +        MetaDataCreateIndexService.validateIndexName(rolloverIndexName, state); // will fail if the index already exists, +, +++ b/rest-api-spec/src/main/resources/rest-api-spec/api/indices.rollover.json, +        "dry_run": {, +          "type" : "boolean",, +          "description" : "If set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false", +        },, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/indices.rollover/10_basic.yaml, +---, +"Rollover with dry-run but target index exists":, +, +  - skip:, +        version: " - 5.0.0", +        reason:  bug fixed in 5.0.1 - dry run was returning just fine even if the index exists, +, +  # create index with alias, +  - do:, +      indices.create:, +        index: logs-1, +        wait_for_active_shards: 1, +        body:, +          aliases:, +            logs_index: {}, +            logs_search: {}, +, +  - do:, +      indices.create:, +        index: logs-000002, +, +  - do:, +      catch: /index_already_exists_exception/, +      indices.rollover:, +        dry_run: true, +        alias: "logs_search", +        wait_for_active_shards: 1, +        body:, +          conditions:, +            max_docs: 1, +, +  # also do it without dry_run, +  - do:, +      catch: /index_already_exists_exception/, +      indices.rollover:, +        dry_run: false, +        alias: "logs_search", +        wait_for_active_shards: 1, +        body:, +          conditions:, +            max_docs: 1, +, +  - do:, +      catch: /invalid_index_name_exception/, +      indices.rollover:, +        new_index: invalid|index|name, +        dry_run: true, +        alias: "logs_search", +        wait_for_active_shards: 1, +        body:, +          conditions:, +            max_docs: 1, +]