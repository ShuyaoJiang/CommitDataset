[+++ b/core/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/TermsQueryParser.java, +    private static final ParseField EXECUTION_FIELD = new ParseField("execution").withAllDeprecated("execution is deprecated and has no effect");, +                if (parseContext.parseFieldMatcher().match(currentFieldName, EXECUTION_FIELD)) {, +++ b/core/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/TermsQueryParser.java, +    private static final ParseField EXECUTION_FIELD = new ParseField("execution").withAllDeprecated("execution is deprecated and has no effect");, +                if (parseContext.parseFieldMatcher().match(currentFieldName, EXECUTION_FIELD)) {, +++ b/core/src/test/java/org/elasticsearch/indices/template/SimpleIndexTemplateIT.java, +                        .filter(QueryBuilders.termsQuery("_type",  "typeX", "typeY", "typeZ"))), +++ b/core/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/TermsQueryParser.java, +    private static final ParseField EXECUTION_FIELD = new ParseField("execution").withAllDeprecated("execution is deprecated and has no effect");, +                if (parseContext.parseFieldMatcher().match(currentFieldName, EXECUTION_FIELD)) {, +++ b/core/src/test/java/org/elasticsearch/indices/template/SimpleIndexTemplateIT.java, +                        .filter(QueryBuilders.termsQuery("_type",  "typeX", "typeY", "typeZ"))), +++ b/core/src/test/java/org/elasticsearch/search/query/SearchQueryIT.java, +    public void testTermsQuery() throws Exception {, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("str", "1", "4"))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("lng", new long[] {2, 3}))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("dbl", new double[]{2, 3}))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("lng", new int[] {1, 3}))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("dbl", new float[] {2, 4}))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("str", "2", "5"))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("dbl", new double[] {2, 5}))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("lng", new long[] {2, 5}))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("str", "5", "6"))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("dbl", new double[] {5, 6}))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("lng", new long[] {5, 6}))).get();, +++ b/core/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/TermsQueryParser.java, +    private static final ParseField EXECUTION_FIELD = new ParseField("execution").withAllDeprecated("execution is deprecated and has no effect");, +                if (parseContext.parseFieldMatcher().match(currentFieldName, EXECUTION_FIELD)) {, +++ b/core/src/test/java/org/elasticsearch/indices/template/SimpleIndexTemplateIT.java, +                        .filter(QueryBuilders.termsQuery("_type",  "typeX", "typeY", "typeZ"))), +++ b/core/src/test/java/org/elasticsearch/search/query/SearchQueryIT.java, +    public void testTermsQuery() throws Exception {, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("str", "1", "4"))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("lng", new long[] {2, 3}))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("dbl", new double[]{2, 3}))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("lng", new int[] {1, 3}))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("dbl", new float[] {2, 4}))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("str", "2", "5"))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("dbl", new double[] {2, 5}))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("lng", new long[] {2, 5}))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("str", "5", "6"))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("dbl", new double[] {5, 6}))).get();, +                .setQuery(filteredQuery(matchAllQuery(), termsQuery("lng", new long[] {5, 6}))).get();, +++ b/docs/reference/migration/migrate_2_0/java.asciidoc, +==== TermsQueryBuilder execution removed, +, +The `TermsQueryBuilder#execution` method has been removed as it has no effect, it is ignored by the, + corresponding parser.]