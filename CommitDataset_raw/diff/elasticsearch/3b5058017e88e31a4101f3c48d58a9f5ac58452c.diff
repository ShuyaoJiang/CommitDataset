[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeRequest.java, + * A request to upgrade one or more indices. In order to update all indices, pass an empty array or, +     * @param indices The indices to upgrade, no indices passed means all indices will be optimized., +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeRequest.java, + * A request to upgrade one or more indices. In order to update all indices, pass an empty array or, +     * @param indices The indices to upgrade, no indices passed means all indices will be optimized., +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeResponse.java, + * A response for the upgrade action., +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeRequest.java, + * A request to upgrade one or more indices. In order to update all indices, pass an empty array or, +     * @param indices The indices to upgrade, no indices passed means all indices will be optimized., +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeResponse.java, + * A response for the upgrade action., +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +     * Force merges to 1 segment, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeRequest.java, + * A request to upgrade one or more indices. In order to update all indices, pass an empty array or, +     * @param indices The indices to upgrade, no indices passed means all indices will be optimized., +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeResponse.java, + * A response for the upgrade action., +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +     * Force merges to 1 segment, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +        // we just want to upgrade the segments, not actually forge merge to a single segment, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeRequest.java, + * A request to upgrade one or more indices. In order to update all indices, pass an empty array or, +     * @param indices The indices to upgrade, no indices passed means all indices will be optimized., +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeResponse.java, + * A response for the upgrade action., +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +     * Force merges to 1 segment, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +        // we just want to upgrade the segments, not actually forge merge to a single segment, +++ b/core/src/main/java/org/elasticsearch/index/shard/MergePolicyConfig.java, + *     Maximum number of segments to be merged at a time, during force merge or, + *     force merge). This setting is approximate: the estimate of the merged, + *     segment size is made by summing sizes of to-be-merged segments, + *     (compensating for percent deleted docs). Default is <code>5gb</code>., +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeRequest.java, + * A request to upgrade one or more indices. In order to update all indices, pass an empty array or, +     * @param indices The indices to upgrade, no indices passed means all indices will be optimized., +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeResponse.java, + * A response for the upgrade action., +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +     * Force merges to 1 segment, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +        // we just want to upgrade the segments, not actually forge merge to a single segment, +++ b/core/src/main/java/org/elasticsearch/index/shard/MergePolicyConfig.java, + *     Maximum number of segments to be merged at a time, during force merge or, + *     force merge). This setting is approximate: the estimate of the merged, + *     segment size is made by summing sizes of to-be-merged segments, + *     (compensating for percent deleted docs). Default is <code>5gb</code>., +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/forcemerge/RestForceMergeAction.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeRequest.java, + * A request to upgrade one or more indices. In order to update all indices, pass an empty array or, +     * @param indices The indices to upgrade, no indices passed means all indices will be optimized., +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeResponse.java, + * A response for the upgrade action., +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +     * Force merges to 1 segment, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +        // we just want to upgrade the segments, not actually forge merge to a single segment, +++ b/core/src/main/java/org/elasticsearch/index/shard/MergePolicyConfig.java, + *     Maximum number of segments to be merged at a time, during force merge or, + *     force merge). This setting is approximate: the estimate of the merged, + *     segment size is made by summing sizes of to-be-merged segments, + *     (compensating for percent deleted docs). Default is <code>5gb</code>., +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/forcemerge/RestForceMergeAction.java, +++ b/core/src/test/java/org/elasticsearch/test/rest/test/FileUtilsTests.java, +        yamlSuites = FileUtils.findYamlSuites(null, "/rest-api-spec/test", "indices.forcemerge/10_basic", "index");, +        assertThat(yamlSuites.containsKey("indices.forcemerge"), equalTo(true));, +        assertThat(yamlSuites.get("indices.forcemerge").size(), equalTo(1));, +        assertSingleFile(yamlSuites.get("indices.forcemerge"), "indices.forcemerge", "10_basic.yaml");, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeRequest.java, + * A request to upgrade one or more indices. In order to update all indices, pass an empty array or, +     * @param indices The indices to upgrade, no indices passed means all indices will be optimized., +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeResponse.java, + * A response for the upgrade action., +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +     * Force merges to 1 segment, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +        // we just want to upgrade the segments, not actually forge merge to a single segment, +++ b/core/src/main/java/org/elasticsearch/index/shard/MergePolicyConfig.java, + *     Maximum number of segments to be merged at a time, during force merge or, + *     force merge). This setting is approximate: the estimate of the merged, + *     segment size is made by summing sizes of to-be-merged segments, + *     (compensating for percent deleted docs). Default is <code>5gb</code>., +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/forcemerge/RestForceMergeAction.java, +++ b/core/src/test/java/org/elasticsearch/test/rest/test/FileUtilsTests.java, +        yamlSuites = FileUtils.findYamlSuites(null, "/rest-api-spec/test", "indices.forcemerge/10_basic", "index");, +        assertThat(yamlSuites.containsKey("indices.forcemerge"), equalTo(true));, +        assertThat(yamlSuites.get("indices.forcemerge").size(), equalTo(1));, +        assertSingleFile(yamlSuites.get("indices.forcemerge"), "indices.forcemerge", "10_basic.yaml");, +++ b/docs/reference/indices.asciidoc, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeRequest.java, + * A request to upgrade one or more indices. In order to update all indices, pass an empty array or, +     * @param indices The indices to upgrade, no indices passed means all indices will be optimized., +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/post/UpgradeResponse.java, + * A response for the upgrade action., +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java]