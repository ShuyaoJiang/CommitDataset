[+++ b/core/src/main/java/org/elasticsearch/plugins/PluginManager.java, +    private static final ImmutableSet<String> BLACKLIST = ImmutableSet.<String>builder(), +    private static final ImmutableSet<String> OFFICIAL_PLUGINS = ImmutableSet.<String>builder(), +            .add(, +                    "elasticsearch-analysis-icu",, +                    "elasticsearch-analysis-kuromoji",, +                    "elasticsearch-analysis-phonetic",, +                    "elasticsearch-analysis-smartcn",, +                    "elasticsearch-analysis-stempel",, +                    "elasticsearch-cloud-aws",, +                    "elasticsearch-cloud-azure",, +                    "elasticsearch-cloud-gce",, +                    "elasticsearch-delete-by-query",, +                    "elasticsearch-lang-javascript",, +                    "elasticsearch-lang-python", +            ).build();, +, +        } else {, +            if (PluginHandle.isOfficialPlugin(pluginHandle.repo, pluginHandle.user, pluginHandle.version)) {, +                checkForOfficialPlugins(pluginHandle.name);, +            }, +    protected static void checkForOfficialPlugins(String name) {, +        // We make sure that users can use only new short naming for official plugins only, +        if (!OFFICIAL_PLUGINS.contains(name)) {, +            throw new IllegalArgumentException(name +, +                    " is not an official plugin so you should install it using elasticsearch/" +, +                    name + "/latest naming form.");, +        }, +    }, +, +        SysOut.println("     elasticsearch-plugin-name    for Elasticsearch 2.0 Core plugin (download from download.elastic.co)");, +        SysOut.println("     elasticsearch/plugin/version for elasticsearch commercial plugins (download from download.elastic.co)");, +        SysOut.newline();, +        SysOut.println("Elasticsearch Core plugins:");, +        for (String o : OFFICIAL_PLUGINS) {, +            SysOut.println(" - " + o);, +        }, +                // Elasticsearch new download service uses groupId org.elasticsearch.plugins from 2.0.0, +                if (user == null) {, +                    // TODO Update to https, +                    addUrl(urls, String.format(Locale.ROOT, "http://download.elastic.co/org.elasticsearch.plugins/%1$s/%1$s-%2$s.zip", repo, version));, +                } else {, +                    // Elasticsearch old download service, +                    // TODO Update to https, +                    addUrl(urls, String.format(Locale.ROOT, "http://download.elastic.co/%1$s/%2$s/%2$s-%3$s.zip", user, repo, version));, +                    addUrl(urls, String.format(Locale.ROOT, "http://search.maven.org/remotecontent?filepath=%1$s/%2$s/%3$s/%2$s-%3$s.zip", user.replace('.', '/'), repo, version));, +                    addUrl(urls, String.format(Locale.ROOT, "https://oss.sonatype.org/service/local/repositories/releases/content/%1$s/%2$s/%3$s/%2$s-%3$s.zip", user.replace('.', '/'), repo, version));, +                    addUrl(urls, String.format(Locale.ROOT, "https://github.com/%1$s/%2$s/archive/%3$s.zip", user, repo, version));, +            }, +            if (user != null) {, +                addUrl(urls, String.format(Locale.ROOT, "https://github.com/%1$s/%2$s/archive/master.zip", user, repo));, +            }, +            if (isOfficialPlugin(repo, user, version)) {, +                return new PluginHandle(repo, Version.CURRENT.number(), null, repo);, +            }, +, +, +        static boolean isOfficialPlugin(String repo, String user, String version) {, +            return version == null && user == null && !Strings.isNullOrEmpty(repo);, +        }, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginManager.java, +    private static final ImmutableSet<String> BLACKLIST = ImmutableSet.<String>builder(), +    private static final ImmutableSet<String> OFFICIAL_PLUGINS = ImmutableSet.<String>builder(), +            .add(, +                    "elasticsearch-analysis-icu",, +                    "elasticsearch-analysis-kuromoji",, +                    "elasticsearch-analysis-phonetic",, +                    "elasticsearch-analysis-smartcn",, +                    "elasticsearch-analysis-stempel",, +                    "elasticsearch-cloud-aws",, +                    "elasticsearch-cloud-azure",, +                    "elasticsearch-cloud-gce",, +                    "elasticsearch-delete-by-query",, +                    "elasticsearch-lang-javascript",, +                    "elasticsearch-lang-python", +            ).build();, +, +        } else {, +            if (PluginHandle.isOfficialPlugin(pluginHandle.repo, pluginHandle.user, pluginHandle.version)) {, +                checkForOfficialPlugins(pluginHandle.name);, +            }, +    protected static void checkForOfficialPlugins(String name) {, +        // We make sure that users can use only new short naming for official plugins only, +        if (!OFFICIAL_PLUGINS.contains(name)) {, +            throw new IllegalArgumentException(name +, +                    " is not an official plugin so you should install it using elasticsearch/" +, +                    name + "/latest naming form.");, +        }, +    }, +, +        SysOut.println("     elasticsearch-plugin-name    for Elasticsearch 2.0 Core plugin (download from download.elastic.co)");, +        SysOut.println("     elasticsearch/plugin/version for elasticsearch commercial plugins (download from download.elastic.co)");, +        SysOut.newline();, +        SysOut.println("Elasticsearch Core plugins:");, +        for (String o : OFFICIAL_PLUGINS) {, +            SysOut.println(" - " + o);, +        }, +                // Elasticsearch new download service uses groupId org.elasticsearch.plugins from 2.0.0, +                if (user == null) {, +                    // TODO Update to https]