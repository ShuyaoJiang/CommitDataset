[+++ b/test/framework/src/main/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java, +            BytesReference orig;, +            try {, +                orig = serialize(version, streamable);, +            } catch (IllegalArgumentException e) {, +                // Can't serialize with this version so skip this test., +                return;, +            }, +++ b/test/framework/src/main/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java, +            BytesReference orig;, +            try {, +                orig = serialize(version, streamable);, +            } catch (IllegalArgumentException e) {, +                // Can't serialize with this version so skip this test., +                return;, +            }, +++ b/test/framework/src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertionsTests.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.test.hamcrest;, +, +import org.elasticsearch.Version;, +import org.elasticsearch.common.io.stream.NamedWriteableRegistry;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.io.stream.Streamable;, +import org.elasticsearch.test.ESTestCase;, +, +import java.io.IOException;, +, +import static java.util.Collections.emptyList;, +import static org.elasticsearch.test.VersionUtils.randomVersion;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertVersionSerializable;, +, +public class ElasticsearchAssertionsTests extends ESTestCase {, +    public void testAssertVersionSerializableIsOkWithIllegalArgumentException() {, +        Version version = randomVersion(random());, +        NamedWriteableRegistry registry = new NamedWriteableRegistry(emptyList());, +        Streamable testStreamable = new TestStreamable();, +, +        // Should catch the exception and do nothing., +        assertVersionSerializable(version, testStreamable, registry);, +    }, +, +    public static class TestStreamable implements Streamable {, +        @Override, +        public void readFrom(StreamInput in) throws IOException {, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            throw new IllegalArgumentException("Not supported.");, +        }, +    }, +}]