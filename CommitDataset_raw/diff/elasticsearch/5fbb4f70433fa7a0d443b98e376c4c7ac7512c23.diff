[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/IndexQueryParserModule.java, +import org.elasticsearch.common.collect.Maps;, +    private final Map<String, Class<? extends QueryParser>> queries = Maps.newHashMap();, +    private final Map<String, Class<? extends FilterParser>> filters = Maps.newHashMap();, +    /**, +     * Adds a custom query parser., +     *, +     * @param name        The name of the query parser, +     * @param queryParser the class of the query parser, +     */, +    public void addQueryParser(String name, Class<? extends QueryParser> queryParser) {, +        queries.put(name, queryParser);, +    }, +, +    /**, +     * Adds a custom filter parser., +     *, +     * @param name         The name of the filter parser, +     * @param filterParser the class of the filter parser, +     */, +    public void addFilterParser(String name, Class<? extends FilterParser> filterParser) {, +        filters.put(name, filterParser);, +    }, +, +        for (Map.Entry<String, Class<? extends QueryParser>> entry : queries.entrySet()) {, +            queryBinder.addBinding(entry.getKey()).toProvider(FactoryProvider.newFactory(QueryParserFactory.class, entry.getValue())).in(Scopes.SINGLETON);, +        }, +, +, +        for (Map.Entry<String, Class<? extends FilterParser>> entry : filters.entrySet()) {, +            filterBinder.addBinding(entry.getKey()).toProvider(FactoryProvider.newFactory(FilterParserFactory.class, entry.getValue())).in(Scopes.SINGLETON);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/IndexQueryParserModule.java, +import org.elasticsearch.common.collect.Maps;, +    private final Map<String, Class<? extends QueryParser>> queries = Maps.newHashMap();, +    private final Map<String, Class<? extends FilterParser>> filters = Maps.newHashMap();, +    /**, +     * Adds a custom query parser., +     *, +     * @param name        The name of the query parser, +     * @param queryParser the class of the query parser, +     */, +    public void addQueryParser(String name, Class<? extends QueryParser> queryParser) {, +        queries.put(name, queryParser);, +    }, +, +    /**, +     * Adds a custom filter parser., +     *, +     * @param name         The name of the filter parser, +     * @param filterParser the class of the filter parser, +     */, +    public void addFilterParser(String name, Class<? extends FilterParser> filterParser) {, +        filters.put(name, filterParser);, +    }, +, +        for (Map.Entry<String, Class<? extends QueryParser>> entry : queries.entrySet()) {, +            queryBinder.addBinding(entry.getKey()).toProvider(FactoryProvider.newFactory(QueryParserFactory.class, entry.getValue())).in(Scopes.SINGLETON);, +        }, +, +, +        for (Map.Entry<String, Class<? extends FilterParser>> entry : filters.entrySet()) {, +            filterBinder.addBinding(entry.getKey()).toProvider(FactoryProvider.newFactory(FilterParserFactory.class, entry.getValue())).in(Scopes.SINGLETON);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/indices/query/IndicesQueriesRegistry.java, +    private ImmutableMap<String, QueryParser> queryParsers;, +    private ImmutableMap<String, FilterParser> filterParsers;, +        Map<String, QueryParser> queryParsers = Maps.newHashMap();, +        Map<String, FilterParser> filterParsers = Maps.newHashMap();, +    /**, +     * Adds a global query parser., +     */, +    public void addQueryParser(QueryParser queryParser) {, +        Map<String, QueryParser> queryParsers = Maps.newHashMap(this.queryParsers);, +        addQueryParser(queryParsers, queryParser);, +        this.queryParsers = ImmutableMap.copyOf(queryParsers);, +    }, +, +    public void addFilterParser(FilterParser filterParser) {, +        Map<String, FilterParser> filterParsers = Maps.newHashMap(this.filterParsers);, +        addFilterParser(filterParsers, filterParser);, +        this.filterParsers = ImmutableMap.copyOf(filterParsers);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/IndexQueryParserModule.java, +import org.elasticsearch.common.collect.Maps;, +    private final Map<String, Class<? extends QueryParser>> queries = Maps.newHashMap();, +    private final Map<String, Class<? extends FilterParser>> filters = Maps.newHashMap();, +    /**, +     * Adds a custom query parser., +     *, +     * @param name        The name of the query parser, +     * @param queryParser the class of the query parser, +     */, +    public void addQueryParser(String name, Class<? extends QueryParser> queryParser) {, +        queries.put(name, queryParser);, +    }, +, +    /**, +     * Adds a custom filter parser.]