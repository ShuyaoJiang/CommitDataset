[+++ b/docs/reference/modules/threadpool.asciidoc, +++ b/docs/reference/modules/threadpool.asciidoc, +++ b/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.io.InputStream;, +import java.io.OutputStream;, +    /**, +     * Creates a new {@link InputStream} for the given blob name, +     */, +    InputStream openInput(String blobName) throws IOException;, +    /**, +     * Creates a new OutputStream for the given blob name, +     */, +    OutputStream createOutput(String blobName) throws IOException;, +++ b/docs/reference/modules/threadpool.asciidoc, +++ b/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.io.InputStream;, +import java.io.OutputStream;, +    /**, +     * Creates a new {@link InputStream} for the given blob name, +     */, +    InputStream openInput(String blobName) throws IOException;, +    /**, +     * Creates a new OutputStream for the given blob name, +     */, +    OutputStream createOutput(String blobName) throws IOException;, +++ b/src/main/java/org/elasticsearch/common/blobstore/BlobStore.java, +    BlobContainer blobContainer(BlobPath path);, +++ b/docs/reference/modules/threadpool.asciidoc, +++ b/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.io.InputStream;, +import java.io.OutputStream;, +    /**, +     * Creates a new {@link InputStream} for the given blob name, +     */, +    InputStream openInput(String blobName) throws IOException;, +    /**, +     * Creates a new OutputStream for the given blob name, +     */, +    OutputStream createOutput(String blobName) throws IOException;, +++ b/src/main/java/org/elasticsearch/common/blobstore/BlobStore.java, +    BlobContainer blobContainer(BlobPath path);, +++ /dev/null, +++ b/docs/reference/modules/threadpool.asciidoc, +++ b/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.io.InputStream;, +import java.io.OutputStream;, +    /**, +     * Creates a new {@link InputStream} for the given blob name, +     */, +    InputStream openInput(String blobName) throws IOException;, +    /**, +     * Creates a new OutputStream for the given blob name, +     */, +    OutputStream createOutput(String blobName) throws IOException;, +++ b/src/main/java/org/elasticsearch/common/blobstore/BlobStore.java, +    BlobContainer blobContainer(BlobPath path);, +++ /dev/null, +++ /dev/null, +++ b/docs/reference/modules/threadpool.asciidoc, +++ b/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.io.InputStream;, +import java.io.OutputStream;, +    /**, +     * Creates a new {@link InputStream} for the given blob name, +     */, +    InputStream openInput(String blobName) throws IOException;, +    /**, +     * Creates a new OutputStream for the given blob name, +     */, +    OutputStream createOutput(String blobName) throws IOException;, +++ b/src/main/java/org/elasticsearch/common/blobstore/BlobStore.java, +    BlobContainer blobContainer(BlobPath path);, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.blobstore.fs;, +, +import com.google.common.collect.ImmutableMap;, +import org.apache.lucene.util.IOUtils;, +import org.elasticsearch.ElasticsearchIllegalStateException;, +import org.elasticsearch.common.blobstore.BlobMetaData;]