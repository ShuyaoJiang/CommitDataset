[+++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, request.source()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, request.source()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.PRIMARY, request.source()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, request.source()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.PRIMARY, request.source()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +        private final String index;, +, +        public Builder(String index, Settings indexSettings, RootObjectMapper.Builder builder, MapperService mapperService) {, +            this.index = index;, +            return new DocumentMapper(mapperService, index, indexSettings, docMapperParser, rootObjectMapper, meta, rootMappers, sourceTransforms, mapperService.mappingLock);, +    public DocumentMapper(MapperService mapperService, String index, @Nullable Settings indexSettings, DocumentMapperParser docMapperParser,, +        this.documentParser = new DocumentParser(index, indexSettings, docMapperParser, this, new ReleasableLock(mappingLock.readLock()));, +    public ParsedDocument parse(String type, String id, BytesReference source) throws MapperParsingException {, +        return parse(SourceToParse.source(source).type(type).id(id));, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, request.source()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.PRIMARY, request.source()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +        private final String index;, +, +        public Builder(String index, Settings indexSettings, RootObjectMapper.Builder builder, MapperService mapperService) {, +            this.index = index;, +            return new DocumentMapper(mapperService, index, indexSettings, docMapperParser, rootObjectMapper, meta, rootMappers, sourceTransforms, mapperService.mappingLock);, +    public DocumentMapper(MapperService mapperService, String index, @Nullable Settings indexSettings, DocumentMapperParser docMapperParser,, +        this.documentParser = new DocumentParser(index, indexSettings, docMapperParser, this, new ReleasableLock(mappingLock.readLock()));, +    public ParsedDocument parse(String type, String id, BytesReference source) throws MapperParsingException {, +        return parse(SourceToParse.source(source).type(type).id(id));, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +/**, + *, + */, +public class DocumentMapperParser extends AbstractIndexComponent {, +    public DocumentMapperParser(Index index, @IndexSettings Settings indexSettings, MapperService mapperService, AnalysisService analysisService,, +        super(index, indexSettings);, +        DocumentMapper.Builder docBuilder = doc(index.name(), indexSettings, (RootObjectMapper.Builder) rootObjectTypeParser.parse(type, mapping, parserContext), mapperService);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, request.source()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.PRIMARY, request.source()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +        private final String index;, +, +        public Builder(String index, Settings indexSettings, RootObjectMapper.Builder builder, MapperService mapperService) {, +            this.index = index;, +            return new DocumentMapper(mapperService, index, indexSettings, docMapperParser, rootObjectMapper, meta, rootMappers, sourceTransforms, mapperService.mappingLock);, +    public DocumentMapper(MapperService mapperService, String index, @Nullable Settings indexSettings, DocumentMapperParser docMapperParser,, +        this.documentParser = new DocumentParser(index, indexSettings, docMapperParser, this, new ReleasableLock(mappingLock.readLock()));, +    public ParsedDocument parse(String type, String id, BytesReference source) throws MapperParsingException {, +        return parse(SourceToParse.source(source).type(type).id(id));, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +/**, + *, + */, +public class DocumentMapperParser extends AbstractIndexComponent {, +    public DocumentMapperParser(Index index, @IndexSettings Settings indexSettings, MapperService mapperService, AnalysisService analysisService,, +        super(index, indexSettings);, +        DocumentMapper.Builder docBuilder = doc(index.name(), indexSettings, (RootObjectMapper.Builder) rootObjectTypeParser.parse(type, mapping, parserContext), mapperService);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +            return new ParseContext.InternalParseContext(index, indexSettings, docMapperParser, docMapper, new ContentPath(0));, +    private final String index;, +    public DocumentParser(String index, Settings indexSettings, DocumentMapperParser docMapperParser, DocumentMapper docMapper, ReleasableLock parseLock) {, +        this.index = index;, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, request.source()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.PRIMARY, request.source()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +        private final String index;, +, +        public Builder(String index, Settings indexSettings, RootObjectMapper.Builder builder, MapperService mapperService) {, +            this.index = index;, +            return new DocumentMapper(mapperService, index, indexSettings, docMapperParser, rootObjectMapper, meta, rootMappers, sourceTransforms, mapperService.mappingLock);, +    public DocumentMapper(MapperService mapperService, String index, @Nullable Settings indexSettings, DocumentMapperParser docMapperParser,, +        this.documentParser = new DocumentParser(index, indexSettings, docMapperParser, this, new ReleasableLock(mappingLock.readLock()));, +    public ParsedDocument parse(String type, String id, BytesReference source) throws MapperParsingException {, +        return parse(SourceToParse.source(source).type(type).id(id));, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +/**, + *]