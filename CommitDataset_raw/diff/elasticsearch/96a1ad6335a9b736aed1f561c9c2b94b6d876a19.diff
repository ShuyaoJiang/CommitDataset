[+++ b/.idea/modules/elasticsearch.iml, +    <orderEntry type="module-library" exported="">, +      <library name="jna">, +        <CLASSES>, +          <root url="jar://$GRADLE_REPOSITORY$/net.java.dev.jna/jna/jars/jna-3.2.7.jar!/" />, +        </CLASSES>, +        <JAVADOC />, +        <SOURCES />, +      </library>, +    </orderEntry>, +++ b/.idea/modules/elasticsearch.iml, +    <orderEntry type="module-library" exported="">, +      <library name="jna">, +        <CLASSES>, +          <root url="jar://$GRADLE_REPOSITORY$/net.java.dev.jna/jna/jars/jna-3.2.7.jar!/" />, +        </CLASSES>, +        <JAVADOC />, +        <SOURCES />, +      </library>, +    </orderEntry>, +++ b/build.gradle, +        mavenRepo urls: 'http://download.java.net/maven/2/', +++ b/.idea/modules/elasticsearch.iml, +    <orderEntry type="module-library" exported="">, +      <library name="jna">, +        <CLASSES>, +          <root url="jar://$GRADLE_REPOSITORY$/net.java.dev.jna/jna/jars/jna-3.2.7.jar!/" />, +        </CLASSES>, +        <JAVADOC />, +        <SOURCES />, +      </library>, +    </orderEntry>, +++ b/build.gradle, +        mavenRepo urls: 'http://download.java.net/maven/2/', +++ b/modules/elasticsearch/build.gradle, +    compile('net.java.dev.jna:jna:3.2.7') { transitive = false }, +, +            pom.dependencies = pom.dependencies.findAll {dep -> !dep.artifactId.contains('jna') } // remove jna, its optional, +++ b/.idea/modules/elasticsearch.iml, +    <orderEntry type="module-library" exported="">, +      <library name="jna">, +        <CLASSES>, +          <root url="jar://$GRADLE_REPOSITORY$/net.java.dev.jna/jna/jars/jna-3.2.7.jar!/" />, +        </CLASSES>, +        <JAVADOC />, +        <SOURCES />, +      </library>, +    </orderEntry>, +++ b/build.gradle, +        mavenRepo urls: 'http://download.java.net/maven/2/', +++ b/modules/elasticsearch/build.gradle, +    compile('net.java.dev.jna:jna:3.2.7') { transitive = false }, +, +            pom.dependencies = pom.dependencies.findAll {dep -> !dep.artifactId.contains('jna') } // remove jna, its optional, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.common.jna.Natives;, +//        Loggers.getLogger(Bootstrap.class, tuple.v1().get("name")).info("heap_size {}/{}", JvmStats.jvmStats().mem().heapCommitted(), JvmInfo.jvmInfo().mem().heapMax());, +        Natives.tryMlockall();, +++ b/.idea/modules/elasticsearch.iml, +    <orderEntry type="module-library" exported="">, +      <library name="jna">, +        <CLASSES>, +          <root url="jar://$GRADLE_REPOSITORY$/net.java.dev.jna/jna/jars/jna-3.2.7.jar!/" />, +        </CLASSES>, +        <JAVADOC />, +        <SOURCES />, +      </library>, +    </orderEntry>, +++ b/build.gradle, +        mavenRepo urls: 'http://download.java.net/maven/2/', +++ b/modules/elasticsearch/build.gradle, +    compile('net.java.dev.jna:jna:3.2.7') { transitive = false }, +, +            pom.dependencies = pom.dependencies.findAll {dep -> !dep.artifactId.contains('jna') } // remove jna, its optional, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.common.jna.Natives;, +//        Loggers.getLogger(Bootstrap.class, tuple.v1().get("name")).info("heap_size {}/{}", JvmStats.jvmStats().mem().heapCommitted(), JvmInfo.jvmInfo().mem().heapMax());, +        Natives.tryMlockall();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/jna/CLibrary.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.jna;, +]