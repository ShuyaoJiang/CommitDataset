[+++ b/src/main/java/org/elasticsearch/index/mapper/internal/AllFieldMapper.java, +import org.apache.lucene.search.TermQuery;, +        if (indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) {, +        return new TermQuery(term);, +    }, +        return queryStringTermQuery(names().createIndexNameTerm(value));, +        , +++ b/src/main/java/org/elasticsearch/index/mapper/internal/AllFieldMapper.java, +import org.apache.lucene.search.TermQuery;, +        if (indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) {, +        return new TermQuery(term);, +    }, +        return queryStringTermQuery(names().createIndexNameTerm(value));, +        , +++ b/src/test/java/org/elasticsearch/test/unit/index/mapper/all/SimpleAllMapperTests.java, +import org.apache.lucene.index.Term;, +import org.apache.lucene.search.TermQuery;, +import org.elasticsearch.common.lucene.all.AllTermQuery;, +import org.elasticsearch.index.mapper.FieldMapper;, +import org.elasticsearch.index.mapper.FieldMappers;, +import org.hamcrest.Matchers;, +        FieldMapper mapper = docMapper.mappers().smartNameFieldMapper("_all");, +        assertThat(mapper.queryStringTermQuery(new Term("_all", "foobar")), Matchers.instanceOf(AllTermQuery.class));, +    public void testAllMappersTermQuery() throws Exception {, +        String mapping = copyToStringFromClasspath("/org/elasticsearch/test/unit/index/mapper/all/mapping_omit_positions_on_all.json");, +        DocumentMapper docMapper = MapperTests.newParser().parse(mapping);, +        byte[] json = copyToBytesFromClasspath("/org/elasticsearch/test/unit/index/mapper/all/test1.json");, +        Document doc = docMapper.parse(new BytesArray(json)).rootDoc();, +        AllField field = (AllField) doc.getFieldable("_all");, +        AllEntries allEntries = ((AllTokenStream) field.tokenStreamValue()).allEntries();, +        assertThat(allEntries.fields().size(), equalTo(3));, +        assertThat(allEntries.fields().contains("address.last.location"), equalTo(true));, +        assertThat(allEntries.fields().contains("name.last"), equalTo(true));, +        assertThat(allEntries.fields().contains("simple1"), equalTo(true));, +        FieldMapper mapper = docMapper.mappers().smartNameFieldMapper("_all");, +        assertThat(mapper.queryStringTermQuery(new Term("_all", "foobar")), Matchers.instanceOf(TermQuery.class));, +, +    }, +, +, +    @Test, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/AllFieldMapper.java, +import org.apache.lucene.search.TermQuery;, +        if (indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) {, +        return new TermQuery(term);, +    }, +        return queryStringTermQuery(names().createIndexNameTerm(value));, +        , +++ b/src/test/java/org/elasticsearch/test/unit/index/mapper/all/SimpleAllMapperTests.java, +import org.apache.lucene.index.Term;, +import org.apache.lucene.search.TermQuery;, +import org.elasticsearch.common.lucene.all.AllTermQuery;, +import org.elasticsearch.index.mapper.FieldMapper;, +import org.elasticsearch.index.mapper.FieldMappers;, +import org.hamcrest.Matchers;, +        FieldMapper mapper = docMapper.mappers().smartNameFieldMapper("_all");, +        assertThat(mapper.queryStringTermQuery(new Term("_all", "foobar")), Matchers.instanceOf(AllTermQuery.class));, +    public void testAllMappersTermQuery() throws Exception {, +        String mapping = copyToStringFromClasspath("/org/elasticsearch/test/unit/index/mapper/all/mapping_omit_positions_on_all.json");, +        DocumentMapper docMapper = MapperTests.newParser().parse(mapping);, +        byte[] json = copyToBytesFromClasspath("/org/elasticsearch/test/unit/index/mapper/all/test1.json");, +        Document doc = docMapper.parse(new BytesArray(json)).rootDoc();, +        AllField field = (AllField) doc.getFieldable("_all");, +        AllEntries allEntries = ((AllTokenStream) field.tokenStreamValue()).allEntries();, +        assertThat(allEntries.fields().size(), equalTo(3));, +        assertThat(allEntries.fields().contains("address.last.location"), equalTo(true));, +        assertThat(allEntries.fields().contains("name.last"), equalTo(true));, +        assertThat(allEntries.fields().contains("simple1"), equalTo(true));, +        FieldMapper mapper = docMapper.mappers().smartNameFieldMapper("_all");, +        assertThat(mapper.queryStringTermQuery(new Term("_all", "foobar")), Matchers.instanceOf(TermQuery.class));, +, +    }, +, +, +    @Test, +++ b/src/test/java/org/elasticsearch/test/unit/index/mapper/all/mapping_omit_positions_on_all.json, +{, +    "person":{, +        "_all":{, +            "enabled": true ,, +            "index_options" : "freqs", +        },, +        "properties":{, +            "name":{, +                "type":"object",, +                "dynamic":false,, +                "properties":{, +                    "first":{, +                        "type":"string",, +                        "store":"yes",, +                        "include_in_all":false, +                    },, +                    "last":{, +                        "type":"string",, +                        "index":"not_analyzed", +                    }, +                }, +            },, +            "address":{, +                "type":"object",]