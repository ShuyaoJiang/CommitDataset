[+++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +        checks.add(new UseSerialGCCheck());, +    /**, +     * Checks if the serial collector is in use. This collector is single-threaded and devastating, +     * for performance and should not be used for a server application like Elasticsearch., +     */, +    static class UseSerialGCCheck implements BootstrapCheck.Check {, +, +        @Override, +        public boolean check() {, +            return getUseSerialGC().equals("true");, +        }, +, +        // visible for testing, +        String getUseSerialGC() {, +            return JvmInfo.jvmInfo().useSerialGC();, +        }, +, +        @Override, +        public String errorMessage() {, +            return String.format(, +                Locale.ROOT,, +                "JVM is using the serial collector but should not be for the best performance; " +, +                    "either it's the default for the VM [%s] or -XX:+UseSerialGC was explicitly specified",, +                JvmInfo.jvmInfo().getVmName());, +        }, +, +        @Override, +        public boolean isSystemCheck() {, +            return false;, +        }, +, +    }, +, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +        checks.add(new UseSerialGCCheck());, +    /**, +     * Checks if the serial collector is in use. This collector is single-threaded and devastating, +     * for performance and should not be used for a server application like Elasticsearch., +     */, +    static class UseSerialGCCheck implements BootstrapCheck.Check {, +, +        @Override, +        public boolean check() {, +            return getUseSerialGC().equals("true");, +        }, +, +        // visible for testing, +        String getUseSerialGC() {, +            return JvmInfo.jvmInfo().useSerialGC();, +        }, +, +        @Override, +        public String errorMessage() {, +            return String.format(, +                Locale.ROOT,, +                "JVM is using the serial collector but should not be for the best performance; " +, +                    "either it's the default for the VM [%s] or -XX:+UseSerialGC was explicitly specified",, +                JvmInfo.jvmInfo().getVmName());, +        }, +, +        @Override, +        public boolean isSystemCheck() {, +            return false;, +        }, +, +    }, +, +++ b/core/src/main/java/org/elasticsearch/monitor/jvm/JvmInfo.java, +        String useSerialGC = "unknown";, +, +            try {, +                Object useSerialGCVmOptionObject = vmOptionMethod.invoke(hotSpotDiagnosticMXBean, "UseSerialGC");, +                useSerialGC = (String) valueMethod.invoke(useSerialGCVmOptionObject);, +            } catch (Exception ignored) {, +            }, +, +                useCompressedOops, useG1GC, useSerialGC);, +    private final String useSerialGC;, +                   String onOutOfMemoryError, String useCompressedOops, String useG1GC, String useSerialGC) {, +        this.useSerialGC = useSerialGC;, +        //the following members are only used locally for bootstrap checks, never serialized nor printed out, +        this.useSerialGC = "unknown";, +    public String useSerialGC() {, +        return this.useSerialGC;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +        checks.add(new UseSerialGCCheck());, +    /**, +     * Checks if the serial collector is in use. This collector is single-threaded and devastating, +     * for performance and should not be used for a server application like Elasticsearch., +     */, +    static class UseSerialGCCheck implements BootstrapCheck.Check {, +, +        @Override, +        public boolean check() {, +            return getUseSerialGC().equals("true");, +        }, +]