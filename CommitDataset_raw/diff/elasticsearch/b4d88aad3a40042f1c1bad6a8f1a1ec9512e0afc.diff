[+++ b/build.gradle, +boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/40319" /* place a PR link here when committing bwc changes */, +++ b/build.gradle, +boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/40319" /* place a PR link here when committing bwc changes */, +++ b/server/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +            InternalAggregations.reduce(aggregationsList, reduceContext);, +++ b/build.gradle, +boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/40319" /* place a PR link here when committing bwc changes */, +++ b/server/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +            InternalAggregations.reduce(aggregationsList, reduceContext);, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/AggregationPhase.java, +        context.queryResult().aggregations(new InternalAggregations(aggregations, siblingPipelineAggregators));, +++ b/build.gradle, +boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/40319" /* place a PR link here when committing bwc changes */, +++ b/server/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +            InternalAggregations.reduce(aggregationsList, reduceContext);, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/AggregationPhase.java, +        context.queryResult().aggregations(new InternalAggregations(aggregations, siblingPipelineAggregators));, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java, +    public List<SiblingPipelineAggregator> getTopLevelPipelineAggregators() {, +        List<SiblingPipelineAggregator> topLevelPipelineAggregators = aggregationsList.get(0).getTopLevelPipelineAggregators();, +++ b/build.gradle, +boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/40319" /* place a PR link here when committing bwc changes */, +++ b/server/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +            InternalAggregations.reduce(aggregationsList, reduceContext);, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/AggregationPhase.java, +        context.queryResult().aggregations(new InternalAggregations(aggregations, siblingPipelineAggregators));, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java, +    public List<SiblingPipelineAggregator> getTopLevelPipelineAggregators() {, +        List<SiblingPipelineAggregator> topLevelPipelineAggregators = aggregationsList.get(0).getTopLevelPipelineAggregators();, +++ b/server/src/main/java/org/elasticsearch/search/query/QuerySearchResult.java, +import org.elasticsearch.Version;, +import org.elasticsearch.search.aggregations.InternalAggregation;, +        if (in.getVersion().before(Version.V_7_1_0)) {, +            List<SiblingPipelineAggregator> pipelineAggregators = in.readNamedWriteableList(PipelineAggregator.class).stream(), +                .map(a -> (SiblingPipelineAggregator) a).collect(Collectors.toList());, +            if (hasAggs && pipelineAggregators.isEmpty() == false) {, +                List<InternalAggregation> internalAggs = aggregations.asList().stream(), +                    .map(agg -> (InternalAggregation) agg).collect(Collectors.toList());, +                //Earlier versions serialize sibling pipeline aggs separately as they used to be set to QuerySearchResult directly, while, +                //later versions include them in InternalAggregations. Note that despite serializing sibling pipeline aggs as part of, +                //InternalAggregations is supported since 6.7.0, the shards set sibling pipeline aggs to InternalAggregations only from 7.1., +                this.aggregations = new InternalAggregations(internalAggs, pipelineAggregators);, +            }, +        }, +        if (out.getVersion().before(Version.V_7_1_0)) {, +            //Earlier versions expect sibling pipeline aggs separately as they used to be set to QuerySearchResult directly,, +            //while later versions expect them in InternalAggregations. Note that despite serializing sibling pipeline aggs as part of, +            //InternalAggregations is supported since 6.7.0, the shards set sibling pipeline aggs to InternalAggregations only from 7.1 on., +            if (aggregations == null) {, +                out.writeNamedWriteableList(Collections.emptyList());, +            } else {, +                out.writeNamedWriteableList(aggregations.getTopLevelPipelineAggregators());, +            }, +        }, +++ b/build.gradle, +boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/40319" /* place a PR link here when committing bwc changes */, +++ b/server/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +            InternalAggregations.reduce(aggregationsList, reduceContext);, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/AggregationPhase.java, +        context.queryResult().aggregations(new InternalAggregations(aggregations, siblingPipelineAggregators));, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java, +    public List<SiblingPipelineAggregator> getTopLevelPipelineAggregators() {, +        List<SiblingPipelineAggregator> topLevelPipelineAggregators = aggregationsList.get(0).getTopLevelPipelineAggregators();, +++ b/server/src/main/java/org/elasticsearch/search/query/QuerySearchResult.java, +import org.elasticsearch.Version;, +import org.elasticsearch.search.aggregations.InternalAggregation;, +        if (in.getVersion().before(Version.V_7_1_0)) {, +            List<SiblingPipelineAggregator> pipelineAggregators = in.readNamedWriteableList(PipelineAggregator.class).stream(), +                .map(a -> (SiblingPipelineAggregator) a).collect(Collectors.toList());, +            if (hasAggs && pipelineAggregators.isEmpty() == false) {, +                List<InternalAggregation> internalAggs = aggregations.asList().stream(), +                    .map(agg -> (InternalAggregation) agg).collect(Collectors.toList());, +                //Earlier versions serialize sibling pipeline aggs separately as they used to be set to QuerySearchResult directly, while, +                //later versions include them in InternalAggregations. Note that despite serializing sibling pipeline aggs as part of, +                //InternalAggregations is supported since 6.7.0, the shards set sibling pipeline aggs to InternalAggregations only from 7.1., +                this.aggregations = new InternalAggregations(internalAggs, pipelineAggregators);, +            }, +        }, +        if (out.getVersion().before(Version.V_7_1_0)) {, +            //Earlier versions expect sibling pipeline aggs separately as they used to be set to QuerySearchResult directly,, +            //while later versions expect them in InternalAggregations. Note that despite serializing sibling pipeline aggs as part of, +            //InternalAggregations is supported since 6.7.0, the shards set sibling pipeline aggs to InternalAggregations only from 7.1 on., +            if (aggregations == null) {, +                out.writeNamedWriteableList(Collections.emptyList());, +            } else {, +                out.writeNamedWriteableList(aggregations.getTopLevelPipelineAggregators());, +            }, +        }, +++ b/server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java, +        assertNull(InternalAggregations.reduce(aggs, reduceContext));, +        List<InternalAggregations> aggs = Collections.singletonList(new InternalAggregations(Collections.singletonList(terms),, +            topLevelPipelineAggs));, +        InternalAggregations reducedAggs = InternalAggregations.reduce(aggs, reduceContext);]