[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/CacheStats.java, +    public CacheStats(long fieldEvictions, long filterEvictions, long fieldSize, long filterSize, long filterCount, long bloomSize) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/CacheStats.java, +    public CacheStats(long fieldEvictions, long filterEvictions, long fieldSize, long filterSize, long filterCount, long bloomSize) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/IndexCache.java, +        FilterCache.EntriesStats filterEntriesStats = filterCache.entriesStats();, +        return new CacheStats(fieldDataCache.evictions(), filterCache.evictions(), fieldDataCache.sizeInBytes(), filterEntriesStats.sizeInBytes, filterEntriesStats.count, bloomCache.sizeInBytes());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/CacheStats.java, +    public CacheStats(long fieldEvictions, long filterEvictions, long fieldSize, long filterSize, long filterCount, long bloomSize) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/IndexCache.java, +        FilterCache.EntriesStats filterEntriesStats = filterCache.entriesStats();, +        return new CacheStats(fieldDataCache.evictions(), filterCache.evictions(), fieldDataCache.sizeInBytes(), filterEntriesStats.sizeInBytes, filterEntriesStats.count, bloomCache.sizeInBytes());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/FilterCache.java, +    static class EntriesStats {, +        public final long sizeInBytes;, +        public final long count;, +, +        public EntriesStats(long sizeInBytes, long count) {, +            this.sizeInBytes = sizeInBytes;, +            this.count = count;, +        }, +    }, +, +    EntriesStats entriesStats();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/CacheStats.java, +    public CacheStats(long fieldEvictions, long filterEvictions, long fieldSize, long filterSize, long filterCount, long bloomSize) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/IndexCache.java, +        FilterCache.EntriesStats filterEntriesStats = filterCache.entriesStats();, +        return new CacheStats(fieldDataCache.evictions(), filterCache.evictions(), fieldDataCache.sizeInBytes(), filterEntriesStats.sizeInBytes, filterEntriesStats.count, bloomCache.sizeInBytes());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/FilterCache.java, +    static class EntriesStats {, +        public final long sizeInBytes;, +        public final long count;, +, +        public EntriesStats(long sizeInBytes, long count) {, +            this.sizeInBytes = sizeInBytes;, +            this.count = count;, +        }, +    }, +, +    EntriesStats entriesStats();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/none/NoneFilterCache.java, +    @Override public EntriesStats entriesStats() {, +        return new EntriesStats(0, 0);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/CacheStats.java, +    public CacheStats(long fieldEvictions, long filterEvictions, long fieldSize, long filterSize, long filterCount, long bloomSize) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/IndexCache.java, +        FilterCache.EntriesStats filterEntriesStats = filterCache.entriesStats();, +        return new CacheStats(fieldDataCache.evictions(), filterCache.evictions(), fieldDataCache.sizeInBytes(), filterEntriesStats.sizeInBytes, filterEntriesStats.count, bloomCache.sizeInBytes());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/FilterCache.java, +    static class EntriesStats {, +        public final long sizeInBytes;, +        public final long count;, +, +        public EntriesStats(long sizeInBytes, long count) {, +            this.sizeInBytes = sizeInBytes;, +            this.count = count;, +        }, +    }, +, +    EntriesStats entriesStats();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/none/NoneFilterCache.java, +    @Override public EntriesStats entriesStats() {, +        return new EntriesStats(0, 0);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/resident/ResidentFilterCache.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/CacheStats.java, +    public CacheStats(long fieldEvictions, long filterEvictions, long fieldSize, long filterSize, long filterCount, long bloomSize) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/IndexCache.java, +        FilterCache.EntriesStats filterEntriesStats = filterCache.entriesStats();, +        return new CacheStats(fieldDataCache.evictions(), filterCache.evictions(), fieldDataCache.sizeInBytes(), filterEntriesStats.sizeInBytes, filterEntriesStats.count, bloomCache.sizeInBytes());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/FilterCache.java, +    static class EntriesStats {, +        public final long sizeInBytes;, +        public final long count;, +, +        public EntriesStats(long sizeInBytes, long count) {, +            this.sizeInBytes = sizeInBytes;, +            this.count = count;, +        }, +    }, +, +    EntriesStats entriesStats();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/none/NoneFilterCache.java, +    @Override public EntriesStats entriesStats() {, +        return new EntriesStats(0, 0);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/resident/ResidentFilterCache.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/soft/SoftFilterCache.java, +        MapMaker mapMaker = new MapMaker().weakKeys();, +        MapMaker mapMaker = new MapMaker().softValues();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/CacheStats.java, +    public CacheStats(long fieldEvictions, long filterEvictions, long fieldSize, long filterSize, long filterCount, long bloomSize) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/IndexCache.java, +        FilterCache.EntriesStats filterEntriesStats = filterCache.entriesStats();, +        return new CacheStats(fieldDataCache.evictions(), filterCache.evictions(), fieldDataCache.sizeInBytes(), filterEntriesStats.sizeInBytes, filterEntriesStats.count, bloomCache.sizeInBytes());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/FilterCache.java, +    static class EntriesStats {, +        public final long sizeInBytes;, +        public final long count;, +, +        public EntriesStats(long sizeInBytes, long count) {]