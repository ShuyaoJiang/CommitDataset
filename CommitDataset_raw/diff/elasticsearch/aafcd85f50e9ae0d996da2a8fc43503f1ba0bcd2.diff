[+++ b/server/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.persistent.PersistentTasksCustomMetaData;, +import org.elasticsearch.persistent.PersistentTasksNodeService;, +import org.elasticsearch.tasks.Task;, +        registerMetaDataCustom(entries, PersistentTasksCustomMetaData.TYPE, PersistentTasksCustomMetaData::new,, +            PersistentTasksCustomMetaData::readDiffFrom);, +        // Task Status (not Diffable), +        entries.add(new Entry(Task.Status.class, PersistentTasksNodeService.Status.NAME, PersistentTasksNodeService.Status::new));, +        entries.add(new NamedXContentRegistry.Entry(MetaData.Custom.class, new ParseField(PersistentTasksCustomMetaData.TYPE),, +            PersistentTasksCustomMetaData::fromXContent));, +++ b/server/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.persistent.PersistentTasksCustomMetaData;, +import org.elasticsearch.persistent.PersistentTasksNodeService;, +import org.elasticsearch.tasks.Task;, +        registerMetaDataCustom(entries, PersistentTasksCustomMetaData.TYPE, PersistentTasksCustomMetaData::new,, +            PersistentTasksCustomMetaData::readDiffFrom);, +        // Task Status (not Diffable), +        entries.add(new Entry(Task.Status.class, PersistentTasksNodeService.Status.NAME, PersistentTasksNodeService.Status::new));, +        entries.add(new NamedXContentRegistry.Entry(MetaData.Custom.class, new ParseField(PersistentTasksCustomMetaData.TYPE),, +            PersistentTasksCustomMetaData::fromXContent));, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksCustomMetaData.java, +++ b/server/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.persistent.PersistentTasksCustomMetaData;, +import org.elasticsearch.persistent.PersistentTasksNodeService;, +import org.elasticsearch.tasks.Task;, +        registerMetaDataCustom(entries, PersistentTasksCustomMetaData.TYPE, PersistentTasksCustomMetaData::new,, +            PersistentTasksCustomMetaData::readDiffFrom);, +        // Task Status (not Diffable), +        entries.add(new Entry(Task.Status.class, PersistentTasksNodeService.Status.NAME, PersistentTasksNodeService.Status::new));, +        entries.add(new NamedXContentRegistry.Entry(MetaData.Custom.class, new ParseField(PersistentTasksCustomMetaData.TYPE),, +            PersistentTasksCustomMetaData::fromXContent));, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksCustomMetaData.java, +++ b/server/src/test/java/org/elasticsearch/persistent/TestPersistentTasksPlugin.java, +++ b/server/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.persistent.PersistentTasksCustomMetaData;, +import org.elasticsearch.persistent.PersistentTasksNodeService;, +import org.elasticsearch.tasks.Task;, +        registerMetaDataCustom(entries, PersistentTasksCustomMetaData.TYPE, PersistentTasksCustomMetaData::new,, +            PersistentTasksCustomMetaData::readDiffFrom);, +        // Task Status (not Diffable), +        entries.add(new Entry(Task.Status.class, PersistentTasksNodeService.Status.NAME, PersistentTasksNodeService.Status::new));, +        entries.add(new NamedXContentRegistry.Entry(MetaData.Custom.class, new ParseField(PersistentTasksCustomMetaData.TYPE),, +            PersistentTasksCustomMetaData::fromXContent));, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksCustomMetaData.java, +++ b/server/src/test/java/org/elasticsearch/persistent/TestPersistentTasksPlugin.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/XPackClientPlugin.java, +                new NamedXContentRegistry.Entry(PersistentTaskParams.class, new ParseField(RollupField.TASK_NAME), RollupJob::fromXContent),, +++ b/server/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.persistent.PersistentTasksCustomMetaData;, +import org.elasticsearch.persistent.PersistentTasksNodeService;, +import org.elasticsearch.tasks.Task;, +        registerMetaDataCustom(entries, PersistentTasksCustomMetaData.TYPE, PersistentTasksCustomMetaData::new,, +            PersistentTasksCustomMetaData::readDiffFrom);, +        // Task Status (not Diffable), +        entries.add(new Entry(Task.Status.class, PersistentTasksNodeService.Status.NAME, PersistentTasksNodeService.Status::new));, +        entries.add(new NamedXContentRegistry.Entry(MetaData.Custom.class, new ParseField(PersistentTasksCustomMetaData.TYPE),, +            PersistentTasksCustomMetaData::fromXContent));, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksCustomMetaData.java, +++ b/server/src/test/java/org/elasticsearch/persistent/TestPersistentTasksPlugin.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/XPackClientPlugin.java, +                new NamedXContentRegistry.Entry(PersistentTaskParams.class, new ParseField(RollupField.TASK_NAME), RollupJob::fromXContent),, +++ b/x-pack/qa/ml-native-tests/src/test/java/org/elasticsearch/xpack/ml/integration/MlNativeAutodetectIntegTestCase.java]