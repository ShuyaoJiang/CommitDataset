[+++ b/src/main/java/org/elasticsearch/indices/recovery/ShardRecoveryHandler.java, +                                    RemoteTransportException exception = new RemoteTransportException("File corruption occurred on recovery but checksums are ok", null);, +                                    logger.warn("{} Remote file corruption on node {}, recovering {}. local checksum OK",, +                                            corruptIndexException, shard.shardId(), request.targetNode(), md);, +, +++ b/src/main/java/org/elasticsearch/indices/recovery/ShardRecoveryHandler.java, +                                    RemoteTransportException exception = new RemoteTransportException("File corruption occurred on recovery but checksums are ok", null);, +                                    logger.warn("{} Remote file corruption on node {}, recovering {}. local checksum OK",, +                                            corruptIndexException, shard.shardId(), request.targetNode(), md);, +, +++ b/src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java, +import org.elasticsearch.cluster.routing.allocation.decider.ThrottlingAllocationDecider;, +import org.elasticsearch.indices.recovery.RecoverySettings;, +                .put(TransportModule.TRANSPORT_SERVICE_TYPE_KEY, MockTransportService.class.getName()), +                // speed up recoveries, +                .put(RecoverySettings.INDICES_RECOVERY_CONCURRENT_STREAMS, 10), +                .put(RecoverySettings.INDICES_RECOVERY_CONCURRENT_SMALL_FILE_STREAMS, 10), +                .put(ThrottlingAllocationDecider.CLUSTER_ROUTING_ALLOCATION_NODE_CONCURRENT_RECOVERIES, 5), +                .build();]