[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplanation.java, +                if (finalDecision != FinalDecision.NO) {, +                }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplanation.java, +                if (finalDecision != FinalDecision.NO) {, +                }, +++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainIT.java, +        Map<DiscoveryNode, ClusterAllocationExplanation.NodeExplanation> explanations = cae.getNodeExplanations();, +        for (Map.Entry<DiscoveryNode, ClusterAllocationExplanation.NodeExplanation> entry : explanations.entrySet()) {, +            ClusterAllocationExplanation.NodeExplanation explanation = entry.getValue();, +            ClusterAllocationExplanation.FinalDecision finalDecision = explanation.getFinalDecision();, +            String finalExplanation = explanation.getFinalExplanation();, +            ClusterAllocationExplanation.StoreCopy storeCopy = explanation.getStoreCopy();, +            Decision d = explanation.getDecision();, +            float weight = explanation.getWeight();, +            IndicesShardStoresResponse.StoreStatus storeStatus = explanation.getStoreStatus();, +                assertEquals("the shard cannot be assigned because one or more allocation decider returns a 'NO' decision",, +                        explanation.getFinalExplanation());, +                assertEquals(ClusterAllocationExplanation.FinalDecision.NO, finalDecision);, +                assertEquals("the shard cannot be assigned because one or more allocation decider returns a 'NO' decision",, +                        explanation.getFinalExplanation());, +                assertEquals(ClusterAllocationExplanation.FinalDecision.NO, finalDecision);, +                assertEquals(ClusterAllocationExplanation.FinalDecision.NO, finalDecision);, +                assertEquals(ClusterAllocationExplanation.StoreCopy.AVAILABLE, storeCopy);, +                assertEquals("the shard cannot be assigned because one or more allocation decider returns a 'NO' decision",, +                        explanation.getFinalExplanation());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplanation.java, +                if (finalDecision != FinalDecision.NO) {, +                }, +++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainIT.java, +        Map<DiscoveryNode, ClusterAllocationExplanation.NodeExplanation> explanations = cae.getNodeExplanations();, +        for (Map.Entry<DiscoveryNode, ClusterAllocationExplanation.NodeExplanation> entry : explanations.entrySet()) {, +            ClusterAllocationExplanation.NodeExplanation explanation = entry.getValue();, +            ClusterAllocationExplanation.FinalDecision finalDecision = explanation.getFinalDecision();, +            String finalExplanation = explanation.getFinalExplanation();, +            ClusterAllocationExplanation.StoreCopy storeCopy = explanation.getStoreCopy();, +            Decision d = explanation.getDecision();, +            float weight = explanation.getWeight();, +            IndicesShardStoresResponse.StoreStatus storeStatus = explanation.getStoreStatus();, +                assertEquals("the shard cannot be assigned because one or more allocation decider returns a 'NO' decision",, +                        explanation.getFinalExplanation());, +                assertEquals(ClusterAllocationExplanation.FinalDecision.NO, finalDecision);, +                assertEquals("the shard cannot be assigned because one or more allocation decider returns a 'NO' decision",, +                        explanation.getFinalExplanation());, +                assertEquals(ClusterAllocationExplanation.FinalDecision.NO, finalDecision);, +                assertEquals(ClusterAllocationExplanation.FinalDecision.NO, finalDecision);, +                assertEquals(ClusterAllocationExplanation.StoreCopy.AVAILABLE, storeCopy);, +                assertEquals("the shard cannot be assigned because one or more allocation decider returns a 'NO' decision",, +                        explanation.getFinalExplanation());, +++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainTests.java, +        ClusterAllocationExplanation.NodeExplanation explanation = cae.getNodeExplanations().values().iterator().next();, +        ClusterAllocationExplanation.FinalDecision fd = explanation.getFinalDecision();, +        ClusterAllocationExplanation.StoreCopy storeCopy = explanation.getStoreCopy();, +        String finalExplanation = explanation.getFinalExplanation();, +        Decision d = explanation.getDecision();, +        assertEquals(ClusterAllocationExplanation.FinalDecision.NO, fd);, +        assertEquals(ClusterAllocationExplanation.StoreCopy.AVAILABLE, storeCopy);, +        Float weight = explanation.getWeight();, +        explanation = cae.getNodeExplanations().values().iterator().next();, +        d = explanation.getDecision();, +        fd = explanation.getFinalDecision();, +        storeCopy = explanation.getStoreCopy();, +        finalExplanation = explanation.getFinalExplanation();, +        assertEquals(ClusterAllocationExplanation.FinalDecision.ALREADY_ASSIGNED, fd);, +        assertEquals(ClusterAllocationExplanation.StoreCopy.AVAILABLE, storeCopy);, +        weight = explanation.getWeight();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplanation.java, +                if (finalDecision != FinalDecision.NO) {, +                }, +++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainIT.java, +        Map<DiscoveryNode, ClusterAllocationExplanation.NodeExplanation> explanations = cae.getNodeExplanations();, +        for (Map.Entry<DiscoveryNode, ClusterAllocationExplanation.NodeExplanation> entry : explanations.entrySet()) {, +            ClusterAllocationExplanation.NodeExplanation explanation = entry.getValue();, +            ClusterAllocationExplanation.FinalDecision finalDecision = explanation.getFinalDecision();, +            String finalExplanation = explanation.getFinalExplanation();, +            ClusterAllocationExplanation.StoreCopy storeCopy = explanation.getStoreCopy();, +            Decision d = explanation.getDecision();, +            float weight = explanation.getWeight();, +            IndicesShardStoresResponse.StoreStatus storeStatus = explanation.getStoreStatus();, +                assertEquals("the shard cannot be assigned because one or more allocation decider returns a 'NO' decision",, +                        explanation.getFinalExplanation());, +                assertEquals(ClusterAllocationExplanation.FinalDecision.NO, finalDecision);, +                assertEquals("the shard cannot be assigned because one or more allocation decider returns a 'NO' decision",, +                        explanation.getFinalExplanation());, +                assertEquals(ClusterAllocationExplanation.FinalDecision.NO, finalDecision);, +                assertEquals(ClusterAllocationExplanation.FinalDecision.NO, finalDecision);, +                assertEquals(ClusterAllocationExplanation.StoreCopy.AVAILABLE, storeCopy);, +                assertEquals("the shard cannot be assigned because one or more allocation decider returns a 'NO' decision",, +                        explanation.getFinalExplanation());, +++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainTests.java, +        ClusterAllocationExplanation.NodeExplanation explanation = cae.getNodeExplanations().values().iterator().next();, +        ClusterAllocationExplanation.FinalDecision fd = explanation.getFinalDecision();, +        ClusterAllocationExplanation.StoreCopy storeCopy = explanation.getStoreCopy();, +        String finalExplanation = explanation.getFinalExplanation();, +        Decision d = explanation.getDecision();, +        assertEquals(ClusterAllocationExplanation.FinalDecision.NO, fd);, +        assertEquals(ClusterAllocationExplanation.StoreCopy.AVAILABLE, storeCopy);, +        Float weight = explanation.getWeight();, +        explanation = cae.getNodeExplanations().values().iterator().next();, +        d = explanation.getDecision();]