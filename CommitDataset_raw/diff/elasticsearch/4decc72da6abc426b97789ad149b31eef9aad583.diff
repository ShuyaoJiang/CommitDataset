[+++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java, +     * Moves the shard from started to initializing, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java, +     * Moves the shard from started to initializing, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +    private final NamedWriteableRegistry namedWriteableRegistry;, +, +    protected StreamInput() {, +        this.namedWriteableRegistry = new NamedWriteableRegistry();, +    }, +, +    protected StreamInput(NamedWriteableRegistry namedWriteableRegistry) {, +        this.namedWriteableRegistry = namedWriteableRegistry;, +    }, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java, +     * Moves the shard from started to initializing, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +    private final NamedWriteableRegistry namedWriteableRegistry;, +, +    protected StreamInput() {, +        this.namedWriteableRegistry = new NamedWriteableRegistry();, +    }, +, +    protected StreamInput(NamedWriteableRegistry namedWriteableRegistry) {, +        this.namedWriteableRegistry = namedWriteableRegistry;, +    }, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java, +     * Moves the shard from started to initializing, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +    private final NamedWriteableRegistry namedWriteableRegistry;, +, +    protected StreamInput() {, +        this.namedWriteableRegistry = new NamedWriteableRegistry();, +    }, +, +    protected StreamInput(NamedWriteableRegistry namedWriteableRegistry) {, +        this.namedWriteableRegistry = namedWriteableRegistry;, +    }, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +            opsRecovered = handler.recoveryFromSnapshot(this, snapshot);, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestBuilder.SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestBuilder.SuggestionBuilder;, +    public <T> SuggestRequestBuilder addSuggestion(SuggestionBuilder<T> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java, +     * Moves the shard from started to initializing, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +    private final NamedWriteableRegistry namedWriteableRegistry;, +, +    protected StreamInput() {, +        this.namedWriteableRegistry = new NamedWriteableRegistry();, +    }, +, +    protected StreamInput(NamedWriteableRegistry namedWriteableRegistry) {, +        this.namedWriteableRegistry = namedWriteableRegistry;, +    }, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +            opsRecovered = handler.recoveryFromSnapshot(this, snapshot);, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import org.elasticsearch.index.SearchSlowLog;, +import org.elasticsearch.index.store.Store.MetadataSnapshot;, +import org.elasticsearch.indices.cache.query.IndicesQueryCache;]