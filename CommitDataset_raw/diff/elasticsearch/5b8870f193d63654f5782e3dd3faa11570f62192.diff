[+++ b/server/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +            logger.debug((Supplier<?>) () -> new ParameterizedMessage("{} received shard failed for {}", request.shardId, request), request.failure);, +++ b/server/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +            logger.debug((Supplier<?>) () -> new ParameterizedMessage("{} received shard failed for {}", request.shardId, request), request.failure);, +++ b/server/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +import org.apache.logging.log4j.message.ParameterizedMessage;, +        ClusterState tmpState = IndexMetaDataUpdater.removeStaleIdsWithoutRoutings(clusterState, staleShards, logger);, +                logger.warn(new ParameterizedMessage("failing shard [{}]", failedShardEntry), failedShardEntry.getFailure());, +++ b/server/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +            logger.debug((Supplier<?>) () -> new ParameterizedMessage("{} received shard failed for {}", request.shardId, request), request.failure);, +++ b/server/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +import org.apache.logging.log4j.message.ParameterizedMessage;, +        ClusterState tmpState = IndexMetaDataUpdater.removeStaleIdsWithoutRoutings(clusterState, staleShards, logger);, +                logger.warn(new ParameterizedMessage("failing shard [{}]", failedShardEntry), failedShardEntry.getFailure());, +++ b/server/src/main/java/org/elasticsearch/cluster/routing/allocation/IndexMetaDataUpdater.java, +import org.apache.logging.log4j.Logger;, +    public static ClusterState removeStaleIdsWithoutRoutings(ClusterState clusterState, List<StaleShard> staleShards, Logger logger) {, +                logger.warn("{} marking unavailable shards as stale: {}", shardEntry.getKey(), idsToRemove);]