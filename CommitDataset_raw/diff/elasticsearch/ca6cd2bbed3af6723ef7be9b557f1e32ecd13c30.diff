[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/get/MultiGetRequestBuilder.java, +    public MultiGetRequestBuilder add(String index, @Nullable String type, Iterable<String> ids) {, +        for (String id : ids) {, +            request.add(index, type, id);, +        }, +        return this;, +    }, +, +    public MultiGetRequestBuilder add(String index, @Nullable String type, String... ids) {, +        for (String id : ids) {, +            request.add(index, type, id);, +        }, +        return this;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/get/MultiGetRequestBuilder.java, +    public MultiGetRequestBuilder add(String index, @Nullable String type, Iterable<String> ids) {, +        for (String id : ids) {, +            request.add(index, type, id);, +        }, +        return this;, +    }, +, +    public MultiGetRequestBuilder add(String index, @Nullable String type, String... ids) {, +        for (String id : ids) {, +            request.add(index, type, id);, +        }, +        return this;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/bloom/simple/SimpleBloomCache.java, +import java.nio.channels.ClosedChannelException;, +            } catch (ClosedChannelException e) {, +                // ignore, we are getting closed, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/get/MultiGetRequestBuilder.java, +    public MultiGetRequestBuilder add(String index, @Nullable String type, Iterable<String> ids) {, +        for (String id : ids) {, +            request.add(index, type, id);, +        }, +        return this;, +    }, +, +    public MultiGetRequestBuilder add(String index, @Nullable String type, String... ids) {, +        for (String id : ids) {, +            request.add(index, type, id);, +        }, +        return this;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/bloom/simple/SimpleBloomCache.java, +import java.nio.channels.ClosedChannelException;, +            } catch (ClosedChannelException e) {, +                // ignore, we are getting closed, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/stress/mget/MGetStress1.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.test.stress.mget;, +, +import org.elasticsearch.action.get.MultiGetItemResponse;, +import org.elasticsearch.action.get.MultiGetResponse;, +import org.elasticsearch.client.Client;, +import org.elasticsearch.common.collect.Sets;, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.common.util.concurrent.jsr166y.ThreadLocalRandom;, +import org.elasticsearch.node.Node;, +import org.elasticsearch.node.NodeBuilder;, +, +import java.util.Set;, +import java.util.concurrent.atomic.AtomicBoolean;, +, +/**, + */, +public class MGetStress1 {, +, +    public static void main(String[] args) throws Exception {, +        final int NUMBER_OF_NODES = 2;, +        final int NUMBER_OF_DOCS = 50000;, +        final int MGET_BATCH = 1000;, +, +        Node[] nodes = new Node[NUMBER_OF_NODES];, +        for (int i = 0; i < nodes.length; i++) {, +            nodes[i] = NodeBuilder.nodeBuilder().node();, +        }]