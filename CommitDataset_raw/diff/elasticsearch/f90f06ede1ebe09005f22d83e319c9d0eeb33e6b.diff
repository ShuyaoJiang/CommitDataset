[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.protocol.xpack.ml.OpenJobRequest;, +import org.elasticsearch.protocol.xpack.ml.OpenJobResponse;, +, +    /**, +     * Opens a Machine Learning Job., +     * When you open a new job, it starts with an empty model., +     *, +     * When you open an existing job, the most recent model state is automatically loaded., +     * The job is ready to resume its analysis from where it left off, once new data is received., +     *, +     * <p>, +     *     For additional info, +     *     see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html"></a>, +     * </p>, +     * @param request request containing job_id and additional optional options, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return response containing if the job was successfully opened or not., +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public OpenJobResponse openJob(OpenJobRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +            RequestConverters::machineLearningOpenJob,, +            options,, +            OpenJobResponse::fromXContent,, +            Collections.emptySet());, +    }, +, +    /**, +     * Opens a Machine Learning Job asynchronously, notifies listener on completion., +     * When you open a new job, it starts with an empty model., +     *, +     * When you open an existing job, the most recent model state is automatically loaded., +     * The job is ready to resume its analysis from where it left off, once new data is received., +     * <p>, +     *     For additional info, +     *     see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html"></a>, +     * </p>, +     * @param request request containing job_id and additional optional options, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified upon request completion, +     */, +    public void openJobAsync(OpenJobRequest request, RequestOptions options, ActionListener<OpenJobResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +            RequestConverters::machineLearningOpenJob,, +            options,, +            OpenJobResponse::fromXContent,, +            listener,, +            Collections.emptySet());, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.protocol.xpack.ml.OpenJobRequest;, +import org.elasticsearch.protocol.xpack.ml.OpenJobResponse;, +, +    /**, +     * Opens a Machine Learning Job., +     * When you open a new job, it starts with an empty model., +     *, +     * When you open an existing job, the most recent model state is automatically loaded., +     * The job is ready to resume its analysis from where it left off, once new data is received., +     *, +     * <p>, +     *     For additional info, +     *     see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html"></a>, +     * </p>, +     * @param request request containing job_id and additional optional options, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return response containing if the job was successfully opened or not., +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public OpenJobResponse openJob(OpenJobRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +            RequestConverters::machineLearningOpenJob,, +            options,, +            OpenJobResponse::fromXContent,, +            Collections.emptySet());, +    }, +, +    /**, +     * Opens a Machine Learning Job asynchronously, notifies listener on completion., +     * When you open a new job, it starts with an empty model., +     *, +     * When you open an existing job, the most recent model state is automatically loaded., +     * The job is ready to resume its analysis from where it left off, once new data is received., +     * <p>, +     *     For additional info, +     *     see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html"></a>, +     * </p>, +     * @param request request containing job_id and additional optional options, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified upon request completion, +     */, +    public void openJobAsync(OpenJobRequest request, RequestOptions options, ActionListener<OpenJobResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +            RequestConverters::machineLearningOpenJob,, +            options,, +            OpenJobResponse::fromXContent,, +            listener,, +            Collections.emptySet());, +    }]