[+++ b/src/main/java/org/elasticsearch/cloud/aws/blobstore/DefaultS3OutputStream.java, +import com.amazonaws.util.Base64;, +import org.elasticsearch.common.logging.ESLogger;, +import org.elasticsearch.common.logging.Loggers;, +import java.security.DigestInputStream;, +import java.security.MessageDigest;, +import java.security.NoSuchAlgorithmException;, +    private static final ESLogger logger = Loggers.getLogger("cloud.aws");, +, +        InputStream inputStream = is;, +, +        // We try to compute a MD5 while reading it, +        MessageDigest messageDigest;, +        try {, +            messageDigest = MessageDigest.getInstance("MD5");, +            inputStream = new DigestInputStream(is, messageDigest);, +        } catch (NoSuchAlgorithmException impossible) {, +            // Every implementation of the Java platform is required to support MD5 (see MessageDigest), +            throw new RuntimeException(impossible);, +        }, +        PutObjectResult putObjectResult = blobStore.client().putObject(bucketName, blobName, inputStream, md);, +, +        String localMd5 = Base64.encodeAsString(messageDigest.digest());, +        String remoteMd5 = putObjectResult.getContentMd5();, +        if (!localMd5.equals(remoteMd5)) {, +            logger.debug("MD5 local [{}], remote [{}] are not equal...", localMd5, remoteMd5);, +            throw new AmazonS3Exception("MD5 local [" + localMd5 +, +                    "], remote [" + remoteMd5 +, +                    "] are not equal...");, +        }]