[+++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final String REST_EXCEPTION_SKIP_CAUSE = "rest.exception.skip_cause";, +        if (cause != null && params.paramAsBoolean(REST_EXCEPTION_SKIP_CAUSE, false) == false) {, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final String REST_EXCEPTION_SKIP_CAUSE = "rest.exception.skip_cause";, +        if (cause != null && params.paramAsBoolean(REST_EXCEPTION_SKIP_CAUSE, false) == false) {, +++ b/core/src/test/java/org/elasticsearch/ESExceptionTests.java, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +            ex.toXContent(otherBuilder, ToXContent.EMPTY_PARAMS);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final String REST_EXCEPTION_SKIP_CAUSE = "rest.exception.skip_cause";, +        if (cause != null && params.paramAsBoolean(REST_EXCEPTION_SKIP_CAUSE, false) == false) {, +++ b/core/src/test/java/org/elasticsearch/ESExceptionTests.java, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +            ex.toXContent(otherBuilder, ToXContent.EMPTY_PARAMS);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +++ b/core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java, +            x.toXContent(builder, ToXContent.EMPTY_PARAMS);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final String REST_EXCEPTION_SKIP_CAUSE = "rest.exception.skip_cause";, +        if (cause != null && params.paramAsBoolean(REST_EXCEPTION_SKIP_CAUSE, false) == false) {, +++ b/core/src/test/java/org/elasticsearch/ESExceptionTests.java, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +            ex.toXContent(otherBuilder, ToXContent.EMPTY_PARAMS);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +++ b/core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java, +            x.toXContent(builder, ToXContent.EMPTY_PARAMS);, +++ b/core/src/test/java/org/elasticsearch/action/search/MultiSearchRequestTests.java, +        response.toXContent(builder, ToXContent.EMPTY_PARAMS);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final String REST_EXCEPTION_SKIP_CAUSE = "rest.exception.skip_cause";, +        if (cause != null && params.paramAsBoolean(REST_EXCEPTION_SKIP_CAUSE, false) == false) {, +++ b/core/src/test/java/org/elasticsearch/ESExceptionTests.java, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +            ex.toXContent(otherBuilder, ToXContent.EMPTY_PARAMS);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +++ b/core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java, +            x.toXContent(builder, ToXContent.EMPTY_PARAMS);, +++ b/core/src/test/java/org/elasticsearch/action/search/MultiSearchRequestTests.java, +        response.toXContent(builder, ToXContent.EMPTY_PARAMS);, +++ b/core/src/test/java/org/elasticsearch/rest/BytesRestResponseTests.java, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final String REST_EXCEPTION_SKIP_CAUSE = "rest.exception.skip_cause";, +        if (cause != null && params.paramAsBoolean(REST_EXCEPTION_SKIP_CAUSE, false) == false) {, +++ b/core/src/test/java/org/elasticsearch/ESExceptionTests.java, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ex.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +            ex.toXContent(otherBuilder, ToXContent.EMPTY_PARAMS);, +            ElasticsearchException.toXContent(builder, ToXContent.EMPTY_PARAMS, ex);, +++ b/core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java, +            x.toXContent(builder, ToXContent.EMPTY_PARAMS);, +++ b/core/src/test/java/org/elasticsearch/action/search/MultiSearchRequestTests.java, +        response.toXContent(builder, ToXContent.EMPTY_PARAMS);, +++ b/core/src/test/java/org/elasticsearch/rest/BytesRestResponseTests.java, +++ b/dev-tools/src/main/resources/ant/integration-tests.xml, +  <!-- waits for cluster to form and have exactly two nodes -->, +  <macrodef name="waitfor-two-nodes">, +    <attribute name="port"/>, +    <attribute name="timeoutproperty"/>, +    <sequential>, +      <echo>Waiting for elasticsearch to form a cluster of two...</echo>, +      <waitfor maxwait="30" maxwaitunit="second", +               checkevery="500" checkeveryunit="millisecond", +               timeoutproperty="@{timeoutproperty}">, +        <http url="http://127.0.0.1:@{port}/_cluster/health?wait_for_nodes=2"/>, +      </waitfor>, +    </sequential>, +  </macrodef>, +, +      <attribute name="es.unicast.enabled" default="false"/>]