[+++ b/TESTING.asciidoc, +mvn -Dtests.vagrant -pl qa/vagrant validate, +mvn -Dtests.vagrant -Psmoke-vms -pl qa/vagrant verify, +mvn -Dtests.vagrant=all -Psmoke-vms -pl qa/vagrant verify, +mvn -Dtests.vagrant -pl qa/vagrant verify, +mvn -Dtests.vagrant verify, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest=fedora-22, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='wheezy, trusty', +mvn -Dtests.vagrant=all -pl qa/vagrant verify, +mvn -Dtests.vagrant -pl qa/vagrant pre-integration-test, +++ b/TESTING.asciidoc, +mvn -Dtests.vagrant -pl qa/vagrant validate, +mvn -Dtests.vagrant -Psmoke-vms -pl qa/vagrant verify, +mvn -Dtests.vagrant=all -Psmoke-vms -pl qa/vagrant verify, +mvn -Dtests.vagrant -pl qa/vagrant verify, +mvn -Dtests.vagrant verify, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest=fedora-22, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='wheezy, trusty', +mvn -Dtests.vagrant=all -pl qa/vagrant verify, +mvn -Dtests.vagrant -pl qa/vagrant pre-integration-test, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final String REST_EXCEPTION_SKIP_CAUSE = "rest.exception.skip_cause";, +        if (cause != null && params.paramAsBoolean(REST_EXCEPTION_SKIP_CAUSE, false) == false) {, +++ b/TESTING.asciidoc, +mvn -Dtests.vagrant -pl qa/vagrant validate, +mvn -Dtests.vagrant -Psmoke-vms -pl qa/vagrant verify, +mvn -Dtests.vagrant=all -Psmoke-vms -pl qa/vagrant verify, +mvn -Dtests.vagrant -pl qa/vagrant verify, +mvn -Dtests.vagrant verify, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest=fedora-22, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='wheezy, trusty', +mvn -Dtests.vagrant=all -pl qa/vagrant verify, +mvn -Dtests.vagrant -pl qa/vagrant pre-integration-test, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final String REST_EXCEPTION_SKIP_CAUSE = "rest.exception.skip_cause";, +        if (cause != null && params.paramAsBoolean(REST_EXCEPTION_SKIP_CAUSE, false) == false) {, +++ b/core/src/main/java/org/elasticsearch/cache/recycler/DefaultPageCacheRecyclerModule.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.cache.recycler;, +, +import org.elasticsearch.common.inject.AbstractModule;, +import org.elasticsearch.common.settings.Settings;, +, +/**, + */, +public class DefaultPageCacheRecyclerModule extends AbstractModule {, +, +    private final Settings settings;, +, +    public DefaultPageCacheRecyclerModule(Settings settings) {, +        this.settings = settings;, +    }, +, +    @Override, +    protected void configure() {, +        bind(PageCacheRecycler.class).asEagerSingleton();, +    }, +}, +++ b/TESTING.asciidoc, +mvn -Dtests.vagrant -pl qa/vagrant validate, +mvn -Dtests.vagrant -Psmoke-vms -pl qa/vagrant verify, +mvn -Dtests.vagrant=all -Psmoke-vms -pl qa/vagrant verify, +mvn -Dtests.vagrant -pl qa/vagrant verify, +mvn -Dtests.vagrant verify, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest=fedora-22, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='wheezy, trusty', +mvn -Dtests.vagrant=all -pl qa/vagrant verify, +mvn -Dtests.vagrant -pl qa/vagrant pre-integration-test, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final String REST_EXCEPTION_SKIP_CAUSE = "rest.exception.skip_cause";, +        if (cause != null && params.paramAsBoolean(REST_EXCEPTION_SKIP_CAUSE, false) == false) {, +++ b/core/src/main/java/org/elasticsearch/cache/recycler/DefaultPageCacheRecyclerModule.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0]