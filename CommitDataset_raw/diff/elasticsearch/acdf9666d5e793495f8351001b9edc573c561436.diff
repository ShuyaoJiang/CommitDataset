[+++ b/docs/reference/query-dsl/query-string-query.asciidoc, +            "query" : "(new york city) OR (big apple)" <1>, +<1> will be split into `new york city` and `big apple` and each part is then, +provided via the `fields` parameter (example below)., +combining them is automatically done using a `dis_max` query with a `tie_breaker`., +For example, the following synonym: `ny, new york` would produce:, +[float], +==== Minimum should match, +, +The `query_string` splits the query around each operator to create a boolean, +query for the entire input. You can use `minimum_should_match` to control how, +many "should" clauses in the resulting query should match., +, +[source,js], +--------------------------------------------------, +GET /_search, +{, +    "query": {, +        "query_string": {, +            "fields": [, +                "title", +            ],, +            "query": "this that thus",, +            "minimum_should_match": 2, +        }, +    }, +}, +--------------------------------------------------, +// CONSOLE, +, +The example above creates a boolean query:, +, +`(title:this title:that title:thus)~2`, +, +that matches documents with at least two of the terms `this`, `that` or `thus`, +in the single field `title`., +, +[float], +===== Multi Field, +, +[source,js], +--------------------------------------------------, +GET /_search, +{, +    "query": {, +        "query_string": {, +            "fields": [, +                "title",, +                "content", +            ],, +            "query": "this that thus",, +            "minimum_should_match": 2, +        }, +    }, +}, +--------------------------------------------------, +// CONSOLE, +, +The example above creates a boolean query:, +, +`((content:this content:that content:thus) | (title:this title:that title:thus))`, +, +that matches documents with the disjunction max over the fields `title` and, +`content`. Here the `minimum_should_match` parameter can't be applied., +, +[source,js], +--------------------------------------------------, +GET /_search, +{, +    "query": {, +        "query_string": {, +            "fields": [, +                "title",, +                "content", +            ],, +            "query": "this OR that OR thus",, +            "minimum_should_match": 2, +        }, +    }, +}, +--------------------------------------------------, +// CONSOLE, +, +Adding explicit operators forces each term to be considered as a separate clause., +, +The example above creates a boolean query:, +, +`((content:this | title:this) (content:that | title:that) (content:thus | title:thus))~2`, +, +that matches documents with at least two of the three "should" clauses, each of, +them made of the disjunction max over the fields for each term., +, +[float], +===== Cross Field, +, +[source,js], +--------------------------------------------------, +GET /_search, +{, +    "query": {]