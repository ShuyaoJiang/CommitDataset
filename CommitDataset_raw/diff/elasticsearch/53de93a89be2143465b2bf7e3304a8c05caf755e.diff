[+++ b/config/logging.yml, +++ b/config/logging.yml, +++ b/dev-tools/build_release.py, +           ('marvel', 'elasticsearch/marvel/latest'),, +    conn.request('GET', '/repos/elasticsearch/elasticsearch/issues?state=open&labels=%s' % version, headers= {'User-Agent' : 'Elasticsearch version checker'}), +  if 'download.elasticsearch.org/lucenesnapshots' in s:, +    raise RuntimeError('pom.xml contains download.elasticsearch.org/lucenesnapshots repository: remove that before releasing'), +def download_and_verify(release, files, plugins=None, base_url='https://download.elasticsearch.org/elasticsearch/elasticsearch'):, +    run('%s; %s -Des.node.name=smoke_tester -Des.cluster.name=prepare_release -Des.discovery.zen.ping.multicast.enabled=false -Des.node.bench=true -Des.script.disable_dynamic=false %s', +        * create a new vX.Y.Z label on github for the next release, with label color #dddddd (https://github.com/elasticsearch/elasticsearch/labels), +++ b/config/logging.yml, +++ b/dev-tools/build_release.py, +           ('marvel', 'elasticsearch/marvel/latest'),, +    conn.request('GET', '/repos/elasticsearch/elasticsearch/issues?state=open&labels=%s' % version, headers= {'User-Agent' : 'Elasticsearch version checker'}), +  if 'download.elasticsearch.org/lucenesnapshots' in s:, +    raise RuntimeError('pom.xml contains download.elasticsearch.org/lucenesnapshots repository: remove that before releasing'), +def download_and_verify(release, files, plugins=None, base_url='https://download.elasticsearch.org/elasticsearch/elasticsearch'):, +    run('%s; %s -Des.node.name=smoke_tester -Des.cluster.name=prepare_release -Des.discovery.zen.ping.multicast.enabled=false -Des.node.bench=true -Des.script.disable_dynamic=false %s', +        * create a new vX.Y.Z label on github for the next release, with label color #dddddd (https://github.com/elasticsearch/elasticsearch/labels), +++ b/dev-tools/create-bwc-index.py, +      mappings['analyzer_1']['properties']['completion_with_index_analyzer'] = {, +++ b/config/logging.yml, +++ b/dev-tools/build_release.py, +           ('marvel', 'elasticsearch/marvel/latest'),, +    conn.request('GET', '/repos/elasticsearch/elasticsearch/issues?state=open&labels=%s' % version, headers= {'User-Agent' : 'Elasticsearch version checker'}), +  if 'download.elasticsearch.org/lucenesnapshots' in s:, +    raise RuntimeError('pom.xml contains download.elasticsearch.org/lucenesnapshots repository: remove that before releasing'), +def download_and_verify(release, files, plugins=None, base_url='https://download.elasticsearch.org/elasticsearch/elasticsearch'):, +    run('%s; %s -Des.node.name=smoke_tester -Des.cluster.name=prepare_release -Des.discovery.zen.ping.multicast.enabled=false -Des.node.bench=true -Des.script.disable_dynamic=false %s', +        * create a new vX.Y.Z label on github for the next release, with label color #dddddd (https://github.com/elasticsearch/elasticsearch/labels), +++ b/dev-tools/create-bwc-index.py, +      mappings['analyzer_1']['properties']['completion_with_index_analyzer'] = {, +++ b/dev-tools/es_release_notes.pl, +my $User_Repo  = 'elasticsearch/elasticsearch/';, +my @Groups       = qw(breaking feature enhancement bug regression doc test);, +        my $header = $issue->{title} =~ s/^([^:]+):\s+// ? $1 : '';, +++ b/config/logging.yml, +++ b/dev-tools/build_release.py, +           ('marvel', 'elasticsearch/marvel/latest'),, +    conn.request('GET', '/repos/elasticsearch/elasticsearch/issues?state=open&labels=%s' % version, headers= {'User-Agent' : 'Elasticsearch version checker'}), +  if 'download.elasticsearch.org/lucenesnapshots' in s:, +    raise RuntimeError('pom.xml contains download.elasticsearch.org/lucenesnapshots repository: remove that before releasing'), +def download_and_verify(release, files, plugins=None, base_url='https://download.elasticsearch.org/elasticsearch/elasticsearch'):, +    run('%s; %s -Des.node.name=smoke_tester -Des.cluster.name=prepare_release -Des.discovery.zen.ping.multicast.enabled=false -Des.node.bench=true -Des.script.disable_dynamic=false %s', +        * create a new vX.Y.Z label on github for the next release, with label color #dddddd (https://github.com/elasticsearch/elasticsearch/labels), +++ b/dev-tools/create-bwc-index.py, +      mappings['analyzer_1']['properties']['completion_with_index_analyzer'] = {, +++ b/dev-tools/es_release_notes.pl, +my $User_Repo  = 'elasticsearch/elasticsearch/';, +my @Groups       = qw(breaking feature enhancement bug regression doc test);, +        my $header = $issue->{title} =~ s/^([^:]+):\s+// ? $1 : '';, +++ b/docs/community/monitoring.asciidoc, +++ b/config/logging.yml, +++ b/dev-tools/build_release.py, +           ('marvel', 'elasticsearch/marvel/latest'),, +    conn.request('GET', '/repos/elasticsearch/elasticsearch/issues?state=open&labels=%s' % version, headers= {'User-Agent' : 'Elasticsearch version checker'}), +  if 'download.elasticsearch.org/lucenesnapshots' in s:, +    raise RuntimeError('pom.xml contains download.elasticsearch.org/lucenesnapshots repository: remove that before releasing'), +def download_and_verify(release, files, plugins=None, base_url='https://download.elasticsearch.org/elasticsearch/elasticsearch'):, +    run('%s; %s -Des.node.name=smoke_tester -Des.cluster.name=prepare_release -Des.discovery.zen.ping.multicast.enabled=false -Des.node.bench=true -Des.script.disable_dynamic=false %s', +        * create a new vX.Y.Z label on github for the next release, with label color #dddddd (https://github.com/elasticsearch/elasticsearch/labels), +++ b/dev-tools/create-bwc-index.py, +      mappings['analyzer_1']['properties']['completion_with_index_analyzer'] = {, +++ b/dev-tools/es_release_notes.pl, +my $User_Repo  = 'elasticsearch/elasticsearch/';, +my @Groups       = qw(breaking feature enhancement bug regression doc test);, +        my $header = $issue->{title} =~ s/^([^:]+):\s+// ? $1 : '';, +++ b/docs/community/monitoring.asciidoc, +++ b/docs/reference/api-conventions.asciidoc, +The *elasticsearch* REST APIs are exposed using:, +, +* <<modules-http,JSON over HTTP>>,, +* <<modules-thrift,thrift>>,, +* <<modules-memcached,memcached>>., +++ b/config/logging.yml, +++ b/dev-tools/build_release.py, +           ('marvel', 'elasticsearch/marvel/latest'),, +    conn.request('GET', '/repos/elasticsearch/elasticsearch/issues?state=open&labels=%s' % version, headers= {'User-Agent' : 'Elasticsearch version checker'}), +  if 'download.elasticsearch.org/lucenesnapshots' in s:, +    raise RuntimeError('pom.xml contains download.elasticsearch.org/lucenesnapshots repository: remove that before releasing'), +def download_and_verify(release, files, plugins=None, base_url='https://download.elasticsearch.org/elasticsearch/elasticsearch'):, +    run('%s; %s -Des.node.name=smoke_tester -Des.cluster.name=prepare_release -Des.discovery.zen.ping.multicast.enabled=false -Des.node.bench=true -Des.script.disable_dynamic=false %s', +        * create a new vX.Y.Z label on github for the next release, with label color #dddddd (https://github.com/elasticsearch/elasticsearch/labels), +++ b/dev-tools/create-bwc-index.py, +      mappings['analyzer_1']['properties']['completion_with_index_analyzer'] = {, +++ b/dev-tools/es_release_notes.pl, +my $User_Repo  = 'elasticsearch/elasticsearch/';, +my @Groups       = qw(breaking feature enhancement bug regression doc test);, +        my $header = $issue->{title} =~ s/^([^:]+):\s+// ? $1 : '';, +++ b/docs/community/monitoring.asciidoc, +++ b/docs/reference/api-conventions.asciidoc, +The *elasticsearch* REST APIs are exposed using:, +, +* <<modules-http,JSON over HTTP>>,, +* <<modules-thrift,thrift>>,, +* <<modules-memcached,memcached>>., +++ b/docs/reference/docs/delete-by-query.asciidoc, +[[replication-type]], +=== Replication Type, +]