[+++ b/src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayAtomicFieldData.java, +        private final BigDoubleArrayList lon, lat;, +        public SingleFixedSet(BigDoubleArrayList lon, BigDoubleArrayList lat, int numDocs, FixedBitSet set) {, +                size = RamUsageEstimator.NUM_BYTES_INT/*size*/ + RamUsageEstimator.NUM_BYTES_INT/*numDocs*/ + lon.sizeInBytes() + lat.sizeInBytes() + RamUsageEstimator.sizeOf(set.getBits());, +            private final BigDoubleArrayList lon;, +            private final BigDoubleArrayList lat;, +            GeoPointValues(BigDoubleArrayList lon, BigDoubleArrayList lat, FixedBitSet set) {, +                    return scratch.reset(lat.get(docId), lon.get(docId));, +                    return new GeoPoint(lat.get(docId), lon.get(docId));, +                    return iter.reset(scratch.reset(lat.get(docId), lon.get(docId)));, +                    return iter.reset(new GeoPoint(lat.get(docId), lon.get(docId)));, +        private final BigDoubleArrayList lon, lat;, +        public Single(BigDoubleArrayList lon, BigDoubleArrayList lat, int numDocs) {, +                size = RamUsageEstimator.NUM_BYTES_INT/*size*/ + RamUsageEstimator.NUM_BYTES_INT/*numDocs*/ + (lon.sizeInBytes() + lat.sizeInBytes());, +            private final BigDoubleArrayList lon;, +            private final BigDoubleArrayList lat;, +            GeoPointValues(BigDoubleArrayList lon, BigDoubleArrayList lat) {, +                return scratch.reset(lat.get(docId), lon.get(docId));, +                return new GeoPoint(lat.get(docId), lon.get(docId));, +                return iter.reset(scratch.reset(lat.get(docId), lon.get(docId)));, +                return iter.reset(new GeoPoint(lat.get(docId), lon.get(docId)));, +++ b/src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayAtomicFieldData.java, +        private final BigDoubleArrayList lon, lat;, +        public SingleFixedSet(BigDoubleArrayList lon, BigDoubleArrayList lat, int numDocs, FixedBitSet set) {, +                size = RamUsageEstimator.NUM_BYTES_INT/*size*/ + RamUsageEstimator.NUM_BYTES_INT/*numDocs*/ + lon.sizeInBytes() + lat.sizeInBytes() + RamUsageEstimator.sizeOf(set.getBits());, +            private final BigDoubleArrayList lon;, +            private final BigDoubleArrayList lat;, +            GeoPointValues(BigDoubleArrayList lon, BigDoubleArrayList lat, FixedBitSet set) {, +                    return scratch.reset(lat.get(docId), lon.get(docId));, +                    return new GeoPoint(lat.get(docId), lon.get(docId));, +                    return iter.reset(scratch.reset(lat.get(docId), lon.get(docId)));, +                    return iter.reset(new GeoPoint(lat.get(docId), lon.get(docId)));, +        private final BigDoubleArrayList lon, lat;, +        public Single(BigDoubleArrayList lon, BigDoubleArrayList lat, int numDocs) {, +                size = RamUsageEstimator.NUM_BYTES_INT/*size*/ + RamUsageEstimator.NUM_BYTES_INT/*numDocs*/ + (lon.sizeInBytes() + lat.sizeInBytes());, +            private final BigDoubleArrayList lon;, +            private final BigDoubleArrayList lat;, +            GeoPointValues(BigDoubleArrayList lon, BigDoubleArrayList lat) {, +                return scratch.reset(lat.get(docId), lon.get(docId));, +                return new GeoPoint(lat.get(docId), lon.get(docId));, +                return iter.reset(scratch.reset(lat.get(docId), lon.get(docId)));, +                return iter.reset(new GeoPoint(lat.get(docId), lon.get(docId)));, +++ b/src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayIndexFieldData.java, +                int maxDoc = reader.maxDoc();, +                BigDoubleArrayList sLat = new BigDoubleArrayList(reader.maxDoc());, +                BigDoubleArrayList sLon = new BigDoubleArrayList(reader.maxDoc());, +                for (int i = 0; i < maxDoc; i++) {, +                    sLat.add(lat.get(nativeOrdinal));, +                    sLon.add(lon.get(nativeOrdinal));]