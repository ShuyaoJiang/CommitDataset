[+++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksService.java, +import org.elasticsearch.client.Client;, +import static org.elasticsearch.ClientHelper.PERSISTENT_TASK_ORIGIN;, +import static org.elasticsearch.ClientHelper.executeAsyncWithOrigin;, +, +    private final Client client;, +    public PersistentTasksService(Settings settings, ClusterService clusterService, ThreadPool threadPool, Client client) {, +            executeAsyncWithOrigin(client, PERSISTENT_TASK_ORIGIN, StartPersistentTaskAction.INSTANCE, createPersistentActionRequest,, +                    ActionListener.wrap(o -> listener.onResponse((PersistentTask<Params>) o.getTask()), listener::onFailure));, +            executeAsyncWithOrigin(client, PERSISTENT_TASK_ORIGIN, CompletionPersistentTaskAction.INSTANCE, restartRequest,, +            executeAsyncWithOrigin(client.threadPool().getThreadContext(), PERSISTENT_TASK_ORIGIN, cancelTasksRequest, listener,, +                    client.admin().cluster()::cancelTasks);, +            executeAsyncWithOrigin(client, PERSISTENT_TASK_ORIGIN, UpdatePersistentTaskStatusAction.INSTANCE, updateStatusRequest,, +                    ActionListener.wrap(o -> listener.onResponse(o.getTask()), listener::onFailure));, +            executeAsyncWithOrigin(client, PERSISTENT_TASK_ORIGIN, RemovePersistentTaskAction.INSTANCE, removeRequest,, +                ActionListener.wrap(o -> listener.onResponse(o.getTask()), listener::onFailure));, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksService.java, +import org.elasticsearch.client.Client;, +import static org.elasticsearch.ClientHelper.PERSISTENT_TASK_ORIGIN;, +import static org.elasticsearch.ClientHelper.executeAsyncWithOrigin;, +, +    private final Client client;, +    public PersistentTasksService(Settings settings, ClusterService clusterService, ThreadPool threadPool, Client client) {, +            executeAsyncWithOrigin(client, PERSISTENT_TASK_ORIGIN, StartPersistentTaskAction.INSTANCE, createPersistentActionRequest,, +                    ActionListener.wrap(o -> listener.onResponse((PersistentTask<Params>) o.getTask()), listener::onFailure));, +            executeAsyncWithOrigin(client, PERSISTENT_TASK_ORIGIN, CompletionPersistentTaskAction.INSTANCE, restartRequest,, +            executeAsyncWithOrigin(client.threadPool().getThreadContext(), PERSISTENT_TASK_ORIGIN, cancelTasksRequest, listener,, +                    client.admin().cluster()::cancelTasks);, +            executeAsyncWithOrigin(client, PERSISTENT_TASK_ORIGIN, UpdatePersistentTaskStatusAction.INSTANCE, updateStatusRequest,, +                    ActionListener.wrap(o -> listener.onResponse(o.getTask()), listener::onFailure));, +            executeAsyncWithOrigin(client, PERSISTENT_TASK_ORIGIN, RemovePersistentTaskAction.INSTANCE, removeRequest,, +                ActionListener.wrap(o -> listener.onResponse(o.getTask()), listener::onFailure));, +++ b/server/src/test/java/org/elasticsearch/persistent/TestPersistentTasksPlugin.java, +        PersistentTasksService persistentTasksService = new PersistentTasksService(Settings.EMPTY, clusterService, threadPool, client);]