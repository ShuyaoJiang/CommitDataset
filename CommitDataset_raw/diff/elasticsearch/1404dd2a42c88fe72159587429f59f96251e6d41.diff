[+++ b/buildSrc/build.gradle, +import org.gradle.util.GradleVersion, +gradlePlugin {, +  plugins {, +    simplePlugin {, +      id = 'elasticsearch.clusterformation', +      implementationClass = 'org.elasticsearch.gradle.clusterformation.ClusterformationPlugin', +    }, +  }, +}, +, +++ b/buildSrc/build.gradle, +import org.gradle.util.GradleVersion, +gradlePlugin {, +  plugins {, +    simplePlugin {, +      id = 'elasticsearch.clusterformation', +      implementationClass = 'org.elasticsearch.gradle.clusterformation.ClusterformationPlugin', +    }, +  }, +}, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/JarHellTask.groovy, +import org.gradle.api.tasks.Classpath, +    File successMarker, +, +    @Classpath, +    FileCollection classpath, +        successMarker = new File(project.buildDir, 'markers/jarHell-' + getName()), +++ b/buildSrc/build.gradle, +import org.gradle.util.GradleVersion, +gradlePlugin {, +  plugins {, +    simplePlugin {, +      id = 'elasticsearch.clusterformation', +      implementationClass = 'org.elasticsearch.gradle.clusterformation.ClusterformationPlugin', +    }, +  }, +}, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/JarHellTask.groovy, +import org.gradle.api.tasks.Classpath, +    File successMarker, +, +    @Classpath, +    FileCollection classpath, +        successMarker = new File(project.buildDir, 'markers/jarHell-' + getName()), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +        project.configurations.create("forbiddenApisCliJar"), +            configureJarHell(project),, +    private static Task configureJarHell(Project project) {, +        Task task = project.tasks.create('jarHell', JarHellTask.class), +        task.classpath = project.sourceSets.test.runtimeClasspath, +        return task, +    }, +, +++ b/buildSrc/build.gradle, +import org.gradle.util.GradleVersion, +gradlePlugin {, +  plugins {, +    simplePlugin {, +      id = 'elasticsearch.clusterformation', +      implementationClass = 'org.elasticsearch.gradle.clusterformation.ClusterformationPlugin', +    }, +  }, +}, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/JarHellTask.groovy, +import org.gradle.api.tasks.Classpath, +    File successMarker, +, +    @Classpath, +    FileCollection classpath, +        successMarker = new File(project.buildDir, 'markers/jarHell-' + getName()), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +        project.configurations.create("forbiddenApisCliJar"), +            configureJarHell(project),, +    private static Task configureJarHell(Project project) {, +        Task task = project.tasks.create('jarHell', JarHellTask.class), +        task.classpath = project.sourceSets.test.runtimeClasspath, +        return task, +    }, +, +++ b/buildSrc/src/main/java/org/elasticsearch/GradleServicesAdapter.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations]