[+++ b/src/main/java/org/elasticsearch/common/lucene/uid/UidField.java, +import org.apache.lucene.index.*;, +import org.elasticsearch.index.codec.postingsformat.BloomFilterPostingsFormat;, +            Terms terms = context.reader().terms(term.field());, +            if (terms == null) {, +                return null;, +            }, +            // hack to break early if we have a bloom filter..., +            if (terms instanceof BloomFilterPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms) {, +                if (!((BloomFilterPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms) terms).getFilter().mightContain(term.bytes())) {, +                    return null;, +                }, +            }, +            TermsEnum termsEnum = terms.iterator(null);, +            if (termsEnum == null) {, +                return null;, +            }, +            if (!termsEnum.seekExact(term.bytes(), true)) {, +                return null;, +            }, +            DocsAndPositionsEnum uid = termsEnum.docsAndPositions(context.reader().getLiveDocs(), null, DocsAndPositionsEnum.FLAG_PAYLOADS);, +            Terms terms = context.reader().terms(term.field());, +            if (terms == null) {, +                return -1;, +            }, +            // hack to break early if we have a bloom filter..., +            if (terms instanceof BloomFilterPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms) {, +                if (!((BloomFilterPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms) terms).getFilter().mightContain(term.bytes())) {, +                    return -1;, +                }, +            }, +            TermsEnum termsEnum = terms.iterator(null);, +            if (termsEnum == null) {, +                return -1;, +            }, +            if (!termsEnum.seekExact(term.bytes(), true)) {, +                return -1;, +            }, +            DocsAndPositionsEnum uid = termsEnum.docsAndPositions(context.reader().getLiveDocs(), null, DocsAndPositionsEnum.FLAG_PAYLOADS);, +++ b/src/main/java/org/elasticsearch/common/lucene/uid/UidField.java, +import org.apache.lucene.index.*;, +import org.elasticsearch.index.codec.postingsformat.BloomFilterPostingsFormat;, +            Terms terms = context.reader().terms(term.field());, +            if (terms == null) {, +                return null;, +            }, +            // hack to break early if we have a bloom filter..., +            if (terms instanceof BloomFilterPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms) {, +                if (!((BloomFilterPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms) terms).getFilter().mightContain(term.bytes())) {, +                    return null;, +                }, +            }, +            TermsEnum termsEnum = terms.iterator(null);, +            if (termsEnum == null) {, +                return null;, +            }, +            if (!termsEnum.seekExact(term.bytes(), true)) {, +                return null;, +            }, +            DocsAndPositionsEnum uid = termsEnum.docsAndPositions(context.reader().getLiveDocs(), null, DocsAndPositionsEnum.FLAG_PAYLOADS);, +            Terms terms = context.reader().terms(term.field());, +            if (terms == null) {, +                return -1;, +            }, +            // hack to break early if we have a bloom filter..., +            if (terms instanceof BloomFilterPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms) {, +                if (!((BloomFilterPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredTerms) terms).getFilter().mightContain(term.bytes())) {, +                    return -1;, +                }, +            }, +            TermsEnum termsEnum = terms.iterator(null);, +            if (termsEnum == null) {, +                return -1;, +            }, +            if (!termsEnum.seekExact(term.bytes(), true)) {, +                return -1;, +            }, +            DocsAndPositionsEnum uid = termsEnum.docsAndPositions(context.reader().getLiveDocs(), null, DocsAndPositionsEnum.FLAG_PAYLOADS);, +++ b/src/main/java/org/elasticsearch/index/codec/postingsformat/BloomFilter.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.index.codec.postingsformat;, +]