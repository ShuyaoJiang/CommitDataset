[+++ b/server/src/test/java/org/elasticsearch/common/time/DateFormattersTests.java, +        {, +            Instant instant = Instant.from(formatter.parse("123.123456"));, +            assertThat(instant.getEpochSecond(), is(0L));, +            assertThat(instant.getNano(), is(123123456));, +        }, +    public void testEpochSecondParserWithFraction() {, +        TemporalAccessor accessor = formatter.parse("1234.1");, +        Instant instant = DateFormatters.from(accessor).toInstant();, +        assertThat(instant.getEpochSecond(), is(1234L));, +        assertThat(DateFormatters.from(accessor).toInstant().getNano(), is(100_000_000));, +, +        accessor = formatter.parse("1234");, +        instant = DateFormatters.from(accessor).toInstant();, +        assertThat(instant.getEpochSecond(), is(1234L));, +        assertThat(instant.getNano(), is(0));, +, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> formatter.parse("abc"));, +        assertThat(e.getMessage(), is("failed to parse date field [abc] with format [epoch_second]"));, +, +        assertThat(e.getMessage(), is("failed to parse date field [1234.abc] with format [epoch_second]"));, +, +        e = expectThrows(IllegalArgumentException.class, () -> formatter.parse("1234.1234567890"));, +        assertThat(e.getMessage(), is("failed to parse date field [1234.1234567890] with format [epoch_second]"));]