[+++ b/docs/reference/docs/update-by-query.asciidoc, +it finds using `internal` versioning. That means you'll get a version, +and when the index request is processed. When the versions match, the document, +If you want to simply count version conflicts, and not cause the `_update_by_query`, +to abort, you can set `conflicts=proceed` on the url or `"conflicts": "proceed"`, +pick up an online mapping change, and a version conflict simply means that the, +parameter in the same way as the search API., +[horizontal], +also supports `refresh`, `wait_for_completion`, `wait_for_active_shards`, `timeout`,, +parameter, which causes just the shard that received the new data to be indexed., +<<docs-bulk,Bulk API>>. Because `_update_by_query` uses scroll search, you can also specify, +e.g. `?scroll=10m`. By default it's 5 minutes., +`1000`, etc.) and throttles the rate at which `_update_by_query` issues batches of, +Since the batch is issued as a single `_bulk` request, large batch sizes will, +[horizontal], +The number of retries attempted by update by query. `bulk` is the number of bulk, +actions retried, and `search` is the number of search actions retried., +Update by query is implemented using batches. Any failure causes the entire, +process to abort, but all failures in the current batch are collected into the, +You can fetch the status of all running update by query requests with the, +<1> This object contains the actual status. It is just like the response JSON, +and `wait_for_completion=false` was set on it, then it'll come back with a, +Any update by query can be cancelled using the <<tasks,Task Cancel API>>:, +Just like when setting it on the `_update_by_query` API, `requests_per_second`, +query takes effect immediately, but rethrotting that slows down the query will, +take effect after completing the current batch. This prevents scroll, +Update by query supports <<sliced-scroll>> to parallelize the updating process., +Slice an update by query manually by providing a slice id and total number of, +You can also let update by query automatically parallelize using, +updated., +* Each sub-request gets a slightly different snapshot of the source index]