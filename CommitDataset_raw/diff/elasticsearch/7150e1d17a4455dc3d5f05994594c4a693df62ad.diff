[+++ b/core/pom.xml, +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +                        in.readBytesReference()), +                out.writeBytesReference(warmerEntry.source());, +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +                        in.readBytesReference()), +                out.writeBytesReference(warmerEntry.source());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/segments/IndexShardSegments.java, +import com.google.common.collect.Iterators;, +        return Iterators.forArray(shards);, +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +                        in.readBytesReference()), +                out.writeBytesReference(warmerEntry.source());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/segments/IndexShardSegments.java, +import com.google.common.collect.Iterators;, +        return Iterators.forArray(shards);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/IndexShardStats.java, +import com.google.common.collect.Iterators;, +        return Iterators.forArray(shards);, +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +                        in.readBytesReference()), +                out.writeBytesReference(warmerEntry.source());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/segments/IndexShardSegments.java, +import com.google.common.collect.Iterators;, +        return Iterators.forArray(shards);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/IndexShardStats.java, +import com.google.common.collect.Iterators;, +        return Iterators.forArray(shards);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/get/IndexShardUpgradeStatus.java, +import com.google.common.collect.Iterators;, +        return Iterators.forArray(shards);, +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +                        in.readBytesReference()), +                out.writeBytesReference(warmerEntry.source());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/segments/IndexShardSegments.java, +import com.google.common.collect.Iterators;, +        return Iterators.forArray(shards);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/IndexShardStats.java, +import com.google.common.collect.Iterators;, +        return Iterators.forArray(shards);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/get/IndexShardUpgradeStatus.java, +import com.google.common.collect.Iterators;, +        return Iterators.forArray(shards);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersResponse.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.bytes.BytesReference;, +                BytesReference source = in.readBytesReference();, +                out.writeBytesReference(warmerEntry.source());, +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +                        in.readBytesReference()), +                out.writeBytesReference(warmerEntry.source());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/segments/IndexShardSegments.java, +import com.google.common.collect.Iterators;, +        return Iterators.forArray(shards);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/IndexShardStats.java, +import com.google.common.collect.Iterators;, +        return Iterators.forArray(shards);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/get/IndexShardUpgradeStatus.java, +import com.google.common.collect.Iterators;, +        return Iterators.forArray(shards);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersResponse.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.bytes.BytesReference;, +                BytesReference source = in.readBytesReference();, +                out.writeBytesReference(warmerEntry.source());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java, +                        BytesReference source = null;, +                        if (request.searchRequest().source() != null && request.searchRequest().source().length() > 0) {, +                            source = request.searchRequest().source();, +                        } else if (request.searchRequest().extraSource() != null && request.searchRequest().extraSource().length() > 0) {, +                            source = request.searchRequest().extraSource();, +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +                        in.readBytesReference()), +                out.writeBytesReference(warmerEntry.source());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/segments/IndexShardSegments.java, +import com.google.common.collect.Iterators;, +        return Iterators.forArray(shards);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/IndexShardStats.java, +import com.google.common.collect.Iterators;, +        return Iterators.forArray(shards);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/get/IndexShardUpgradeStatus.java, +import com.google.common.collect.Iterators;, +        return Iterators.forArray(shards);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersResponse.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.bytes.BytesReference;, +                BytesReference source = in.readBytesReference();, +                out.writeBytesReference(warmerEntry.source());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java, +                        BytesReference source = null;, +                        if (request.searchRequest().source() != null && request.searchRequest().source().length() > 0) {, +                            source = request.searchRequest().source();, +                        } else if (request.searchRequest().extraSource() != null && request.searchRequest().extraSource().length() > 0) {]