[+++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +        addAllocationDecider(deciders, new SameShardAllocationDecider(settings, clusterSettings));, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +        addAllocationDecider(deciders, new SameShardAllocationDecider(settings, clusterSettings));, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/SameShardAllocationDecider.java, +import org.elasticsearch.common.settings.ClusterSettings;, +import org.elasticsearch.common.settings.Setting.Property;, +        Setting.boolSetting("cluster.routing.allocation.same_shard.host", false, Property.Dynamic, Property.NodeScope);, +    private volatile boolean sameHost;, +    public SameShardAllocationDecider(Settings settings, ClusterSettings clusterSettings) {, +        clusterSettings.addSettingsUpdateConsumer(CLUSTER_ROUTING_ALLOCATION_SAME_HOST_SETTING, this::setSameHost);, +    }, +, +    /**, +     * Sets the same host setting.  {@code true} if allocating the same shard copy to the same host, +     * should not be allowed, even when multiple nodes are being run on the same host.  {@code false}, +     * otherwise., +     */, +    private void setSameHost(boolean sameHost) {, +        this.sameHost = sameHost;, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +        addAllocationDecider(deciders, new SameShardAllocationDecider(settings, clusterSettings));, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/SameShardAllocationDecider.java, +import org.elasticsearch.common.settings.ClusterSettings;, +import org.elasticsearch.common.settings.Setting.Property;, +        Setting.boolSetting("cluster.routing.allocation.same_shard.host", false, Property.Dynamic, Property.NodeScope);, +    private volatile boolean sameHost;, +    public SameShardAllocationDecider(Settings settings, ClusterSettings clusterSettings) {, +        clusterSettings.addSettingsUpdateConsumer(CLUSTER_ROUTING_ALLOCATION_SAME_HOST_SETTING, this::setSameHost);, +    }, +, +    /**, +     * Sets the same host setting.  {@code true} if allocating the same shard copy to the same host, +     * should not be allowed, even when multiple nodes are being run on the same host.  {@code false}, +     * otherwise., +     */, +    private void setSameHost(boolean sameHost) {, +        this.sameHost = sameHost;, +++ b/core/src/test/java/org/elasticsearch/cluster/routing/allocation/FilterAllocationDeciderTests.java, +        ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);, +        FilterAllocationDecider filterAllocationDecider = new FilterAllocationDecider(Settings.EMPTY, clusterSettings);, +                new SameShardAllocationDecider(Settings.EMPTY, clusterSettings),, +                new ReplicaAfterPrimaryActiveAllocationDecider(Settings.EMPTY)));, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +        addAllocationDecider(deciders, new SameShardAllocationDecider(settings, clusterSettings));, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/SameShardAllocationDecider.java, +import org.elasticsearch.common.settings.ClusterSettings;, +import org.elasticsearch.common.settings.Setting.Property;, +        Setting.boolSetting("cluster.routing.allocation.same_shard.host", false, Property.Dynamic, Property.NodeScope);, +    private volatile boolean sameHost;, +    public SameShardAllocationDecider(Settings settings, ClusterSettings clusterSettings) {, +        clusterSettings.addSettingsUpdateConsumer(CLUSTER_ROUTING_ALLOCATION_SAME_HOST_SETTING, this::setSameHost);, +    }, +, +    /**, +     * Sets the same host setting.  {@code true} if allocating the same shard copy to the same host, +     * should not be allowed, even when multiple nodes are being run on the same host.  {@code false}, +     * otherwise., +     */, +    private void setSameHost(boolean sameHost) {, +        this.sameHost = sameHost;, +++ b/core/src/test/java/org/elasticsearch/cluster/routing/allocation/FilterAllocationDeciderTests.java, +        ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);, +        FilterAllocationDecider filterAllocationDecider = new FilterAllocationDecider(Settings.EMPTY, clusterSettings);, +                new SameShardAllocationDecider(Settings.EMPTY, clusterSettings),, +                new ReplicaAfterPrimaryActiveAllocationDecider(Settings.EMPTY)));, +++ b/core/src/test/java/org/elasticsearch/cluster/routing/allocation/RandomAllocationDeciderTests.java, +import org.elasticsearch.common.settings.ClusterSettings;, +                new HashSet<>(Arrays.asList(new SameShardAllocationDecider(Settings.EMPTY,, +                        new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS)), new ReplicaAfterPrimaryActiveAllocationDecider(Settings.EMPTY),, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +        addAllocationDecider(deciders, new SameShardAllocationDecider(settings, clusterSettings));, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/SameShardAllocationDecider.java, +import org.elasticsearch.common.settings.ClusterSettings;, +import org.elasticsearch.common.settings.Setting.Property;, +        Setting.boolSetting("cluster.routing.allocation.same_shard.host", false, Property.Dynamic, Property.NodeScope);, +    private volatile boolean sameHost;, +    public SameShardAllocationDecider(Settings settings, ClusterSettings clusterSettings) {, +        clusterSettings.addSettingsUpdateConsumer(CLUSTER_ROUTING_ALLOCATION_SAME_HOST_SETTING, this::setSameHost);, +    }, +, +    /**, +     * Sets the same host setting.  {@code true} if allocating the same shard copy to the same host, +     * should not be allowed, even when multiple nodes are being run on the same host.  {@code false}, +     * otherwise., +     */, +    private void setSameHost(boolean sameHost) {, +        this.sameHost = sameHost;, +++ b/core/src/test/java/org/elasticsearch/cluster/routing/allocation/FilterAllocationDeciderTests.java, +        ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);, +        FilterAllocationDecider filterAllocationDecider = new FilterAllocationDecider(Settings.EMPTY, clusterSettings);, +                new SameShardAllocationDecider(Settings.EMPTY, clusterSettings),, +                new ReplicaAfterPrimaryActiveAllocationDecider(Settings.EMPTY)));, +++ b/core/src/test/java/org/elasticsearch/cluster/routing/allocation/RandomAllocationDeciderTests.java, +import org.elasticsearch.common.settings.ClusterSettings;, +                new HashSet<>(Arrays.asList(new SameShardAllocationDecider(Settings.EMPTY,, +                        new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS)), new ReplicaAfterPrimaryActiveAllocationDecider(Settings.EMPTY),, +++ b/core/src/test/java/org/elasticsearch/cluster/routing/allocation/SameShardRoutingTests.java, +import org.elasticsearch.common.settings.ClusterSettings;, +        SameShardAllocationDecider decider = new SameShardAllocationDecider(]