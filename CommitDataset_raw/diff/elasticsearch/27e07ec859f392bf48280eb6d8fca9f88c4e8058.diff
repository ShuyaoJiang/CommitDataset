[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.DeleteForecastRequest;, +    static Request deleteForecast(DeleteForecastRequest deleteForecastRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("anomaly_detectors"), +            .addPathPart(deleteForecastRequest.getJobId()), +            .addPathPartAsIs("_forecast"), +            .addPathPart(Strings.collectionToCommaDelimitedString(deleteForecastRequest.getForecastIds())), +            .build();, +        Request request = new Request(HttpDelete.METHOD_NAME, endpoint);, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        if (deleteForecastRequest.isAllowNoForecasts() != null) {, +            params.putParam("allow_no_forecasts", Boolean.toString(deleteForecastRequest.isAllowNoForecasts()));, +        }, +        if (deleteForecastRequest.timeout() != null) {, +            params.putParam("timeout", deleteForecastRequest.timeout().getStringRep());, +        }, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.DeleteForecastRequest;, +    static Request deleteForecast(DeleteForecastRequest deleteForecastRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("anomaly_detectors"), +            .addPathPart(deleteForecastRequest.getJobId()), +            .addPathPartAsIs("_forecast"), +            .addPathPart(Strings.collectionToCommaDelimitedString(deleteForecastRequest.getForecastIds())), +            .build();, +        Request request = new Request(HttpDelete.METHOD_NAME, endpoint);, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        if (deleteForecastRequest.isAllowNoForecasts() != null) {, +            params.putParam("allow_no_forecasts", Boolean.toString(deleteForecastRequest.isAllowNoForecasts()));, +        }, +        if (deleteForecastRequest.timeout() != null) {, +            params.putParam("timeout", deleteForecastRequest.timeout().getStringRep());, +        }, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.action.support.master.AcknowledgedResponse;, +import org.elasticsearch.client.ml.DeleteForecastRequest;, +     * <p>, +     *     For additional info, +     *     see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html"></a>, +     * </p>, +     *, +     * <p>, +     *     For additional info, +     *     see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html"></a>, +     * </p>, +     * Deletes Machine Learning Job Forecasts, +     *, +     * <p>, +     *     For additional info, +     *     see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-forecast.html"></a>, +     * </p>, +     *, +     * @param request the {@link DeleteForecastRequest} object enclosing the desired jobId, forecastIDs, and other options, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return a AcknowledgedResponse object indicating request success, +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public AcknowledgedResponse deleteForecast(DeleteForecastRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +            MLRequestConverters::deleteForecast,, +            options,, +            AcknowledgedResponse::fromXContent,, +            Collections.emptySet());, +    }, +, +    /**, +     * Deletes Machine Learning Job Forecasts asynchronously, +     *, +     * <p>, +     *     For additional info, +     *     see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-forecast.html"></a>, +     * </p>, +     *, +     * @param request the {@link DeleteForecastRequest} object enclosing the desired jobId, forecastIDs, and other options, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified upon request completion, +     */, +    public void deleteForecastAsync(DeleteForecastRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +            MLRequestConverters::deleteForecast,, +            options,, +            AcknowledgedResponse::fromXContent,, +            listener,, +            Collections.emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.DeleteForecastRequest;]