[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.create.CreateIndexRequest;, +import org.elasticsearch.action.admin.indices.create.CreateIndexResponse;, + * <p>, +    IndicesClient(RestHighLevelClient restHighLevelClient) {, +    public void deleteIndexAsync(DeleteIndexRequest deleteIndexRequest, ActionListener<DeleteIndexResponse> listener,, +                                       Header... headers) {, +, +    /**, +     * Creates an index using the Create Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-create-index.html">, +     * Create Index API on elastic.co</a>, +     */, +    public CreateIndexResponse createIndex(CreateIndexRequest createIndexRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(createIndexRequest, Request::createIndex, CreateIndexResponse::fromXContent,, +            Collections.emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously creates an index using the Create Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-create-index.html">, +     * Create Index API on elastic.co</a>, +     */, +    public void createIndexAsync(CreateIndexRequest createIndexRequest, ActionListener<CreateIndexResponse> listener,, +                                       Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(createIndexRequest, Request::createIndex, CreateIndexResponse::fromXContent,, +            listener, Collections.emptySet(), headers);, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.create.CreateIndexRequest;, +import org.elasticsearch.action.admin.indices.create.CreateIndexResponse;, + * <p>, +    IndicesClient(RestHighLevelClient restHighLevelClient) {, +    public void deleteIndexAsync(DeleteIndexRequest deleteIndexRequest, ActionListener<DeleteIndexResponse> listener,, +                                       Header... headers) {, +, +    /**, +     * Creates an index using the Create Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-create-index.html">, +     * Create Index API on elastic.co</a>, +     */, +    public CreateIndexResponse createIndex(CreateIndexRequest createIndexRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(createIndexRequest, Request::createIndex, CreateIndexResponse::fromXContent,, +            Collections.emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously creates an index using the Create Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-create-index.html">, +     * Create Index API on elastic.co</a>, +     */, +    public void createIndexAsync(CreateIndexRequest createIndexRequest, ActionListener<CreateIndexResponse> listener,, +                                       Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(createIndexRequest, Request::createIndex, CreateIndexResponse::fromXContent,, +            listener, Collections.emptySet(), headers);, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java, +import org.elasticsearch.action.admin.indices.create.CreateIndexRequest;, +    static Request createIndex(CreateIndexRequest createIndexRequest) throws IOException {, +        String endpoint = endpoint(createIndexRequest.indices(), Strings.EMPTY_ARRAY, "");, +, +        Params parameters = Params.builder();, +        parameters.withTimeout(createIndexRequest.timeout());, +        parameters.withMasterTimeout(createIndexRequest.masterNodeTimeout());, +        parameters.withWaitForActiveShards(createIndexRequest.waitForActiveShards());, +        parameters.withUpdateAllTypes(createIndexRequest.updateAllTypes());, +, +        HttpEntity entity = createEntity(createIndexRequest, REQUEST_BODY_CONTENT_TYPE);, +        return new Request(HttpPut.METHOD_NAME, endpoint, parameters.getParams(), entity);, +    }, +, +        Params withUpdateAllTypes(boolean updateAllTypes) {, +            if (updateAllTypes) {, +                return putParam("update_all_types", Boolean.TRUE.toString());, +            }, +            return this;, +        }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.create.CreateIndexRequest;, +import org.elasticsearch.action.admin.indices.create.CreateIndexResponse;, + * <p>, +    IndicesClient(RestHighLevelClient restHighLevelClient) {, +    public void deleteIndexAsync(DeleteIndexRequest deleteIndexRequest, ActionListener<DeleteIndexResponse> listener,, +                                       Header... headers) {, +, +    /**, +     * Creates an index using the Create Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-create-index.html">, +     * Create Index API on elastic.co</a>, +     */, +    public CreateIndexResponse createIndex(CreateIndexRequest createIndexRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(createIndexRequest, Request::createIndex, CreateIndexResponse::fromXContent,, +            Collections.emptySet(), headers);, +    }]