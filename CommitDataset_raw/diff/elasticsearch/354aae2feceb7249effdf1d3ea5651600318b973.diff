[+++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestNodeAttrsAction.java, +import java.util.HashMap;, +import java.util.Map;, +, +                buildRow(fullId, table, node, info, att.key, att.value);, +            }, +            if (info.getServiceAttributes() != null) {, +                for (Map.Entry<String, String> entry : info.getServiceAttributes().entrySet()) {, +                    buildRow(fullId, table, node, info, entry.getKey(), entry.getValue());, +                }, +            }, +        }, +, +        return table;, +    }, +, +    private final void buildRow(boolean fullId, Table table, DiscoveryNode node, NodeInfo info, String key, String value) {, +        table.addCell(key);, +        table.addCell(value);, +++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestNodeAttrsAction.java, +import java.util.HashMap;, +import java.util.Map;, +, +                buildRow(fullId, table, node, info, att.key, att.value);, +            }, +            if (info.getServiceAttributes() != null) {, +                for (Map.Entry<String, String> entry : info.getServiceAttributes().entrySet()) {, +                    buildRow(fullId, table, node, info, entry.getKey(), entry.getValue());, +                }, +            }, +        }, +, +        return table;, +    }, +, +    private final void buildRow(boolean fullId, Table table, DiscoveryNode node, NodeInfo info, String key, String value) {, +        table.addCell(key);, +        table.addCell(value);, +++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestNodesAction.java, +import java.util.Map;, +        table.addCell("http_address", "default:false;alias:http;desc:bound http adress");, +            final Map<String, String> serviceAttributes = info.getServiceAttributes();, +            if (serviceAttributes != null) {, +                table.addCell(serviceAttributes.getOrDefault("http_address", "-"));, +            } else {, +                table.addCell("-");, +            }, +++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestNodeAttrsAction.java, +import java.util.HashMap;, +import java.util.Map;, +, +                buildRow(fullId, table, node, info, att.key, att.value);, +            }, +            if (info.getServiceAttributes() != null) {, +                for (Map.Entry<String, String> entry : info.getServiceAttributes().entrySet()) {, +                    buildRow(fullId, table, node, info, entry.getKey(), entry.getValue());, +                }, +            }, +        }, +, +        return table;, +    }, +, +    private final void buildRow(boolean fullId, Table table, DiscoveryNode node, NodeInfo info, String key, String value) {, +        table.addCell(key);, +        table.addCell(value);, +++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestNodesAction.java, +import java.util.Map;, +        table.addCell("http_address", "default:false;alias:http;desc:bound http adress");, +            final Map<String, String> serviceAttributes = info.getServiceAttributes();, +            if (serviceAttributes != null) {, +                table.addCell(serviceAttributes.getOrDefault("http_address", "-"));, +            } else {, +                table.addCell("-");, +            }, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/cat.nodes/10_basic.yaml, +, +  - do:, +      cat.nodes:, +          h: http, +          v: true, +, +  - match:, +      $body: |, +               /^      http \n ((\d{1,3}\.){3}\d{1,3}:\d{1,5}\n)+  $/]