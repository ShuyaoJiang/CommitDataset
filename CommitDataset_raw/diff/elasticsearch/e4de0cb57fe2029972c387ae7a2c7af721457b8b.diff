[+++ b/src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java, +++ b/src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java, +                scope.name() + "-cluster", settingsSource, getNumClientNodes(),, +                InternalTestCluster.DEFAULT_ENABLE_HTTP_PIPELINING, nodePrefix);, +++ b/src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java, +                scope.name() + "-cluster", settingsSource, getNumClientNodes(),, +                InternalTestCluster.DEFAULT_ENABLE_HTTP_PIPELINING, nodePrefix);, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java, +        return "single-node-cluster";, +++ b/src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java, +                scope.name() + "-cluster", settingsSource, getNumClientNodes(),, +                InternalTestCluster.DEFAULT_ENABLE_HTTP_PIPELINING, nodePrefix);, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java, +        return "single-node-cluster";, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java, +++ b/src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java, +                scope.name() + "-cluster", settingsSource, getNumClientNodes(),, +                InternalTestCluster.DEFAULT_ENABLE_HTTP_PIPELINING, nodePrefix);, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java, +        return "single-node-cluster";, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java, +++ b/src/test/java/org/elasticsearch/test/InternalTestCluster.java, +import com.carrotsearch.randomizedtesting.SysGlobals;, +    private static final int JVM_ORDINAL = Integer.parseInt(System.getProperty(SysGlobals.CHILDVM_SYSPROP_JVM_ID, "0"));, +    public static final int BASE_PORT = 9300 + 100 * (JVM_ORDINAL + 1);, +, +                               boolean enableHttpPipelining, String nodePrefix) {, +        this(clusterSeed, baseDir, minNumDataNodes, maxNumDataNodes, clusterName, DEFAULT_SETTINGS_SOURCE, numClientNodes, enableHttpPipelining, nodePrefix);, +                                boolean enableHttpPipelining, String nodePrefix) {, +        builder.put("transport.tcp.port", BASE_PORT + "-" + (BASE_PORT+100));, +        builder.put("http.port", BASE_PORT+101 + "-" + (BASE_PORT+200));, +++ b/src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java, +                scope.name() + "-cluster", settingsSource, getNumClientNodes(),, +                InternalTestCluster.DEFAULT_ENABLE_HTTP_PIPELINING, nodePrefix);, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java, +        return "single-node-cluster";, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java, +++ b/src/test/java/org/elasticsearch/test/InternalTestCluster.java, +import com.carrotsearch.randomizedtesting.SysGlobals;, +    private static final int JVM_ORDINAL = Integer.parseInt(System.getProperty(SysGlobals.CHILDVM_SYSPROP_JVM_ID, "0"));, +    public static final int BASE_PORT = 9300 + 100 * (JVM_ORDINAL + 1);, +, +                               boolean enableHttpPipelining, String nodePrefix) {, +        this(clusterSeed, baseDir, minNumDataNodes, maxNumDataNodes, clusterName, DEFAULT_SETTINGS_SOURCE, numClientNodes, enableHttpPipelining, nodePrefix);, +                                boolean enableHttpPipelining, String nodePrefix) {, +        builder.put("transport.tcp.port", BASE_PORT + "-" + (BASE_PORT+100));, +        builder.put("http.port", BASE_PORT+101 + "-" + (BASE_PORT+200));, +++ b/src/test/java/org/elasticsearch/test/discovery/ClusterDiscoveryConfiguration.java, +import org.omg.CORBA.INTERNAL;, +            return 30000 + InternalTestCluster.BASE_PORT;, +++ b/src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java, +                scope.name() + "-cluster", settingsSource, getNumClientNodes(),, +                InternalTestCluster.DEFAULT_ENABLE_HTTP_PIPELINING, nodePrefix);, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java, +        return "single-node-cluster";, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java, +++ b/src/test/java/org/elasticsearch/test/InternalTestCluster.java, +import com.carrotsearch.randomizedtesting.SysGlobals;, +    private static final int JVM_ORDINAL = Integer.parseInt(System.getProperty(SysGlobals.CHILDVM_SYSPROP_JVM_ID, "0"));, +    public static final int BASE_PORT = 9300 + 100 * (JVM_ORDINAL + 1);, +, +                               boolean enableHttpPipelining, String nodePrefix) {, +        this(clusterSeed, baseDir, minNumDataNodes, maxNumDataNodes, clusterName, DEFAULT_SETTINGS_SOURCE, numClientNodes, enableHttpPipelining, nodePrefix);, +                                boolean enableHttpPipelining, String nodePrefix) {, +        builder.put("transport.tcp.port", BASE_PORT + "-" + (BASE_PORT+100));, +        builder.put("http.port", BASE_PORT+101 + "-" + (BASE_PORT+200));, +++ b/src/test/java/org/elasticsearch/test/discovery/ClusterDiscoveryConfiguration.java, +import org.omg.CORBA.INTERNAL;, +            return 30000 + InternalTestCluster.BASE_PORT;, +++ b/src/test/java/org/elasticsearch/test/test/InternalTestClusterTests.java, +        InternalTestCluster cluster0 = new InternalTestCluster(clusterSeed, baseDir, minNumDataNodes, maxNumDataNodes, clusterName, settingsSource, numClientNodes, enableHttpPipelining, nodePrefix);, +        InternalTestCluster cluster1 = new InternalTestCluster(clusterSeed, baseDir, minNumDataNodes, maxNumDataNodes, clusterName, settingsSource, numClientNodes, enableHttpPipelining, nodePrefix);, +        final String clusterName1 = "shared1";//clusterName("shared1", clusterSeed);, +        final String clusterName2 = "shared2";//clusterName("shared", Integer.toString(CHILD_JVM_ID), clusterSeed);, +        /*while (clusterName.equals(clusterName1)) {, +        }*/, +        InternalTestCluster cluster0 = new InternalTestCluster(clusterSeed, baseDir, minNumDataNodes, maxNumDataNodes, clusterName1, settingsSource, numClientNodes, enableHttpPipelining, nodePrefix);, +        InternalTestCluster cluster1 = new InternalTestCluster(clusterSeed, baseDir, minNumDataNodes, maxNumDataNodes, clusterName2, settingsSource, numClientNodes, enableHttpPipelining, nodePrefix);, +++ b/src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java, +                scope.name() + "-cluster", settingsSource, getNumClientNodes(),, +                InternalTestCluster.DEFAULT_ENABLE_HTTP_PIPELINING, nodePrefix);, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java, +        return "single-node-cluster";, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java, +++ b/src/test/java/org/elasticsearch/test/InternalTestCluster.java, +import com.carrotsearch.randomizedtesting.SysGlobals;, +    private static final int JVM_ORDINAL = Integer.parseInt(System.getProperty(SysGlobals.CHILDVM_SYSPROP_JVM_ID, "0"));, +    public static final int BASE_PORT = 9300 + 100 * (JVM_ORDINAL + 1);, +, +                               boolean enableHttpPipelining, String nodePrefix) {, +        this(clusterSeed, baseDir, minNumDataNodes, maxNumDataNodes, clusterName, DEFAULT_SETTINGS_SOURCE, numClientNodes, enableHttpPipelining, nodePrefix);, +                                boolean enableHttpPipelining, String nodePrefix) {, +        builder.put("transport.tcp.port", BASE_PORT + "-" + (BASE_PORT+100));]