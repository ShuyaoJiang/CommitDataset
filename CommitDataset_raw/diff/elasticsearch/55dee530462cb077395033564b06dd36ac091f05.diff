[+++ b/server/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        /**, +         * Update the number of replicas for the specified indices., +         *, +         * @param numberOfReplicas the number of replicas, +         * @param indices          the indices to update the number of replicas for, +         * @return the builder, +         */, +        public Builder updateNumberOfReplicas(final int numberOfReplicas, final String[] indices) {, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        /**, +         * Update the number of replicas for the specified indices., +         *, +         * @param numberOfReplicas the number of replicas, +         * @param indices          the indices to update the number of replicas for, +         * @return the builder, +         */, +        public Builder updateNumberOfReplicas(final int numberOfReplicas, final String[] indices) {, +++ b/server/src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java, +        /**, +         * Update the number of replicas for the specified indices., +         *, +         * @param numberOfReplicas the number of replicas, +         * @param indices          the indices to update the number of replicas for, +         * @return the builder, +         */, +        public Builder updateNumberOfReplicas(final int numberOfReplicas, final String[] indices) {, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        /**, +         * Update the number of replicas for the specified indices., +         *, +         * @param numberOfReplicas the number of replicas, +         * @param indices          the indices to update the number of replicas for, +         * @return the builder, +         */, +        public Builder updateNumberOfReplicas(final int numberOfReplicas, final String[] indices) {, +++ b/server/src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java, +        /**, +         * Update the number of replicas for the specified indices., +         *, +         * @param numberOfReplicas the number of replicas, +         * @param indices          the indices to update the number of replicas for, +         * @return the builder, +         */, +        public Builder updateNumberOfReplicas(final int numberOfReplicas, final String[] indices) {, +++ b/server/src/test/java/org/elasticsearch/cluster/routing/RoutingTableTests.java, +            b.updateNumberOfReplicas(1, new String[]{"foo"});, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        /**, +         * Update the number of replicas for the specified indices., +         *, +         * @param numberOfReplicas the number of replicas, +         * @param indices          the indices to update the number of replicas for, +         * @return the builder, +         */, +        public Builder updateNumberOfReplicas(final int numberOfReplicas, final String[] indices) {, +++ b/server/src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java, +        /**, +         * Update the number of replicas for the specified indices., +         *, +         * @param numberOfReplicas the number of replicas, +         * @param indices          the indices to update the number of replicas for, +         * @return the builder, +         */, +        public Builder updateNumberOfReplicas(final int numberOfReplicas, final String[] indices) {, +++ b/server/src/test/java/org/elasticsearch/cluster/routing/RoutingTableTests.java, +            b.updateNumberOfReplicas(1, new String[]{"foo"});, +++ b/server/src/test/java/org/elasticsearch/cluster/routing/allocation/InSyncAllocationIdTests.java, +            .routingTable(RoutingTable.builder(clusterState.routingTable()).updateNumberOfReplicas(0, new String[]{"test"}).build()), +            .metaData(MetaData.builder(clusterState.metaData()).updateNumberOfReplicas(0, new String[]{"test"})).build();, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        /**, +         * Update the number of replicas for the specified indices., +         *, +         * @param numberOfReplicas the number of replicas, +         * @param indices          the indices to update the number of replicas for, +         * @return the builder, +         */, +        public Builder updateNumberOfReplicas(final int numberOfReplicas, final String[] indices) {, +++ b/server/src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java, +        /**, +         * Update the number of replicas for the specified indices., +         *, +         * @param numberOfReplicas the number of replicas, +         * @param indices          the indices to update the number of replicas for, +         * @return the builder, +         */, +        public Builder updateNumberOfReplicas(final int numberOfReplicas, final String[] indices) {, +++ b/server/src/test/java/org/elasticsearch/cluster/routing/RoutingTableTests.java, +            b.updateNumberOfReplicas(1, new String[]{"foo"});, +++ b/server/src/test/java/org/elasticsearch/cluster/routing/allocation/InSyncAllocationIdTests.java, +            .routingTable(RoutingTable.builder(clusterState.routingTable()).updateNumberOfReplicas(0, new String[]{"test"}).build()), +            .metaData(MetaData.builder(clusterState.metaData()).updateNumberOfReplicas(0, new String[]{"test"})).build();, +++ b/server/src/test/java/org/elasticsearch/cluster/routing/allocation/PreferPrimaryAllocationTests.java, +        final String[] indices = {"test1", "test2"};, +        RoutingTable updatedRoutingTable =, +                RoutingTable.builder(clusterState.routingTable()).updateNumberOfReplicas(1, indices).build();, +        metaData = MetaData.builder(clusterState.metaData()).updateNumberOfReplicas(1, indices).build();, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        /**]