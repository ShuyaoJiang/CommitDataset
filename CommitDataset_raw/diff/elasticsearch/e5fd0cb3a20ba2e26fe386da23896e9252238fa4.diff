[+++ b/Vagrantfile, +    # Give the boxes 3GB because Elasticsearch defaults to using 2GB, +    v.memory = 3072, +++ b/Vagrantfile, +    # Give the boxes 3GB because Elasticsearch defaults to using 2GB, +    v.memory = 3072, +++ b/benchmarks/build.gradle, +// enable the JMH's BenchmarkProcessor to generate the final benchmark classes, +// needs to be added separately otherwise Gradle will quote it and javac will fail, +compileJava.options.compilerArgs.addAll(["-processor", "org.openjdk.jmh.generators.BenchmarkProcessor"]), +++ b/Vagrantfile, +    # Give the boxes 3GB because Elasticsearch defaults to using 2GB, +    v.memory = 3072, +++ b/benchmarks/build.gradle, +// enable the JMH's BenchmarkProcessor to generate the final benchmark classes, +// needs to be added separately otherwise Gradle will quote it and javac will fail, +compileJava.options.compilerArgs.addAll(["-processor", "org.openjdk.jmh.generators.BenchmarkProcessor"]), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                options.compilerArgs << '-Werror' << '-Xlint:all,-path,-serial,-options,-deprecation' << '-Xdoclint:all' << '-Xdoclint:-missing', +, +                // either disable annotation processor completely (default) or allow to enable them if an annotation processor is explicitly defined, +                if (options.compilerArgs.contains("-processor") == false) {, +                    options.compilerArgs << '-proc:none', +                }, +, +++ b/Vagrantfile, +    # Give the boxes 3GB because Elasticsearch defaults to using 2GB, +    v.memory = 3072, +++ b/benchmarks/build.gradle, +// enable the JMH's BenchmarkProcessor to generate the final benchmark classes, +// needs to be added separately otherwise Gradle will quote it and javac will fail, +compileJava.options.compilerArgs.addAll(["-processor", "org.openjdk.jmh.generators.BenchmarkProcessor"]), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                options.compilerArgs << '-Werror' << '-Xlint:all,-path,-serial,-options,-deprecation' << '-Xdoclint:all' << '-Xdoclint:-missing', +, +                // either disable annotation processor completely (default) or allow to enable them if an annotation processor is explicitly defined, +                if (options.compilerArgs.contains("-processor") == false) {, +                    options.compilerArgs << '-proc:none', +                }, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    String jvmArgs = "-Xms" + System.getProperty('tests.heap.size', '512m') +, +            " " + "-Xmx" + System.getProperty('tests.heap.size', '512m') +, +            " " + System.getProperty('tests.jvm.argline', ''), +++ b/Vagrantfile, +    # Give the boxes 3GB because Elasticsearch defaults to using 2GB, +    v.memory = 3072, +++ b/benchmarks/build.gradle, +// enable the JMH's BenchmarkProcessor to generate the final benchmark classes, +// needs to be added separately otherwise Gradle will quote it and javac will fail, +compileJava.options.compilerArgs.addAll(["-processor", "org.openjdk.jmh.generators.BenchmarkProcessor"]), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                options.compilerArgs << '-Werror' << '-Xlint:all,-path,-serial,-options,-deprecation' << '-Xdoclint:all' << '-Xdoclint:-missing', +, +                // either disable annotation processor completely (default) or allow to enable them if an annotation processor is explicitly defined, +                if (options.compilerArgs.contains("-processor") == false) {, +                    options.compilerArgs << '-proc:none', +                }, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    String jvmArgs = "-Xms" + System.getProperty('tests.heap.size', '512m') +, +            " " + "-Xmx" + System.getProperty('tests.heap.size', '512m') +, +            " " + System.getProperty('tests.jvm.argline', ''), +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequest.java, +    private boolean ignoreUnavailable;, +, +    /**, +     * Set to <code>true</code> to ignore unavailable snapshots, instead of throwing an exception., +     * Defaults to <code>false</code>, which means unavailable snapshots cause an exception to be thrown., +     *, +     * @param ignoreUnavailable whether to ignore unavailable snapshots, +     * @return this request, +     */, +    public SnapshotsStatusRequest ignoreUnavailable(boolean ignoreUnavailable) {, +        this.ignoreUnavailable = ignoreUnavailable;, +        return this;, +    }, +, +    /**, +     * Returns whether the request permits unavailable snapshots to be ignored., +     *, +     * @return true if the request will ignore unavailable snapshots, false if it will throw an exception on unavailable snapshots, +     */, +    public boolean ignoreUnavailable() {, +        return ignoreUnavailable;, +    }, +, +        ignoreUnavailable = in.readBoolean();, +        out.writeBoolean(ignoreUnavailable);, +++ b/Vagrantfile, +    # Give the boxes 3GB because Elasticsearch defaults to using 2GB, +    v.memory = 3072, +++ b/benchmarks/build.gradle, +// enable the JMH's BenchmarkProcessor to generate the final benchmark classes, +// needs to be added separately otherwise Gradle will quote it and javac will fail, +compileJava.options.compilerArgs.addAll(["-processor", "org.openjdk.jmh.generators.BenchmarkProcessor"]), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                options.compilerArgs << '-Werror' << '-Xlint:all,-path,-serial,-options,-deprecation' << '-Xdoclint:all' << '-Xdoclint:-missing', +, +                // either disable annotation processor completely (default) or allow to enable them if an annotation processor is explicitly defined]