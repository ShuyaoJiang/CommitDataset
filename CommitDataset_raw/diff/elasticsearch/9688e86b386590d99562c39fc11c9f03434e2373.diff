[+++ b/core/src/main/java/org/elasticsearch/index/IndexServicesProvider.java, +, +import org.elasticsearch.indices.memory.IndexingMemoryController;, +    private final IndexingMemoryController indexingMemoryController;, +    public IndexServicesProvider(IndicesLifecycle indicesLifecycle, ThreadPool threadPool, MapperService mapperService, IndexQueryParserService queryParserService, IndexCache indexCache, IndexAliasesService indexAliasesService, IndicesQueryCache indicesQueryCache, CodecService codecService, TermVectorsService termVectorsService, IndexFieldDataService indexFieldDataService, @Nullable IndicesWarmer warmer, SimilarityService similarityService, EngineFactory factory, BigArrays bigArrays, @Nullable IndexSearcherWrapper indexSearcherWrapper, IndexingMemoryController indexingMemoryController) {, +        this.indexingMemoryController = indexingMemoryController;, +    public IndexSearcherWrapper getIndexSearcherWrapper() {, +        return indexSearcherWrapper;, +    }, +, +    public IndexingMemoryController getIndexingMemoryController() {, +        return indexingMemoryController;, +    }, +++ b/core/src/main/java/org/elasticsearch/index/IndexServicesProvider.java, +, +import org.elasticsearch.indices.memory.IndexingMemoryController;, +    private final IndexingMemoryController indexingMemoryController;, +    public IndexServicesProvider(IndicesLifecycle indicesLifecycle, ThreadPool threadPool, MapperService mapperService, IndexQueryParserService queryParserService, IndexCache indexCache, IndexAliasesService indexAliasesService, IndicesQueryCache indicesQueryCache, CodecService codecService, TermVectorsService termVectorsService, IndexFieldDataService indexFieldDataService, @Nullable IndicesWarmer warmer, SimilarityService similarityService, EngineFactory factory, BigArrays bigArrays, @Nullable IndexSearcherWrapper indexSearcherWrapper, IndexingMemoryController indexingMemoryController) {, +        this.indexingMemoryController = indexingMemoryController;, +    public IndexSearcherWrapper getIndexSearcherWrapper() {, +        return indexSearcherWrapper;, +    }, +, +    public IndexingMemoryController getIndexingMemoryController() {, +        return indexingMemoryController;, +    }, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +    /** How much heap Lucene's IndexWriter is using */, +    abstract public long indexWriterRAMBytesUsed();, +, +++ b/core/src/main/java/org/elasticsearch/index/IndexServicesProvider.java, +, +import org.elasticsearch.indices.memory.IndexingMemoryController;, +    private final IndexingMemoryController indexingMemoryController;, +    public IndexServicesProvider(IndicesLifecycle indicesLifecycle, ThreadPool threadPool, MapperService mapperService, IndexQueryParserService queryParserService, IndexCache indexCache, IndexAliasesService indexAliasesService, IndicesQueryCache indicesQueryCache, CodecService codecService, TermVectorsService termVectorsService, IndexFieldDataService indexFieldDataService, @Nullable IndicesWarmer warmer, SimilarityService similarityService, EngineFactory factory, BigArrays bigArrays, @Nullable IndexSearcherWrapper indexSearcherWrapper, IndexingMemoryController indexingMemoryController) {, +        this.indexingMemoryController = indexingMemoryController;, +    public IndexSearcherWrapper getIndexSearcherWrapper() {, +        return indexSearcherWrapper;, +    }, +, +    public IndexingMemoryController getIndexingMemoryController() {, +        return indexingMemoryController;, +    }, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +    /** How much heap Lucene's IndexWriter is using */, +    abstract public long indexWriterRAMBytesUsed();, +, +++ b/core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java, +import org.elasticsearch.indices.memory.IndexingMemoryController;, +        // We start up inactive and rely on IndexingMemoryController to give us our fair share once we start indexing:, +        indexingBufferSize = IndexingMemoryController.INACTIVE_SHARD_INDEXING_BUFFER;, +++ b/core/src/main/java/org/elasticsearch/index/IndexServicesProvider.java, +, +import org.elasticsearch.indices.memory.IndexingMemoryController;, +    private final IndexingMemoryController indexingMemoryController;, +    public IndexServicesProvider(IndicesLifecycle indicesLifecycle, ThreadPool threadPool, MapperService mapperService, IndexQueryParserService queryParserService, IndexCache indexCache, IndexAliasesService indexAliasesService, IndicesQueryCache indicesQueryCache, CodecService codecService, TermVectorsService termVectorsService, IndexFieldDataService indexFieldDataService, @Nullable IndicesWarmer warmer, SimilarityService similarityService, EngineFactory factory, BigArrays bigArrays, @Nullable IndexSearcherWrapper indexSearcherWrapper, IndexingMemoryController indexingMemoryController) {, +        this.indexingMemoryController = indexingMemoryController;, +    public IndexSearcherWrapper getIndexSearcherWrapper() {, +        return indexSearcherWrapper;, +    }, +, +    public IndexingMemoryController getIndexingMemoryController() {, +        return indexingMemoryController;, +    }, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +    /** How much heap Lucene's IndexWriter is using */, +    abstract public long indexWriterRAMBytesUsed();, +, +++ b/core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java, +import org.elasticsearch.indices.memory.IndexingMemoryController;, +        // We start up inactive and rely on IndexingMemoryController to give us our fair share once we start indexing:, +        indexingBufferSize = IndexingMemoryController.INACTIVE_SHARD_INDEXING_BUFFER;, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +    public long indexWriterRAMBytesUsed() {, +        return indexWriter.ramBytesUsed();, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/index/IndexServicesProvider.java, +, +import org.elasticsearch.indices.memory.IndexingMemoryController;, +    private final IndexingMemoryController indexingMemoryController;, +    public IndexServicesProvider(IndicesLifecycle indicesLifecycle, ThreadPool threadPool, MapperService mapperService, IndexQueryParserService queryParserService, IndexCache indexCache, IndexAliasesService indexAliasesService, IndicesQueryCache indicesQueryCache, CodecService codecService, TermVectorsService termVectorsService, IndexFieldDataService indexFieldDataService, @Nullable IndicesWarmer warmer, SimilarityService similarityService, EngineFactory factory, BigArrays bigArrays, @Nullable IndexSearcherWrapper indexSearcherWrapper, IndexingMemoryController indexingMemoryController) {, +        this.indexingMemoryController = indexingMemoryController;, +    public IndexSearcherWrapper getIndexSearcherWrapper() {, +        return indexSearcherWrapper;, +    }, +, +    public IndexingMemoryController getIndexingMemoryController() {, +        return indexingMemoryController;, +    }, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +    /** How much heap Lucene's IndexWriter is using */, +    abstract public long indexWriterRAMBytesUsed();, +, +++ b/core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java, +import org.elasticsearch.indices.memory.IndexingMemoryController;, +        // We start up inactive and rely on IndexingMemoryController to give us our fair share once we start indexing:, +        indexingBufferSize = IndexingMemoryController.INACTIVE_SHARD_INDEXING_BUFFER;, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java]