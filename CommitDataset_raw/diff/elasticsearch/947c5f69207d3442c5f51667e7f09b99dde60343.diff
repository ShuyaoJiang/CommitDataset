[+++ b/src/main/java/org/elasticsearch/action/search/type/ParsedScrollId.java, +import org.elasticsearch.Version;, +    public static final Version SCROLL_SEARCH_AFTER_MINIMUM_VERSION = Version.V_1_2_0;, +, +++ b/src/main/java/org/elasticsearch/action/search/type/ParsedScrollId.java, +import org.elasticsearch.Version;, +    public static final Version SCROLL_SEARCH_AFTER_MINIMUM_VERSION = Version.V_1_2_0;, +, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, +            sortedShardList = searchPhaseController.sortDocs(request, useSlowScroll, queryFetchResults);, +++ b/src/main/java/org/elasticsearch/action/search/type/ParsedScrollId.java, +import org.elasticsearch.Version;, +    public static final Version SCROLL_SEARCH_AFTER_MINIMUM_VERSION = Version.V_1_2_0;, +, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, +            sortedShardList = searchPhaseController.sortDocs(request, useSlowScroll, queryFetchResults);, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +import org.apache.lucene.search.ScoreDoc;, +        void innerExecuteFetchPhase() throws Exception {, +            sortedShardList = searchPhaseController.sortDocs(request, useSlowScroll, queryResults);, +            final ScoreDoc[] lastEmittedDocPerShard = searchPhaseController.getLastEmittedDocPerShard(, +                    request, sortedShardList, firstResults.length(), +            );, +                    FetchSearchRequest fetchSearchRequest = createFetchRequest(queryResult, entry, lastEmittedDocPerShard);, +                                    FetchSearchRequest fetchSearchRequest = createFetchRequest(queryResult, entry, lastEmittedDocPerShard);, +                            final FetchSearchRequest fetchSearchRequest = createFetchRequest(queryResult, entry, lastEmittedDocPerShard);, +++ b/src/main/java/org/elasticsearch/action/search/type/ParsedScrollId.java, +import org.elasticsearch.Version;, +    public static final Version SCROLL_SEARCH_AFTER_MINIMUM_VERSION = Version.V_1_2_0;, +, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, +            sortedShardList = searchPhaseController.sortDocs(request, useSlowScroll, queryFetchResults);, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +import org.apache.lucene.search.ScoreDoc;, +        void innerExecuteFetchPhase() throws Exception {, +            sortedShardList = searchPhaseController.sortDocs(request, useSlowScroll, queryResults);, +            final ScoreDoc[] lastEmittedDocPerShard = searchPhaseController.getLastEmittedDocPerShard(, +                    request, sortedShardList, firstResults.length(), +            );, +                    FetchSearchRequest fetchSearchRequest = createFetchRequest(queryResult, entry, lastEmittedDocPerShard);, +                                    FetchSearchRequest fetchSearchRequest = createFetchRequest(queryResult, entry, lastEmittedDocPerShard);, +                            final FetchSearchRequest fetchSearchRequest = createFetchRequest(queryResult, entry, lastEmittedDocPerShard);, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchHelper.java, +    public static ShardSearchRequest internalSearchRequest(ShardRouting shardRouting, int numberOfShards, SearchRequest request, String[] filteringAliases, long nowInMillis, boolean useSlowScroll) {, +        ShardSearchRequest shardRequest = new ShardSearchRequest(request, shardRouting, numberOfShards, useSlowScroll);, +++ b/src/main/java/org/elasticsearch/action/search/type/ParsedScrollId.java, +import org.elasticsearch.Version;, +    public static final Version SCROLL_SEARCH_AFTER_MINIMUM_VERSION = Version.V_1_2_0;, +, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, +            sortedShardList = searchPhaseController.sortDocs(request, useSlowScroll, queryFetchResults);, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +import org.apache.lucene.search.ScoreDoc;, +        void innerExecuteFetchPhase() throws Exception {, +            sortedShardList = searchPhaseController.sortDocs(request, useSlowScroll, queryResults);, +            final ScoreDoc[] lastEmittedDocPerShard = searchPhaseController.getLastEmittedDocPerShard(, +                    request, sortedShardList, firstResults.length(), +            );, +                    FetchSearchRequest fetchSearchRequest = createFetchRequest(queryResult, entry, lastEmittedDocPerShard);, +                                    FetchSearchRequest fetchSearchRequest = createFetchRequest(queryResult, entry, lastEmittedDocPerShard);, +                            final FetchSearchRequest fetchSearchRequest = createFetchRequest(queryResult, entry, lastEmittedDocPerShard);, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchHelper.java, +    public static ShardSearchRequest internalSearchRequest(ShardRouting shardRouting, int numberOfShards, SearchRequest request, String[] filteringAliases, long nowInMillis, boolean useSlowScroll) {, +        ShardSearchRequest shardRequest = new ShardSearchRequest(request, shardRouting, numberOfShards, useSlowScroll);, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryAndFetchAction.java, +            sortedShardList = searchPhaseController.sortDocs(request, useSlowScroll, firstResults);, +++ b/src/main/java/org/elasticsearch/action/search/type/ParsedScrollId.java, +import org.elasticsearch.Version;, +    public static final Version SCROLL_SEARCH_AFTER_MINIMUM_VERSION = Version.V_1_2_0;, +, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, +            sortedShardList = searchPhaseController.sortDocs(request, useSlowScroll, queryFetchResults);, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +import org.apache.lucene.search.ScoreDoc;, +        void innerExecuteFetchPhase() throws Exception {, +            sortedShardList = searchPhaseController.sortDocs(request, useSlowScroll, queryResults);, +            final ScoreDoc[] lastEmittedDocPerShard = searchPhaseController.getLastEmittedDocPerShard(, +                    request, sortedShardList, firstResults.length(), +            );, +                    FetchSearchRequest fetchSearchRequest = createFetchRequest(queryResult, entry, lastEmittedDocPerShard);, +                                    FetchSearchRequest fetchSearchRequest = createFetchRequest(queryResult, entry, lastEmittedDocPerShard);, +                            final FetchSearchRequest fetchSearchRequest = createFetchRequest(queryResult, entry, lastEmittedDocPerShard);, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchHelper.java, +    public static ShardSearchRequest internalSearchRequest(ShardRouting shardRouting, int numberOfShards, SearchRequest request, String[] filteringAliases, long nowInMillis, boolean useSlowScroll) {, +        ShardSearchRequest shardRequest = new ShardSearchRequest(request, shardRouting, numberOfShards, useSlowScroll);, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryAndFetchAction.java, +            sortedShardList = searchPhaseController.sortDocs(request, useSlowScroll, firstResults);, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java, +import org.apache.lucene.search.ScoreDoc;, +        protected void moveToSecondPhase() throws Exception {, +            sortedShardList = searchPhaseController.sortDocs(request, useSlowScroll, firstResults);, +            final ScoreDoc[] lastEmittedDocPerShard = searchPhaseController.getLastEmittedDocPerShard(, +                    request, sortedShardList, firstResults.length(), +            );, +                    FetchSearchRequest fetchSearchRequest = createFetchRequest(queryResult, entry, lastEmittedDocPerShard);, +                                    FetchSearchRequest fetchSearchRequest = createFetchRequest(queryResult, entry, lastEmittedDocPerShard);, +                            final FetchSearchRequest fetchSearchRequest = createFetchRequest(queryResult, entry, lastEmittedDocPerShard);, +++ b/src/main/java/org/elasticsearch/action/search/type/ParsedScrollId.java, +import org.elasticsearch.Version;, +    public static final Version SCROLL_SEARCH_AFTER_MINIMUM_VERSION = Version.V_1_2_0;]