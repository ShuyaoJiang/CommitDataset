[+++ b/dev-tools/forbidden/all-signatures.txt, +@defaultMessage Use java.nio.file instead of java.io.File API, +java.util.jar.JarFile, +java.util.zip.ZipFile, +java.io.File, +java.io.FileInputStream, +java.io.FileOutputStream, +java.io.PrintStream#<init>(java.lang.String,java.lang.String), +java.io.PrintWriter#<init>(java.lang.String,java.lang.String), +java.util.Formatter#<init>(java.lang.String,java.lang.String,java.util.Locale), +java.io.RandomAccessFile, +java.nio.file.Path#toFile(), +++ b/dev-tools/forbidden/all-signatures.txt, +@defaultMessage Use java.nio.file instead of java.io.File API, +java.util.jar.JarFile, +java.util.zip.ZipFile, +java.io.File, +java.io.FileInputStream, +java.io.FileOutputStream, +java.io.PrintStream#<init>(java.lang.String,java.lang.String), +java.io.PrintWriter#<init>(java.lang.String,java.lang.String), +java.util.Formatter#<init>(java.lang.String,java.lang.String,java.util.Locale), +java.io.RandomAccessFile, +java.nio.file.Path#toFile(), +++ b/dev-tools/forbidden/core-signatures.txt, +++ b/dev-tools/forbidden/all-signatures.txt, +@defaultMessage Use java.nio.file instead of java.io.File API, +java.util.jar.JarFile, +java.util.zip.ZipFile, +java.io.File, +java.io.FileInputStream, +java.io.FileOutputStream, +java.io.PrintStream#<init>(java.lang.String,java.lang.String), +java.io.PrintWriter#<init>(java.lang.String,java.lang.String), +java.util.Formatter#<init>(java.lang.String,java.lang.String,java.util.Locale), +java.io.RandomAccessFile, +java.nio.file.Path#toFile(), +++ b/dev-tools/forbidden/core-signatures.txt, +++ b/pom.xml, +                                <!-- start exclude for java.io.File bridging -->, +                                <exclude>org/elasticsearch/test/ExternalNode.class</exclude>, +                                <exclude>org/elasticsearch/test/ElasticsearchTestCase.class</exclude>, +                                <!-- end exclude for java.io.File bridging -->, +++ b/dev-tools/forbidden/all-signatures.txt, +@defaultMessage Use java.nio.file instead of java.io.File API, +java.util.jar.JarFile, +java.util.zip.ZipFile, +java.io.File, +java.io.FileInputStream, +java.io.FileOutputStream, +java.io.PrintStream#<init>(java.lang.String,java.lang.String), +java.io.PrintWriter#<init>(java.lang.String,java.lang.String), +java.util.Formatter#<init>(java.lang.String,java.lang.String,java.util.Locale), +java.io.RandomAccessFile, +java.nio.file.Path#toFile(), +++ b/dev-tools/forbidden/core-signatures.txt, +++ b/pom.xml, +                                <!-- start exclude for java.io.File bridging -->, +                                <exclude>org/elasticsearch/test/ExternalNode.class</exclude>, +                                <exclude>org/elasticsearch/test/ElasticsearchTestCase.class</exclude>, +                                <!-- end exclude for java.io.File bridging -->, +++ b/src/test/java/org/elasticsearch/benchmark/common/lucene/uidscan/LuceneUidScanBenchmark.java, +import java.nio.file.Paths;, +        FSDirectory dir = FSDirectory.open(Paths.get("work/test"));, +++ b/dev-tools/forbidden/all-signatures.txt, +@defaultMessage Use java.nio.file instead of java.io.File API, +java.util.jar.JarFile, +java.util.zip.ZipFile, +java.io.File, +java.io.FileInputStream, +java.io.FileOutputStream, +java.io.PrintStream#<init>(java.lang.String,java.lang.String), +java.io.PrintWriter#<init>(java.lang.String,java.lang.String), +java.util.Formatter#<init>(java.lang.String,java.lang.String,java.util.Locale), +java.io.RandomAccessFile, +java.nio.file.Path#toFile(), +++ b/dev-tools/forbidden/core-signatures.txt, +++ b/pom.xml, +                                <!-- start exclude for java.io.File bridging -->, +                                <exclude>org/elasticsearch/test/ExternalNode.class</exclude>, +                                <exclude>org/elasticsearch/test/ElasticsearchTestCase.class</exclude>, +                                <!-- end exclude for java.io.File bridging -->, +++ b/src/test/java/org/elasticsearch/benchmark/common/lucene/uidscan/LuceneUidScanBenchmark.java, +import java.nio.file.Paths;, +        FSDirectory dir = FSDirectory.open(Paths.get("work/test"));, +++ b/src/test/java/org/elasticsearch/benchmark/fs/FsAppendBenchmark.java, +import java.nio.file.Path;, +import java.nio.file.StandardOpenOption;, +        Path path = Paths.get("work/test.log");, +        IOUtils.deleteFilesIgnoringExceptions(path);, +        try (FileChannel channel = FileChannel.open(path, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW)) {, +++ b/dev-tools/forbidden/all-signatures.txt, +@defaultMessage Use java.nio.file instead of java.io.File API, +java.util.jar.JarFile, +java.util.zip.ZipFile, +java.io.File, +java.io.FileInputStream, +java.io.FileOutputStream, +java.io.PrintStream#<init>(java.lang.String,java.lang.String), +java.io.PrintWriter#<init>(java.lang.String,java.lang.String)]