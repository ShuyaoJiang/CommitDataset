[+++ b/build.gradle, +    languageLevel = org.elasticsearch.gradle.BuildPlugin.minimumJava.toString(), +++ b/build.gradle, +    languageLevel = org.elasticsearch.gradle.BuildPlugin.minimumJava.toString(), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            GradleVersion minGradle = GradleVersion.version('2.8'), +                // compile with compact 3 profile by default, +                // NOTE: this is just a compile time check: does not replace testing with a compact3 JRE, +                if (project.compactProfile != 'full') {, +                    options.compilerArgs << '-profile' << project.compactProfile, +                }, +++ b/build.gradle, +    languageLevel = org.elasticsearch.gradle.BuildPlugin.minimumJava.toString(), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            GradleVersion minGradle = GradleVersion.version('2.8'), +                // compile with compact 3 profile by default, +                // NOTE: this is just a compile time check: does not replace testing with a compact3 JRE, +                if (project.compactProfile != 'full') {, +                    options.compilerArgs << '-profile' << project.compactProfile, +                }, +++ b/core/build.gradle, +  compile 'joda-time:joda-time:2.8.2', +++ b/build.gradle, +    languageLevel = org.elasticsearch.gradle.BuildPlugin.minimumJava.toString(), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            GradleVersion minGradle = GradleVersion.version('2.8'), +                // compile with compact 3 profile by default, +                // NOTE: this is just a compile time check: does not replace testing with a compact3 JRE, +                if (project.compactProfile != 'full') {, +                    options.compilerArgs << '-profile' << project.compactProfile, +                }, +++ b/core/build.gradle, +  compile 'joda-time:joda-time:2.8.2', +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +import org.elasticsearch.cluster.block.ClusterBlocks;, +import org.elasticsearch.cluster.metadata.MetaData;, +import org.elasticsearch.common.collect.ImmutableOpenMap;, +                if (!shard.active() && shard.relocatingNodeId() == null) {, +                    if (!shard.relocating()) {, +                }, +++ b/build.gradle, +    languageLevel = org.elasticsearch.gradle.BuildPlugin.minimumJava.toString(), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            GradleVersion minGradle = GradleVersion.version('2.8'), +                // compile with compact 3 profile by default, +                // NOTE: this is just a compile time check: does not replace testing with a compact3 JRE, +                if (project.compactProfile != 'full') {, +                    options.compilerArgs << '-profile' << project.compactProfile, +                }, +++ b/core/build.gradle, +  compile 'joda-time:joda-time:2.8.2', +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +import org.elasticsearch.cluster.block.ClusterBlocks;, +import org.elasticsearch.cluster.metadata.MetaData;, +import org.elasticsearch.common.collect.ImmutableOpenMap;, +                if (!shard.active() && shard.relocatingNodeId() == null) {, +                    if (!shard.relocating()) {, +                }, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java, +++ b/build.gradle, +    languageLevel = org.elasticsearch.gradle.BuildPlugin.minimumJava.toString(), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            GradleVersion minGradle = GradleVersion.version('2.8'), +                // compile with compact 3 profile by default, +                // NOTE: this is just a compile time check: does not replace testing with a compact3 JRE, +                if (project.compactProfile != 'full') {, +                    options.compilerArgs << '-profile' << project.compactProfile, +                }, +++ b/core/build.gradle, +  compile 'joda-time:joda-time:2.8.2', +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +import org.elasticsearch.cluster.block.ClusterBlocks;, +import org.elasticsearch.cluster.metadata.MetaData;, +import org.elasticsearch.common.collect.ImmutableOpenMap;, +                if (!shard.active() && shard.relocatingNodeId() == null) {, +                    if (!shard.relocating()) {, +                }, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +            // The fail shard is the main copy of the current shard routing. Any, +            // relocation will be cancelled (and the target shard removed as well), +            // and the shard copy needs to be marked as unassigned, +                // handle relocation source shards.  we need to find the target initializing shard that is recovering, and remove it..., +                assert failedShard.initializing() == false; // should have been dealt with and returned, +, +++ b/build.gradle, +    languageLevel = org.elasticsearch.gradle.BuildPlugin.minimumJava.toString(), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            GradleVersion minGradle = GradleVersion.version('2.8'), +                // compile with compact 3 profile by default, +                // NOTE: this is just a compile time check: does not replace testing with a compact3 JRE, +                if (project.compactProfile != 'full') {, +                    options.compilerArgs << '-profile' << project.compactProfile, +                }, +++ b/core/build.gradle, +  compile 'joda-time:joda-time:2.8.2', +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +import org.elasticsearch.cluster.block.ClusterBlocks;, +import org.elasticsearch.cluster.metadata.MetaData;, +import org.elasticsearch.common.collect.ImmutableOpenMap;]