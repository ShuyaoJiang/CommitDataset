[+++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/xpack/graph/Graph.java, +import org.elasticsearch.common.inject.util.Providers;, +        return Collections.singletonList(b -> {, +            XPackPlugin.bindFeatureSet(b, GraphFeatureSet.class);, +            if (transportClientMode) {, +                b.bind(GraphLicensee.class).toProvider(Providers.of(null));, +        });, +++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/xpack/graph/Graph.java, +import org.elasticsearch.common.inject.util.Providers;, +        return Collections.singletonList(b -> {, +            XPackPlugin.bindFeatureSet(b, GraphFeatureSet.class);, +            if (transportClientMode) {, +                b.bind(GraphLicensee.class).toProvider(Providers.of(null));, +        });, +++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/xpack/graph/GraphLicensee.java, +public class GraphLicensee extends AbstractLicenseeComponent {, +    public GraphLicensee(Settings settings) {, +        super(settings, ID);, +++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/xpack/graph/Graph.java, +import org.elasticsearch.common.inject.util.Providers;, +        return Collections.singletonList(b -> {, +            XPackPlugin.bindFeatureSet(b, GraphFeatureSet.class);, +            if (transportClientMode) {, +                b.bind(GraphLicensee.class).toProvider(Providers.of(null));, +        });, +++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/xpack/graph/GraphLicensee.java, +public class GraphLicensee extends AbstractLicenseeComponent {, +    public GraphLicensee(Settings settings) {, +        super(settings, ID);, +++ /dev/null, +++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/xpack/graph/Graph.java, +import org.elasticsearch.common.inject.util.Providers;, +        return Collections.singletonList(b -> {, +            XPackPlugin.bindFeatureSet(b, GraphFeatureSet.class);, +            if (transportClientMode) {, +                b.bind(GraphLicensee.class).toProvider(Providers.of(null));, +        });, +++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/xpack/graph/GraphLicensee.java, +public class GraphLicensee extends AbstractLicenseeComponent {, +    public GraphLicensee(Settings settings) {, +        super(settings, ID);, +++ /dev/null, +++ b/elasticsearch/x-pack/graph/src/test/java/org/elasticsearch/xpack/graph/license/LicenseTests.java, +    GraphLicensee graphLicensee = new GraphLicensee(Settings.EMPTY);, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +        setOperationMode(graphLicensee, OperationMode.BASIC);, +        setOperationMode(graphLicensee, OperationMode.STANDARD);, +        setOperationMode(graphLicensee, OperationMode.BASIC);, +        disable(graphLicensee);, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +        disable(graphLicensee);, +        setOperationMode(graphLicensee, OperationMode.BASIC);, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +        setOperationMode(graphLicensee, OperationMode.BASIC);, +        setOperationMode(graphLicensee, OperationMode.STANDARD);, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +        setOperationMode(graphLicensee, OperationMode.STANDARD);, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +        setOperationMode(graphLicensee, OperationMode.GOLD);, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +        disable(graphLicensee);, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/xpack/graph/Graph.java, +import org.elasticsearch.common.inject.util.Providers;, +        return Collections.singletonList(b -> {, +            XPackPlugin.bindFeatureSet(b, GraphFeatureSet.class);, +            if (transportClientMode) {, +                b.bind(GraphLicensee.class).toProvider(Providers.of(null));, +        });, +++ b/elasticsearch/x-pack/graph/src/main/java/org/elasticsearch/xpack/graph/GraphLicensee.java, +public class GraphLicensee extends AbstractLicenseeComponent {, +    public GraphLicensee(Settings settings) {, +        super(settings, ID);, +++ /dev/null, +++ b/elasticsearch/x-pack/graph/src/test/java/org/elasticsearch/xpack/graph/license/LicenseTests.java, +    GraphLicensee graphLicensee = new GraphLicensee(Settings.EMPTY);, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +        setOperationMode(graphLicensee, OperationMode.BASIC);, +        setOperationMode(graphLicensee, OperationMode.STANDARD);, +        setOperationMode(graphLicensee, OperationMode.BASIC);, +        disable(graphLicensee);, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +        disable(graphLicensee);, +        setOperationMode(graphLicensee, OperationMode.BASIC);, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +        setOperationMode(graphLicensee, OperationMode.BASIC);, +        setOperationMode(graphLicensee, OperationMode.STANDARD);, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +        setOperationMode(graphLicensee, OperationMode.STANDARD);, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +        setOperationMode(graphLicensee, OperationMode.GOLD);, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +        disable(graphLicensee);, +        setOperationMode(graphLicensee, randomTrialOrPlatinumMode());, +++ b/elasticsearch/x-pack/license-plugin/src/main/java/org/elasticsearch/license/plugin/Licensing.java, +import org.elasticsearch.cluster.service.ClusterService;]