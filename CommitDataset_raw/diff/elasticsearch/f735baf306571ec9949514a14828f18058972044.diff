[+++ b/docs/reference/indices/optimize.asciidoc, +This call will block until the optimize is complete. If the http connection, +is lost, the request will continue in the background, and, +any new requests will block until the previous optimize is complete., +, +++ b/docs/reference/indices/optimize.asciidoc, +This call will block until the optimize is complete. If the http connection, +is lost, the request will continue in the background, and, +any new requests will block until the previous optimize is complete., +, +++ b/docs/reference/indices/upgrade.asciidoc, +This call will block until the upgrade is complete. If the http connection, +is lost, the request will continue in the background, and, +any new requests will block until the previous upgrade is complete., +++ b/docs/reference/indices/optimize.asciidoc, +This call will block until the optimize is complete. If the http connection, +is lost, the request will continue in the background, and, +any new requests will block until the previous optimize is complete., +, +++ b/docs/reference/indices/upgrade.asciidoc, +This call will block until the upgrade is complete. If the http connection, +is lost, the request will continue in the background, and, +any new requests will block until the previous upgrade is complete., +++ b/src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java, +                "maxNumSegments=" + maxNumSegments +, +++ b/docs/reference/indices/optimize.asciidoc, +This call will block until the optimize is complete. If the http connection, +is lost, the request will continue in the background, and, +any new requests will block until the previous optimize is complete., +, +++ b/docs/reference/indices/upgrade.asciidoc, +This call will block until the upgrade is complete. If the http connection, +is lost, the request will continue in the background, and, +any new requests will block until the previous upgrade is complete., +++ b/src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java, +                "maxNumSegments=" + maxNumSegments +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequestBuilder.java, +++ b/docs/reference/indices/optimize.asciidoc, +This call will block until the optimize is complete. If the http connection, +is lost, the request will continue in the background, and, +any new requests will block until the previous optimize is complete., +, +++ b/docs/reference/indices/upgrade.asciidoc, +This call will block until the upgrade is complete. If the http connection, +is lost, the request will continue in the background, and, +any new requests will block until the previous upgrade is complete., +++ b/src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java, +                "maxNumSegments=" + maxNumSegments +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequestBuilder.java, +++ b/src/main/java/org/elasticsearch/index/engine/Engine.java, +    abstract void forceMerge(boolean flush);, +    public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade) throws EngineException;, +++ b/docs/reference/indices/optimize.asciidoc, +This call will block until the optimize is complete. If the http connection, +is lost, the request will continue in the background, and, +any new requests will block until the previous optimize is complete., +, +++ b/docs/reference/indices/upgrade.asciidoc, +This call will block until the upgrade is complete. If the http connection, +is lost, the request will continue in the background, and, +any new requests will block until the previous upgrade is complete., +++ b/src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java, +                "maxNumSegments=" + maxNumSegments +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequestBuilder.java, +++ b/src/main/java/org/elasticsearch/index/engine/Engine.java, +    abstract void forceMerge(boolean flush);, +    public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade) throws EngineException;, +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +    public void forceMerge(boolean flush) {, +        forceMerge(flush, 1, false, false);, +    public void forceMerge(final boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, final boolean upgrade) throws EngineException {, +++ b/docs/reference/indices/optimize.asciidoc, +This call will block until the optimize is complete. If the http connection, +is lost, the request will continue in the background, and, +any new requests will block until the previous optimize is complete., +, +++ b/docs/reference/indices/upgrade.asciidoc, +This call will block until the upgrade is complete. If the http connection, +is lost, the request will continue in the background, and, +any new requests will block until the previous upgrade is complete., +++ b/src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java, +                "maxNumSegments=" + maxNumSegments +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequestBuilder.java, +++ b/src/main/java/org/elasticsearch/index/engine/Engine.java, +    abstract void forceMerge(boolean flush);, +    public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade) throws EngineException;, +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +    public void forceMerge(boolean flush) {, +        forceMerge(flush, 1, false, false);, +    public void forceMerge(final boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, final boolean upgrade) throws EngineException {, +++ b/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +        engine().forceMerge(optimize.flush(), optimize.maxNumSegments(), optimize.onlyExpungeDeletes(), optimize.upgrade());, +++ b/docs/reference/indices/optimize.asciidoc, +This call will block until the optimize is complete. If the http connection, +is lost, the request will continue in the background, and, +any new requests will block until the previous optimize is complete., +, +++ b/docs/reference/indices/upgrade.asciidoc, +This call will block until the upgrade is complete. If the http connection, +is lost, the request will continue in the background, and]