[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +import java.util.Map;, +    public SearchRequestBuilder addScriptField(String name, String script) {, +        sourceBuilder().scriptField(name, script);, +        return this;, +    }, +, +    public SearchRequestBuilder addScriptField(String name, String script, Map<String, Object> params) {, +        sourceBuilder().scriptField(name, script, params);, +        return this;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +import java.util.Map;, +    public SearchRequestBuilder addScriptField(String name, String script) {, +        sourceBuilder().scriptField(name, script);, +        return this;, +    }, +, +    public SearchRequestBuilder addScriptField(String name, String script, Map<String, Object> params) {, +        sourceBuilder().scriptField(name, script, params);, +        return this;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchService.java, +import org.elasticsearch.script.ScriptService;, +    private final ScriptService scriptService;, +, +                                 ScriptService scriptService, DfsPhase dfsPhase, QueryPhase queryPhase, FetchPhase fetchPhase) {, +        this.scriptService = scriptService;, +        SearchContext context = new SearchContext(idGenerator.incrementAndGet(), shardTarget, request.timeout(), request.types(), engineSearcher, indexService, scriptService);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +import java.util.Map;, +    public SearchRequestBuilder addScriptField(String name, String script) {, +        sourceBuilder().scriptField(name, script);, +        return this;, +    }, +, +    public SearchRequestBuilder addScriptField(String name, String script, Map<String, Object> params) {, +        sourceBuilder().scriptField(name, script, params);, +        return this;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchService.java, +import org.elasticsearch.script.ScriptService;, +    private final ScriptService scriptService;, +, +                                 ScriptService scriptService, DfsPhase dfsPhase, QueryPhase queryPhase, FetchPhase fetchPhase) {, +        this.scriptService = scriptService;, +        SearchContext context = new SearchContext(idGenerator.incrementAndGet(), shardTarget, request.timeout(), request.types(), engineSearcher, indexService, scriptService);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +import org.elasticsearch.util.collect.Lists;, +import java.util.Map;, +    private List<ScriptField> scriptFields;, +, +    public SearchSourceBuilder scriptField(String name, String script) {, +        return scriptField(name, script, null);, +    }, +, +    public SearchSourceBuilder scriptField(String name, String script, Map<String, Object> params) {, +        if (scriptFields == null) {, +            scriptFields = Lists.newArrayList();, +        }, +        scriptFields.add(new ScriptField(name, script, params));, +        return this;, +    }, +, +        if (scriptFields != null) {, +            builder.startObject("script_fields");, +            for (ScriptField scriptField : scriptFields) {, +                builder.startObject(scriptField.fieldName());, +                builder.field("script", scriptField.script());, +                if (scriptField.params() != null) {, +                    builder.field("params");, +                    builder.map(scriptField.params());, +                }, +                builder.endObject();, +            }, +            builder.endObject();, +        }, +, +    private static class ScriptField {, +        private final String fieldName;, +        private final String script;, +        private final Map<String, Object> params;, +, +        private ScriptField(String fieldName, String script, Map<String, Object> params) {, +            this.fieldName = fieldName;, +            this.script = script;, +            this.params = params;, +        }, +, +        public String fieldName() {, +            return fieldName;, +        }, +, +        public String script() {, +            return script;, +        }, +]