[+++ b/core/src/main/java/org/elasticsearch/env/ESFileStore.java, +    private int majorDeviceNumber;, +    private int minorDeviceNumber;, +    ESFileStore(final FileStore in) {, +                        break;, +            } catch (final Exception e) {, +            majorDeviceNumber = -1;, +            minorDeviceNumber = -1;, +    private static String getMountPointLinux(final FileStore store) {, +++ b/core/src/main/java/org/elasticsearch/env/ESFileStore.java, +    private int majorDeviceNumber;, +    private int minorDeviceNumber;, +    ESFileStore(final FileStore in) {, +                        break;, +            } catch (final Exception e) {, +            majorDeviceNumber = -1;, +            minorDeviceNumber = -1;, +    private static String getMountPointLinux(final FileStore store) {, +++ b/core/src/main/java/org/elasticsearch/env/Environment.java, +import java.io.UncheckedIOException;, +import java.util.HashMap;, +import java.util.Map;, +    public static FileStore getFileStore(final Path path) throws IOException {, +        return new ESFileStore(Files.getFileStore(path));, +++ b/core/src/main/java/org/elasticsearch/env/ESFileStore.java, +    private int majorDeviceNumber;, +    private int minorDeviceNumber;, +    ESFileStore(final FileStore in) {, +                        break;, +            } catch (final Exception e) {, +            majorDeviceNumber = -1;, +            minorDeviceNumber = -1;, +    private static String getMountPointLinux(final FileStore store) {, +++ b/core/src/main/java/org/elasticsearch/env/Environment.java, +import java.io.UncheckedIOException;, +import java.util.HashMap;, +import java.util.Map;, +    public static FileStore getFileStore(final Path path) throws IOException {, +        return new ESFileStore(Files.getFileStore(path));, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +                    ", indicesPath=" + indicesPath +, +                    ", fileStore=" + fileStore +, +                    ", majorDeviceNumber=" + majorDeviceNumber +, +                    ", minorDeviceNumber=" + minorDeviceNumber +, +, +            logger.info("using [{}] data paths, mounts [{}], net usable_space [{}], net total_space [{}], types [{}]",, +                nodePaths.length, allMounts, totFSPath.getAvailable(), totFSPath.getTotal(), toString(allTypes));, +++ b/core/src/main/java/org/elasticsearch/env/ESFileStore.java, +    private int majorDeviceNumber;, +    private int minorDeviceNumber;, +    ESFileStore(final FileStore in) {, +                        break;, +            } catch (final Exception e) {, +            majorDeviceNumber = -1;, +            minorDeviceNumber = -1;, +    private static String getMountPointLinux(final FileStore store) {, +++ b/core/src/main/java/org/elasticsearch/env/Environment.java, +import java.io.UncheckedIOException;, +import java.util.HashMap;, +import java.util.Map;, +    public static FileStore getFileStore(final Path path) throws IOException {, +        return new ESFileStore(Files.getFileStore(path));, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +                    ", indicesPath=" + indicesPath +, +                    ", fileStore=" + fileStore +, +                    ", majorDeviceNumber=" + majorDeviceNumber +, +                    ", minorDeviceNumber=" + minorDeviceNumber +, +, +            logger.info("using [{}] data paths, mounts [{}], net usable_space [{}], net total_space [{}], types [{}]",, +                nodePaths.length, allMounts, totFSPath.getAvailable(), totFSPath.getTotal(), toString(allTypes));, +++ b/core/src/main/java/org/elasticsearch/monitor/fs/FsInfo.java, +            if (in.getVersion().before(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                in.readOptionalBoolean();, +            }, +            if (out.getVersion().before(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                out.writeOptionalBoolean(null);, +            }, +++ b/core/src/main/java/org/elasticsearch/env/ESFileStore.java, +    private int majorDeviceNumber;, +    private int minorDeviceNumber;, +    ESFileStore(final FileStore in) {, +                        break;, +            } catch (final Exception e) {, +            majorDeviceNumber = -1;, +            minorDeviceNumber = -1;, +    private static String getMountPointLinux(final FileStore store) {, +++ b/core/src/main/java/org/elasticsearch/env/Environment.java, +import java.io.UncheckedIOException;, +import java.util.HashMap;, +import java.util.Map;, +    public static FileStore getFileStore(final Path path) throws IOException {, +        return new ESFileStore(Files.getFileStore(path));, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +                    ", indicesPath=" + indicesPath +, +                    ", fileStore=" + fileStore +, +                    ", majorDeviceNumber=" + majorDeviceNumber +, +                    ", minorDeviceNumber=" + minorDeviceNumber +, +, +            logger.info("using [{}] data paths, mounts [{}], net usable_space [{}], net total_space [{}], types [{}]",, +                nodePaths.length, allMounts, totFSPath.getAvailable(), totFSPath.getTotal(), toString(allTypes));]