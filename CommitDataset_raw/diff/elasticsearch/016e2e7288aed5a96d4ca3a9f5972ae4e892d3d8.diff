[+++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpRequest.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.transport.netty.ChannelBufferStreamInputFactory;, +    public StreamInput contentStream() {, +        return ChannelBufferStreamInputFactory.create(request.getContent());, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpRequest.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.transport.netty.ChannelBufferStreamInputFactory;, +    public StreamInput contentStream() {, +        return ChannelBufferStreamInputFactory.create(request.getContent());, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/rest/RestRequest.java, +import org.elasticsearch.common.io.stream.StreamInput;, +    /**, +     * The content as a stream., +     */, +    StreamInput contentStream();, +, +++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpRequest.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.transport.netty.ChannelBufferStreamInputFactory;, +    public StreamInput contentStream() {, +        return ChannelBufferStreamInputFactory.create(request.getContent());, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/rest/RestRequest.java, +import org.elasticsearch.common.io.stream.StreamInput;, +    /**, +     * The content as a stream., +     */, +    StreamInput contentStream();, +, +++ b/src/main/java/org/elasticsearch/transport/netty/ChannelBufferStreamInputFactory.java, +package org.elasticsearch.transport.netty;, +, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.jboss.netty.buffer.ChannelBuffer;, +, +/**, + */, +public class ChannelBufferStreamInputFactory {, +, +    public static StreamInput create(ChannelBuffer buffer) {, +        return new ChannelBufferStreamInput(buffer, buffer.readableBytes());, +    }, +, +    public static StreamInput create(ChannelBuffer buffer, int size) {, +        return new ChannelBufferStreamInput(buffer, size);, +    }, +}, +++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpRequest.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.transport.netty.ChannelBufferStreamInputFactory;, +    public StreamInput contentStream() {, +        return ChannelBufferStreamInputFactory.create(request.getContent());, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/rest/RestRequest.java, +import org.elasticsearch.common.io.stream.StreamInput;, +    /**, +     * The content as a stream., +     */, +    StreamInput contentStream();, +, +++ b/src/main/java/org/elasticsearch/transport/netty/ChannelBufferStreamInputFactory.java, +package org.elasticsearch.transport.netty;, +, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.jboss.netty.buffer.ChannelBuffer;, +, +/**, + */, +public class ChannelBufferStreamInputFactory {, +, +    public static StreamInput create(ChannelBuffer buffer) {, +        return new ChannelBufferStreamInput(buffer, buffer.readableBytes());, +    }, +, +    public static StreamInput create(ChannelBuffer buffer, int size) {, +        return new ChannelBufferStreamInput(buffer, size);, +    }, +}, +++ b/src/main/java/org/elasticsearch/transport/netty/MessageChannelHandler.java, +        StreamInput streamIn = ChannelBufferStreamInputFactory.create(buffer, size);]