[+++ b/core/src/test/java/org/elasticsearch/search/query/SearchQueryIT.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.search.query;, +, +import org.apache.lucene.util.English;, +import org.elasticsearch.Version;, +import org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilder;, +import org.elasticsearch.action.index.IndexRequestBuilder;, +import org.elasticsearch.action.search.SearchPhaseExecutionException;, +import org.elasticsearch.action.search.SearchResponse;, +import org.elasticsearch.action.search.SearchType;, +import org.elasticsearch.action.search.ShardSearchFailure;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.index.mapper.MapperParsingException;, +import org.elasticsearch.index.query.BoolQueryBuilder;, +import org.elasticsearch.index.query.MatchQueryBuilder;, +import org.elasticsearch.index.query.MultiMatchQueryBuilder;, +import org.elasticsearch.index.query.Operator;, +import org.elasticsearch.index.query.QueryBuilders;, +import org.elasticsearch.index.query.TermQueryBuilder;, +import org.elasticsearch.index.query.WrapperQueryBuilder;, +import org.elasticsearch.index.query.functionscore.ScoreFunctionBuilders;, +import org.elasticsearch.index.search.MatchQuery;, +import org.elasticsearch.index.search.MatchQuery.Type;, +import org.elasticsearch.indices.cache.query.terms.TermsLookup;, +import org.elasticsearch.rest.RestStatus;, +import org.elasticsearch.search.SearchHit;, +import org.elasticsearch.search.SearchHits;, +import org.elasticsearch.search.aggregations.AggregationBuilders;, +import org.elasticsearch.test.ESIntegTestCase;, +import org.joda.time.DateTime;, +import org.joda.time.DateTimeZone;, +import org.joda.time.format.ISODateTimeFormat;, +, +import java.io.IOException;, +import java.util.Random;, +import java.util.concurrent.ExecutionException;, +, +import static org.elasticsearch.cluster.metadata.IndexMetaData.SETTING_NUMBER_OF_SHARDS;, +import static org.elasticsearch.common.settings.Settings.settingsBuilder;, +import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;, +import static org.elasticsearch.index.query.QueryBuilders.boolQuery;, +import static org.elasticsearch.index.query.QueryBuilders.commonTermsQuery;, +import static org.elasticsearch.index.query.QueryBuilders.constantScoreQuery;, +import static org.elasticsearch.index.query.QueryBuilders.existsQuery;, +import static org.elasticsearch.index.query.QueryBuilders.functionScoreQuery;, +import static org.elasticsearch.index.query.QueryBuilders.fuzzyQuery;, +import static org.elasticsearch.index.query.QueryBuilders.hasChildQuery;, +import static org.elasticsearch.index.query.QueryBuilders.idsQuery;, +import static org.elasticsearch.index.query.QueryBuilders.indicesQuery;, +import static org.elasticsearch.index.query.QueryBuilders.matchAllQuery;, +import static org.elasticsearch.index.query.QueryBuilders.matchQuery;, +import static org.elasticsearch.index.query.QueryBuilders.missingQuery;, +import static org.elasticsearch.index.query.QueryBuilders.multiMatchQuery;, +import static org.elasticsearch.index.query.QueryBuilders.prefixQuery;, +import static org.elasticsearch.index.query.QueryBuilders.queryStringQuery;, +import static org.elasticsearch.index.query.QueryBuilders.rangeQuery;, +import static org.elasticsearch.index.query.QueryBuilders.regexpQuery;, +import static org.elasticsearch.index.query.QueryBuilders.spanMultiTermQueryBuilder;, +import static org.elasticsearch.index.query.QueryBuilders.spanNearQuery;, +import static org.elasticsearch.index.query.QueryBuilders.spanNotQuery;, +import static org.elasticsearch.index.query.QueryBuilders.spanOrQuery;, +import static org.elasticsearch.index.query.QueryBuilders.spanTermQuery;, +import static org.elasticsearch.index.query.QueryBuilders.termQuery;, +import static org.elasticsearch.index.query.QueryBuilders.termsLookupQuery;, +import static org.elasticsearch.index.query.QueryBuilders.termsQuery;, +import static org.elasticsearch.index.query.QueryBuilders.typeQuery;, +import static org.elasticsearch.index.query.QueryBuilders.wildcardQuery;, +import static org.elasticsearch.index.query.QueryBuilders.wrapperQuery;, +import static org.elasticsearch.test.VersionUtils.randomVersion;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertFailures;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertFirstHit;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertHitCount;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertNoFailures;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertSearchHit;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertSearchHits;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertSearchResponse;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertSecondHit;]