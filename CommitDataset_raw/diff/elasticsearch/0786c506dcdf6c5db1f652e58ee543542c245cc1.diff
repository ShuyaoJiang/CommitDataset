[+++ b/core/build.gradle, +compileJava.options.compilerArgs << "-Xlint:-cast,-deprecation,-fallthrough,-overrides,-rawtypes,-serial,-try,-unchecked", +compileTestJava.options.compilerArgs << "-Xlint:-cast,-deprecation,-fallthrough,-overrides,-rawtypes,-serial,-try,-unchecked", +++ b/core/build.gradle, +compileJava.options.compilerArgs << "-Xlint:-cast,-deprecation,-fallthrough,-overrides,-rawtypes,-serial,-try,-unchecked", +compileTestJava.options.compilerArgs << "-Xlint:-cast,-deprecation,-fallthrough,-overrides,-rawtypes,-serial,-try,-unchecked", +++ b/core/src/main/java/org/elasticsearch/common/hash/MurmurHash3.java, +++ b/core/build.gradle, +compileJava.options.compilerArgs << "-Xlint:-cast,-deprecation,-fallthrough,-overrides,-rawtypes,-serial,-try,-unchecked", +compileTestJava.options.compilerArgs << "-Xlint:-cast,-deprecation,-fallthrough,-overrides,-rawtypes,-serial,-try,-unchecked", +++ b/core/src/main/java/org/elasticsearch/common/hash/MurmurHash3.java, +++ b/core/src/main/java/org/elasticsearch/common/inject/assistedinject/FactoryProvider2.java, +++ b/core/build.gradle, +compileJava.options.compilerArgs << "-Xlint:-cast,-deprecation,-fallthrough,-overrides,-rawtypes,-serial,-try,-unchecked", +compileTestJava.options.compilerArgs << "-Xlint:-cast,-deprecation,-fallthrough,-overrides,-rawtypes,-serial,-try,-unchecked", +++ b/core/src/main/java/org/elasticsearch/common/hash/MurmurHash3.java, +++ b/core/src/main/java/org/elasticsearch/common/inject/assistedinject/FactoryProvider2.java, +++ b/core/src/main/java/org/elasticsearch/common/util/BloomFilter.java, +                k1 ^= ((long) key[offset]);, +++ b/core/build.gradle, +compileJava.options.compilerArgs << "-Xlint:-cast,-deprecation,-fallthrough,-overrides,-rawtypes,-serial,-try,-unchecked", +compileTestJava.options.compilerArgs << "-Xlint:-cast,-deprecation,-fallthrough,-overrides,-rawtypes,-serial,-try,-unchecked", +++ b/core/src/main/java/org/elasticsearch/common/hash/MurmurHash3.java, +++ b/core/src/main/java/org/elasticsearch/common/inject/assistedinject/FactoryProvider2.java, +++ b/core/src/main/java/org/elasticsearch/common/util/BloomFilter.java, +                k1 ^= ((long) key[offset]);, +++ b/core/src/main/java/org/elasticsearch/index/fieldvisitor/SingleFieldsVisitor.java, +            // TODO: this switch seems very wrong...either each case should be breaking, or this should not be a switch, +                case UidFieldMapper.NAME: addValue(field, uid.toString());, +                case IdFieldMapper.NAME: addValue(field, uid.id());, +                case TypeFieldMapper.NAME: addValue(field, uid.type());, +++ b/core/build.gradle, +compileJava.options.compilerArgs << "-Xlint:-cast,-deprecation,-fallthrough,-overrides,-rawtypes,-serial,-try,-unchecked", +compileTestJava.options.compilerArgs << "-Xlint:-cast,-deprecation,-fallthrough,-overrides,-rawtypes,-serial,-try,-unchecked", +++ b/core/src/main/java/org/elasticsearch/common/hash/MurmurHash3.java, +++ b/core/src/main/java/org/elasticsearch/common/inject/assistedinject/FactoryProvider2.java, +++ b/core/src/main/java/org/elasticsearch/common/util/BloomFilter.java, +                k1 ^= ((long) key[offset]);, +++ b/core/src/main/java/org/elasticsearch/index/fieldvisitor/SingleFieldsVisitor.java, +            // TODO: this switch seems very wrong...either each case should be breaking, or this should not be a switch, +                case UidFieldMapper.NAME: addValue(field, uid.toString());, +                case IdFieldMapper.NAME: addValue(field, uid.id());, +                case TypeFieldMapper.NAME: addValue(field, uid.type());, +++ b/core/src/test/java/org/elasticsearch/indices/memory/breaker/RandomExceptionCircuitBreakerIT.java, +            switch (randomIntBetween(0, 5)) {, +                case 5:, +                case 4:, +                case 3:, +                    // fall through - sometimes get both fields, +                case 2:, +                case 1:, +                default:, +, +            }, +++ b/core/build.gradle, +compileJava.options.compilerArgs << "-Xlint:-cast,-deprecation,-fallthrough,-overrides,-rawtypes,-serial,-try,-unchecked", +compileTestJava.options.compilerArgs << "-Xlint:-cast,-deprecation,-fallthrough,-overrides,-rawtypes,-serial,-try,-unchecked", +++ b/core/src/main/java/org/elasticsearch/common/hash/MurmurHash3.java, +++ b/core/src/main/java/org/elasticsearch/common/inject/assistedinject/FactoryProvider2.java, +++ b/core/src/main/java/org/elasticsearch/common/util/BloomFilter.java, +                k1 ^= ((long) key[offset]);, +++ b/core/src/main/java/org/elasticsearch/index/fieldvisitor/SingleFieldsVisitor.java, +            // TODO: this switch seems very wrong...either each case should be breaking, or this should not be a switch, +                case UidFieldMapper.NAME: addValue(field, uid.toString());, +                case IdFieldMapper.NAME: addValue(field, uid.id());, +                case TypeFieldMapper.NAME: addValue(field, uid.type());, +++ b/core/src/test/java/org/elasticsearch/indices/memory/breaker/RandomExceptionCircuitBreakerIT.java, +            switch (randomIntBetween(0, 5)) {, +                case 5:, +                case 4:, +                case 3:, +                    // fall through - sometimes get both fields, +                case 2:, +                case 1:, +                default:, +, +            }, +++ b/modules/lang-expression/build.gradle, +++ b/core/build.gradle, +compileJava.options.compilerArgs << "-Xlint:-cast,-deprecation,-fallthrough,-overrides,-rawtypes,-serial,-try,-unchecked", +compileTestJava.options.compilerArgs << "-Xlint:-cast,-deprecation,-fallthrough,-overrides,-rawtypes,-serial,-try,-unchecked", +++ b/core/src/main/java/org/elasticsearch/common/hash/MurmurHash3.java, +++ b/core/src/main/java/org/elasticsearch/common/inject/assistedinject/FactoryProvider2.java, +++ b/core/src/main/java/org/elasticsearch/common/util/BloomFilter.java, +                k1 ^= ((long) key[offset]);, +++ b/core/src/main/java/org/elasticsearch/index/fieldvisitor/SingleFieldsVisitor.java, +            // TODO: this switch seems very wrong...either each case should be breaking, or this should not be a switch, +                case UidFieldMapper.NAME: addValue(field, uid.toString());, +                case IdFieldMapper.NAME: addValue(field, uid.id());, +                case TypeFieldMapper.NAME: addValue(field, uid.type());, +++ b/core/src/test/java/org/elasticsearch/indices/memory/breaker/RandomExceptionCircuitBreakerIT.java, +            switch (randomIntBetween(0, 5)) {, +                case 5:, +                case 4:, +                case 3:, +                    // fall through - sometimes get both fields, +                case 2:, +                case 1:, +                default:, +]