[+++ b/src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java, +++ b/src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java, +++ b/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +        } catch (Throwable t) {, +            //this exception can't come from the TransportService as it doesn't throw exception at all, +            listener.onFailure(t);, +                    } catch(Throwable t) {, +                        //this exception can't come from the TransportService as it doesn't throw exceptions at all, +                        listener.onFailure(t);, +        void doWithNode(DiscoveryNode node, ActionListener<Response> listener);, +++ b/src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java, +++ b/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +        } catch (Throwable t) {, +            //this exception can't come from the TransportService as it doesn't throw exception at all, +            listener.onFailure(t);, +                    } catch(Throwable t) {, +                        //this exception can't come from the TransportService as it doesn't throw exceptions at all, +                        listener.onFailure(t);, +        void doWithNode(DiscoveryNode node, ActionListener<Response> listener);, +++ b/src/main/java/org/elasticsearch/client/transport/support/InternalTransportAdminClient.java, +    public InternalTransportAdminClient(Settings settings, InternalTransportIndicesAdminClient indicesAdminClient, InternalTransportClusterAdminClient clusterAdminClient) {, +++ b/src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java, +++ b/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +        } catch (Throwable t) {, +            //this exception can't come from the TransportService as it doesn't throw exception at all, +            listener.onFailure(t);, +                    } catch(Throwable t) {, +                        //this exception can't come from the TransportService as it doesn't throw exceptions at all, +                        listener.onFailure(t);, +        void doWithNode(DiscoveryNode node, ActionListener<Response> listener);, +++ b/src/main/java/org/elasticsearch/client/transport/support/InternalTransportAdminClient.java, +    public InternalTransportAdminClient(Settings settings, InternalTransportIndicesAdminClient indicesAdminClient, InternalTransportClusterAdminClient clusterAdminClient) {, +++ b/src/main/java/org/elasticsearch/client/transport/support/InternalTransportClient.java, +import org.elasticsearch.action.support.PlainActionFuture;, +        PlainActionFuture<Response> actionFuture = PlainActionFuture.newFuture();, +        execute(action, request, actionFuture);, +        return actionFuture;, +            public void doWithNode(DiscoveryNode node, ActionListener<Response> listener) {, +++ b/src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java, +++ b/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +        } catch (Throwable t) {, +            //this exception can't come from the TransportService as it doesn't throw exception at all, +            listener.onFailure(t);, +                    } catch(Throwable t) {, +                        //this exception can't come from the TransportService as it doesn't throw exceptions at all, +                        listener.onFailure(t);, +        void doWithNode(DiscoveryNode node, ActionListener<Response> listener);, +++ b/src/main/java/org/elasticsearch/client/transport/support/InternalTransportAdminClient.java, +    public InternalTransportAdminClient(Settings settings, InternalTransportIndicesAdminClient indicesAdminClient, InternalTransportClusterAdminClient clusterAdminClient) {, +++ b/src/main/java/org/elasticsearch/client/transport/support/InternalTransportClient.java, +import org.elasticsearch.action.support.PlainActionFuture;, +        PlainActionFuture<Response> actionFuture = PlainActionFuture.newFuture();, +        execute(action, request, actionFuture);, +        return actionFuture;, +            public void doWithNode(DiscoveryNode node, ActionListener<Response> listener) {, +++ b/src/main/java/org/elasticsearch/client/transport/support/InternalTransportClusterAdminClient.java, +import org.elasticsearch.action.support.PlainActionFuture;, +        PlainActionFuture<Response> actionFuture = PlainActionFuture.newFuture();, +        execute(action, request, actionFuture);, +        return actionFuture;, +            public void doWithNode(DiscoveryNode node, ActionListener<Response> listener) {, +++ b/src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java, +++ b/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +        } catch (Throwable t) {, +            //this exception can't come from the TransportService as it doesn't throw exception at all, +            listener.onFailure(t);, +                    } catch(Throwable t) {, +                        //this exception can't come from the TransportService as it doesn't throw exceptions at all, +                        listener.onFailure(t);, +        void doWithNode(DiscoveryNode node, ActionListener<Response> listener);, +++ b/src/main/java/org/elasticsearch/client/transport/support/InternalTransportAdminClient.java, +    public InternalTransportAdminClient(Settings settings, InternalTransportIndicesAdminClient indicesAdminClient, InternalTransportClusterAdminClient clusterAdminClient) {, +++ b/src/main/java/org/elasticsearch/client/transport/support/InternalTransportClient.java, +import org.elasticsearch.action.support.PlainActionFuture;, +        PlainActionFuture<Response> actionFuture = PlainActionFuture.newFuture();, +        execute(action, request, actionFuture);, +        return actionFuture;, +            public void doWithNode(DiscoveryNode node, ActionListener<Response> listener) {, +++ b/src/main/java/org/elasticsearch/client/transport/support/InternalTransportClusterAdminClient.java, +import org.elasticsearch.action.support.PlainActionFuture;, +        PlainActionFuture<Response> actionFuture = PlainActionFuture.newFuture();, +        execute(action, request, actionFuture);, +        return actionFuture;, +            public void doWithNode(DiscoveryNode node, ActionListener<Response> listener) {, +++ b/src/main/java/org/elasticsearch/client/transport/support/InternalTransportIndicesAdminClient.java, +import org.elasticsearch.action.support.PlainActionFuture;, +        PlainActionFuture<Response> actionFuture = PlainActionFuture.newFuture();, +        execute(action, request, actionFuture);, +        return actionFuture;, +            public void doWithNode(DiscoveryNode node, ActionListener<Response> listener) {, +++ b/src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java, +++ b/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +        } catch (Throwable t) {, +            //this exception can't come from the TransportService as it doesn't throw exception at all, +            listener.onFailure(t);, +                    } catch(Throwable t) {, +                        //this exception can't come from the TransportService as it doesn't throw exceptions at all, +                        listener.onFailure(t);, +        void doWithNode(DiscoveryNode node, ActionListener<Response> listener);, +++ b/src/main/java/org/elasticsearch/client/transport/support/InternalTransportAdminClient.java]