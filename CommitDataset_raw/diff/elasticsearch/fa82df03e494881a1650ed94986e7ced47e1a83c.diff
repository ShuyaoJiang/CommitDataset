[+++ b/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/RollupRequestTranslator.java, +            if (source.timeZone() != null) {, +                rolledDateHisto.timeZone(source.timeZone());, +            }, +++ b/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/RollupRequestTranslator.java, +            if (source.timeZone() != null) {, +                rolledDateHisto.timeZone(source.timeZone());, +            }, +++ b/x-pack/plugin/rollup/src/test/java/org/elasticsearch/xpack/rollup/RollupRequestTranslationTests.java, +import java.time.ZoneId;, +    public void testDateHistoWithTimezone() {, +        ZoneId timeZone = ZoneId.of(randomFrom(ZoneId.getAvailableZoneIds()));, +        DateHistogramAggregationBuilder histo = new DateHistogramAggregationBuilder("test_histo");, +        histo.interval(86400000), +            .field("foo"), +            .timeZone(timeZone);, +        List<QueryBuilder> filterConditions = new ArrayList<>();, +, +        List<AggregationBuilder> translated = translateAggregation(histo, filterConditions, namedWriteableRegistry);, +        assertThat(translated.size(), equalTo(1));, +        assertThat(translated.get(0), instanceOf(DateHistogramAggregationBuilder.class));, +        DateHistogramAggregationBuilder translatedHisto = (DateHistogramAggregationBuilder)translated.get(0);, +, +        assertThat(translatedHisto.interval(), equalTo(86400000L));, +        assertThat(translatedHisto.field(), equalTo("foo.date_histogram.timestamp"));, +        assertThat(translatedHisto.timeZone(), equalTo(timeZone));, +        assertThat(filterConditions.size(), equalTo(1));, +, +        for (QueryBuilder q : filterConditions) {, +            if (q instanceof TermQueryBuilder) {, +                if (((TermQueryBuilder) q).fieldName().equals("foo.date_histogram.time_zone")) {, +                    assertThat(((TermQueryBuilder) q).value(), equalTo(timeZone.toString()));, +                }  else {, +                    fail("Unexpected Term Query in filter conditions: [" + ((TermQueryBuilder) q).fieldName() + "]");, +                }, +            } else {, +                fail("Unexpected query builder in filter conditions");, +            }, +        }, +    }, +]