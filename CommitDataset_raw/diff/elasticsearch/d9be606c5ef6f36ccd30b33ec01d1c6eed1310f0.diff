[+++ b/src/main/java/org/elasticsearch/index/IndexService.java, +                    try {, +                        indicesLifecycle.beforeIndexShardDeleted(lock.getShardId(), indexSettings);, +                    } finally {, +                        indicesLifecycle.afterIndexShardDeleted(lock.getShardId(), indexSettings);, +                    }, +++ b/src/main/java/org/elasticsearch/index/IndexService.java, +                    try {, +                        indicesLifecycle.beforeIndexShardDeleted(lock.getShardId(), indexSettings);, +                    } finally {, +                        indicesLifecycle.afterIndexShardDeleted(lock.getShardId(), indexSettings);, +                    }, +++ b/src/main/java/org/elasticsearch/indices/IndicesLifecycle.java, +         * Called before the index shard gets deleted from disk, +         * Note: this method is only executed on the first attempt of deleting the shard. Retries are will not invoke, +         * this method., +         * @param shardId The shard id, +         * @param indexSettings the shards index settings, +         */, +        public void beforeIndexShardDeleted(ShardId shardId, Settings indexSettings) {, +        }, +, +        /**, +         * Called after the index shard has been deleted from disk., +         *, +         * Note: this method is only called if the deletion of the shard did finish without an exception, +         *, +         * @param shardId The shard id, +         * @param indexSettings the shards index settings, +         */, +        public void afterIndexShardDeleted(ShardId shardId, Settings indexSettings) {, +        }, +, +        /**, +++ b/src/main/java/org/elasticsearch/index/IndexService.java, +                    try {, +                        indicesLifecycle.beforeIndexShardDeleted(lock.getShardId(), indexSettings);, +                    } finally {, +                        indicesLifecycle.afterIndexShardDeleted(lock.getShardId(), indexSettings);, +                    }, +++ b/src/main/java/org/elasticsearch/indices/IndicesLifecycle.java, +         * Called before the index shard gets deleted from disk, +         * Note: this method is only executed on the first attempt of deleting the shard. Retries are will not invoke, +         * this method., +         * @param shardId The shard id, +         * @param indexSettings the shards index settings, +         */, +        public void beforeIndexShardDeleted(ShardId shardId, Settings indexSettings) {, +        }, +, +        /**, +         * Called after the index shard has been deleted from disk., +         *, +         * Note: this method is only called if the deletion of the shard did finish without an exception, +         *, +         * @param shardId The shard id, +         * @param indexSettings the shards index settings, +         */, +        public void afterIndexShardDeleted(ShardId shardId, Settings indexSettings) {, +        }, +, +        /**, +++ b/src/main/java/org/elasticsearch/indices/InternalIndicesLifecycle.java, +    public void beforeIndexShardDeleted(ShardId shardId,, +                                       @IndexSettings Settings indexSettings) {, +        for (Listener listener : listeners) {, +            try {, +                listener.beforeIndexShardDeleted(shardId, indexSettings);, +            } catch (Throwable t) {, +                logger.warn("{} failed to invoke before shard deleted callback", t, shardId);, +                throw t;, +            }, +        }, +    }, +, +    public void afterIndexShardDeleted(ShardId shardId,, +                                      @IndexSettings Settings indexSettings) {, +        for (Listener listener : listeners) {, +            try {, +                listener.afterIndexShardDeleted(shardId, indexSettings);, +            } catch (Throwable t) {, +                logger.warn("{} failed to invoke after shard deleted callback", t, shardId);, +                throw t;, +            }, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/index/IndexService.java, +                    try {, +                        indicesLifecycle.beforeIndexShardDeleted(lock.getShardId(), indexSettings);, +                    } finally {, +                        indicesLifecycle.afterIndexShardDeleted(lock.getShardId(), indexSettings);, +                    }, +++ b/src/main/java/org/elasticsearch/indices/IndicesLifecycle.java, +         * Called before the index shard gets deleted from disk, +         * Note: this method is only executed on the first attempt of deleting the shard. Retries are will not invoke, +         * this method., +         * @param shardId The shard id, +         * @param indexSettings the shards index settings, +         */]