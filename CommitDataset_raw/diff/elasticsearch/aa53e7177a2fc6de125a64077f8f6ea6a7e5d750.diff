[+++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/prelert/action/GetJobsAction.java, +        public static class JobInfo implements ToXContent, Writeable {, +            public Job getJobConfig() {, +                return jobConfig;, +            }, +, +            public DataCounts getDataCounts() {, +                return dataCounts;, +            }, +, +            public ModelSizeStats getModelSizeStats() {, +                return modelSizeStats;, +            }, +, +            public SchedulerState getSchedulerState() {, +                return schedulerState;, +            }, +, +            public JobStatus getStatus() {, +                return status;, +            }, +, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/prelert/action/GetJobsAction.java, +        public static class JobInfo implements ToXContent, Writeable {, +            public Job getJobConfig() {, +                return jobConfig;, +            }, +, +            public DataCounts getDataCounts() {, +                return dataCounts;, +            }, +, +            public ModelSizeStats getModelSizeStats() {, +                return modelSizeStats;, +            }, +, +            public SchedulerState getSchedulerState() {, +                return schedulerState;, +            }, +, +            public JobStatus getStatus() {, +                return status;, +            }, +, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/prelert/integration/TooManyJobsIT.java, +import org.elasticsearch.xpack.prelert.action.GetJobsAction;, +import org.elasticsearch.xpack.prelert.job.JobStatus;, +import java.util.concurrent.ExecutionException;, +            assertBusy(() -> {, +                try {, +                    GetJobsAction.Request getJobRequest = new GetJobsAction.Request();, +                    getJobRequest.setJobId(job.getId());, +                    getJobRequest.status(true);, +                    GetJobsAction.Response response = client().execute(GetJobsAction.INSTANCE, getJobRequest).get();, +                    GetJobsAction.Response.JobInfo jobInfo = response.getResponse().results().get(0);, +                    assertNotNull(jobInfo);, +                    assertEquals(JobStatus.CLOSED, jobInfo.getStatus());, +                } catch (Exception e) {, +                    fail("failure " + e.getMessage());, +                }, +            });, +                if (ElasticsearchStatusException.class.equals(cause.getClass()) == false) {, +                    logger.warn("Unexpected cause", e);, +                }]