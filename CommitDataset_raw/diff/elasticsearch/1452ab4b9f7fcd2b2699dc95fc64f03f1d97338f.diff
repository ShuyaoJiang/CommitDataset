[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.rest.action.RestFieldStatsAction;, +import org.elasticsearch.rest.action.RestMainAction;, +import org.elasticsearch.rest.action.document.RestBulkAction;, +import org.elasticsearch.rest.action.document.RestDeleteAction;, +import org.elasticsearch.rest.action.document.RestGetAction;, +import org.elasticsearch.rest.action.document.RestGetSourceAction;, +import org.elasticsearch.rest.action.document.RestHeadAction;, +import org.elasticsearch.rest.action.document.RestIndexAction;, +import org.elasticsearch.rest.action.document.RestMultiGetAction;, +import org.elasticsearch.rest.action.document.RestMultiTermVectorsAction;, +import org.elasticsearch.rest.action.document.RestTermVectorsAction;, +import org.elasticsearch.rest.action.document.RestUpdateAction;, +import org.elasticsearch.rest.action.search.RestExplainAction;, +import org.elasticsearch.rest.action.search.RestSuggestAction;, +        registerRestHandler(handlers, org.elasticsearch.rest.action.document.RestCountAction.class);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.rest.action.RestFieldStatsAction;, +import org.elasticsearch.rest.action.RestMainAction;, +import org.elasticsearch.rest.action.document.RestBulkAction;, +import org.elasticsearch.rest.action.document.RestDeleteAction;, +import org.elasticsearch.rest.action.document.RestGetAction;, +import org.elasticsearch.rest.action.document.RestGetSourceAction;, +import org.elasticsearch.rest.action.document.RestHeadAction;, +import org.elasticsearch.rest.action.document.RestIndexAction;, +import org.elasticsearch.rest.action.document.RestMultiGetAction;, +import org.elasticsearch.rest.action.document.RestMultiTermVectorsAction;, +import org.elasticsearch.rest.action.document.RestTermVectorsAction;, +import org.elasticsearch.rest.action.document.RestUpdateAction;, +import org.elasticsearch.rest.action.search.RestExplainAction;, +import org.elasticsearch.rest.action.search.RestSuggestAction;, +        registerRestHandler(handlers, org.elasticsearch.rest.action.document.RestCountAction.class);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchResponse.java, +import org.elasticsearch.rest.action.RestActions;, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.rest.action.RestFieldStatsAction;, +import org.elasticsearch.rest.action.RestMainAction;, +import org.elasticsearch.rest.action.document.RestBulkAction;, +import org.elasticsearch.rest.action.document.RestDeleteAction;, +import org.elasticsearch.rest.action.document.RestGetAction;, +import org.elasticsearch.rest.action.document.RestGetSourceAction;, +import org.elasticsearch.rest.action.document.RestHeadAction;, +import org.elasticsearch.rest.action.document.RestIndexAction;, +import org.elasticsearch.rest.action.document.RestMultiGetAction;, +import org.elasticsearch.rest.action.document.RestMultiTermVectorsAction;, +import org.elasticsearch.rest.action.document.RestTermVectorsAction;, +import org.elasticsearch.rest.action.document.RestUpdateAction;, +import org.elasticsearch.rest.action.search.RestExplainAction;, +import org.elasticsearch.rest.action.search.RestSuggestAction;, +        registerRestHandler(handlers, org.elasticsearch.rest.action.document.RestCountAction.class);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchResponse.java, +import org.elasticsearch.rest.action.RestActions;, +++ b/core/src/main/java/org/elasticsearch/rest/action/AcknowledgedRestListener.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +package org.elasticsearch.rest.action;, +, +import org.elasticsearch.action.support.master.AcknowledgedResponse;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.rest.BytesRestResponse;, +import org.elasticsearch.rest.RestChannel;, +import org.elasticsearch.rest.RestResponse;, +, +import java.io.IOException;, +, +import static org.elasticsearch.rest.RestStatus.OK;, +, +/**, + */, +public class AcknowledgedRestListener<T extends AcknowledgedResponse> extends RestBuilderListener<T> {, +, +    public AcknowledgedRestListener(RestChannel channel) {, +        super(channel);, +    }, +, +    @Override, +    public RestResponse buildResponse(T response, XContentBuilder builder) throws Exception {, +        builder.startObject(), +                .field(Fields.ACKNOWLEDGED, response.isAcknowledged());, +        addCustomFields(builder, response);]