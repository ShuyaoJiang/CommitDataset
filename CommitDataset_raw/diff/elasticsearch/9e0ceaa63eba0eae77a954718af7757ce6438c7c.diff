[+++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.parseContext().parseInnerQueryBuilder().toFilter(queryShardContext);, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.parseContext().parseInnerQueryBuilder().toFilter(queryShardContext);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        return new QueryShardContext(indexSettings, nodeServicesProvider.getClient(), indexCache.bitsetFilterCache(), indexFieldData, mapperService(), similarityService(), nodeServicesProvider.getScriptService(), nodeServicesProvider.getIndicesQueriesRegistry());, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.parseContext().parseInnerQueryBuilder().toFilter(queryShardContext);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        return new QueryShardContext(indexSettings, nodeServicesProvider.getClient(), indexCache.bitsetFilterCache(), indexFieldData, mapperService(), similarityService(), nodeServicesProvider.getScriptService(), nodeServicesProvider.getIndicesQueriesRegistry());, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.parseContext().parseInnerQueryBuilder().toFilter(queryShardContext);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        return new QueryShardContext(indexSettings, nodeServicesProvider.getClient(), indexCache.bitsetFilterCache(), indexFieldData, mapperService(), similarityService(), nodeServicesProvider.getScriptService(), nodeServicesProvider.getIndicesQueriesRegistry());, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.parseContext().parseInnerQueryBuilder().toFilter(queryShardContext);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        return new QueryShardContext(indexSettings, nodeServicesProvider.getClient(), indexCache.bitsetFilterCache(), indexFieldData, mapperService(), similarityService(), nodeServicesProvider.getScriptService(), nodeServicesProvider.getIndicesQueriesRegistry());, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/BoostingQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.parseContext().parseInnerQueryBuilder().toFilter(queryShardContext);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        return new QueryShardContext(indexSettings, nodeServicesProvider.getClient(), indexCache.bitsetFilterCache(), indexFieldData, mapperService(), similarityService(), nodeServicesProvider.getScriptService(), nodeServicesProvider.getIndicesQueriesRegistry());, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/BoostingQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.parseContext().parseInnerQueryBuilder().toFilter(queryShardContext);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        return new QueryShardContext(indexSettings, nodeServicesProvider.getClient(), indexCache.bitsetFilterCache(), indexFieldData, mapperService(), similarityService(), nodeServicesProvider.getScriptService(), nodeServicesProvider.getIndicesQueriesRegistry());, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/BoostingQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/EmptyQueryBuilder.java, +import org.elasticsearch.action.support.ToXContentToBytes;, +import org.elasticsearch.common.xcontent.XContentType;, + *, + * This builder has no corresponding parser and it is not registered under the query name. It is, + * intended to be used internally as a stand-in for nested queries that are left empty and should, + * be ignored upstream., +public class EmptyQueryBuilder extends ToXContentToBytes implements QueryBuilder<EmptyQueryBuilder> {, +    // prevent instances other than prototype, +    private EmptyQueryBuilder() {, +        super(XContentType.JSON);, +    public String getWriteableName() {, +        return NAME;, +    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +        builder.startObject();, +        builder.endObject();, +        return builder;, +    public Query toQuery(QueryShardContext context) throws IOException {, +        // empty, +        return null;, +    public Query toFilter(QueryShardContext context) throws IOException {, +        // empty, +        return null;, +    public void writeTo(StreamOutput out) throws IOException {, +    }, +, +    @Override, +    public EmptyQueryBuilder readFrom(StreamInput in) throws IOException {, +        return EmptyQueryBuilder.PROTOTYPE;, +    }, +, +    @Override, +    public EmptyQueryBuilder queryName(String queryName) {, +        //no-op, +        return this;, +    }, +, +    @Override, +    public String queryName() {, +        return null;, +    }, +, +    @Override, +    public float boost() {]