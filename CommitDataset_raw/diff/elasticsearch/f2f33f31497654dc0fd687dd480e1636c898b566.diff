[+++ b/test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java, +                hosts.add(buildHttpHost(host, port));, +     * Construct a HttpHost from the given host and port, +     */, +    protected HttpHost buildHttpHost(String host, int port) {, +        return new HttpHost(host, port, getProtocol());, +    }, +, +    /**, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java, +                hosts.add(buildHttpHost(host, port));, +     * Construct a HttpHost from the given host and port, +     */, +    protected HttpHost buildHttpHost(String host, int port) {, +        return new HttpHost(host, port, getProtocol());, +    }, +, +    /**, +++ b/x-pack/qa/kerberos-tests/build.gradle, +// lazily resolve to avoid any slowdowns from DNS lookups prior to when we need this value, +Object httpPrincipal = new Object() {, +    @Override, +    String toString() {, +        InetAddress resolvedAddress = InetAddress.getByName('127.0.0.1'), +        return "HTTP/" + resolvedAddress.getHostName(), +    }, +}, +task 'addPrincipal#peppa'(type: org.elasticsearch.gradle.vagrant.VagrantCommandTask) {, +    args '--command', "sudo bash /vagrant/src/main/resources/provision/addprinc.sh peppa ", +, +task 'addPrincipal#george'(type: org.elasticsearch.gradle.vagrant.VagrantCommandTask) {, +    command 'ssh', +    args '--command', "sudo bash /vagrant/src/main/resources/provision/addprinc.sh george dino", +    boxName box, +    environmentVars vagrantEnvVars, +    dependsOn krb5kdcFixture, +task 'addPrincipal#HTTP'(type: org.elasticsearch.gradle.vagrant.VagrantCommandTask) {, +    command 'ssh', +    args '--command', "sudo bash /vagrant/src/main/resources/provision/addprinc.sh $httpPrincipal", +    boxName box, +    environmentVars vagrantEnvVars, +    dependsOn krb5kdcFixture, +}, +, +task krb5AddPrincipals { dependsOn krb5kdcFixture, 'addPrincipal#peppa', 'addPrincipal#george', 'addPrincipal#HTTP' }, +, +    // force localhost IPv4 otherwise it is a chicken and egg problem where we need the keytab for the hostname when starting the cluster, +    // but do not know the exact address that is first in the http ports file, +    setting 'http.host', '127.0.0.1', +    Path esKeytab = project(':test:fixtures:krb5kdc-fixture').buildDir.toPath().resolve("keytabs"), +            .resolve("$httpPrincipal".replace('/', '_') + ".keytab").toAbsolutePath(), +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java, +                hosts.add(buildHttpHost(host, port));, +     * Construct a HttpHost from the given host and port, +     */, +    protected HttpHost buildHttpHost(String host, int port) {, +        return new HttpHost(host, port, getProtocol());, +    }, +, +    /**, +++ b/x-pack/qa/kerberos-tests/build.gradle, +// lazily resolve to avoid any slowdowns from DNS lookups prior to when we need this value, +Object httpPrincipal = new Object() {, +    @Override, +    String toString() {, +        InetAddress resolvedAddress = InetAddress.getByName('127.0.0.1'), +        return "HTTP/" + resolvedAddress.getHostName(), +    }, +}, +task 'addPrincipal#peppa'(type: org.elasticsearch.gradle.vagrant.VagrantCommandTask) {, +    args '--command', "sudo bash /vagrant/src/main/resources/provision/addprinc.sh peppa ", +, +task 'addPrincipal#george'(type: org.elasticsearch.gradle.vagrant.VagrantCommandTask) {, +    command 'ssh', +    args '--command', "sudo bash /vagrant/src/main/resources/provision/addprinc.sh george dino", +    boxName box, +    environmentVars vagrantEnvVars, +    dependsOn krb5kdcFixture, +task 'addPrincipal#HTTP'(type: org.elasticsearch.gradle.vagrant.VagrantCommandTask) {, +    command 'ssh', +    args '--command', "sudo bash /vagrant/src/main/resources/provision/addprinc.sh $httpPrincipal", +    boxName box, +    environmentVars vagrantEnvVars, +    dependsOn krb5kdcFixture, +}, +, +task krb5AddPrincipals { dependsOn krb5kdcFixture, 'addPrincipal#peppa', 'addPrincipal#george', 'addPrincipal#HTTP' }, +, +    // force localhost IPv4 otherwise it is a chicken and egg problem where we need the keytab for the hostname when starting the cluster, +    // but do not know the exact address that is first in the http ports file, +    setting 'http.host', '127.0.0.1', +    Path esKeytab = project(':test:fixtures:krb5kdc-fixture').buildDir.toPath().resolve("keytabs"), +            .resolve("$httpPrincipal".replace('/', '_') + ".keytab").toAbsolutePath(), +++ b/x-pack/qa/kerberos-tests/src/test/java/org/elasticsearch/xpack/security/authc/kerberos/KerberosAuthenticationIT.java, +import org.elasticsearch.common.SuppressForbidden;, +import java.net.InetAddress;, +import java.net.UnknownHostException;, +    @Override, +    @SuppressForbidden(reason = "SPNEGO relies on hostnames and we need to ensure host isn't a IP address"), +    protected HttpHost buildHttpHost(String host, int port) {]