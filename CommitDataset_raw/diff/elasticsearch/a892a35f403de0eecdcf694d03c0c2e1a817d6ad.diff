[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/segments/TransportIndicesSegmentsAction.java, +        return new ShardSegments(indexShard.routingEntry(), indexShard.segments(request.verbose()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/segments/TransportIndicesSegmentsAction.java, +        return new ShardSegments(indexShard.routingEntry(), indexShard.segments(request.verbose()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/get/TransportUpgradeStatusAction.java, +        List<Segment> segments = indexShard.segments(false);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/segments/TransportIndicesSegmentsAction.java, +        return new ShardSegments(indexShard.routingEntry(), indexShard.segments(request.verbose()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/get/TransportUpgradeStatusAction.java, +        List<Segment> segments = indexShard.segments(false);, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +import org.elasticsearch.common.inject.util.Providers;, +import org.elasticsearch.index.shard.IndexSearcherWrapper;, +    Class<? extends IndexSearcherWrapper> indexSearcherWrapper = null;, +        bind(EngineFactory.class).to(engineFactoryImpl).asEagerSingleton();, +        if (indexSearcherWrapper == null) {, +            bind(IndexSearcherWrapper.class).toProvider(Providers.of(null));, +        } else {, +            bind(IndexSearcherWrapper.class).to(indexSearcherWrapper).asEagerSingleton();, +        }, +, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/segments/TransportIndicesSegmentsAction.java, +        return new ShardSegments(indexShard.routingEntry(), indexShard.segments(request.verbose()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/get/TransportUpgradeStatusAction.java, +        List<Segment> segments = indexShard.segments(false);, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +import org.elasticsearch.common.inject.util.Providers;, +import org.elasticsearch.index.shard.IndexSearcherWrapper;, +    Class<? extends IndexSearcherWrapper> indexSearcherWrapper = null;, +        bind(EngineFactory.class).to(engineFactoryImpl).asEagerSingleton();, +        if (indexSearcherWrapper == null) {, +            bind(IndexSearcherWrapper.class).toProvider(Providers.of(null));, +        } else {, +            bind(IndexSearcherWrapper.class).to(indexSearcherWrapper).asEagerSingleton();, +        }, +, +, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/segments/TransportIndicesSegmentsAction.java, +        return new ShardSegments(indexShard.routingEntry(), indexShard.segments(request.verbose()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/get/TransportUpgradeStatusAction.java, +        List<Segment> segments = indexShard.segments(false);, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +import org.elasticsearch.common.inject.util.Providers;, +import org.elasticsearch.index.shard.IndexSearcherWrapper;, +    Class<? extends IndexSearcherWrapper> indexSearcherWrapper = null;, +        bind(EngineFactory.class).to(engineFactoryImpl).asEagerSingleton();, +        if (indexSearcherWrapper == null) {, +            bind(IndexSearcherWrapper.class).toProvider(Providers.of(null));, +        } else {, +            bind(IndexSearcherWrapper.class).to(indexSearcherWrapper).asEagerSingleton();, +        }, +, +, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexServicesProvider.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.index.shard.IndexSearcherWrapper;, +, +, +    private final IndexSearcherWrapper indexSearcherWrapper;, +, +    public IndexServicesProvider(IndicesLifecycle indicesLifecycle, ThreadPool threadPool, MapperService mapperService, IndexQueryParserService queryParserService, IndexCache indexCache, IndexAliasesService indexAliasesService, IndicesQueryCache indicesQueryCache, CodecService codecService, TermVectorsService termVectorsService, IndexFieldDataService indexFieldDataService, @Nullable IndicesWarmer warmer, SimilarityService similarityService, EngineFactory factory, BigArrays bigArrays, @Nullable IndexSearcherWrapper indexSearcherWrapper) {, +        this.indexSearcherWrapper = indexSearcherWrapper;, +, +    public IndexSearcherWrapper getIndexSearcherWrapper() { return indexSearcherWrapper; }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/segments/TransportIndicesSegmentsAction.java, +        return new ShardSegments(indexShard.routingEntry(), indexShard.segments(request.verbose()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/get/TransportUpgradeStatusAction.java, +        List<Segment> segments = indexShard.segments(false);, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +import org.elasticsearch.common.inject.util.Providers;, +import org.elasticsearch.index.shard.IndexSearcherWrapper;, +    Class<? extends IndexSearcherWrapper> indexSearcherWrapper = null;, +        bind(EngineFactory.class).to(engineFactoryImpl).asEagerSingleton();, +        if (indexSearcherWrapper == null) {, +            bind(IndexSearcherWrapper.class).toProvider(Providers.of(null));, +        } else {, +            bind(IndexSearcherWrapper.class).to(indexSearcherWrapper).asEagerSingleton();, +        }, +, +, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexServicesProvider.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.index.shard.IndexSearcherWrapper;, +, +, +    private final IndexSearcherWrapper indexSearcherWrapper;, +, +    public IndexServicesProvider(IndicesLifecycle indicesLifecycle, ThreadPool threadPool, MapperService mapperService, IndexQueryParserService queryParserService, IndexCache indexCache, IndexAliasesService indexAliasesService, IndicesQueryCache indicesQueryCache, CodecService codecService, TermVectorsService termVectorsService, IndexFieldDataService indexFieldDataService, @Nullable IndicesWarmer warmer, SimilarityService similarityService, EngineFactory factory, BigArrays bigArrays, @Nullable IndexSearcherWrapper indexSearcherWrapper) {, +        this.indexSearcherWrapper = indexSearcherWrapper;, +, +    public IndexSearcherWrapper getIndexSearcherWrapper() { return indexSearcherWrapper; }, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +                return retVal;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/segments/TransportIndicesSegmentsAction.java, +        return new ShardSegments(indexShard.routingEntry(), indexShard.segments(request.verbose()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/upgrade/get/TransportUpgradeStatusAction.java]