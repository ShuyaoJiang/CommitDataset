[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +        this.connectOnNetworkDisconnect = componentSettings.getAsBoolean("connect_on_network_disconnect", true);, +                    // if all is well, make sure we restart the pinger, +                    if (masterPinger != null) {, +                        masterPinger.stop();, +                    }, +                    this.masterPinger = new MasterPinger();, +                    threadPool.schedule(masterPinger, pingInterval);, +                            if (exp instanceof ConnectTransportException) {, +                                // ignore this one, we already handle it by registering a connection listener, +                                return;, +                            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +        this.connectOnNetworkDisconnect = componentSettings.getAsBoolean("connect_on_network_disconnect", true);, +                    // if all is well, make sure we restart the pinger, +                    if (masterPinger != null) {, +                        masterPinger.stop();, +                    }, +                    this.masterPinger = new MasterPinger();, +                    threadPool.schedule(masterPinger, pingInterval);, +                            if (exp instanceof ConnectTransportException) {, +                                // ignore this one, we already handle it by registering a connection listener, +                                return;, +                            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java, +        this.connectOnNetworkDisconnect = componentSettings.getAsBoolean("connect_on_network_disconnect", true);, +        nodeFD.running = false;, +                nodesFD.put(node, new NodeFD());, +                threadPool.schedule(new SendPingRequest(node), pingInterval);, +                                if (!nodeFD.running) {, +                                    return;, +                                }, +                            if (exp instanceof ConnectTransportException) {, +                                // ignore this one, we already handle it by registering a connection listener, +                                return;, +                            }, +                                if (!nodeFD.running) {, +                                    return;, +                                }, +        volatile boolean running = true;]