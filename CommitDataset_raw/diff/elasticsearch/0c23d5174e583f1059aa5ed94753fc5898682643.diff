[+++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/integration/CategorizationIT.java, +public class CategorizationIT extends MlNativeAutodetectIntegTestCase {, +        cleanUp();, +        registerJob(job);, +        putJob(job);, +        DatafeedConfig datafeed = datafeedConfig.build();, +        registerDatafeed(datafeed);, +        putDatafeed(datafeed);, +        Job.Builder job = newJobBuilder("categorization-with-filters", Arrays.asList("\\[.*\\]"));, +        registerJob(job);, +        putJob(job);, +        DatafeedConfig datafeed = datafeedConfig.build();, +        registerDatafeed(datafeed);, +        putDatafeed(datafeed);, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/integration/CategorizationIT.java, +public class CategorizationIT extends MlNativeAutodetectIntegTestCase {, +        cleanUp();, +        registerJob(job);, +        putJob(job);, +        DatafeedConfig datafeed = datafeedConfig.build();, +        registerDatafeed(datafeed);, +        putDatafeed(datafeed);, +        Job.Builder job = newJobBuilder("categorization-with-filters", Arrays.asList("\\[.*\\]"));, +        registerJob(job);, +        putJob(job);, +        DatafeedConfig datafeed = datafeedConfig.build();, +        registerDatafeed(datafeed);, +        putDatafeed(datafeed);, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/integration/DeleteExpiredDataIT.java, +public class DeleteExpiredDataIT extends MlNativeAutodetectIntegTestCase {, +, +        cleanUp();, +        registerJob(newJobBuilder("no-retention").setResultsRetentionDays(null).setModelSnapshotRetentionDays(null));, +        registerJob(newJobBuilder("results-retention").setResultsRetentionDays(1L).setModelSnapshotRetentionDays(null));, +        registerJob(newJobBuilder("snapshots-retention").setResultsRetentionDays(null).setModelSnapshotRetentionDays(2L));, +        registerJob(newJobBuilder("snapshots-retention-with-retain").setResultsRetentionDays(null).setModelSnapshotRetentionDays(2L));, +        registerJob(newJobBuilder("results-and-snapshots-retention").setResultsRetentionDays(1L).setModelSnapshotRetentionDays(2L));, +        for (Job.Builder job : getJobs()) {, +            putJob(job);, +            DatafeedConfig datafeed = datafeedConfig.build();, +            registerDatafeed(datafeed);, +            putDatafeed(datafeed);, +        for (Job.Builder job : getJobs()) {, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/integration/CategorizationIT.java, +public class CategorizationIT extends MlNativeAutodetectIntegTestCase {, +        cleanUp();, +        registerJob(job);, +        putJob(job);, +        DatafeedConfig datafeed = datafeedConfig.build();, +        registerDatafeed(datafeed);, +        putDatafeed(datafeed);, +        Job.Builder job = newJobBuilder("categorization-with-filters", Arrays.asList("\\[.*\\]"));, +        registerJob(job);, +        putJob(job);, +        DatafeedConfig datafeed = datafeedConfig.build();, +        registerDatafeed(datafeed);, +        putDatafeed(datafeed);, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/integration/DeleteExpiredDataIT.java, +public class DeleteExpiredDataIT extends MlNativeAutodetectIntegTestCase {, +, +        cleanUp();, +        registerJob(newJobBuilder("no-retention").setResultsRetentionDays(null).setModelSnapshotRetentionDays(null));, +        registerJob(newJobBuilder("results-retention").setResultsRetentionDays(1L).setModelSnapshotRetentionDays(null));, +        registerJob(newJobBuilder("snapshots-retention").setResultsRetentionDays(null).setModelSnapshotRetentionDays(2L));, +        registerJob(newJobBuilder("snapshots-retention-with-retain").setResultsRetentionDays(null).setModelSnapshotRetentionDays(2L));, +        registerJob(newJobBuilder("results-and-snapshots-retention").setResultsRetentionDays(1L).setModelSnapshotRetentionDays(2L));, +        for (Job.Builder job : getJobs()) {, +            putJob(job);, +            DatafeedConfig datafeed = datafeedConfig.build();, +            registerDatafeed(datafeed);, +            putDatafeed(datafeed);, +        for (Job.Builder job : getJobs()) {, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/integration/MlNativeAutodetectIntegTestCase.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.xpack.ml.integration;, +, +import org.elasticsearch.common.network.NetworkModule;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.test.SecurityIntegTestCase;, +import org.elasticsearch.xpack.XPackSettings;, +import org.elasticsearch.xpack.ml.action.CloseJobAction;, +import org.elasticsearch.xpack.ml.action.DeleteDatafeedAction;, +import org.elasticsearch.xpack.ml.action.DeleteJobAction;, +import org.elasticsearch.xpack.ml.action.GetBucketsAction;, +import org.elasticsearch.xpack.ml.action.GetCategoriesAction;, +import org.elasticsearch.xpack.ml.action.GetJobsStatsAction;, +import org.elasticsearch.xpack.ml.action.GetModelSnapshotsAction;, +import org.elasticsearch.xpack.ml.action.GetRecordsAction;, +import org.elasticsearch.xpack.ml.action.OpenJobAction;, +import org.elasticsearch.xpack.ml.action.PutDatafeedAction;, +import org.elasticsearch.xpack.ml.action.PutJobAction;, +import org.elasticsearch.xpack.ml.action.StartDatafeedAction;, +import org.elasticsearch.xpack.ml.action.StopDatafeedAction;, +import org.elasticsearch.xpack.ml.action.util.PageParams;, +import org.elasticsearch.xpack.ml.datafeed.DatafeedConfig;, +import org.elasticsearch.xpack.ml.job.config.Job;]