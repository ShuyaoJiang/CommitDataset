[+++ b/docs/community/integrations.asciidoc, +  , +* https://github.com/wallmanderco/elasticsearch-indexer[Elasticsearch Indexer]:, +  Elasticsearch WordPress Plugin, +++ b/docs/community/integrations.asciidoc, +  , +* https://github.com/wallmanderco/elasticsearch-indexer[Elasticsearch Indexer]:, +  Elasticsearch WordPress Plugin, +++ b/docs/reference/index-modules/translog.asciidoc, +`index.gateway.local.sync`::, +++ b/docs/community/integrations.asciidoc, +  , +* https://github.com/wallmanderco/elasticsearch-indexer[Elasticsearch Indexer]:, +  Elasticsearch WordPress Plugin, +++ b/docs/reference/index-modules/translog.asciidoc, +`index.gateway.local.sync`::, +++ b/src/main/java/org/elasticsearch/action/ActionRequest.java, +++ b/docs/community/integrations.asciidoc, +  , +* https://github.com/wallmanderco/elasticsearch-indexer[Elasticsearch Indexer]:, +  Elasticsearch WordPress Plugin, +++ b/docs/reference/index-modules/translog.asciidoc, +`index.gateway.local.sync`::, +++ b/src/main/java/org/elasticsearch/action/ActionRequest.java, +++ b/src/main/java/org/elasticsearch/action/ActionRequestBuilder.java, +        PlainListenableActionFuture<Response> future = new PlainListenableActionFuture<>(threadPool);, +++ b/docs/community/integrations.asciidoc, +  , +* https://github.com/wallmanderco/elasticsearch-indexer[Elasticsearch Indexer]:, +  Elasticsearch WordPress Plugin, +++ b/docs/reference/index-modules/translog.asciidoc, +`index.gateway.local.sync`::, +++ b/src/main/java/org/elasticsearch/action/ActionRequest.java, +++ b/src/main/java/org/elasticsearch/action/ActionRequestBuilder.java, +        PlainListenableActionFuture<Response> future = new PlainListenableActionFuture<>(threadPool);, +++ b/src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java, +import org.elasticsearch.transport.*;, +    private final TransportService transportService;, +    public void execute(final DiscoveryNode node, final Request request, final ActionListener<Response> listener) {, +        transportService.sendRequest(node, action.name(), request, transportOptions, new ActionListenerResponseHandler<Response>(listener) {, +++ b/docs/community/integrations.asciidoc, +  , +* https://github.com/wallmanderco/elasticsearch-indexer[Elasticsearch Indexer]:, +  Elasticsearch WordPress Plugin, +++ b/docs/reference/index-modules/translog.asciidoc, +`index.gateway.local.sync`::, +++ b/src/main/java/org/elasticsearch/action/ActionRequest.java, +++ b/src/main/java/org/elasticsearch/action/ActionRequestBuilder.java, +        PlainListenableActionFuture<Response> future = new PlainListenableActionFuture<>(threadPool);, +++ b/src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java, +import org.elasticsearch.transport.*;, +    private final TransportService transportService;, +    public void execute(final DiscoveryNode node, final Request request, final ActionListener<Response> listener) {, +        transportService.sendRequest(node, action.name(), request, transportOptions, new ActionListenerResponseHandler<Response>(listener) {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsAction.java, +++ b/docs/community/integrations.asciidoc, +  , +* https://github.com/wallmanderco/elasticsearch-indexer[Elasticsearch Indexer]:, +  Elasticsearch WordPress Plugin, +++ b/docs/reference/index-modules/translog.asciidoc, +`index.gateway.local.sync`::, +++ b/src/main/java/org/elasticsearch/action/ActionRequest.java, +++ b/src/main/java/org/elasticsearch/action/ActionRequestBuilder.java, +        PlainListenableActionFuture<Response> future = new PlainListenableActionFuture<>(threadPool);, +++ b/src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java, +import org.elasticsearch.transport.*;, +    private final TransportService transportService;, +    public void execute(final DiscoveryNode node, final Request request, final ActionListener<Response> listener) {, +        transportService.sendRequest(node, action.name(), request, transportOptions, new ActionListenerResponseHandler<Response>(listener) {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsAction.java, +++ b/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +                        .scroll(request.searchScroll());, +++ b/docs/community/integrations.asciidoc, +  , +* https://github.com/wallmanderco/elasticsearch-indexer[Elasticsearch Indexer]:, +  Elasticsearch WordPress Plugin, +++ b/docs/reference/index-modules/translog.asciidoc, +`index.gateway.local.sync`::, +++ b/src/main/java/org/elasticsearch/action/ActionRequest.java, +++ b/src/main/java/org/elasticsearch/action/ActionRequestBuilder.java, +        PlainListenableActionFuture<Response> future = new PlainListenableActionFuture<>(threadPool);, +++ b/src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java, +import org.elasticsearch.transport.*;, +    private final TransportService transportService;, +    public void execute(final DiscoveryNode node, final Request request, final ActionListener<Response> listener) {, +        transportService.sendRequest(node, action.name(), request, transportOptions, new ActionListenerResponseHandler<Response>(listener) {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsAction.java, +++ b/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +                        .scroll(request.searchScroll());, +++ b/src/main/java/org/elasticsearch/action/search/SearchScrollRequestBuilder.java, +++ b/docs/community/integrations.asciidoc, +  , +* https://github.com/wallmanderco/elasticsearch-indexer[Elasticsearch Indexer]:, +  Elasticsearch WordPress Plugin, +++ b/docs/reference/index-modules/translog.asciidoc, +`index.gateway.local.sync`::, +++ b/src/main/java/org/elasticsearch/action/ActionRequest.java, +++ b/src/main/java/org/elasticsearch/action/ActionRequestBuilder.java, +        PlainListenableActionFuture<Response> future = new PlainListenableActionFuture<>(threadPool);, +++ b/src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java]