[+++ b/core/src/main/java/org/elasticsearch/Version.java, +            bwcMajor = Version.V_5_6_0.major;, +            bwcMinor = Version.V_5_6_0.minor;, +++ b/core/src/main/java/org/elasticsearch/Version.java, +            bwcMajor = Version.V_5_6_0.major;, +            bwcMinor = Version.V_5_6_0.minor;, +++ b/core/src/test/java/org/elasticsearch/VersionTests.java, +        Version lastVersion = Version.V_5_6_0; // TODO: remove this once min compat version is a constant instead of method, +        assertTrue(isCompatible(Version.V_5_6_0, Version.V_6_0_0_alpha2));, +++ b/core/src/main/java/org/elasticsearch/Version.java, +            bwcMajor = Version.V_5_6_0.major;, +            bwcMinor = Version.V_5_6_0.minor;, +++ b/core/src/test/java/org/elasticsearch/VersionTests.java, +        Version lastVersion = Version.V_5_6_0; // TODO: remove this once min compat version is a constant instead of method, +        assertTrue(isCompatible(Version.V_5_6_0, Version.V_6_0_0_alpha2));, +++ b/core/src/test/java/org/elasticsearch/transport/TCPTransportTests.java, +        assertEquals("Received message from unsupported version: [5.0.0] minimal compatible version is: [5.6.0]", ise.getMessage());, +        assertEquals("Received handshake message from unsupported version: [2.3.0] minimal compatible version is: [5.6.0]",, +        assertEquals("Received message from unsupported version: [2.3.0] minimal compatible version is: [5.6.0]",]