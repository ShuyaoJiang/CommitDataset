[+++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_2_1_0 = new Version(V_2_1_0_ID, false, org.apache.lucene.util.Version.LUCENE_5_3_1);, +    public static final Version V_2_1_1 = new Version(V_2_1_1_ID, true, org.apache.lucene.util.Version.LUCENE_5_3_1);, +    public static final Version V_2_2_0 = new Version(V_2_2_0_ID, true, org.apache.lucene.util.Version.LUCENE_5_4_0);, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_2_1_0 = new Version(V_2_1_0_ID, false, org.apache.lucene.util.Version.LUCENE_5_3_1);, +    public static final Version V_2_1_1 = new Version(V_2_1_1_ID, true, org.apache.lucene.util.Version.LUCENE_5_3_1);, +    public static final Version V_2_2_0 = new Version(V_2_2_0_ID, true, org.apache.lucene.util.Version.LUCENE_5_4_0);, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +import org.elasticsearch.action.admin.indices.segments.IndexSegments;, +import org.elasticsearch.action.admin.indices.segments.IndexShardSegments;, +import org.elasticsearch.action.admin.indices.segments.IndicesSegmentResponse;, +import org.elasticsearch.action.admin.indices.segments.ShardSegments;, +import org.elasticsearch.index.engine.Segment;, +        assertIndexSanity(indexName, version);, +    void assertIndexSanity(String indexName, Version indexCreated) {, +        Version actualVersionCreated = Version.indexCreated(getIndexResponse.getSettings().get(indexName));, +        assertEquals(indexCreated, actualVersionCreated);, +        IndicesSegmentResponse segmentsResponse = client().admin().indices().prepareSegments(indexName).get();, +        IndexSegments segments = segmentsResponse.getIndices().get(indexName);, +        for (IndexShardSegments indexShardSegments : segments) {, +            for (ShardSegments shardSegments : indexShardSegments) {, +                for (Segment segment : shardSegments) {, +                    assertEquals(indexCreated.luceneVersion, segment.version);, +                }, +            }, +        }]