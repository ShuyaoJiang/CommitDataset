[+++ b/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +++ b/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +++ b/src/main/java/org/elasticsearch/action/get/GetRequest.java, +import org.elasticsearch.common.lucene.uid.Versions;, +import org.elasticsearch.index.VersionType;, +    private VersionType versionType = VersionType.INTERNAL;, +    private long version = Versions.MATCH_ANY;, +, +    /**, +     * Sets the version, which will cause the get operation to only be performed if a matching, +     * version exists and no changes happened on the doc since then., +     */, +    public long version() {, +        return version;, +    }, +, +    public GetRequest version(long version) {, +        this.version = version;, +        return this;, +    }, +, +    /**, +     * Sets the versioning type. Defaults to {@link org.elasticsearch.index.VersionType#INTERNAL}., +     */, +    public GetRequest versionType(VersionType versionType) {, +        this.versionType = versionType;, +        return this;, +    }, +, +    public VersionType versionType() {, +        return this.versionType;, +    }, +, +        this.versionType = VersionType.fromValue(in.readByte());, +        this.version = in.readVLong();, +, +        out.writeByte(versionType.getValue());, +        out.writeVLong(version);, +++ b/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +++ b/src/main/java/org/elasticsearch/action/get/GetRequest.java, +import org.elasticsearch.common.lucene.uid.Versions;, +import org.elasticsearch.index.VersionType;, +    private VersionType versionType = VersionType.INTERNAL;, +    private long version = Versions.MATCH_ANY;, +, +    /**, +     * Sets the version, which will cause the get operation to only be performed if a matching, +     * version exists and no changes happened on the doc since then., +     */, +    public long version() {, +        return version;, +    }, +, +    public GetRequest version(long version) {, +        this.version = version;, +        return this;, +    }, +, +    /**, +     * Sets the versioning type. Defaults to {@link org.elasticsearch.index.VersionType#INTERNAL}., +     */, +    public GetRequest versionType(VersionType versionType) {, +        this.versionType = versionType;, +        return this;, +    }, +, +    public VersionType versionType() {, +        return this.versionType;, +    }, +, +        this.versionType = VersionType.fromValue(in.readByte());, +        this.version = in.readVLong();, +, +        out.writeByte(versionType.getValue());, +        out.writeVLong(version);, +++ b/src/main/java/org/elasticsearch/action/get/GetRequestBuilder.java, +import org.elasticsearch.index.VersionType;, +    /**, +     * Sets the version, which will cause the get operation to only be performed if a matching, +     * version exists and no changes happened on the doc since then., +     */, +    public GetRequestBuilder setVersion(long version) {, +        request.version(version);, +        return this;, +    }, +, +    /**, +     * Sets the versioning type. Defaults to {@link org.elasticsearch.index.VersionType#INTERNAL}., +     */, +    public GetRequestBuilder setVersionType(VersionType versionType) {, +        request.versionType(versionType);, +        return this;, +    }, +, +++ b/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +++ b/src/main/java/org/elasticsearch/action/get/GetRequest.java, +import org.elasticsearch.common.lucene.uid.Versions;, +import org.elasticsearch.index.VersionType;, +    private VersionType versionType = VersionType.INTERNAL;, +    private long version = Versions.MATCH_ANY;]