[+++ b/x-pack/plugin/src/main/java/org/elasticsearch/xpack/indexlifecycle/DeleteAction.java, +/**, + * A {@link LifecycleAction} which deletes the index., + */, +++ b/x-pack/plugin/src/main/java/org/elasticsearch/xpack/indexlifecycle/DeleteAction.java, +/**, + * A {@link LifecycleAction} which deletes the index., + */, +++ b/x-pack/plugin/src/main/java/org/elasticsearch/xpack/indexlifecycle/IndexLifecycle.java, +    private final SetOnce<IndexLifecycleService> indexLifecycleInitialisationService = new SetOnce<>();, +                .set(new IndexLifecycleService(settings, client, clusterService, clock, threadPool));, +++ b/x-pack/plugin/src/main/java/org/elasticsearch/xpack/indexlifecycle/DeleteAction.java, +/**, + * A {@link LifecycleAction} which deletes the index., + */, +++ b/x-pack/plugin/src/main/java/org/elasticsearch/xpack/indexlifecycle/IndexLifecycle.java, +    private final SetOnce<IndexLifecycleService> indexLifecycleInitialisationService = new SetOnce<>();, +                .set(new IndexLifecycleService(settings, client, clusterService, clock, threadPool));, +++ b/x-pack/plugin/src/main/java/org/elasticsearch/xpack/indexlifecycle/IndexLifecycleContext.java, +import org.elasticsearch.client.Client;, +import org.elasticsearch.index.Index;, +, +/**, + * Provides the context to a {@link LifecyclePolicy} for a particular target., + * This context provides the state of the lifecycle target (hereafter referred, + * to as the target) as well as allow operations to be performed on the target., + */, +    /**, +     * Sets the phase for the target and calls the provided callback. Note that, +     * this will also set the action name to an empty {@link String}., +     * , +     * @param phase, +     *            the name of the phase to be set., +     * @param listener, +     *            a {@link Listener} to call after the operation., +     */, +    /**, +     * Sets the action for the target and calls the provided callback., +     * , +     * @param action, +     *            the name of the action to be set., +     * @param listener, +     *            a {@link Listener} to call after the operation., +     */, +    /**, +     * @return the current {@link LifecycleAction} name for the target., +     */, +    /**, +     * @return the current {@link Phase} name for the target., +     */, +    /**, +     * @return the name of the target., +     */, +    /**, +     * Determines whether the target is able to move to the provided, +     * {@link Phase}, +     * , +     * @param phase, +     *            the {@link Phase} to test, +     * @return <code>true</code> iff the target is ready to move to the, +     *         {@link Phase}., +     */, +    /**, +     * Executes the provided {@link LifecycleAction} passing the relevant target, +     * state to it., +     * , +     * @param action, +     *            the {@link LifecycleAction} to execute., +     * @param listener, +     *            a {@link LifecycleAction.Listener} to pass to the, +     *            {@link LifecycleAction}., +     */, +    /**, +     * A callback for use when setting phase or action names., +     */, +        /**, +         * Called if the call to, +         * {@link LifecycleAction#execute(Index, Client, Listener)} was, +         * successful, +         */, +        /**, +         * Called if there was an exception when setting the action or phase, +         * name., +         * , +         * @param e, +         *            the exception that caused the failure, +         */, +++ b/x-pack/plugin/src/main/java/org/elasticsearch/xpack/indexlifecycle/DeleteAction.java, +/**, + * A {@link LifecycleAction} which deletes the index., + */, +++ b/x-pack/plugin/src/main/java/org/elasticsearch/xpack/indexlifecycle/IndexLifecycle.java, +    private final SetOnce<IndexLifecycleService> indexLifecycleInitialisationService = new SetOnce<>();, +                .set(new IndexLifecycleService(settings, client, clusterService, clock, threadPool));, +++ b/x-pack/plugin/src/main/java/org/elasticsearch/xpack/indexlifecycle/IndexLifecycleContext.java, +import org.elasticsearch.client.Client;, +import org.elasticsearch.index.Index;, +, +/**, + * Provides the context to a {@link LifecyclePolicy} for a particular target.]