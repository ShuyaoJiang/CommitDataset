[+++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +        IndexSettings.MAX_ADJACENCY_MATRIX_FILTERS_SETTING,, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +        IndexSettings.MAX_ADJACENCY_MATRIX_FILTERS_SETTING,, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    /**, +     * Index setting describing the maximum number of filters clauses that can be used, +     * in an adjacency_matrix aggregation. The max number of buckets produced by  , +     * N filters is (N*N)/2 so a limit of 100 filters is imposed by default., +     */, +    public static final Setting<Integer> MAX_ADJACENCY_MATRIX_FILTERS_SETTING =, +        Setting.intSetting("index.max_adjacency_matrix_filters", 100, 2, Property.Dynamic, Property.IndexScope);    , +    private volatile int maxAdjacencyMatrixFilters;, +        maxAdjacencyMatrixFilters = scopedSettings.get(MAX_ADJACENCY_MATRIX_FILTERS_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(MAX_ADJACENCY_MATRIX_FILTERS_SETTING, this::setMaxAdjacencyMatrixFilters);, +     * Returns the max number of filters in adjacency_matrix aggregation search requests, +     */, +    public int getMaxAdjacencyMatrixFilters() {, +        return this.maxAdjacencyMatrixFilters;, +    }, +, +    private void setMaxAdjacencyMatrixFilters(int maxAdjacencyFilters) {, +        this.maxAdjacencyMatrixFilters = maxAdjacencyFilters;, +    }    , +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +        IndexSettings.MAX_ADJACENCY_MATRIX_FILTERS_SETTING,, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    /**, +     * Index setting describing the maximum number of filters clauses that can be used, +     * in an adjacency_matrix aggregation. The max number of buckets produced by  , +     * N filters is (N*N)/2 so a limit of 100 filters is imposed by default., +     */, +    public static final Setting<Integer> MAX_ADJACENCY_MATRIX_FILTERS_SETTING =, +        Setting.intSetting("index.max_adjacency_matrix_filters", 100, 2, Property.Dynamic, Property.IndexScope);    , +    private volatile int maxAdjacencyMatrixFilters;, +        maxAdjacencyMatrixFilters = scopedSettings.get(MAX_ADJACENCY_MATRIX_FILTERS_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(MAX_ADJACENCY_MATRIX_FILTERS_SETTING, this::setMaxAdjacencyMatrixFilters);, +     * Returns the max number of filters in adjacency_matrix aggregation search requests, +     */, +    public int getMaxAdjacencyMatrixFilters() {, +        return this.maxAdjacencyMatrixFilters;, +    }, +, +    private void setMaxAdjacencyMatrixFilters(int maxAdjacencyFilters) {, +        this.maxAdjacencyMatrixFilters = maxAdjacencyFilters;, +    }    , +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.aggregations.bucket.adjacency.AdjacencyMatrixAggregationBuilder;, +import org.elasticsearch.search.aggregations.bucket.adjacency.InternalAdjacencyMatrix;, +        registerAggregation(new AggregationSpec(AdjacencyMatrixAggregationBuilder.NAME, AdjacencyMatrixAggregationBuilder::new,, +                AdjacencyMatrixAggregationBuilder.getParser()).addResultReader(InternalAdjacencyMatrix::new));, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +        IndexSettings.MAX_ADJACENCY_MATRIX_FILTERS_SETTING,, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    /**, +     * Index setting describing the maximum number of filters clauses that can be used, +     * in an adjacency_matrix aggregation. The max number of buckets produced by  , +     * N filters is (N*N)/2 so a limit of 100 filters is imposed by default., +     */, +    public static final Setting<Integer> MAX_ADJACENCY_MATRIX_FILTERS_SETTING =, +        Setting.intSetting("index.max_adjacency_matrix_filters", 100, 2, Property.Dynamic, Property.IndexScope);    , +    private volatile int maxAdjacencyMatrixFilters;, +        maxAdjacencyMatrixFilters = scopedSettings.get(MAX_ADJACENCY_MATRIX_FILTERS_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(MAX_ADJACENCY_MATRIX_FILTERS_SETTING, this::setMaxAdjacencyMatrixFilters);, +     * Returns the max number of filters in adjacency_matrix aggregation search requests, +     */, +    public int getMaxAdjacencyMatrixFilters() {, +        return this.maxAdjacencyMatrixFilters;, +    }, +, +    private void setMaxAdjacencyMatrixFilters(int maxAdjacencyFilters) {, +        this.maxAdjacencyMatrixFilters = maxAdjacencyFilters;, +    }    , +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.aggregations.bucket.adjacency.AdjacencyMatrixAggregationBuilder;, +import org.elasticsearch.search.aggregations.bucket.adjacency.InternalAdjacencyMatrix;, +        registerAggregation(new AggregationSpec(AdjacencyMatrixAggregationBuilder.NAME, AdjacencyMatrixAggregationBuilder::new,, +                AdjacencyMatrixAggregationBuilder.getParser()).addResultReader(InternalAdjacencyMatrix::new));, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilders.java, +import org.elasticsearch.search.aggregations.bucket.adjacency.AdjacencyMatrix;, +import org.elasticsearch.search.aggregations.bucket.adjacency.AdjacencyMatrixAggregationBuilder;, +import java.util.Map;, +, +     * Create a new {@link AdjacencyMatrix} aggregation with the given name., +     */, +    public static AdjacencyMatrixAggregationBuilder adjacencyMatrix(String name, Map<String, QueryBuilder> filters) {, +        return new AdjacencyMatrixAggregationBuilder(name, filters);, +    }    , +    , +    /**, +     * Create a new {@link AdjacencyMatrix} aggregation with the given name and separator, +     */, +    public static AdjacencyMatrixAggregationBuilder adjacencyMatrix(String name, String separator,  Map<String, QueryBuilder> filters) {, +        return new AdjacencyMatrixAggregationBuilder(name, separator, filters);]