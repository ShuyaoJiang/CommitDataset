[+++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +import org.elasticsearch.index.search.nested.NonNestedDocsFilter;, +        Filter nonNestedDocsFilter = null;, +        if (parentDocMapper.hasNestedObjects()) {, +            nonNestedDocsFilter = parseContext.cacheFilter(NonNestedDocsFilter.INSTANCE, null);, +        }, +, +        Query childrenConstantScoreQuery = new ChildrenConstantScoreQuery(query, parentType, childType, parentFilter, shortCircuitParentDocSet, nonNestedDocsFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +import org.elasticsearch.index.search.nested.NonNestedDocsFilter;, +        Filter nonNestedDocsFilter = null;, +        if (parentDocMapper.hasNestedObjects()) {, +            nonNestedDocsFilter = parseContext.cacheFilter(NonNestedDocsFilter.INSTANCE, null);, +        }, +, +        Query childrenConstantScoreQuery = new ChildrenConstantScoreQuery(query, parentType, childType, parentFilter, shortCircuitParentDocSet, nonNestedDocsFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +import org.elasticsearch.index.search.nested.NonNestedDocsFilter;, +        Filter nonNestedDocsFilter = null;, +        if (parentDocMapper.hasNestedObjects()) {, +            nonNestedDocsFilter = parseContext.cacheFilter(NonNestedDocsFilter.INSTANCE, null);, +        }, +, +            query = new ChildrenQuery(parentType, childType, parentFilter, innerQuery, scoreType, shortCircuitParentDocSet, nonNestedDocsFilter);, +            query = new ChildrenConstantScoreQuery(innerQuery, parentType, childType, parentFilter, shortCircuitParentDocSet, nonNestedDocsFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +import org.elasticsearch.index.search.nested.NonNestedDocsFilter;, +        Filter nonNestedDocsFilter = null;, +        if (parentDocMapper.hasNestedObjects()) {, +            nonNestedDocsFilter = parseContext.cacheFilter(NonNestedDocsFilter.INSTANCE, null);, +        }, +, +        Query childrenConstantScoreQuery = new ChildrenConstantScoreQuery(query, parentType, childType, parentFilter, shortCircuitParentDocSet, nonNestedDocsFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +import org.elasticsearch.index.search.nested.NonNestedDocsFilter;, +        Filter nonNestedDocsFilter = null;, +        if (parentDocMapper.hasNestedObjects()) {, +            nonNestedDocsFilter = parseContext.cacheFilter(NonNestedDocsFilter.INSTANCE, null);, +        }, +, +            query = new ChildrenQuery(parentType, childType, parentFilter, innerQuery, scoreType, shortCircuitParentDocSet, nonNestedDocsFilter);, +            query = new ChildrenConstantScoreQuery(innerQuery, parentType, childType, parentFilter, shortCircuitParentDocSet, nonNestedDocsFilter);, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQuery.java, +    private final Filter nonNestedDocsFilter;, +    public ChildrenConstantScoreQuery(Query childQuery, String parentType, String childType, Filter parentFilter, int shortCircuitParentDocSet, Filter nonNestedDocsFilter) {, +        this.nonNestedDocsFilter = nonNestedDocsFilter;, +            shortCircuitFilter = new ParentIdsFilter(parentType, collectedUids.v().keys, collectedUids.v().allocated, nonNestedDocsFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +import org.elasticsearch.index.search.nested.NonNestedDocsFilter;, +        Filter nonNestedDocsFilter = null;, +        if (parentDocMapper.hasNestedObjects()) {, +            nonNestedDocsFilter = parseContext.cacheFilter(NonNestedDocsFilter.INSTANCE, null);, +        }, +, +        Query childrenConstantScoreQuery = new ChildrenConstantScoreQuery(query, parentType, childType, parentFilter, shortCircuitParentDocSet, nonNestedDocsFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +import org.elasticsearch.index.search.nested.NonNestedDocsFilter;, +        Filter nonNestedDocsFilter = null;, +        if (parentDocMapper.hasNestedObjects()) {, +            nonNestedDocsFilter = parseContext.cacheFilter(NonNestedDocsFilter.INSTANCE, null);, +        }, +, +            query = new ChildrenQuery(parentType, childType, parentFilter, innerQuery, scoreType, shortCircuitParentDocSet, nonNestedDocsFilter);, +            query = new ChildrenConstantScoreQuery(innerQuery, parentType, childType, parentFilter, shortCircuitParentDocSet, nonNestedDocsFilter);, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQuery.java, +    private final Filter nonNestedDocsFilter;, +    public ChildrenConstantScoreQuery(Query childQuery, String parentType, String childType, Filter parentFilter, int shortCircuitParentDocSet, Filter nonNestedDocsFilter) {, +        this.nonNestedDocsFilter = nonNestedDocsFilter;, +            shortCircuitFilter = new ParentIdsFilter(parentType, collectedUids.v().keys, collectedUids.v().allocated, nonNestedDocsFilter);, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java, +import org.elasticsearch.common.lucene.search.AndFilter;, +import java.util.Arrays;, +import java.util.List;, +    private final Filter nonNestedDocsFilter;, +    public ChildrenQuery(String parentType, String childType, Filter parentFilter, Query childQuery, ScoreType scoreType, int shortCircuitParentDocSet, Filter nonNestedDocsFilter) {, +        this.nonNestedDocsFilter = nonNestedDocsFilter;, +        final Filter parentFilter;, +            if (nonNestedDocsFilter != null) {, +                List<Filter> filters = Arrays.asList(, +                        new TermFilter(new Term(UidFieldMapper.NAME, Uid.createUidAsBytes(parentType, id))),, +                        nonNestedDocsFilter, +                );, +                parentFilter = new AndFilter(filters);, +            } else {, +            }, +            parentFilter = new ParentIdsFilter(parentType, uidToScore.v().keys, uidToScore.v().allocated, nonNestedDocsFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +import org.elasticsearch.index.search.nested.NonNestedDocsFilter;, +        Filter nonNestedDocsFilter = null;, +        if (parentDocMapper.hasNestedObjects()) {, +            nonNestedDocsFilter = parseContext.cacheFilter(NonNestedDocsFilter.INSTANCE, null);, +        }, +, +        Query childrenConstantScoreQuery = new ChildrenConstantScoreQuery(query, parentType, childType, parentFilter, shortCircuitParentDocSet, nonNestedDocsFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +import org.elasticsearch.index.search.nested.NonNestedDocsFilter;, +        Filter nonNestedDocsFilter = null;, +        if (parentDocMapper.hasNestedObjects()) {, +            nonNestedDocsFilter = parseContext.cacheFilter(NonNestedDocsFilter.INSTANCE, null);, +        }]