[+++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0)), +   (fill-column . 140), +   (fci-rule-column . 140), +   (compile-command . "gradle compileTestJava")))), +++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0)), +   (fill-column . 140), +   (fci-rule-column . 140), +   (compile-command . "gradle compileTestJava")))), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            String revision = (luceneVersion =~ /\w+-snapshot-([a-z0-9]+)/)[0][1], +++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0)), +   (fill-column . 140), +   (fci-rule-column . 140), +   (compile-command . "gradle compileTestJava")))), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            String revision = (luceneVersion =~ /\w+-snapshot-([a-z0-9]+)/)[0][1], +++ b/buildSrc/version.properties, +lucene            = 5.5.0-snapshot-4de5f1d, +++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0)), +   (fill-column . 140), +   (fci-rule-column . 140), +   (compile-command . "gradle compileTestJava")))), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            String revision = (luceneVersion =~ /\w+-snapshot-([a-z0-9]+)/)[0][1], +++ b/buildSrc/version.properties, +lucene            = 5.5.0-snapshot-4de5f1d, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import static java.util.Collections.unmodifiableMap;, +    public boolean contains(Class<? extends Throwable> exType) {, +    /**, +     * This is the list of Exceptions Elasticsearch can throw over the wire or save into a corruption marker. Each value in the enum is a, +     * single exception tying the Class to an id for use of the encode side and the id back to a constructor for use on the decode side. As, +     * such its ok if the exceptions to change names so long as their constructor can still read the exception. Each exception is listed, +     * in id order below. If you want to remove an exception leave a tombstone comment and mark the id as null in, +     * ExceptionSerializationTests.testIds.ids., +     */, +        INDEX_SHARD_SNAPSHOT_FAILED_EXCEPTION(org.elasticsearch.index.snapshots.IndexShardSnapshotFailedException.class,, +                org.elasticsearch.index.snapshots.IndexShardSnapshotFailedException::new, 0),, +        DFS_PHASE_EXECUTION_EXCEPTION(org.elasticsearch.search.dfs.DfsPhaseExecutionException.class,, +                org.elasticsearch.search.dfs.DfsPhaseExecutionException::new, 1),, +        EXECUTION_CANCELLED_EXCEPTION(org.elasticsearch.common.util.CancellableThreads.ExecutionCancelledException.class,, +                org.elasticsearch.common.util.CancellableThreads.ExecutionCancelledException::new, 2),, +        MASTER_NOT_DISCOVERED_EXCEPTION(org.elasticsearch.discovery.MasterNotDiscoveredException.class,, +                org.elasticsearch.discovery.MasterNotDiscoveredException::new, 3),, +        ELASTICSEARCH_SECURITY_EXCEPTION(org.elasticsearch.ElasticsearchSecurityException.class,, +                org.elasticsearch.ElasticsearchSecurityException::new, 4),, +        INDEX_SHARD_RESTORE_EXCEPTION(org.elasticsearch.index.snapshots.IndexShardRestoreException.class,, +                org.elasticsearch.index.snapshots.IndexShardRestoreException::new, 5),, +        INDEX_CLOSED_EXCEPTION(org.elasticsearch.indices.IndexClosedException.class,, +                org.elasticsearch.indices.IndexClosedException::new, 6),, +        BIND_HTTP_EXCEPTION(org.elasticsearch.http.BindHttpException.class,, +                org.elasticsearch.http.BindHttpException::new, 7),, +        REDUCE_SEARCH_PHASE_EXCEPTION(org.elasticsearch.action.search.ReduceSearchPhaseException.class,, +                org.elasticsearch.action.search.ReduceSearchPhaseException::new, 8),, +        NODE_CLOSED_EXCEPTION(org.elasticsearch.node.NodeClosedException.class,, +                org.elasticsearch.node.NodeClosedException::new, 9),, +        SNAPSHOT_FAILED_ENGINE_EXCEPTION(org.elasticsearch.index.engine.SnapshotFailedEngineException.class,, +                org.elasticsearch.index.engine.SnapshotFailedEngineException::new, 10),, +        SHARD_NOT_FOUND_EXCEPTION(org.elasticsearch.index.shard.ShardNotFoundException.class,, +                org.elasticsearch.index.shard.ShardNotFoundException::new, 11),, +        CONNECT_TRANSPORT_EXCEPTION(org.elasticsearch.transport.ConnectTransportException.class,, +                org.elasticsearch.transport.ConnectTransportException::new, 12),, +        NOT_SERIALIZABLE_TRANSPORT_EXCEPTION(org.elasticsearch.transport.NotSerializableTransportException.class,, +                org.elasticsearch.transport.NotSerializableTransportException::new, 13),, +        RESPONSE_HANDLER_FAILURE_TRANSPORT_EXCEPTION(org.elasticsearch.transport.ResponseHandlerFailureTransportException.class,, +                org.elasticsearch.transport.ResponseHandlerFailureTransportException::new, 14),, +        INDEX_CREATION_EXCEPTION(org.elasticsearch.indices.IndexCreationException.class,, +                org.elasticsearch.indices.IndexCreationException::new, 15),, +        INDEX_NOT_FOUND_EXCEPTION(org.elasticsearch.index.IndexNotFoundException.class,, +                org.elasticsearch.index.IndexNotFoundException::new, 16),, +        ILLEGAL_SHARD_ROUTING_STATE_EXCEPTION(org.elasticsearch.cluster.routing.IllegalShardRoutingStateException.class,, +                org.elasticsearch.cluster.routing.IllegalShardRoutingStateException::new, 17),, +        BROADCAST_SHARD_OPERATION_FAILED_EXCEPTION(org.elasticsearch.action.support.broadcast.BroadcastShardOperationFailedException.class,, +                org.elasticsearch.action.support.broadcast.BroadcastShardOperationFailedException::new, 18),, +        RESOURCE_NOT_FOUND_EXCEPTION(org.elasticsearch.ResourceNotFoundException.class,, +                org.elasticsearch.ResourceNotFoundException::new, 19),, +        ACTION_TRANSPORT_EXCEPTION(org.elasticsearch.transport.ActionTransportException.class,, +                org.elasticsearch.transport.ActionTransportException::new, 20),, +        ELASTICSEARCH_GENERATION_EXCEPTION(org.elasticsearch.ElasticsearchGenerationException.class,, +                org.elasticsearch.ElasticsearchGenerationException::new, 21),, +        INDEX_SHARD_STARTED_EXCEPTION(org.elasticsearch.index.shard.IndexShardStartedException.class,, +                org.elasticsearch.index.shard.IndexShardStartedException::new, 23),, +        SEARCH_CONTEXT_MISSING_EXCEPTION(org.elasticsearch.search.SearchContextMissingException.class,, +                org.elasticsearch.search.SearchContextMissingException::new, 24),, +        BATCH_OPERATION_EXCEPTION(org.elasticsearch.index.shard.TranslogRecoveryPerformer.BatchOperationException.class,, +                org.elasticsearch.index.shard.TranslogRecoveryPerformer.BatchOperationException::new, 26),, +        SNAPSHOT_CREATION_EXCEPTION(org.elasticsearch.snapshots.SnapshotCreationException.class,, +                org.elasticsearch.snapshots.SnapshotCreationException::new, 27),, +        DELETE_FAILED_ENGINE_EXCEPTION(org.elasticsearch.index.engine.DeleteFailedEngineException.class,, +                org.elasticsearch.index.engine.DeleteFailedEngineException::new, 28),, +        DOCUMENT_MISSING_EXCEPTION(org.elasticsearch.index.engine.DocumentMissingException.class,, +                org.elasticsearch.index.engine.DocumentMissingException::new, 29),, +        SNAPSHOT_EXCEPTION(org.elasticsearch.snapshots.SnapshotException.class,, +                org.elasticsearch.snapshots.SnapshotException::new, 30),, +        INVALID_ALIAS_NAME_EXCEPTION(org.elasticsearch.indices.InvalidAliasNameException.class,, +                org.elasticsearch.indices.InvalidAliasNameException::new, 31),]