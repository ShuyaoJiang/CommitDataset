[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.breaker.CircuitBreaker;, +import org.elasticsearch.indices.breaker.CircuitBreakerStats;, +        if (in.getVersion().onOrAfter(Version.V_1_4_0)) {, +        } else {, +            // If 1.3.0 or earlier, only a single CircuitBreakerStats can be read, +            CircuitBreakerStats fdStats = CircuitBreakerStats.readOptionalCircuitBreakerStats(in);, +            CircuitBreakerStats reqStats = new CircuitBreakerStats(CircuitBreaker.Name.REQUEST, 0, 0, 1.0, -1);, +            CircuitBreakerStats parentStats = new CircuitBreakerStats(CircuitBreaker.Name.PARENT, 0, 0, 1.0, -1);, +            breaker = new AllCircuitBreakerStats(new CircuitBreakerStats[] {parentStats, fdStats, reqStats});, +        }, +, +        if (out.getVersion().onOrAfter(Version.V_1_4_0)) {, +        } else {, +            // Writing to a 1.3.0 or earlier stream expects only a single breaker stats, +            out.writeOptionalStreamable(breaker == null ? null : breaker.getStats(CircuitBreaker.Name.FIELDDATA));, +        }, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.breaker.CircuitBreaker;, +import org.elasticsearch.indices.breaker.CircuitBreakerStats;, +        if (in.getVersion().onOrAfter(Version.V_1_4_0)) {, +        } else {, +            // If 1.3.0 or earlier, only a single CircuitBreakerStats can be read, +            CircuitBreakerStats fdStats = CircuitBreakerStats.readOptionalCircuitBreakerStats(in);, +            CircuitBreakerStats reqStats = new CircuitBreakerStats(CircuitBreaker.Name.REQUEST, 0, 0, 1.0, -1);, +            CircuitBreakerStats parentStats = new CircuitBreakerStats(CircuitBreaker.Name.PARENT, 0, 0, 1.0, -1);, +            breaker = new AllCircuitBreakerStats(new CircuitBreakerStats[] {parentStats, fdStats, reqStats});, +        }, +, +        if (out.getVersion().onOrAfter(Version.V_1_4_0)) {, +        } else {, +            // Writing to a 1.3.0 or earlier stream expects only a single breaker stats, +            out.writeOptionalStreamable(breaker == null ? null : breaker.getStats(CircuitBreaker.Name.FIELDDATA));, +        }, +++ b/src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.breaker.CircuitBreaker;, +import org.elasticsearch.indices.breaker.CircuitBreakerStats;, +        if (in.getVersion().onOrAfter(Version.V_1_4_0)) {, +        } else {, +            // If 1.3.0 or earlier, only a single CircuitBreakerStats can be read, +            CircuitBreakerStats fdStats = CircuitBreakerStats.readOptionalCircuitBreakerStats(in);, +            CircuitBreakerStats reqStats = new CircuitBreakerStats(CircuitBreaker.Name.REQUEST, 0, 0, 1.0, -1);, +            CircuitBreakerStats parentStats = new CircuitBreakerStats(CircuitBreaker.Name.PARENT, 0, 0, 1.0, -1);, +            breaker = new AllCircuitBreakerStats(new CircuitBreakerStats[] {parentStats, fdStats, reqStats});, +        }, +, +        if (out.getVersion().onOrAfter(Version.V_1_4_0)) {, +        } else {, +            // Writing to a 1.3.0 or earlier stream expects only a single breaker stats, +            out.writeOptionalStreamable(breaker == null ? null : breaker.getStats(CircuitBreaker.Name.FIELDDATA));, +        }, +++ b/src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java, +++ b/src/main/java/org/elasticsearch/common/util/BigArrays.java, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.breaker.CircuitBreaker;, +import org.elasticsearch.indices.breaker.CircuitBreakerStats;, +        if (in.getVersion().onOrAfter(Version.V_1_4_0)) {, +        } else {, +            // If 1.3.0 or earlier, only a single CircuitBreakerStats can be read, +            CircuitBreakerStats fdStats = CircuitBreakerStats.readOptionalCircuitBreakerStats(in);, +            CircuitBreakerStats reqStats = new CircuitBreakerStats(CircuitBreaker.Name.REQUEST, 0, 0, 1.0, -1);, +            CircuitBreakerStats parentStats = new CircuitBreakerStats(CircuitBreaker.Name.PARENT, 0, 0, 1.0, -1);, +            breaker = new AllCircuitBreakerStats(new CircuitBreakerStats[] {parentStats, fdStats, reqStats});, +        }, +, +        if (out.getVersion().onOrAfter(Version.V_1_4_0)) {, +        } else {, +            // Writing to a 1.3.0 or earlier stream expects only a single breaker stats, +            out.writeOptionalStreamable(breaker == null ? null : breaker.getStats(CircuitBreaker.Name.FIELDDATA));, +        }, +++ b/src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java, +++ b/src/main/java/org/elasticsearch/common/util/BigArrays.java, +++ b/src/main/java/org/elasticsearch/indices/breaker/CircuitBreakerService.java, +public abstract class CircuitBreakerService extends AbstractLifecycleComponent<CircuitBreakerService> {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.breaker.CircuitBreaker;, +import org.elasticsearch.indices.breaker.CircuitBreakerStats;, +        if (in.getVersion().onOrAfter(Version.V_1_4_0)) {, +        } else {, +            // If 1.3.0 or earlier, only a single CircuitBreakerStats can be read, +            CircuitBreakerStats fdStats = CircuitBreakerStats.readOptionalCircuitBreakerStats(in);, +            CircuitBreakerStats reqStats = new CircuitBreakerStats(CircuitBreaker.Name.REQUEST, 0, 0, 1.0, -1);, +            CircuitBreakerStats parentStats = new CircuitBreakerStats(CircuitBreaker.Name.PARENT, 0, 0, 1.0, -1);, +            breaker = new AllCircuitBreakerStats(new CircuitBreakerStats[] {parentStats, fdStats, reqStats});, +        }, +, +        if (out.getVersion().onOrAfter(Version.V_1_4_0)) {, +        } else {, +            // Writing to a 1.3.0 or earlier stream expects only a single breaker stats, +            out.writeOptionalStreamable(breaker == null ? null : breaker.getStats(CircuitBreaker.Name.FIELDDATA));, +        }, +++ b/src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java, +++ b/src/main/java/org/elasticsearch/common/util/BigArrays.java, +++ b/src/main/java/org/elasticsearch/indices/breaker/CircuitBreakerService.java]