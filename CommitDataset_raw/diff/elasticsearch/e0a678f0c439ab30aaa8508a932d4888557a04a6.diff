[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertTrue(versionMap.get("number").toString().startsWith(info.getVersion().toString()));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertTrue(versionMap.get("number").toString().startsWith(info.getVersion().toString()));, +++ b/docs/plugins/discovery-azure-classic.asciidoc, +    "number" : "{version_qualified}",, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertTrue(versionMap.get("number").toString().startsWith(info.getVersion().toString()));, +++ b/docs/plugins/discovery-azure-classic.asciidoc, +    "number" : "{version_qualified}",, +++ b/docs/reference/setup/install/check-running.asciidoc, +    "number" : "{version_qualified}",, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertTrue(versionMap.get("number").toString().startsWith(info.getVersion().toString()));, +++ b/docs/plugins/discovery-azure-classic.asciidoc, +    "number" : "{version_qualified}",, +++ b/docs/reference/setup/install/check-running.asciidoc, +    "number" : "{version_qualified}",, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/remote/RemoteResponseParsers.java, +                "version", true, a -> Version.fromString(, +                    ((String) a[0]), +                        .replace("-SNAPSHOT", ""), +                        .replaceFirst("-(alpha\\d+|beta\\d+|rc\\d+)", ""), +        ));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertTrue(versionMap.get("number").toString().startsWith(info.getVersion().toString()));, +++ b/docs/plugins/discovery-azure-classic.asciidoc, +    "number" : "{version_qualified}",, +++ b/docs/reference/setup/install/check-running.asciidoc, +    "number" : "{version_qualified}",, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/remote/RemoteResponseParsers.java, +                "version", true, a -> Version.fromString(, +                    ((String) a[0]), +                        .replace("-SNAPSHOT", ""), +                        .replaceFirst("-(alpha\\d+|beta\\d+|rc\\d+)", ""), +        ));, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/remote/RemoteScrollableHitSourceTests.java, +            // assert for V_5_0_0 (no qualifier) since we no longer consider qualifier in Version since 7, +            assertEquals(Version.fromId(5000099), v);, +            // V_5_0_0 since we no longer consider qualifier in Version, +            assertEquals(Version.fromId(5000099), v);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertTrue(versionMap.get("number").toString().startsWith(info.getVersion().toString()));, +++ b/docs/plugins/discovery-azure-classic.asciidoc, +    "number" : "{version_qualified}",, +++ b/docs/reference/setup/install/check-running.asciidoc, +    "number" : "{version_qualified}",, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/remote/RemoteResponseParsers.java, +                "version", true, a -> Version.fromString(, +                    ((String) a[0]), +                        .replace("-SNAPSHOT", ""), +                        .replaceFirst("-(alpha\\d+|beta\\d+|rc\\d+)", ""), +        ));, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/remote/RemoteScrollableHitSourceTests.java, +            // assert for V_5_0_0 (no qualifier) since we no longer consider qualifier in Version since 7, +            assertEquals(Version.fromId(5000099), v);, +            // V_5_0_0 since we no longer consider qualifier in Version, +            assertEquals(Version.fromId(5000099), v);, +++ b/qa/vagrant/src/test/resources/packaging/utils/utils.bash, +    local versionToCheck, +    local major=$(echo ${version} | cut -d. -f1 ), +    if [ $major -ge 7 ] ; then, +        versionToCheck=$version, +    else, +        versionToCheck=$(echo ${version} | sed -e 's/-SNAPSHOT//'), +    fi, +        echo "Expected $versionToCheck but installed an unexpected version:", +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertTrue(versionMap.get("number").toString().startsWith(info.getVersion().toString()));, +++ b/docs/plugins/discovery-azure-classic.asciidoc, +    "number" : "{version_qualified}",, +++ b/docs/reference/setup/install/check-running.asciidoc, +    "number" : "{version_qualified}",, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/remote/RemoteResponseParsers.java, +                "version", true, a -> Version.fromString(, +                    ((String) a[0]), +                        .replace("-SNAPSHOT", ""), +                        .replaceFirst("-(alpha\\d+|beta\\d+|rc\\d+)", ""), +        ));, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/remote/RemoteScrollableHitSourceTests.java, +            // assert for V_5_0_0 (no qualifier) since we no longer consider qualifier in Version since 7, +            assertEquals(Version.fromId(5000099), v);, +            // V_5_0_0 since we no longer consider qualifier in Version, +            assertEquals(Version.fromId(5000099), v);, +++ b/qa/vagrant/src/test/resources/packaging/utils/utils.bash, +    local versionToCheck, +    local major=$(echo ${version} | cut -d. -f1 ), +    if [ $major -ge 7 ] ; then, +        versionToCheck=$version, +    else, +        versionToCheck=$(echo ${version} | sed -e 's/-SNAPSHOT//'), +    fi, +        echo "Expected $versionToCheck but installed an unexpected version:", +++ b/server/src/main/java/org/elasticsearch/Build.java, +            version = Version.CURRENT.toString();, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertTrue(versionMap.get("number").toString().startsWith(info.getVersion().toString()));, +++ b/docs/plugins/discovery-azure-classic.asciidoc, +    "number" : "{version_qualified}",, +++ b/docs/reference/setup/install/check-running.asciidoc]