[+++ b/modules/repository-url/src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java, +    @Override, +    public void writeBlobAtomic(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException {, +        throw new UnsupportedOperationException("URL repository doesn't support this operation");, +    }, +, +++ b/modules/repository-url/src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java, +    @Override, +    public void writeBlobAtomic(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException {, +        throw new UnsupportedOperationException("URL repository doesn't support this operation");, +    }, +, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobContainer.java, +    public void writeBlobAtomic(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException {, +        writeBlob(blobName, inputStream, blobSize, failIfAlreadyExists);, +    }, +, +    @Override, +++ b/modules/repository-url/src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java, +    @Override, +    public void writeBlobAtomic(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException {, +        throw new UnsupportedOperationException("URL repository doesn't support this operation");, +    }, +, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobContainer.java, +    public void writeBlobAtomic(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException {, +        writeBlob(blobName, inputStream, blobSize, failIfAlreadyExists);, +    }, +, +    @Override, +++ b/plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobContainer.java, +    public void writeBlobAtomic(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException {, +        writeBlob(blobName, inputStream, blobSize, failIfAlreadyExists);, +    }, +, +    @Override, +++ b/modules/repository-url/src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java, +    @Override, +    public void writeBlobAtomic(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException {, +        throw new UnsupportedOperationException("URL repository doesn't support this operation");, +    }, +, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobContainer.java, +    public void writeBlobAtomic(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException {, +        writeBlob(blobName, inputStream, blobSize, failIfAlreadyExists);, +    }, +, +    @Override, +++ b/plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobContainer.java, +    public void writeBlobAtomic(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException {, +        writeBlob(blobName, inputStream, blobSize, failIfAlreadyExists);, +    }, +, +    @Override, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3BlobContainer.java, +    public void writeBlobAtomic(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException {, +        writeBlob(blobName, inputStream, blobSize, failIfAlreadyExists);, +    }, +, +    @Override, +++ b/modules/repository-url/src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java, +    @Override, +    public void writeBlobAtomic(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException {, +        throw new UnsupportedOperationException("URL repository doesn't support this operation");, +    }, +, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobContainer.java, +    public void writeBlobAtomic(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException {, +        writeBlob(blobName, inputStream, blobSize, failIfAlreadyExists);, +    }, +, +    @Override, +++ b/plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobContainer.java, +    public void writeBlobAtomic(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException {, +        writeBlob(blobName, inputStream, blobSize, failIfAlreadyExists);, +    }, +, +    @Override, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3BlobContainer.java, +    public void writeBlobAtomic(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException {, +        writeBlob(blobName, inputStream, blobSize, failIfAlreadyExists);, +    }, +, +    @Override, +++ b/server/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +     * using an atomic write operation if the implementation supports it., +    void writeBlobAtomic(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException;]