[+++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.aggregations.pipeline.derivative.DerivativePipelineAggregatorBuilder;, +        registerPipelineAggregation(DerivativePipelineAggregatorBuilder::new, DerivativePipelineAggregatorBuilder::parse,, +                DerivativePipelineAggregatorBuilder.AGGREGATION_NAME_FIELD);, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.aggregations.pipeline.derivative.DerivativePipelineAggregatorBuilder;, +        registerPipelineAggregation(DerivativePipelineAggregatorBuilder::new, DerivativePipelineAggregatorBuilder::parse,, +                DerivativePipelineAggregatorBuilder.AGGREGATION_NAME_FIELD);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/BucketHelpers.java, +                throw new AggregationExecutionException(PipelineAggregatorBuilder.BUCKETS_PATH_FIELD.getPreferredName(), +                    throw new AggregationExecutionException(PipelineAggregatorBuilder.BUCKETS_PATH_FIELD.getPreferredName(), +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.aggregations.pipeline.derivative.DerivativePipelineAggregatorBuilder;, +        registerPipelineAggregation(DerivativePipelineAggregatorBuilder::new, DerivativePipelineAggregatorBuilder::parse,, +                DerivativePipelineAggregatorBuilder.AGGREGATION_NAME_FIELD);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/BucketHelpers.java, +                throw new AggregationExecutionException(PipelineAggregatorBuilder.BUCKETS_PATH_FIELD.getPreferredName(), +                    throw new AggregationExecutionException(PipelineAggregatorBuilder.BUCKETS_PATH_FIELD.getPreferredName(), +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/PipelineAggregator.java, +     * Parse the {@link PipelineAggregatorBuilder} from a {@link QueryParseContext}., +    @FunctionalInterface, +        default String type() {, +            throw new UnsupportedOperationException(); // NORELEASE remove before 5.0.0GA, +        }, +        default PipelineAggregatorBuilder<?> getFactoryPrototype() {, +            throw new UnsupportedOperationException(); // NORELEASE remove before 5.0.0GA, +        }, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.aggregations.pipeline.derivative.DerivativePipelineAggregatorBuilder;, +        registerPipelineAggregation(DerivativePipelineAggregatorBuilder::new, DerivativePipelineAggregatorBuilder::parse,, +                DerivativePipelineAggregatorBuilder.AGGREGATION_NAME_FIELD);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/BucketHelpers.java, +                throw new AggregationExecutionException(PipelineAggregatorBuilder.BUCKETS_PATH_FIELD.getPreferredName(), +                    throw new AggregationExecutionException(PipelineAggregatorBuilder.BUCKETS_PATH_FIELD.getPreferredName(), +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/PipelineAggregator.java, +     * Parse the {@link PipelineAggregatorBuilder} from a {@link QueryParseContext}., +    @FunctionalInterface, +        default String type() {, +            throw new UnsupportedOperationException(); // NORELEASE remove before 5.0.0GA, +        }, +        default PipelineAggregatorBuilder<?> getFactoryPrototype() {, +            throw new UnsupportedOperationException(); // NORELEASE remove before 5.0.0GA, +        }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/PipelineAggregatorBuilder.java, +import org.elasticsearch.common.ParseField;, +        implements NamedWriteable<PipelineAggregatorBuilder<PAB>> {, +, +    /**, +     * Field shared by many parsers., +     */, +    public static final ParseField BUCKETS_PATH_FIELD = new ParseField("buckets_path");, +    protected PipelineAggregatorBuilder(String name, String type, String[] bucketsPaths) {, +    /**, +     * Read from a stream., +     */, +    protected PipelineAggregatorBuilder(StreamInput in, String type) throws IOException {, +        name = in.readString();, +        this.type = type;, +        bucketsPaths = in.readStringArray();, +        metaData = in.readMap();, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        out.writeString(name);, +        out.writeStringArray(bucketsPaths);, +        if (usesNewStyleSerialization()) {, +            out.writeMap(metaData);, +            doWriteTo(out);, +        } else {, +            doWriteTo(out);, +            out.writeMap(metaData);, +        }, +    }, +, +    protected abstract void doWriteTo(StreamOutput out) throws IOException;, +, +    protected boolean usesNewStyleSerialization() {, +        return false; // NORELEASE remove this before 5.0.0GA, when all the aggregations have been migrated, +    }, +, +    @Override, +    public PipelineAggregatorBuilder<PAB> readFrom(StreamInput in) throws IOException {, +        String name = in.readString();, +        String[] bucketsPaths = in.readStringArray();, +        PipelineAggregatorBuilder<PAB> factory = doReadFrom(name, bucketsPaths, in);, +        factory.metaData = in.readMap();, +        return factory;, +    }, +, +    protected PipelineAggregatorBuilder<PAB> doReadFrom(String name, String[] bucketsPaths, StreamInput in) throws IOException {, +        throw new UnsupportedOperationException(); // NORELEASE remove this before 5.0.0GA, when all the aggregations have been migrated, +    }, +, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.aggregations.pipeline.derivative.DerivativePipelineAggregatorBuilder;, +        registerPipelineAggregation(DerivativePipelineAggregatorBuilder::new, DerivativePipelineAggregatorBuilder::parse,, +                DerivativePipelineAggregatorBuilder.AGGREGATION_NAME_FIELD);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/BucketHelpers.java, +                throw new AggregationExecutionException(PipelineAggregatorBuilder.BUCKETS_PATH_FIELD.getPreferredName()]