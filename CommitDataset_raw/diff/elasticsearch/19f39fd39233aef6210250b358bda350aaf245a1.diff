[+++ b/server/src/main/java/org/elasticsearch/persistent/CompletionPersistentTaskAction.java, +            persistentTasksClusterService.completePersistentTask(request.taskId, request.exception, new ActionListener<Empty>() {, +++ b/server/src/main/java/org/elasticsearch/persistent/CompletionPersistentTaskAction.java, +            persistentTasksClusterService.completePersistentTask(request.taskId, request.exception, new ActionListener<Empty>() {, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksClusterService.java, +    public void completePersistentTask(long id, Exception failure, ActionListener<Empty> listener) {, +            logger.warn("persistent task " + id + " failed", failure);, +            source = "finish persistent task (failed)";, +            source = "finish persistent task (success)";, +++ b/server/src/main/java/org/elasticsearch/persistent/CompletionPersistentTaskAction.java, +            persistentTasksClusterService.completePersistentTask(request.taskId, request.exception, new ActionListener<Empty>() {, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksClusterService.java, +    public void completePersistentTask(long id, Exception failure, ActionListener<Empty> listener) {, +            logger.warn("persistent task " + id + " failed", failure);, +            source = "finish persistent task (failed)";, +            source = "finish persistent task (success)";, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksCustomMetaData.java, +        return Version.V_5_4_0_UNRELEASED;, +         * The operation is only performed if the task is not currently assigned to any nodes., +++ b/server/src/main/java/org/elasticsearch/persistent/CompletionPersistentTaskAction.java, +            persistentTasksClusterService.completePersistentTask(request.taskId, request.exception, new ActionListener<Empty>() {, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksClusterService.java, +    public void completePersistentTask(long id, Exception failure, ActionListener<Empty> listener) {, +            logger.warn("persistent task " + id + " failed", failure);, +            source = "finish persistent task (failed)";, +            source = "finish persistent task (success)";, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksCustomMetaData.java, +        return Version.V_5_4_0_UNRELEASED;, +         * The operation is only performed if the task is not currently assigned to any nodes., +++ b/server/src/test/java/org/elasticsearch/persistent/PersistentTasksClusterServiceTests.java, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., +++ b/server/src/main/java/org/elasticsearch/persistent/CompletionPersistentTaskAction.java, +            persistentTasksClusterService.completePersistentTask(request.taskId, request.exception, new ActionListener<Empty>() {, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksClusterService.java, +    public void completePersistentTask(long id, Exception failure, ActionListener<Empty> listener) {, +            logger.warn("persistent task " + id + " failed", failure);, +            source = "finish persistent task (failed)";, +            source = "finish persistent task (success)";, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksCustomMetaData.java, +        return Version.V_5_4_0_UNRELEASED;, +         * The operation is only performed if the task is not currently assigned to any nodes., +++ b/server/src/test/java/org/elasticsearch/persistent/PersistentTasksClusterServiceTests.java, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., +++ b/server/src/test/java/org/elasticsearch/persistent/PersistentTasksCustomMetaDataTests.java, +++ b/server/src/main/java/org/elasticsearch/persistent/CompletionPersistentTaskAction.java, +            persistentTasksClusterService.completePersistentTask(request.taskId, request.exception, new ActionListener<Empty>() {, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksClusterService.java, +    public void completePersistentTask(long id, Exception failure, ActionListener<Empty> listener) {, +            logger.warn("persistent task " + id + " failed", failure);, +            source = "finish persistent task (failed)";, +            source = "finish persistent task (success)";, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksCustomMetaData.java, +        return Version.V_5_4_0_UNRELEASED;, +         * The operation is only performed if the task is not currently assigned to any nodes., +++ b/server/src/test/java/org/elasticsearch/persistent/PersistentTasksClusterServiceTests.java, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., +++ b/server/src/test/java/org/elasticsearch/persistent/PersistentTasksCustomMetaDataTests.java, +++ b/server/src/test/java/org/elasticsearch/persistent/PersistentTasksExecutorFullRestartIT.java, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., +++ b/server/src/main/java/org/elasticsearch/persistent/CompletionPersistentTaskAction.java, +            persistentTasksClusterService.completePersistentTask(request.taskId, request.exception, new ActionListener<Empty>() {, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksClusterService.java, +    public void completePersistentTask(long id, Exception failure, ActionListener<Empty> listener) {, +            logger.warn("persistent task " + id + " failed", failure);, +            source = "finish persistent task (failed)";, +            source = "finish persistent task (success)";, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksCustomMetaData.java, +        return Version.V_5_4_0_UNRELEASED;, +         * The operation is only performed if the task is not currently assigned to any nodes., +++ b/server/src/test/java/org/elasticsearch/persistent/PersistentTasksClusterServiceTests.java, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., +++ b/server/src/test/java/org/elasticsearch/persistent/PersistentTasksCustomMetaDataTests.java, +++ b/server/src/test/java/org/elasticsearch/persistent/PersistentTasksExecutorFullRestartIT.java, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., +++ b/server/src/test/java/org/elasticsearch/persistent/PersistentTasksExecutorIT.java, +    public void testPersistentActionFailure() throws Exception {, +++ b/server/src/main/java/org/elasticsearch/persistent/CompletionPersistentTaskAction.java, +            persistentTasksClusterService.completePersistentTask(request.taskId, request.exception, new ActionListener<Empty>() {, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksClusterService.java, +    public void completePersistentTask(long id, Exception failure, ActionListener<Empty> listener) {, +            logger.warn("persistent task " + id + " failed", failure);, +            source = "finish persistent task (failed)";]