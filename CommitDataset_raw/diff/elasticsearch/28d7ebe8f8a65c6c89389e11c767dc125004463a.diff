[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +                    @Nullable TransportInfo transport, @Nullable HttpInfo http, @Nullable PluginsAndModules plugins,, +                    @Nullable IngestInfo ingest, @Nullable ByteSizeValue totalIndexingBuffer) {, +        os = in.readOptionalWriteable(OsInfo::new);, +        process = in.readOptionalWriteable(ProcessInfo::new);, +        jvm = in.readOptionalWriteable(JvmInfo::new);, +        threadPool = in.readOptionalWriteable(ThreadPoolInfo::new);, +        transport = in.readOptionalWriteable(TransportInfo::new);, +        http = in.readOptionalWriteable(HttpInfo::new);, +        plugins = in.readOptionalWriteable(PluginsAndModules::new);, +        ingest = in.readOptionalWriteable(IngestInfo::new);, +        out.writeOptionalWriteable(os);, +        out.writeOptionalWriteable(process);, +        out.writeOptionalWriteable(jvm);, +        out.writeOptionalWriteable(threadPool);, +        out.writeOptionalWriteable(transport);, +        out.writeOptionalWriteable(http);, +        out.writeOptionalWriteable(plugins);, +        out.writeOptionalWriteable(ingest);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +                    @Nullable TransportInfo transport, @Nullable HttpInfo http, @Nullable PluginsAndModules plugins,, +                    @Nullable IngestInfo ingest, @Nullable ByteSizeValue totalIndexingBuffer) {, +        os = in.readOptionalWriteable(OsInfo::new);, +        process = in.readOptionalWriteable(ProcessInfo::new);, +        jvm = in.readOptionalWriteable(JvmInfo::new);, +        threadPool = in.readOptionalWriteable(ThreadPoolInfo::new);, +        transport = in.readOptionalWriteable(TransportInfo::new);, +        http = in.readOptionalWriteable(HttpInfo::new);, +        plugins = in.readOptionalWriteable(PluginsAndModules::new);, +        ingest = in.readOptionalWriteable(IngestInfo::new);, +        out.writeOptionalWriteable(os);, +        out.writeOptionalWriteable(process);, +        out.writeOptionalWriteable(jvm);, +        out.writeOptionalWriteable(threadPool);, +        out.writeOptionalWriteable(transport);, +        out.writeOptionalWriteable(http);, +        out.writeOptionalWriteable(plugins);, +        out.writeOptionalWriteable(ingest);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/PluginsAndModules.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class PluginsAndModules implements Writeable, ToXContent {, +    private final List<PluginInfo> plugins;, +    private final List<PluginInfo> modules;, +    public PluginsAndModules(List<PluginInfo> plugins, List<PluginInfo> modules) {, +        this.plugins = Collections.unmodifiableList(plugins);, +        this.modules = Collections.unmodifiableList(modules);, +    }, +, +    public PluginsAndModules(StreamInput in) throws IOException {, +        this.plugins = Collections.unmodifiableList(in.readList(PluginInfo::new));, +        this.modules = Collections.unmodifiableList(in.readList(PluginInfo::new));, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        out.writeList(plugins);, +        out.writeList(modules);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +                    @Nullable TransportInfo transport, @Nullable HttpInfo http, @Nullable PluginsAndModules plugins,, +                    @Nullable IngestInfo ingest, @Nullable ByteSizeValue totalIndexingBuffer) {, +        os = in.readOptionalWriteable(OsInfo::new);, +        process = in.readOptionalWriteable(ProcessInfo::new);, +        jvm = in.readOptionalWriteable(JvmInfo::new);, +        threadPool = in.readOptionalWriteable(ThreadPoolInfo::new);, +        transport = in.readOptionalWriteable(TransportInfo::new);, +        http = in.readOptionalWriteable(HttpInfo::new);, +        plugins = in.readOptionalWriteable(PluginsAndModules::new);, +        ingest = in.readOptionalWriteable(IngestInfo::new);, +        out.writeOptionalWriteable(os);, +        out.writeOptionalWriteable(process);, +        out.writeOptionalWriteable(jvm);, +        out.writeOptionalWriteable(threadPool);, +        out.writeOptionalWriteable(transport);, +        out.writeOptionalWriteable(http);, +        out.writeOptionalWriteable(plugins);, +        out.writeOptionalWriteable(ingest);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/PluginsAndModules.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class PluginsAndModules implements Writeable, ToXContent {, +    private final List<PluginInfo> plugins;, +    private final List<PluginInfo> modules;, +    public PluginsAndModules(List<PluginInfo> plugins, List<PluginInfo> modules) {, +        this.plugins = Collections.unmodifiableList(plugins);, +        this.modules = Collections.unmodifiableList(modules);, +    }, +, +    public PluginsAndModules(StreamInput in) throws IOException {, +        this.plugins = Collections.unmodifiableList(in.readList(PluginInfo::new));, +        this.modules = Collections.unmodifiableList(in.readList(PluginInfo::new));, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        out.writeList(plugins);, +        out.writeList(modules);, +++ b/core/src/main/java/org/elasticsearch/common/unit/ByteSizeValue.java]