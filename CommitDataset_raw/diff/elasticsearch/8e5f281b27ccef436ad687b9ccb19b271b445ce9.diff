[+++ b/modules/mapper-extras/src/test/java/org/elasticsearch/index/query/FeatureQueryBuilderTests.java, +        mapperService.merge("_doc", new CompressedXContent(Strings.toString(PutMappingRequest.buildFromSimplifiedDef("_doc",, +++ b/modules/mapper-extras/src/test/java/org/elasticsearch/index/query/FeatureQueryBuilderTests.java, +        mapperService.merge("_doc", new CompressedXContent(Strings.toString(PutMappingRequest.buildFromSimplifiedDef("_doc",, +++ b/server/src/test/java/org/elasticsearch/index/query/DisMaxQueryBuilderTests.java, +++ b/modules/mapper-extras/src/test/java/org/elasticsearch/index/query/FeatureQueryBuilderTests.java, +        mapperService.merge("_doc", new CompressedXContent(Strings.toString(PutMappingRequest.buildFromSimplifiedDef("_doc",, +++ b/server/src/test/java/org/elasticsearch/index/query/DisMaxQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java, +        if (context.mapperService().getIndexSettings().getIndexVersionCreated().before(Version.V_6_1_0)) {, +++ b/modules/mapper-extras/src/test/java/org/elasticsearch/index/query/FeatureQueryBuilderTests.java, +        mapperService.merge("_doc", new CompressedXContent(Strings.toString(PutMappingRequest.buildFromSimplifiedDef("_doc",, +++ b/server/src/test/java/org/elasticsearch/index/query/DisMaxQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java, +        if (context.mapperService().getIndexSettings().getIndexVersionCreated().before(Version.V_6_1_0)) {, +++ b/server/src/test/java/org/elasticsearch/index/query/FuzzyQueryBuilderTests.java, +++ b/modules/mapper-extras/src/test/java/org/elasticsearch/index/query/FeatureQueryBuilderTests.java, +        mapperService.merge("_doc", new CompressedXContent(Strings.toString(PutMappingRequest.buildFromSimplifiedDef("_doc",, +++ b/server/src/test/java/org/elasticsearch/index/query/DisMaxQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java, +        if (context.mapperService().getIndexSettings().getIndexVersionCreated().before(Version.V_6_1_0)) {, +++ b/server/src/test/java/org/elasticsearch/index/query/FuzzyQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilderTests.java, +    public void testExceptionOnMissingTypes() {, +        QueryShardContext context = createShardContextWithNoType();, +        GeoBoundingBoxQueryBuilder qb = createTestQueryBuilder();, +        qb.ignoreUnmapped(false);, +        QueryShardException e = expectThrows(QueryShardException.class, () -> qb.toQuery(context));, +        assertEquals("failed to find geo_point field [" + qb.fieldName() + "]", e.getMessage());, +++ b/modules/mapper-extras/src/test/java/org/elasticsearch/index/query/FeatureQueryBuilderTests.java, +        mapperService.merge("_doc", new CompressedXContent(Strings.toString(PutMappingRequest.buildFromSimplifiedDef("_doc",, +++ b/server/src/test/java/org/elasticsearch/index/query/DisMaxQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java, +        if (context.mapperService().getIndexSettings().getIndexVersionCreated().before(Version.V_6_1_0)) {, +++ b/server/src/test/java/org/elasticsearch/index/query/FuzzyQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilderTests.java, +    public void testExceptionOnMissingTypes() {, +        QueryShardContext context = createShardContextWithNoType();, +        GeoBoundingBoxQueryBuilder qb = createTestQueryBuilder();, +        qb.ignoreUnmapped(false);, +        QueryShardException e = expectThrows(QueryShardException.class, () -> qb.toQuery(context));, +        assertEquals("failed to find geo_point field [" + qb.fieldName() + "]", e.getMessage());, +++ b/server/src/test/java/org/elasticsearch/index/query/GeoDistanceQueryBuilderTests.java, +++ b/modules/mapper-extras/src/test/java/org/elasticsearch/index/query/FeatureQueryBuilderTests.java, +        mapperService.merge("_doc", new CompressedXContent(Strings.toString(PutMappingRequest.buildFromSimplifiedDef("_doc",, +++ b/server/src/test/java/org/elasticsearch/index/query/DisMaxQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java, +        if (context.mapperService().getIndexSettings().getIndexVersionCreated().before(Version.V_6_1_0)) {, +++ b/server/src/test/java/org/elasticsearch/index/query/FuzzyQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilderTests.java, +    public void testExceptionOnMissingTypes() {, +        QueryShardContext context = createShardContextWithNoType();, +        GeoBoundingBoxQueryBuilder qb = createTestQueryBuilder();, +        qb.ignoreUnmapped(false);, +        QueryShardException e = expectThrows(QueryShardException.class, () -> qb.toQuery(context));, +        assertEquals("failed to find geo_point field [" + qb.fieldName() + "]", e.getMessage());, +++ b/server/src/test/java/org/elasticsearch/index/query/GeoDistanceQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/GeoPolygonQueryBuilderTests.java, +++ b/modules/mapper-extras/src/test/java/org/elasticsearch/index/query/FeatureQueryBuilderTests.java, +        mapperService.merge("_doc", new CompressedXContent(Strings.toString(PutMappingRequest.buildFromSimplifiedDef("_doc",, +++ b/server/src/test/java/org/elasticsearch/index/query/DisMaxQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java, +        if (context.mapperService().getIndexSettings().getIndexVersionCreated().before(Version.V_6_1_0)) {, +++ b/server/src/test/java/org/elasticsearch/index/query/FuzzyQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilderTests.java, +    public void testExceptionOnMissingTypes() {, +        QueryShardContext context = createShardContextWithNoType();, +        GeoBoundingBoxQueryBuilder qb = createTestQueryBuilder();, +        qb.ignoreUnmapped(false);, +        QueryShardException e = expectThrows(QueryShardException.class, () -> qb.toQuery(context));, +        assertEquals("failed to find geo_point field [" + qb.fieldName() + "]", e.getMessage());, +++ b/server/src/test/java/org/elasticsearch/index/query/GeoDistanceQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/GeoPolygonQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/GeoShapeQueryBuilderTests.java, +++ b/modules/mapper-extras/src/test/java/org/elasticsearch/index/query/FeatureQueryBuilderTests.java, +        mapperService.merge("_doc", new CompressedXContent(Strings.toString(PutMappingRequest.buildFromSimplifiedDef("_doc",, +++ b/server/src/test/java/org/elasticsearch/index/query/DisMaxQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java, +        if (context.mapperService().getIndexSettings().getIndexVersionCreated().before(Version.V_6_1_0)) {, +++ b/server/src/test/java/org/elasticsearch/index/query/FuzzyQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilderTests.java, +    public void testExceptionOnMissingTypes() {, +        QueryShardContext context = createShardContextWithNoType();, +        GeoBoundingBoxQueryBuilder qb = createTestQueryBuilder();, +        qb.ignoreUnmapped(false);, +        QueryShardException e = expectThrows(QueryShardException.class, () -> qb.toQuery(context));, +        assertEquals("failed to find geo_point field [" + qb.fieldName() + "]", e.getMessage());, +++ b/server/src/test/java/org/elasticsearch/index/query/GeoDistanceQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/GeoPolygonQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/GeoShapeQueryBuilderTests.java, +++ b/server/src/test/java/org/elasticsearch/index/query/IdsQueryBuilderTests.java, +        final String type;, +            if (frequently()) {, +                type = "_doc";, +                type = randomAlphaOfLengthBetween(1, 10);, +        } else if (randomBoolean()) {, +                type = MetaData.ALL;, +        } else {, +            type = null;, +        if (type != null && randomBoolean()) {]