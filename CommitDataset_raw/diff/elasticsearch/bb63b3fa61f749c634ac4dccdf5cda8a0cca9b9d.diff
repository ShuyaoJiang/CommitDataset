[+++ b/src/main/java/org/elasticsearch/index/query/GeoPolygonFilterParser.java, +                    } else {, +                        throw new QueryParsingException(parseContext.index(), "[geo_polygon] filter does not support token type [" + token.name() + "] under [" + currentFieldName + "]");, +            } else {, +                throw new QueryParsingException(parseContext.index(), "[geo_polygon] unexpected token type [" + token.name() + "]");, +++ b/src/main/java/org/elasticsearch/index/query/GeoPolygonFilterParser.java, +                    } else {, +                        throw new QueryParsingException(parseContext.index(), "[geo_polygon] filter does not support token type [" + token.name() + "] under [" + currentFieldName + "]");, +            } else {, +                throw new QueryParsingException(parseContext.index(), "[geo_polygon] unexpected token type [" + token.name() + "]");, +++ b/src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java, +, +    @Test, +    public void testGeoPolygonFilterParsingExceptions() throws IOException {, +        String[] brokenFiles = new String[]{, +                "/org/elasticsearch/index/query/geo_polygon_exception_1.json",, +                "/org/elasticsearch/index/query/geo_polygon_exception_2.json",, +                "/org/elasticsearch/index/query/geo_polygon_exception_3.json",, +                "/org/elasticsearch/index/query/geo_polygon_exception_4.json",, +                "/org/elasticsearch/index/query/geo_polygon_exception_5.json", +        };, +        for (String brokenFile : brokenFiles) {, +            IndexQueryParserService queryParser = queryParser();, +            String query = copyToStringFromClasspath(brokenFile);, +            try {, +                queryParser.parse(query).query();, +                fail("parsing a broken geo_polygon filter didn't fail as expected while parsing: " + brokenFile);, +            } catch (QueryParsingException e) {, +                // success!, +            }, +        }, +    }, +, +, +++ b/src/main/java/org/elasticsearch/index/query/GeoPolygonFilterParser.java, +                    } else {, +                        throw new QueryParsingException(parseContext.index(), "[geo_polygon] filter does not support token type [" + token.name() + "] under [" + currentFieldName + "]");, +            } else {, +                throw new QueryParsingException(parseContext.index(), "[geo_polygon] unexpected token type [" + token.name() + "]");, +++ b/src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java, +, +    @Test, +    public void testGeoPolygonFilterParsingExceptions() throws IOException {, +        String[] brokenFiles = new String[]{, +                "/org/elasticsearch/index/query/geo_polygon_exception_1.json",, +                "/org/elasticsearch/index/query/geo_polygon_exception_2.json",, +                "/org/elasticsearch/index/query/geo_polygon_exception_3.json",, +                "/org/elasticsearch/index/query/geo_polygon_exception_4.json",, +                "/org/elasticsearch/index/query/geo_polygon_exception_5.json", +        };, +        for (String brokenFile : brokenFiles) {, +            IndexQueryParserService queryParser = queryParser();, +            String query = copyToStringFromClasspath(brokenFile);, +            try {, +                queryParser.parse(query).query();, +                fail("parsing a broken geo_polygon filter didn't fail as expected while parsing: " + brokenFile);, +            } catch (QueryParsingException e) {, +                // success!, +            }, +        }, +    }, +, +, +++ b/src/test/java/org/elasticsearch/index/query/geo_polygon_exception_1.json, +{, +    "filtered": {, +        "query": {, +            "match_all": {}, +        },, +        "filter": {, +            "geo_polygon": {, +                "location": {, +                    "points": {, +                        "points": [, +                            [-70, 40],, +                            [-80, 30],, +                            [-90, 20], +                        ], +                    }, +                }, +            }, +        }, +    }, +}, +++ b/src/main/java/org/elasticsearch/index/query/GeoPolygonFilterParser.java, +                    } else {, +                        throw new QueryParsingException(parseContext.index(), "[geo_polygon] filter does not support token type [" + token.name() + "] under [" + currentFieldName + "]");, +            } else {, +                throw new QueryParsingException(parseContext.index(), "[geo_polygon] unexpected token type [" + token.name() + "]");, +++ b/src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java, +, +    @Test, +    public void testGeoPolygonFilterParsingExceptions() throws IOException {, +        String[] brokenFiles = new String[]{, +                "/org/elasticsearch/index/query/geo_polygon_exception_1.json",, +                "/org/elasticsearch/index/query/geo_polygon_exception_2.json",, +                "/org/elasticsearch/index/query/geo_polygon_exception_3.json",, +                "/org/elasticsearch/index/query/geo_polygon_exception_4.json",, +                "/org/elasticsearch/index/query/geo_polygon_exception_5.json", +        };]