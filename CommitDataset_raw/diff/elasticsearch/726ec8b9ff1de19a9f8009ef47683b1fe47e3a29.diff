[+++ b/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +import com.google.common.collect.Lists;, +    private final boolean masterElectionFilterClientNodes;, +    private final boolean masterElectionFilterDataNodes;, +, +        this.masterElectionFilterClientNodes = settings.getAsBoolean("discovery.zen.master_election.filter_client", true);, +        this.masterElectionFilterDataNodes = settings.getAsBoolean("discovery.zen.master_election.filter_data", false);, +, +        logger.debug("using ping.timeout [{}], master_election.filter_client [{}], master_election.filter_data [{}]", pingTimeout, masterElectionFilterClientNodes, masterElectionFilterDataNodes);, +        ZenPing.PingResponse[] fullPingResponses = pingService.pingAndWait(pingTimeout);, +        if (fullPingResponses == null) {, +        if (logger.isTraceEnabled()) {, +            StringBuilder sb = new StringBuilder("full ping responses:");, +            if (fullPingResponses.length == 0) {, +                sb.append(" {none}");, +            } else {, +                for (ZenPing.PingResponse pingResponse : fullPingResponses) {, +                    sb.append("\n\t--> ").append("target [").append(pingResponse.target()).append("], master [").append(pingResponse.master()).append("]");, +                }, +            }, +            logger.trace(sb.toString());, +        }, +, +        // filter responses, +        List<ZenPing.PingResponse> pingResponses = Lists.newArrayList();, +        for (ZenPing.PingResponse pingResponse : fullPingResponses) {, +            DiscoveryNode node = pingResponse.target();, +            if (masterElectionFilterClientNodes && (node.clientNode() || (!node.masterNode() && !node.dataNode()))) {, +                // filter out the client node, which is a client node, or also one that is not data and not master (effectively, client), +            } else if (masterElectionFilterDataNodes && (!node.masterNode() && node.dataNode())) {, +                // filter out data node that is not also master, +            } else {, +                pingResponses.add(pingResponse);, +            }, +        }, +, +            StringBuilder sb = new StringBuilder("filtered ping responses: (filter_client[").append(masterElectionFilterClientNodes).append("], filter_data[").append(masterElectionFilterDataNodes).append("])");, +            if (pingResponses.isEmpty()) {]