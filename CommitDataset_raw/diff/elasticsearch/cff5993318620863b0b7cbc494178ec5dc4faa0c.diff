[+++ b/core/src/main/java/org/elasticsearch/Version.java, +     *   public static final Version V_5_1_0_UNRELEASED = Version.fromId(5010099);, +++ b/core/src/main/java/org/elasticsearch/Version.java, +     *   public static final Version V_5_1_0_UNRELEASED = Version.fromId(5010099);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ShardValidateQueryRequest.java, +import org.elasticsearch.search.internal.AliasFilter;, +import java.util.Objects;, +    private AliasFilter filteringAliases;, +    public ShardValidateQueryRequest(ShardId shardId, AliasFilter filteringAliases, ValidateQueryRequest request) {, +        this.filteringAliases = Objects.requireNonNull(filteringAliases, "filteringAliases must not be null");, +    public AliasFilter filteringAliases() {, +        filteringAliases = new AliasFilter(in);, +        filteringAliases.writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/Version.java, +     *   public static final Version V_5_1_0_UNRELEASED = Version.fromId(5010099);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ShardValidateQueryRequest.java, +import org.elasticsearch.search.internal.AliasFilter;, +import java.util.Objects;, +    private AliasFilter filteringAliases;, +    public ShardValidateQueryRequest(ShardId shardId, AliasFilter filteringAliases, ValidateQueryRequest request) {, +        this.filteringAliases = Objects.requireNonNull(filteringAliases, "filteringAliases must not be null");, +    public AliasFilter filteringAliases() {, +        filteringAliases = new AliasFilter(in);, +        filteringAliases.writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.search.internal.AliasFilter;, +        final AliasFilter aliasFilter = searchService.buildAliasFilter(clusterService.state(), shard.getIndexName(),, +            request.indices());, +        return new ShardValidateQueryRequest(shard.shardId(), aliasFilter, request);, +    protected ShardValidateQueryResponse shardOperation(ShardValidateQueryRequest request) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/Version.java, +     *   public static final Version V_5_1_0_UNRELEASED = Version.fromId(5010099);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ShardValidateQueryRequest.java, +import org.elasticsearch.search.internal.AliasFilter;, +import java.util.Objects;, +    private AliasFilter filteringAliases;, +    public ShardValidateQueryRequest(ShardId shardId, AliasFilter filteringAliases, ValidateQueryRequest request) {, +        this.filteringAliases = Objects.requireNonNull(filteringAliases, "filteringAliases must not be null");, +    public AliasFilter filteringAliases() {, +        filteringAliases = new AliasFilter(in);, +        filteringAliases.writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.search.internal.AliasFilter;, +        final AliasFilter aliasFilter = searchService.buildAliasFilter(clusterService.state(), shard.getIndexName(),, +            request.indices());, +        return new ShardValidateQueryRequest(shard.shardId(), aliasFilter, request);, +    protected ShardValidateQueryResponse shardOperation(ShardValidateQueryRequest request) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/explain/ExplainRequest.java, +import org.elasticsearch.search.internal.AliasFilter;, +    private AliasFilter filteringAlias = new AliasFilter(null, Strings.EMPTY_ARRAY);, +    public AliasFilter filteringAlias() {, +    public ExplainRequest filteringAlias(AliasFilter filteringAlias) {, +        filteringAlias = new AliasFilter(in);, +        filteringAlias.writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/Version.java, +     *   public static final Version V_5_1_0_UNRELEASED = Version.fromId(5010099);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ShardValidateQueryRequest.java, +import org.elasticsearch.search.internal.AliasFilter;, +import java.util.Objects;, +    private AliasFilter filteringAliases;, +    public ShardValidateQueryRequest(ShardId shardId, AliasFilter filteringAliases, ValidateQueryRequest request) {, +        this.filteringAliases = Objects.requireNonNull(filteringAliases, "filteringAliases must not be null");, +    public AliasFilter filteringAliases() {, +        filteringAliases = new AliasFilter(in);, +        filteringAliases.writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.search.internal.AliasFilter;, +        final AliasFilter aliasFilter = searchService.buildAliasFilter(clusterService.state(), shard.getIndexName(),, +            request.indices());, +        return new ShardValidateQueryRequest(shard.shardId(), aliasFilter, request);, +    protected ShardValidateQueryResponse shardOperation(ShardValidateQueryRequest request) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/explain/ExplainRequest.java, +import org.elasticsearch.search.internal.AliasFilter;, +    private AliasFilter filteringAlias = new AliasFilter(null, Strings.EMPTY_ARRAY);, +    public AliasFilter filteringAlias() {, +    public ExplainRequest filteringAlias(AliasFilter filteringAlias) {, +        filteringAlias = new AliasFilter(in);, +        filteringAlias.writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +import org.elasticsearch.search.internal.AliasFilter;, +        final AliasFilter aliasFilter = searchService.buildAliasFilter(state, request.concreteIndex(),, +            request.request().index());, +        request.request().filteringAlias(aliasFilter);, +    protected ExplainResponse shardOperation(ExplainRequest request, ShardId shardId) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/Version.java, +     *   public static final Version V_5_1_0_UNRELEASED = Version.fromId(5010099);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ShardValidateQueryRequest.java, +import org.elasticsearch.search.internal.AliasFilter;, +import java.util.Objects;, +    private AliasFilter filteringAliases;, +    public ShardValidateQueryRequest(ShardId shardId, AliasFilter filteringAliases, ValidateQueryRequest request) {, +        this.filteringAliases = Objects.requireNonNull(filteringAliases, "filteringAliases must not be null");, +    public AliasFilter filteringAliases() {, +        filteringAliases = new AliasFilter(in);, +        filteringAliases.writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.search.internal.AliasFilter;, +        final AliasFilter aliasFilter = searchService.buildAliasFilter(clusterService.state(), shard.getIndexName(),, +            request.indices());, +        return new ShardValidateQueryRequest(shard.shardId(), aliasFilter, request);]