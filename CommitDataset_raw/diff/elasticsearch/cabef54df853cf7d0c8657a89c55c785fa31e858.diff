[+++ b/.github/PULL_REQUEST_TEMPLATE.md, +<!--, +- Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)?, +- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/master/.github/CONTRIBUTING.md)?, +- If submitting code, have you built your formula locally prior to submission with `gradle check`?, +- If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed., +- If submitting code, have you checked that your submission is for an [OS that we support](https://www.elastic.co/support/matrix#show_os)?, +-->, +++ b/.github/PULL_REQUEST_TEMPLATE.md, +<!--, +- Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)?, +- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/master/.github/CONTRIBUTING.md)?, +- If submitting code, have you built your formula locally prior to submission with `gradle check`?, +- If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed., +- If submitting code, have you checked that your submission is for an [OS that we support](https://www.elastic.co/support/matrix#show_os)?, +-->, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/.github/PULL_REQUEST_TEMPLATE.md, +<!--, +- Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)?, +- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/master/.github/CONTRIBUTING.md)?, +- If submitting code, have you built your formula locally prior to submission with `gradle check`?, +- If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed., +- If submitting code, have you checked that your submission is for an [OS that we support](https://www.elastic.co/support/matrix#show_os)?, +-->, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0-alpha2, +++ b/.github/PULL_REQUEST_TEMPLATE.md, +<!--, +- Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)?, +- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/master/.github/CONTRIBUTING.md)?, +- If submitting code, have you built your formula locally prior to submission with `gradle check`?, +- If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed., +- If submitting code, have you checked that your submission is for an [OS that we support](https://www.elastic.co/support/matrix#show_os)?, +-->, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/version.properties, +elasticsearch     = 5.0.0-alpha2, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +package org.apache.lucene.search.suggest.analyzing;, +, +import com.carrotsearch.hppc.ObjectIntHashMap;, +import org.apache.lucene.analysis.Analyzer;, +import org.apache.lucene.analysis.TokenStream;, +import org.apache.lucene.analysis.TokenStreamToAutomaton;, +import org.apache.lucene.search.suggest.InputIterator;, +import org.apache.lucene.search.suggest.Lookup;, +import org.apache.lucene.store.ByteArrayDataInput;, +import org.apache.lucene.store.ByteArrayDataOutput;, +import org.apache.lucene.store.DataInput;, +import org.apache.lucene.store.DataOutput;, +import org.apache.lucene.store.Directory;, +import org.apache.lucene.store.FSDirectory;, +import org.apache.lucene.store.IOContext;, +import org.apache.lucene.store.IndexOutput;, +import org.apache.lucene.store.InputStreamDataInput;, +import org.apache.lucene.store.OutputStreamDataOutput;, +import org.apache.lucene.util.ArrayUtil;, +import org.apache.lucene.util.BytesRef;, +import org.apache.lucene.util.BytesRefBuilder;, +import org.apache.lucene.util.CharsRefBuilder;, +import org.apache.lucene.util.IOUtils;, +import org.apache.lucene.util.IntsRef;, +import org.apache.lucene.util.IntsRefBuilder;, +import org.apache.lucene.util.OfflineSorter;, +import org.apache.lucene.util.automaton.Automaton;, +import org.apache.lucene.util.automaton.LimitedFiniteStringsIterator;, +import org.apache.lucene.util.automaton.Operations;, +import org.apache.lucene.util.automaton.Transition;, +import org.apache.lucene.util.fst.Builder;, +import org.apache.lucene.util.fst.ByteSequenceOutputs;, +import org.apache.lucene.util.fst.FST;, +import org.apache.lucene.util.fst.FST.BytesReader;, +import org.apache.lucene.util.fst.PairOutputs;, +import org.apache.lucene.util.fst.PairOutputs.Pair;, +import org.apache.lucene.util.fst.PositiveIntOutputs;, +import org.apache.lucene.util.fst.Util;, +import org.apache.lucene.util.fst.Util.Result;, +import org.apache.lucene.util.fst.Util.TopResults;, +import org.elasticsearch.common.SuppressForbidden;, +import org.elasticsearch.common.collect.HppcMaps;]