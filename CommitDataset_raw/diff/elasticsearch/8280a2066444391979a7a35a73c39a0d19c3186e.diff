[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.SetUpgradeModeRequest;, +    static Request setUpgradeMode(SetUpgradeModeRequest setUpgradeModeRequest) {, +        String endpoint = new EndpointBuilder().addPathPartAsIs("_ml", "set_upgrade_mode").build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        params.putParam(SetUpgradeModeRequest.ENABLED.getPreferredName(), Boolean.toString(setUpgradeModeRequest.isEnabled()));, +        if (setUpgradeModeRequest.getTimeout() != null) {, +            params.putParam(SetUpgradeModeRequest.TIMEOUT.getPreferredName(), setUpgradeModeRequest.getTimeout().toString());, +        }, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.SetUpgradeModeRequest;, +    static Request setUpgradeMode(SetUpgradeModeRequest setUpgradeModeRequest) {, +        String endpoint = new EndpointBuilder().addPathPartAsIs("_ml", "set_upgrade_mode").build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        params.putParam(SetUpgradeModeRequest.ENABLED.getPreferredName(), Boolean.toString(setUpgradeModeRequest.isEnabled()));, +        if (setUpgradeModeRequest.getTimeout() != null) {, +            params.putParam(SetUpgradeModeRequest.TIMEOUT.getPreferredName(), setUpgradeModeRequest.getTimeout().toString());, +        }, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.SetUpgradeModeRequest;, +, +    /**, +     * Sets the ML cluster setting upgrade_mode, +     * <p>, +     * For additional info, +     * see <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-set-upgrade-mode.html">Set Upgrade Mode</a>, +     *, +     * @param request The request to set upgrade mode, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return response, +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public AcknowledgedResponse setUpgradeMode(SetUpgradeModeRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +            MLRequestConverters::setUpgradeMode,, +            options,, +            AcknowledgedResponse::fromXContent,, +            Collections.emptySet());, +    }, +, +    /**, +     * Sets the ML cluster setting upgrade_mode asynchronously, +     * <p>, +     * For additional info, +     * see <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-set-upgrade-mode.html">Set Upgrade Mode</a>, +     *, +     * @param request The request of Machine Learning info, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified upon request completion, +     */, +    public void setUpgradeModeAsync(SetUpgradeModeRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +            MLRequestConverters::setUpgradeMode,, +            options,, +            AcknowledgedResponse::fromXContent,, +            listener,, +            Collections.emptySet());, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.SetUpgradeModeRequest;, +    static Request setUpgradeMode(SetUpgradeModeRequest setUpgradeModeRequest) {, +        String endpoint = new EndpointBuilder().addPathPartAsIs("_ml", "set_upgrade_mode").build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        params.putParam(SetUpgradeModeRequest.ENABLED.getPreferredName(), Boolean.toString(setUpgradeModeRequest.isEnabled()));, +        if (setUpgradeModeRequest.getTimeout() != null) {, +            params.putParam(SetUpgradeModeRequest.TIMEOUT.getPreferredName(), setUpgradeModeRequest.getTimeout().toString());, +        }, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.SetUpgradeModeRequest;, +, +    /**, +     * Sets the ML cluster setting upgrade_mode, +     * <p>, +     * For additional info, +     * see <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-set-upgrade-mode.html">Set Upgrade Mode</a>, +     *, +     * @param request The request to set upgrade mode, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return response, +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public AcknowledgedResponse setUpgradeMode(SetUpgradeModeRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +            MLRequestConverters::setUpgradeMode,, +            options,, +            AcknowledgedResponse::fromXContent,, +            Collections.emptySet());, +    }]