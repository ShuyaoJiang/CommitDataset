[+++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +    private volatile Bootstrap clientBootstrap;, +    private volatile NioEventLoopGroup eventLoopGroup;, +            ThreadFactory threadFactory = daemonThreadFactory(settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX);, +            eventLoopGroup = new NioEventLoopGroup(workerCount, threadFactory);, +            clientBootstrap = createClientBootstrap(eventLoopGroup);, +                    createServerBootstrap(profileSettings, eventLoopGroup);, +    private Bootstrap createClientBootstrap(NioEventLoopGroup eventLoopGroup) {, +        bootstrap.group(eventLoopGroup);, +    private void createServerBootstrap(ProfileSettings profileSettings, NioEventLoopGroup eventLoopGroup) {, +        serverBootstrap.group(eventLoopGroup);, +            Future<?> shutdownFuture = eventLoopGroup.shutdownGracefully(0, 5, TimeUnit.SECONDS);, +            shutdownFuture.awaitUninterruptibly();, +            if (shutdownFuture.isSuccess() == false) {, +                logger.warn("Error closing netty event loop group", shutdownFuture.cause());, +            serverBootstraps.clear();, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +    private volatile Bootstrap clientBootstrap;, +    private volatile NioEventLoopGroup eventLoopGroup;, +            ThreadFactory threadFactory = daemonThreadFactory(settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX);, +            eventLoopGroup = new NioEventLoopGroup(workerCount, threadFactory);, +            clientBootstrap = createClientBootstrap(eventLoopGroup);, +                    createServerBootstrap(profileSettings, eventLoopGroup);, +    private Bootstrap createClientBootstrap(NioEventLoopGroup eventLoopGroup) {, +        bootstrap.group(eventLoopGroup);, +    private void createServerBootstrap(ProfileSettings profileSettings, NioEventLoopGroup eventLoopGroup) {, +        serverBootstrap.group(eventLoopGroup);, +            Future<?> shutdownFuture = eventLoopGroup.shutdownGracefully(0, 5, TimeUnit.SECONDS);, +            shutdownFuture.awaitUninterruptibly();, +            if (shutdownFuture.isSuccess() == false) {, +                logger.warn("Error closing netty event loop group", shutdownFuture.cause());, +            serverBootstraps.clear();, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +            nioGroup = new NioGroup(daemonThreadFactory(this.settings, TcpTransport.TRANSPORT_WORKER_THREAD_NAME_PREFIX),, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +    private volatile Bootstrap clientBootstrap;, +    private volatile NioEventLoopGroup eventLoopGroup;, +            ThreadFactory threadFactory = daemonThreadFactory(settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX);, +            eventLoopGroup = new NioEventLoopGroup(workerCount, threadFactory);, +            clientBootstrap = createClientBootstrap(eventLoopGroup);, +                    createServerBootstrap(profileSettings, eventLoopGroup);, +    private Bootstrap createClientBootstrap(NioEventLoopGroup eventLoopGroup) {, +        bootstrap.group(eventLoopGroup);, +    private void createServerBootstrap(ProfileSettings profileSettings, NioEventLoopGroup eventLoopGroup) {, +        serverBootstrap.group(eventLoopGroup);, +            Future<?> shutdownFuture = eventLoopGroup.shutdownGracefully(0, 5, TimeUnit.SECONDS);, +            shutdownFuture.awaitUninterruptibly();, +            if (shutdownFuture.isSuccess() == false) {, +                logger.warn("Error closing netty event loop group", shutdownFuture.cause());, +            serverBootstraps.clear();, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +            nioGroup = new NioGroup(daemonThreadFactory(this.settings, TcpTransport.TRANSPORT_WORKER_THREAD_NAME_PREFIX),, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransport.java, +    public static final String TRANSPORT_WORKER_THREAD_NAME_PREFIX = "transport_worker";, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +    private volatile Bootstrap clientBootstrap;, +    private volatile NioEventLoopGroup eventLoopGroup;, +            ThreadFactory threadFactory = daemonThreadFactory(settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX);, +            eventLoopGroup = new NioEventLoopGroup(workerCount, threadFactory);, +            clientBootstrap = createClientBootstrap(eventLoopGroup);, +                    createServerBootstrap(profileSettings, eventLoopGroup);, +    private Bootstrap createClientBootstrap(NioEventLoopGroup eventLoopGroup) {, +        bootstrap.group(eventLoopGroup);, +    private void createServerBootstrap(ProfileSettings profileSettings, NioEventLoopGroup eventLoopGroup) {, +        serverBootstrap.group(eventLoopGroup);, +            Future<?> shutdownFuture = eventLoopGroup.shutdownGracefully(0, 5, TimeUnit.SECONDS);, +            shutdownFuture.awaitUninterruptibly();, +            if (shutdownFuture.isSuccess() == false) {, +                logger.warn("Error closing netty event loop group", shutdownFuture.cause());, +            serverBootstraps.clear();, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +            nioGroup = new NioGroup(daemonThreadFactory(this.settings, TcpTransport.TRANSPORT_WORKER_THREAD_NAME_PREFIX),, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransport.java, +    public static final String TRANSPORT_WORKER_THREAD_NAME_PREFIX = "transport_worker";, +++ b/server/src/main/java/org/elasticsearch/transport/Transports.java, +                TcpTransport.TRANSPORT_WORKER_THREAD_NAME_PREFIX,, +                TEST_MOCK_TRANSPORT_THREAD_PREFIX)) {, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +    private volatile Bootstrap clientBootstrap;, +    private volatile NioEventLoopGroup eventLoopGroup;, +            ThreadFactory threadFactory = daemonThreadFactory(settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX);, +            eventLoopGroup = new NioEventLoopGroup(workerCount, threadFactory);, +            clientBootstrap = createClientBootstrap(eventLoopGroup);, +                    createServerBootstrap(profileSettings, eventLoopGroup);, +    private Bootstrap createClientBootstrap(NioEventLoopGroup eventLoopGroup) {, +        bootstrap.group(eventLoopGroup);, +    private void createServerBootstrap(ProfileSettings profileSettings, NioEventLoopGroup eventLoopGroup) {, +        serverBootstrap.group(eventLoopGroup);, +            Future<?> shutdownFuture = eventLoopGroup.shutdownGracefully(0, 5, TimeUnit.SECONDS);, +            shutdownFuture.awaitUninterruptibly();, +            if (shutdownFuture.isSuccess() == false) {, +                logger.warn("Error closing netty event loop group", shutdownFuture.cause());, +            serverBootstraps.clear();, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java, +            nioGroup = new NioGroup(daemonThreadFactory(this.settings, TcpTransport.TRANSPORT_WORKER_THREAD_NAME_PREFIX),, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransport.java, +    public static final String TRANSPORT_WORKER_THREAD_NAME_PREFIX = "transport_worker";, +++ b/server/src/main/java/org/elasticsearch/transport/Transports.java, +                TcpTransport.TRANSPORT_WORKER_THREAD_NAME_PREFIX,, +                TEST_MOCK_TRANSPORT_THREAD_PREFIX)) {]