[+++ b/core/pom.xml, +                                <include>org/elasticsearch/bootstrap/XTestSecurityManager*.class</include>, +++ b/core/pom.xml, +                                <include>org/elasticsearch/bootstrap/XTestSecurityManager*.class</include>, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_2_0_0_beta1 = new Version(V_2_0_0_beta1_ID, true, org.apache.lucene.util.Version.LUCENE_5_2_1);, +++ b/core/pom.xml, +                                <include>org/elasticsearch/bootstrap/XTestSecurityManager*.class</include>, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_2_0_0_beta1 = new Version(V_2_0_0_beta1_ID, true, org.apache.lucene.util.Version.LUCENE_5_2_1);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/ESPolicy.java, +        URI uri = getClass().getResource(POLICY_RESOURCE).toURI();, +        this.template = Policy.getInstance("JavaPolicy", new URIParameter(uri));, +                // run groovy scripts with no permissions, +                    return false;, +++ b/core/pom.xml, +                                <include>org/elasticsearch/bootstrap/XTestSecurityManager*.class</include>, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_2_0_0_beta1 = new Version(V_2_0_0_beta1_ID, true, org.apache.lucene.util.Version.LUCENE_5_2_1);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/ESPolicy.java, +        URI uri = getClass().getResource(POLICY_RESOURCE).toURI();, +        this.template = Policy.getInstance("JavaPolicy", new URIParameter(uri));, +                // run groovy scripts with no permissions, +                    return false;, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +import org.apache.lucene.index.IndexWriter.IndexReaderWarmer;, +import org.elasticsearch.action.support.TransportActions;, +++ b/core/pom.xml, +                                <include>org/elasticsearch/bootstrap/XTestSecurityManager*.class</include>, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_2_0_0_beta1 = new Version(V_2_0_0_beta1_ID, true, org.apache.lucene.util.Version.LUCENE_5_2_1);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/ESPolicy.java, +        URI uri = getClass().getResource(POLICY_RESOURCE).toURI();, +        this.template = Policy.getInstance("JavaPolicy", new URIParameter(uri));, +                // run groovy scripts with no permissions, +                    return false;, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +import org.apache.lucene.index.IndexWriter.IndexReaderWarmer;, +import org.elasticsearch.action.support.TransportActions;, +++ b/core/src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java, +++ b/core/pom.xml, +                                <include>org/elasticsearch/bootstrap/XTestSecurityManager*.class</include>, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_2_0_0_beta1 = new Version(V_2_0_0_beta1_ID, true, org.apache.lucene.util.Version.LUCENE_5_2_1);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/ESPolicy.java, +        URI uri = getClass().getResource(POLICY_RESOURCE).toURI();, +        this.template = Policy.getInstance("JavaPolicy", new URIParameter(uri));, +                // run groovy scripts with no permissions, +                    return false;, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +import org.apache.lucene.index.IndexWriter.IndexReaderWarmer;, +import org.elasticsearch.action.support.TransportActions;, +++ b/core/src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java, +++ /dev/null, +++ b/core/pom.xml, +                                <include>org/elasticsearch/bootstrap/XTestSecurityManager*.class</include>, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_2_0_0_beta1 = new Version(V_2_0_0_beta1_ID, true, org.apache.lucene.util.Version.LUCENE_5_2_1);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/ESPolicy.java, +        URI uri = getClass().getResource(POLICY_RESOURCE).toURI();, +        this.template = Policy.getInstance("JavaPolicy", new URIParameter(uri));, +                // run groovy scripts with no permissions, +                    return false;, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +import org.apache.lucene.index.IndexWriter.IndexReaderWarmer;, +import org.elasticsearch.action.support.TransportActions;, +++ b/core/src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/VersionTests.java, +                if (v.equals(Version.V_2_0_0_beta1)) {, +                    assertTrue("Remove this once beta1 is released", v.snapshot());, +                    continue; // this is just a temporary fix until we have a snapshot for the beta since we now have 2 unreleased version of the same major.minor group, +                }, +++ b/core/pom.xml, +                                <include>org/elasticsearch/bootstrap/XTestSecurityManager*.class</include>, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_2_0_0_beta1 = new Version(V_2_0_0_beta1_ID, true, org.apache.lucene.util.Version.LUCENE_5_2_1);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/ESPolicy.java, +        URI uri = getClass().getResource(POLICY_RESOURCE).toURI();, +        this.template = Policy.getInstance("JavaPolicy", new URIParameter(uri));, +                // run groovy scripts with no permissions, +                    return false;, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +import org.apache.lucene.index.IndexWriter.IndexReaderWarmer;, +import org.elasticsearch.action.support.TransportActions;, +++ b/core/src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/VersionTests.java, +                if (v.equals(Version.V_2_0_0_beta1)) {, +                    assertTrue("Remove this once beta1 is released", v.snapshot());, +                    continue; // this is just a temporary fix until we have a snapshot for the beta since we now have 2 unreleased version of the same major.minor group, +                }, +++ b/core/src/test/java/org/elasticsearch/bootstrap/BootstrapForTesting.java, +import java.security.CodeSource;, +import java.security.Permission;, +import java.security.PermissionCollection;, +import java.security.cert.Certificate;, +import java.util.Collections;, +                // if its an insecure plugin, its not easy to simulate here, since we don't have a real plugin install., +                // we just do our best so unit testing can work. integration tests for such plugins are essential.]