[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/sort/FieldSortBuilder.java, +        if (order != null) {, +            builder.field("order", order.toString());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/sort/FieldSortBuilder.java, +        if (order != null) {, +            builder.field("order", order.toString());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/sort/SortOrder.java, +    ASC {, +        @Override public String toString() {, +            return "asc";, +        }, +    },, +    DESC {, +        @Override public String toString() {, +            return "desc";, +        }, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/sort/FieldSortBuilder.java, +        if (order != null) {, +            builder.field("order", order.toString());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/sort/SortOrder.java, +    ASC {, +        @Override public String toString() {, +            return "asc";, +        }, +    },, +    DESC {, +        @Override public String toString() {, +            return "desc";, +        }, +    }, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/search/sort/SimpleSortTests.java, +import org.hamcrest.Matchers;, +    @Test public void testScoreSortDirection() throws Exception {, +        try {, +            client.admin().indices().prepareDelete("test").execute().actionGet();, +        } catch (Exception e) {, +            // ignore, +        }, +        client.admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("number_of_shards", 1)).execute().actionGet();, +        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();, +, +        client.prepareIndex("test", "type", "1").setSource("field", 2).execute().actionGet();, +        client.prepareIndex("test", "type", "2").setSource("field", 1).execute().actionGet();, +        client.prepareIndex("test", "type", "3").setSource("field", 0).execute().actionGet();, +, +        client.admin().indices().prepareRefresh().execute().actionGet();, +, +        SearchResponse searchResponse = client.prepareSearch("test").setQuery(customScoreQuery(matchAllQuery()).script("_source.field")).execute().actionGet();, +        assertThat(searchResponse.hits().getAt(0).getId(), equalTo("1"));, +        assertThat(searchResponse.hits().getAt(1).score(), Matchers.lessThan(searchResponse.hits().getAt(0).score()));, +        assertThat(searchResponse.hits().getAt(1).getId(), equalTo("2"));, +        assertThat(searchResponse.hits().getAt(2).score(), Matchers.lessThan(searchResponse.hits().getAt(1).score()));, +        assertThat(searchResponse.hits().getAt(2).getId(), equalTo("3"));, +, +        searchResponse = client.prepareSearch("test").setQuery(customScoreQuery(matchAllQuery()).script("_source.field")).addSort("_score", SortOrder.DESC).execute().actionGet();, +        assertThat(searchResponse.hits().getAt(0).getId(), equalTo("1"));, +        assertThat(searchResponse.hits().getAt(1).score(), Matchers.lessThan(searchResponse.hits().getAt(0).score()));, +        assertThat(searchResponse.hits().getAt(1).getId(), equalTo("2"));, +        assertThat(searchResponse.hits().getAt(2).score(), Matchers.lessThan(searchResponse.hits().getAt(1).score()));, +        assertThat(searchResponse.hits().getAt(2).getId(), equalTo("3"));, +, +        searchResponse = client.prepareSearch("test").setQuery(customScoreQuery(matchAllQuery()).script("_source.field")).addSort("_score", SortOrder.DESC).execute().actionGet();, +        assertThat(searchResponse.hits().getAt(2).getId(), equalTo("3"));, +        assertThat(searchResponse.hits().getAt(1).getId(), equalTo("2"));, +        assertThat(searchResponse.hits().getAt(0).getId(), equalTo("1"));, +    }, +]