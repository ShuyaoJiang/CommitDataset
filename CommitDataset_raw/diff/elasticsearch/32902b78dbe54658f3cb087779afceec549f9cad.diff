[+++ b/buildSrc/version.properties, +lucene            = 7.4.0-snapshot-1cbadda4d3, +++ b/buildSrc/version.properties, +lucene            = 7.4.0-snapshot-1cbadda4d3, +++ b/docs/reference/migration/migrate_7_0/search.asciidoc, +++ b/buildSrc/version.properties, +lucene            = 7.4.0-snapshot-1cbadda4d3, +++ b/docs/reference/migration/migrate_7_0/search.asciidoc, +++ b/libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java, +                fieldParser = getParser(currentFieldName);, +    private FieldParser getParser(String fieldName) {, +            throw new IllegalArgumentException("[" + name  + "] unknown field [" + fieldName + "], parser not found");, +++ b/buildSrc/version.properties, +lucene            = 7.4.0-snapshot-1cbadda4d3, +++ b/docs/reference/migration/migrate_7_0/search.asciidoc, +++ b/libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java, +                fieldParser = getParser(currentFieldName);, +    private FieldParser getParser(String fieldName) {, +            throw new IllegalArgumentException("[" + name  + "] unknown field [" + fieldName + "], parser not found");, +++ b/libs/x-content/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java, +import static org.hamcrest.CoreMatchers.startsWith;, +        XContentParser parser = createParser(JsonXContent.jsonXContent, "{\"test\" : \"foo\"}");, +        try {, +            objectParser.parse(parser, s, null);, +            fail("numeric value expected");, +        } catch (XContentParseException ex) {, +, +        parser = createParser(JsonXContent.jsonXContent, "{\"not_supported_field\" : \"foo\"}");, +        try {, +            objectParser.parse(parser, s, null);, +            fail("field not supported");, +        } catch (IllegalArgumentException ex) {, +            assertEquals(ex.getMessage(), "[the_parser] unknown field [not_supported_field], parser not found");, +++ b/buildSrc/version.properties, +lucene            = 7.4.0-snapshot-1cbadda4d3, +++ b/docs/reference/migration/migrate_7_0/search.asciidoc, +++ b/libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java, +                fieldParser = getParser(currentFieldName);, +    private FieldParser getParser(String fieldName) {, +            throw new IllegalArgumentException("[" + name  + "] unknown field [" + fieldName + "], parser not found");, +++ b/libs/x-content/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java, +import static org.hamcrest.CoreMatchers.startsWith;, +        XContentParser parser = createParser(JsonXContent.jsonXContent, "{\"test\" : \"foo\"}");, +        try {, +            objectParser.parse(parser, s, null);, +            fail("numeric value expected");, +        } catch (XContentParseException ex) {, +, +        parser = createParser(JsonXContent.jsonXContent, "{\"not_supported_field\" : \"foo\"}");, +        try {, +            objectParser.parse(parser, s, null);, +            fail("field not supported");, +        } catch (IllegalArgumentException ex) {, +            assertEquals(ex.getMessage(), "[the_parser] unknown field [not_supported_field], parser not found");, +++ /dev/null, +++ b/buildSrc/version.properties, +lucene            = 7.4.0-snapshot-1cbadda4d3, +++ b/docs/reference/migration/migrate_7_0/search.asciidoc, +++ b/libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java, +                fieldParser = getParser(currentFieldName);, +    private FieldParser getParser(String fieldName) {, +            throw new IllegalArgumentException("[" + name  + "] unknown field [" + fieldName + "], parser not found");, +++ b/libs/x-content/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java, +import static org.hamcrest.CoreMatchers.startsWith;, +        XContentParser parser = createParser(JsonXContent.jsonXContent, "{\"test\" : \"foo\"}");, +        try {, +            objectParser.parse(parser, s, null);, +            fail("numeric value expected");, +        } catch (XContentParseException ex) {, +, +        parser = createParser(JsonXContent.jsonXContent, "{\"not_supported_field\" : \"foo\"}");, +        try {, +            objectParser.parse(parser, s, null);, +            fail("field not supported");, +        } catch (IllegalArgumentException ex) {, +            assertEquals(ex.getMessage(), "[the_parser] unknown field [not_supported_field], parser not found");, +++ /dev/null, +++ b/modules/lang-expression/licenses/lucene-expressions-7.4.0-snapshot-1cbadda4d3.jar.sha1, +98c920972b2f5e8563540e805d87e6a3bc888972, +++ b/buildSrc/version.properties, +lucene            = 7.4.0-snapshot-1cbadda4d3, +++ b/docs/reference/migration/migrate_7_0/search.asciidoc, +++ b/libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java, +                fieldParser = getParser(currentFieldName);, +    private FieldParser getParser(String fieldName) {, +            throw new IllegalArgumentException("[" + name  + "] unknown field [" + fieldName + "], parser not found");, +++ b/libs/x-content/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java, +import static org.hamcrest.CoreMatchers.startsWith;, +        XContentParser parser = createParser(JsonXContent.jsonXContent, "{\"test\" : \"foo\"}");, +        try {, +            objectParser.parse(parser, s, null);, +            fail("numeric value expected");, +        } catch (XContentParseException ex) {, +, +        parser = createParser(JsonXContent.jsonXContent, "{\"not_supported_field\" : \"foo\"}");, +        try {, +            objectParser.parse(parser, s, null);, +            fail("field not supported");, +        } catch (IllegalArgumentException ex) {, +            assertEquals(ex.getMessage(), "[the_parser] unknown field [not_supported_field], parser not found");]