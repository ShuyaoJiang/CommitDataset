[+++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.monitor.jvm.JvmService;, +import org.elasticsearch.monitor.os.OsService;, +import org.elasticsearch.monitor.process.ProcessService;, +                    NodeEnvironment.ADD_NODE_ID_TO_CUSTOM_PATH,, +                    OsService.REFRESH_INTERVAL_SETTING,, +                    ProcessService.REFRESH_INTERVAL_SETTING,, +                    JvmService.REFRESH_INTERVAL_SETTING, +                )));, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.monitor.jvm.JvmService;, +import org.elasticsearch.monitor.os.OsService;, +import org.elasticsearch.monitor.process.ProcessService;, +                    NodeEnvironment.ADD_NODE_ID_TO_CUSTOM_PATH,, +                    OsService.REFRESH_INTERVAL_SETTING,, +                    ProcessService.REFRESH_INTERVAL_SETTING,, +                    JvmService.REFRESH_INTERVAL_SETTING, +                )));, +++ b/core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java, +                cancellableThreads.execute(() -> {, +                                ArrayUtil.timSort(metadata, new Comparator<StoreFileMetaData>() {, +                                    @Override, +                                    public int compare(StoreFileMetaData o1, StoreFileMetaData o2) {, +                                    }, +                });, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.monitor.jvm.JvmService;, +import org.elasticsearch.monitor.os.OsService;, +import org.elasticsearch.monitor.process.ProcessService;, +                    NodeEnvironment.ADD_NODE_ID_TO_CUSTOM_PATH,, +                    OsService.REFRESH_INTERVAL_SETTING,, +                    ProcessService.REFRESH_INTERVAL_SETTING,, +                    JvmService.REFRESH_INTERVAL_SETTING, +                )));, +++ b/core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java, +                cancellableThreads.execute(() -> {, +                                ArrayUtil.timSort(metadata, new Comparator<StoreFileMetaData>() {, +                                    @Override, +                                    public int compare(StoreFileMetaData o1, StoreFileMetaData o2) {, +                                    }, +                });, +++ b/core/src/main/java/org/elasticsearch/monitor/jvm/JvmService.java, +import org.elasticsearch.common.settings.Setting;, +    public final static Setting<TimeValue> REFRESH_INTERVAL_SETTING =, +        Setting.timeSetting("monitor.jvm.refresh_interval", TimeValue.timeValueSeconds(1), TimeValue.timeValueSeconds(1), false, Setting.Scope.CLUSTER);, +, +        this.refreshInterval = REFRESH_INTERVAL_SETTING.get(settings);, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.monitor.jvm.JvmService;, +import org.elasticsearch.monitor.os.OsService;, +import org.elasticsearch.monitor.process.ProcessService;, +                    NodeEnvironment.ADD_NODE_ID_TO_CUSTOM_PATH,, +                    OsService.REFRESH_INTERVAL_SETTING,, +                    ProcessService.REFRESH_INTERVAL_SETTING,, +                    JvmService.REFRESH_INTERVAL_SETTING, +                )));, +++ b/core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java, +                cancellableThreads.execute(() -> {, +                                ArrayUtil.timSort(metadata, new Comparator<StoreFileMetaData>() {, +                                    @Override, +                                    public int compare(StoreFileMetaData o1, StoreFileMetaData o2) {, +                                    }, +                });, +++ b/core/src/main/java/org/elasticsearch/monitor/jvm/JvmService.java, +import org.elasticsearch.common.settings.Setting;, +    public final static Setting<TimeValue> REFRESH_INTERVAL_SETTING =, +        Setting.timeSetting("monitor.jvm.refresh_interval", TimeValue.timeValueSeconds(1), TimeValue.timeValueSeconds(1), false, Setting.Scope.CLUSTER);, +, +        this.refreshInterval = REFRESH_INTERVAL_SETTING.get(settings);, +++ b/core/src/main/java/org/elasticsearch/monitor/os/OsService.java, +import org.elasticsearch.common.settings.Setting;, +    public final static Setting<TimeValue> REFRESH_INTERVAL_SETTING =, +        Setting.timeSetting("monitor.os.refresh_interval", TimeValue.timeValueSeconds(1), TimeValue.timeValueSeconds(1), false, Setting.Scope.CLUSTER);, +, +        TimeValue refreshInterval = REFRESH_INTERVAL_SETTING.get(settings);, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.monitor.jvm.JvmService;, +import org.elasticsearch.monitor.os.OsService;, +import org.elasticsearch.monitor.process.ProcessService;, +                    NodeEnvironment.ADD_NODE_ID_TO_CUSTOM_PATH,, +                    OsService.REFRESH_INTERVAL_SETTING,, +                    ProcessService.REFRESH_INTERVAL_SETTING,, +                    JvmService.REFRESH_INTERVAL_SETTING, +                )));, +++ b/core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java, +                cancellableThreads.execute(() -> {, +                                ArrayUtil.timSort(metadata, new Comparator<StoreFileMetaData>() {, +                                    @Override, +                                    public int compare(StoreFileMetaData o1, StoreFileMetaData o2) {, +                                    }, +                });, +++ b/core/src/main/java/org/elasticsearch/monitor/jvm/JvmService.java, +import org.elasticsearch.common.settings.Setting;, +    public final static Setting<TimeValue> REFRESH_INTERVAL_SETTING =, +        Setting.timeSetting("monitor.jvm.refresh_interval", TimeValue.timeValueSeconds(1), TimeValue.timeValueSeconds(1), false, Setting.Scope.CLUSTER);, +, +        this.refreshInterval = REFRESH_INTERVAL_SETTING.get(settings);, +++ b/core/src/main/java/org/elasticsearch/monitor/os/OsService.java, +import org.elasticsearch.common.settings.Setting;, +    public final static Setting<TimeValue> REFRESH_INTERVAL_SETTING =]