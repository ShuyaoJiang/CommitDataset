[+++ b/src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java, +    private static class Holder {, +        // lazy init on first access, +        private static final Node NODE = newNode();, +    }, +        assertAcked(Holder.NODE.client().admin().indices().prepareDelete("*").get());, +        MetaData metaData = Holder.NODE.client().admin().cluster().prepareState().get().getState().getMetaData();, +                .put(ClusterName.SETTING, nodeName()), +                .put("node.name", nodeName()), +     * Returns the single test nodes name., +     */, +    public static String nodeName() {, +        return ElasticsearchSingleNodeTest.class.getName();, +    }, +, +    /**, +     * Returns the name of the cluster used for the single test node., +     */, +    public static String clusterName() {, +        return ElasticsearchSingleNodeTest.class.getName();, +    }, +, +    /**, +        return Holder.NODE;, +        return ((InternalNode) Holder.NODE).injector().getInstance(clazz);, +        assertAcked(Holder.NODE.client().admin().indices().prepareCreate(index).setSettings(settings).get());, +        ClusterHealthResponse health = Holder.NODE.client().admin().cluster(), +++ b/src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java, +    private static class Holder {, +        // lazy init on first access, +        private static final Node NODE = newNode();, +    }, +        assertAcked(Holder.NODE.client().admin().indices().prepareDelete("*").get());, +        MetaData metaData = Holder.NODE.client().admin().cluster().prepareState().get().getState().getMetaData();, +                .put(ClusterName.SETTING, nodeName()), +                .put("node.name", nodeName()), +     * Returns the single test nodes name., +     */, +    public static String nodeName() {, +        return ElasticsearchSingleNodeTest.class.getName();, +    }, +, +    /**, +     * Returns the name of the cluster used for the single test node., +     */, +    public static String clusterName() {, +        return ElasticsearchSingleNodeTest.class.getName();, +    }, +, +    /**, +        return Holder.NODE;, +        return ((InternalNode) Holder.NODE).injector().getInstance(clazz);, +        assertAcked(Holder.NODE.client().admin().indices().prepareCreate(index).setSettings(settings).get());, +        ClusterHealthResponse health = Holder.NODE.client().admin().cluster(), +++ b/src/test/java/org/elasticsearch/threadpool/SimpleThreadPoolTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +            // or the ones that are occasionally come up from ElasticsearchSingleNodeTest, +            if (threadName.contains("[" + MulticastChannel.SHARED_CHANNEL_NAME + "]"), +                || threadName.contains("[" + ElasticsearchSingleNodeTest.nodeName() + "]")) {]