[+++ b/core/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +        if (type.equals("string")) {, +            deprecationLogger.deprecated("[unmapped_type:string] should be replaced with [unmapped_type:keyword]");, +            type = "keyword";, +        }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +        if (type.equals("string")) {, +            deprecationLogger.deprecated("[unmapped_type:string] should be replaced with [unmapped_type:keyword]");, +            type = "keyword";, +        }, +++ b/core/src/test/java/org/elasticsearch/index/mapper/MapperServiceTests.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +, +import org.elasticsearch.index.mapper.core.KeywordFieldMapper.KeywordFieldType;, +import org.elasticsearch.index.mapper.core.LongFieldMapper.LongFieldType;, +, +import static org.hamcrest.Matchers.instanceOf;, +, +, +    public void testUnmappedFieldType() {, +        MapperService mapperService = createIndex("index").mapperService();, +        assertThat(mapperService.unmappedFieldType("keyword"), instanceOf(KeywordFieldType.class));, +        assertThat(mapperService.unmappedFieldType("long"), instanceOf(LongFieldType.class));, +        // back compat, +        assertThat(mapperService.unmappedFieldType("string"), instanceOf(KeywordFieldType.class));, +    }, +, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +        if (type.equals("string")) {, +            deprecationLogger.deprecated("[unmapped_type:string] should be replaced with [unmapped_type:keyword]");, +            type = "keyword";, +        }, +++ b/core/src/test/java/org/elasticsearch/index/mapper/MapperServiceTests.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +, +import org.elasticsearch.index.mapper.core.KeywordFieldMapper.KeywordFieldType;, +import org.elasticsearch.index.mapper.core.LongFieldMapper.LongFieldType;, +, +import static org.hamcrest.Matchers.instanceOf;, +, +, +    public void testUnmappedFieldType() {, +        MapperService mapperService = createIndex("index").mapperService();, +        assertThat(mapperService.unmappedFieldType("keyword"), instanceOf(KeywordFieldType.class));, +        assertThat(mapperService.unmappedFieldType("long"), instanceOf(LongFieldType.class));, +        // back compat, +        assertThat(mapperService.unmappedFieldType("string"), instanceOf(KeywordFieldType.class));, +    }, +, +++ b/plugins/mapper-attachments/src/test/java/org/elasticsearch/mapper/attachments/MultifieldAttachmentMapperTests.java]