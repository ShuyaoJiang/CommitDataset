[+++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentFieldType.name(), queryText, quoted);, +                    query = getPossiblyAnalyzedPrefixQuery(currentFieldType.name(), termStr);, +                indexedNameField = currentFieldType.name();, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentFieldType.name(), queryText, quoted);, +                    query = getPossiblyAnalyzedPrefixQuery(currentFieldType.name(), termStr);, +                indexedNameField = currentFieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                MappedFieldType fieldType = indexService.mapperService().fullName(request.field());, +                    field = fieldType.name();, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentFieldType.name(), queryText, quoted);, +                    query = getPossiblyAnalyzedPrefixQuery(currentFieldType.name(), termStr);, +                indexedNameField = currentFieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                MappedFieldType fieldType = indexService.mapperService().fullName(request.field());, +                    field = fieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.fieldType().name(), builder.bytes()));, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentFieldType.name(), queryText, quoted);, +                    query = getPossiblyAnalyzedPrefixQuery(currentFieldType.name(), termStr);, +                indexedNameField = currentFieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                MappedFieldType fieldType = indexService.mapperService().fullName(request.field());, +                    field = fieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.fieldType().name(), builder.bytes()));, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        public void onCache(ShardId shardId, String fieldName, FieldDataType fieldDataType, Accountable ramUsage) {, +                    shard.fieldData().onCache(shardId, fieldName, fieldDataType, ramUsage);, +        public void onRemoval(ShardId shardId, String fieldName, FieldDataType fieldDataType, boolean wasEvicted, long sizeInBytes) {, +                    shard.fieldData().onRemoval(shardId, fieldName, fieldDataType, wasEvicted, sizeInBytes);, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentFieldType.name(), queryText, quoted);, +                    query = getPossiblyAnalyzedPrefixQuery(currentFieldType.name(), termStr);, +                indexedNameField = currentFieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                MappedFieldType fieldType = indexService.mapperService().fullName(request.field());, +                    field = fieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.fieldType().name(), builder.bytes()));, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        public void onCache(ShardId shardId, String fieldName, FieldDataType fieldDataType, Accountable ramUsage) {, +                    shard.fieldData().onCache(shardId, fieldName, fieldDataType, ramUsage);, +        public void onRemoval(ShardId shardId, String fieldName, FieldDataType fieldDataType, boolean wasEvicted, long sizeInBytes) {, +                    shard.fieldData().onRemoval(shardId, fieldName, fieldDataType, wasEvicted, sizeInBytes);, +++ b/core/src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java, +        final MappedFieldType indexName = mapperService.fullName(field);, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentFieldType.name(), queryText, quoted);, +                    query = getPossiblyAnalyzedPrefixQuery(currentFieldType.name(), termStr);, +                indexedNameField = currentFieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                MappedFieldType fieldType = indexService.mapperService().fullName(request.field());, +                    field = fieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.fieldType().name(), builder.bytes()));, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        public void onCache(ShardId shardId, String fieldName, FieldDataType fieldDataType, Accountable ramUsage) {, +                    shard.fieldData().onCache(shardId, fieldName, fieldDataType, ramUsage);, +        public void onRemoval(ShardId shardId, String fieldName, FieldDataType fieldDataType, boolean wasEvicted, long sizeInBytes) {, +                    shard.fieldData().onRemoval(shardId, fieldName, fieldDataType, wasEvicted, sizeInBytes);, +++ b/core/src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java, +        final MappedFieldType indexName = mapperService.fullName(field);, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldData.java, +    String getFieldName();, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentFieldType.name(), queryText, quoted);, +                    query = getPossiblyAnalyzedPrefixQuery(currentFieldType.name(), termStr);, +                indexedNameField = currentFieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                MappedFieldType fieldType = indexService.mapperService().fullName(request.field());, +                    field = fieldType.name();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {, +                        addFieldMapper(fieldMapper.fieldType().name(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().name())) {]