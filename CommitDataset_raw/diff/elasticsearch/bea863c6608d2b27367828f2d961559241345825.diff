[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +            os = new OsInfo(in);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +            os = new OsInfo(in);, +++ b/core/src/main/java/org/elasticsearch/monitor/os/DummyOsInfo.java, +    private DummyOsInfo() {, +        super(0, 0, 0, "dummy_name", "dummy_arch", "dummy_version");, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +            os = new OsInfo(in);, +++ b/core/src/main/java/org/elasticsearch/monitor/os/DummyOsInfo.java, +    private DummyOsInfo() {, +        super(0, 0, 0, "dummy_name", "dummy_arch", "dummy_version");, +++ b/core/src/main/java/org/elasticsearch/monitor/os/OsInfo.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class OsInfo implements Writeable, ToXContent {, +    private final long refreshInterval;, +    private final int availableProcessors;, +    private final int allocatedProcessors;, +    private final String name;, +    private final String arch;, +    private final String version;, +    public OsInfo(long refreshInterval, int availableProcessors, int allocatedProcessors, String name, String arch, String version) {, +        this.refreshInterval = refreshInterval;, +        this.availableProcessors = availableProcessors;, +        this.allocatedProcessors = allocatedProcessors;, +        this.name = name;, +        this.arch = arch;, +        this.version = version;, +    }, +    public OsInfo(StreamInput in) throws IOException {, +        this.refreshInterval = in.readLong();, +        this.availableProcessors = in.readInt();, +        this.allocatedProcessors = in.readInt();, +        this.name = in.readOptionalString();, +        this.arch = in.readOptionalString();, +        this.version = in.readOptionalString();, +    }, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        out.writeLong(refreshInterval);, +        out.writeInt(availableProcessors);, +        out.writeInt(allocatedProcessors);, +        out.writeOptionalString(name);, +        out.writeOptionalString(arch);, +        out.writeOptionalString(version);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +            os = new OsInfo(in);, +++ b/core/src/main/java/org/elasticsearch/monitor/os/DummyOsInfo.java, +    private DummyOsInfo() {, +        super(0, 0, 0, "dummy_name", "dummy_arch", "dummy_version");, +++ b/core/src/main/java/org/elasticsearch/monitor/os/OsInfo.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class OsInfo implements Writeable, ToXContent {, +    private final long refreshInterval;, +    private final int availableProcessors;, +    private final int allocatedProcessors;, +    private final String name;, +    private final String arch;, +    private final String version;, +    public OsInfo(long refreshInterval, int availableProcessors, int allocatedProcessors, String name, String arch, String version) {, +        this.refreshInterval = refreshInterval;, +        this.availableProcessors = availableProcessors;, +        this.allocatedProcessors = allocatedProcessors;, +        this.name = name;, +        this.arch = arch;, +        this.version = version;, +    }, +    public OsInfo(StreamInput in) throws IOException {, +        this.refreshInterval = in.readLong();, +        this.availableProcessors = in.readInt();, +        this.allocatedProcessors = in.readInt();, +        this.name = in.readOptionalString();, +        this.arch = in.readOptionalString();, +        this.version = in.readOptionalString();, +    }, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        out.writeLong(refreshInterval);, +        out.writeInt(availableProcessors);, +        out.writeInt(allocatedProcessors);, +        out.writeOptionalString(name);, +        out.writeOptionalString(arch);, +        out.writeOptionalString(version);, +++ b/core/src/main/java/org/elasticsearch/monitor/os/OsProbe.java, +    public OsInfo osInfo(long refreshInterval, int allocatedProcessors) {, +        return new OsInfo(refreshInterval, Runtime.getRuntime().availableProcessors(),, +                allocatedProcessors, Constants.OS_NAME, Constants.OS_ARCH, Constants.OS_VERSION);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +            os = new OsInfo(in);, +++ b/core/src/main/java/org/elasticsearch/monitor/os/DummyOsInfo.java, +    private DummyOsInfo() {, +        super(0, 0, 0, "dummy_name", "dummy_arch", "dummy_version");, +++ b/core/src/main/java/org/elasticsearch/monitor/os/OsInfo.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class OsInfo implements Writeable, ToXContent {, +    private final long refreshInterval;, +    private final int availableProcessors;, +    private final int allocatedProcessors;, +    private final String name;, +    private final String arch;]