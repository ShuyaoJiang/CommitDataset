[+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MlConfigMigrator.java, +        String version = job.getJobVersion() != null ? job.getJobVersion().toString() : null;, +        custom.put(MIGRATED_FROM_VERSION, version);, +++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MlConfigMigrator.java, +        String version = job.getJobVersion() != null ? job.getJobVersion().toString() : null;, +        custom.put(MIGRATED_FROM_VERSION, version);, +++ b/x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/MlConfigMigratorTests.java, +import org.elasticsearch.common.io.stream.NamedWriteableRegistry;, +import java.io.IOException;, +import java.util.Date;, +        assertEquals(oldVersion.toString(), migratedJob.getCustomSettings().get(MlConfigMigrator.MIGRATED_FROM_VERSION));, +    public void testSerialisationOfUpdatedJob() throws IOException {, +        Job migratedJob = MlConfigMigrator.updateJobForMigration(JobTests.buildJobBuilder("pre-migration").build(new Date()));, +        Job copy = copyWriteable(migratedJob, new NamedWriteableRegistry(Collections.emptyList()), Job::new, Version.CURRENT);, +        assertEquals(migratedJob, copy);, +    }, +]