[+++ b/.gitignore, +++ b/.gitignore, +++ b/README.textile, +Maan, that twitter index might get big (in this case, index size == valuation). Let's see if we can structure our twitter system a bit differently in order to support such large amounts of data., +++ b/.gitignore, +++ b/README.textile, +Maan, that twitter index might get big (in this case, index size == valuation). Let's see if we can structure our twitter system a bit differently in order to support such large amounts of data., +++ b/TESTING.asciidoc, +gradle :qa:vagrant:checkVagrantVersion, +cd $TESTROOT, +sudo bats $BATS/*rpm*.bats, +gradle prepareTestRoot, +cd $TESTROOT, +sudo bats $BATS/*.bats, +++ b/.gitignore, +++ b/README.textile, +Maan, that twitter index might get big (in this case, index size == valuation). Let's see if we can structure our twitter system a bit differently in order to support such large amounts of data., +++ b/TESTING.asciidoc, +gradle :qa:vagrant:checkVagrantVersion, +cd $TESTROOT, +sudo bats $BATS/*rpm*.bats, +gradle prepareTestRoot, +cd $TESTROOT, +sudo bats $BATS/*.bats, +++ b/Vagrantfile, +export TESTROOT=/elasticsearch/qa/vagrant/build/testroot, +export BATS=/elasticsearch/qa/vagrant/src/test/resources/packaging/scripts, +++ b/.gitignore, +++ b/README.textile, +Maan, that twitter index might get big (in this case, index size == valuation). Let's see if we can structure our twitter system a bit differently in order to support such large amounts of data., +++ b/TESTING.asciidoc, +gradle :qa:vagrant:checkVagrantVersion, +cd $TESTROOT, +sudo bats $BATS/*rpm*.bats, +gradle prepareTestRoot, +cd $TESTROOT, +sudo bats $BATS/*.bats, +++ b/Vagrantfile, +export TESTROOT=/elasticsearch/qa/vagrant/build/testroot, +export BATS=/elasticsearch/qa/vagrant/src/test/resources/packaging/scripts, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ThirdPartyAuditTask.groovy, +++ b/.gitignore, +++ b/README.textile, +Maan, that twitter index might get big (in this case, index size == valuation). Let's see if we can structure our twitter system a bit differently in order to support such large amounts of data., +++ b/TESTING.asciidoc, +gradle :qa:vagrant:checkVagrantVersion, +cd $TESTROOT, +sudo bats $BATS/*rpm*.bats, +gradle prepareTestRoot, +cd $TESTROOT, +sudo bats $BATS/*.bats, +++ b/Vagrantfile, +export TESTROOT=/elasticsearch/qa/vagrant/build/testroot, +export BATS=/elasticsearch/qa/vagrant/src/test/resources/packaging/scripts, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ThirdPartyAuditTask.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.echo("==> [${new Date()}] checking health: http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow"), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow",, +++ b/.gitignore, +++ b/README.textile, +Maan, that twitter index might get big (in this case, index size == valuation). Let's see if we can structure our twitter system a bit differently in order to support such large amounts of data., +++ b/TESTING.asciidoc, +gradle :qa:vagrant:checkVagrantVersion, +cd $TESTROOT, +sudo bats $BATS/*rpm*.bats, +gradle prepareTestRoot, +cd $TESTROOT, +sudo bats $BATS/*.bats, +++ b/Vagrantfile, +export TESTROOT=/elasticsearch/qa/vagrant/build/testroot, +export BATS=/elasticsearch/qa/vagrant/src/test/resources/packaging/scripts, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ThirdPartyAuditTask.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.echo("==> [${new Date()}] checking health: http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow"), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow",, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/BatsOverVagrantTask.groovy, +import org.gradle.api.DefaultTask, +import org.gradle.api.tasks.TaskAction, +import org.gradle.logging.ProgressLoggerFactory, +import org.gradle.process.internal.ExecAction, +import org.gradle.process.internal.ExecActionFactory, +, +import javax.inject.Inject, +++ b/.gitignore, +++ b/README.textile, +Maan, that twitter index might get big (in this case, index size == valuation). Let's see if we can structure our twitter system a bit differently in order to support such large amounts of data., +++ b/TESTING.asciidoc, +gradle :qa:vagrant:checkVagrantVersion, +cd $TESTROOT, +sudo bats $BATS/*rpm*.bats, +gradle prepareTestRoot, +cd $TESTROOT, +sudo bats $BATS/*.bats, +++ b/Vagrantfile, +export TESTROOT=/elasticsearch/qa/vagrant/build/testroot, +export BATS=/elasticsearch/qa/vagrant/src/test/resources/packaging/scripts, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ThirdPartyAuditTask.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.echo("==> [${new Date()}] checking health: http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow"), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow",]