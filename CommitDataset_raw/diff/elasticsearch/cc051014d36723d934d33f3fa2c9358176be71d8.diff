[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/threadpool/ThreadPool.java, +import java.util.concurrent.*;, +            int queueSize = settings.getAsInt("queue_size", defaultSettings.getAsInt("queue_size", -1));, +            RejectedExecutionHandler rejectedExecutionHandler;, +            String rejectSetting = settings.get("reject_policy", defaultSettings.get("reject_policy", "abort"));, +            if ("abort".equals(rejectSetting)) {, +                rejectedExecutionHandler = new ThreadPoolExecutor.AbortPolicy();, +            } else if ("caller".equals(rejectSetting)) {, +                rejectedExecutionHandler = new ThreadPoolExecutor.CallerRunsPolicy();, +            } else {, +                throw new ElasticSearchIllegalArgumentException("reject_policy [" + rejectSetting + "] not valid for [" + name + "] thread pool");, +            }, +            logger.debug("creating thread_pool [{}], type [{}], size [{}], queue_size [{}], reject_policy [{}]", name, type, size, queueSize, rejectSetting);, +                    queueSize <= 0 ? new LinkedTransferQueue<Runnable>() : new LinkedBlockingQueue<Runnable>(queueSize),, +                    threadFactory, rejectedExecutionHandler);]