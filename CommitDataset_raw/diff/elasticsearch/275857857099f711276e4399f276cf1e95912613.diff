[+++ b/server/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +                sb.append(", source[").append(Strings.cleanTruncate(source, maxSourceCharsToLog).trim()).append("]");, +++ b/server/src/main/java/org/elasticsearch/index/IndexingSlowLog.java, +                sb.append(", source[").append(Strings.cleanTruncate(source, maxSourceCharsToLog).trim()).append("]");, +++ b/server/src/test/java/org/elasticsearch/index/IndexingSlowLogTests.java, +import static org.hamcrest.Matchers.equalTo;, +    public void testReformatIsFalseAndSourceIsTrim() {, +        String json = "\n\n{ \"fieldName\": 123 }  \n ";, +        BytesReference source = new BytesArray(json);, +        ParsedDocument pd = new ParsedDocument(new NumericDocValuesField("version", 1),, +            SeqNoFieldMapper.SequenceIDFields.emptySeqID(), "id",, +            "test", null, null, source, XContentType.JSON, null);, +        Index index = new Index("foo", "123");, +        // Turning off reformatting so the document is in logs as provided, +        SlowLogParsedDocumentPrinter p = new SlowLogParsedDocumentPrinter(index, pd, 10, false, 1000);, +        String logLine = p.toString();, +, +        //expect the new lines and white characters to be trimmed, +        assertThat(logLine, containsString("source[{"));, +        assertThat(logLine.split("\n").length, equalTo(1));, +    }, +]