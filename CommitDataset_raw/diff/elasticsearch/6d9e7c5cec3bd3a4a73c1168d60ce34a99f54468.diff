[+++ b/Vagrantfile, +, +      # https://github.com/elastic/elasticsearch/issues/30295, +      config.vm.provider 'virtualbox' do |vbox|, +        vbox.customize ['storagectl', :id, '--name', 'SATA Controller', '--hostiocache', 'on'], +      end, +++ b/Vagrantfile, +, +      # https://github.com/elastic/elasticsearch/issues/30295, +      config.vm.provider 'virtualbox' do |vbox|, +        vbox.customize ['storagectl', :id, '--name', 'SATA Controller', '--hostiocache', 'on'], +      end, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/Vagrantfile, +, +      # https://github.com/elastic/elasticsearch/issues/30295, +      config.vm.provider 'virtualbox' do |vbox|, +        vbox.customize ['storagectl', :id, '--name', 'SATA Controller', '--hostiocache', 'on'], +      end, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                javaVersions.put(version, findJavaHome(version));, +            String javaVersion = System.getProperty('java.version'), +            String gradleJavaVersionDetails = "${javaVendor} ${javaVersion}" +, +            println '=======================================', +                println "  JDK Version (gradle)  : ${gradleJavaVersionDetails}", +                println "  JAVA_HOME (gradle)    : ${gradleJavaHome}", +                println "  JDK Version (compile) : ${compilerJavaVersionDetails}", +                println "  JAVA_HOME (compile)   : ${compilerJavaHome}", +                println "  JDK Version (runtime) : ${runtimeJavaVersionDetails}", +                println "  JAVA_HOME (runtime)   : ${runtimeJavaHome}", +                println "  JDK Version           : ${gradleJavaVersionDetails}", +                        "the environment variable JAVA_HOME must be set to a JDK installation directory for Java ${minimumCompilerVersion}" +, +                        "the environment variable RUNTIME_JAVA_HOME must be set to a JDK installation directory for Java ${minimumRuntimeVersion}" +, +        final String javaHome = System.getenv('JAVA_HOME'), +        if (javaHome == null) {, +        return javaHome, +    private static String findJavaHome(int version) {, +        return System.getenv('JAVA' + version + '_HOME'), +        assert compilerJavaHome != null, +++ b/Vagrantfile, +, +      # https://github.com/elastic/elasticsearch/issues/30295, +      config.vm.provider 'virtualbox' do |vbox|, +        vbox.customize ['storagectl', :id, '--name', 'SATA Controller', '--hostiocache', 'on'], +      end, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                javaVersions.put(version, findJavaHome(version));, +            String javaVersion = System.getProperty('java.version'), +            String gradleJavaVersionDetails = "${javaVendor} ${javaVersion}" +, +            println '=======================================', +                println "  JDK Version (gradle)  : ${gradleJavaVersionDetails}", +                println "  JAVA_HOME (gradle)    : ${gradleJavaHome}", +                println "  JDK Version (compile) : ${compilerJavaVersionDetails}", +                println "  JAVA_HOME (compile)   : ${compilerJavaHome}", +                println "  JDK Version (runtime) : ${runtimeJavaVersionDetails}", +                println "  JAVA_HOME (runtime)   : ${runtimeJavaHome}", +                println "  JDK Version           : ${gradleJavaVersionDetails}", +                        "the environment variable JAVA_HOME must be set to a JDK installation directory for Java ${minimumCompilerVersion}" +, +                        "the environment variable RUNTIME_JAVA_HOME must be set to a JDK installation directory for Java ${minimumRuntimeVersion}" +, +        final String javaHome = System.getenv('JAVA_HOME'), +        if (javaHome == null) {, +        return javaHome, +    private static String findJavaHome(int version) {, +        return System.getenv('JAVA' + version + '_HOME'), +        assert compilerJavaHome != null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/SnippetsTask.groovy, +++ b/Vagrantfile, +, +      # https://github.com/elastic/elasticsearch/issues/30295, +      config.vm.provider 'virtualbox' do |vbox|, +        vbox.customize ['storagectl', :id, '--name', 'SATA Controller', '--hostiocache', 'on'], +      end, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                javaVersions.put(version, findJavaHome(version));, +            String javaVersion = System.getProperty('java.version'), +            String gradleJavaVersionDetails = "${javaVendor} ${javaVersion}" +, +            println '=======================================', +                println "  JDK Version (gradle)  : ${gradleJavaVersionDetails}", +                println "  JAVA_HOME (gradle)    : ${gradleJavaHome}", +                println "  JDK Version (compile) : ${compilerJavaVersionDetails}", +                println "  JAVA_HOME (compile)   : ${compilerJavaHome}", +                println "  JDK Version (runtime) : ${runtimeJavaVersionDetails}", +                println "  JAVA_HOME (runtime)   : ${runtimeJavaHome}", +                println "  JDK Version           : ${gradleJavaVersionDetails}", +                        "the environment variable JAVA_HOME must be set to a JDK installation directory for Java ${minimumCompilerVersion}" +, +                        "the environment variable RUNTIME_JAVA_HOME must be set to a JDK installation directory for Java ${minimumRuntimeVersion}" +, +        final String javaHome = System.getenv('JAVA_HOME'), +        if (javaHome == null) {, +        return javaHome]