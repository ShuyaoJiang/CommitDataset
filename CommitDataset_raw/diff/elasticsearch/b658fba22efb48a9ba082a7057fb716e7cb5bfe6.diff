[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/docset/SlicedOpenBitSet.java, +import org.apache.lucene.util.OpenBitSet;, +    public SlicedOpenBitSet(long[] bits, int from, OpenBitSet setToCopy) {, +        this.bits = bits;, +        this.from = from;, +        System.arraycopy(setToCopy.getBits(), 0, bits, from, setToCopy.getBits().length);, +        this.wlen = setToCopy.getNumWords();, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/docset/SlicedOpenBitSet.java, +import org.apache.lucene.util.OpenBitSet;, +    public SlicedOpenBitSet(long[] bits, int from, OpenBitSet setToCopy) {, +        this.bits = bits;, +        this.from = from;, +        System.arraycopy(setToCopy.getBits(), 0, bits, from, setToCopy.getBits().length);, +        this.wlen = setToCopy.getNumWords();, +    }, +, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/common/lucene/docset/SlicedOpenBitSetTests.java, +, +    @Test public void testCopy() throws IOException {, +        int numberOfBits = 500;, +        OpenBitSet bitSet = new OpenBitSet(numberOfBits);, +        bitSet.set(100);, +, +        SlicedOpenBitSet sBitSet = new SlicedOpenBitSet(new long[OpenBitSet.bits2words(numberOfBits) + 33], 33, bitSet);, +        assertThat(sBitSet.get(100), equalTo(true));, +    }]