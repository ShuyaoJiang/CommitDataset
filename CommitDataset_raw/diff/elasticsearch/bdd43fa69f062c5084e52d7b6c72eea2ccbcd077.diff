[+++ b/docs/reference/mapping/params/normalizer.asciidoc, +the <<query-dsl-match-query,`match`>> query or via a term level query , +such as the <<query-dsl-term-query,`term`>> query., +    "term": {, +      "foo": "BAR", +    }, +  }, +}, +, +GET index/_search, +{, +  "query": {, +The above queries match documents 1 and 2 since `BÀR` is converted to `bar` at, +++ b/docs/reference/mapping/params/normalizer.asciidoc, +the <<query-dsl-match-query,`match`>> query or via a term level query , +such as the <<query-dsl-term-query,`term`>> query., +    "term": {, +      "foo": "BAR", +    }, +  }, +}, +, +GET index/_search, +{, +  "query": {, +The above queries match documents 1 and 2 since `BÀR` is converted to `bar` at, +++ b/docs/reference/query-dsl/term-level-queries.asciidoc, +that are stored in the inverted index, and will normalize terms before executing , +only for <<keyword,`keyword`>> fields with <<normalizer,`normalizer`>> property., +++ b/docs/reference/mapping/params/normalizer.asciidoc, +the <<query-dsl-match-query,`match`>> query or via a term level query , +such as the <<query-dsl-term-query,`term`>> query., +    "term": {, +      "foo": "BAR", +    }, +  }, +}, +, +GET index/_search, +{, +  "query": {, +The above queries match documents 1 and 2 since `BÀR` is converted to `bar` at, +++ b/docs/reference/query-dsl/term-level-queries.asciidoc, +that are stored in the inverted index, and will normalize terms before executing , +only for <<keyword,`keyword`>> fields with <<normalizer,`normalizer`>> property., +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesResponse.java, +import org.elasticsearch.cluster.metadata.RepositoriesMetaData;, +import org.elasticsearch.common.xcontent.ToXContentObject;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +public class GetRepositoriesResponse extends ActionResponse implements ToXContentObject {, +    private RepositoriesMetaData repositories;, +        repositories = new RepositoriesMetaData(Collections.emptyList());, +    GetRepositoriesResponse(RepositoriesMetaData repositories) {, +        return repositories.repositories();, +        repositories = new RepositoriesMetaData(in);, +        repositories.writeTo(out);, +    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +        builder.startObject();, +        repositories.toXContent(builder, params);, +        builder.endObject();, +        return builder;, +++ b/docs/reference/mapping/params/normalizer.asciidoc, +the <<query-dsl-match-query,`match`>> query or via a term level query , +such as the <<query-dsl-term-query,`term`>> query., +    "term": {, +      "foo": "BAR", +    }, +  }, +}, +, +GET index/_search, +{, +  "query": {, +The above queries match documents 1 and 2 since `BÀR` is converted to `bar` at, +++ b/docs/reference/query-dsl/term-level-queries.asciidoc, +that are stored in the inverted index, and will normalize terms before executing , +only for <<keyword,`keyword`>> fields with <<normalizer,`normalizer`>> property., +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesResponse.java, +import org.elasticsearch.cluster.metadata.RepositoriesMetaData;, +import org.elasticsearch.common.xcontent.ToXContentObject;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +public class GetRepositoriesResponse extends ActionResponse implements ToXContentObject {, +    private RepositoriesMetaData repositories;, +        repositories = new RepositoriesMetaData(Collections.emptyList());, +    GetRepositoriesResponse(RepositoriesMetaData repositories) {, +        return repositories.repositories();, +        repositories = new RepositoriesMetaData(in);, +        repositories.writeTo(out);, +    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +        builder.startObject();, +        repositories.toXContent(builder, params);, +        builder.endObject();, +        return builder;, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/TransportGetRepositoriesAction.java, +                listener.onResponse(new GetRepositoriesResponse(repositories));, +                listener.onResponse(new GetRepositoriesResponse(new RepositoriesMetaData(Collections.emptyList())));, +                listener.onResponse(new GetRepositoriesResponse(new RepositoriesMetaData(repositoryListBuilder)));, +++ b/docs/reference/mapping/params/normalizer.asciidoc, +the <<query-dsl-match-query,`match`>> query or via a term level query , +such as the <<query-dsl-term-query,`term`>> query.]