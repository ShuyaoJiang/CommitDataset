[+++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/plugin/build.gradle, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/plugin/build.gradle, +++ /dev/null, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/plugin/build.gradle, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/plugin/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/plugin/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import javax.security.auth.DestroyFailedException;, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/plugin/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import javax.security.auth.DestroyFailedException;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MlMetadata.java, +import org.elasticsearch.xpack.ml.job.groups.GroupOrJobLookup;, +    private final GroupOrJobLookup groupOrJobLookup;, +        this.groupOrJobLookup = new GroupOrJobLookup(jobs.values());, +        return groupOrJobLookup.expandJobIds(expression, allowNoJobs);, +, +        this.groupOrJobLookup = new GroupOrJobLookup(jobs.values());, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/plugin/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import javax.security.auth.DestroyFailedException;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MlMetadata.java, +import org.elasticsearch.xpack.ml.job.groups.GroupOrJobLookup;, +    private final GroupOrJobLookup groupOrJobLookup;, +        this.groupOrJobLookup = new GroupOrJobLookup(jobs.values());, +        return groupOrJobLookup.expandJobIds(expression, allowNoJobs);, +, +        this.groupOrJobLookup = new GroupOrJobLookup(jobs.values());, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedJobValidator.java, +, +        if (bucketSpanMillis % histogramIntervalMillis != 0) {, +            throw ExceptionsHelper.badRequestException(Messages.getMessage(, +                    Messages.DATAFEED_AGGREGATIONS_INTERVAL_MUST_BE_DIVISOR_OF_BUCKET_SPAN,, +                    TimeValue.timeValueMillis(histogramIntervalMillis).getStringRep(),, +                    TimeValue.timeValueMillis(bucketSpanMillis).getStringRep()));, +        }, +, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci]