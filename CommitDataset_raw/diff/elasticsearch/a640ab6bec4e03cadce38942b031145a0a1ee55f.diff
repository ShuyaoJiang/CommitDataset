[+++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/CollectorModule.java, +import org.elasticsearch.marvel.agent.collector.shards.ShardsCollector;, +        registerCollector(ShardsCollector.class);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/CollectorModule.java, +import org.elasticsearch.marvel.agent.collector.shards.ShardsCollector;, +        registerCollector(ShardsCollector.class);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/shards/ShardMarvelDoc.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.marvel.agent.collector.shards;, +, +import org.elasticsearch.cluster.routing.ShardRouting;, +import org.elasticsearch.marvel.agent.exporter.MarvelDoc;, +, +public class ShardMarvelDoc extends MarvelDoc {, +, +    private final ShardRouting shardRouting;, +    private final String clusterStateUUID;, +, +    public ShardMarvelDoc(String index, String type, String id, String clusterUUID, long timestamp,, +                          ShardRouting shardRouting, String clusterStateUUID) {, +        super(index, type, id, clusterUUID, timestamp);, +        this.shardRouting = shardRouting;, +        this.clusterStateUUID = clusterStateUUID;, +    }, +, +    public ShardRouting getShardRouting() {, +        return shardRouting;, +    }, +, +    public String getClusterStateUUID() {, +        return clusterStateUUID;, +    }, +}, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/CollectorModule.java, +import org.elasticsearch.marvel.agent.collector.shards.ShardsCollector;, +        registerCollector(ShardsCollector.class);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/shards/ShardMarvelDoc.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.marvel.agent.collector.shards;, +, +import org.elasticsearch.cluster.routing.ShardRouting;, +import org.elasticsearch.marvel.agent.exporter.MarvelDoc;, +, +public class ShardMarvelDoc extends MarvelDoc {, +, +    private final ShardRouting shardRouting;, +    private final String clusterStateUUID;, +, +    public ShardMarvelDoc(String index, String type, String id, String clusterUUID, long timestamp,, +                          ShardRouting shardRouting, String clusterStateUUID) {, +        super(index, type, id, clusterUUID, timestamp);, +        this.shardRouting = shardRouting;, +        this.clusterStateUUID = clusterStateUUID;, +    }, +, +    public ShardRouting getShardRouting() {, +        return shardRouting;, +    }, +, +    public String getClusterStateUUID() {, +        return clusterStateUUID;, +    }, +}, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/shards/ShardsCollector.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.marvel.agent.collector.shards;, +, +import org.elasticsearch.cluster.ClusterService;, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.cluster.routing.RoutingTable;, +import org.elasticsearch.cluster.routing.ShardRouting;, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.regex.Regex;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.util.CollectionUtils;, +import org.elasticsearch.marvel.agent.collector.AbstractCollector;, +import org.elasticsearch.marvel.agent.exporter.MarvelDoc;, +import org.elasticsearch.marvel.agent.settings.MarvelSettings;, +import org.elasticsearch.marvel.license.LicenseService;, +, +import java.util.ArrayList;, +import java.util.Collection;, +import java.util.Collections;, +import java.util.List;, +, +/**, + * Collector for shards., + * <p/>]