[+++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilter.java, +    void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain);, +    void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain);, +        public final void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain) {, +        protected abstract boolean apply(String action, ActionRequest<?> request, ActionListener<?> listener);, +        public final void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain) {, +        protected abstract boolean apply(String action, ActionResponse response, ActionListener<?> listener);, +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilter.java, +    void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain);, +    void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain);, +        public final void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain) {, +        protected abstract boolean apply(String action, ActionRequest<?> request, ActionListener<?> listener);, +        public final void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain) {, +        protected abstract boolean apply(String action, ActionResponse response, ActionListener<?> listener);, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import java.util.ArrayList;, +import java.util.List;, +import java.util.concurrent.TimeUnit;, +, +import org.elasticsearch.common.io.stream.NamedWriteableRegistry;, +            NamedWriteableRegistry namedWriteableRegistry = new NamedWriteableRegistry();, +                modules.add(new NetworkModule(networkService, this.settings, true, namedWriteableRegistry));, +                modules.add(new SearchModule(settings, namedWriteableRegistry) {, +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilter.java, +    void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain);, +    void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain);, +        public final void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain) {, +        protected abstract boolean apply(String action, ActionRequest<?> request, ActionListener<?> listener);, +        public final void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain) {, +        protected abstract boolean apply(String action, ActionResponse response, ActionListener<?> listener);, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import java.util.ArrayList;, +import java.util.List;, +import java.util.concurrent.TimeUnit;, +, +import org.elasticsearch.common.io.stream.NamedWriteableRegistry;, +            NamedWriteableRegistry namedWriteableRegistry = new NamedWriteableRegistry();, +                modules.add(new NetworkModule(networkService, this.settings, true, namedWriteableRegistry));, +                modules.add(new SearchModule(settings, namedWriteableRegistry) {, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/CircleBuilder.java, +    public static final CircleBuilder PROTOTYPE = new CircleBuilder();, +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilter.java, +    void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain);, +    void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain);, +        public final void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain) {, +        protected abstract boolean apply(String action, ActionRequest<?> request, ActionListener<?> listener);, +        public final void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain) {, +        protected abstract boolean apply(String action, ActionResponse response, ActionListener<?> listener);, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import java.util.ArrayList;, +import java.util.List;, +import java.util.concurrent.TimeUnit;, +, +import org.elasticsearch.common.io.stream.NamedWriteableRegistry;, +            NamedWriteableRegistry namedWriteableRegistry = new NamedWriteableRegistry();, +                modules.add(new NetworkModule(networkService, this.settings, true, namedWriteableRegistry));, +                modules.add(new SearchModule(settings, namedWriteableRegistry) {, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/CircleBuilder.java, +    public static final CircleBuilder PROTOTYPE = new CircleBuilder();, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/EnvelopeBuilder.java, +    public static final EnvelopeBuilder PROTOTYPE = new EnvelopeBuilder(new Coordinate(-1.0, 1.0), new Coordinate(1.0, -1.0));, +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilter.java, +    void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain);, +    void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain);, +        public final void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain) {, +        protected abstract boolean apply(String action, ActionRequest<?> request, ActionListener<?> listener);, +        public final void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain) {, +        protected abstract boolean apply(String action, ActionResponse response, ActionListener<?> listener);, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import java.util.ArrayList;, +import java.util.List;, +import java.util.concurrent.TimeUnit;, +, +import org.elasticsearch.common.io.stream.NamedWriteableRegistry;, +            NamedWriteableRegistry namedWriteableRegistry = new NamedWriteableRegistry();, +                modules.add(new NetworkModule(networkService, this.settings, true, namedWriteableRegistry));, +                modules.add(new SearchModule(settings, namedWriteableRegistry) {, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/CircleBuilder.java, +    public static final CircleBuilder PROTOTYPE = new CircleBuilder();, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/EnvelopeBuilder.java, +    public static final EnvelopeBuilder PROTOTYPE = new EnvelopeBuilder(new Coordinate(-1.0, 1.0), new Coordinate(1.0, -1.0));, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/GeometryCollectionBuilder.java, +    public static final GeometryCollectionBuilder PROTOTYPE = new GeometryCollectionBuilder();, +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilter.java, +    void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain);, +    void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain);, +        public final void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain) {, +        protected abstract boolean apply(String action, ActionRequest<?> request, ActionListener<?> listener);, +        public final void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain) {, +        protected abstract boolean apply(String action, ActionResponse response, ActionListener<?> listener);, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import java.util.ArrayList;, +import java.util.List;, +import java.util.concurrent.TimeUnit;, +, +import org.elasticsearch.common.io.stream.NamedWriteableRegistry;, +            NamedWriteableRegistry namedWriteableRegistry = new NamedWriteableRegistry();, +                modules.add(new NetworkModule(networkService, this.settings, true, namedWriteableRegistry));, +                modules.add(new SearchModule(settings, namedWriteableRegistry) {, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/CircleBuilder.java]