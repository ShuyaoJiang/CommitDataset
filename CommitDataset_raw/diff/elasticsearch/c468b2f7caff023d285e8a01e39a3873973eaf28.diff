[+++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +    private volatile long pendingPrimaryTerm; // see JavaDocs for getPendingPrimaryTerm, +    private volatile long operationPrimaryTerm;, +++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +    private volatile long pendingPrimaryTerm; // see JavaDocs for getPendingPrimaryTerm, +    private volatile long operationPrimaryTerm;, +++ b/server/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +                assertThat(indexShard.getOperationPrimaryTerm(), equalTo(primaryTerm));, +                assertThat(indexShard.getOperationPrimaryTerm(), equalTo(primaryTerm));, +                assertThat(indexShard.getOperationPrimaryTerm(), equalTo(newPrimaryTerm));, +            final long oldPrimaryTerm = indexShard.getPendingPrimaryTerm() - 1;, +        randomReplicaOperationPermitAcquisition(replica, replica.getOperationPrimaryTerm(), replica.getGlobalCheckpoint(),, +                indexShard.getPendingPrimaryTerm() + 1,, +        final IndexMetaData newShardIndexMetadata = IndexMetaData.builder(shard.indexSettings().getIndexMetaData()), +                .primaryTerm(replicaRouting.shardId().id(), shard.getOperationPrimaryTerm() + 1), +                .build();, +        closeShards(shard);, +        IndexShard newShard = newShard(, +                        RecoverySource.ExistingStoreRecoverySource.INSTANCE),, +                shard.shardPath(),, +                newShardIndexMetadata,, +                null,, +                null,, +                shard.getEngineFactory(),, +                shard.getGlobalCheckpointSyncer(),, +                EMPTY_EVENT_LISTENER);, +++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +    private volatile long pendingPrimaryTerm; // see JavaDocs for getPendingPrimaryTerm, +    private volatile long operationPrimaryTerm;, +++ b/server/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +                assertThat(indexShard.getOperationPrimaryTerm(), equalTo(primaryTerm));, +                assertThat(indexShard.getOperationPrimaryTerm(), equalTo(primaryTerm));, +                assertThat(indexShard.getOperationPrimaryTerm(), equalTo(newPrimaryTerm));, +            final long oldPrimaryTerm = indexShard.getPendingPrimaryTerm() - 1;, +        randomReplicaOperationPermitAcquisition(replica, replica.getOperationPrimaryTerm(), replica.getGlobalCheckpoint(),, +                indexShard.getPendingPrimaryTerm() + 1,, +        final IndexMetaData newShardIndexMetadata = IndexMetaData.builder(shard.indexSettings().getIndexMetaData()), +                .primaryTerm(replicaRouting.shardId().id(), shard.getOperationPrimaryTerm() + 1), +                .build();, +        closeShards(shard);, +        IndexShard newShard = newShard(, +                        RecoverySource.ExistingStoreRecoverySource.INSTANCE),, +                shard.shardPath(),, +                newShardIndexMetadata,, +                null,, +                null,, +                shard.getEngineFactory(),, +                shard.getGlobalCheckpointSyncer(),, +                EMPTY_EVENT_LISTENER);, +++ b/server/src/test/java/org/elasticsearch/index/shard/ShardGetServiceTests.java, +        final long primaryTerm = primary.getOperationPrimaryTerm();]