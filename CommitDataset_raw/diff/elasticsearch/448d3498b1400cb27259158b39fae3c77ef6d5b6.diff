[+++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +    private boolean detectNoop = true;, +     * Should this update attempt to detect if it is a noop? Defaults to true., +    /**, +     * Should this update attempt to detect if it is a noop? Defaults to true., +     */, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +    private boolean detectNoop = true;, +     * Should this update attempt to detect if it is a noop? Defaults to true., +    /**, +     * Should this update attempt to detect if it is a noop? Defaults to true., +     */, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +     * Defautls to true., +, +    /**, +     * Set the new ttl of the document. Note that if detectNoop is true (the default), +     * and the source of the document isn't changed then the ttl update won't take, +     * effect., +     */, +    public UpdateRequestBuilder setTtl(Long ttl) {, +        request.doc().ttl(ttl);, +        return this;, +    }, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +    private boolean detectNoop = true;, +     * Should this update attempt to detect if it is a noop? Defaults to true., +    /**, +     * Should this update attempt to detect if it is a noop? Defaults to true., +     */, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +     * Defautls to true., +, +    /**, +     * Set the new ttl of the document. Note that if detectNoop is true (the default), +     * and the source of the document isn't changed then the ttl update won't take, +     * effect., +     */, +    public UpdateRequestBuilder setTtl(Long ttl) {, +        request.doc().ttl(ttl);, +        return this;, +    }, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +            indicesLifecycle.beforeIndexShardCreated(shardId, indexSettings);, +                path = ShardPath.selectNewPathForShard(nodeEnv, shardId, indexSettings, routing.getExpectedShardSize() == ShardRouting.UNAVAILABLE_EXPECTED_SHARD_SIZE ? getAvgShardSizeInBytes() : routing.getExpectedShardSize(), this);, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +    private boolean detectNoop = true;, +     * Should this update attempt to detect if it is a noop? Defaults to true., +    /**, +     * Should this update attempt to detect if it is a noop? Defaults to true., +     */, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +     * Defautls to true., +, +    /**, +     * Set the new ttl of the document. Note that if detectNoop is true (the default), +     * and the source of the document isn't changed then the ttl update won't take, +     * effect., +     */, +    public UpdateRequestBuilder setTtl(Long ttl) {, +        request.doc().ttl(ttl);, +        return this;, +    }, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +            indicesLifecycle.beforeIndexShardCreated(shardId, indexSettings);, +                path = ShardPath.selectNewPathForShard(nodeEnv, shardId, indexSettings, routing.getExpectedShardSize() == ShardRouting.UNAVAILABLE_EXPECTED_SHARD_SIZE ? getAvgShardSizeInBytes() : routing.getExpectedShardSize(), this);, +++ b/core/src/main/java/org/elasticsearch/index/shard/ShardPath.java, +                                                  long avgShardSizeInBytes, Iterable<IndexShard> shards) throws IOException {, +        final String indexUUID = indexSettings.get(IndexMetaData.SETTING_INDEX_UUID, IndexMetaData.INDEX_UUID_NA_VALUE);, +, +            Map<Path,Long> estReservedBytes = getEstimatedReservedBytes(env, avgShardSizeInBytes, shards);, +                Long reservedBytes = estReservedBytes.get(nodePath.path);, +                if (reservedBytes != null) {, +                    usableBytes -= reservedBytes;, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +    private boolean detectNoop = true;, +     * Should this update attempt to detect if it is a noop? Defaults to true., +    /**, +     * Should this update attempt to detect if it is a noop? Defaults to true., +     */, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +     * Defautls to true., +, +    /**, +     * Set the new ttl of the document. Note that if detectNoop is true (the default), +     * and the source of the document isn't changed then the ttl update won't take, +     * effect., +     */, +    public UpdateRequestBuilder setTtl(Long ttl) {, +        request.doc().ttl(ttl);, +        return this;, +    }, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +            indicesLifecycle.beforeIndexShardCreated(shardId, indexSettings);, +                path = ShardPath.selectNewPathForShard(nodeEnv, shardId, indexSettings, routing.getExpectedShardSize() == ShardRouting.UNAVAILABLE_EXPECTED_SHARD_SIZE ? getAvgShardSizeInBytes() : routing.getExpectedShardSize(), this);, +++ b/core/src/main/java/org/elasticsearch/index/shard/ShardPath.java, +                                                  long avgShardSizeInBytes, Iterable<IndexShard> shards) throws IOException {, +        final String indexUUID = indexSettings.get(IndexMetaData.SETTING_INDEX_UUID, IndexMetaData.INDEX_UUID_NA_VALUE);, +, +            Map<Path,Long> estReservedBytes = getEstimatedReservedBytes(env, avgShardSizeInBytes, shards);]