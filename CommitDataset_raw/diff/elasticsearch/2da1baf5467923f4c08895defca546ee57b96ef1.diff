[+++ b/core/src/main/java/org/elasticsearch/common/util/BloomFilter.java, +            return Math.toIntExact(remainder == 0 ? quotient : 1 + quotient);, +++ b/core/src/main/java/org/elasticsearch/common/util/BloomFilter.java, +            return Math.toIntExact(remainder == 0 ? quotient : 1 + quotient);, +++ b/core/src/main/java/org/elasticsearch/common/util/CollectionUtils.java, +    public static int[] toArray(Collection<Integer> ints) {, +        Objects.requireNonNull(ints);, +        return ints.stream().mapToInt(s -> s).toArray();, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/util/BloomFilter.java, +            return Math.toIntExact(remainder == 0 ? quotient : 1 + quotient);, +++ b/core/src/main/java/org/elasticsearch/common/util/CollectionUtils.java, +    public static int[] toArray(Collection<Integer> ints) {, +        Objects.requireNonNull(ints);, +        return ints.stream().mapToInt(s -> s).toArray();, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/util/MultiDataPathUpgrader.java, +import java.nio.charset.StandardCharsets;, +import java.nio.file.*;, +import java.util.*;, +                    String fileName = shardPath.getFileName().toString();, +                    if (Files.isDirectory(shardPath) && fileName.chars().allMatch(Character::isDigit)) {, +                        int shardId = Integer.parseInt(fileName);, +++ b/core/src/main/java/org/elasticsearch/common/util/BloomFilter.java, +            return Math.toIntExact(remainder == 0 ? quotient : 1 + quotient);, +++ b/core/src/main/java/org/elasticsearch/common/util/CollectionUtils.java, +    public static int[] toArray(Collection<Integer> ints) {, +        Objects.requireNonNull(ints);, +        return ints.stream().mapToInt(s -> s).toArray();, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/util/MultiDataPathUpgrader.java, +import java.nio.charset.StandardCharsets;, +import java.nio.file.*;, +import java.util.*;, +                    String fileName = shardPath.getFileName().toString();, +                    if (Files.isDirectory(shardPath) && fileName.chars().allMatch(Character::isDigit)) {, +                        int shardId = Integer.parseInt(fileName);, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +import org.apache.lucene.store.*;, +import java.nio.file.*;, +import java.util.*;, +                    String fileName = shardPath.getFileName().toString();, +                    if (Files.isDirectory(shardPath) && fileName.chars().allMatch(Character::isDigit)) {, +                        int shardId = Integer.parseInt(fileName);, +++ b/core/src/main/java/org/elasticsearch/common/util/BloomFilter.java, +            return Math.toIntExact(remainder == 0 ? quotient : 1 + quotient);, +++ b/core/src/main/java/org/elasticsearch/common/util/CollectionUtils.java, +    public static int[] toArray(Collection<Integer> ints) {, +        Objects.requireNonNull(ints);, +        return ints.stream().mapToInt(s -> s).toArray();, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/util/MultiDataPathUpgrader.java, +import java.nio.charset.StandardCharsets;, +import java.nio.file.*;, +import java.util.*;, +                    String fileName = shardPath.getFileName().toString();, +                    if (Files.isDirectory(shardPath) && fileName.chars().allMatch(Character::isDigit)) {, +                        int shardId = Integer.parseInt(fileName);, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +import org.apache.lucene.store.*;, +import java.nio.file.*;, +import java.util.*;, +                    String fileName = shardPath.getFileName().toString();, +                    if (Files.isDirectory(shardPath) && fileName.chars().allMatch(Character::isDigit)) {, +                        int shardId = Integer.parseInt(fileName);, +++ b/core/src/test/java/org/elasticsearch/test/discovery/ClusterDiscoveryConfiguration.java, +import org.elasticsearch.common.util.CollectionUtils;, +                unicastHostOrdinals = CollectionUtils.toArray(ordinals);, +++ b/core/src/main/java/org/elasticsearch/common/util/BloomFilter.java, +            return Math.toIntExact(remainder == 0 ? quotient : 1 + quotient);, +++ b/core/src/main/java/org/elasticsearch/common/util/CollectionUtils.java, +    public static int[] toArray(Collection<Integer> ints) {, +        Objects.requireNonNull(ints);, +        return ints.stream().mapToInt(s -> s).toArray();, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/util/MultiDataPathUpgrader.java, +import java.nio.charset.StandardCharsets;, +import java.nio.file.*;, +import java.util.*;, +                    String fileName = shardPath.getFileName().toString();, +                    if (Files.isDirectory(shardPath) && fileName.chars().allMatch(Character::isDigit)) {, +                        int shardId = Integer.parseInt(fileName);, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +import org.apache.lucene.store.*;, +import java.nio.file.*;, +import java.util.*;, +                    String fileName = shardPath.getFileName().toString();, +                    if (Files.isDirectory(shardPath) && fileName.chars().allMatch(Character::isDigit)) {, +                        int shardId = Integer.parseInt(fileName);, +++ b/core/src/test/java/org/elasticsearch/test/discovery/ClusterDiscoveryConfiguration.java, +import org.elasticsearch.common.util.CollectionUtils;, +                unicastHostOrdinals = CollectionUtils.toArray(ordinals);, +++ b/dev-tools/src/main/resources/forbidden/all-signatures.txt, +com.google.common.primitives.Ints, +++ b/core/src/main/java/org/elasticsearch/common/util/BloomFilter.java]