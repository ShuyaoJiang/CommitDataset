[+++ b/dev-tools/forbidden/core-signatures.txt, +++ b/dev-tools/forbidden/core-signatures.txt, +++ b/docs/java-api/query-dsl-queries.asciidoc, +=== More Like This Query (mlt), +++ b/dev-tools/forbidden/core-signatures.txt, +++ b/docs/java-api/query-dsl-queries.asciidoc, +=== More Like This Query (mlt), +++ b/docs/reference/cluster/update-settings.asciidoc, +++ b/dev-tools/forbidden/core-signatures.txt, +++ b/docs/java-api/query-dsl-queries.asciidoc, +=== More Like This Query (mlt), +++ b/docs/reference/cluster/update-settings.asciidoc, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +The `_cache` and `_cache_key` parameters of filters are deprecated in the REST, +layer and removed in the Java API. In case they are specified they will be, +ignored. Instead filters are always used as their own cache key and elasticsearch, +makes decisions by itself about whether it should cache filters based on how, +often they are used., +, +++ b/dev-tools/forbidden/core-signatures.txt, +++ b/docs/java-api/query-dsl-queries.asciidoc, +=== More Like This Query (mlt), +++ b/docs/reference/cluster/update-settings.asciidoc, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +The `_cache` and `_cache_key` parameters of filters are deprecated in the REST, +layer and removed in the Java API. In case they are specified they will be, +ignored. Instead filters are always used as their own cache key and elasticsearch, +makes decisions by itself about whether it should cache filters based on how, +often they are used., +, +++ b/docs/reference/query-dsl/filters.asciidoc, +Filters can be a great candidate for caching. Caching the document set that, +a filter matches does not require much memory and can help improve, +execution speed of queries., +Elasticsearch decides to cache filters based on how often they are used. For, +this reason you might occasionally see better performance by splitting, +complex filters into a static part that Elasticsearch will cache and a dynamic, +part which is least costly than the original filter., +++ b/dev-tools/forbidden/core-signatures.txt, +++ b/docs/java-api/query-dsl-queries.asciidoc, +=== More Like This Query (mlt), +++ b/docs/reference/cluster/update-settings.asciidoc, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +The `_cache` and `_cache_key` parameters of filters are deprecated in the REST, +layer and removed in the Java API. In case they are specified they will be, +ignored. Instead filters are always used as their own cache key and elasticsearch, +makes decisions by itself about whether it should cache filters based on how, +often they are used., +, +++ b/docs/reference/query-dsl/filters.asciidoc, +Filters can be a great candidate for caching. Caching the document set that, +a filter matches does not require much memory and can help improve, +execution speed of queries., +Elasticsearch decides to cache filters based on how often they are used. For, +this reason you might occasionally see better performance by splitting, +complex filters into a static part that Elasticsearch will cache and a dynamic, +part which is least costly than the original filter., +++ b/docs/reference/query-dsl/filters/and-filter.asciidoc, +++ b/dev-tools/forbidden/core-signatures.txt, +++ b/docs/java-api/query-dsl-queries.asciidoc, +=== More Like This Query (mlt), +++ b/docs/reference/cluster/update-settings.asciidoc, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +The `_cache` and `_cache_key` parameters of filters are deprecated in the REST, +layer and removed in the Java API. In case they are specified they will be, +ignored. Instead filters are always used as their own cache key and elasticsearch, +makes decisions by itself about whether it should cache filters based on how, +often they are used., +, +++ b/docs/reference/query-dsl/filters.asciidoc, +Filters can be a great candidate for caching. Caching the document set that, +a filter matches does not require much memory and can help improve, +execution speed of queries., +Elasticsearch decides to cache filters based on how often they are used. For, +this reason you might occasionally see better performance by splitting, +complex filters into a static part that Elasticsearch will cache and a dynamic, +part which is least costly than the original filter., +++ b/docs/reference/query-dsl/filters/and-filter.asciidoc, +++ b/docs/reference/query-dsl/filters/geo-bounding-box-filter.asciidoc, +++ b/dev-tools/forbidden/core-signatures.txt, +++ b/docs/java-api/query-dsl-queries.asciidoc, +=== More Like This Query (mlt), +++ b/docs/reference/cluster/update-settings.asciidoc, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +The `_cache` and `_cache_key` parameters of filters are deprecated in the REST, +layer and removed in the Java API. In case they are specified they will be, +ignored. Instead filters are always used as their own cache key and elasticsearch, +makes decisions by itself about whether it should cache filters based on how, +often they are used., +, +++ b/docs/reference/query-dsl/filters.asciidoc, +Filters can be a great candidate for caching. Caching the document set that, +a filter matches does not require much memory and can help improve, +execution speed of queries., +Elasticsearch decides to cache filters based on how often they are used. For, +this reason you might occasionally see better performance by splitting, +complex filters into a static part that Elasticsearch will cache and a dynamic, +part which is least costly than the original filter., +++ b/docs/reference/query-dsl/filters/and-filter.asciidoc, +++ b/docs/reference/query-dsl/filters/geo-bounding-box-filter.asciidoc]