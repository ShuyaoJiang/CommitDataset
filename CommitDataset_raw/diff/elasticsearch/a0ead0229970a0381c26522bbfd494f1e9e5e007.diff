[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesOperationAction.java, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +    protected String[] filterNodeIds(DiscoveryNodes nodes, String[] nodesIds) {, +        return nodesIds;, +    }, +, +            this.nodesIds = filterNodeIds(clusterState.nodes(), nodesIds);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesOperationAction.java, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +    protected String[] filterNodeIds(DiscoveryNodes nodes, String[] nodesIds) {, +        return nodesIds;, +    }, +, +            this.nodesIds = filterNodeIds(clusterState.nodes(), nodesIds);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/env/Environment.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesOperationAction.java, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +    protected String[] filterNodeIds(DiscoveryNodes nodes, String[] nodesIds) {, +        return nodesIds;, +    }, +, +            this.nodesIds = filterNodeIds(clusterState.nodes(), nodesIds);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/env/Environment.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +        if (!settings.getAsBoolean("node.data", true) || settings.getAsBoolean("node.client", false)) {, +            nodeFile = null;, +            lock = null;, +            return;, +        }, +, +    public boolean hasNodeFile() {, +        return nodeFile != null && lock != null;, +    }, +, +        if (nodeFile == null || lock == null) {, +            throw new ElasticSearchIllegalStateException("node is not configured to store local location");, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesOperationAction.java, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +    protected String[] filterNodeIds(DiscoveryNodes nodes, String[] nodesIds) {, +        return nodesIds;, +    }, +, +            this.nodesIds = filterNodeIds(clusterState.nodes(), nodesIds);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/env/Environment.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +        if (!settings.getAsBoolean("node.data", true) || settings.getAsBoolean("node.client", false)) {, +            nodeFile = null;, +            lock = null;, +            return;, +        }, +, +    public boolean hasNodeFile() {, +        return nodeFile != null && lock != null;, +    }, +, +        if (nodeFile == null || lock == null) {, +            throw new ElasticSearchIllegalStateException("node is not configured to store local location");, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/store/fs/FsIndexStore.java, +        if (nodeEnv.hasNodeFile()) {, +        } else {, +            this.location = null;, +        if (location == null) {, +            return new ByteSizeValue(0);, +        }, +            totalSpace = 0;, +        if (location == null) {, +            return new ByteSizeValue(0);, +        }, +            usableSpace = 0;, +        if (location == null) {, +            return;, +        }, +        if (location == null) {, +            return new StoreFilesMetaData[0];, +        }, +        if (location == null) {, +            return new StoreFilesMetaData(false, shardId, ImmutableMap.<String, StoreFileMetaData>of());, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesOperationAction.java, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +    protected String[] filterNodeIds(DiscoveryNodes nodes, String[] nodesIds) {, +        return nodesIds;, +    }, +, +            this.nodesIds = filterNodeIds(clusterState.nodes(), nodesIds);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/env/Environment.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +        if (!settings.getAsBoolean("node.data", true) || settings.getAsBoolean("node.client", false)) {, +            nodeFile = null;, +            lock = null;, +            return;, +        }, +, +    public boolean hasNodeFile() {, +        return nodeFile != null && lock != null;]