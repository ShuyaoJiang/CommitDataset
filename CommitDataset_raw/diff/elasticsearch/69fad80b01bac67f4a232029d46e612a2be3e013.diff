[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +            builder.allocationExplanation(currentState.allocationExplanation());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +            builder.allocationExplanation(currentState.allocationExplanation());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/admin/cluster/state/RestClusterStateAction.java, +import org.elasticsearch.cluster.routing.allocation.AllocationExplanation;, +import org.elasticsearch.index.shard.ShardId;, +import java.util.List;, +                    if (!clusterStateRequest.filterRoutingTable()) {, +                        builder.startArray("allocations");, +                        for (Map.Entry<ShardId, List<AllocationExplanation.NodeExplanation>> entry : state.allocationExplanation().explanations().entrySet()) {, +                            builder.startObject();, +                            builder.field("index", entry.getKey().index().name());, +                            builder.field("shard", entry.getKey().id());, +                            builder.startArray("explanations");, +                            for (AllocationExplanation.NodeExplanation nodeExplanation : entry.getValue()) {, +                                builder.field("desc", nodeExplanation.description());, +                                if (nodeExplanation.node() != null) {, +                                    builder.startObject("node");, +                                    builder.field("id", nodeExplanation.node().id());, +                                    builder.field("name", nodeExplanation.node().name());, +                                    builder.endObject();, +                                }, +                            }, +                            builder.endArray();, +                            builder.endObject();, +                        }, +                        builder.endObject();, +                    }, +, +]