[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            argLine '-XX:-OmitStackTraceInFastThrow', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            argLine '-XX:-OmitStackTraceInFastThrow', +++ b/distribution/src/main/resources/config/jvm.options, +# turn off a JDK optimization that throws away stack traces for common, +# exceptions because stack traces are important for debugging, +-XX:-OmitStackTraceInFastThrow, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            argLine '-XX:-OmitStackTraceInFastThrow', +++ b/distribution/src/main/resources/config/jvm.options, +# turn off a JDK optimization that throws away stack traces for common, +# exceptions because stack traces are important for debugging, +-XX:-OmitStackTraceInFastThrow, +, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ArrayLikeObjectTestCase.java, +            /* If this fails you *might* be missing -XX:-OmitStackTraceInFastThrow in the test jvm, +             * In Eclipse you can add this by default by going to Preference->Java->Installed JREs,, +             * clicking on the default JRE, clicking edit, and adding the flag to the, +             * "Default VM Arguments"., +             */, +            ae.addSuppressed(e);   // Mark the exception we are testing as suppressed so we get its stack trace., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            argLine '-XX:-OmitStackTraceInFastThrow', +++ b/distribution/src/main/resources/config/jvm.options, +# turn off a JDK optimization that throws away stack traces for common, +# exceptions because stack traces are important for debugging, +-XX:-OmitStackTraceInFastThrow, +, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ArrayLikeObjectTestCase.java, +            /* If this fails you *might* be missing -XX:-OmitStackTraceInFastThrow in the test jvm, +             * In Eclipse you can add this by default by going to Preference->Java->Installed JREs,, +             * clicking on the default JRE, clicking edit, and adding the flag to the, +             * "Default VM Arguments"., +             */, +            ae.addSuppressed(e);   // Mark the exception we are testing as suppressed so we get its stack trace., +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ListTests.java, +            return equalTo(Integer.toString(index));, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            argLine '-XX:-OmitStackTraceInFastThrow', +++ b/distribution/src/main/resources/config/jvm.options, +# turn off a JDK optimization that throws away stack traces for common, +# exceptions because stack traces are important for debugging, +-XX:-OmitStackTraceInFastThrow, +, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ArrayLikeObjectTestCase.java, +            /* If this fails you *might* be missing -XX:-OmitStackTraceInFastThrow in the test jvm, +             * In Eclipse you can add this by default by going to Preference->Java->Installed JREs,, +             * clicking on the default JRE, clicking edit, and adding the flag to the, +             * "Default VM Arguments"., +             */, +            ae.addSuppressed(e);   // Mark the exception we are testing as suppressed so we get its stack trace., +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ListTests.java, +            return equalTo(Integer.toString(index));, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ScriptTestCase.java, +                    /* If this fails you *might* be missing -XX:-OmitStackTraceInFastThrow in the test jvm, +                     * In Eclipse you can add this by default by going to Preference->Java->Installed JREs,, +                     * clicking on the default JRE, clicking edit, and adding the flag to the, +                     * "Default VM Arguments". */]