[+++ b/.idea/modules/plugin-analysis-icu.iml, +<module type="JAVA_MODULE" version="4">, +++ b/.idea/modules/plugin-analysis-icu.iml, +<module type="JAVA_MODULE" version="4">, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonBinaryFieldMapper.java, +import java.util.Map;, +        @Override public JsonMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {, +            parseJsonField(builder, name, node, parserContext);, +++ b/.idea/modules/plugin-analysis-icu.iml, +<module type="JAVA_MODULE" version="4">, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonBinaryFieldMapper.java, +import java.util.Map;, +        @Override public JsonMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {, +            parseJsonField(builder, name, node, parserContext);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonBooleanFieldMapper.java, +        @Override public JsonMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {, +            parseJsonField(builder, name, node, parserContext);, +            for (Map.Entry<String, Object> entry : node.entrySet()) {, +                Object propNode = entry.getValue();, +++ b/.idea/modules/plugin-analysis-icu.iml, +<module type="JAVA_MODULE" version="4">, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonBinaryFieldMapper.java, +import java.util.Map;, +        @Override public JsonMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {, +            parseJsonField(builder, name, node, parserContext);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonBooleanFieldMapper.java, +        @Override public JsonMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {, +            parseJsonField(builder, name, node, parserContext);, +            for (Map.Entry<String, Object> entry : node.entrySet()) {, +                Object propNode = entry.getValue();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonDateFieldMapper.java, +        @Override public JsonMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {, +            parseNumberField(builder, name, node, parserContext);, +            for (Map.Entry<String, Object> entry : node.entrySet()) {, +                Object propNode = entry.getValue();, +                    builder.nullValue(propNode.toString());, +++ b/.idea/modules/plugin-analysis-icu.iml, +<module type="JAVA_MODULE" version="4">, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonBinaryFieldMapper.java, +import java.util.Map;, +        @Override public JsonMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {, +            parseJsonField(builder, name, node, parserContext);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonBooleanFieldMapper.java, +        @Override public JsonMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {, +            parseJsonField(builder, name, node, parserContext);, +            for (Map.Entry<String, Object> entry : node.entrySet()) {, +                Object propNode = entry.getValue();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonDateFieldMapper.java, +        @Override public JsonMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {, +            parseNumberField(builder, name, node, parserContext);, +            for (Map.Entry<String, Object> entry : node.entrySet()) {, +                Object propNode = entry.getValue();, +                    builder.nullValue(propNode.toString());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonDocumentMapperParser.java, +import org.elasticsearch.util.gcommon.collect.ImmutableMap;, +        Map<String, Object> root;, +            root = objectMapper.readValue(new FastStringReader(source), Map.class);, +        String rootName = root.keySet().iterator().next();, +        Map<String, Object> rootObj;, +            rootObj = (Map<String, Object>) root.get(rootName);, +                Object tmpNode = root.get(type);, +                if (!(tmpNode instanceof Map)) {, +                    throw new MapperParsingException("Expected root node name [" + rootName + "] to be of object type, but its not");, +                rootObj = (Map<String, Object>) tmpNode;, +                rootObj = root;, +        for (Map.Entry<String, Object> entry : rootObj.entrySet()) {, +            Object fieldNode = entry.getValue();, +                docBuilder.sourceField(parseSourceField((Map<String, Object>) fieldNode, parserContext));, +                docBuilder.idField(parseIdField((Map<String, Object>) fieldNode, parserContext));, +                docBuilder.typeField(parseTypeField((Map<String, Object>) fieldNode, parserContext));, +                docBuilder.uidField(parseUidField((Map<String, Object>) fieldNode, parserContext));, +                docBuilder.boostField(parseBoostField((Map<String, Object>) fieldNode, parserContext));, +                docBuilder.allField(parseAllField((Map<String, Object>) fieldNode, parserContext));, +                docBuilder.indexAnalyzer(analysisService.analyzer(fieldNode.toString()));, +                docBuilder.searchAnalyzer(analysisService.analyzer(fieldNode.toString()));, +                docBuilder.indexAnalyzer(analysisService.analyzer(fieldNode.toString()));, +                docBuilder.searchAnalyzer(analysisService.analyzer(fieldNode.toString()));, +    private JsonUidFieldMapper.Builder parseUidField(Map<String, Object> uidNode, JsonTypeParser.ParserContext parserContext) {, +    private JsonBoostFieldMapper.Builder parseBoostField(Map<String, Object> boostNode, JsonTypeParser.ParserContext parserContext) {, +        String name = boostNode.get("name") == null ? JsonBoostFieldMapper.Defaults.NAME : boostNode.get("name").toString();, +        for (Map.Entry<String, Object> entry : boostNode.entrySet()) {, +            Object propNode = entry.getValue();, +    private JsonTypeFieldMapper.Builder parseTypeField(Map<String, Object> typeNode, JsonTypeParser.ParserContext parserContext) {, +    private JsonIdFieldMapper.Builder parseIdField(Map<String, Object> idNode, JsonTypeParser.ParserContext parserContext) {, +    private JsonAllFieldMapper.Builder parseAllField(Map<String, Object> allNode, JsonTypeParser.ParserContext parserContext) {, +        for (Map.Entry<String, Object> entry : allNode.entrySet()) {, +            Object fieldNode = entry.getValue();, +    private JsonSourceFieldMapper.Builder parseSourceField(Map<String, Object> sourceNode, JsonTypeParser.ParserContext parserContext) {, +, +        for (Map.Entry<String, Object> entry : sourceNode.entrySet()) {, +            Object fieldNode = entry.getValue();, +++ b/.idea/modules/plugin-analysis-icu.iml, +<module type="JAVA_MODULE" version="4">, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonBinaryFieldMapper.java, +import java.util.Map;, +        @Override public JsonMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {, +            parseJsonField(builder, name, node, parserContext);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonBooleanFieldMapper.java, +        @Override public JsonMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {, +            parseJsonField(builder, name, node, parserContext);]