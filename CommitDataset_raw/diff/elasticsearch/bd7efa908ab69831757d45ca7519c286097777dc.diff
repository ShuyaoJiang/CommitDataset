[+++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.indices.shrink.ResizeAction;, +import org.elasticsearch.action.admin.indices.shrink.TransportResizeAction;, +import org.elasticsearch.rest.action.admin.indices.RestSplitIndexAction;, +        actions.register(ResizeAction.INSTANCE, TransportResizeAction.class);, +        registerHandler.accept(new RestSplitIndexAction(settings, restController));, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.indices.shrink.ResizeAction;, +import org.elasticsearch.action.admin.indices.shrink.TransportResizeAction;, +import org.elasticsearch.rest.action.admin.indices.RestSplitIndexAction;, +        actions.register(ResizeAction.INSTANCE, TransportResizeAction.class);, +        registerHandler.accept(new RestSplitIndexAction(settings, restController));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexClusterStateUpdateRequest.java, +import org.elasticsearch.action.admin.indices.shrink.ResizeType;, +    private Index recoverFrom;, +    private ResizeType resizeType;, +    public CreateIndexClusterStateUpdateRequest recoverFrom(Index recoverFrom) {, +        this.recoverFrom = recoverFrom;, +    public CreateIndexClusterStateUpdateRequest resizeType(ResizeType resizeType) {, +        this.resizeType = resizeType;, +        return this;, +    }, +, +    public Index recoverFrom() {, +        return recoverFrom;, +, +    /**, +     * Returns the resize type or null if this is an ordinary create index request, +     */, +    public ResizeType resizeType() {, +        return resizeType;, +    }, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.indices.shrink.ResizeAction;, +import org.elasticsearch.action.admin.indices.shrink.TransportResizeAction;, +import org.elasticsearch.rest.action.admin.indices.RestSplitIndexAction;, +        actions.register(ResizeAction.INSTANCE, TransportResizeAction.class);, +        registerHandler.accept(new RestSplitIndexAction(settings, restController));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexClusterStateUpdateRequest.java, +import org.elasticsearch.action.admin.indices.shrink.ResizeType;, +    private Index recoverFrom;, +    private ResizeType resizeType;, +    public CreateIndexClusterStateUpdateRequest recoverFrom(Index recoverFrom) {, +        this.recoverFrom = recoverFrom;, +    public CreateIndexClusterStateUpdateRequest resizeType(ResizeType resizeType) {, +        this.resizeType = resizeType;, +        return this;, +    }, +, +    public Index recoverFrom() {, +        return recoverFrom;, +, +    /**, +     * Returns the resize type or null if this is an ordinary create index request, +     */, +    public ResizeType resizeType() {, +        return resizeType;, +    }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shrink/ResizeAction.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.action.admin.indices.shrink;, +, +import org.elasticsearch.Version;, +import org.elasticsearch.action.Action;, +import org.elasticsearch.client.ElasticsearchClient;, +, +public class ResizeAction extends Action<ResizeRequest, ResizeResponse, ResizeRequestBuilder> {, +, +    public static final ResizeAction INSTANCE = new ResizeAction();, +    public static final String NAME = "indices:admin/resize";, +    public static final Version COMPATIBILITY_VERSION = Version.V_7_0_0_alpha1; // TODO remove this once it's backported, +, +    private ResizeAction() {, +        super(NAME);, +    }, +, +    @Override, +    public ResizeResponse newResponse() {, +        return new ResizeResponse();, +    }, +, +    @Override]