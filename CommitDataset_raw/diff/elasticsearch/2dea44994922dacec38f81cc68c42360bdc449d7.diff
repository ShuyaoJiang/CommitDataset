[+++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +        String[] elements = spare.get().toString().split(";");, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +        String[] elements = spare.get().toString().split(";");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +    private void validateAliasFilter(XContentParser parser, QueryShardContext queryShardContext) throws IOException {, +        try {, +            queryShardContext.reset();, +        } finally {, +            queryShardContext.reset();, +            parser.close();, +        }, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +        String[] elements = spare.get().toString().split(";");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +    private void validateAliasFilter(XContentParser parser, QueryShardContext queryShardContext) throws IOException {, +        try {, +            queryShardContext.reset();, +        } finally {, +            queryShardContext.reset();, +            parser.close();, +        }, +++ b/core/src/main/java/org/elasticsearch/common/Strings.java, +        if (s == null || s.isEmpty()) return Strings.EMPTY_ARRAY;, +        else return s.split(",");, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +        String[] elements = spare.get().toString().split(";");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +    private void validateAliasFilter(XContentParser parser, QueryShardContext queryShardContext) throws IOException {, +        try {, +            queryShardContext.reset();, +        } finally {, +            queryShardContext.reset();, +            parser.close();, +        }, +++ b/core/src/main/java/org/elasticsearch/common/Strings.java, +        if (s == null || s.isEmpty()) return Strings.EMPTY_ARRAY;, +        else return s.split(",");, +++ b/core/src/main/java/org/elasticsearch/common/Table.java, +            String[] sAttrs = attributes.split(";");, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +        String[] elements = spare.get().toString().split(";");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +    private void validateAliasFilter(XContentParser parser, QueryShardContext queryShardContext) throws IOException {, +        try {, +            queryShardContext.reset();, +        } finally {, +            queryShardContext.reset();, +            parser.close();, +        }, +++ b/core/src/main/java/org/elasticsearch/common/Strings.java, +        if (s == null || s.isEmpty()) return Strings.EMPTY_ARRAY;, +        else return s.split(",");, +++ b/core/src/main/java/org/elasticsearch/common/Table.java, +            String[] sAttrs = attributes.split(";");, +++ b/core/src/main/java/org/elasticsearch/common/path/PathTrie.java, +    private final String separator;, +        final String separatorAsString = new String(new char[]{separator});, +        this.separator = separatorAsString;, +        root = new TrieNode(separatorAsString, null, wildcard);, +        String[] strings = path.split(separator);, +        String[] strings = path.split(separator);, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +        String[] elements = spare.get().toString().split(";");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +    private void validateAliasFilter(XContentParser parser, QueryShardContext queryShardContext) throws IOException {, +        try {, +            queryShardContext.reset();, +        } finally {, +            queryShardContext.reset();, +            parser.close();, +        }, +++ b/core/src/main/java/org/elasticsearch/common/Strings.java, +        if (s == null || s.isEmpty()) return Strings.EMPTY_ARRAY;, +        else return s.split(",");, +++ b/core/src/main/java/org/elasticsearch/common/Table.java, +            String[] sAttrs = attributes.split(";");, +++ b/core/src/main/java/org/elasticsearch/common/path/PathTrie.java, +    private final String separator;, +        final String separatorAsString = new String(new char[]{separator});, +        this.separator = separatorAsString;, +        root = new TrieNode(separatorAsString, null, wildcard);, +        String[] strings = path.split(separator);, +        String[] strings = path.split(separator);, +++ b/core/src/main/java/org/elasticsearch/common/settings/Settings.java, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +        String[] elements = spare.get().toString().split(";");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +    private void validateAliasFilter(XContentParser parser, QueryShardContext queryShardContext) throws IOException {, +        try {, +            queryShardContext.reset();, +        } finally {, +            queryShardContext.reset();, +            parser.close();, +        }, +++ b/core/src/main/java/org/elasticsearch/common/Strings.java, +        if (s == null || s.isEmpty()) return Strings.EMPTY_ARRAY;, +        else return s.split(",");, +++ b/core/src/main/java/org/elasticsearch/common/Table.java, +            String[] sAttrs = attributes.split(";");]