[+++ b/x-pack/plugin/ccr/build.gradle, +integTest.enabled = false, +, +++ b/x-pack/plugin/ccr/build.gradle, +integTest.enabled = false, +, +++ b/x-pack/plugin/ccr/qa/rest/build.gradle, +import org.elasticsearch.gradle.test.RestIntegTestTask, +, +apply plugin: 'elasticsearch.standalone-test', +, +dependencies {, +    testCompile project(path: xpackModule('core'), configuration: 'testArtifacts'), +    testCompile project(path: xpackModule('ccr'), configuration: 'runtime'), +}, +, +task restTest(type: RestIntegTestTask) {, +    mustRunAfter(precommit), +}, +, +restTestCluster {, +    distribution 'zip', +    setting 'xpack.ml.enabled', 'false', +    setting 'xpack.monitoring.enabled', 'false', +    setting 'xpack.security.enabled', 'true', +    setting 'xpack.license.self_generated.type', 'trial', +    // TODO: reduce the need for superuser here, +    setupCommand 'setup-ccr-user',, +            'bin/elasticsearch-users', 'useradd', 'ccr-user', '-p', 'ccr-user-password', '-r', 'superuser', +    waitCondition = { node, ant ->, +        File tmpFile = new File(node.cwd, 'wait.success'), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow",, +                dest: tmpFile.toString(),, +                username: 'ccr-user',, +                password: 'ccr-user-password',, +                ignoreerrors: true,, +                retries: 10), +        return tmpFile.exists(), +    }, +}, +, +check.dependsOn restTest, +test.enabled = false, +++ b/x-pack/plugin/ccr/build.gradle, +integTest.enabled = false, +, +++ b/x-pack/plugin/ccr/qa/rest/build.gradle, +import org.elasticsearch.gradle.test.RestIntegTestTask, +, +apply plugin: 'elasticsearch.standalone-test', +, +dependencies {, +    testCompile project(path: xpackModule('core'), configuration: 'testArtifacts'), +    testCompile project(path: xpackModule('ccr'), configuration: 'runtime'), +}, +, +task restTest(type: RestIntegTestTask) {, +    mustRunAfter(precommit), +}, +, +restTestCluster {, +    distribution 'zip', +    setting 'xpack.ml.enabled', 'false', +    setting 'xpack.monitoring.enabled', 'false', +    setting 'xpack.security.enabled', 'true', +    setting 'xpack.license.self_generated.type', 'trial', +    // TODO: reduce the need for superuser here, +    setupCommand 'setup-ccr-user',, +            'bin/elasticsearch-users', 'useradd', 'ccr-user', '-p', 'ccr-user-password', '-r', 'superuser', +    waitCondition = { node, ant ->, +        File tmpFile = new File(node.cwd, 'wait.success'), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow",, +                dest: tmpFile.toString(),, +                username: 'ccr-user',, +                password: 'ccr-user-password',, +                ignoreerrors: true,, +                retries: 10), +        return tmpFile.exists(), +    }, +}, +, +check.dependsOn restTest, +test.enabled = false, +++ b/x-pack/plugin/ccr/qa/rest/src/test/java/org/elasticsearch/xpack/ccr/CcrRestIT.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +, +package org.elasticsearch.xpack.ccr;, +, +import com.carrotsearch.randomizedtesting.annotations.ParametersFactory;, +import org.elasticsearch.common.settings.SecureString;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.util.concurrent.ThreadContext;, +import org.elasticsearch.test.rest.yaml.ClientYamlTestCandidate;, +import org.elasticsearch.test.rest.yaml.ESClientYamlSuiteTestCase;, +import org.elasticsearch.xpack.test.rest.XPackRestTestHelper;, +import org.junit.After;]