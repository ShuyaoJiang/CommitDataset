[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/Facets.java, +        out.writeInt(facets.size());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/Facets.java, +        out.writeInt(facets.size());, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/client/transport/ClientTransportTwoServersSearchTests.java, +import org.elasticsearch.test.integration.search.TransportTwoServersSearchTests;, + * @author kimchy (shay.banon), +public class ClientTransportTwoServersSearchTests extends TransportTwoServersSearchTests {, +    @Override protected Client getClient() {, +        TransportClient client = new TransportClient();, +        return client;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/Facets.java, +        out.writeInt(facets.size());, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/client/transport/ClientTransportTwoServersSearchTests.java, +import org.elasticsearch.test.integration.search.TransportTwoServersSearchTests;, + * @author kimchy (shay.banon), +public class ClientTransportTwoServersSearchTests extends TransportTwoServersSearchTests {, +    @Override protected Client getClient() {, +        TransportClient client = new TransportClient();, +        return client;, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/search/TransportTwoServersSearchTests.java, +    private Client client;, +, +        client = getClient();, +        client.admin().indices().create(createIndexRequest("test")).actionGet();, +        client.admin().indices().refresh(refreshRequest("test")).actionGet();, +        client.close();, +    protected Client getClient() {, +        return client("server1");, +    }, +, +        SearchResponse searchResponse = client.search(searchRequest("test").source(source).searchType(DFS_QUERY_THEN_FETCH).scroll(new Scroll(timeValueMinutes(10)))).actionGet();, +        searchResponse = client.searchScroll(searchScrollRequest(searchResponse.scrollId())).actionGet();, +        SearchResponse searchResponse = client.search(searchRequest("test").source(source).searchType(DFS_QUERY_THEN_FETCH).scroll(new Scroll(timeValueMinutes(10)))).actionGet();, +        searchResponse = client.searchScroll(searchScrollRequest(searchResponse.scrollId())).actionGet();, +        SearchResponse searchResponse = client.search(searchRequest("test").source(source).searchType(QUERY_THEN_FETCH).scroll(new Scroll(timeValueMinutes(10)))).actionGet();, +        searchResponse = client.searchScroll(searchScrollRequest(searchResponse.scrollId())).actionGet();, +        SearchResponse searchResponse = client.search(searchRequest("test").source(source).searchType(QUERY_THEN_FETCH).scroll(new Scroll(timeValueMinutes(10)))).actionGet();, +        searchResponse = client.searchScroll(searchScrollRequest(searchResponse.scrollId())).actionGet();, +        SearchResponse searchResponse = client.search(searchRequest("test").source(source).searchType(QUERY_AND_FETCH).scroll(new Scroll(timeValueMinutes(10)))).actionGet();, +        SearchResponse searchResponse = client.search(searchRequest("test").source(source).searchType(DFS_QUERY_AND_FETCH).scroll(new Scroll(timeValueMinutes(10)))).actionGet();, +    @Test public void testSimpleFacets() throws Exception {, +        SearchSourceBuilder sourceBuilder = searchSource(), +                .query(termQuery("multi", "test")), +                .from(0).size(20).explain(true), +                .facets(facets().facet("all", termQuery("multi", "test")).facet("test1", termQuery("name", "test1")));, +, +        SearchResponse searchResponse = client.search(searchRequest("test").source(sourceBuilder)).actionGet();, +        assertThat(searchResponse.hits().totalHits(), equalTo(100l));, +, +        assertThat(searchResponse.facets().countFacet("test1").count(), equalTo(1l));, +        assertThat(searchResponse.facets().countFacet("all").count(), equalTo(100l));, +    }, +, +    @Test public void testSimpleFacetsTwice() throws Exception {, +        testSimpleFacets();, +        testSimpleFacets();, +    }, +]