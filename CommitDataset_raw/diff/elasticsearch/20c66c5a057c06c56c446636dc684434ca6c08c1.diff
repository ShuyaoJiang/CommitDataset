[+++ b/qa/evil-tests/src/test/java/org/elasticsearch/threadpool/EvilThreadPoolTests.java, +            try {, +                runner.accept(() -> {, +++ b/qa/evil-tests/src/test/java/org/elasticsearch/threadpool/EvilThreadPoolTests.java, +            try {, +                runner.accept(() -> {, +++ b/server/src/main/java/org/elasticsearch/index/shard/GlobalCheckpointListeners.java, +                                                removed = listeners.remove(listener) != null;, +++ b/qa/evil-tests/src/test/java/org/elasticsearch/threadpool/EvilThreadPoolTests.java, +            try {, +                runner.accept(() -> {, +++ b/server/src/main/java/org/elasticsearch/index/shard/GlobalCheckpointListeners.java, +                                                removed = listeners.remove(listener) != null;, +++ b/server/src/main/java/org/elasticsearch/threadpool/Scheduler.java, +import org.elasticsearch.ExceptionsHelper;, +     * Notice that if any scheduled jobs fail with an exception, these will bubble up to the uncaught exception handler where they will, +     * be logged as a warning. This includes jobs started using execute, submit and schedule., +     * This subclass ensures to properly bubble up Throwable instances of both type Error and Exception thrown in submitted/scheduled, +     * tasks to the uncaught exception handler, +            if (t != null) return;, +            // Scheduler only allows Runnable's so we expect no checked exceptions here. If anyone uses submit directly on `this`, we, +            // accept the wrapped exception in the output., +            ExceptionsHelper.reThrowIfNotNull(EsExecutors.rethrowErrors(r));, +++ b/qa/evil-tests/src/test/java/org/elasticsearch/threadpool/EvilThreadPoolTests.java, +            try {, +                runner.accept(() -> {, +++ b/server/src/main/java/org/elasticsearch/index/shard/GlobalCheckpointListeners.java, +                                                removed = listeners.remove(listener) != null;, +++ b/server/src/main/java/org/elasticsearch/threadpool/Scheduler.java, +import org.elasticsearch.ExceptionsHelper;, +     * Notice that if any scheduled jobs fail with an exception, these will bubble up to the uncaught exception handler where they will, +     * be logged as a warning. This includes jobs started using execute, submit and schedule., +     * This subclass ensures to properly bubble up Throwable instances of both type Error and Exception thrown in submitted/scheduled, +     * tasks to the uncaught exception handler, +            if (t != null) return;, +            // Scheduler only allows Runnable's so we expect no checked exceptions here. If anyone uses submit directly on `this`, we, +            // accept the wrapped exception in the output., +            ExceptionsHelper.reThrowIfNotNull(EsExecutors.rethrowErrors(r));, +++ b/server/src/main/java/org/elasticsearch/threadpool/ThreadPool.java, +            try {, +            } catch (EsRejectedExecutionException e) {, +                if (e.isExecutorShutdown()) {, +                    logger.debug(new ParameterizedMessage("could not schedule execution of [{}] on [{}] as executor is shut down",, +                        runnable, executor), e);, +                } else {, +                    throw e;, +                }, +            }]