[+++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final boolean REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT = true;, +    public static final boolean REST_EXCEPTION_SKIP_CAUSE_DEFAULT = false;, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final boolean REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT = true;, +    public static final boolean REST_EXCEPTION_SKIP_CAUSE_DEFAULT = false;, +++ b/core/src/main/java/org/elasticsearch/rest/BytesRestResponse.java, +import org.elasticsearch.common.logging.ESLogger;, +import org.elasticsearch.common.logging.ESLoggerFactory;, +    private static final ESLogger SUPPRESSED_ERROR_LOGGER = ESLoggerFactory.getLogger("rest.suppressed");, +, +            final ToXContent.Params params;, +            if (channel.request().paramAsBoolean("error_trace", !ElasticsearchException.REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT)) {, +                params =  new ToXContent.DelegatingMapParams(Collections.singletonMap(ElasticsearchException.REST_EXCEPTION_SKIP_STACK_TRACE, "false"), channel.request());, +            } else {, +                SUPPRESSED_ERROR_LOGGER.info("{} Params: {}", t, channel.request().path(), channel.request().params());, +                params = channel.request();, +            }, +                rootCause.toXContent(builder, new ToXContent.DelegatingMapParams(Collections.singletonMap(ElasticsearchException.REST_EXCEPTION_SKIP_CAUSE, "true"), params));, +            ElasticsearchException.toXContent(builder, params, t);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final boolean REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT = true;, +    public static final boolean REST_EXCEPTION_SKIP_CAUSE_DEFAULT = false;, +++ b/core/src/main/java/org/elasticsearch/rest/BytesRestResponse.java, +import org.elasticsearch.common.logging.ESLogger;, +import org.elasticsearch.common.logging.ESLoggerFactory;, +    private static final ESLogger SUPPRESSED_ERROR_LOGGER = ESLoggerFactory.getLogger("rest.suppressed");, +, +            final ToXContent.Params params;, +            if (channel.request().paramAsBoolean("error_trace", !ElasticsearchException.REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT)) {, +                params =  new ToXContent.DelegatingMapParams(Collections.singletonMap(ElasticsearchException.REST_EXCEPTION_SKIP_STACK_TRACE, "false"), channel.request());, +            } else {, +                SUPPRESSED_ERROR_LOGGER.info("{} Params: {}", t, channel.request().path(), channel.request().params());, +                params = channel.request();, +            }, +                rootCause.toXContent(builder, new ToXContent.DelegatingMapParams(Collections.singletonMap(ElasticsearchException.REST_EXCEPTION_SKIP_CAUSE, "true"), params));, +            ElasticsearchException.toXContent(builder, params, t);, +++ b/core/src/test/java/org/elasticsearch/ESExceptionTests.java, +    private static final ToXContent.Params PARAMS = ToXContent.EMPTY_PARAMS;, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final boolean REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT = true;, +    public static final boolean REST_EXCEPTION_SKIP_CAUSE_DEFAULT = false;, +++ b/core/src/main/java/org/elasticsearch/rest/BytesRestResponse.java, +import org.elasticsearch.common.logging.ESLogger;, +import org.elasticsearch.common.logging.ESLoggerFactory;, +    private static final ESLogger SUPPRESSED_ERROR_LOGGER = ESLoggerFactory.getLogger("rest.suppressed");, +, +            final ToXContent.Params params;, +            if (channel.request().paramAsBoolean("error_trace", !ElasticsearchException.REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT)) {, +                params =  new ToXContent.DelegatingMapParams(Collections.singletonMap(ElasticsearchException.REST_EXCEPTION_SKIP_STACK_TRACE, "false"), channel.request());, +            } else {, +                SUPPRESSED_ERROR_LOGGER.info("{} Params: {}", t, channel.request().path(), channel.request().params());, +                params = channel.request();, +            }, +                rootCause.toXContent(builder, new ToXContent.DelegatingMapParams(Collections.singletonMap(ElasticsearchException.REST_EXCEPTION_SKIP_CAUSE, "true"), params));, +            ElasticsearchException.toXContent(builder, params, t);, +++ b/core/src/test/java/org/elasticsearch/ESExceptionTests.java, +    private static final ToXContent.Params PARAMS = ToXContent.EMPTY_PARAMS;, +++ b/core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java, +            x.toXContent(builder, ToXContent.EMPTY_PARAMS);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final boolean REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT = true;, +    public static final boolean REST_EXCEPTION_SKIP_CAUSE_DEFAULT = false;, +++ b/core/src/main/java/org/elasticsearch/rest/BytesRestResponse.java, +import org.elasticsearch.common.logging.ESLogger;, +import org.elasticsearch.common.logging.ESLoggerFactory;, +    private static final ESLogger SUPPRESSED_ERROR_LOGGER = ESLoggerFactory.getLogger("rest.suppressed");, +, +            final ToXContent.Params params;, +            if (channel.request().paramAsBoolean("error_trace", !ElasticsearchException.REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT)) {, +                params =  new ToXContent.DelegatingMapParams(Collections.singletonMap(ElasticsearchException.REST_EXCEPTION_SKIP_STACK_TRACE, "false"), channel.request());, +            } else {, +                SUPPRESSED_ERROR_LOGGER.info("{} Params: {}", t, channel.request().path(), channel.request().params());, +                params = channel.request();, +            }, +                rootCause.toXContent(builder, new ToXContent.DelegatingMapParams(Collections.singletonMap(ElasticsearchException.REST_EXCEPTION_SKIP_CAUSE, "true"), params));, +            ElasticsearchException.toXContent(builder, params, t);, +++ b/core/src/test/java/org/elasticsearch/ESExceptionTests.java, +    private static final ToXContent.Params PARAMS = ToXContent.EMPTY_PARAMS;, +++ b/core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java, +            x.toXContent(builder, ToXContent.EMPTY_PARAMS);, +++ b/core/src/test/java/org/elasticsearch/action/search/MultiSearchRequestTests.java, +        response.toXContent(builder, ToXContent.EMPTY_PARAMS);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final boolean REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT = true;, +    public static final boolean REST_EXCEPTION_SKIP_CAUSE_DEFAULT = false;, +++ b/core/src/main/java/org/elasticsearch/rest/BytesRestResponse.java, +import org.elasticsearch.common.logging.ESLogger;, +import org.elasticsearch.common.logging.ESLoggerFactory;, +    private static final ESLogger SUPPRESSED_ERROR_LOGGER = ESLoggerFactory.getLogger("rest.suppressed");, +, +            final ToXContent.Params params;, +            if (channel.request().paramAsBoolean("error_trace", !ElasticsearchException.REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT)) {, +                params =  new ToXContent.DelegatingMapParams(Collections.singletonMap(ElasticsearchException.REST_EXCEPTION_SKIP_STACK_TRACE, "false"), channel.request());, +            } else {, +                SUPPRESSED_ERROR_LOGGER.info("{} Params: {}", t, channel.request().path(), channel.request().params());, +                params = channel.request();, +            }, +                rootCause.toXContent(builder, new ToXContent.DelegatingMapParams(Collections.singletonMap(ElasticsearchException.REST_EXCEPTION_SKIP_CAUSE, "true"), params));, +            ElasticsearchException.toXContent(builder, params, t);]