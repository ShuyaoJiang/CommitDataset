[+++ b/src/main/java/org/elasticsearch/search/suggest/context/GeolocationContextMapping.java, +            int[] precisionArray = precisions.toArray();, +            Arrays.sort(precisionArray);, +            return new GeolocationContextMapping(name, precisionArray, neighbors, defaultLocations, fieldName);, +++ b/src/main/java/org/elasticsearch/search/suggest/context/GeolocationContextMapping.java, +            int[] precisionArray = precisions.toArray();, +            Arrays.sort(precisionArray);, +            return new GeolocationContextMapping(name, precisionArray, neighbors, defaultLocations, fieldName);, +++ b/src/test/java/org/elasticsearch/search/suggest/ContextSuggestSearchTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.common.settings.ImmutableSettings;, +    public void testMappingIdempotency() throws Exception {, +        List<Integer> precisions = new ArrayList<>();, +        for (int i = 0; i < randomIntBetween(4, 12); i++) {, +            precisions.add(i+1);, +        }, +        Collections.shuffle(precisions, getRandom());, +        XContentBuilder mapping = jsonBuilder().startObject().startObject(TYPE), +                .startObject("properties").startObject("completion"), +                .field("type", "completion"), +                .startObject("context"), +                .startObject("location"), +                .field("type", "geo"), +                .array("precision", precisions.toArray(new Integer[precisions.size()])), +                .endObject(), +                .endObject().endObject(), +                .endObject().endObject();, +, +        assertAcked(prepareCreate(INDEX).addMapping(TYPE, mapping.string()));, +        ensureYellow();, +, +        Collections.shuffle(precisions, getRandom());, +        mapping = jsonBuilder().startObject().startObject(TYPE), +                .startObject("properties").startObject("completion"), +                .field("type", "completion"), +                .startObject("context"), +                .startObject("location"), +                .field("type", "geo"), +                .array("precision", precisions.toArray(new Integer[precisions.size()])), +                .endObject(), +                .endObject().endObject(), +                .endObject().endObject();, +        assertAcked(client().admin().indices().preparePutMapping(INDEX).setType(TYPE).setSource(mapping.string()).get());, +    }, +, +, +    @Test]