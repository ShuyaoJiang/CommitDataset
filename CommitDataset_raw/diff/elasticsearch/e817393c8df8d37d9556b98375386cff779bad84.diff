[+++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/DisabledIndexFieldData.java, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/DisabledIndexFieldData.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/DisabledIndexFieldData.java, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/DisabledIndexFieldData.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/DisabledIndexFieldData.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/DisabledIndexFieldData.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/index/fielddata/DuelFieldDataTests.java, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/DisabledIndexFieldData.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/index/fielddata/DuelFieldDataTests.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/DisabledIndexFieldData.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/index/fielddata/DuelFieldDataTests.java, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/index/fielddata/FilterFieldDataTest.java, +        String[] formats = new String[] { "paged_bytes"};, +        String[] formats = new String[] { "paged_bytes"};, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/DisabledIndexFieldData.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/index/fielddata/DuelFieldDataTests.java, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/index/fielddata/FilterFieldDataTest.java, +        String[] formats = new String[] { "paged_bytes"};, +        String[] formats = new String[] { "paged_bytes"};, +++ b/core/src/test/java/org/elasticsearch/index/fielddata/IndexFieldDataServiceTests.java, +        final MappedFieldType stringMapper = MapperBuilders.stringField("string").tokenized(false).fieldDataSettings(DOC_VALUES_SETTINGS).fieldDataSettings(Settings.builder().put("format", "disabled").build()).build(ctx).fieldType();, +        assertTrue(fd instanceof DisabledIndexFieldData);, +        final MappedFieldType mapper1 = MapperBuilders.stringField("s").tokenized(false).docValues(true).fieldDataSettings(Settings.builder().put(FieldDataType.FORMAT_KEY, "paged_bytes").build()).build(ctx).fieldType();, +        final MappedFieldType mapper2 = MapperBuilders.stringField("s").tokenized(false).docValues(true).fieldDataSettings(Settings.builder().put(FieldDataType.FORMAT_KEY, "doc_values").build()).build(ctx).fieldType();, +        assertThat(ifd, instanceOf(SortedSetDVOrdinalsIndexFieldData.class));, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/DisabledIndexFieldData.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/index/fielddata/DuelFieldDataTests.java, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/index/fielddata/FilterFieldDataTest.java, +        String[] formats = new String[] { "paged_bytes"};, +        String[] formats = new String[] { "paged_bytes"};, +++ b/core/src/test/java/org/elasticsearch/index/fielddata/IndexFieldDataServiceTests.java, +        final MappedFieldType stringMapper = MapperBuilders.stringField("string").tokenized(false).fieldDataSettings(DOC_VALUES_SETTINGS).fieldDataSettings(Settings.builder().put("format", "disabled").build()).build(ctx).fieldType();, +        assertTrue(fd instanceof DisabledIndexFieldData);, +        final MappedFieldType mapper1 = MapperBuilders.stringField("s").tokenized(false).docValues(true).fieldDataSettings(Settings.builder().put(FieldDataType.FORMAT_KEY, "paged_bytes").build()).build(ctx).fieldType();, +        final MappedFieldType mapper2 = MapperBuilders.stringField("s").tokenized(false).docValues(true).fieldDataSettings(Settings.builder().put(FieldDataType.FORMAT_KEY, "doc_values").build()).build(ctx).fieldType();, +        assertThat(ifd, instanceOf(SortedSetDVOrdinalsIndexFieldData.class));, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/DisabledIndexFieldData.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/index/fielddata/DuelFieldDataTests.java, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/index/fielddata/FilterFieldDataTest.java, +        String[] formats = new String[] { "paged_bytes"};, +        String[] formats = new String[] { "paged_bytes"};, +++ b/core/src/test/java/org/elasticsearch/index/fielddata/IndexFieldDataServiceTests.java, +        final MappedFieldType stringMapper = MapperBuilders.stringField("string").tokenized(false).fieldDataSettings(DOC_VALUES_SETTINGS).fieldDataSettings(Settings.builder().put("format", "disabled").build()).build(ctx).fieldType();, +        assertTrue(fd instanceof DisabledIndexFieldData);, +        final MappedFieldType mapper1 = MapperBuilders.stringField("s").tokenized(false).docValues(true).fieldDataSettings(Settings.builder().put(FieldDataType.FORMAT_KEY, "paged_bytes").build()).build(ctx).fieldType();, +        final MappedFieldType mapper2 = MapperBuilders.stringField("s").tokenized(false).docValues(true).fieldDataSettings(Settings.builder().put(FieldDataType.FORMAT_KEY, "doc_values").build()).build(ctx).fieldType();, +        assertThat(ifd, instanceOf(SortedSetDVOrdinalsIndexFieldData.class));, +++ /dev/null]