[+++ b/src/main/java/org/elasticsearch/index/mapper/attachment/AttachmentMapper.java, +                        // TODO should be _language, +            if (contentType != null) {, +                context.externalValue(contentType);, +            } else {, +            }, +++ b/src/main/java/org/elasticsearch/index/mapper/attachment/AttachmentMapper.java, +                        // TODO should be _language, +            if (contentType != null) {, +                context.externalValue(contentType);, +            } else {, +            }, +++ b/src/test/java/org/elasticsearch/plugin/mapper/attachments/test/MultipleAttachmentIntegrationTests.java, +@ElasticsearchIntegrationTest.ClusterScope(scope = ElasticsearchIntegrationTest.Scope.SUITE), +++ b/src/main/java/org/elasticsearch/index/mapper/attachment/AttachmentMapper.java, +                        // TODO should be _language, +            if (contentType != null) {, +                context.externalValue(contentType);, +            } else {, +            }, +++ b/src/test/java/org/elasticsearch/plugin/mapper/attachments/test/MultipleAttachmentIntegrationTests.java, +@ElasticsearchIntegrationTest.ClusterScope(scope = ElasticsearchIntegrationTest.Scope.SUITE), +++ b/src/test/java/org/elasticsearch/plugin/mapper/attachments/test/SimpleAttachmentIntegrationTests.java, +import org.elasticsearch.action.search.SearchResponse;, +import static org.hamcrest.Matchers.is;, +@ElasticsearchIntegrationTest.ClusterScope(scope = ElasticsearchIntegrationTest.Scope.SUITE), +, +    @Test, +    public void testContentTypeAndName() throws Exception {, +        String dummyContentType = "text/my-dummy-content-type";, +        String dummyName = "my-dummy-name-txt";, +        String mapping = copyToStringFromClasspath("/org/elasticsearch/index/mapper/xcontent/test-mapping-store-content-type.json");, +        byte[] txt = copyToBytesFromClasspath("/org/elasticsearch/index/mapper/xcontent/testContentLength.txt");, +, +        client().admin().indices().putMapping(putMappingRequest("test").type("person").source(mapping)).actionGet();, +, +        index("test", "person", jsonBuilder().startObject().field("file").startObject().field("content", txt), +                .field("_content_type", dummyContentType), +                .field("_name", dummyName), +                .endObject());, +        refresh();, +, +        SearchResponse response = client().prepareSearch("test"), +                .addField("content_type"), +                .addField("name"), +                .execute().get();, +        String contentType = response.getHits().getAt(0).getFields().get("file.content_type").getValue();, +        String name = response.getHits().getAt(0).getFields().get("file.name").getValue();, +        assertThat(contentType, is(dummyContentType));, +        assertThat(name, is(dummyName));, +    }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/attachment/AttachmentMapper.java, +                        // TODO should be _language, +            if (contentType != null) {, +                context.externalValue(contentType);, +            } else {, +            }, +++ b/src/test/java/org/elasticsearch/plugin/mapper/attachments/test/MultipleAttachmentIntegrationTests.java, +@ElasticsearchIntegrationTest.ClusterScope(scope = ElasticsearchIntegrationTest.Scope.SUITE), +++ b/src/test/java/org/elasticsearch/plugin/mapper/attachments/test/SimpleAttachmentIntegrationTests.java, +import org.elasticsearch.action.search.SearchResponse;, +import static org.hamcrest.Matchers.is;, +@ElasticsearchIntegrationTest.ClusterScope(scope = ElasticsearchIntegrationTest.Scope.SUITE), +, +    @Test, +    public void testContentTypeAndName() throws Exception {, +        String dummyContentType = "text/my-dummy-content-type";, +        String dummyName = "my-dummy-name-txt";, +        String mapping = copyToStringFromClasspath("/org/elasticsearch/index/mapper/xcontent/test-mapping-store-content-type.json");, +        byte[] txt = copyToBytesFromClasspath("/org/elasticsearch/index/mapper/xcontent/testContentLength.txt");, +, +        client().admin().indices().putMapping(putMappingRequest("test").type("person").source(mapping)).actionGet();, +, +        index("test", "person", jsonBuilder().startObject().field("file").startObject().field("content", txt), +                .field("_content_type", dummyContentType), +                .field("_name", dummyName), +                .endObject());, +        refresh();, +, +        SearchResponse response = client().prepareSearch("test"), +                .addField("content_type"), +                .addField("name"), +                .execute().get();, +        String contentType = response.getHits().getAt(0).getFields().get("file.content_type").getValue();, +        String name = response.getHits().getAt(0).getFields().get("file.name").getValue();, +        assertThat(contentType, is(dummyContentType));, +        assertThat(name, is(dummyName));, +    }, +, +++ b/src/test/resources/org/elasticsearch/index/mapper/xcontent/test-mapping-store-content-type.json, +{, +    "person":{, +        "properties":{, +            "file":{, +                "type":"attachment",, +                "fields": {, +                    "content_type" : {"store" : "yes"},, +                    "name" : {"store" : "yes"}, +                }]