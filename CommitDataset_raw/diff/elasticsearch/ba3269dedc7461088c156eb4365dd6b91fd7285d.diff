[+++ b/src/test/java/org/elasticsearch/search/rescore/QueryRescorerTests.java, +    private static final void assertEquivalent(String query, SearchResponse plain, SearchResponse rescored) {, +        SearchHit[] rHits = rightHits.getHits();, +            assertThat("query: " + query, hits[i].getScore(), equalTo(rHits[i].getScore()));, +        }, +        for (int i = 0; i < hits.length; i++) {, +            if (hits[i].getScore() == hits[hits.length-1].getScore()) {, +                return; // we need to cut off here since this is the tail of the queue and we might not have fetched enough docs, +            }, +            assertThat("query: " + query,hits[i].getId(), equalTo(rHits[i].getId()));, +                if (hits[i].getScore() == hits[hits.length-1].getScore()) {, +                    return; // we need to cut off here since this is the tail of the queue and we might not have fetched enough docs, +                }, +            int resultSize = between(5, 30);, +            int rescoreWindow = between(1, 3) * resultSize;, +                    .setSize(resultSize), +                                    .setRescoreQueryWeight(0.0f)) // no weight - so we basically use the same score as the actual query, +                    .setRescoreWindow(rescoreWindow).execute().actionGet();, +                    .setQuery(QueryBuilders.matchQuery("field1", query).operator(MatchQueryBuilder.Operator.OR)).setFrom(0).setSize(resultSize), +            assertEquivalent(query, plain, rescored);, +                    .setSize(resultSize), +                    .setRescoreWindow(rescoreWindow).execute().actionGet();, +            assertEquivalent(query, plain, rescored);, +                    .setSize(resultSize), +                                    .setQueryWeight(1.0f).setRescoreQueryWeight(1.0f)).setRescoreWindow(2 * rescoreWindow).execute().actionGet();]