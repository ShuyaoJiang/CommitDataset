[+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +                } else if (expression.indexOf("*") == expression.length() - 1) {, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +                } else if (expression.indexOf("*") == expression.length() - 1) {, +++ b/core/src/test/java/org/elasticsearch/cluster/metadata/WildcardExpressionResolverTests.java, +    // issue #13334, +    public void testMultipleWildcards() {, +        MetaData.Builder mdBuilder = MetaData.builder(), +                .put(indexBuilder("testXXX")), +                .put(indexBuilder("testXXY")), +                .put(indexBuilder("testXYY")), +                .put(indexBuilder("testYYY")), +                .put(indexBuilder("kuku")), +                .put(indexBuilder("kukuYYY"));, +, +        ClusterState state = ClusterState.builder(new ClusterName("_name")).metaData(mdBuilder).build();, +        IndexNameExpressionResolver.WildcardExpressionResolver resolver = new IndexNameExpressionResolver.WildcardExpressionResolver();, +, +        IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.lenientExpandOpen());, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("test*X*"))), equalTo(newHashSet("testXXX", "testXXY", "testXYY")));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("test*X*Y"))), equalTo(newHashSet("testXXY", "testXYY")));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("kuku*Y*"))), equalTo(newHashSet("kukuYYY")));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("*Y*"))), equalTo(newHashSet("testXXY", "testXYY", "testYYY", "kukuYYY")));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("test*Y*X"))).size(), equalTo(0));, +        assertThat(newHashSet(resolver.resolve(context, Arrays.asList("*Y*X"))).size(), equalTo(0));, +    }, +]