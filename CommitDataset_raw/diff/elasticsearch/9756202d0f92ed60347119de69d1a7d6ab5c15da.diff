[+++ b/core/pom.xml, +        <version>2.0.0-beta1-SNAPSHOT</version>, +++ b/core/pom.xml, +        <version>2.0.0-beta1-SNAPSHOT</version>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryBuilder;, +        return new ConstantScoreQuery(ExistsQueryBuilder.newFilter(parseContext, queryText));, +++ b/core/pom.xml, +        <version>2.0.0-beta1-SNAPSHOT</version>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryBuilder;, +        return new ConstantScoreQuery(ExistsQueryBuilder.newFilter(parseContext, queryText));, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MissingFieldQueryExtension.java, +import org.elasticsearch.index.query.MissingQueryBuilder;, +        Query query = MissingQueryBuilder.newFilter(parseContext, queryText, MissingQueryBuilder.DEFAULT_EXISTENCE_VALUE, MissingQueryBuilder.DEFAULT_NULL_VALUE);, +        if (query != null) {, +            return new ConstantScoreQuery(query);, +        }, +        return null;, +++ b/core/pom.xml, +        <version>2.0.0-beta1-SNAPSHOT</version>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryBuilder;, +        return new ConstantScoreQuery(ExistsQueryBuilder.newFilter(parseContext, queryText));, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MissingFieldQueryExtension.java, +import org.elasticsearch.index.query.MissingQueryBuilder;, +        Query query = MissingQueryBuilder.newFilter(parseContext, queryText, MissingQueryBuilder.DEFAULT_EXISTENCE_VALUE, MissingQueryBuilder.DEFAULT_NULL_VALUE);, +        if (query != null) {, +            return new ConstantScoreQuery(query);, +        }, +        return null;, +++ b/core/src/main/java/org/elasticsearch/Build.java, +import org.elasticsearch.common.io.FastStringReader;, +import org.elasticsearch.common.io.Streams;, +        try {, +            String properties = Streams.copyToStringFromClasspath("/es-build.properties");, +            props.load(new FastStringReader(properties));, +++ b/core/pom.xml, +        <version>2.0.0-beta1-SNAPSHOT</version>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryBuilder;, +        return new ConstantScoreQuery(ExistsQueryBuilder.newFilter(parseContext, queryText));, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MissingFieldQueryExtension.java, +import org.elasticsearch.index.query.MissingQueryBuilder;, +        Query query = MissingQueryBuilder.newFilter(parseContext, queryText, MissingQueryBuilder.DEFAULT_EXISTENCE_VALUE, MissingQueryBuilder.DEFAULT_NULL_VALUE);, +        if (query != null) {, +            return new ConstantScoreQuery(query);, +        }, +        return null;, +++ b/core/src/main/java/org/elasticsearch/Build.java, +import org.elasticsearch.common.io.FastStringReader;, +import org.elasticsearch.common.io.Streams;, +        try {, +            String properties = Streams.copyToStringFromClasspath("/es-build.properties");, +            props.load(new FastStringReader(properties));, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version CURRENT = V_2_0_0_beta1;, +++ b/core/pom.xml, +        <version>2.0.0-beta1-SNAPSHOT</version>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryBuilder;, +        return new ConstantScoreQuery(ExistsQueryBuilder.newFilter(parseContext, queryText));, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MissingFieldQueryExtension.java, +import org.elasticsearch.index.query.MissingQueryBuilder;, +        Query query = MissingQueryBuilder.newFilter(parseContext, queryText, MissingQueryBuilder.DEFAULT_EXISTENCE_VALUE, MissingQueryBuilder.DEFAULT_NULL_VALUE);, +        if (query != null) {, +            return new ConstantScoreQuery(query);, +        }, +        return null;, +++ b/core/src/main/java/org/elasticsearch/Build.java, +import org.elasticsearch.common.io.FastStringReader;, +import org.elasticsearch.common.io.Streams;, +        try {, +            String properties = Streams.copyToStringFromClasspath("/es-build.properties");, +            props.load(new FastStringReader(properties));, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version CURRENT = V_2_0_0_beta1;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ValidateQueryRequestBuilder.java, +++ b/core/pom.xml, +        <version>2.0.0-beta1-SNAPSHOT</version>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryBuilder;, +        return new ConstantScoreQuery(ExistsQueryBuilder.newFilter(parseContext, queryText));, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MissingFieldQueryExtension.java, +import org.elasticsearch.index.query.MissingQueryBuilder;, +        Query query = MissingQueryBuilder.newFilter(parseContext, queryText, MissingQueryBuilder.DEFAULT_EXISTENCE_VALUE, MissingQueryBuilder.DEFAULT_NULL_VALUE);, +        if (query != null) {, +            return new ConstantScoreQuery(query);, +        }, +        return null;, +++ b/core/src/main/java/org/elasticsearch/Build.java, +import org.elasticsearch.common.io.FastStringReader;, +import org.elasticsearch.common.io.Streams;, +        try {, +            String properties = Streams.copyToStringFromClasspath("/es-build.properties");, +            props.load(new FastStringReader(properties));, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version CURRENT = V_2_0_0_beta1;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ValidateQueryRequestBuilder.java, +++ b/core/src/main/java/org/elasticsearch/common/io/Streams.java]