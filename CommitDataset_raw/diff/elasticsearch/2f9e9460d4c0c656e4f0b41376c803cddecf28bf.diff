[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/remote/RemoteInfoResponse.java, +import org.elasticsearch.transport.RemoteConnectionInfo;, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/remote/RemoteInfoResponse.java, +import org.elasticsearch.transport.RemoteConnectionInfo;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/remote/TransportRemoteInfoAction.java, +import org.elasticsearch.transport.RemoteClusterService;, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/remote/RemoteInfoResponse.java, +import org.elasticsearch.transport.RemoteConnectionInfo;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/remote/TransportRemoteInfoAction.java, +import org.elasticsearch.transport.RemoteClusterService;, +++ /dev/null, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/remote/RemoteInfoResponse.java, +import org.elasticsearch.transport.RemoteConnectionInfo;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/remote/TransportRemoteInfoAction.java, +import org.elasticsearch.transport.RemoteClusterService;, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/remote/RemoteInfoResponse.java, +import org.elasticsearch.transport.RemoteConnectionInfo;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/remote/TransportRemoteInfoAction.java, +import org.elasticsearch.transport.RemoteClusterService;, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/remote/RemoteInfoResponse.java, +import org.elasticsearch.transport.RemoteConnectionInfo;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/remote/TransportRemoteInfoAction.java, +import org.elasticsearch.transport.RemoteClusterService;, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/remote/RemoteInfoResponse.java, +import org.elasticsearch.transport.RemoteConnectionInfo;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/remote/TransportRemoteInfoAction.java, +import org.elasticsearch.transport.RemoteClusterService;, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java, +import org.elasticsearch.common.component.AbstractComponent;, +import org.elasticsearch.transport.RemoteClusterService;, +public class SearchTransportService extends AbstractComponent {, +        return transportService.getRemoteClusterService();, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/remote/RemoteInfoResponse.java, +import org.elasticsearch.transport.RemoteConnectionInfo;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/remote/TransportRemoteInfoAction.java, +import org.elasticsearch.transport.RemoteClusterService;, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java, +import org.elasticsearch.common.component.AbstractComponent;, +import org.elasticsearch.transport.RemoteClusterService;, +public class SearchTransportService extends AbstractComponent {, +        return transportService.getRemoteClusterService();, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +import org.apache.logging.log4j.util.Supplier;, +import org.elasticsearch.action.admin.cluster.shards.ClusterSearchShardsGroup;, +import org.elasticsearch.action.admin.cluster.shards.ClusterSearchShardsResponse;, +import org.elasticsearch.index.shard.ShardId;, +import org.elasticsearch.transport.RemoteClusterAware;, +import org.elasticsearch.transport.RemoteClusterService;, +import java.util.Arrays;, +                    Function<String, Transport.Connection> connectionFunction = processRemoteShards(remoteClusterService,, +    static Function<String, Transport.Connection> processRemoteShards(RemoteClusterService remoteClusterService,, +                                                                      Map<String, ClusterSearchShardsResponse> searchShardsResponses,, +                                                                      Map<String, OriginalIndices> remoteIndicesByCluster,, +                                                                      List<SearchShardIterator> remoteShardIterators,, +                                                                      Map<String, AliasFilter> aliasFilterMap) {, +        Map<String, Supplier<Transport.Connection>> nodeToCluster = new HashMap<>();, +        for (Map.Entry<String, ClusterSearchShardsResponse> entry : searchShardsResponses.entrySet()) {, +            String clusterAlias = entry.getKey();, +            ClusterSearchShardsResponse searchShardsResponse = entry.getValue();, +            for (DiscoveryNode remoteNode : searchShardsResponse.getNodes()) {, +                nodeToCluster.put(remoteNode.getId(), () -> remoteClusterService.getConnection(remoteNode, clusterAlias));, +            }, +            Map<String, AliasFilter> indicesAndFilters = searchShardsResponse.getIndicesAndFilters();, +            for (ClusterSearchShardsGroup clusterSearchShardsGroup : searchShardsResponse.getGroups()) {, +                //add the cluster name to the remote index names for indices disambiguation, +                //this ends up in the hits returned with the search response, +                ShardId shardId = clusterSearchShardsGroup.getShardId();, +                Index remoteIndex = shardId.getIndex();, +                Index index = new Index(clusterAlias + RemoteClusterAware.REMOTE_CLUSTER_INDEX_SEPARATOR + remoteIndex.getName(),, +                    remoteIndex.getUUID());, +                OriginalIndices originalIndices = remoteIndicesByCluster.get(clusterAlias);, +                assert originalIndices != null;, +                SearchShardIterator shardIterator = new SearchShardIterator(new ShardId(index, shardId.getId()),, +                    Arrays.asList(clusterSearchShardsGroup.getShards()), originalIndices);]