[+++ b/config/elasticsearch.yml, +#index.indexing.slowlog.threshold.index.warn: 10s, +#index.indexing.slowlog.threshold.index.info: 5s, +#index.indexing.slowlog.threshold.index.debug: 2s, +#index.indexing.slowlog.threshold.index.trace: 500ms, +, +++ b/config/elasticsearch.yml, +#index.indexing.slowlog.threshold.index.warn: 10s, +#index.indexing.slowlog.threshold.index.info: 5s, +#index.indexing.slowlog.threshold.index.debug: 2s, +#index.indexing.slowlog.threshold.index.trace: 500ms, +, +++ b/config/logging.yml, +  index.indexing.slowlog: TRACE, index_indexing_slow_log_file, +  index.indexing.slowlog: false, +, +  index_indexing_slow_log_file:, +    type: dailyRollingFile, +    file: ${path.logs}/${cluster.name}_index_indexing_slowlog.log, +    datePattern: "'.'yyyy-MM-dd", +    layout:, +      type: pattern, +      conversionPattern: "[%d{ISO8601}][%-5p][%-25c] %m%n", +++ b/config/elasticsearch.yml, +#index.indexing.slowlog.threshold.index.warn: 10s, +#index.indexing.slowlog.threshold.index.info: 5s, +#index.indexing.slowlog.threshold.index.debug: 2s, +#index.indexing.slowlog.threshold.index.trace: 500ms, +, +++ b/config/logging.yml, +  index.indexing.slowlog: TRACE, index_indexing_slow_log_file, +  index.indexing.slowlog: false, +, +  index_indexing_slow_log_file:, +    type: dailyRollingFile, +    file: ${path.logs}/${cluster.name}_index_indexing_slowlog.log, +    datePattern: "'.'yyyy-MM-dd", +    layout:, +      type: pattern, +      conversionPattern: "[%d{ISO8601}][%-5p][%-25c] %m%n", +++ b/src/main/java/org/elasticsearch/index/indexing/ShardIndexingModule.java, +import org.elasticsearch.index.indexing.slowlog.ShardSlowLogIndexingService;, +        bind(ShardSlowLogIndexingService.class).asEagerSingleton();, +++ b/config/elasticsearch.yml, +#index.indexing.slowlog.threshold.index.warn: 10s, +#index.indexing.slowlog.threshold.index.info: 5s, +#index.indexing.slowlog.threshold.index.debug: 2s, +#index.indexing.slowlog.threshold.index.trace: 500ms, +, +++ b/config/logging.yml, +  index.indexing.slowlog: TRACE, index_indexing_slow_log_file, +  index.indexing.slowlog: false, +, +  index_indexing_slow_log_file:, +    type: dailyRollingFile, +    file: ${path.logs}/${cluster.name}_index_indexing_slowlog.log, +    datePattern: "'.'yyyy-MM-dd", +    layout:, +      type: pattern, +      conversionPattern: "[%d{ISO8601}][%-5p][%-25c] %m%n", +++ b/src/main/java/org/elasticsearch/index/indexing/ShardIndexingModule.java, +import org.elasticsearch.index.indexing.slowlog.ShardSlowLogIndexingService;, +        bind(ShardSlowLogIndexingService.class).asEagerSingleton();, +++ b/src/main/java/org/elasticsearch/index/indexing/ShardIndexingService.java, +import org.elasticsearch.index.indexing.slowlog.ShardSlowLogIndexingService;, +    private final ShardSlowLogIndexingService slowLog;, +, +    public ShardIndexingService(ShardId shardId, @IndexSettings Settings indexSettings, ShardSlowLogIndexingService slowLog) {, +        this.slowLog = slowLog;, +        totalStats.indexCurrent.inc();, +        typeStats(create.type()).indexCurrent.inc();, +        totalStats.indexCurrent.dec();, +        StatsHolder typeStats = typeStats(create.type());, +        typeStats.indexMetric.inc(took);, +        typeStats.indexCurrent.dec();, +        slowLog.postCreate(create, took);, +        slowLog.postIndex(index, took);, +++ b/config/elasticsearch.yml, +#index.indexing.slowlog.threshold.index.warn: 10s, +#index.indexing.slowlog.threshold.index.info: 5s, +#index.indexing.slowlog.threshold.index.debug: 2s, +#index.indexing.slowlog.threshold.index.trace: 500ms, +, +++ b/config/logging.yml, +  index.indexing.slowlog: TRACE, index_indexing_slow_log_file, +  index.indexing.slowlog: false, +, +  index_indexing_slow_log_file:, +    type: dailyRollingFile, +    file: ${path.logs}/${cluster.name}_index_indexing_slowlog.log, +    datePattern: "'.'yyyy-MM-dd", +    layout:, +      type: pattern, +      conversionPattern: "[%d{ISO8601}][%-5p][%-25c] %m%n", +++ b/src/main/java/org/elasticsearch/index/indexing/ShardIndexingModule.java, +import org.elasticsearch.index.indexing.slowlog.ShardSlowLogIndexingService;, +        bind(ShardSlowLogIndexingService.class).asEagerSingleton();, +++ b/src/main/java/org/elasticsearch/index/indexing/ShardIndexingService.java, +import org.elasticsearch.index.indexing.slowlog.ShardSlowLogIndexingService;, +    private final ShardSlowLogIndexingService slowLog;]