[+++ /dev/null, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusRequest;, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.protocol.xpack.XPackUsageRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusRequest;, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.protocol.xpack.XPackUsageRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusRequest;, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.protocol.xpack.XPackUsageRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ /dev/null, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusRequest;, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.protocol.xpack.XPackUsageRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusRequest;, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.protocol.xpack.XPackUsageRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +++ b/docs/reference/rest-api/info.asciidoc, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusRequest;, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.protocol.xpack.XPackUsageRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +++ b/docs/reference/rest-api/info.asciidoc, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplanation.java, +import java.time.Instant;, +        builder.field("at",, +            UnassignedInfo.DATE_TIME_FORMATTER.format(Instant.ofEpochMilli(unassignedInfo.getUnassignedTimeInMillis())));, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusRequest;, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.protocol.xpack.XPackUsageRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +++ b/docs/reference/rest-api/info.asciidoc, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplanation.java, +import java.time.Instant;, +        builder.field("at",, +            UnassignedInfo.DATE_TIME_FORMATTER.format(Instant.ofEpochMilli(unassignedInfo.getUnassignedTimeInMillis())));, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexGraveyard.java, +import org.elasticsearch.common.time.CompoundDateTimeFormatter;, +import org.elasticsearch.common.time.DateFormatters;, +import java.time.Instant;, +import java.time.ZoneOffset;, +        static final CompoundDateTimeFormatter FORMATTER =, +            DateFormatters.forPattern("strict_date_optional_time").withZone(ZoneOffset.UTC);, +, +            String date = FORMATTER.format(Instant.ofEpochMilli(deleteDateInMillis));, +            return "[index=" + index + ", deleteDate=" + date + "]";, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusRequest;, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.protocol.xpack.XPackUsageRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +++ b/docs/reference/rest-api/info.asciidoc, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplanation.java, +import java.time.Instant;, +        builder.field("at",]