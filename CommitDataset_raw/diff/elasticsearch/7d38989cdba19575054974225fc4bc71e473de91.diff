[+++ b/pom.xml, +        <lucene.version>5.1.0</lucene.version>, +        <lucene.maven.version>5.1.0-snapshot-1671894</lucene.maven.version>, +            <url>https://download.elastic.co/lucenesnapshots/1671894</url>, +++ b/pom.xml, +        <lucene.version>5.1.0</lucene.version>, +        <lucene.maven.version>5.1.0-snapshot-1671894</lucene.maven.version>, +            <url>https://download.elastic.co/lucenesnapshots/1671894</url>, +++ b/src/main/java/org/apache/lucene/search/postingshighlight/XPostingsHighlighter.java, +                termsEnum = t.iterator(null);, +        public void stringField(FieldInfo fieldInfo, String value) throws IOException {, +++ b/pom.xml, +        <lucene.version>5.1.0</lucene.version>, +        <lucene.maven.version>5.1.0-snapshot-1671894</lucene.maven.version>, +            <url>https://download.elastic.co/lucenesnapshots/1671894</url>, +++ b/src/main/java/org/apache/lucene/search/postingshighlight/XPostingsHighlighter.java, +                termsEnum = t.iterator(null);, +        public void stringField(FieldInfo fieldInfo, String value) throws IOException {, +++ b/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_2_0_0 = new Version(V_2_0_0_ID, true, org.apache.lucene.util.Version.LUCENE_5_1_0);, +++ b/pom.xml, +        <lucene.version>5.1.0</lucene.version>, +        <lucene.maven.version>5.1.0-snapshot-1671894</lucene.maven.version>, +            <url>https://download.elastic.co/lucenesnapshots/1671894</url>, +++ b/src/main/java/org/apache/lucene/search/postingshighlight/XPostingsHighlighter.java, +                termsEnum = t.iterator(null);, +        public void stringField(FieldInfo fieldInfo, String value) throws IOException {, +++ b/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_2_0_0 = new Version(V_2_0_0_ID, true, org.apache.lucene.util.Version.LUCENE_5_1_0);, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.search.aggregations.AbstractAggregationBuilder;, +import org.elasticsearch.search.aggregations.reducers.ReducerBuilder;, +     * Delegates to {@link PercolateSourceBuilder#addAggregation(AbstractAggregationBuilder)}, +    public PercolateRequestBuilder addAggregation(AbstractAggregationBuilder aggregationBuilder) {, +++ b/pom.xml, +        <lucene.version>5.1.0</lucene.version>, +        <lucene.maven.version>5.1.0-snapshot-1671894</lucene.maven.version>, +            <url>https://download.elastic.co/lucenesnapshots/1671894</url>, +++ b/src/main/java/org/apache/lucene/search/postingshighlight/XPostingsHighlighter.java, +                termsEnum = t.iterator(null);, +        public void stringField(FieldInfo fieldInfo, String value) throws IOException {, +++ b/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_2_0_0 = new Version(V_2_0_0_ID, true, org.apache.lucene.util.Version.LUCENE_5_1_0);, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.search.aggregations.AbstractAggregationBuilder;, +import org.elasticsearch.search.aggregations.reducers.ReducerBuilder;, +     * Delegates to {@link PercolateSourceBuilder#addAggregation(AbstractAggregationBuilder)}, +    public PercolateRequestBuilder addAggregation(AbstractAggregationBuilder aggregationBuilder) {, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateShardResponse.java, +, +import org.elasticsearch.common.bytes.BytesReference;, +import org.elasticsearch.search.aggregations.reducers.Reducer;, +import org.elasticsearch.search.aggregations.reducers.ReducerStreams;, +import org.elasticsearch.search.aggregations.reducers.SiblingReducer;, +    private List<SiblingReducer> reducers;, +            this.reducers = result.reducers();, +    public List<SiblingReducer> reducers() {, +        return reducers;, +    }, +, +        if (in.readBoolean()) {, +            int reducersSize = in.readVInt();, +            List<SiblingReducer> reducers = new ArrayList<>(reducersSize);, +            for (int i = 0; i < reducersSize; i++) {, +                BytesReference type = in.readBytesReference();, +                Reducer reducer = ReducerStreams.stream(type).readResult(in);, +                reducers.add((SiblingReducer) reducer);, +            }, +            this.reducers = reducers;, +        }, +        if (reducers == null) {, +            out.writeBoolean(false);, +        } else {, +            out.writeBoolean(true);, +            out.writeVInt(reducers.size());, +            for (Reducer reducer : reducers) {, +                out.writeBytesReference(reducer.type().stream());, +                reducer.writeTo(out);, +            }, +        }, +++ b/pom.xml, +        <lucene.version>5.1.0</lucene.version>, +        <lucene.maven.version>5.1.0-snapshot-1671894</lucene.maven.version>, +            <url>https://download.elastic.co/lucenesnapshots/1671894</url>, +++ b/src/main/java/org/apache/lucene/search/postingshighlight/XPostingsHighlighter.java, +                termsEnum = t.iterator(null);, +        public void stringField(FieldInfo fieldInfo, String value) throws IOException {, +++ b/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_2_0_0 = new Version(V_2_0_0_ID, true, org.apache.lucene.util.Version.LUCENE_5_1_0);, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.search.aggregations.AbstractAggregationBuilder;, +import org.elasticsearch.search.aggregations.reducers.ReducerBuilder;, +     * Delegates to {@link PercolateSourceBuilder#addAggregation(AbstractAggregationBuilder)}, +    public PercolateRequestBuilder addAggregation(AbstractAggregationBuilder aggregationBuilder) {, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateShardResponse.java, +, +import org.elasticsearch.common.bytes.BytesReference;, +import org.elasticsearch.search.aggregations.reducers.Reducer;, +import org.elasticsearch.search.aggregations.reducers.ReducerStreams;, +import org.elasticsearch.search.aggregations.reducers.SiblingReducer;]