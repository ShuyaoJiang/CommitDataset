[+++ b/src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java, +                        new BytesTransportRequest(bytes, node.version()),, +    private class PublishClusterStateRequestHandler extends BaseTransportRequestHandler<BytesTransportRequest> {, +        public BytesTransportRequest newInstance() {, +            return new BytesTransportRequest();, +        public void messageReceived(BytesTransportRequest request, final TransportChannel channel) throws Exception {, +            Compressor compressor = CompressorFactory.compressor(request.bytes());, +                in = CachedStreamInput.cachedHandlesCompressed(compressor, request.bytes().streamInput());, +                in = CachedStreamInput.cachedHandles(request.bytes().streamInput());, +            in.setVersion(request.version());, +++ b/src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java, +                        new BytesTransportRequest(bytes, node.version()),, +    private class PublishClusterStateRequestHandler extends BaseTransportRequestHandler<BytesTransportRequest> {, +        public BytesTransportRequest newInstance() {, +            return new BytesTransportRequest();, +        public void messageReceived(BytesTransportRequest request, final TransportChannel channel) throws Exception {, +            Compressor compressor = CompressorFactory.compressor(request.bytes());, +                in = CachedStreamInput.cachedHandlesCompressed(compressor, request.bytes().streamInput());, +                in = CachedStreamInput.cachedHandles(request.bytes().streamInput());, +            in.setVersion(request.version());, +++ b/src/main/java/org/elasticsearch/transport/BytesTransportRequest.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.transport;, +, +import org.elasticsearch.Version;, +import org.elasticsearch.common.bytes.BytesReference;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +, +import java.io.IOException;, +, +/**, + * A specialized, bytes only request, that can potentially be optimized on the network, + * layer, specifically for teh same large buffer send to several nodes., + */, +public class BytesTransportRequest extends TransportRequest {, +, +    BytesReference bytes;, +    Version version;, +, +    public BytesTransportRequest() {, +, +    }, +, +    public BytesTransportRequest(BytesReference bytes, Version version) {, +        this.bytes = bytes;, +        this.version = version;, +    }, +, +    public Version version() {, +        return this.version;, +    }, +, +    public BytesReference bytes() {, +        return this.bytes;, +    }, +, +    @Override, +    public void readFrom(StreamInput in) throws IOException {, +        super.readFrom(in);, +        bytes = in.readBytesReference();, +        version = in.getVersion();, +    }, +, +    /**, +     * Writes the data in a "thin" manner, without the actual bytes, assumes, +     * the actual bytes will be appended right after this content., +     */, +    public void writeThin(StreamOutput out) throws IOException {, +        super.writeTo(out);, +        out.writeVInt(bytes.length());, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        super.writeTo(out);, +        out.writeBytesReference(bytes);, +    }, +}, +++ b/src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java, +                        new BytesTransportRequest(bytes, node.version()),, +    private class PublishClusterStateRequestHandler extends BaseTransportRequestHandler<BytesTransportRequest> {]