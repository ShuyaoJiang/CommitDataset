[+++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestCloseJobAction.java, +    public RestCloseJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(CloseJobAction.INSTANCE, request, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestCloseJobAction.java, +    public RestCloseJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(CloseJobAction.INSTANCE, request, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestDeleteJobAction.java, +    public RestDeleteJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(DeleteJobAction.INSTANCE, deleteJobRequest, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestCloseJobAction.java, +    public RestCloseJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(CloseJobAction.INSTANCE, request, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestDeleteJobAction.java, +    public RestDeleteJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(DeleteJobAction.INSTANCE, deleteJobRequest, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestFlushJobAction.java, +    public RestFlushJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(FlushJobAction.INSTANCE, request, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestCloseJobAction.java, +    public RestCloseJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(CloseJobAction.INSTANCE, request, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestDeleteJobAction.java, +    public RestDeleteJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(DeleteJobAction.INSTANCE, deleteJobRequest, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestFlushJobAction.java, +    public RestFlushJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(FlushJobAction.INSTANCE, request, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestGetJobsAction.java, +    public RestGetJobsAction(Settings settings, RestController controller) {, +        return channel -> client.execute(GetJobsAction.INSTANCE, request, new RestToXContentListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestCloseJobAction.java, +    public RestCloseJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(CloseJobAction.INSTANCE, request, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestDeleteJobAction.java, +    public RestDeleteJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(DeleteJobAction.INSTANCE, deleteJobRequest, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestFlushJobAction.java, +    public RestFlushJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(FlushJobAction.INSTANCE, request, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestGetJobsAction.java, +    public RestGetJobsAction(Settings settings, RestController controller) {, +        return channel -> client.execute(GetJobsAction.INSTANCE, request, new RestToXContentListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestGetJobsStatsAction.java, +    public RestGetJobsStatsAction(Settings settings, RestController controller) {, +        return channel -> client.execute(GetJobsStatsAction.INSTANCE, request, new RestToXContentListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestCloseJobAction.java, +    public RestCloseJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(CloseJobAction.INSTANCE, request, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestDeleteJobAction.java, +    public RestDeleteJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(DeleteJobAction.INSTANCE, deleteJobRequest, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestFlushJobAction.java, +    public RestFlushJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(FlushJobAction.INSTANCE, request, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestGetJobsAction.java, +    public RestGetJobsAction(Settings settings, RestController controller) {, +        return channel -> client.execute(GetJobsAction.INSTANCE, request, new RestToXContentListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestGetJobsStatsAction.java, +    public RestGetJobsStatsAction(Settings settings, RestController controller) {, +        return channel -> client.execute(GetJobsStatsAction.INSTANCE, request, new RestToXContentListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestOpenJobAction.java, +import org.elasticsearch.xpack.ml.action.PostDataAction;, +    public RestOpenJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(OpenJobAction.INSTANCE, request, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestCloseJobAction.java, +    public RestCloseJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(CloseJobAction.INSTANCE, request, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestDeleteJobAction.java, +    public RestDeleteJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(DeleteJobAction.INSTANCE, deleteJobRequest, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestFlushJobAction.java, +    public RestFlushJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(FlushJobAction.INSTANCE, request, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestGetJobsAction.java, +    public RestGetJobsAction(Settings settings, RestController controller) {, +        return channel -> client.execute(GetJobsAction.INSTANCE, request, new RestToXContentListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestGetJobsStatsAction.java, +    public RestGetJobsStatsAction(Settings settings, RestController controller) {, +        return channel -> client.execute(GetJobsStatsAction.INSTANCE, request, new RestToXContentListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestOpenJobAction.java, +import org.elasticsearch.xpack.ml.action.PostDataAction;, +    public RestOpenJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(OpenJobAction.INSTANCE, request, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestPostDataAction.java, +    public RestPostDataAction(Settings settings, RestController controller) {, +        return channel -> client.execute(PostDataAction.INSTANCE, request, new RestStatusToXContentListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestCloseJobAction.java, +    public RestCloseJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(CloseJobAction.INSTANCE, request, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestDeleteJobAction.java, +    public RestDeleteJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(DeleteJobAction.INSTANCE, deleteJobRequest, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestFlushJobAction.java, +    public RestFlushJobAction(Settings settings, RestController controller) {, +        return channel -> client.execute(FlushJobAction.INSTANCE, request, new AcknowledgedRestListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestGetJobsAction.java, +    public RestGetJobsAction(Settings settings, RestController controller) {, +        return channel -> client.execute(GetJobsAction.INSTANCE, request, new RestToXContentListener<>(channel));, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/ml/rest/job/RestGetJobsStatsAction.java, +    public RestGetJobsStatsAction(Settings settings, RestController controller) {]