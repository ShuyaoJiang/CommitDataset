[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/NodeAllocation.java, +        YES {, +        NO {, +            @Override boolean allocate() {, +                return false;, +            }},, +        THROTTLE {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/NodeAllocation.java, +        YES {, +        NO {, +            @Override boolean allocate() {, +                return false;, +            }},, +        THROTTLE {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/NodeAllocations.java, +        Decision ret = Decision.YES;, +            if (decision == Decision.NO) {, +                return Decision.NO;, +            } else if (decision == Decision.THROTTLE) {, +                ret = Decision.THROTTLE;, +        return ret;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/NodeAllocation.java, +        YES {, +        NO {, +            @Override boolean allocate() {, +                return false;, +            }},, +        THROTTLE {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/NodeAllocations.java, +        Decision ret = Decision.YES;, +            if (decision == Decision.NO) {, +                return Decision.NO;, +            } else if (decision == Decision.THROTTLE) {, +                ret = Decision.THROTTLE;, +        return ret;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/ReplicaAfterPrimaryActiveNodeAllocation.java, +            return Decision.YES;, +            return Decision.NO;, +        return Decision.YES;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/NodeAllocation.java, +        YES {, +        NO {, +            @Override boolean allocate() {, +                return false;, +            }},, +        THROTTLE {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/NodeAllocations.java, +        Decision ret = Decision.YES;, +            if (decision == Decision.NO) {, +                return Decision.NO;, +            } else if (decision == Decision.THROTTLE) {, +                ret = Decision.THROTTLE;, +        return ret;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/ReplicaAfterPrimaryActiveNodeAllocation.java, +            return Decision.YES;, +            return Decision.NO;, +        return Decision.YES;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/SameShardNodeAllocation.java, +                return Decision.NO;, +        return Decision.YES;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/NodeAllocation.java, +        YES {, +        NO {, +            @Override boolean allocate() {, +                return false;, +            }},, +        THROTTLE {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/NodeAllocations.java, +        Decision ret = Decision.YES;, +            if (decision == Decision.NO) {, +                return Decision.NO;, +            } else if (decision == Decision.THROTTLE) {, +                ret = Decision.THROTTLE;, +        return ret;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/ReplicaAfterPrimaryActiveNodeAllocation.java, +            return Decision.YES;, +            return Decision.NO;, +        return Decision.YES;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/SameShardNodeAllocation.java, +                return Decision.NO;, +        return Decision.YES;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/ShardAllocationModule.java, +        decidersBinder.addBinding().to(ReplicaAfterPrimaryActiveNodeAllocation.class);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/NodeAllocation.java, +        YES {, +        NO {, +            @Override boolean allocate() {, +                return false;, +            }},, +        THROTTLE {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/NodeAllocations.java, +        Decision ret = Decision.YES;, +            if (decision == Decision.NO) {, +                return Decision.NO;, +            } else if (decision == Decision.THROTTLE) {, +                ret = Decision.THROTTLE;, +        return ret;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/ReplicaAfterPrimaryActiveNodeAllocation.java, +            return Decision.YES;, +            return Decision.NO;]