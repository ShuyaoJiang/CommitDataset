[+++ b/test/framework/src/test/java/org/elasticsearch/test/disruption/NetworkDisruptionIT.java, +import org.elasticsearch.cluster.NodeConnectionsService;, +import org.elasticsearch.common.collect.Tuple;, +import org.elasticsearch.common.settings.Settings;, +@ESIntegTestCase.ClusterScope(scope = ESIntegTestCase.Scope.TEST, numDataNodes = 0, autoMinMasterNodes = false), +    private static final Settings DISRUPTION_TUNED_SETTINGS = Settings.builder(), +            .put(NodeConnectionsService.CLUSTER_NODE_RECONNECT_INTERVAL_SETTING.getKey(), "2s"), +            .build();, +    /**, +     * Creates 3 to 5 mixed-node cluster and splits it into 2 parts., +     * The first part is guaranteed to have at least the majority of the nodes,, +     * so that master could be elected on this side., +     */, +    private Tuple<Set<String>, Set<String>> prepareDisruptedCluster() {, +        int numOfNodes = randomIntBetween(3, 5);, +        internalCluster().setBootstrapMasterNodeIndex(numOfNodes - 1);, +        Set<String> nodes = new HashSet<>(internalCluster().startNodes(numOfNodes, DISRUPTION_TUNED_SETTINGS));, +        ensureGreen();, +        assertThat(nodes.size(), greaterThanOrEqualTo(3));, +        int majority = nodes.size() / 2 + 1;, +        Set<String> side1 = new HashSet<>(randomSubsetOf(randomIntBetween(majority, nodes.size() - 1), nodes));, +        assertThat(side1.size(), greaterThanOrEqualTo(majority));, +, +        return Tuple.tuple(side1, side2);, +    }, +, +    public void testClearDisruptionSchemeWhenNodeIsDown() throws IOException {, +        Tuple<Set<String>, Set<String>> sides = prepareDisruptedCluster();, +, +        internalCluster().stopRandomNode(InternalTestCluster.nameFilter(randomFrom(sides.v2())));, +    }, +, +    public void testNetworkPartitionRemovalRestoresConnections() throws Exception {, +        Tuple<Set<String>, Set<String>> sides = prepareDisruptedCluster();, +        Set<String> side1 = sides.v1();, +        Set<String> side2 = sides.v2();, +, +        // sends some requests to the majority side part, +        client(randomFrom(side1)).admin().cluster().prepareNodesInfo().get();, +        internalCluster().clearDisruptionScheme();, +        // check all connections are restored, +                // TODO assertBusy should not be here, see https://github.com/elastic/elasticsearch/issues/38348, +                assertBusy(() -> {, +                });]