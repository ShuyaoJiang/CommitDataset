[+++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.apache.lucene.index.SegmentInfos.FindSegmentsFile;, +import java.io.FileNotFoundException;, +    , +    // LUCENE UPGRADE this is a workaround for LUCENE-4870, +    public static final boolean indexExists(final Directory directory) {, +        try {, +            new FindSegmentsFile(directory) {, +                @Override, +                protected Object doBody(String segmentFileName) throws IOException {, +                    try {, +                        new SegmentInfos().read(directory, segmentFileName);, +                    } catch (FileNotFoundException ex) {, +                        if (!directory.fileExists(segmentFileName)) {, +                            throw ex;, +                        }, +                        // this is ok - we might have run into a access, +                        // exception here or even worse a too many open files exception., +                    }, +                    return null;, +                }, +            }.run();, +            return true;, +        } catch (IOException ioe) {, +            return false;, +        }, +    }, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.apache.lucene.index.SegmentInfos.FindSegmentsFile;, +import java.io.FileNotFoundException;, +    , +    // LUCENE UPGRADE this is a workaround for LUCENE-4870, +    public static final boolean indexExists(final Directory directory) {, +        try {, +            new FindSegmentsFile(directory) {, +                @Override, +                protected Object doBody(String segmentFileName) throws IOException {, +                    try {, +                        new SegmentInfos().read(directory, segmentFileName);, +                    } catch (FileNotFoundException ex) {, +                        if (!directory.fileExists(segmentFileName)) {, +                            throw ex;, +                        }, +                        // this is ok - we might have run into a access, +                        // exception here or even worse a too many open files exception., +                    }, +                    return null;, +                }, +            }.run();, +            return true;, +        } catch (IOException ioe) {, +            return false;, +        }, +    }, +++ b/src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java, +import org.apache.lucene.index.SegmentInfos.FindSegmentsFile;, +import org.apache.lucene.store.Directory;, +import java.io.FileNotFoundException;, +                if (Lucene.indexExists(store.directory())) {, +            boolean create = !Lucene.indexExists(store.directory());, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.apache.lucene.index.SegmentInfos.FindSegmentsFile;, +import java.io.FileNotFoundException;, +    , +    // LUCENE UPGRADE this is a workaround for LUCENE-4870, +    public static final boolean indexExists(final Directory directory) {, +        try {, +            new FindSegmentsFile(directory) {, +                @Override, +                protected Object doBody(String segmentFileName) throws IOException {, +                    try {, +                        new SegmentInfos().read(directory, segmentFileName);, +                    } catch (FileNotFoundException ex) {, +                        if (!directory.fileExists(segmentFileName)) {, +                            throw ex;, +                        }, +                        // this is ok - we might have run into a access, +                        // exception here or even worse a too many open files exception., +                    }, +                    return null;, +                }, +            }.run();, +            return true;, +        } catch (IOException ioe) {, +            return false;, +        }, +    }, +++ b/src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java, +import org.apache.lucene.index.SegmentInfos.FindSegmentsFile;, +import org.apache.lucene.store.Directory;, +import java.io.FileNotFoundException;, +                if (Lucene.indexExists(store.directory())) {, +            boolean create = !Lucene.indexExists(store.directory());, +++ b/src/main/java/org/elasticsearch/index/gateway/blobstore/BlobStoreIndexShardGateway.java, +            if (Lucene.indexExists(store.directory())) {, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.apache.lucene.index.SegmentInfos.FindSegmentsFile;, +import java.io.FileNotFoundException;, +    , +    // LUCENE UPGRADE this is a workaround for LUCENE-4870]