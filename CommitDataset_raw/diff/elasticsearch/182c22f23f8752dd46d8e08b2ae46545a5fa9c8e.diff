[+++ b/TESTING.asciidoc, +The REST tests are run automatically when executing the "gradle check" command. To run only the, +gradle :distribution:tar:integTest   \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT, +---------------------------------------------------------------------------, +, +A specific test case can be run with, +, +---------------------------------------------------------------------------, +gradle :distribution:tar:integTest \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT \, +  -Dtests.method="test {p0=cat.shards/10_basic/Help}", +++ b/TESTING.asciidoc, +The REST tests are run automatically when executing the "gradle check" command. To run only the, +gradle :distribution:tar:integTest   \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT, +---------------------------------------------------------------------------, +, +A specific test case can be run with, +, +---------------------------------------------------------------------------, +gradle :distribution:tar:integTest \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT \, +  -Dtests.method="test {p0=cat.shards/10_basic/Help}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        configurePrecommit(project), +        project.ext.compactProfile = 'compact3', +                // compile with compact 3 profile by default, +                // NOTE: this is just a compile time check: does not replace testing with a compact3 JRE, +                if (project.compactProfile != 'full') {, +                    options.compilerArgs << '-profile' << project.compactProfile, +                }, +, +    private static configurePrecommit(Project project) {, +        Task precommit = PrecommitTasks.create(project, true), +        project.check.dependsOn(precommit), +        project.test.mustRunAfter(precommit), +        project.dependencyLicenses.dependencies = project.configurations.runtime - project.configurations.provided, +    }, +++ b/TESTING.asciidoc, +The REST tests are run automatically when executing the "gradle check" command. To run only the, +gradle :distribution:tar:integTest   \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT, +---------------------------------------------------------------------------, +, +A specific test case can be run with, +, +---------------------------------------------------------------------------, +gradle :distribution:tar:integTest \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT \, +  -Dtests.method="test {p0=cat.shards/10_basic/Help}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        configurePrecommit(project), +        project.ext.compactProfile = 'compact3', +                // compile with compact 3 profile by default, +                // NOTE: this is just a compile time check: does not replace testing with a compact3 JRE, +                if (project.compactProfile != 'full') {, +                    options.compilerArgs << '-profile' << project.compactProfile, +                }, +, +    private static configurePrecommit(Project project) {, +        Task precommit = PrecommitTasks.create(project, true), +        project.check.dependsOn(precommit), +        project.test.mustRunAfter(precommit), +        project.dependencyLicenses.dependencies = project.configurations.runtime - project.configurations.provided, +    }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/DependencyLicensesTask.groovy, +import org.gradle.api.*, +/**, + * A task to check licenses for dependencies., + *, + * There are two parts to the check:, + * <ul>, + *   <li>LICENSE and NOTICE files</li>, + *   <li>SHA checksums for each dependency jar</li>, + * </ul>, + *, + * The directory to find the license and sha files in defaults to the dir @{code licenses}, + * in the project directory for this task. You can override this directory:, + * <pre>, + *   dependencyLicenses {, + *     licensesDir = project.file('mybetterlicensedir'), + *   }, + * </pre>, + *, + * The jar files to check default to the dependencies from the default configuration. You, + * can override this, for example, to only check compile dependencies:, + * <pre>, + *   dependencyLicenses {, + *     dependencies = project.configurations.compile, + *   }, + * </pre>, + *, + * Every jar must have a {@code .sha1} file in the licenses dir. These can be managed, + * automatically using the {@code updateShas} helper task that is created along, + * with this task. It will add {@code .sha1} files for new jars that are in dependencies, + * and remove old {@code .sha1} files that are no longer needed., + *, + * Every jar must also have a LICENSE and NOTICE file. However, multiple jars can share, + * LICENSE and NOTICE files by mapping a pattern to the same name.]