[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobDataDeleter.java, +                    ModelSnapshot.TYPE.getPreferredName(), ModelSnapshot.v54DocumentId(modelSnapshot)));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobDataDeleter.java, +                    ModelSnapshot.TYPE.getPreferredName(), ModelSnapshot.v54DocumentId(modelSnapshot)));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobProvider.java, +                // look for both old and new formats, +                .setQuery(QueryBuilders.idsQuery().addIds(DataCounts.documentId(jobId), DataCounts.v54DocumentId(jobId))), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobDataDeleter.java, +                    ModelSnapshot.TYPE.getPreferredName(), ModelSnapshot.v54DocumentId(modelSnapshot)));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobProvider.java, +                // look for both old and new formats, +                .setQuery(QueryBuilders.idsQuery().addIds(DataCounts.documentId(jobId), DataCounts.v54DocumentId(jobId))), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobStorageDeletionTask.java, +                Quantiles.v54DocumentId(jobId)));, +                CategorizerState.v54DocumentId(jobId, docNum)));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobDataDeleter.java, +                    ModelSnapshot.TYPE.getPreferredName(), ModelSnapshot.v54DocumentId(modelSnapshot)));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobProvider.java, +                // look for both old and new formats, +                .setQuery(QueryBuilders.idsQuery().addIds(DataCounts.documentId(jobId), DataCounts.v54DocumentId(jobId))), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobStorageDeletionTask.java, +                Quantiles.v54DocumentId(jobId)));, +                CategorizerState.v54DocumentId(jobId, docNum)));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/state/CategorizerState.java, +    public static final String v54DocumentId(String jobId, int docNum) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobDataDeleter.java, +                    ModelSnapshot.TYPE.getPreferredName(), ModelSnapshot.v54DocumentId(modelSnapshot)));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobProvider.java, +                // look for both old and new formats, +                .setQuery(QueryBuilders.idsQuery().addIds(DataCounts.documentId(jobId), DataCounts.v54DocumentId(jobId))), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobStorageDeletionTask.java, +                Quantiles.v54DocumentId(jobId)));, +                CategorizerState.v54DocumentId(jobId, docNum)));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/state/CategorizerState.java, +    public static final String v54DocumentId(String jobId, int docNum) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/state/DataCounts.java, +    public static String v54DocumentId(String jobId) {, +        return jobId + "-data-counts";, +    }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobDataDeleter.java, +                    ModelSnapshot.TYPE.getPreferredName(), ModelSnapshot.v54DocumentId(modelSnapshot)));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobProvider.java, +                // look for both old and new formats, +                .setQuery(QueryBuilders.idsQuery().addIds(DataCounts.documentId(jobId), DataCounts.v54DocumentId(jobId))), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobStorageDeletionTask.java, +                Quantiles.v54DocumentId(jobId)));, +                CategorizerState.v54DocumentId(jobId, docNum)));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/state/CategorizerState.java, +    public static final String v54DocumentId(String jobId, int docNum) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/state/DataCounts.java, +    public static String v54DocumentId(String jobId) {, +        return jobId + "-data-counts";, +    }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/state/ModelSnapshot.java, +            stateDocumentIds.add(ModelState.v54DocumentId(jobId, snapshotId, i));, +    public static String v54DocumentId(ModelSnapshot snapshot) {, +        return v54DocumentId(snapshot.getJobId(), snapshot.getSnapshotId());, +    public static String v54DocumentId(String jobId, String snapshotId) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobDataDeleter.java, +                    ModelSnapshot.TYPE.getPreferredName(), ModelSnapshot.v54DocumentId(modelSnapshot)));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobProvider.java, +                // look for both old and new formats, +                .setQuery(QueryBuilders.idsQuery().addIds(DataCounts.documentId(jobId), DataCounts.v54DocumentId(jobId))), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobStorageDeletionTask.java, +                Quantiles.v54DocumentId(jobId)));, +                CategorizerState.v54DocumentId(jobId, docNum)));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/state/CategorizerState.java, +    public static final String v54DocumentId(String jobId, int docNum) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/state/DataCounts.java, +    public static String v54DocumentId(String jobId) {, +        return jobId + "-data-counts";, +    }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/state/ModelSnapshot.java, +            stateDocumentIds.add(ModelState.v54DocumentId(jobId, snapshotId, i));, +    public static String v54DocumentId(ModelSnapshot snapshot) {, +        return v54DocumentId(snapshot.getJobId(), snapshot.getSnapshotId());, +    public static String v54DocumentId(String jobId, String snapshotId) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/state/ModelState.java, +    public static final String v54DocumentId(String jobId, String snapshotId, int docNum) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobDataDeleter.java, +                    ModelSnapshot.TYPE.getPreferredName(), ModelSnapshot.v54DocumentId(modelSnapshot)));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobProvider.java, +                // look for both old and new formats, +                .setQuery(QueryBuilders.idsQuery().addIds(DataCounts.documentId(jobId), DataCounts.v54DocumentId(jobId))), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobStorageDeletionTask.java, +                Quantiles.v54DocumentId(jobId)));, +                CategorizerState.v54DocumentId(jobId, docNum)));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/state/CategorizerState.java, +    public static final String v54DocumentId(String jobId, int docNum) {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/state/DataCounts.java, +    public static String v54DocumentId(String jobId) {, +        return jobId + "-data-counts";, +    }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/state/ModelSnapshot.java, +            stateDocumentIds.add(ModelState.v54DocumentId(jobId, snapshotId, i));, +    public static String v54DocumentId(ModelSnapshot snapshot) {]