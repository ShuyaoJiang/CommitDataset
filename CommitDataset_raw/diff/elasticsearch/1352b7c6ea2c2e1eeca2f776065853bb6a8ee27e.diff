[+++ b/core/cli/src/main/java/org/elasticsearch/cli/Command.java, +    public Command(String description) {, +        beforeExecute();, +     * Setup method to be executed before parsing or execution of the command being run. Any exceptions thrown by the, +     * method will not be cleanly caught by the parser., +     */, +    protected void beforeExecute() {}, +, +    /**, +++ b/core/cli/src/main/java/org/elasticsearch/cli/Command.java, +    public Command(String description) {, +        beforeExecute();, +     * Setup method to be executed before parsing or execution of the command being run. Any exceptions thrown by the, +     * method will not be cleanly caught by the parser., +     */, +    protected void beforeExecute() {}, +, +    /**, +++ b/core/cli/src/main/java/org/elasticsearch/cli/MultiCommand.java, +    public MultiCommand(String description) {, +        super(description);, +++ b/core/cli/src/main/java/org/elasticsearch/cli/Command.java, +    public Command(String description) {, +        beforeExecute();, +     * Setup method to be executed before parsing or execution of the command being run. Any exceptions thrown by the, +     * method will not be cleanly caught by the parser., +     */, +    protected void beforeExecute() {}, +, +    /**, +++ b/core/cli/src/main/java/org/elasticsearch/cli/MultiCommand.java, +    public MultiCommand(String description) {, +        super(description);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +        super("starts elasticsearch");, +    protected boolean shouldConfigureLoggingWithoutConfig() {, +        /*, +         * If we allow logging to be configured without a config before we are ready to read the log4j2.properties file, then we will fail, +         * to detect uses of logging before it is properly configured., +         */, +        return false;, +    }, +, +    @Override, +++ b/core/cli/src/main/java/org/elasticsearch/cli/Command.java, +    public Command(String description) {, +        beforeExecute();, +     * Setup method to be executed before parsing or execution of the command being run. Any exceptions thrown by the, +     * method will not be cleanly caught by the parser., +     */, +    protected void beforeExecute() {}, +, +    /**, +++ b/core/cli/src/main/java/org/elasticsearch/cli/MultiCommand.java, +    public MultiCommand(String description) {, +        super(description);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +        super("starts elasticsearch");, +    protected boolean shouldConfigureLoggingWithoutConfig() {, +        /*, +         * If we allow logging to be configured without a config before we are ready to read the log4j2.properties file, then we will fail, +         * to detect uses of logging before it is properly configured., +         */, +        return false;, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/bootstrap/ElasticsearchUncaughtExceptionHandler.java, +    // visible for testing, +    // visible for testing, +    // visible for testing, +    // visible for testing, +        AccessController.doPrivileged(new PrivilegedAction<Void>() {, +        });, +++ b/core/cli/src/main/java/org/elasticsearch/cli/Command.java, +    public Command(String description) {, +        beforeExecute();, +     * Setup method to be executed before parsing or execution of the command being run. Any exceptions thrown by the, +     * method will not be cleanly caught by the parser., +     */, +    protected void beforeExecute() {}, +, +    /**, +++ b/core/cli/src/main/java/org/elasticsearch/cli/MultiCommand.java, +    public MultiCommand(String description) {, +        super(description);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +        super("starts elasticsearch");, +    protected boolean shouldConfigureLoggingWithoutConfig() {, +        /*, +         * If we allow logging to be configured without a config before we are ready to read the log4j2.properties file, then we will fail, +         * to detect uses of logging before it is properly configured., +         */, +        return false;, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/bootstrap/ElasticsearchUncaughtExceptionHandler.java, +    // visible for testing, +    // visible for testing]