[+++ b/x-pack/qa/third-party/active-directory/src/test/java/org/elasticsearch/xpack/security/authc/ldap/ADLdapUserSearchSessionFactoryTests.java, +            builder.copy("xpack.security.authc.realms.ad-as-ldap-test." + k, k, settings);, +++ b/x-pack/qa/third-party/active-directory/src/test/java/org/elasticsearch/xpack/security/authc/ldap/ADLdapUserSearchSessionFactoryTests.java, +            builder.copy("xpack.security.authc.realms.ad-as-ldap-test." + k, k, settings);, +++ b/x-pack/qa/third-party/active-directory/src/test/java/org/elasticsearch/xpack/security/authc/ldap/ActiveDirectorySessionFactoryTests.java, +import org.elasticsearch.env.Environment;, +        RealmConfig config = configureRealm("ad-test", buildAdSettings(AD_LDAP_URL, AD_DOMAIN, false));, +    private RealmConfig configureRealm(String name, Settings settings) {, +        final Environment env = TestEnvironment.newEnvironment(globalSettings);, +        final Settings mergedSettings = Settings.builder(), +            .put(settings), +            .normalizePrefix("xpack.security.authc.realms." + name + "."), +            .put(globalSettings), +            .build();, +        this.sslService = new SSLService(mergedSettings, env);, +        return new RealmConfig(name, settings, globalSettings, env, new ThreadContext(globalSettings));, +    }, +, +        RealmConfig config = configureRealm("ad-test", buildAdSettings(adUrl, AD_DOMAIN, false));, +        RealmConfig config = configureRealm("ad-test", buildAdSettings(AD_LDAP_URL, AD_DOMAIN, false));, +        RealmConfig config = configureRealm("ad-test", settings);, +        RealmConfig config = configureRealm("ad-test", settings);, +        RealmConfig config = configureRealm("ad-test", settings);, +        RealmConfig config = configureRealm("ad-test", settings);, +        RealmConfig config = configureRealm("ad-test", settings);, +        RealmConfig config = configureRealm("ad-test", settings);, +        RealmConfig config = configureRealm("ad-as-ldap-test", settings);, +        RealmConfig config = configureRealm("ad-as-ldap-test", settings);, +        RealmConfig config = configureRealm("ad-test", buildAdSettings(AD_LDAP_URL, AD_DOMAIN, false, true));]