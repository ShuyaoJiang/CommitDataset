[+++ b/src/main/java/org/elasticsearch/common/lucene/search/AndFilter.java, +            // LUCENE 4 UPGRADE: For leave this null, until we figure out how to deal with deleted docs..., +            return filters.get(0).getDocIdSet(context, null);, +            // LUCENE 4 UPGRADE: For leave this null, until we figure out how to deal with deleted docs..., +            DocIdSet set = filter.getDocIdSet(context, null);, +++ b/src/main/java/org/elasticsearch/common/lucene/search/AndFilter.java, +            // LUCENE 4 UPGRADE: For leave this null, until we figure out how to deal with deleted docs..., +            return filters.get(0).getDocIdSet(context, null);, +            // LUCENE 4 UPGRADE: For leave this null, until we figure out how to deal with deleted docs..., +            DocIdSet set = filter.getDocIdSet(context, null);, +++ b/src/main/java/org/elasticsearch/common/lucene/search/NotDeletedFilter.java, +import org.apache.lucene.index.AtomicReaderContext;, +import org.apache.lucene.util.Bits;, +    public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws IOException {, +        DocIdSet docIdSet = filter.getDocIdSet(context, acceptDocs);, +        if (!context.reader().hasDeletions()) {, +        return new NotDeletedDocIdSet(docIdSet, context.reader().getLiveDocs());, +        private final Bits liveDocs;, +        NotDeletedDocIdSet(DocIdSet innerSet, Bits liveDocs) {, +            this.liveDocs = liveDocs;, +            return new NotDeletedDocIdSetIterator(iterator, liveDocs);, +        private final Bits liveDocs;, +        NotDeletedDocIdSetIterator(DocIdSetIterator innerIter, Bits liveDocs) {, +            this.liveDocs = liveDocs;, +        protected boolean match(int doc) {, +            return liveDocs.get(doc);, +++ b/src/main/java/org/elasticsearch/common/lucene/search/AndFilter.java, +            // LUCENE 4 UPGRADE: For leave this null, until we figure out how to deal with deleted docs..., +            return filters.get(0).getDocIdSet(context, null);, +            // LUCENE 4 UPGRADE: For leave this null, until we figure out how to deal with deleted docs..., +            DocIdSet set = filter.getDocIdSet(context, null);, +++ b/src/main/java/org/elasticsearch/common/lucene/search/NotDeletedFilter.java, +import org.apache.lucene.index.AtomicReaderContext;, +import org.apache.lucene.util.Bits;, +    public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws IOException {, +        DocIdSet docIdSet = filter.getDocIdSet(context, acceptDocs);, +        if (!context.reader().hasDeletions()) {, +        return new NotDeletedDocIdSet(docIdSet, context.reader().getLiveDocs());, +        private final Bits liveDocs;, +        NotDeletedDocIdSet(DocIdSet innerSet, Bits liveDocs) {, +            this.liveDocs = liveDocs;, +            return new NotDeletedDocIdSetIterator(iterator, liveDocs);, +        private final Bits liveDocs;, +        NotDeletedDocIdSetIterator(DocIdSetIterator innerIter, Bits liveDocs) {, +            this.liveDocs = liveDocs;, +        protected boolean match(int doc) {, +            return liveDocs.get(doc);, +++ b/src/main/java/org/elasticsearch/common/lucene/search/NotFilter.java, +import org.apache.lucene.index.AtomicReaderContext;, +import org.apache.lucene.util.Bits;, +    public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws IOException {, +        // LUCENE 4 UPGRADE: For leave acceptedDocs null, until we figure out how to deal with deleted docs..., +        DocIdSet set = filter.getDocIdSet(context, null);, +            return new AllDocSet(context.reader().maxDoc());, +            return new NotDocSet((DocSet) set, context.reader().maxDoc());, +        return new NotDocIdSet(set, context.reader().maxDoc());, +++ b/src/main/java/org/elasticsearch/common/lucene/search/AndFilter.java, +            // LUCENE 4 UPGRADE: For leave this null, until we figure out how to deal with deleted docs..., +            return filters.get(0).getDocIdSet(context, null);, +            // LUCENE 4 UPGRADE: For leave this null, until we figure out how to deal with deleted docs..., +            DocIdSet set = filter.getDocIdSet(context, null);, +++ b/src/main/java/org/elasticsearch/common/lucene/search/NotDeletedFilter.java, +import org.apache.lucene.index.AtomicReaderContext;, +import org.apache.lucene.util.Bits;, +    public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws IOException {, +        DocIdSet docIdSet = filter.getDocIdSet(context, acceptDocs);, +        if (!context.reader().hasDeletions()) {, +        return new NotDeletedDocIdSet(docIdSet, context.reader().getLiveDocs());, +        private final Bits liveDocs;, +        NotDeletedDocIdSet(DocIdSet innerSet, Bits liveDocs) {, +            this.liveDocs = liveDocs;, +            return new NotDeletedDocIdSetIterator(iterator, liveDocs);, +        private final Bits liveDocs;, +        NotDeletedDocIdSetIterator(DocIdSetIterator innerIter, Bits liveDocs) {, +            this.liveDocs = liveDocs;, +        protected boolean match(int doc) {, +            return liveDocs.get(doc);, +++ b/src/main/java/org/elasticsearch/common/lucene/search/NotFilter.java, +import org.apache.lucene.index.AtomicReaderContext;, +import org.apache.lucene.util.Bits;, +    public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws IOException {, +        // LUCENE 4 UPGRADE: For leave acceptedDocs null, until we figure out how to deal with deleted docs..., +        DocIdSet set = filter.getDocIdSet(context, null);, +            return new AllDocSet(context.reader().maxDoc());, +            return new NotDocSet((DocSet) set, context.reader().maxDoc());, +        return new NotDocIdSet(set, context.reader().maxDoc());, +++ b/src/main/java/org/elasticsearch/common/lucene/search/OrFilter.java, +import org.apache.lucene.index.AtomicReaderContext;, +import org.apache.lucene.util.Bits;, +    public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws IOException {, +            // LUCENE 4 UPGRADE: For leave acceptedDocs null, until we figure out how to deal with deleted docs..., +            return filters.get(0).getDocIdSet(context, null);, +            // LUCENE 4 UPGRADE: For leave acceptedDocs null, until we figure out how to deal with deleted docs..., +            DocIdSet set = filter.getDocIdSet(context, null);, +++ b/src/main/java/org/elasticsearch/common/lucene/search/AndFilter.java, +            // LUCENE 4 UPGRADE: For leave this null, until we figure out how to deal with deleted docs..., +            return filters.get(0).getDocIdSet(context, null);, +            // LUCENE 4 UPGRADE: For leave this null, until we figure out how to deal with deleted docs..., +            DocIdSet set = filter.getDocIdSet(context, null);, +++ b/src/main/java/org/elasticsearch/common/lucene/search/NotDeletedFilter.java]