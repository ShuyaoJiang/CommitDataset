[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/unit/ByteSizeValue.java, +    public static ByteSizeValue parseBytesSizeValue(String sValue) throws ElasticSearchParseException {, +        return parseBytesSizeValue(sValue, null);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/unit/ByteSizeValue.java, +    public static ByteSizeValue parseBytesSizeValue(String sValue) throws ElasticSearchParseException {, +        return parseBytesSizeValue(sValue, null);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/SourceFieldMapper.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +        public static final long COMPRESS_THRESHOLD = -1;, +        private long compressThreshold = -1;, +, +        public Builder compressThreshold(long compressThreshold) {, +            this.compressThreshold = compressThreshold;, +            return this;, +        }, +, +            return new SourceFieldMapper(name, enabled, compress, compressThreshold);, +    private long compressThreshold;, +, +        this(Defaults.NAME, Defaults.ENABLED, null, -1);, +    protected SourceFieldMapper(String name, boolean enabled, Boolean compress, long compressThreshold) {, +        this.compressThreshold = compressThreshold;, +            if (compressThreshold == -1 || data.length > compressThreshold) {, +        }, +        if (enabled == Defaults.ENABLED && compress == null && compressThreshold == -1) {, +        if (compressThreshold != -1) {, +            builder.field("compress_threshold", new ByteSizeValue(compressThreshold).toString());, +        }, +            if (sourceMergeWith.compressThreshold != -1) {, +                this.compressThreshold = sourceMergeWith.compressThreshold;, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/unit/ByteSizeValue.java, +    public static ByteSizeValue parseBytesSizeValue(String sValue) throws ElasticSearchParseException {, +        return parseBytesSizeValue(sValue, null);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/SourceFieldMapper.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +        public static final long COMPRESS_THRESHOLD = -1;, +        private long compressThreshold = -1;, +, +        public Builder compressThreshold(long compressThreshold) {, +            this.compressThreshold = compressThreshold;, +            return this;, +        }, +, +            return new SourceFieldMapper(name, enabled, compress, compressThreshold);, +    private long compressThreshold;, +, +        this(Defaults.NAME, Defaults.ENABLED, null, -1);, +    protected SourceFieldMapper(String name, boolean enabled, Boolean compress, long compressThreshold) {, +        this.compressThreshold = compressThreshold;, +            if (compressThreshold == -1 || data.length > compressThreshold) {, +        }, +        if (enabled == Defaults.ENABLED && compress == null && compressThreshold == -1) {, +        if (compressThreshold != -1) {, +            builder.field("compress_threshold", new ByteSizeValue(compressThreshold).toString());, +        }, +            if (sourceMergeWith.compressThreshold != -1) {, +                this.compressThreshold = sourceMergeWith.compressThreshold;, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/XContentDocumentMapperParser.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +            } else if (fieldName.equals("compress_threshold") && fieldNode != null) {, +                if (fieldNode instanceof Number) {, +                    builder.compressThreshold(((Number) fieldNode).longValue());, +                    builder.compress(true);, +                } else {, +                    builder.compressThreshold(ByteSizeValue.parseBytesSizeValue(fieldNode.toString()).bytes());, +                    builder.compress(true);, +                }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/unit/ByteSizeValue.java, +    public static ByteSizeValue parseBytesSizeValue(String sValue) throws ElasticSearchParseException {, +        return parseBytesSizeValue(sValue, null);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/SourceFieldMapper.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +        public static final long COMPRESS_THRESHOLD = -1;, +        private long compressThreshold = -1;, +, +        public Builder compressThreshold(long compressThreshold) {, +            this.compressThreshold = compressThreshold;, +            return this;, +        }, +, +            return new SourceFieldMapper(name, enabled, compress, compressThreshold);, +    private long compressThreshold;, +, +        this(Defaults.NAME, Defaults.ENABLED, null, -1);, +    protected SourceFieldMapper(String name, boolean enabled, Boolean compress, long compressThreshold) {, +        this.compressThreshold = compressThreshold;, +            if (compressThreshold == -1 || data.length > compressThreshold) {, +        }, +        if (enabled == Defaults.ENABLED && compress == null && compressThreshold == -1) {, +        if (compressThreshold != -1) {]