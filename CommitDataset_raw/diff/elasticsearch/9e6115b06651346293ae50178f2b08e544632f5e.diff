[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                        Bootstrap.stop();, +    static void stop() {, +            Releasables.close(INSTANCE.node);, +            INSTANCE.keepAliveLatch.countDown();, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                        Bootstrap.stop();, +    static void stop() {, +            Releasables.close(INSTANCE.node);, +            INSTANCE.keepAliveLatch.countDown();, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +, +    /**, +     * Required method that's called by Apache Commons procrun when, +     * running as a service on Windows, when the service is stopped., +     *, +     * http://commons.apache.org/proper/commons-daemon/procrun.html, +     *, +     * NOTE: If this method is renamed and/or moved, make sure to update service.bat!, +     */, +    static void close(String[] args) {, +        Bootstrap.stop();, +    }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                        Bootstrap.stop();, +    static void stop() {, +            Releasables.close(INSTANCE.node);, +            INSTANCE.keepAliveLatch.countDown();, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +, +    /**, +     * Required method that's called by Apache Commons procrun when, +     * running as a service on Windows, when the service is stopped., +     *, +     * http://commons.apache.org/proper/commons-daemon/procrun.html, +     *, +     * NOTE: If this method is renamed and/or moved, make sure to update service.bat!, +     */, +    static void close(String[] args) {, +        Bootstrap.stop();, +    }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java, +            if (context.indexCreatedVersion().before(Version.V_2_0_0_beta1)) {, +                childJoinFieldType.setHasDocValues(false);, +                childJoinFieldType.setDocValuesType(DocValuesType.NONE);, +                parentJoinFieldType.setHasDocValues(false);, +                parentJoinFieldType.setDocValuesType(DocValuesType.NONE);, +            }, +, +        Version indexCreated = Version.indexCreated(indexSettings);, +        if (indexCreated.before(Version.V_2_0_0_beta1)) {, +            parentJoinFieldType.setHasDocValues(false);, +            parentJoinFieldType.setDocValuesType(DocValuesType.NONE);, +        }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                        Bootstrap.stop();, +    static void stop() {, +            Releasables.close(INSTANCE.node);, +            INSTANCE.keepAliveLatch.countDown();, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +, +    /**, +     * Required method that's called by Apache Commons procrun when, +     * running as a service on Windows, when the service is stopped., +     *, +     * http://commons.apache.org/proper/commons-daemon/procrun.html, +     *, +     * NOTE: If this method is renamed and/or moved, make sure to update service.bat!, +     */, +    static void close(String[] args) {, +        Bootstrap.stop();, +    }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java, +            if (context.indexCreatedVersion().before(Version.V_2_0_0_beta1)) {, +                childJoinFieldType.setHasDocValues(false);, +                childJoinFieldType.setDocValuesType(DocValuesType.NONE);, +                parentJoinFieldType.setHasDocValues(false);, +                parentJoinFieldType.setDocValuesType(DocValuesType.NONE);, +            }, +, +        Version indexCreated = Version.indexCreated(indexSettings);, +        if (indexCreated.before(Version.V_2_0_0_beta1)) {, +            parentJoinFieldType.setHasDocValues(false);, +            parentJoinFieldType.setDocValuesType(DocValuesType.NONE);, +        }, +++ b/core/src/test/java/org/elasticsearch/index/mapper/internal/ParentFieldMapperTests.java, +    public void testPre2Dot0LazyLoading() {, +        ParentFieldMapper.Builder builder = new ParentFieldMapper.Builder("child");, +        builder.type("parent");, +        builder.fieldDataSettings(createFDSettings(Loading.LAZY));, +, +        ParentFieldMapper parentFieldMapper = builder.build(new Mapper.BuilderContext(pre2Dot0IndexSettings(), new ContentPath(0)));, +, +        assertThat(parentFieldMapper.getParentJoinFieldType().names().indexName(), equalTo("_parent#child"));, +        assertThat(parentFieldMapper.getParentJoinFieldType().fieldDataType(), nullValue());, +        assertThat(parentFieldMapper.getParentJoinFieldType().hasDocValues(), is(false));, +        assertThat(parentFieldMapper.getParentJoinFieldType().docValuesType(), equalTo(DocValuesType.NONE));, +, +        assertThat(parentFieldMapper.getChildJoinFieldType().names().indexName(), equalTo("_parent#parent"));, +        assertThat(parentFieldMapper.getChildJoinFieldType().fieldDataType().getLoading(), equalTo(Loading.LAZY));]