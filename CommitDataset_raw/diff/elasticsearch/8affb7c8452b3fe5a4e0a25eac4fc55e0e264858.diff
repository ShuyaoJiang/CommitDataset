[+++ b/core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/CustomQueryScorer.java, +            if (terms.isEmpty()) {, +            } else if (query instanceof FiltersFunctionScoreQuery) {, +                super.extract(((FiltersFunctionScoreQuery) query).getSubQuery(), boost, terms);, +++ b/core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/CustomQueryScorer.java, +            if (terms.isEmpty()) {, +            } else if (query instanceof FiltersFunctionScoreQuery) {, +                super.extract(((FiltersFunctionScoreQuery) query).getSubQuery(), boost, terms);, +++ b/core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java, +import org.elasticsearch.index.query.functionscore.RandomScoreFunctionBuilder;, +    public void testFiltersFunctionScoreQueryHighlight() throws Exception {, +        client().prepareIndex("test", "type", "1"), +            .setSource(jsonBuilder().startObject().field("text", "brown").field("enable", "yes").endObject()), +            .setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE), +            .get();, +        FunctionScoreQueryBuilder.FilterFunctionBuilder filterBuilder =, +            new FunctionScoreQueryBuilder.FilterFunctionBuilder(QueryBuilders.termQuery("enable", "yes"),, +                new RandomScoreFunctionBuilder());, +        SearchResponse searchResponse = client().prepareSearch(), +            .setQuery(new FunctionScoreQueryBuilder(QueryBuilders.prefixQuery("text", "bro"),, +                new FunctionScoreQueryBuilder.FilterFunctionBuilder[] {filterBuilder})), +            .highlighter(new HighlightBuilder(), +                .field(new Field("text"))), +            .get();, +        assertHitCount(searchResponse, 1);, +        HighlightField field = searchResponse.getHits().getAt(0).highlightFields().get("text");, +        assertThat(field.getFragments().length, equalTo(1));, +        assertThat(field.getFragments()[0].string(), equalTo("<em>brown</em>"));, +    }, +]