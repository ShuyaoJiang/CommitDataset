[+++ b/src/main/java/org/elasticsearch/search/suggest/context/GeolocationContextMapping.java, +                    String truncatedGeohash = geohash.substring(0, precision);, +                        GeoHashUtils.addNeighbors(truncatedGeohash, precision, locations);, +                    locations.add(truncatedGeohash);, +                    final String cell = location.substring(0, Math.max(1, Math.min(location.length(), precisions[i])));, +++ b/src/main/java/org/elasticsearch/search/suggest/context/GeolocationContextMapping.java, +                    String truncatedGeohash = geohash.substring(0, precision);, +                        GeoHashUtils.addNeighbors(truncatedGeohash, precision, locations);, +                    locations.add(truncatedGeohash);, +                    final String cell = location.substring(0, Math.max(1, Math.min(location.length(), precisions[i])));, +++ b/src/test/java/org/elasticsearch/search/suggest/ContextSuggestSearchTests.java, +    , +    @Test, +    public void testMultiLevelGeo() throws Exception {, +        assertAcked(prepareCreate(INDEX).addMapping(TYPE, createMapping(TYPE, ContextBuilder.location("st"), +                .precision(1), +                .precision(2), +                .precision(3), +                .precision(4), +                .precision(5), +                .precision(6), +                .precision(7), +                .precision(8), +                .precision(9), +                .precision(10), +                .precision(11), +                .precision(12), +                .neighbors(true))));, +        ensureYellow();, +, +        XContentBuilder source1 = jsonBuilder(), +                .startObject(), +                    .startObject(FIELD), +                        .array("input", "Hotel Amsterdam", "Amsterdam"), +                        .field("output", "Hotel Amsterdam in Berlin"), +                        .startObject("context").latlon("st", 52.529172, 13.407333).endObject(), +                    .endObject(), +                .endObject();, +        client().prepareIndex(INDEX, TYPE, "1").setSource(source1).execute().actionGet();, +, +        client().admin().indices().prepareRefresh(INDEX).get();, +        , +        for (int precision = 1; precision <= 12; precision++) {, +            String suggestionName = randomAsciiOfLength(10);, +            CompletionSuggestionBuilder context = new CompletionSuggestionBuilder(suggestionName).field(FIELD).text("h").size(10), +                    .addGeoLocation("st", 52.529172, 13.407333, precision);, +, +            SuggestRequestBuilder suggestionRequest = client().prepareSuggest(INDEX).addSuggestion(context);, +            SuggestResponse suggestResponse = suggestionRequest.execute().actionGet();, +            assertEquals(suggestResponse.getSuggest().size(), 1);, +            assertEquals("Hotel Amsterdam in Berlin", suggestResponse.getSuggest().getSuggestion(suggestionName).iterator().next(), +                    .getOptions().iterator().next().getText().string()); , +        }, +    }    ]