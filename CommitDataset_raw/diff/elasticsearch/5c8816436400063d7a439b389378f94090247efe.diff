[+++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +    public static class Failure {, +            String fIndex = in.readString();, +            String fType = in.readString();, +            String fId = in.readOptionalString();, +            Throwable throwable = in.readThrowable();, +            failure = new Failure(fIndex, fType, fId, throwable);, +            out.writeString(failure.getIndex());, +            out.writeString(failure.getType());, +            out.writeOptionalString(failure.getId());, +            out.writeThrowable(failure.getCause());, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +    public static class Failure {, +            String fIndex = in.readString();, +            String fType = in.readString();, +            String fId = in.readOptionalString();, +            Throwable throwable = in.readThrowable();, +            failure = new Failure(fIndex, fType, fId, throwable);, +            out.writeString(failure.getIndex());, +            out.writeString(failure.getType());, +            out.writeOptionalString(failure.getId());, +            out.writeThrowable(failure.getCause());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +        return "shard bulk {" + super.toString() + "}";, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +    public static class Failure {, +            String fIndex = in.readString();, +            String fType = in.readString();, +            String fId = in.readOptionalString();, +            Throwable throwable = in.readThrowable();, +            failure = new Failure(fIndex, fType, fId, throwable);, +            out.writeString(failure.getIndex());, +            out.writeString(failure.getType());, +            out.writeOptionalString(failure.getId());, +            out.writeThrowable(failure.getCause());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +        return "shard bulk {" + super.toString() + "}";, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +        type = in.readString();, +        out.writeString(type);, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +    public static class Failure {, +            String fIndex = in.readString();, +            String fType = in.readString();, +            String fId = in.readOptionalString();, +            Throwable throwable = in.readThrowable();, +            failure = new Failure(fIndex, fType, fId, throwable);, +            out.writeString(failure.getIndex());, +            out.writeString(failure.getType());, +            out.writeOptionalString(failure.getId());, +            out.writeThrowable(failure.getCause());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +        return "shard bulk {" + super.toString() + "}";, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +        type = in.readString();, +        out.writeString(type);, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginManager.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +    public static class Failure {, +            String fIndex = in.readString();, +            String fType = in.readString();, +            String fId = in.readOptionalString();, +            Throwable throwable = in.readThrowable();, +            failure = new Failure(fIndex, fType, fId, throwable);, +            out.writeString(failure.getIndex());, +            out.writeString(failure.getType());, +            out.writeOptionalString(failure.getId());, +            out.writeThrowable(failure.getCause());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +        return "shard bulk {" + super.toString() + "}";, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +        type = in.readString();, +        out.writeString(type);, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginManager.java, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java, +        SearchRequest searchRequest;, +        searchRequest = RestSearchAction.parseSearchRequest(queryRegistry, request, parseFieldMatcher);, +    public static SearchRequest parseSearchRequest(IndicesQueriesRegistry indicesQueriesRegistry,  RestRequest request, ParseFieldMatcher parseFieldMatcher) throws IOException {, +        String[] indices = Strings.splitStringByCommaToArray(request.param("index"));, +        SearchRequest searchRequest = new SearchRequest(indices);, +        final SearchSourceBuilder builder;, +            BytesReference restContent = RestActions.getRestContent(request);, +                builder = null;, +                builder = RestActions.getRestSearchSource(restContent, indicesQueriesRegistry, parseFieldMatcher);, +        } else {, +            builder = null;, +        if (builder == null) {, +            SearchSourceBuilder extraBuilder = new SearchSourceBuilder();, +            if (parseSearchSource(extraBuilder, request)) {, +                searchRequest.source(extraBuilder);, +            }, +        } else {, +            parseSearchSource(builder, request);, +            searchRequest.source(builder);]