[+++ b/server/src/test/java/org/elasticsearch/cluster/coordination/NodeJoinTests.java, +    private static ClusterState initialState(DiscoveryNode localNode, long term, long version,, +        return ClusterState.builder(new ClusterName(ClusterServiceUtils.class.getSimpleName())), +                .localNodeId(localNode.getId())), +        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,, +        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,, +        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,, +        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,, +        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,, +        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,, +        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,, +        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,, +        setupRealMasterServiceAndCoordinator(initialTerm, initialState(localNode, initialTerm, initialVersion, votingConfiguration));, +        final Runnable awaitBarrier = () -> {, +        };, +, +        final AtomicBoolean stopAsserting = new AtomicBoolean();, +        final Thread assertionThread = new Thread(() -> {, +            awaitBarrier.run();, +        final List<Thread> joinThreads = Stream.concat(correctJoinRequests.stream().map(joinRequest ->, +                awaitBarrier.run();, +                joinNode(joinRequest);, +            }, "process " + joinRequest)), possiblyFailingJoinRequests.stream().map(joinRequest ->, +            new Thread(() -> {, +                awaitBarrier.run();, +                    // ignore - these requests are expected to fail, +            }, "process " + joinRequest))).collect(Collectors.toList());]