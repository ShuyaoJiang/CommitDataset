[+++ b/rest-api-spec/api/count.json, +      "description" : "A query to restrict the results specified with the Query DSL (optional)", +++ b/rest-api-spec/api/count.json, +      "description" : "A query to restrict the results specified with the Query DSL (optional)", +++ b/rest-api-spec/api/delete_by_query.json, +      "description" : "A query to restrict the operation specified with the Query DSL", +++ b/rest-api-spec/api/count.json, +      "description" : "A query to restrict the results specified with the Query DSL (optional)", +++ b/rest-api-spec/api/delete_by_query.json, +      "description" : "A query to restrict the operation specified with the Query DSL", +++ b/rest-api-spec/api/indices.validate_query.json, +      "description" : "The query definition specified with the Query DSL", +++ b/rest-api-spec/api/count.json, +      "description" : "A query to restrict the results specified with the Query DSL (optional)", +++ b/rest-api-spec/api/delete_by_query.json, +      "description" : "A query to restrict the operation specified with the Query DSL", +++ b/rest-api-spec/api/indices.validate_query.json, +      "description" : "The query definition specified with the Query DSL", +++ b/rest-api-spec/test/delete_by_query/10_basic.yaml, +          query:, +++ b/rest-api-spec/api/count.json, +      "description" : "A query to restrict the results specified with the Query DSL (optional)", +++ b/rest-api-spec/api/delete_by_query.json, +      "description" : "A query to restrict the operation specified with the Query DSL", +++ b/rest-api-spec/api/indices.validate_query.json, +      "description" : "The query definition specified with the Query DSL", +++ b/rest-api-spec/test/delete_by_query/10_basic.yaml, +          query:, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/TransportDeleteMappingAction.java, +import org.elasticsearch.action.support.QuerySourceBuilder;, +                QuerySourceBuilder querySourceBuilder = new QuerySourceBuilder(), +                        .setQuery(QueryBuilders.filteredQuery(QueryBuilders.matchAllQuery(), FilterBuilders.typeFilter(request.type())));, +                deleteByQueryAction.execute(Requests.deleteByQueryRequest(request.indices()).source(querySourceBuilder), new ActionListener<DeleteByQueryResponse>() {, +++ b/rest-api-spec/api/count.json, +      "description" : "A query to restrict the results specified with the Query DSL (optional)", +++ b/rest-api-spec/api/delete_by_query.json, +      "description" : "A query to restrict the operation specified with the Query DSL", +++ b/rest-api-spec/api/indices.validate_query.json, +      "description" : "The query definition specified with the Query DSL", +++ b/rest-api-spec/test/delete_by_query/10_basic.yaml, +          query:, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/TransportDeleteMappingAction.java, +import org.elasticsearch.action.support.QuerySourceBuilder;, +                QuerySourceBuilder querySourceBuilder = new QuerySourceBuilder(), +                        .setQuery(QueryBuilders.filteredQuery(QueryBuilders.matchAllQuery(), FilterBuilders.typeFilter(request.type())));, +                deleteByQueryAction.execute(Requests.deleteByQueryRequest(request.indices()).source(querySourceBuilder), new ActionListener<DeleteByQueryResponse>() {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ShardValidateQueryRequest.java, +    private BytesReference source;, +        this.source = request.source();, +    public BytesReference source() {, +        return source;, +        source = in.readBytesReference();, +        out.writeBytesReference(source);, +++ b/rest-api-spec/api/count.json, +      "description" : "A query to restrict the results specified with the Query DSL (optional)", +++ b/rest-api-spec/api/delete_by_query.json, +      "description" : "A query to restrict the operation specified with the Query DSL", +++ b/rest-api-spec/api/indices.validate_query.json, +      "description" : "The query definition specified with the Query DSL", +++ b/rest-api-spec/test/delete_by_query/10_basic.yaml, +          query:, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/TransportDeleteMappingAction.java, +import org.elasticsearch.action.support.QuerySourceBuilder;, +                QuerySourceBuilder querySourceBuilder = new QuerySourceBuilder(), +                        .setQuery(QueryBuilders.filteredQuery(QueryBuilders.matchAllQuery(), FilterBuilders.typeFilter(request.type())));, +                deleteByQueryAction.execute(Requests.deleteByQueryRequest(request.indices()).source(querySourceBuilder), new ActionListener<DeleteByQueryResponse>() {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ShardValidateQueryRequest.java, +    private BytesReference source;, +        this.source = request.source();, +    public BytesReference source() {, +        return source;, +        source = in.readBytesReference();, +        out.writeBytesReference(source);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        if (request.source().length() == 0) {, +                ParsedQuery parsedQuery = queryParserService.parseQuery(request.source());, +++ b/rest-api-spec/api/count.json, +      "description" : "A query to restrict the results specified with the Query DSL (optional)", +++ b/rest-api-spec/api/delete_by_query.json, +      "description" : "A query to restrict the operation specified with the Query DSL", +++ b/rest-api-spec/api/indices.validate_query.json, +      "description" : "The query definition specified with the Query DSL", +++ b/rest-api-spec/test/delete_by_query/10_basic.yaml, +          query:, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/TransportDeleteMappingAction.java, +import org.elasticsearch.action.support.QuerySourceBuilder;, +                QuerySourceBuilder querySourceBuilder = new QuerySourceBuilder(), +                        .setQuery(QueryBuilders.filteredQuery(QueryBuilders.matchAllQuery(), FilterBuilders.typeFilter(request.type())));, +                deleteByQueryAction.execute(Requests.deleteByQueryRequest(request.indices()).source(querySourceBuilder), new ActionListener<DeleteByQueryResponse>() {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ShardValidateQueryRequest.java, +    private BytesReference source;, +        this.source = request.source();, +    public BytesReference source() {, +        return source;, +        source = in.readBytesReference();, +        out.writeBytesReference(source);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        if (request.source().length() == 0) {, +                ParsedQuery parsedQuery = queryParserService.parseQuery(request.source());, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ValidateQueryRequest.java]