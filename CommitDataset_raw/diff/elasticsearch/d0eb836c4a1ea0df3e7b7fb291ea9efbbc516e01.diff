[+++ b/.idea/dictionaries/kimchy.xml, +      <w>guice</w>, +++ b/.idea/dictionaries/kimchy.xml, +      <w>guice</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/IndexQueryParserFactory.java, + * Guice Factory for custom {@link IndexQueryParser}., + *, +++ b/.idea/dictionaries/kimchy.xml, +      <w>guice</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/IndexQueryParserFactory.java, + * Guice Factory for custom {@link IndexQueryParser}., + *, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/IndexQueryParserModule.java, +import org.elasticsearch.util.collect.Lists;, +import java.util.LinkedList;, +    /**, +     * A custom processor that can be extended to process and bind custom implementations of, +     * {@link IndexQueryParserFactory}, {@link XContentQueryParserFactory}, and {@link XContentFilterParser}., +     */, +    public static class QueryParsersProcessor {, +, +        /**, +         * Extension point to bind a custom {@link IndexQueryParserFactory}., +         */, +        public void processIndexQueryParsers(IndexQueryParsersBindings bindings) {, +, +        }, +, +        public static class IndexQueryParsersBindings {, +            private final MapBinder<String, IndexQueryParserFactory> binder;, +            private final Map<String, Settings> groupSettings;, +, +            public IndexQueryParsersBindings(MapBinder<String, IndexQueryParserFactory> binder, Map<String, Settings> groupSettings) {, +                this.binder = binder;, +                this.groupSettings = groupSettings;, +            }, +, +            public MapBinder<String, IndexQueryParserFactory> binder() {, +                return binder;, +            }, +, +            public Map<String, Settings> groupSettings() {, +                return groupSettings;, +            }, +, +            public void processIndexQueryParser(String name, Class<? extends IndexQueryParser> indexQueryParser) {, +                if (!groupSettings.containsKey(name)) {, +                    binder.addBinding(name).toProvider(FactoryProvider.newFactory(IndexQueryParserFactory.class, indexQueryParser)).in(Scopes.SINGLETON);, +                }, +            }, +        }, +, +        /**, +         * Extension point to bind a custom {@link XContentQueryParserFactory}., +         */, +        public void processXContentQueryParsers(XContentQueryParsersBindings bindings) {, +, +        }, +, +        public static class XContentQueryParsersBindings {, +, +            private final MapBinder<String, XContentQueryParserFactory> binder;, +            private final Map<String, Settings> groupSettings;, +, +            public XContentQueryParsersBindings(MapBinder<String, XContentQueryParserFactory> binder, Map<String, Settings> groupSettings) {, +                this.binder = binder;, +                this.groupSettings = groupSettings;, +            }, +, +            public MapBinder<String, XContentQueryParserFactory> binder() {, +                return binder;, +            }, +, +            public Map<String, Settings> groupSettings() {, +                return groupSettings;, +            }, +, +            public void processXContentQueryParser(String name, Class<? extends XContentQueryParser> xcontentQueryParser) {, +                if (!groupSettings.containsKey(name)) {, +                    binder.addBinding(name).toProvider(FactoryProvider.newFactory(XContentQueryParserFactory.class, xcontentQueryParser)).in(Scopes.SINGLETON);, +                }, +            }, +        }, +, +        /**, +         * Extension point to bind a custom {@link XContentFilterParserFactory}., +         */, +        public void processXContentFilterParsers(XContentFilterParsersBindings bindings) {, +, +        }, +, +        public static class XContentFilterParsersBindings {, +, +            private final MapBinder<String, XContentFilterParserFactory> binder;, +            private final Map<String, Settings> groupSettings;, +, +            public XContentFilterParsersBindings(MapBinder<String, XContentFilterParserFactory> binder, Map<String, Settings> groupSettings) {, +                this.binder = binder;, +                this.groupSettings = groupSettings;, +            }]