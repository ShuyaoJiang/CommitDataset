[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java, +            // we don't need to execute the sync on a different thread, just do it on the scheduler thread, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java, +            // we don't need to execute the sync on a different thread, just do it on the scheduler thread, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/translog/TranslogService.java, +        this.interval = componentSettings.getAsTime("interval", timeValueMillis(5000));, +        logger.debug("interval [{}], flush_threshold_ops [{}], flush_threshold_size [{}], flush_threshold_period [{}]", interval, flushThresholdOperations, flushThresholdSize, flushThresholdPeriod);, +, +        this.future = threadPool.schedule(new TranslogBasedFlush(), interval, ThreadPool.ExecutionType.DEFAULT);, +            if (indexShard.state() == IndexShardState.CLOSED) {, +                asyncFlushAndReschedule();, +                asyncFlushAndReschedule();, +                asyncFlushAndReschedule();, +            future = threadPool.schedule(this, interval, ThreadPool.ExecutionType.DEFAULT);, +        private void asyncFlushAndReschedule() {, +            threadPool.cached().execute(new Runnable() {, +                @Override public void run() {, +, +                    if (indexShard.state() != IndexShardState.CLOSED) {, +                        future = threadPool.schedule(this, interval, ThreadPool.ExecutionType.DEFAULT);, +                    }, +                }, +            });]