[+++ b/src/main/java/org/elasticsearch/search/facet/terms/TermsFacetBuilder.java, +    /**, +     * Sets the number of terms that will be returned from each shard. The higher the number the more accurate the results will be. The, +     * shard size cannot be smaller than {@link #size(int) size}, therefore in this case it will fall back and be treated as being equal to, +     * size., +     */, +++ b/src/main/java/org/elasticsearch/search/facet/terms/TermsFacetBuilder.java, +    /**, +     * Sets the number of terms that will be returned from each shard. The higher the number the more accurate the results will be. The, +     * shard size cannot be smaller than {@link #size(int) size}, therefore in this case it will fall back and be treated as being equal to, +     * size., +     */, +++ b/src/main/java/org/elasticsearch/search/facet/terms/TermsFacetParser.java, +            return new IndexNameFacetExecutor(context.shardTarget().index(), comparatorType, size);, +++ b/src/main/java/org/elasticsearch/search/facet/terms/TermsFacetBuilder.java, +    /**, +     * Sets the number of terms that will be returned from each shard. The higher the number the more accurate the results will be. The, +     * shard size cannot be smaller than {@link #size(int) size}, therefore in this case it will fall back and be treated as being equal to, +     * size., +     */, +++ b/src/main/java/org/elasticsearch/search/facet/terms/TermsFacetParser.java, +            return new IndexNameFacetExecutor(context.shardTarget().index(), comparatorType, size);, +++ b/src/main/java/org/elasticsearch/search/facet/terms/index/IndexNameFacetExecutor.java, +    public IndexNameFacetExecutor(String indexName, TermsFacet.ComparatorType comparatorType, int size) {]