[+++ b/marvel/src/test/java/org/elasticsearch/marvel/agent/exporter/http/HttpExporterTests.java, +import okio.Buffer;, +import org.elasticsearch.action.ActionRequest;, +import org.elasticsearch.cluster.health.ClusterHealthStatus;, +import org.elasticsearch.action.bulk.BulkRequest;, +import org.elasticsearch.action.index.IndexRequest;, +import org.elasticsearch.client.Requests;, +import java.util.ArrayList;, +import java.util.List;, +        final int nbDocs = randomIntBetween(1, 25);, +        exporter.export(newRandomMarvelDocs(nbDocs));, +, +        assertThat(webServer.getRequestCount(), equalTo(4));, +, +        assertBulkRequest(recordedRequest.getBody(), nbDocs);, +        final int nbDocs = randomIntBetween(1, 25);, +        exporter.export(newRandomMarvelDocs(nbDocs));, +        assertThat(webServer.getRequestCount(), equalTo(4));, +, +        assertBulkRequest(recordedRequest.getBody(), nbDocs);, +        assertThat(webServer.getRequestCount(), equalTo(4));, +            assertThat(secondWebServer.getRequestCount(), equalTo(4));, +        assertThat(webServer.getRequestCount(), equalTo(3));, +, +        recordedRequest = webServer.takeRequest();, +        assertThat(recordedRequest.getMethod(), equalTo("PUT"));, +        assertThat(recordedRequest.getPath(), equalTo("/_template/.marvel-es"));, +        assertThat(recordedRequest.getBody().readByteArray(), equalTo(MarvelTemplateUtils.loadDefaultTemplate()));, +        assertThat(webServer.getRequestCount(), equalTo(1));, +        assertThat(webServer.getRequestCount(), equalTo(4));, +        assertThat(webServer.getRequestCount(), equalTo(4 + 4));, +    private List<MarvelDoc> newRandomMarvelDocs(int nb) {, +        List<MarvelDoc> docs = new ArrayList<>(nb);, +        for (int i = 0; i < nb; i++) {, +            docs.add(newRandomMarvelDoc());, +        }, +        return docs;, +    }, +, +, +    private void assertBulkRequest(Buffer requestBody, int numberOfActions) throws Exception {, +        BulkRequest bulkRequest = Requests.bulkRequest().add(new BytesArray(requestBody.readByteArray()), null, null);, +        assertThat(bulkRequest.numberOfActions(), equalTo(numberOfActions));, +        for (ActionRequest actionRequest : bulkRequest.requests()) {, +            assertThat(actionRequest, instanceOf(IndexRequest.class));, +        }, +    }]