[+++ b/core/src/main/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighter.java, +import org.elasticsearch.index.IndexSettings;, +    private final int maxAnalyzedOffset;, +     * @param maxAnalyzedOffset The maximum number of characters that will be analyzed for highlighting., +                                    int noMatchSize,, +                                    int maxAnalyzedOffset) {, +        this.maxAnalyzedOffset = maxAnalyzedOffset;, +        if ((offsetSource == OffsetSource.ANALYSIS) && (fieldValue.length() > maxAnalyzedOffset)) {, +            throw new IllegalArgumentException(, +                "The length of the text to be analyzed for highlighting has exceeded the allowed maximum of [" +, +                    maxAnalyzedOffset + "]. " + "This maximum can be set by changing the [" +, +                    IndexSettings.MAX_ANALYZED_OFFSET_SETTING.getKey() + "] index level setting. " +, +                    "For large texts, indexing with offsets or term vectors is recommended!");, +        }, +++ b/core/src/main/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighter.java, +import org.elasticsearch.index.IndexSettings;, +    private final int maxAnalyzedOffset;, +     * @param maxAnalyzedOffset The maximum number of characters that will be analyzed for highlighting., +                                    int noMatchSize,, +                                    int maxAnalyzedOffset) {, +        this.maxAnalyzedOffset = maxAnalyzedOffset;, +        if ((offsetSource == OffsetSource.ANALYSIS) && (fieldValue.length() > maxAnalyzedOffset)) {, +            throw new IllegalArgumentException(, +                "The length of the text to be analyzed for highlighting has exceeded the allowed maximum of [" +, +                    maxAnalyzedOffset + "]. " + "This maximum can be set by changing the [" +, +                    IndexSettings.MAX_ANALYZED_OFFSET_SETTING.getKey() + "] index level setting. " +, +                    "For large texts, indexing with offsets or term vectors is recommended!");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +        IndexSettings.MAX_ANALYZED_OFFSET_SETTING,, +++ b/core/src/main/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighter.java, +import org.elasticsearch.index.IndexSettings;, +    private final int maxAnalyzedOffset;, +     * @param maxAnalyzedOffset The maximum number of characters that will be analyzed for highlighting., +                                    int noMatchSize,, +                                    int maxAnalyzedOffset) {, +        this.maxAnalyzedOffset = maxAnalyzedOffset;, +        if ((offsetSource == OffsetSource.ANALYSIS) && (fieldValue.length() > maxAnalyzedOffset)) {, +            throw new IllegalArgumentException(, +                "The length of the text to be analyzed for highlighting has exceeded the allowed maximum of [" +, +                    maxAnalyzedOffset + "]. " + "This maximum can be set by changing the [" +, +                    IndexSettings.MAX_ANALYZED_OFFSET_SETTING.getKey() + "] index level setting. " +, +                    "For large texts, indexing with offsets or term vectors is recommended!");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +        IndexSettings.MAX_ANALYZED_OFFSET_SETTING,, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +, +    /**, +     * A setting describing the maximum number of characters that will be analyzed for a highlight request., +     * This setting is only applicable when highlighting is requested on a text that was indexed without, +     * offsets or term vectors., +     * The default maximum of 10000 characters is defensive as for highlighting larger texts,, +     * indexing with offsets or term vectors is recommended., +     */, +    public static final Setting<Integer> MAX_ANALYZED_OFFSET_SETTING =, +        Setting.intSetting("index.highlight.max_analyzed_offset", 10000, 1, Property.Dynamic, Property.IndexScope);, +, +    private volatile int maxAnalyzedOffset;, +        maxAnalyzedOffset = scopedSettings.get(MAX_ANALYZED_OFFSET_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(MAX_ANALYZED_OFFSET_SETTING, this::setHighlightMaxAnalyzedOffset);, +     *  Returns the maximum number of chars that will be analyzed in a highlight request, +     */, +    public int getHighlightMaxAnalyzedOffset() { return this.maxAnalyzedOffset; }, +, +    private void setHighlightMaxAnalyzedOffset(int maxAnalyzedOffset) { this.maxAnalyzedOffset = maxAnalyzedOffset; }, +, +    /**, +++ b/core/src/main/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighter.java, +import org.elasticsearch.index.IndexSettings;, +    private final int maxAnalyzedOffset;, +     * @param maxAnalyzedOffset The maximum number of characters that will be analyzed for highlighting., +                                    int noMatchSize,, +                                    int maxAnalyzedOffset) {, +        this.maxAnalyzedOffset = maxAnalyzedOffset;, +        if ((offsetSource == OffsetSource.ANALYSIS) && (fieldValue.length() > maxAnalyzedOffset)) {, +            throw new IllegalArgumentException(, +                "The length of the text to be analyzed for highlighting has exceeded the allowed maximum of [" +, +                    maxAnalyzedOffset + "]. " + "This maximum can be set by changing the [" +, +                    IndexSettings.MAX_ANALYZED_OFFSET_SETTING.getKey() + "] index level setting. " +, +                    "For large texts, indexing with offsets or term vectors is recommended!");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +        IndexSettings.MAX_ANALYZED_OFFSET_SETTING,, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +, +    /**, +     * A setting describing the maximum number of characters that will be analyzed for a highlight request., +     * This setting is only applicable when highlighting is requested on a text that was indexed without, +     * offsets or term vectors., +     * The default maximum of 10000 characters is defensive as for highlighting larger texts,, +     * indexing with offsets or term vectors is recommended., +     */, +    public static final Setting<Integer> MAX_ANALYZED_OFFSET_SETTING =, +        Setting.intSetting("index.highlight.max_analyzed_offset", 10000, 1, Property.Dynamic, Property.IndexScope);, +, +    private volatile int maxAnalyzedOffset;, +        maxAnalyzedOffset = scopedSettings.get(MAX_ANALYZED_OFFSET_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(MAX_ANALYZED_OFFSET_SETTING, this::setHighlightMaxAnalyzedOffset);, +     *  Returns the maximum number of chars that will be analyzed in a highlight request]