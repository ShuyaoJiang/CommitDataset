[+++ b/docs/CHANGELOG.asciidoc, +Do not fail snapshot when deleting a missing snapshotted file ({pull}30332[#30332]), +++ b/docs/CHANGELOG.asciidoc, +Do not fail snapshot when deleting a missing snapshotted file ({pull}30332[#30332]), +++ b/server/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +     * Deletes a blob with giving name, if the blob exists. If the blob does not exist,, +     * this method throws a NoSuchFileException., +     * Deletes a blob with giving name, ignoring if the blob does not exist., +     *, +     * @param   blobName, +     *          The name of the blob to delete., +     * @throws  IOException if the blob exists but could not be deleted., +     */, +    default void deleteBlobIgnoringIfNotExists(String blobName) throws IOException {, +        try {, +            deleteBlob(blobName);, +        } catch (final NoSuchFileException ignored) {, +            // This exception is ignored, +        }, +    }, +, +    /**, +++ b/docs/CHANGELOG.asciidoc, +Do not fail snapshot when deleting a missing snapshotted file ({pull}30332[#30332]), +++ b/server/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +     * Deletes a blob with giving name, if the blob exists. If the blob does not exist,, +     * this method throws a NoSuchFileException., +     * Deletes a blob with giving name, ignoring if the blob does not exist., +     *, +     * @param   blobName, +     *          The name of the blob to delete., +     * @throws  IOException if the blob exists but could not be deleted., +     */, +    default void deleteBlobIgnoringIfNotExists(String blobName) throws IOException {, +        try {, +            deleteBlob(blobName);, +        } catch (final NoSuchFileException ignored) {, +            // This exception is ignored, +        }, +    }, +, +    /**, +++ b/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshots.java, +++ b/docs/CHANGELOG.asciidoc, +Do not fail snapshot when deleting a missing snapshotted file ({pull}30332[#30332]), +++ b/server/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +     * Deletes a blob with giving name, if the blob exists. If the blob does not exist,, +     * this method throws a NoSuchFileException., +     * Deletes a blob with giving name, ignoring if the blob does not exist., +     *, +     * @param   blobName, +     *          The name of the blob to delete., +     * @throws  IOException if the blob exists but could not be deleted., +     */, +    default void deleteBlobIgnoringIfNotExists(String blobName) throws IOException {, +        try {, +            deleteBlob(blobName);, +        } catch (final NoSuchFileException ignored) {, +            // This exception is ignored, +        }, +    }, +, +    /**, +++ b/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshots.java, +++ b/server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreFormat.java, +++ b/docs/CHANGELOG.asciidoc, +Do not fail snapshot when deleting a missing snapshotted file ({pull}30332[#30332]), +++ b/server/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +     * Deletes a blob with giving name, if the blob exists. If the blob does not exist,, +     * this method throws a NoSuchFileException., +     * Deletes a blob with giving name, ignoring if the blob does not exist., +     *, +     * @param   blobName, +     *          The name of the blob to delete., +     * @throws  IOException if the blob exists but could not be deleted., +     */, +    default void deleteBlobIgnoringIfNotExists(String blobName) throws IOException {, +        try {, +            deleteBlob(blobName);, +        } catch (final NoSuchFileException ignored) {, +            // This exception is ignored, +        }, +    }, +, +    /**, +++ b/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshots.java, +++ b/server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreFormat.java, +++ b/server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +import static org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardSnapshot.FileInfo.canonicalName;, +                snapshotsBlobContainer.deleteBlobIgnoringIfNotExists(tempBlobName);, +            finalize(newSnapshotsList, fileListGeneration + 1, blobs, "snapshot deletion [" + snapshotId + "]");, +        BlobStoreIndexShardSnapshot loadSnapshot() {, +         * Writes a new index file for the shard and removes all unreferenced files from the repository., +         * We need to be really careful in handling index files in case of failures to make sure we don't, +         * have index file that points to files that were deleted., +         * @param reason             a reason explaining why the shard index file is written, +        protected void finalize(final List<SnapshotFiles> snapshots,, +                                final int fileListGeneration,, +                                final Map<String, BlobMetaData> blobs,, +                                final String reason) {]