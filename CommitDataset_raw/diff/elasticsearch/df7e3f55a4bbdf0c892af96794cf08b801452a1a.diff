[+++ b/config/elasticsearch.yml, +gateway:, +  recover_after_nodes: 3, +++ b/config/elasticsearch.yml, +gateway:, +  recover_after_nodes: 3, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java, +    private boolean filterBlocks = false;, +, +    public boolean filterBlocks() {, +        return filterBlocks;, +    }, +, +    public ClusterStateRequest filterBlocks(boolean filterBlocks) {, +        this.filterBlocks = filterBlocks;, +        return this;, +    }, +, +        filterBlocks = in.readBoolean();, +        out.writeBoolean(filterBlocks);, +++ b/config/elasticsearch.yml, +gateway:, +  recover_after_nodes: 3, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java, +    private boolean filterBlocks = false;, +, +    public boolean filterBlocks() {, +        return filterBlocks;, +    }, +, +    public ClusterStateRequest filterBlocks(boolean filterBlocks) {, +        this.filterBlocks = filterBlocks;, +        return this;, +    }, +, +        filterBlocks = in.readBoolean();, +        out.writeBoolean(filterBlocks);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        if (!request.filterBlocks()) {, +            builder.blocks(currentState.blocks());, +        }, +++ b/config/elasticsearch.yml, +gateway:, +  recover_after_nodes: 3, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java, +    private boolean filterBlocks = false;, +, +    public boolean filterBlocks() {, +        return filterBlocks;, +    }, +, +    public ClusterStateRequest filterBlocks(boolean filterBlocks) {, +        this.filterBlocks = filterBlocks;, +        return this;, +    }, +, +        filterBlocks = in.readBoolean();, +        out.writeBoolean(filterBlocks);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        if (!request.filterBlocks()) {, +            builder.blocks(currentState.blocks());, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/block/ClusterBlock.java, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.builder.XContentBuilder;, +public class ClusterBlock implements Serializable, Streamable, ToXContent {, +    private ClusterBlockLevel[] levels;, +, +    public ClusterBlock(int id, String description, ClusterBlockLevel... levels) {, +        this.levels = levels;, +    public ClusterBlockLevel[] levels() {, +        return this.levels();, +    }, +, +    public boolean contains(ClusterBlockLevel level) {, +        for (ClusterBlockLevel testLevel : levels) {, +            if (testLevel == level) {, +                return true;, +            }, +        }, +        return false;, +    }, +, +    @Override public void toXContent(XContentBuilder builder, Params params) throws IOException {, +        builder.startObject(Integer.toString(id));, +        builder.field("description", description);, +        builder.startArray("levels");, +        for (ClusterBlockLevel level : levels) {, +            builder.value(level.name().toLowerCase());, +        }, +        builder.endArray();, +        builder.endObject();, +    }, +, +        levels = new ClusterBlockLevel[in.readVInt()];, +        for (int i = 0; i < levels.length; i++) {, +            levels[i] = ClusterBlockLevel.fromId(in.readVInt());, +        }, +        out.writeVInt(levels.length);, +        for (ClusterBlockLevel level : levels) {]