[+++ b/x-pack/plugin/sql/jdbc/build.gradle, +, +buildscript {, +    repositories {, +        maven {, +            url 'https://plugins.gradle.org/m2/', +        }, +    }, +    dependencies {, +        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2', +    }, +}, +, +apply plugin: 'com.github.johnrengelman.shadow', +archivesBaseName = "x-pack-sql-jdbc", +shadowJar {, +    classifier = null, +    relocate 'com.fasterxml', 'org.elasticsearch.fasterxml', +, +// We don't need normal jar, we use shadow jar instead, +jar.enabled = false, +, +// We need a no-depenencies jar though for qa testing so it doesn't conflict with cli, +configurations {, +    nodeps, +}, +, +task nodepsJar(type: Jar) {, +    appendix 'nodeps', +    from sourceSets.main.output, +}, +, +artifacts  {, +    nodeps nodepsJar, +    archives shadowJar, +}, +, +publishing {, +    publications {, +        nebula(MavenPublication) {, +            artifact shadowJar, +            pom.withXml {, +                // Nebula is mistakenly including all dependencies that are already shadowed into the shadow jar, +                asNode().remove(asNode().dependencies), +            }, +        }, +    }, +}, +, +assemble.dependsOn shadowJar, +    classpath -= configurations.compile, +    classpath -= configurations.runtime, +    classpath += shadowJar.outputs.files, +    dependsOn shadowJar, +++ b/x-pack/plugin/sql/jdbc/build.gradle, +, +buildscript {, +    repositories {, +        maven {, +            url 'https://plugins.gradle.org/m2/', +        }, +    }, +    dependencies {, +        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2', +    }, +}, +, +apply plugin: 'com.github.johnrengelman.shadow', +archivesBaseName = "x-pack-sql-jdbc", +shadowJar {, +    classifier = null, +    relocate 'com.fasterxml', 'org.elasticsearch.fasterxml', +, +// We don't need normal jar, we use shadow jar instead, +jar.enabled = false, +, +// We need a no-depenencies jar though for qa testing so it doesn't conflict with cli, +configurations {, +    nodeps, +}, +, +task nodepsJar(type: Jar) {, +    appendix 'nodeps', +    from sourceSets.main.output, +}, +, +artifacts  {, +    nodeps nodepsJar, +    archives shadowJar, +}, +, +publishing {, +    publications {, +        nebula(MavenPublication) {, +            artifact shadowJar, +            pom.withXml {, +                // Nebula is mistakenly including all dependencies that are already shadowed into the shadow jar, +                asNode().remove(asNode().dependencies), +            }, +        }]