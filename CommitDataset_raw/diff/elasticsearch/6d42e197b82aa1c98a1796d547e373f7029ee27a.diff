[+++ b/docs/build.gradle, +, +// Dummy bank account data used by getting-started.asciidoc, +buildRestTests.setups['bank'] = ''', +  - do:, +    bulk:, +      index: bank, +      type: account, +      refresh: true, +      body: |, +#bank_data#, +''', +/* Load the actual accounts only if we're going to use them. This complicates, + * dependency checking but that is a small price to pay for not building a, + * 400kb string every time we start the build. */, +File accountsFile = new File("$projectDir/src/test/resources/accounts.json"), +buildRestTests.inputs.file(accountsFile), +buildRestTests.doFirst {, +  String accounts = accountsFile.getText('UTF-8'), +  // Indent like a yaml test needs, +  accounts = accounts.replaceAll('(?m)^', '        '), +  buildRestTests.setups['bank'] =, +    buildRestTests.setups['bank'].replace('#bank_data#', accounts), +}, +++ b/docs/build.gradle, +, +// Dummy bank account data used by getting-started.asciidoc, +buildRestTests.setups['bank'] = ''', +  - do:, +    bulk:, +      index: bank, +      type: account, +      refresh: true, +      body: |, +#bank_data#, +''', +/* Load the actual accounts only if we're going to use them. This complicates, + * dependency checking but that is a small price to pay for not building a, + * 400kb string every time we start the build. */, +File accountsFile = new File("$projectDir/src/test/resources/accounts.json"), +buildRestTests.inputs.file(accountsFile), +buildRestTests.doFirst {, +  String accounts = accountsFile.getText('UTF-8'), +  // Indent like a yaml test needs, +  accounts = accounts.replaceAll('(?m)^', '        '), +  buildRestTests.setups['bank'] =, +    buildRestTests.setups['bank'].replace('#bank_data#', accounts), +}, +++ b/docs/reference/getting-started.asciidoc, +// CONSOLE, +Note that in the above case, we are using the `POST` verb instead of PUT since we didn't specify an ID., +[source,js], +// NOTCONSOLE, +You can download the sample dataset (accounts.json) from https://github.com/elastic/elasticsearch/blob/master/docs/src/test/resources/accounts.json?raw=true[here]. Extract it to our current directory and let's load it into our cluster as follows:, +curl -XPOST 'localhost:9200/bank/account/_bulk?pretty&refresh' --data-binary "@accounts.json", +// NOTCONSOLE, +, +////, +This replicates the above in a document-testing friendly way but isn't visible, +in the docs:, +, +[source,js], +--------------------------------------------------, +GET /_cat/indices?v, +--------------------------------------------------, +// CONSOLE, +// TEST[setup:bank], +////, +[source,js], +health status index uuid                   pri rep docs.count docs.deleted store.size pri.store.size, +yellow open   bank  l7sSYV2cQXmu6_4rJWVIww   5   1       1000            0    128.6kb        128.6kb, +// TESTRESPONSE[s/128.6kb/\\d+\\.\\d+[mk]?b/], +// TESTRESPONSE[s/l7sSYV2cQXmu6_4rJWVIww/.+/ _cat], +[source,js], +GET /bank/_search?q=*&sort=account_number:asc, +// CONSOLE, +// TEST[continued], +[source,js], +    "max_score" : null,, +      "_id" : "0",, +      "sort": [0],, +      "_score" : null,, +      "_source" : {"account_number":0,"balance":16623,"firstname":"Bradshaw","lastname":"Mckenzie","age":29,"gender":"F","address":"244 Columbus Place","employer":"Euron","email":"bradshawmckenzie@euron.com","city":"Hobucken","state":"CO"}, +    }, {, +      "_index" : "bank",, +      "_type" : "account",, +      "sort": [1],, +      "_score" : null,, +      "_source" : {"account_number":1,"balance":39225,"firstname":"Amber","lastname":"Duke","age":32,"gender":"M","address":"880 Holmes Lane","employer":"Pyrami","email":"amberduke@pyrami.com","city":"Brogan","state":"IL"}, +    }, ..., +    ], +  }, +}, +// TESTRESPONSE[s/"took" : 63/"took" : $body.took/], +// TESTRESPONSE[s/\.\.\./$body.hits.hits.2, $body.hits.hits.3, $body.hits.hits.4, $body.hits.hits.5, $body.hits.hits.6, $body.hits.hits.7, $body.hits.hits.8, $body.hits.hits.9/], +* `sort` - sort key for results (missing if sorting by score), +[source,js], +GET /bank/_search, +  "query": { "match_all": {} },, +  "sort": []