[+++ b/GRADLE.CHEATSHEET, +install -DskipTests -> install, +++ b/GRADLE.CHEATSHEET, +install -DskipTests -> install, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                // HUGE HACK: the underlying maven publication library refuses to deploy any attached artifacts, +                // when the packaging type is set to 'pom'. So here we create another publication using the same, +                // name that has the "real" pom, and rely on the fact that gradle will execute the publish tasks, +                // in alphabetical order. We cannot setup a dependency between the tasks because the publishing, +                // tasks are created *extremely* late in the configuration phase, so that we cannot get ahold, +                // of the actual task. Furthermore, this entire hack only exists so we can make publishing to, +                // maven local work, since we publish to maven central externally., +++ b/GRADLE.CHEATSHEET, +install -DskipTests -> install, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                // HUGE HACK: the underlying maven publication library refuses to deploy any attached artifacts, +                // when the packaging type is set to 'pom'. So here we create another publication using the same, +                // name that has the "real" pom, and rely on the fact that gradle will execute the publish tasks, +                // in alphabetical order. We cannot setup a dependency between the tasks because the publishing, +                // tasks are created *extremely* late in the configuration phase, so that we cannot get ahold, +                // of the actual task. Furthermore, this entire hack only exists so we can make publishing to, +                // maven local work, since we publish to maven central externally., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/GRADLE.CHEATSHEET, +install -DskipTests -> install, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                // HUGE HACK: the underlying maven publication library refuses to deploy any attached artifacts, +                // when the packaging type is set to 'pom'. So here we create another publication using the same, +                // name that has the "real" pom, and rely on the fact that gradle will execute the publish tasks, +                // in alphabetical order. We cannot setup a dependency between the tasks because the publishing, +                // tasks are created *extremely* late in the configuration phase, so that we cannot get ahold, +                // of the actual task. Furthermore, this entire hack only exists so we can make publishing to, +                // maven local work, since we publish to maven central externally., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.echo("==> [${new Date()}] checking health: http://${node.httpUri()}/_cluster/health?wait_for_nodes>=${numNodes}"), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes>=${numNodes}",, +++ b/GRADLE.CHEATSHEET, +install -DskipTests -> install, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                // HUGE HACK: the underlying maven publication library refuses to deploy any attached artifacts, +                // when the packaging type is set to 'pom'. So here we create another publication using the same, +                // name that has the "real" pom, and rely on the fact that gradle will execute the publish tasks, +                // in alphabetical order. We cannot setup a dependency between the tasks because the publishing, +                // tasks are created *extremely* late in the configuration phase, so that we cannot get ahold, +                // of the actual task. Furthermore, this entire hack only exists so we can make publishing to, +                // maven local work, since we publish to maven central externally., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.echo("==> [${new Date()}] checking health: http://${node.httpUri()}/_cluster/health?wait_for_nodes>=${numNodes}"), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes>=${numNodes}",, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        setup = configureExtraConfigFilesTask(taskName(task, node, 'extraConfig'), project, setup, node), +++ b/GRADLE.CHEATSHEET, +install -DskipTests -> install, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                // HUGE HACK: the underlying maven publication library refuses to deploy any attached artifacts, +                // when the packaging type is set to 'pom'. So here we create another publication using the same, +                // name that has the "real" pom, and rely on the fact that gradle will execute the publish tasks, +                // in alphabetical order. We cannot setup a dependency between the tasks because the publishing, +                // tasks are created *extremely* late in the configuration phase, so that we cannot get ahold, +                // of the actual task. Furthermore, this entire hack only exists so we can make publishing to, +                // maven local work, since we publish to maven central externally., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.echo("==> [${new Date()}] checking health: http://${node.httpUri()}/_cluster/health?wait_for_nodes>=${numNodes}"), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes>=${numNodes}",, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        setup = configureExtraConfigFilesTask(taskName(task, node, 'extraConfig'), project, setup, node), +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        FLUSH_NOT_ALLOWED_ENGINE_EXCEPTION(org.elasticsearch.index.engine.FlushNotAllowedEngineException.class,, +                org.elasticsearch.index.engine.FlushNotAllowedEngineException::new, 110),, +++ b/GRADLE.CHEATSHEET, +install -DskipTests -> install, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                // HUGE HACK: the underlying maven publication library refuses to deploy any attached artifacts, +                // when the packaging type is set to 'pom'. So here we create another publication using the same, +                // name that has the "real" pom, and rely on the fact that gradle will execute the publish tasks, +                // in alphabetical order. We cannot setup a dependency between the tasks because the publishing, +                // tasks are created *extremely* late in the configuration phase, so that we cannot get ahold, +                // of the actual task. Furthermore, this entire hack only exists so we can make publishing to, +                // maven local work, since we publish to maven central externally., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.echo("==> [${new Date()}] checking health: http://${node.httpUri()}/_cluster/health?wait_for_nodes>=${numNodes}"), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes>=${numNodes}",, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        setup = configureExtraConfigFilesTask(taskName(task, node, 'extraConfig'), project, setup, node), +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        FLUSH_NOT_ALLOWED_ENGINE_EXCEPTION(org.elasticsearch.index.engine.FlushNotAllowedEngineException.class,]