[+++ b/server/src/main/java/org/elasticsearch/common/time/DateFormatter.java, +import java.util.Locale;, +     * Create a copy of this formatter that is configured to parse dates in the specified locale, +     *, +     * @param locale The local to use for the new formatter, +     * @return       A copy of the date formatter this has been called on, +     */, +    DateFormatter withLocale(Locale locale);, +, +    /**, +     * Returns the configured locale of the date formatter, +     *, +     * @return The locale of this formatter, +     */, +    Locale getLocale();, +, +    /**, +     * Returns the configured time zone of the date formatter, +     *, +     * @return The time zone of this formatter, +     */, +    ZoneId getZone();, +, +    /**, +        public DateFormatter withLocale(Locale locale) {, +            return new MergedDateFormatter(Arrays.stream(formatters).map(f -> f.withLocale(locale)).toArray(DateFormatter[]::new));, +        }, +, +        @Override, +        public Locale getLocale() {, +            return formatters[0].getLocale();, +        }, +, +        @Override, +        public ZoneId getZone() {, +            return formatters[0].getZone();, +        }, +, +        @Override, +++ b/server/src/main/java/org/elasticsearch/common/time/DateFormatter.java, +import java.util.Locale;, +     * Create a copy of this formatter that is configured to parse dates in the specified locale, +     *, +     * @param locale The local to use for the new formatter, +     * @return       A copy of the date formatter this has been called on, +     */, +    DateFormatter withLocale(Locale locale);, +, +    /**, +     * Returns the configured locale of the date formatter, +     *, +     * @return The locale of this formatter, +     */, +    Locale getLocale();, +, +    /**, +     * Returns the configured time zone of the date formatter, +     *, +     * @return The time zone of this formatter, +     */, +    ZoneId getZone();, +, +    /**, +        public DateFormatter withLocale(Locale locale) {, +            return new MergedDateFormatter(Arrays.stream(formatters).map(f -> f.withLocale(locale)).toArray(DateFormatter[]::new));, +        }, +, +        @Override, +        public Locale getLocale() {, +            return formatters[0].getLocale();, +        }, +, +        @Override, +        public ZoneId getZone() {, +            return formatters[0].getZone();, +        }, +, +        @Override, +++ b/server/src/main/java/org/elasticsearch/common/time/DateFormatters.java, +    private static DateFormatter forPattern(String input, Locale locale) {, +++ b/server/src/main/java/org/elasticsearch/common/time/DateFormatter.java, +import java.util.Locale;, +     * Create a copy of this formatter that is configured to parse dates in the specified locale, +     *, +     * @param locale The local to use for the new formatter, +     * @return       A copy of the date formatter this has been called on, +     */, +    DateFormatter withLocale(Locale locale);, +, +    /**, +     * Returns the configured locale of the date formatter, +     *, +     * @return The locale of this formatter, +     */, +    Locale getLocale();, +, +    /**, +     * Returns the configured time zone of the date formatter, +     *, +     * @return The time zone of this formatter]