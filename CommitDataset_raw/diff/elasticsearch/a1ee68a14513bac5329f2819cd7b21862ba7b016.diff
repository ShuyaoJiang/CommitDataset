[+++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpChannel.java, +                HttpHeaders.Values.CLOSE.equalsIgnoreCase(request.headers().get(HttpHeaders.Names.CONNECTION)) ||, +                        (http10 && !HttpHeaders.Values.KEEP_ALIVE.equalsIgnoreCase(request.headers().get(HttpHeaders.Names.CONNECTION)));, +                resp.headers().add(HttpHeaders.Names.CONNECTION, "Keep-Alive");, +        if (RestUtils.isBrowser(request.headers().get(HttpHeaders.Names.USER_AGENT))) {, +                resp.headers().add("Access-Control-Allow-Origin", transport.settings().get("http.cors.allow-origin", "*"));, +                    resp.headers().add("Access-Control-Max-Age", transport.settings().getAsInt("http.cors.max-age", 1728000));, +                    resp.headers().add("Access-Control-Allow-Methods", transport.settings().get("http.cors.allow-methods", "OPTIONS, HEAD, GET, POST, PUT, DELETE"));, +                    resp.headers().add("Access-Control-Allow-Headers", transport.settings().get("http.cors.allow-headers", "X-Requested-With, Content-Type, Content-Length"));, +        String opaque = request.headers().get("X-Opaque-Id");, +            resp.headers().add("X-Opaque-Id", opaque);, +                    resp.headers().add(headerEntry.getKey(), headerValue);, +        resp.headers().add(HttpHeaders.Names.CONTENT_TYPE, response.contentType());, +        resp.headers().add(HttpHeaders.Names.CONTENT_LENGTH, String.valueOf(buf.readableBytes()));, +            String cookieString = request.headers().get(HttpHeaders.Names.COOKIE);, +                    resp.headers().add(HttpHeaders.Names.SET_COOKIE, cookieEncoder.encode());, +++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpChannel.java, +                HttpHeaders.Values.CLOSE.equalsIgnoreCase(request.headers().get(HttpHeaders.Names.CONNECTION)) ||, +                        (http10 && !HttpHeaders.Values.KEEP_ALIVE.equalsIgnoreCase(request.headers().get(HttpHeaders.Names.CONNECTION)));, +                resp.headers().add(HttpHeaders.Names.CONNECTION, "Keep-Alive");, +        if (RestUtils.isBrowser(request.headers().get(HttpHeaders.Names.USER_AGENT))) {, +                resp.headers().add("Access-Control-Allow-Origin", transport.settings().get("http.cors.allow-origin", "*"));, +                    resp.headers().add("Access-Control-Max-Age", transport.settings().getAsInt("http.cors.max-age", 1728000));, +                    resp.headers().add("Access-Control-Allow-Methods", transport.settings().get("http.cors.allow-methods", "OPTIONS, HEAD, GET, POST, PUT, DELETE"));, +                    resp.headers().add("Access-Control-Allow-Headers", transport.settings().get("http.cors.allow-headers", "X-Requested-With, Content-Type, Content-Length"));, +        String opaque = request.headers().get("X-Opaque-Id");, +            resp.headers().add("X-Opaque-Id", opaque);, +                    resp.headers().add(headerEntry.getKey(), headerValue);, +        resp.headers().add(HttpHeaders.Names.CONTENT_TYPE, response.contentType());, +        resp.headers().add(HttpHeaders.Names.CONTENT_LENGTH, String.valueOf(buf.readableBytes()));, +            String cookieString = request.headers().get(HttpHeaders.Names.COOKIE);, +                    resp.headers().add(HttpHeaders.Names.SET_COOKIE, cookieEncoder.encode());, +++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpRequest.java, +        return request.headers().get(name);]