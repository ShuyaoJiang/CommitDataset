[+++ b/src/main/java/org/elasticsearch/index/cache/query/QueryCacheStats.java, +    long hitCount;, +    long missCount;, +    public QueryCacheStats(long memorySize, long evictions, long hitCount, long missCount) {, +        this.hitCount = hitCount;, +        this.missCount = missCount;, +        this.hitCount += stats.hitCount;, +        this.missCount += stats.missCount;, +    public long getHitCount() {, +        return this.hitCount;, +    }, +, +    public long getMissCount() {, +        return this.missCount;, +    }, +, +        hitCount = in.readVLong();, +        missCount = in.readVLong();, +        out.writeVLong(hitCount);, +        out.writeVLong(missCount);, +        builder.field(Fields.HIT_COUNT, getHitCount());, +        builder.field(Fields.MISS_COUNT, getMissCount());, +        static final XContentBuilderString HIT_COUNT = new XContentBuilderString("hit_count");, +        static final XContentBuilderString MISS_COUNT = new XContentBuilderString("miss_count");, +++ b/src/main/java/org/elasticsearch/index/cache/query/QueryCacheStats.java, +    long hitCount;, +    long missCount;, +    public QueryCacheStats(long memorySize, long evictions, long hitCount, long missCount) {, +        this.hitCount = hitCount;, +        this.missCount = missCount;, +        this.hitCount += stats.hitCount;, +        this.missCount += stats.missCount;, +    public long getHitCount() {, +        return this.hitCount;, +    }, +, +    public long getMissCount() {, +        return this.missCount;, +    }, +, +        hitCount = in.readVLong();, +        missCount = in.readVLong();, +        out.writeVLong(hitCount);, +        out.writeVLong(missCount);, +        builder.field(Fields.HIT_COUNT, getHitCount());, +        builder.field(Fields.MISS_COUNT, getMissCount());, +        static final XContentBuilderString HIT_COUNT = new XContentBuilderString("hit_count");, +        static final XContentBuilderString MISS_COUNT = new XContentBuilderString("miss_count");, +++ b/src/main/java/org/elasticsearch/index/cache/query/ShardQueryCache.java, +    final CounterMetric hitCount = new CounterMetric();, +    final CounterMetric missCount = new CounterMetric();, +        return new QueryCacheStats(totalMetric.count(), evictionsMetric.count(), hitCount.count(), missCount.count());, +    }, +, +    public void onHit() {, +        hitCount.inc();, +    }, +, +    public void onMiss() {, +        missCount.inc();, +++ b/src/main/java/org/elasticsearch/index/cache/query/QueryCacheStats.java, +    long hitCount;, +    long missCount;, +    public QueryCacheStats(long memorySize, long evictions, long hitCount, long missCount) {, +        this.hitCount = hitCount;, +        this.missCount = missCount;, +        this.hitCount += stats.hitCount;, +        this.missCount += stats.missCount;, +    public long getHitCount() {, +        return this.hitCount;, +    }, +, +    public long getMissCount() {, +        return this.missCount;, +    }, +, +        hitCount = in.readVLong();, +        missCount = in.readVLong();, +        out.writeVLong(hitCount);, +        out.writeVLong(missCount);, +        builder.field(Fields.HIT_COUNT, getHitCount());, +        builder.field(Fields.MISS_COUNT, getMissCount());, +        static final XContentBuilderString HIT_COUNT = new XContentBuilderString("hit_count");, +        static final XContentBuilderString MISS_COUNT = new XContentBuilderString("miss_count");, +++ b/src/main/java/org/elasticsearch/index/cache/query/ShardQueryCache.java, +    final CounterMetric hitCount = new CounterMetric();, +    final CounterMetric missCount = new CounterMetric();, +        return new QueryCacheStats(totalMetric.count(), evictionsMetric.count(), hitCount.count(), missCount.count());, +    }, +, +    public void onHit() {, +        hitCount.inc();, +    }, +, +    public void onMiss() {, +        missCount.inc();, +++ b/src/main/java/org/elasticsearch/indices/cache/query/IndicesQueryCache.java, +            key.shard.queryCache().onMiss();, +        } else {, +            key.shard.queryCache().onHit();]