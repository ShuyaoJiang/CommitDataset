[+++ b/docs/java-api/client.asciidoc, +You can use the *Java client* in multiple ways:, +1.  Creating an embedded link:#nodeclient[`Node`] that acts as a node, +within a cluster., +2.  Requesting a `Client` from your embedded `Node`., +and cluster sides. You may hit some incompatibility issues when mixing, +different clusters by simply setting the `cluster.name` setting, or, +You can define `cluster.name` in the `/src/main/resources/elasticsearch.yml`, +Note that you have to set the cluster name if you use one different than, +its list of machines to use. In this case, note that the IP addresses, +++ b/docs/java-api/client.asciidoc, +You can use the *Java client* in multiple ways:, +1.  Creating an embedded link:#nodeclient[`Node`] that acts as a node, +within a cluster., +2.  Requesting a `Client` from your embedded `Node`., +and cluster sides. You may hit some incompatibility issues when mixing, +different clusters by simply setting the `cluster.name` setting, or, +You can define `cluster.name` in the `/src/main/resources/elasticsearch.yml`, +Note that you have to set the cluster name if you use one different than, +its list of machines to use. In this case, note that the IP addresses, +++ b/docs/java-api/count.asciidoc, +The count API allows one to easily execute a query and get the number of, +The count API allows one to set the threading model the operation will be, +++ b/docs/java-api/client.asciidoc, +You can use the *Java client* in multiple ways:, +1.  Creating an embedded link:#nodeclient[`Node`] that acts as a node, +within a cluster., +2.  Requesting a `Client` from your embedded `Node`., +and cluster sides. You may hit some incompatibility issues when mixing, +different clusters by simply setting the `cluster.name` setting, or, +You can define `cluster.name` in the `/src/main/resources/elasticsearch.yml`, +Note that you have to set the cluster name if you use one different than, +its list of machines to use. In this case, note that the IP addresses, +++ b/docs/java-api/count.asciidoc, +The count API allows one to easily execute a query and get the number of, +The count API allows one to set the threading model the operation will be, +++ b/docs/java-api/delete-by-query.asciidoc, +The delete by query API allows one to delete documents from one or more, +++ b/docs/java-api/client.asciidoc, +You can use the *Java client* in multiple ways:, +1.  Creating an embedded link:#nodeclient[`Node`] that acts as a node, +within a cluster., +2.  Requesting a `Client` from your embedded `Node`., +and cluster sides. You may hit some incompatibility issues when mixing, +different clusters by simply setting the `cluster.name` setting, or, +You can define `cluster.name` in the `/src/main/resources/elasticsearch.yml`, +Note that you have to set the cluster name if you use one different than, +its list of machines to use. In this case, note that the IP addresses, +++ b/docs/java-api/count.asciidoc, +The count API allows one to easily execute a query and get the number of, +The count API allows one to set the threading model the operation will be, +++ b/docs/java-api/delete-by-query.asciidoc, +The delete by query API allows one to delete documents from one or more, +++ b/docs/java-api/delete.asciidoc, +The delete API allows one to delete a typed JSON document from a specific, +++ b/docs/java-api/client.asciidoc, +You can use the *Java client* in multiple ways:, +1.  Creating an embedded link:#nodeclient[`Node`] that acts as a node, +within a cluster., +2.  Requesting a `Client` from your embedded `Node`., +and cluster sides. You may hit some incompatibility issues when mixing, +different clusters by simply setting the `cluster.name` setting, or, +You can define `cluster.name` in the `/src/main/resources/elasticsearch.yml`, +Note that you have to set the cluster name if you use one different than, +its list of machines to use. In this case, note that the IP addresses, +++ b/docs/java-api/count.asciidoc, +The count API allows one to easily execute a query and get the number of, +The count API allows one to set the threading model the operation will be, +++ b/docs/java-api/delete-by-query.asciidoc, +The delete by query API allows one to delete documents from one or more, +++ b/docs/java-api/delete.asciidoc, +The delete API allows one to delete a typed JSON document from a specific, +++ b/docs/java-api/facets.asciidoc, +Here is how you can use the, +Here is how you can use the, +the {ref}/search-facets-geo-distance-facet.html[Geo, +++ b/docs/java-api/client.asciidoc, +You can use the *Java client* in multiple ways:, +1.  Creating an embedded link:#nodeclient[`Node`] that acts as a node, +within a cluster., +2.  Requesting a `Client` from your embedded `Node`., +and cluster sides. You may hit some incompatibility issues when mixing, +different clusters by simply setting the `cluster.name` setting, or, +You can define `cluster.name` in the `/src/main/resources/elasticsearch.yml`, +Note that you have to set the cluster name if you use one different than, +its list of machines to use. In this case, note that the IP addresses, +++ b/docs/java-api/count.asciidoc, +The count API allows one to easily execute a query and get the number of, +The count API allows one to set the threading model the operation will be, +++ b/docs/java-api/delete-by-query.asciidoc, +The delete by query API allows one to delete documents from one or more, +++ b/docs/java-api/delete.asciidoc, +The delete API allows one to delete a typed JSON document from a specific, +++ b/docs/java-api/facets.asciidoc, +Here is how you can use the, +Here is how you can use the, +the {ref}/search-facets-geo-distance-facet.html[Geo, +++ b/docs/java-api/index.asciidoc, +listener, or returns a future)., +++ b/docs/java-api/client.asciidoc]