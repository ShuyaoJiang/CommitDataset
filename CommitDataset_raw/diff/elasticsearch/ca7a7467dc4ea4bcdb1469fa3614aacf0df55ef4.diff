[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.admin.indices.close.TransportCloseIndexAction;, +import org.elasticsearch.action.admin.indices.open.TransportOpenIndexAction;, +        bind(TransportOpenIndexAction.class).asEagerSingleton();, +        bind(TransportCloseIndexAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.admin.indices.close.TransportCloseIndexAction;, +import org.elasticsearch.action.admin.indices.open.TransportOpenIndexAction;, +        bind(TransportOpenIndexAction.class).asEagerSingleton();, +        bind(TransportCloseIndexAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActions.java, +            public static final String OPEN = "indices/openIndex";, +            public static final String CLOSE = "indices/closeIndex";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.admin.indices.close.TransportCloseIndexAction;, +import org.elasticsearch.action.admin.indices.open.TransportOpenIndexAction;, +        bind(TransportOpenIndexAction.class).asEagerSingleton();, +        bind(TransportCloseIndexAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActions.java, +            public static final String OPEN = "indices/openIndex";, +            public static final String CLOSE = "indices/closeIndex";, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexRequest.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.action.admin.indices.close;, +, +import org.elasticsearch.action.ActionRequestValidationException;, +import org.elasticsearch.action.support.master.MasterNodeOperationRequest;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.unit.TimeValue;, +, +import java.io.IOException;, +, +import static org.elasticsearch.action.Actions.*;, +import static org.elasticsearch.common.unit.TimeValue.*;, +, +/**, + * A request to close an index., + *, + * @author kimchy (shay.banon), + */, +public class CloseIndexRequest extends MasterNodeOperationRequest {, +, +    private String index;, +, +    private TimeValue timeout = timeValueSeconds(10);, +, +    CloseIndexRequest() {, +    }, +, +    /**, +     * Constructs a new delete index request for the specified index., +     */, +    public CloseIndexRequest(String index) {, +        this.index = index;, +    }, +, +    @Override public ActionRequestValidationException validate() {, +        ActionRequestValidationException validationException = null;, +        if (index == null) {, +            validationException = addValidationError("index is missing", validationException);, +        }, +        return validationException;, +    }, +, +    /**, +     * The index to delete., +     */, +    String index() {, +        return index;, +    }, +, +    /**, +     * Timeout to wait for the index deletion to be acknowledged by current cluster nodes. Defaults, +     * to <tt>10s</tt>., +     */, +    TimeValue timeout() {, +        return timeout;, +    }, +, +    /**, +     * Timeout to wait for the index deletion to be acknowledged by current cluster nodes. Defaults]