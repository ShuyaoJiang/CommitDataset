[+++ b/TESTING.asciidoc, +or run jessie and trusty:, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='jessie, trusty', +++ b/TESTING.asciidoc, +or run jessie and trusty:, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='jessie, trusty', +++ /dev/null, +++ b/TESTING.asciidoc, +or run jessie and trusty:, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='jessie, trusty', +++ /dev/null, +++ /dev/null, +++ b/TESTING.asciidoc, +or run jessie and trusty:, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='jessie, trusty', +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, + * <p>, + * Also breaks fields with [type].[name] into a boolean query that must include the type, +++ b/TESTING.asciidoc, +or run jessie and trusty:, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='jessie, trusty', +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, + * <p>, + * Also breaks fields with [type].[name] into a boolean query that must include the type, +++ b/core/src/main/java/org/apache/lucene/search/XFilteredDocIdSetIterator.java, +   * @see #XFilteredDocIdSetIterator(DocIdSetIterator), +++ b/TESTING.asciidoc, +or run jessie and trusty:, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='jessie, trusty', +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, + * <p>, + * Also breaks fields with [type].[name] into a boolean query that must include the type, +++ b/core/src/main/java/org/apache/lucene/search/XFilteredDocIdSetIterator.java, +   * @see #XFilteredDocIdSetIterator(DocIdSetIterator), +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +   * FST&lt;Weight,Surface&gt;: , +  /** Include this flag in the options parameter to {@code, +  /** Include this flag in the options parameter to {@code, +   * Calls {@code #XAnalyzingSuggester(Analyzer,Analyzer,int,int,int,boolean,FST,boolean,int,int,int,int,int), +   * Calls {@code #XAnalyzingSuggester(Analyzer,Analyzer,int,int,int,boolean,FST,boolean,int,int,int,int,int), +  /** cost -&gt; weight */, +  /** weight -&gt; cost */, +++ b/TESTING.asciidoc, +or run jessie and trusty:, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='jessie, trusty', +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, + * <p>, + * Also breaks fields with [type].[name] into a boolean query that must include the type, +++ b/core/src/main/java/org/apache/lucene/search/XFilteredDocIdSetIterator.java, +   * @see #XFilteredDocIdSetIterator(DocIdSetIterator), +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +   * FST&lt;Weight,Surface&gt;: , +  /** Include this flag in the options parameter to {@code, +  /** Include this flag in the options parameter to {@code, +   * Calls {@code #XAnalyzingSuggester(Analyzer,Analyzer,int,int,int,boolean,FST,boolean,int,int,int,int,int), +   * Calls {@code #XAnalyzingSuggester(Analyzer,Analyzer,int,int,int,boolean,FST,boolean,int,int,int,int,int), +  /** cost -&gt; weight */, +  /** weight -&gt; cost */, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XFuzzySuggester.java, +     * Creates a {@link FuzzySuggester} instance with an index &amp; a query analyzer initialized with default values., +     * @param maxEdits must be &gt;= 0 and &lt;= {@link org.apache.lucene.util.automaton.LevenshteinAutomata#MAXIMUM_SUPPORTED_DISTANCE} ., +++ b/TESTING.asciidoc, +or run jessie and trusty:, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='jessie, trusty', +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, + * <p>, + * Also breaks fields with [type].[name] into a boolean query that must include the type, +++ b/core/src/main/java/org/apache/lucene/search/XFilteredDocIdSetIterator.java, +   * @see #XFilteredDocIdSetIterator(DocIdSetIterator), +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +   * FST&lt;Weight,Surface&gt;: , +  /** Include this flag in the options parameter to {@code, +  /** Include this flag in the options parameter to {@code, +   * Calls {@code #XAnalyzingSuggester(Analyzer,Analyzer,int,int,int,boolean,FST,boolean,int,int,int,int,int), +   * Calls {@code #XAnalyzingSuggester(Analyzer,Analyzer,int,int,int,boolean,FST,boolean,int,int,int,int,int), +  /** cost -&gt; weight */, +  /** weight -&gt; cost */, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XFuzzySuggester.java, +     * Creates a {@link FuzzySuggester} instance with an index &amp; a query analyzer initialized with default values., +     * @param maxEdits must be &gt;= 0 and &lt;= {@link org.apache.lucene.util.automaton.LevenshteinAutomata#MAXIMUM_SUPPORTED_DISTANCE} ., +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +     * The message can be parameterized using <code>{}</code> as placeholders for the given, +     * The message can be parameterized using <code>{}</code> as placeholders for the given, +++ b/TESTING.asciidoc, +or run jessie and trusty:, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='jessie, trusty', +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, + * <p>]