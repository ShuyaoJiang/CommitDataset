[+++ b/docs/plugins/ingest-attachment.asciidoc, +The ingest attachment plugin lets Elasticsearch extract file attachments in common formats (such as PPT, XLS, and PDF) by, +You can use the ingest attachment plugin as a replacement for the mapper attachment plugin., +| `fields`               | no        | all              | Properties to select to be stored. Can be `content`, `title`, `name`, `author`, `keywords`, `date`, `content_type`, `content_length`, `language`, +++ b/docs/plugins/ingest-attachment.asciidoc, +The ingest attachment plugin lets Elasticsearch extract file attachments in common formats (such as PPT, XLS, and PDF) by, +You can use the ingest attachment plugin as a replacement for the mapper attachment plugin., +| `fields`               | no        | all              | Properties to select to be stored. Can be `content`, `title`, `name`, `author`, `keywords`, `date`, `content_type`, `content_length`, `language`, +++ b/docs/plugins/ingest-geoip.asciidoc, +The GeoIP processor can run with other geoip2 databases from Maxmind. The files must be copied into the geoip config directory,, +* If the GeoLite2 City database is used, then the following fields may be added under the `target_field`: `ip`,, +* If the GeoLite2 Country database is used, then the following fields may be added under the `target_field`: `ip`,, +Here is an example that uses the default city database and adds the geographical information to the `geoip` field based on the `ip` field:, +Here is an example that uses the default country database and adds the geographical information to the `geo` field based on the `ip` field`:, +++ b/docs/plugins/ingest-attachment.asciidoc, +The ingest attachment plugin lets Elasticsearch extract file attachments in common formats (such as PPT, XLS, and PDF) by, +You can use the ingest attachment plugin as a replacement for the mapper attachment plugin., +| `fields`               | no        | all              | Properties to select to be stored. Can be `content`, `title`, `name`, `author`, `keywords`, `date`, `content_type`, `content_length`, `language`, +++ b/docs/plugins/ingest-geoip.asciidoc, +The GeoIP processor can run with other geoip2 databases from Maxmind. The files must be copied into the geoip config directory,, +* If the GeoLite2 City database is used, then the following fields may be added under the `target_field`: `ip`,, +* If the GeoLite2 Country database is used, then the following fields may be added under the `target_field`: `ip`,, +Here is an example that uses the default city database and adds the geographical information to the `geoip` field based on the `ip` field:, +Here is an example that uses the default country database and adds the geographical information to the `geo` field based on the `ip` field`:, +++ b/docs/reference/ingest.asciidoc, +You can use ingest node to pre-process documents before the actual indexing takes place., +transformations, and then passes the documents back to the index or bulk APIs., +You can enable ingest on any node or even have dedicated ingest nodes. Ingest is enabled by default, +on all nodes. To disable ingest on a node, configure the following setting in the `elasticsearch.yml` file:, +To pre-process documents before indexing, you <<pipe-line,define a pipeline>> that specifies, +a series of <<ingest-processors,processors>>. Each processor transforms the document in some way., +For example, you may have a pipeline that consists of one processor that removes a field from, +the document followed by another processor that renames a field. , +To use a pipeline, you simply specify the `pipeline` parameter on an index or bulk request to, +tell the ingest node which pipeline to use. For example:, +See <<ingest-apis,Ingest APIs>> for more information about creating, adding, and deleting pipelines. , +, +++ b/docs/plugins/ingest-attachment.asciidoc, +The ingest attachment plugin lets Elasticsearch extract file attachments in common formats (such as PPT, XLS, and PDF) by, +You can use the ingest attachment plugin as a replacement for the mapper attachment plugin., +| `fields`               | no        | all              | Properties to select to be stored. Can be `content`, `title`, `name`, `author`, `keywords`, `date`, `content_type`, `content_length`, `language`, +++ b/docs/plugins/ingest-geoip.asciidoc, +The GeoIP processor can run with other geoip2 databases from Maxmind. The files must be copied into the geoip config directory,, +* If the GeoLite2 City database is used, then the following fields may be added under the `target_field`: `ip`,, +* If the GeoLite2 Country database is used, then the following fields may be added under the `target_field`: `ip`,, +Here is an example that uses the default city database and adds the geographical information to the `geoip` field based on the `ip` field:, +Here is an example that uses the default country database and adds the geographical information to the `geo` field based on the `ip` field`:, +++ b/docs/reference/ingest.asciidoc, +You can use ingest node to pre-process documents before the actual indexing takes place., +transformations, and then passes the documents back to the index or bulk APIs., +You can enable ingest on any node or even have dedicated ingest nodes. Ingest is enabled by default, +on all nodes. To disable ingest on a node, configure the following setting in the `elasticsearch.yml` file:, +To pre-process documents before indexing, you <<pipe-line,define a pipeline>> that specifies, +a series of <<ingest-processors,processors>>. Each processor transforms the document in some way., +For example, you may have a pipeline that consists of one processor that removes a field from, +the document followed by another processor that renames a field. , +To use a pipeline, you simply specify the `pipeline` parameter on an index or bulk request to, +tell the ingest node which pipeline to use. For example:, +See <<ingest-apis,Ingest APIs>> for more information about creating, adding, and deleting pipelines. , +, +++ b/docs/reference/ingest/ingest-node.asciidoc, +A pipeline is a definition of  a series of <<ingest-processors, processors>> that are to be executed, +in the same order as they are declared. A pipeline consists of two main fields: a `description`, +and a list of `processors`:, +, +what the pipeline does., +[[ingest-apis]], +The following ingest APIs are available for managing pipelines:, +* <<put-pipeline-api>> to add or update a pipeline, +* <<get-pipeline-api>> to return a specific pipeline, +* <<delete-pipeline-api>> to delete a pipeline, +* <<simulate-pipeline-api>> to simulate a call to a pipeline, +, +[[put-pipeline-api]], +=== Put Pipeline API, +, +The put pipeline API adds pipelines and updates existing pipelines in the cluster., +NOTE: The put pipeline API also instructs all ingest nodes to reload their in-memory representation of pipelines, so that, +      pipeline changes take effect immediately., +[[get-pipeline-api]], +=== Get Pipeline API, +The get pipeline API returns pipelines based on ID. This API always returns a local reference of the pipeline., +For each returned pipeline, the source and the version are returned., +The version is useful for knowing which version of the pipeline the node has., +You can specify multiple IDs to return more than one pipeline. Wildcards are also supported., +[[delete-pipeline-api]], +=== Delete Pipeline API, +The delete pipeline API deletes pipelines by ID., +[[simulate-pipeline-api]], +=== Simulate Pipeline API, +The simulate pipeline API executes a specific pipeline against, +You can either specify an existing pipeline to execute, +Here is the structure of a simulate request with a pipeline definition provided, +in the body of the request:, +Here is the structure of a simulate request against an existing pipeline:, +Here is an example of a simulate request with a pipeline defined in the request, +and its response:, +Response:, +[[ingest-verbose-param]], +==== Viewing Verbose Results]