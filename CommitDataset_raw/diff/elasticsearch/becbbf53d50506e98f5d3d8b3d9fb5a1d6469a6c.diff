[+++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        applyBoost(mField, q);, +                        applyBoost(mField, q);, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        applyBoost(mField, q);, +                        applyBoost(mField, q);, +++ b/src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java, +import java.util.concurrent.ExecutionException;, +import static org.hamcrest.Matchers.*;, +    public void testQuotedQueryStringWithBoost() throws InterruptedException, ExecutionException {, +        float boost = 10.0f;, +        client().admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards", 1)).execute().actionGet();, +        indexRandom("test", true,, +            client().prepareIndex("test", "type1", "1").setSource("important", "phrase match", "less_important", "nothing important"),, +            client().prepareIndex("test", "type1", "2").setSource("important", "nothing important", "less_important", "phrase match"), +        );, +, +        SearchResponse searchResponse = client().prepareSearch(), +                .setQuery(queryString("\"phrase match\"").field("important", boost).field("less_important")), +                .execute().actionGet();, +        assertNoFailures(searchResponse);, +        assertThat(searchResponse.getHits().totalHits(), equalTo(2l));, +        assertThat(searchResponse.getHits().getAt(0).id(), equalTo("1"));, +        assertThat(searchResponse.getHits().getAt(1).id(), equalTo("2"));, +        assertThat((double)searchResponse.getHits().getAt(0).score(), closeTo(boost * searchResponse.getHits().getAt(1).score(), .1));, +, +        searchResponse = client().prepareSearch(), +                .setQuery(queryString("\"phrase match\"").field("important", boost).field("less_important").useDisMax(false)), +                .execute().actionGet();, +        assertNoFailures(searchResponse);, +        assertThat(searchResponse.getHits().totalHits(), equalTo(2l));, +        assertThat(searchResponse.getHits().getAt(0).id(), equalTo("1"));, +        assertThat(searchResponse.getHits().getAt(1).id(), equalTo("2"));, +        assertThat((double)searchResponse.getHits().getAt(0).score(), closeTo(boost * searchResponse.getHits().getAt(1).score(), .1));, +    }, +, +    @Test]