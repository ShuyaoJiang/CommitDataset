[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/results/Forecast.java, +    public static final ParseField DETECTOR_INDEX = new ParseField("detector_index");, +            new ConstructingObjectParser<>(RESULT_TYPE_VALUE, a ->, +            new Forecast((String) a[0], (long) a[1], (Date) a[2], (long) a[3], (int) a[4]));, +        PARSER.declareInt(ConstructingObjectParser.constructorArg(), DETECTOR_INDEX);, +    private int detectorIndex;, +    public Forecast(String jobId, long forecastId, Date timestamp, long bucketSpan, int detectorIndex) {, +        this.detectorIndex = detectorIndex;, +        detectorIndex = in.readInt();, +        out.writeInt(detectorIndex);, +        builder.field(DETECTOR_INDEX.getPreferredName(), detectorIndex);, +        int valuesHash = Objects.hash(byFieldValue, partitionFieldValue);, +        return jobId + "_model_forecast_" + forecastId + "_" + timestamp.getTime(), +                + "_" + bucketSpan + "_" + detectorIndex + "_", +                + valuesHash + "_" + length;, +    public int getDetectorIndex() {, +        return detectorIndex;, +    }, +, +                this.bucketSpan ==  that.bucketSpan &&, +                this.detectorIndex == that.detectorIndex;, +                byFieldName, byFieldValue, modelFeature, forecastLower, forecastUpper,, +                forecastPrediction, bucketSpan, detectorIndex);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/results/Forecast.java, +    public static final ParseField DETECTOR_INDEX = new ParseField("detector_index");, +            new ConstructingObjectParser<>(RESULT_TYPE_VALUE, a ->, +            new Forecast((String) a[0], (long) a[1], (Date) a[2], (long) a[3], (int) a[4]));, +        PARSER.declareInt(ConstructingObjectParser.constructorArg(), DETECTOR_INDEX);, +    private int detectorIndex;, +    public Forecast(String jobId, long forecastId, Date timestamp, long bucketSpan, int detectorIndex) {, +        this.detectorIndex = detectorIndex;, +        detectorIndex = in.readInt();, +        out.writeInt(detectorIndex);, +        builder.field(DETECTOR_INDEX.getPreferredName(), detectorIndex);, +        int valuesHash = Objects.hash(byFieldValue, partitionFieldValue);, +        return jobId + "_model_forecast_" + forecastId + "_" + timestamp.getTime(), +                + "_" + bucketSpan + "_" + detectorIndex + "_", +                + valuesHash + "_" + length;, +    public int getDetectorIndex() {, +        return detectorIndex;, +    }, +, +                this.bucketSpan ==  that.bucketSpan &&, +                this.detectorIndex == that.detectorIndex;, +                byFieldName, byFieldValue, modelFeature, forecastLower, forecastUpper,, +                forecastPrediction, bucketSpan, detectorIndex);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/results/ModelPlot.java, +    public static final ParseField DETECTOR_INDEX = new ParseField("detector_index");, +            new ConstructingObjectParser<>(RESULT_TYPE_VALUE, a ->, +            new ModelPlot((String) a[0], (Date) a[1], (long) a[2], (int) a[3]));, +        PARSER.declareInt(ConstructingObjectParser.constructorArg(), DETECTOR_INDEX);, +    private int detectorIndex;, +    public ModelPlot(String jobId, Date timestamp, long bucketSpan, int detectorIndex) {, +        this.detectorIndex = detectorIndex;, +        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {, +            detectorIndex = in.readInt();, +        } else {, +            // default to -1 as marker for no detector index, +            detectorIndex = -1;, +        }, +        if (out.getVersion().onOrAfter(Version.V_6_1_0)) {, +            out.writeInt(detectorIndex);, +        }, +        builder.field(DETECTOR_INDEX.getPreferredName(), detectorIndex);, +, +        return jobId + "_model_plot_" + timestamp.getTime() + "_" + bucketSpan, +                + "_" + detectorIndex + "_" + valuesHash + "_" + length;, +    public int getDetectorIndex() {, +        return detectorIndex;, +    }, +, +                this.bucketSpan ==  that.bucketSpan &&, +                this.detectorIndex == that.detectorIndex;, +                modelFeature, modelLower, modelUpper, modelMedian, actual, bucketSpan, detectorIndex);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/results/Forecast.java, +    public static final ParseField DETECTOR_INDEX = new ParseField("detector_index");, +            new ConstructingObjectParser<>(RESULT_TYPE_VALUE, a ->, +            new Forecast((String) a[0], (long) a[1], (Date) a[2], (long) a[3], (int) a[4]));, +        PARSER.declareInt(ConstructingObjectParser.constructorArg(), DETECTOR_INDEX);, +    private int detectorIndex;, +    public Forecast(String jobId, long forecastId, Date timestamp, long bucketSpan, int detectorIndex) {, +        this.detectorIndex = detectorIndex;, +        detectorIndex = in.readInt();, +        out.writeInt(detectorIndex);, +        builder.field(DETECTOR_INDEX.getPreferredName(), detectorIndex);, +        int valuesHash = Objects.hash(byFieldValue, partitionFieldValue);, +        return jobId + "_model_forecast_" + forecastId + "_" + timestamp.getTime(), +                + "_" + bucketSpan + "_" + detectorIndex + "_", +                + valuesHash + "_" + length;, +    public int getDetectorIndex() {, +        return detectorIndex;, +    }, +, +                this.bucketSpan ==  that.bucketSpan &&, +                this.detectorIndex == that.detectorIndex;, +                byFieldName, byFieldValue, modelFeature, forecastLower, forecastUpper,, +                forecastPrediction, bucketSpan, detectorIndex);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/results/ModelPlot.java, +    public static final ParseField DETECTOR_INDEX = new ParseField("detector_index");, +            new ConstructingObjectParser<>(RESULT_TYPE_VALUE, a ->]