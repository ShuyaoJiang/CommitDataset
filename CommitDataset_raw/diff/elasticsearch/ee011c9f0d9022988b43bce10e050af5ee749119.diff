[+++ b/src/main/java/org/elasticsearch/search/highlight/HighlightPhase.java, +                    QueryScorer queryScorer = new QueryScorer(query, field.requireFieldMatch() ? mapper.names().indexName() : null);, +                        // parameters to FVH are not requires since:, +                        // first two booleans are not relevant since they are set on the CustomFieldQuery (phrase and fieldMatch), +                        // fragment builders are used explicitly, +                        entry.fieldQuery = new CustomFieldQuery(context.parsedQuery().query(), hitContext.topLevelReader(), true, field.requireFieldMatch());, +++ b/src/main/java/org/elasticsearch/search/highlight/HighlightPhase.java, +                    QueryScorer queryScorer = new QueryScorer(query, field.requireFieldMatch() ? mapper.names().indexName() : null);, +                        // parameters to FVH are not requires since:, +                        // first two booleans are not relevant since they are set on the CustomFieldQuery (phrase and fieldMatch), +                        // fragment builders are used explicitly, +                        entry.fieldQuery = new CustomFieldQuery(context.parsedQuery().query(), hitContext.topLevelReader(), true, field.requireFieldMatch());, +++ b/src/main/java/org/elasticsearch/search/highlight/HighlighterParseElement.java, +        boolean globalRequireFieldMatch = false;, +                } else if ("require_field_match".equals(topLevelFieldName) || "requireFieldMatch".equals(topLevelFieldName)) {, +                    globalRequireFieldMatch = parser.booleanValue();, +                                    } else if ("require_field_match".equals(fieldName) || "requireFieldMatch".equals(fieldName)) {, +                                        field.requireFieldMatch(parser.booleanValue());, +            if (field.requireFieldMatch() == null) {, +                field.requireFieldMatch(globalRequireFieldMatch);, +            }, +++ b/src/main/java/org/elasticsearch/search/highlight/HighlightPhase.java, +                    QueryScorer queryScorer = new QueryScorer(query, field.requireFieldMatch() ? mapper.names().indexName() : null);, +                        // parameters to FVH are not requires since:, +                        // first two booleans are not relevant since they are set on the CustomFieldQuery (phrase and fieldMatch), +                        // fragment builders are used explicitly, +                        entry.fieldQuery = new CustomFieldQuery(context.parsedQuery().query(), hitContext.topLevelReader(), true, field.requireFieldMatch());, +++ b/src/main/java/org/elasticsearch/search/highlight/HighlighterParseElement.java, +        boolean globalRequireFieldMatch = false;, +                } else if ("require_field_match".equals(topLevelFieldName) || "requireFieldMatch".equals(topLevelFieldName)) {, +                    globalRequireFieldMatch = parser.booleanValue();, +                                    } else if ("require_field_match".equals(fieldName) || "requireFieldMatch".equals(fieldName)) {, +                                        field.requireFieldMatch(parser.booleanValue());, +            if (field.requireFieldMatch() == null) {, +                field.requireFieldMatch(globalRequireFieldMatch);, +            }, +++ b/src/main/java/org/elasticsearch/search/highlight/SearchContextHighlight.java, +        private Boolean requireFieldMatch;, +, +        public Boolean requireFieldMatch() {, +            return requireFieldMatch;, +        }, +, +        public void requireFieldMatch(boolean requireFieldMatch) {, +            this.requireFieldMatch = requireFieldMatch;, +        }]