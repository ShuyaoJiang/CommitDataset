[+++ b/src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java, + * Base structure for aggregation builders., +    /**, +     * Sole constructor, typically used by sub-classes., +     */, +    /**, +     * Return the name of the aggregation that is being built., +     */, +++ b/src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java, + * Base structure for aggregation builders., +    /**, +     * Sole constructor, typically used by sub-classes., +     */, +    /**, +     * Return the name of the aggregation that is being built., +     */, +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java, +    /**, +     * Sole constructor, typically used by sub-classes., +     */, +++ b/src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java, + * Base structure for aggregation builders., +    /**, +     * Sole constructor, typically used by sub-classes., +     */, +    /**, +     * Return the name of the aggregation that is being built., +     */, +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java, +    /**, +     * Sole constructor, typically used by sub-classes., +     */, +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilders.java, +import org.elasticsearch.search.aggregations.bucket.children.Children;, +import org.elasticsearch.search.aggregations.bucket.filter.Filter;, +import org.elasticsearch.search.aggregations.bucket.filters.Filters;, +import org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGrid;, +import org.elasticsearch.search.aggregations.bucket.global.Global;, +import org.elasticsearch.search.aggregations.bucket.histogram.DateHistogram;, +import org.elasticsearch.search.aggregations.bucket.histogram.Histogram;, +import org.elasticsearch.search.aggregations.bucket.missing.Missing;, +import org.elasticsearch.search.aggregations.bucket.nested.Nested;, +import org.elasticsearch.search.aggregations.bucket.nested.ReverseNested;, +import org.elasticsearch.search.aggregations.bucket.range.Range;, +import org.elasticsearch.search.aggregations.bucket.range.date.DateRange;, +import org.elasticsearch.search.aggregations.bucket.range.geodistance.GeoDistance;, +import org.elasticsearch.search.aggregations.bucket.range.ipv4.IPv4Range;, +import org.elasticsearch.search.aggregations.bucket.significant.SignificantTerms;, +import org.elasticsearch.search.aggregations.bucket.terms.Terms;, +import org.elasticsearch.search.aggregations.metrics.avg.Avg;, +import org.elasticsearch.search.aggregations.metrics.cardinality.Cardinality;, +import org.elasticsearch.search.aggregations.metrics.geobounds.GeoBounds;, +import org.elasticsearch.search.aggregations.metrics.max.Max;, +import org.elasticsearch.search.aggregations.metrics.min.Min;, +import org.elasticsearch.search.aggregations.metrics.percentiles.PercentileRanks;, +import org.elasticsearch.search.aggregations.metrics.percentiles.Percentiles;, +import org.elasticsearch.search.aggregations.metrics.scripted.ScriptedMetric;, +import org.elasticsearch.search.aggregations.metrics.stats.Stats;, +import org.elasticsearch.search.aggregations.metrics.stats.extended.ExtendedStats;, +import org.elasticsearch.search.aggregations.metrics.sum.Sum;, +import org.elasticsearch.search.aggregations.metrics.tophits.TopHits;, +import org.elasticsearch.search.aggregations.metrics.valuecount.ValueCount;, + * Utility class to create aggregations., +    private AggregationBuilders() {, +    /**, +     * Create a new {@link ValueCount} aggregation with the given name., +     */, +    /**, +     * Create a new {@link Avg} aggregation with the given name., +     */, +    /**, +     * Create a new {@link Max} aggregation with the given name., +     */, +    /**, +     * Create a new {@link Min} aggregation with the given name., +     */, +    /**, +     * Create a new {@link Sum} aggregation with the given name., +     */, +    /**, +     * Create a new {@link Stats} aggregation with the given name., +     */, +    /**, +     * Create a new {@link ExtendedStats} aggregation with the given name., +     */, +    /**, +     * Create a new {@link Filter} aggregation with the given name., +     */, +    /**, +     * Create a new {@link Filters} aggregation with the given name., +     */, +    /**, +     * Create a new {@link Global} aggregation with the given name., +     */, +    /**, +     * Create a new {@link Missing} aggregation with the given name., +     */, +    /**, +     * Create a new {@link Nested} aggregation with the given name., +     */]