[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java, +        if (source.size() != 1 || !source.containsKey(type)) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java, +        if (source.size() != 1 || !source.containsKey(type)) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/admin/indices/create/RestCreateIndexAction.java, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentType;, +import java.util.Map;, +    @SuppressWarnings({"unchecked"}), +        CreateIndexRequest createIndexRequest = new CreateIndexRequest(request.param("index"));, +        if (request.hasContent()) {, +            XContentType xContentType = XContentFactory.xContentType(request.contentByteArray(), request.contentByteArrayOffset(), request.contentLength());, +            if (xContentType != null) {, +                    Map<String, Object> source = XContentFactory.xContent(xContentType), +                            .createParser(request.contentByteArray(), request.contentByteArrayOffset(), request.contentLength()).mapAndClose();, +                    if (source.containsKey("settings")) {, +                        createIndexRequest.settings((Map<String, Object>) source.get("settings"));, +                    }, +                    if (source.containsKey("mappings")) {, +                        Map<String, Object> mappings = (Map<String, Object>) source.get("mappings");, +                        for (Map.Entry<String, Object> entry : mappings.entrySet()) {, +                            createIndexRequest.mapping(entry.getKey(), (Map<String, Object>) entry.getValue());, +                        }, +                    }, +                } catch (Exception e) {, +                    try {, +                        channel.sendResponse(new XContentThrowableRestResponse(request, e));, +                    } catch (IOException e1) {, +                        logger.warn("Failed to send response", e1);, +                        return;, +                    }, +                }, +            } else {, +                // its plain settings, parse and set them, +                try {, +                    createIndexRequest.settings(request.contentAsString());, +        }, +, +]