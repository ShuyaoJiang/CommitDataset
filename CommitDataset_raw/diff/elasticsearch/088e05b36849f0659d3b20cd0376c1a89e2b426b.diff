[+++ b/pom.xml, +            <groupId>com.carrotsearch</groupId>, +            <artifactId>hppc</artifactId>, +            <version>0.5.2</version>, +                            <include>com.carrotsearch:hppc</include>, +                            <pattern>com.carrotsearch.hppc</pattern>, +                            <shadedPattern>org.elasticsearch.common.hppc</shadedPattern>, +++ b/pom.xml, +            <groupId>com.carrotsearch</groupId>, +            <artifactId>hppc</artifactId>, +            <version>0.5.2</version>, +                            <include>com.carrotsearch:hppc</include>, +                            <pattern>com.carrotsearch.hppc</pattern>, +                            <shadedPattern>org.elasticsearch.common.hppc</shadedPattern>, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +            float boost = 1f;, +            if (settings.boosts().containsKey(field)) {, +                boost = settings.boosts().lget();, +            }, +++ b/pom.xml, +            <groupId>com.carrotsearch</groupId>, +            <artifactId>hppc</artifactId>, +            <version>0.5.2</version>, +                            <include>com.carrotsearch:hppc</include>, +                            <pattern>com.carrotsearch.hppc</pattern>, +                            <shadedPattern>org.elasticsearch.common.hppc</shadedPattern>, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +            float boost = 1f;, +            if (settings.boosts().containsKey(field)) {, +                boost = settings.boosts().lget();, +            }, +++ b/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +import com.carrotsearch.hppc.ObjectFloatOpenHashMap;, +    ObjectFloatOpenHashMap<String> boosts = null;, +    public ObjectFloatOpenHashMap<String> boosts() {, +    public void boosts(ObjectFloatOpenHashMap<String> boosts) {, +++ b/pom.xml, +            <groupId>com.carrotsearch</groupId>, +            <artifactId>hppc</artifactId>, +            <version>0.5.2</version>, +                            <include>com.carrotsearch:hppc</include>, +                            <pattern>com.carrotsearch.hppc</pattern>, +                            <shadedPattern>org.elasticsearch.common.hppc</shadedPattern>, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +            float boost = 1f;, +            if (settings.boosts().containsKey(field)) {, +                boost = settings.boosts().lget();, +            }, +++ b/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +import com.carrotsearch.hppc.ObjectFloatOpenHashMap;, +    ObjectFloatOpenHashMap<String> boosts = null;, +    public ObjectFloatOpenHashMap<String> boosts() {, +    public void boosts(ObjectFloatOpenHashMap<String> boosts) {, +++ b/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +import com.carrotsearch.hppc.ObjectIntOpenHashMap;, +import org.elasticsearch.common.hppc.HppcMaps;, +        private ObjectIntOpenHashMap<BytesRef> seenSurfaceForms = HppcMaps.Object.Integer.ensureNoNullKeys(256, 0.75f);, +            if (count > 0 && seenSurfaceForms.containsKey(surface)) {, +                surfaceIndex = seenSurfaceForms.lget();, +++ b/pom.xml, +            <groupId>com.carrotsearch</groupId>, +            <artifactId>hppc</artifactId>, +            <version>0.5.2</version>, +                            <include>com.carrotsearch:hppc</include>, +                            <pattern>com.carrotsearch.hppc</pattern>, +                            <shadedPattern>org.elasticsearch.common.hppc</shadedPattern>, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +            float boost = 1f;, +            if (settings.boosts().containsKey(field)) {, +                boost = settings.boosts().lget();, +            }, +++ b/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +import com.carrotsearch.hppc.ObjectFloatOpenHashMap;, +    ObjectFloatOpenHashMap<String> boosts = null;, +    public ObjectFloatOpenHashMap<String> boosts() {, +    public void boosts(ObjectFloatOpenHashMap<String> boosts) {, +++ b/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +import com.carrotsearch.hppc.ObjectIntOpenHashMap;, +import org.elasticsearch.common.hppc.HppcMaps;, +        private ObjectIntOpenHashMap<BytesRef> seenSurfaceForms = HppcMaps.Object.Integer.ensureNoNullKeys(256, 0.75f);, +            if (count > 0 && seenSurfaceForms.containsKey(surface)) {, +                surfaceIndex = seenSurfaceForms.lget();, +++ b/src/main/java/org/elasticsearch/action/deletebyquery/IndexDeleteByQueryRequest.java, +import java.util.HashSet;, +            routing = new HashSet<String>(routingSize);, +++ b/pom.xml, +            <groupId>com.carrotsearch</groupId>, +            <artifactId>hppc</artifactId>, +            <version>0.5.2</version>, +                            <include>com.carrotsearch:hppc</include>, +                            <pattern>com.carrotsearch.hppc</pattern>, +                            <shadedPattern>org.elasticsearch.common.hppc</shadedPattern>, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +            float boost = 1f;, +            if (settings.boosts().containsKey(field)) {, +                boost = settings.boosts().lget();, +            }, +++ b/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java, +import com.carrotsearch.hppc.ObjectFloatOpenHashMap;, +    ObjectFloatOpenHashMap<String> boosts = null;]