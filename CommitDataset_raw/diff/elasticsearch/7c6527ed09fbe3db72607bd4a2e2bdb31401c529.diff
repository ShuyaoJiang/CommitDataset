[+++ b/core/src/main/java/org/elasticsearch/discovery/zen/NodeJoinController.java, +            tasks.put(BECOME_MASTER_TASK, (source1, e) -> {}); // noop listener, the election finished listener determines result, +            tasks.put(FINISH_ELECTION_TASK, electionFinishedListener);, +            final String source = "zen-disco-election-stop [" + reason + "]";, +            tasks.put(FINISH_ELECTION_TASK, electionFinishedListener);, +        private final ClusterStateTaskListener electionFinishedListener = new ClusterStateTaskListener() {, +                if (newState.nodes().isLocalNodeElectedMaster()) {, +                    ElectionContext.this.onElectedAsMaster(newState);, +                } else {, +                    onFailure(source, new NotMasterException("election stopped [" + source + "]"));, +                }, +    /**, +     * a task indicated that the current node should become master, if no current master is known, +     */, +    /**, +     * a task that is used to signal the election is stopped and we should process pending joins., +     * it may be use in combination with {@link #BECOME_MASTER_TASK}, +     */, +    private static final DiscoveryNode FINISH_ELECTION_TASK = new DiscoveryNode("_FINISH_ELECTION_",, +, +            final DiscoveryNodes currentNodes = currentState.nodes();, +            if (joiningNodes.size() == 1  && joiningNodes.get(0).equals(FINISH_ELECTION_TASK)) {, +                return results.successes(joiningNodes).build(currentState);, +            } else if (currentNodes.getMasterNode() == null && joiningNodes.contains(BECOME_MASTER_TASK)) {, +                assert joiningNodes.contains(FINISH_ELECTION_TASK) : "becoming a master but election is not finished " + joiningNodes;, +            } else if (nodesBuilder.isLocalNodeElectedMaster() == false) {, +            assert nodesBuilder.isLocalNodeElectedMaster();, +, +            // processing any joins, +                if (node.equals(BECOME_MASTER_TASK) || node.equals(FINISH_ELECTION_TASK)) {]