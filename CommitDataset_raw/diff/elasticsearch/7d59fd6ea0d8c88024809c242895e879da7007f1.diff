[+++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateShardRequest.java, +    private long startTime;, +        this.startTime = request.startTime;, +        this.startTime = request.startTime;, +    public long getStartTime() {, +        return startTime;, +    }, +, +        startTime = in.readLong(); // no vlong, this can be negative!, +        out.writeLong(startTime);, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateShardRequest.java, +    private long startTime;, +        this.startTime = request.startTime;, +        this.startTime = request.startTime;, +    public long getStartTime() {, +        return startTime;, +    }, +, +        startTime = in.readLong(); // no vlong, this can be negative!, +        out.writeLong(startTime);, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +    private final long startTime;, +        this.startTime = request.getStartTime();, +        return startTime;, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateShardRequest.java, +    private long startTime;, +        this.startTime = request.startTime;, +        this.startTime = request.startTime;, +    public long getStartTime() {, +        return startTime;, +    }, +, +        startTime = in.readLong(); // no vlong, this can be negative!, +        out.writeLong(startTime);, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +    private final long startTime;, +        this.startTime = request.getStartTime();, +        return startTime;, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolatorService.java, +        SearchContext.setCurrent(context);, +            SearchContext.removeCurrent();, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateShardRequest.java, +    private long startTime;, +        this.startTime = request.startTime;, +        this.startTime = request.startTime;, +    public long getStartTime() {, +        return startTime;, +    }, +, +        startTime = in.readLong(); // no vlong, this can be negative!, +        out.writeLong(startTime);, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +    private final long startTime;, +        this.startTime = request.getStartTime();, +        return startTime;, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolatorService.java, +        SearchContext.setCurrent(context);, +            SearchContext.removeCurrent();, +++ b/core/src/test/java/org/elasticsearch/percolator/PercolatorTests.java, +    @Test, +    public void testFilterByNow() throws Exception {, +        client().prepareIndex("index", PercolatorService.TYPE_NAME, "1"), +                .setSource(jsonBuilder().startObject().field("query", matchAllQuery()).field("created", "2015-07-10T14:41:54+0000").endObject()), +                .get();, +        refresh();, +, +        PercolateResponse response = client().preparePercolate(), +                .setIndices("index"), +                .setDocumentType("type"), +                .setPercolateDoc(new PercolateSourceBuilder.DocBuilder().setDoc("{}")), +                .setPercolateQuery(rangeQuery("created").lte("now")), +                .get();, +        assertMatchCount(response, 1);, +    }, +]