[+++ b/x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/trigger/schedule/tool/CronEvalTool.java, +, +                if (i == 0) {, +                    throw new UserException(ExitCodes.OK, "Could not compute future times since [", +                break;, +            }, +++ b/x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/trigger/schedule/tool/CronEvalTool.java, +, +                if (i == 0) {, +                    throw new UserException(ExitCodes.OK, "Could not compute future times since [", +                break;, +            }, +++ b/x-pack/plugin/watcher/src/test/java/org/elasticsearch/xpack/watcher/trigger/schedule/tool/CronEvalToolTests.java, +import java.util.Calendar;, +import java.util.Locale;, +import java.util.TimeZone;, +, +import static org.hamcrest.Matchers.containsString;, +import static org.hamcrest.Matchers.not;, +, +        assertThat(output, containsString("Here are the next " + count + " times this cron expression will trigger"));, +    }, +, +    public void testGetNextValidTimes() throws Exception {, +        final int year = Calendar.getInstance(TimeZone.getTimeZone("UTC"), Locale.ROOT).get(Calendar.YEAR) + 1;, +        {, +            String output = execute("0 3 23 8 9 ? " + year);, +            assertThat(output, containsString("Here are the next 10 times this cron expression will trigger:"));, +            assertThat(output, not(containsString("ERROR")));, +            assertThat(output, not(containsString("2.\t")));, +        }, +        {, +            String output = execute("0 3 23 */4 9 ? " + year);, +            assertThat(output, containsString("Here are the next 10 times this cron expression will trigger:"));, +            assertThat(output, not(containsString("ERROR")));, +        }, +        {, +            Exception expectThrows = expectThrows(Exception.class, () -> execute("0 3 23 */4 9 ? 2017"));, +            String message = expectThrows.getMessage();, +            assertThat(message, containsString("Could not compute future times since"));, +            assertThat(message, containsString("(perhaps the cron expression only points to times in the past?)"));, +        }]