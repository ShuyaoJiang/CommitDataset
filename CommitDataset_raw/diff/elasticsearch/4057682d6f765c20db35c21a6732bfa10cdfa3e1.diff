[+++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    ResourceWatcherService.RELOAD_INTERVAL_LOW, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    ResourceWatcherService.RELOAD_INTERVAL_LOW, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java, +        Settings indexSettings = settings.filter((s) -> s.startsWith("index.") && clusterSettings.get(s) == null);, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    ResourceWatcherService.RELOAD_INTERVAL_LOW, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java, +        Settings indexSettings = settings.filter((s) -> s.startsWith("index.") && clusterSettings.get(s) == null);, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        BooleanQuery.setMaxClauseCount(settings.getAsInt("index.query.bool.max_clause_count",, +                settings.getAsInt("indices.query.bool.max_clause_count", BooleanQuery.getMaxClauseCount())));, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    ResourceWatcherService.RELOAD_INTERVAL_LOW, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java, +        Settings indexSettings = settings.filter((s) -> s.startsWith("index.") && clusterSettings.get(s) == null);, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        BooleanQuery.setMaxClauseCount(settings.getAsInt("index.query.bool.max_clause_count",, +                settings.getAsInt("indices.query.bool.max_clause_count", BooleanQuery.getMaxClauseCount())));, +++ b/core/src/test/java/org/elasticsearch/common/settings/SettingsModuleTests.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    ResourceWatcherService.RELOAD_INTERVAL_LOW, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java, +        Settings indexSettings = settings.filter((s) -> s.startsWith("index.") && clusterSettings.get(s) == null);, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        BooleanQuery.setMaxClauseCount(settings.getAsInt("index.query.bool.max_clause_count",, +                settings.getAsInt("indices.query.bool.max_clause_count", BooleanQuery.getMaxClauseCount())));, +++ b/core/src/test/java/org/elasticsearch/common/settings/SettingsModuleTests.java, +++ b/docs/reference/migration/migrate_5_0/settings.asciidoc, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    ResourceWatcherService.RELOAD_INTERVAL_LOW, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java, +        Settings indexSettings = settings.filter((s) -> s.startsWith("index.") && clusterSettings.get(s) == null);, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        BooleanQuery.setMaxClauseCount(settings.getAsInt("index.query.bool.max_clause_count",, +                settings.getAsInt("indices.query.bool.max_clause_count", BooleanQuery.getMaxClauseCount())));, +++ b/core/src/test/java/org/elasticsearch/common/settings/SettingsModuleTests.java, +++ b/docs/reference/migration/migrate_5_0/settings.asciidoc, +++ b/docs/reference/search/request/inner-hits.asciidoc, +have matches in a different scope. In the parent/child case, parent documents are returned based on matches in child, +documents or child documents are returned based on matches in parent documents. In the nested case, documents are returned, +GET /_search, +                "match" : {"comments.message" : "some message"}, +// CONSOLE, +GET /_search, +         "query" : {, +            "match": { "name": "kimchy" }, +         },, +// CONSOLE, +GET /_search, +                "match" : {"message" : "some message"}, +// CONSOLE, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    ResourceWatcherService.RELOAD_INTERVAL_LOW, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java, +        Settings indexSettings = settings.filter((s) -> s.startsWith("index.") && clusterSettings.get(s) == null);, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        BooleanQuery.setMaxClauseCount(settings.getAsInt("index.query.bool.max_clause_count",, +                settings.getAsInt("indices.query.bool.max_clause_count", BooleanQuery.getMaxClauseCount())));, +++ b/core/src/test/java/org/elasticsearch/common/settings/SettingsModuleTests.java, +++ b/docs/reference/migration/migrate_5_0/settings.asciidoc, +++ b/docs/reference/search/request/inner-hits.asciidoc, +have matches in a different scope. In the parent/child case, parent documents are returned based on matches in child, +documents or child documents are returned based on matches in parent documents. In the nested case, documents are returned, +GET /_search, +                "match" : {"comments.message" : "some message"}, +// CONSOLE, +GET /_search, +         "query" : {, +            "match": { "name": "kimchy" }, +         },, +// CONSOLE, +GET /_search, +                "match" : {"message" : "some message"}, +// CONSOLE, +++ b/docs/reference/search/request/scroll.asciidoc, +GET /twitter/tweet/_search?scroll=1m, +// CONSOLE, +// TEST[setup:twitter], +GET <1> /_search/scroll <2> , +GET /_search?scroll=1m, +// CONSOLE, +GET /_nodes/stats/indices/search?pretty, +// CONSOLE, +DELETE /_search/scroll/_all, +// CONSOLE]