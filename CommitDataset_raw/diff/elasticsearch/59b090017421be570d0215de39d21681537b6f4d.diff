[+++ b/benchmarks/build.gradle, +    annotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:$versions.jmh", +++ b/benchmarks/build.gradle, +    annotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:$versions.jmh", +++ b/build.gradle, +import org.gradle.api.tasks.options.Option, +import  org.gradle.util.GradleVersion, +import  org.gradle.util.DistributionLocator, +    id 'com.gradle.build-scan' version '2.0.2', +  @Option(, +++ b/benchmarks/build.gradle, +    annotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:$versions.jmh", +++ b/build.gradle, +import org.gradle.api.tasks.options.Option, +import  org.gradle.util.GradleVersion, +import  org.gradle.util.DistributionLocator, +    id 'com.gradle.build-scan' version '2.0.2', +  @Option(, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestProgressLogger.groovy, +        String statusMessage, +++ b/benchmarks/build.gradle, +    annotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:$versions.jmh", +++ b/build.gradle, +import org.gradle.api.tasks.options.Option, +import  org.gradle.util.GradleVersion, +import  org.gradle.util.DistributionLocator, +    id 'com.gradle.build-scan' version '2.0.2', +  @Option(, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestProgressLogger.groovy, +        String statusMessage, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        String minimumGradleVersion = null, +        String compilerJavaHome = System.getenv('JAVA_HOME'), +++ b/benchmarks/build.gradle, +    annotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:$versions.jmh", +++ b/build.gradle, +import org.gradle.api.tasks.options.Option, +import  org.gradle.util.GradleVersion, +import  org.gradle.util.DistributionLocator, +    id 'com.gradle.build-scan' version '2.0.2', +  @Option(, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestProgressLogger.groovy, +        String statusMessage, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        String minimumGradleVersion = null, +        String compilerJavaHome = System.getenv('JAVA_HOME'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +        // on them. We also want `precommit` to depend on `checkstyle`., +++ b/benchmarks/build.gradle, +    annotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:$versions.jmh", +++ b/build.gradle, +import org.gradle.api.tasks.options.Option, +import  org.gradle.util.GradleVersion, +import  org.gradle.util.DistributionLocator, +    id 'com.gradle.build-scan' version '2.0.2', +  @Option(, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestProgressLogger.groovy, +        String statusMessage, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        String minimumGradleVersion = null, +        String compilerJavaHome = System.getenv('JAVA_HOME'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +        // on them. We also want `precommit` to depend on `checkstyle`., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            Configuration distro, +            String elasticsearchVersion, +        FileCollection pluginZip;, +++ b/benchmarks/build.gradle, +    annotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:$versions.jmh", +++ b/build.gradle, +import org.gradle.api.tasks.options.Option, +import  org.gradle.util.GradleVersion, +import  org.gradle.util.DistributionLocator, +    id 'com.gradle.build-scan' version '2.0.2', +  @Option(, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestProgressLogger.groovy, +        String statusMessage, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        String minimumGradleVersion = null, +        String compilerJavaHome = System.getenv('JAVA_HOME'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +        // on them. We also want `precommit` to depend on `checkstyle`., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            Configuration distro, +            String elasticsearchVersion, +        FileCollection pluginZip;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +import org.gradle.api.tasks.options.Option, +    Boolean includePackaged = false, +        Task copyRestSpec = createCopyRestSpecTask(), +        includePackaged = include, +    Task createCopyRestSpecTask() {, +                if (includePackaged) {, +++ b/benchmarks/build.gradle, +    annotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:$versions.jmh", +++ b/build.gradle, +import org.gradle.api.tasks.options.Option, +import  org.gradle.util.GradleVersion, +import  org.gradle.util.DistributionLocator, +    id 'com.gradle.build-scan' version '2.0.2']