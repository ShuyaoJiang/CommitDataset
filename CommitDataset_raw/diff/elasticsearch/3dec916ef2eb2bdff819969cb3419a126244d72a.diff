[+++ b/src/main/java/org/elasticsearch/search/SearchService.java, +        boolean success = false;, +        try {, +            success = true;, +        } finally {, +            if (!success) {, +                freeContext(context);, +            }, +        }, +                // Use the same value for both checks since lastAccessTime can, +                // be modified by another thread between checks!, +                long lastAccessTime = context.lastAccessTime();, +                if (lastAccessTime == -1l) { // its being processed or timeout is disabled, +                if ((time - lastAccessTime > context.keepAlive())) {, +                    logger.debug("freeing search context [{}], time [{}], lastAccessTime [{}], keepAlive [{}]", context.id(), time, lastAccessTime, context.keepAlive());, +++ b/src/main/java/org/elasticsearch/search/SearchService.java, +        boolean success = false;, +        try {, +            success = true;, +        } finally {, +            if (!success) {, +                freeContext(context);, +            }, +        }, +                // Use the same value for both checks since lastAccessTime can, +                // be modified by another thread between checks!, +                long lastAccessTime = context.lastAccessTime();, +                if (lastAccessTime == -1l) { // its being processed or timeout is disabled, +                if ((time - lastAccessTime > context.keepAlive())) {, +                    logger.debug("freeing search context [{}], time [{}], lastAccessTime [{}], keepAlive [{}]", context.id(), time, lastAccessTime, context.keepAlive());, +++ b/src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java, +    private volatile long lastAccessTime = -1;]