[+++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransport.java, +        if (tcpSendBufferSize != null && tcpSendBufferSize.bytes() > 0) {, +        if (tcpReceiveBufferSize != null && tcpReceiveBufferSize.bytes() > 0) {, +++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransport.java, +        if (tcpSendBufferSize != null && tcpSendBufferSize.bytes() > 0) {, +        if (tcpReceiveBufferSize != null && tcpReceiveBufferSize.bytes() > 0) {, +++ b/src/main/java/org/elasticsearch/transport/netty/MessageChannelHandler.java, +        ChannelBuffer buffer = (ChannelBuffer) m;, +        int size = buffer.getInt(buffer.readerIndex() - 4);, +            String action = handleRequest(ctx.getChannel(), wrappedStream, requestId);, +++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransport.java, +        if (tcpSendBufferSize != null && tcpSendBufferSize.bytes() > 0) {, +        if (tcpReceiveBufferSize != null && tcpReceiveBufferSize.bytes() > 0) {, +++ b/src/main/java/org/elasticsearch/transport/netty/MessageChannelHandler.java, +        ChannelBuffer buffer = (ChannelBuffer) m;, +        int size = buffer.getInt(buffer.readerIndex() - 4);, +            String action = handleRequest(ctx.getChannel(), wrappedStream, requestId);, +++ b/src/main/java/org/elasticsearch/transport/netty/NettyTransport.java, +    final ByteSizeValue maxCumulationBufferCapacity;, +    final int maxCompositeBufferComponents;, +, +        this.maxCumulationBufferCapacity = componentSettings.getAsBytesSize("max_cumulation_buffer_capacity", null);, +        this.maxCompositeBufferComponents = componentSettings.getAsInt("max_composite_buffer_components", -1);, +, +                SizeHeaderFrameDecoder sizeHeader = new SizeHeaderFrameDecoder();, +                if (maxCumulationBufferCapacity != null) {, +                    if (maxCumulationBufferCapacity.bytes() > Integer.MAX_VALUE) {, +                        sizeHeader.setMaxCumulationBufferCapacity(Integer.MAX_VALUE);, +                    } else {, +                        sizeHeader.setMaxCumulationBufferCapacity((int) maxCumulationBufferCapacity.bytes());, +                    }, +                }, +                if (maxCompositeBufferComponents != -1) {, +                    sizeHeader.setMaxCumulationBufferComponents(maxCompositeBufferComponents);, +                }, +                pipeline.addLast("size", sizeHeader);, +        if (tcpSendBufferSize != null && tcpSendBufferSize.bytes() > 0) {, +        if (tcpReceiveBufferSize != null && tcpReceiveBufferSize.bytes() > 0) {, +                SizeHeaderFrameDecoder sizeHeader = new SizeHeaderFrameDecoder();, +                if (maxCumulationBufferCapacity != null) {, +                    if (maxCumulationBufferCapacity.bytes() > Integer.MAX_VALUE) {, +                        sizeHeader.setMaxCumulationBufferCapacity(Integer.MAX_VALUE);, +                    } else {, +                        sizeHeader.setMaxCumulationBufferCapacity((int) maxCumulationBufferCapacity.bytes());, +                    }, +                }, +                if (maxCompositeBufferComponents != -1) {, +                    sizeHeader.setMaxCumulationBufferComponents(maxCompositeBufferComponents);, +                }, +                pipeline.addLast("size", sizeHeader);, +        if (tcpSendBufferSize != null && tcpSendBufferSize.bytes() > 0) {, +        if (tcpReceiveBufferSize != null && tcpReceiveBufferSize.bytes() > 0) {, +++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransport.java, +        if (tcpSendBufferSize != null && tcpSendBufferSize.bytes() > 0) {, +        if (tcpReceiveBufferSize != null && tcpReceiveBufferSize.bytes() > 0) {, +++ b/src/main/java/org/elasticsearch/transport/netty/MessageChannelHandler.java, +        ChannelBuffer buffer = (ChannelBuffer) m;, +        int size = buffer.getInt(buffer.readerIndex() - 4);, +            String action = handleRequest(ctx.getChannel(), wrappedStream, requestId);, +++ b/src/main/java/org/elasticsearch/transport/netty/NettyTransport.java, +    final ByteSizeValue maxCumulationBufferCapacity;, +    final int maxCompositeBufferComponents;, +, +        this.maxCumulationBufferCapacity = componentSettings.getAsBytesSize("max_cumulation_buffer_capacity", null);, +        this.maxCompositeBufferComponents = componentSettings.getAsInt("max_composite_buffer_components", -1);, +, +                SizeHeaderFrameDecoder sizeHeader = new SizeHeaderFrameDecoder();, +                if (maxCumulationBufferCapacity != null) {, +                    if (maxCumulationBufferCapacity.bytes() > Integer.MAX_VALUE) {, +                        sizeHeader.setMaxCumulationBufferCapacity(Integer.MAX_VALUE);, +                    } else {, +                        sizeHeader.setMaxCumulationBufferCapacity((int) maxCumulationBufferCapacity.bytes());, +                    }, +                }, +                if (maxCompositeBufferComponents != -1) {, +                    sizeHeader.setMaxCumulationBufferComponents(maxCompositeBufferComponents);, +                }, +                pipeline.addLast("size", sizeHeader);, +        if (tcpSendBufferSize != null && tcpSendBufferSize.bytes() > 0) {, +        if (tcpReceiveBufferSize != null && tcpReceiveBufferSize.bytes() > 0) {, +                SizeHeaderFrameDecoder sizeHeader = new SizeHeaderFrameDecoder();, +                if (maxCumulationBufferCapacity != null) {, +                    if (maxCumulationBufferCapacity.bytes() > Integer.MAX_VALUE) {, +                        sizeHeader.setMaxCumulationBufferCapacity(Integer.MAX_VALUE);, +                    } else {, +                        sizeHeader.setMaxCumulationBufferCapacity((int) maxCumulationBufferCapacity.bytes());, +                    }, +                }, +                if (maxCompositeBufferComponents != -1) {, +                    sizeHeader.setMaxCumulationBufferComponents(maxCompositeBufferComponents);, +                }, +                pipeline.addLast("size", sizeHeader);, +        if (tcpSendBufferSize != null && tcpSendBufferSize.bytes() > 0) {, +        if (tcpReceiveBufferSize != null && tcpReceiveBufferSize.bytes() > 0) {, +++ b/src/main/java/org/elasticsearch/transport/netty/SizeHeaderFrameDecoder.java, +package org.elasticsearch.transport.netty;, +, +import org.elasticsearch.common.unit.ByteSizeValue;, +import org.elasticsearch.monitor.jvm.JvmInfo;, +import org.jboss.netty.buffer.ChannelBuffer;]