[+++ b/core/src/main/java/org/elasticsearch/http/netty/NettyHttpChannel.java, +public final class NettyHttpChannel extends HttpChannel {, +            setHeaderField(resp, "X-Opaque-Id", opaque);, +        addCustomHeaders(response, resp);, +            setHeaderField(resp, HttpHeaders.Names.CONTENT_TYPE, response.contentType(), false);, +            setHeaderField(resp, HttpHeaders.Names.CONTENT_LENGTH, String.valueOf(buffer.readableBytes()), false);, +            addCookies(resp);, +    private void setHeaderField(HttpResponse resp, String headerField, String value) {, +        setHeaderField(resp, headerField, value, true);, +    }, +, +    private void setHeaderField(HttpResponse resp, String headerField, String value, boolean override) {, +        if (override || !resp.headers().contains(headerField)) {, +            resp.headers().add(headerField, value);, +        }, +    }, +, +    private void addCookies(HttpResponse resp) {, +        if (transport.resetCookies) {, +            String cookieString = nettyRequest.headers().get(HttpHeaders.Names.COOKIE);, +            if (cookieString != null) {, +                CookieDecoder cookieDecoder = new CookieDecoder();, +                Set<Cookie> cookies = cookieDecoder.decode(cookieString);, +                if (!cookies.isEmpty()) {, +                    // Reset the cookies if necessary., +                    CookieEncoder cookieEncoder = new CookieEncoder(true);, +                    for (Cookie cookie : cookies) {, +                        cookieEncoder.addCookie(cookie);, +                    }, +                    setHeaderField(resp, HttpHeaders.Names.SET_COOKIE, cookieEncoder.encode());, +                }, +            }, +        }, +    }, +, +    private void addCustomHeaders(RestResponse response, HttpResponse resp) {, +        Map<String, List<String>> customHeaders = response.getHeaders();, +        if (customHeaders != null) {, +            for (Map.Entry<String, List<String>> headerEntry : customHeaders.entrySet()) {, +                for (String headerValue : headerEntry.getValue()) {, +                    setHeaderField(resp, headerEntry.getKey(), headerValue);, +                }, +            }, +        }, +    }, +]