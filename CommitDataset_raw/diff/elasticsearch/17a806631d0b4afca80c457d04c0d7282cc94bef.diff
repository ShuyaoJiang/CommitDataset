[+++ b/build.gradle, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            project.tasks.create('jarHell', JarHellTask.class)], +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            project.tasks.create('jarHell', JarHellTask.class)], +++ /dev/null, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            project.tasks.create('jarHell', JarHellTask.class)], +++ /dev/null, +++ b/core/build.gradle, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            project.tasks.create('jarHell', JarHellTask.class)], +++ /dev/null, +++ b/core/build.gradle, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +import org.apache.lucene.store.*;, +import java.nio.file.*;, +import java.util.*;, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            project.tasks.create('jarHell', JarHellTask.class)], +++ /dev/null, +++ b/core/build.gradle, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +import org.apache.lucene.store.*;, +import java.nio.file.*;, +import java.util.*;, +++ b/core/src/main/java/org/elasticsearch/monitor/jvm/JvmInfo.java, +import java.lang.management.*;, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            project.tasks.create('jarHell', JarHellTask.class)], +++ /dev/null, +++ b/core/build.gradle, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +import org.apache.lucene.store.*;, +import java.nio.file.*;, +import java.util.*;, +++ b/core/src/main/java/org/elasticsearch/monitor/jvm/JvmInfo.java, +import java.lang.management.*;, +++ b/core/src/test/java/org/elasticsearch/indices/stats/IndexStatsIT.java, +import org.elasticsearch.action.admin.indices.stats.CommonStatsFlags.Flag;, +import org.elasticsearch.test.ESIntegTestCase;, +, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            project.tasks.create('jarHell', JarHellTask.class)], +++ /dev/null, +++ b/core/build.gradle, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +import org.apache.lucene.store.*;, +import java.nio.file.*;, +import java.util.*;, +++ b/core/src/main/java/org/elasticsearch/monitor/jvm/JvmInfo.java, +import java.lang.management.*;, +++ b/core/src/test/java/org/elasticsearch/indices/stats/IndexStatsIT.java, +import org.elasticsearch.action.admin.indices.stats.CommonStatsFlags.Flag;, +import org.elasticsearch.test.ESIntegTestCase;, +, +++ b/core/src/test/java/org/elasticsearch/tribe/TribeIT.java, +import org.elasticsearch.plugins.Plugin;, +import java.util.Collection;, +            public Collection<Class<? extends Plugin>> nodePlugins() {, +                return Collections.emptyList();, +            }, +, +            @Override, +                Strings.randomBase64UUID(getRandom()), nodeConfigurationSource, 0, false, SECOND_CLUSTER_NODE_PREFIX, Collections.emptyList());, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            project.tasks.create('jarHell', JarHellTask.class)], +++ /dev/null, +++ b/core/build.gradle, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +import org.apache.lucene.store.*;, +import java.nio.file.*;, +import java.util.*;, +++ b/core/src/main/java/org/elasticsearch/monitor/jvm/JvmInfo.java, +import java.lang.management.*;, +++ b/core/src/test/java/org/elasticsearch/indices/stats/IndexStatsIT.java, +import org.elasticsearch.action.admin.indices.stats.CommonStatsFlags.Flag;, +import org.elasticsearch.test.ESIntegTestCase;, +, +++ b/core/src/test/java/org/elasticsearch/tribe/TribeIT.java, +import org.elasticsearch.plugins.Plugin;, +import java.util.Collection;, +            public Collection<Class<? extends Plugin>> nodePlugins() {, +                return Collections.emptyList();, +            }, +, +            @Override, +                Strings.randomBase64UUID(getRandom()), nodeConfigurationSource, 0, false, SECOND_CLUSTER_NODE_PREFIX, Collections.emptyList());, +++ b/docs/reference/search/request/scroll.asciidoc, +  }, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy]