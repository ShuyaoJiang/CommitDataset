[+++ b/docs/reference/indices/analyze.asciidoc, +Or by building a custom transient analyzer out of tokenizers,, +token filters and char filters. Token filters can use the shorter 'filters', +parameter name:, +, +curl -XGET 'localhost:9200/_analyze?tokenizer=keyword&token_filters=lowercase&char_filters=html_strip' -d 'this is a <b>test</b>', +, +++ b/docs/reference/indices/analyze.asciidoc, +Or by building a custom transient analyzer out of tokenizers,, +token filters and char filters. Token filters can use the shorter 'filters', +parameter name:, +, +curl -XGET 'localhost:9200/_analyze?tokenizer=keyword&token_filters=lowercase&char_filters=html_strip' -d 'this is a <b>test</b>', +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequest.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.Strings;, +    private String[] tokenFilters = Strings.EMPTY_ARRAY;, +, +    private String[] charFilters = Strings.EMPTY_ARRAY;, +    public AnalyzeRequest charFilters(String... charFilters) {, +        this.charFilters = charFilters;, +        return this;, +    }, +, +    public String[] charFilters() {, +        return this.charFilters;, +    }, +, +        if (tokenFilters == null) {, +            validationException = addValidationError("token filters must not be null", validationException);, +        }, +        if (charFilters == null) {, +            validationException = addValidationError("char filters must not be null", validationException);, +        }, +        tokenFilters = in.readStringArray();, +        if (in.getVersion().onOrAfter(Version.V_1_1_0)) {, +            charFilters = in.readStringArray();, +        out.writeStringArray(tokenFilters);, +        if (out.getVersion().onOrAfter(Version.V_1_1_0)) {, +            out.writeStringArray(charFilters);, +++ b/docs/reference/indices/analyze.asciidoc, +Or by building a custom transient analyzer out of tokenizers,, +token filters and char filters. Token filters can use the shorter 'filters', +parameter name:, +, +curl -XGET 'localhost:9200/_analyze?tokenizer=keyword&token_filters=lowercase&char_filters=html_strip' -d 'this is a <b>test</b>', +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequest.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.Strings;, +    private String[] tokenFilters = Strings.EMPTY_ARRAY;, +, +    private String[] charFilters = Strings.EMPTY_ARRAY;, +    public AnalyzeRequest charFilters(String... charFilters) {, +        this.charFilters = charFilters;, +        return this;, +    }, +, +    public String[] charFilters() {, +        return this.charFilters;, +    }, +, +        if (tokenFilters == null) {, +            validationException = addValidationError("token filters must not be null", validationException);, +        }, +        if (charFilters == null) {, +            validationException = addValidationError("char filters must not be null", validationException);, +        }, +        tokenFilters = in.readStringArray();, +        if (in.getVersion().onOrAfter(Version.V_1_1_0)) {, +            charFilters = in.readStringArray();, +        out.writeStringArray(tokenFilters);, +        if (out.getVersion().onOrAfter(Version.V_1_1_0)) {, +            out.writeStringArray(charFilters);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequestBuilder.java, +    /**, +     * Sets char filters that will be used before the tokenizer., +     */, +    public AnalyzeRequestBuilder setCharFilters(String... charFilters) {, +        request.charFilters(charFilters);, +        return this;, +    }, +, +++ b/docs/reference/indices/analyze.asciidoc, +Or by building a custom transient analyzer out of tokenizers,, +token filters and char filters. Token filters can use the shorter 'filters', +parameter name:, +, +curl -XGET 'localhost:9200/_analyze?tokenizer=keyword&token_filters=lowercase&char_filters=html_strip' -d 'this is a <b>test</b>', +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequest.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.Strings;, +    private String[] tokenFilters = Strings.EMPTY_ARRAY;, +, +    private String[] charFilters = Strings.EMPTY_ARRAY;, +    public AnalyzeRequest charFilters(String... charFilters) {, +        this.charFilters = charFilters;, +        return this;]