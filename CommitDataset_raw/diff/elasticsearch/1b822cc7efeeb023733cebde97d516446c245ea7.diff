[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregator.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.search.rescore.RescoreSearchContext;, +                    if (sort == null) {, +                        for (RescoreSearchContext rescoreContext : context.searchContext().rescore()) {, +                            topN = Math.max(rescoreContext.window(), topN);, +                        }, +                    }, +            TopDocs topDocs = topDocsCollector.topLevelCollector.topDocs();, +            if (subSearchContext.sort() == null) {, +                for (RescoreSearchContext ctx : context().searchContext().rescore()) {, +                    try {, +                        topDocs = ctx.rescorer().rescore(topDocs, context.searchContext(), ctx);, +                    } catch (IOException e) {, +                        throw new ElasticsearchException("Rescore TopHits Failed", e);, +                    }, +                }, +            }, +, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregator.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.search.rescore.RescoreSearchContext;, +                    if (sort == null) {, +                        for (RescoreSearchContext rescoreContext : context.searchContext().rescore()) {, +                            topN = Math.max(rescoreContext.window(), topN);, +                        }, +                    }, +            TopDocs topDocs = topDocsCollector.topLevelCollector.topDocs();, +            if (subSearchContext.sort() == null) {, +                for (RescoreSearchContext ctx : context().searchContext().rescore()) {, +                    try {, +                        topDocs = ctx.rescorer().rescore(topDocs, context.searchContext(), ctx);, +                    } catch (IOException e) {, +                        throw new ElasticsearchException("Rescore TopHits Failed", e);, +                    }, +                }, +            }, +, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/metrics/TopHitsIT.java, +import org.elasticsearch.index.query.MatchAllQueryBuilder;, +import org.elasticsearch.search.rescore.RescoreBuilder;, +, +    public void testWithRescore() {, +        // Rescore with default sort on relevancy (score), +        {, +            SearchResponse response = client(), +                .prepareSearch("idx"), +                .addRescorer(, +                    RescoreBuilder.queryRescorer(new MatchAllQueryBuilder().boost(3.0f)), +                ), +                .setTypes("type"), +                .addAggregation(terms("terms"), +                    .field(TERMS_AGGS_FIELD), +                    .subAggregation(, +                        topHits("hits"), +                    ), +                ), +                .get();, +            Terms terms = response.getAggregations().get("terms");, +            for (Terms.Bucket bucket : terms.getBuckets()) {, +                TopHits topHits = bucket.getAggregations().get("hits");, +                for (SearchHit hit : topHits.getHits().getHits()) {, +                    assertThat(hit.score(), equalTo(4.0f));, +                }, +            }, +        }, +, +        {, +            SearchResponse response = client(), +                .prepareSearch("idx"), +                .addRescorer(, +                    RescoreBuilder.queryRescorer(new MatchAllQueryBuilder().boost(3.0f)), +                ), +                .setTypes("type"), +                .addAggregation(terms("terms"), +                    .field(TERMS_AGGS_FIELD), +                    .subAggregation(, +                        topHits("hits").sort(SortBuilders.scoreSort()), +                    ), +                ), +                .get();, +            Terms terms = response.getAggregations().get("terms");, +            for (Terms.Bucket bucket : terms.getBuckets()) {, +                TopHits topHits = bucket.getAggregations().get("hits");, +                for (SearchHit hit : topHits.getHits().getHits()) {, +                    assertThat(hit.score(), equalTo(4.0f));, +                }, +            }, +        }, +, +        // Rescore should not be applied if the sort order is not relevancy, +        {, +            SearchResponse response = client(), +                .prepareSearch("idx"), +                .addRescorer(, +                    RescoreBuilder.queryRescorer(new MatchAllQueryBuilder().boost(3.0f)), +                ), +                .setTypes("type"), +                .addAggregation(terms("terms"), +                    .field(TERMS_AGGS_FIELD)]