[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.common.collect.Tuple;, +        setupLogging(settings, environment);, +, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.common.collect.Tuple;, +        setupLogging(settings, environment);, +, +++ b/core/src/main/java/org/elasticsearch/node/internal/InternalSettingsPreparer.java, +        // TODO: can we simplify all of this and have a single filename, which is looked up in the config dir?, +        boolean loadFromEnv = true;, +        if (useSystemProperties(input)) {, +            // if its default, then load it, but also load form env, +            if (Strings.hasText(System.getProperty("es.default.config"))) {, +                // TODO: we don't allow multiple config files, but having loadFromEnv true here allows just that, +                loadFromEnv = true;, +                output.loadFromPath(environment.configFile().resolve(System.getProperty("es.default.config")));, +            }, +            // TODO: these should be elseifs so that multiple files cannot be loaded, +            // if explicit, just load it and don't load from env, +            if (Strings.hasText(System.getProperty("es.config"))) {, +                loadFromEnv = false;, +                output.loadFromPath(environment.configFile().resolve(System.getProperty("es.config")));, +            }, +            if (Strings.hasText(System.getProperty("elasticsearch.config"))) {, +                loadFromEnv = false;, +                output.loadFromPath(environment.configFile().resolve(System.getProperty("elasticsearch.config")));, +            }, +        }, +        if (loadFromEnv) {, +        }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.common.collect.Tuple;, +        setupLogging(settings, environment);, +, +++ b/core/src/main/java/org/elasticsearch/node/internal/InternalSettingsPreparer.java, +        // TODO: can we simplify all of this and have a single filename, which is looked up in the config dir?, +        boolean loadFromEnv = true;, +        if (useSystemProperties(input)) {, +            // if its default, then load it, but also load form env, +            if (Strings.hasText(System.getProperty("es.default.config"))) {, +                // TODO: we don't allow multiple config files, but having loadFromEnv true here allows just that, +                loadFromEnv = true;, +                output.loadFromPath(environment.configFile().resolve(System.getProperty("es.default.config")));, +            }, +            // TODO: these should be elseifs so that multiple files cannot be loaded, +            // if explicit, just load it and don't load from env, +            if (Strings.hasText(System.getProperty("es.config"))) {, +                loadFromEnv = false;, +                output.loadFromPath(environment.configFile().resolve(System.getProperty("es.config")));, +            }, +            if (Strings.hasText(System.getProperty("elasticsearch.config"))) {, +                loadFromEnv = false;, +                output.loadFromPath(environment.configFile().resolve(System.getProperty("elasticsearch.config")));, +            }, +        }, +        if (loadFromEnv) {, +        }, +++ b/distribution/deb/pom.xml, +                                    <includes>elasticsearch,elasticsearch.in.sh,plugin</includes>, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.common.collect.Tuple;, +        setupLogging(settings, environment);, +, +++ b/core/src/main/java/org/elasticsearch/node/internal/InternalSettingsPreparer.java, +        // TODO: can we simplify all of this and have a single filename, which is looked up in the config dir?, +        boolean loadFromEnv = true;, +        if (useSystemProperties(input)) {, +            // if its default, then load it, but also load form env, +            if (Strings.hasText(System.getProperty("es.default.config"))) {, +                // TODO: we don't allow multiple config files, but having loadFromEnv true here allows just that, +                loadFromEnv = true;, +                output.loadFromPath(environment.configFile().resolve(System.getProperty("es.default.config")));, +            }, +            // TODO: these should be elseifs so that multiple files cannot be loaded, +            // if explicit, just load it and don't load from env, +            if (Strings.hasText(System.getProperty("es.config"))) {, +                loadFromEnv = false;, +                output.loadFromPath(environment.configFile().resolve(System.getProperty("es.config")));, +            }, +            if (Strings.hasText(System.getProperty("elasticsearch.config"))) {, +                loadFromEnv = false;, +                output.loadFromPath(environment.configFile().resolve(System.getProperty("elasticsearch.config")));, +            }, +        }, +        if (loadFromEnv) {, +        }, +++ b/distribution/deb/pom.xml, +                                    <includes>elasticsearch,elasticsearch.in.sh,plugin</includes>, +++ b/distribution/deb/src/main/packaging/init.d/elasticsearch, +# Elasticsearch configuration file (elasticsearch.yml), +CONF_FILE=$CONF_DIR/elasticsearch.yml, +, +DAEMON_OPTS="-d -p $PID_FILE --default.config=$CONF_FILE --default.path.home=$ES_HOME --default.path.logs=$LOG_DIR --default.path.data=$DATA_DIR --default.path.conf=$CONF_DIR", +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.common.collect.Tuple;, +        setupLogging(settings, environment);, +, +++ b/core/src/main/java/org/elasticsearch/node/internal/InternalSettingsPreparer.java, +        // TODO: can we simplify all of this and have a single filename, which is looked up in the config dir?]