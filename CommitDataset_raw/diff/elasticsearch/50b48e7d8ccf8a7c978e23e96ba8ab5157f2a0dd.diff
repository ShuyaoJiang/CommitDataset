[+++ b/build.gradle, +task run() {, +  dependsOn ':distribution:run', +  description = 'Runs elasticsearch in the foreground', +  group = 'Verification', +}, +++ b/build.gradle, +task run() {, +  dependsOn ':distribution:run', +  description = 'Runs elasticsearch in the foreground', +  group = 'Verification', +}, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import org.elasticsearch.gradle.test.RunTask, +            String name = project.pluginProperties.extension.name, +            project.jar.baseName = name, +            project.bundlePlugin.baseName = name, +            project.integTest.dependsOn(project.bundlePlugin), +            project.integTest.clusterConfig.plugin(name, project.bundlePlugin.outputs.files), +            project.tasks.run.dependsOn(project.bundlePlugin), +            project.tasks.run.clusterConfig.plugin(name, project.bundlePlugin.outputs.files), +        RunTask.configure(project), +        Task bundle = configureBundleTask(project), +++ b/build.gradle, +task run() {, +  dependsOn ':distribution:run', +  description = 'Runs elasticsearch in the foreground', +  group = 'Verification', +}, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import org.elasticsearch.gradle.test.RunTask, +            String name = project.pluginProperties.extension.name, +            project.jar.baseName = name, +            project.bundlePlugin.baseName = name, +            project.integTest.dependsOn(project.bundlePlugin), +            project.integTest.clusterConfig.plugin(name, project.bundlePlugin.outputs.files), +            project.tasks.run.dependsOn(project.bundlePlugin), +            project.tasks.run.clusterConfig.plugin(name, project.bundlePlugin.outputs.files), +        RunTask.configure(project), +        Task bundle = configureBundleTask(project), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +++ b/build.gradle, +task run() {, +  dependsOn ':distribution:run', +  description = 'Runs elasticsearch in the foreground', +  group = 'Verification', +}, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import org.elasticsearch.gradle.test.RunTask, +            String name = project.pluginProperties.extension.name, +            project.jar.baseName = name, +            project.bundlePlugin.baseName = name, +            project.integTest.dependsOn(project.bundlePlugin), +            project.integTest.clusterConfig.plugin(name, project.bundlePlugin.outputs.files), +            project.tasks.run.dependsOn(project.bundlePlugin), +            project.tasks.run.clusterConfig.plugin(name, project.bundlePlugin.outputs.files), +        RunTask.configure(project), +        Task bundle = configureBundleTask(project), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        if (config.daemonize) {, +            // if we are running in the background, make sure to stop the server when the task completes, +    }, +++ b/build.gradle, +task run() {, +  dependsOn ':distribution:run', +  description = 'Runs elasticsearch in the foreground', +  group = 'Verification', +}, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import org.elasticsearch.gradle.test.RunTask, +            String name = project.pluginProperties.extension.name, +            project.jar.baseName = name, +            project.bundlePlugin.baseName = name, +            project.integTest.dependsOn(project.bundlePlugin), +            project.integTest.clusterConfig.plugin(name, project.bundlePlugin.outputs.files), +            project.tasks.run.dependsOn(project.bundlePlugin), +            project.tasks.run.clusterConfig.plugin(name, project.bundlePlugin.outputs.files), +        RunTask.configure(project), +        Task bundle = configureBundleTask(project), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        if (config.daemonize) {, +            // if we are running in the background, make sure to stop the server when the task completes, +    }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RunTask.groovy, +import org.gradle.api.Project, +, +        project.afterEvaluate {, +, +    static void configure(Project project) {, +        RunTask task = project.tasks.create(, +            name: 'run',, +            type: RunTask,, +            description: "Runs elasticsearch with '${project.path}'",, +            group: 'Verification'), +    }, +}, +++ b/build.gradle, +task run() {]