[+++ b/core/src/main/java/org/elasticsearch/indices/analysis/HunspellService.java, +import org.apache.lucene.util.IOUtils;, +import java.util.concurrent.ConcurrentHashMap;, +import java.util.function.Function;, +    private final ConcurrentHashMap<String, Dictionary> dictionaries = new ConcurrentHashMap<>();, +    private final Function<String, Dictionary> loadingFunction;, +        this.knownDictionaries = Collections.unmodifiableMap(knownDictionaries);, +        this.loadingFunction = (locale) -> {, +            try {, +                return loadDictionary(locale, settings, env);, +            } catch (Throwable e) {, +                throw new IllegalStateException("failed to load hunspell dictionary for locale: " + locale, e);, +            }, +        };, +, +        Dictionary dictionary = knownDictionaries.get(locale);, +            dictionary = dictionaries.computeIfAbsent(locale, loadingFunction);, +                                } catch (Throwable e) {, +                                    logger.error("exception while loading dictionary {}", e, file.getFileName());, +            IOUtils.close(affixStream);, +            IOUtils.close(dicStreams);, +++ b/core/src/main/java/org/elasticsearch/indices/analysis/HunspellService.java, +import org.apache.lucene.util.IOUtils;, +import java.util.concurrent.ConcurrentHashMap;, +import java.util.function.Function;, +    private final ConcurrentHashMap<String, Dictionary> dictionaries = new ConcurrentHashMap<>();, +    private final Function<String, Dictionary> loadingFunction;, +        this.knownDictionaries = Collections.unmodifiableMap(knownDictionaries);, +        this.loadingFunction = (locale) -> {, +            try {, +                return loadDictionary(locale, settings, env);, +            } catch (Throwable e) {, +                throw new IllegalStateException("failed to load hunspell dictionary for locale: " + locale, e);, +            }, +        };, +, +        Dictionary dictionary = knownDictionaries.get(locale);, +            dictionary = dictionaries.computeIfAbsent(locale, loadingFunction);, +                                } catch (Throwable e) {, +                                    logger.error("exception while loading dictionary {}", e, file.getFileName());, +            IOUtils.close(affixStream);, +            IOUtils.close(dicStreams);, +++ b/dev-tools/src/main/resources/forbidden/all-signatures.txt, +com.google.common.cache.LoadingCache, +com.google.common.cache.CacheLoader]