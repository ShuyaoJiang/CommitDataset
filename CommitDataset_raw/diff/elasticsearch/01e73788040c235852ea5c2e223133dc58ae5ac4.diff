[+++ b/core/src/main/java/org/elasticsearch/common/cache/Cache.java, +import java.util.concurrent.ExecutionException;, +     * @param loader the function to compute a value given a key, +     * @throws ExecutionException thrown if loader throws an exception, +    public V computeIfAbsent(K key, CacheLoader<K, V> loader) throws ExecutionException {, +                    try {, +                        value = loader.load(key);, +                    } catch (Exception e) {, +                        throw new ExecutionException(e);, +                    }, +++ b/core/src/main/java/org/elasticsearch/common/cache/Cache.java, +import java.util.concurrent.ExecutionException;, +     * @param loader the function to compute a value given a key, +     * @throws ExecutionException thrown if loader throws an exception, +    public V computeIfAbsent(K key, CacheLoader<K, V> loader) throws ExecutionException {, +                    try {, +                        value = loader.load(key);, +                    } catch (Exception e) {, +                        throw new ExecutionException(e);, +                    }, +++ b/core/src/main/java/org/elasticsearch/common/cache/CacheLoader.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.cache;, +, +@FunctionalInterface, +public interface CacheLoader<K, V> {, +    V load(K key) throws Exception;, +}, +++ b/core/src/main/java/org/elasticsearch/common/cache/Cache.java, +import java.util.concurrent.ExecutionException;, +     * @param loader the function to compute a value given a key, +     * @throws ExecutionException thrown if loader throws an exception, +    public V computeIfAbsent(K key, CacheLoader<K, V> loader) throws ExecutionException {, +                    try {, +                        value = loader.load(key);, +                    } catch (Exception e) {, +                        throw new ExecutionException(e);, +                    }, +++ b/core/src/main/java/org/elasticsearch/common/cache/CacheLoader.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.cache;, +, +@FunctionalInterface, +public interface CacheLoader<K, V> {, +    V load(K key) throws Exception;, +}, +++ b/core/src/main/java/org/elasticsearch/index/cache/bitset/BitsetFilterCache.java, +++ b/core/src/main/java/org/elasticsearch/common/cache/Cache.java, +import java.util.concurrent.ExecutionException;, +     * @param loader the function to compute a value given a key, +     * @throws ExecutionException thrown if loader throws an exception, +    public V computeIfAbsent(K key, CacheLoader<K, V> loader) throws ExecutionException {, +                    try {, +                        value = loader.load(key);, +                    } catch (Exception e) {, +                        throw new ExecutionException(e);, +                    }, +++ b/core/src/main/java/org/elasticsearch/common/cache/CacheLoader.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may]