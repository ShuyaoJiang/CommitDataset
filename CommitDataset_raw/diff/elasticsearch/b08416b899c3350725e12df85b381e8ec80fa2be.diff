[+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportOpenJobAction.java, +import org.elasticsearch.cluster.ClusterStateUpdateTask;, +import org.elasticsearch.cluster.metadata.MetaData;, +, +            // Step 6. Clear job finished time once the job is started and respond, +            ActionListener<OpenJobAction.Response> clearJobFinishTime = ActionListener.wrap(, +                response -> {, +                    if (response.isAcknowledged()) {, +                        clearJobFinishedTime(jobParams.getJobId(), listener);, +                    } else {, +                        listener.onResponse(response);, +                    }, +                },, +                listener::onFailure, +            );, +, +            // Step 5. Wait for job to be started, +            ActionListener<PersistentTasksCustomMetaData.PersistentTask<OpenJobAction.JobParams>> waitForJobToStart =, +                    waitForJobStarted(task.getId(), jobParams, clearJobFinishTime);, +                            OpenJobAction.TASK_NAME, jobParams, waitForJobToStart),, +    private void clearJobFinishedTime(String jobId, ActionListener<OpenJobAction.Response> listener) {, +        clusterService.submitStateUpdateTask("clearing-job-finish-time-for-" + jobId, new ClusterStateUpdateTask() {, +            @Override, +            public ClusterState execute(ClusterState currentState) {, +                MlMetadata mlMetadata = MlMetadata.getMlMetadata(currentState);, +                MlMetadata.Builder mlMetadataBuilder = new MlMetadata.Builder(mlMetadata);, +                Job.Builder jobBuilder = new Job.Builder(mlMetadata.getJobs().get(jobId));, +                jobBuilder.setFinishedTime(null);, +, +                mlMetadataBuilder.putJob(jobBuilder.build(), true);, +                ClusterState.Builder builder = ClusterState.builder(currentState);, +                return builder.metaData(new MetaData.Builder(currentState.metaData()), +                    .putCustom(MlMetadata.TYPE, mlMetadataBuilder.build())), +                    .build();, +            }, +, +            @Override, +            public void onFailure(String source, Exception e) {, +                logger.error("[" + jobId + "] Failed to clear finished_time; source [" + source + "]", e);, +                listener.onResponse(new OpenJobAction.Response(true));, +            }, +, +            @Override, +            public void clusterStateProcessed(String source, ClusterState oldState,, +                                              ClusterState newState) {, +                listener.onResponse(new OpenJobAction.Response(true));, +            }, +        });, +    }, +++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportOpenJobAction.java, +import org.elasticsearch.cluster.ClusterStateUpdateTask;, +import org.elasticsearch.cluster.metadata.MetaData;, +, +            // Step 6. Clear job finished time once the job is started and respond, +            ActionListener<OpenJobAction.Response> clearJobFinishTime = ActionListener.wrap(, +                response -> {, +                    if (response.isAcknowledged()) {, +                        clearJobFinishedTime(jobParams.getJobId(), listener);, +                    } else {, +                        listener.onResponse(response);, +                    }, +                },, +                listener::onFailure, +            );, +, +            // Step 5. Wait for job to be started, +            ActionListener<PersistentTasksCustomMetaData.PersistentTask<OpenJobAction.JobParams>> waitForJobToStart =, +                    waitForJobStarted(task.getId(), jobParams, clearJobFinishTime);, +                            OpenJobAction.TASK_NAME, jobParams, waitForJobToStart),, +    private void clearJobFinishedTime(String jobId, ActionListener<OpenJobAction.Response> listener) {, +        clusterService.submitStateUpdateTask("clearing-job-finish-time-for-" + jobId, new ClusterStateUpdateTask() {, +            @Override, +            public ClusterState execute(ClusterState currentState) {, +                MlMetadata mlMetadata = MlMetadata.getMlMetadata(currentState);, +                MlMetadata.Builder mlMetadataBuilder = new MlMetadata.Builder(mlMetadata);, +                Job.Builder jobBuilder = new Job.Builder(mlMetadata.getJobs().get(jobId));, +                jobBuilder.setFinishedTime(null);, +, +                mlMetadataBuilder.putJob(jobBuilder.build(), true);, +                ClusterState.Builder builder = ClusterState.builder(currentState);, +                return builder.metaData(new MetaData.Builder(currentState.metaData()), +                    .putCustom(MlMetadata.TYPE, mlMetadataBuilder.build())), +                    .build();, +            }, +, +            @Override, +            public void onFailure(String source, Exception e) {, +                logger.error("[" + jobId + "] Failed to clear finished_time; source [" + source + "]", e);, +                listener.onResponse(new OpenJobAction.Response(true));, +            }, +, +            @Override, +            public void clusterStateProcessed(String source, ClusterState oldState,, +                                              ClusterState newState) {, +                listener.onResponse(new OpenJobAction.Response(true));, +            }, +        });, +    }, +++ b/x-pack/qa/ml-native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/ReopenJobResetsFinishedTimeIT.java, +/*]