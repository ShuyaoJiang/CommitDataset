[+++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +                        logger.warn("Failed to send response for {}", e1, actionName);, +                logger.warn("failed to send error message back to client for action [{}]", responseException, transportReplicaAction);, +                    logger.warn("failed to send error message back to client for action [{}]", responseException, transportReplicaAction);, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +                        logger.warn("Failed to send response for {}", e1, actionName);, +                logger.warn("failed to send error message back to client for action [{}]", responseException, transportReplicaAction);, +                    logger.warn("failed to send error message back to client for action [{}]", responseException, transportReplicaAction);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +                    logger.warn("Unable to retrieve resource limits: {}", JNACLibrary.strerror(Native.getLastError()));, +        logger.warn("Unable to lock JVM Memory: error={}, reason={}", errno , errMsg);, +                logger.warn("Increase RLIMIT_MEMLOCK, soft limit: {}, hard limit: {}", rlimitToString(softLimit), rlimitToString(hardLimit));, +                                "\t# allow user '{}' mlockall\n" +, +                                "\t{} soft memlock unlimited\n" +, +                                "\t{} hard memlock unlimited",, +                                user, user, user, +                logger.warn("Unable to lock JVM memory. Failed to set working set size. Error code {}", Native.getLastError());, +                    logger.warn("unknown error {} when adding console ctrl handler", Native.getLastError());, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +                        logger.warn("Failed to send response for {}", e1, actionName);, +                logger.warn("failed to send error message back to client for action [{}]", responseException, transportReplicaAction);, +                    logger.warn("failed to send error message back to client for action [{}]", responseException, transportReplicaAction);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +                    logger.warn("Unable to retrieve resource limits: {}", JNACLibrary.strerror(Native.getLastError()));, +        logger.warn("Unable to lock JVM Memory: error={}, reason={}", errno , errMsg);, +                logger.warn("Increase RLIMIT_MEMLOCK, soft limit: {}, hard limit: {}", rlimitToString(softLimit), rlimitToString(hardLimit));, +                                "\t# allow user '{}' mlockall\n" +, +                                "\t{} soft memlock unlimited\n" +, +                                "\t{} hard memlock unlimited",, +                                user, user, user, +                logger.warn("Unable to lock JVM memory. Failed to set working set size. Error code {}", Native.getLastError());, +                    logger.warn("unknown error {} when adding console ctrl handler", Native.getLastError());, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JVMCheck.java, +                    Loggers.getLogger(JVMCheck.class).warn("{}", bug.getWarningMessage().get());, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +                        logger.warn("Failed to send response for {}", e1, actionName);, +                logger.warn("failed to send error message back to client for action [{}]", responseException, transportReplicaAction);, +                    logger.warn("failed to send error message back to client for action [{}]", responseException, transportReplicaAction);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +                    logger.warn("Unable to retrieve resource limits: {}", JNACLibrary.strerror(Native.getLastError()));, +        logger.warn("Unable to lock JVM Memory: error={}, reason={}", errno , errMsg);, +                logger.warn("Increase RLIMIT_MEMLOCK, soft limit: {}, hard limit: {}", rlimitToString(softLimit), rlimitToString(hardLimit));, +                                "\t# allow user '{}' mlockall\n" +, +                                "\t{} soft memlock unlimited\n" +, +                                "\t{} hard memlock unlimited",, +                                user, user, user, +                logger.warn("Unable to lock JVM memory. Failed to set working set size. Error code {}", Native.getLastError());, +                    logger.warn("unknown error {} when adding console ctrl handler", Native.getLastError());, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JVMCheck.java, +                    Loggers.getLogger(JVMCheck.class).warn("{}", bug.getWarningMessage().get());, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Seccomp.java, +                logger.debug("seccomp(SECCOMP_SET_MODE_FILTER): {}, falling back to prctl(PR_SET_SECCOMP)...", JNACLibrary.strerror(errno1));, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +                        logger.warn("Failed to send response for {}", e1, actionName);, +                logger.warn("failed to send error message back to client for action [{}]", responseException, transportReplicaAction);, +                    logger.warn("failed to send error message back to client for action [{}]", responseException, transportReplicaAction);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +                    logger.warn("Unable to retrieve resource limits: {}", JNACLibrary.strerror(Native.getLastError()));, +        logger.warn("Unable to lock JVM Memory: error={}, reason={}", errno , errMsg);, +                logger.warn("Increase RLIMIT_MEMLOCK, soft limit: {}, hard limit: {}", rlimitToString(softLimit), rlimitToString(hardLimit));, +                                "\t# allow user '{}' mlockall\n" +, +                                "\t{} soft memlock unlimited\n" +, +                                "\t{} hard memlock unlimited",, +                                user, user, user, +                logger.warn("Unable to lock JVM memory. Failed to set working set size. Error code {}", Native.getLastError());, +                    logger.warn("unknown error {} when adding console ctrl handler", Native.getLastError());, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JVMCheck.java, +                    Loggers.getLogger(JVMCheck.class).warn("{}", bug.getWarningMessage().get());, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Seccomp.java, +                logger.debug("seccomp(SECCOMP_SET_MODE_FILTER): {}, falling back to prctl(PR_SET_SECCOMP)...", JNACLibrary.strerror(errno1));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +            logger.debug("node_sampler_interval[{}]", nodesSamplerInterval);, +                        logger.debug("failed to connect to discovered node [{}]", e, node);, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +                        logger.warn("Failed to send response for {}", e1, actionName);, +                logger.warn("failed to send error message back to client for action [{}]", responseException, transportReplicaAction);, +                    logger.warn("failed to send error message back to client for action [{}]", responseException, transportReplicaAction);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +                    logger.warn("Unable to retrieve resource limits: {}", JNACLibrary.strerror(Native.getLastError()));, +        logger.warn("Unable to lock JVM Memory: error={}, reason={}", errno , errMsg);, +                logger.warn("Increase RLIMIT_MEMLOCK, soft limit: {}, hard limit: {}", rlimitToString(softLimit), rlimitToString(hardLimit));, +                                "\t# allow user '{}' mlockall\n" +, +                                "\t{} soft memlock unlimited\n" +, +                                "\t{} hard memlock unlimited",, +                                user, user, user, +                logger.warn("Unable to lock JVM memory. Failed to set working set size. Error code {}", Native.getLastError());, +                    logger.warn("unknown error {} when adding console ctrl handler", Native.getLastError());, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JVMCheck.java, +                    Loggers.getLogger(JVMCheck.class).warn("{}", bug.getWarningMessage().get());, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Seccomp.java, +                logger.debug("seccomp(SECCOMP_SET_MODE_FILTER): {}, falling back to prctl(PR_SET_SECCOMP)...", JNACLibrary.strerror(errno1));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +            logger.debug("node_sampler_interval[{}]", nodesSamplerInterval);, +                        logger.debug("failed to connect to discovered node [{}]", e, node);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +                    logger.trace("{}, scheduling a reroute", reason);, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +                        logger.warn("Failed to send response for {}", e1, actionName);, +                logger.warn("failed to send error message back to client for action [{}]", responseException, transportReplicaAction);, +                    logger.warn("failed to send error message back to client for action [{}]", responseException, transportReplicaAction);]