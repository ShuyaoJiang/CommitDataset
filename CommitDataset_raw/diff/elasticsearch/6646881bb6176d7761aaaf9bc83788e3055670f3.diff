[+++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static SegmentInfos readSegmentInfos(IndexCommit commit) throws IOException {, +        // Using commit.getSegmentsFileName() does NOT work here, have to, +        // manually create the segment filename, +        String filename = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS, "", commit.getGeneration());, +        return SegmentInfos.readCommit(commit.getDirectory(), filename);, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static SegmentInfos readSegmentInfos(IndexCommit commit) throws IOException {, +        // Using commit.getSegmentsFileName() does NOT work here, have to, +        // manually create the segment filename, +        String filename = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS, "", commit.getGeneration());, +        return SegmentInfos.readCommit(commit.getDirectory(), filename);, +++ b/src/main/java/org/elasticsearch/index/engine/Engine.java, +import org.apache.lucene.index.*;, +    /**, +     * Read the last segments info from the commit pointed to by the searcher manager, +     */, +    protected static SegmentInfos readLastCommittedSegmentInfos(SearcherManager sm) throws IOException {, +        IndexSearcher searcher = sm.acquire();, +        try {, +            IndexCommit latestCommit = ((DirectoryReader) searcher.getIndexReader()).getIndexCommit();, +            return Lucene.readSegmentInfos(latestCommit);, +        } finally {, +            sm.release(searcher);, +        }, +    }, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static SegmentInfos readSegmentInfos(IndexCommit commit) throws IOException {, +        // Using commit.getSegmentsFileName() does NOT work here, have to, +        // manually create the segment filename, +        String filename = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS, "", commit.getGeneration());, +        return SegmentInfos.readCommit(commit.getDirectory(), filename);, +++ b/src/main/java/org/elasticsearch/index/engine/Engine.java, +import org.apache.lucene.index.*;, +    /**, +     * Read the last segments info from the commit pointed to by the searcher manager, +     */, +    protected static SegmentInfos readLastCommittedSegmentInfos(SearcherManager sm) throws IOException {, +        IndexSearcher searcher = sm.acquire();, +        try {, +            IndexCommit latestCommit = ((DirectoryReader) searcher.getIndexReader()).getIndexCommit();, +            return Lucene.readSegmentInfos(latestCommit);, +        } finally {, +            sm.release(searcher);, +        }, +    }, +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +                lastCommittedSegmentInfos = readLastCommittedSegmentInfos(searcherManager);, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static SegmentInfos readSegmentInfos(IndexCommit commit) throws IOException {, +        // Using commit.getSegmentsFileName() does NOT work here, have to, +        // manually create the segment filename, +        String filename = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS, "", commit.getGeneration());, +        return SegmentInfos.readCommit(commit.getDirectory(), filename);, +++ b/src/main/java/org/elasticsearch/index/engine/Engine.java, +import org.apache.lucene.index.*;, +    /**, +     * Read the last segments info from the commit pointed to by the searcher manager, +     */, +    protected static SegmentInfos readLastCommittedSegmentInfos(SearcherManager sm) throws IOException {, +        IndexSearcher searcher = sm.acquire();, +        try {, +            IndexCommit latestCommit = ((DirectoryReader) searcher.getIndexReader()).getIndexCommit();, +            return Lucene.readSegmentInfos(latestCommit);, +        } finally {, +            sm.release(searcher);, +        }, +    }, +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +                lastCommittedSegmentInfos = readLastCommittedSegmentInfos(searcherManager);, +++ b/src/main/java/org/elasticsearch/index/engine/ShadowEngine.java, +                    this.lastCommittedSegmentInfos = readLastCommittedSegmentInfos(searcherManager);, +            lastCommittedSegmentInfos = readLastCommittedSegmentInfos(searcherManager);, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static SegmentInfos readSegmentInfos(IndexCommit commit) throws IOException {, +        // Using commit.getSegmentsFileName() does NOT work here, have to, +        // manually create the segment filename, +        String filename = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS, "", commit.getGeneration());, +        return SegmentInfos.readCommit(commit.getDirectory(), filename);, +++ b/src/main/java/org/elasticsearch/index/engine/Engine.java, +import org.apache.lucene.index.*;, +    /**, +     * Read the last segments info from the commit pointed to by the searcher manager, +     */, +    protected static SegmentInfos readLastCommittedSegmentInfos(SearcherManager sm) throws IOException {, +        IndexSearcher searcher = sm.acquire();, +        try {, +            IndexCommit latestCommit = ((DirectoryReader) searcher.getIndexReader()).getIndexCommit();, +            return Lucene.readSegmentInfos(latestCommit);, +        } finally {, +            sm.release(searcher);, +        }, +    }, +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +                lastCommittedSegmentInfos = readLastCommittedSegmentInfos(searcherManager);, +++ b/src/main/java/org/elasticsearch/index/engine/ShadowEngine.java, +                    this.lastCommittedSegmentInfos = readLastCommittedSegmentInfos(searcherManager);, +            lastCommittedSegmentInfos = readLastCommittedSegmentInfos(searcherManager);, +++ b/src/main/java/org/elasticsearch/index/store/Store.java, +        assert commit == null || commit.getDirectory() == directory;]