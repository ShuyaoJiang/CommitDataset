[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/FieldJsonQueryBuilder.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.index.query.json;, +, +import org.elasticsearch.util.json.JsonBuilder;, +, +import java.io.IOException;, +, +/**, + * @author kimchy (shay.banon), + */, +public class FieldJsonQueryBuilder extends BaseJsonQueryBuilder {, +, +    public static enum Operator {, +        OR,, +        AND, +    }, +, +    private final String name;, +, +    private final Object query;, +, +    private Operator defaultOperator;, +, +    private String analyzer;, +, +    private Boolean allowLeadingWildcard;, +, +    private Boolean lowercaseExpandedTerms;, +, +    private Boolean enablePositionIncrements;, +, +    private float fuzzyMinSim = -1;, +, +    private float boost = -1;, +, +    private int fuzzyPrefixLength = -1;, +, +    private int phraseSlop = -1;, +, +    private boolean extraSet = false;, +, +    public FieldJsonQueryBuilder(String name, String query) {, +        this(name, (Object) query);, +    }, +, +    public FieldJsonQueryBuilder(String name, int query) {, +        this(name, (Object) query);, +    }, +, +    public FieldJsonQueryBuilder(String name, long query) {, +        this(name, (Object) query);, +    }, +, +    public FieldJsonQueryBuilder(String name, float query) {, +        this(name, (Object) query);, +    }, +, +    public FieldJsonQueryBuilder(String name, double query) {, +        this(name, (Object) query);, +    }, +, +    private FieldJsonQueryBuilder(String name, Object query) {, +        this.name = name;, +        this.query = query;, +    }, +, +    public FieldJsonQueryBuilder boost(float boost) {, +        this.boost = boost;, +        extraSet = true;, +        return this;, +    }, +, +    public FieldJsonQueryBuilder defaultOperator(Operator defaultOperator) {, +        this.defaultOperator = defaultOperator;, +        extraSet = true;, +        return this;, +    }, +, +    public FieldJsonQueryBuilder analyzer(String analyzer) {, +        this.analyzer = analyzer;, +        extraSet = true;]