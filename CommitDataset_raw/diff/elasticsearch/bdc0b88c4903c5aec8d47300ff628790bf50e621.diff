[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +import org.elasticsearch.transport.BaseTransportRequestHandler;, +import org.elasticsearch.transport.BaseTransportResponseHandler;, +import org.elasticsearch.transport.ConnectTransportException;, +import org.elasticsearch.transport.TransportChannel;, +import org.elasticsearch.transport.TransportException;, +import org.elasticsearch.transport.TransportRequestOptions;, +import org.elasticsearch.transport.TransportService;, +import java.util.concurrent.ConcurrentHashMap;, +import java.util.concurrent.ConcurrentMap;, +import java.util.concurrent.CopyOnWriteArrayList;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +                            if (disconnect) {, +                                transportService.connectToNodeLight(nodeToSend);, +                            } else {, +                            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +import org.elasticsearch.transport.BaseTransportRequestHandler;, +import org.elasticsearch.transport.BaseTransportResponseHandler;, +import org.elasticsearch.transport.ConnectTransportException;, +import org.elasticsearch.transport.TransportChannel;, +import org.elasticsearch.transport.TransportException;, +import org.elasticsearch.transport.TransportRequestOptions;, +import org.elasticsearch.transport.TransportService;, +import java.util.concurrent.ConcurrentHashMap;, +import java.util.concurrent.ConcurrentMap;, +import java.util.concurrent.CopyOnWriteArrayList;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +                            if (disconnect) {, +                                transportService.connectToNodeLight(nodeToSend);, +                            } else {, +                            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/Transport.java, +     * Connects to a node in a light manner. Used when just connecting for ping and then, +     * disconnecting., +     */, +    void connectToNodeLight(DiscoveryNode node) throws ConnectTransportException;, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +import org.elasticsearch.transport.BaseTransportRequestHandler;, +import org.elasticsearch.transport.BaseTransportResponseHandler;, +import org.elasticsearch.transport.ConnectTransportException;, +import org.elasticsearch.transport.TransportChannel;, +import org.elasticsearch.transport.TransportException;, +import org.elasticsearch.transport.TransportRequestOptions;, +import org.elasticsearch.transport.TransportService;, +import java.util.concurrent.ConcurrentHashMap;, +import java.util.concurrent.ConcurrentMap;, +import java.util.concurrent.CopyOnWriteArrayList;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +                            if (disconnect) {, +                                transportService.connectToNodeLight(nodeToSend);, +                            } else {, +                            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/Transport.java, +     * Connects to a node in a light manner. Used when just connecting for ping and then, +     * disconnecting., +     */, +    void connectToNodeLight(DiscoveryNode node) throws ConnectTransportException;, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/TransportService.java, +    public void connectToNodeLight(DiscoveryNode node) throws ConnectTransportException {, +        transport.connectToNodeLight(node);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +import org.elasticsearch.transport.BaseTransportRequestHandler;, +import org.elasticsearch.transport.BaseTransportResponseHandler;, +import org.elasticsearch.transport.ConnectTransportException;, +import org.elasticsearch.transport.TransportChannel;, +import org.elasticsearch.transport.TransportException;, +import org.elasticsearch.transport.TransportRequestOptions;, +import org.elasticsearch.transport.TransportService;, +import java.util.concurrent.ConcurrentHashMap;, +import java.util.concurrent.ConcurrentMap;, +import java.util.concurrent.CopyOnWriteArrayList;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +                            if (disconnect) {, +                                transportService.connectToNodeLight(nodeToSend);, +                            } else {, +                            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/Transport.java, +     * Connects to a node in a light manner. Used when just connecting for ping and then, +     * disconnecting., +     */, +    void connectToNodeLight(DiscoveryNode node) throws ConnectTransportException;, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/TransportService.java, +    public void connectToNodeLight(DiscoveryNode node) throws ConnectTransportException {, +        transport.connectToNodeLight(node);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/local/LocalTransport.java]