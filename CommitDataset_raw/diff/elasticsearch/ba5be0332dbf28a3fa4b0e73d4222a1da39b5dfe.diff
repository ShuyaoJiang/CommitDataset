[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/build.gradle, +  // from org.netty.util.internal.logging.InternalLoggerFactory (netty) - it's optional, +  'org.slf4j.Logger',, +  'org.slf4j.LoggerFactory',, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/build.gradle, +  // from org.netty.util.internal.logging.InternalLoggerFactory (netty) - it's optional, +  'org.slf4j.Logger',, +  'org.slf4j.LoggerFactory',, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import org.elasticsearch.common.logging.LoggerMessageFormat;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/build.gradle, +  // from org.netty.util.internal.logging.InternalLoggerFactory (netty) - it's optional, +  'org.slf4j.Logger',, +  'org.slf4j.LoggerFactory',, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import org.elasticsearch.common.logging.LoggerMessageFormat;, +++ b/core/src/main/java/org/elasticsearch/action/support/single/instance/TransportInstanceSingleOperationAction.java, +import org.elasticsearch.common.logging.LoggerMessageFormat;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/build.gradle, +  // from org.netty.util.internal.logging.InternalLoggerFactory (netty) - it's optional, +  'org.slf4j.Logger',, +  'org.slf4j.LoggerFactory',, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import org.elasticsearch.common.logging.LoggerMessageFormat;, +++ b/core/src/main/java/org/elasticsearch/action/support/single/instance/TransportInstanceSingleOperationAction.java, +import org.elasticsearch.common.logging.LoggerMessageFormat;, +++ b/core/src/main/java/org/elasticsearch/action/support/single/shard/TransportSingleShardAction.java, +import org.elasticsearch.common.logging.LoggerMessageFormat;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/build.gradle, +  // from org.netty.util.internal.logging.InternalLoggerFactory (netty) - it's optional, +  'org.slf4j.Logger',, +  'org.slf4j.LoggerFactory',, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import org.elasticsearch.common.logging.LoggerMessageFormat;, +++ b/core/src/main/java/org/elasticsearch/action/support/single/instance/TransportInstanceSingleOperationAction.java, +import org.elasticsearch.common.logging.LoggerMessageFormat;, +++ b/core/src/main/java/org/elasticsearch/action/support/single/shard/TransportSingleShardAction.java, +import org.elasticsearch.common.logging.LoggerMessageFormat;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.common.logging.LogConfigurator;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/build.gradle, +  // from org.netty.util.internal.logging.InternalLoggerFactory (netty) - it's optional, +  'org.slf4j.Logger',, +  'org.slf4j.LoggerFactory',, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import org.elasticsearch.common.logging.LoggerMessageFormat;, +++ b/core/src/main/java/org/elasticsearch/action/support/single/instance/TransportInstanceSingleOperationAction.java, +import org.elasticsearch.common.logging.LoggerMessageFormat;, +++ b/core/src/main/java/org/elasticsearch/action/support/single/shard/TransportSingleShardAction.java, +import org.elasticsearch.common.logging.LoggerMessageFormat;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.common.logging.LogConfigurator;, +++ b/core/src/main/java/org/elasticsearch/common/logging/ConsoleAppender.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.logging;, +, +import org.apache.log4j.Layout;, +import org.apache.log4j.WriterAppender;, +import org.apache.log4j.helpers.LogLog;, +import org.elasticsearch.common.SuppressForbidden;, +, +import java.io.IOException;, +import java.io.OutputStream;, +, +/**, + * ConsoleAppender appends log events to <code>System.out</code> or, + * <code>System.err</code> using a layout specified by the user. The]