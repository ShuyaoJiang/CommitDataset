[+++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +        private Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> rootMappers = new LinkedHashMap<>();, +        public Builder put(MetadataFieldMapper.Builder<?, ?> mapper) {, +            MetadataFieldMapper metadataMapper = mapper.build(builderContext);, +            rootMappers.put(metadataMapper.getClass(), metadataMapper);, +                          Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> rootMappers,, +                rootMappers.values().toArray(new MetadataFieldMapper[rootMappers.values().size()]),, +        for (MetadataFieldMapper metadataMapper : this.mapping.metadataMappers) {, +            if (metadataMapper instanceof FieldMapper) {, +                newFieldMappers.add((FieldMapper) metadataMapper);, +    public <T extends MetadataFieldMapper> T rootMapper(Class<T> type) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +        private Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> rootMappers = new LinkedHashMap<>();, +        public Builder put(MetadataFieldMapper.Builder<?, ?> mapper) {, +            MetadataFieldMapper metadataMapper = mapper.build(builderContext);, +            rootMappers.put(metadataMapper.getClass(), metadataMapper);, +                          Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> rootMappers,, +                rootMappers.values().toArray(new MetadataFieldMapper[rootMappers.values().size()]),, +        for (MetadataFieldMapper metadataMapper : this.mapping.metadataMappers) {, +            if (metadataMapper instanceof FieldMapper) {, +                newFieldMappers.add((FieldMapper) metadataMapper);, +    public <T extends MetadataFieldMapper> T rootMapper(Class<T> type) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +                    docBuilder.put((MetadataFieldMapper.Builder)typeParser.parse(fieldName, fieldNodeMap, parserContext));, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +        private Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> rootMappers = new LinkedHashMap<>();, +        public Builder put(MetadataFieldMapper.Builder<?, ?> mapper) {, +            MetadataFieldMapper metadataMapper = mapper.build(builderContext);, +            rootMappers.put(metadataMapper.getClass(), metadataMapper);, +                          Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> rootMappers,, +                rootMappers.values().toArray(new MetadataFieldMapper[rootMappers.values().size()]),, +        for (MetadataFieldMapper metadataMapper : this.mapping.metadataMappers) {, +            if (metadataMapper instanceof FieldMapper) {, +                newFieldMappers.add((FieldMapper) metadataMapper);, +    public <T extends MetadataFieldMapper> T rootMapper(Class<T> type) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +                    docBuilder.put((MetadataFieldMapper.Builder)typeParser.parse(fieldName, fieldNodeMap, parserContext));, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +            for (MetadataFieldMapper metadataMapper : mapping.metadataMappers) {, +                metadataMapper.preParse(context);, +            for (MetadataFieldMapper metadataMapper : mapping.metadataMappers) {, +                metadataMapper.postParse(context);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +        private Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> rootMappers = new LinkedHashMap<>();, +        public Builder put(MetadataFieldMapper.Builder<?, ?> mapper) {, +            MetadataFieldMapper metadataMapper = mapper.build(builderContext);, +            rootMappers.put(metadataMapper.getClass(), metadataMapper);, +                          Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> rootMappers,, +                rootMappers.values().toArray(new MetadataFieldMapper[rootMappers.values().size()]),, +        for (MetadataFieldMapper metadataMapper : this.mapping.metadataMappers) {, +            if (metadataMapper instanceof FieldMapper) {, +                newFieldMappers.add((FieldMapper) metadataMapper);, +    public <T extends MetadataFieldMapper> T rootMapper(Class<T> type) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +                    docBuilder.put((MetadataFieldMapper.Builder)typeParser.parse(fieldName, fieldNodeMap, parserContext));, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +            for (MetadataFieldMapper metadataMapper : mapping.metadataMappers) {, +                metadataMapper.preParse(context);, +            for (MetadataFieldMapper metadataMapper : mapping.metadataMappers) {, +                metadataMapper.postParse(context);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +                for (MetadataFieldMapper metadataMapper : mapper.mapping().metadataMappers) {, +                    newFieldMappers.add(metadataMapper);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +        private Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> rootMappers = new LinkedHashMap<>();, +        public Builder put(MetadataFieldMapper.Builder<?, ?> mapper) {, +            MetadataFieldMapper metadataMapper = mapper.build(builderContext);, +            rootMappers.put(metadataMapper.getClass(), metadataMapper);, +                          Map<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> rootMappers,, +                rootMappers.values().toArray(new MetadataFieldMapper[rootMappers.values().size()]),, +        for (MetadataFieldMapper metadataMapper : this.mapping.metadataMappers) {, +            if (metadataMapper instanceof FieldMapper) {, +                newFieldMappers.add((FieldMapper) metadataMapper);, +    public <T extends MetadataFieldMapper> T rootMapper(Class<T> type) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +                    docBuilder.put((MetadataFieldMapper.Builder)typeParser.parse(fieldName, fieldNodeMap, parserContext));, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +            for (MetadataFieldMapper metadataMapper : mapping.metadataMappers) {, +                metadataMapper.preParse(context);, +            for (MetadataFieldMapper metadataMapper : mapping.metadataMappers) {, +                metadataMapper.postParse(context);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +                for (MetadataFieldMapper metadataMapper : mapper.mapping().metadataMappers) {, +                    newFieldMappers.add(metadataMapper);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/Mapping.java, +    final MetadataFieldMapper[] metadataMappers;, +    final ImmutableMap<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> rootMappersMap;, +    public Mapping(Version indexCreated, RootObjectMapper rootObjectMapper, MetadataFieldMapper[] metadataMappers, SourceTransform[] sourceTransforms, ImmutableMap<String, Object> meta) {, +        this.metadataMappers = metadataMappers;, +        ImmutableMap.Builder<Class<? extends MetadataFieldMapper>, MetadataFieldMapper> builder = ImmutableMap.builder();, +        for (MetadataFieldMapper metadataMapper : metadataMappers) {, +            if (indexCreated.before(Version.V_2_0_0) && LEGACY_INCLUDE_IN_OBJECT.contains(metadataMapper.name())) {, +                root.putMapper(metadataMapper);, +            builder.put(metadataMapper.getClass(), metadataMapper);, +        Arrays.sort(metadataMappers, new Comparator<Mapper>() {, +        return new Mapping(indexCreated, (RootObjectMapper) rootObjectMapper, metadataMappers, sourceTransforms, meta);, +    public <T extends MetadataFieldMapper> T rootMapper(Class<T> clazz) {, +        assert metadataMappers.length == mergeWith.metadataMappers.length;, +        for (MetadataFieldMapper metadataMapper : metadataMappers) {, +            MetadataFieldMapper mergeWithMetadataMapper = mergeWith.rootMapper(metadataMapper.getClass());]