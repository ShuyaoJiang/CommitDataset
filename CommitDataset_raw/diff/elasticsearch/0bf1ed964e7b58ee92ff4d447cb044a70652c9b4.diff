[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java, +                    if (!currentState.metaData().hasConcreteIndex(request.index)) {, +                    RoutingTable.Builder routingTableBuilder = RoutingTable.builder().routingTable(currentState.routingTable());, +                    routingTableBuilder.remove(request.index);, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java, +                    if (!currentState.metaData().hasConcreteIndex(request.index)) {, +                    RoutingTable.Builder routingTableBuilder = RoutingTable.builder().routingTable(currentState.routingTable());, +                    routingTableBuilder.remove(request.index);, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +                    RoutingTable.Builder routingTableBuilder = RoutingTable.builder().routingTable(currentState.routingTable());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java, +                    if (!currentState.metaData().hasConcreteIndex(request.index)) {, +                    RoutingTable.Builder routingTableBuilder = RoutingTable.builder().routingTable(currentState.routingTable());, +                    routingTableBuilder.remove(request.index);, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +                    RoutingTable.Builder routingTableBuilder = RoutingTable.builder().routingTable(currentState.routingTable());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexRoutingTable.java, +            for (ShardRouting shardRouting : indexShardRoutingTable) {, +                if (!shardRouting.index().equals(index())) {, +                    validation.addIndexFailure(index(), "shard routing has an index [" + shardRouting.index() + "] that is different than the routing table");, +                }, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java, +                    if (!currentState.metaData().hasConcreteIndex(request.index)) {, +                    RoutingTable.Builder routingTableBuilder = RoutingTable.builder().routingTable(currentState.routingTable());, +                    routingTableBuilder.remove(request.index);, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +                    RoutingTable.Builder routingTableBuilder = RoutingTable.builder().routingTable(currentState.routingTable());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexRoutingTable.java, +            for (ShardRouting shardRouting : indexShardRoutingTable) {, +                if (!shardRouting.index().equals(index())) {, +                    validation.addIndexFailure(index(), "shard routing has an index [" + shardRouting.index() + "] that is different than the routing table");, +                }, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java, +    public static final RoutingTable EMPTY_ROUTING_TABLE = builder().build();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java, +                    if (!currentState.metaData().hasConcreteIndex(request.index)) {, +                    RoutingTable.Builder routingTableBuilder = RoutingTable.builder().routingTable(currentState.routingTable());, +                    routingTableBuilder.remove(request.index);, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +                    RoutingTable.Builder routingTableBuilder = RoutingTable.builder().routingTable(currentState.routingTable());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexRoutingTable.java, +            for (ShardRouting shardRouting : indexShardRoutingTable) {, +                if (!shardRouting.index().equals(index())) {, +                    validation.addIndexFailure(index(), "shard routing has an index [" + shardRouting.index() + "] that is different than the routing table");, +                }, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java, +    public static final RoutingTable EMPTY_ROUTING_TABLE = builder().build();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +                            // TODO, what happens with versioning here?, +                            routingTable = RoutingTable.builder().build();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java, +                    if (!currentState.metaData().hasConcreteIndex(request.index)) {, +                    RoutingTable.Builder routingTableBuilder = RoutingTable.builder().routingTable(currentState.routingTable());, +                    routingTableBuilder.remove(request.index);, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +                    RoutingTable.Builder routingTableBuilder = RoutingTable.builder().routingTable(currentState.routingTable());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexRoutingTable.java, +            for (ShardRouting shardRouting : indexShardRoutingTable) {, +                if (!shardRouting.index().equals(index())) {, +                    validation.addIndexFailure(index(), "shard routing has an index [" + shardRouting.index() + "] that is different than the routing table");, +                }, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java, +    public static final RoutingTable EMPTY_ROUTING_TABLE = builder().build();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +                            // TODO, what happens with versioning here?, +                            routingTable = RoutingTable.builder().build();, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/cluster/routing/allocation/UpdateNumberOfReplicasTests.java, +        routingTable = RoutingTable.builder().routingTable(routingTable).updateNumberOfReplicas(2).build();, +        routingTable = RoutingTable.builder().routingTable(routingTable).updateNumberOfReplicas(1).build();]