[+++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/DoubleScriptDataComparator.java, +public class DoubleScriptDataComparator extends NumberComparatorBase<Double> {, +, +    @Override, +    public void add(int slot, int doc) {, +        script.setNextDocId(doc);, +        values[slot] += script.runAsDouble();, +    }, +, +    @Override, +    public void divide(int slot, int divisor) {, +        values[slot] /= divisor;, +    }, +, +    @Override, +    public void missing(int slot) {, +        values[slot] = Double.MAX_VALUE;, +    }, +, +    @Override, +    public int compareBottomMissing() {, +        return Double.compare(bottom, Double.MAX_VALUE);, +    }, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/DoubleScriptDataComparator.java, +public class DoubleScriptDataComparator extends NumberComparatorBase<Double> {, +, +    @Override, +    public void add(int slot, int doc) {, +        script.setNextDocId(doc);, +        values[slot] += script.runAsDouble();, +    }, +, +    @Override, +    public void divide(int slot, int divisor) {, +        values[slot] /= divisor;, +    }, +, +    @Override, +    public void missing(int slot) {, +        values[slot] = Double.MAX_VALUE;, +    }, +, +    @Override, +    public int compareBottomMissing() {, +        return Double.compare(bottom, Double.MAX_VALUE);, +    }, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/GeoDistanceComparator.java, +public class GeoDistanceComparator extends NumberComparatorBase<Double> {, +    @Override, +    public void add(int slot, int doc) {, +        values[slot] += geoDistanceValues.computeDistance(doc);, +    }, +, +    @Override, +    public void divide(int slot, int divisor) {, +        values[slot] /= divisor;, +    }, +, +    @Override, +    public void missing(int slot) {, +        values[slot] = Double.MAX_VALUE;, +    }, +, +    @Override, +    public int compareBottomMissing() {, +        return Double.compare(bottom, Double.MAX_VALUE);, +    }, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/DoubleScriptDataComparator.java, +public class DoubleScriptDataComparator extends NumberComparatorBase<Double> {, +, +    @Override, +    public void add(int slot, int doc) {, +        script.setNextDocId(doc);, +        values[slot] += script.runAsDouble();, +    }, +, +    @Override, +    public void divide(int slot, int divisor) {, +        values[slot] /= divisor;, +    }, +, +    @Override, +    public void missing(int slot) {, +        values[slot] = Double.MAX_VALUE;, +    }, +, +    @Override, +    public int compareBottomMissing() {, +        return Double.compare(bottom, Double.MAX_VALUE);, +    }, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/GeoDistanceComparator.java, +public class GeoDistanceComparator extends NumberComparatorBase<Double> {, +    @Override, +    public void add(int slot, int doc) {, +        values[slot] += geoDistanceValues.computeDistance(doc);, +    }, +, +    @Override, +    public void divide(int slot, int divisor) {]