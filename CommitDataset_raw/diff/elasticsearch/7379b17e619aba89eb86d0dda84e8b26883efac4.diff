[+++ b/core/src/main/java/org/elasticsearch/common/RandomBasedUUIDGenerator.java, +, +import java.io.IOException;, +        return getBase64UUID(SecureRandomHolder.INSTANCE);, +++ b/core/src/main/java/org/elasticsearch/common/RandomBasedUUIDGenerator.java, +, +import java.io.IOException;, +        return getBase64UUID(SecureRandomHolder.INSTANCE);, +++ b/core/src/main/java/org/elasticsearch/common/Randomness.java, +    public static Random get(Settings settings, Setting<Long> setting) {, +                Object randomizedContext = currentMethod.invoke(null);, +    public static void shuffle(List<?> list) {, +++ b/core/src/main/java/org/elasticsearch/common/RandomBasedUUIDGenerator.java, +, +import java.io.IOException;, +        return getBase64UUID(SecureRandomHolder.INSTANCE);, +++ b/core/src/main/java/org/elasticsearch/common/Randomness.java, +    public static Random get(Settings settings, Setting<Long> setting) {, +                Object randomizedContext = currentMethod.invoke(null);, +    public static void shuffle(List<?> list) {, +++ b/core/src/test/java/org/elasticsearch/cluster/ClusterChangedEventTests.java, +    private static final String INITIAL_CLUSTER_ID = UUIDs.randomBase64UUID();, +    private static final List<Index> initialIndices = Arrays.asList(new Index("idx1", UUIDs.randomBase64UUID()),, +++ b/core/src/main/java/org/elasticsearch/common/RandomBasedUUIDGenerator.java, +, +import java.io.IOException;, +        return getBase64UUID(SecureRandomHolder.INSTANCE);, +++ b/core/src/main/java/org/elasticsearch/common/Randomness.java, +    public static Random get(Settings settings, Setting<Long> setting) {, +                Object randomizedContext = currentMethod.invoke(null);, +    public static void shuffle(List<?> list) {, +++ b/core/src/test/java/org/elasticsearch/cluster/ClusterChangedEventTests.java, +    private static final String INITIAL_CLUSTER_ID = UUIDs.randomBase64UUID();, +    private static final List<Index> initialIndices = Arrays.asList(new Index("idx1", UUIDs.randomBase64UUID()),, +++ b/core/src/test/java/org/elasticsearch/common/UUIDTests.java, +        testUUIDThreaded(randomUUIDGen);, +++ b/core/src/main/java/org/elasticsearch/common/RandomBasedUUIDGenerator.java, +, +import java.io.IOException;, +        return getBase64UUID(SecureRandomHolder.INSTANCE);, +++ b/core/src/main/java/org/elasticsearch/common/Randomness.java, +    public static Random get(Settings settings, Setting<Long> setting) {, +                Object randomizedContext = currentMethod.invoke(null);, +    public static void shuffle(List<?> list) {, +++ b/core/src/test/java/org/elasticsearch/cluster/ClusterChangedEventTests.java, +    private static final String INITIAL_CLUSTER_ID = UUIDs.randomBase64UUID();, +    private static final List<Index> initialIndices = Arrays.asList(new Index("idx1", UUIDs.randomBase64UUID()),, +++ b/core/src/test/java/org/elasticsearch/common/UUIDTests.java, +        testUUIDThreaded(randomUUIDGen);, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexSameIndexTests.java, +    private static final ClusterState STATE = ClusterState.builder(new ClusterName("test")).metaData(MetaData.builder(), +    private static final IndexNameExpressionResolver INDEX_NAME_EXPRESSION_RESOLVER = new IndexNameExpressionResolver(Settings.EMPTY);, +    private static final AutoCreateIndex AUTO_CREATE_INDEX = new AutoCreateIndex(Settings.EMPTY, INDEX_NAME_EXPRESSION_RESOLVER);]