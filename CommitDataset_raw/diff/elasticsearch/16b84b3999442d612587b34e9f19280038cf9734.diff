[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsBackwardCompatibilityIT.java, +import org.elasticsearch.test.search.aggregations.bucket.SharedSignificantTermsTestMethods;, +    public void testAggregateAndCheckFromSeveralShards() throws IOException, ExecutionException, InterruptedException {, +        SharedSignificantTermsTestMethods.aggregateAndCheckFromSeveralShards(this);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsBackwardCompatibilityIT.java, +import org.elasticsearch.test.search.aggregations.bucket.SharedSignificantTermsTestMethods;, +    public void testAggregateAndCheckFromSeveralShards() throws IOException, ExecutionException, InterruptedException {, +        SharedSignificantTermsTestMethods.aggregateAndCheckFromSeveralShards(this);, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreIT.java, +import org.elasticsearch.search.aggregations.bucket.significant.heuristics.*;, +import org.elasticsearch.test.search.aggregations.bucket.SharedSignificantTermsTestMethods;, +import org.junit.Test;, +import java.util.*;, +import static org.hamcrest.Matchers.*;, +, +        SharedSignificantTermsTestMethods.index01Docs(type, settings, this);, +        SharedSignificantTermsTestMethods.index01Docs(type, settings, this);, +        SharedSignificantTermsTestMethods.index01Docs(type, settings, this);, +, +    public void testReduceFromSeveralShards() throws IOException, ExecutionException, InterruptedException {, +        SharedSignificantTermsTestMethods.aggregateAndCheckFromSeveralShards(this);, +    }, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsBackwardCompatibilityIT.java, +import org.elasticsearch.test.search.aggregations.bucket.SharedSignificantTermsTestMethods;, +    public void testAggregateAndCheckFromSeveralShards() throws IOException, ExecutionException, InterruptedException {, +        SharedSignificantTermsTestMethods.aggregateAndCheckFromSeveralShards(this);, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreIT.java, +import org.elasticsearch.search.aggregations.bucket.significant.heuristics.*;, +import org.elasticsearch.test.search.aggregations.bucket.SharedSignificantTermsTestMethods;, +import org.junit.Test;, +import java.util.*;, +import static org.hamcrest.Matchers.*;, +, +        SharedSignificantTermsTestMethods.index01Docs(type, settings, this);, +        SharedSignificantTermsTestMethods.index01Docs(type, settings, this);, +        SharedSignificantTermsTestMethods.index01Docs(type, settings, this);, +, +    public void testReduceFromSeveralShards() throws IOException, ExecutionException, InterruptedException {, +        SharedSignificantTermsTestMethods.aggregateAndCheckFromSeveralShards(this);, +    }, +, +++ b/core/src/test/java/org/elasticsearch/test/search/aggregations/bucket/SharedSignificantTermsTestMethods.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.test.search.aggregations.bucket;, +, +import org.elasticsearch.action.index.IndexRequestBuilder;, +import org.elasticsearch.action.search.SearchResponse;, +import org.elasticsearch.search.aggregations.Aggregation;, +import org.elasticsearch.search.aggregations.bucket.significant.SignificantTerms;, +import org.elasticsearch.search.aggregations.bucket.significant.SignificantTermsBuilder;, +import org.elasticsearch.search.aggregations.bucket.terms.StringTerms;, +import org.elasticsearch.search.aggregations.bucket.terms.Terms;, +import org.elasticsearch.search.aggregations.bucket.terms.TermsBuilder;, +import org.elasticsearch.test.ESIntegTestCase;, +import org.elasticsearch.test.ESTestCase;, +import org.junit.Assert;, +, +import java.util.ArrayList;, +import java.util.List;, +import java.util.Map;, +import java.util.concurrent.ExecutionException;, +, +import static org.elasticsearch.test.ESIntegTestCase.client;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertSearchResponse;, +import static org.hamcrest.Matchers.equalTo;, +, +public class SharedSignificantTermsTestMethods {, +    public static final String INDEX_NAME = "testidx";, +    public static final String DOC_TYPE = "doc";, +    public static final String TEXT_FIELD = "text";, +    public static final String CLASS_FIELD = "class";, +, +    public static void aggregateAndCheckFromSeveralShards(ESIntegTestCase testCase) throws ExecutionException, InterruptedException {, +        String type = ESTestCase.randomBoolean() ? "string" : "long";, +        String settings = "{\"index.number_of_shards\": 5, \"index.number_of_replicas\": 0}";, +        index01Docs(type, settings, testCase);]