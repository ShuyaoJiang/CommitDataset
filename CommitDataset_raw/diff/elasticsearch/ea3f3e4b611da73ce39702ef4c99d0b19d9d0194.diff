[+++ b/TESTING.asciidoc, ++, ++, ++, ++, ++, ++, +++ b/TESTING.asciidoc, ++, ++, ++, ++, ++, ++, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/TESTING.asciidoc, ++, ++, ++, ++, ++, ++, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- only one statement per line should be allowed -->, +    <module name="OneStatementPerLine"/>, +++ b/TESTING.asciidoc, ++, ++, ++, ++, ++, ++, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- only one statement per line should be allowed -->, +    <module name="OneStatementPerLine"/>, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.StartDatafeedRequest;, +import org.elasticsearch.client.ml.StopDatafeedRequest;, +    static Request startDatafeed(StartDatafeedRequest startDatafeedRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("datafeeds"), +            .addPathPart(startDatafeedRequest.getDatafeedId()), +            .addPathPartAsIs("_start"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(startDatafeedRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +    static Request stopDatafeed(StopDatafeedRequest stopDatafeedRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("datafeeds"), +            .addPathPart(Strings.collectionToCommaDelimitedString(stopDatafeedRequest.getDatafeedIds())), +            .addPathPartAsIs("_stop"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(stopDatafeedRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +++ b/TESTING.asciidoc, ++, ++, ++, ++, ++, ++, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- only one statement per line should be allowed -->, +    <module name="OneStatementPerLine"/>, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.StartDatafeedRequest;, +import org.elasticsearch.client.ml.StopDatafeedRequest;, +    static Request startDatafeed(StartDatafeedRequest startDatafeedRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("datafeeds"), +            .addPathPart(startDatafeedRequest.getDatafeedId()), +            .addPathPartAsIs("_start"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(startDatafeedRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }]