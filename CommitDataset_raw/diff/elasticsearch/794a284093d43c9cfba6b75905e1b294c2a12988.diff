[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +import java.util.concurrent.CopyOnWriteArrayList;, +    private final List<FieldMapperListener> fieldMapperListeners = new CopyOnWriteArrayList<FieldMapperListener>();, +    private final List<ObjectMapperListener> objectMapperListeners = new CopyOnWriteArrayList<ObjectMapperListener>();, +        }, +        for (ObjectMapperListener objectMapperListener : objectMapperListeners) {, +            objectMapperListener.objectMapper(objectMapper);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +import java.util.concurrent.CopyOnWriteArrayList;, +    private final List<FieldMapperListener> fieldMapperListeners = new CopyOnWriteArrayList<FieldMapperListener>();, +    private final List<ObjectMapperListener> objectMapperListeners = new CopyOnWriteArrayList<ObjectMapperListener>();, +        }, +        for (ObjectMapperListener objectMapperListener : objectMapperListeners) {, +            objectMapperListener.objectMapper(objectMapper);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +            mappers = newMapBuilder(mappers).put(mapper.type(), mapper).immutableMap();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +import java.util.concurrent.CopyOnWriteArrayList;, +    private final List<FieldMapperListener> fieldMapperListeners = new CopyOnWriteArrayList<FieldMapperListener>();, +    private final List<ObjectMapperListener> objectMapperListeners = new CopyOnWriteArrayList<ObjectMapperListener>();, +        }, +        for (ObjectMapperListener objectMapperListener : objectMapperListeners) {, +            objectMapperListener.objectMapper(objectMapper);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +            mappers = newMapBuilder(mappers).put(mapper.type(), mapper).immutableMap();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/multifield/MultiFieldMapper.java, +import java.util.ArrayList;, +        List<FieldMapper> mappersToAddToDocMapper = new ArrayList<FieldMapper>();, +                        mappersToAddToDocMapper.add((FieldMapper) defaultMapper);, +                            mappersToAddToDocMapper.add((FieldMapper) defaultMapper);, +                                mappersToAddToDocMapper.add((FieldMapper) mergeWithMapper);, +        // call it outside of the mutex, +        for (FieldMapper fieldMapper : mappersToAddToDocMapper) {, +            mergeContext.docMapper().addFieldMapper(fieldMapper);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +import java.util.concurrent.CopyOnWriteArrayList;, +    private final List<FieldMapperListener> fieldMapperListeners = new CopyOnWriteArrayList<FieldMapperListener>();, +    private final List<ObjectMapperListener> objectMapperListeners = new CopyOnWriteArrayList<ObjectMapperListener>();, +        }, +        for (ObjectMapperListener objectMapperListener : objectMapperListeners) {, +            objectMapperListener.objectMapper(objectMapper);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +            mappers = newMapBuilder(mappers).put(mapper.type(), mapper).immutableMap();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/multifield/MultiFieldMapper.java, +import java.util.ArrayList;, +        List<FieldMapper> mappersToAddToDocMapper = new ArrayList<FieldMapper>();, +                        mappersToAddToDocMapper.add((FieldMapper) defaultMapper);, +                            mappersToAddToDocMapper.add((FieldMapper) defaultMapper);, +                                mappersToAddToDocMapper.add((FieldMapper) mergeWithMapper);, +        // call it outside of the mutex, +        for (FieldMapper fieldMapper : mappersToAddToDocMapper) {, +            mergeContext.docMapper().addFieldMapper(fieldMapper);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java, +import java.util.ArrayList;, +                boolean newMapper = false;, +                    if (objectMapper == null) {, +                        newMapper = true;, +                        // now re add it, +                        context.path().add(currentFieldName);, +                        context.addedMapper();, +                    }, +                }, +                // traverse and parse outside of the mutex, +                if (newMapper) {, +                }, +                // now, parse it, +        boolean newMapper = false;, +            if (mapper == null) {, +                newMapper = true;, +                context.addedMapper();, +            }, +        }, +        if (newMapper) {, +        mapper.parse(context);, +        List<Mapper> mappersToTraverse = new ArrayList<Mapper>();, +                        mappersToTraverse.add(mergeWithMapper);, +                            // now, record mappers to traverse events for all mappers, +                                mappersToTraverse.add(mapper);, +                            }, +                        }, +                    } else {, +                        mergeIntoMapper.merge(mergeWithMapper, mergeContext);, +                    }, +                }, +            }, +        }, +        // call this outside of the mutex, +        for (Mapper mapper : mappersToTraverse) {, +        // grr, ugly! on root, dynamic defaults to TRUE, on children, it defaults to null to]