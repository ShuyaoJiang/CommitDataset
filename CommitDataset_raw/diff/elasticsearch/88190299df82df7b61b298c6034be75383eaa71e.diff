[+++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardFollowNodeTask.java, +        final long newFromSeqNo;, +            newFromSeqNo = from;, +            newFromSeqNo = maxSeqNo + 1;, +        if (newFromSeqNo <= maxRequiredSeqNo && isStopped() == false) {, +            int newSize = Math.toIntExact(maxRequiredSeqNo - newFromSeqNo + 1);, +                params.getFollowShardId(), response.getOperations().length, newFromSeqNo, maxRequiredSeqNo);, +            sendShardChangesRequest(newFromSeqNo, newSize, maxRequiredSeqNo);, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardFollowNodeTask.java, +        final long newFromSeqNo;, +            newFromSeqNo = from;, +            newFromSeqNo = maxSeqNo + 1;, +        if (newFromSeqNo <= maxRequiredSeqNo && isStopped() == false) {, +            int newSize = Math.toIntExact(maxRequiredSeqNo - newFromSeqNo + 1);, +                params.getFollowShardId(), response.getOperations().length, newFromSeqNo, maxRequiredSeqNo);, +            sendShardChangesRequest(newFromSeqNo, newSize, maxRequiredSeqNo);, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/action/ShardFollowNodeTaskTests.java, +        startTask(task, 63, -1);, +        startTask(task, 63, -1);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 63, 0L, 63L);, +        task.innerHandleReadResponse(0L, 63L, response);, +        assertThat(status.getLastRequestedSeqno(), equalTo(63L));, +        assertThat(status.getLeaderGlobalCheckpoint(), equalTo(63L));, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 31, 0L, 31L);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 31, 0L, 31L);, +        task.innerHandleReadResponse(0L, 64L,, +            new ShardChangesAction.Response(0, 0, new Translog.Operation[0]));, +        startTask(task, 63, -1);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 63, 0L, 63L);, +        task.innerHandleReadResponse(0L, 63L, response);, +        task.innerHandleReadResponse(64L, 63L,, +            new ShardChangesAction.Response(0, 63L, new Translog.Operation[0]));, +        startTask(task, 63, -1);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 63, 1L, 63L);, +        task.handleReadResponse(0L, 63L, response);, +        assertThat(status.getLastRequestedSeqno(), equalTo(63L));, +        assertThat(status.getLeaderGlobalCheckpoint(), equalTo(63L));, +        startTask(task, 63, -1);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 63, 1L, 63L);, +        task.handleReadResponse(0L, 63L, response);, +        assertThat(status.getLastRequestedSeqno(), equalTo(63L));, +        assertThat(status.getLeaderGlobalCheckpoint(), equalTo(63L));, +        startTask(task, 63, -1);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 63, 0L, 63L);, +        task.innerHandleReadResponse(0L, 63L, response);, +        assertThat(status.getLastRequestedSeqno(), equalTo(63L));, +        assertThat(status.getLeaderGlobalCheckpoint(), equalTo(63L));, +        startTask(task, 63, -1);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 63, 0L, 63L);, +        task.innerHandleReadResponse(0L, 63L, response);, +        startTask(task, 63, -1);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 63, 0L, 643);, +        task.innerHandleReadResponse(0L, 63L, response);, +        startTask(task, 63, -1);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 63, 0L, 63L);, +        task.innerHandleReadResponse(0L, 63L, response);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 63, 0L, 64L);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 63, 0L, 63L);, +    private static ShardChangesAction.Response generateShardChangesResponse(long fromSeqNo, long toSeqNo, long imdVersion,, +        for (long seqNo = fromSeqNo; seqNo <= toSeqNo; seqNo++) {, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardFollowNodeTask.java, +        final long newFromSeqNo;, +            newFromSeqNo = from;, +            newFromSeqNo = maxSeqNo + 1;, +        if (newFromSeqNo <= maxRequiredSeqNo && isStopped() == false) {, +            int newSize = Math.toIntExact(maxRequiredSeqNo - newFromSeqNo + 1);, +                params.getFollowShardId(), response.getOperations().length, newFromSeqNo, maxRequiredSeqNo);, +            sendShardChangesRequest(newFromSeqNo, newSize, maxRequiredSeqNo);, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/action/ShardFollowNodeTaskTests.java, +        startTask(task, 63, -1);, +        startTask(task, 63, -1);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 63, 0L, 63L);, +        task.innerHandleReadResponse(0L, 63L, response);, +        assertThat(status.getLastRequestedSeqno(), equalTo(63L));, +        assertThat(status.getLeaderGlobalCheckpoint(), equalTo(63L));, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 31, 0L, 31L);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 31, 0L, 31L);, +        task.innerHandleReadResponse(0L, 64L,, +            new ShardChangesAction.Response(0, 0, new Translog.Operation[0]));, +        startTask(task, 63, -1);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 63, 0L, 63L);, +        task.innerHandleReadResponse(0L, 63L, response);, +        task.innerHandleReadResponse(64L, 63L,, +            new ShardChangesAction.Response(0, 63L, new Translog.Operation[0]));, +        startTask(task, 63, -1);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 63, 1L, 63L);, +        task.handleReadResponse(0L, 63L, response);, +        assertThat(status.getLastRequestedSeqno(), equalTo(63L));, +        assertThat(status.getLeaderGlobalCheckpoint(), equalTo(63L));, +        startTask(task, 63, -1);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 63, 1L, 63L);, +        task.handleReadResponse(0L, 63L, response);, +        assertThat(status.getLastRequestedSeqno(), equalTo(63L));, +        assertThat(status.getLeaderGlobalCheckpoint(), equalTo(63L));, +        startTask(task, 63, -1);, +        ShardChangesAction.Response response = generateShardChangesResponse(0, 63, 0L, 63L);, +        task.innerHandleReadResponse(0L, 63L, response);, +        assertThat(status.getLastRequestedSeqno(), equalTo(63L));, +        assertThat(status.getLeaderGlobalCheckpoint(), equalTo(63L));, +        startTask(task, 63, -1);]