[+++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +import java.util.List;, +import java.util.concurrent.CopyOnWriteArrayList;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +, +import org.elasticsearch.client.node.NodeClient;, +    private final NodeClient client;, +    public InternalClusterInfoService(Settings settings, ClusterService clusterService, ThreadPool threadPool, NodeClient client) {, +        this.client = client;, +        ClusterSettings clusterSettings = clusterService.getClusterSettings();, +        client.admin().cluster().nodesStats(nodesStatsRequest, new LatchedActionListener<>(listener, latch));, +        client.admin().indices().stats(indicesStatsRequest, new LatchedActionListener<>(listener, latch));, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +import java.util.List;, +import java.util.concurrent.CopyOnWriteArrayList;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +, +import org.elasticsearch.client.node.NodeClient;, +    private final NodeClient client;, +    public InternalClusterInfoService(Settings settings, ClusterService clusterService, ThreadPool threadPool, NodeClient client) {, +        this.client = client;, +        ClusterSettings clusterSettings = clusterService.getClusterSettings();, +        client.admin().cluster().nodesStats(nodesStatsRequest, new LatchedActionListener<>(listener, latch));, +        client.admin().indices().stats(indicesStatsRequest, new LatchedActionListener<>(listener, latch));, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import org.elasticsearch.cluster.ClusterInfoService;, +import org.elasticsearch.cluster.InternalClusterInfoService;, +            client = new NodeClient(settings, threadPool);, +            final ClusterInfoService clusterInfoService = newClusterInfoService(settings, clusterService, threadPool, client);, +                    b.bind(ClusterInfoService.class).toInstance(clusterInfoService);, +, +    /** Constructs a ClusterInfoService which may be mocked for tests. */, +    protected ClusterInfoService newClusterInfoService(Settings settings, ClusterService clusterService,, +                                                       ThreadPool threadPool, NodeClient client) {, +        return new InternalClusterInfoService(settings, clusterService, threadPool, client);, +    }, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +import java.util.List;, +import java.util.concurrent.CopyOnWriteArrayList;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +, +import org.elasticsearch.client.node.NodeClient;, +    private final NodeClient client;, +    public InternalClusterInfoService(Settings settings, ClusterService clusterService, ThreadPool threadPool, NodeClient client) {, +        this.client = client;, +        ClusterSettings clusterSettings = clusterService.getClusterSettings();, +        client.admin().cluster().nodesStats(nodesStatsRequest, new LatchedActionListener<>(listener, latch));, +        client.admin().indices().stats(indicesStatsRequest, new LatchedActionListener<>(listener, latch));, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import org.elasticsearch.cluster.ClusterInfoService;, +import org.elasticsearch.cluster.InternalClusterInfoService;, +            client = new NodeClient(settings, threadPool);, +            final ClusterInfoService clusterInfoService = newClusterInfoService(settings, clusterService, threadPool, client);, +                    b.bind(ClusterInfoService.class).toInstance(clusterInfoService);, +, +    /** Constructs a ClusterInfoService which may be mocked for tests. */, +    protected ClusterInfoService newClusterInfoService(Settings settings, ClusterService clusterService,, +                                                       ThreadPool threadPool, NodeClient client) {, +        return new InternalClusterInfoService(settings, clusterService, threadPool, client);, +    }, +++ b/core/src/main/java/org/elasticsearch/plugins/Plugin.java, +import org.elasticsearch.cluster.ClusterModule;, +import org.elasticsearch.repositories.RepositoriesModule;, +     * Old-style snapshot/restore extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading, +     * from 2.x., +     *, +     * @deprecated implement {@link RepositoryPlugin} instead, +     */, +    @Deprecated, +    public final void onModule(RepositoriesModule module) {}, +, +    /**, +     * Old-style cluster extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading, +     * from 2.x., +     *, +     * @deprecated implement {@link ClusterPlugin} instead, +     */, +    @Deprecated, +    public final void onModule(ClusterModule module) {}, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +import java.util.List;, +import java.util.concurrent.CopyOnWriteArrayList;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +, +import org.elasticsearch.client.node.NodeClient;, +    private final NodeClient client;, +    public InternalClusterInfoService(Settings settings, ClusterService clusterService, ThreadPool threadPool, NodeClient client) {, +        this.client = client;, +        ClusterSettings clusterSettings = clusterService.getClusterSettings();]