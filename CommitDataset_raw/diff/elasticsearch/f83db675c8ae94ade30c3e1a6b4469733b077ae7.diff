[+++ b/test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java, +import org.elasticsearch.test.disruption.NetworkDisruption;, +        ensureFullyConnectedCluster();, +    }, +, +    /**, +     * Ensures that all nodes in the cluster are connected to each other., +     *, +     * Some network disruptions may leave nodes that are not the master disconnected from each other., +     * {@link org.elasticsearch.cluster.NodeConnectionsService} will eventually reconnect but it's, +     * handy to be able to ensure this happens faster, +     */, +    protected void ensureFullyConnectedCluster() {, +        NetworkDisruption.ensureFullyConnectedCluster(internalCluster());, +++ b/test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java, +import org.elasticsearch.test.disruption.NetworkDisruption;, +        ensureFullyConnectedCluster();, +    }, +, +    /**, +     * Ensures that all nodes in the cluster are connected to each other., +     *, +     * Some network disruptions may leave nodes that are not the master disconnected from each other., +     * {@link org.elasticsearch.cluster.NodeConnectionsService} will eventually reconnect but it's, +     * handy to be able to ensure this happens faster, +     */, +    protected void ensureFullyConnectedCluster() {, +        NetworkDisruption.ensureFullyConnectedCluster(internalCluster());, +++ b/test/framework/src/main/java/org/elasticsearch/test/disruption/NetworkDisruption.java, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.cluster.NodeConnectionsService;, +import org.elasticsearch.cluster.service.ClusterService;, +        ensureHealthy(cluster);, +    }, +, +    /**, +     * ensures the cluster is healthy after the disruption, +     */, +    public void ensureHealthy(InternalTestCluster cluster) {, +        assert activeDisruption == false;, +        ensureFullyConnectedCluster(cluster);, +    }, +, +    /**, +     * Ensures that all nodes in the cluster are connected to each other., +     *, +     * Some network disruptions may leave nodes that are not the master disconnected from each other., +     * {@link org.elasticsearch.cluster.NodeConnectionsService} will eventually reconnect but it's, +     * handy to be able to ensure this happens faster, +     */, +    public static void ensureFullyConnectedCluster(InternalTestCluster cluster) {, +        for (String node: cluster.getNodeNames()) {, +            ClusterState stateOnNode = cluster.getInstance(ClusterService.class, node).state();, +            cluster.getInstance(NodeConnectionsService.class, node).connectToNodes(stateOnNode.nodes());, +        }, +++ b/test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java, +import org.elasticsearch.test.disruption.NetworkDisruption;, +        ensureFullyConnectedCluster();, +    }, +, +    /**, +     * Ensures that all nodes in the cluster are connected to each other., +     *, +     * Some network disruptions may leave nodes that are not the master disconnected from each other., +     * {@link org.elasticsearch.cluster.NodeConnectionsService} will eventually reconnect but it's, +     * handy to be able to ensure this happens faster, +     */, +    protected void ensureFullyConnectedCluster() {, +        NetworkDisruption.ensureFullyConnectedCluster(internalCluster());, +++ b/test/framework/src/main/java/org/elasticsearch/test/disruption/NetworkDisruption.java, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.cluster.NodeConnectionsService;, +import org.elasticsearch.cluster.service.ClusterService;, +        ensureHealthy(cluster);, +    }, +, +    /**, +     * ensures the cluster is healthy after the disruption, +     */, +    public void ensureHealthy(InternalTestCluster cluster) {, +        assert activeDisruption == false;, +        ensureFullyConnectedCluster(cluster);, +    }, +, +    /**, +     * Ensures that all nodes in the cluster are connected to each other., +     *, +     * Some network disruptions may leave nodes that are not the master disconnected from each other., +     * {@link org.elasticsearch.cluster.NodeConnectionsService} will eventually reconnect but it's, +     * handy to be able to ensure this happens faster, +     */, +    public static void ensureFullyConnectedCluster(InternalTestCluster cluster) {, +        for (String node: cluster.getNodeNames()) {, +            ClusterState stateOnNode = cluster.getInstance(ClusterService.class, node).state();, +            cluster.getInstance(NodeConnectionsService.class, node).connectToNodes(stateOnNode.nodes());, +        }, +++ b/test/framework/src/main/java/org/elasticsearch/test/disruption/NetworkDisruptionIT.java, +import org.elasticsearch.transport.TransportService;, +import java.util.HashSet;, +import java.util.Set;]