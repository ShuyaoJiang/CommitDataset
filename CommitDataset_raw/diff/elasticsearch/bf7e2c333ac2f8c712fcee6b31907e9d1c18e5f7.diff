[+++ b/core/src/main/java/org/elasticsearch/index/indexing/IndexingStats.java, +        Stats() {}, +        /**, +         * The total number of indexing operations, +         */, +        public long getIndexCount() { return indexCount; }, +        /**, +         * The number of failed indexing operations, +         */, +        public long getIndexFailedCount() { return indexFailedCount; }, +        /**, +         * The total amount of time spend on executing index operations., +         */, +        public TimeValue getIndexTime() { return new TimeValue(indexTimeInMillis); }, +        /**, +         * Returns the currently in-flight indexing operations., +         */, +        public long getIndexCurrent() { return indexCurrent;}, +        /**, +         * Returns the number of delete operation executed, +         */, +        public boolean isThrottled() { return isThrottled; }, +        public TimeValue getThrottleTime() { return new TimeValue(throttleTimeInMillis); }, +        /**, +         * The total amount of time spend on executing delete operations., +         */, +        public TimeValue getDeleteTime() { return new TimeValue(deleteTimeInMillis); }, +        /**, +         * Returns the currently in-flight delete operations, +         */, +++ b/core/src/main/java/org/elasticsearch/index/indexing/IndexingStats.java, +        Stats() {}, +        /**, +         * The total number of indexing operations, +         */, +        public long getIndexCount() { return indexCount; }, +        /**, +         * The number of failed indexing operations, +         */, +        public long getIndexFailedCount() { return indexFailedCount; }, +        /**, +         * The total amount of time spend on executing index operations., +         */, +        public TimeValue getIndexTime() { return new TimeValue(indexTimeInMillis); }, +        /**, +         * Returns the currently in-flight indexing operations., +         */, +        public long getIndexCurrent() { return indexCurrent;}, +        /**, +         * Returns the number of delete operation executed, +         */, +        public boolean isThrottled() { return isThrottled; }, +        public TimeValue getThrottleTime() { return new TimeValue(throttleTimeInMillis); }, +        /**, +         * The total amount of time spend on executing delete operations., +         */, +        public TimeValue getDeleteTime() { return new TimeValue(deleteTimeInMillis); }, +        /**, +         * Returns the currently in-flight delete operations, +         */, +++ b/core/src/test/java/org/elasticsearch/indices/stats/IndexStatsIT.java, +        assertThat(stats.getPrimaries().getIndexing().getTotal().getThrottleTime().millis(), equalTo(0l));, +            done = stats.getPrimaries().getIndexing().getTotal().getThrottleTime().millis() > 0;, +        assertThat(stats.getPrimaries().getIndexing().getTotal().getThrottleTime().millis(), equalTo(0l));]