[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/support/xcontent/WatcherXContentParser.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/support/xcontent/WatcherXContentParser.java, +++ b/x-pack/plugin/watcher/src/test/java/org/elasticsearch/xpack/watcher/test/integration/HttpSecretsIntegrationTests.java, +    private static final byte[] encryptionKey = CryptoServiceTests.generateKey();, +, +        // now trigger the by the scheduler and make sure that the password is also correctly transmitted, +        webServer.enqueue(new MockResponse().setResponseCode(200).setBody(, +            BytesReference.bytes(jsonBuilder().startObject().field("key", "value").endObject()).utf8ToString()));, +        timeWarp().trigger("_id");, +        assertThat(webServer.requests(), hasSize(2));, +        assertThat(webServer.requests().get(1).getHeader("Authorization"),, +            is(ApplicableBasicAuth.headerValue(USERNAME, PASSWORD.toCharArray())));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/support/xcontent/WatcherXContentParser.java, +++ b/x-pack/plugin/watcher/src/test/java/org/elasticsearch/xpack/watcher/test/integration/HttpSecretsIntegrationTests.java, +    private static final byte[] encryptionKey = CryptoServiceTests.generateKey();, +, +        // now trigger the by the scheduler and make sure that the password is also correctly transmitted, +        webServer.enqueue(new MockResponse().setResponseCode(200).setBody(, +            BytesReference.bytes(jsonBuilder().startObject().field("key", "value").endObject()).utf8ToString()));, +        timeWarp().trigger("_id");, +        assertThat(webServer.requests(), hasSize(2));, +        assertThat(webServer.requests().get(1).getHeader("Authorization"),, +            is(ApplicableBasicAuth.headerValue(USERNAME, PASSWORD.toCharArray())));, +++ b/x-pack/plugin/watcher/src/test/java/org/elasticsearch/xpack/watcher/trigger/ScheduleTriggerEngineMock.java, +        jobs.forEach(this::add);]