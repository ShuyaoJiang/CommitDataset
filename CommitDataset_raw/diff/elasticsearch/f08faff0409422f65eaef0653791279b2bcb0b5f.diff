[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +description = 'Builds the Prelert Engine native binaries and Java classes', +import org.gradle.internal.os.OperatingSystem, +import org.gradle.plugins.ide.eclipse.model.SourceFolder, +import org.apache.tools.ant.taskdefs.condition.Os, +, +project.ext.make = OperatingSystem.current().isLinux() ? "make" : "gnumake", +project.ext.numCpus = Runtime.runtime.availableProcessors(), +, +task cppclean(type: Exec) {, +    commandLine make, +    args 'clean', +}, +, +task cppobjcompile(type: Exec) {, +    commandLine make, +    args '-j' + numCpus, 'objcompile', +}, +, +task cppmake(type: Exec) {, +    commandLine make, +    args '-j' + numCpus, +}, +, +task cpptest(type: Exec) {, +    commandLine make, +    args '-j' + numCpus, 'test', +    apply plugin: 'maven', +    apply plugin: 'java', +, +    compileJava.options.encoding = 'UTF-8', +    compileTestJava.options.encoding = 'UTF-8', +, +    group = 'com.prelert', +    version = '2.3.0', +    sourceCompatibility = 1.8, +    targetCompatibility = 1.8, +, +    repositories {, +        mavenLocal(), +        maven { url "http://repo.maven.apache.org/maven2" }, +    }, +, +    configurations.all {, +    }, +, +    dependencies {, +        testCompile group: 'org.ini4j', name: 'ini4j', version:'0.5.2', +        // Includes: junit, hamcrest and mockito, +        testCompile group: 'org.elasticsearch.test', name: 'framework', version: '5.0.0', +    }, +}, +, +allprojects {, +  // injecting groovy property variables into all projects, +  project.ext {, +    // for ide hacks..., +    isEclipse = System.getProperty("eclipse.launcher") != null || gradle.startParameter.taskNames.contains('eclipse') || gradle.startParameter.taskNames.contains('cleanEclipse'), +    isIdea = System.getProperty("idea.active") != null || gradle.startParameter.taskNames.contains('idea') || gradle.startParameter.taskNames.contains('cleanIdea'), +  }, +}, +, +allprojects {, +  apply plugin: 'idea', +, +  if (isIdea) {, +    project.buildDir = file('build-idea'), +  }, +  idea {, +    module {, +      inheritOutputDirs = false, +      outputDir = file('build-idea/classes/main'), +      testOutputDir = file('build-idea/classes/test'), +, +      // also ignore other possible build dirs, +      excludeDirs += file('build'), +      excludeDirs += file('build-eclipse'), +, +      iml {, +        // fix so that Gradle idea plugin properly generates support for resource folders, +        // see also https://issues.gradle.org/browse/GRADLE-2975, +        withXml {, +          it.asNode().component.content.sourceFolder.findAll { it.@url == 'file://$MODULE_DIR$/src/main/resources' }.each {, +            it.attributes().remove('isTestSource'), +            it.attributes().put('type', 'java-resource'), +          }]