[+++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/alerts/actions/SnptAlertActionFactory.java, +        return new SntpAlertAction(display, addresses.toArray(new String[addresses.size()]));, +        if (!(action instanceof SntpAlertAction)) {, +            throw new ElasticsearchIllegalStateException("Bad action [" + action.getClass() + "] passed to EmailAlertActionFactory expected [" + SntpAlertAction.class + "]");, +        SntpAlertAction sntpAlertAction = (SntpAlertAction)action;, +                    sntpAlertAction.getEmailAddresses().toArray(new Address[1]));, +, +, +            if (sntpAlertAction.getDisplayField() != null) {, +                    if (_source.containsKey(sntpAlertAction.getDisplayField())) {, +                        output.append(_source.get(sntpAlertAction.getDisplayField()).toString());, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/alerts/actions/SnptAlertActionFactory.java, +        return new SntpAlertAction(display, addresses.toArray(new String[addresses.size()]));, +        if (!(action instanceof SntpAlertAction)) {, +            throw new ElasticsearchIllegalStateException("Bad action [" + action.getClass() + "] passed to EmailAlertActionFactory expected [" + SntpAlertAction.class + "]");, +        SntpAlertAction sntpAlertAction = (SntpAlertAction)action;, +                    sntpAlertAction.getEmailAddresses().toArray(new Address[1]));, +, +, +            if (sntpAlertAction.getDisplayField() != null) {, +                    if (_source.containsKey(sntpAlertAction.getDisplayField())) {, +                        output.append(_source.get(sntpAlertAction.getDisplayField()).toString());, +++ b/src/main/java/org/elasticsearch/alerts/actions/SntpAlertAction.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.alerts.actions;, +, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +, +import javax.mail.*;, +import javax.mail.internet.AddressException;, +import javax.mail.internet.InternetAddress;, +import java.io.IOException;, +import java.util.ArrayList;, +import java.util.List;, +, +public class SntpAlertAction implements AlertAction {, +, +    private final String displayField;, +    private final List<Address> emailAddresses = new ArrayList<>();, +, +    public SntpAlertAction(String displayField, String... addresses){, +        for (String address : addresses) {, +            addEmailAddress(address);, +        }, +        this.displayField = displayField;, +    }, +, +    public void addEmailAddress(String address) {, +        try {, +            emailAddresses.add(InternetAddress.parse(address)[0]);, +        } catch (AddressException addressException) {, +            throw new ElasticsearchException("Unable to parse address : [" + address + "]");, +        }, +    }, +, +   public String getDisplayField() {, +        return displayField;, +    }, +, +, +    public List<Address> getEmailAddresses() {, +        return new ArrayList<>(emailAddresses);, +    }, +, +    @Override, +    public String getActionName() {, +        return "email";, +    }, +, +    @Override, +    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +        builder.startObject();, +        builder.field("addresses");, +        builder.startArray();, +        for (Address emailAddress : emailAddresses){, +            builder.value(emailAddress.toString());, +        }, +        builder.endArray();, +        if (displayField != null) {, +            builder.field("display", displayField);, +        }, +        builder.endObject();, +        return builder;, +    }, +, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) return true;, +        if (o == null || getClass() != o.getClass()) return false;, +, +        SntpAlertAction that = (SntpAlertAction) o;, +]