[+++ /dev/null, +++ /dev/null, +++ b/x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/ForecastIT.java, +    public void tearDownData() {, +    public void testDurationCannotBeLessThanBucketSpan() {, +    public void testNoData() {, +        for (int h = 0; h < 15; h++) {, +            double value = 10.0 + h;, +            for (int i = 1; i < 101; i++) {, +                    String json = String.format(Locale.ROOT, "{\"time\": %d, \"value\": %f, \"clientIP\": \"192.168.%d.%d\"}\n",, +                            timestamp, value, i, j);, +                    data.add(json);, +, +        postData(job.getId(), data.stream().collect(Collectors.joining()));, +++ /dev/null, +++ b/x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/ForecastIT.java, +    public void tearDownData() {, +    public void testDurationCannotBeLessThanBucketSpan() {, +    public void testNoData() {, +        for (int h = 0; h < 15; h++) {, +            double value = 10.0 + h;, +            for (int i = 1; i < 101; i++) {, +                    String json = String.format(Locale.ROOT, "{\"time\": %d, \"value\": %f, \"clientIP\": \"192.168.%d.%d\"}\n",, +                            timestamp, value, i, j);, +                    data.add(json);, +, +        postData(job.getId(), data.stream().collect(Collectors.joining()));, +++ /dev/null, +++ /dev/null, +++ b/x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/ForecastIT.java, +    public void tearDownData() {, +    public void testDurationCannotBeLessThanBucketSpan() {, +    public void testNoData() {, +        for (int h = 0; h < 15; h++) {, +            double value = 10.0 + h;, +            for (int i = 1; i < 101; i++) {, +                    String json = String.format(Locale.ROOT, "{\"time\": %d, \"value\": %f, \"clientIP\": \"192.168.%d.%d\"}\n",, +                            timestamp, value, i, j);, +                    data.add(json);, +, +        postData(job.getId(), data.stream().collect(Collectors.joining()));, +++ /dev/null, +++ b/x-pack/plugin/src/test/resources/rest-api-spec/api/ml.close_job.json, +    },, +    "body": {, +      "description" : "The URL params optionally sent in the body",, +      "required": false, +++ /dev/null, +++ b/x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/ForecastIT.java, +    public void tearDownData() {, +    public void testDurationCannotBeLessThanBucketSpan() {, +    public void testNoData() {, +        for (int h = 0; h < 15; h++) {, +            double value = 10.0 + h;, +            for (int i = 1; i < 101; i++) {, +                    String json = String.format(Locale.ROOT, "{\"time\": %d, \"value\": %f, \"clientIP\": \"192.168.%d.%d\"}\n",, +                            timestamp, value, i, j);, +                    data.add(json);, +, +        postData(job.getId(), data.stream().collect(Collectors.joining()));, +++ /dev/null, +++ b/x-pack/plugin/src/test/resources/rest-api-spec/api/ml.close_job.json, +    },, +    "body": {, +      "description" : "The URL params optionally sent in the body",, +      "required": false, +++ b/x-pack/plugin/src/test/resources/rest-api-spec/test/ml/jobs_crud.yml, +, +---, +"Test reopen job resets the finished time":, +  - do:, +      ml.put_job:, +        job_id: jobs-crud-reset-finished-time, +        body:  >, +          {, +            "analysis_config" : {, +                "detectors" :[{"function":"count"}], +            },, +            "data_description" : {, +            }, +          }, +  - match: { job_id: jobs-crud-reset-finished-time }, +, +  - do:, +      ml.open_job:, +        job_id: jobs-crud-reset-finished-time, +, +  - do:, +      ml.get_jobs:, +        job_id: jobs-crud-reset-finished-time, +  - is_false: jobs.0.finished_time, +, +  - do:, +      ml.close_job:, +        job_id: jobs-crud-reset-finished-time, +, +  - do:, +      ml.get_jobs:, +        job_id: jobs-crud-reset-finished-time, +  - is_true: jobs.0.finished_time]