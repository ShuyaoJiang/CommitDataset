[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java, +        return new Request(HttpPost.METHOD_NAME, "/_mget", parameters.getParams(), entity);, +        return new Request(HttpPost.METHOD_NAME, endpoint, params.getParams(), entity);, +        return new Request(HttpPost.METHOD_NAME, "/_search/scroll", Collections.emptyMap(), entity);, +        return new Request(HttpDelete.METHOD_NAME, "/_search/scroll", Collections.emptyMap(), entity);, +        return new Request(HttpPost.METHOD_NAME, "/_msearch", params.getParams(), entity);, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java, +        return new Request(HttpPost.METHOD_NAME, "/_mget", parameters.getParams(), entity);, +        return new Request(HttpPost.METHOD_NAME, endpoint, params.getParams(), entity);, +        return new Request(HttpPost.METHOD_NAME, "/_search/scroll", Collections.emptyMap(), entity);, +        return new Request(HttpDelete.METHOD_NAME, "/_search/scroll", Collections.emptyMap(), entity);, +        return new Request(HttpPost.METHOD_NAME, "/_msearch", params.getParams(), entity);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestTests.java, +import org.apache.http.client.methods.HttpDelete;, +import org.apache.http.client.methods.HttpGet;, +import org.apache.http.client.methods.HttpHead;, +import org.apache.http.client.methods.HttpPost;, +import org.apache.http.client.methods.HttpPut;, +        assertEquals(HttpHead.METHOD_NAME, request.getMethod());, +        assertEquals(HttpGet.METHOD_NAME, request.getMethod());, +        getAndExistsTest(Request::get, HttpGet.METHOD_NAME);, +        assertEquals(HttpPost.METHOD_NAME, request.getMethod());, +        getAndExistsTest(Request::exists, HttpHead.METHOD_NAME);, +        assertEquals(HttpPut.METHOD_NAME, request.getMethod());, +        assertEquals(HttpPut.METHOD_NAME, request.getMethod());, +        assertEquals(HttpDelete.METHOD_NAME, request.getMethod());, +        assertThat(request.getMethod(), equalTo(HttpPost.METHOD_NAME));, +        assertThat(request.getMethod(), equalTo(HttpPost.METHOD_NAME));, +        String method = HttpPost.METHOD_NAME;, +            method = HttpPut.METHOD_NAME;, +        assertEquals(HttpPost.METHOD_NAME, request.getMethod());, +        assertEquals(HttpPost.METHOD_NAME, request.getMethod());, +        assertEquals(HttpPost.METHOD_NAME, request.getMethod());, +        assertEquals(HttpPost.METHOD_NAME, request.getMethod());, +        assertEquals(HttpPost.METHOD_NAME, request.getMethod());, +        assertEquals(HttpDelete.METHOD_NAME, request.getMethod());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java, +        return new Request(HttpPost.METHOD_NAME, "/_mget", parameters.getParams(), entity);, +        return new Request(HttpPost.METHOD_NAME, endpoint, params.getParams(), entity);, +        return new Request(HttpPost.METHOD_NAME, "/_search/scroll", Collections.emptyMap(), entity);, +        return new Request(HttpDelete.METHOD_NAME, "/_search/scroll", Collections.emptyMap(), entity);, +        return new Request(HttpPost.METHOD_NAME, "/_msearch", params.getParams(), entity);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestTests.java, +import org.apache.http.client.methods.HttpDelete;, +import org.apache.http.client.methods.HttpGet;, +import org.apache.http.client.methods.HttpHead;, +import org.apache.http.client.methods.HttpPost;, +import org.apache.http.client.methods.HttpPut;, +        assertEquals(HttpHead.METHOD_NAME, request.getMethod());, +        assertEquals(HttpGet.METHOD_NAME, request.getMethod());, +        getAndExistsTest(Request::get, HttpGet.METHOD_NAME);, +        assertEquals(HttpPost.METHOD_NAME, request.getMethod());, +        getAndExistsTest(Request::exists, HttpHead.METHOD_NAME);, +        assertEquals(HttpPut.METHOD_NAME, request.getMethod());, +        assertEquals(HttpPut.METHOD_NAME, request.getMethod());, +        assertEquals(HttpDelete.METHOD_NAME, request.getMethod());, +        assertThat(request.getMethod(), equalTo(HttpPost.METHOD_NAME));, +        assertThat(request.getMethod(), equalTo(HttpPost.METHOD_NAME));, +        String method = HttpPost.METHOD_NAME;, +            method = HttpPut.METHOD_NAME;, +        assertEquals(HttpPost.METHOD_NAME, request.getMethod());, +        assertEquals(HttpPost.METHOD_NAME, request.getMethod());, +        assertEquals(HttpPost.METHOD_NAME, request.getMethod());, +        assertEquals(HttpPost.METHOD_NAME, request.getMethod());, +        assertEquals(HttpPost.METHOD_NAME, request.getMethod());, +        assertEquals(HttpDelete.METHOD_NAME, request.getMethod());, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +        verify(restClient).performRequest(eq("POST"), eq("/_search/scroll"), eq(Collections.emptyMap()),]