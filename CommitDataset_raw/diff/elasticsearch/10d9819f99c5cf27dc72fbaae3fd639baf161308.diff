[+++ b/plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsBlobContainer.java, +import org.apache.hadoop.fs.Options;, +import org.elasticsearch.common.blobstore.fs.FsBlobContainer;, +    public void writeBlobAtomic(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException {, +        final String tempBlob = FsBlobContainer.tempBlobName(blobName);, +        store.execute((Operation<Void>) fileContext -> {, +            final Path tempBlobPath = new Path(path, tempBlob);, +            try (FSDataOutputStream stream = fileContext.create(, +                tempBlobPath, EnumSet.of(CreateFlag.CREATE, CreateFlag.SYNC_BLOCK),  CreateOpts.bufferSize(bufferSize))) {, +                int bytesRead;, +                byte[] buffer = new byte[bufferSize];, +                while ((bytesRead = inputStream.read(buffer)) != -1) {, +                    stream.write(buffer, 0, bytesRead);, +                }, +            }, +            final Path blob = new Path(path, blobName);, +            try {, +                fileContext.rename(tempBlobPath, blob, failIfAlreadyExists ? Options.Rename.NONE : Options.Rename.OVERWRITE);, +            } catch (org.apache.hadoop.fs.FileAlreadyExistsException faee) {, +                throw new FileAlreadyExistsException(blob.toString(), null, faee.getMessage());, +            }, +            return null;, +        });, +    }, +, +    @Override]