[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]AutoCreateIndexTests.java" checks="LineLength" />, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]AutoCreateIndexTests.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/Version.java, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]AutoCreateIndexTests.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/Version.java, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import java.util.Collections;, +        autoCreateIndex = transportClient ? null : new AutoCreateIndex(settings, resolver);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]AutoCreateIndexTests.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/Version.java, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import java.util.Collections;, +        autoCreateIndex = transportClient ? null : new AutoCreateIndex(settings, resolver);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +            os = new OsStats(in);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]AutoCreateIndexTests.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/Version.java, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import java.util.Collections;, +        autoCreateIndex = transportClient ? null : new AutoCreateIndex(settings, resolver);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +            os = new OsStats(in);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +        this.os = new OsStats(nodeInfos, nodeStats);, +        final org.elasticsearch.monitor.os.OsStats.Mem mem;, +        private OsStats(List<NodeInfo> nodeInfos, List<NodeStats> nodeStatsList) {, +, +            long totalMemory = 0;, +            long freeMemory = 0;, +            for (NodeStats nodeStats : nodeStatsList) {, +                if (nodeStats.getOs() != null) {, +                    long total = nodeStats.getOs().getMem().getTotal().bytes();, +                    if (total > 0) {, +                        totalMemory += total;, +                    }, +                    long free = nodeStats.getOs().getMem().getFree().bytes();, +                    if (free > 0) {, +                        freeMemory += free;, +                    }, +                }, +            }, +            this.mem = new org.elasticsearch.monitor.os.OsStats.Mem(totalMemory, freeMemory);, +        public org.elasticsearch.monitor.os.OsStats.Mem getMem() {, +            return mem;, +        }, +, +            mem.toXContent(builder, params);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]AutoCreateIndexTests.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/Version.java, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import java.util.Collections;, +        autoCreateIndex = transportClient ? null : new AutoCreateIndex(settings, resolver);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +            os = new OsStats(in);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +        this.os = new OsStats(nodeInfos, nodeStats);, +        final org.elasticsearch.monitor.os.OsStats.Mem mem;, +        private OsStats(List<NodeInfo> nodeInfos, List<NodeStats> nodeStatsList) {, +, +            long totalMemory = 0;, +            long freeMemory = 0;, +            for (NodeStats nodeStats : nodeStatsList) {, +                if (nodeStats.getOs() != null) {, +                    long total = nodeStats.getOs().getMem().getTotal().bytes();, +                    if (total > 0) {, +                        totalMemory += total;, +                    }, +                    long free = nodeStats.getOs().getMem().getFree().bytes();, +                    if (free > 0) {, +                        freeMemory += free;, +                    }, +                }, +            }, +            this.mem = new org.elasticsearch.monitor.os.OsStats.Mem(totalMemory, freeMemory);, +        public org.elasticsearch.monitor.os.OsStats.Mem getMem() {, +            return mem;, +        }, +, +            mem.toXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +        NodeStats nodeStats = nodeService.stats(CommonStatsFlags.NONE, true, true, true, false, true, false, false, false, false, false, false);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]AutoCreateIndexTests.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/Version.java, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import java.util.Collections;, +        autoCreateIndex = transportClient ? null : new AutoCreateIndex(settings, resolver);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +            os = new OsStats(in);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +        this.os = new OsStats(nodeInfos, nodeStats);, +        final org.elasticsearch.monitor.os.OsStats.Mem mem;, +        private OsStats(List<NodeInfo> nodeInfos, List<NodeStats> nodeStatsList) {, +]