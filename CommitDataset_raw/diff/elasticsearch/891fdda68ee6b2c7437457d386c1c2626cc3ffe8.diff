[+++ b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/composite/CompositeValuesSourceBuilder.java, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/composite/CompositeValuesSourceBuilder.java, +++ b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/composite/CompositeAggregatorTests.java, +        final List<Map<String, List<Object>>> dataset = new ArrayList<>();, +        dataset.addAll(, +            Arrays.asList(, +                createDocument("keyword", "a"),, +                createDocument("keyword", "c"),, +                createDocument("keyword", "a"),, +                createDocument("keyword", "d"),, +                createDocument("keyword", "c"), +            ), +        );, +        testSearchCase(Arrays.asList(new MatchAllDocsQuery(), new DocValuesFieldExistsQuery("keyword")), dataset,, +            () -> new CompositeAggregationBuilder("name",, +                Arrays.asList(, +                    new TermsValuesSourceBuilder("unmapped").field("unmapped"), +                ), +            ),, +            (result) -> {, +                assertEquals(0, result.getBuckets().size());, +            }, +        );, +, +        testSearchCase(Arrays.asList(new MatchAllDocsQuery(), new DocValuesFieldExistsQuery("keyword")), dataset,, +            () -> new CompositeAggregationBuilder("name",, +                Arrays.asList(, +                    new TermsValuesSourceBuilder("unmapped").field("unmapped").missingBucket(true), +                ), +            ),, +            (result) -> {, +                assertEquals(1, result.getBuckets().size());, +                assertEquals("{unmapped=null}", result.afterKey().toString());, +                assertEquals("{unmapped=null}", result.getBuckets().get(0).getKeyAsString());, +                assertEquals(5L, result.getBuckets().get(0).getDocCount());, +            }, +        );, +, +        testSearchCase(Arrays.asList(new MatchAllDocsQuery(), new DocValuesFieldExistsQuery("keyword")), dataset,, +            () -> new CompositeAggregationBuilder("name",, +                Arrays.asList(, +                    new TermsValuesSourceBuilder("unmapped").field("unmapped").missingBucket(true), +                )).aggregateAfter(Collections.singletonMap("unmapped", null)),, +            (result) -> {, +                assertEquals(0, result.getBuckets().size());, +            }, +        );, +, +        testSearchCase(Arrays.asList(new MatchAllDocsQuery(), new DocValuesFieldExistsQuery("keyword")), dataset,, +            () -> new CompositeAggregationBuilder("name",, +                Arrays.asList(, +                    new TermsValuesSourceBuilder("keyword").field("keyword"),, +                    new TermsValuesSourceBuilder("unmapped").field("unmapped"), +                ), +            ),, +            (result) -> {, +                assertEquals(0, result.getBuckets().size());, +            }, +        );, +, +        testSearchCase(Arrays.asList(new MatchAllDocsQuery(), new DocValuesFieldExistsQuery("keyword")), dataset,, +            () -> new CompositeAggregationBuilder("name",, +                Arrays.asList(, +                    new TermsValuesSourceBuilder("keyword").field("keyword"),, +                    new TermsValuesSourceBuilder("unmapped").field("unmapped").missingBucket(true), +                ), +            ),, +            (result) -> {, +                assertEquals(3, result.getBuckets().size());, +                assertEquals("{keyword=d, unmapped=null}", result.afterKey().toString());, +                assertEquals("{keyword=a, unmapped=null}", result.getBuckets().get(0).getKeyAsString());, +                assertEquals(2L, result.getBuckets().get(0).getDocCount());, +                assertEquals("{keyword=c, unmapped=null}", result.getBuckets().get(1).getKeyAsString());, +                assertEquals(2L, result.getBuckets().get(1).getDocCount());, +                assertEquals("{keyword=d, unmapped=null}", result.getBuckets().get(2).getKeyAsString());, +                assertEquals(1L, result.getBuckets().get(2).getDocCount());, +            }, +        );]