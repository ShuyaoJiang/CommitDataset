[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/persistence/ElasticsearchMappings.java, +    public static final String ES_DOC = "_doc";, +    public static XContentBuilder termFieldsMapping(String type, Collection<String> termFields) {, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/persistence/ElasticsearchMappings.java, +    public static final String ES_DOC = "_doc";, +    public static XContentBuilder termFieldsMapping(String type, Collection<String> termFields) {, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/persistence/ElasticsearchMappings.java, +    public static final String ES_DOC = "_doc";, +    public static XContentBuilder termFieldsMapping(String type, Collection<String> termFields) {, +++ /dev/null, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/persistence/JobStorageDeletionTask.java, +import org.elasticsearch.xpack.core.ml.action.GetModelSnapshotsAction;, +import org.elasticsearch.xpack.core.ml.action.util.PageParams;, +import org.elasticsearch.xpack.core.ml.utils.MlIndicesUtils;, +                    searchRequest.indicesOptions(MlIndicesUtils.addIgnoreUnavailable(IndicesOptions.lenientExpandOpen()));, +        searchRequest.indicesOptions(MlIndicesUtils.addIgnoreUnavailable(IndicesOptions.lenientExpandOpen()));, +        GetModelSnapshotsAction.Request request = new GetModelSnapshotsAction.Request(jobId, null);, +        request.setPageParams(new PageParams(0, PageParams.MAX_FROM_SIZE_SUM));, +        executeAsyncWithOrigin(client, ML_ORIGIN, GetModelSnapshotsAction.INSTANCE, request, ActionListener.wrap(, +                response -> {, +                    List<ModelSnapshot> deleteCandidates = response.getPage().results();, +                listener::onFailure));, +        searchRequest.indicesOptions(MlIndicesUtils.addIgnoreUnavailable(IndicesOptions.lenientExpandOpen()));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/persistence/ElasticsearchMappings.java, +    public static final String ES_DOC = "_doc";, +    public static XContentBuilder termFieldsMapping(String type, Collection<String> termFields) {, +++ /dev/null, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/persistence/JobStorageDeletionTask.java, +import org.elasticsearch.xpack.core.ml.action.GetModelSnapshotsAction;, +import org.elasticsearch.xpack.core.ml.action.util.PageParams;, +import org.elasticsearch.xpack.core.ml.utils.MlIndicesUtils;, +                    searchRequest.indicesOptions(MlIndicesUtils.addIgnoreUnavailable(IndicesOptions.lenientExpandOpen()));, +        searchRequest.indicesOptions(MlIndicesUtils.addIgnoreUnavailable(IndicesOptions.lenientExpandOpen()));, +        GetModelSnapshotsAction.Request request = new GetModelSnapshotsAction.Request(jobId, null);, +        request.setPageParams(new PageParams(0, PageParams.MAX_FROM_SIZE_SUM));, +        executeAsyncWithOrigin(client, ML_ORIGIN, GetModelSnapshotsAction.INSTANCE, request, ActionListener.wrap(, +                response -> {, +                    List<ModelSnapshot> deleteCandidates = response.getPage().results();, +                listener::onFailure));, +        searchRequest.indicesOptions(MlIndicesUtils.addIgnoreUnavailable(IndicesOptions.lenientExpandOpen()));, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/MlIndicesUtils.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.xpack.core.ml.utils;, +, +import org.elasticsearch.action.support.IndicesOptions;, +, +/**, + * Common index related operations that ML requires., + */, +public final class MlIndicesUtils {, +, +    private MlIndicesUtils() {, +    }, +, +    public static IndicesOptions addIgnoreUnavailable(IndicesOptions indicesOptions) {, +        return IndicesOptions.fromOptions(true, indicesOptions.allowNoIndices(), indicesOptions.expandWildcardsOpen(),, +                indicesOptions.expandWildcardsClosed(), indicesOptions);, +    }, +}, +++ /dev/null]