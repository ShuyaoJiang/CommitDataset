[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +     * Applies when sorting, and controls if scores will be tracked as well. Defaults to, +     * <tt>false</tt>., +     */, +    public SearchRequestBuilder setTrackScores(boolean trackScores) {, +        sourceBuilder().trackScores(trackScores);, +        return this;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +     * Applies when sorting, and controls if scores will be tracked as well. Defaults to, +     * <tt>false</tt>., +     */, +    public SearchRequestBuilder setTrackScores(boolean trackScores) {, +        sourceBuilder().trackScores(trackScores);, +        return this;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +    private boolean trackScores = false;, +, +     * Applies when sorting, and controls if scores will be tracked as well. Defaults to, +     * <tt>false</tt>., +     */, +    public SearchSourceBuilder trackScores(boolean trackScores) {, +        this.trackScores = trackScores;, +        return this;, +    }, +, +    /**, +            if (trackScores) {, +                builder.field("track_scores", trackScores);, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +     * Applies when sorting, and controls if scores will be tracked as well. Defaults to, +     * <tt>false</tt>., +     */, +    public SearchRequestBuilder setTrackScores(boolean trackScores) {, +        sourceBuilder().trackScores(trackScores);, +        return this;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +    private boolean trackScores = false;, +, +     * Applies when sorting, and controls if scores will be tracked as well. Defaults to, +     * <tt>false</tt>., +     */, +    public SearchSourceBuilder trackScores(boolean trackScores) {, +        this.trackScores = trackScores;, +        return this;, +    }, +, +    /**, +            if (trackScores) {, +                builder.field("track_scores", trackScores);, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/internal/ContextIndexSearcher.java, +import org.apache.lucene.index.IndexReader;, +    private final SearchContext searchContext;, +, +    private final IndexReader reader;, +        this.reader = searcher.searcher().getIndexReader();, +    // override from the Searcher to allow to control if scores will be tracked or not, +    @Override public TopFieldDocs search(Weight weight, Filter filter, int nDocs,, +                                         Sort sort, boolean fillFields) throws IOException {, +, +        nDocs = Math.min(nDocs, reader.maxDoc());, +, +        TopFieldCollector collector = TopFieldCollector.create(sort, nDocs,, +                fillFields, searchContext.trackScores(), searchContext.trackScores(), !weight.scoresDocsOutOfOrder());, +        search(weight, filter, collector);, +        return (TopFieldDocs) collector.topDocs();, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +     * Applies when sorting, and controls if scores will be tracked as well. Defaults to, +     * <tt>false</tt>., +     */, +    public SearchRequestBuilder setTrackScores(boolean trackScores) {, +        sourceBuilder().trackScores(trackScores);, +        return this;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +    private boolean trackScores = false;, +, +     * Applies when sorting, and controls if scores will be tracked as well. Defaults to, +     * <tt>false</tt>., +     */, +    public SearchSourceBuilder trackScores(boolean trackScores) {, +        this.trackScores = trackScores;, +        return this;, +    }, +, +    /**]