[+++ b/docs/reference/aggregations/bucket/geodistance-aggregation.asciidoc, +There are three distance calculation modes: `sloppy_arc` (the default), `arc` (most accurate) and `plane` (fastest). The `arc` calculation is the most accurate one but also the more expensive one in terms of performance. The `sloppy_arc` is faster but less accurate. The `plane` is the fastest but least accurate distance function. Consider using `plane` when your search context is "narrow" and spans smaller geographical areas (like cities or even countries). `plane` may return higher error margins for searches across very large areas (e.g. cross continent search). The distance calculation type can be set using the `distance_type` parameter:, +++ b/docs/reference/aggregations/bucket/geodistance-aggregation.asciidoc, +There are three distance calculation modes: `sloppy_arc` (the default), `arc` (most accurate) and `plane` (fastest). The `arc` calculation is the most accurate one but also the more expensive one in terms of performance. The `sloppy_arc` is faster but less accurate. The `plane` is the fastest but least accurate distance function. Consider using `plane` when your search context is "narrow" and spans smaller geographical areas (like cities or even countries). `plane` may return higher error margins for searches across very large areas (e.g. cross continent search). The distance calculation type can be set using the `distance_type` parameter:, +++ b/docs/reference/migration/migrate_6_0/search.asciidoc, +===== Query normalization, +===== Coordination factors, +++ b/docs/reference/aggregations/bucket/geodistance-aggregation.asciidoc, +There are three distance calculation modes: `sloppy_arc` (the default), `arc` (most accurate) and `plane` (fastest). The `arc` calculation is the most accurate one but also the more expensive one in terms of performance. The `sloppy_arc` is faster but less accurate. The `plane` is the fastest but least accurate distance function. Consider using `plane` when your search context is "narrow" and spans smaller geographical areas (like cities or even countries). `plane` may return higher error margins for searches across very large areas (e.g. cross continent search). The distance calculation type can be set using the `distance_type` parameter:, +++ b/docs/reference/migration/migrate_6_0/search.asciidoc, +===== Query normalization, +===== Coordination factors, +++ b/docs/reference/search/request-body.asciidoc, +include::request/collapse.asciidoc[], +, +++ b/docs/reference/aggregations/bucket/geodistance-aggregation.asciidoc, +There are three distance calculation modes: `sloppy_arc` (the default), `arc` (most accurate) and `plane` (fastest). The `arc` calculation is the most accurate one but also the more expensive one in terms of performance. The `sloppy_arc` is faster but less accurate. The `plane` is the fastest but least accurate distance function. Consider using `plane` when your search context is "narrow" and spans smaller geographical areas (like cities or even countries). `plane` may return higher error margins for searches across very large areas (e.g. cross continent search). The distance calculation type can be set using the `distance_type` parameter:, +++ b/docs/reference/migration/migrate_6_0/search.asciidoc, +===== Query normalization, +===== Coordination factors, +++ b/docs/reference/search/request-body.asciidoc, +include::request/collapse.asciidoc[], +, +++ b/docs/reference/search/request/collapse.asciidoc, +=== Field Collapsing, +The field used for collapsing must be a single valued <<keyword, `keyword`>> or <<number, `numeric`>> field with <<doc-values, `doc_values`>> activated, +==== Expand collapse results]