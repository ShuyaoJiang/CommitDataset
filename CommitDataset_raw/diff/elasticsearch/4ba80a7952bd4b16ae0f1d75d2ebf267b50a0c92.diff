[+++ b/server/src/main/java/org/elasticsearch/index/engine/Engine.java, +     * If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure, +     * that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled, +     * by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the, +     * specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal, +     * error, this method is a no-op., +     *, +     * @param maybeMessage the message to maybe log, +     * @param maybeFatal   the throwable that maybe contains a fatal error, +     */, +    @SuppressWarnings("finally"), +    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {, +        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {, +            try {, +                logger.error(maybeMessage, error);, +            } finally {, +                throw error;, +            }, +        });, +    }, +, +    /**, +        if (failure != null) {, +            maybeDie(reason, failure);, +        }, +++ b/server/src/main/java/org/elasticsearch/index/engine/Engine.java, +     * If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure, +     * that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled, +     * by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the, +     * specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal, +     * error, this method is a no-op., +     *, +     * @param maybeMessage the message to maybe log, +     * @param maybeFatal   the throwable that maybe contains a fatal error, +     */, +    @SuppressWarnings("finally"), +    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {, +        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {, +            try {, +                logger.error(maybeMessage, error);, +            } finally {, +                throw error;, +            }, +        });, +    }, +, +    /**, +        if (failure != null) {, +            maybeDie(reason, failure);, +        }, +++ b/server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java]