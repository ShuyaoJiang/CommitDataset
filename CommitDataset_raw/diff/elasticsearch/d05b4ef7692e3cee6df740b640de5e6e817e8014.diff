[+++ b/src/test/java/org/elasticsearch/percolator/ConcurrentPercolatorTests.java, +        final AtomicReference<Throwable> exceptionHolder = new AtomicReference<Throwable>();, +                    } catch (Throwable e) {, +                        exceptionHolder.set(e);, +        Throwable assertionError = exceptionHolder.get();, +        if (assertionError != null) {, +            assertionError.printStackTrace();, +        }, +        assertThat(assertionError + " should be null", assertionError, nullValue());, +        final Set<Throwable> exceptionsHolder = ConcurrentCollections.newConcurrentSet();, +                        exceptionsHolder.add(t);, +                        exceptionsHolder.add(t);, +        for (Throwable t : exceptionsHolder) {, +            logger.error("Unexpected exception {}", t.getMessage(), t);, +        }, +        assertThat(exceptionsHolder.isEmpty(), equalTo(true));]