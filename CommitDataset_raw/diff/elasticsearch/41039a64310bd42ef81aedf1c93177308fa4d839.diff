[+++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        return roles.contains(Role.MASTER);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        return roles.contains(Role.MASTER);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +                if (nodeEntry.value.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        return roles.contains(Role.MASTER);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +                if (nodeEntry.value.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +                if (localDiscovery.localNode().isMasterNode()) {, +                if (localDiscovery.localNode().isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        return roles.contains(Role.MASTER);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +                if (nodeEntry.value.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +                if (localDiscovery.localNode().isMasterNode()) {, +                if (localDiscovery.localNode().isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +        if (localNode.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        return roles.contains(Role.MASTER);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +                if (nodeEntry.value.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +                if (localDiscovery.localNode().isMasterNode()) {, +                if (localDiscovery.localNode().isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +        if (localNode.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/elect/ElectMasterService.java, +            if (node.isMasterNode()) {, +            if (!node.isMasterNode()) {, +            if (o1.isMasterNode() && !o2.isMasterNode()) {, +            if (!o1.isMasterNode() && o2.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        return roles.contains(Role.MASTER);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +                if (nodeEntry.value.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +                if (localDiscovery.localNode().isMasterNode()) {, +                if (localDiscovery.localNode().isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +        if (localNode.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/elect/ElectMasterService.java, +            if (node.isMasterNode()) {, +            if (!node.isMasterNode()) {, +            if (o1.isMasterNode() && !o2.isMasterNode()) {, +            if (!o1.isMasterNode() && o2.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayAllocator.java, +                    if (localNode.isMasterNode() == true && event.localNodeMaster() == false) {, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        return roles.contains(Role.MASTER);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +                if (nodeEntry.value.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +                if (localDiscovery.localNode().isMasterNode()) {, +                if (localDiscovery.localNode().isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +        if (localNode.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/elect/ElectMasterService.java, +            if (node.isMasterNode()) {, +            if (!node.isMasterNode()) {, +            if (o1.isMasterNode() && !o2.isMasterNode()) {, +            if (!o1.isMasterNode() && o2.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayAllocator.java, +                    if (localNode.isMasterNode() == true && event.localNodeMaster() == false) {, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java, +        if (state.nodes().localNode().isMasterNode() || state.nodes().localNode().isDataNode()) {, +        } else if (state.nodes().localNode().isMasterNode() == true) {, +        return ((state.nodes().localNode().isMasterNode() == false) && state.nodes().localNode().isDataNode());, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        return roles.contains(Role.MASTER);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +                if (nodeEntry.value.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +                if (localDiscovery.localNode().isMasterNode()) {, +                if (localDiscovery.localNode().isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +        if (localNode.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/elect/ElectMasterService.java, +            if (node.isMasterNode()) {, +            if (!node.isMasterNode()) {, +            if (o1.isMasterNode() && !o2.isMasterNode()) {, +            if (!o1.isMasterNode() && o2.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayAllocator.java, +                    if (localNode.isMasterNode() == true && event.localNodeMaster() == false) {, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java, +        if (state.nodes().localNode().isMasterNode() || state.nodes().localNode().isDataNode()) {, +        } else if (state.nodes().localNode().isMasterNode() == true) {, +        return ((state.nodes().localNode().isMasterNode() == false) && state.nodes().localNode().isDataNode());, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +                if (clusterState.metaData().hasIndex(index.getName()) && (clusterState.nodes().localNode().isMasterNode() == true)) {, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        return roles.contains(Role.MASTER);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +                if (nodeEntry.value.isMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +                if (localDiscovery.localNode().isMasterNode()) {]