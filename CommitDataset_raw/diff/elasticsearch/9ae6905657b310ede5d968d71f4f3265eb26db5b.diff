[+++ b/build.gradle, +    "org.elasticsearch:elasticsearch-cli:${version}": ':libs:elasticsearch-cli',, +  // Having the same group and name for distinct projects causes Gradle to consider them equal when resolving, +  // dependencies leading to hard to debug failures. Run a check across all project to prevent this from happening., +  // see: https://github.com/gradle/gradle/issues/847, +  Map coordsToProject = [:], +  project.allprojects.forEach { p ->, +    String coords = "${p.group}:${p.name}", +    if (false == coordsToProject.putIfAbsent(coords, p)) {, +      throw new GradleException(, +              "Detected that two projects: ${p.path} and ${coordsToProject[coords].path} " +, +                      "have the same name and group: ${coords}. " +, +                      "This doesn't currently work correctly in Gradle, see: " +, +                      "https://github.com/gradle/gradle/issues/847", +      ), +    }, +  }, +++ b/build.gradle, +    "org.elasticsearch:elasticsearch-cli:${version}": ':libs:elasticsearch-cli',, +  // Having the same group and name for distinct projects causes Gradle to consider them equal when resolving, +  // dependencies leading to hard to debug failures. Run a check across all project to prevent this from happening., +  // see: https://github.com/gradle/gradle/issues/847, +  Map coordsToProject = [:], +  project.allprojects.forEach { p ->, +    String coords = "${p.group}:${p.name}", +    if (false == coordsToProject.putIfAbsent(coords, p)) {, +      throw new GradleException(, +              "Detected that two projects: ${p.path} and ${coordsToProject[coords].path} " +, +                      "have the same name and group: ${coords}. " +, +                      "This doesn't currently work correctly in Gradle, see: " +, +                      "https://github.com/gradle/gradle/issues/847", +      ), +    }, +  }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            // while the jar isn't normally published, we still at least build a pom of deps, +            // in case it is published, for instance when other plugins extend this plugin, +            configureJarPom(project), +    /** Configure the pom for the main jar of this plugin */, +    protected static void configureJarPom(Project project) {, +                nebula(MavenPublication) {, +                    artifactId project.pluginProperties.extension.name, +++ b/build.gradle, +    "org.elasticsearch:elasticsearch-cli:${version}": ':libs:elasticsearch-cli',, +  // Having the same group and name for distinct projects causes Gradle to consider them equal when resolving, +  // dependencies leading to hard to debug failures. Run a check across all project to prevent this from happening., +  // see: https://github.com/gradle/gradle/issues/847, +  Map coordsToProject = [:], +  project.allprojects.forEach { p ->, +    String coords = "${p.group}:${p.name}", +    if (false == coordsToProject.putIfAbsent(coords, p)) {, +      throw new GradleException(, +              "Detected that two projects: ${p.path} and ${coordsToProject[coords].path} " +, +                      "have the same name and group: ${coords}. " +, +                      "This doesn't currently work correctly in Gradle, see: " +, +                      "https://github.com/gradle/gradle/issues/847", +      ), +    }, +  }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            // while the jar isn't normally published, we still at least build a pom of deps, +            // in case it is published, for instance when other plugins extend this plugin, +            configureJarPom(project), +    /** Configure the pom for the main jar of this plugin */, +    protected static void configureJarPom(Project project) {, +                nebula(MavenPublication) {, +                    artifactId project.pluginProperties.extension.name, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    Map<String, Object> environmentVariables = new HashMap<>(), +, +    void environment(String variable, Object value) {, +        environmentVariables.put(variable, value), +    }, +, +    @Input, +++ b/build.gradle, +    "org.elasticsearch:elasticsearch-cli:${version}": ':libs:elasticsearch-cli',, +  // Having the same group and name for distinct projects causes Gradle to consider them equal when resolving, +  // dependencies leading to hard to debug failures. Run a check across all project to prevent this from happening., +  // see: https://github.com/gradle/gradle/issues/847, +  Map coordsToProject = [:], +  project.allprojects.forEach { p ->, +    String coords = "${p.group}:${p.name}", +    if (false == coordsToProject.putIfAbsent(coords, p)) {, +      throw new GradleException(, +              "Detected that two projects: ${p.path} and ${coordsToProject[coords].path} " +, +                      "have the same name and group: ${coords}. " +, +                      "This doesn't currently work correctly in Gradle, see: " +, +                      "https://github.com/gradle/gradle/issues/847", +      ), +    }, +  }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            // while the jar isn't normally published, we still at least build a pom of deps, +            // in case it is published, for instance when other plugins extend this plugin, +            configureJarPom(project), +    /** Configure the pom for the main jar of this plugin */, +    protected static void configureJarPom(Project project) {, +                nebula(MavenPublication) {, +                    artifactId project.pluginProperties.extension.name]