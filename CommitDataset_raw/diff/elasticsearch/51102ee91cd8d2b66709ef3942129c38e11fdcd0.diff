[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +            '\\{lucene_version\\}' : VersionProperties.lucene,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +            '\\{lucene_version\\}' : VersionProperties.lucene,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.echo("==> [${new Date()}] checking health: http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}"), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}",, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +            '\\{lucene_version\\}' : VersionProperties.lucene,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.echo("==> [${new Date()}] checking health: http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}"), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}",, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        Configuration distro = project.configurations.create(distroConfigName), +        configureDistributionDependency(project, config.distribution, distro, VersionProperties.elasticsearch), +, +        for (int i = 0; i < config.numNodes; ++i) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +            '\\{lucene_version\\}' : VersionProperties.lucene,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.echo("==> [${new Date()}] checking health: http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}"), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}",, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        Configuration distro = project.configurations.create(distroConfigName), +        configureDistributionDependency(project, config.distribution, distro, VersionProperties.elasticsearch), +, +        for (int i = 0; i < config.numNodes; ++i) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +        systemProperty('tests.rest.cluster', "${-> nodes[0].httpUri()}"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +            '\\{lucene_version\\}' : VersionProperties.lucene,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.echo("==> [${new Date()}] checking health: http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}"), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}",, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        Configuration distro = project.configurations.create(distroConfigName), +        configureDistributionDependency(project, config.distribution, distro, VersionProperties.elasticsearch), +, +        for (int i = 0; i < config.numNodes; ++i) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +        systemProperty('tests.rest.cluster', "${-> nodes[0].httpUri()}"), +++ b/buildSrc/version.properties, +lucene            = 6.2.0, +randomizedrunner  = 2.3.2, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +            '\\{lucene_version\\}' : VersionProperties.lucene,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.echo("==> [${new Date()}] checking health: http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}"), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}",, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        Configuration distro = project.configurations.create(distroConfigName), +        configureDistributionDependency(project, config.distribution, distro, VersionProperties.elasticsearch), +, +        for (int i = 0; i < config.numNodes; ++i) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +        systemProperty('tests.rest.cluster', "${-> nodes[0].httpUri()}"), +++ b/buildSrc/version.properties, +lucene            = 6.2.0, +randomizedrunner  = 2.3.2, +++ b/client/rest/src/test/java/org/elasticsearch/client/RequestLoggerTests.java, +import com.carrotsearch.randomizedtesting.generators.RandomInts;, +        int requestType = RandomInts.randomIntBetween(getRandom(), 0, 7);, +            switch(RandomInts.randomIntBetween(getRandom(), 0, 3)) {, +        int statusCode = RandomInts.randomIntBetween(getRandom(), 200, 599);, +        int numHeaders = RandomInts.randomIntBetween(getRandom(), 0, 3);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +            '\\{lucene_version\\}' : VersionProperties.lucene,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.echo("==> [${new Date()}] checking health: http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}"), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}",, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        Configuration distro = project.configurations.create(distroConfigName), +        configureDistributionDependency(project, config.distribution, distro, VersionProperties.elasticsearch), +, +        for (int i = 0; i < config.numNodes; ++i) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +        systemProperty('tests.rest.cluster', "${-> nodes[0].httpUri()}"), +++ b/buildSrc/version.properties, +lucene            = 6.2.0, +randomizedrunner  = 2.3.2, +++ b/client/rest/src/test/java/org/elasticsearch/client/RequestLoggerTests.java, +import com.carrotsearch.randomizedtesting.generators.RandomInts;, +        int requestType = RandomInts.randomIntBetween(getRandom(), 0, 7);, +            switch(RandomInts.randomIntBetween(getRandom(), 0, 3)) {, +        int statusCode = RandomInts.randomIntBetween(getRandom(), 200, 599);, +        int numHeaders = RandomInts.randomIntBetween(getRandom(), 0, 3);, +++ b/client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsTests.java, +import com.carrotsearch.randomizedtesting.generators.RandomInts;, +        int numHosts = RandomInts.randomIntBetween(getRandom(), 2, 5);, +        int numIters = RandomInts.randomIntBetween(getRandom(), 1, 5);, +        int numIters = RandomInts.randomIntBetween(getRandom(), 1, 5);, +        int numIters = RandomInts.randomIntBetween(getRandom(), 2, 5);, +                int iters = RandomInts.randomIntBetween(getRandom(), 2, 10);, +        switch(RandomInts.randomIntBetween(getRandom(), 0, 3)) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +            '\\{lucene_version\\}' : VersionProperties.lucene,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.echo("==> [${new Date()}] checking health: http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}"), +        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}",, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy]