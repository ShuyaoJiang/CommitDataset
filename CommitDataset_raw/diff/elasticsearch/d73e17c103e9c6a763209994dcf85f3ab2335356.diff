[+++ b/core/src/main/java/org/elasticsearch/index/query/SpanNearQueryBuilder.java, +        if (clauses.size() == 1) {, +            Query query = clauses.get(0).toQuery(context);, +            assert query instanceof SpanQuery;, +            return query;, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/SpanNearQueryBuilder.java, +        if (clauses.size() == 1) {, +            Query query = clauses.get(0).toQuery(context);, +            assert query instanceof SpanQuery;, +            return query;, +        }, +++ b/core/src/test/java/org/elasticsearch/index/query/SpanNearQueryBuilderTests.java, +import org.apache.lucene.search.spans.SpanBoostQuery;, +import org.apache.lucene.search.spans.SpanTermQuery;, +import static org.hamcrest.CoreMatchers.either;, +        assertThat(query, either(instanceOf(SpanNearQuery.class)), +            .or(instanceOf(SpanTermQuery.class)), +            .or(instanceOf(SpanBoostQuery.class)), +            .or(instanceOf(MatchAllQueryBuilder.class)));, +        if (query instanceof SpanNearQuery) {, +        } else if (query instanceof SpanTermQuery || query instanceof SpanBoostQuery) {, +            assertThat(queryBuilder.clauses().size(), equalTo(1));, +            assertThat(query, equalTo(queryBuilder.clauses().get(0).toQuery(context.getQueryShardContext())));, +        }]