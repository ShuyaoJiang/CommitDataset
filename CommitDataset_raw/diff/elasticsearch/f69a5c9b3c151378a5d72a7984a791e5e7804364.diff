[+++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            nodes.forEach { otherNode ->, +                String unicastHost = otherNode.config.unicastTransportUri(otherNode, null, project.ant), +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            nodes.forEach { otherNode ->, +                String unicastHost = otherNode.config.unicastTransportUri(otherNode, null, project.ant), +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]WaitActiveShardCountIT.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]broadcast[/\\]node[/\\]TransportBroadcastByNodeActionTests.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]replication[/\\]BroadcastReplicationTests.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]single[/\\]instance[/\\]TransportInstanceSingleOperationActionTests.java" checks="LineLength" />, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            nodes.forEach { otherNode ->, +                String unicastHost = otherNode.config.unicastTransportUri(otherNode, null, project.ant), +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]WaitActiveShardCountIT.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]broadcast[/\\]node[/\\]TransportBroadcastByNodeActionTests.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]replication[/\\]BroadcastReplicationTests.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]single[/\\]instance[/\\]TransportInstanceSingleOperationActionTests.java" checks="LineLength" />, +++ b/client/benchmark/README.md, +1. Build `client-benchmark-noop-api-plugin` with `gradle :client:client-benchmark-noop-api-plugin:assemble`, +2. Install it on the target host with `bin/elasticsearch-plugin install file:///full/path/to/client-benchmark-noop-api-plugin.zip`, +gradlew -p client/benchmark run --args ' rest search localhost geonames {"query":{"match_phrase":{"name":"Sankt Georgen"}}} 500,1000,1100,1200', +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            nodes.forEach { otherNode ->, +                String unicastHost = otherNode.config.unicastTransportUri(otherNode, null, project.ant), +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]WaitActiveShardCountIT.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]broadcast[/\\]node[/\\]TransportBroadcastByNodeActionTests.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]replication[/\\]BroadcastReplicationTests.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]single[/\\]instance[/\\]TransportInstanceSingleOperationActionTests.java" checks="LineLength" />, +++ b/client/benchmark/README.md, +1. Build `client-benchmark-noop-api-plugin` with `gradle :client:client-benchmark-noop-api-plugin:assemble`, +2. Install it on the target host with `bin/elasticsearch-plugin install file:///full/path/to/client-benchmark-noop-api-plugin.zip`, +gradlew -p client/benchmark run --args ' rest search localhost geonames {"query":{"match_phrase":{"name":"Sankt Georgen"}}} 500,1000,1100,1200', +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityRequestConverters.java, +            .addPathPart(putUserRequest.getUsername()), +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            nodes.forEach { otherNode ->, +                String unicastHost = otherNode.config.unicastTransportUri(otherNode, null, project.ant), +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]WaitActiveShardCountIT.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]broadcast[/\\]node[/\\]TransportBroadcastByNodeActionTests.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]replication[/\\]BroadcastReplicationTests.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]single[/\\]instance[/\\]TransportInstanceSingleOperationActionTests.java" checks="LineLength" />, +++ b/client/benchmark/README.md, +1. Build `client-benchmark-noop-api-plugin` with `gradle :client:client-benchmark-noop-api-plugin:assemble`, +2. Install it on the target host with `bin/elasticsearch-plugin install file:///full/path/to/client-benchmark-noop-api-plugin.zip`, +gradlew -p client/benchmark run --args ' rest search localhost geonames {"query":{"match_phrase":{"name":"Sankt Georgen"}}} 500,1000,1100,1200', +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityRequestConverters.java, +            .addPathPart(putUserRequest.getUsername()), +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/security/PutUserRequest.java, +import java.util.Collections;, +import java.util.List;, +import java.util.Map;, +    private final String username;, +    private final List<String> roles;, +    private final String fullName;, +    private final String email;, +    private final Map<String, Object> metadata;, +    private final char[] password;, +     * @param username the username of the user to be created or updated, +     * @param roles the roles that this user is assigned, +     * @param fullName the full name of the user that may be used for display purposes, +     * @param email the email address of the user, +     * @param metadata a map of additional user attributes that may be used in templating roles, +    public PutUserRequest(String username, char[] password, List<String> roles, String fullName, String email, boolean enabled,, +                          Map<String, Object> metadata, RefreshPolicy refreshPolicy) {, +        this.username = Objects.requireNonNull(username, "username is required");, +        this.roles = Collections.unmodifiableList(Objects.requireNonNull(roles, "roles must be specified"));, +        this.fullName = fullName;, +        this.email = email;, +        this.metadata = metadata == null ? Collections.emptyMap() : Collections.unmodifiableMap(metadata);]