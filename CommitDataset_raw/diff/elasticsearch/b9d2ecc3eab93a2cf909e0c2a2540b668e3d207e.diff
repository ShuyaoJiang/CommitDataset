[+++ b/build.gradle, +++ b/build.gradle, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]query[/\\]HasChildQueryBuilderTests.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]aggregations[/\\]bucket[/\\]ChildrenIT.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]child[/\\]ChildQuerySearchIT.java" checks="LineLength" />, +++ b/build.gradle, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]query[/\\]HasChildQueryBuilderTests.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]aggregations[/\\]bucket[/\\]ChildrenIT.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]child[/\\]ChildQuerySearchIT.java" checks="LineLength" />, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +import static org.elasticsearch.index.query.QueryBuilders.hasChildQuery;, +import static org.elasticsearch.index.query.QueryBuilders.hasParentQuery;, +    public void testHasChild() {, +        // tag::has_child, +        hasChildQuery(, +                "blog_tag",                                          // <1>, +                termQuery("tag","something"),                        // <2>, +                ScoreMode.None);                                     // <3>, +        // end::has_child, +    }, +, +    public void testHasParent() {, +        // tag::has_parent, +        hasParentQuery(, +            "blog",                                                  // <1>, +            termQuery("tag","something"),                            // <2>, +            false);                                                  // <3>, +        // end::has_parent, +    }, +, +++ b/build.gradle, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]query[/\\]HasChildQueryBuilderTests.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]aggregations[/\\]bucket[/\\]ChildrenIT.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]child[/\\]ChildQuerySearchIT.java" checks="LineLength" />, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +import static org.elasticsearch.index.query.QueryBuilders.hasChildQuery;, +import static org.elasticsearch.index.query.QueryBuilders.hasParentQuery;, +    public void testHasChild() {, +        // tag::has_child, +        hasChildQuery(, +                "blog_tag",                                          // <1>, +                termQuery("tag","something"),                        // <2>, +                ScoreMode.None);                                     // <3>, +        // end::has_child, +    }, +, +    public void testHasParent() {, +        // tag::has_parent, +        hasParentQuery(, +            "blog",                                                  // <1>, +            termQuery("tag","something"),                            // <2>, +            false);                                                  // <3>, +        // end::has_parent, +    }, +, +++ b/client/transport/build.gradle, +++ b/build.gradle, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]query[/\\]HasChildQueryBuilderTests.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]aggregations[/\\]bucket[/\\]ChildrenIT.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]child[/\\]ChildQuerySearchIT.java" checks="LineLength" />, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +import static org.elasticsearch.index.query.QueryBuilders.hasChildQuery;, +import static org.elasticsearch.index.query.QueryBuilders.hasParentQuery;, +    public void testHasChild() {, +        // tag::has_child, +        hasChildQuery(, +                "blog_tag",                                          // <1>, +                termQuery("tag","something"),                        // <2>, +                ScoreMode.None);                                     // <3>, +        // end::has_child, +    }, +, +    public void testHasParent() {, +        // tag::has_parent, +        hasParentQuery(, +            "blog",                                                  // <1>, +            termQuery("tag","something"),                            // <2>, +            false);                                                  // <3>, +        // end::has_parent, +    }, +, +++ b/client/transport/build.gradle, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesResponse.java, +        List<RepositoryMetaData> repositoryListBuilder = new ArrayList<>();, +++ b/build.gradle, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]query[/\\]HasChildQueryBuilderTests.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]aggregations[/\\]bucket[/\\]ChildrenIT.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]child[/\\]ChildQuerySearchIT.java" checks="LineLength" />, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +import static org.elasticsearch.index.query.QueryBuilders.hasChildQuery;, +import static org.elasticsearch.index.query.QueryBuilders.hasParentQuery;, +    public void testHasChild() {, +        // tag::has_child, +        hasChildQuery(, +                "blog_tag",                                          // <1>]