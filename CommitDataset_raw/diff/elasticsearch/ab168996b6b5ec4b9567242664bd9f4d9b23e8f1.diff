[+++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +import java.util.HashMap;, +            case DateFieldMapper.CONTENT_TYPE:, +                break;, +            case BooleanFieldMapper.CONTENT_TYPE:, +                builder = context.root().findTemplateBuilder(context, currentFieldName, "boolean");, +        if (builder == null) {, +            Mapper.TypeParser.ParserContext parserContext = context.docMapperParser().parserContext(currentFieldName);, +            Mapper.TypeParser typeParser = parserContext.typeParser(fieldType.typeName());, +            if (typeParser == null) {, +                throw new MapperParsingException("Cannot generate dynamic mappings of type [" + fieldType.typeName(), +                    + "] for [" + currentFieldName + "]");, +            }, +            builder = typeParser.parse(currentFieldName, new HashMap<>(), parserContext);, +        }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +import java.util.HashMap;, +            case DateFieldMapper.CONTENT_TYPE:, +                break;, +            case BooleanFieldMapper.CONTENT_TYPE:, +                builder = context.root().findTemplateBuilder(context, currentFieldName, "boolean");, +        if (builder == null) {, +            Mapper.TypeParser.ParserContext parserContext = context.docMapperParser().parserContext(currentFieldName);, +            Mapper.TypeParser typeParser = parserContext.typeParser(fieldType.typeName());, +            if (typeParser == null) {, +                throw new MapperParsingException("Cannot generate dynamic mappings of type [" + fieldType.typeName(), +                    + "] for [" + currentFieldName + "]");, +            }, +            builder = typeParser.parse(currentFieldName, new HashMap<>(), parserContext);, +        }, +++ b/core/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java, +import org.elasticsearch.index.mapper.core.BooleanFieldMapper;, +import org.elasticsearch.index.mapper.core.BooleanFieldMapper.BooleanFieldType;, +                "my_field6", "type=date,doc_values=false",, +                "my_field7", "type=boolean,doc_values=false");, +                    .field("my_field7", true), +        Mapper myField7Mapper = null;, +            case "my_field7":, +                myField7Mapper = m;, +                break;, +        assertNotNull(myField7Mapper);, +        assertTrue(myField7Mapper instanceof BooleanFieldMapper);, +        assertFalse(((BooleanFieldType) ((BooleanFieldMapper) myField7Mapper).fieldType()).hasDocValues());, +]