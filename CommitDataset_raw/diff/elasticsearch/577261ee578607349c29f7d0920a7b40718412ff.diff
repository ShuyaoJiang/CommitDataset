[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ml/job/results/AnomalyRecord.java, +    public static final ParseField MULTI_BUCKET_IMPACT = new ParseField("multi_bucket_impact");, +        PARSER.declareDouble(AnomalyRecord::setMultiBucketImpact, MULTI_BUCKET_IMPACT);, +    private Double multiBucketImpact;, +        if (multiBucketImpact != null) {, +            builder.field(MULTI_BUCKET_IMPACT.getPreferredName(), multiBucketImpact);, +        }, +    public double getMultiBucketImpact() {, +        return multiBucketImpact;, +    }, +, +    void setMultiBucketImpact(double value) {, +        multiBucketImpact = value;, +    }, +, +        return Objects.hash(jobId, detectorIndex, bucketSpan, probability, multiBucketImpact, recordScore,, +            && Objects.equals(this.multiBucketImpact, that.multiBucketImpact), +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ml/job/results/AnomalyRecord.java, +    public static final ParseField MULTI_BUCKET_IMPACT = new ParseField("multi_bucket_impact");, +        PARSER.declareDouble(AnomalyRecord::setMultiBucketImpact, MULTI_BUCKET_IMPACT);, +    private Double multiBucketImpact;, +        if (multiBucketImpact != null) {, +            builder.field(MULTI_BUCKET_IMPACT.getPreferredName(), multiBucketImpact);, +        }, +    public double getMultiBucketImpact() {, +        return multiBucketImpact;, +    }, +, +    void setMultiBucketImpact(double value) {, +        multiBucketImpact = value;, +    }, +, +        return Objects.hash(jobId, detectorIndex, bucketSpan, probability, multiBucketImpact, recordScore,, +            && Objects.equals(this.multiBucketImpact, that.multiBucketImpact), +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/ml/job/results/AnomalyRecordTests.java, +        if (randomBoolean()) {, +            anomalyRecord.setMultiBucketImpact(randomDouble());, +        }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ml/job/results/AnomalyRecord.java, +    public static final ParseField MULTI_BUCKET_IMPACT = new ParseField("multi_bucket_impact");, +        PARSER.declareDouble(AnomalyRecord::setMultiBucketImpact, MULTI_BUCKET_IMPACT);, +    private Double multiBucketImpact;, +        if (multiBucketImpact != null) {, +            builder.field(MULTI_BUCKET_IMPACT.getPreferredName(), multiBucketImpact);, +        }, +    public double getMultiBucketImpact() {, +        return multiBucketImpact;, +    }, +, +    void setMultiBucketImpact(double value) {, +        multiBucketImpact = value;, +    }, +, +        return Objects.hash(jobId, detectorIndex, bucketSpan, probability, multiBucketImpact, recordScore,, +            && Objects.equals(this.multiBucketImpact, that.multiBucketImpact), +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/ml/job/results/AnomalyRecordTests.java, +        if (randomBoolean()) {, +            anomalyRecord.setMultiBucketImpact(randomDouble());, +        }, +++ b/docs/reference/ml/apis/resultsresource.asciidoc, +`multi_bucket_impact`::, +  (number) an indication of how strongly an anomaly is multi bucket or single bucket., +  The value is on a scale of -5 to +5 where -5 means the anomaly is purely single , +  bucket and +5 means the anomaly is purely multi bucket., +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ml/job/results/AnomalyRecord.java, +    public static final ParseField MULTI_BUCKET_IMPACT = new ParseField("multi_bucket_impact");, +        PARSER.declareDouble(AnomalyRecord::setMultiBucketImpact, MULTI_BUCKET_IMPACT);, +    private Double multiBucketImpact;, +        if (multiBucketImpact != null) {, +            builder.field(MULTI_BUCKET_IMPACT.getPreferredName(), multiBucketImpact);, +        }, +    public double getMultiBucketImpact() {, +        return multiBucketImpact;, +    }, +, +    void setMultiBucketImpact(double value) {, +        multiBucketImpact = value;, +    }, +, +        return Objects.hash(jobId, detectorIndex, bucketSpan, probability, multiBucketImpact, recordScore,, +            && Objects.equals(this.multiBucketImpact, that.multiBucketImpact), +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/ml/job/results/AnomalyRecordTests.java, +        if (randomBoolean()) {, +            anomalyRecord.setMultiBucketImpact(randomDouble());, +        }, +++ b/docs/reference/ml/apis/resultsresource.asciidoc, +`multi_bucket_impact`::, +  (number) an indication of how strongly an anomaly is multi bucket or single bucket., +  The value is on a scale of -5 to +5 where -5 means the anomaly is purely single , +  bucket and +5 means the anomaly is purely multi bucket., +, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/persistence/ElasticsearchMappings.java, +        .startObject(AnomalyRecord.MULTI_BUCKET_IMPACT.getPreferredName()), +            .field(TYPE, DOUBLE), +        .endObject(), +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ml/job/results/AnomalyRecord.java, +    public static final ParseField MULTI_BUCKET_IMPACT = new ParseField("multi_bucket_impact");, +        PARSER.declareDouble(AnomalyRecord::setMultiBucketImpact, MULTI_BUCKET_IMPACT);, +    private Double multiBucketImpact;]