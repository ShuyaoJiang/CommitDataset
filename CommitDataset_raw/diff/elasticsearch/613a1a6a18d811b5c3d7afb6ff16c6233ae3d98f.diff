[+++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +import org.elasticsearch.common.bytes.BytesArray;, +import org.elasticsearch.search.SearchHitField;, +import org.elasticsearch.search.SearchHits;, +        assertStoredBinaryFields(indexName, version);, +    /**, +     * Make sure we can load stored binary fields., +     */, +    void assertStoredBinaryFields(String indexName, Version version) throws Exception {, +        SearchRequestBuilder builder = client().prepareSearch(indexName);, +        builder.setQuery(QueryBuilders.matchAllQuery());, +        builder.setSize(100);, +        builder.addStoredField("binary");, +        SearchHits hits = builder.get().getHits();, +        assertEquals(100, hits.hits().length);, +        for(SearchHit hit : hits) {, +            SearchHitField field = hit.field("binary");, +            assertNotNull(field);, +            Object value = field.value();, +            assertTrue(value instanceof BytesArray);, +            assertEquals(16, ((BytesArray) value).length());, +        }, +    }, +, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +import org.elasticsearch.common.bytes.BytesArray;, +import org.elasticsearch.search.SearchHitField;, +import org.elasticsearch.search.SearchHits;, +        assertStoredBinaryFields(indexName, version);, +    /**, +     * Make sure we can load stored binary fields., +     */, +    void assertStoredBinaryFields(String indexName, Version version) throws Exception {, +        SearchRequestBuilder builder = client().prepareSearch(indexName);, +        builder.setQuery(QueryBuilders.matchAllQuery());, +        builder.setSize(100);, +        builder.addStoredField("binary");, +        SearchHits hits = builder.get().getHits();, +        assertEquals(100, hits.hits().length);, +        for(SearchHit hit : hits) {, +            SearchHitField field = hit.field("binary");, +            assertNotNull(field);, +            Object value = field.value();, +            assertTrue(value instanceof BytesArray);, +            assertEquals(16, ((BytesArray) value).length());, +        }, +    }, +, +++ b/core/src/test/resources/indices/bwc/index-5.0.0.zip, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +import org.elasticsearch.common.bytes.BytesArray;, +import org.elasticsearch.search.SearchHitField;, +import org.elasticsearch.search.SearchHits;, +        assertStoredBinaryFields(indexName, version);, +    /**, +     * Make sure we can load stored binary fields., +     */, +    void assertStoredBinaryFields(String indexName, Version version) throws Exception {, +        SearchRequestBuilder builder = client().prepareSearch(indexName);, +        builder.setQuery(QueryBuilders.matchAllQuery());, +        builder.setSize(100);, +        builder.addStoredField("binary");, +        SearchHits hits = builder.get().getHits();, +        assertEquals(100, hits.hits().length);, +        for(SearchHit hit : hits) {, +            SearchHitField field = hit.field("binary");, +            assertNotNull(field);, +            Object value = field.value();, +            assertTrue(value instanceof BytesArray);, +            assertEquals(16, ((BytesArray) value).length());, +        }, +    }, +, +++ b/core/src/test/resources/indices/bwc/index-5.0.0.zip, +++ b/core/src/test/resources/indices/bwc/index-5.0.1.zip, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +import org.elasticsearch.common.bytes.BytesArray;, +import org.elasticsearch.search.SearchHitField;, +import org.elasticsearch.search.SearchHits;, +        assertStoredBinaryFields(indexName, version);, +    /**, +     * Make sure we can load stored binary fields., +     */, +    void assertStoredBinaryFields(String indexName, Version version) throws Exception {, +        SearchRequestBuilder builder = client().prepareSearch(indexName);, +        builder.setQuery(QueryBuilders.matchAllQuery());, +        builder.setSize(100);, +        builder.addStoredField("binary");, +        SearchHits hits = builder.get().getHits();, +        assertEquals(100, hits.hits().length);, +        for(SearchHit hit : hits) {, +            SearchHitField field = hit.field("binary");, +            assertNotNull(field);, +            Object value = field.value();, +            assertTrue(value instanceof BytesArray);, +            assertEquals(16, ((BytesArray) value).length());, +        }, +    }, +, +++ b/core/src/test/resources/indices/bwc/index-5.0.0.zip]