[+++ b/src/test/java/org/elasticsearch/recovery/RecoveryWhileUnderLoadTests.java, +import org.elasticsearch.common.unit.TimeValue;, +                ensureGreen(TimeValue.timeValueMinutes(5));, +            ensureGreen(TimeValue.timeValueMinutes(5));, +++ b/src/test/java/org/elasticsearch/recovery/RecoveryWhileUnderLoadTests.java, +import org.elasticsearch.common.unit.TimeValue;, +                ensureGreen(TimeValue.timeValueMinutes(5));, +            ensureGreen(TimeValue.timeValueMinutes(5));, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java, +        return ensureGreen(TimeValue.timeValueSeconds(30), indices);, +    }, +, +    /**, +     * Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations., +     * It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating, +     * are now allocated and started., +     *, +     * @param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest}, +     */, +    public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {, +                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID).waitForRelocatingShards(0)).actionGet();]