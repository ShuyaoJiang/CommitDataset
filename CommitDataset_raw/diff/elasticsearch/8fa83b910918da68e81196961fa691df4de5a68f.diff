[+++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/AgentService.java, +//                    long start = System.nanoTime(); //TODO remove, +                                    logger.trace("bulk [{}] - adding collected docs from [{}] collector", bulk, collector.name());, +                                } else {, +                                    logger.trace("bulk [{}] - skipping collected docs from [{}] collector", bulk, collector.name());, +//                        long delta = System.nanoTime() - start; TODO remove, +//                        logger.trace("closing bulk [{}] - collection took [{}] seconds", bulk, TimeValue.timeValueNanos(delta).format(PeriodType.seconds()));, +                    logger.trace("interrupted");, +                    logger.error("background thread had an uncaught exception", t);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/AgentService.java, +//                    long start = System.nanoTime(); //TODO remove, +                                    logger.trace("bulk [{}] - adding collected docs from [{}] collector", bulk, collector.name());, +                                } else {, +                                    logger.trace("bulk [{}] - skipping collected docs from [{}] collector", bulk, collector.name());, +//                        long delta = System.nanoTime() - start; TODO remove, +//                        logger.trace("closing bulk [{}] - collection took [{}] seconds", bulk, TimeValue.timeValueNanos(delta).format(PeriodType.seconds()));, +                    logger.trace("interrupted");, +                    logger.error("background thread had an uncaught exception", t);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/AbstractCollector.java, +                logger.trace("collector [{}] - collecting data...", name());, +            logger.error("collector [{}] - failed collecting data", e, name());, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/AgentService.java, +//                    long start = System.nanoTime(); //TODO remove, +                                    logger.trace("bulk [{}] - adding collected docs from [{}] collector", bulk, collector.name());, +                                } else {, +                                    logger.trace("bulk [{}] - skipping collected docs from [{}] collector", bulk, collector.name());, +//                        long delta = System.nanoTime() - start; TODO remove, +//                        logger.trace("closing bulk [{}] - collection took [{}] seconds", bulk, TimeValue.timeValueNanos(delta).format(PeriodType.seconds()));, +                    logger.trace("interrupted");, +                    logger.error("background thread had an uncaught exception", t);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/AbstractCollector.java, +                logger.trace("collector [{}] - collecting data...", name());, +            logger.error("collector [{}] - failed collecting data", e, name());, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/ExportBulk.java, +    protected final String name;, +    @Override, +    public String toString() {, +        return name;, +    }, +, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/AgentService.java, +//                    long start = System.nanoTime(); //TODO remove, +                                    logger.trace("bulk [{}] - adding collected docs from [{}] collector", bulk, collector.name());, +                                } else {, +                                    logger.trace("bulk [{}] - skipping collected docs from [{}] collector", bulk, collector.name());, +//                        long delta = System.nanoTime() - start; TODO remove, +//                        logger.trace("closing bulk [{}] - collection took [{}] seconds", bulk, TimeValue.timeValueNanos(delta).format(PeriodType.seconds()));, +                    logger.trace("interrupted");, +                    logger.error("background thread had an uncaught exception", t);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/AbstractCollector.java, +                logger.trace("collector [{}] - collecting data...", name());, +            logger.error("collector [{}] - failed collecting data", e, name());, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/ExportBulk.java, +    protected final String name;, +    @Override, +    public String toString() {, +        return name;, +    }, +, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/Exporter.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.common.unit.TimeValue;, +    public static final String BULK_TIMEOUT_SETTING = "bulk.timeout";, +, +    public static final String INDEX_TEMPLATE_NAME = "marvel";, +    protected final @Nullable TimeValue bulkTimeout;, +        bulkTimeout = config.settings().getAsTime(BULK_TIMEOUT_SETTING, null);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/AgentService.java, +//                    long start = System.nanoTime(); //TODO remove, +                                    logger.trace("bulk [{}] - adding collected docs from [{}] collector", bulk, collector.name());, +                                } else {, +                                    logger.trace("bulk [{}] - skipping collected docs from [{}] collector", bulk, collector.name());, +//                        long delta = System.nanoTime() - start; TODO remove, +//                        logger.trace("closing bulk [{}] - collection took [{}] seconds", bulk, TimeValue.timeValueNanos(delta).format(PeriodType.seconds()));, +                    logger.trace("interrupted");, +                    logger.error("background thread had an uncaught exception", t);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/AbstractCollector.java, +                logger.trace("collector [{}] - collecting data...", name());, +            logger.error("collector [{}] - failed collecting data", e, name());, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/ExportBulk.java, +    protected final String name;, +    @Override, +    public String toString() {, +        return name;, +    }, +, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/Exporter.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.common.unit.TimeValue;, +    public static final String BULK_TIMEOUT_SETTING = "bulk.timeout";, +, +    public static final String INDEX_TEMPLATE_NAME = "marvel";, +    protected final @Nullable TimeValue bulkTimeout;, +        bulkTimeout = config.settings().getAsTime(BULK_TIMEOUT_SETTING, null);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/http/HttpExporter.java, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/AgentService.java, +//                    long start = System.nanoTime(); //TODO remove, +                                    logger.trace("bulk [{}] - adding collected docs from [{}] collector", bulk, collector.name());, +                                } else {, +                                    logger.trace("bulk [{}] - skipping collected docs from [{}] collector", bulk, collector.name());]